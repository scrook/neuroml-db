<style>
  .properties { }
  #model-properties-container { position: relative; }
  #property-table { height: 620px; overflow:auto; }
  #complexity-plots { float: left; width: 300px; height: 620px; margin-right: 15px; }
  #complexity-plot-fixed { position: absolute; left: 0; top: 0; }
  #complexity-plot-cvode { position: absolute; left: 0; top: 310px; }
  .table-label { font-weight: bold; }
</style>
<script>
    function init_properties() {

        var dt_error = [
          <% @complexity[:dt_sensitivity].each do |row| %>
            {x: <%=row["DT"]%>, y: <%= row["Error"]%>},
          <% end %>
        ];

        var dt_steps = [
            <% @complexity[:dt_sensitivity].each do |row| %>
            {x: <%=row["DT"]%>, y: <%= row["Steps"]%>},
            <% end %>
        ];

        var cvode_spike_steps = [
            <% @complexity[:cvode_spikes_vs_steps].each do |row| %>
            {x: <%=row["Spikes"]%>, y: <%= row["Steps"]%>},
            <% end %>
        ];

        var error_min = Enumerable.from(dt_error).select(function(w) { return w["y"]}).min()
        var error_max = Enumerable.from(dt_error).select(function(w) { return w["y"]}).max()

        var steps_min = Enumerable.from(dt_steps).select(function(w) { return w["y"]}).min()
        var steps_max = Enumerable.from(dt_steps).select(function(w) { return w["y"]}).max()

        var dt_error = Enumerable
            .from(dt_error)
            .select(function(w) { return {x: w["x"], y: (w["y"]-error_min)/(error_max-error_min) } })
            .toArray()

        var dt_steps = Enumerable
            .from(dt_steps)
            .select(function(w) { return {x: w["x"], y: (w["y"]-steps_min)/(steps_max-steps_min) } })
            .toArray()

        var ctxFixed = document.getElementById("chart-fixed-dt").getContext('2d');
        var ctxCVODE = document.getElementById("chart-cvode").getContext('2d');

        window.chartFixed = new Chart(ctxFixed, {
            type: 'scatter',
            data: {
                datasets: [
                    { data: dt_error, backgroundColor: 'rgba(255, 0, 0, 0.5)'},
                    { data: dt_steps, backgroundColor: 'rgba(0, 0, 255, 0.5)'},
                ]
            },
            options: {
                animation: { duration: 0 },
                responsive: false,
                title: { display: false },
                hover: { mode: 'nearest', animationDuration: 0 },
                legend: { display: false, },
                scales: {
                    xAxes: [{
                        type: 'linear',
                        position: 'bottom',
                        scaleLabel: {
                            display: true,
                            labelString: "Time step (ms)"
                        },
                        ticks: { maxRotation: 0, maxTicksLimit: 11  }
                    }],
                    yAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: "Error, Steps (Normd.)"
                        }
                    }]
                }
            }
        });

        window.chartCVODE = new Chart(ctxCVODE, {
            type: 'scatter',
            data: {
                datasets: [
                    { label: 'Spikes vs Steps', data: cvode_spike_steps, backgroundColor: 'rgba(255, 0, 0, 0.5)' },
                ]
            },
            options: {
                animation: { duration: 0 },
                responsive: false,
                title: { display: false },
                hover: { mode: 'nearest', animationDuration: 0 },
                legend: { display: false, },
                scales: {
                    xAxes: [{
                        type: 'linear',
                        position: 'bottom',
                        scaleLabel: { display: true, labelString: "Number of Spikes"},
                        ticks: { maxRotation: 0, maxTicksLimit: 11  }
                    }],
                    yAxes: [{
                        scaleLabel: {display: true, labelString: "CVODE Steps"}
                    }]
                }
            }
        });
    }
</script>
<tr class="properties">
  <td class="keyword" style="vertical-align: top;">Model Properties:</td>
  <td class="description">
    <div id="model-properties-container">
      <div id="complexity-plots">
        <div id="complexity-plot-fixed"><canvas id="chart-fixed-dt" width="300" height="300"></canvas></div>
        <div id="complexity-plot-cvode"><canvas id="chart-cvode" width="300" height="300"></canvas></div>
      </div>
      <div id="property-table">
        <div class="table-label">Membrane:</div>
        <table>
          <thead>
          <tr>
            <td>Property</td>
            <td>Value</td>
          </tr>
          </thead>
          <tbody>
          <tr>
            <td class="property-name">Is Passive</td>
            <td class="property-value"><%= @model["Is_Passive"] == 1 ? "Yes" : "No" %></td>
          </tr>
          <tr>
            <td class="property-name">Is Intrinsically Spiking</td>
            <td class="property-value"><%= @model["Is_Intrinsically_Spiking"] == 1 ? "Yes" : "No" %></td>
          </tr>
          <tr>
            <td class="property-name">Resting Voltage</td>
            <td class="property-value"><%= display_field(@model, "Resting_Voltage", "%.2f", "N/A") %> mV</td>
          </tr>
          <tr>
            <td class="property-name">Rheobase Current Interval</td>
            <td class="property-value">(<%= display_field(@model, "Rheobase_Low", "%.4f", "N/A") %>, <%= display_field(@model, "Rheobase_High", "%.4f", "N/A") %>] nA</td>
          </tr>
          <tr>
            <td class="property-name">Threshold Current Interval</td>
            <td class="property-value">(<%= display_field(@model, "Threshold_Current_Low", "%.4f", "N/A") %>, <%= display_field(@model, "Threshold_Current_High", "%.4f", "N/A") %>] nA</td>
          </tr>
          <tr>
            <td class="property-name">Bias Current (to <%= display_field(@model, "Bias_Voltage", "%.2f", "N/A") %> mV)</td>
            <td class="property-value"><%= display_field(@model, "Bias_Current", "%.4f", "N/A") %> nA</td>
          </tr>
          <tr>
            <td class="property-name">Testing Temperature</td>
            <td class="property-value"><%= @publication["Temperature"] != nil ? @publication["Temperature"] : "36 (default)" %> &#176;C</td>
          </tr>
          </tbody>
        </table>
        <div class="table-label">Complexity:</div>
        <table>
          <thead>
          <tr>
            <td>Property</td>
            <td>Value</td>
          </tr>
          </thead>
          <tbody>
          <tr>
            <td class="property-name">Sections</td>
            <td class="property-value"><%= display_field(@model, "Sections", "%d", "N/A") %></td>
          </tr>
          <tr>
            <td class="property-name">Compartments</td>
            <td class="property-value"><%= display_field(@model, "Compartments", "%d", "N/A") %></td>
          </tr>
          <tr>
            <td class="property-name">State Equations</td>
            <td class="property-value"><%= display_field(@model, "Equations", "%d", "N/A") %></td>
          </tr>
          <tr>
            <td class="property-name">Maximum Stable Time Step</td>
            <td class="property-value"><%= display_field(@model, "Max_Stable_DT", "%s", "N/A") %> ms</td>
          </tr>
          <tr>
            <td class="property-name">Maximum Stable Time Step Error</td>
            <td class="property-value"><%= display_field(@model, "Max_Stable_DT_Error", '%.2f', "N/A") %> %</td>
          </tr>
          <tr>
            <td class="property-name">Benchmark Run-time @ Max. Stable Step</td>
            <td class="property-value"><%= display_field(@model, "Max_Stable_DT_Benchmark_RunTime_HH", "%.2f", "N/A") %> HH</td>
          </tr>
          <tr>
            <td class="property-name">Run-time-vs-Error Optimal Time Step</td>
            <td class="property-value"><%= display_field(@model, "Optimal_DT", "%.5f", "N/A") %> ms</td>
          </tr>
          <tr>
            <td class="property-name">Run-time-vs-Error Optimal Time Step Error</td>
            <td class="property-value"><%= display_field(@model, "Optimal_DT_Error", "%.2f", "N/A") %> %</td>
          </tr>
          <tr>
            <td class="property-name">Benchmark Run-time @ Optimal Time Step</td>
            <td class="property-value"><%= display_field(@model, "Optimal_DT_Benchmark_RunTime_HH", "%.2f", "N/A") %> HH</td>
          </tr>
          <tr>
            <td class="property-name">CVODE Steady State Step Frequency</td>
            <td class="property-value"><%= display_field(@model, "CVODE_baseline_step_frequency", "%d", "N/A") %> steps/sim. sec.</td>
          </tr>
          <tr>
            <td class="property-name">CVODE Steps Per Spike</td>
            <td class="property-value"><%= display_field(@model, "CVODE_steps_per_spike", "%d", "N/A") %> steps/spike</td>
          </tr>
          <tr>
            <td class="property-name">CVODE Benchmark Run-time @ 10 Spikes/s</td>
            <td class="property-value"><%= display_field(@model, "CVODE_Benchmark_RunTime_HH", "%.2f", "N/A") %> HH</td>
          </tr>
          <tr>
            <td class="property-name">Stability Interval</td>
            <td class="property-value">[<%= display_field(@model, "Stability_Range_Low_Corr", "%s", "N/A") %>, <%= display_field(@model, "Stability_Range_High_Corr", "%s", "N/A") %>] <%= @type == "Cell" ? "nA" : "mV" %></td>
          </tr>
          </tbody>
        </table>
      </div>
    </div>
  </td>
</tr>
<script>
    init_properties()
</script>