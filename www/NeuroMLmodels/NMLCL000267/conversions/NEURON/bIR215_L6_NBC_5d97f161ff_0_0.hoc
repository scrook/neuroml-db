// Cell: bIR215_L6_NBC_5d97f161ff_0_0
/*
{
  "id" : "bIR215_L6_NBC_5d97f161ff_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.69096, -9.75392, 0.0, 3.54463", "1.52222, -8.84351, 0.0, 6.43815", "1.35347, -7.93311, 0.0, 8.80214", "1.18473, -7.0227, 0.0, 10.0004", "1.01599, -6.11229, 0.0, 10.9716", "0.847242, -5.20188, 0.0, 11.7871", "0.678498, -4.29147, 0.0, 12.5324", "0.509755, -3.38107, 0.0, 13.2727", "0.341011, -2.47066, 0.0, 13.4566", "0.172268, -1.56025, 0.0, 13.5676", "0.00352426, -0.649843, 0.0, 13.7469", "-0.165219, 0.260565, 0.0, 13.8983", "-0.333963, 1.17097, 0.0, 14.0", "-0.502706, 2.08138, 0.0, 13.9192", "-0.67145, 2.99179, 0.0, 13.4728", "-0.840193, 3.9022, 0.0, 12.9681", "-1.00894, 4.8126, 0.0, 12.2669", "-1.17768, 5.72301, 0.0, 11.0106", "-1.34642, 6.63342, 0.0, 9.31796", "-1.51517, 7.54383, 0.0, 7.37652", "-1.68391, 8.45424, 0.0, 4.20409" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.62975, 6.75062, -1.86, 3.64", "-2.24342, 8.6498, -1.86, 3.64", "-3.4876, 12.5003, -1.86, 3.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.38975, -6.72988, 8.54, 2.73", "-1.97045, -8.53414, 8.54, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.41975, 1.28812, -4.58, 0.68", "-4.47217, -0.16737, -5.67596, 0.68", "-4.51931, -1.16481, -6.4134, 0.45", "-4.70437, -3.14035, -7.80167, 0.45", "-4.9242, -5.33409, -9.37636, 0.45", "-5.00381, -6.03801, -9.90544, 1.14", "-5.29056, -8.63442, -12.0699, 0.23", "-5.37174, -9.55967, -12.9014, 0.23", "-5.56465, -10.9446, -14.2538, 0.91", "-6.00101, -12.6661, -16.251, 0.23", "-6.40434, -13.64, -17.586, 0.91", "-7.06263, -14.9906, -19.6152, 0.23", "-7.414, -15.5829, -20.6836, 0.23", "-7.90082, -16.3739, -22.2311, 0.68", "-8.73531, -17.7605, -25.0749, 0.23", "-9.08218, -18.4106, -26.3807, 0.23", "-9.36721, -19.1071, -27.6344, 1.14", "-9.91527, -21.0214, -30.6477, 0.23", "-10.0026, -21.747, -31.7662, 0.23", "-9.99196, -22.5789, -33.0445, 1.14", "-9.95199, -23.9874, -35.2637, 0.23", "-9.95988, -24.6729, -36.5657, 0.23", "-10.0184, -25.4248, -38.2105, 0.91", "-10.1369, -26.5017, -40.7243, 0.91", "-10.2943, -27.3316, -42.9653, 0.23", "-10.4958, -27.9571, -44.7665, 0.23", "-10.9029, -28.8898, -47.4818, 0.68", "-11.1934, -29.4774, -49.3562, 0.23", "-11.4163, -29.863, -50.6093, 1.14", "-12.0685, -30.9408, -53.6839, 0.23", "-12.233, -31.3144, -54.5615, 0.23", "-12.3494, -31.8116, -55.54, 0.23", "-14.3411, -37.2794, -63.7714, 0.23", "-16.0854, -43.1972, -71.7054, 0.23", "-16.9827, -47.1806, -80.9883, 0.23", "-18.8647, -49.5687, -90.7484, 0.23", "-21.6504, -54.0675, -99.4042, 0.23", "-27.1665, -57.6188, -107.25, 0.23", "-31.9933, -61.2092, -115.507, 0.23", "-36.8264, -63.8398, -124.151, 0.23", "-41.6697, -67.9523, -132.126, 0.23", "-45.0666, -71.331, -141.135, 0.23", "-48.6954, -76.2757, -149.207, 0.23", "-52.5992, -82.2167, -156.374, 0.23", "-56.7991, -87.407, -164.003, 0.23", "-60.483, -93.9745, -170.668, 0.23", "-63.7815, -101.761, -175.968, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.43025, -8.24988, 1.04, 1.14", "4.11216, -10.2268, -0.0403679, 1.14", "5.55791, -11.9262, -0.969045, 1.14", "6.95745, -13.5712, -1.86804, 1.14", "7.79728, -14.5583, -2.4075, 1.14", "8.57284, -15.47, -2.90568, 1.59", "9.49714, -16.5564, -3.4994, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.95025, 5.08812, -1.12, 1.59", "3.78693, 6.60756, -1.12, 1.59", "4.6686, 8.20868, -1.12, 1.59", "6.10747, 10.8217, -1.12, 1.59", "6.94127, 12.3359, -1.12, 1.59", "8.15661, 14.543, -1.12, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.68391, 8.45424, 0.0, 0.823122", "-4.41759, 23.203, 0.0, 0.823122", "-7.15127, 37.9518, 0.0, 0.823122" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-3.4876, 12.5003, -1.86, 0.68", "-5.12796, 12.9755, -1.39476, 0.68", "-6.27845, 13.3241, -1.09008, 0.68", "-7.85616, 13.8022, -0.672249, 1.14", "-8.76381, 14.0773, -0.431876, 0.23", "-10.8774, 14.7178, 0.127863, 0.23", "-12.0795, 15.0821, 0.446217, 0.91", "-14.108, 15.6493, 1.04914, 1.82" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-3.4876, 12.5003, -1.86, 1.82", "-0.606842, 15.1763, -2.73716, 1.82", "2.16897, 17.7718, -3.57137, 1.14", "4.27202, 19.7224, -4.16568, 0.68", "5.68292, 20.9943, -4.52141, 1.14", "9.39883, 24.2497, -5.46311, 0.45", "11.5034, 26.0405, -6.0167, 0.45", "12.8002, 27.0494, -6.35591, 1.59", "14.1443, 28.04, -6.69052, 1.59", "16.0964, 29.4588, -7.12797, 0.68", "18.3826, 31.0954, -7.63945, 0.68", "20.2163, 32.3474, -7.99991, 1.36", "22.041, 33.5409, -8.37085, 2.05", "23.7802, 34.6257, -8.76347, 0.91", "25.7251, 35.8522, -9.25485, 1.59" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.97045, -8.53414, 8.54, 0.68", "-5.25733, -9.03307, 8.34673, 0.68", "-8.88748, -9.54876, 8.15476, 0.68", "-11.1024, -9.84478, 7.99734, 0.23", "-12.6748, -10.0517, 7.87499, 0.91", "-14.7503, -10.3443, 7.71118, 0.91", "-16.7587, -10.6346, 7.52674, 0.23", "-18.3109, -10.8549, 7.35823, 0.23", "-20.8759, -11.2614, 7.06691, 0.68", "-22.7499, -11.6103, 6.82676, 0.68", "-24.6654, -11.9989, 6.52886, 0.23", "-26.6977, -12.4534, 6.17366, 0.68", "-28.1957, -12.82, 5.90015, 0.68", "-30.8873, -13.5388, 5.42318, 0.23", "-33.0234, -14.1572, 5.08254, 0.23", "-34.595, -14.6332, 4.84828, 0.68", "-35.7628, -14.9945, 4.74712, 0.68", "-37.4237, -15.5238, 4.70576, 0.68", "-39.5868, -16.2058, 4.74482, 0.23", "-41.4346, -16.7512, 4.86247, 0.45", "-43.1132, -17.2232, 5.06825, 0.45", "-46.2278, -18.0957, 5.53249, 0.23", "-47.3786, -18.4348, 5.75181, 1.14", "-48.5243, -18.7934, 6.00363, 1.14", "-50.9541, -19.5919, 6.58862, 0.23", "-52.7488, -20.2402, 7.02634, 0.23", "-54.3745, -20.8933, 7.39864, 0.91", "-57.219, -22.1257, 7.95364, 0.23", "-58.6003, -22.7479, 8.20783, 1.14", "-59.21, -23.0286, 8.30995, 1.14", "-61.1302, -23.9112, 8.57201, 0.23", "-62.8264, -24.645, 8.72237, 1.14", "-64.7296, -25.3937, 8.82616, 0.23", "-66.3898, -25.9557, 8.84891, 1.14", "-67.3823, -26.2609, 8.86485, 0.23", "-69.4127, -26.8372, 8.89968, 0.23", "-70.7765, -27.2097, 8.93275, 1.14", "-71.7911, -27.4717, 8.9761, 1.14", "-74.3771, -28.1727, 9.12275, 0.23", "-75.3948, -28.4754, 9.25936, 1.14", "-76.6991, -28.891, 9.51107, 1.14", "-78.2326, -29.3974, 9.87826, 0.23", "-79.7618, -29.9349, 10.3483, 0.91", "-81.4112, -30.5506, 10.9318, 0.23", "-84.2323, -31.7024, 11.9737, 0.23", "-84.8347, -31.9625, 12.1975, 1.14", "-86.5071, -32.7154, 12.7533, 1.14", "-88.6503, -33.7272, 13.3363, 0.23", "-89.7443, -34.2547, 13.5602, 0.23", "-92.5456, -35.5947, 14.0603, 0.68", "-94.4864, -36.5013, 14.324, 0.23", "-96.5168, -37.4597, 14.5949, 1.14", "-98.8994, -38.6103, 14.8909, 0.23", "-100.922, -39.6026, 15.1486, 0.91", "-103.48, -40.8716, 15.5534, 0.23", "-105.16, -41.7098, 15.8665, 0.23", "-105.751, -42.0112, 16.0053, 0.23", "-106.688, -42.4941, 16.2845, 0.23", "-108.468, -43.4223, 16.9709, 0.91", "-109.757, -44.1133, 17.53, 0.91", "-111.438, -44.9931, 18.2221, 0.23", "-113.047, -45.8135, 18.852, 1.14", "-114.076, -46.3025, 19.2702, 1.14", "-116.372, -47.3353, 20.1979, 0.23", "-117.589, -47.868, 20.6644, 0.68", "-120.151, -49.0319, 21.6215, 0.23", "-122.157, -50.01, 22.3689, 0.91", "-124.604, -51.3555, 23.209, 0.23", "-125.331, -51.8103, 23.439, 0.23", "-126.366, -52.5291, 23.7083, 0.23", "-127.826, -53.6724, 24.0311, 1.14", "-129.642, -55.2198, 24.3474, 0.23", "-130.986, -56.4464, 24.407, 0.68", "-133.062, -58.4117, 24.1663, 0.23", "-134.729, -59.9843, 23.8189, 0.91", "-136.638, -61.6785, 23.3364, 0.23", "-137.564, -62.4336, 23.1022, 0.91", "-139.872, -64.1535, 22.5093, 0.23", "-141.867, -65.482, 22.0751, 0.91", "-143.885, -66.7004, 21.7294, 0.23", "-145.8, -67.7385, 21.5176, 0.91", "-148.298, -68.878, 21.4484, 0.23", "-149.29, -69.2714, 21.4829, 0.91", "-150.941, -69.8043, 21.6602, 0.23", "-152.302, -70.1589, 21.8105, 0.91", "-152.809, -70.2634, 21.8223, 0.91", "-155.565, -70.7753, 21.7791, 0.23", "-156.432, -70.9075, 21.7627, 0.23", "-158.164, -71.1559, 21.7306, 0.91", "-160.274, -71.4435, 21.6938, 0.23", "-163.014, -71.796, 21.6532, 0.91", "-166.815, -72.2834, 21.6167, 0.23", "-169.133, -72.5832, 21.6226, 0.91" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-1.97045, -8.53414, 8.54, 0.91", "-0.599805, -10.2331, 9.64068, 0.91", "0.437894, -11.5195, 10.474, 0.91", "1.78432, -13.1885, 11.5552, 1.36" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "9.49714, -16.5564, -3.4994, 0.91", "8.85558, -20.4523, -5.24388, 0.91", "8.23999, -24.1906, -6.91775, 0.91", "7.787, -26.9414, -8.14948, 0.91" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "9.49714, -16.5564, -3.4994, 0.23", "11.5569, -17.5617, -3.41247, 0.23", "13.1747, -18.3462, -3.37241, 0.68", "15.3756, -19.4421, -3.34779, 0.68", "16.6999, -20.1588, -3.41714, 0.23", "17.4072, -20.556, -3.48938, 0.91", "18.4609, -21.1534, -3.62882, 0.91", "19.7936, -21.9229, -3.90961, 0.23", "20.9866, -22.5684, -4.24862, 0.91", "23.0253, -23.6293, -4.87623, 0.23", "23.8107, -24.0325, -5.13257, 0.91", "24.869, -24.5632, -5.47914, 0.23", "26.2186, -25.2445, -5.89693, 1.14", "27.2216, -25.7114, -6.14617, 1.14", "29.1974, -26.5735, -6.50254, 0.23", "30.1938, -26.9744, -6.61384, 0.91", "31.2459, -27.3939, -6.69585, 0.91", "33.3493, -28.1645, -6.81609, 0.23", "35.1214, -28.725, -6.85965, 0.68", "36.7248, -29.1445, -6.87896, 0.23", "37.5907, -29.2967, -6.88447, 0.91", "39.4975, -29.5137, -6.8912, 0.23", "41.4323, -29.6082, -6.92451, 0.91", "43.0852, -29.5935, -6.98611, 0.23", "44.217, -29.5557, -7.09136, 0.91", "46.4825, -29.4645, -7.36407, 0.23", "47.1756, -29.444, -7.46432, 1.14", "48.566, -29.426, -7.69958, 1.14", "50.3486, -29.5135, -8.03676, 0.23", "52.4214, -29.7473, -8.46039, 0.68", "53.2238, -29.8832, -8.59993, 1.36", "54.8017, -30.2567, -8.77906, 0.23", "55.5322, -30.4428, -8.82967, 0.45", "57.5286, -30.9667, -8.89053, 0.23", "58.8487, -31.3119, -8.85801, 0.91", "61.3677, -31.9719, -8.63486, 0.23", "63.7599, -32.5742, -8.37084, 1.14", "64.9407, -32.8589, -8.2192, 0.23", "65.9782, -33.0852, -8.07602, 0.91", "67.9862, -33.4868, -7.75656, 0.23", "69.176, -33.716, -7.56195, 1.14", "71.0836, -34.084, -7.28472, 0.23", "72.1911, -34.3236, -7.12662, 0.91", "72.5381, -34.4105, -7.07758, 0.91", "74.1735, -34.8436, -6.87758, 0.23", "75.2362, -35.1111, -6.79847, 0.91", "77.0402, -35.5819, -6.72549, 0.23", "78.3609, -35.9338, -6.67903, 0.91", "79.8526, -36.3252, -6.64389, 0.23", "80.9556, -36.6135, -6.63654, 0.68", "83.4041, -37.2858, -6.66273, 0.23", "84.9836, -37.7379, -6.65079, 0.23", "85.9895, -38.0146, -6.60997, 1.14", "86.6615, -38.1932, -6.5545, 1.14", "88.6455, -38.7327, -6.30513, 0.23", "89.8053, -39.0412, -6.12515, 1.14", "91.8078, -39.5463, -5.78483, 0.23", "94.7049, -40.2122, -5.21889, 0.91", "96.0532, -40.5182, -4.9604, 0.23", "97.546, -40.8489, -4.70885, 0.91", "99.7047, -41.2949, -4.40685, 0.23", "101.302, -41.6427, -4.2867, 0.91", "103.422, -42.2087, -4.2804, 0.23", "106.158, -43.1097, -4.47231, 0.23", "108.321, -43.9058, -4.74584, 0.45", "109.873, -44.5444, -5.00373, 0.23", "111.901, -45.4647, -5.43771, 0.23", "113.553, -46.2813, -5.914, 0.91", "114.63, -46.8581, -6.34749, 0.23", "115.41, -47.3066, -6.70917, 0.45", "115.991, -47.649, -6.99227, 0.23", "117.039, -48.2141, -7.49691, 0.91", "118.695, -48.9497, -8.28012, 0.23", "119.967, -49.4175, -8.89681, 0.91", "120.91, -49.7382, -9.35176, 0.23", "121.215, -49.8398, -9.49752, 0.91", "122.31, -50.193, -9.98022, 0.23", "123.524, -50.6294, -10.4676, 0.45", "125.052, -51.2046, -10.9576, 0.23", "125.561, -51.4032, -11.1006, 0.91", "126.171, -51.6645, -11.2627, 0.23", "127.254, -52.1889, -11.5219, 1.14", "128.909, -53.1112, -11.7938, 0.23", "129.809, -53.7002, -11.9396, 0.68", "130.318, -54.1455, -12.0431, 0.23", "131.158, -55.1617, -12.257, 0.23", "131.477, -56.0694, -12.4065, 0.23", "131.084, -57.3369, -12.4969, 0.91", "130.117, -59.2319, -12.5817, 0.23", "129.057, -60.9465, -12.648, 0.23", "128.36, -61.9241, -12.6801, 0.23", "126.924, -63.6172, -12.7254, 0.23", "125.055, -65.5388, -12.7658, 0.68", "131.526, -69.3264, -14.1612, 0.68", "137.896, -72.6266, -16.8306, 0.68", "143.512, -76.2585, -20.5291, 0.68", "148.84, -79.6105, -24.8901, 0.68", "155.45, -81.7511, -28.2103, 0.68", "162.356, -83.9991, -30.7553, 0.68", "168.984, -86.7557, -33.4788, 0.68", "176.097, -88.5859, -35.8145, 0.68" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.15661, 14.543, -1.12, 0.23", "8.97472, 15.1002, -1.29998, 0.23", "10.2775, 15.9229, -1.53796, 0.68", "10.6684, 16.1697, -1.60936, 0.68", "11.471, 16.6765, -1.75597, 0.23", "12.409, 17.2688, -1.92732, 0.91", "13.276, 17.8163, -2.08568, 0.91", "13.9989, 18.31, -2.21132, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.15661, 14.543, -1.12, 0.68", "7.97394, 17.0504, -0.809862, 0.68", "7.89164, 18.6406, -0.679384, 0.68", "7.84932, 19.9381, -0.599356, 0.91", "7.88122, 22.1736, -0.647926, 0.23", "7.92649, 22.9439, -0.694305, 0.68", "8.14308, 25.679, -0.907619, 0.23", "8.34636, 27.4812, -1.15292, 1.14", "8.49169, 28.5282, -1.3274, 1.14", "9.12318, 32.0952, -1.99928, 0.23", "9.62645, 34.3062, -2.45121, 0.91", "9.8906, 35.2697, -2.65265, 0.91", "10.3194, 36.5479, -2.93542, 0.23", "10.9437, 38.3232, -3.3081, 0.23", "11.3695, 39.498, -3.55066, 0.91", "11.8234, 40.6811, -3.76268, 0.91", "12.489, 42.3861, -4.07515, 0.23", "13.3125, 44.4082, -4.43353, 0.68", "14.1855, 46.481, -4.81838, 0.23", "14.722, 47.7951, -5.05422, 0.91", "15.6545, 50.1188, -5.50594, 0.23", "16.0728, 51.0997, -5.70019, 0.23", "16.3253, 51.6756, -5.80832, 1.14", "16.7302, 52.5594, -5.93906, 1.14", "17.3766, 53.9025, -6.09367, 0.23", "17.8141, 54.9224, -6.20263, 0.68", "18.5074, 56.8313, -6.42036, 0.23", "18.9726, 58.2961, -6.58257, 0.91", "19.5977, 60.6466, -6.82262, 0.23", "19.9753, 62.3874, -6.97959, 1.14", "20.3467, 65.0466, -7.27384, 0.23", "20.4439, 66.7797, -7.48874, 0.68", "20.4192, 67.7728, -7.65019, 0.23", "20.3003, 69.2551, -7.92943, 0.91", "20.1501, 70.2319, -8.13174, 0.91", "19.3352, 74.1816, -9.03036, 0.23", "19.0687, 75.3549, -9.3369, 1.14", "18.4894, 77.7993, -10.085, 0.23", "18.0958, 79.4217, -10.6253, 0.91", "17.7437, 80.773, -11.1036, 0.91", "17.1576, 82.9675, -11.9015, 0.23", "16.3935, 85.7691, -13.052, 0.91", "15.9972, 87.2528, -13.6875, 0.23", "15.7699, 88.1694, -14.0321, 0.45", "15.5098, 89.3426, -14.458, 0.23", "15.3226, 90.2803, -14.7884, 0.91", "14.9088, 92.5298, -15.6069, 0.23", "14.6183, 94.1352, -16.24, 1.14", "14.0416, 97.3803, -17.6808, 0.23", "13.6267, 99.6294, -18.7833, 1.36", "13.1376, 102.209, -20.264, 0.45", "12.8696, 103.541, -21.1585, 0.91", "12.4337, 105.515, -22.6467, 0.23", "12.1009, 106.795, -23.773, 0.68", "11.7977, 107.775, -24.7823, 0.68", "11.1519, 109.743, -26.8745, 0.23", "10.81, 110.884, -28.0915, 0.23", "10.6601, 111.489, -28.684, 0.91", "10.5021, 112.833, -29.9093, 0.45", "10.5411, 114.076, -30.9341, 0.23", "10.7576, 115.115, -31.7149, 0.91", "11.2613, 116.444, -32.5821, 0.23", "11.6131, 117.119, -32.9961, 1.14", "12.5157, 118.381, -33.7834, 0.23", "13.4285, 119.45, -34.4707, 0.91", "14.6841, 120.828, -35.4067, 0.23", "15.2857, 121.492, -35.8686, 0.23", "16.228, 122.591, -36.6701, 1.14", "17.7804, 124.6, -38.27, 0.23", "18.965, 126.439, -39.8485, 1.14", "19.9244, 128.559, -41.9267, 0.23", "20.1131, 129.081, -42.4617, 0.23", "20.4058, 130.202, -43.6826, 0.68", "20.5484, 131.412, -45.143, 0.23", "20.3781, 132.497, -46.5868, 1.14", "19.6402, 134.156, -49.0511, 0.23", "18.9524, 141.662, -53.5408, 0.23", "16.7738, 149.743, -55.9964, 0.23", "16.1854, 157.812, -59.255, 0.23", "14.4861, 165.74, -62.505, 0.23", "14.319, 173.941, -65.4324, 0.23", "13.0043, 182.097, -68.207, 0.23", "10.5342, 189.96, -71.123, 0.23", "8.15129, 197.573, -74.7529, 0.23", "6.34714, 204.959, -79.1517, 0.23", "5.32327, 211.867, -84.5473, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.15127, 37.9518, 0.0, 0.163064", "-9.88495, 52.7006, 0.0, 0.163064", "-12.6186, 67.4494, 0.0, 0.163064" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-14.108, 15.6493, 1.04914, 0.23", "-15.3666, 15.8954, -1.59937, 0.23", "-16.0873, 16.0362, -3.11587, 0.23", "-17.0367, 16.2218, -5.11373, 0.91", "-18.7937, 16.5652, -8.81096, 0.23", "-20.6637, 16.9308, -12.7459, 0.23", "-21.358, 17.0665, -14.2071, 1.14" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-14.108, 15.6493, 1.04914, 0.23", "-15.7852, 16.8561, 1.25751, 0.23", "-18.0674, 18.5012, 1.57298, 0.91", "-20.9642, 20.5653, 1.99136, 0.68", "-23.7148, 22.5811, 2.44654, 0.23", "-25.8329, 24.1457, 2.72335, 0.68", "-27.7061, 25.5336, 2.92878, 0.23", "-28.6905, 26.2485, 2.97742, 1.14", "-30.0177, 27.1513, 2.9718, 1.14", "-33.3251, 29.2756, 2.71882, 0.23", "-36.3578, 31.1659, 2.3135, 0.45", "-38.2686, 32.3086, 2.01374, 0.23", "-40.8826, 33.7738, 1.60014, 0.23", "-44.0475, 35.4323, 1.1183, 0.23", "-46.4659, 36.6172, 0.770372, 0.91", "-47.7697, 37.1957, 0.609776, 0.91", "-52.4784, 39.1864, 0.307295, 0.23", "-55.3821, 40.394, 0.229976, 0.68", "-57.7633, 41.3967, 0.281745, 0.23", "-58.6946, 41.7875, 0.311435, 0.91", "-60.8357, 42.6338, 0.433117, 0.91", "-64.6561, 44.0822, 0.647608, 0.23", "-66.576, 44.7646, 0.757101, 2.05", "-68.4783, 45.5105, 0.887878, 2.05" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "25.7251, 35.8522, -9.25485, 0.68", "27.1849, 36.1837, -9.68529, 0.68", "29.3529, 36.6218, -10.3792, 1.14", "31.4693, 37.0285, -11.007, 0.68", "34.0928, 37.532, -11.7266, 0.68", "35.8641, 37.8873, -12.1732, 0.68", "37.3767, 38.1907, -12.5546, 1.14", "39.8223, 38.6746, -13.1122, 0.68", "42.3489, 39.1661, -13.6231, 0.68", "43.9029, 39.4898, -13.9343, 0.68", "44.9984, 39.6953, -14.1242, 0.91" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "25.7251, 35.8522, -9.25485, 0.68", "25.8017, 38.7766, -9.7452, 0.68", "25.8523, 40.4234, -9.94824, 1.14", "25.9213, 42.3836, -10.1317, 0.23", "26.0021, 45.3587, -10.2468, 0.68", "26.0207, 47.515, -10.2351, 0.68", "26.0152, 48.6245, -10.2027, 0.68", "25.9231, 51.2377, -9.96615, 1.14", "25.7297, 54.8851, -9.57015, 0.23", "25.5785, 56.8542, -9.32098, 0.23", "25.2983, 59.6711, -8.90245, 0.68", "25.1386, 60.7282, -8.74895, 0.68", "24.769, 62.8052, -8.44328, 0.23", "24.4424, 64.2757, -8.22617, 0.91", "23.7918, 66.7292, -7.88788, 0.23", "23.3773, 68.2177, -7.76824, 0.68", "22.5273, 70.9872, -7.58694, 1.14" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-169.133, -72.5832, 21.6226, 0.23", "-172.359, -72.5953, 22.1133, 0.23", "-174.325, -72.6381, 22.4153, 0.68", "-176.916, -72.7372, 22.7958, 0.23", "-179.003, -72.9061, 22.9958, 0.45", "-183.549, -73.4114, 23.0, 0.23", "-186.883, -73.8357, 22.8501, 0.45", "-188.043, -74.0336, 22.7447, 0.23", "-189.948, -74.4371, 22.498, 0.68", "-193.957, -75.3996, 21.8283, 0.23", "-199.501, -76.8697, 20.9655, 0.68", "-200.848, -77.2271, 20.7638, 0.23", "-202.225, -77.605, 20.6315, 0.68", "-205.006, -78.4035, 20.5182, 0.23", "-206.896, -78.9283, 20.5601, 0.91", "-211.385, -80.134, 20.9949, 0.23", "-213.899, -80.7908, 21.3559, 1.14", "-216.958, -81.531, 21.7465, 0.23", "-218.98, -81.9555, 22.0036, 0.91", "-222.074, -82.5126, 22.3677, 0.23", "-223.758, -82.783, 22.5284, 0.68", "-225.674, -83.0473, 22.6315, 0.23", "-228.165, -83.3878, 22.7923, 0.68", "-230.41, -83.6622, 22.9495, 0.23", "-232.342, -83.9708, 23.121, 0.91", "-233.704, -84.2518, 23.2555, 0.23", "-236.159, -84.8545, 23.4913, 0.45", "-237.284, -85.1541, 23.6067, 0.23", "-239.974, -85.8873, 23.872, 0.45", "-244.377, -87.0197, 24.2424, 0.23", "-246.548, -87.5776, 24.4377, 0.23", "-249.593, -88.3504, 24.728, 0.68", "-253.295, -89.2615, 25.1025, 0.23", "-255.465, -89.7567, 25.3259, 0.23", "-258.92, -90.4531, 25.678, 0.91" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-169.133, -72.5832, 21.6226, 0.23", "-172.442, -74.1689, 19.8903, 0.23", "-173.545, -74.6235, 19.3989, 0.68", "-175.551, -75.3716, 18.6662, 0.23", "-177.167, -75.942, 18.1409, 0.91", "-179.456, -76.75, 17.3968, 0.23", "-181.744, -77.5578, 16.653, 0.45", "-183.934, -78.2548, 16.1452, 0.23", "-186.528, -79.0525, 15.5224, 0.68", "-187.235, -79.2621, 15.3558, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.78432, -13.1885, 11.5552, 1.14", "2.37545, -14.948, 14.6736, 1.14", "3.22101, -17.0873, 18.2797, 1.14", "4.05514, -18.9271, 21.1862, 0.68", "4.74049, -20.4386, 23.5743, 0.68", "5.09651, -21.2239, 24.8148, 0.91", "5.75558, -22.6775, 27.1113, 0.68", "6.39281, -23.9938, 29.0286, 1.14", "6.94362, -24.9238, 30.2509, 1.36" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "1.78432, -13.1885, 11.5552, 0.23", "2.95094, -17.2868, 10.4279, 0.23", "4.22661, -22.1371, 8.82038, 0.23", "5.743, -27.834, 6.88065, 0.23", "6.80801, -31.5533, 5.63858, 1.82", "7.51537, -34.2273, 4.679, 1.82", "8.40898, -37.5953, 3.45026, 0.68", "9.31782, -41.2879, 1.97678, 0.23", "10.0506, -44.7284, 0.737553, 0.23", "10.4058, -47.0073, -0.147528, 0.91", "10.9234, -51.1871, -1.91788, 0.23", "11.0887, -53.4747, -2.83574, 0.23", "11.1411, -57.3568, -4.19752, 0.23", "11.0471, -59.1774, -4.6773, 0.68", "10.5662, -63.687, -5.70842, 0.23", "10.3239, -65.4521, -6.02064, 1.36", "9.87074, -68.7725, -6.34207, 0.23", "9.56949, -70.8901, -6.46737, 0.23", "9.23393, -74.0894, -6.44358, 0.91", "9.18097, -76.977, -6.23798, 0.91", "9.30019, -78.9622, -6.05547, 0.91", "9.9782, -83.8122, -5.77403, 0.23", "10.5375, -86.2895, -5.75104, 0.23", "11.4857, -89.6846, -5.94418, 0.91", "12.8423, -93.8401, -6.37527, 0.23", "14.1352, -97.4663, -6.8864, 0.45", "15.9235, -102.146, -7.69469, 0.23", "17.5492, -106.367, -8.54346, 0.68", "19.3752, -111.446, -9.73394, 0.23", "20.1401, -113.938, -10.361, 1.14", "20.3234, -114.666, -10.5337, 1.14", "20.7117, -116.435, -10.8504, 1.14", "21.4832, -120.385, -11.4131, 0.23", "22.0584, -123.379, -11.7444, 0.91", "23.0126, -128.091, -12.1589, 0.23", "23.4513, -130.217, -12.3373, 1.14", "24.4537, -134.944, -12.7732, 0.23", "24.9803, -137.404, -13.0035, 1.14", "25.7329, -140.975, -13.308, 0.23", "26.08, -142.84, -13.432, 1.14", "26.4266, -144.986, -13.5666, 1.14", "27.0609, -150.089, -13.943, 0.23", "27.3107, -153.079, -14.1642, 1.14", "27.5219, -157.069, -14.4892, 0.23", "27.6202, -159.837, -14.721, 1.14", "27.7995, -164.187, -15.0573, 0.23", "27.9245, -166.701, -15.2567, 1.82", "28.2282, -171.442, -15.6019, 0.23", "28.3191, -172.661, -15.7028, 0.68", "28.4908, -174.89, -15.9001, 0.23", "28.764, -178.131, -16.1567, 0.91", "29.0091, -181.455, -16.365, 0.23", "29.1214, -182.891, -16.3316, 1.14", "29.352, -185.2, -16.1648, 0.23", "29.5297, -186.739, -15.9986, 0.68", "30.0702, -191.042, -15.4743, 0.23", "30.2901, -192.569, -15.2658, 1.14", "31.2628, -198.277, -14.405, 0.23", "31.7679, -201.192, -13.785, 0.91", "32.0046, -202.573, -13.431, 0.91", "32.4905, -205.514, -12.5867, 0.23", "32.7368, -207.258, -12.0568, 1.14", "32.8826, -208.661, -11.6422, 1.14", "33.1433, -215.103, -10.2823, 0.23", "33.1491, -217.731, -9.83058, 0.91", "33.1326, -218.809, -9.7391, 0.91", "33.0768, -222.176, -9.72728, 0.23", "33.0633, -223.847, -9.88741, 0.68", "33.0944, -228.145, -10.858, 0.23", "33.1118, -229.549, -11.3685, 0.91", "33.1405, -233.164, -12.7126, 0.23", "33.1533, -235.242, -13.428, 1.14", "33.1583, -236.311, -13.7618, 1.14", "33.1554, -237.856, -14.1409, 1.59", "33.0873, -241.372, -14.6512, 0.23", "33.0116, -243.04, -14.8666, 1.14", "32.8485, -245.93, -15.1565, 0.23", "32.8127, -246.848, -15.2788, 0.68", "32.8019, -248.369, -15.5411, 0.23", "32.8778, -249.833, -15.8291, 0.91", "33.1643, -251.744, -16.3133, 0.23", "33.5103, -253.575, -16.6921, 1.14", "34.2033, -256.905, -17.0214, 0.23", "34.7365, -259.363, -17.0931, 0.23", "35.2371, -261.662, -17.0422, 0.91", "36.1951, -266.11, -16.7308, 0.23", "37.0506, -270.215, -16.2507, 1.14", "38.2742, -276.214, -15.2212, 0.23", "38.5917, -277.968, -14.8363, 0.91", "38.752, -279.055, -14.5697, 0.91", "39.0512, -282.193, -13.7832, 0.23", "39.1019, -284.69, -13.2723, 1.14", "38.9192, -288.389, -12.8891, 0.23", "38.7085, -289.95, -12.839, 0.68", "38.1883, -292.809, -12.7004, 0.23", "37.8853, -294.173, -12.6204, 1.14", "36.7971, -298.492, -12.3079, 0.23", "36.4372, -300.024, -12.1825, 0.91", "36.2828, -300.794, -12.1184, 0.91", "35.8056, -304.087, -11.5254, 0.23", "35.6496, -305.496, -11.0871, 0.91", "35.3411, -308.551, -9.84551, 0.23", "35.2125, -310.062, -9.12724, 1.14", "34.9527, -312.573, -7.94595, 0.23", "34.5789, -315.566, -6.59939, 0.91", "34.2682, -318.333, -5.67495, 0.23", "34.1431, -319.867, -5.28112, 0.91", "33.9392, -322.759, -4.75809, 0.23", "33.7551, -325.7, -4.35536, 1.14", "33.7405, -326.793, -4.29398, 1.14", "33.9849, -331.888, -4.66949, 0.23", "34.2247, -334.056, -5.04305, 0.23", "34.382, -334.955, -5.24723, 0.68", "34.6908, -347.577, -5.34966, 0.68", "36.5427, -360.04, -4.4105, 0.68", "40.1216, -371.99, -2.1497, 0.68", "44.6491, -383.595, 0.363152, 0.68" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "7.787, -26.9414, -8.14948, 1.59", "7.68842, -27.2605, -8.23706, 1.59", "6.96758, -29.5938, -8.87758, 1.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "7.787, -26.9414, -8.14948, 0.23", "8.06625, -27.8228, -9.64404, 0.23", "8.54712, -29.1206, -12.0047, 0.68", "9.10737, -30.5389, -14.5493, 0.23", "9.76467, -31.9147, -17.1669, 0.91", "10.8958, -34.2029, -21.575, 0.91", "11.5433, -35.5532, -24.1403, 0.23", "12.12, -36.5679, -26.2074, 0.23", "12.4552, -37.0408, -27.2079, 1.59", "13.894, -38.7585, -30.8091, 0.23", "14.2613, -39.1236, -31.5133, 0.23", "14.8134, -39.6501, -32.2633, 0.23", "15.5212, -40.2134, -32.9562, 0.23", "16.746, -41.0317, -33.978, 1.14", "18.084, -41.81, -35.029, 0.68", "19.4194, -42.6156, -36.0872, 0.68", "20.6492, -43.4147, -37.1561, 0.68", "22.0683, -44.337, -38.719, 0.23", "23.5552, -45.4271, -40.7668, 0.23", "24.5744, -46.242, -42.3292, 0.68", "25.599, -47.0782, -44.0362, 0.23", "26.2646, -47.6241, -45.2385, 0.91", "28.5428, -49.5673, -49.8071, 0.23", "29.1444, -50.2131, -51.2673, 0.23", "29.774, -50.9452, -52.9447, 0.68", "33.3463, -54.7586, -61.2934, 0.68", "36.3742, -59.1358, -69.5447, 0.68", "40.4919, -63.8142, -77.1168, 0.68", "44.7581, -69.5833, -83.7094, 0.68", "47.6254, -75.4778, -90.898, 0.68", "49.506, -82.0925, -97.7033, 0.68", "51.1674, -89.5582, -103.523, 0.68", "55.0861, -96.6494, -108.771, 0.68", "58.7667, -104.05, -113.709, 0.68", "62.9932, -111.705, -117.71, 0.68", "67.5713, -119.436, -121.134, 0.68", "71.7198, -127.77, -123.358, 0.68", "75.6216, -136.233, -125.486, 0.68", "78.4294, -144.874, -128.367, 0.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "176.097, -88.5859, -35.8145, 0.23", "187.058, -93.373, -38.1036, 0.23", "197.388, -99.418, -39.9859, 0.23", "207.489, -105.946, -39.4105, 0.23", "215.981, -114.21, -38.1549, 0.23", "225.125, -121.203, -34.9393, 0.23", "233.759, -128.39, -30.9453, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "176.097, -88.5859, -35.8145, 0.23", "185.091, -92.4576, -37.6805, 0.23", "194.626, -95.2104, -38.9243, 0.23", "203.432, -99.3556, -41.0393, 0.23", "211.396, -104.451, -44.0755, 0.23", "218.687, -110.211, -47.5027, 0.23", "226.789, -115.467, -49.7226, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "13.9989, 18.31, -2.21132, 0.23", "15.7814, 19.6972, -3.15826, 0.23", "18.2003, 21.5623, -4.52678, 0.68", "20.7486, 23.4714, -5.88143, 0.23", "22.133, 24.5285, -6.57503, 0.91", "23.017, 25.2354, -7.02932, 0.91", "24.45, 26.43, -7.76593, 0.23", "26.6042, 28.2435, -8.76086, 1.59", "28.5154, 29.9279, -9.60872, 0.23", "29.6401, 30.9867, -10.1135, 1.14", "31.5976, 32.7797, -10.9318, 0.23", "32.4535, 33.5365, -11.3008, 0.23", "34.0272, 34.964, -12.0025, 1.14", "35.2039, 36.0672, -12.6327, 0.23", "35.9873, 36.8085, -13.1274, 1.14", "37.1542, 37.8869, -13.9006, 1.14", "39.257, 39.7471, -15.2487, 0.23", "41.0479, 41.2769, -16.3617, 1.59", "43.7018, 43.4687, -17.958, 0.23", "45.4133, 44.8591, -18.8889, 0.68", "47.7391, 46.6729, -19.9906, 0.23", "49.277, 47.8682, -20.6116, 1.36", "50.9203, 49.1068, -21.1202, 0.23", "52.9367, 50.6204, -21.5896, 1.36", "56.453, 53.3298, -22.1384, 0.23", "59.0887, 55.4592, -22.499, 0.23", "60.6042, 56.7841, -22.6602, 0.23", "62.3058, 58.4219, -22.8116, 2.05", "64.2056, 60.412, -22.9297, 0.23", "66.1383, 62.6447, -22.9632, 0.23", "67.2332, 64.0151, -22.9319, 1.59", "68.9295, 66.2377, -22.8597, 0.23", "69.5258, 67.0111, -22.8287, 1.14", "70.3451, 68.1112, -22.7756, 1.14", "71.151, 69.1808, -22.7385, 0.23", "72.5674, 71.0957, -22.7025, 1.14", "73.6691, 72.4746, -22.6189, 0.23", "74.466, 73.3773, -22.5925, 0.23", "75.3976, 74.3623, -22.6129, 0.91", "76.6394, 75.6294, -22.6902, 0.23", "77.8662, 76.8669, -22.8061, 1.36", "79.9129, 79.0188, -23.2078, 0.23", "81.9782, 81.2675, -23.8139, 0.23", "83.0006, 82.3537, -24.2299, 0.91", "83.6477, 83.0315, -24.5465, 0.91", "85.0385, 84.4658, -25.4225, 0.23", "86.43, 85.8396, -26.4739, 0.91", "88.0488, 87.4603, -27.9285, 0.23", "89.4268, 88.7943, -29.1478, 1.14", "90.0592, 89.3463, -29.6739, 1.14", "91.6561, 90.6369, -30.9029, 0.23", "92.6632, 91.3509, -31.6043, 1.14", "94.3586, 92.4342, -32.5481, 0.23", "95.1886, 92.9494, -32.9888, 1.14", "98.1624, 94.7681, -34.4571, 0.23", "99.2638, 95.4383, -34.9703, 0.23", "101.438, 96.7879, -35.8617, 1.82", "103.814, 98.2796, -36.7867, 0.23", "106.72, 100.113, -37.844, 1.36", "107.529, 100.651, -38.1236, 0.23", "108.652, 101.451, -38.4674, 0.68", "110.7, 102.959, -39.0335, 0.23", "111.756, 103.822, -39.2749, 0.23", "112.635, 104.577, -39.4489, 1.14", "113.545, 105.372, -39.5516, 1.14", "114.261, 106.048, -39.6395, 0.23", "114.784, 106.565, -39.7437, 0.23", "115.649, 107.509, -39.9719, 1.14", "116.312, 108.299, -40.1568, 1.14", "117.367, 109.663, -40.558, 0.23", "117.929, 110.411, -40.8105, 0.91", "119.094, 112.017, -41.3729, 0.23", "120.33, 113.802, -42.0029, 1.14", "121.428, 115.378, -42.5644, 0.23", "122.722, 117.217, -43.3068, 1.14", "123.377, 118.13, -43.6977, 0.23", "124.138, 119.166, -44.1322, 0.68", "125.369, 120.736, -44.7587, 0.23", "125.823, 121.278, -45.0158, 0.91", "127.733, 123.567, -46.1133, 0.23", "128.444, 124.461, -46.5027, 0.23", "129.241, 125.583, -46.9871, 0.23", "130.088, 126.998, -47.6016, 0.91", "130.999, 128.942, -48.3828, 0.23", "131.578, 130.84, -49.0822, 1.14", "131.722, 131.749, -49.3706, 0.23", "131.802, 133.013, -49.7555, 0.91", "131.793, 135.247, -50.3553, 0.23", "131.699, 136.767, -50.6927, 0.91", "131.508, 138.796, -51.034, 0.23", "131.363, 140.024, -51.2949, 0.91", "131.18, 141.566, -51.6559, 0.23", "130.989, 143.486, -52.1412, 0.23", "130.897, 144.39, -52.3605, 0.91", "130.778, 145.597, -52.6642, 0.23", "130.591, 147.99, -53.2629, 1.14", "130.518, 148.882, -53.4894, 1.14", "130.251, 152.09, -54.2474, 0.23", "130.1, 153.781, -54.6591, 0.23", "130.056, 154.38, -54.7969, 0.45", "130.019, 155.152, -54.9427, 0.23", "129.99, 156.069, -55.0135, 0.23", "129.945, 157.92, -55.1283, 0.23", "137.455, 165.846, -56.6084, 0.23", "144.565, 173.585, -59.9911, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "13.9989, 18.31, -2.21132, 0.23", "15.9953, 19.1935, -2.53249, 0.23", "19.5087, 20.7779, -3.11183, 0.91", "22.4811, 22.0909, -3.6797, 0.23", "24.1584, 22.8143, -4.00377, 0.91", "26.0003, 23.5849, -4.33508, 0.23", "27.7053, 24.2881, -4.61091, 0.23", "29.208, 24.9074, -4.86732, 0.91", "30.7692, 25.5834, -5.13516, 0.23", "32.6176, 26.3841, -5.3281, 0.91", "34.8512, 27.372, -5.54563, 0.23", "36.9292, 28.3031, -5.6847, 0.68", "38.3851, 28.9586, -5.78283, 0.23", "39.7996, 29.6104, -5.8657, 1.14", "41.8621, 30.6286, -5.92912, 0.23", "43.046, 31.2509, -5.99852, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "5.32327, 211.867, -84.5473, 0.23", "5.71943, 219.538, -88.1865, 0.23", "5.00052, 226.513, -93.0627, 0.23", "5.31552, 233.77, -97.5381, 0.23", "3.88332, 241.188, -101.42, 0.23", "0.756992, 247.932, -105.603, 0.23", "-3.68832, 254.593, -108.532, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.32327, 211.867, -84.5473, 0.23", "4.86872, 222.117, -88.2458, 0.23", "5.87629, 232.576, -91.0875, 0.23", "7.64041, 243.231, -92.3104, 0.23", "8.40372, 253.976, -93.6842, 0.23", "9.64527, 264.764, -93.5665, 0.23", "12.0867, 275.352, -94.0484, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-21.358, 17.0665, -14.2071, 0.23", "-23.2781, 15.4346, -16.4251, 0.23", "-24.4113, 14.5279, -17.7872, 0.23", "-25.4238, 13.7097, -18.9597, 0.91", "-27.3717, 12.1233, -21.0266, 0.68", "-29.1243, 10.7074, -22.7005, 0.23", "-30.4423, 9.70047, -23.8016, 0.68", "-32.6118, 8.04438, -25.5215, 0.23", "-33.5878, 7.38045, -26.1426, 0.91", "-35.6604, 6.13424, -27.196, 0.23", "-36.9787, 5.41758, -27.6476, 1.14", "-39.7304, 3.9004, -28.2649, 0.23", "-40.852, 3.23834, -28.4616, 0.68", "-42.0322, 2.50855, -28.6051, 0.23", "-42.9461, 1.89645, -28.7152, 0.23", "-43.6714, 1.37081, -28.785, 0.23", "-45.468, -0.180809, -29.0125, 1.14", "-47.3375, -2.04637, -29.2522, 0.23", "-49.3082, -4.20707, -29.6515, 0.91", "-50.8493, -5.97892, -30.0444, 0.23", "-51.9482, -7.34205, -30.363, 1.14", "-53.928, -9.82386, -30.9899, 0.23", "-54.9495, -11.1404, -31.3524, 0.91", "-56.5877, -13.3677, -31.9539, 0.23", "-57.5486, -14.8054, -32.3536, 1.14", "-58.794, -16.7684, -33.0304, 0.23", "-66.7361, -25.6051, -35.139, 0.23" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-21.358, 17.0665, -14.2071, 0.23", "-20.525, 16.8714, -15.2763, 0.23", "-19.4734, 16.6803, -16.5739, 0.91", "-18.6208, 16.5287, -17.5672, 0.23", "-18.3681, 16.4924, -17.8783, 0.68", "-17.7655, 16.4294, -18.6718, 0.23", "-17.3791, 16.4083, -19.2445, 1.14", "-16.4471, 16.3759, -20.7221, 0.23", "-15.8031, 16.349, -21.9641, 0.91", "-14.9087, 16.257, -23.9879, 0.23", "-14.5517, 16.2019, -24.9269, 1.36", "-13.8549, 16.0743, -27.2236, 0.23", "-13.6045, 16.0028, -28.3657, 0.91", "-13.2271, 15.7605, -31.2448, 0.23", "-13.1124, 15.6307, -32.651, 0.68", "-13.0557, 15.4449, -34.1594, 0.91", "-13.0494, 15.191, -35.8477, 0.23", "-13.1142, 15.029, -36.7869, 0.23", "-13.2696, 14.8887, -37.8272, 1.14", "-11.3183, 14.651, -43.3875, 1.14", "-8.18065, 15.3098, -48.3257, 1.14" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-68.4783, 45.5105, 0.887878, 0.23", "-69.6916, 47.6285, 1.42841, 0.23", "-70.8452, 49.4901, 1.89404, 0.23", "-71.3522, 50.2385, 2.07336, 0.91", "-73.0075, 52.608, 2.72328, 0.23", "-74.0149, 53.9958, 3.118, 0.91", "-76.1489, 56.8342, 3.92559, 0.23", "-77.4727, 58.5214, 4.50904, 1.14", "-79.5739, 61.0496, 5.42546, 0.23", "-81.1006, 62.8055, 6.0438, 0.91", "-82.5081, 64.3065, 6.55352, 0.23", "-83.6805, 65.5333, 7.06629, 0.91", "-85.4084, 67.2184, 7.924, 0.23", "-86.7921, 68.5121, 8.67394, 0.68", "-87.8153, 69.3522, 9.22231, 0.23", "-88.924, 70.1302, 9.81215, 0.68", "-91.2796, 71.5574, 11.1129, 0.23", "-92.4286, 72.141, 11.7703, 1.14", "-94.2823, 72.9145, 12.8133, 0.23", "-96.5475, 73.7333, 14.1437, 0.23", "-98.8911, 74.434, 15.4381, 0.68", "-100.092, 74.7533, 16.0207, 0.23", "-102.926, 75.4107, 17.1659, 0.68", "-103.985, 75.6517, 17.5641, 0.23", "-105.529, 76.0068, 18.0856, 0.68", "-107.296, 76.4643, 18.5941, 0.23", "-109.755, 77.1602, 19.1936, 0.91", "-112.448, 78.0592, 19.8135, 0.23", "-114.738, 78.94, 20.2892, 0.91", "-117.074, 79.9948, 20.8877, 0.23", "-118.16, 80.5326, 21.212, 0.23", "-120.326, 81.7283, 21.8972, 0.91", "-122.215, 82.9051, 22.5913, 0.23", "-123.438, 83.7582, 23.0796, 0.68", "-126.481, 86.0889, 24.3861, 0.23", "-128.282, 87.6028, 25.1938, 0.68", "-130.452, 89.5702, 26.1686, 0.23", "-132.361, 91.5827, 27.1098, 0.23", "-133.512, 92.9798, 27.7177, 0.23", "-134.468, 94.37, 28.2306, 0.68", "-134.965, 95.2581, 28.5064, 0.23", "-135.316, 95.9997, 28.7355, 0.91", "-136.798, 99.6267, 29.8787, 0.23", "-137.35, 101.121, 30.2825, 0.23", "-138.062, 103.281, 30.885, 0.23", "-138.788, 105.444, 31.496, 0.68" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-68.4783, 45.5105, 0.887878, 0.45", "-71.6335, 44.7914, 0.855246, 0.45", "-75.6521, 43.7681, 0.936296, 0.91", "-77.7602, 43.1498, 0.894534, 0.23", "-80.9543, 41.9998, 0.69015, 0.91", "-82.1118, 41.5403, 0.600829, 0.91", "-83.5007, 40.9634, 0.472015, 0.23", "-86.0842, 39.7953, 0.181975, 0.68", "-89.0207, 38.3286, -0.16567, 0.23", "-92.0153, 36.8177, -0.520874, 1.14", "-93.7144, 35.9621, -0.750896, 1.14", "-97.0823, 34.3211, -1.26226, 0.23", "-99.0961, 33.4343, -1.57365, 1.14", "-102.75, 31.9312, -2.17058, 0.23", "-104.796, 31.1855, -2.42364, 0.23", "-108.214, 30.0304, -2.75367, 0.23", "-108.853, 29.8117, -2.78095, 0.91", "-110.711, 29.1997, -2.7391, 1.59", "-114.847, 27.9453, -2.42728, 0.23", "-118.769, 26.8941, -1.92297, 1.36", "-121.989, 26.1236, -1.32662, 0.91", "-126.467, 25.1779, -0.242788, 0.23", "-129.76, 24.5369, 0.648137, 1.14", "-133.049, 23.9562, 1.63652, 0.23", "-134.978, 23.7114, 2.2874, 0.23", "-137.786, 23.4541, 3.22845, 0.68", "-139.277, 23.367, 3.70894, 0.68", "-141.398, 23.2734, 4.34311, 0.23", "-144.104, 23.113, 5.14115, 0.91", "-146.589, 22.9296, 5.79613, 0.23", "-147.809, 22.8272, 6.07399, 0.91", "-149.965, 22.6402, 6.48325, 0.23", "-154.008, 22.2757, 7.21512, 1.14", "-155.547, 22.131, 7.48097, 0.23", "-157.717, 21.9234, 7.84024, 0.68", "-160.537, 21.6285, 8.30586, 0.23", "-162.688, 21.4303, 8.73262, 0.45", "-164.543, 21.2648, 9.24392, 0.23", "-165.436, 21.1969, 9.54752, 0.23", "-167.773, 21.0566, 10.5626, 0.91", "-171.687, 20.8241, 12.5738, 0.23", "-174.409, 20.6784, 14.0804, 0.91", "-179.438, 20.4658, 16.9745, 0.23", "-180.783, 20.4118, 17.7746, 0.23", "-184.194, 20.2405, 19.9047, 1.59", "-188.441, 19.9886, 22.7896, 0.23", "-189.752, 19.8981, 23.7195, 0.91", "-190.588, 19.841, 24.3183, 0.91", "-193.85, 19.6318, 26.6565, 0.23", "-196.843, 19.3832, 28.787, 0.91", "-199.733, 19.1035, 30.7769, 0.23", "-201.284, 18.9484, 31.8454, 1.14", "-204.319, 18.6038, 33.8314, 0.23", "-205.963, 18.3818, 34.8163, 0.91", "-207.271, 18.2124, 35.4854, 0.23", "-209.066, 17.9692, 36.1844, 0.68", "-213.996, 17.2639, 37.7335, 0.23", "-216.087, 16.9484, 38.3485, 0.91", "-218.607, 16.5469, 39.0175, 0.23", "-221.575, 16.0876, 39.7101, 0.68", "-224.65, 15.5844, 40.3412, 0.23", "-226.97, 15.1665, 40.7561, 0.23", "-229.913, 14.5328, 41.2048, 0.91", "-233.235, 13.763, 41.7244, 0.23", "-235.577, 13.2066, 42.1057, 1.14", "-238.975, 12.3604, 42.6988, 0.23", "-240.772, 11.9512, 43.0354, 0.91", "-243.64, 11.431, 43.5067, 0.23", "-247.029, 11.0116, 44.0448, 0.91", "-248.921, 10.8732, 44.3833, 0.23", "-250.514, 10.8496, 44.707, 0.68", "-252.25, 10.9236, 45.0435, 0.23", "-255.412, 11.2256, 45.7127, 0.91", "-258.459, 11.6468, 46.5301, 0.23", "-259.932, 11.9181, 46.998, 0.23", "-261.076, 12.1336, 47.4089, 0.91", "-262.284, 12.3628, 47.9053, 0.23", "-265.367, 12.8964, 49.2904, 0.91", "-267.939, 13.357, 50.7595, 0.23", "-269.822, 13.7495, 52.1177, 0.68", "-271.281, 14.0687, 53.3348, 0.23", "-274.215, 14.7019, 56.2345, 0.91", "-275.722, 15.0283, 57.8115, 0.23", "-278.587, 15.645, 61.0147, 0.91", "-281.194, 16.2361, 64.1321, 0.23", "-282.789, 16.5774, 66.2899, 0.91", "-285.258, 17.2461, 70.1455, 0.23" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "44.9984, 39.6953, -14.1242, 0.23", "46.9607, 41.9825, -13.1293, 0.23", "48.2615, 43.4266, -12.3949, 0.91", "49.8921, 45.2181, -11.3075, 0.23", "52.1979, 47.7159, -9.74912, 0.23", "52.8937, 48.4596, -9.28114, 0.91", "54.4614, 50.2149, -8.17248, 0.23", "55.6192, 51.5286, -7.25592, 0.68", "57.2157, 53.4588, -5.94874, 0.23", "58.3342, 54.9686, -4.97054, 0.68", "59.7172, 57.0345, -3.84948, 0.23", "61.0135, 59.0538, -2.85246, 0.68", "61.6514, 60.0728, -2.42303, 0.23", "62.3099, 61.0964, -2.04112, 0.91", "63.8777, 63.2177, -1.33953, 0.23", "65.1255, 64.6675, -0.85804, 0.68", "67.019, 66.5633, -0.257277, 0.23", "68.2638, 67.6165, 0.119708, 0.68", "70.8825, 69.6971, 1.03422, 0.23", "73.3648, 71.5633, 1.94024, 0.91", "75.0921, 72.772, 2.47225, 0.23", "75.9921, 73.3924, 2.73789, 0.23", "79.0541, 75.6171, 3.57119, 0.68", "81.5273, 77.5641, 4.18041, 0.23", "82.9929, 78.8822, 4.47221, 0.91", "86.1507, 81.9526, 4.80824, 0.23", "87.0532, 82.8507, 4.81049, 0.23", "88.5568, 84.3441, 4.63523, 0.91", "90.839, 86.526, 4.04105, 0.23", "92.5255, 88.1214, 3.44381, 0.91", "95.0671, 90.5516, 2.48394, 0.23", "96.927, 92.334, 1.75818, 0.68", "99.1843, 94.3417, 0.81925, 0.23", "100.758, 95.5978, 0.0954709, 0.23", "102.291, 96.6699, -0.727866, 0.91", "112.426, 102.619, 0.487479, 0.91", "122.711, 106.978, 4.56352, 0.91", "134.298, 108.645, 6.82244, 0.91" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "44.9984, 39.6953, -14.1242, 0.23", "47.1565, 39.6499, -17.131, 0.23", "48.9811, 39.5846, -19.541, 0.68", "51.6393, 39.4361, -22.9683, 1.36", "54.6983, 39.1858, -26.7016, 0.23", "56.2316, 39.0445, -28.4334, 0.45", "58.7591, 38.8203, -31.1299, 0.45", "60.8926, 38.6451, -33.0941, 0.23", "62.7899, 38.4598, -34.6153, 1.14", "64.3233, 38.3484, -35.6337, 1.14", "66.1741, 38.3077, -36.6422, 0.45", "71.05, 38.5723, -38.8981, 0.23", "73.2534, 38.7951, -39.712, 1.14", "74.836, 38.9623, -40.1951, 0.23", "76.8228, 39.2293, -40.6921, 0.23", "79.7569, 39.6306, -41.4085, 0.91", "82.9203, 40.07, -42.2616, 0.23", "83.7728, 40.1878, -42.4772, 0.68", "85.1313, 40.3601, -42.8847, 0.68", "87.0701, 40.5811, -43.6501, 0.23", "90.2578, 40.9006, -44.9632, 0.91", "94.1243, 41.4107, -46.6002, 0.23", "96.0035, 41.6667, -47.418, 1.14", "97.4513, 41.8435, -48.022, 1.14", "102.176, 42.4041, -49.9136, 0.23", "104.655, 42.6834, -50.8425, 0.68", "106.487, 42.9353, -51.366, 0.23", "110.259, 43.5658, -52.1233, 1.14", "113.969, 44.4004, -52.6933, 0.23", "115.773, 44.9455, -52.8342, 0.91", "116.843, 45.3616, -52.8605, 1.36", "120.14, 46.9703, -52.9629, 0.23", "122.331, 48.2104, -52.9517, 0.91", "123.866, 49.1953, -52.8933, 0.91", "126.224, 50.8326, -52.8254, 0.23", "128.583, 52.4291, -52.7778, 0.91", "132.105, 54.6425, -52.775, 0.23", "134.369, 55.955, -52.8226, 0.91", "137.346, 57.4781, -52.8624, 0.23", "138.21, 57.8881, -52.8652, 0.23", "140.635, 58.973, -52.8553, 0.23", "143.636, 60.2195, -52.7589, 0.68", "145.86, 61.0563, -52.7112, 0.23", "148.341, 61.9979, -52.6403, 0.23", "150.95, 62.9317, -52.5196, 0.68", "162.63, 63.8446, -58.1738, 0.68" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "22.5273, 70.9872, -7.58694, 0.23", "20.2679, 72.3786, -7.27929, 0.23", "18.0809, 73.866, -7.12329, 0.91", "14.841, 76.4763, -7.02912, 0.23", "13.6205, 77.6895, -7.16945, 1.14", "12.5743, 78.9445, -7.39405, 0.23", "11.5195, 80.4233, -7.69382, 0.68", "10.5786, 82.2641, -8.18628, 0.23", "9.78204, 84.4601, -8.93452, 1.36", "8.853, 88.1314, -10.3503, 0.23", "8.48416, 90.0557, -11.1198, 0.91", "8.17842, 91.9666, -11.8874, 0.23", "7.8905, 94.2009, -12.7313, 0.68", "7.67535, 96.103, -13.3801, 0.23", "7.5817, 97.4361, -13.8093, 1.14", "7.56461, 99.8098, -14.5354, 0.23", "7.61511, 101.449, -15.0711, 0.23", "7.69979, 102.986, -15.5737, 0.91", "7.85257, 104.88, -16.1602, 0.23", "8.05913, 106.99, -16.769, 0.23", "8.39543, 109.712, -17.5385, 1.14", "8.5943, 111.021, -17.8792, 1.14", "9.03232, 113.45, -18.54, 0.23", "9.38256, 115.382, -19.0462, 0.23", "9.66921, 116.929, -19.3978, 0.23", "9.86129, 118.197, -19.6795, 0.23", "9.97404, 119.348, -19.9478, 0.45", "9.93201, 121.985, -20.8236, 0.23", "9.74389, 123.271, -21.3374, 0.91", "9.42904, 124.512, -21.9364, 0.91", "8.86415, 126.378, -22.931, 0.68", "8.04756, 129.04, -24.4697, 1.36", "7.09438, 132.211, -26.4108, 0.23", "6.80545, 133.463, -27.213, 0.23", "6.57017, 135.368, -28.4706, 0.23", "6.61752, 136.635, -29.3199, 1.14", "7.24965, 138.83, -30.6486, 0.23", "7.49503, 139.276, -30.8825, 0.68", "9.41261, 141.891, -32.0667, 0.23", "9.93655, 142.56, -32.3357, 1.14", "11.2298, 144.245, -32.8736, 0.23", "12.9235, 146.435, -33.5324, 0.91", "13.8653, 147.637, -33.8315, 0.23", "15.4052, 149.656, -34.27, 0.68", "16.5032, 151.113, -34.4788, 0.68", "17.5577, 152.589, -34.6632, 0.23", "15.7048, 164.263, -37.116, 0.23", "16.1454, 176.192, -38.6774, 0.23" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "22.5273, 70.9872, -7.58694, 0.23", "23.2379, 71.854, -7.49797, 0.23", "24.4217, 73.206, -7.50339, 1.14", "26.1477, 75.1346, -7.58815, 0.23", "27.1456, 76.27, -7.64901, 0.68", "28.0223, 77.2832, -7.70543, 0.23", "29.009, 78.4357, -7.76954, 0.68", "30.598, 80.3775, -7.96858, 0.23", "31.6827, 81.8146, -8.15968, 0.91", "32.7215, 83.352, -8.35346, 0.23", "33.0554, 83.8763, -8.37763, 0.91", "34.2204, 85.8191, -8.31861, 0.23", "35.4593, 87.9689, -8.13786, 0.91", "36.5882, 90.0129, -7.83669, 0.23", "37.0538, 90.8718, -7.68343, 0.91", "38.4412, 93.2856, -7.13034, 0.23", "38.9357, 94.0428, -6.88144, 1.14", "39.3799, 94.6015, -6.62441, 1.14", "40.2141, 95.3807, -6.10399, 0.23", "41.4377, 96.2664, -5.38598, 0.91", "42.854, 97.0195, -4.65414, 0.23", "44.7156, 97.7407, -3.84451, 0.23", "45.9566, 98.0572, -3.29352, 0.91", "47.8219, 98.3536, -2.48405, 0.23", "48.9321, 98.4613, -2.01892, 0.91", "51.3457, 98.5813, -1.08126, 0.23", "52.8742, 98.625, -0.548905, 0.68", "56.0001, 98.6693, 0.39575, 0.23", "57.2551, 98.6696, 0.743973, 0.68", "58.1777, 98.6631, 0.953553, 0.23", "59.7654, 98.6458, 1.27175, 0.91", "60.7747, 98.6181, 1.42544, 0.23", "61.8932, 98.5943, 1.54255, 0.23", "62.7332, 98.5859, 1.58738, 0.23", "64.5352, 98.6025, 1.71044, 0.91", "65.3732, 98.6304, 1.77722, 0.23", "66.6528, 98.7332, 1.82578, 0.68", "68.7698, 99.0119, 1.83873, 0.23", "69.6681, 99.1899, 1.78981, 0.91", "71.3931, 99.6539, 1.61486, 0.23", "72.2986, 99.9308, 1.49875, 0.91", "74.7781, 100.777, 1.11281, 0.23", "76.2559, 101.345, 0.822724, 0.91", "77.7615, 101.92, 0.417433, 0.23", "79.16, 102.493, -0.0554438, 0.68", "86.5842, 106.973, -0.191284, 0.68", "94.3343, 110.638, -1.7732, 0.68", "101.96, 114.766, -2.38098, 0.68", "109.174, 119.522, -2.92811, 0.68" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-187.235, -79.2621, 15.3558, 0.23", "-189.805, -81.8918, 16.2884, 0.23", "-191.37, -83.6362, 16.764, 0.68", "-192.749, -85.2554, 17.1456, 0.23", "-194.712, -87.6022, 17.6574, 0.45", "-198.12, -91.74, 18.5224, 0.23", "-200.306, -94.3783, 19.0551, 0.23", "-202.398, -97.0972, 19.5157, 0.91", "-204.206, -99.4806, 20.0138, 0.23", "-204.966, -100.516, 20.2296, 0.23", "-206.085, -102.082, 20.5605, 0.91", "-207.615, -104.411, 21.0453, 0.23", "-208.431, -105.756, 21.4011, 0.91", "-210.535, -109.982, 22.3787, 0.23", "-211.883, -113.322, 22.9404, 0.23", "-213.067, -116.492, 23.4435, 0.23", "-214.238, -119.96, 23.9429, 0.23", "-215.211, -123.306, 24.3547, 0.68", "-216.393, -127.93, 24.7644, 0.23", "-217.095, -131.728, 24.859, 0.23" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-187.235, -79.2621, 15.3558, 0.23", "-190.905, -80.0092, 14.1688, 0.23", "-193.542, -80.5854, 13.467, 0.45", "-196.231, -81.1671, 12.9398, 0.23", "-197.558, -81.4748, 12.6639, 0.23", "-198.475, -81.6948, 12.4792, 0.23", "-199.671, -82.0096, 12.1893, 0.68", "-202.481, -82.88, 11.5358, 0.23", "-203.943, -83.3989, 11.1986, 0.45", "-206.799, -84.5179, 10.481, 0.23", "-209.873, -85.7418, 9.67819, 0.91", "-212.891, -86.9205, 8.88286, 0.23", "-215.366, -87.9204, 8.21419, 0.91", "-216.699, -88.4506, 7.85214, 0.23", "-217.513, -88.778, 7.62558, 0.91", "-218.997, -89.3277, 7.26975, 0.23", "-220.889, -90.0473, 6.60497, 0.68", "-223.327, -90.9865, 5.60606, 0.23", "-224.879, -91.5949, 4.854, 0.68", "-226.643, -92.3345, 3.97613, 0.23", "-227.938, -92.941, 3.25654, 0.91", "-232.145, -95.0567, 0.790857, 0.23", "-234.03, -96.0516, -0.377797, 0.23", "-235.256, -96.6934, -1.1658, 0.23", "-237.636, -97.9282, -2.66435, 0.91", "-240.15, -99.2618, -4.24049, 0.23", "-241.564, -100.028, -5.08261, 0.23", "-242.814, -100.699, -5.78824, 0.68", "-244.935, -101.896, -7.07788, 0.23", "-246.321, -102.699, -7.94951, 0.91", "-248.454, -103.956, -9.33665, 0.23", "-250.419, -105.106, -10.5048, 0.91", "-252.921, -106.672, -11.931, 0.23", "-254.039, -107.398, -12.5395, 0.23", "-255.636, -108.465, -13.3344, 0.68", "-257.197, -109.529, -14.0271, 0.23", "-258.81, -110.645, -14.6225, 1.14", "-260.527, -111.842, -15.2055, 0.23", "-262.133, -112.945, -15.6522, 0.23", "-264.22, -114.431, -16.2182, 0.91", "-266.073, -115.757, -16.6642, 0.23", "-268.302, -117.438, -17.3075, 1.14", "-269.264, -118.175, -17.6388, 0.23", "-269.999, -118.705, -17.9098, 0.91", "-271.768, -119.998, -18.5698, 0.23", "-273.847, -121.535, -19.4648, 1.14", "-276.991, -123.849, -20.9733, 0.23", "-278.169, -124.721, -21.5686, 0.23", "-279.657, -125.9, -22.3694, 0.45", "-287.905, -130.856, -24.9339, 0.45" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "6.94362, -24.9238, 30.2509, 0.23", "7.73848, -25.3314, 31.606, 0.23", "8.59273, -25.8148, 33.0685, 0.91", "10.7031, -26.981, 36.5807, 0.23", "12.2356, -27.8011, 39.1006, 0.91", "14.417, -28.8989, 42.5141, 0.23", "15.1703, -29.2891, 43.6396, 0.23", "16.9249, -30.2726, 46.0512, 0.23", "17.4784, -30.6866, 46.8988, 0.68", "18.5232, -31.6318, 48.5732, 0.23", "19.3091, -32.6229, 50.1155, 0.91", "20.4243, -34.6493, 52.8906, 0.23", "20.5918, -35.0741, 53.4654, 0.91", "21.7569, -38.6603, 58.3281, 0.23", "21.9662, -39.3893, 59.3635, 0.91", "22.3803, -41.1401, 62.2062, 0.23", "22.5018, -41.8654, 63.6994, 0.91", "22.786, -43.6442, 68.6561, 0.23", "22.9023, -43.9758, 69.8919, 0.23", "23.0958, -44.2783, 71.4356, 0.91", "23.7668, -44.9786, 76.0311, 0.23", "24.4782, -45.574, 81.0686, 0.23", "25.1895, -46.1053, 85.9637, 0.23", "25.7307, -46.5054, 89.4277, 0.23", "26.3734, -47.0678, 93.8347, 0.23", "26.7381, -47.4123, 96.2783, 0.91", "27.8558, -48.1603, 101.937, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "6.94362, -24.9238, 30.2509, 0.23", "8.53281, -28.3167, 30.9319, 0.23", "9.44484, -30.3709, 31.4328, 0.23", "10.7843, -33.4943, 32.2285, 0.91", "11.8094, -36.1174, 32.9705, 0.23", "12.2478, -37.2987, 33.3049, 0.23", "12.9407, -39.0913, 33.8282, 1.14", "14.1069, -42.1, 34.7817, 0.23", "14.9511, -44.0688, 35.4528, 0.23", "16.0019, -46.1602, 36.2101, 0.91", "17.1336, -48.0077, 36.8983, 0.23", "18.6195, -50.0373, 37.7356, 0.23", "19.4048, -50.9493, 38.1361, 0.91", "20.6135, -52.2743, 38.8097, 0.68", "22.2566, -54.1113, 39.9008, 0.23", "23.1295, -55.1298, 40.5365, 0.91", "25.3864, -58.0455, 42.5338, 0.23", "26.2242, -59.3343, 43.3985, 0.91", "28.393, -63.2503, 45.9062, 0.23", "29.3342, -65.4232, 47.2179, 0.91", "29.7227, -66.6926, 47.9439, 0.91", "30.3129, -69.4357, 49.4065, 0.23", "30.5823, -71.5178, 50.4048, 0.91", "30.6271, -73.3649, 51.2317, 0.23", "30.4295, -75.3866, 52.0666, 0.91", "29.9634, -77.5598, 52.9531, 0.23", "29.6013, -78.7348, 53.4323, 1.14", "29.2441, -79.6243, 53.7927, 0.23", "27.5798, -83.3308, 55.5832, 0.91", "26.6665, -85.2902, 56.5949, 0.23", "26.2124, -86.312, 57.1277, 1.14", "25.6766, -87.6327, 57.8892, 0.23", "25.2013, -88.9711, 58.7662, 0.91", "24.5409, -91.3478, 60.5106, 0.23", "24.3453, -92.3803, 61.321, 0.91", "24.2504, -92.9818, 61.7947, 0.23", "23.8138, -95.7983, 64.1489, 0.91", "23.3967, -98.1265, 66.2004, 0.23", "22.9405, -100.653, 68.4419, 0.91", "22.566, -102.572, 70.1468, 0.23", "22.3091, -103.753, 71.2312, 1.14", "21.7543, -106.09, 73.3717, 0.23", "21.1642, -108.325, 75.2806, 0.91" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "6.96758, -29.5938, -8.87758, 0.23", "6.90482, -32.9616, -7.49688, 0.23", "6.79874, -34.6383, -6.58427, 0.23", "6.68797, -36.8519, -5.24919, 0.91", "6.66861, -37.7373, -4.7109, 0.23", "6.68961, -39.6295, -3.54946, 0.68", "6.69981, -41.3427, -2.37176, 0.23", "6.67311, -44.404, -0.105092, 0.68", "6.66367, -45.2256, 0.54792, 0.68", "6.68684, -46.3844, 1.46588, 0.23", "6.72417, -48.0818, 2.80229, 1.14", "6.81025, -51.4002, 5.10857, 0.23", "6.81047, -52.0431, 5.47296, 0.23", "6.81587, -52.7136, 5.78034, 0.23", "6.8003, -54.0603, 6.33265, 1.14", "6.6541, -57.0612, 7.54663, 0.23", "6.51407, -59.1554, 8.3053, 1.14", "6.24532, -62.9616, 9.60505, 0.23", "6.03329, -65.744, 10.5938, 0.23", "5.89748, -67.6447, 11.281, 0.68", "5.64445, -71.3484, 12.5751, 0.23", "5.53748, -72.9458, 13.1067, 1.14", "5.33107, -75.7764, 14.0495, 0.23", "5.25334, -76.9213, 14.3615, 0.23", "5.21605, -78.0835, 14.5952, 0.23", "5.19697, -79.9585, 14.9377, 0.91", "5.18104, -81.6664, 15.2581, 0.23", "5.13933, -83.2615, 15.626, 0.91", "5.05001, -84.8464, 16.0966, 0.23", "4.88839, -86.6006, 16.7928, 0.91", "4.53863, -88.7868, 17.8639, 0.23", "3.80558, -92.7604, 20.02, 0.23", "3.68137, -93.6653, 20.4681, 0.68", "3.44362, -96.4269, 21.8017, 1.14", "3.43982, -99.1308, 23.1261, 0.23", "3.73671, -102.782, 24.8377, 0.23", "4.01443, -104.377, 25.5074, 0.23", "5.20859, -109.211, 27.284, 0.23", "5.87557, -111.569, 28.039, 0.68", "7.30263, -116.408, 29.4592, 0.23", "7.92492, -118.278, 29.9741, 0.68", "9.10597, -121.498, 30.8654, 0.23", "9.7708, -123.494, 31.489, 0.23", "10.345, -125.641, 32.2876, 0.91", "11.483, -130.583, 33.8281, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.96758, -29.5938, -8.87758, 0.23", "5.72558, -30.8996, -11.4128, 0.23", "4.44774, -32.5905, -13.9909, 0.68", "3.00354, -34.8653, -17.2156, 0.68", "2.28548, -36.1348, -18.8859, 0.68", "1.6355, -37.3929, -20.4043, 0.68", "0.729277, -39.2117, -22.481, 0.23", "-0.00235271, -40.9241, -24.0726, 0.23", "-0.831003, -43.2061, -25.9232, 0.23", "-1.40587, -44.7878, -27.0923, 0.23", "-2.22511, -46.9147, -28.696, 1.14", "-2.69676, -48.064, -29.5576, 1.14", "-4.15291, -50.9457, -31.603, 0.23", "-5.40726, -53.1396, -33.0273, 0.91", "-6.7459, -55.4748, -34.4294, 0.91", "-7.24915, -56.363, -34.9593, 0.91", "-8.89051, -59.4203, -36.8627, 0.23", "-10.4557, -62.546, -38.7466, 0.23", "-12.0108, -65.8061, -40.6663, 0.23", "-12.991, -68.042, -41.9243, 0.23", "-13.9026, -70.4462, -43.2972, 0.91", "-15.346, -74.8153, -45.8447, 0.23", "-16.3357, -78.3198, -47.9579, 0.91", "-16.6527, -79.6526, -48.7877, 0.91", "-17.0576, -81.4713, -49.8612, 0.23", "-17.5785, -83.8051, -51.1373, 0.68", "-18.2365, -86.6354, -52.6726, 0.23", "-18.5355, -87.8366, -53.3199, 0.68", "-19.262, -90.5398, -54.8839, 0.23", "-19.6331, -91.717, -55.5816, 1.14", "-20.3104, -93.5167, -56.6751, 1.14", "-21.5511, -96.272, -58.4215, 0.23", "-23.0437, -99.0867, -60.4214, 0.23", "-23.967, -100.512, -61.5773, 0.91", "-24.9382, -101.768, -62.7282, 0.91", "-26.4401, -103.411, -64.2362, 0.23", "-28.0769, -104.982, -65.6709, 0.91", "-29.0285, -105.788, -66.4052, 0.91", "-31.5223, -107.596, -68.113, 0.23", "-32.7918, -108.485, -68.9416, 0.23", "-35.9891, -110.73, -70.9641, 0.68", "-37.415, -111.788, -71.8598, 0.23", "-38.3683, -112.587, -72.4796, 1.14", "-39.2302, -113.382, -73.0832, 1.14", "-41.3833, -115.598, -74.7525, 0.23", "-42.3979, -116.686, -75.6418, 0.23", "-43.8317, -118.441, -77.1365, 1.14", "-45.1797, -120.365, -78.7503, 0.23", "-45.65, -121.156, -79.4567, 0.68", "-46.2375, -122.403, -80.5774, 0.23", "-46.8041, -123.984, -81.9839, 0.23", "-47.2341, -126.083, -83.7628, 0.68", "-47.4928, -128.653, -85.8573, 0.23", "-47.5007, -131.137, -87.6753, 0.23", "-47.3108, -133.736, -89.3464, 0.45", "-47.0499, -135.283, -90.2228, 1.59", "-46.062, -139.566, -92.3296, 0.23", "-45.8045, -140.511, -92.7464, 0.23", "-44.9727, -143.329, -93.7871, 1.14", "-44.4098, -145.176, -94.3912, 1.14", "-43.4156, -148.321, -95.4089, 0.23", "-42.7912, -150.261, -96.0289, 0.91", "-41.5926, -154.112, -97.2211, 0.23", "-41.1433, -155.668, -97.768, 0.23", "-40.5407, -157.844, -98.6399, 1.14", "-40.2129, -159.106, -99.1793, 1.14", "-38.9078, -164.225, -101.503, 0.23", "-38.2459, -166.663, -102.673, 1.14", "-37.3132, -169.98, -104.441, 0.23", "-36.6769, -172.1, -105.681, 1.14", "-36.4764, -172.711, -106.058, 1.14", "-35.9108, -174.484, -107.025, 0.23", "-35.6286, -175.445, -107.388, 0.68", "-34.9651, -177.765, -107.766, 0.23", "-34.3622, -179.807, -107.475, 1.14", "-33.8927, -181.452, -106.996, 1.14", "-32.7029, -185.399, -105.545, 0.23", "-32.0208, -187.502, -104.664, 0.91", "-31.5797, -188.682, -104.202, 0.91", "-30.0633, -192.219, -102.974, 0.23", "-29.3141, -193.853, -102.569, 1.14", "-28.3167, -195.986, -102.4, 1.36", "-26.8364, -199.072, -102.644, 0.23", "-25.2899, -202.456, -103.189, 0.23", "-24.3042, -204.745, -103.656, 0.91", "-23.5552, -206.594, -104.104, 0.91", "-21.9003, -210.896, -105.112, 0.23", "-21.1872, -212.805, -105.569, 1.14", "-19.8502, -216.524, -106.394, 0.23", "-19.1397, -218.729, -106.819, 1.14", "-18.4679, -221.075, -107.263, 0.23", "-18.1054, -222.398, -107.523, 0.91", "-17.3888, -226.192, -108.455, 0.23", "-17.2427, -228.519, -109.268, 1.59", "-17.5872, -231.452, -110.701, 0.23", "-18.1255, -233.099, -111.565, 0.91", "-18.507, -233.799, -111.955, 0.91", "-20.6987, -236.834, -113.642, 0.23", "-22.105, -238.368, -114.485, 1.14", "-23.1671, -239.394, -115.0, 1.14", "-26.1952, -242.338, -116.282, 0.23", "-27.1221, -243.374, -116.667, 0.91", "-28.6801, -245.328, -117.266, 0.23", "-29.2672, -246.212, -117.466, 0.91", "-30.3894, -248.404, -118.046, 0.23", "-31.2272, -250.532, -118.815, 0.91", "-32.0712, -253.529, -120.417, 0.23", "-32.3588, -254.917, -121.322, 0.23", "-32.6401, -256.91, -122.955, 1.14", "-32.8843, -259.741, -125.617, 0.23", "-32.8695, -261.792, -127.854, 1.36", "-32.7629, -264.324, -130.897, 0.23", "-32.631, -265.73, -132.674, 1.14", "-32.3914, -267.572, -135.0, 0.23", "-32.2409, -268.765, -136.508, 0.68", "-31.9697, -271.511, -139.841, 0.23", "-31.8427, -272.652, -141.141, 0.91", "-31.627, -274.64, -143.109, 0.23", "-31.4932, -275.989, -144.268, 0.23", "-31.3149, -277.731, -145.598, 0.23", "-35.5758, -287.633, -151.048, 0.23", "-40.5805, -297.282, -156.371, 0.23", "-45.2129, -307.385, -161.097, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "78.4294, -144.874, -128.367, 0.23", "83.6244, -152.397, -135.867, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "78.4294, -144.874, -128.367, 0.23", "80.161, -150.634, -133.611, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "43.046, 31.2509, -5.99852, 0.23", "44.7485, 30.6437, -6.25849, 0.23", "46.3433, 30.2089, -6.58938, 0.68", "48.7128, 29.6599, -7.09254, 0.23", "50.4891, 29.3563, -7.49245, 0.91", "52.3355, 29.0888, -7.96219, 0.23", "53.8767, 28.8984, -8.39871, 1.14", "57.2762, 28.6251, -9.38679, 0.23", "58.8389, 28.5433, -9.92125, 0.68", "62.9725, 28.4105, -11.378, 0.23", "64.8964, 28.3442, -12.0451, 0.68", "68.3458, 28.2429, -13.1496, 0.23", "70.5361, 28.1829, -13.8121, 0.68", "75.2682, 28.1064, -15.1696, 0.23", "78.7465, 28.0802, -16.1603, 0.23", "81.8367, 28.0745, -16.9849, 0.68", "85.0865, 28.1085, -17.7758, 0.23", "87.0448, 28.1641, -18.2137, 0.68", "89.4592, 28.3167, -18.7251, 0.23", "92.0546, 28.5884, -19.1701, 0.23", "93.2173, 28.7739, -19.4075, 0.23", "93.9547, 28.9525, -19.5956, 0.23", "95.4373, 29.361, -19.9883, 0.23", "97.9576, 30.1425, -20.5785, 0.68", "99.4199, 30.6572, -20.8887, 0.23", "100.577, 31.1487, -21.1397, 0.23", "102.931, 32.2485, -21.7533, 1.36", "111.398, 31.9109, -23.4933, 1.36", "119.758, 30.3078, -24.9481, 1.36", "128.295, 30.1903, -26.3438, 1.36" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "43.046, 31.2509, -5.99852, 0.23", "43.9186, 31.6685, -5.94224, 0.23", "46.3664, 32.8398, -5.78437, 1.14", "49.1032, 34.1494, -5.60787, 0.23", "50.3511, 34.7465, -5.52739, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-66.7361, -25.6051, -35.139, 0.23", "-71.3717, -29.5884, -36.5857, 0.23", "-75.9693, -33.52, -38.3018, 0.23", "-80.029, -38.0727, -39.6246, 0.23", "-83.4801, -43.1254, -40.6328, 0.23", "-87.2716, -47.6394, -42.7323, 0.23", "-90.4886, -52.5212, -44.8994, 0.23", "-93.8628, -57.5263, -46.3721, 0.23", "-96.5598, -62.6602, -48.6234, 0.23", "-98.6974, -68.1953, -50.3644, 0.23", "-100.499, -73.6455, -52.7196, 0.23" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-66.7361, -25.6051, -35.139, 0.23", "-73.3657, -31.6952, -37.8784, 0.23", "-81.0713, -37.0913, -38.3218, 0.23", "-87.9439, -43.4258, -38.7478, 0.23", "-94.9148, -49.6627, -39.1546, 0.23", "-101.885, -55.636, -41.2075, 0.23", "-109.72, -60.8498, -41.8081, 0.23", "-117.07, -66.6814, -41.7482, 0.23", "-124.498, -72.4137, -42.2785, 0.23", "-130.922, -78.9621, -44.17, 0.23", "-137.511, -85.3969, -45.9008, 0.23" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-8.18065, 15.3098, -48.3257, 0.23", "-5.4238, 14.6546, -55.8428, 0.23", "-2.32046, 13.5624, -63.169, 0.23", "2.3432, 13.847, -69.6995, 0.23", "5.95354, 14.7256, -76.8086, 0.23", "10.7497, 17.1119, -82.7223, 0.23", "14.7975, 20.5007, -88.6472, 0.23", "19.827, 24.8229, -92.9102, 0.23", "25.0607, 28.1033, -97.9008, 0.23", "30.8193, 31.585, -102.099, 0.23", "36.829, 34.6634, -106.297, 0.23", "43.5599, 36.5459, -110.184, 0.23" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-8.18065, 15.3098, -48.3257, 0.23", "-5.01094, 16.3219, -54.6936, 0.23", "-1.92562, 17.1514, -61.1327, 0.23", "2.20349, 16.7397, -67.014, 0.23", "6.83385, 15.5636, -72.3898, 0.23", "10.7216, 13.9763, -78.2203, 0.23", "14.9627, 11.6593, -83.5121, 0.23", "19.8278, 9.04552, -88.0623, 0.23", "24.1479, 6.00676, -92.866, 0.23", "28.7175, 2.33486, -96.8859, 0.23", "32.5473, -2.11566, -100.809, 0.23", "36.864, -6.782, -103.846, 0.23" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-138.788, 105.444, 31.496, 0.23", "-140.362, 107.911, 31.9695, 0.23", "-141.702, 109.89, 32.4337, 0.23", "-143.225, 112.279, 33.0234, 0.45", "-144.147, 113.845, 33.4755, 0.23", "-144.991, 115.523, 34.1089, 0.68", "-146.1, 117.728, 34.9418, 0.23", "-147.33, 120.289, 36.0621, 0.68", "-147.938, 121.659, 36.6885, 0.23", "-148.595, 123.346, 37.6031, 0.68", "-149.598, 126.711, 39.7118, 0.23" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-138.788, 105.444, 31.496, 0.23", "-141.491, 107.877, 32.6185, 0.23", "-143.0, 109.427, 33.5538, 0.23", "-144.628, 111.098, 34.5623, 0.23", "-147.458, 114.004, 36.3158, 0.68", "-150.68, 117.311, 38.3115, 0.23", "-154.53, 121.264, 40.6971, 0.23", "-157.89, 125.111, 43.1368, 0.23" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "109.174, 119.522, -2.92811, 0.23", "116.984, 124.006, -2.18515, 0.23", "125.171, 127.842, -2.85495, 0.23", "132.88, 132.41, -3.9597, 0.23", "139.793, 137.338, -6.95584, 0.23", "146.804, 142.839, -7.99594, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "109.174, 119.522, -2.92811, 0.23", "118.471, 124.644, -2.81456, 0.23", "127.262, 130.52, -2.99443, 0.23", "136.068, 136.275, -1.93015, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "21.1642, -108.325, 75.2806, 0.23", "23.0877, -110.647, 77.0842, 0.23", "24.8575, -112.817, 78.6153, 0.68", "27.0237, -115.536, 80.3373, 0.23", "28.428, -117.316, 81.3767, 0.91", "29.4704, -118.631, 82.1506, 0.23", "30.203, -119.552, 82.7367, 0.23", "31.3812, -121.03, 83.7614, 0.68", "32.6392, -122.474, 84.7594, 0.23", "33.5427, -123.479, 85.5363, 0.91", "35.3564, -125.475, 87.4767, 0.23", "37.5977, -127.85, 90.1517, 0.91", "38.7133, -128.99, 91.6035, 0.23", "39.9233, -130.172, 93.2991, 0.91", "42.2046, -132.447, 96.8346, 0.23", "43.9469, -134.243, 99.7101, 0.23", "44.7706, -135.106, 101.125, 0.91", "46.0355, -136.471, 103.415, 0.23", "47.013, -137.598, 105.325, 0.91", "48.8878, -139.768, 109.119, 0.23", "49.6368, -140.553, 110.466, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "21.1642, -108.325, 75.2806, 0.23", "20.061, -111.417, 77.4652, 0.23", "18.8327, -114.956, 79.8727, 0.23", "17.9119, -117.585, 81.7816, 0.68", "17.439, -118.994, 82.9024, 0.23", "17.1122, -119.91, 83.6517, 0.91", "15.7526, -123.388, 86.6754, 0.23", "15.2203, -124.673, 87.8493, 0.91", "13.9062, -127.596, 90.5803, 0.23", "12.6686, -130.314, 93.086, 0.23", "12.1928, -131.443, 94.072, 0.91", "10.7437, -135.116, 96.9241, 0.23", "10.3676, -136.079, 97.5184, 0.91", "9.84451, -137.603, 98.2205, 0.23", "9.39927, -139.116, 98.7038, 1.14", "8.55563, -142.323, 99.4379, 0.23", "7.78578, -145.731, 100.12, 0.91", "7.03196, -149.495, 100.64, 0.23", "6.41138, -152.581, 101.089, 0.68", "5.78538, -155.403, 101.507, 0.23", "5.25735, -157.505, 101.792, 0.91" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "50.3511, 34.7465, -5.52739, 0.23", "52.4194, 34.6401, -3.78621, 0.23", "55.7739, 34.6888, -1.55907, 0.23", "58.4302, 34.8626, -0.0919167, 0.91", "60.043, 35.056, 0.696651, 0.23", "61.2874, 35.2543, 1.26926, 0.91", "63.8654, 35.6916, 2.31104, 0.23", "66.8738, 36.3533, 3.29492, 0.23", "69.5077, 36.9633, 3.9601, 0.23", "72.7421, 37.6784, 4.69109, 0.23", "75.463, 38.2267, 5.25414, 0.91", "77.9266, 38.7197, 5.77555, 0.23", "79.6936, 39.0987, 6.17851, 0.68", "81.8113, 39.5778, 6.72828, 0.23", "83.4432, 40.0033, 7.19871, 0.23", "84.1647, 40.2283, 7.42456, 0.23", "86.4293, 41.1214, 8.26869, 0.91", "88.0453, 41.8997, 8.96529, 0.23", "89.1852, 42.5397, 9.48583, 0.91", "91.8287, 44.1293, 10.5559, 0.23", "94.0974, 45.5795, 11.3392, 0.23", "95.6426, 46.6115, 11.7947, 0.23", "96.9753, 47.5196, 12.1229, 0.68", "99.289, 49.0531, 12.5927, 0.23", "102.862, 51.3524, 13.1959, 0.23", "105.114, 52.6694, 13.4209, 0.23", "106.232, 53.2536, 13.494, 0.23", "107.838, 53.9784, 13.5495, 0.23", "109.298, 54.5525, 13.6005, 0.68", "110.092, 54.7941, 13.6484, 0.68", "112.084, 55.269, 14.0272, 0.23", "113.688, 55.5568, 14.3767, 0.68", "114.832, 55.735, 14.6451, 0.23", "116.185, 55.9558, 14.9719, 0.68", "118.733, 56.4504, 15.6245, 0.23", "120.909, 56.9232, 16.2966, 0.91" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "50.3511, 34.7465, -5.52739, 0.68", "51.354, 35.3948, -5.8316, 0.68", "52.02, 35.7981, -5.99972, 0.68", "53.5982, 36.7083, -6.34742, 0.23", "54.6922, 37.3291, -6.55062, 0.23", "56.2147, 38.1647, -6.77773, 0.91", "58.0426, 39.1457, -7.00263, 0.23", "58.4923, 39.3834, -7.04371, 1.36", "58.9415, 39.6247, -7.06439, 1.36", "60.2287, 40.3815, -6.9605, 0.23", "61.4743, 41.2546, -6.7521, 0.23", "62.1419, 41.794, -6.60785, 0.23", "62.6643, 42.275, -6.49592, 1.14", "63.6028, 43.1932, -6.39603, 1.14", "65.2877, 44.9015, -6.45302, 0.23", "66.1545, 45.7787, -6.65919, 0.68", "66.9953, 46.5547, -6.97819, 0.23", "68.1812, 47.4855, -7.50047, 0.68", "69.9523, 48.6377, -8.339, 0.23", "71.0922, 49.2203, -8.85671, 0.23", "72.7067, 49.8441, -9.54853, 1.14", "74.4625, 50.307, -10.0962, 0.23", "75.9728, 50.5491, -10.3687, 0.68", "76.6855, 50.5989, -10.3902, 0.23", "78.6556, 50.6256, -10.1709, 0.91", "79.5262, 50.6205, -10.0071, 0.91", "80.9742, 50.6024, -9.66875, 0.23", "81.9167, 50.6073, -9.4615, 0.23", "82.4659, 50.6346, -9.35493, 0.23", "83.9973, 50.8057, -9.11694, 0.68", "85.6793, 51.1413, -8.94547, 0.23", "86.5013, 51.36, -8.90034, 0.68", "87.3358, 51.6445, -8.91234, 0.23", "88.1051, 51.9279, -8.99203, 0.23", "89.0553, 52.2647, -9.13925, 0.23", "89.7386, 52.4956, -9.268, 0.68", "91.5301, 53.0351, -9.61804, 0.23", "92.8526, 53.4126, -9.89261, 1.14", "94.7346, 53.9014, -10.298, 0.23", "96.3858, 54.2793, -10.6559, 0.23", "97.5554, 54.5273, -10.9091, 0.91", "99.5641, 54.8921, -11.2956, 0.23", "105.909, 58.6267, -12.502, 0.23", "112.508, 61.7163, -14.2357, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-100.499, -73.6455, -52.7196, 0.23", "-106.394, -82.477, -51.3552, 0.23", "-113.975, -90.0147, -49.8237, 0.23", "-121.38, -97.1101, -46.4011, 0.23", "-127.865, -104.617, -42.1981, 0.23", "-132.22, -112.663, -36.5954, 0.23", "-135.947, -120.061, -29.71, 0.23", "-138.265, -127.964, -22.8123, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-100.499, -73.6455, -52.7196, 0.23", "-105.703, -80.6709, -57.4723, 0.23", "-111.699, -87.7779, -60.9693, 0.23", "-116.613, -94.9425, -65.8036, 0.23", "-122.034, -102.294, -69.6726, 0.23", "-127.278, -108.71, -75.268, 0.23", "-132.214, -114.525, -81.8017, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-137.511, -85.3969, -45.9008, 0.23", "-147.067, -94.0078, -47.9743, 0.23", "-156.53, -102.89, -48.8978, 0.23", "-166.105, -111.708, -49.0472, 0.23", "-175.517, -120.676, -49.4252, 0.23", "-185.446, -128.928, -51.3591, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-137.511, -85.3969, -45.9008, 0.23", "-145.013, -91.2491, -46.6706, 0.23", "-151.132, -98.4559, -46.9545, 0.23", "-155.997, -106.512, -47.3687, 0.23", "-161.8, -113.958, -47.8093, 0.23", "-168.71, -120.461, -48.3349, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "43.5599, 36.5459, -110.184, 0.23", "51.086, 40.0933, -119.234, 0.23", "57.0898, 41.5579, -129.914, 0.23", "62.3718, 41.9256, -141.073, 0.23", "67.22, 44.3363, -152.134, 0.23", "72.3883, 47.8198, -162.719, 0.23", "78.7714, 51.7128, -172.455, 0.23", "86.2118, 55.802, -181.32, 0.23", "93.6025, 59.7175, -190.312, 0.23", "103.343, 63.1003, -197.038, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "43.5599, 36.5459, -110.184, 0.23", "48.0355, 40.1164, -116.311, 0.23", "51.7462, 42.8172, -123.333, 0.23", "55.8309, 45.7233, -130.063, 0.23", "59.6163, 50.0994, -136.077, 0.23", "63.3632, 54.498, -142.097, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "36.864, -6.782, -103.846, 0.23", "44.399, -9.98558, -112.823, 0.23", "52.2907, -14.0223, -121.089, 0.23", "60.1619, -16.8862, -129.9, 0.23", "66.2738, -21.6604, -139.19, 0.23", "72.2969, -25.4774, -149.012, 0.23", "76.8602, -29.9148, -159.329, 0.23" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "36.864, -6.782, -103.846, 0.23", "40.8243, -8.41784, -108.499, 0.23", "43.7359, -9.91827, -113.919, 0.23", "47.1754, -10.9119, -119.152, 0.23", "50.1756, -11.8203, -124.667, 0.23", "52.4786, -12.269, -130.565, 0.23" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "146.804, 142.839, -7.99594, 0.23", "157.292, 148.998, -8.31018, 0.23", "167.04, 156.151, -7.37503, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "146.804, 142.839, -7.99594, 0.23", "155.455, 148.236, -9.27241, 0.23", "163.797, 154.08, -10.4296, 0.23", "170.979, 161.264, -9.9345, 0.23", "177.088, 169.277, -9.13853, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "49.6368, -140.553, 110.466, 0.23", "52.871, -142.823, 113.887, 0.23", "54.4832, -143.954, 115.593, 0.91", "58.8102, -146.991, 120.17, 0.23", "60.4852, -148.167, 121.942, 0.68", "63.7823, -150.481, 125.43, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "49.6368, -140.553, 110.466, 0.23", "50.349, -143.374, 112.774, 0.23", "51.2309, -146.867, 115.632, 0.68", "51.7902, -149.083, 117.444, 0.23", "52.1816, -150.633, 118.713, 0.91" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "5.25735, -157.505, 101.792, 0.23", "5.86634, -158.7, 102.909, 0.23", "6.26123, -159.252, 103.459, 0.68", "8.04083, -161.347, 105.246, 0.23", "8.31858, -161.675, 105.525, 0.23", "9.20913, -162.723, 106.419, 0.23", "10.4198, -164.149, 107.636, 0.91", "11.2759, -165.073, 108.48, 0.23", "12.6076, -166.26, 109.538, 0.68" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "5.25735, -157.505, 101.792, 0.23", "4.00957, -159.375, 102.514, 0.23", "2.89962, -161.01, 103.086, 0.91", "1.20449, -163.404, 103.965, 0.23", "0.779472, -163.969, 104.178, 0.68", "-0.589051, -165.794, 104.86, 0.23", "-1.04349, -166.362, 105.122, 1.14", "-1.56644, -166.961, 105.459, 1.14", "-3.36307, -169.143, 106.741, 0.23", "-4.59224, -170.688, 107.67, 1.14", "-4.98253, -171.19, 107.991, 1.14", "-7.22643, -174.139, 109.983, 0.23", "-7.95687, -175.095, 110.699, 0.23", "-9.38732, -176.959, 112.253, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "120.909, 56.9232, 16.2966, 0.23", "121.421, 58.3665, 16.6413, 0.23", "121.719, 59.0875, 16.8101, 0.91", "123.622, 62.8649, 17.7225, 0.23", "124.955, 64.993, 18.3386, 0.68", "126.227, 66.6224, 18.8839, 0.23", "127.569, 68.1243, 19.4241, 0.91", "128.611, 69.0722, 19.8082, 0.23", "130.213, 70.2848, 20.349, 0.68", "132.604, 71.7425, 21.0747, 0.23", "135.094, 73.0722, 21.8366, 0.23", "136.46, 73.7257, 22.2257, 0.23", "137.762, 74.3327, 22.6114, 0.91", "138.683, 74.736, 22.8909, 0.91", "146.163, 79.5445, 25.1601, 0.91", "153.531, 84.2994, 27.8898, 0.91", "159.592, 90.2065, 31.3321, 0.91", "166.127, 96.257, 33.2421, 0.91" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "120.909, 56.9232, 16.2966, 0.23", "122.488, 57.0296, 16.7491, 0.23", "125.795, 57.209, 17.6628, 0.45", "129.267, 57.3571, 18.5976, 0.23", "132.765, 57.5136, 19.6313, 0.68", "136.41, 57.7273, 20.7427, 0.23", "140.442, 57.9855, 21.9817, 0.68", "142.111, 58.1201, 22.4978, 0.23", "143.843, 58.2666, 23.0306, 0.68", "147.327, 58.5553, 24.0709, 0.23", "151.874, 59.0037, 25.517, 1.14", "154.096, 59.256, 26.2432, 0.23", "155.147, 59.3844, 26.6458, 0.91", "157.484, 59.7273, 27.6077, 0.23", "158.913, 59.9609, 28.2015, 1.14", "161.914, 60.4505, 29.4255, 0.23", "165.426, 61.0323, 31.0885, 0.91", "169.02, 61.6206, 32.87, 0.23", "172.504, 62.1973, 34.588, 0.68", "176.764, 62.919, 36.6362, 0.23", "178.614, 63.2242, 37.5565, 0.68", "182.588, 63.8325, 39.6069, 0.23", "186.412, 64.3936, 41.5907, 0.68", "189.876, 64.9067, 43.4006, 0.23", "192.591, 65.3079, 44.8647, 0.23", "199.198, 66.2801, 48.3781, 0.23", "203.671, 66.9633, 50.6199, 0.23", "207.009, 67.4973, 52.1717, 0.68", "212.838, 68.5266, 54.9342, 0.23", "216.72, 69.2629, 56.7373, 0.23", "220.586, 70.0805, 58.5412, 0.23", "224.63, 71.0025, 60.2886, 0.45", "226.42, 71.4312, 61.0471, 0.68", "232.446, 72.9269, 63.666, 0.23", "235.462, 73.6839, 64.9703, 0.68", "240.785, 75.2255, 67.5877, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "112.508, 61.7163, -14.2357, 0.23", "118.611, 64.357, -14.9689, 0.23", "124.809, 66.9141, -14.8369, 0.23", "131.23, 68.8499, -15.2302, 0.23", "137.785, 70.3705, -14.9596, 0.23", "144.337, 71.2555, -13.6192, 0.23", "150.82, 71.0681, -11.787, 0.23", "157.18, 71.7113, -9.62957, 0.23", "163.311, 72.9287, -7.09143, 0.23", "169.772, 73.8972, -5.41014, 0.23", "175.931, 75.0968, -2.93248, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "112.508, 61.7163, -14.2357, 0.23", "121.817, 65.6126, -14.9828, 0.23", "131.316, 69.14, -15.1538, 0.23", "140.218, 73.7541, -16.2401, 0.23", "149.255, 77.7325, -18.4197, 0.23", "158.873, 80.8906, -19.1109, 0.23", "168.289, 84.6174, -19.0076, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_NBC_5d97f161ff_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_44
create dend_56
public dend_56
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_27
create dend_39
public dend_39
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_45
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_4
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_70, id: dend_70, parent: dend_62
create dend_70
public dend_70
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_30
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_5
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_71
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.4999998479938421)
    connect dend_27(0), soma_0(0.4999998479938421)
    connect dend_26(0), soma_0(0.4999998479938421)
    connect dend_15(0), soma_0(0.4999998479938421)
    connect dend_0(0), soma_0(0.4999998479938421)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_70(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.69096, -9.75392, 0.0, 3.54463 ) }
    soma_0 { pt3dadd( 1.52222, -8.84351, 0.0, 6.43815 ) }
    soma_0 { pt3dadd( 1.35347, -7.93311, 0.0, 8.80214 ) }
    soma_0 { pt3dadd( 1.18473, -7.0227, 0.0, 10.0004 ) }
    soma_0 { pt3dadd( 1.01599, -6.11229, 0.0, 10.9716 ) }
    soma_0 { pt3dadd( 0.847242, -5.20188, 0.0, 11.7871 ) }
    soma_0 { pt3dadd( 0.678498, -4.29147, 0.0, 12.5324 ) }
    soma_0 { pt3dadd( 0.509755, -3.38107, 0.0, 13.2727 ) }
    soma_0 { pt3dadd( 0.341011, -2.47066, 0.0, 13.4566 ) }
    soma_0 { pt3dadd( 0.172268, -1.56025, 0.0, 13.5676 ) }
    soma_0 { pt3dadd( 0.00352426, -0.649843, 0.0, 13.7469 ) }
    soma_0 { pt3dadd( -0.165219, 0.260565, 0.0, 13.8983 ) }
    soma_0 { pt3dadd( -0.333963, 1.17097, 0.0, 14.0 ) }
    soma_0 { pt3dadd( -0.502706, 2.08138, 0.0, 13.9192 ) }
    soma_0 { pt3dadd( -0.67145, 2.99179, 0.0, 13.4728 ) }
    soma_0 { pt3dadd( -0.840193, 3.9022, 0.0, 12.9681 ) }
    soma_0 { pt3dadd( -1.00894, 4.8126, 0.0, 12.2669 ) }
    soma_0 { pt3dadd( -1.17768, 5.72301, 0.0, 11.0106 ) }
    soma_0 { pt3dadd( -1.34642, 6.63342, 0.0, 9.31796 ) }
    soma_0 { pt3dadd( -1.51517, 7.54383, 0.0, 7.37652 ) }
    soma_0 { pt3dadd( -1.68391, 8.45424, 0.0, 4.20409 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.62975, 6.75062, -1.86, 3.64 ) }
    dend_44 { pt3dadd( -2.24342, 8.6498, -1.86, 3.64 ) }
    dend_44 { pt3dadd( -3.4876, 12.5003, -1.86, 3.18 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 24/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.38975, -6.72988, 8.54, 2.73 ) }
    dend_27 { pt3dadd( -1.97045, -8.53414, 8.54, 2.73 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.41975, 1.28812, -4.58, 0.68 ) }
    dend_26 { pt3dadd( -4.47217, -0.16737, -5.67596, 0.68 ) }
    dend_26 { pt3dadd( -4.51931, -1.16481, -6.4134, 0.45 ) }
    dend_26 { pt3dadd( -4.70437, -3.14035, -7.80167, 0.45 ) }
    dend_26 { pt3dadd( -4.9242, -5.33409, -9.37636, 0.45 ) }
    dend_26 { pt3dadd( -5.00381, -6.03801, -9.90544, 1.14 ) }
    dend_26 { pt3dadd( -5.29056, -8.63442, -12.0699, 0.23 ) }
    dend_26 { pt3dadd( -5.37174, -9.55967, -12.9014, 0.23 ) }
    dend_26 { pt3dadd( -5.56465, -10.9446, -14.2538, 0.91 ) }
    dend_26 { pt3dadd( -6.00101, -12.6661, -16.251, 0.23 ) }
    dend_26 { pt3dadd( -6.40434, -13.64, -17.586, 0.91 ) }
    dend_26 { pt3dadd( -7.06263, -14.9906, -19.6152, 0.23 ) }
    dend_26 { pt3dadd( -7.414, -15.5829, -20.6836, 0.23 ) }
    dend_26 { pt3dadd( -7.90082, -16.3739, -22.2311, 0.68 ) }
    dend_26 { pt3dadd( -8.73531, -17.7605, -25.0749, 0.23 ) }
    dend_26 { pt3dadd( -9.08218, -18.4106, -26.3807, 0.23 ) }
    dend_26 { pt3dadd( -9.36721, -19.1071, -27.6344, 1.14 ) }
    dend_26 { pt3dadd( -9.91527, -21.0214, -30.6477, 0.23 ) }
    dend_26 { pt3dadd( -10.0026, -21.747, -31.7662, 0.23 ) }
    dend_26 { pt3dadd( -9.99196, -22.5789, -33.0445, 1.14 ) }
    dend_26 { pt3dadd( -9.95199, -23.9874, -35.2637, 0.23 ) }
    dend_26 { pt3dadd( -9.95988, -24.6729, -36.5657, 0.23 ) }
    dend_26 { pt3dadd( -10.0184, -25.4248, -38.2105, 0.91 ) }
    dend_26 { pt3dadd( -10.1369, -26.5017, -40.7243, 0.91 ) }
    dend_26 { pt3dadd( -10.2943, -27.3316, -42.9653, 0.23 ) }
    dend_26 { pt3dadd( -10.4958, -27.9571, -44.7665, 0.23 ) }
    dend_26 { pt3dadd( -10.9029, -28.8898, -47.4818, 0.68 ) }
    dend_26 { pt3dadd( -11.1934, -29.4774, -49.3562, 0.23 ) }
    dend_26 { pt3dadd( -11.4163, -29.863, -50.6093, 1.14 ) }
    dend_26 { pt3dadd( -12.0685, -30.9408, -53.6839, 0.23 ) }
    dend_26 { pt3dadd( -12.233, -31.3144, -54.5615, 0.23 ) }
    dend_26 { pt3dadd( -12.3494, -31.8116, -55.54, 0.23 ) }
    dend_26 { pt3dadd( -14.3411, -37.2794, -63.7714, 0.23 ) }
    dend_26 { pt3dadd( -16.0854, -43.1972, -71.7054, 0.23 ) }
    dend_26 { pt3dadd( -16.9827, -47.1806, -80.9883, 0.23 ) }
    dend_26 { pt3dadd( -18.8647, -49.5687, -90.7484, 0.23 ) }
    dend_26 { pt3dadd( -21.6504, -54.0675, -99.4042, 0.23 ) }
    dend_26 { pt3dadd( -27.1665, -57.6188, -107.25, 0.23 ) }
    dend_26 { pt3dadd( -31.9933, -61.2092, -115.507, 0.23 ) }
    dend_26 { pt3dadd( -36.8264, -63.8398, -124.151, 0.23 ) }
    dend_26 { pt3dadd( -41.6697, -67.9523, -132.126, 0.23 ) }
    dend_26 { pt3dadd( -45.0666, -71.331, -141.135, 0.23 ) }
    dend_26 { pt3dadd( -48.6954, -76.2757, -149.207, 0.23 ) }
    dend_26 { pt3dadd( -52.5992, -82.2167, -156.374, 0.23 ) }
    dend_26 { pt3dadd( -56.7991, -87.407, -164.003, 0.23 ) }
    dend_26 { pt3dadd( -60.483, -93.9745, -170.668, 0.23 ) }
    dend_26 { pt3dadd( -63.7815, -101.761, -175.968, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.43025, -8.24988, 1.04, 1.14 ) }
    dend_15 { pt3dadd( 4.11216, -10.2268, -0.0403679, 1.14 ) }
    dend_15 { pt3dadd( 5.55791, -11.9262, -0.969045, 1.14 ) }
    dend_15 { pt3dadd( 6.95745, -13.5712, -1.86804, 1.14 ) }
    dend_15 { pt3dadd( 7.79728, -14.5583, -2.4075, 1.14 ) }
    dend_15 { pt3dadd( 8.57284, -15.47, -2.90568, 1.59 ) }
    dend_15 { pt3dadd( 9.49714, -16.5564, -3.4994, 1.59 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 80/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.95025, 5.08812, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 3.78693, 6.60756, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 4.6686, 8.20868, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 6.10747, 10.8217, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 6.94127, 12.3359, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 8.15661, 14.543, -1.12, 1.82 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.68391, 8.45424, 0.0, 0.823122 ) }
    axon_0 { pt3dadd( -4.41759, 23.203, 0.0, 0.823122 ) }
    axon_0 { pt3dadd( -7.15127, 37.9518, 0.0, 0.823122 ) }
    // Section: dend_56, id: dend_56, parent: dend_44 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -3.4876, 12.5003, -1.86, 0.68 ) }
    dend_56 { pt3dadd( -5.12796, 12.9755, -1.39476, 0.68 ) }
    dend_56 { pt3dadd( -6.27845, 13.3241, -1.09008, 0.68 ) }
    dend_56 { pt3dadd( -7.85616, 13.8022, -0.672249, 1.14 ) }
    dend_56 { pt3dadd( -8.76381, 14.0773, -0.431876, 0.23 ) }
    dend_56 { pt3dadd( -10.8774, 14.7178, 0.127863, 0.23 ) }
    dend_56 { pt3dadd( -12.0795, 15.0821, 0.446217, 0.91 ) }
    dend_56 { pt3dadd( -14.108, 15.6493, 1.04914, 1.82 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 97/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -3.4876, 12.5003, -1.86, 1.82 ) }
    dend_45 { pt3dadd( -0.606842, 15.1763, -2.73716, 1.82 ) }
    dend_45 { pt3dadd( 2.16897, 17.7718, -3.57137, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_45 { pt3dadd( 4.27202, 19.7224, -4.16568, 0.68 ) }
    dend_45 { pt3dadd( 5.68292, 20.9943, -4.52141, 1.14 ) }
    dend_45 { pt3dadd( 9.39883, 24.2497, -5.46311, 0.45 ) }
    dend_45 { pt3dadd( 11.5034, 26.0405, -6.0167, 0.45 ) }
    dend_45 { pt3dadd( 12.8002, 27.0494, -6.35591, 1.59 ) }
    dend_45 { pt3dadd( 14.1443, 28.04, -6.69052, 1.59 ) }
    dend_45 { pt3dadd( 16.0964, 29.4588, -7.12797, 0.68 ) }
    dend_45 { pt3dadd( 18.3826, 31.0954, -7.63945, 0.68 ) }
    dend_45 { pt3dadd( 20.2163, 32.3474, -7.99991, 1.36 ) }
    dend_45 { pt3dadd( 22.041, 33.5409, -8.37085, 2.05 ) }
    dend_45 { pt3dadd( 23.7802, 34.6257, -8.76347, 0.91 ) }
    dend_45 { pt3dadd( 25.7251, 35.8522, -9.25485, 1.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_27 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.97045, -8.53414, 8.54, 0.68 ) }
    dend_39 { pt3dadd( -5.25733, -9.03307, 8.34673, 0.68 ) }
    dend_39 { pt3dadd( -8.88748, -9.54876, 8.15476, 0.68 ) }
    dend_39 { pt3dadd( -11.1024, -9.84478, 7.99734, 0.23 ) }
    dend_39 { pt3dadd( -12.6748, -10.0517, 7.87499, 0.91 ) }
    dend_39 { pt3dadd( -14.7503, -10.3443, 7.71118, 0.91 ) }
    dend_39 { pt3dadd( -16.7587, -10.6346, 7.52674, 0.23 ) }
    dend_39 { pt3dadd( -18.3109, -10.8549, 7.35823, 0.23 ) }
    dend_39 { pt3dadd( -20.8759, -11.2614, 7.06691, 0.68 ) }
    dend_39 { pt3dadd( -22.7499, -11.6103, 6.82676, 0.68 ) }
    dend_39 { pt3dadd( -24.6654, -11.9989, 6.52886, 0.23 ) }
    dend_39 { pt3dadd( -26.6977, -12.4534, 6.17366, 0.68 ) }
    dend_39 { pt3dadd( -28.1957, -12.82, 5.90015, 0.68 ) }
    dend_39 { pt3dadd( -30.8873, -13.5388, 5.42318, 0.23 ) }
    dend_39 { pt3dadd( -33.0234, -14.1572, 5.08254, 0.23 ) }
    dend_39 { pt3dadd( -34.595, -14.6332, 4.84828, 0.68 ) }
    dend_39 { pt3dadd( -35.7628, -14.9945, 4.74712, 0.68 ) }
    dend_39 { pt3dadd( -37.4237, -15.5238, 4.70576, 0.68 ) }
    dend_39 { pt3dadd( -39.5868, -16.2058, 4.74482, 0.23 ) }
    dend_39 { pt3dadd( -41.4346, -16.7512, 4.86247, 0.45 ) }
    dend_39 { pt3dadd( -43.1132, -17.2232, 5.06825, 0.45 ) }
    dend_39 { pt3dadd( -46.2278, -18.0957, 5.53249, 0.23 ) }
    dend_39 { pt3dadd( -47.3786, -18.4348, 5.75181, 1.14 ) }
    dend_39 { pt3dadd( -48.5243, -18.7934, 6.00363, 1.14 ) }
    dend_39 { pt3dadd( -50.9541, -19.5919, 6.58862, 0.23 ) }
    dend_39 { pt3dadd( -52.7488, -20.2402, 7.02634, 0.23 ) }
    dend_39 { pt3dadd( -54.3745, -20.8933, 7.39864, 0.91 ) }
    dend_39 { pt3dadd( -57.219, -22.1257, 7.95364, 0.23 ) }
    dend_39 { pt3dadd( -58.6003, -22.7479, 8.20783, 1.14 ) }
    dend_39 { pt3dadd( -59.21, -23.0286, 8.30995, 1.14 ) }
    dend_39 { pt3dadd( -61.1302, -23.9112, 8.57201, 0.23 ) }
    dend_39 { pt3dadd( -62.8264, -24.645, 8.72237, 1.14 ) }
    dend_39 { pt3dadd( -64.7296, -25.3937, 8.82616, 0.23 ) }
    dend_39 { pt3dadd( -66.3898, -25.9557, 8.84891, 1.14 ) }
    dend_39 { pt3dadd( -67.3823, -26.2609, 8.86485, 0.23 ) }
    dend_39 { pt3dadd( -69.4127, -26.8372, 8.89968, 0.23 ) }
    dend_39 { pt3dadd( -70.7765, -27.2097, 8.93275, 1.14 ) }
    dend_39 { pt3dadd( -71.7911, -27.4717, 8.9761, 1.14 ) }
    dend_39 { pt3dadd( -74.3771, -28.1727, 9.12275, 0.23 ) }
    dend_39 { pt3dadd( -75.3948, -28.4754, 9.25936, 1.14 ) }
    dend_39 { pt3dadd( -76.6991, -28.891, 9.51107, 1.14 ) }
    dend_39 { pt3dadd( -78.2326, -29.3974, 9.87826, 0.23 ) }
    dend_39 { pt3dadd( -79.7618, -29.9349, 10.3483, 0.91 ) }
    dend_39 { pt3dadd( -81.4112, -30.5506, 10.9318, 0.23 ) }
    dend_39 { pt3dadd( -84.2323, -31.7024, 11.9737, 0.23 ) }
    dend_39 { pt3dadd( -84.8347, -31.9625, 12.1975, 1.14 ) }
    dend_39 { pt3dadd( -86.5071, -32.7154, 12.7533, 1.14 ) }
    dend_39 { pt3dadd( -88.6503, -33.7272, 13.3363, 0.23 ) }
    dend_39 { pt3dadd( -89.7443, -34.2547, 13.5602, 0.23 ) }
    dend_39 { pt3dadd( -92.5456, -35.5947, 14.0603, 0.68 ) }
    dend_39 { pt3dadd( -94.4864, -36.5013, 14.324, 0.23 ) }
    dend_39 { pt3dadd( -96.5168, -37.4597, 14.5949, 1.14 ) }
    dend_39 { pt3dadd( -98.8994, -38.6103, 14.8909, 0.23 ) }
    dend_39 { pt3dadd( -100.922, -39.6026, 15.1486, 0.91 ) }
    dend_39 { pt3dadd( -103.48, -40.8716, 15.5534, 0.23 ) }
    dend_39 { pt3dadd( -105.16, -41.7098, 15.8665, 0.23 ) }
    dend_39 { pt3dadd( -105.751, -42.0112, 16.0053, 0.23 ) }
    dend_39 { pt3dadd( -106.688, -42.4941, 16.2845, 0.23 ) }
    dend_39 { pt3dadd( -108.468, -43.4223, 16.9709, 0.91 ) }
    dend_39 { pt3dadd( -109.757, -44.1133, 17.53, 0.91 ) }
    dend_39 { pt3dadd( -111.438, -44.9931, 18.2221, 0.23 ) }
    dend_39 { pt3dadd( -113.047, -45.8135, 18.852, 1.14 ) }
    dend_39 { pt3dadd( -114.076, -46.3025, 19.2702, 1.14 ) }
    dend_39 { pt3dadd( -116.372, -47.3353, 20.1979, 0.23 ) }
    dend_39 { pt3dadd( -117.589, -47.868, 20.6644, 0.68 ) }
    dend_39 { pt3dadd( -120.151, -49.0319, 21.6215, 0.23 ) }
    dend_39 { pt3dadd( -122.157, -50.01, 22.3689, 0.91 ) }
    dend_39 { pt3dadd( -124.604, -51.3555, 23.209, 0.23 ) }
    dend_39 { pt3dadd( -125.331, -51.8103, 23.439, 0.23 ) }
    dend_39 { pt3dadd( -126.366, -52.5291, 23.7083, 0.23 ) }
    dend_39 { pt3dadd( -127.826, -53.6724, 24.0311, 1.14 ) }
    dend_39 { pt3dadd( -129.642, -55.2198, 24.3474, 0.23 ) }
    dend_39 { pt3dadd( -130.986, -56.4464, 24.407, 0.68 ) }
    dend_39 { pt3dadd( -133.062, -58.4117, 24.1663, 0.23 ) }
    dend_39 { pt3dadd( -134.729, -59.9843, 23.8189, 0.91 ) }
    dend_39 { pt3dadd( -136.638, -61.6785, 23.3364, 0.23 ) }
    dend_39 { pt3dadd( -137.564, -62.4336, 23.1022, 0.91 ) }
    dend_39 { pt3dadd( -139.872, -64.1535, 22.5093, 0.23 ) }
    dend_39 { pt3dadd( -141.867, -65.482, 22.0751, 0.91 ) }
    dend_39 { pt3dadd( -143.885, -66.7004, 21.7294, 0.23 ) }
    dend_39 { pt3dadd( -145.8, -67.7385, 21.5176, 0.91 ) }
    dend_39 { pt3dadd( -148.298, -68.878, 21.4484, 0.23 ) }
    dend_39 { pt3dadd( -149.29, -69.2714, 21.4829, 0.91 ) }
    dend_39 { pt3dadd( -150.941, -69.8043, 21.6602, 0.23 ) }
    dend_39 { pt3dadd( -152.302, -70.1589, 21.8105, 0.91 ) }
    dend_39 { pt3dadd( -152.809, -70.2634, 21.8223, 0.91 ) }
    dend_39 { pt3dadd( -155.565, -70.7753, 21.7791, 0.23 ) }
    dend_39 { pt3dadd( -156.432, -70.9075, 21.7627, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_39 { pt3dadd( -158.164, -71.1559, 21.7306, 0.91 ) }
    dend_39 { pt3dadd( -160.274, -71.4435, 21.6938, 0.23 ) }
    dend_39 { pt3dadd( -163.014, -71.796, 21.6532, 0.91 ) }
    dend_39 { pt3dadd( -166.815, -72.2834, 21.6167, 0.23 ) }
    dend_39 { pt3dadd( -169.133, -72.5832, 21.6226, 0.91 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 5/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -1.97045, -8.53414, 8.54, 0.91 ) }
    dend_28 { pt3dadd( -0.599805, -10.2331, 9.64068, 0.91 ) }
    dend_28 { pt3dadd( 0.437894, -11.5195, 10.474, 0.91 ) }
    dend_28 { pt3dadd( 1.78432, -13.1885, 11.5552, 1.36 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 9.49714, -16.5564, -3.4994, 0.91 ) }
    dend_19 { pt3dadd( 8.85558, -20.4523, -5.24388, 0.91 ) }
    dend_19 { pt3dadd( 8.23999, -24.1906, -6.91775, 0.91 ) }
    dend_19 { pt3dadd( 7.787, -26.9414, -8.14948, 0.91 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 9.49714, -16.5564, -3.4994, 0.23 ) }
    dend_16 { pt3dadd( 11.5569, -17.5617, -3.41247, 0.23 ) }
    dend_16 { pt3dadd( 13.1747, -18.3462, -3.37241, 0.68 ) }
    dend_16 { pt3dadd( 15.3756, -19.4421, -3.34779, 0.68 ) }
    dend_16 { pt3dadd( 16.6999, -20.1588, -3.41714, 0.23 ) }
    dend_16 { pt3dadd( 17.4072, -20.556, -3.48938, 0.91 ) }
    dend_16 { pt3dadd( 18.4609, -21.1534, -3.62882, 0.91 ) }
    dend_16 { pt3dadd( 19.7936, -21.9229, -3.90961, 0.23 ) }
    dend_16 { pt3dadd( 20.9866, -22.5684, -4.24862, 0.91 ) }
    dend_16 { pt3dadd( 23.0253, -23.6293, -4.87623, 0.23 ) }
    dend_16 { pt3dadd( 23.8107, -24.0325, -5.13257, 0.91 ) }
    dend_16 { pt3dadd( 24.869, -24.5632, -5.47914, 0.23 ) }
    dend_16 { pt3dadd( 26.2186, -25.2445, -5.89693, 1.14 ) }
    dend_16 { pt3dadd( 27.2216, -25.7114, -6.14617, 1.14 ) }
    dend_16 { pt3dadd( 29.1974, -26.5735, -6.50254, 0.23 ) }
    dend_16 { pt3dadd( 30.1938, -26.9744, -6.61384, 0.91 ) }
    dend_16 { pt3dadd( 31.2459, -27.3939, -6.69585, 0.91 ) }
    dend_16 { pt3dadd( 33.3493, -28.1645, -6.81609, 0.23 ) }
    dend_16 { pt3dadd( 35.1214, -28.725, -6.85965, 0.68 ) }
    dend_16 { pt3dadd( 36.7248, -29.1445, -6.87896, 0.23 ) }
    dend_16 { pt3dadd( 37.5907, -29.2967, -6.88447, 0.91 ) }
    dend_16 { pt3dadd( 39.4975, -29.5137, -6.8912, 0.23 ) }
    dend_16 { pt3dadd( 41.4323, -29.6082, -6.92451, 0.91 ) }
    dend_16 { pt3dadd( 43.0852, -29.5935, -6.98611, 0.23 ) }
    dend_16 { pt3dadd( 44.217, -29.5557, -7.09136, 0.91 ) }
    dend_16 { pt3dadd( 46.4825, -29.4645, -7.36407, 0.23 ) }
    dend_16 { pt3dadd( 47.1756, -29.444, -7.46432, 1.14 ) }
    dend_16 { pt3dadd( 48.566, -29.426, -7.69958, 1.14 ) }
    dend_16 { pt3dadd( 50.3486, -29.5135, -8.03676, 0.23 ) }
    dend_16 { pt3dadd( 52.4214, -29.7473, -8.46039, 0.68 ) }
    dend_16 { pt3dadd( 53.2238, -29.8832, -8.59993, 1.36 ) }
    dend_16 { pt3dadd( 54.8017, -30.2567, -8.77906, 0.23 ) }
    dend_16 { pt3dadd( 55.5322, -30.4428, -8.82967, 0.45 ) }
    dend_16 { pt3dadd( 57.5286, -30.9667, -8.89053, 0.23 ) }
    dend_16 { pt3dadd( 58.8487, -31.3119, -8.85801, 0.91 ) }
    dend_16 { pt3dadd( 61.3677, -31.9719, -8.63486, 0.23 ) }
    dend_16 { pt3dadd( 63.7599, -32.5742, -8.37084, 1.14 ) }
    dend_16 { pt3dadd( 64.9407, -32.8589, -8.2192, 0.23 ) }
    dend_16 { pt3dadd( 65.9782, -33.0852, -8.07602, 0.91 ) }
    dend_16 { pt3dadd( 67.9862, -33.4868, -7.75656, 0.23 ) }
    dend_16 { pt3dadd( 69.176, -33.716, -7.56195, 1.14 ) }
    dend_16 { pt3dadd( 71.0836, -34.084, -7.28472, 0.23 ) }
    dend_16 { pt3dadd( 72.1911, -34.3236, -7.12662, 0.91 ) }
    dend_16 { pt3dadd( 72.5381, -34.4105, -7.07758, 0.91 ) }
    dend_16 { pt3dadd( 74.1735, -34.8436, -6.87758, 0.23 ) }
    dend_16 { pt3dadd( 75.2362, -35.1111, -6.79847, 0.91 ) }
    dend_16 { pt3dadd( 77.0402, -35.5819, -6.72549, 0.23 ) }
    dend_16 { pt3dadd( 78.3609, -35.9338, -6.67903, 0.91 ) }
    dend_16 { pt3dadd( 79.8526, -36.3252, -6.64389, 0.23 ) }
    dend_16 { pt3dadd( 80.9556, -36.6135, -6.63654, 0.68 ) }
    dend_16 { pt3dadd( 83.4041, -37.2858, -6.66273, 0.23 ) }
    dend_16 { pt3dadd( 84.9836, -37.7379, -6.65079, 0.23 ) }
    dend_16 { pt3dadd( 85.9895, -38.0146, -6.60997, 1.14 ) }
    dend_16 { pt3dadd( 86.6615, -38.1932, -6.5545, 1.14 ) }
    dend_16 { pt3dadd( 88.6455, -38.7327, -6.30513, 0.23 ) }
    dend_16 { pt3dadd( 89.8053, -39.0412, -6.12515, 1.14 ) }
    dend_16 { pt3dadd( 91.8078, -39.5463, -5.78483, 0.23 ) }
    dend_16 { pt3dadd( 94.7049, -40.2122, -5.21889, 0.91 ) }
    dend_16 { pt3dadd( 96.0532, -40.5182, -4.9604, 0.23 ) }
    dend_16 { pt3dadd( 97.546, -40.8489, -4.70885, 0.91 ) }
    dend_16 { pt3dadd( 99.7047, -41.2949, -4.40685, 0.23 ) }
    dend_16 { pt3dadd( 101.302, -41.6427, -4.2867, 0.91 ) }
    dend_16 { pt3dadd( 103.422, -42.2087, -4.2804, 0.23 ) }
    dend_16 { pt3dadd( 106.158, -43.1097, -4.47231, 0.23 ) }
    dend_16 { pt3dadd( 108.321, -43.9058, -4.74584, 0.45 ) }
    dend_16 { pt3dadd( 109.873, -44.5444, -5.00373, 0.23 ) }
    dend_16 { pt3dadd( 111.901, -45.4647, -5.43771, 0.23 ) }
    dend_16 { pt3dadd( 113.553, -46.2813, -5.914, 0.91 ) }
    dend_16 { pt3dadd( 114.63, -46.8581, -6.34749, 0.23 ) }
    dend_16 { pt3dadd( 115.41, -47.3066, -6.70917, 0.45 ) }
    dend_16 { pt3dadd( 115.991, -47.649, -6.99227, 0.23 ) }
    dend_16 { pt3dadd( 117.039, -48.2141, -7.49691, 0.91 ) }
    dend_16 { pt3dadd( 118.695, -48.9497, -8.28012, 0.23 ) }
    dend_16 { pt3dadd( 119.967, -49.4175, -8.89681, 0.91 ) }
    dend_16 { pt3dadd( 120.91, -49.7382, -9.35176, 0.23 ) }
    dend_16 { pt3dadd( 121.215, -49.8398, -9.49752, 0.91 ) }
    dend_16 { pt3dadd( 122.31, -50.193, -9.98022, 0.23 ) }
    dend_16 { pt3dadd( 123.524, -50.6294, -10.4676, 0.45 ) }
    dend_16 { pt3dadd( 125.052, -51.2046, -10.9576, 0.23 ) }
    dend_16 { pt3dadd( 125.561, -51.4032, -11.1006, 0.91 ) }
    dend_16 { pt3dadd( 126.171, -51.6645, -11.2627, 0.23 ) }
    dend_16 { pt3dadd( 127.254, -52.1889, -11.5219, 1.14 ) }
    dend_16 { pt3dadd( 128.909, -53.1112, -11.7938, 0.23 ) }
    dend_16 { pt3dadd( 129.809, -53.7002, -11.9396, 0.68 ) }
    dend_16 { pt3dadd( 130.318, -54.1455, -12.0431, 0.23 ) }
    dend_16 { pt3dadd( 131.158, -55.1617, -12.257, 0.23 ) }
    dend_16 { pt3dadd( 131.477, -56.0694, -12.4065, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( 131.084, -57.3369, -12.4969, 0.91 ) }
    dend_16 { pt3dadd( 130.117, -59.2319, -12.5817, 0.23 ) }
    dend_16 { pt3dadd( 129.057, -60.9465, -12.648, 0.23 ) }
    dend_16 { pt3dadd( 128.36, -61.9241, -12.6801, 0.23 ) }
    dend_16 { pt3dadd( 126.924, -63.6172, -12.7254, 0.23 ) }
    dend_16 { pt3dadd( 125.055, -65.5388, -12.7658, 0.68 ) }
    dend_16 { pt3dadd( 131.526, -69.3264, -14.1612, 0.68 ) }
    dend_16 { pt3dadd( 137.896, -72.6266, -16.8306, 0.68 ) }
    dend_16 { pt3dadd( 143.512, -76.2585, -20.5291, 0.68 ) }
    dend_16 { pt3dadd( 148.84, -79.6105, -24.8901, 0.68 ) }
    dend_16 { pt3dadd( 155.45, -81.7511, -28.2103, 0.68 ) }
    dend_16 { pt3dadd( 162.356, -83.9991, -30.7553, 0.68 ) }
    dend_16 { pt3dadd( 168.984, -86.7557, -33.4788, 0.68 ) }
    dend_16 { pt3dadd( 176.097, -88.5859, -35.8145, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 14/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.15661, 14.543, -1.12, 0.23 ) }
    dend_4 { pt3dadd( 8.97472, 15.1002, -1.29998, 0.23 ) }
    dend_4 { pt3dadd( 10.2775, 15.9229, -1.53796, 0.68 ) }
    dend_4 { pt3dadd( 10.6684, 16.1697, -1.60936, 0.68 ) }
    dend_4 { pt3dadd( 11.471, 16.6765, -1.75597, 0.23 ) }
    dend_4 { pt3dadd( 12.409, 17.2688, -1.92732, 0.91 ) }
    dend_4 { pt3dadd( 13.276, 17.8163, -2.08568, 0.91 ) }
    dend_4 { pt3dadd( 13.9989, 18.31, -2.21132, 0.91 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 22/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.15661, 14.543, -1.12, 0.68 ) }
    dend_1 { pt3dadd( 7.97394, 17.0504, -0.809862, 0.68 ) }
    dend_1 { pt3dadd( 7.89164, 18.6406, -0.679384, 0.68 ) }
    dend_1 { pt3dadd( 7.84932, 19.9381, -0.599356, 0.91 ) }
    dend_1 { pt3dadd( 7.88122, 22.1736, -0.647926, 0.23 ) }
    dend_1 { pt3dadd( 7.92649, 22.9439, -0.694305, 0.68 ) }
    dend_1 { pt3dadd( 8.14308, 25.679, -0.907619, 0.23 ) }
    dend_1 { pt3dadd( 8.34636, 27.4812, -1.15292, 1.14 ) }
    dend_1 { pt3dadd( 8.49169, 28.5282, -1.3274, 1.14 ) }
    dend_1 { pt3dadd( 9.12318, 32.0952, -1.99928, 0.23 ) }
    dend_1 { pt3dadd( 9.62645, 34.3062, -2.45121, 0.91 ) }
    dend_1 { pt3dadd( 9.8906, 35.2697, -2.65265, 0.91 ) }
    dend_1 { pt3dadd( 10.3194, 36.5479, -2.93542, 0.23 ) }
    dend_1 { pt3dadd( 10.9437, 38.3232, -3.3081, 0.23 ) }
    dend_1 { pt3dadd( 11.3695, 39.498, -3.55066, 0.91 ) }
    dend_1 { pt3dadd( 11.8234, 40.6811, -3.76268, 0.91 ) }
    dend_1 { pt3dadd( 12.489, 42.3861, -4.07515, 0.23 ) }
    dend_1 { pt3dadd( 13.3125, 44.4082, -4.43353, 0.68 ) }
    dend_1 { pt3dadd( 14.1855, 46.481, -4.81838, 0.23 ) }
    dend_1 { pt3dadd( 14.722, 47.7951, -5.05422, 0.91 ) }
    dend_1 { pt3dadd( 15.6545, 50.1188, -5.50594, 0.23 ) }
    dend_1 { pt3dadd( 16.0728, 51.0997, -5.70019, 0.23 ) }
    dend_1 { pt3dadd( 16.3253, 51.6756, -5.80832, 1.14 ) }
    dend_1 { pt3dadd( 16.7302, 52.5594, -5.93906, 1.14 ) }
    dend_1 { pt3dadd( 17.3766, 53.9025, -6.09367, 0.23 ) }
    dend_1 { pt3dadd( 17.8141, 54.9224, -6.20263, 0.68 ) }
    dend_1 { pt3dadd( 18.5074, 56.8313, -6.42036, 0.23 ) }
    dend_1 { pt3dadd( 18.9726, 58.2961, -6.58257, 0.91 ) }
    dend_1 { pt3dadd( 19.5977, 60.6466, -6.82262, 0.23 ) }
    dend_1 { pt3dadd( 19.9753, 62.3874, -6.97959, 1.14 ) }
    dend_1 { pt3dadd( 20.3467, 65.0466, -7.27384, 0.23 ) }
    dend_1 { pt3dadd( 20.4439, 66.7797, -7.48874, 0.68 ) }
    dend_1 { pt3dadd( 20.4192, 67.7728, -7.65019, 0.23 ) }
    dend_1 { pt3dadd( 20.3003, 69.2551, -7.92943, 0.91 ) }
    dend_1 { pt3dadd( 20.1501, 70.2319, -8.13174, 0.91 ) }
    dend_1 { pt3dadd( 19.3352, 74.1816, -9.03036, 0.23 ) }
    dend_1 { pt3dadd( 19.0687, 75.3549, -9.3369, 1.14 ) }
    dend_1 { pt3dadd( 18.4894, 77.7993, -10.085, 0.23 ) }
    dend_1 { pt3dadd( 18.0958, 79.4217, -10.6253, 0.91 ) }
    dend_1 { pt3dadd( 17.7437, 80.773, -11.1036, 0.91 ) }
    dend_1 { pt3dadd( 17.1576, 82.9675, -11.9015, 0.23 ) }
    dend_1 { pt3dadd( 16.3935, 85.7691, -13.052, 0.91 ) }
    dend_1 { pt3dadd( 15.9972, 87.2528, -13.6875, 0.23 ) }
    dend_1 { pt3dadd( 15.7699, 88.1694, -14.0321, 0.45 ) }
    dend_1 { pt3dadd( 15.5098, 89.3426, -14.458, 0.23 ) }
    dend_1 { pt3dadd( 15.3226, 90.2803, -14.7884, 0.91 ) }
    dend_1 { pt3dadd( 14.9088, 92.5298, -15.6069, 0.23 ) }
    dend_1 { pt3dadd( 14.6183, 94.1352, -16.24, 1.14 ) }
    dend_1 { pt3dadd( 14.0416, 97.3803, -17.6808, 0.23 ) }
    dend_1 { pt3dadd( 13.6267, 99.6294, -18.7833, 1.36 ) }
    dend_1 { pt3dadd( 13.1376, 102.209, -20.264, 0.45 ) }
    dend_1 { pt3dadd( 12.8696, 103.541, -21.1585, 0.91 ) }
    dend_1 { pt3dadd( 12.4337, 105.515, -22.6467, 0.23 ) }
    dend_1 { pt3dadd( 12.1009, 106.795, -23.773, 0.68 ) }
    dend_1 { pt3dadd( 11.7977, 107.775, -24.7823, 0.68 ) }
    dend_1 { pt3dadd( 11.1519, 109.743, -26.8745, 0.23 ) }
    dend_1 { pt3dadd( 10.81, 110.884, -28.0915, 0.23 ) }
    dend_1 { pt3dadd( 10.6601, 111.489, -28.684, 0.91 ) }
    dend_1 { pt3dadd( 10.5021, 112.833, -29.9093, 0.45 ) }
    dend_1 { pt3dadd( 10.5411, 114.076, -30.9341, 0.23 ) }
    dend_1 { pt3dadd( 10.7576, 115.115, -31.7149, 0.91 ) }
    dend_1 { pt3dadd( 11.2613, 116.444, -32.5821, 0.23 ) }
    dend_1 { pt3dadd( 11.6131, 117.119, -32.9961, 1.14 ) }
    dend_1 { pt3dadd( 12.5157, 118.381, -33.7834, 0.23 ) }
    dend_1 { pt3dadd( 13.4285, 119.45, -34.4707, 0.91 ) }
    dend_1 { pt3dadd( 14.6841, 120.828, -35.4067, 0.23 ) }
    dend_1 { pt3dadd( 15.2857, 121.492, -35.8686, 0.23 ) }
    dend_1 { pt3dadd( 16.228, 122.591, -36.6701, 1.14 ) }
    dend_1 { pt3dadd( 17.7804, 124.6, -38.27, 0.23 ) }
    dend_1 { pt3dadd( 18.965, 126.439, -39.8485, 1.14 ) }
    dend_1 { pt3dadd( 19.9244, 128.559, -41.9267, 0.23 ) }
    dend_1 { pt3dadd( 20.1131, 129.081, -42.4617, 0.23 ) }
    dend_1 { pt3dadd( 20.4058, 130.202, -43.6826, 0.68 ) }
    dend_1 { pt3dadd( 20.5484, 131.412, -45.143, 0.23 ) }
    dend_1 { pt3dadd( 20.3781, 132.497, -46.5868, 1.14 ) }
    dend_1 { pt3dadd( 19.6402, 134.156, -49.0511, 0.23 ) }
    dend_1 { pt3dadd( 18.9524, 141.662, -53.5408, 0.23 ) }
    dend_1 { pt3dadd( 16.7738, 149.743, -55.9964, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 16.1854, 157.812, -59.255, 0.23 ) }
    dend_1 { pt3dadd( 14.4861, 165.74, -62.505, 0.23 ) }
    dend_1 { pt3dadd( 14.319, 173.941, -65.4324, 0.23 ) }
    dend_1 { pt3dadd( 13.0043, 182.097, -68.207, 0.23 ) }
    dend_1 { pt3dadd( 10.5342, 189.96, -71.123, 0.23 ) }
    dend_1 { pt3dadd( 8.15129, 197.573, -74.7529, 0.23 ) }
    dend_1 { pt3dadd( 6.34714, 204.959, -79.1517, 0.23 ) }
    dend_1 { pt3dadd( 5.32327, 211.867, -84.5473, 0.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.15127, 37.9518, 0.0, 0.163064 ) }
    axon_1 { pt3dadd( -9.88495, 52.7006, 0.0, 0.163064 ) }
    axon_1 { pt3dadd( -12.6186, 67.4494, 0.0, 0.163064 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 11/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -14.108, 15.6493, 1.04914, 0.23 ) }
    dend_62 { pt3dadd( -15.3666, 15.8954, -1.59937, 0.23 ) }
    dend_62 { pt3dadd( -16.0873, 16.0362, -3.11587, 0.23 ) }
    dend_62 { pt3dadd( -17.0367, 16.2218, -5.11373, 0.91 ) }
    dend_62 { pt3dadd( -18.7937, 16.5652, -8.81096, 0.23 ) }
    dend_62 { pt3dadd( -20.6637, 16.9308, -12.7459, 0.23 ) }
    dend_62 { pt3dadd( -21.358, 17.0665, -14.2071, 1.14 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 18/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -14.108, 15.6493, 1.04914, 0.23 ) }
    dend_57 { pt3dadd( -15.7852, 16.8561, 1.25751, 0.23 ) }
    dend_57 { pt3dadd( -18.0674, 18.5012, 1.57298, 0.91 ) }
    dend_57 { pt3dadd( -20.9642, 20.5653, 1.99136, 0.68 ) }
    dend_57 { pt3dadd( -23.7148, 22.5811, 2.44654, 0.23 ) }
    dend_57 { pt3dadd( -25.8329, 24.1457, 2.72335, 0.68 ) }
    dend_57 { pt3dadd( -27.7061, 25.5336, 2.92878, 0.23 ) }
    dend_57 { pt3dadd( -28.6905, 26.2485, 2.97742, 1.14 ) }
    dend_57 { pt3dadd( -30.0177, 27.1513, 2.9718, 1.14 ) }
    dend_57 { pt3dadd( -33.3251, 29.2756, 2.71882, 0.23 ) }
    dend_57 { pt3dadd( -36.3578, 31.1659, 2.3135, 0.45 ) }
    dend_57 { pt3dadd( -38.2686, 32.3086, 2.01374, 0.23 ) }
    dend_57 { pt3dadd( -40.8826, 33.7738, 1.60014, 0.23 ) }
    dend_57 { pt3dadd( -44.0475, 35.4323, 1.1183, 0.23 ) }
    dend_57 { pt3dadd( -46.4659, 36.6172, 0.770372, 0.91 ) }
    dend_57 { pt3dadd( -47.7697, 37.1957, 0.609776, 0.91 ) }
    dend_57 { pt3dadd( -52.4784, 39.1864, 0.307295, 0.23 ) }
    dend_57 { pt3dadd( -55.3821, 40.394, 0.229976, 0.68 ) }
    dend_57 { pt3dadd( -57.7633, 41.3967, 0.281745, 0.23 ) }
    dend_57 { pt3dadd( -58.6946, 41.7875, 0.311435, 0.91 ) }
    dend_57 { pt3dadd( -60.8357, 42.6338, 0.433117, 0.91 ) }
    dend_57 { pt3dadd( -64.6561, 44.0822, 0.647608, 0.23 ) }
    dend_57 { pt3dadd( -66.576, 44.7646, 0.757101, 2.05 ) }
    dend_57 { pt3dadd( -68.4783, 45.5105, 0.887878, 2.05 ) }
    // Section: dend_53, id: dend_53, parent: dend_45 (entry count 42/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 25.7251, 35.8522, -9.25485, 0.68 ) }
    dend_53 { pt3dadd( 27.1849, 36.1837, -9.68529, 0.68 ) }
    dend_53 { pt3dadd( 29.3529, 36.6218, -10.3792, 1.14 ) }
    dend_53 { pt3dadd( 31.4693, 37.0285, -11.007, 0.68 ) }
    dend_53 { pt3dadd( 34.0928, 37.532, -11.7266, 0.68 ) }
    dend_53 { pt3dadd( 35.8641, 37.8873, -12.1732, 0.68 ) }
    dend_53 { pt3dadd( 37.3767, 38.1907, -12.5546, 1.14 ) }
    dend_53 { pt3dadd( 39.8223, 38.6746, -13.1122, 0.68 ) }
    dend_53 { pt3dadd( 42.3489, 39.1661, -13.6231, 0.68 ) }
    dend_53 { pt3dadd( 43.9029, 39.4898, -13.9343, 0.68 ) }
    dend_53 { pt3dadd( 44.9984, 39.6953, -14.1242, 0.91 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 25.7251, 35.8522, -9.25485, 0.68 ) }
    dend_46 { pt3dadd( 25.8017, 38.7766, -9.7452, 0.68 ) }
    dend_46 { pt3dadd( 25.8523, 40.4234, -9.94824, 1.14 ) }
    dend_46 { pt3dadd( 25.9213, 42.3836, -10.1317, 0.23 ) }
    dend_46 { pt3dadd( 26.0021, 45.3587, -10.2468, 0.68 ) }
    dend_46 { pt3dadd( 26.0207, 47.515, -10.2351, 0.68 ) }
    dend_46 { pt3dadd( 26.0152, 48.6245, -10.2027, 0.68 ) }
    dend_46 { pt3dadd( 25.9231, 51.2377, -9.96615, 1.14 ) }
    dend_46 { pt3dadd( 25.7297, 54.8851, -9.57015, 0.23 ) }
    dend_46 { pt3dadd( 25.5785, 56.8542, -9.32098, 0.23 ) }
    dend_46 { pt3dadd( 25.2983, 59.6711, -8.90245, 0.68 ) }
    dend_46 { pt3dadd( 25.1386, 60.7282, -8.74895, 0.68 ) }
    dend_46 { pt3dadd( 24.769, 62.8052, -8.44328, 0.23 ) }
    dend_46 { pt3dadd( 24.4424, 64.2757, -8.22617, 0.91 ) }
    dend_46 { pt3dadd( 23.7918, 66.7292, -7.88788, 0.23 ) }
    dend_46 { pt3dadd( 23.3773, 68.2177, -7.76824, 0.68 ) }
    dend_46 { pt3dadd( 22.5273, 70.9872, -7.58694, 1.14 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 70/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -169.133, -72.5832, 21.6226, 0.23 ) }
    dend_43 { pt3dadd( -172.359, -72.5953, 22.1133, 0.23 ) }
    dend_43 { pt3dadd( -174.325, -72.6381, 22.4153, 0.68 ) }
    dend_43 { pt3dadd( -176.916, -72.7372, 22.7958, 0.23 ) }
    dend_43 { pt3dadd( -179.003, -72.9061, 22.9958, 0.45 ) }
    dend_43 { pt3dadd( -183.549, -73.4114, 23.0, 0.23 ) }
    dend_43 { pt3dadd( -186.883, -73.8357, 22.8501, 0.45 ) }
    dend_43 { pt3dadd( -188.043, -74.0336, 22.7447, 0.23 ) }
    dend_43 { pt3dadd( -189.948, -74.4371, 22.498, 0.68 ) }
    dend_43 { pt3dadd( -193.957, -75.3996, 21.8283, 0.23 ) }
    dend_43 { pt3dadd( -199.501, -76.8697, 20.9655, 0.68 ) }
    dend_43 { pt3dadd( -200.848, -77.2271, 20.7638, 0.23 ) }
    dend_43 { pt3dadd( -202.225, -77.605, 20.6315, 0.68 ) }
    dend_43 { pt3dadd( -205.006, -78.4035, 20.5182, 0.23 ) }
    dend_43 { pt3dadd( -206.896, -78.9283, 20.5601, 0.91 ) }
    dend_43 { pt3dadd( -211.385, -80.134, 20.9949, 0.23 ) }
    dend_43 { pt3dadd( -213.899, -80.7908, 21.3559, 1.14 ) }
    dend_43 { pt3dadd( -216.958, -81.531, 21.7465, 0.23 ) }
    dend_43 { pt3dadd( -218.98, -81.9555, 22.0036, 0.91 ) }
    dend_43 { pt3dadd( -222.074, -82.5126, 22.3677, 0.23 ) }
    dend_43 { pt3dadd( -223.758, -82.783, 22.5284, 0.68 ) }
    dend_43 { pt3dadd( -225.674, -83.0473, 22.6315, 0.23 ) }
    dend_43 { pt3dadd( -228.165, -83.3878, 22.7923, 0.68 ) }
    dend_43 { pt3dadd( -230.41, -83.6622, 22.9495, 0.23 ) }
    dend_43 { pt3dadd( -232.342, -83.9708, 23.121, 0.91 ) }
    dend_43 { pt3dadd( -233.704, -84.2518, 23.2555, 0.23 ) }
    dend_43 { pt3dadd( -236.159, -84.8545, 23.4913, 0.45 ) }
    dend_43 { pt3dadd( -237.284, -85.1541, 23.6067, 0.23 ) }
    dend_43 { pt3dadd( -239.974, -85.8873, 23.872, 0.45 ) }
    dend_43 { pt3dadd( -244.377, -87.0197, 24.2424, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( -246.548, -87.5776, 24.4377, 0.23 ) }
    dend_43 { pt3dadd( -249.593, -88.3504, 24.728, 0.68 ) }
    dend_43 { pt3dadd( -253.295, -89.2615, 25.1025, 0.23 ) }
    dend_43 { pt3dadd( -255.465, -89.7567, 25.3259, 0.23 ) }
    dend_43 { pt3dadd( -258.92, -90.4531, 25.678, 0.91 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 5/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -169.133, -72.5832, 21.6226, 0.23 ) }
    dend_40 { pt3dadd( -172.442, -74.1689, 19.8903, 0.23 ) }
    dend_40 { pt3dadd( -173.545, -74.6235, 19.3989, 0.68 ) }
    dend_40 { pt3dadd( -175.551, -75.3716, 18.6662, 0.23 ) }
    dend_40 { pt3dadd( -177.167, -75.942, 18.1409, 0.91 ) }
    dend_40 { pt3dadd( -179.456, -76.75, 17.3968, 0.23 ) }
    dend_40 { pt3dadd( -181.744, -77.5578, 16.653, 0.45 ) }
    dend_40 { pt3dadd( -183.934, -78.2548, 16.1452, 0.23 ) }
    dend_40 { pt3dadd( -186.528, -79.0525, 15.5224, 0.68 ) }
    dend_40 { pt3dadd( -187.235, -79.2621, 15.3558, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 15/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.78432, -13.1885, 11.5552, 1.14 ) }
    dend_30 { pt3dadd( 2.37545, -14.948, 14.6736, 1.14 ) }
    dend_30 { pt3dadd( 3.22101, -17.0873, 18.2797, 1.14 ) }
    dend_30 { pt3dadd( 4.05514, -18.9271, 21.1862, 0.68 ) }
    dend_30 { pt3dadd( 4.74049, -20.4386, 23.5743, 0.68 ) }
    dend_30 { pt3dadd( 5.09651, -21.2239, 24.8148, 0.91 ) }
    dend_30 { pt3dadd( 5.75558, -22.6775, 27.1113, 0.68 ) }
    dend_30 { pt3dadd( 6.39281, -23.9938, 29.0286, 1.14 ) }
    dend_30 { pt3dadd( 6.94362, -24.9238, 30.2509, 1.36 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 1.78432, -13.1885, 11.5552, 0.23 ) }
    dend_29 { pt3dadd( 2.95094, -17.2868, 10.4279, 0.23 ) }
    dend_29 { pt3dadd( 4.22661, -22.1371, 8.82038, 0.23 ) }
    dend_29 { pt3dadd( 5.743, -27.834, 6.88065, 0.23 ) }
    dend_29 { pt3dadd( 6.80801, -31.5533, 5.63858, 1.82 ) }
    dend_29 { pt3dadd( 7.51537, -34.2273, 4.679, 1.82 ) }
    dend_29 { pt3dadd( 8.40898, -37.5953, 3.45026, 0.68 ) }
    dend_29 { pt3dadd( 9.31782, -41.2879, 1.97678, 0.23 ) }
    dend_29 { pt3dadd( 10.0506, -44.7284, 0.737553, 0.23 ) }
    dend_29 { pt3dadd( 10.4058, -47.0073, -0.147528, 0.91 ) }
    dend_29 { pt3dadd( 10.9234, -51.1871, -1.91788, 0.23 ) }
    dend_29 { pt3dadd( 11.0887, -53.4747, -2.83574, 0.23 ) }
    dend_29 { pt3dadd( 11.1411, -57.3568, -4.19752, 0.23 ) }
    dend_29 { pt3dadd( 11.0471, -59.1774, -4.6773, 0.68 ) }
    dend_29 { pt3dadd( 10.5662, -63.687, -5.70842, 0.23 ) }
    dend_29 { pt3dadd( 10.3239, -65.4521, -6.02064, 1.36 ) }
    dend_29 { pt3dadd( 9.87074, -68.7725, -6.34207, 0.23 ) }
    dend_29 { pt3dadd( 9.56949, -70.8901, -6.46737, 0.23 ) }
    dend_29 { pt3dadd( 9.23393, -74.0894, -6.44358, 0.91 ) }
    dend_29 { pt3dadd( 9.18097, -76.977, -6.23798, 0.91 ) }
    dend_29 { pt3dadd( 9.30019, -78.9622, -6.05547, 0.91 ) }
    dend_29 { pt3dadd( 9.9782, -83.8122, -5.77403, 0.23 ) }
    dend_29 { pt3dadd( 10.5375, -86.2895, -5.75104, 0.23 ) }
    dend_29 { pt3dadd( 11.4857, -89.6846, -5.94418, 0.91 ) }
    dend_29 { pt3dadd( 12.8423, -93.8401, -6.37527, 0.23 ) }
    dend_29 { pt3dadd( 14.1352, -97.4663, -6.8864, 0.45 ) }
    dend_29 { pt3dadd( 15.9235, -102.146, -7.69469, 0.23 ) }
    dend_29 { pt3dadd( 17.5492, -106.367, -8.54346, 0.68 ) }
    dend_29 { pt3dadd( 19.3752, -111.446, -9.73394, 0.23 ) }
    dend_29 { pt3dadd( 20.1401, -113.938, -10.361, 1.14 ) }
    dend_29 { pt3dadd( 20.3234, -114.666, -10.5337, 1.14 ) }
    dend_29 { pt3dadd( 20.7117, -116.435, -10.8504, 1.14 ) }
    dend_29 { pt3dadd( 21.4832, -120.385, -11.4131, 0.23 ) }
    dend_29 { pt3dadd( 22.0584, -123.379, -11.7444, 0.91 ) }
    dend_29 { pt3dadd( 23.0126, -128.091, -12.1589, 0.23 ) }
    dend_29 { pt3dadd( 23.4513, -130.217, -12.3373, 1.14 ) }
    dend_29 { pt3dadd( 24.4537, -134.944, -12.7732, 0.23 ) }
    dend_29 { pt3dadd( 24.9803, -137.404, -13.0035, 1.14 ) }
    dend_29 { pt3dadd( 25.7329, -140.975, -13.308, 0.23 ) }
    dend_29 { pt3dadd( 26.08, -142.84, -13.432, 1.14 ) }
    dend_29 { pt3dadd( 26.4266, -144.986, -13.5666, 1.14 ) }
    dend_29 { pt3dadd( 27.0609, -150.089, -13.943, 0.23 ) }
    dend_29 { pt3dadd( 27.3107, -153.079, -14.1642, 1.14 ) }
    dend_29 { pt3dadd( 27.5219, -157.069, -14.4892, 0.23 ) }
    dend_29 { pt3dadd( 27.6202, -159.837, -14.721, 1.14 ) }
    dend_29 { pt3dadd( 27.7995, -164.187, -15.0573, 0.23 ) }
    dend_29 { pt3dadd( 27.9245, -166.701, -15.2567, 1.82 ) }
    dend_29 { pt3dadd( 28.2282, -171.442, -15.6019, 0.23 ) }
    dend_29 { pt3dadd( 28.3191, -172.661, -15.7028, 0.68 ) }
    dend_29 { pt3dadd( 28.4908, -174.89, -15.9001, 0.23 ) }
    dend_29 { pt3dadd( 28.764, -178.131, -16.1567, 0.91 ) }
    dend_29 { pt3dadd( 29.0091, -181.455, -16.365, 0.23 ) }
    dend_29 { pt3dadd( 29.1214, -182.891, -16.3316, 1.14 ) }
    dend_29 { pt3dadd( 29.352, -185.2, -16.1648, 0.23 ) }
    dend_29 { pt3dadd( 29.5297, -186.739, -15.9986, 0.68 ) }
    dend_29 { pt3dadd( 30.0702, -191.042, -15.4743, 0.23 ) }
    dend_29 { pt3dadd( 30.2901, -192.569, -15.2658, 1.14 ) }
    dend_29 { pt3dadd( 31.2628, -198.277, -14.405, 0.23 ) }
    dend_29 { pt3dadd( 31.7679, -201.192, -13.785, 0.91 ) }
    dend_29 { pt3dadd( 32.0046, -202.573, -13.431, 0.91 ) }
    dend_29 { pt3dadd( 32.4905, -205.514, -12.5867, 0.23 ) }
    dend_29 { pt3dadd( 32.7368, -207.258, -12.0568, 1.14 ) }
    dend_29 { pt3dadd( 32.8826, -208.661, -11.6422, 1.14 ) }
    dend_29 { pt3dadd( 33.1433, -215.103, -10.2823, 0.23 ) }
    dend_29 { pt3dadd( 33.1491, -217.731, -9.83058, 0.91 ) }
    dend_29 { pt3dadd( 33.1326, -218.809, -9.7391, 0.91 ) }
    dend_29 { pt3dadd( 33.0768, -222.176, -9.72728, 0.23 ) }
    dend_29 { pt3dadd( 33.0633, -223.847, -9.88741, 0.68 ) }
    dend_29 { pt3dadd( 33.0944, -228.145, -10.858, 0.23 ) }
    dend_29 { pt3dadd( 33.1118, -229.549, -11.3685, 0.91 ) }
    dend_29 { pt3dadd( 33.1405, -233.164, -12.7126, 0.23 ) }
    dend_29 { pt3dadd( 33.1533, -235.242, -13.428, 1.14 ) }
    dend_29 { pt3dadd( 33.1583, -236.311, -13.7618, 1.14 ) }
    dend_29 { pt3dadd( 33.1554, -237.856, -14.1409, 1.59 ) }
    dend_29 { pt3dadd( 33.0873, -241.372, -14.6512, 0.23 ) }
    dend_29 { pt3dadd( 33.0116, -243.04, -14.8666, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_29 { pt3dadd( 32.8485, -245.93, -15.1565, 0.23 ) }
    dend_29 { pt3dadd( 32.8127, -246.848, -15.2788, 0.68 ) }
    dend_29 { pt3dadd( 32.8019, -248.369, -15.5411, 0.23 ) }
    dend_29 { pt3dadd( 32.8778, -249.833, -15.8291, 0.91 ) }
    dend_29 { pt3dadd( 33.1643, -251.744, -16.3133, 0.23 ) }
    dend_29 { pt3dadd( 33.5103, -253.575, -16.6921, 1.14 ) }
    dend_29 { pt3dadd( 34.2033, -256.905, -17.0214, 0.23 ) }
    dend_29 { pt3dadd( 34.7365, -259.363, -17.0931, 0.23 ) }
    dend_29 { pt3dadd( 35.2371, -261.662, -17.0422, 0.91 ) }
    dend_29 { pt3dadd( 36.1951, -266.11, -16.7308, 0.23 ) }
    dend_29 { pt3dadd( 37.0506, -270.215, -16.2507, 1.14 ) }
    dend_29 { pt3dadd( 38.2742, -276.214, -15.2212, 0.23 ) }
    dend_29 { pt3dadd( 38.5917, -277.968, -14.8363, 0.91 ) }
    dend_29 { pt3dadd( 38.752, -279.055, -14.5697, 0.91 ) }
    dend_29 { pt3dadd( 39.0512, -282.193, -13.7832, 0.23 ) }
    dend_29 { pt3dadd( 39.1019, -284.69, -13.2723, 1.14 ) }
    dend_29 { pt3dadd( 38.9192, -288.389, -12.8891, 0.23 ) }
    dend_29 { pt3dadd( 38.7085, -289.95, -12.839, 0.68 ) }
    dend_29 { pt3dadd( 38.1883, -292.809, -12.7004, 0.23 ) }
    dend_29 { pt3dadd( 37.8853, -294.173, -12.6204, 1.14 ) }
    dend_29 { pt3dadd( 36.7971, -298.492, -12.3079, 0.23 ) }
    dend_29 { pt3dadd( 36.4372, -300.024, -12.1825, 0.91 ) }
    dend_29 { pt3dadd( 36.2828, -300.794, -12.1184, 0.91 ) }
    dend_29 { pt3dadd( 35.8056, -304.087, -11.5254, 0.23 ) }
    dend_29 { pt3dadd( 35.6496, -305.496, -11.0871, 0.91 ) }
    dend_29 { pt3dadd( 35.3411, -308.551, -9.84551, 0.23 ) }
    dend_29 { pt3dadd( 35.2125, -310.062, -9.12724, 1.14 ) }
    dend_29 { pt3dadd( 34.9527, -312.573, -7.94595, 0.23 ) }
    dend_29 { pt3dadd( 34.5789, -315.566, -6.59939, 0.91 ) }
    dend_29 { pt3dadd( 34.2682, -318.333, -5.67495, 0.23 ) }
    dend_29 { pt3dadd( 34.1431, -319.867, -5.28112, 0.91 ) }
    dend_29 { pt3dadd( 33.9392, -322.759, -4.75809, 0.23 ) }
    dend_29 { pt3dadd( 33.7551, -325.7, -4.35536, 1.14 ) }
    dend_29 { pt3dadd( 33.7405, -326.793, -4.29398, 1.14 ) }
    dend_29 { pt3dadd( 33.9849, -331.888, -4.66949, 0.23 ) }
    dend_29 { pt3dadd( 34.2247, -334.056, -5.04305, 0.23 ) }
    dend_29 { pt3dadd( 34.382, -334.955, -5.24723, 0.68 ) }
    dend_29 { pt3dadd( 34.6908, -347.577, -5.34966, 0.68 ) }
    dend_29 { pt3dadd( 36.5427, -360.04, -4.4105, 0.68 ) }
    dend_29 { pt3dadd( 40.1216, -371.99, -2.1497, 0.68 ) }
    dend_29 { pt3dadd( 44.6491, -383.595, 0.363152, 0.68 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 41/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 7.787, -26.9414, -8.14948, 1.59 ) }
    dend_23 { pt3dadd( 7.68842, -27.2605, -8.23706, 1.59 ) }
    dend_23 { pt3dadd( 6.96758, -29.5938, -8.87758, 1.14 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 44/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 7.787, -26.9414, -8.14948, 0.23 ) }
    dend_20 { pt3dadd( 8.06625, -27.8228, -9.64404, 0.23 ) }
    dend_20 { pt3dadd( 8.54712, -29.1206, -12.0047, 0.68 ) }
    dend_20 { pt3dadd( 9.10737, -30.5389, -14.5493, 0.23 ) }
    dend_20 { pt3dadd( 9.76467, -31.9147, -17.1669, 0.91 ) }
    dend_20 { pt3dadd( 10.8958, -34.2029, -21.575, 0.91 ) }
    dend_20 { pt3dadd( 11.5433, -35.5532, -24.1403, 0.23 ) }
    dend_20 { pt3dadd( 12.12, -36.5679, -26.2074, 0.23 ) }
    dend_20 { pt3dadd( 12.4552, -37.0408, -27.2079, 1.59 ) }
    dend_20 { pt3dadd( 13.894, -38.7585, -30.8091, 0.23 ) }
    dend_20 { pt3dadd( 14.2613, -39.1236, -31.5133, 0.23 ) }
    dend_20 { pt3dadd( 14.8134, -39.6501, -32.2633, 0.23 ) }
    dend_20 { pt3dadd( 15.5212, -40.2134, -32.9562, 0.23 ) }
    dend_20 { pt3dadd( 16.746, -41.0317, -33.978, 1.14 ) }
    dend_20 { pt3dadd( 18.084, -41.81, -35.029, 0.68 ) }
    dend_20 { pt3dadd( 19.4194, -42.6156, -36.0872, 0.68 ) }
    dend_20 { pt3dadd( 20.6492, -43.4147, -37.1561, 0.68 ) }
    dend_20 { pt3dadd( 22.0683, -44.337, -38.719, 0.23 ) }
    dend_20 { pt3dadd( 23.5552, -45.4271, -40.7668, 0.23 ) }
    dend_20 { pt3dadd( 24.5744, -46.242, -42.3292, 0.68 ) }
    dend_20 { pt3dadd( 25.599, -47.0782, -44.0362, 0.23 ) }
    dend_20 { pt3dadd( 26.2646, -47.6241, -45.2385, 0.91 ) }
    dend_20 { pt3dadd( 28.5428, -49.5673, -49.8071, 0.23 ) }
    dend_20 { pt3dadd( 29.1444, -50.2131, -51.2673, 0.23 ) }
    dend_20 { pt3dadd( 29.774, -50.9452, -52.9447, 0.68 ) }
    dend_20 { pt3dadd( 33.3463, -54.7586, -61.2934, 0.68 ) }
    dend_20 { pt3dadd( 36.3742, -59.1358, -69.5447, 0.68 ) }
    dend_20 { pt3dadd( 40.4919, -63.8142, -77.1168, 0.68 ) }
    dend_20 { pt3dadd( 44.7581, -69.5833, -83.7094, 0.68 ) }
    dend_20 { pt3dadd( 47.6254, -75.4778, -90.898, 0.68 ) }
    dend_20 { pt3dadd( 49.506, -82.0925, -97.7033, 0.68 ) }
    dend_20 { pt3dadd( 51.1674, -89.5582, -103.523, 0.68 ) }
    dend_20 { pt3dadd( 55.0861, -96.6494, -108.771, 0.68 ) }
    dend_20 { pt3dadd( 58.7667, -104.05, -113.709, 0.68 ) }
    dend_20 { pt3dadd( 62.9932, -111.705, -117.71, 0.68 ) }
    dend_20 { pt3dadd( 67.5713, -119.436, -121.134, 0.68 ) }
    dend_20 { pt3dadd( 71.7198, -127.77, -123.358, 0.68 ) }
    dend_20 { pt3dadd( 75.6216, -136.233, -125.486, 0.68 ) }
    dend_20 { pt3dadd( 78.4294, -144.874, -128.367, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 83/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 176.097, -88.5859, -35.8145, 0.23 ) }
    dend_18 { pt3dadd( 187.058, -93.373, -38.1036, 0.23 ) }
    dend_18 { pt3dadd( 197.388, -99.418, -39.9859, 0.23 ) }
    dend_18 { pt3dadd( 207.489, -105.946, -39.4105, 0.23 ) }
    dend_18 { pt3dadd( 215.981, -114.21, -38.1549, 0.23 ) }
    dend_18 { pt3dadd( 225.125, -121.203, -34.9393, 0.23 ) }
    dend_18 { pt3dadd( 233.759, -128.39, -30.9453, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 90/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 176.097, -88.5859, -35.8145, 0.23 ) }
    dend_17 { pt3dadd( 185.091, -92.4576, -37.6805, 0.23 ) }
    dend_17 { pt3dadd( 194.626, -95.2104, -38.9243, 0.23 ) }
    dend_17 { pt3dadd( 203.432, -99.3556, -41.0393, 0.23 ) }
    dend_17 { pt3dadd( 211.396, -104.451, -44.0755, 0.23 ) }
    dend_17 { pt3dadd( 218.687, -110.211, -47.5027, 0.23 ) }
    dend_17 { pt3dadd( 226.789, -115.467, -49.7226, 0.23 ) }
    // Section: dend_14, id: dend_14, parent: dend_4 (entry count 97/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 13.9989, 18.31, -2.21132, 0.23 ) }
    dend_14 { pt3dadd( 15.7814, 19.6972, -3.15826, 0.23 ) }
    dend_14 { pt3dadd( 18.2003, 21.5623, -4.52678, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( 20.7486, 23.4714, -5.88143, 0.23 ) }
    dend_14 { pt3dadd( 22.133, 24.5285, -6.57503, 0.91 ) }
    dend_14 { pt3dadd( 23.017, 25.2354, -7.02932, 0.91 ) }
    dend_14 { pt3dadd( 24.45, 26.43, -7.76593, 0.23 ) }
    dend_14 { pt3dadd( 26.6042, 28.2435, -8.76086, 1.59 ) }
    dend_14 { pt3dadd( 28.5154, 29.9279, -9.60872, 0.23 ) }
    dend_14 { pt3dadd( 29.6401, 30.9867, -10.1135, 1.14 ) }
    dend_14 { pt3dadd( 31.5976, 32.7797, -10.9318, 0.23 ) }
    dend_14 { pt3dadd( 32.4535, 33.5365, -11.3008, 0.23 ) }
    dend_14 { pt3dadd( 34.0272, 34.964, -12.0025, 1.14 ) }
    dend_14 { pt3dadd( 35.2039, 36.0672, -12.6327, 0.23 ) }
    dend_14 { pt3dadd( 35.9873, 36.8085, -13.1274, 1.14 ) }
    dend_14 { pt3dadd( 37.1542, 37.8869, -13.9006, 1.14 ) }
    dend_14 { pt3dadd( 39.257, 39.7471, -15.2487, 0.23 ) }
    dend_14 { pt3dadd( 41.0479, 41.2769, -16.3617, 1.59 ) }
    dend_14 { pt3dadd( 43.7018, 43.4687, -17.958, 0.23 ) }
    dend_14 { pt3dadd( 45.4133, 44.8591, -18.8889, 0.68 ) }
    dend_14 { pt3dadd( 47.7391, 46.6729, -19.9906, 0.23 ) }
    dend_14 { pt3dadd( 49.277, 47.8682, -20.6116, 1.36 ) }
    dend_14 { pt3dadd( 50.9203, 49.1068, -21.1202, 0.23 ) }
    dend_14 { pt3dadd( 52.9367, 50.6204, -21.5896, 1.36 ) }
    dend_14 { pt3dadd( 56.453, 53.3298, -22.1384, 0.23 ) }
    dend_14 { pt3dadd( 59.0887, 55.4592, -22.499, 0.23 ) }
    dend_14 { pt3dadd( 60.6042, 56.7841, -22.6602, 0.23 ) }
    dend_14 { pt3dadd( 62.3058, 58.4219, -22.8116, 2.05 ) }
    dend_14 { pt3dadd( 64.2056, 60.412, -22.9297, 0.23 ) }
    dend_14 { pt3dadd( 66.1383, 62.6447, -22.9632, 0.23 ) }
    dend_14 { pt3dadd( 67.2332, 64.0151, -22.9319, 1.59 ) }
    dend_14 { pt3dadd( 68.9295, 66.2377, -22.8597, 0.23 ) }
    dend_14 { pt3dadd( 69.5258, 67.0111, -22.8287, 1.14 ) }
    dend_14 { pt3dadd( 70.3451, 68.1112, -22.7756, 1.14 ) }
    dend_14 { pt3dadd( 71.151, 69.1808, -22.7385, 0.23 ) }
    dend_14 { pt3dadd( 72.5674, 71.0957, -22.7025, 1.14 ) }
    dend_14 { pt3dadd( 73.6691, 72.4746, -22.6189, 0.23 ) }
    dend_14 { pt3dadd( 74.466, 73.3773, -22.5925, 0.23 ) }
    dend_14 { pt3dadd( 75.3976, 74.3623, -22.6129, 0.91 ) }
    dend_14 { pt3dadd( 76.6394, 75.6294, -22.6902, 0.23 ) }
    dend_14 { pt3dadd( 77.8662, 76.8669, -22.8061, 1.36 ) }
    dend_14 { pt3dadd( 79.9129, 79.0188, -23.2078, 0.23 ) }
    dend_14 { pt3dadd( 81.9782, 81.2675, -23.8139, 0.23 ) }
    dend_14 { pt3dadd( 83.0006, 82.3537, -24.2299, 0.91 ) }
    dend_14 { pt3dadd( 83.6477, 83.0315, -24.5465, 0.91 ) }
    dend_14 { pt3dadd( 85.0385, 84.4658, -25.4225, 0.23 ) }
    dend_14 { pt3dadd( 86.43, 85.8396, -26.4739, 0.91 ) }
    dend_14 { pt3dadd( 88.0488, 87.4603, -27.9285, 0.23 ) }
    dend_14 { pt3dadd( 89.4268, 88.7943, -29.1478, 1.14 ) }
    dend_14 { pt3dadd( 90.0592, 89.3463, -29.6739, 1.14 ) }
    dend_14 { pt3dadd( 91.6561, 90.6369, -30.9029, 0.23 ) }
    dend_14 { pt3dadd( 92.6632, 91.3509, -31.6043, 1.14 ) }
    dend_14 { pt3dadd( 94.3586, 92.4342, -32.5481, 0.23 ) }
    dend_14 { pt3dadd( 95.1886, 92.9494, -32.9888, 1.14 ) }
    dend_14 { pt3dadd( 98.1624, 94.7681, -34.4571, 0.23 ) }
    dend_14 { pt3dadd( 99.2638, 95.4383, -34.9703, 0.23 ) }
    dend_14 { pt3dadd( 101.438, 96.7879, -35.8617, 1.82 ) }
    dend_14 { pt3dadd( 103.814, 98.2796, -36.7867, 0.23 ) }
    dend_14 { pt3dadd( 106.72, 100.113, -37.844, 1.36 ) }
    dend_14 { pt3dadd( 107.529, 100.651, -38.1236, 0.23 ) }
    dend_14 { pt3dadd( 108.652, 101.451, -38.4674, 0.68 ) }
    dend_14 { pt3dadd( 110.7, 102.959, -39.0335, 0.23 ) }
    dend_14 { pt3dadd( 111.756, 103.822, -39.2749, 0.23 ) }
    dend_14 { pt3dadd( 112.635, 104.577, -39.4489, 1.14 ) }
    dend_14 { pt3dadd( 113.545, 105.372, -39.5516, 1.14 ) }
    dend_14 { pt3dadd( 114.261, 106.048, -39.6395, 0.23 ) }
    dend_14 { pt3dadd( 114.784, 106.565, -39.7437, 0.23 ) }
    dend_14 { pt3dadd( 115.649, 107.509, -39.9719, 1.14 ) }
    dend_14 { pt3dadd( 116.312, 108.299, -40.1568, 1.14 ) }
    dend_14 { pt3dadd( 117.367, 109.663, -40.558, 0.23 ) }
    dend_14 { pt3dadd( 117.929, 110.411, -40.8105, 0.91 ) }
    dend_14 { pt3dadd( 119.094, 112.017, -41.3729, 0.23 ) }
    dend_14 { pt3dadd( 120.33, 113.802, -42.0029, 1.14 ) }
    dend_14 { pt3dadd( 121.428, 115.378, -42.5644, 0.23 ) }
    dend_14 { pt3dadd( 122.722, 117.217, -43.3068, 1.14 ) }
    dend_14 { pt3dadd( 123.377, 118.13, -43.6977, 0.23 ) }
    dend_14 { pt3dadd( 124.138, 119.166, -44.1322, 0.68 ) }
    dend_14 { pt3dadd( 125.369, 120.736, -44.7587, 0.23 ) }
    dend_14 { pt3dadd( 125.823, 121.278, -45.0158, 0.91 ) }
    dend_14 { pt3dadd( 127.733, 123.567, -46.1133, 0.23 ) }
    dend_14 { pt3dadd( 128.444, 124.461, -46.5027, 0.23 ) }
    dend_14 { pt3dadd( 129.241, 125.583, -46.9871, 0.23 ) }
    dend_14 { pt3dadd( 130.088, 126.998, -47.6016, 0.91 ) }
    dend_14 { pt3dadd( 130.999, 128.942, -48.3828, 0.23 ) }
    dend_14 { pt3dadd( 131.578, 130.84, -49.0822, 1.14 ) }
    dend_14 { pt3dadd( 131.722, 131.749, -49.3706, 0.23 ) }
    dend_14 { pt3dadd( 131.802, 133.013, -49.7555, 0.91 ) }
    dend_14 { pt3dadd( 131.793, 135.247, -50.3553, 0.23 ) }
    dend_14 { pt3dadd( 131.699, 136.767, -50.6927, 0.91 ) }
    dend_14 { pt3dadd( 131.508, 138.796, -51.034, 0.23 ) }
    dend_14 { pt3dadd( 131.363, 140.024, -51.2949, 0.91 ) }
    dend_14 { pt3dadd( 131.18, 141.566, -51.6559, 0.23 ) }
    dend_14 { pt3dadd( 130.989, 143.486, -52.1412, 0.23 ) }
    dend_14 { pt3dadd( 130.897, 144.39, -52.3605, 0.91 ) }
    dend_14 { pt3dadd( 130.778, 145.597, -52.6642, 0.23 ) }
    dend_14 { pt3dadd( 130.591, 147.99, -53.2629, 1.14 ) }
    dend_14 { pt3dadd( 130.518, 148.882, -53.4894, 1.14 ) }
    dend_14 { pt3dadd( 130.251, 152.09, -54.2474, 0.23 ) }
    dend_14 { pt3dadd( 130.1, 153.781, -54.6591, 0.23 ) }
    dend_14 { pt3dadd( 130.056, 154.38, -54.7969, 0.45 ) }
    dend_14 { pt3dadd( 130.019, 155.152, -54.9427, 0.23 ) }
    dend_14 { pt3dadd( 129.99, 156.069, -55.0135, 0.23 ) }
    dend_14 { pt3dadd( 129.945, 157.92, -55.1283, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_14 { pt3dadd( 137.455, 165.846, -56.6084, 0.23 ) }
    dend_14 { pt3dadd( 144.565, 173.585, -59.9911, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 13.9989, 18.31, -2.21132, 0.23 ) }
    dend_5 { pt3dadd( 15.9953, 19.1935, -2.53249, 0.23 ) }
    dend_5 { pt3dadd( 19.5087, 20.7779, -3.11183, 0.91 ) }
    dend_5 { pt3dadd( 22.4811, 22.0909, -3.6797, 0.23 ) }
    dend_5 { pt3dadd( 24.1584, 22.8143, -4.00377, 0.91 ) }
    dend_5 { pt3dadd( 26.0003, 23.5849, -4.33508, 0.23 ) }
    dend_5 { pt3dadd( 27.7053, 24.2881, -4.61091, 0.23 ) }
    dend_5 { pt3dadd( 29.208, 24.9074, -4.86732, 0.91 ) }
    dend_5 { pt3dadd( 30.7692, 25.5834, -5.13516, 0.23 ) }
    dend_5 { pt3dadd( 32.6176, 26.3841, -5.3281, 0.91 ) }
    dend_5 { pt3dadd( 34.8512, 27.372, -5.54563, 0.23 ) }
    dend_5 { pt3dadd( 36.9292, 28.3031, -5.6847, 0.68 ) }
    dend_5 { pt3dadd( 38.3851, 28.9586, -5.78283, 0.23 ) }
    dend_5 { pt3dadd( 39.7996, 29.6104, -5.8657, 1.14 ) }
    dend_5 { pt3dadd( 41.8621, 30.6286, -5.92912, 0.23 ) }
    dend_5 { pt3dadd( 43.046, 31.2509, -5.99852, 0.23 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 18/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 5.32327, 211.867, -84.5473, 0.23 ) }
    dend_3 { pt3dadd( 5.71943, 219.538, -88.1865, 0.23 ) }
    dend_3 { pt3dadd( 5.00052, 226.513, -93.0627, 0.23 ) }
    dend_3 { pt3dadd( 5.31552, 233.77, -97.5381, 0.23 ) }
    dend_3 { pt3dadd( 3.88332, 241.188, -101.42, 0.23 ) }
    dend_3 { pt3dadd( 0.756992, 247.932, -105.603, 0.23 ) }
    dend_3 { pt3dadd( -3.68832, 254.593, -108.532, 0.23 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 25/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.32327, 211.867, -84.5473, 0.23 ) }
    dend_2 { pt3dadd( 4.86872, 222.117, -88.2458, 0.23 ) }
    dend_2 { pt3dadd( 5.87629, 232.576, -91.0875, 0.23 ) }
    dend_2 { pt3dadd( 7.64041, 243.231, -92.3104, 0.23 ) }
    dend_2 { pt3dadd( 8.40372, 253.976, -93.6842, 0.23 ) }
    dend_2 { pt3dadd( 9.64527, 264.764, -93.5665, 0.23 ) }
    dend_2 { pt3dadd( 12.0867, 275.352, -94.0484, 0.23 ) }
    // Section: dend_70, id: dend_70, parent: dend_62 (entry count 32/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -21.358, 17.0665, -14.2071, 0.23 ) }
    dend_70 { pt3dadd( -23.2781, 15.4346, -16.4251, 0.23 ) }
    dend_70 { pt3dadd( -24.4113, 14.5279, -17.7872, 0.23 ) }
    dend_70 { pt3dadd( -25.4238, 13.7097, -18.9597, 0.91 ) }
    dend_70 { pt3dadd( -27.3717, 12.1233, -21.0266, 0.68 ) }
    dend_70 { pt3dadd( -29.1243, 10.7074, -22.7005, 0.23 ) }
    dend_70 { pt3dadd( -30.4423, 9.70047, -23.8016, 0.68 ) }
    dend_70 { pt3dadd( -32.6118, 8.04438, -25.5215, 0.23 ) }
    dend_70 { pt3dadd( -33.5878, 7.38045, -26.1426, 0.91 ) }
    dend_70 { pt3dadd( -35.6604, 6.13424, -27.196, 0.23 ) }
    dend_70 { pt3dadd( -36.9787, 5.41758, -27.6476, 1.14 ) }
    dend_70 { pt3dadd( -39.7304, 3.9004, -28.2649, 0.23 ) }
    dend_70 { pt3dadd( -40.852, 3.23834, -28.4616, 0.68 ) }
    dend_70 { pt3dadd( -42.0322, 2.50855, -28.6051, 0.23 ) }
    dend_70 { pt3dadd( -42.9461, 1.89645, -28.7152, 0.23 ) }
    dend_70 { pt3dadd( -43.6714, 1.37081, -28.785, 0.23 ) }
    dend_70 { pt3dadd( -45.468, -0.180809, -29.0125, 1.14 ) }
    dend_70 { pt3dadd( -47.3375, -2.04637, -29.2522, 0.23 ) }
    dend_70 { pt3dadd( -49.3082, -4.20707, -29.6515, 0.91 ) }
    dend_70 { pt3dadd( -50.8493, -5.97892, -30.0444, 0.23 ) }
    dend_70 { pt3dadd( -51.9482, -7.34205, -30.363, 1.14 ) }
    dend_70 { pt3dadd( -53.928, -9.82386, -30.9899, 0.23 ) }
    dend_70 { pt3dadd( -54.9495, -11.1404, -31.3524, 0.91 ) }
    dend_70 { pt3dadd( -56.5877, -13.3677, -31.9539, 0.23 ) }
    dend_70 { pt3dadd( -57.5486, -14.8054, -32.3536, 1.14 ) }
    dend_70 { pt3dadd( -58.794, -16.7684, -33.0304, 0.23 ) }
    dend_70 { pt3dadd( -66.7361, -25.6051, -35.139, 0.23 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 59/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -21.358, 17.0665, -14.2071, 0.23 ) }
    dend_63 { pt3dadd( -20.525, 16.8714, -15.2763, 0.23 ) }
    dend_63 { pt3dadd( -19.4734, 16.6803, -16.5739, 0.91 ) }
    dend_63 { pt3dadd( -18.6208, 16.5287, -17.5672, 0.23 ) }
    dend_63 { pt3dadd( -18.3681, 16.4924, -17.8783, 0.68 ) }
    dend_63 { pt3dadd( -17.7655, 16.4294, -18.6718, 0.23 ) }
    dend_63 { pt3dadd( -17.3791, 16.4083, -19.2445, 1.14 ) }
    dend_63 { pt3dadd( -16.4471, 16.3759, -20.7221, 0.23 ) }
    dend_63 { pt3dadd( -15.8031, 16.349, -21.9641, 0.91 ) }
    dend_63 { pt3dadd( -14.9087, 16.257, -23.9879, 0.23 ) }
    dend_63 { pt3dadd( -14.5517, 16.2019, -24.9269, 1.36 ) }
    dend_63 { pt3dadd( -13.8549, 16.0743, -27.2236, 0.23 ) }
    dend_63 { pt3dadd( -13.6045, 16.0028, -28.3657, 0.91 ) }
    dend_63 { pt3dadd( -13.2271, 15.7605, -31.2448, 0.23 ) }
    dend_63 { pt3dadd( -13.1124, 15.6307, -32.651, 0.68 ) }
    dend_63 { pt3dadd( -13.0557, 15.4449, -34.1594, 0.91 ) }
    dend_63 { pt3dadd( -13.0494, 15.191, -35.8477, 0.23 ) }
    dend_63 { pt3dadd( -13.1142, 15.029, -36.7869, 0.23 ) }
    dend_63 { pt3dadd( -13.2696, 14.8887, -37.8272, 1.14 ) }
    dend_63 { pt3dadd( -11.3183, 14.651, -43.3875, 1.14 ) }
    dend_63 { pt3dadd( -8.18065, 15.3098, -48.3257, 1.14 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 80/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -68.4783, 45.5105, 0.887878, 0.23 ) }
    dend_59 { pt3dadd( -69.6916, 47.6285, 1.42841, 0.23 ) }
    dend_59 { pt3dadd( -70.8452, 49.4901, 1.89404, 0.23 ) }
    dend_59 { pt3dadd( -71.3522, 50.2385, 2.07336, 0.91 ) }
    dend_59 { pt3dadd( -73.0075, 52.608, 2.72328, 0.23 ) }
    dend_59 { pt3dadd( -74.0149, 53.9958, 3.118, 0.91 ) }
    dend_59 { pt3dadd( -76.1489, 56.8342, 3.92559, 0.23 ) }
    dend_59 { pt3dadd( -77.4727, 58.5214, 4.50904, 1.14 ) }
    dend_59 { pt3dadd( -79.5739, 61.0496, 5.42546, 0.23 ) }
    dend_59 { pt3dadd( -81.1006, 62.8055, 6.0438, 0.91 ) }
    dend_59 { pt3dadd( -82.5081, 64.3065, 6.55352, 0.23 ) }
    dend_59 { pt3dadd( -83.6805, 65.5333, 7.06629, 0.91 ) }
    dend_59 { pt3dadd( -85.4084, 67.2184, 7.924, 0.23 ) }
    dend_59 { pt3dadd( -86.7921, 68.5121, 8.67394, 0.68 ) }
    dend_59 { pt3dadd( -87.8153, 69.3522, 9.22231, 0.23 ) }
    dend_59 { pt3dadd( -88.924, 70.1302, 9.81215, 0.68 ) }
    dend_59 { pt3dadd( -91.2796, 71.5574, 11.1129, 0.23 ) }
    dend_59 { pt3dadd( -92.4286, 72.141, 11.7703, 1.14 ) }
    dend_59 { pt3dadd( -94.2823, 72.9145, 12.8133, 0.23 ) }
    dend_59 { pt3dadd( -96.5475, 73.7333, 14.1437, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_59 { pt3dadd( -98.8911, 74.434, 15.4381, 0.68 ) }
    dend_59 { pt3dadd( -100.092, 74.7533, 16.0207, 0.23 ) }
    dend_59 { pt3dadd( -102.926, 75.4107, 17.1659, 0.68 ) }
    dend_59 { pt3dadd( -103.985, 75.6517, 17.5641, 0.23 ) }
    dend_59 { pt3dadd( -105.529, 76.0068, 18.0856, 0.68 ) }
    dend_59 { pt3dadd( -107.296, 76.4643, 18.5941, 0.23 ) }
    dend_59 { pt3dadd( -109.755, 77.1602, 19.1936, 0.91 ) }
    dend_59 { pt3dadd( -112.448, 78.0592, 19.8135, 0.23 ) }
    dend_59 { pt3dadd( -114.738, 78.94, 20.2892, 0.91 ) }
    dend_59 { pt3dadd( -117.074, 79.9948, 20.8877, 0.23 ) }
    dend_59 { pt3dadd( -118.16, 80.5326, 21.212, 0.23 ) }
    dend_59 { pt3dadd( -120.326, 81.7283, 21.8972, 0.91 ) }
    dend_59 { pt3dadd( -122.215, 82.9051, 22.5913, 0.23 ) }
    dend_59 { pt3dadd( -123.438, 83.7582, 23.0796, 0.68 ) }
    dend_59 { pt3dadd( -126.481, 86.0889, 24.3861, 0.23 ) }
    dend_59 { pt3dadd( -128.282, 87.6028, 25.1938, 0.68 ) }
    dend_59 { pt3dadd( -130.452, 89.5702, 26.1686, 0.23 ) }
    dend_59 { pt3dadd( -132.361, 91.5827, 27.1098, 0.23 ) }
    dend_59 { pt3dadd( -133.512, 92.9798, 27.7177, 0.23 ) }
    dend_59 { pt3dadd( -134.468, 94.37, 28.2306, 0.68 ) }
    dend_59 { pt3dadd( -134.965, 95.2581, 28.5064, 0.23 ) }
    dend_59 { pt3dadd( -135.316, 95.9997, 28.7355, 0.91 ) }
    dend_59 { pt3dadd( -136.798, 99.6267, 29.8787, 0.23 ) }
    dend_59 { pt3dadd( -137.35, 101.121, 30.2825, 0.23 ) }
    dend_59 { pt3dadd( -138.062, 103.281, 30.885, 0.23 ) }
    dend_59 { pt3dadd( -138.788, 105.444, 31.496, 0.68 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 26/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -68.4783, 45.5105, 0.887878, 0.45 ) }
    dend_58 { pt3dadd( -71.6335, 44.7914, 0.855246, 0.45 ) }
    dend_58 { pt3dadd( -75.6521, 43.7681, 0.936296, 0.91 ) }
    dend_58 { pt3dadd( -77.7602, 43.1498, 0.894534, 0.23 ) }
    dend_58 { pt3dadd( -80.9543, 41.9998, 0.69015, 0.91 ) }
    dend_58 { pt3dadd( -82.1118, 41.5403, 0.600829, 0.91 ) }
    dend_58 { pt3dadd( -83.5007, 40.9634, 0.472015, 0.23 ) }
    dend_58 { pt3dadd( -86.0842, 39.7953, 0.181975, 0.68 ) }
    dend_58 { pt3dadd( -89.0207, 38.3286, -0.16567, 0.23 ) }
    dend_58 { pt3dadd( -92.0153, 36.8177, -0.520874, 1.14 ) }
    dend_58 { pt3dadd( -93.7144, 35.9621, -0.750896, 1.14 ) }
    dend_58 { pt3dadd( -97.0823, 34.3211, -1.26226, 0.23 ) }
    dend_58 { pt3dadd( -99.0961, 33.4343, -1.57365, 1.14 ) }
    dend_58 { pt3dadd( -102.75, 31.9312, -2.17058, 0.23 ) }
    dend_58 { pt3dadd( -104.796, 31.1855, -2.42364, 0.23 ) }
    dend_58 { pt3dadd( -108.214, 30.0304, -2.75367, 0.23 ) }
    dend_58 { pt3dadd( -108.853, 29.8117, -2.78095, 0.91 ) }
    dend_58 { pt3dadd( -110.711, 29.1997, -2.7391, 1.59 ) }
    dend_58 { pt3dadd( -114.847, 27.9453, -2.42728, 0.23 ) }
    dend_58 { pt3dadd( -118.769, 26.8941, -1.92297, 1.36 ) }
    dend_58 { pt3dadd( -121.989, 26.1236, -1.32662, 0.91 ) }
    dend_58 { pt3dadd( -126.467, 25.1779, -0.242788, 0.23 ) }
    dend_58 { pt3dadd( -129.76, 24.5369, 0.648137, 1.14 ) }
    dend_58 { pt3dadd( -133.049, 23.9562, 1.63652, 0.23 ) }
    dend_58 { pt3dadd( -134.978, 23.7114, 2.2874, 0.23 ) }
    dend_58 { pt3dadd( -137.786, 23.4541, 3.22845, 0.68 ) }
    dend_58 { pt3dadd( -139.277, 23.367, 3.70894, 0.68 ) }
    dend_58 { pt3dadd( -141.398, 23.2734, 4.34311, 0.23 ) }
    dend_58 { pt3dadd( -144.104, 23.113, 5.14115, 0.91 ) }
    dend_58 { pt3dadd( -146.589, 22.9296, 5.79613, 0.23 ) }
    dend_58 { pt3dadd( -147.809, 22.8272, 6.07399, 0.91 ) }
    dend_58 { pt3dadd( -149.965, 22.6402, 6.48325, 0.23 ) }
    dend_58 { pt3dadd( -154.008, 22.2757, 7.21512, 1.14 ) }
    dend_58 { pt3dadd( -155.547, 22.131, 7.48097, 0.23 ) }
    dend_58 { pt3dadd( -157.717, 21.9234, 7.84024, 0.68 ) }
    dend_58 { pt3dadd( -160.537, 21.6285, 8.30586, 0.23 ) }
    dend_58 { pt3dadd( -162.688, 21.4303, 8.73262, 0.45 ) }
    dend_58 { pt3dadd( -164.543, 21.2648, 9.24392, 0.23 ) }
    dend_58 { pt3dadd( -165.436, 21.1969, 9.54752, 0.23 ) }
    dend_58 { pt3dadd( -167.773, 21.0566, 10.5626, 0.91 ) }
    dend_58 { pt3dadd( -171.687, 20.8241, 12.5738, 0.23 ) }
    dend_58 { pt3dadd( -174.409, 20.6784, 14.0804, 0.91 ) }
    dend_58 { pt3dadd( -179.438, 20.4658, 16.9745, 0.23 ) }
    dend_58 { pt3dadd( -180.783, 20.4118, 17.7746, 0.23 ) }
    dend_58 { pt3dadd( -184.194, 20.2405, 19.9047, 1.59 ) }
    dend_58 { pt3dadd( -188.441, 19.9886, 22.7896, 0.23 ) }
    dend_58 { pt3dadd( -189.752, 19.8981, 23.7195, 0.91 ) }
    dend_58 { pt3dadd( -190.588, 19.841, 24.3183, 0.91 ) }
    dend_58 { pt3dadd( -193.85, 19.6318, 26.6565, 0.23 ) }
    dend_58 { pt3dadd( -196.843, 19.3832, 28.787, 0.91 ) }
    dend_58 { pt3dadd( -199.733, 19.1035, 30.7769, 0.23 ) }
    dend_58 { pt3dadd( -201.284, 18.9484, 31.8454, 1.14 ) }
    dend_58 { pt3dadd( -204.319, 18.6038, 33.8314, 0.23 ) }
    dend_58 { pt3dadd( -205.963, 18.3818, 34.8163, 0.91 ) }
    dend_58 { pt3dadd( -207.271, 18.2124, 35.4854, 0.23 ) }
    dend_58 { pt3dadd( -209.066, 17.9692, 36.1844, 0.68 ) }
    dend_58 { pt3dadd( -213.996, 17.2639, 37.7335, 0.23 ) }
    dend_58 { pt3dadd( -216.087, 16.9484, 38.3485, 0.91 ) }
    dend_58 { pt3dadd( -218.607, 16.5469, 39.0175, 0.23 ) }
    dend_58 { pt3dadd( -221.575, 16.0876, 39.7101, 0.68 ) }
    dend_58 { pt3dadd( -224.65, 15.5844, 40.3412, 0.23 ) }
    dend_58 { pt3dadd( -226.97, 15.1665, 40.7561, 0.23 ) }
    dend_58 { pt3dadd( -229.913, 14.5328, 41.2048, 0.91 ) }
    dend_58 { pt3dadd( -233.235, 13.763, 41.7244, 0.23 ) }
    dend_58 { pt3dadd( -235.577, 13.2066, 42.1057, 1.14 ) }
    dend_58 { pt3dadd( -238.975, 12.3604, 42.6988, 0.23 ) }
    dend_58 { pt3dadd( -240.772, 11.9512, 43.0354, 0.91 ) }
    dend_58 { pt3dadd( -243.64, 11.431, 43.5067, 0.23 ) }
    dend_58 { pt3dadd( -247.029, 11.0116, 44.0448, 0.91 ) }
    dend_58 { pt3dadd( -248.921, 10.8732, 44.3833, 0.23 ) }
    dend_58 { pt3dadd( -250.514, 10.8496, 44.707, 0.68 ) }
    dend_58 { pt3dadd( -252.25, 10.9236, 45.0435, 0.23 ) }
    dend_58 { pt3dadd( -255.412, 11.2256, 45.7127, 0.91 ) }
    dend_58 { pt3dadd( -258.459, 11.6468, 46.5301, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_58 { pt3dadd( -259.932, 11.9181, 46.998, 0.23 ) }
    dend_58 { pt3dadd( -261.076, 12.1336, 47.4089, 0.91 ) }
    dend_58 { pt3dadd( -262.284, 12.3628, 47.9053, 0.23 ) }
    dend_58 { pt3dadd( -265.367, 12.8964, 49.2904, 0.91 ) }
    dend_58 { pt3dadd( -267.939, 13.357, 50.7595, 0.23 ) }
    dend_58 { pt3dadd( -269.822, 13.7495, 52.1177, 0.68 ) }
    dend_58 { pt3dadd( -271.281, 14.0687, 53.3348, 0.23 ) }
    dend_58 { pt3dadd( -274.215, 14.7019, 56.2345, 0.91 ) }
    dend_58 { pt3dadd( -275.722, 15.0283, 57.8115, 0.23 ) }
    dend_58 { pt3dadd( -278.587, 15.645, 61.0147, 0.91 ) }
    dend_58 { pt3dadd( -281.194, 16.2361, 64.1321, 0.23 ) }
    dend_58 { pt3dadd( -282.789, 16.5774, 66.2899, 0.91 ) }
    dend_58 { pt3dadd( -285.258, 17.2461, 70.1455, 0.23 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 44.9984, 39.6953, -14.1242, 0.23 ) }
    dend_55 { pt3dadd( 46.9607, 41.9825, -13.1293, 0.23 ) }
    dend_55 { pt3dadd( 48.2615, 43.4266, -12.3949, 0.91 ) }
    dend_55 { pt3dadd( 49.8921, 45.2181, -11.3075, 0.23 ) }
    dend_55 { pt3dadd( 52.1979, 47.7159, -9.74912, 0.23 ) }
    dend_55 { pt3dadd( 52.8937, 48.4596, -9.28114, 0.91 ) }
    dend_55 { pt3dadd( 54.4614, 50.2149, -8.17248, 0.23 ) }
    dend_55 { pt3dadd( 55.6192, 51.5286, -7.25592, 0.68 ) }
    dend_55 { pt3dadd( 57.2157, 53.4588, -5.94874, 0.23 ) }
    dend_55 { pt3dadd( 58.3342, 54.9686, -4.97054, 0.68 ) }
    dend_55 { pt3dadd( 59.7172, 57.0345, -3.84948, 0.23 ) }
    dend_55 { pt3dadd( 61.0135, 59.0538, -2.85246, 0.68 ) }
    dend_55 { pt3dadd( 61.6514, 60.0728, -2.42303, 0.23 ) }
    dend_55 { pt3dadd( 62.3099, 61.0964, -2.04112, 0.91 ) }
    dend_55 { pt3dadd( 63.8777, 63.2177, -1.33953, 0.23 ) }
    dend_55 { pt3dadd( 65.1255, 64.6675, -0.85804, 0.68 ) }
    dend_55 { pt3dadd( 67.019, 66.5633, -0.257277, 0.23 ) }
    dend_55 { pt3dadd( 68.2638, 67.6165, 0.119708, 0.68 ) }
    dend_55 { pt3dadd( 70.8825, 69.6971, 1.03422, 0.23 ) }
    dend_55 { pt3dadd( 73.3648, 71.5633, 1.94024, 0.91 ) }
    dend_55 { pt3dadd( 75.0921, 72.772, 2.47225, 0.23 ) }
    dend_55 { pt3dadd( 75.9921, 73.3924, 2.73789, 0.23 ) }
    dend_55 { pt3dadd( 79.0541, 75.6171, 3.57119, 0.68 ) }
    dend_55 { pt3dadd( 81.5273, 77.5641, 4.18041, 0.23 ) }
    dend_55 { pt3dadd( 82.9929, 78.8822, 4.47221, 0.91 ) }
    dend_55 { pt3dadd( 86.1507, 81.9526, 4.80824, 0.23 ) }
    dend_55 { pt3dadd( 87.0532, 82.8507, 4.81049, 0.23 ) }
    dend_55 { pt3dadd( 88.5568, 84.3441, 4.63523, 0.91 ) }
    dend_55 { pt3dadd( 90.839, 86.526, 4.04105, 0.23 ) }
    dend_55 { pt3dadd( 92.5255, 88.1214, 3.44381, 0.91 ) }
    dend_55 { pt3dadd( 95.0671, 90.5516, 2.48394, 0.23 ) }
    dend_55 { pt3dadd( 96.927, 92.334, 1.75818, 0.68 ) }
    dend_55 { pt3dadd( 99.1843, 94.3417, 0.81925, 0.23 ) }
    dend_55 { pt3dadd( 100.758, 95.5978, 0.0954709, 0.23 ) }
    dend_55 { pt3dadd( 102.291, 96.6699, -0.727866, 0.91 ) }
    dend_55 { pt3dadd( 112.426, 102.619, 0.487479, 0.91 ) }
    dend_55 { pt3dadd( 122.711, 106.978, 4.56352, 0.91 ) }
    dend_55 { pt3dadd( 134.298, 108.645, 6.82244, 0.91 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 51/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 44.9984, 39.6953, -14.1242, 0.23 ) }
    dend_54 { pt3dadd( 47.1565, 39.6499, -17.131, 0.23 ) }
    dend_54 { pt3dadd( 48.9811, 39.5846, -19.541, 0.68 ) }
    dend_54 { pt3dadd( 51.6393, 39.4361, -22.9683, 1.36 ) }
    dend_54 { pt3dadd( 54.6983, 39.1858, -26.7016, 0.23 ) }
    dend_54 { pt3dadd( 56.2316, 39.0445, -28.4334, 0.45 ) }
    dend_54 { pt3dadd( 58.7591, 38.8203, -31.1299, 0.45 ) }
    dend_54 { pt3dadd( 60.8926, 38.6451, -33.0941, 0.23 ) }
    dend_54 { pt3dadd( 62.7899, 38.4598, -34.6153, 1.14 ) }
    dend_54 { pt3dadd( 64.3233, 38.3484, -35.6337, 1.14 ) }
    dend_54 { pt3dadd( 66.1741, 38.3077, -36.6422, 0.45 ) }
    dend_54 { pt3dadd( 71.05, 38.5723, -38.8981, 0.23 ) }
    dend_54 { pt3dadd( 73.2534, 38.7951, -39.712, 1.14 ) }
    dend_54 { pt3dadd( 74.836, 38.9623, -40.1951, 0.23 ) }
    dend_54 { pt3dadd( 76.8228, 39.2293, -40.6921, 0.23 ) }
    dend_54 { pt3dadd( 79.7569, 39.6306, -41.4085, 0.91 ) }
    dend_54 { pt3dadd( 82.9203, 40.07, -42.2616, 0.23 ) }
    dend_54 { pt3dadd( 83.7728, 40.1878, -42.4772, 0.68 ) }
    dend_54 { pt3dadd( 85.1313, 40.3601, -42.8847, 0.68 ) }
    dend_54 { pt3dadd( 87.0701, 40.5811, -43.6501, 0.23 ) }
    dend_54 { pt3dadd( 90.2578, 40.9006, -44.9632, 0.91 ) }
    dend_54 { pt3dadd( 94.1243, 41.4107, -46.6002, 0.23 ) }
    dend_54 { pt3dadd( 96.0035, 41.6667, -47.418, 1.14 ) }
    dend_54 { pt3dadd( 97.4513, 41.8435, -48.022, 1.14 ) }
    dend_54 { pt3dadd( 102.176, 42.4041, -49.9136, 0.23 ) }
    dend_54 { pt3dadd( 104.655, 42.6834, -50.8425, 0.68 ) }
    dend_54 { pt3dadd( 106.487, 42.9353, -51.366, 0.23 ) }
    dend_54 { pt3dadd( 110.259, 43.5658, -52.1233, 1.14 ) }
    dend_54 { pt3dadd( 113.969, 44.4004, -52.6933, 0.23 ) }
    dend_54 { pt3dadd( 115.773, 44.9455, -52.8342, 0.91 ) }
    dend_54 { pt3dadd( 116.843, 45.3616, -52.8605, 1.36 ) }
    dend_54 { pt3dadd( 120.14, 46.9703, -52.9629, 0.23 ) }
    dend_54 { pt3dadd( 122.331, 48.2104, -52.9517, 0.91 ) }
    dend_54 { pt3dadd( 123.866, 49.1953, -52.8933, 0.91 ) }
    dend_54 { pt3dadd( 126.224, 50.8326, -52.8254, 0.23 ) }
    dend_54 { pt3dadd( 128.583, 52.4291, -52.7778, 0.91 ) }
    dend_54 { pt3dadd( 132.105, 54.6425, -52.775, 0.23 ) }
    dend_54 { pt3dadd( 134.369, 55.955, -52.8226, 0.91 ) }
    dend_54 { pt3dadd( 137.346, 57.4781, -52.8624, 0.23 ) }
    dend_54 { pt3dadd( 138.21, 57.8881, -52.8652, 0.23 ) }
    dend_54 { pt3dadd( 140.635, 58.973, -52.8553, 0.23 ) }
    dend_54 { pt3dadd( 143.636, 60.2195, -52.7589, 0.68 ) }
    dend_54 { pt3dadd( 145.86, 61.0563, -52.7112, 0.23 ) }
    dend_54 { pt3dadd( 148.341, 61.9979, -52.6403, 0.23 ) }
    dend_54 { pt3dadd( 150.95, 62.9317, -52.5196, 0.68 ) }
    dend_54 { pt3dadd( 162.63, 63.8446, -58.1738, 0.68 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 97/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 22.5273, 70.9872, -7.58694, 0.23 ) }
    dend_52 { pt3dadd( 20.2679, 72.3786, -7.27929, 0.23 ) }
    dend_52 { pt3dadd( 18.0809, 73.866, -7.12329, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_52 { pt3dadd( 14.841, 76.4763, -7.02912, 0.23 ) }
    dend_52 { pt3dadd( 13.6205, 77.6895, -7.16945, 1.14 ) }
    dend_52 { pt3dadd( 12.5743, 78.9445, -7.39405, 0.23 ) }
    dend_52 { pt3dadd( 11.5195, 80.4233, -7.69382, 0.68 ) }
    dend_52 { pt3dadd( 10.5786, 82.2641, -8.18628, 0.23 ) }
    dend_52 { pt3dadd( 9.78204, 84.4601, -8.93452, 1.36 ) }
    dend_52 { pt3dadd( 8.853, 88.1314, -10.3503, 0.23 ) }
    dend_52 { pt3dadd( 8.48416, 90.0557, -11.1198, 0.91 ) }
    dend_52 { pt3dadd( 8.17842, 91.9666, -11.8874, 0.23 ) }
    dend_52 { pt3dadd( 7.8905, 94.2009, -12.7313, 0.68 ) }
    dend_52 { pt3dadd( 7.67535, 96.103, -13.3801, 0.23 ) }
    dend_52 { pt3dadd( 7.5817, 97.4361, -13.8093, 1.14 ) }
    dend_52 { pt3dadd( 7.56461, 99.8098, -14.5354, 0.23 ) }
    dend_52 { pt3dadd( 7.61511, 101.449, -15.0711, 0.23 ) }
    dend_52 { pt3dadd( 7.69979, 102.986, -15.5737, 0.91 ) }
    dend_52 { pt3dadd( 7.85257, 104.88, -16.1602, 0.23 ) }
    dend_52 { pt3dadd( 8.05913, 106.99, -16.769, 0.23 ) }
    dend_52 { pt3dadd( 8.39543, 109.712, -17.5385, 1.14 ) }
    dend_52 { pt3dadd( 8.5943, 111.021, -17.8792, 1.14 ) }
    dend_52 { pt3dadd( 9.03232, 113.45, -18.54, 0.23 ) }
    dend_52 { pt3dadd( 9.38256, 115.382, -19.0462, 0.23 ) }
    dend_52 { pt3dadd( 9.66921, 116.929, -19.3978, 0.23 ) }
    dend_52 { pt3dadd( 9.86129, 118.197, -19.6795, 0.23 ) }
    dend_52 { pt3dadd( 9.97404, 119.348, -19.9478, 0.45 ) }
    dend_52 { pt3dadd( 9.93201, 121.985, -20.8236, 0.23 ) }
    dend_52 { pt3dadd( 9.74389, 123.271, -21.3374, 0.91 ) }
    dend_52 { pt3dadd( 9.42904, 124.512, -21.9364, 0.91 ) }
    dend_52 { pt3dadd( 8.86415, 126.378, -22.931, 0.68 ) }
    dend_52 { pt3dadd( 8.04756, 129.04, -24.4697, 1.36 ) }
    dend_52 { pt3dadd( 7.09438, 132.211, -26.4108, 0.23 ) }
    dend_52 { pt3dadd( 6.80545, 133.463, -27.213, 0.23 ) }
    dend_52 { pt3dadd( 6.57017, 135.368, -28.4706, 0.23 ) }
    dend_52 { pt3dadd( 6.61752, 136.635, -29.3199, 1.14 ) }
    dend_52 { pt3dadd( 7.24965, 138.83, -30.6486, 0.23 ) }
    dend_52 { pt3dadd( 7.49503, 139.276, -30.8825, 0.68 ) }
    dend_52 { pt3dadd( 9.41261, 141.891, -32.0667, 0.23 ) }
    dend_52 { pt3dadd( 9.93655, 142.56, -32.3357, 1.14 ) }
    dend_52 { pt3dadd( 11.2298, 144.245, -32.8736, 0.23 ) }
    dend_52 { pt3dadd( 12.9235, 146.435, -33.5324, 0.91 ) }
    dend_52 { pt3dadd( 13.8653, 147.637, -33.8315, 0.23 ) }
    dend_52 { pt3dadd( 15.4052, 149.656, -34.27, 0.68 ) }
    dend_52 { pt3dadd( 16.5032, 151.113, -34.4788, 0.68 ) }
    dend_52 { pt3dadd( 17.5577, 152.589, -34.6632, 0.23 ) }
    dend_52 { pt3dadd( 15.7048, 164.263, -37.116, 0.23 ) }
    dend_52 { pt3dadd( 16.1454, 176.192, -38.6774, 0.23 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 45/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 22.5273, 70.9872, -7.58694, 0.23 ) }
    dend_47 { pt3dadd( 23.2379, 71.854, -7.49797, 0.23 ) }
    dend_47 { pt3dadd( 24.4217, 73.206, -7.50339, 1.14 ) }
    dend_47 { pt3dadd( 26.1477, 75.1346, -7.58815, 0.23 ) }
    dend_47 { pt3dadd( 27.1456, 76.27, -7.64901, 0.68 ) }
    dend_47 { pt3dadd( 28.0223, 77.2832, -7.70543, 0.23 ) }
    dend_47 { pt3dadd( 29.009, 78.4357, -7.76954, 0.68 ) }
    dend_47 { pt3dadd( 30.598, 80.3775, -7.96858, 0.23 ) }
    dend_47 { pt3dadd( 31.6827, 81.8146, -8.15968, 0.91 ) }
    dend_47 { pt3dadd( 32.7215, 83.352, -8.35346, 0.23 ) }
    dend_47 { pt3dadd( 33.0554, 83.8763, -8.37763, 0.91 ) }
    dend_47 { pt3dadd( 34.2204, 85.8191, -8.31861, 0.23 ) }
    dend_47 { pt3dadd( 35.4593, 87.9689, -8.13786, 0.91 ) }
    dend_47 { pt3dadd( 36.5882, 90.0129, -7.83669, 0.23 ) }
    dend_47 { pt3dadd( 37.0538, 90.8718, -7.68343, 0.91 ) }
    dend_47 { pt3dadd( 38.4412, 93.2856, -7.13034, 0.23 ) }
    dend_47 { pt3dadd( 38.9357, 94.0428, -6.88144, 1.14 ) }
    dend_47 { pt3dadd( 39.3799, 94.6015, -6.62441, 1.14 ) }
    dend_47 { pt3dadd( 40.2141, 95.3807, -6.10399, 0.23 ) }
    dend_47 { pt3dadd( 41.4377, 96.2664, -5.38598, 0.91 ) }
    dend_47 { pt3dadd( 42.854, 97.0195, -4.65414, 0.23 ) }
    dend_47 { pt3dadd( 44.7156, 97.7407, -3.84451, 0.23 ) }
    dend_47 { pt3dadd( 45.9566, 98.0572, -3.29352, 0.91 ) }
    dend_47 { pt3dadd( 47.8219, 98.3536, -2.48405, 0.23 ) }
    dend_47 { pt3dadd( 48.9321, 98.4613, -2.01892, 0.91 ) }
    dend_47 { pt3dadd( 51.3457, 98.5813, -1.08126, 0.23 ) }
    dend_47 { pt3dadd( 52.8742, 98.625, -0.548905, 0.68 ) }
    dend_47 { pt3dadd( 56.0001, 98.6693, 0.39575, 0.23 ) }
    dend_47 { pt3dadd( 57.2551, 98.6696, 0.743973, 0.68 ) }
    dend_47 { pt3dadd( 58.1777, 98.6631, 0.953553, 0.23 ) }
    dend_47 { pt3dadd( 59.7654, 98.6458, 1.27175, 0.91 ) }
    dend_47 { pt3dadd( 60.7747, 98.6181, 1.42544, 0.23 ) }
    dend_47 { pt3dadd( 61.8932, 98.5943, 1.54255, 0.23 ) }
    dend_47 { pt3dadd( 62.7332, 98.5859, 1.58738, 0.23 ) }
    dend_47 { pt3dadd( 64.5352, 98.6025, 1.71044, 0.91 ) }
    dend_47 { pt3dadd( 65.3732, 98.6304, 1.77722, 0.23 ) }
    dend_47 { pt3dadd( 66.6528, 98.7332, 1.82578, 0.68 ) }
    dend_47 { pt3dadd( 68.7698, 99.0119, 1.83873, 0.23 ) }
    dend_47 { pt3dadd( 69.6681, 99.1899, 1.78981, 0.91 ) }
    dend_47 { pt3dadd( 71.3931, 99.6539, 1.61486, 0.23 ) }
    dend_47 { pt3dadd( 72.2986, 99.9308, 1.49875, 0.91 ) }
    dend_47 { pt3dadd( 74.7781, 100.777, 1.11281, 0.23 ) }
    dend_47 { pt3dadd( 76.2559, 101.345, 0.822724, 0.91 ) }
    dend_47 { pt3dadd( 77.7615, 101.92, 0.417433, 0.23 ) }
    dend_47 { pt3dadd( 79.16, 102.493, -0.0554438, 0.68 ) }
    dend_47 { pt3dadd( 86.5842, 106.973, -0.191284, 0.68 ) }
    dend_47 { pt3dadd( 94.3343, 110.638, -1.7732, 0.68 ) }
    dend_47 { pt3dadd( 101.96, 114.766, -2.38098, 0.68 ) }
    dend_47 { pt3dadd( 109.174, 119.522, -2.92811, 0.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 94/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -187.235, -79.2621, 15.3558, 0.23 ) }
    dend_42 { pt3dadd( -189.805, -81.8918, 16.2884, 0.23 ) }
    dend_42 { pt3dadd( -191.37, -83.6362, 16.764, 0.68 ) }
    dend_42 { pt3dadd( -192.749, -85.2554, 17.1456, 0.23 ) }
    dend_42 { pt3dadd( -194.712, -87.6022, 17.6574, 0.45 ) }
    dend_42 { pt3dadd( -198.12, -91.74, 18.5224, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_42 { pt3dadd( -200.306, -94.3783, 19.0551, 0.23 ) }
    dend_42 { pt3dadd( -202.398, -97.0972, 19.5157, 0.91 ) }
    dend_42 { pt3dadd( -204.206, -99.4806, 20.0138, 0.23 ) }
    dend_42 { pt3dadd( -204.966, -100.516, 20.2296, 0.23 ) }
    dend_42 { pt3dadd( -206.085, -102.082, 20.5605, 0.91 ) }
    dend_42 { pt3dadd( -207.615, -104.411, 21.0453, 0.23 ) }
    dend_42 { pt3dadd( -208.431, -105.756, 21.4011, 0.91 ) }
    dend_42 { pt3dadd( -210.535, -109.982, 22.3787, 0.23 ) }
    dend_42 { pt3dadd( -211.883, -113.322, 22.9404, 0.23 ) }
    dend_42 { pt3dadd( -213.067, -116.492, 23.4435, 0.23 ) }
    dend_42 { pt3dadd( -214.238, -119.96, 23.9429, 0.23 ) }
    dend_42 { pt3dadd( -215.211, -123.306, 24.3547, 0.68 ) }
    dend_42 { pt3dadd( -216.393, -127.93, 24.7644, 0.23 ) }
    dend_42 { pt3dadd( -217.095, -131.728, 24.859, 0.23 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 14/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -187.235, -79.2621, 15.3558, 0.23 ) }
    dend_41 { pt3dadd( -190.905, -80.0092, 14.1688, 0.23 ) }
    dend_41 { pt3dadd( -193.542, -80.5854, 13.467, 0.45 ) }
    dend_41 { pt3dadd( -196.231, -81.1671, 12.9398, 0.23 ) }
    dend_41 { pt3dadd( -197.558, -81.4748, 12.6639, 0.23 ) }
    dend_41 { pt3dadd( -198.475, -81.6948, 12.4792, 0.23 ) }
    dend_41 { pt3dadd( -199.671, -82.0096, 12.1893, 0.68 ) }
    dend_41 { pt3dadd( -202.481, -82.88, 11.5358, 0.23 ) }
    dend_41 { pt3dadd( -203.943, -83.3989, 11.1986, 0.45 ) }
    dend_41 { pt3dadd( -206.799, -84.5179, 10.481, 0.23 ) }
    dend_41 { pt3dadd( -209.873, -85.7418, 9.67819, 0.91 ) }
    dend_41 { pt3dadd( -212.891, -86.9205, 8.88286, 0.23 ) }
    dend_41 { pt3dadd( -215.366, -87.9204, 8.21419, 0.91 ) }
    dend_41 { pt3dadd( -216.699, -88.4506, 7.85214, 0.23 ) }
    dend_41 { pt3dadd( -217.513, -88.778, 7.62558, 0.91 ) }
    dend_41 { pt3dadd( -218.997, -89.3277, 7.26975, 0.23 ) }
    dend_41 { pt3dadd( -220.889, -90.0473, 6.60497, 0.68 ) }
    dend_41 { pt3dadd( -223.327, -90.9865, 5.60606, 0.23 ) }
    dend_41 { pt3dadd( -224.879, -91.5949, 4.854, 0.68 ) }
    dend_41 { pt3dadd( -226.643, -92.3345, 3.97613, 0.23 ) }
    dend_41 { pt3dadd( -227.938, -92.941, 3.25654, 0.91 ) }
    dend_41 { pt3dadd( -232.145, -95.0567, 0.790857, 0.23 ) }
    dend_41 { pt3dadd( -234.03, -96.0516, -0.377797, 0.23 ) }
    dend_41 { pt3dadd( -235.256, -96.6934, -1.1658, 0.23 ) }
    dend_41 { pt3dadd( -237.636, -97.9282, -2.66435, 0.91 ) }
    dend_41 { pt3dadd( -240.15, -99.2618, -4.24049, 0.23 ) }
    dend_41 { pt3dadd( -241.564, -100.028, -5.08261, 0.23 ) }
    dend_41 { pt3dadd( -242.814, -100.699, -5.78824, 0.68 ) }
    dend_41 { pt3dadd( -244.935, -101.896, -7.07788, 0.23 ) }
    dend_41 { pt3dadd( -246.321, -102.699, -7.94951, 0.91 ) }
    dend_41 { pt3dadd( -248.454, -103.956, -9.33665, 0.23 ) }
    dend_41 { pt3dadd( -250.419, -105.106, -10.5048, 0.91 ) }
    dend_41 { pt3dadd( -252.921, -106.672, -11.931, 0.23 ) }
    dend_41 { pt3dadd( -254.039, -107.398, -12.5395, 0.23 ) }
    dend_41 { pt3dadd( -255.636, -108.465, -13.3344, 0.68 ) }
    dend_41 { pt3dadd( -257.197, -109.529, -14.0271, 0.23 ) }
    dend_41 { pt3dadd( -258.81, -110.645, -14.6225, 1.14 ) }
    dend_41 { pt3dadd( -260.527, -111.842, -15.2055, 0.23 ) }
    dend_41 { pt3dadd( -262.133, -112.945, -15.6522, 0.23 ) }
    dend_41 { pt3dadd( -264.22, -114.431, -16.2182, 0.91 ) }
    dend_41 { pt3dadd( -266.073, -115.757, -16.6642, 0.23 ) }
    dend_41 { pt3dadd( -268.302, -117.438, -17.3075, 1.14 ) }
    dend_41 { pt3dadd( -269.264, -118.175, -17.6388, 0.23 ) }
    dend_41 { pt3dadd( -269.999, -118.705, -17.9098, 0.91 ) }
    dend_41 { pt3dadd( -271.768, -119.998, -18.5698, 0.23 ) }
    dend_41 { pt3dadd( -273.847, -121.535, -19.4648, 1.14 ) }
    dend_41 { pt3dadd( -276.991, -123.849, -20.9733, 0.23 ) }
    dend_41 { pt3dadd( -278.169, -124.721, -21.5686, 0.23 ) }
    dend_41 { pt3dadd( -279.657, -125.9, -22.3694, 0.45 ) }
    dend_41 { pt3dadd( -287.905, -130.856, -24.9339, 0.45 ) }
    // Section: dend_38, id: dend_38, parent: dend_30 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 6.94362, -24.9238, 30.2509, 0.23 ) }
    dend_38 { pt3dadd( 7.73848, -25.3314, 31.606, 0.23 ) }
    dend_38 { pt3dadd( 8.59273, -25.8148, 33.0685, 0.91 ) }
    dend_38 { pt3dadd( 10.7031, -26.981, 36.5807, 0.23 ) }
    dend_38 { pt3dadd( 12.2356, -27.8011, 39.1006, 0.91 ) }
    dend_38 { pt3dadd( 14.417, -28.8989, 42.5141, 0.23 ) }
    dend_38 { pt3dadd( 15.1703, -29.2891, 43.6396, 0.23 ) }
    dend_38 { pt3dadd( 16.9249, -30.2726, 46.0512, 0.23 ) }
    dend_38 { pt3dadd( 17.4784, -30.6866, 46.8988, 0.68 ) }
    dend_38 { pt3dadd( 18.5232, -31.6318, 48.5732, 0.23 ) }
    dend_38 { pt3dadd( 19.3091, -32.6229, 50.1155, 0.91 ) }
    dend_38 { pt3dadd( 20.4243, -34.6493, 52.8906, 0.23 ) }
    dend_38 { pt3dadd( 20.5918, -35.0741, 53.4654, 0.91 ) }
    dend_38 { pt3dadd( 21.7569, -38.6603, 58.3281, 0.23 ) }
    dend_38 { pt3dadd( 21.9662, -39.3893, 59.3635, 0.91 ) }
    dend_38 { pt3dadd( 22.3803, -41.1401, 62.2062, 0.23 ) }
    dend_38 { pt3dadd( 22.5018, -41.8654, 63.6994, 0.91 ) }
    dend_38 { pt3dadd( 22.786, -43.6442, 68.6561, 0.23 ) }
    dend_38 { pt3dadd( 22.9023, -43.9758, 69.8919, 0.23 ) }
    dend_38 { pt3dadd( 23.0958, -44.2783, 71.4356, 0.91 ) }
    dend_38 { pt3dadd( 23.7668, -44.9786, 76.0311, 0.23 ) }
    dend_38 { pt3dadd( 24.4782, -45.574, 81.0686, 0.23 ) }
    dend_38 { pt3dadd( 25.1895, -46.1053, 85.9637, 0.23 ) }
    dend_38 { pt3dadd( 25.7307, -46.5054, 89.4277, 0.23 ) }
    dend_38 { pt3dadd( 26.3734, -47.0678, 93.8347, 0.23 ) }
    dend_38 { pt3dadd( 26.7381, -47.4123, 96.2783, 0.91 ) }
    dend_38 { pt3dadd( 27.8558, -48.1603, 101.937, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 91/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 6.94362, -24.9238, 30.2509, 0.23 ) }
    dend_31 { pt3dadd( 8.53281, -28.3167, 30.9319, 0.23 ) }
    dend_31 { pt3dadd( 9.44484, -30.3709, 31.4328, 0.23 ) }
    dend_31 { pt3dadd( 10.7843, -33.4943, 32.2285, 0.91 ) }
    dend_31 { pt3dadd( 11.8094, -36.1174, 32.9705, 0.23 ) }
    dend_31 { pt3dadd( 12.2478, -37.2987, 33.3049, 0.23 ) }
    dend_31 { pt3dadd( 12.9407, -39.0913, 33.8282, 1.14 ) }
    dend_31 { pt3dadd( 14.1069, -42.1, 34.7817, 0.23 ) }
    dend_31 { pt3dadd( 14.9511, -44.0688, 35.4528, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 16.0019, -46.1602, 36.2101, 0.91 ) }
    dend_31 { pt3dadd( 17.1336, -48.0077, 36.8983, 0.23 ) }
    dend_31 { pt3dadd( 18.6195, -50.0373, 37.7356, 0.23 ) }
    dend_31 { pt3dadd( 19.4048, -50.9493, 38.1361, 0.91 ) }
    dend_31 { pt3dadd( 20.6135, -52.2743, 38.8097, 0.68 ) }
    dend_31 { pt3dadd( 22.2566, -54.1113, 39.9008, 0.23 ) }
    dend_31 { pt3dadd( 23.1295, -55.1298, 40.5365, 0.91 ) }
    dend_31 { pt3dadd( 25.3864, -58.0455, 42.5338, 0.23 ) }
    dend_31 { pt3dadd( 26.2242, -59.3343, 43.3985, 0.91 ) }
    dend_31 { pt3dadd( 28.393, -63.2503, 45.9062, 0.23 ) }
    dend_31 { pt3dadd( 29.3342, -65.4232, 47.2179, 0.91 ) }
    dend_31 { pt3dadd( 29.7227, -66.6926, 47.9439, 0.91 ) }
    dend_31 { pt3dadd( 30.3129, -69.4357, 49.4065, 0.23 ) }
    dend_31 { pt3dadd( 30.5823, -71.5178, 50.4048, 0.91 ) }
    dend_31 { pt3dadd( 30.6271, -73.3649, 51.2317, 0.23 ) }
    dend_31 { pt3dadd( 30.4295, -75.3866, 52.0666, 0.91 ) }
    dend_31 { pt3dadd( 29.9634, -77.5598, 52.9531, 0.23 ) }
    dend_31 { pt3dadd( 29.6013, -78.7348, 53.4323, 1.14 ) }
    dend_31 { pt3dadd( 29.2441, -79.6243, 53.7927, 0.23 ) }
    dend_31 { pt3dadd( 27.5798, -83.3308, 55.5832, 0.91 ) }
    dend_31 { pt3dadd( 26.6665, -85.2902, 56.5949, 0.23 ) }
    dend_31 { pt3dadd( 26.2124, -86.312, 57.1277, 1.14 ) }
    dend_31 { pt3dadd( 25.6766, -87.6327, 57.8892, 0.23 ) }
    dend_31 { pt3dadd( 25.2013, -88.9711, 58.7662, 0.91 ) }
    dend_31 { pt3dadd( 24.5409, -91.3478, 60.5106, 0.23 ) }
    dend_31 { pt3dadd( 24.3453, -92.3803, 61.321, 0.91 ) }
    dend_31 { pt3dadd( 24.2504, -92.9818, 61.7947, 0.23 ) }
    dend_31 { pt3dadd( 23.8138, -95.7983, 64.1489, 0.91 ) }
    dend_31 { pt3dadd( 23.3967, -98.1265, 66.2004, 0.23 ) }
    dend_31 { pt3dadd( 22.9405, -100.653, 68.4419, 0.91 ) }
    dend_31 { pt3dadd( 22.566, -102.572, 70.1468, 0.23 ) }
    dend_31 { pt3dadd( 22.3091, -103.753, 71.2312, 1.14 ) }
    dend_31 { pt3dadd( 21.7543, -106.09, 73.3717, 0.23 ) }
    dend_31 { pt3dadd( 21.1642, -108.325, 75.2806, 0.91 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 34/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 6.96758, -29.5938, -8.87758, 0.23 ) }
    dend_25 { pt3dadd( 6.90482, -32.9616, -7.49688, 0.23 ) }
    dend_25 { pt3dadd( 6.79874, -34.6383, -6.58427, 0.23 ) }
    dend_25 { pt3dadd( 6.68797, -36.8519, -5.24919, 0.91 ) }
    dend_25 { pt3dadd( 6.66861, -37.7373, -4.7109, 0.23 ) }
    dend_25 { pt3dadd( 6.68961, -39.6295, -3.54946, 0.68 ) }
    dend_25 { pt3dadd( 6.69981, -41.3427, -2.37176, 0.23 ) }
    dend_25 { pt3dadd( 6.67311, -44.404, -0.105092, 0.68 ) }
    dend_25 { pt3dadd( 6.66367, -45.2256, 0.54792, 0.68 ) }
    dend_25 { pt3dadd( 6.68684, -46.3844, 1.46588, 0.23 ) }
    dend_25 { pt3dadd( 6.72417, -48.0818, 2.80229, 1.14 ) }
    dend_25 { pt3dadd( 6.81025, -51.4002, 5.10857, 0.23 ) }
    dend_25 { pt3dadd( 6.81047, -52.0431, 5.47296, 0.23 ) }
    dend_25 { pt3dadd( 6.81587, -52.7136, 5.78034, 0.23 ) }
    dend_25 { pt3dadd( 6.8003, -54.0603, 6.33265, 1.14 ) }
    dend_25 { pt3dadd( 6.6541, -57.0612, 7.54663, 0.23 ) }
    dend_25 { pt3dadd( 6.51407, -59.1554, 8.3053, 1.14 ) }
    dend_25 { pt3dadd( 6.24532, -62.9616, 9.60505, 0.23 ) }
    dend_25 { pt3dadd( 6.03329, -65.744, 10.5938, 0.23 ) }
    dend_25 { pt3dadd( 5.89748, -67.6447, 11.281, 0.68 ) }
    dend_25 { pt3dadd( 5.64445, -71.3484, 12.5751, 0.23 ) }
    dend_25 { pt3dadd( 5.53748, -72.9458, 13.1067, 1.14 ) }
    dend_25 { pt3dadd( 5.33107, -75.7764, 14.0495, 0.23 ) }
    dend_25 { pt3dadd( 5.25334, -76.9213, 14.3615, 0.23 ) }
    dend_25 { pt3dadd( 5.21605, -78.0835, 14.5952, 0.23 ) }
    dend_25 { pt3dadd( 5.19697, -79.9585, 14.9377, 0.91 ) }
    dend_25 { pt3dadd( 5.18104, -81.6664, 15.2581, 0.23 ) }
    dend_25 { pt3dadd( 5.13933, -83.2615, 15.626, 0.91 ) }
    dend_25 { pt3dadd( 5.05001, -84.8464, 16.0966, 0.23 ) }
    dend_25 { pt3dadd( 4.88839, -86.6006, 16.7928, 0.91 ) }
    dend_25 { pt3dadd( 4.53863, -88.7868, 17.8639, 0.23 ) }
    dend_25 { pt3dadd( 3.80558, -92.7604, 20.02, 0.23 ) }
    dend_25 { pt3dadd( 3.68137, -93.6653, 20.4681, 0.68 ) }
    dend_25 { pt3dadd( 3.44362, -96.4269, 21.8017, 1.14 ) }
    dend_25 { pt3dadd( 3.43982, -99.1308, 23.1261, 0.23 ) }
    dend_25 { pt3dadd( 3.73671, -102.782, 24.8377, 0.23 ) }
    dend_25 { pt3dadd( 4.01443, -104.377, 25.5074, 0.23 ) }
    dend_25 { pt3dadd( 5.20859, -109.211, 27.284, 0.23 ) }
    dend_25 { pt3dadd( 5.87557, -111.569, 28.039, 0.68 ) }
    dend_25 { pt3dadd( 7.30263, -116.408, 29.4592, 0.23 ) }
    dend_25 { pt3dadd( 7.92492, -118.278, 29.9741, 0.68 ) }
    dend_25 { pt3dadd( 9.10597, -121.498, 30.8654, 0.23 ) }
    dend_25 { pt3dadd( 9.7708, -123.494, 31.489, 0.23 ) }
    dend_25 { pt3dadd( 10.345, -125.641, 32.2876, 0.91 ) }
    dend_25 { pt3dadd( 11.483, -130.583, 33.8281, 0.23 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 79/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.96758, -29.5938, -8.87758, 0.23 ) }
    dend_24 { pt3dadd( 5.72558, -30.8996, -11.4128, 0.23 ) }
    dend_24 { pt3dadd( 4.44774, -32.5905, -13.9909, 0.68 ) }
    dend_24 { pt3dadd( 3.00354, -34.8653, -17.2156, 0.68 ) }
    dend_24 { pt3dadd( 2.28548, -36.1348, -18.8859, 0.68 ) }
    dend_24 { pt3dadd( 1.6355, -37.3929, -20.4043, 0.68 ) }
    dend_24 { pt3dadd( 0.729277, -39.2117, -22.481, 0.23 ) }
    dend_24 { pt3dadd( -0.00235271, -40.9241, -24.0726, 0.23 ) }
    dend_24 { pt3dadd( -0.831003, -43.2061, -25.9232, 0.23 ) }
    dend_24 { pt3dadd( -1.40587, -44.7878, -27.0923, 0.23 ) }
    dend_24 { pt3dadd( -2.22511, -46.9147, -28.696, 1.14 ) }
    dend_24 { pt3dadd( -2.69676, -48.064, -29.5576, 1.14 ) }
    dend_24 { pt3dadd( -4.15291, -50.9457, -31.603, 0.23 ) }
    dend_24 { pt3dadd( -5.40726, -53.1396, -33.0273, 0.91 ) }
    dend_24 { pt3dadd( -6.7459, -55.4748, -34.4294, 0.91 ) }
    dend_24 { pt3dadd( -7.24915, -56.363, -34.9593, 0.91 ) }
    dend_24 { pt3dadd( -8.89051, -59.4203, -36.8627, 0.23 ) }
    dend_24 { pt3dadd( -10.4557, -62.546, -38.7466, 0.23 ) }
    dend_24 { pt3dadd( -12.0108, -65.8061, -40.6663, 0.23 ) }
    dend_24 { pt3dadd( -12.991, -68.042, -41.9243, 0.23 ) }
    dend_24 { pt3dadd( -13.9026, -70.4462, -43.2972, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_24 { pt3dadd( -15.346, -74.8153, -45.8447, 0.23 ) }
    dend_24 { pt3dadd( -16.3357, -78.3198, -47.9579, 0.91 ) }
    dend_24 { pt3dadd( -16.6527, -79.6526, -48.7877, 0.91 ) }
    dend_24 { pt3dadd( -17.0576, -81.4713, -49.8612, 0.23 ) }
    dend_24 { pt3dadd( -17.5785, -83.8051, -51.1373, 0.68 ) }
    dend_24 { pt3dadd( -18.2365, -86.6354, -52.6726, 0.23 ) }
    dend_24 { pt3dadd( -18.5355, -87.8366, -53.3199, 0.68 ) }
    dend_24 { pt3dadd( -19.262, -90.5398, -54.8839, 0.23 ) }
    dend_24 { pt3dadd( -19.6331, -91.717, -55.5816, 1.14 ) }
    dend_24 { pt3dadd( -20.3104, -93.5167, -56.6751, 1.14 ) }
    dend_24 { pt3dadd( -21.5511, -96.272, -58.4215, 0.23 ) }
    dend_24 { pt3dadd( -23.0437, -99.0867, -60.4214, 0.23 ) }
    dend_24 { pt3dadd( -23.967, -100.512, -61.5773, 0.91 ) }
    dend_24 { pt3dadd( -24.9382, -101.768, -62.7282, 0.91 ) }
    dend_24 { pt3dadd( -26.4401, -103.411, -64.2362, 0.23 ) }
    dend_24 { pt3dadd( -28.0769, -104.982, -65.6709, 0.91 ) }
    dend_24 { pt3dadd( -29.0285, -105.788, -66.4052, 0.91 ) }
    dend_24 { pt3dadd( -31.5223, -107.596, -68.113, 0.23 ) }
    dend_24 { pt3dadd( -32.7918, -108.485, -68.9416, 0.23 ) }
    dend_24 { pt3dadd( -35.9891, -110.73, -70.9641, 0.68 ) }
    dend_24 { pt3dadd( -37.415, -111.788, -71.8598, 0.23 ) }
    dend_24 { pt3dadd( -38.3683, -112.587, -72.4796, 1.14 ) }
    dend_24 { pt3dadd( -39.2302, -113.382, -73.0832, 1.14 ) }
    dend_24 { pt3dadd( -41.3833, -115.598, -74.7525, 0.23 ) }
    dend_24 { pt3dadd( -42.3979, -116.686, -75.6418, 0.23 ) }
    dend_24 { pt3dadd( -43.8317, -118.441, -77.1365, 1.14 ) }
    dend_24 { pt3dadd( -45.1797, -120.365, -78.7503, 0.23 ) }
    dend_24 { pt3dadd( -45.65, -121.156, -79.4567, 0.68 ) }
    dend_24 { pt3dadd( -46.2375, -122.403, -80.5774, 0.23 ) }
    dend_24 { pt3dadd( -46.8041, -123.984, -81.9839, 0.23 ) }
    dend_24 { pt3dadd( -47.2341, -126.083, -83.7628, 0.68 ) }
    dend_24 { pt3dadd( -47.4928, -128.653, -85.8573, 0.23 ) }
    dend_24 { pt3dadd( -47.5007, -131.137, -87.6753, 0.23 ) }
    dend_24 { pt3dadd( -47.3108, -133.736, -89.3464, 0.45 ) }
    dend_24 { pt3dadd( -47.0499, -135.283, -90.2228, 1.59 ) }
    dend_24 { pt3dadd( -46.062, -139.566, -92.3296, 0.23 ) }
    dend_24 { pt3dadd( -45.8045, -140.511, -92.7464, 0.23 ) }
    dend_24 { pt3dadd( -44.9727, -143.329, -93.7871, 1.14 ) }
    dend_24 { pt3dadd( -44.4098, -145.176, -94.3912, 1.14 ) }
    dend_24 { pt3dadd( -43.4156, -148.321, -95.4089, 0.23 ) }
    dend_24 { pt3dadd( -42.7912, -150.261, -96.0289, 0.91 ) }
    dend_24 { pt3dadd( -41.5926, -154.112, -97.2211, 0.23 ) }
    dend_24 { pt3dadd( -41.1433, -155.668, -97.768, 0.23 ) }
    dend_24 { pt3dadd( -40.5407, -157.844, -98.6399, 1.14 ) }
    dend_24 { pt3dadd( -40.2129, -159.106, -99.1793, 1.14 ) }
    dend_24 { pt3dadd( -38.9078, -164.225, -101.503, 0.23 ) }
    dend_24 { pt3dadd( -38.2459, -166.663, -102.673, 1.14 ) }
    dend_24 { pt3dadd( -37.3132, -169.98, -104.441, 0.23 ) }
    dend_24 { pt3dadd( -36.6769, -172.1, -105.681, 1.14 ) }
    dend_24 { pt3dadd( -36.4764, -172.711, -106.058, 1.14 ) }
    dend_24 { pt3dadd( -35.9108, -174.484, -107.025, 0.23 ) }
    dend_24 { pt3dadd( -35.6286, -175.445, -107.388, 0.68 ) }
    dend_24 { pt3dadd( -34.9651, -177.765, -107.766, 0.23 ) }
    dend_24 { pt3dadd( -34.3622, -179.807, -107.475, 1.14 ) }
    dend_24 { pt3dadd( -33.8927, -181.452, -106.996, 1.14 ) }
    dend_24 { pt3dadd( -32.7029, -185.399, -105.545, 0.23 ) }
    dend_24 { pt3dadd( -32.0208, -187.502, -104.664, 0.91 ) }
    dend_24 { pt3dadd( -31.5797, -188.682, -104.202, 0.91 ) }
    dend_24 { pt3dadd( -30.0633, -192.219, -102.974, 0.23 ) }
    dend_24 { pt3dadd( -29.3141, -193.853, -102.569, 1.14 ) }
    dend_24 { pt3dadd( -28.3167, -195.986, -102.4, 1.36 ) }
    dend_24 { pt3dadd( -26.8364, -199.072, -102.644, 0.23 ) }
    dend_24 { pt3dadd( -25.2899, -202.456, -103.189, 0.23 ) }
    dend_24 { pt3dadd( -24.3042, -204.745, -103.656, 0.91 ) }
    dend_24 { pt3dadd( -23.5552, -206.594, -104.104, 0.91 ) }
    dend_24 { pt3dadd( -21.9003, -210.896, -105.112, 0.23 ) }
    dend_24 { pt3dadd( -21.1872, -212.805, -105.569, 1.14 ) }
    dend_24 { pt3dadd( -19.8502, -216.524, -106.394, 0.23 ) }
    dend_24 { pt3dadd( -19.1397, -218.729, -106.819, 1.14 ) }
    dend_24 { pt3dadd( -18.4679, -221.075, -107.263, 0.23 ) }
    dend_24 { pt3dadd( -18.1054, -222.398, -107.523, 0.91 ) }
    dend_24 { pt3dadd( -17.3888, -226.192, -108.455, 0.23 ) }
    dend_24 { pt3dadd( -17.2427, -228.519, -109.268, 1.59 ) }
    dend_24 { pt3dadd( -17.5872, -231.452, -110.701, 0.23 ) }
    dend_24 { pt3dadd( -18.1255, -233.099, -111.565, 0.91 ) }
    dend_24 { pt3dadd( -18.507, -233.799, -111.955, 0.91 ) }
    dend_24 { pt3dadd( -20.6987, -236.834, -113.642, 0.23 ) }
    dend_24 { pt3dadd( -22.105, -238.368, -114.485, 1.14 ) }
    dend_24 { pt3dadd( -23.1671, -239.394, -115.0, 1.14 ) }
    dend_24 { pt3dadd( -26.1952, -242.338, -116.282, 0.23 ) }
    dend_24 { pt3dadd( -27.1221, -243.374, -116.667, 0.91 ) }
    dend_24 { pt3dadd( -28.6801, -245.328, -117.266, 0.23 ) }
    dend_24 { pt3dadd( -29.2672, -246.212, -117.466, 0.91 ) }
    dend_24 { pt3dadd( -30.3894, -248.404, -118.046, 0.23 ) }
    dend_24 { pt3dadd( -31.2272, -250.532, -118.815, 0.91 ) }
    dend_24 { pt3dadd( -32.0712, -253.529, -120.417, 0.23 ) }
    dend_24 { pt3dadd( -32.3588, -254.917, -121.322, 0.23 ) }
    dend_24 { pt3dadd( -32.6401, -256.91, -122.955, 1.14 ) }
    dend_24 { pt3dadd( -32.8843, -259.741, -125.617, 0.23 ) }
    dend_24 { pt3dadd( -32.8695, -261.792, -127.854, 1.36 ) }
    dend_24 { pt3dadd( -32.7629, -264.324, -130.897, 0.23 ) }
    dend_24 { pt3dadd( -32.631, -265.73, -132.674, 1.14 ) }
    dend_24 { pt3dadd( -32.3914, -267.572, -135.0, 0.23 ) }
    dend_24 { pt3dadd( -32.2409, -268.765, -136.508, 0.68 ) }
    dend_24 { pt3dadd( -31.9697, -271.511, -139.841, 0.23 ) }
    dend_24 { pt3dadd( -31.8427, -272.652, -141.141, 0.91 ) }
    dend_24 { pt3dadd( -31.627, -274.64, -143.109, 0.23 ) }
    dend_24 { pt3dadd( -31.4932, -275.989, -144.268, 0.23 ) }
    dend_24 { pt3dadd( -31.3149, -277.731, -145.598, 0.23 ) }
    dend_24 { pt3dadd( -35.5758, -287.633, -151.048, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_24 { pt3dadd( -40.5805, -297.282, -156.371, 0.23 ) }
    dend_24 { pt3dadd( -45.2129, -307.385, -161.097, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 2/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 78.4294, -144.874, -128.367, 0.23 ) }
    dend_22 { pt3dadd( 83.6244, -152.397, -135.867, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 4/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 78.4294, -144.874, -128.367, 0.23 ) }
    dend_21 { pt3dadd( 80.161, -150.634, -133.611, 0.23 ) }
    // Section: dend_13, id: dend_13, parent: dend_5 (entry count 6/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 43.046, 31.2509, -5.99852, 0.23 ) }
    dend_13 { pt3dadd( 44.7485, 30.6437, -6.25849, 0.23 ) }
    dend_13 { pt3dadd( 46.3433, 30.2089, -6.58938, 0.68 ) }
    dend_13 { pt3dadd( 48.7128, 29.6599, -7.09254, 0.23 ) }
    dend_13 { pt3dadd( 50.4891, 29.3563, -7.49245, 0.91 ) }
    dend_13 { pt3dadd( 52.3355, 29.0888, -7.96219, 0.23 ) }
    dend_13 { pt3dadd( 53.8767, 28.8984, -8.39871, 1.14 ) }
    dend_13 { pt3dadd( 57.2762, 28.6251, -9.38679, 0.23 ) }
    dend_13 { pt3dadd( 58.8389, 28.5433, -9.92125, 0.68 ) }
    dend_13 { pt3dadd( 62.9725, 28.4105, -11.378, 0.23 ) }
    dend_13 { pt3dadd( 64.8964, 28.3442, -12.0451, 0.68 ) }
    dend_13 { pt3dadd( 68.3458, 28.2429, -13.1496, 0.23 ) }
    dend_13 { pt3dadd( 70.5361, 28.1829, -13.8121, 0.68 ) }
    dend_13 { pt3dadd( 75.2682, 28.1064, -15.1696, 0.23 ) }
    dend_13 { pt3dadd( 78.7465, 28.0802, -16.1603, 0.23 ) }
    dend_13 { pt3dadd( 81.8367, 28.0745, -16.9849, 0.68 ) }
    dend_13 { pt3dadd( 85.0865, 28.1085, -17.7758, 0.23 ) }
    dend_13 { pt3dadd( 87.0448, 28.1641, -18.2137, 0.68 ) }
    dend_13 { pt3dadd( 89.4592, 28.3167, -18.7251, 0.23 ) }
    dend_13 { pt3dadd( 92.0546, 28.5884, -19.1701, 0.23 ) }
    dend_13 { pt3dadd( 93.2173, 28.7739, -19.4075, 0.23 ) }
    dend_13 { pt3dadd( 93.9547, 28.9525, -19.5956, 0.23 ) }
    dend_13 { pt3dadd( 95.4373, 29.361, -19.9883, 0.23 ) }
    dend_13 { pt3dadd( 97.9576, 30.1425, -20.5785, 0.68 ) }
    dend_13 { pt3dadd( 99.4199, 30.6572, -20.8887, 0.23 ) }
    dend_13 { pt3dadd( 100.577, 31.1487, -21.1397, 0.23 ) }
    dend_13 { pt3dadd( 102.931, 32.2485, -21.7533, 1.36 ) }
    dend_13 { pt3dadd( 111.398, 31.9109, -23.4933, 1.36 ) }
    dend_13 { pt3dadd( 119.758, 30.3078, -24.9481, 1.36 ) }
    dend_13 { pt3dadd( 128.295, 30.1903, -26.3438, 1.36 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 36/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 43.046, 31.2509, -5.99852, 0.23 ) }
    dend_6 { pt3dadd( 43.9186, 31.6685, -5.94224, 0.23 ) }
    dend_6 { pt3dadd( 46.3664, 32.8398, -5.78437, 1.14 ) }
    dend_6 { pt3dadd( 49.1032, 34.1494, -5.60787, 0.23 ) }
    dend_6 { pt3dadd( 50.3511, 34.7465, -5.52739, 0.68 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 41/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -66.7361, -25.6051, -35.139, 0.23 ) }
    dend_74 { pt3dadd( -71.3717, -29.5884, -36.5857, 0.23 ) }
    dend_74 { pt3dadd( -75.9693, -33.52, -38.3018, 0.23 ) }
    dend_74 { pt3dadd( -80.029, -38.0727, -39.6246, 0.23 ) }
    dend_74 { pt3dadd( -83.4801, -43.1254, -40.6328, 0.23 ) }
    dend_74 { pt3dadd( -87.2716, -47.6394, -42.7323, 0.23 ) }
    dend_74 { pt3dadd( -90.4886, -52.5212, -44.8994, 0.23 ) }
    dend_74 { pt3dadd( -93.8628, -57.5263, -46.3721, 0.23 ) }
    dend_74 { pt3dadd( -96.5598, -62.6602, -48.6234, 0.23 ) }
    dend_74 { pt3dadd( -98.6974, -68.1953, -50.3644, 0.23 ) }
    dend_74 { pt3dadd( -100.499, -73.6455, -52.7196, 0.23 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 52/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -66.7361, -25.6051, -35.139, 0.23 ) }
    dend_71 { pt3dadd( -73.3657, -31.6952, -37.8784, 0.23 ) }
    dend_71 { pt3dadd( -81.0713, -37.0913, -38.3218, 0.23 ) }
    dend_71 { pt3dadd( -87.9439, -43.4258, -38.7478, 0.23 ) }
    dend_71 { pt3dadd( -94.9148, -49.6627, -39.1546, 0.23 ) }
    dend_71 { pt3dadd( -101.885, -55.636, -41.2075, 0.23 ) }
    dend_71 { pt3dadd( -109.72, -60.8498, -41.8081, 0.23 ) }
    dend_71 { pt3dadd( -117.07, -66.6814, -41.7482, 0.23 ) }
    dend_71 { pt3dadd( -124.498, -72.4137, -42.2785, 0.23 ) }
    dend_71 { pt3dadd( -130.922, -78.9621, -44.17, 0.23 ) }
    dend_71 { pt3dadd( -137.511, -85.3969, -45.9008, 0.23 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 63/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -8.18065, 15.3098, -48.3257, 0.23 ) }
    dend_67 { pt3dadd( -5.4238, 14.6546, -55.8428, 0.23 ) }
    dend_67 { pt3dadd( -2.32046, 13.5624, -63.169, 0.23 ) }
    dend_67 { pt3dadd( 2.3432, 13.847, -69.6995, 0.23 ) }
    dend_67 { pt3dadd( 5.95354, 14.7256, -76.8086, 0.23 ) }
    dend_67 { pt3dadd( 10.7497, 17.1119, -82.7223, 0.23 ) }
    dend_67 { pt3dadd( 14.7975, 20.5007, -88.6472, 0.23 ) }
    dend_67 { pt3dadd( 19.827, 24.8229, -92.9102, 0.23 ) }
    dend_67 { pt3dadd( 25.0607, 28.1033, -97.9008, 0.23 ) }
    dend_67 { pt3dadd( 30.8193, 31.585, -102.099, 0.23 ) }
    dend_67 { pt3dadd( 36.829, 34.6634, -106.297, 0.23 ) }
    dend_67 { pt3dadd( 43.5599, 36.5459, -110.184, 0.23 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 75/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -8.18065, 15.3098, -48.3257, 0.23 ) }
    dend_64 { pt3dadd( -5.01094, 16.3219, -54.6936, 0.23 ) }
    dend_64 { pt3dadd( -1.92562, 17.1514, -61.1327, 0.23 ) }
    dend_64 { pt3dadd( 2.20349, 16.7397, -67.014, 0.23 ) }
    dend_64 { pt3dadd( 6.83385, 15.5636, -72.3898, 0.23 ) }
    dend_64 { pt3dadd( 10.7216, 13.9763, -78.2203, 0.23 ) }
    dend_64 { pt3dadd( 14.9627, 11.6593, -83.5121, 0.23 ) }
    dend_64 { pt3dadd( 19.8278, 9.04552, -88.0623, 0.23 ) }
    dend_64 { pt3dadd( 24.1479, 6.00676, -92.866, 0.23 ) }
    dend_64 { pt3dadd( 28.7175, 2.33486, -96.8859, 0.23 ) }
    dend_64 { pt3dadd( 32.5473, -2.11566, -100.809, 0.23 ) }
    dend_64 { pt3dadd( 36.864, -6.782, -103.846, 0.23 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 87/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -138.788, 105.444, 31.496, 0.23 ) }
    dend_61 { pt3dadd( -140.362, 107.911, 31.9695, 0.23 ) }
    dend_61 { pt3dadd( -141.702, 109.89, 32.4337, 0.23 ) }
    dend_61 { pt3dadd( -143.225, 112.279, 33.0234, 0.45 ) }
    dend_61 { pt3dadd( -144.147, 113.845, 33.4755, 0.23 ) }
    dend_61 { pt3dadd( -144.991, 115.523, 34.1089, 0.68 ) }
    dend_61 { pt3dadd( -146.1, 117.728, 34.9418, 0.23 ) }
    dend_61 { pt3dadd( -147.33, 120.289, 36.0621, 0.68 ) }
    dend_61 { pt3dadd( -147.938, 121.659, 36.6885, 0.23 ) }
    dend_61 { pt3dadd( -148.595, 123.346, 37.6031, 0.68 ) }
    dend_61 { pt3dadd( -149.598, 126.711, 39.7118, 0.23 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 98/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -138.788, 105.444, 31.496, 0.23 ) }
    dend_60 { pt3dadd( -141.491, 107.877, 32.6185, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_60 { pt3dadd( -143.0, 109.427, 33.5538, 0.23 ) }
    dend_60 { pt3dadd( -144.628, 111.098, 34.5623, 0.23 ) }
    dend_60 { pt3dadd( -147.458, 114.004, 36.3158, 0.68 ) }
    dend_60 { pt3dadd( -150.68, 117.311, 38.3115, 0.23 ) }
    dend_60 { pt3dadd( -154.53, 121.264, 40.6971, 0.23 ) }
    dend_60 { pt3dadd( -157.89, 125.111, 43.1368, 0.23 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 6/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 109.174, 119.522, -2.92811, 0.23 ) }
    dend_49 { pt3dadd( 116.984, 124.006, -2.18515, 0.23 ) }
    dend_49 { pt3dadd( 125.171, 127.842, -2.85495, 0.23 ) }
    dend_49 { pt3dadd( 132.88, 132.41, -3.9597, 0.23 ) }
    dend_49 { pt3dadd( 139.793, 137.338, -6.95584, 0.23 ) }
    dend_49 { pt3dadd( 146.804, 142.839, -7.99594, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 12/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 109.174, 119.522, -2.92811, 0.23 ) }
    dend_48 { pt3dadd( 118.471, 124.644, -2.81456, 0.23 ) }
    dend_48 { pt3dadd( 127.262, 130.52, -2.99443, 0.23 ) }
    dend_48 { pt3dadd( 136.068, 136.275, -1.93015, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 16/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 21.1642, -108.325, 75.2806, 0.23 ) }
    dend_35 { pt3dadd( 23.0877, -110.647, 77.0842, 0.23 ) }
    dend_35 { pt3dadd( 24.8575, -112.817, 78.6153, 0.68 ) }
    dend_35 { pt3dadd( 27.0237, -115.536, 80.3373, 0.23 ) }
    dend_35 { pt3dadd( 28.428, -117.316, 81.3767, 0.91 ) }
    dend_35 { pt3dadd( 29.4704, -118.631, 82.1506, 0.23 ) }
    dend_35 { pt3dadd( 30.203, -119.552, 82.7367, 0.23 ) }
    dend_35 { pt3dadd( 31.3812, -121.03, 83.7614, 0.68 ) }
    dend_35 { pt3dadd( 32.6392, -122.474, 84.7594, 0.23 ) }
    dend_35 { pt3dadd( 33.5427, -123.479, 85.5363, 0.91 ) }
    dend_35 { pt3dadd( 35.3564, -125.475, 87.4767, 0.23 ) }
    dend_35 { pt3dadd( 37.5977, -127.85, 90.1517, 0.91 ) }
    dend_35 { pt3dadd( 38.7133, -128.99, 91.6035, 0.23 ) }
    dend_35 { pt3dadd( 39.9233, -130.172, 93.2991, 0.91 ) }
    dend_35 { pt3dadd( 42.2046, -132.447, 96.8346, 0.23 ) }
    dend_35 { pt3dadd( 43.9469, -134.243, 99.7101, 0.23 ) }
    dend_35 { pt3dadd( 44.7706, -135.106, 101.125, 0.91 ) }
    dend_35 { pt3dadd( 46.0355, -136.471, 103.415, 0.23 ) }
    dend_35 { pt3dadd( 47.013, -137.598, 105.325, 0.91 ) }
    dend_35 { pt3dadd( 48.8878, -139.768, 109.119, 0.23 ) }
    dend_35 { pt3dadd( 49.6368, -140.553, 110.466, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 21.1642, -108.325, 75.2806, 0.23 ) }
    dend_32 { pt3dadd( 20.061, -111.417, 77.4652, 0.23 ) }
    dend_32 { pt3dadd( 18.8327, -114.956, 79.8727, 0.23 ) }
    dend_32 { pt3dadd( 17.9119, -117.585, 81.7816, 0.68 ) }
    dend_32 { pt3dadd( 17.439, -118.994, 82.9024, 0.23 ) }
    dend_32 { pt3dadd( 17.1122, -119.91, 83.6517, 0.91 ) }
    dend_32 { pt3dadd( 15.7526, -123.388, 86.6754, 0.23 ) }
    dend_32 { pt3dadd( 15.2203, -124.673, 87.8493, 0.91 ) }
    dend_32 { pt3dadd( 13.9062, -127.596, 90.5803, 0.23 ) }
    dend_32 { pt3dadd( 12.6686, -130.314, 93.086, 0.23 ) }
    dend_32 { pt3dadd( 12.1928, -131.443, 94.072, 0.91 ) }
    dend_32 { pt3dadd( 10.7437, -135.116, 96.9241, 0.23 ) }
    dend_32 { pt3dadd( 10.3676, -136.079, 97.5184, 0.91 ) }
    dend_32 { pt3dadd( 9.84451, -137.603, 98.2205, 0.23 ) }
    dend_32 { pt3dadd( 9.39927, -139.116, 98.7038, 1.14 ) }
    dend_32 { pt3dadd( 8.55563, -142.323, 99.4379, 0.23 ) }
    dend_32 { pt3dadd( 7.78578, -145.731, 100.12, 0.91 ) }
    dend_32 { pt3dadd( 7.03196, -149.495, 100.64, 0.23 ) }
    dend_32 { pt3dadd( 6.41138, -152.581, 101.089, 0.68 ) }
    dend_32 { pt3dadd( 5.78538, -155.403, 101.507, 0.23 ) }
    dend_32 { pt3dadd( 5.25735, -157.505, 101.792, 0.91 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 58/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 50.3511, 34.7465, -5.52739, 0.23 ) }
    dend_10 { pt3dadd( 52.4194, 34.6401, -3.78621, 0.23 ) }
    dend_10 { pt3dadd( 55.7739, 34.6888, -1.55907, 0.23 ) }
    dend_10 { pt3dadd( 58.4302, 34.8626, -0.0919167, 0.91 ) }
    dend_10 { pt3dadd( 60.043, 35.056, 0.696651, 0.23 ) }
    dend_10 { pt3dadd( 61.2874, 35.2543, 1.26926, 0.91 ) }
    dend_10 { pt3dadd( 63.8654, 35.6916, 2.31104, 0.23 ) }
    dend_10 { pt3dadd( 66.8738, 36.3533, 3.29492, 0.23 ) }
    dend_10 { pt3dadd( 69.5077, 36.9633, 3.9601, 0.23 ) }
    dend_10 { pt3dadd( 72.7421, 37.6784, 4.69109, 0.23 ) }
    dend_10 { pt3dadd( 75.463, 38.2267, 5.25414, 0.91 ) }
    dend_10 { pt3dadd( 77.9266, 38.7197, 5.77555, 0.23 ) }
    dend_10 { pt3dadd( 79.6936, 39.0987, 6.17851, 0.68 ) }
    dend_10 { pt3dadd( 81.8113, 39.5778, 6.72828, 0.23 ) }
    dend_10 { pt3dadd( 83.4432, 40.0033, 7.19871, 0.23 ) }
    dend_10 { pt3dadd( 84.1647, 40.2283, 7.42456, 0.23 ) }
    dend_10 { pt3dadd( 86.4293, 41.1214, 8.26869, 0.91 ) }
    dend_10 { pt3dadd( 88.0453, 41.8997, 8.96529, 0.23 ) }
    dend_10 { pt3dadd( 89.1852, 42.5397, 9.48583, 0.91 ) }
    dend_10 { pt3dadd( 91.8287, 44.1293, 10.5559, 0.23 ) }
    dend_10 { pt3dadd( 94.0974, 45.5795, 11.3392, 0.23 ) }
    dend_10 { pt3dadd( 95.6426, 46.6115, 11.7947, 0.23 ) }
    dend_10 { pt3dadd( 96.9753, 47.5196, 12.1229, 0.68 ) }
    dend_10 { pt3dadd( 99.289, 49.0531, 12.5927, 0.23 ) }
    dend_10 { pt3dadd( 102.862, 51.3524, 13.1959, 0.23 ) }
    dend_10 { pt3dadd( 105.114, 52.6694, 13.4209, 0.23 ) }
    dend_10 { pt3dadd( 106.232, 53.2536, 13.494, 0.23 ) }
    dend_10 { pt3dadd( 107.838, 53.9784, 13.5495, 0.23 ) }
    dend_10 { pt3dadd( 109.298, 54.5525, 13.6005, 0.68 ) }
    dend_10 { pt3dadd( 110.092, 54.7941, 13.6484, 0.68 ) }
    dend_10 { pt3dadd( 112.084, 55.269, 14.0272, 0.23 ) }
    dend_10 { pt3dadd( 113.688, 55.5568, 14.3767, 0.68 ) }
    dend_10 { pt3dadd( 114.832, 55.735, 14.6451, 0.23 ) }
    dend_10 { pt3dadd( 116.185, 55.9558, 14.9719, 0.68 ) }
    dend_10 { pt3dadd( 118.733, 56.4504, 15.6245, 0.23 ) }
    dend_10 { pt3dadd( 120.909, 56.9232, 16.2966, 0.91 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 94/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 50.3511, 34.7465, -5.52739, 0.68 ) }
    dend_7 { pt3dadd( 51.354, 35.3948, -5.8316, 0.68 ) }
    dend_7 { pt3dadd( 52.02, 35.7981, -5.99972, 0.68 ) }
    dend_7 { pt3dadd( 53.5982, 36.7083, -6.34742, 0.23 ) }
    dend_7 { pt3dadd( 54.6922, 37.3291, -6.55062, 0.23 ) }
    dend_7 { pt3dadd( 56.2147, 38.1647, -6.77773, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_7 { pt3dadd( 58.0426, 39.1457, -7.00263, 0.23 ) }
    dend_7 { pt3dadd( 58.4923, 39.3834, -7.04371, 1.36 ) }
    dend_7 { pt3dadd( 58.9415, 39.6247, -7.06439, 1.36 ) }
    dend_7 { pt3dadd( 60.2287, 40.3815, -6.9605, 0.23 ) }
    dend_7 { pt3dadd( 61.4743, 41.2546, -6.7521, 0.23 ) }
    dend_7 { pt3dadd( 62.1419, 41.794, -6.60785, 0.23 ) }
    dend_7 { pt3dadd( 62.6643, 42.275, -6.49592, 1.14 ) }
    dend_7 { pt3dadd( 63.6028, 43.1932, -6.39603, 1.14 ) }
    dend_7 { pt3dadd( 65.2877, 44.9015, -6.45302, 0.23 ) }
    dend_7 { pt3dadd( 66.1545, 45.7787, -6.65919, 0.68 ) }
    dend_7 { pt3dadd( 66.9953, 46.5547, -6.97819, 0.23 ) }
    dend_7 { pt3dadd( 68.1812, 47.4855, -7.50047, 0.68 ) }
    dend_7 { pt3dadd( 69.9523, 48.6377, -8.339, 0.23 ) }
    dend_7 { pt3dadd( 71.0922, 49.2203, -8.85671, 0.23 ) }
    dend_7 { pt3dadd( 72.7067, 49.8441, -9.54853, 1.14 ) }
    dend_7 { pt3dadd( 74.4625, 50.307, -10.0962, 0.23 ) }
    dend_7 { pt3dadd( 75.9728, 50.5491, -10.3687, 0.68 ) }
    dend_7 { pt3dadd( 76.6855, 50.5989, -10.3902, 0.23 ) }
    dend_7 { pt3dadd( 78.6556, 50.6256, -10.1709, 0.91 ) }
    dend_7 { pt3dadd( 79.5262, 50.6205, -10.0071, 0.91 ) }
    dend_7 { pt3dadd( 80.9742, 50.6024, -9.66875, 0.23 ) }
    dend_7 { pt3dadd( 81.9167, 50.6073, -9.4615, 0.23 ) }
    dend_7 { pt3dadd( 82.4659, 50.6346, -9.35493, 0.23 ) }
    dend_7 { pt3dadd( 83.9973, 50.8057, -9.11694, 0.68 ) }
    dend_7 { pt3dadd( 85.6793, 51.1413, -8.94547, 0.23 ) }
    dend_7 { pt3dadd( 86.5013, 51.36, -8.90034, 0.68 ) }
    dend_7 { pt3dadd( 87.3358, 51.6445, -8.91234, 0.23 ) }
    dend_7 { pt3dadd( 88.1051, 51.9279, -8.99203, 0.23 ) }
    dend_7 { pt3dadd( 89.0553, 52.2647, -9.13925, 0.23 ) }
    dend_7 { pt3dadd( 89.7386, 52.4956, -9.268, 0.68 ) }
    dend_7 { pt3dadd( 91.5301, 53.0351, -9.61804, 0.23 ) }
    dend_7 { pt3dadd( 92.8526, 53.4126, -9.89261, 1.14 ) }
    dend_7 { pt3dadd( 94.7346, 53.9014, -10.298, 0.23 ) }
    dend_7 { pt3dadd( 96.3858, 54.2793, -10.6559, 0.23 ) }
    dend_7 { pt3dadd( 97.5554, 54.5273, -10.9091, 0.91 ) }
    dend_7 { pt3dadd( 99.5641, 54.8921, -11.2956, 0.23 ) }
    dend_7 { pt3dadd( 105.909, 58.6267, -12.502, 0.23 ) }
    dend_7 { pt3dadd( 112.508, 61.7163, -14.2357, 0.23 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -100.499, -73.6455, -52.7196, 0.23 ) }
    dend_76 { pt3dadd( -106.394, -82.477, -51.3552, 0.23 ) }
    dend_76 { pt3dadd( -113.975, -90.0147, -49.8237, 0.23 ) }
    dend_76 { pt3dadd( -121.38, -97.1101, -46.4011, 0.23 ) }
    dend_76 { pt3dadd( -127.865, -104.617, -42.1981, 0.23 ) }
    dend_76 { pt3dadd( -132.22, -112.663, -36.5954, 0.23 ) }
    dend_76 { pt3dadd( -135.947, -120.061, -29.71, 0.23 ) }
    dend_76 { pt3dadd( -138.265, -127.964, -22.8123, 0.23 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 46/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -100.499, -73.6455, -52.7196, 0.23 ) }
    dend_75 { pt3dadd( -105.703, -80.6709, -57.4723, 0.23 ) }
    dend_75 { pt3dadd( -111.699, -87.7779, -60.9693, 0.23 ) }
    dend_75 { pt3dadd( -116.613, -94.9425, -65.8036, 0.23 ) }
    dend_75 { pt3dadd( -122.034, -102.294, -69.6726, 0.23 ) }
    dend_75 { pt3dadd( -127.278, -108.71, -75.268, 0.23 ) }
    dend_75 { pt3dadd( -132.214, -114.525, -81.8017, 0.23 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 53/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -137.511, -85.3969, -45.9008, 0.23 ) }
    dend_73 { pt3dadd( -147.067, -94.0078, -47.9743, 0.23 ) }
    dend_73 { pt3dadd( -156.53, -102.89, -48.8978, 0.23 ) }
    dend_73 { pt3dadd( -166.105, -111.708, -49.0472, 0.23 ) }
    dend_73 { pt3dadd( -175.517, -120.676, -49.4252, 0.23 ) }
    dend_73 { pt3dadd( -185.446, -128.928, -51.3591, 0.23 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 59/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -137.511, -85.3969, -45.9008, 0.23 ) }
    dend_72 { pt3dadd( -145.013, -91.2491, -46.6706, 0.23 ) }
    dend_72 { pt3dadd( -151.132, -98.4559, -46.9545, 0.23 ) }
    dend_72 { pt3dadd( -155.997, -106.512, -47.3687, 0.23 ) }
    dend_72 { pt3dadd( -161.8, -113.958, -47.8093, 0.23 ) }
    dend_72 { pt3dadd( -168.71, -120.461, -48.3349, 0.23 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 65/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 43.5599, 36.5459, -110.184, 0.23 ) }
    dend_69 { pt3dadd( 51.086, 40.0933, -119.234, 0.23 ) }
    dend_69 { pt3dadd( 57.0898, 41.5579, -129.914, 0.23 ) }
    dend_69 { pt3dadd( 62.3718, 41.9256, -141.073, 0.23 ) }
    dend_69 { pt3dadd( 67.22, 44.3363, -152.134, 0.23 ) }
    dend_69 { pt3dadd( 72.3883, 47.8198, -162.719, 0.23 ) }
    dend_69 { pt3dadd( 78.7714, 51.7128, -172.455, 0.23 ) }
    dend_69 { pt3dadd( 86.2118, 55.802, -181.32, 0.23 ) }
    dend_69 { pt3dadd( 93.6025, 59.7175, -190.312, 0.23 ) }
    dend_69 { pt3dadd( 103.343, 63.1003, -197.038, 0.23 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 75/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 43.5599, 36.5459, -110.184, 0.23 ) }
    dend_68 { pt3dadd( 48.0355, 40.1164, -116.311, 0.23 ) }
    dend_68 { pt3dadd( 51.7462, 42.8172, -123.333, 0.23 ) }
    dend_68 { pt3dadd( 55.8309, 45.7233, -130.063, 0.23 ) }
    dend_68 { pt3dadd( 59.6163, 50.0994, -136.077, 0.23 ) }
    dend_68 { pt3dadd( 63.3632, 54.498, -142.097, 0.23 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 81/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 36.864, -6.782, -103.846, 0.23 ) }
    dend_66 { pt3dadd( 44.399, -9.98558, -112.823, 0.23 ) }
    dend_66 { pt3dadd( 52.2907, -14.0223, -121.089, 0.23 ) }
    dend_66 { pt3dadd( 60.1619, -16.8862, -129.9, 0.23 ) }
    dend_66 { pt3dadd( 66.2738, -21.6604, -139.19, 0.23 ) }
    dend_66 { pt3dadd( 72.2969, -25.4774, -149.012, 0.23 ) }
    dend_66 { pt3dadd( 76.8602, -29.9148, -159.329, 0.23 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 88/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 36.864, -6.782, -103.846, 0.23 ) }
    dend_65 { pt3dadd( 40.8243, -8.41784, -108.499, 0.23 ) }
    dend_65 { pt3dadd( 43.7359, -9.91827, -113.919, 0.23 ) }
    dend_65 { pt3dadd( 47.1754, -10.9119, -119.152, 0.23 ) }
    dend_65 { pt3dadd( 50.1756, -11.8203, -124.667, 0.23 ) }
    dend_65 { pt3dadd( 52.4786, -12.269, -130.565, 0.23 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 94/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 146.804, 142.839, -7.99594, 0.23 ) }
    dend_51 { pt3dadd( 157.292, 148.998, -8.31018, 0.23 ) }
    dend_51 { pt3dadd( 167.04, 156.151, -7.37503, 0.23 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 97/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 146.804, 142.839, -7.99594, 0.23 ) }
    dend_50 { pt3dadd( 155.455, 148.236, -9.27241, 0.23 ) }
    dend_50 { pt3dadd( 163.797, 154.08, -10.4296, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_50 { pt3dadd( 170.979, 161.264, -9.9345, 0.23 ) }
    dend_50 { pt3dadd( 177.088, 169.277, -9.13853, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 2/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 49.6368, -140.553, 110.466, 0.23 ) }
    dend_37 { pt3dadd( 52.871, -142.823, 113.887, 0.23 ) }
    dend_37 { pt3dadd( 54.4832, -143.954, 115.593, 0.91 ) }
    dend_37 { pt3dadd( 58.8102, -146.991, 120.17, 0.23 ) }
    dend_37 { pt3dadd( 60.4852, -148.167, 121.942, 0.68 ) }
    dend_37 { pt3dadd( 63.7823, -150.481, 125.43, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 8/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 49.6368, -140.553, 110.466, 0.23 ) }
    dend_36 { pt3dadd( 50.349, -143.374, 112.774, 0.23 ) }
    dend_36 { pt3dadd( 51.2309, -146.867, 115.632, 0.68 ) }
    dend_36 { pt3dadd( 51.7902, -149.083, 117.444, 0.23 ) }
    dend_36 { pt3dadd( 52.1816, -150.633, 118.713, 0.91 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 13/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 5.25735, -157.505, 101.792, 0.23 ) }
    dend_34 { pt3dadd( 5.86634, -158.7, 102.909, 0.23 ) }
    dend_34 { pt3dadd( 6.26123, -159.252, 103.459, 0.68 ) }
    dend_34 { pt3dadd( 8.04083, -161.347, 105.246, 0.23 ) }
    dend_34 { pt3dadd( 8.31858, -161.675, 105.525, 0.23 ) }
    dend_34 { pt3dadd( 9.20913, -162.723, 106.419, 0.23 ) }
    dend_34 { pt3dadd( 10.4198, -164.149, 107.636, 0.91 ) }
    dend_34 { pt3dadd( 11.2759, -165.073, 108.48, 0.23 ) }
    dend_34 { pt3dadd( 12.6076, -166.26, 109.538, 0.68 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 22/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 5.25735, -157.505, 101.792, 0.23 ) }
    dend_33 { pt3dadd( 4.00957, -159.375, 102.514, 0.23 ) }
    dend_33 { pt3dadd( 2.89962, -161.01, 103.086, 0.91 ) }
    dend_33 { pt3dadd( 1.20449, -163.404, 103.965, 0.23 ) }
    dend_33 { pt3dadd( 0.779472, -163.969, 104.178, 0.68 ) }
    dend_33 { pt3dadd( -0.589051, -165.794, 104.86, 0.23 ) }
    dend_33 { pt3dadd( -1.04349, -166.362, 105.122, 1.14 ) }
    dend_33 { pt3dadd( -1.56644, -166.961, 105.459, 1.14 ) }
    dend_33 { pt3dadd( -3.36307, -169.143, 106.741, 0.23 ) }
    dend_33 { pt3dadd( -4.59224, -170.688, 107.67, 1.14 ) }
    dend_33 { pt3dadd( -4.98253, -171.19, 107.991, 1.14 ) }
    dend_33 { pt3dadd( -7.22643, -174.139, 109.983, 0.23 ) }
    dend_33 { pt3dadd( -7.95687, -175.095, 110.699, 0.23 ) }
    dend_33 { pt3dadd( -9.38732, -176.959, 112.253, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 36/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 120.909, 56.9232, 16.2966, 0.23 ) }
    dend_12 { pt3dadd( 121.421, 58.3665, 16.6413, 0.23 ) }
    dend_12 { pt3dadd( 121.719, 59.0875, 16.8101, 0.91 ) }
    dend_12 { pt3dadd( 123.622, 62.8649, 17.7225, 0.23 ) }
    dend_12 { pt3dadd( 124.955, 64.993, 18.3386, 0.68 ) }
    dend_12 { pt3dadd( 126.227, 66.6224, 18.8839, 0.23 ) }
    dend_12 { pt3dadd( 127.569, 68.1243, 19.4241, 0.91 ) }
    dend_12 { pt3dadd( 128.611, 69.0722, 19.8082, 0.23 ) }
    dend_12 { pt3dadd( 130.213, 70.2848, 20.349, 0.68 ) }
    dend_12 { pt3dadd( 132.604, 71.7425, 21.0747, 0.23 ) }
    dend_12 { pt3dadd( 135.094, 73.0722, 21.8366, 0.23 ) }
    dend_12 { pt3dadd( 136.46, 73.7257, 22.2257, 0.23 ) }
    dend_12 { pt3dadd( 137.762, 74.3327, 22.6114, 0.91 ) }
    dend_12 { pt3dadd( 138.683, 74.736, 22.8909, 0.91 ) }
    dend_12 { pt3dadd( 146.163, 79.5445, 25.1601, 0.91 ) }
    dend_12 { pt3dadd( 153.531, 84.2994, 27.8898, 0.91 ) }
    dend_12 { pt3dadd( 159.592, 90.2065, 31.3321, 0.91 ) }
    dend_12 { pt3dadd( 166.127, 96.257, 33.2421, 0.91 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 54/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 120.909, 56.9232, 16.2966, 0.23 ) }
    dend_11 { pt3dadd( 122.488, 57.0296, 16.7491, 0.23 ) }
    dend_11 { pt3dadd( 125.795, 57.209, 17.6628, 0.45 ) }
    dend_11 { pt3dadd( 129.267, 57.3571, 18.5976, 0.23 ) }
    dend_11 { pt3dadd( 132.765, 57.5136, 19.6313, 0.68 ) }
    dend_11 { pt3dadd( 136.41, 57.7273, 20.7427, 0.23 ) }
    dend_11 { pt3dadd( 140.442, 57.9855, 21.9817, 0.68 ) }
    dend_11 { pt3dadd( 142.111, 58.1201, 22.4978, 0.23 ) }
    dend_11 { pt3dadd( 143.843, 58.2666, 23.0306, 0.68 ) }
    dend_11 { pt3dadd( 147.327, 58.5553, 24.0709, 0.23 ) }
    dend_11 { pt3dadd( 151.874, 59.0037, 25.517, 1.14 ) }
    dend_11 { pt3dadd( 154.096, 59.256, 26.2432, 0.23 ) }
    dend_11 { pt3dadd( 155.147, 59.3844, 26.6458, 0.91 ) }
    dend_11 { pt3dadd( 157.484, 59.7273, 27.6077, 0.23 ) }
    dend_11 { pt3dadd( 158.913, 59.9609, 28.2015, 1.14 ) }
    dend_11 { pt3dadd( 161.914, 60.4505, 29.4255, 0.23 ) }
    dend_11 { pt3dadd( 165.426, 61.0323, 31.0885, 0.91 ) }
    dend_11 { pt3dadd( 169.02, 61.6206, 32.87, 0.23 ) }
    dend_11 { pt3dadd( 172.504, 62.1973, 34.588, 0.68 ) }
    dend_11 { pt3dadd( 176.764, 62.919, 36.6362, 0.23 ) }
    dend_11 { pt3dadd( 178.614, 63.2242, 37.5565, 0.68 ) }
    dend_11 { pt3dadd( 182.588, 63.8325, 39.6069, 0.23 ) }
    dend_11 { pt3dadd( 186.412, 64.3936, 41.5907, 0.68 ) }
    dend_11 { pt3dadd( 189.876, 64.9067, 43.4006, 0.23 ) }
    dend_11 { pt3dadd( 192.591, 65.3079, 44.8647, 0.23 ) }
    dend_11 { pt3dadd( 199.198, 66.2801, 48.3781, 0.23 ) }
    dend_11 { pt3dadd( 203.671, 66.9633, 50.6199, 0.23 ) }
    dend_11 { pt3dadd( 207.009, 67.4973, 52.1717, 0.68 ) }
    dend_11 { pt3dadd( 212.838, 68.5266, 54.9342, 0.23 ) }
    dend_11 { pt3dadd( 216.72, 69.2629, 56.7373, 0.23 ) }
    dend_11 { pt3dadd( 220.586, 70.0805, 58.5412, 0.23 ) }
    dend_11 { pt3dadd( 224.63, 71.0025, 60.2886, 0.45 ) }
    dend_11 { pt3dadd( 226.42, 71.4312, 61.0471, 0.68 ) }
    dend_11 { pt3dadd( 232.446, 72.9269, 63.666, 0.23 ) }
    dend_11 { pt3dadd( 235.462, 73.6839, 64.9703, 0.68 ) }
    dend_11 { pt3dadd( 240.785, 75.2255, 67.5877, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 90/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 112.508, 61.7163, -14.2357, 0.23 ) }
    dend_9 { pt3dadd( 118.611, 64.357, -14.9689, 0.23 ) }
    dend_9 { pt3dadd( 124.809, 66.9141, -14.8369, 0.23 ) }
    dend_9 { pt3dadd( 131.23, 68.8499, -15.2302, 0.23 ) }
    dend_9 { pt3dadd( 137.785, 70.3705, -14.9596, 0.23 ) }
    dend_9 { pt3dadd( 144.337, 71.2555, -13.6192, 0.23 ) }
    dend_9 { pt3dadd( 150.82, 71.0681, -11.787, 0.23 ) }
    dend_9 { pt3dadd( 157.18, 71.7113, -9.62957, 0.23 ) }
    dend_9 { pt3dadd( 163.311, 72.9287, -7.09143, 0.23 ) }
    dend_9 { pt3dadd( 169.772, 73.8972, -5.41014, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 175.931, 75.0968, -2.93248, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 1/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 112.508, 61.7163, -14.2357, 0.23 ) }
    dend_8 { pt3dadd( 121.817, 65.6126, -14.9828, 0.23 ) }
    dend_8 { pt3dadd( 131.316, 69.14, -15.1538, 0.23 ) }
    dend_8 { pt3dadd( 140.218, 73.7541, -16.2401, 0.23 ) }
    dend_8 { pt3dadd( 149.255, 77.7325, -18.4197, 0.23 ) }
    dend_8 { pt3dadd( 158.873, 80.8906, -19.1109, 0.23 ) }
    dend_8 { pt3dadd( 168.289, 84.6174, -19.0076, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_39 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_57 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_18 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_14 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_70 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_58 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_55 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_54 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_47 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_42 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_41 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_31 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_25 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_13 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_74 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_71 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_67 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_64 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_49 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_35 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_32 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_7 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_76 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_75 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_73 OneSecGrp_SectionRef_65.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_72 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_69 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_68 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_66 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_50 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_12 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_11 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_9 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_8 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_28 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_15 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_4 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_19 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_62 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_45 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_5 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_53 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_63 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_46 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_65 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_61 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_34 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_60 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_37 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_48 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_21 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_22 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_51 OneSecGrp_SectionRef_71.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 11
    dend_39 nseg = 9
    dend_16 nseg = 11
    dend_1 nseg = 11
    dend_57 nseg = 3
    dend_43 nseg = 5
    dend_29 nseg = 19
    dend_20 nseg = 9
    dend_18 nseg = 3
    dend_17 nseg = 3
    dend_14 nseg = 11
    dend_3 nseg = 3
    dend_2 nseg = 3
    dend_70 nseg = 3
    dend_59 nseg = 5
    dend_58 nseg = 13
    dend_55 nseg = 7
    dend_54 nseg = 7
    dend_52 nseg = 7
    dend_47 nseg = 5
    dend_42 nseg = 3
    dend_41 nseg = 7
    dend_38 nseg = 5
    dend_31 nseg = 5
    dend_25 nseg = 5
    dend_24 nseg = 17
    dend_13 nseg = 5
    dend_74 nseg = 3
    dend_71 nseg = 5
    dend_67 nseg = 5
    dend_64 nseg = 3
    dend_49 nseg = 3
    dend_35 nseg = 3
    dend_32 nseg = 3
    dend_10 nseg = 3
    dend_7 nseg = 3
    dend_76 nseg = 3
    dend_75 nseg = 3
    dend_73 nseg = 3
    dend_72 nseg = 3
    dend_69 nseg = 5
    dend_68 nseg = 3
    dend_66 nseg = 3
    dend_50 nseg = 3
    dend_12 nseg = 3
    dend_11 nseg = 7
    dend_9 nseg = 3
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_NBC_5d97f161ff_0_0


