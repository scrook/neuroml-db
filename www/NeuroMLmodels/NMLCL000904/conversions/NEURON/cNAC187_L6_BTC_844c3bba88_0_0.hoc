// Cell: cNAC187_L6_BTC_844c3bba88_0_0
/*
{
  "id" : "cNAC187_L6_BTC_844c3bba88_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.16881, -12.804, 0.0, 3.44428", "1.99522, -11.5105, 0.0, 5.75363", "1.82164, -10.2169, 0.0, 7.75663", "1.64805, -8.92341, 0.0, 8.89598", "1.47447, -7.62987, 0.0, 9.91596", "1.30088, -6.33633, 0.0, 10.9547", "1.1273, -5.04279, 0.0, 11.8384", "0.953711, -3.74926, 0.0, 12.6846", "0.780126, -2.45572, 0.0, 13.1367", "0.606541, -1.16218, 0.0, 13.4162", "0.432956, 0.13136, 0.0, 13.3909", "0.25937, 1.4249, 0.0, 13.2383", "0.085785, 2.71844, 0.0, 12.8868", "-0.0878002, 4.01197, 0.0, 12.8103", "-0.261385, 5.30551, 0.0, 12.9125", "-0.434971, 6.59905, 0.0, 12.4763", "-0.608556, 7.89259, 0.0, 11.6777", "-0.782141, 9.18613, 0.0, 10.5994", "-0.955726, 10.4797, 0.0, 9.19908", "-1.12931, 11.7732, 0.0, 7.03753", "-1.3029, 13.0667, 0.0, 4.1381" ]
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.21969, -11.987, -4.59, 1.84", "3.21969, -11.987, -4.59, 1.84", "3.43332, -12.6596, -4.62976, 1.84", "3.889, -14.0944, -4.71457, 2.14", "4.18069, -15.0127, -4.76886, 1.92", "4.55158, -16.1805, -4.83789, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.219697, -12.424, -1.64, 2.43", "0.219697, -12.424, -1.64, 2.43", "-0.411222, -13.8516, -1.82936, 1.92", "-0.93623, -15.0395, -1.98694, 2.14", "-1.26126, -15.7749, -2.08449, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.5397, 11.896, 0.0, 3.02", "1.5397, 11.896, 0.0, 3.02", "1.79105, 12.791, -0.0570443, 2.36", "2.12656, 13.8982, -0.119594, 2.36", "2.68392, 15.6767, -0.209241, 2.29", "3.11293, 16.9951, -0.284014, 2.21", "3.55275, 18.2992, -0.361464, 2.29", "3.93881, 19.4226, -0.430588, 2.43", "4.3813, 20.6651, -0.512215, 2.36", "4.75301, 21.6367, -0.569365, 2.51", "5.15189, 22.5845, -0.625682, 3.17", "5.41093, 23.1678, -0.651259, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.3029, 13.0667, 0.0, 0.475067", "-3.29794, 27.9334, 0.0, 0.475067", "-5.29297, 42.8002, 0.0, 0.475067" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "4.55158, -16.1805, -4.83789, 0.88", "3.62678, -16.0725, -5.66224, 0.88", "2.72297, -16.0593, -6.45235, 0.81", "1.82193, -16.131, -7.25899, 0.81", "0.780899, -16.2991, -8.21848, 0.96", "-0.204288, -16.5371, -9.16429, 1.4", "-1.14611, -16.8591, -10.141, 1.77", "-1.97306, -17.2064, -11.0477, 0.44", "-2.68667, -17.6136, -11.8656, 0.44", "-3.08866, -17.9318, -12.3226, 0.44", "-3.40496, -18.3239, -12.7327, 0.66", "-3.75966, -19.099, -13.4048, 1.03", "-10.6986, -19.8597, -22.3707, 1.03", "-16.2104, -20.1407, -32.3066, 1.03", "-19.4438, -19.017, -43.1402, 1.03" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "4.55158, -16.1805, -4.83789, 1.11", "5.30444, -17.1244, -4.72605, 1.11", "5.96444, -18.0087, -4.57311, 1.25", "6.2172, -18.3689, -4.49188, 1.7", "6.65772, -19.0296, -4.33192, 1.77", "7.40865, -20.1612, -4.05867, 1.33", "7.98912, -21.0429, -3.85582, 1.03", "8.42262, -21.7347, -3.66802, 1.03", "8.85438, -22.4516, -3.49469, 1.03", "9.22322, -23.0854, -3.37985, 1.33", "9.76314, -24.0592, -3.28065, 1.33", "10.2635, -25.01, -3.28234, 0.74", "10.7619, -26.0139, -3.38307, 0.74", "11.2838, -27.0417, -3.53306, 0.88", "11.6779, -27.8119, -3.66199, 1.33", "11.9872, -28.3973, -3.73241, 2.06", "12.6366, -29.6166, -3.82018, 0.96", "13.1875, -30.5931, -3.82771, 0.74", "13.6085, -31.3017, -3.79304, 1.18", "13.8985, -31.7747, -3.72487, 1.55", "14.6525, -32.987, -3.51185, 0.88", "15.1014, -33.7154, -3.41056, 0.81", "15.7114, -34.7261, -3.34977, 0.88", "16.0449, -35.3059, -3.37157, 1.4", "16.3247, -35.8369, -3.45019, 1.4", "16.7296, -36.674, -3.64939, 0.81", "17.1035, -37.5027, -3.91994, 0.88", "17.4019, -38.1639, -4.16473, 0.52", "17.5795, -38.5422, -4.31609, 0.96", "17.9068, -39.1675, -4.54453, 1.92", "18.3578, -39.9567, -4.78261, 0.74", "18.8106, -40.6957, -4.96848, 0.74", "19.2796, -41.398, -5.10878, 0.96", "19.7549, -42.0385, -5.23083, 1.55", "20.6192, -43.0862, -5.45269, 0.81", "21.3661, -43.9078, -5.64005, 0.81", "22.0869, -44.6471, -5.81971, 1.25", "22.8012, -45.3574, -5.99436, 1.4", "23.8509, -46.414, -6.21129, 0.81", "24.7417, -47.3604, -6.35568, 0.81", "25.2452, -47.9065, -6.42264, 1.18", "25.8252, -48.5026, -6.47791, 1.55", "26.4428, -49.1377, -6.50741, 1.55", "27.1854, -49.9605, -6.51321, 0.59", "27.8895, -50.8323, -6.44201, 0.81", "28.3362, -51.4425, -6.33961, 1.33", "28.998, -52.3965, -6.14796, 0.37", "29.3491, -52.9489, -6.0075, 0.22", "33.8362, -58.869, -6.29117, 0.22", "39.3112, -63.8359, -7.60552, 0.22", "45.1113, -68.6238, -7.48081, 0.22", "50.4043, -73.7335, -6.0227, 0.22", "56.2473, -78.0626, -3.98227, 0.22", "61.5027, -83.2891, -2.89531, 0.22", "66.5503, -88.7911, -3.07664, 0.22", "71.5157, -94.2562, -4.21239, 0.22", "76.6688, -99.6719, -4.13644, 0.22", "81.3892, -105.427, -4.39688, 0.22", "85.6809, -111.401, -5.43398, 0.22", "89.5883, -117.305, -7.69723, 0.22", "94.4436, -122.381, -10.3232, 0.22", "98.1414, -127.7, -14.0589, 0.22", "102.287, -133.423, -16.4122, 0.22", "105.61, -139.874, -17.7747, 0.22", "109.677, -146.067, -17.9027, 0.22" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.26126, -15.7749, -2.08449, 0.96", "-2.13516, -16.2873, -2.03361, 0.96", "-2.61325, -16.5827, -2.01225, 0.96", "-3.10254, -16.9019, -1.99697, 1.25", "-3.36075, -17.0821, -1.99237, 1.25", "-3.83672, -17.4287, -1.9943, 0.96", "-4.28904, -17.7637, -2.00686, 0.96", "-4.68907, -18.0688, -2.02731, 1.47", "-5.19501, -18.4221, -2.05725, 1.62", "-5.8215, -18.7992, -2.08745, 0.96", "-6.33624, -19.0672, -2.1125, 0.96", "-7.06534, -19.3863, -2.14213, 1.11", "-7.58977, -19.5693, -2.15721, 1.4", "-8.50933, -19.8184, -2.17695, 1.33", "-9.2706, -19.9811, -2.19971, 0.96", "-10.0519, -20.1307, -2.23069, 1.18", "-10.4446, -20.2041, -2.24857, 1.18", "-11.4471, -20.4086, -2.30747, 0.88", "-12.0213, -20.5623, -2.354, 0.88", "-12.4132, -20.7071, -2.40442, 1.03", "-13.1347, -21.066, -2.51385, 1.25", "-13.5939, -21.3464, -2.58409, 0.88", "-14.034, -21.6631, -2.6509, 0.88", "-14.4259, -21.9782, -2.70765, 1.11", "-14.8692, -22.3252, -2.7732, 1.25", "-15.4511, -22.7538, -2.89353, 0.88", "-15.8984, -23.079, -3.04303, 1.03", "-16.2227, -23.3253, -3.20559, 1.4", "-16.6261, -23.6396, -3.48627, 1.18", "-17.1316, -24.0151, -3.95058, 1.25", "-17.4971, -24.3185, -4.51729, 1.4", "-17.1666, -24.3593, -5.19333, 1.4", "-16.6836, -24.2585, -5.55108, 1.47", "-15.6668, -23.981, -6.0878, 0.52", "-15.0997, -23.8177, -6.28077, 0.52", "-14.4904, -23.6402, -6.40999, 0.59", "-13.4423, -23.3575, -6.50946, 0.59", "-12.7939, -23.2013, -6.50981, 0.66", "-12.0905, -23.0724, -6.45078, 0.74", "-11.1424, -22.9382, -6.3267, 0.59", "-10.4263, -22.8743, -6.21059, 0.88", "-9.45766, -22.8325, -6.01962, 0.37", "-8.94317, -22.8466, -5.90598, 0.37", "-8.43693, -22.9027, -5.76792, 0.37", "-13.0341, -26.5224, -7.16271, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.26126, -15.7749, -2.08449, 1.4", "-1.1587, -17.0318, -1.87854, 1.4", "-1.04023, -18.325, -1.68783, 1.03", "-0.918803, -19.5822, -1.50293, 1.33", "-0.781756, -21.0344, -1.28129, 1.25", "-0.651405, -22.3539, -1.06091, 1.25", "-0.529121, -23.6115, -0.829396, 1.11", "-0.42893, -24.8211, -0.619226, 1.84", "-0.358572, -25.6027, -0.495693, 1.62", "-0.212215, -27.0949, -0.23885, 1.18", "-0.068326, -28.677, 0.0544828, 1.11", "0.0666677, -30.2684, 0.359823, 1.25", "0.146386, -31.3205, 0.553033, 1.55", "0.223309, -32.4651, 0.771613, 2.06" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "5.41093, 23.1678, -0.651259, 2.88", "5.49979, 23.8575, -0.575867, 2.88", "5.61196, 24.7281, -0.480702, 2.58", "5.73872, 25.712, -0.373151, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.41093, 23.1678, -0.651259, 1.62", "6.28823, 22.81, -1.42705, 1.62", "7.33297, 22.2542, -2.29123, 0.96", "8.0327, 21.8214, -2.842, 0.96", "8.80696, 21.2744, -3.43522, 1.11", "9.22411, 20.9536, -3.7463, 1.25", "10.0141, 20.2816, -4.33788, 0.96", "10.9582, 19.3146, -5.02312, 0.81", "11.484, 18.7444, -5.39735, 0.81", "11.9413, 18.2635, -5.72779, 0.81", "12.3614, 17.84, -6.06891, 0.88", "13.0527, 17.2061, -6.67499, 0.74", "13.7861, 16.6231, -7.35064, 0.59", "14.4357, 16.1759, -7.94814, 0.74", "14.8981, 15.8827, -8.35927, 0.66", "15.3985, 15.5735, -8.76054, 0.66", "16.1339, 15.1169, -9.29274, 0.96", "16.9134, 14.6456, -9.79284, 1.11", "17.8918, 14.0099, -10.3695, 0.81", "18.6813, 13.4395, -10.8143, 0.81", "19.4403, 12.8473, -11.2476, 0.52", "19.921, 12.4308, -11.5561, 0.52", "20.2549, 12.089, -11.8458, 0.52", "20.6232, 11.6126, -12.3402, 0.74", "20.9756, 11.0293, -13.0683, 0.96", "21.1647, 10.6343, -13.6023, 1.03", "21.3753, 10.1226, -14.3318, 0.81", "21.6568, 9.5036, -15.2191, 0.52", "21.881, 8.95505, -15.9924, 0.88", "21.9929, 8.68189, -16.3851, 1.11", "22.2444, 8.13763, -17.1806, 0.81", "22.5584, 7.63834, -17.9008, 0.22", "23.0887, 7.07848, -18.6754, 0.15", "27.9634, 2.40421, -23.3031, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-5.29297, 42.8002, 0.0, 0.15", "-7.28801, 57.6669, 0.0, 0.15", "-9.28305, 72.5336, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-19.4438, -19.017, -43.1402, 0.15", "-24.7751, -19.3926, -49.6262, 0.15", "-30.5606, -19.2705, -55.7247, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-19.4438, -19.017, -43.1402, 0.59", "-22.5863, -19.854, -55.9059, 0.15", "-25.5673, -19.4758, -68.7329, 0.15", "-31.1517, -16.919, -80.3653, 0.15", "-38.7185, -15.3612, -91.0334, 0.15", "-44.797, -15.1161, -102.72, 0.15", "-51.2596, -17.2241, -113.977, 0.15", "-58.1279, -18.2082, -125.168, 0.15", "-64.7298, -20.2279, -136.361, 0.15", "-71.7712, -22.2588, -147.28, 0.15", "-80.118, -21.9362, -157.468, 0.15", "-87.4279, -21.6542, -168.426, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "109.677, -146.067, -17.9027, 0.15", "117.491, -155.472, -20.5452, 0.15", "125.01, -165.342, -21.2004, 0.15", "132.879, -174.832, -19.8984, 0.15", "140.964, -184.022, -17.9073, 0.15", "148.985, -193.5, -17.5337, 0.15", "158.123, -202.016, -17.355, 0.15", "169.237, -208.044, -17.6545, 0.15", "178.402, -216.476, -19.1152, 0.15", "187.557, -224.985, -19.2539, 0.15", "195.748, -234.228, -21.1899, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "109.677, -146.067, -17.9027, 0.59", "115.598, -154.092, -17.4987, 0.15", "120.301, -162.79, -18.5995, 0.15", "123.15, -172.07, -20.6176, 0.15", "124.821, -181.764, -21.1894, 0.15", "127.782, -191.052, -22.9756, 0.15", "130.838, -200.395, -24.0863, 0.15", "135.662, -208.941, -25.8605, 0.15", "140.433, -217.376, -28.2955, 0.15", "145.172, -226.102, -28.4017, 0.15", "148.83, -235.289, -28.6657, 0.15", "153.255, -244.146, -29.4168, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-13.0341, -26.5224, -7.16271, 0.15", "-17.5502, -30.2604, -6.56084, 0.15", "-21.5378, -34.5339, -6.25837, 0.15", "-24.4501, -39.4508, -5.23248, 0.15", "-27.7249, -44.2452, -5.16341, 0.15", "-31.2942, -48.8073, -5.72186, 0.15", "-33.6254, -54.0458, -6.20599, 0.15", "-36.2178, -59.1494, -6.895, 0.15", "-38.2711, -64.5176, -6.81609, 0.15", "-40.5343, -69.7619, -5.99063, 0.15", "-42.3456, -75.0251, -4.44665, 0.15", "-43.6823, -80.5346, -3.53944, 0.15", "-45.7626, -85.8929, -3.53975, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-13.0341, -26.5224, -7.16271, 0.59", "-19.9076, -33.7041, -13.9087, 0.15", "-25.7157, -41.128, -21.3141, 0.15", "-32.5908, -47.9066, -28.5017, 0.15", "-37.8508, -54.6009, -36.9943, 0.15", "-42.088, -61.2743, -46.0467, 0.15", "-46.9515, -68.7762, -54.0094, 0.15", "-50.0523, -76.6592, -62.4123, 0.15", "-52.8335, -85.2398, -70.1445, 0.15", "-54.2309, -92.785, -79.2957, 0.15", "-56.6508, -100.466, -88.1113, 0.15", "-59.0078, -107.098, -97.8404, 0.15", "-60.1335, -114.483, -107.17, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "0.223309, -32.4651, 0.771613, 0.44", "-0.551574, -33.6374, 1.45145, 0.44", "-0.910594, -34.1268, 1.78272, 0.44", "-1.40153, -34.783, 2.35465, 0.44", "-1.79291, -35.3515, 2.92793, 0.66", "-2.08567, -35.8784, 3.4318, 0.66", "-2.24183, -36.2553, 3.75086, 0.44", "-2.39208, -36.762, 4.18852, 0.52", "-2.47559, -37.502, 4.722, 0.66", "-2.42846, -38.3162, 5.14957, 0.66", "-2.29532, -39.2629, 5.55249, 0.88", "-2.1367, -40.2361, 5.89957, 1.11", "-1.99771, -41.1562, 6.1697, 0.74", "-1.91575, -41.8413, 6.29146, 0.29", "-1.86974, -42.5438, 6.32929, 0.22", "-1.86477, -42.9614, 6.31791, 0.22", "-1.90308, -43.5102, 6.283, 0.22", "-1.96302, -44.0274, 6.23254, 0.22", "-2.09409, -45.1386, 6.1145, 0.29", "-2.1636, -45.9994, 6.03245, 0.52", "-2.17734, -46.6081, 5.98341, 0.52", "-2.12701, -47.4441, 5.93505, 0.44", "-1.95949, -48.683, 5.90412, 0.29", "-1.84783, -49.2879, 5.91186, 0.66", "-1.7563, -49.7118, 5.95613, 1.77", "-1.58433, -50.4793, 6.09073, 1.18", "-1.40866, -51.4578, 6.32325, 0.52", "-1.28413, -52.3684, 6.58439, 0.52", "-1.21992, -52.9574, 6.77793, 0.81", "-1.10352, -53.8381, 7.07941, 0.96", "-0.977856, -54.6061, 7.36539, 0.52", "-0.789589, -55.645, 7.80723, 0.22", "-0.690147, -56.1318, 8.04261, 0.29", "-0.542623, -56.7696, 8.39098, 0.29", "-0.336981, -57.6776, 8.90092, 0.22", "-0.20077, -58.272, 9.24837, 0.37", "-0.069476, -58.8854, 9.61367, 0.74", "0.0250558, -59.4744, 9.95952, 1.03", "0.0603544, -60.1408, 10.3176, 1.25", "-0.00477803, -61.4456, 10.9556, 0.37", "-0.088778, -62.2048, 11.3124, 1.18", "-0.166493, -62.9061, 11.618, 2.65", "-0.25642, -64.0511, 12.076, 2.21", "-0.29408, -65.1603, 12.4988, 0.96", "-0.275088, -66.0763, 12.833, 0.29", "-0.233066, -66.7256, 13.0743, 0.29", "-0.196088, -67.3314, 13.297, 0.66", "-0.167561, -68.0554, 13.5961, 0.44", "-0.149877, -68.699, 13.8835, 0.22", "-0.139927, -69.0219, 14.0385, 0.22", "-0.138003, -69.4149, 14.2142, 0.22", "-0.178572, -70.2161, 14.5302, 0.29", "-0.218031, -70.8217, 14.7483, 0.29", "-0.23068, -71.2375, 14.8825, 0.22", "-0.230681, -71.717, 15.012, 0.22", "-0.198252, -72.1381, 15.1192, 0.81", "-0.128597, -72.5358, 15.2135, 1.55", "0.0951964, -73.3952, 15.4266, 1.84", "0.490543, -74.6825, 15.7468, 0.15", "0.607635, -75.0871, 15.8568, 0.15", "0.703855, -75.425, 15.9523, 0.15", "0.807587, -75.8338, 16.0683, 0.15", "0.945691, -76.4397, 16.2361, 0.88", "1.05489, -76.9432, 16.3686, 1.92", "1.29293, -77.9427, 16.5987, 1.99", "1.36071, -78.1985, 16.6525, 1.99", "1.65448, -79.3805, 16.8633, 0.15", "1.72764, -79.7079, 16.9084, 0.15", "1.7936, -80.0451, 16.9371, 0.37", "1.84509, -80.388, 16.9529, 0.37", "1.94756, -81.2015, 16.9834, 0.15", "1.99128, -81.7067, 17.0114, 0.15", "2.03947, -82.3013, 17.0573, 0.22", "2.05703, -82.648, 17.0972, 0.22", "2.05253, -83.2745, 17.1842, 0.15", "2.02584, -83.7535, 17.2589, 0.15", "1.99552, -84.1326, 17.3243, 0.59", "1.98344, -84.5349, 17.4035, 1.03", "2.00678, -85.157, 17.5204, 0.22", "2.06689, -85.8115, 17.649, 0.07", "2.12384, -86.231, 17.7417, 0.07", "2.17059, -86.4952, 17.8094, 0.66", "2.32172, -87.1835, 18.0314, 0.96", "2.65971, -88.4243, 18.4866, 0.22", "2.88971, -89.0965, 18.7704, 0.22", "3.06603, -89.5303, 18.9915, 0.44", "3.28037, -90.0195, 19.2662, 1.25", "3.48665, -90.4457, 19.5162, 1.92", "3.79802, -90.9808, 19.8554, 1.11", "4.14192, -91.4896, 20.2125, 0.22", "4.41623, -91.889, 20.479, 0.22", "4.71569, -92.361, 20.7647, 0.52", "5.05995, -93.0174, 21.122, 0.22", "5.35343, -93.7304, 21.5002, 0.22", "5.54073, -94.3061, 21.8105, 0.22", "5.61488, -94.5999, 21.9665, 0.81", "5.75908, -95.2975, 22.346, 1.77", "5.98133, -96.6229, 23.1044, 0.37", "6.08897, -97.3173, 23.5115, 0.15", "6.13693, -97.6367, 23.6915, 0.15", "6.20373, -98.034, 23.9063, 0.37", "6.29439, -98.5188, 24.1687, 1.18", "6.41691, -99.0908, 24.4746, 1.55", "6.62245, -99.9695, 24.9027, 0.81", "6.75162, -100.588, 25.1614, 0.15", "6.81706, -100.986, 25.3177, 0.22", "6.90768, -101.587, 25.5407, 0.15", "6.97839, -102.139, 25.7342, 0.96", "7.05817, -102.751, 25.9463, 1.18", "7.19245, -103.694, 26.2635, 0.22", "7.27535, -104.137, 26.4117, 0.22", "7.4057, -104.694, 26.6018, 0.37", "7.44963, -104.848, 26.6529, 0.37", "7.63036, -105.409, 26.8405, 0.22", "7.72727, -105.668, 26.9365, 0.22", "7.94067, -106.111, 27.0942, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.223309, -32.4651, 0.771613, 1.84", "0.162209, -33.6741, 0.227463, 1.84", "0.142819, -35.124, -0.356105, 1.55", "0.169079, -36.6885, -0.912966, 1.55", "0.19477, -38.3236, -1.43136, 1.55", "0.197473, -39.9467, -1.88289, 1.47", "0.180575, -41.3684, -2.24558, 0.96", "0.147303, -42.502, -2.48331, 1.55", "0.0232631, -44.5352, -2.80335, 1.25", "-0.148448, -46.6355, -3.07513, 1.47", "-0.37169, -48.8004, -3.30949, 1.03", "-0.568528, -50.2632, -3.45716, 1.18", "-0.913524, -52.327, -3.6432, 1.99", "-1.28316, -54.0786, -3.7941, 1.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.73872, 25.712, -0.373151, 2.14", "6.81074, 26.9528, -0.265281, 2.14" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.73872, 25.712, -0.373151, 1.47", "6.12467, 26.7196, 0.84624, 1.47", "6.29904, 27.32, 1.63589, 1.18", "6.38982, 27.8627, 2.45817, 1.18", "6.40521, 28.4075, 3.4449, 1.47", "6.32946, 28.7901, 4.31544, 1.47", "6.23608, 28.9222, 4.76094, 1.47", "5.82687, 28.9487, 5.64853, 1.47", "5.12037, 28.7072, 6.60446, 1.03", "4.636, 28.4503, 7.08659, 1.62", "4.16038, 28.1395, 7.4772, 1.77", "3.53366, 27.6472, 7.93976, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "27.9634, 2.40421, -23.3031, 0.15", "34.8259, -3.12978, -28.3625, 0.15", "42.0389, -7.98973, -33.6963, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "27.9634, 2.40421, -23.3031, 0.59", "33.6329, -3.33847, -30.8643, 0.15", "37.9181, -10.2197, -38.2607, 0.15", "40.1385, -17.96, -45.5886, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-30.5606, -19.2705, -55.7247, 0.15", "-36.3817, -17.4309, -58.5612, 0.15", "-41.0833, -14.6317, -62.4239, 0.15", "-44.8988, -10.7539, -66.2325, 0.15", "-49.5563, -7.46304, -69.7013, 0.15", "-54.5409, -4.80404, -73.3105, 0.15", "-59.2583, -2.29079, -77.3656, 0.15", "-63.3068, 0.896054, -81.6161, 0.15", "-67.444, 4.54899, -85.3342, 0.15", "-70.8909, 7.64475, -90.1502, 0.15", "-75.2321, 10.0652, -94.6613, 0.15", "-80.4855, 12.8665, -97.7311, 0.15", "-85.7319, 15.3773, -101.077, 0.15", "-90.6798, 18.8032, -103.949, 0.15", "-96.2436, 21.7025, -106.284, 0.15", "-102.335, 24.2566, -107.462, 0.15", "-108.161, 27.5184, -107.452, 0.15", "-113.982, 30.7085, -108.213, 0.15", "-120.135, 33.3472, -107.833, 0.15", "-126.222, 36.1197, -107.445, 0.15", "-132.032, 39.2895, -108.368, 0.15", "-137.532, 42.9411, -109.222, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-30.5606, -19.2705, -55.7247, 0.59", "-33.8693, -22.6589, -64.4484, 0.15", "-38.1089, -25.0527, -73.1313, 0.15", "-41.6035, -28.3704, -81.8116, 0.15", "-44.7224, -31.6938, -90.6334, 0.15", "-47.1938, -34.3379, -99.906, 0.15", "-50.2432, -37.7413, -108.719, 0.15", "-52.2069, -41.1259, -117.848, 0.15", "-54.961, -44.1219, -126.919, 0.15", "-56.2704, -49.2393, -135.242, 0.15", "-56.4186, -54.8297, -143.336, 0.15", "-56.4702, -60.5986, -151.293, 0.15", "-57.8234, -66.4299, -159.071, 0.15", "-57.7675, -73.2362, -166.064, 0.15", "-59.1556, -80.8587, -171.866, 0.15", "-62.0342, -87.9974, -177.779, 0.15", "-64.7132, -94.7395, -184.278, 0.15", "-65.9493, -100.753, -191.922, 0.15", "-67.198, -106.766, -199.565, 0.15", "-67.0798, -114.507, -205.381, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-87.4279, -21.6542, -168.426, 0.15", "-93.9581, -22.2982, -178.223, 0.15", "-101.478, -22.8096, -187.293, 0.15", "-110.039, -22.6732, -195.402, 0.15", "-116.829, -21.1906, -204.92, 0.15", "-123.898, -18.3549, -213.875, 0.15", "-132.556, -17.7029, -221.853, 0.15", "-141.613, -17.8461, -229.404, 0.15", "-149.72, -19.5371, -237.788, 0.15", "-157.818, -23.2837, -245.416, 0.15", "-165.72, -27.3444, -253.07, 0.15", "-173.375, -33.6548, -259.141, 0.15", "-180.217, -39.9092, -266.157, 0.15", "-186.689, -46.3053, -273.375, 0.15", "-193.346, -53.938, -278.919, 0.15", "-199.737, -62.7293, -282.586, 0.15", "-206.353, -70.9298, -287.22, 0.15", "-211.399, -80.5488, -290.654, 0.15", "-214.883, -90.0772, -295.796, 0.15", "-216.878, -100.706, -298.969, 0.15", "-221.11, -110.669, -302.393, 0.15", "-226.394, -120.566, -304.303, 0.15", "-230.558, -130.594, -307.599, 0.15", "-236.246, -139.658, -311.647, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-87.4279, -21.6542, -168.426, 0.59", "-89.8044, -21.667, -176.28, 0.15", "-91.8839, -22.0292, -184.21, 0.15", "-94.8933, -22.7814, -191.803, 0.15", "-97.564, -24.7133, -199.292, 0.15", "-99.4703, -26.0769, -207.147, 0.15", "-100.164, -28.5952, -214.895, 0.15", "-101.381, -29.5551, -222.95, 0.15", "-103.021, -30.1484, -230.968, 0.15", "-104.911, -31.085, -238.895, 0.15", "-105.78, -33.2867, -246.729, 0.15", "-107.436, -36.7926, -253.88, 0.15", "-108.338, -39.6014, -261.495, 0.15", "-108.487, -42.19, -269.25, 0.15", "-108.647, -44.6801, -277.04, 0.15", "-107.92, -46.8163, -284.914, 0.15", "-108.157, -48.0287, -293.024, 0.15", "-109.175, -48.5484, -301.15, 0.15", "-109.143, -50.471, -309.114, 0.15", "-110.274, -52.9226, -316.832, 0.15", "-112.558, -55.3212, -324.302, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-45.7626, -85.8929, -3.53975, 0.15", "-50.2382, -94.0594, -3.07058, 0.15", "-53.5054, -102.701, -2.18129, 0.15", "-56.1596, -111.556, -2.00766, 0.15", "-58.7712, -120.262, -0.0989158, 0.15", "-61.0023, -129.019, 2.03348, 0.15", "-61.6533, -138.128, 3.36454, 0.15", "-62.775, -147.236, 2.77331, 0.15", "-64.9033, -155.963, 0.7189, 0.15", "-68.0375, -164.039, -2.56262, 0.15", "-71.0677, -171.144, -7.77971, 0.15", "-74.8861, -177.394, -13.6493, 0.15", "-78.9828, -183.522, -19.4782, 0.15", "-84.1939, -188.964, -25.1877, 0.15", "-89.4013, -192.645, -32.2864, 0.15", "-94.5569, -196.227, -39.4791, 0.15", "-97.9515, -200.375, -47.3267, 0.15", "-100.136, -205.214, -55.1514, 0.15", "-102.314, -209.907, -63.0761, 0.15", "-105.932, -214.547, -70.5087, 0.15", "-110.189, -218.49, -78.0579, 0.15", "-115.834, -222.243, -84.7761, 0.15", "-121.748, -225.874, -91.3398, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-45.7626, -85.8929, -3.53975, 0.59", "-50.3415, -94.2576, -2.98058, 0.15", "-54.9069, -102.635, -3.14448, 0.15", "-60.3541, -110.339, -1.22984, 0.15", "-65.4735, -118.23, 0.752976, 0.15", "-71.1808, -125.611, 3.2541, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-60.1335, -114.483, -107.17, 0.15", "-63.8705, -123.269, -117.393, 0.15", "-68.3519, -133.513, -125.716, 0.15", "-72.8938, -142.401, -135.54, 0.15", "-77.0218, -153.435, -142.904, 0.15", "-80.4966, -165.747, -148.159, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-60.1335, -114.483, -107.17, 0.59", "-64.6361, -120.043, -114.57, 0.15", "-68.9989, -125.75, -121.93, 0.15", "-72.661, -133.348, -127.578, 0.15", "-75.4843, -142.075, -131.71, 0.15", "-76.3309, -151.421, -135.181, 0.15", "-76.2637, -160.949, -138.189, 0.15", "-74.9076, -170.353, -141.328, 0.15", "-74.8209, -180.209, -142.813, 0.15", "-73.2006, -189.701, -145.511, 0.15", "-73.2772, -199.023, -149.153, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "7.94067, -106.111, 27.0942, 0.22", "7.6049, -106.673, 27.1064, 0.22", "7.15583, -107.423, 27.1227, 0.22", "6.76585, -108.075, 27.1369, 0.22", "6.0702, -109.238, 27.1622, 0.22", "5.75629, -109.763, 27.1736, 0.15", "5.44324, -110.287, 27.185, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "7.94067, -106.111, 27.0942, 1.18", "8.26227, -107.209, 27.6241, 1.18", "8.60334, -108.479, 28.1887, 0.29", "8.88885, -109.645, 28.7017, 0.15", "9.03484, -110.308, 28.9886, 0.15", "9.16274, -110.961, 29.2635, 0.29", "9.30602, -111.886, 29.6591, 0.66", "9.39778, -112.842, 30.072, 1.4", "9.39277, -114.25, 30.6722, 0.22", "9.32326, -115.224, 31.0807, 0.22", "9.27587, -115.649, 31.2544, 0.22", "9.15552, -116.555, 31.5939, 0.22", "9.03485, -117.336, 31.8658, 0.66", "8.85158, -118.31, 32.1818, 0.15", "8.64954, -119.132, 32.4404, 0.15", "8.36755, -120.131, 32.7571, 0.52", "8.01111, -121.368, 33.1616, 0.29", "7.87122, -121.859, 33.3255, 0.15", "7.7301, -122.357, 33.503, 0.15", "7.45654, -123.268, 33.8202, 0.15", "7.25536, -123.881, 34.0281, 0.29", "6.98726, -124.722, 34.324, 1.11", "6.74228, -125.578, 34.635, 1.77", "6.47056, -126.774, 35.0655, 1.77", "6.24901, -128.028, 35.5197, 1.33", "5.99334, -129.777, 36.1433, 0.15", "5.84585, -130.943, 36.572, 0.22", "5.74787, -131.781, 36.8897, 0.66", "5.66009, -132.589, 37.2047, 0.81", "5.53279, -134.093, 37.8041, 0.15", "5.5204, -134.981, 38.1626, 0.22", "5.58199, -135.735, 38.4666, 0.22", "5.70201, -136.705, 38.8408, 0.22", "5.7862, -137.275, 39.0501, 0.66", "6.01536, -138.396, 39.445, 1.4", "6.4724, -139.98, 40.0177, 0.88", "6.78862, -140.971, 40.383, 0.15", "7.10269, -141.922, 40.7267, 0.15", "7.34042, -142.612, 40.9709, 0.22", "7.70555, -143.694, 41.3631, 0.29", "7.95389, -144.538, 41.6662, 0.15", "8.17109, -145.693, 42.0616, 0.15", "8.20331, -146.092, 42.1979, 0.15", "8.21461, -146.926, 42.5062, 0.22", "8.14979, -148.132, 42.9745, 0.22", "8.09696, -148.652, 43.1808, 0.22", "7.9833, -149.745, 43.6068, 0.37", "7.90178, -150.864, 44.0524, 0.22", "7.86562, -151.618, 44.3417, 0.88", "7.85048, -153.305, 44.9538, 2.06", "7.91202, -155.286, 45.5539, 0.59", "8.01524, -156.636, 45.8678, 0.22", "8.12571, -157.532, 46.0024, 0.22", "8.23667, -158.327, 46.0864, 0.22", "8.39482, -159.424, 46.1496, 0.59", "8.65141, -160.982, 46.125, 0.07", "8.83126, -161.932, 45.9911, 0.15", "9.05091, -163.061, 45.7231, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.28316, -54.0786, -3.7941, 0.74", "-1.30363, -55.5914, -4.10144, 0.74", "-1.31949, -56.9386, -4.39887, 0.74", "-1.34922, -57.7006, -4.57578, 0.81", "-1.44478, -58.9574, -4.89441, 0.88", "-1.52379, -59.7651, -5.10698, 0.81", "-1.65209, -60.808, -5.39611, 1.18", "-1.76918, -61.5832, -5.63791, 1.18", "-1.97387, -62.533, -5.95692, 1.03", "-2.23243, -63.5408, -6.32313, 1.11", "-2.47522, -64.3288, -6.62548, 0.74", "-2.80329, -65.2152, -6.97078, 1.11", "-3.10932, -65.9693, -7.25782, 0.81", "-3.47801, -66.8585, -7.57799, 0.81", "-3.59254, -67.183, -7.67855, 0.81", "-3.77686, -67.8678, -7.84901, 0.88", "-3.92538, -68.626, -7.97993, 0.88", "-4.09739, -69.8781, -8.10777, 1.11", "-4.16579, -70.4754, -8.1267, 1.33", "-4.34741, -71.9196, -8.05569, 0.74", "-4.44012, -72.7764, -7.98994, 0.74", "-4.53035, -74.0361, -7.85283, 0.88", "-4.56606, -74.7773, -7.74, 1.25", "-4.61534, -75.5418, -7.59094, 1.03", "-4.76377, -76.5631, -7.34037, 0.74", "-4.86012, -84.6804, -7.55571, 0.74", "-5.93184, -92.7123, -6.87658, 0.74", "-6.82274, -100.721, -5.76173, 0.74", "-7.87742, -108.369, -3.08451, 0.74", "-8.15112, -116.064, -0.363299, 0.74", "-9.1391, -123.518, 2.88619, 0.74", "-11.2206, -131.201, 4.7258, 0.74", "-11.562, -139.133, 6.52793, 0.74", "-11.5311, -146.999, 8.65214, 0.74", "-11.5173, -154.909, 10.5878, 0.74", "-11.3984, -162.838, 12.4333, 0.74", "-11.9959, -170.53, 15.1124, 0.74", "-14.4151, -177.728, 18.2532, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.28316, -54.0786, -3.7941, 1.03", "-1.37625, -54.8307, -3.38215, 1.03", "-1.5081, -55.9442, -2.83518, 1.03", "-1.59676, -56.8045, -2.49758, 1.03", "-1.68505, -58.0774, -2.07763, 1.03", "-1.70928, -59.1522, -1.77512, 0.96", "-1.69052, -59.9137, -1.57235, 0.96", "-1.63405, -60.5537, -1.42698, 0.96", "-1.33847, -62.2949, -1.07893, 0.88", "-1.05944, -63.3251, -0.875298, 0.88", "-0.535271, -64.6617, -0.56459, 0.88", "0.151184, -65.9812, -0.183713, 0.81", "0.726856, -66.8717, 0.140361, 0.81", "1.19214, -67.4746, 0.420333, 0.81", "1.90067, -68.2482, 0.865233, 0.88", "2.62571, -69.0452, 1.36303, 1.03", "3.09001, -69.6356, 1.72595, 1.03", "3.63555, -70.5412, 2.2146, 0.81", "3.99038, -71.3878, 2.59409, 1.4", "4.14496, -71.9172, 2.79331, 1.92", "4.43208, -73.33, 3.19636, 1.4", "4.71803, -74.9955, 3.52745, 0.88", "4.91058, -76.1658, 3.68619, 0.88", "5.11923, -77.3863, 3.78782, 1.03", "5.25446, -78.0661, 3.82084, 1.03", "5.5135, -79.1735, 3.84485, 0.81", "5.80086, -80.1944, 3.82195, 1.18", "5.88549, -80.5029, 3.8022, 1.18", "6.00018, -81.1066, 3.75151, 0.74", "6.01015, -81.8918, 3.68806, 0.44", "5.93628, -82.3589, 3.65627, 0.44", "5.73363, -83.0447, 3.62094, 0.66", "5.40758, -83.955, 3.57379, 0.81", "5.107, -84.7788, 3.52925, 0.96", "4.64623, -86.0676, 3.45823, 1.33", "4.35535, -86.9194, 3.41125, 0.88", "4.0919, -87.7563, 3.37988, 1.11", "3.8069, -88.7368, 3.37755, 1.18", "3.547, -89.668, 3.4028, 1.18", "3.18307, -90.9683, 3.4661, 0.52", "2.81388, -92.3171, 3.57855, 0.52", "2.53972, -93.3234, 3.67994, 0.74", "2.28932, -94.2601, 3.78722, 0.96", "2.06881, -95.1367, 3.88173, 1.62", "1.86723, -96.012, 3.96033, 1.62", "1.64842, -97.1063, 4.0294, 1.33", "1.50687, -98.0052, 4.0543, 0.44", "1.41948, -98.5389, 4.03851, 0.59", "1.2053, -99.5375, 3.97465, 0.59", "0.902441, -100.609, 3.8922, 0.88", "0.604953, -101.433, 3.8192, 1.25", "0.384815, -101.935, 3.77654, 2.21", "-0.189642, -103.103, 3.70833, 1.84", "-0.882396, -104.421, 3.66886, 1.33", "-1.53956, -105.627, 3.68936, 0.66", "-1.86682, -106.261, 3.71891, 0.44", "-2.19389, -106.943, 3.76253, 0.44", "-2.50879, -107.673, 3.81767, 0.81", "-2.82546, -108.604, 3.89151, 1.11", "-3.08683, -109.643, 3.96002, 0.74", "-3.3165, -110.768, 4.02258, 0.37", "-3.47922, -111.635, 4.05088, 0.37", "-3.58835, -112.183, 4.06151, 0.74", "-3.77673, -113.012, 4.07438, 0.88", "-4.09301, -114.224, 4.10775, 0.44", "-4.27839, -114.786, 4.14244, 0.44", "-4.51352, -115.323, 4.22064, 0.59", "-4.8501, -115.914, 4.35269, 0.96", "-5.17837, -116.393, 4.49706, 1.25", "-5.56049, -116.891, 4.6933, 1.25", "-6.01789, -117.486, 4.97124, 0.81", "-6.31232, -117.962, 5.1987, 1.11", "-6.62614, -118.789, 5.52622, 0.22", "-6.69455, -119.171, 5.62603, 0.22", "-6.74949, -119.777, 5.74446, 0.22", "-6.78918, -120.325, 5.81938, 0.74", "-6.83556, -120.876, 5.87718, 1.18", "-6.98336, -122.133, 5.99783, 0.66", "-7.16999, -123.218, 6.1136, 0.37", "-7.45677, -124.167, 6.22171, 0.66", "-7.77463, -124.959, 6.34095, 0.66", "-8.05038, -125.562, 6.46538, 1.25", "-8.32853, -126.131, 6.62735, 2.06", "-8.73836, -126.968, 6.93882, 2.21", "-9.45252, -128.533, 7.59876, 1.03", "-9.818, -129.43, 7.98209, 0.59", "-10.1348, -130.365, 8.34386, 0.37", "-10.3285, -131.06, 8.59494, 0.66", "-10.512, -131.904, 8.88415, 0.37", "-10.6489, -132.819, 9.20187, 0.29", "-10.6958, -133.415, 9.40302, 0.52", "-10.7873, -134.451, 9.73889, 0.22", "-10.8379, -134.979, 9.96595, 0.22", "-10.887, -135.552, 10.3105, 0.29", "-10.9265, -136.075, 10.7519, 0.96", "-10.9702, -136.579, 11.2592, 1.77", "-11.0131, -137.077, 11.7593, 1.77", "-11.0894, -138.235, 12.7972, 0.29", "-11.1003, -138.745, 13.1465, 0.29", "-11.1023, -139.197, 13.3623, 0.29", "-11.093, -139.891, 13.5665, 0.29", "-11.0943, -140.807, 13.7024, 0.29", "-11.1407, -141.881, 13.7279, 0.29", "-11.1978, -142.412, 13.6959, 0.29", "-11.349, -143.197, 13.6263, 0.29", "-11.6112, -144.114, 13.5538, 0.29", "-11.9594, -145.068, 13.52, 0.29", "-12.2079, -145.664, 13.52, 1.03", "-12.5265, -146.358, 13.5399, 1.92", "-13.0754, -147.526, 13.596, 3.02", "-13.6912, -148.835, 13.6913, 2.36", "-14.3946, -150.341, 13.8372, 0.22", "-14.6428, -150.899, 13.9089, 0.22", "-14.9502, -151.655, 14.0308, 0.22", "-15.0726, -151.991, 14.093, 0.52", "-15.248, -152.543, 14.2172, 0.96", "-15.4855, -153.357, 14.4085, 0.44", "-15.7699, -154.372, 14.6372, 0.22", "-15.9452, -155.025, 14.7747, 0.37", "-16.1408, -155.793, 14.9238, 0.81", "-16.3211, -156.464, 15.0425, 0.96", "-16.5872, -157.375, 15.1683, 1.25", "-16.8435, -158.247, 15.2505, 0.66", "-16.9515, -158.657, 15.2728, 0.22", "-17.1507, -159.553, 15.305, 0.22", "-17.2229, -159.979, 15.3254, 0.44", "-17.3699, -161.069, 15.4006, 0.22", "-17.4414, -161.826, 15.4906, 0.22", "-17.5114, -162.737, 15.6441, 0.29", "-17.577, -163.488, 15.7842, 0.52", "-17.6469, -164.266, 15.9316, 0.52", "-17.7426, -165.09, 16.0833, 0.52", "-17.8645, -165.868, 16.2179, 1.18", "-18.0137, -166.586, 16.3255, 2.43", "-18.3224, -167.818, 16.4893, 1.33", "-18.5927, -168.814, 16.5979, 0.59", "-18.817, -169.627, 16.6702, 0.81", "-19.0085, -170.33, 16.726, 0.15", "-19.1365, -170.797, 16.7583, 0.15", "-19.1929, -171.033, 16.779, 0.15", "-19.2638, -171.328, 16.8166, 0.22", "-19.4286, -171.893, 16.8952, 0.37", "-19.6584, -172.55, 16.9515, 0.37", "-19.954, -173.251, 16.9477, 0.22", "-20.3359, -174.003, 16.8751, 0.22", "-20.5929, -174.435, 16.7909, 0.22", "-20.872, -174.835, 16.6817, 0.74", "-21.3156, -175.411, 16.4869, 1.77", "-21.8404, -176.062, 16.2395, 2.21", "-22.2369, -176.53, 16.0749, 2.21", "-23.1207, -177.535, 15.7585, 0.37", "-23.6845, -178.204, 15.5971, 0.37", "-24.1279, -178.78, 15.5135, 0.22", "-24.5117, -179.322, 15.5001, 0.22", "-24.97, -179.991, 15.545, 0.22", "-25.2381, -180.382, 15.6058, 0.81", "-25.6654, -180.973, 15.7824, 1.25", "-26.1969, -181.643, 16.0633, 0.88", "-26.8289, -182.352, 16.4082, 0.22", "-27.1562, -182.712, 16.5857, 0.22", "-27.5096, -183.15, 16.7706, 0.22", "-27.8648, -183.691, 16.985, 0.22", "-28.1665, -184.407, 17.2194, 0.44", "-28.3428, -185.093, 17.3905, 1.47", "-28.486, -185.842, 17.5163, 1.47", "-28.658, -186.786, 17.6158, 0.44", "-28.8114, -187.668, 17.6674, 0.96", "-29.0574, -188.952, 17.6828, 0.22", "-29.2027, -189.631, 17.6792, 0.22", "-29.4717, -190.663, 17.6656, 0.22", "-29.7162, -191.431, 17.6313, 0.22", "-29.9252, -191.992, 17.5878, 0.22", "-30.2085, -192.661, 17.5137, 0.22", "-30.6205, -193.551, 17.4167, 0.22", "-30.8668, -194.109, 17.3678, 0.81", "-31.2225, -194.972, 17.314, 1.77", "-31.5574, -195.813, 17.2926, 1.18", "-32.1741, -197.431, 17.3044, 0.22", "-32.3655, -197.972, 17.3371, 0.22", "-32.6809, -198.901, 17.4502, 0.88", "-33.0528, -200.057, 17.6773, 0.15", "-33.2585, -200.733, 17.8852, 0.15", "-33.4165, -201.395, 18.1507, 0.29", "-33.518, -202.067, 18.4817, 0.74", "-33.5733, -202.58, 18.7548, 1.4", "-33.6413, -203.348, 19.208, 0.59", "-33.7239, -204.367, 19.8181, 0.15", "-33.7852, -205.146, 20.2629, 0.15", "-33.8323, -205.85, 20.6522, 0.15", "-33.8418, -206.497, 20.9833, 0.29", "-33.819, -207.31, 21.3961, 0.96", "-33.7784, -208.204, 21.8503, 0.44", "-33.7464, -208.926, 22.2213, 0.22", "-33.7199, -209.795, 22.704, 0.22", "-33.6766, -210.628, 23.1898, 0.15", "-33.6165, -211.339, 23.6002, 0.15", "-33.5734, -211.819, 23.8651, 0.15", "-33.5474, -212.298, 24.0991, 0.29", "-33.5546, -213.15, 24.4299, 0.44", "-33.6132, -213.989, 24.6744, 0.44", "-33.7548, -215.148, 24.9414, 0.44", "-33.8896, -216.107, 25.0901, 0.44", "-34.0773, -217.287, 25.2125, 0.88", "-34.262, -218.205, 25.2594, 1.03", "-34.4932, -219.085, 25.2637, 0.37", "-34.7557, -219.818, 25.2424, 0.15", "-35.0967, -220.526, 25.2104, 0.15", "-35.4573, -221.128, 25.1752, 0.37", "-35.9961, -221.874, 25.1259, 0.22", "-36.4451, -222.403, 25.0827, 0.81", "-37.253, -223.216, 24.9951, 1.25", "-38.2426, -224.058, 24.8703, 0.88", "-38.9099, -224.55, 24.7722, 0.22", "-39.5722, -225.002, 24.6416, 0.22", "-40.2222, -225.442, 24.4763, 0.74", "-41.0974, -226.085, 24.1876, 1.47", "-41.7728, -226.65, 23.9007, 0.37", "-42.7123, -227.587, 23.3696, 0.22", "-43.2949, -228.322, 22.9266, 0.29", "-43.7162, -229.044, 22.4908, 0.29", "-43.9621, -229.734, 22.0917, 0.29", "-44.0892, -230.498, 21.6841, 0.37", "-44.1367, -231.514, 21.221, 0.22", "-44.0885, -232.657, 20.7946, 0.22", "-44.0411, -233.215, 20.6254, 0.22", "-43.9638, -234.069, 20.4505, 0.37", "-43.926, -234.714, 20.3782, 0.59", "-43.9235, -236.252, 20.2947, 0.66", "-43.9889, -237.312, 20.2895, 0.88", "-44.0806, -238.025, 20.3414, 0.88", "-44.3119, -239.302, 20.479, 0.52", "-44.6115, -240.687, 20.6651, 0.22", "-44.9242, -242.076, 20.9196, 0.22", "-45.0594, -242.645, 21.0518, 0.81", "-45.4433, -244.154, 21.438, 1.25", "-45.6445, -245.022, 21.6695, 1.03", "-45.7579, -245.581, 21.8196, 1.03", "-45.993, -246.957, 22.2261, 0.22", "-46.1386, -247.974, 22.537, 0.22", "-46.2451, -248.659, 22.7222, 0.22", "-46.4486, -249.773, 22.9584, 0.22", "-46.61, -250.408, 23.0714, 0.22", "-46.9994, -251.576, 23.214, 0.22", "-47.355, -252.353, 23.2424, 0.74", "-47.7584, -253.097, 23.2136, 1.11", "-48.0882, -253.648, 23.1331, 1.11", "-48.7817, -254.693, 22.851, 0.74", "-49.2868, -255.445, 22.5421, 1.4", "-50.0357, -256.592, 21.9162, 0.66", "-50.5194, -257.393, 21.4186, 0.07", "-51.0824, -258.413, 20.7591, 0.07", "-51.4412, -259.106, 20.3054, 0.22", "-51.8183, -259.929, 19.7909, 0.22", "-52.0715, -260.513, 19.4569, 0.44", "-52.3804, -261.282, 19.0826, 0.44", "-52.841, -262.32, 18.7357, 0.44", "-53.1811, -262.996, 18.6296, 0.22", "-53.6997, -263.945, 18.6043, 0.15", "-54.0494, -264.474, 18.6547, 0.37", "-54.3232, -264.801, 18.7235, 0.37", "-55.0706, -265.566, 18.9674, 0.15", "-55.7993, -266.221, 19.2356, 0.15", "-56.0417, -266.414, 19.3234, 0.52", "-56.7202, -266.855, 19.5274, 1.03", "-57.6406, -267.395, 19.7467, 0.15", "-58.3116, -267.762, 19.8494, 0.15", "-58.9492, -268.106, 19.8769, 0.15", "-59.3539, -268.349, 19.8581, 0.59", "-60.2154, -268.938, 19.7696, 0.15", "-60.4933, -269.148, 19.7245, 0.15", "-60.9188, -269.525, 19.636, 0.66", "-61.2778, -269.885, 19.5583, 0.81", "-62.2532, -271.001, 19.3439, 0.15", "-63.01, -271.971, 19.1762, 0.15", "-63.6536, -272.89, 19.0321, 0.29", "-64.5326, -274.209, 18.8326, 0.22", "-65.2852, -275.403, 18.6618, 0.15", "-65.5904, -275.892, 18.5925, 0.66", "-66.0799, -276.646, 18.4615, 0.81", "-66.6997, -277.508, 18.2686, 0.44", "-67.0818, -278.019, 18.1435, 1.03", "-67.5003, -278.508, 17.999, 1.25", "-68.65, -279.724, 17.5777, 0.52", "-69.5504, -280.586, 17.2325, 0.22", "-70.1289, -281.068, 16.9955, 0.07" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.81074, 26.9528, -0.265281, 0.96", "7.97162, 27.907, -0.933988, 0.96", "8.53735, 28.3688, -1.25746, 1.03", "9.28726, 28.9511, -1.55845, 1.03", "9.9518, 29.4671, -1.82517, 1.62", "10.5957, 29.9672, -2.08363, 1.33", "11.4999, 30.6693, -2.44654, 1.03", "12.1882, 31.2039, -2.69616, 0.96", "13.5176, 32.2201, -3.10933, 1.62" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "6.81074, 26.9528, -0.265281, 0.88", "7.43972, 28.1909, -0.257959, 0.88", "8.18612, 29.4281, -0.196741, 0.81", "8.56095, 30.0015, -0.188342, 0.66", "8.94724, 30.5927, -0.209873, 1.11", "9.43596, 31.3884, -0.278471, 0.74", "9.77698, 31.9773, -0.357568, 0.52", "10.2651, 32.7883, -0.567258, 0.22", "10.5209, 33.4316, -0.818235, 0.29", "10.5609, 33.8788, -1.10232, 0.29", "10.4759, 34.3393, -1.52265, 0.66", "10.3864, 34.5666, -1.79063, 0.66", "10.0914, 35.0997, -2.47901, 0.81", "9.7073, 35.7694, -3.35676, 1.18", "9.43996, 36.3341, -4.04783, 1.03", "9.22507, 37.0035, -4.80487, 0.81", "9.10563, 37.7179, -5.54098, 1.11", "9.06901, 38.7014, -6.46632, 0.88", "9.13368, 39.5249, -7.18739, 0.66", "9.25386, 40.2892, -7.79828, 0.66", "9.34529, 40.9414, -8.26269, 0.66", "9.40035, 41.5424, -8.65363, 0.66", "9.44492, 42.2617, -9.11701, 0.81", "9.46923, 42.8081, -9.49572, 1.18", "9.47016, 43.4102, -9.91924, 1.18", "9.44439, 44.7523, -10.8172, 0.52", "9.40089, 45.4611, -11.3011, 0.52", "9.37101, 46.0233, -11.6738, 0.52", "9.37158, 46.4309, -11.9145, 1.03", "9.45644, 47.1713, -12.294, 1.03", "9.74292, 48.0733, -12.6742, 0.66", "11.6614, 55.0696, -17.013, 0.66", "12.9109, 62.4765, -20.8243, 0.66", "12.4722, 69.5699, -25.3966, 0.66", "11.4215, 76.5038, -30.1392, 0.66", "10.6277, 82.9862, -35.5755, 0.66", "8.1423, 89.0173, -41.0906, 0.66", "6.54281, 94.6398, -47.3483, 0.66", "5.75848, 100.491, -53.5227, 0.66", "4.02597, 106.825, -58.9417, 0.66", "2.602, 112.344, -65.3408, 0.66", "3.06204, 117.912, -71.8231, 0.66", "2.94099, 123.631, -78.1764, 0.66", "2.73558, 129.202, -84.6716, 0.66", "2.82735, 134.395, -91.5054, 0.66", "2.47482, 138.661, -99.0159, 0.66" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "3.53366, 27.6472, 7.93976, 0.96", "2.84712, 28.1456, 8.49001, 0.96", "2.20976, 28.4346, 9.04164, 0.66", "1.34488, 28.4761, 9.85159, 0.52", "1.02552, 28.2171, 10.2045, 0.52", "0.643649, 27.3927, 10.7069, 0.52", "0.462735, 26.9392, 10.97, 0.88", "0.113289, 25.8634, 11.5512, 1.11", "-0.202418, 24.8798, 12.0964, 1.25", "-0.492475, 24.1298, 12.5474, 1.25", "-1.16907, 22.7825, 13.4411, 0.66", "-1.59614, 22.1091, 13.9318, 0.96", "-2.08779, 21.4742, 14.4687, 1.33", "-2.74647, 20.7678, 15.1717, 1.33", "-3.75507, 19.8315, 16.2582, 1.33", "-4.8474, 18.8705, 17.4874, 0.88", "-5.51143, 18.3327, 18.2258, 0.88", "-6.26981, 17.7152, 19.0589, 1.4", "-6.75535, 17.299, 19.6051, 1.55", "-7.48637, 16.6152, 20.4748, 2.06", "-7.99153, 16.0104, 21.2175, 2.06" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "3.53366, 27.6472, 7.93976, 0.74", "3.1899, 26.8608, 7.80901, 0.74", "2.737, 25.8574, 7.69385, 0.52", "2.34195, 24.9788, 7.629, 0.88", "1.93757, 24.038, 7.62547, 0.44", "1.68244, 23.4302, 7.65902, 0.44", "1.49137, 22.9718, 7.70188, 0.37", "1.16225, 22.1475, 7.84037, 0.88", "0.874229, 21.2769, 8.02761, 0.44", "0.602449, 20.3132, 8.24375, 0.44", "0.446915, 19.6201, 8.37823, 0.74", "0.350512, 19.0729, 8.47415, 1.11", "0.194093, 17.8765, 8.67854, 0.96", "0.11109, 16.7591, 8.88188, 1.18", "0.0834588, 15.7987, 9.08299, 1.18", "0.0782141, 14.7013, 9.34456, 0.88", "0.0938932, 13.7891, 9.59575, 0.66", "0.121054, 13.0435, 9.8405, 0.66", "0.159995, 12.2475, 10.1245, 0.66", "0.208287, 11.3365, 10.4663, 0.66", "0.265926, 10.2968, 10.8414, 0.66", "0.300299, 8.84069, 11.2821, 0.52", "0.2987, 8.06017, 11.4564, 0.52", "0.271811, 6.72022, 11.643, 0.52", "0.233718, 5.80327, 11.6891, 0.52", "0.186596, 4.87163, 11.668, 0.52", "0.119585, 3.66985, 11.5948, 0.96", "0.0633024, 3.06091, 11.5513, 1.11", "-0.0171548, 2.4377, 11.5085, 1.11", "-0.264001, 0.899854, 11.4366, 0.44", "-0.40744, 0.172654, 11.4087, 0.44", "-0.723129, -1.12757, 11.406, 0.66", "-0.975326, -2.0122, 11.4246, 0.52", "-1.13029, -2.46755, 11.4313, 0.88", "-1.28207, -2.86541, 11.4327, 1.33", "-1.6289, -3.74828, 11.4044, 0.96", "-2.09792, -5.01207, 11.3167, 0.59", "-2.40161, -5.91169, 11.2112, 0.59", "-2.56733, -6.49578, 11.1293, 0.96", "-2.76556, -7.31626, 11.01, 0.52", "-2.9832, -8.43151, 10.8539, 0.22", "-3.09574, -9.15041, 10.7679, 0.29", "-3.20391, -9.7932, 10.7085, 0.29", "-3.3061, -10.2865, 10.6855, 1.03", "-3.49546, -11.0322, 10.6739, 1.84", "-3.84577, -12.1242, 10.7041, 0.74", "-4.29273, -13.2522, 10.7942, 0.29", "-4.81305, -14.2832, 10.9515, 0.29", "-5.1376, -14.833, 11.0693, 0.29", "-5.36947, -15.1972, 11.1588, 0.88", "-5.68528, -15.6793, 11.2857, 1.47", "-6.02565, -16.2124, 11.4146, 0.88", "-6.79714, -17.5646, 11.6743, 0.22", "-7.04442, -18.0848, 11.7395, 0.15", "-7.30504, -18.742, 11.7998, 0.37", "-7.52543, -19.3336, 11.8568, 0.22", "-7.86557, -20.2203, 11.9635, 0.22", "-8.18122, -20.956, 12.0813, 0.52", "-8.38479, -21.3669, 12.1727, 0.96", "-8.8628, -22.1204, 12.4184, 1.62", "-9.53078, -22.9751, 12.7836, 0.96", "-10.2846, -23.8337, 13.2198, 0.59", "-10.8742, -24.4634, 13.5803, 0.88", "-11.4373, -25.0602, 13.9253, 1.55", "-11.9301, -25.5888, 14.2227, 1.55", "-12.6672, -26.4322, 14.6453, 0.37", "-13.2621, -27.2118, 14.9957, 0.22", "-13.5939, -27.6983, 15.196, 0.44", "-14.0514, -28.4376, 15.4738, 1.11", "-14.2617, -28.8256, 15.595, 1.11", "-14.6884, -29.7226, 15.8339, 0.44", "-15.04, -30.5238, 15.9988, 0.22", "-15.3411, -31.2636, 16.0977, 0.29", "-15.5283, -31.7141, 16.1316, 0.15", "-15.8521, -32.4734, 16.1593, 0.29", "-15.9837, -32.776, 16.1626, 0.96", "-16.3037, -33.4839, 16.1571, 1.62", "-16.8378, -34.6808, 16.122, 2.06", "-17.3402, -35.8538, 16.0931, 1.4", "-17.5754, -36.4217, 16.087, 0.59", "-17.9336, -37.3131, 16.0969, 0.22", "-18.1499, -37.9124, 16.1054, 0.22", "-18.3415, -38.5187, 16.1194, 0.66", "-18.5296, -39.1885, 16.1332, 0.74", "-18.7102, -39.9089, 16.1523, 0.22", "-18.9143, -40.7175, 16.194, 0.15", "-19.0787, -41.3849, 16.2537, 0.22", "-19.182, -41.8537, 16.3036, 0.66", "-19.307, -42.4417, 16.3809, 1.25", "-19.4883, -43.2529, 16.5087, 1.47", "-19.7355, -44.2261, 16.6881, 0.88", "-19.9826, -45.0527, 16.8603, 0.22", "-20.183, -45.6212, 16.9905, 0.22", "-20.4019, -46.1673, 17.1217, 0.22", "-20.7965, -47.0221, 17.3364, 0.37", "-21.179, -47.7521, 17.5168, 0.37", "-21.6083, -48.5184, 17.7008, 0.52", "-21.8696, -48.9785, 17.8097, 0.22", "-22.1114, -49.4267, 17.9135, 0.37", "-22.3197, -49.8825, 18.0029, 0.74", "-22.5947, -50.6962, 18.1207, 0.22", "-22.8043, -51.574, 18.2042, 0.22", "-22.9394, -52.2796, 18.2434, 0.29", "-23.0432, -52.804, 18.2663, 0.52", "-23.199, -53.558, 18.2923, 1.11", "-23.3421, -54.2229, 18.3085, 1.7", "-23.5574, -55.1409, 18.3224, 1.33", "-23.8099, -56.1802, 18.3177, 0.22", "-23.9876, -57.0045, 18.3024, 0.22", "-24.0454, -57.2898, 18.2955, 0.22", "-24.1093, -57.6225, 18.2867, 0.29", "-24.2044, -58.1377, 18.2742, 0.52", "-24.3163, -58.8024, 18.2591, 0.22", "-24.4245, -59.3572, 18.2614, 0.22", "-24.5516, -59.8189, 18.2815, 0.22", "-24.756, -60.2947, 18.3378, 0.81", "-24.9941, -60.681, 18.4183, 1.47", "-25.2133, -60.9668, 18.4986, 1.47", "-25.7883, -61.6343, 18.7163, 0.22", "-26.1081, -61.9969, 18.8378, 0.22", "-26.4881, -62.4582, 18.9788, 0.37", "-26.9563, -63.0791, 19.1466, 0.44", "-27.2639, -63.5167, 19.2539, 0.22", "-27.3873, -63.7077, 19.291, 0.22", "-27.5375, -63.9571, 19.329, 0.22", "-27.8222, -64.4489, 19.3938, 0.22", "-28.052, -64.8449, 19.445, 0.74", "-28.3333, -65.3337, 19.5072, 1.47", "-28.7625, -66.0276, 19.6236, 1.99", "-29.1854, -66.6594, 19.7728, 1.77", "-29.8993, -67.6327, 20.0703, 0.66", "-30.3135, -68.1506, 20.2642, 0.15", "-30.7514, -68.6679, 20.4791, 0.15", "-31.2211, -69.2173, 20.7112, 0.22", "-31.6331, -69.6775, 20.9162, 0.22", "-32.0716, -70.1463, 21.1056, 0.29", "-32.4528, -70.5509, 21.2395, 0.81", "-32.9769, -71.1349, 21.3737, 1.47", "-33.5784, -71.8501, 21.4549, 0.52", "-34.105, -72.5814, 21.4375, 0.22", "-34.4647, -73.1718, 21.3674, 0.22", "-34.7039, -73.6632, 21.2891, 0.22", "-34.804, -73.9173, 21.2392, 0.22", "-34.9389, -74.3371, 21.1475, 0.29", "-35.1225, -74.9763, 20.9997, 0.74", "-35.2616, -75.4593, 20.884, 1.03", "-35.6005, -76.4805, 20.672, 0.37", "-35.8659, -77.1738, 20.5486, 0.88", "-36.1396, -77.8377, 20.4454, 1.18", "-36.3966, -78.44, 20.3602, 1.18", "-36.8661, -79.5519, 20.2316, 0.29", "-37.287, -80.5104, 20.1571, 0.29", "-37.5854, -81.1684, 20.139, 0.37", "-37.7996, -81.6294, 20.1579, 0.88", "-38.0131, -82.1009, 20.2022, 0.66", "-38.2657, -82.7503, 20.2828, 0.22", "-38.4312, -83.2832, 20.3598, 0.22", "-38.5737, -83.875, 20.4329, 0.37", "-38.6537, -84.2978, 20.4802, 0.66", "-38.764, -84.9665, 20.5574, 1.11", "-38.8948, -85.7625, 20.6555, 0.66", "-38.9904, -86.2644, 20.7247, 0.29", "-39.1297, -86.9606, 20.8345, 0.22", "-39.2361, -87.4328, 20.9044, 0.29", "-39.4421, -88.2576, 20.9916, 0.96", "-39.606, -88.8424, 21.0261, 1.03", "-39.9008, -89.8443, 21.0328, 0.81", "-40.1355, -90.6466, 20.9916, 0.29", "-40.346, -91.3078, 20.9348, 0.22", "-40.5804, -91.9983, 20.8581, 0.29", "-40.7947, -92.5983, 20.7767, 0.74", "-40.9833, -93.1258, 20.7016, 0.52", "-41.417, -94.2808, 20.5547, 0.29", "-41.8569, -95.3554, 20.4754, 0.29", "-42.2917, -96.3366, 20.4925, 0.29", "-42.5447, -96.868, 20.5369, 0.29", "-42.8061, -97.383, 20.599, 1.03", "-43.0714, -97.8806, 20.6667, 1.7", "-43.5362, -98.7511, 20.7918, 1.4", "-44.2292, -100.059, 20.992, 0.44", "-44.6298, -100.803, 21.1294, 0.15", "-44.8076, -101.129, 21.1945, 0.37", "-45.0966, -101.65, 21.2932, 0.59", "-45.3775, -102.16, 21.3725, 0.59", "-45.909, -103.118, 21.4827, 0.22", "-46.3278, -103.828, 21.5477, 0.22", "-46.6457, -104.351, 21.5978, 0.22", "-46.8978, -104.772, 21.6328, 0.88", "-47.1333, -105.198, 21.6785, 1.47", "-47.4597, -105.832, 21.7482, 1.84", "-48.3593, -107.703, 21.9613, 0.22", "-48.4936, -107.995, 21.9898, 0.22", "-48.6677, -108.385, 22.0309, 0.22", "-49.074, -109.251, 22.1268, 0.22", "-49.3567, -109.794, 22.1949, 0.22", "-49.6005, -110.209, 22.2465, 0.74", "-50.0676, -110.938, 22.3119, 1.33", "-50.6779, -111.81, 22.3865, 0.22", "-51.0494, -112.299, 22.4263, 0.22", "-51.4593, -112.85, 22.4753, 0.22", "-51.738, -113.303, 22.54, 0.15", "-51.9173, -113.675, 22.6125, 0.15", "-52.1351, -114.221, 22.7694, 0.37", "-52.2254, -114.493, 22.8646, 0.96", "-52.5277, -115.522, 23.2748, 2.14", "-52.8716, -116.722, 23.8058, 0.66", "-53.1273, -117.55, 24.2279, 0.15", "-53.3734, -118.254, 24.6466, 0.15", "-53.5325, -118.665, 24.9236, 0.44", "-53.6903, -119.041, 25.1963, 1.03", "-53.9611, -119.653, 25.6486, 1.55", "-54.29, -120.409, 26.2216, 0.44", "-54.513, -120.939, 26.574, 0.22", "-54.6739, -121.357, 26.8046, 0.22", "-54.9217, -122.009, 27.1129, 0.22", "-55.1659, -122.628, 27.3639, 0.29", "-55.4647, -123.337, 27.5999, 0.29", "-55.8671, -124.224, 27.8358, 0.15", "-56.1882, -124.876, 27.9815, 0.22", "-56.5576, -125.543, 28.0885, 0.88", "-57.1289, -126.468, 28.1729, 0.74", "-57.535, -127.057, 28.1892, 0.88", "-57.9767, -127.657, 28.1617, 1.77", "-58.4926, -128.33, 28.079, 2.29", "-59.2863, -129.355, 27.8582, 0.07", "-59.7667, -129.975, 27.6582, 0.15", "-60.065, -130.363, 27.485, 0.15", "-60.2227, -130.577, 27.3726, 0.15", "-60.4828, -130.994, 27.1328, 0.15", "-60.6294, -131.328, 26.942, 0.15", "-60.814, -131.936, 26.6571, 0.15", "-60.8707, -132.165, 26.5653, 0.15", "-61.0145, -132.817, 26.3317, 0.66", "-61.2852, -134.007, 25.9529, 0.29", "-61.4724, -134.784, 25.7455, 0.22", "-61.6463, -135.499, 25.5864, 0.22", "-61.8149, -136.122, 25.4844, 0.22", "-61.928, -136.439, 25.4568, 0.59", "-62.0796, -136.741, 25.4635, 0.74", "-62.2818, -137.036, 25.5274, 0.37", "-62.5737, -137.389, 25.667, 0.15", "-63.1698, -138.047, 26.0028, 0.15", "-63.5052, -138.393, 26.2076, 0.22", "-63.8472, -138.744, 26.4188, 0.29", "-64.1926, -139.12, 26.6467, 0.22", "-64.624, -139.643, 26.9447, 0.22", "-65.0871, -140.285, 27.2762, 0.29", "-65.3949, -140.774, 27.5101, 0.29", "-65.786, -141.384, 27.8026, 0.22", "-66.1242, -141.861, 28.0398, 0.37", "-66.4684, -142.308, 28.258, 0.74", "-66.7197, -142.629, 28.4111, 1.03", "-67.2207, -143.276, 28.7138, 0.22", "-67.6704, -143.883, 28.9787, 0.22", "-68.0654, -144.416, 29.1948, 0.15", "-68.3702, -144.836, 29.3431, 0.15", "-68.5851, -145.157, 29.4419, 0.15", "-68.9235, -145.719, 29.5698, 0.22", "-69.3886, -146.578, 29.706, 0.29", "-69.7454, -147.343, 29.7891, 0.74", "-70.0914, -148.215, 29.869, 0.74", "-70.3397, -148.903, 29.9279, 0.37", "-70.5841, -149.64, 29.9864, 0.37", "-70.7564, -150.209, 30.0425, 1.4", "-71.0017, -151.026, 30.1427, 2.95", "-71.3706, -152.172, 30.3288, 1.18", "-71.6997, -153.063, 30.5168, 0.22", "-72.1059, -154.095, 30.7828, 0.29", "-72.41, -154.861, 30.9996, 0.74", "-72.6417, -155.429, 31.1633, 1.33", "-73.0449, -156.283, 31.4257, 0.81", "-73.4289, -156.978, 31.6128, 1.18", "-74.0795, -158.121, 31.8554, 0.66", "-74.4839, -158.87, 31.9613, 0.29", "-74.6357, -159.163, 31.9874, 0.44", "-75.2244, -160.384, 32.0539, 0.29", "-75.6506, -161.297, 32.0682, 0.81", "-76.2923, -162.604, 32.0368, 0.22", "-76.6444, -163.191, 31.9942, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "42.0389, -7.98973, -33.6963, 0.15", "47.8867, -12.8185, -39.3452, 0.15", "53.3875, -18.1969, -44.7866, 0.15", "58.5582, -22.882, -51.1743, 0.15", "64.497, -27.7977, -56.6438, 0.15", "70.3094, -31.1669, -63.396, 0.15", "75.8917, -34.5301, -70.3415, 0.15", "81.2901, -39.0872, -76.6449, 0.15", "85.2432, -44.8327, -82.9328, 0.15", "90.8699, -50.0389, -88.4316, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "42.0389, -7.98973, -33.6963, 0.59", "49.2724, -14.012, -40.6222, 0.15", "56.1771, -20.0243, -47.8668, 0.15", "63.5621, -26.5755, -54.0992, 0.15", "71.1721, -33.3534, -59.8004, 0.15", "78.6721, -39.0189, -66.7781, 0.15", "85.5872, -44.8475, -74.1725, 0.15", "91.5504, -51.573, -81.5324, 0.15", "96.6562, -57.9449, -89.7767, 0.15", "100.682, -64.8542, -98.1058, 0.15", "103.729, -73.2315, -105.294, 0.15", "108.02, -80.9718, -112.668, 0.15", "112.107, -87.7605, -121.076, 0.15", "115.501, -94.1959, -130.047, 0.15", "120.806, -99.5127, -138.958, 0.15", "129.062, -104.104, -145.965, 0.15", "137.354, -109.07, -152.651, 0.15", "146.64, -112.38, -159.17, 0.15", "155.572, -116.468, -165.697, 0.15", "165.161, -118.267, -172.423, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "40.1385, -17.96, -45.5886, 0.15", "43.4136, -24.2012, -51.9031, 0.15", "46.6372, -31.1421, -57.3781, 0.15", "49.6923, -37.4544, -63.7254, 0.15", "52.1207, -45.4105, -67.9415, 0.15", "54.9524, -53.8077, -70.7079, 0.15", "57.3416, -62.0931, -74.18, 0.15", "59.9072, -69.3673, -79.5259, 0.15", "64.1213, -76.2996, -84.2879, 0.15", "67.5195, -84.1196, -88.0867, 0.15", "72.1811, -91.3965, -91.7269, 0.15", "76.2398, -99.0248, -95.2964, 0.15", "79.3402, -106.589, -99.8522, 0.15", "80.5939, -114.794, -104.064, 0.15", "82.7929, -123.046, -107.747, 0.15", "87.0442, -130.658, -111.124, 0.15", "89.976, -138.123, -115.963, 0.15", "94.2784, -144.96, -120.798, 0.15", "98.6283, -152.296, -124.686, 0.15", "102.049, -159.44, -129.735, 0.15", "105.916, -166.789, -134.082, 0.15", "108.488, -174.141, -139.306, 0.15", "111.091, -182.037, -143.542, 0.15", "114.025, -190.298, -146.634, 0.15", "116.073, -198.332, -150.89, 0.15", "118.678, -206.211, -155.16, 0.15", "120.615, -214.73, -158.276, 0.15", "123.659, -223.254, -160.282, 0.15", "128.676, -231.051, -161.353, 0.15", "134.969, -238.029, -161.61, 0.15", "142.164, -244.173, -161.8, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "40.1385, -17.96, -45.5886, 0.59", "47.0468, -26.4201, -52.5103, 0.15", "55.6762, -33.1295, -59.643, 0.15", "64.7335, -39.662, -66.4307, 0.15", "71.0537, -47.4132, -74.6679, 0.15", "76.0534, -55.5909, -83.3149, 0.15", "81.9489, -62.7861, -92.3666, 0.15", "88.8878, -68.7635, -101.673, 0.15", "97.0729, -73.707, -110.654, 0.15", "106.13, -79.4436, -118.184, 0.15", "114.796, -86.6243, -124.754, 0.15", "124.633, -93.9432, -129.24, 0.15", "133.39, -103.018, -132.223, 0.15", "140.965, -113.391, -133.223, 0.15", "147.155, -124.482, -131.223, 0.15", "153.358, -135.673, -130.187, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-71.1808, -125.611, 3.2541, 0.15", "-75.5369, -132.767, 4.48924, 0.15", "-80.6587, -139.507, 4.3407, 0.15", "-85.4376, -146.462, 5.1107, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-71.1808, -125.611, 3.2541, 0.59", "-75.5373, -133.224, 4.62628, 0.15", "-78.1752, -141.555, 5.68617, 0.15", "-80.9979, -149.719, 7.54852, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-80.4966, -165.747, -148.159, 0.15", "-83.2815, -172.446, -152.72, 0.15", "-85.7628, -179.82, -156.217, 0.15", "-88.0888, -186.704, -160.72, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-80.4966, -165.747, -148.159, 0.59", "-83.0322, -172.246, -154.098, 0.15", "-83.7802, -178.47, -160.741, 0.15", "-85.6821, -185.001, -166.852, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "9.05091, -163.061, 45.7231, 0.15", "9.84664, -163.695, 45.8158, 0.15", "10.2133, -163.988, 45.8586, 0.37", "10.8282, -164.478, 45.9302, 1.18", "11.2757, -164.835, 45.9824, 0.88", "12.0618, -165.462, 46.074, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "9.05091, -163.061, 45.7231, 0.22", "9.21695, -164.259, 45.4497, 0.22", "9.33234, -165.15, 45.2059, 0.81", "9.41608, -166.015, 44.9669, 1.18", "9.46092, -167.327, 44.6203, 0.22", "9.39082, -168.439, 44.3451, 0.22", "9.23782, -169.541, 44.0886, 0.29", "9.00862, -170.578, 43.8642, 0.66", "8.67328, -171.623, 43.6701, 0.81", "8.21369, -172.75, 43.5019, 0.22", "7.5051, -174.211, 43.3552, 0.22", "7.14011, -174.928, 43.324, 0.29", "6.78291, -175.649, 43.3204, 0.96", "6.45618, -176.356, 43.3479, 1.7", "5.83276, -177.91, 43.4753, 0.52", "5.38319, -179.307, 43.659, 0.22", "5.20544, -180.042, 43.7941, 0.15", "4.97673, -181.215, 44.0682, 0.22", "4.81006, -182.244, 44.3048, 0.15", "4.67912, -183.118, 44.5047, 0.15", "4.59365, -183.713, 44.6347, 0.15", "4.51, -184.38, 44.7626, 0.37", "4.40093, -185.244, 44.8715, 0.59", "4.18517, -186.84, 44.9421, 0.07", "4.04226, -187.747, 44.9115, 0.07", "3.88016, -188.735, 44.8345, 0.15", "3.77689, -189.414, 44.7675, 0.66", "3.65909, -190.252, 44.6817, 0.74", "3.48352, -191.661, 44.565, 0.15", "3.38032, -192.564, 44.5338, 0.22", "3.29993, -193.301, 44.5185, 0.15", "3.20933, -193.94, 44.5129, 0.81", "3.08267, -194.613, 44.5164, 0.66", "2.81565, -195.75, 44.5118, 0.15", "2.56857, -196.656, 44.4836, 0.22", "2.2292, -197.785, 44.4234, 0.52", "1.88905, -198.69, 44.3743, 0.59", "1.40678, -199.874, 44.3621, 0.07", "1.01591, -200.811, 44.3873, 0.22", "0.871264, -201.148, 44.3996, 0.22", "0.537972, -201.918, 44.438, 0.96", "-0.107539, -203.377, 44.5419, 0.07", "-0.645044, -204.651, 44.7075, 0.07", "-0.887083, -205.234, 44.8452, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-14.4151, -177.728, 18.2532, 0.15", "-14.7326, -189.144, 20.5237, 0.15", "-16.2407, -200.558, 22.2663, 0.15", "-17.7827, -211.926, 24.289, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-14.4151, -177.728, 18.2532, 0.59", "-15.5341, -186.866, 19.8359, 0.15", "-16.9515, -196.075, 19.2728, 0.15", "-19.6835, -204.942, 20.585, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "13.5176, 32.2201, -3.10933, 0.52", "14.2665, 33.0969, -3.8748, 0.52", "15.0583, 33.548, -4.81293, 0.37", "15.6381, 33.7338, -5.48571, 0.37", "15.9345, 33.8199, -5.83788, 0.52", "16.4757, 34.0195, -6.51461, 0.52", "17.2926, 34.4066, -7.59805, 0.44", "17.6696, 34.593, -8.16551, 0.44", "18.0848, 34.856, -8.79932, 0.66", "18.445, 35.1723, -9.29014, 0.66", "18.9017, 35.6979, -9.81475, 0.88", "19.2024, 36.1235, -10.072, 1.03", "19.8478, 37.1113, -10.4297, 0.52", "20.3527, 37.8777, -10.6276, 0.52", "20.8005, 38.5341, -10.7588, 0.52", "21.2219, 39.101, -10.8518, 0.52", "21.9328, 40.0025, -11.0149, 0.22", "22.6191, 40.8355, -11.1602, 0.44", "23.3027, 41.6597, -11.2958, 0.74", "24.0157, 42.5857, -11.4588, 1.18", "24.5136, 43.2826, -11.6041, 0.88", "25.3006, 44.3997, -11.8897, 0.29", "31.6205, 52.0701, -14.3892, 0.29", "37.9839, 59.5289, -17.4375, 0.29", "44.1011, 67.5766, -18.8838, 0.29", "50.6983, 75.3851, -18.794, 0.29", "56.938, 83.4467, -18.4461, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "13.5176, 32.2201, -3.10933, 0.88", "15.0008, 33.0022, -2.97979, 0.88", "15.9948, 33.5163, -2.95202, 0.81", "17.1364, 34.1415, -3.02404, 0.96", "18.3068, 34.8172, -3.20294, 1.33", "19.6515, 35.6565, -3.48519, 1.33", "20.4255, 36.1601, -3.66177, 1.33", "21.2697, 36.77, -3.8862, 1.33", "22.3083, 37.5654, -4.21077, 1.18", "23.2826, 38.3321, -4.55027, 1.03", "24.1516, 38.9923, -4.85057, 0.88", "25.2361, 39.8119, -5.19881, 1.4", "26.5707, 40.8377, -5.57198, 0.74", "27.6709, 41.6858, -5.84583, 1.25", "28.8646, 42.5844, -6.13238, 1.77", "30.4112, 43.7737, -6.54498, 0.96", "31.669, 44.7942, -6.95155, 0.59", "32.5653, 45.5892, -7.30269, 0.74", "33.2133, 46.218, -7.59416, 0.96", "34.3218, 47.3781, -8.108, 1.11", "35.1147, 48.2433, -8.45109, 1.4", "35.835, 49.0363, -8.72239, 1.4", "37.0685, 50.3073, -9.11854, 0.96", "37.6214, 50.8243, -9.24263, 0.96", "38.844, 51.8327, -9.37688, 1.18", "39.9214, 52.5922, -9.3832, 1.18", "41.0859, 53.3072, -9.35388, 1.03", "41.9029, 53.7637, -9.35791, 0.96", "43.0023, 54.3589, -9.4351, 0.81", "44.1852, 55.0146, -9.61868, 0.74", "45.4164, 55.7364, -9.92727, 0.96", "46.6569, 56.5235, -10.3179, 1.25", "47.9966, 57.439, -10.8002, 1.55", "49.1235, 58.2886, -11.2397, 0.88", "50.3329, 59.3469, -11.7722, 0.59", "51.0356, 60.0624, -12.0877, 0.81", "51.76, 60.9239, -12.3982, 0.96", "52.5264, 61.8863, -12.6886, 1.33", "53.6715, 63.4251, -13.0462, 1.55", "54.6288, 64.8221, -13.3138, 1.7", "55.4926, 66.226, -13.5599, 1.62", "56.3946, 67.847, -13.8402, 1.62" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "2.47482, 138.661, -99.0159, 0.15", "2.73272, 147.56, -107.127, 0.15", "4.20948, 157.21, -114.097, 0.15", "3.2131, 166.637, -121.457, 0.15", "2.1758, 176.41, -128.303, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "2.47482, 138.661, -99.0159, 0.59", "1.18705, 144.905, -104.845, 0.15", "-0.230112, 150.612, -111.22, 0.15", "-2.32379, 157.639, -115.666, 0.15", "-3.35107, 165.17, -119.601, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-7.99153, 16.0104, 21.2175, 0.81", "-5.99476, 16.8544, 21.0286, 0.81", "-4.91308, 17.4273, 20.8658, 0.44", "-3.33482, 18.4417, 20.6807, 0.59", "-2.02492, 19.3594, 20.5982, 0.59", "-0.921236, 20.159, 20.5684, 0.88", "-0.0709429, 20.7834, 20.5679, 1.11", "0.915794, 21.5836, 20.4478, 1.11", "1.8362, 22.5593, 20.3724, 0.29", "2.11, 23.1605, 20.5474, 0.29", "2.04636, 23.6213, 20.9861, 0.29", "1.95931, 23.8551, 21.2861, 0.29", "1.91528, 24.1158, 21.6638, 0.29", "2.01163, 24.5492, 22.3679, 0.59", "2.29653, 24.9433, 23.0151, 1.11", "2.92308, 25.5472, 24.0368, 1.84", "3.54568, 26.0118, 24.8982, 1.84", "4.41686, 26.5712, 26.0038, 0.96", "5.06219, 26.9248, 26.776, 0.74", "5.78631, 27.316, 27.5966, 0.74", "6.56582, 27.7914, 28.5416, 0.74", "7.11323, 28.1988, 29.2975, 1.11", "7.68872, 28.7617, 30.1448, 1.47", "8.23316, 29.3883, 30.9425, 1.47", "8.93073, 30.2616, 31.9219, 0.74", "9.82768, 31.4438, 33.1441, 0.52", "10.3202, 32.0924, 33.7872, 0.52", "11.022, 32.977, 34.7052, 0.37", "11.685, 33.6213, 35.4965, 0.37", "12.021, 33.7529, 35.8399, 0.37", "12.4757, 33.7237, 36.2757, 0.37", "12.8185, 33.6499, 36.5994, 0.37", "13.5788, 33.5068, 37.5026, 0.37", "14.0481, 33.4976, 38.3168, 0.37", "14.6093, 33.7241, 39.533, 0.37", "14.949, 34.001, 40.3937, 0.37", "15.2376, 34.37, 41.3047, 0.59", "15.4847, 34.8335, 42.2615, 0.88", "15.799, 35.7929, 43.8679, 0.88", "15.9595, 36.6439, 45.1404, 0.59", "16.0625, 37.7525, 46.6265, 0.59", "16.1259, 38.4674, 47.4744, 0.29", "16.2169, 39.2607, 48.2863, 0.29", "16.3564, 40.206, 49.1156, 0.29", "16.4856, 40.9224, 49.657, 0.96", "16.6661, 41.6281, 50.1576, 1.84", "16.9888, 42.7189, 50.8799, 0.37", "17.2425, 43.5571, 51.4664, 0.81", "17.5127, 44.5344, 52.2622, 1.55", "17.7663, 45.4896, 53.1985, 0.22", "17.9386, 46.1996, 53.957, 0.22", "18.0646, 46.6933, 54.539, 0.22", "18.2756, 47.3196, 55.2382, 0.29", "18.534, 47.9368, 55.8274, 0.29", "18.8936, 48.6657, 56.4291, 0.59", "19.5123, 49.743, 57.2524, 1.77", "19.987, 50.5101, 57.8074, 2.14", "20.9567, 51.9426, 58.7691, 0.29", "21.4468, 52.6263, 59.1872, 0.29", "21.9197, 53.293, 59.5791, 0.29", "22.1994, 53.6699, 59.7963, 0.29", "22.6149, 54.1848, 60.1278, 0.88", "23.1659, 54.8091, 60.5788, 1.62", "23.6687, 55.304, 60.9862, 1.62", "24.3554, 55.9485, 61.4794, 2.21", "26.0882, 57.4892, 62.5303, 0.22", "26.8165, 58.1176, 62.9154, 0.22", "27.3216, 58.5373, 63.1597, 0.22", "27.8413, 58.9627, 63.3868, 0.22", "28.819, 59.7587, 63.7585, 0.44", "29.9446, 60.6431, 64.0833, 0.66", "30.1188, 60.791, 64.1265, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-7.99153, 16.0104, 21.2175, 0.96", "-7.4731, 15.1413, 21.3995, 0.96", "-6.92324, 14.236, 21.5671, 0.37", "-6.79206, 13.9015, 21.6245, 0.29", "-6.65259, 13.2832, 21.713, 0.22", "-6.61302, 12.8675, 21.7872, 0.22", "-6.60425, 12.2189, 21.9218, 0.52", "-6.65837, 11.4327, 22.109, 0.74", "-6.88523, 10.3521, 22.403, 0.52", "-7.09394, 9.57001, 22.621, 1.11", "-7.42531, 8.37509, 22.9577, 1.62", "-7.71749, 7.31486, 23.2443, 1.33", "-8.10086, 5.81801, 23.6285, 1.11", "-8.59147, 3.76836, 24.1355, 0.44", "-8.83667, 2.68546, 24.3883, 0.44", "-9.09709, 1.56469, 24.6362, 0.44", "-9.31911, 0.672964, 24.8123, 0.96", "-9.65176, -0.612682, 25.0594, 1.47", "-10.0788, -2.09576, 25.3478, 1.7", "-10.608, -3.73837, 25.7112, 1.7", "-11.1776, -5.18748, 26.1144, 1.7", "-11.7996, -6.5289, 26.5595, 0.59", "-12.4302, -7.76507, 27.0406, 0.44", "-13.0236, -8.86489, 27.5324, 0.44", "-13.363, -9.50683, 27.8683, 0.44", "-13.8165, -10.4796, 28.4683, 0.44", "-13.9303, -10.8265, 28.7094, 0.44", "-13.9772, -11.2814, 28.995, 0.44", "-13.9421, -11.9988, 29.3561, 0.44", "-13.9116, -12.4741, 29.5696, 0.88", "-13.9121, -13.5913, 30.0355, 1.4", "-13.9847, -14.354, 30.3613, 1.4", "-14.2471, -15.5666, 30.9228, 0.66", "-14.5311, -16.4514, 31.3521, 0.22", "-14.8517, -17.3129, 31.7969, 0.22", "-15.0372, -17.8079, 32.0637, 1.03", "-15.3414, -18.6598, 32.5316, 2.36", "-15.6449, -19.6611, 33.0825, 2.65", "-16.0477, -21.4664, 34.0893, 0.81", "-16.1299, -22.4861, 34.5769, 0.22", "-16.1093, -22.9884, 34.7848, 0.22", "-16.0484, -23.4714, 34.9692, 0.66", "-15.9245, -24.071, 35.1843, 0.66", "-15.8173, -24.4474, 35.3196, 0.66", "-15.4337, -25.4946, 35.7173, 0.22", "-15.2796, -26.0279, 35.9372, 0.22", "-15.2372, -26.2734, 36.0613, 0.22", "-15.2239, -26.6816, 36.3111, 0.22", "-15.2805, -27.2311, 36.6762, 0.22", "-15.3392, -27.46, 36.8362, 0.22", "-15.5612, -27.9926, 37.2186, 0.22", "-15.7199, -28.2999, 37.4131, 0.29", "-16.1671, -29.0857, 37.8494, 0.29", "-16.3888, -29.498, 38.0429, 0.59", "-16.7627, -30.264, 38.3486, 0.88", "-17.0775, -31.0327, 38.6213, 0.66", "-17.3636, -32.0399, 38.9217, 0.22", "-17.4337, -32.5288, 39.051, 0.22", "-17.4834, -33.7509, 39.3787, 0.59", "-17.449, -34.7873, 39.6646, 1.03", "-17.3785, -35.8189, 39.9549, 1.62", "-17.2721, -37.2096, 40.3801, 0.59", "-17.2085, -38.6306, 40.831, 0.22", "-17.2211, -39.6146, 41.173, 0.52", "-17.2758, -40.1943, 41.4085, 1.25", "-17.4463, -41.1406, 41.8643, 2.14", "-17.692, -41.993, 42.3374, 1.33", "-18.111, -43.1038, 43.0661, 0.52", "-18.3505, -43.7275, 43.5077, 0.22", "-18.5763, -44.4352, 44.0196, 0.44", "-18.7118, -45.0099, 44.4507, 0.44", "-18.7869, -45.6133, 44.8699, 0.22", "-18.8437, -46.2009, 45.1919, 0.22", "-18.9161, -46.9311, 45.5306, 0.22", "-18.9862, -47.4427, 45.7181, 0.52", "-19.1189, -48.156, 45.9317, 0.74", "-19.4247, -49.2978, 46.3027, 0.81", "-19.7934, -50.2789, 46.7682, 0.22", "-20.1152, -50.8497, 47.1887, 0.22", "-20.2771, -51.0831, 47.4316, 0.22", "-20.5097, -51.4385, 47.8409, 0.66", "-20.8622, -52.0552, 48.604, 1.33", "-21.1129, -52.6063, 49.2764, 1.55", "-21.3282, -53.2572, 49.9639, 0.88", "-21.6119, -54.1343, 50.7232, 0.15", "-21.9239, -55.042, 51.434, 0.29", "-22.0995, -55.5429, 51.7902, 0.88", "-22.3074, -56.0573, 52.1103, 1.25", "-22.5484, -56.6068, 52.4325, 1.33", "-23.2102, -58.0439, 53.2744, 0.22", "-23.5035, -58.6803, 53.6436, 0.74", "-23.7798, -59.2894, 53.9972, 1.25", "-24.2063, -60.349, 54.5629, 0.44", "-24.4017, -61.163, 54.9227, 0.22", "-24.4481, -61.6573, 55.0891, 0.22", "-24.4356, -62.3569, 55.2408, 0.96", "-24.405, -62.8053, 55.3183, 1.55", "-24.3166, -63.7162, 55.4588, 1.33", "-24.0781, -65.7993, 55.7971, 0.15", "-24.0383, -66.2999, 55.8845, 0.37", "-24.0037, -67.2321, 56.0832, 0.15", "-24.0151, -68.0192, 56.3121, 0.15", "-24.0613, -68.7378, 56.5791, 0.52", "-24.1519, -69.5062, 56.922, 1.18", "-24.314, -70.4324, 57.4071, 2.06", "-24.5303, -71.6145, 58.0668, 0.96", "-24.7607, -72.8308, 58.7766, 0.22", "-24.9434, -73.6922, 59.2882, 0.22", "-25.1685, -74.7075, 59.9105, 0.22", "-25.3143, -75.36, 60.3162, 0.22", "-25.5199, -76.334, 60.95, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "153.358, -135.673, -130.187, 0.15", "158.867, -141.756, -134.639, 0.15", "163.832, -148.616, -138.437, 0.15", "168.77, -155.187, -142.787, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "153.358, -135.673, -130.187, 0.59", "157.912, -140.079, -133.191, 0.15", "162.705, -144.702, -135.39, 0.15", "166.162, -150.321, -137.505, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "56.938, 83.4467, -18.4461, 0.15", "65.2583, 92.893, -24.7203, 0.15", "70.7127, 103.655, -31.7375, 0.15", "73.0746, 114.812, -39.7184, 0.15", "73.5067, 126.421, -47.3062, 0.15", "71.9045, 137.24, -55.9512, 0.15", "72.1936, 147.825, -65.0521, 0.15", "73.1724, 158.761, -73.6338, 0.15", "73.9845, 169.637, -82.3149, 0.15", "75.364, 181.681, -88.9884, 0.15", "74.4547, 194.755, -93.105, 0.15", "76.0026, 208.302, -94.3798, 0.15", "79.2568, 221.626, -94.827, 0.15", "80.8066, 235.093, -92.7802, 0.15", "83.5686, 248.258, -89.965, 0.15", "87.5996, 261.284, -88.1287, 0.15", "88.9202, 274.896, -87.4846, 0.15", "89.8313, 288.531, -88.232, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "56.938, 83.4467, -18.4461, 0.59", "63.1502, 91.1454, -15.2489, 0.15", "68.4785, 99.2362, -11.5654, 0.15", "74.0403, 106.212, -6.12001, 0.15", "77.8582, 113.959, -0.339139, 0.15", "82.2824, 120.678, 6.362, 0.15", "86.1303, 127.94, 12.7862, 0.15", "89.0485, 135.604, 19.1799, 0.15", "94.3025, 142.717, 24.7347, 0.15", "99.4145, 149.783, 30.4831, 0.15", "103.828, 157.662, 35.6056, 0.15", "107.119, 166.34, 40.1005, 0.15", "111.761, 173.746, 45.7736, 0.15", "117.508, 179.174, 52.7595, 0.15", "124.055, 183.878, 59.6205, 0.15", "130.887, 188.84, 65.9837, 0.15", "138.133, 194.989, 70.4664, 0.15", "146.625, 200.256, 73.8703, 0.15", "154.428, 206.372, 77.3543, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "56.3946, 67.847, -13.8402, 0.66", "57.0376, 69.0887, -14.1995, 0.66", "57.4055, 69.7258, -14.4066, 0.66", "57.8583, 70.4889, -14.6634, 0.44", "58.1888, 71.0451, -14.8369, 0.37", "58.6222, 71.7883, -15.0393, 0.37", "59.0058, 72.4571, -15.1831, 0.37", "59.2021, 72.7777, -15.2369, 0.59", "59.542, 73.3753, -15.3127, 1.11", "60.0147, 74.3581, -15.4004, 0.37", "60.3329, 75.1597, -15.3924, 0.59", "60.6637, 76.1582, -15.303, 0.37", "60.9766, 77.1516, -15.1585, 0.44", "61.159, 77.6946, -15.0646, 0.22", "61.3516, 78.1793, -14.972, 0.22", "61.9526, 79.4417, -14.7284, 0.22", "62.342, 80.0988, -14.6186, 0.22", "62.5902, 80.4292, -14.5794, 0.44", "63.0385, 80.9051, -14.5564, 0.66", "63.7686, 81.5504, -14.5908, 0.22", "64.0991, 81.8043, -14.633, 0.22", "64.5363, 82.1057, -14.7138, 0.66", "64.9109, 82.3531, -14.7738, 1.03", "65.7665, 82.9242, -14.9014, 0.22", "66.4933, 83.4349, -15.0074, 0.66", "66.9352, 83.7644, -15.0642, 0.81", "67.932, 84.5241, -15.1805, 1.03", "68.6928, 85.1081, -15.2605, 0.74", "69.4453, 85.6808, -15.327, 0.37", "69.9988, 86.0764, -15.3691, 0.37", "70.4685, 86.404, -15.4046, 0.29", "70.9588, 86.7409, -15.4444, 0.29", "71.3667, 87.0197, -15.4854, 0.66", "71.9683, 87.423, -15.535, 1.25", "73.0437, 88.1265, -15.6207, 0.29", "73.3714, 88.3409, -15.6509, 0.29", "74.0539, 88.8128, -15.729, 0.88", "74.7048, 89.3023, -15.8136, 0.52", "75.2332, 89.7283, -15.892, 1.11", "75.9581, 90.3473, -16.0141, 0.66", "76.641, 90.9527, -16.1223, 0.29", "77.1376, 91.3758, -16.1967, 0.59", "78.0352, 92.0804, -16.3252, 0.22", "78.4582, 92.3799, -16.3816, 0.59", "79.0489, 92.7649, -16.4601, 1.18", "79.7895, 93.2031, -16.5447, 0.22", "80.2879, 93.479, -16.5968, 0.22", "80.7069, 93.7079, -16.6407, 0.22", "81.1609, 93.9733, -16.678, 0.22", "81.4636, 94.1914, -16.7035, 0.22", "81.805, 94.5094, -16.7392, 0.37", "82.3017, 95.0956, -16.7979, 0.37", "82.623, 95.5354, -16.831, 0.22", "82.9839, 96.0803, -16.8556, 0.52", "83.4651, 96.8334, -16.8581, 0.52", "83.7948, 97.3254, -16.843, 0.96", "84.1378, 97.7851, -16.8149, 1.77", "84.5336, 98.2594, -16.7752, 1.77", "85.1042, 98.906, -16.7216, 0.22", "85.5168, 99.3554, -16.6921, 0.22", "85.9202, 99.7574, -16.6616, 0.22", "86.3333, 100.151, -16.6404, 0.22", "86.7168, 100.506, -16.6422, 0.22", "87.1688, 100.946, -16.6698, 0.22", "87.6395, 101.431, -16.7355, 0.22", "87.8786, 101.697, -16.7778, 0.66", "88.2317, 102.102, -16.8412, 0.81", "88.7526, 102.707, -16.919, 0.22", "89.1695, 103.172, -16.9609, 0.22", "89.521, 103.582, -16.9841, 0.74", "89.9337, 104.126, -17.0051, 0.88", "90.1658, 104.474, -17.011, 1.11", "90.677, 105.347, -16.9926, 1.11", "91.0937, 106.174, -16.9546, 0.37", "91.5302, 107.112, -16.8836, 0.22", "91.7885, 107.705, -16.818, 0.29", "92.0208, 108.248, -16.7365, 0.29", "92.27, 108.794, -16.6304, 0.37", "92.5592, 109.282, -16.5018, 0.37", "92.8345, 109.592, -16.3822, 0.22", "93.206, 109.876, -16.2373, 0.22", "93.771, 110.226, -16.0318, 0.22", "94.3308, 110.528, -15.8502, 0.29", "95.1648, 110.954, -15.5938, 0.22", "95.6631, 111.22, -15.4478, 1.4", "96.1872, 111.54, -15.2947, 2.21", "96.5477, 111.818, -15.1746, 1.7", "97.0017, 112.255, -14.9803, 0.96", "97.5079, 112.806, -14.697, 0.96", "97.7962, 113.126, -14.5066, 1.47", "98.1067, 113.452, -14.2927, 1.47", "98.7328, 114.067, -13.8628, 0.22", "99.138, 114.445, -13.6051, 0.22", "99.5664, 114.849, -13.3574, 0.22", "99.9928, 115.252, -13.1554, 0.22", "100.362, 115.591, -13.0136, 0.22", "100.643, 115.851, -12.9447, 0.88", "101.072, 116.25, -12.8897, 1.99", "101.683, 116.831, -12.8692, 1.55", "102.4, 117.553, -12.8989, 0.22", "102.923, 118.092, -12.9351, 0.22", "103.624, 118.784, -12.9954, 0.29", "104.062, 119.196, -13.0394, 0.59", "104.754, 119.785, -13.1439, 0.96", "105.571, 120.403, -13.3034, 0.15", "106.265, 120.88, -13.4472, 1.18", "107.16, 121.461, -13.636, 1.18", "107.926, 121.932, -13.7938, 1.4", "109.033, 122.585, -14.0193, 0.22", "109.536, 122.882, -14.124, 0.37", "110.067, 123.213, -14.2278, 1.03", "110.306, 123.379, -14.2693, 0.88", "110.638, 123.633, -14.305, 0.74", "111.104, 124.001, -14.3218, 0.96", "111.739, 124.588, -14.2882, 0.22", "112.307, 125.144, -14.2629, 0.96", "112.611, 125.433, -14.2637, 0.74", "113.145, 125.908, -14.2601, 0.22", "113.679, 126.364, -14.2536, 0.29", "114.473, 127.023, -14.2467, 0.29", "115.025, 127.457, -14.2565, 0.29", "115.888, 128.12, -14.3104, 0.22", "116.318, 128.452, -14.3503, 0.66", "116.672, 128.743, -14.3901, 1.55", "116.897, 128.923, -14.4203, 1.55", "117.737, 129.567, -14.5596, 0.15", "118.392, 130.098, -14.6797, 0.15", "118.947, 130.581, -14.7979, 0.15", "119.411, 131.009, -14.9306, 0.15", "119.833, 131.42, -15.0636, 0.15", "120.159, 131.771, -15.1628, 0.88", "120.559, 132.24, -15.2817, 1.18", "121.031, 132.848, -15.421, 1.18", "121.71, 133.731, -15.6189, 0.22", "122.433, 134.644, -15.8205, 0.22", "122.879, 135.235, -15.9439, 1.18", "123.093, 135.523, -15.9995, 1.92", "123.444, 136.005, -16.0792, 1.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "56.3946, 67.847, -13.8402, 0.44", "57.0327, 68.0458, -13.9583, 0.44", "57.7144, 68.2627, -14.0758, 0.44", "58.0569, 68.3523, -14.1262, 0.96", "58.8289, 68.508, -14.2215, 1.7", "59.5153, 68.6301, -14.3013, 1.99", "60.5464, 68.7946, -14.4286, 1.11", "61.2381, 68.8876, -14.5341, 0.37", "61.8704, 68.9638, -14.6678, 0.37", "62.6391, 69.0535, -14.8711, 0.37", "63.1143, 69.1163, -15.038, 0.37", "63.56, 69.1825, -15.2287, 0.44", "64.1986, 69.2799, -15.5491, 0.96", "64.9919, 69.4052, -15.9988, 1.62", "65.7839, 69.5476, -16.4419, 1.18", "66.8451, 69.7562, -16.9933, 0.29", "67.4034, 69.8603, -17.243, 0.44", "67.8285, 69.9348, -17.3966, 0.59", "68.5021, 70.0394, -17.5911, 0.29", "69.4228, 70.184, -17.7964, 0.29", "70.4862, 70.3752, -17.9821, 0.59", "71.2188, 70.5544, -18.0867, 1.03", "72.0956, 70.8368, -18.2029, 1.7", "72.924, 71.1555, -18.3091, 1.7", "73.9197, 71.5558, -18.4339, 0.96", "74.5162, 71.7865, -18.5236, 1.33", "75.6361, 72.2091, -18.6999, 1.62", "76.5239, 72.5476, -18.8623, 0.52", "77.2081, 72.8096, -18.9978, 0.22", "77.9389, 73.0923, -19.1534, 0.22", "78.8565, 73.4387, -19.3801, 0.22", "79.5496, 73.7219, -19.5788, 0.74", "80.1709, 74.0185, -19.7829, 1.33", "80.7092, 74.3496, -19.9859, 1.77", "81.4929, 74.9533, -20.3134, 0.44", "82.2049, 75.6165, -20.6293, 0.22", "82.7636, 76.187, -20.8793, 0.66", "83.2043, 76.6246, -21.0746, 0.29", "83.5938, 76.982, -21.2384, 0.29", "83.8449, 77.1746, -21.3361, 0.22", "84.196, 77.395, -21.452, 0.22", "84.7247, 77.6662, -21.5974, 0.52", "85.3729, 77.9279, -21.7656, 0.88", "85.943, 78.1162, -21.9262, 0.88", "86.5979, 78.3219, -22.1221, 0.22", "87.1832, 78.5234, -22.2924, 0.22", "87.4726, 78.6336, -22.376, 0.52", "87.9888, 78.8434, -22.5237, 1.4", "88.6811, 79.1152, -22.7353, 1.18", "89.7443, 79.5093, -23.0812, 0.22", "90.5092, 79.7908, -23.365, 0.59", "91.0738, 79.9946, -23.5819, 0.22", "91.7126, 80.2466, -23.8394, 0.88", "92.5234, 80.6197, -24.1793, 1.55", "92.8276, 80.7858, -24.3177, 1.55", "93.8336, 81.4341, -24.8388, 0.88", "94.3012, 81.7728, -25.1057, 0.44", "94.7257, 82.105, -25.3543, 0.22", "95.1552, 82.433, -25.6058, 0.22", "95.6076, 82.7705, -25.8666, 0.37", "96.1056, 83.1154, -26.1457, 1.11", "96.7554, 83.5274, -26.4909, 1.18", "97.3626, 83.9003, -26.8011, 0.29", "98.2047, 84.3984, -27.2125, 0.22", "98.6713, 84.6656, -27.4226, 0.22", "99.1531, 84.9468, -27.6137, 1.11", "99.5017, 85.163, -27.7277, 1.18", "100.216, 85.6524, -27.9024, 0.29", "100.89, 86.1088, -28.014, 0.29", "101.32, 86.3814, -28.0605, 1.03", "101.905, 86.696, -28.1029, 1.92", "102.316, 86.8873, -28.1447, 1.92", "103.629, 87.4182, -28.3393, 0.15", "104.314, 87.6491, -28.4668, 0.15", "104.72, 87.7771, -28.5463, 0.37", "105.295, 87.9621, -28.6661, 1.11", "106.262, 88.2773, -28.8672, 1.47", "107.202, 88.565, -29.0659, 0.44", "108.193, 88.8446, -29.2774, 0.22", "108.981, 89.0552, -29.443, 0.74", "109.612, 89.1913, -29.5629, 0.88", "110.7, 89.2983, -29.7575, 0.22", "111.21, 89.2726, -29.8362, 0.22", "111.708, 89.1639, -29.9194, 0.44", "112.192, 88.9971, -30.0087, 0.81", "112.78, 88.7544, -30.123, 1.03", "113.734, 88.3648, -30.3117, 0.81", "114.513, 88.073, -30.4537, 0.22", "115.071, 87.9122, -30.5529, 0.22", "115.538, 87.8402, -30.642, 0.22", "116.445, 87.8303, -30.8251, 0.37", "117.444, 87.9515, -31.0417, 0.22", "117.808, 88.0423, -31.1333, 0.96", "118.459, 88.2702, -31.3337, 1.84", "119.682, 88.8012, -31.7936, 0.22", "120.24, 89.0987, -32.049, 0.22", "120.464, 89.2549, -32.172, 0.22", "120.858, 89.6146, -32.4156, 0.22", "121.219, 90.0057, -32.6483, 0.44", "121.71, 90.5722, -32.9471, 1.18", "122.141, 91.0476, -33.1777, 1.62", "122.587, 91.4868, -33.3797, 1.7", "123.307, 92.1714, -33.6443, 1.25", "124.254, 93.0109, -33.9272, 0.29", "124.86, 93.4697, -34.0823, 1.03", "125.403, 93.8174, -34.2205, 1.47", "126.448, 94.3802, -34.4813, 0.22", "127.293, 94.7689, -34.7002, 0.88", "127.935, 95.0301, -34.8701, 0.44", "128.884, 95.4142, -35.1338, 0.22", "129.564, 95.7187, -35.3244, 0.22", "130.093, 95.9841, -35.4711, 1.03", "130.719, 96.3387, -35.6339, 1.47", "131.254, 96.6967, -35.7712, 1.25", "132.049, 97.3418, -35.987, 0.52", "132.903, 98.1391, -36.2381, 0.37", "133.344, 98.5644, -36.3859, 1.03", "133.597, 98.805, -36.4919, 1.4", "134.369, 99.5159, -36.8718, 0.96", "134.892, 99.9464, -37.1694, 0.81", "135.675, 100.523, -37.6574, 0.22", "136.158, 100.832, -37.9745, 0.22", "136.575, 101.063, -38.2317, 0.74", "136.894, 101.229, -38.4099, 0.81", "137.512, 101.564, -38.7147, 0.22", "137.816, 101.757, -38.8511, 0.22", "138.26, 102.08, -39.0593, 0.88", "138.935, 102.638, -39.3762, 1.33", "139.474, 103.149, -39.6503, 1.7", "140.137, 103.86, -40.0115, 1.47", "140.837, 104.707, -40.4206, 0.22", "141.248, 105.244, -40.6726, 0.22", "141.699, 105.921, -40.9775, 0.29", "141.977, 106.452, -41.1919, 0.15", "142.14, 106.866, -41.3357, 0.15", "142.319, 107.494, -41.5178, 0.59", "142.456, 108.108, -41.6735, 0.37", "142.631, 108.934, -41.8989, 0.22", "142.822, 109.809, -42.1769, 0.22", "142.93, 110.237, -42.3298, 1.11", "143.163, 111.106, -42.6832, 0.22", "143.337, 111.749, -42.9758, 0.07", "143.492, 112.362, -43.2522, 0.07", "143.585, 112.739, -43.4027, 0.88", "143.653, 113.053, -43.4989, 1.11", "143.742, 113.722, -43.6054, 0.81", "143.785, 114.441, -43.6007, 0.37", "143.814, 115.461, -43.4628, 0.15", "143.836, 116.309, -43.2587, 0.15", "143.853, 117.039, -43.0138, 0.15", "143.886, 117.718, -42.7472, 0.59", "143.945, 118.688, -42.3047, 0.29", "143.978, 119.203, -42.0324, 0.66", "144.029, 119.794, -41.6844, 1.47", "144.121, 120.713, -41.1114, 0.22", "144.197, 121.371, -40.6989, 0.15", "144.313, 122.075, -40.2647, 0.15", "144.408, 122.57, -39.9647, 0.44", "144.509, 123.029, -39.7104, 0.44", "144.685, 123.729, -39.3466, 0.22", "144.762, 124.041, -39.1993, 0.15", "144.861, 124.698, -38.8929, 0.15", "144.879, 124.956, -38.7809, 0.15", "144.851, 125.345, -38.6159, 0.44", "144.8, 125.645, -38.4838, 0.44", "144.636, 126.518, -38.0736, 0.15", "144.548, 127.133, -37.7678, 0.22", "144.502, 127.549, -37.5555, 0.29", "144.516, 128.231, -37.2289, 0.29", "144.604, 128.765, -37.0098, 0.74", "144.809, 129.404, -36.7977, 0.66", "145.064, 129.97, -36.6556, 1.55", "145.224, 130.278, -36.6032, 1.55", "145.78, 131.232, -36.5282, 0.15", "146.217, 131.912, -36.522, 0.22", "146.646, 132.558, -36.5465, 0.22", "146.924, 132.965, -36.5799, 0.22", "147.317, 133.507, -36.6464, 0.37", "148.112, 134.549, -36.8066, 0.22", "148.812, 135.469, -36.9431, 0.15", "149.131, 135.899, -36.9874, 1.18", "149.505, 136.432, -37.017, 2.21", "149.637, 136.632, -37.0202, 2.21", "150.302, 137.792, -36.9742, 0.22", "150.704, 138.69, -36.8878, 0.22", "151.049, 139.687, -36.7767, 0.22", "151.144, 140.024, -36.737, 0.66", "151.2, 140.273, -36.7118, 1.25", "151.361, 141.115, -36.6544, 1.62", "151.511, 142.147, -36.6255, 0.22", "151.648, 143.2, -36.6754, 0.22", "151.693, 143.609, -36.7172, 0.37", "151.765, 144.22, -36.7997, 0.88", "151.817, 144.692, -36.8692, 0.88", "151.862, 145.372, -36.9872, 0.22", "151.86, 146.152, -37.1173, 0.15", "151.822, 146.767, -37.1916, 0.15", "151.776, 147.069, -37.2647, 0.52", "151.649, 147.713, -37.4637, 0.88", "151.484, 148.457, -37.7228, 0.22", "151.366, 148.975, -37.9332, 0.22", "151.064, 150.23, -38.4473, 0.15", "150.618, 152.371, -39.3063, 0.22", "150.507, 153.039, -39.5682, 0.44", "150.436, 153.743, -39.8307, 0.22", "150.415, 154.492, -40.0825, 0.29", "150.436, 155.093, -40.2552, 0.22", "150.532, 156.121, -40.4698, 0.15", "150.612, 156.582, -40.4851, 0.15", "150.765, 157.397, -40.5073, 0.15", "150.863, 157.833, -40.5127, 0.29", "150.982, 158.262, -40.4987, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "30.1188, 60.791, 64.1265, 0.07", "29.9984, 61.363, 64.3228, 0.07", "29.9206, 61.894, 64.5193, 0.07", "29.8694, 62.9056, 64.9149, 0.07", "29.8664, 63.7587, 65.2262, 0.29", "29.8957, 64.4306, 65.4566, 0.07", "29.9942, 65.5228, 65.7941, 0.07", "30.0839, 66.0638, 65.9481, 0.52", "30.3694, 67.4234, 66.3212, 1.03", "30.7286, 68.8943, 66.7399, 0.15", "30.873, 69.4913, 66.9156, 0.15", "31.0309, 70.2377, 67.1387, 0.15", "31.1413, 70.9209, 67.3278, 0.15", "31.2048, 71.5332, 67.5222, 0.07", "31.2289, 72.0101, 67.7019, 0.07", "31.2635, 72.622, 67.9474, 0.44", "31.2916, 72.9713, 68.0955, 0.74", "31.3535, 73.3579, 68.2612, 0.74", "31.6764, 74.617, 68.7797, 0.15", "31.9238, 75.3796, 69.0758, 0.15", "32.2588, 76.3144, 69.4175, 0.37", "32.591, 77.1868, 69.7252, 1.7", "32.9461, 78.1515, 70.0466, 1.03", "33.4275, 79.4513, 70.4538, 0.15", "33.8739, 80.5866, 70.7966, 0.15", "34.0552, 81.0517, 70.9321, 0.66", "34.2944, 81.6398, 71.1049, 1.03", "34.7159, 82.6303, 71.3607, 0.15", "35.2498, 83.8192, 71.6386, 0.15", "35.6609, 84.6192, 71.8251, 0.15", "36.0161, 85.2595, 71.9633, 0.29", "36.3917, 85.9369, 72.0986, 0.29", "36.7016, 86.5773, 72.2255, 0.74", "37.0099, 87.3402, 72.4017, 0.81", "37.1761, 87.868, 72.5377, 0.81", "37.5115, 89.3336, 72.9542, 0.15", "37.6283, 90.0795, 73.232, 0.74", "37.7382, 91.6934, 73.9755, 0.15", "37.7034, 92.4713, 74.4353, 0.15", "37.5408, 93.1483, 74.9537, 0.15", "37.3395, 93.6196, 75.3875, 0.29", "36.8881, 94.3313, 76.2015, 0.15", "36.7228, 94.5304, 76.4641, 0.52", "36.1386, 95.0791, 77.3622, 1.4", "35.0434, 95.9671, 79.0224, 0.15", "34.7414, 96.1651, 79.4728, 0.15", "34.5972, 96.2407, 79.7046, 0.15", "33.9935, 96.4595, 80.7564, 0.81", "33.3656, 96.5649, 81.9377, 0.15", "33.1568, 96.5461, 82.3626, 0.15", "32.8553, 96.4658, 82.9806, 1.18", "31.986, 96.1849, 84.7233, 0.07", "31.3988, 95.9754, 85.8392, 0.07", "31.1126, 95.8766, 86.34, 0.59", "30.7978, 95.799, 86.8335, 1.77", "29.6978, 95.5859, 88.438, 0.07", "29.184, 95.5016, 89.1557, 0.07", "28.8307, 95.4436, 89.6038, 0.37", "28.4632, 95.3933, 90.032, 0.52", "27.6233, 95.2632, 91.0088, 0.07", "26.8111, 95.1427, 91.9155, 0.07", "26.4693, 95.0824, 92.2727, 0.07", "26.1874, 95.0219, 92.5646, 0.29", "25.5506, 94.8389, 93.2365, 0.66", "24.8203, 94.5397, 94.0347, 0.07", "24.2836, 94.2731, 94.6223, 0.29", "23.8061, 94.0237, 95.1513, 0.88", "22.8238, 93.5192, 96.3096, 0.15", "22.3376, 93.2679, 96.9269, 0.52", "21.3348, 92.7462, 98.2465, 0.07", "21.0104, 92.5852, 98.6738, 0.59", "20.5721, 92.367, 99.2636, 1.47", "19.5442, 91.8737, 100.669, 0.07", "19.1603, 91.691, 101.206, 0.07", "18.5807, 91.4145, 102.028, 0.07", "18.4005, 91.3307, 102.278, 0.37", "18.0086, 91.1613, 102.786, 0.81", "17.2517, 90.8637, 103.713, 0.07", "16.6249, 90.6478, 104.409, 0.07", "16.2942, 90.5762, 104.753, 0.44", "15.9456, 90.536, 105.109, 0.88", "14.9609, 90.5135, 106.065, 0.15", "14.42, 90.5479, 106.556, 0.37", "14.1112, 90.5853, 106.814, 0.37", "12.8053, 90.7382, 107.82, 0.15", "12.373, 90.7822, 108.144, 0.15", "11.7131, 90.8562, 108.619, 0.37", "10.507, 90.9788, 109.445, 0.07", "9.72755, 91.0666, 109.968, 0.29", "9.02348, 91.1554, 110.446, 0.07", "8.32601, 91.2568, 110.92, 0.07", "6.83079, 91.4928, 111.934, 0.07", "4.8488, 91.8219, 113.281, 0.07", "4.21093, 91.9398, 113.716, 0.07", "3.30331, 92.125, 114.352, 0.07", "2.76591, 92.2492, 114.744, 0.59", "1.95751, 92.4317, 115.338, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "30.1188, 60.791, 64.1265, 0.37", "31.2022, 59.5513, 64.7422, 0.37", "31.9594, 58.7607, 65.0661, 0.37", "32.5096, 58.2412, 65.2477, 0.59", "33.4598, 57.3546, 65.4449, 0.22", "34.1401, 56.691, 65.5332, 0.22", "34.5985, 56.1788, 65.5781, 0.15", "35.0413, 55.6684, 65.6417, 0.15", "35.605, 54.9437, 65.6925, 0.15", "36.0798, 54.2247, 65.7339, 0.59", "36.3545, 53.6592, 65.7686, 0.88", "36.8883, 52.1558, 65.895, 0.15", "37.2005, 51.0399, 66.0698, 0.15", "37.3309, 50.4088, 66.1854, 0.44", "37.4169, 49.8, 66.311, 0.81", "37.5074, 48.8864, 66.5183, 0.07", "37.5813, 47.7674, 66.7572, 0.22", "37.6269, 46.5946, 66.9805, 0.22", "37.6635, 44.9504, 67.2478, 0.07", "37.6649, 43.5952, 67.4548, 0.07", "37.6647, 42.3106, 67.6342, 0.07", "37.6656, 41.5901, 67.709, 0.29", "37.668, 39.8414, 67.8641, 0.07", "37.6647, 39.0241, 67.9143, 0.88", "37.667, 37.9946, 67.98, 1.25", "37.6791, 37.324, 68.0115, 1.25", "37.7429, 35.1543, 68.0801, 0.07", "37.7834, 33.7204, 68.1122, 0.07", "37.8044, 32.9142, 68.1169, 0.07", "37.8148, 32.4408, 68.1177, 0.52", "37.8275, 31.175, 68.1118, 0.66", "37.8111, 30.5212, 68.1089, 0.22", "37.7647, 29.6639, 68.0961, 0.52", "37.6978, 28.9485, 68.0767, 0.29", "37.5349, 27.6074, 68.0602, 0.07", "37.3587, 26.4485, 68.0649, 0.07", "37.2125, 25.6006, 68.0898, 0.22", "37.0993, 25.0134, 68.1203, 0.22", "36.7722, 23.3848, 68.2194, 0.07", "36.6808, 22.9594, 68.2511, 0.37", "36.5704, 22.4655, 68.2954, 0.59", "36.3038, 21.3134, 68.4182, 0.07", "36.0856, 20.3792, 68.5331, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-25.5199, -76.334, 60.95, 0.15", "-26.8207, -76.7368, 61.4007, 0.15", "-28.1023, -77.1132, 61.8167, 0.15", "-29.2834, -77.4467, 62.1671, 0.15", "-30.4987, -77.7837, 62.5134, 0.37", "-31.8442, -78.1465, 62.8834, 0.15", "-33.2005, -78.4996, 63.2472, 0.07", "-33.8845, -78.6772, 63.4341, 0.22", "-35.9513, -79.2029, 63.9003, 0.15", "-36.0982, -79.2354, 63.9292, 0.59", "-37.0329, -79.4262, 64.1133, 1.11", "-37.4555, -79.5134, 64.1966, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-25.5199, -76.334, 60.95, 0.59", "-25.6328, -77.0455, 61.2105, 0.59", "-25.7232, -77.5622, 61.4098, 0.96", "-25.8155, -78.3676, 61.7063, 1.47", "-25.8426, -78.9067, 61.8856, 1.47", "-25.8372, -79.8739, 62.1845, 0.22", "-25.8442, -80.236, 62.3058, 0.15", "-25.8779, -80.5782, 62.4466, 0.15", "-25.9564, -81.1587, 62.7188, 0.15", "-26.0339, -81.6506, 62.9644, 0.37", "-26.123, -82.1476, 63.2573, 0.37", "-26.2942, -83.026, 63.8802, 0.22", "-26.3894, -83.527, 64.287, 0.22", "-26.4434, -83.823, 64.5404, 0.96", "-26.5672, -84.5607, 65.2083, 2.06", "-26.6654, -85.2686, 65.8805, 1.11", "-26.7686, -86.2106, 66.7973, 0.22", "-26.8096, -86.9376, 67.5052, 0.22", "-26.8335, -87.2607, 67.8164, 0.22", "-26.8622, -87.5179, 68.0626, 0.22", "-26.8988, -87.7386, 68.2775, 0.22", "-26.995, -88.0628, 68.57, 0.22", "-27.1628, -88.4155, 68.8673, 0.22", "-27.4695, -88.9541, 69.3066, 0.22", "-27.7362, -89.4304, 69.6677, 0.22", "-27.9026, -89.7525, 69.8889, 0.66", "-28.2071, -90.4301, 70.32, 1.11", "-28.6199, -91.4477, 70.9476, 0.29", "-28.9787, -92.3342, 71.4862, 0.22", "-29.2795, -93.0741, 71.9388, 0.22", "-29.4321, -93.4121, 72.1402, 0.29", "-29.8286, -94.2517, 72.6273, 0.22", "-30.0102, -94.6305, 72.8451, 0.96", "-30.3281, -95.2724, 73.2104, 1.84", "-30.8763, -96.3253, 73.8167, 0.29", "-31.3407, -97.1415, 74.3311, 0.22", "-31.6491, -97.6684, 74.6869, 0.22", "-31.8393, -98.0008, 74.9165, 0.22", "-31.999, -98.3337, 75.1367, 0.37", "-32.2098, -98.9236, 75.4922, 0.52", "-32.3935, -99.6462, 75.8463, 0.29", "-32.5072, -100.297, 76.1291, 0.29", "-32.5674, -100.685, 76.2701, 0.29", "-32.6693, -101.453, 76.5236, 0.44", "-32.7526, -102.359, 76.802, 0.52", "-32.8284, -103.632, 77.1577, 0.15", "-32.8519, -104.272, 77.3266, 0.59", "-32.9017, -105.315, 77.6256, 1.7", "-32.9956, -106.586, 78.0454, 0.15", "-33.0546, -107.177, 78.282, 0.44", "-33.0916, -107.58, 78.4611, 0.44", "-33.1431, -108.151, 78.7481, 0.07", "-33.1989, -108.642, 79.01, 0.07", "-33.2687, -109.01, 79.2261, 0.07", "-33.4078, -109.506, 79.5295, 0.29", "-33.6888, -110.318, 80.0295, 0.52", "-33.8977, -110.897, 80.3917, 0.22", "-34.0779, -111.382, 80.7009, 0.22", "-34.2806, -111.915, 81.0521, 0.37", "-34.481, -112.421, 81.4179, 0.74", "-34.8009, -113.132, 81.9891, 1.33", "-35.1686, -113.815, 82.6026, 0.22", "-35.4595, -114.295, 83.0554, 0.15", "-35.6909, -114.652, 83.4059, 0.29", "-36.0085, -115.136, 83.8955, 0.15", "-36.273, -115.512, 84.2804, 0.59", "-36.5612, -115.883, 84.6936, 0.74", "-37.0109, -116.386, 85.28, 0.07", "-37.4386, -116.842, 85.8273, 0.15", "-37.7453, -117.162, 86.2155, 0.15", "-37.9988, -117.426, 86.5293, 0.15", "-38.2961, -117.722, 86.8708, 0.15", "-38.7271, -118.137, 87.3295, 0.29", "-39.0936, -118.461, 87.6821, 0.74", "-39.658, -118.938, 88.1751, 1.03", "-40.2251, -119.418, 88.6403, 0.29", "-41.0155, -120.103, 89.2999, 0.22", "-41.5078, -120.543, 89.6954, 0.88", "-42.0629, -121.027, 90.1436, 1.33", "-42.5561, -121.439, 90.5324, 1.47", "-43.5035, -122.189, 91.2744, 0.22", "-44.0019, -122.559, 91.6598, 0.22", "-44.5789, -122.98, 92.1202, 1.03", "-45.1981, -123.417, 92.61, 1.55", "-46.0862, -124.054, 93.3188, 0.74", "-46.9359, -124.719, 94.0473, 0.22", "-47.3606, -125.1, 94.4277, 0.22", "-47.7441, -125.469, 94.7684, 0.22", "-48.1754, -125.931, 95.1726, 0.15", "-48.5535, -126.422, 95.5496, 0.37", "-48.9859, -127.138, 96.0411, 0.15", "-49.2519, -127.714, 96.3862, 0.15", "-49.5481, -128.516, 96.8471, 0.22", "-49.6695, -128.892, 97.0518, 0.15", "-49.8318, -129.477, 97.3676, 0.15", "-49.907, -129.848, 97.5666, 0.74", "-49.9615, -130.305, 97.8088, 0.88", "-49.9749, -131.272, 98.3398, 0.15", "-49.9699, -131.643, 98.5482, 0.22", "-50.0219, -132.069, 98.8321, 0.22", "-50.2004, -132.739, 99.3529, 0.22", "-50.2682, -132.921, 99.5106, 0.22", "-50.4565, -133.322, 99.8796, 0.88", "-50.8317, -133.932, 100.458, 1.84", "-51.495, -134.79, 101.304, 0.15", "-51.9214, -135.284, 101.76, 0.15", "-52.2631, -135.643, 102.056, 0.29", "-52.7516, -136.193, 102.489, 0.74", "-53.163, -136.704, 102.877, 1.11", "-53.5242, -137.224, 103.259, 0.52", "-54.0004, -137.971, 103.808, 0.22", "-54.7662, -139.089, 104.711, 0.29", "-55.374, -139.939, 105.477, 0.15", "-55.7051, -140.394, 105.929, 0.37", "-56.1285, -140.95, 106.552, 1.18", "-56.6802, -141.689, 107.472, 0.44", "-57.1478, -142.282, 108.348, 0.29", "-57.4664, -142.684, 109.005, 0.15", "-57.7341, -142.991, 109.523, 0.88", "-58.1276, -143.437, 110.293, 1.03", "-58.6558, -144.044, 111.403, 0.22", "-59.1007, -144.617, 112.522, 0.22", "-59.2976, -144.888, 113.077, 0.59", "-59.5248, -145.191, 113.732, 0.96", "-59.8491, -145.563, 114.646, 0.37", "-60.2916, -145.978, 115.871, 0.15", "-60.6652, -146.228, 116.853, 0.59", "-60.8958, -146.345, 117.449, 1.77", "-61.4837, -146.584, 118.96, 0.22", "-61.8476, -146.72, 119.921, 0.22", "-62.1257, -146.81, 120.609, 0.37", "-62.4239, -146.909, 121.26, 0.37", "-62.6668, -147.006, 121.762, 0.37", "-62.9829, -147.155, 122.448, 0.81", "-63.2243, -147.324, 123.065, 0.81", "-63.5323, -147.727, 124.076, 0.29", "-63.6517, -148.036, 124.708, 0.29", "-63.6406, -148.303, 125.192, 0.29", "-63.5822, -148.438, 125.436, 0.29", "-63.2218, -148.927, 126.391, 0.29", "-63.0418, -149.124, 126.774, 0.44", "-62.6929, -149.491, 127.476, 0.44", "-62.2614, -150.001, 128.471, 0.81", "-61.9682, -150.432, 129.375, 0.81", "-61.8113, -150.772, 130.109, 0.81", "-61.7721, -150.966, 130.555, 0.22", "-61.7672, -151.407, 131.621, 0.22", "-61.8727, -151.901, 132.83, 0.22", "-62.0474, -152.354, 133.904, 0.81", "-62.2631, -152.802, 134.889, 0.52", "-62.6683, -153.523, 136.296, 0.22", "-62.88, -153.856, 136.866, 0.22", "-63.0805, -154.127, 137.248, 0.52", "-63.5264, -154.632, 137.799, 0.15", "-63.7797, -154.874, 137.992, 0.59", "-64.5208, -155.521, 138.359, 0.15", "-65.1075, -155.995, 138.493, 0.37", "-65.7872, -156.516, 138.573, 0.15", "-66.4255, -156.941, 138.591, 0.37", "-66.8641, -157.148, 138.549, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "123.444, 136.005, -16.0792, 0.96", "124.319, 136.819, -16.3066, 0.96", "124.919, 137.436, -16.4696, 1.25", "125.455, 138.053, -16.6232, 0.66", "125.78, 138.458, -16.72, 0.22", "126.17, 138.956, -16.8377, 0.15", "126.421, 139.269, -16.9127, 0.37", "126.928, 139.938, -17.0689, 0.15", "127.297, 140.399, -17.1795, 0.37", "127.583, 140.72, -17.2609, 0.88", "127.931, 141.061, -17.3764, 0.88", "128.735, 141.73, -17.7228, 0.22", "129.291, 142.154, -17.9689, 0.22", "129.86, 142.524, -18.2267, 0.22", "130.255, 142.75, -18.4128, 0.22", "131.095, 143.187, -18.8407, 1.25", "131.964, 143.598, -19.3501, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "123.444, 136.005, -16.0792, 0.29", "123.539, 137.016, -16.073, 0.29", "123.674, 137.502, -16.0965, 0.22", "123.822, 137.898, -16.1339, 0.66", "124.067, 138.476, -16.2102, 0.22", "124.325, 139.035, -16.297, 0.15", "124.562, 139.555, -16.3869, 0.15", "124.886, 140.202, -16.5361, 0.15", "125.244, 140.874, -16.7256, 0.22", "125.583, 141.476, -16.9216, 0.29", "125.879, 141.971, -17.0992, 0.22", "126.211, 142.464, -17.2929, 0.29", "126.744, 143.111, -17.5616, 0.22", "127.261, 143.658, -17.7964, 0.66", "127.577, 143.968, -17.9289, 1.11", "127.972, 144.347, -18.0934, 1.18", "128.522, 144.876, -18.3322, 0.37", "129.121, 145.458, -18.5966, 0.37", "129.591, 145.98, -18.8214, 0.22", "129.984, 146.565, -19.0438, 0.22", "130.217, 147.011, -19.2119, 0.22", "130.376, 147.389, -19.3483, 0.59", "130.472, 147.671, -19.4367, 1.03", "130.662, 148.309, -19.6121, 1.18", "131.031, 149.534, -19.8753, 0.44", "131.202, 150.062, -19.9729, 0.88", "131.395, 150.663, -20.0603, 1.7", "131.62, 151.366, -20.1388, 2.29", "131.825, 152.0, -20.1948, 2.29", "131.982, 152.472, -20.2142, 1.99" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "131.982, 152.472, -20.2142, 0.22", "133.266, 154.177, -20.7831, 0.22", "133.869, 154.977, -21.0502, 0.22", "134.507, 155.824, -21.3327, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "131.982, 152.472, -20.2142, 0.29", "133.027, 153.17, -20.2594, 0.29", "133.722, 153.633, -20.2894, 0.29", "134.422, 154.099, -20.3197, 0.29", "135.014, 154.494, -20.3453, 0.52", "135.618, 154.896, -20.3714, 0.52", "136.616, 155.562, -20.4146, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_35", "dend_35", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_BTC_844c3bba88_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_35
create dend_47
public dend_47
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_10
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_59
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_58(0), soma_0(0.45000018730548563)
    connect dend_35(0), soma_0(0.45000018730548563)
    connect dend_0(0), soma_0(0.45000018730548563)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_20(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.16881, -12.804, 0.0, 3.44428 ) }
    soma_0 { pt3dadd( 1.99522, -11.5105, 0.0, 5.75363 ) }
    soma_0 { pt3dadd( 1.82164, -10.2169, 0.0, 7.75663 ) }
    soma_0 { pt3dadd( 1.64805, -8.92341, 0.0, 8.89598 ) }
    soma_0 { pt3dadd( 1.47447, -7.62987, 0.0, 9.91596 ) }
    soma_0 { pt3dadd( 1.30088, -6.33633, 0.0, 10.9547 ) }
    soma_0 { pt3dadd( 1.1273, -5.04279, 0.0, 11.8384 ) }
    soma_0 { pt3dadd( 0.953711, -3.74926, 0.0, 12.6846 ) }
    soma_0 { pt3dadd( 0.780126, -2.45572, 0.0, 13.1367 ) }
    soma_0 { pt3dadd( 0.606541, -1.16218, 0.0, 13.4162 ) }
    soma_0 { pt3dadd( 0.432956, 0.13136, 0.0, 13.3909 ) }
    soma_0 { pt3dadd( 0.25937, 1.4249, 0.0, 13.2383 ) }
    soma_0 { pt3dadd( 0.085785, 2.71844, 0.0, 12.8868 ) }
    soma_0 { pt3dadd( -0.0878002, 4.01197, 0.0, 12.8103 ) }
    soma_0 { pt3dadd( -0.261385, 5.30551, 0.0, 12.9125 ) }
    soma_0 { pt3dadd( -0.434971, 6.59905, 0.0, 12.4763 ) }
    soma_0 { pt3dadd( -0.608556, 7.89259, 0.0, 11.6777 ) }
    soma_0 { pt3dadd( -0.782141, 9.18613, 0.0, 10.5994 ) }
    soma_0 { pt3dadd( -0.955726, 10.4797, 0.0, 9.19908 ) }
    soma_0 { pt3dadd( -1.12931, 11.7732, 0.0, 7.03753 ) }
    soma_0 { pt3dadd( -1.3029, 13.0667, 0.0, 4.1381 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.21969, -11.987, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.21969, -11.987, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.43332, -12.6596, -4.62976, 1.84 ) }
    dend_58 { pt3dadd( 3.889, -14.0944, -4.71457, 2.14 ) }
    dend_58 { pt3dadd( 4.18069, -15.0127, -4.76886, 1.92 ) }
    dend_58 { pt3dadd( 4.55158, -16.1805, -4.83789, 2.06 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 27/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.219697, -12.424, -1.64, 2.43 ) }
    dend_35 { pt3dadd( 0.219697, -12.424, -1.64, 2.43 ) }
    dend_35 { pt3dadd( -0.411222, -13.8516, -1.82936, 1.92 ) }
    dend_35 { pt3dadd( -0.93623, -15.0395, -1.98694, 2.14 ) }
    dend_35 { pt3dadd( -1.26126, -15.7749, -2.08449, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.5397, 11.896, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.5397, 11.896, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.79105, 12.791, -0.0570443, 2.36 ) }
    dend_0 { pt3dadd( 2.12656, 13.8982, -0.119594, 2.36 ) }
    dend_0 { pt3dadd( 2.68392, 15.6767, -0.209241, 2.29 ) }
    dend_0 { pt3dadd( 3.11293, 16.9951, -0.284014, 2.21 ) }
    dend_0 { pt3dadd( 3.55275, 18.2992, -0.361464, 2.29 ) }
    dend_0 { pt3dadd( 3.93881, 19.4226, -0.430588, 2.43 ) }
    dend_0 { pt3dadd( 4.3813, 20.6651, -0.512215, 2.36 ) }
    dend_0 { pt3dadd( 4.75301, 21.6367, -0.569365, 2.51 ) }
    dend_0 { pt3dadd( 5.15189, 22.5845, -0.625682, 3.17 ) }
    dend_0 { pt3dadd( 5.41093, 23.1678, -0.651259, 3.17 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.3029, 13.0667, 0.0, 0.475067 ) }
    axon_0 { pt3dadd( -3.29794, 27.9334, 0.0, 0.475067 ) }
    axon_0 { pt3dadd( -5.29297, 42.8002, 0.0, 0.475067 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 47/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 4.55158, -16.1805, -4.83789, 0.88 ) }
    dend_62 { pt3dadd( 3.62678, -16.0725, -5.66224, 0.88 ) }
    dend_62 { pt3dadd( 2.72297, -16.0593, -6.45235, 0.81 ) }
    dend_62 { pt3dadd( 1.82193, -16.131, -7.25899, 0.81 ) }
    dend_62 { pt3dadd( 0.780899, -16.2991, -8.21848, 0.96 ) }
    dend_62 { pt3dadd( -0.204288, -16.5371, -9.16429, 1.4 ) }
    dend_62 { pt3dadd( -1.14611, -16.8591, -10.141, 1.77 ) }
    dend_62 { pt3dadd( -1.97306, -17.2064, -11.0477, 0.44 ) }
    dend_62 { pt3dadd( -2.68667, -17.6136, -11.8656, 0.44 ) }
    dend_62 { pt3dadd( -3.08866, -17.9318, -12.3226, 0.44 ) }
    dend_62 { pt3dadd( -3.40496, -18.3239, -12.7327, 0.66 ) }
    dend_62 { pt3dadd( -3.75966, -19.099, -13.4048, 1.03 ) }
    dend_62 { pt3dadd( -10.6986, -19.8597, -22.3707, 1.03 ) }
    dend_62 { pt3dadd( -16.2104, -20.1407, -32.3066, 1.03 ) }
    dend_62 { pt3dadd( -19.4438, -19.017, -43.1402, 1.03 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 62/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 4.55158, -16.1805, -4.83789, 1.11 ) }
    dend_59 { pt3dadd( 5.30444, -17.1244, -4.72605, 1.11 ) }
    dend_59 { pt3dadd( 5.96444, -18.0087, -4.57311, 1.25 ) }
    dend_59 { pt3dadd( 6.2172, -18.3689, -4.49188, 1.7 ) }
    dend_59 { pt3dadd( 6.65772, -19.0296, -4.33192, 1.77 ) }
    dend_59 { pt3dadd( 7.40865, -20.1612, -4.05867, 1.33 ) }
    dend_59 { pt3dadd( 7.98912, -21.0429, -3.85582, 1.03 ) }
    dend_59 { pt3dadd( 8.42262, -21.7347, -3.66802, 1.03 ) }
    dend_59 { pt3dadd( 8.85438, -22.4516, -3.49469, 1.03 ) }
    dend_59 { pt3dadd( 9.22322, -23.0854, -3.37985, 1.33 ) }
    dend_59 { pt3dadd( 9.76314, -24.0592, -3.28065, 1.33 ) }
    dend_59 { pt3dadd( 10.2635, -25.01, -3.28234, 0.74 ) }
    dend_59 { pt3dadd( 10.7619, -26.0139, -3.38307, 0.74 ) }
    dend_59 { pt3dadd( 11.2838, -27.0417, -3.53306, 0.88 ) }
    dend_59 { pt3dadd( 11.6779, -27.8119, -3.66199, 1.33 ) }
    dend_59 { pt3dadd( 11.9872, -28.3973, -3.73241, 2.06 ) }
    dend_59 { pt3dadd( 12.6366, -29.6166, -3.82018, 0.96 ) }
    dend_59 { pt3dadd( 13.1875, -30.5931, -3.82771, 0.74 ) }
    dend_59 { pt3dadd( 13.6085, -31.3017, -3.79304, 1.18 ) }
    dend_59 { pt3dadd( 13.8985, -31.7747, -3.72487, 1.55 ) }
    dend_59 { pt3dadd( 14.6525, -32.987, -3.51185, 0.88 ) }
    dend_59 { pt3dadd( 15.1014, -33.7154, -3.41056, 0.81 ) }
    dend_59 { pt3dadd( 15.7114, -34.7261, -3.34977, 0.88 ) }
    dend_59 { pt3dadd( 16.0449, -35.3059, -3.37157, 1.4 ) }
    dend_59 { pt3dadd( 16.3247, -35.8369, -3.45019, 1.4 ) }
    dend_59 { pt3dadd( 16.7296, -36.674, -3.64939, 0.81 ) }
    dend_59 { pt3dadd( 17.1035, -37.5027, -3.91994, 0.88 ) }
    dend_59 { pt3dadd( 17.4019, -38.1639, -4.16473, 0.52 ) }
    dend_59 { pt3dadd( 17.5795, -38.5422, -4.31609, 0.96 ) }
    dend_59 { pt3dadd( 17.9068, -39.1675, -4.54453, 1.92 ) }
    dend_59 { pt3dadd( 18.3578, -39.9567, -4.78261, 0.74 ) }
    dend_59 { pt3dadd( 18.8106, -40.6957, -4.96848, 0.74 ) }
    dend_59 { pt3dadd( 19.2796, -41.398, -5.10878, 0.96 ) }
    dend_59 { pt3dadd( 19.7549, -42.0385, -5.23083, 1.55 ) }
    dend_59 { pt3dadd( 20.6192, -43.0862, -5.45269, 0.81 ) }
    dend_59 { pt3dadd( 21.3661, -43.9078, -5.64005, 0.81 ) }
    dend_59 { pt3dadd( 22.0869, -44.6471, -5.81971, 1.25 ) }
    dend_59 { pt3dadd( 22.8012, -45.3574, -5.99436, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_59 { pt3dadd( 23.8509, -46.414, -6.21129, 0.81 ) }
    dend_59 { pt3dadd( 24.7417, -47.3604, -6.35568, 0.81 ) }
    dend_59 { pt3dadd( 25.2452, -47.9065, -6.42264, 1.18 ) }
    dend_59 { pt3dadd( 25.8252, -48.5026, -6.47791, 1.55 ) }
    dend_59 { pt3dadd( 26.4428, -49.1377, -6.50741, 1.55 ) }
    dend_59 { pt3dadd( 27.1854, -49.9605, -6.51321, 0.59 ) }
    dend_59 { pt3dadd( 27.8895, -50.8323, -6.44201, 0.81 ) }
    dend_59 { pt3dadd( 28.3362, -51.4425, -6.33961, 1.33 ) }
    dend_59 { pt3dadd( 28.998, -52.3965, -6.14796, 0.37 ) }
    dend_59 { pt3dadd( 29.3491, -52.9489, -6.0075, 0.22 ) }
    dend_59 { pt3dadd( 33.8362, -58.869, -6.29117, 0.22 ) }
    dend_59 { pt3dadd( 39.3112, -63.8359, -7.60552, 0.22 ) }
    dend_59 { pt3dadd( 45.1113, -68.6238, -7.48081, 0.22 ) }
    dend_59 { pt3dadd( 50.4043, -73.7335, -6.0227, 0.22 ) }
    dend_59 { pt3dadd( 56.2473, -78.0626, -3.98227, 0.22 ) }
    dend_59 { pt3dadd( 61.5027, -83.2891, -2.89531, 0.22 ) }
    dend_59 { pt3dadd( 66.5503, -88.7911, -3.07664, 0.22 ) }
    dend_59 { pt3dadd( 71.5157, -94.2562, -4.21239, 0.22 ) }
    dend_59 { pt3dadd( 76.6688, -99.6719, -4.13644, 0.22 ) }
    dend_59 { pt3dadd( 81.3892, -105.427, -4.39688, 0.22 ) }
    dend_59 { pt3dadd( 85.6809, -111.401, -5.43398, 0.22 ) }
    dend_59 { pt3dadd( 89.5883, -117.305, -7.69723, 0.22 ) }
    dend_59 { pt3dadd( 94.4436, -122.381, -10.3232, 0.22 ) }
    dend_59 { pt3dadd( 98.1414, -127.7, -14.0589, 0.22 ) }
    dend_59 { pt3dadd( 102.287, -133.423, -16.4122, 0.22 ) }
    dend_59 { pt3dadd( 105.61, -139.874, -17.7747, 0.22 ) }
    dend_59 { pt3dadd( 109.677, -146.067, -17.9027, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_35 (entry count 27/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.26126, -15.7749, -2.08449, 0.96 ) }
    dend_47 { pt3dadd( -2.13516, -16.2873, -2.03361, 0.96 ) }
    dend_47 { pt3dadd( -2.61325, -16.5827, -2.01225, 0.96 ) }
    dend_47 { pt3dadd( -3.10254, -16.9019, -1.99697, 1.25 ) }
    dend_47 { pt3dadd( -3.36075, -17.0821, -1.99237, 1.25 ) }
    dend_47 { pt3dadd( -3.83672, -17.4287, -1.9943, 0.96 ) }
    dend_47 { pt3dadd( -4.28904, -17.7637, -2.00686, 0.96 ) }
    dend_47 { pt3dadd( -4.68907, -18.0688, -2.02731, 1.47 ) }
    dend_47 { pt3dadd( -5.19501, -18.4221, -2.05725, 1.62 ) }
    dend_47 { pt3dadd( -5.8215, -18.7992, -2.08745, 0.96 ) }
    dend_47 { pt3dadd( -6.33624, -19.0672, -2.1125, 0.96 ) }
    dend_47 { pt3dadd( -7.06534, -19.3863, -2.14213, 1.11 ) }
    dend_47 { pt3dadd( -7.58977, -19.5693, -2.15721, 1.4 ) }
    dend_47 { pt3dadd( -8.50933, -19.8184, -2.17695, 1.33 ) }
    dend_47 { pt3dadd( -9.2706, -19.9811, -2.19971, 0.96 ) }
    dend_47 { pt3dadd( -10.0519, -20.1307, -2.23069, 1.18 ) }
    dend_47 { pt3dadd( -10.4446, -20.2041, -2.24857, 1.18 ) }
    dend_47 { pt3dadd( -11.4471, -20.4086, -2.30747, 0.88 ) }
    dend_47 { pt3dadd( -12.0213, -20.5623, -2.354, 0.88 ) }
    dend_47 { pt3dadd( -12.4132, -20.7071, -2.40442, 1.03 ) }
    dend_47 { pt3dadd( -13.1347, -21.066, -2.51385, 1.25 ) }
    dend_47 { pt3dadd( -13.5939, -21.3464, -2.58409, 0.88 ) }
    dend_47 { pt3dadd( -14.034, -21.6631, -2.6509, 0.88 ) }
    dend_47 { pt3dadd( -14.4259, -21.9782, -2.70765, 1.11 ) }
    dend_47 { pt3dadd( -14.8692, -22.3252, -2.7732, 1.25 ) }
    dend_47 { pt3dadd( -15.4511, -22.7538, -2.89353, 0.88 ) }
    dend_47 { pt3dadd( -15.8984, -23.079, -3.04303, 1.03 ) }
    dend_47 { pt3dadd( -16.2227, -23.3253, -3.20559, 1.4 ) }
    dend_47 { pt3dadd( -16.6261, -23.6396, -3.48627, 1.18 ) }
    dend_47 { pt3dadd( -17.1316, -24.0151, -3.95058, 1.25 ) }
    dend_47 { pt3dadd( -17.4971, -24.3185, -4.51729, 1.4 ) }
    dend_47 { pt3dadd( -17.1666, -24.3593, -5.19333, 1.4 ) }
    dend_47 { pt3dadd( -16.6836, -24.2585, -5.55108, 1.47 ) }
    dend_47 { pt3dadd( -15.6668, -23.981, -6.0878, 0.52 ) }
    dend_47 { pt3dadd( -15.0997, -23.8177, -6.28077, 0.52 ) }
    dend_47 { pt3dadd( -14.4904, -23.6402, -6.40999, 0.59 ) }
    dend_47 { pt3dadd( -13.4423, -23.3575, -6.50946, 0.59 ) }
    dend_47 { pt3dadd( -12.7939, -23.2013, -6.50981, 0.66 ) }
    dend_47 { pt3dadd( -12.0905, -23.0724, -6.45078, 0.74 ) }
    dend_47 { pt3dadd( -11.1424, -22.9382, -6.3267, 0.59 ) }
    dend_47 { pt3dadd( -10.4263, -22.8743, -6.21059, 0.88 ) }
    dend_47 { pt3dadd( -9.45766, -22.8325, -6.01962, 0.37 ) }
    dend_47 { pt3dadd( -8.94317, -22.8466, -5.90598, 0.37 ) }
    dend_47 { pt3dadd( -8.43693, -22.9027, -5.76792, 0.37 ) }
    dend_47 { pt3dadd( -13.0341, -26.5224, -7.16271, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 72/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.26126, -15.7749, -2.08449, 1.4 ) }
    dend_36 { pt3dadd( -1.1587, -17.0318, -1.87854, 1.4 ) }
    dend_36 { pt3dadd( -1.04023, -18.325, -1.68783, 1.03 ) }
    dend_36 { pt3dadd( -0.918803, -19.5822, -1.50293, 1.33 ) }
    dend_36 { pt3dadd( -0.781756, -21.0344, -1.28129, 1.25 ) }
    dend_36 { pt3dadd( -0.651405, -22.3539, -1.06091, 1.25 ) }
    dend_36 { pt3dadd( -0.529121, -23.6115, -0.829396, 1.11 ) }
    dend_36 { pt3dadd( -0.42893, -24.8211, -0.619226, 1.84 ) }
    dend_36 { pt3dadd( -0.358572, -25.6027, -0.495693, 1.62 ) }
    dend_36 { pt3dadd( -0.212215, -27.0949, -0.23885, 1.18 ) }
    dend_36 { pt3dadd( -0.068326, -28.677, 0.0544828, 1.11 ) }
    dend_36 { pt3dadd( 0.0666677, -30.2684, 0.359823, 1.25 ) }
    dend_36 { pt3dadd( 0.146386, -31.3205, 0.553033, 1.55 ) }
    dend_36 { pt3dadd( 0.223309, -32.4651, 0.771613, 2.06 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 86/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 5.41093, 23.1678, -0.651259, 2.88 ) }
    dend_10 { pt3dadd( 5.49979, 23.8575, -0.575867, 2.88 ) }
    dend_10 { pt3dadd( 5.61196, 24.7281, -0.480702, 2.58 ) }
    dend_10 { pt3dadd( 5.73872, 25.712, -0.373151, 2.36 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 90/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.41093, 23.1678, -0.651259, 1.62 ) }
    dend_1 { pt3dadd( 6.28823, 22.81, -1.42705, 1.62 ) }
    dend_1 { pt3dadd( 7.33297, 22.2542, -2.29123, 0.96 ) }
    dend_1 { pt3dadd( 8.0327, 21.8214, -2.842, 0.96 ) }
    dend_1 { pt3dadd( 8.80696, 21.2744, -3.43522, 1.11 ) }
    dend_1 { pt3dadd( 9.22411, 20.9536, -3.7463, 1.25 ) }
    dend_1 { pt3dadd( 10.0141, 20.2816, -4.33788, 0.96 ) }
    dend_1 { pt3dadd( 10.9582, 19.3146, -5.02312, 0.81 ) }
    dend_1 { pt3dadd( 11.484, 18.7444, -5.39735, 0.81 ) }
    dend_1 { pt3dadd( 11.9413, 18.2635, -5.72779, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( 12.3614, 17.84, -6.06891, 0.88 ) }
    dend_1 { pt3dadd( 13.0527, 17.2061, -6.67499, 0.74 ) }
    dend_1 { pt3dadd( 13.7861, 16.6231, -7.35064, 0.59 ) }
    dend_1 { pt3dadd( 14.4357, 16.1759, -7.94814, 0.74 ) }
    dend_1 { pt3dadd( 14.8981, 15.8827, -8.35927, 0.66 ) }
    dend_1 { pt3dadd( 15.3985, 15.5735, -8.76054, 0.66 ) }
    dend_1 { pt3dadd( 16.1339, 15.1169, -9.29274, 0.96 ) }
    dend_1 { pt3dadd( 16.9134, 14.6456, -9.79284, 1.11 ) }
    dend_1 { pt3dadd( 17.8918, 14.0099, -10.3695, 0.81 ) }
    dend_1 { pt3dadd( 18.6813, 13.4395, -10.8143, 0.81 ) }
    dend_1 { pt3dadd( 19.4403, 12.8473, -11.2476, 0.52 ) }
    dend_1 { pt3dadd( 19.921, 12.4308, -11.5561, 0.52 ) }
    dend_1 { pt3dadd( 20.2549, 12.089, -11.8458, 0.52 ) }
    dend_1 { pt3dadd( 20.6232, 11.6126, -12.3402, 0.74 ) }
    dend_1 { pt3dadd( 20.9756, 11.0293, -13.0683, 0.96 ) }
    dend_1 { pt3dadd( 21.1647, 10.6343, -13.6023, 1.03 ) }
    dend_1 { pt3dadd( 21.3753, 10.1226, -14.3318, 0.81 ) }
    dend_1 { pt3dadd( 21.6568, 9.5036, -15.2191, 0.52 ) }
    dend_1 { pt3dadd( 21.881, 8.95505, -15.9924, 0.88 ) }
    dend_1 { pt3dadd( 21.9929, 8.68189, -16.3851, 1.11 ) }
    dend_1 { pt3dadd( 22.2444, 8.13763, -17.1806, 0.81 ) }
    dend_1 { pt3dadd( 22.5584, 7.63834, -17.9008, 0.22 ) }
    dend_1 { pt3dadd( 23.0887, 7.07848, -18.6754, 0.15 ) }
    dend_1 { pt3dadd( 27.9634, 2.40421, -23.3031, 0.15 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 24/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -5.29297, 42.8002, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -7.28801, 57.6669, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -9.28305, 72.5336, 0.0, 0.15 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -19.4438, -19.017, -43.1402, 0.15 ) }
    dend_66 { pt3dadd( -24.7751, -19.3926, -49.6262, 0.15 ) }
    dend_66 { pt3dadd( -30.5606, -19.2705, -55.7247, 0.15 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 30/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -19.4438, -19.017, -43.1402, 0.59 ) }
    dend_63 { pt3dadd( -22.5863, -19.854, -55.9059, 0.15 ) }
    dend_63 { pt3dadd( -25.5673, -19.4758, -68.7329, 0.15 ) }
    dend_63 { pt3dadd( -31.1517, -16.919, -80.3653, 0.15 ) }
    dend_63 { pt3dadd( -38.7185, -15.3612, -91.0334, 0.15 ) }
    dend_63 { pt3dadd( -44.797, -15.1161, -102.72, 0.15 ) }
    dend_63 { pt3dadd( -51.2596, -17.2241, -113.977, 0.15 ) }
    dend_63 { pt3dadd( -58.1279, -18.2082, -125.168, 0.15 ) }
    dend_63 { pt3dadd( -64.7298, -20.2279, -136.361, 0.15 ) }
    dend_63 { pt3dadd( -71.7712, -22.2588, -147.28, 0.15 ) }
    dend_63 { pt3dadd( -80.118, -21.9362, -157.468, 0.15 ) }
    dend_63 { pt3dadd( -87.4279, -21.6542, -168.426, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 42/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 109.677, -146.067, -17.9027, 0.15 ) }
    dend_61 { pt3dadd( 117.491, -155.472, -20.5452, 0.15 ) }
    dend_61 { pt3dadd( 125.01, -165.342, -21.2004, 0.15 ) }
    dend_61 { pt3dadd( 132.879, -174.832, -19.8984, 0.15 ) }
    dend_61 { pt3dadd( 140.964, -184.022, -17.9073, 0.15 ) }
    dend_61 { pt3dadd( 148.985, -193.5, -17.5337, 0.15 ) }
    dend_61 { pt3dadd( 158.123, -202.016, -17.355, 0.15 ) }
    dend_61 { pt3dadd( 169.237, -208.044, -17.6545, 0.15 ) }
    dend_61 { pt3dadd( 178.402, -216.476, -19.1152, 0.15 ) }
    dend_61 { pt3dadd( 187.557, -224.985, -19.2539, 0.15 ) }
    dend_61 { pt3dadd( 195.748, -234.228, -21.1899, 0.15 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 53/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 109.677, -146.067, -17.9027, 0.59 ) }
    dend_60 { pt3dadd( 115.598, -154.092, -17.4987, 0.15 ) }
    dend_60 { pt3dadd( 120.301, -162.79, -18.5995, 0.15 ) }
    dend_60 { pt3dadd( 123.15, -172.07, -20.6176, 0.15 ) }
    dend_60 { pt3dadd( 124.821, -181.764, -21.1894, 0.15 ) }
    dend_60 { pt3dadd( 127.782, -191.052, -22.9756, 0.15 ) }
    dend_60 { pt3dadd( 130.838, -200.395, -24.0863, 0.15 ) }
    dend_60 { pt3dadd( 135.662, -208.941, -25.8605, 0.15 ) }
    dend_60 { pt3dadd( 140.433, -217.376, -28.2955, 0.15 ) }
    dend_60 { pt3dadd( 145.172, -226.102, -28.4017, 0.15 ) }
    dend_60 { pt3dadd( 148.83, -235.289, -28.6657, 0.15 ) }
    dend_60 { pt3dadd( 153.255, -244.146, -29.4168, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 65/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -13.0341, -26.5224, -7.16271, 0.15 ) }
    dend_53 { pt3dadd( -17.5502, -30.2604, -6.56084, 0.15 ) }
    dend_53 { pt3dadd( -21.5378, -34.5339, -6.25837, 0.15 ) }
    dend_53 { pt3dadd( -24.4501, -39.4508, -5.23248, 0.15 ) }
    dend_53 { pt3dadd( -27.7249, -44.2452, -5.16341, 0.15 ) }
    dend_53 { pt3dadd( -31.2942, -48.8073, -5.72186, 0.15 ) }
    dend_53 { pt3dadd( -33.6254, -54.0458, -6.20599, 0.15 ) }
    dend_53 { pt3dadd( -36.2178, -59.1494, -6.895, 0.15 ) }
    dend_53 { pt3dadd( -38.2711, -64.5176, -6.81609, 0.15 ) }
    dend_53 { pt3dadd( -40.5343, -69.7619, -5.99063, 0.15 ) }
    dend_53 { pt3dadd( -42.3456, -75.0251, -4.44665, 0.15 ) }
    dend_53 { pt3dadd( -43.6823, -80.5346, -3.53944, 0.15 ) }
    dend_53 { pt3dadd( -45.7626, -85.8929, -3.53975, 0.15 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 78/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -13.0341, -26.5224, -7.16271, 0.59 ) }
    dend_48 { pt3dadd( -19.9076, -33.7041, -13.9087, 0.15 ) }
    dend_48 { pt3dadd( -25.7157, -41.128, -21.3141, 0.15 ) }
    dend_48 { pt3dadd( -32.5908, -47.9066, -28.5017, 0.15 ) }
    dend_48 { pt3dadd( -37.8508, -54.6009, -36.9943, 0.15 ) }
    dend_48 { pt3dadd( -42.088, -61.2743, -46.0467, 0.15 ) }
    dend_48 { pt3dadd( -46.9515, -68.7762, -54.0094, 0.15 ) }
    dend_48 { pt3dadd( -50.0523, -76.6592, -62.4123, 0.15 ) }
    dend_48 { pt3dadd( -52.8335, -85.2398, -70.1445, 0.15 ) }
    dend_48 { pt3dadd( -54.2309, -92.785, -79.2957, 0.15 ) }
    dend_48 { pt3dadd( -56.6508, -100.466, -88.1113, 0.15 ) }
    dend_48 { pt3dadd( -59.0078, -107.098, -97.8404, 0.15 ) }
    dend_48 { pt3dadd( -60.1335, -114.483, -107.17, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 91/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 0.223309, -32.4651, 0.771613, 0.44 ) }
    dend_42 { pt3dadd( -0.551574, -33.6374, 1.45145, 0.44 ) }
    dend_42 { pt3dadd( -0.910594, -34.1268, 1.78272, 0.44 ) }
    dend_42 { pt3dadd( -1.40153, -34.783, 2.35465, 0.44 ) }
    dend_42 { pt3dadd( -1.79291, -35.3515, 2.92793, 0.66 ) }
    dend_42 { pt3dadd( -2.08567, -35.8784, 3.4318, 0.66 ) }
    dend_42 { pt3dadd( -2.24183, -36.2553, 3.75086, 0.44 ) }
    dend_42 { pt3dadd( -2.39208, -36.762, 4.18852, 0.52 ) }
    dend_42 { pt3dadd( -2.47559, -37.502, 4.722, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -2.42846, -38.3162, 5.14957, 0.66 ) }
    dend_42 { pt3dadd( -2.29532, -39.2629, 5.55249, 0.88 ) }
    dend_42 { pt3dadd( -2.1367, -40.2361, 5.89957, 1.11 ) }
    dend_42 { pt3dadd( -1.99771, -41.1562, 6.1697, 0.74 ) }
    dend_42 { pt3dadd( -1.91575, -41.8413, 6.29146, 0.29 ) }
    dend_42 { pt3dadd( -1.86974, -42.5438, 6.32929, 0.22 ) }
    dend_42 { pt3dadd( -1.86477, -42.9614, 6.31791, 0.22 ) }
    dend_42 { pt3dadd( -1.90308, -43.5102, 6.283, 0.22 ) }
    dend_42 { pt3dadd( -1.96302, -44.0274, 6.23254, 0.22 ) }
    dend_42 { pt3dadd( -2.09409, -45.1386, 6.1145, 0.29 ) }
    dend_42 { pt3dadd( -2.1636, -45.9994, 6.03245, 0.52 ) }
    dend_42 { pt3dadd( -2.17734, -46.6081, 5.98341, 0.52 ) }
    dend_42 { pt3dadd( -2.12701, -47.4441, 5.93505, 0.44 ) }
    dend_42 { pt3dadd( -1.95949, -48.683, 5.90412, 0.29 ) }
    dend_42 { pt3dadd( -1.84783, -49.2879, 5.91186, 0.66 ) }
    dend_42 { pt3dadd( -1.7563, -49.7118, 5.95613, 1.77 ) }
    dend_42 { pt3dadd( -1.58433, -50.4793, 6.09073, 1.18 ) }
    dend_42 { pt3dadd( -1.40866, -51.4578, 6.32325, 0.52 ) }
    dend_42 { pt3dadd( -1.28413, -52.3684, 6.58439, 0.52 ) }
    dend_42 { pt3dadd( -1.21992, -52.9574, 6.77793, 0.81 ) }
    dend_42 { pt3dadd( -1.10352, -53.8381, 7.07941, 0.96 ) }
    dend_42 { pt3dadd( -0.977856, -54.6061, 7.36539, 0.52 ) }
    dend_42 { pt3dadd( -0.789589, -55.645, 7.80723, 0.22 ) }
    dend_42 { pt3dadd( -0.690147, -56.1318, 8.04261, 0.29 ) }
    dend_42 { pt3dadd( -0.542623, -56.7696, 8.39098, 0.29 ) }
    dend_42 { pt3dadd( -0.336981, -57.6776, 8.90092, 0.22 ) }
    dend_42 { pt3dadd( -0.20077, -58.272, 9.24837, 0.37 ) }
    dend_42 { pt3dadd( -0.069476, -58.8854, 9.61367, 0.74 ) }
    dend_42 { pt3dadd( 0.0250558, -59.4744, 9.95952, 1.03 ) }
    dend_42 { pt3dadd( 0.0603544, -60.1408, 10.3176, 1.25 ) }
    dend_42 { pt3dadd( -0.00477803, -61.4456, 10.9556, 0.37 ) }
    dend_42 { pt3dadd( -0.088778, -62.2048, 11.3124, 1.18 ) }
    dend_42 { pt3dadd( -0.166493, -62.9061, 11.618, 2.65 ) }
    dend_42 { pt3dadd( -0.25642, -64.0511, 12.076, 2.21 ) }
    dend_42 { pt3dadd( -0.29408, -65.1603, 12.4988, 0.96 ) }
    dend_42 { pt3dadd( -0.275088, -66.0763, 12.833, 0.29 ) }
    dend_42 { pt3dadd( -0.233066, -66.7256, 13.0743, 0.29 ) }
    dend_42 { pt3dadd( -0.196088, -67.3314, 13.297, 0.66 ) }
    dend_42 { pt3dadd( -0.167561, -68.0554, 13.5961, 0.44 ) }
    dend_42 { pt3dadd( -0.149877, -68.699, 13.8835, 0.22 ) }
    dend_42 { pt3dadd( -0.139927, -69.0219, 14.0385, 0.22 ) }
    dend_42 { pt3dadd( -0.138003, -69.4149, 14.2142, 0.22 ) }
    dend_42 { pt3dadd( -0.178572, -70.2161, 14.5302, 0.29 ) }
    dend_42 { pt3dadd( -0.218031, -70.8217, 14.7483, 0.29 ) }
    dend_42 { pt3dadd( -0.23068, -71.2375, 14.8825, 0.22 ) }
    dend_42 { pt3dadd( -0.230681, -71.717, 15.012, 0.22 ) }
    dend_42 { pt3dadd( -0.198252, -72.1381, 15.1192, 0.81 ) }
    dend_42 { pt3dadd( -0.128597, -72.5358, 15.2135, 1.55 ) }
    dend_42 { pt3dadd( 0.0951964, -73.3952, 15.4266, 1.84 ) }
    dend_42 { pt3dadd( 0.490543, -74.6825, 15.7468, 0.15 ) }
    dend_42 { pt3dadd( 0.607635, -75.0871, 15.8568, 0.15 ) }
    dend_42 { pt3dadd( 0.703855, -75.425, 15.9523, 0.15 ) }
    dend_42 { pt3dadd( 0.807587, -75.8338, 16.0683, 0.15 ) }
    dend_42 { pt3dadd( 0.945691, -76.4397, 16.2361, 0.88 ) }
    dend_42 { pt3dadd( 1.05489, -76.9432, 16.3686, 1.92 ) }
    dend_42 { pt3dadd( 1.29293, -77.9427, 16.5987, 1.99 ) }
    dend_42 { pt3dadd( 1.36071, -78.1985, 16.6525, 1.99 ) }
    dend_42 { pt3dadd( 1.65448, -79.3805, 16.8633, 0.15 ) }
    dend_42 { pt3dadd( 1.72764, -79.7079, 16.9084, 0.15 ) }
    dend_42 { pt3dadd( 1.7936, -80.0451, 16.9371, 0.37 ) }
    dend_42 { pt3dadd( 1.84509, -80.388, 16.9529, 0.37 ) }
    dend_42 { pt3dadd( 1.94756, -81.2015, 16.9834, 0.15 ) }
    dend_42 { pt3dadd( 1.99128, -81.7067, 17.0114, 0.15 ) }
    dend_42 { pt3dadd( 2.03947, -82.3013, 17.0573, 0.22 ) }
    dend_42 { pt3dadd( 2.05703, -82.648, 17.0972, 0.22 ) }
    dend_42 { pt3dadd( 2.05253, -83.2745, 17.1842, 0.15 ) }
    dend_42 { pt3dadd( 2.02584, -83.7535, 17.2589, 0.15 ) }
    dend_42 { pt3dadd( 1.99552, -84.1326, 17.3243, 0.59 ) }
    dend_42 { pt3dadd( 1.98344, -84.5349, 17.4035, 1.03 ) }
    dend_42 { pt3dadd( 2.00678, -85.157, 17.5204, 0.22 ) }
    dend_42 { pt3dadd( 2.06689, -85.8115, 17.649, 0.07 ) }
    dend_42 { pt3dadd( 2.12384, -86.231, 17.7417, 0.07 ) }
    dend_42 { pt3dadd( 2.17059, -86.4952, 17.8094, 0.66 ) }
    dend_42 { pt3dadd( 2.32172, -87.1835, 18.0314, 0.96 ) }
    dend_42 { pt3dadd( 2.65971, -88.4243, 18.4866, 0.22 ) }
    dend_42 { pt3dadd( 2.88971, -89.0965, 18.7704, 0.22 ) }
    dend_42 { pt3dadd( 3.06603, -89.5303, 18.9915, 0.44 ) }
    dend_42 { pt3dadd( 3.28037, -90.0195, 19.2662, 1.25 ) }
    dend_42 { pt3dadd( 3.48665, -90.4457, 19.5162, 1.92 ) }
    dend_42 { pt3dadd( 3.79802, -90.9808, 19.8554, 1.11 ) }
    dend_42 { pt3dadd( 4.14192, -91.4896, 20.2125, 0.22 ) }
    dend_42 { pt3dadd( 4.41623, -91.889, 20.479, 0.22 ) }
    dend_42 { pt3dadd( 4.71569, -92.361, 20.7647, 0.52 ) }
    dend_42 { pt3dadd( 5.05995, -93.0174, 21.122, 0.22 ) }
    dend_42 { pt3dadd( 5.35343, -93.7304, 21.5002, 0.22 ) }
    dend_42 { pt3dadd( 5.54073, -94.3061, 21.8105, 0.22 ) }
    dend_42 { pt3dadd( 5.61488, -94.5999, 21.9665, 0.81 ) }
    dend_42 { pt3dadd( 5.75908, -95.2975, 22.346, 1.77 ) }
    dend_42 { pt3dadd( 5.98133, -96.6229, 23.1044, 0.37 ) }
    dend_42 { pt3dadd( 6.08897, -97.3173, 23.5115, 0.15 ) }
    dend_42 { pt3dadd( 6.13693, -97.6367, 23.6915, 0.15 ) }
    dend_42 { pt3dadd( 6.20373, -98.034, 23.9063, 0.37 ) }
    dend_42 { pt3dadd( 6.29439, -98.5188, 24.1687, 1.18 ) }
    dend_42 { pt3dadd( 6.41691, -99.0908, 24.4746, 1.55 ) }
    dend_42 { pt3dadd( 6.62245, -99.9695, 24.9027, 0.81 ) }
    dend_42 { pt3dadd( 6.75162, -100.588, 25.1614, 0.15 ) }
    dend_42 { pt3dadd( 6.81706, -100.986, 25.3177, 0.22 ) }
    dend_42 { pt3dadd( 6.90768, -101.587, 25.5407, 0.15 ) }
    dend_42 { pt3dadd( 6.97839, -102.139, 25.7342, 0.96 ) }
    dend_42 { pt3dadd( 7.05817, -102.751, 25.9463, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_42 { pt3dadd( 7.19245, -103.694, 26.2635, 0.22 ) }
    dend_42 { pt3dadd( 7.27535, -104.137, 26.4117, 0.22 ) }
    dend_42 { pt3dadd( 7.4057, -104.694, 26.6018, 0.37 ) }
    dend_42 { pt3dadd( 7.44963, -104.848, 26.6529, 0.37 ) }
    dend_42 { pt3dadd( 7.63036, -105.409, 26.8405, 0.22 ) }
    dend_42 { pt3dadd( 7.72727, -105.668, 26.9365, 0.22 ) }
    dend_42 { pt3dadd( 7.94067, -106.111, 27.0942, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 7/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.223309, -32.4651, 0.771613, 1.84 ) }
    dend_37 { pt3dadd( 0.162209, -33.6741, 0.227463, 1.84 ) }
    dend_37 { pt3dadd( 0.142819, -35.124, -0.356105, 1.55 ) }
    dend_37 { pt3dadd( 0.169079, -36.6885, -0.912966, 1.55 ) }
    dend_37 { pt3dadd( 0.19477, -38.3236, -1.43136, 1.55 ) }
    dend_37 { pt3dadd( 0.197473, -39.9467, -1.88289, 1.47 ) }
    dend_37 { pt3dadd( 0.180575, -41.3684, -2.24558, 0.96 ) }
    dend_37 { pt3dadd( 0.147303, -42.502, -2.48331, 1.55 ) }
    dend_37 { pt3dadd( 0.0232631, -44.5352, -2.80335, 1.25 ) }
    dend_37 { pt3dadd( -0.148448, -46.6355, -3.07513, 1.47 ) }
    dend_37 { pt3dadd( -0.37169, -48.8004, -3.30949, 1.03 ) }
    dend_37 { pt3dadd( -0.568528, -50.2632, -3.45716, 1.18 ) }
    dend_37 { pt3dadd( -0.913524, -52.327, -3.6432, 1.99 ) }
    dend_37 { pt3dadd( -1.28316, -54.0786, -3.7941, 1.92 ) }
    // Section: dend_20, id: dend_20, parent: dend_10 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.73872, 25.712, -0.373151, 2.14 ) }
    dend_20 { pt3dadd( 6.81074, 26.9528, -0.265281, 2.14 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.73872, 25.712, -0.373151, 1.47 ) }
    dend_11 { pt3dadd( 6.12467, 26.7196, 0.84624, 1.47 ) }
    dend_11 { pt3dadd( 6.29904, 27.32, 1.63589, 1.18 ) }
    dend_11 { pt3dadd( 6.38982, 27.8627, 2.45817, 1.18 ) }
    dend_11 { pt3dadd( 6.40521, 28.4075, 3.4449, 1.47 ) }
    dend_11 { pt3dadd( 6.32946, 28.7901, 4.31544, 1.47 ) }
    dend_11 { pt3dadd( 6.23608, 28.9222, 4.76094, 1.47 ) }
    dend_11 { pt3dadd( 5.82687, 28.9487, 5.64853, 1.47 ) }
    dend_11 { pt3dadd( 5.12037, 28.7072, 6.60446, 1.03 ) }
    dend_11 { pt3dadd( 4.636, 28.4503, 7.08659, 1.62 ) }
    dend_11 { pt3dadd( 4.16038, 28.1395, 7.4772, 1.77 ) }
    dend_11 { pt3dadd( 3.53366, 27.6472, 7.93976, 1.77 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 27.9634, 2.40421, -23.3031, 0.15 ) }
    dend_7 { pt3dadd( 34.8259, -3.12978, -28.3625, 0.15 ) }
    dend_7 { pt3dadd( 42.0389, -7.98973, -33.6963, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 27.9634, 2.40421, -23.3031, 0.59 ) }
    dend_2 { pt3dadd( 33.6329, -3.33847, -30.8643, 0.15 ) }
    dend_2 { pt3dadd( 37.9181, -10.2197, -38.2607, 0.15 ) }
    dend_2 { pt3dadd( 40.1385, -17.96, -45.5886, 0.15 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 42/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -30.5606, -19.2705, -55.7247, 0.15 ) }
    dend_68 { pt3dadd( -36.3817, -17.4309, -58.5612, 0.15 ) }
    dend_68 { pt3dadd( -41.0833, -14.6317, -62.4239, 0.15 ) }
    dend_68 { pt3dadd( -44.8988, -10.7539, -66.2325, 0.15 ) }
    dend_68 { pt3dadd( -49.5563, -7.46304, -69.7013, 0.15 ) }
    dend_68 { pt3dadd( -54.5409, -4.80404, -73.3105, 0.15 ) }
    dend_68 { pt3dadd( -59.2583, -2.29079, -77.3656, 0.15 ) }
    dend_68 { pt3dadd( -63.3068, 0.896054, -81.6161, 0.15 ) }
    dend_68 { pt3dadd( -67.444, 4.54899, -85.3342, 0.15 ) }
    dend_68 { pt3dadd( -70.8909, 7.64475, -90.1502, 0.15 ) }
    dend_68 { pt3dadd( -75.2321, 10.0652, -94.6613, 0.15 ) }
    dend_68 { pt3dadd( -80.4855, 12.8665, -97.7311, 0.15 ) }
    dend_68 { pt3dadd( -85.7319, 15.3773, -101.077, 0.15 ) }
    dend_68 { pt3dadd( -90.6798, 18.8032, -103.949, 0.15 ) }
    dend_68 { pt3dadd( -96.2436, 21.7025, -106.284, 0.15 ) }
    dend_68 { pt3dadd( -102.335, 24.2566, -107.462, 0.15 ) }
    dend_68 { pt3dadd( -108.161, 27.5184, -107.452, 0.15 ) }
    dend_68 { pt3dadd( -113.982, 30.7085, -108.213, 0.15 ) }
    dend_68 { pt3dadd( -120.135, 33.3472, -107.833, 0.15 ) }
    dend_68 { pt3dadd( -126.222, 36.1197, -107.445, 0.15 ) }
    dend_68 { pt3dadd( -132.032, 39.2895, -108.368, 0.15 ) }
    dend_68 { pt3dadd( -137.532, 42.9411, -109.222, 0.15 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 64/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -30.5606, -19.2705, -55.7247, 0.59 ) }
    dend_67 { pt3dadd( -33.8693, -22.6589, -64.4484, 0.15 ) }
    dend_67 { pt3dadd( -38.1089, -25.0527, -73.1313, 0.15 ) }
    dend_67 { pt3dadd( -41.6035, -28.3704, -81.8116, 0.15 ) }
    dend_67 { pt3dadd( -44.7224, -31.6938, -90.6334, 0.15 ) }
    dend_67 { pt3dadd( -47.1938, -34.3379, -99.906, 0.15 ) }
    dend_67 { pt3dadd( -50.2432, -37.7413, -108.719, 0.15 ) }
    dend_67 { pt3dadd( -52.2069, -41.1259, -117.848, 0.15 ) }
    dend_67 { pt3dadd( -54.961, -44.1219, -126.919, 0.15 ) }
    dend_67 { pt3dadd( -56.2704, -49.2393, -135.242, 0.15 ) }
    dend_67 { pt3dadd( -56.4186, -54.8297, -143.336, 0.15 ) }
    dend_67 { pt3dadd( -56.4702, -60.5986, -151.293, 0.15 ) }
    dend_67 { pt3dadd( -57.8234, -66.4299, -159.071, 0.15 ) }
    dend_67 { pt3dadd( -57.7675, -73.2362, -166.064, 0.15 ) }
    dend_67 { pt3dadd( -59.1556, -80.8587, -171.866, 0.15 ) }
    dend_67 { pt3dadd( -62.0342, -87.9974, -177.779, 0.15 ) }
    dend_67 { pt3dadd( -64.7132, -94.7395, -184.278, 0.15 ) }
    dend_67 { pt3dadd( -65.9493, -100.753, -191.922, 0.15 ) }
    dend_67 { pt3dadd( -67.198, -106.766, -199.565, 0.15 ) }
    dend_67 { pt3dadd( -67.0798, -114.507, -205.381, 0.15 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 84/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -87.4279, -21.6542, -168.426, 0.15 ) }
    dend_65 { pt3dadd( -93.9581, -22.2982, -178.223, 0.15 ) }
    dend_65 { pt3dadd( -101.478, -22.8096, -187.293, 0.15 ) }
    dend_65 { pt3dadd( -110.039, -22.6732, -195.402, 0.15 ) }
    dend_65 { pt3dadd( -116.829, -21.1906, -204.92, 0.15 ) }
    dend_65 { pt3dadd( -123.898, -18.3549, -213.875, 0.15 ) }
    dend_65 { pt3dadd( -132.556, -17.7029, -221.853, 0.15 ) }
    dend_65 { pt3dadd( -141.613, -17.8461, -229.404, 0.15 ) }
    dend_65 { pt3dadd( -149.72, -19.5371, -237.788, 0.15 ) }
    dend_65 { pt3dadd( -157.818, -23.2837, -245.416, 0.15 ) }
    dend_65 { pt3dadd( -165.72, -27.3444, -253.07, 0.15 ) }
    dend_65 { pt3dadd( -173.375, -33.6548, -259.141, 0.15 ) }
    dend_65 { pt3dadd( -180.217, -39.9092, -266.157, 0.15 ) }
    dend_65 { pt3dadd( -186.689, -46.3053, -273.375, 0.15 ) }
    dend_65 { pt3dadd( -193.346, -53.938, -278.919, 0.15 ) }
    dend_65 { pt3dadd( -199.737, -62.7293, -282.586, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_65 { pt3dadd( -206.353, -70.9298, -287.22, 0.15 ) }
    dend_65 { pt3dadd( -211.399, -80.5488, -290.654, 0.15 ) }
    dend_65 { pt3dadd( -214.883, -90.0772, -295.796, 0.15 ) }
    dend_65 { pt3dadd( -216.878, -100.706, -298.969, 0.15 ) }
    dend_65 { pt3dadd( -221.11, -110.669, -302.393, 0.15 ) }
    dend_65 { pt3dadd( -226.394, -120.566, -304.303, 0.15 ) }
    dend_65 { pt3dadd( -230.558, -130.594, -307.599, 0.15 ) }
    dend_65 { pt3dadd( -236.246, -139.658, -311.647, 0.15 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 8/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -87.4279, -21.6542, -168.426, 0.59 ) }
    dend_64 { pt3dadd( -89.8044, -21.667, -176.28, 0.15 ) }
    dend_64 { pt3dadd( -91.8839, -22.0292, -184.21, 0.15 ) }
    dend_64 { pt3dadd( -94.8933, -22.7814, -191.803, 0.15 ) }
    dend_64 { pt3dadd( -97.564, -24.7133, -199.292, 0.15 ) }
    dend_64 { pt3dadd( -99.4703, -26.0769, -207.147, 0.15 ) }
    dend_64 { pt3dadd( -100.164, -28.5952, -214.895, 0.15 ) }
    dend_64 { pt3dadd( -101.381, -29.5551, -222.95, 0.15 ) }
    dend_64 { pt3dadd( -103.021, -30.1484, -230.968, 0.15 ) }
    dend_64 { pt3dadd( -104.911, -31.085, -238.895, 0.15 ) }
    dend_64 { pt3dadd( -105.78, -33.2867, -246.729, 0.15 ) }
    dend_64 { pt3dadd( -107.436, -36.7926, -253.88, 0.15 ) }
    dend_64 { pt3dadd( -108.338, -39.6014, -261.495, 0.15 ) }
    dend_64 { pt3dadd( -108.487, -42.19, -269.25, 0.15 ) }
    dend_64 { pt3dadd( -108.647, -44.6801, -277.04, 0.15 ) }
    dend_64 { pt3dadd( -107.92, -46.8163, -284.914, 0.15 ) }
    dend_64 { pt3dadd( -108.157, -48.0287, -293.024, 0.15 ) }
    dend_64 { pt3dadd( -109.175, -48.5484, -301.15, 0.15 ) }
    dend_64 { pt3dadd( -109.143, -50.471, -309.114, 0.15 ) }
    dend_64 { pt3dadd( -110.274, -52.9226, -316.832, 0.15 ) }
    dend_64 { pt3dadd( -112.558, -55.3212, -324.302, 0.15 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 29/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -45.7626, -85.8929, -3.53975, 0.15 ) }
    dend_57 { pt3dadd( -50.2382, -94.0594, -3.07058, 0.15 ) }
    dend_57 { pt3dadd( -53.5054, -102.701, -2.18129, 0.15 ) }
    dend_57 { pt3dadd( -56.1596, -111.556, -2.00766, 0.15 ) }
    dend_57 { pt3dadd( -58.7712, -120.262, -0.0989158, 0.15 ) }
    dend_57 { pt3dadd( -61.0023, -129.019, 2.03348, 0.15 ) }
    dend_57 { pt3dadd( -61.6533, -138.128, 3.36454, 0.15 ) }
    dend_57 { pt3dadd( -62.775, -147.236, 2.77331, 0.15 ) }
    dend_57 { pt3dadd( -64.9033, -155.963, 0.7189, 0.15 ) }
    dend_57 { pt3dadd( -68.0375, -164.039, -2.56262, 0.15 ) }
    dend_57 { pt3dadd( -71.0677, -171.144, -7.77971, 0.15 ) }
    dend_57 { pt3dadd( -74.8861, -177.394, -13.6493, 0.15 ) }
    dend_57 { pt3dadd( -78.9828, -183.522, -19.4782, 0.15 ) }
    dend_57 { pt3dadd( -84.1939, -188.964, -25.1877, 0.15 ) }
    dend_57 { pt3dadd( -89.4013, -192.645, -32.2864, 0.15 ) }
    dend_57 { pt3dadd( -94.5569, -196.227, -39.4791, 0.15 ) }
    dend_57 { pt3dadd( -97.9515, -200.375, -47.3267, 0.15 ) }
    dend_57 { pt3dadd( -100.136, -205.214, -55.1514, 0.15 ) }
    dend_57 { pt3dadd( -102.314, -209.907, -63.0761, 0.15 ) }
    dend_57 { pt3dadd( -105.932, -214.547, -70.5087, 0.15 ) }
    dend_57 { pt3dadd( -110.189, -218.49, -78.0579, 0.15 ) }
    dend_57 { pt3dadd( -115.834, -222.243, -84.7761, 0.15 ) }
    dend_57 { pt3dadd( -121.748, -225.874, -91.3398, 0.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -45.7626, -85.8929, -3.53975, 0.59 ) }
    dend_54 { pt3dadd( -50.3415, -94.2576, -2.98058, 0.15 ) }
    dend_54 { pt3dadd( -54.9069, -102.635, -3.14448, 0.15 ) }
    dend_54 { pt3dadd( -60.3541, -110.339, -1.22984, 0.15 ) }
    dend_54 { pt3dadd( -65.4735, -118.23, 0.752976, 0.15 ) }
    dend_54 { pt3dadd( -71.1808, -125.611, 3.2541, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -60.1335, -114.483, -107.17, 0.15 ) }
    dend_50 { pt3dadd( -63.8705, -123.269, -117.393, 0.15 ) }
    dend_50 { pt3dadd( -68.3519, -133.513, -125.716, 0.15 ) }
    dend_50 { pt3dadd( -72.8938, -142.401, -135.54, 0.15 ) }
    dend_50 { pt3dadd( -77.0218, -153.435, -142.904, 0.15 ) }
    dend_50 { pt3dadd( -80.4966, -165.747, -148.159, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 64/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -60.1335, -114.483, -107.17, 0.59 ) }
    dend_49 { pt3dadd( -64.6361, -120.043, -114.57, 0.15 ) }
    dend_49 { pt3dadd( -68.9989, -125.75, -121.93, 0.15 ) }
    dend_49 { pt3dadd( -72.661, -133.348, -127.578, 0.15 ) }
    dend_49 { pt3dadd( -75.4843, -142.075, -131.71, 0.15 ) }
    dend_49 { pt3dadd( -76.3309, -151.421, -135.181, 0.15 ) }
    dend_49 { pt3dadd( -76.2637, -160.949, -138.189, 0.15 ) }
    dend_49 { pt3dadd( -74.9076, -170.353, -141.328, 0.15 ) }
    dend_49 { pt3dadd( -74.8209, -180.209, -142.813, 0.15 ) }
    dend_49 { pt3dadd( -73.2006, -189.701, -145.511, 0.15 ) }
    dend_49 { pt3dadd( -73.2772, -199.023, -149.153, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 75/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 7.94067, -106.111, 27.0942, 0.22 ) }
    dend_46 { pt3dadd( 7.6049, -106.673, 27.1064, 0.22 ) }
    dend_46 { pt3dadd( 7.15583, -107.423, 27.1227, 0.22 ) }
    dend_46 { pt3dadd( 6.76585, -108.075, 27.1369, 0.22 ) }
    dend_46 { pt3dadd( 6.0702, -109.238, 27.1622, 0.22 ) }
    dend_46 { pt3dadd( 5.75629, -109.763, 27.1736, 0.15 ) }
    dend_46 { pt3dadd( 5.44324, -110.287, 27.185, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 82/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 7.94067, -106.111, 27.0942, 1.18 ) }
    dend_43 { pt3dadd( 8.26227, -107.209, 27.6241, 1.18 ) }
    dend_43 { pt3dadd( 8.60334, -108.479, 28.1887, 0.29 ) }
    dend_43 { pt3dadd( 8.88885, -109.645, 28.7017, 0.15 ) }
    dend_43 { pt3dadd( 9.03484, -110.308, 28.9886, 0.15 ) }
    dend_43 { pt3dadd( 9.16274, -110.961, 29.2635, 0.29 ) }
    dend_43 { pt3dadd( 9.30602, -111.886, 29.6591, 0.66 ) }
    dend_43 { pt3dadd( 9.39778, -112.842, 30.072, 1.4 ) }
    dend_43 { pt3dadd( 9.39277, -114.25, 30.6722, 0.22 ) }
    dend_43 { pt3dadd( 9.32326, -115.224, 31.0807, 0.22 ) }
    dend_43 { pt3dadd( 9.27587, -115.649, 31.2544, 0.22 ) }
    dend_43 { pt3dadd( 9.15552, -116.555, 31.5939, 0.22 ) }
    dend_43 { pt3dadd( 9.03485, -117.336, 31.8658, 0.66 ) }
    dend_43 { pt3dadd( 8.85158, -118.31, 32.1818, 0.15 ) }
    dend_43 { pt3dadd( 8.64954, -119.132, 32.4404, 0.15 ) }
    dend_43 { pt3dadd( 8.36755, -120.131, 32.7571, 0.52 ) }
    dend_43 { pt3dadd( 8.01111, -121.368, 33.1616, 0.29 ) }
    dend_43 { pt3dadd( 7.87122, -121.859, 33.3255, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( 7.7301, -122.357, 33.503, 0.15 ) }
    dend_43 { pt3dadd( 7.45654, -123.268, 33.8202, 0.15 ) }
    dend_43 { pt3dadd( 7.25536, -123.881, 34.0281, 0.29 ) }
    dend_43 { pt3dadd( 6.98726, -124.722, 34.324, 1.11 ) }
    dend_43 { pt3dadd( 6.74228, -125.578, 34.635, 1.77 ) }
    dend_43 { pt3dadd( 6.47056, -126.774, 35.0655, 1.77 ) }
    dend_43 { pt3dadd( 6.24901, -128.028, 35.5197, 1.33 ) }
    dend_43 { pt3dadd( 5.99334, -129.777, 36.1433, 0.15 ) }
    dend_43 { pt3dadd( 5.84585, -130.943, 36.572, 0.22 ) }
    dend_43 { pt3dadd( 5.74787, -131.781, 36.8897, 0.66 ) }
    dend_43 { pt3dadd( 5.66009, -132.589, 37.2047, 0.81 ) }
    dend_43 { pt3dadd( 5.53279, -134.093, 37.8041, 0.15 ) }
    dend_43 { pt3dadd( 5.5204, -134.981, 38.1626, 0.22 ) }
    dend_43 { pt3dadd( 5.58199, -135.735, 38.4666, 0.22 ) }
    dend_43 { pt3dadd( 5.70201, -136.705, 38.8408, 0.22 ) }
    dend_43 { pt3dadd( 5.7862, -137.275, 39.0501, 0.66 ) }
    dend_43 { pt3dadd( 6.01536, -138.396, 39.445, 1.4 ) }
    dend_43 { pt3dadd( 6.4724, -139.98, 40.0177, 0.88 ) }
    dend_43 { pt3dadd( 6.78862, -140.971, 40.383, 0.15 ) }
    dend_43 { pt3dadd( 7.10269, -141.922, 40.7267, 0.15 ) }
    dend_43 { pt3dadd( 7.34042, -142.612, 40.9709, 0.22 ) }
    dend_43 { pt3dadd( 7.70555, -143.694, 41.3631, 0.29 ) }
    dend_43 { pt3dadd( 7.95389, -144.538, 41.6662, 0.15 ) }
    dend_43 { pt3dadd( 8.17109, -145.693, 42.0616, 0.15 ) }
    dend_43 { pt3dadd( 8.20331, -146.092, 42.1979, 0.15 ) }
    dend_43 { pt3dadd( 8.21461, -146.926, 42.5062, 0.22 ) }
    dend_43 { pt3dadd( 8.14979, -148.132, 42.9745, 0.22 ) }
    dend_43 { pt3dadd( 8.09696, -148.652, 43.1808, 0.22 ) }
    dend_43 { pt3dadd( 7.9833, -149.745, 43.6068, 0.37 ) }
    dend_43 { pt3dadd( 7.90178, -150.864, 44.0524, 0.22 ) }
    dend_43 { pt3dadd( 7.86562, -151.618, 44.3417, 0.88 ) }
    dend_43 { pt3dadd( 7.85048, -153.305, 44.9538, 2.06 ) }
    dend_43 { pt3dadd( 7.91202, -155.286, 45.5539, 0.59 ) }
    dend_43 { pt3dadd( 8.01524, -156.636, 45.8678, 0.22 ) }
    dend_43 { pt3dadd( 8.12571, -157.532, 46.0024, 0.22 ) }
    dend_43 { pt3dadd( 8.23667, -158.327, 46.0864, 0.22 ) }
    dend_43 { pt3dadd( 8.39482, -159.424, 46.1496, 0.59 ) }
    dend_43 { pt3dadd( 8.65141, -160.982, 46.125, 0.07 ) }
    dend_43 { pt3dadd( 8.83126, -161.932, 45.9911, 0.15 ) }
    dend_43 { pt3dadd( 9.05091, -163.061, 45.7231, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 40/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.28316, -54.0786, -3.7941, 0.74 ) }
    dend_39 { pt3dadd( -1.30363, -55.5914, -4.10144, 0.74 ) }
    dend_39 { pt3dadd( -1.31949, -56.9386, -4.39887, 0.74 ) }
    dend_39 { pt3dadd( -1.34922, -57.7006, -4.57578, 0.81 ) }
    dend_39 { pt3dadd( -1.44478, -58.9574, -4.89441, 0.88 ) }
    dend_39 { pt3dadd( -1.52379, -59.7651, -5.10698, 0.81 ) }
    dend_39 { pt3dadd( -1.65209, -60.808, -5.39611, 1.18 ) }
    dend_39 { pt3dadd( -1.76918, -61.5832, -5.63791, 1.18 ) }
    dend_39 { pt3dadd( -1.97387, -62.533, -5.95692, 1.03 ) }
    dend_39 { pt3dadd( -2.23243, -63.5408, -6.32313, 1.11 ) }
    dend_39 { pt3dadd( -2.47522, -64.3288, -6.62548, 0.74 ) }
    dend_39 { pt3dadd( -2.80329, -65.2152, -6.97078, 1.11 ) }
    dend_39 { pt3dadd( -3.10932, -65.9693, -7.25782, 0.81 ) }
    dend_39 { pt3dadd( -3.47801, -66.8585, -7.57799, 0.81 ) }
    dend_39 { pt3dadd( -3.59254, -67.183, -7.67855, 0.81 ) }
    dend_39 { pt3dadd( -3.77686, -67.8678, -7.84901, 0.88 ) }
    dend_39 { pt3dadd( -3.92538, -68.626, -7.97993, 0.88 ) }
    dend_39 { pt3dadd( -4.09739, -69.8781, -8.10777, 1.11 ) }
    dend_39 { pt3dadd( -4.16579, -70.4754, -8.1267, 1.33 ) }
    dend_39 { pt3dadd( -4.34741, -71.9196, -8.05569, 0.74 ) }
    dend_39 { pt3dadd( -4.44012, -72.7764, -7.98994, 0.74 ) }
    dend_39 { pt3dadd( -4.53035, -74.0361, -7.85283, 0.88 ) }
    dend_39 { pt3dadd( -4.56606, -74.7773, -7.74, 1.25 ) }
    dend_39 { pt3dadd( -4.61534, -75.5418, -7.59094, 1.03 ) }
    dend_39 { pt3dadd( -4.76377, -76.5631, -7.34037, 0.74 ) }
    dend_39 { pt3dadd( -4.86012, -84.6804, -7.55571, 0.74 ) }
    dend_39 { pt3dadd( -5.93184, -92.7123, -6.87658, 0.74 ) }
    dend_39 { pt3dadd( -6.82274, -100.721, -5.76173, 0.74 ) }
    dend_39 { pt3dadd( -7.87742, -108.369, -3.08451, 0.74 ) }
    dend_39 { pt3dadd( -8.15112, -116.064, -0.363299, 0.74 ) }
    dend_39 { pt3dadd( -9.1391, -123.518, 2.88619, 0.74 ) }
    dend_39 { pt3dadd( -11.2206, -131.201, 4.7258, 0.74 ) }
    dend_39 { pt3dadd( -11.562, -139.133, 6.52793, 0.74 ) }
    dend_39 { pt3dadd( -11.5311, -146.999, 8.65214, 0.74 ) }
    dend_39 { pt3dadd( -11.5173, -154.909, 10.5878, 0.74 ) }
    dend_39 { pt3dadd( -11.3984, -162.838, 12.4333, 0.74 ) }
    dend_39 { pt3dadd( -11.9959, -170.53, 15.1124, 0.74 ) }
    dend_39 { pt3dadd( -14.4151, -177.728, 18.2532, 0.74 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.28316, -54.0786, -3.7941, 1.03 ) }
    dend_38 { pt3dadd( -1.37625, -54.8307, -3.38215, 1.03 ) }
    dend_38 { pt3dadd( -1.5081, -55.9442, -2.83518, 1.03 ) }
    dend_38 { pt3dadd( -1.59676, -56.8045, -2.49758, 1.03 ) }
    dend_38 { pt3dadd( -1.68505, -58.0774, -2.07763, 1.03 ) }
    dend_38 { pt3dadd( -1.70928, -59.1522, -1.77512, 0.96 ) }
    dend_38 { pt3dadd( -1.69052, -59.9137, -1.57235, 0.96 ) }
    dend_38 { pt3dadd( -1.63405, -60.5537, -1.42698, 0.96 ) }
    dend_38 { pt3dadd( -1.33847, -62.2949, -1.07893, 0.88 ) }
    dend_38 { pt3dadd( -1.05944, -63.3251, -0.875298, 0.88 ) }
    dend_38 { pt3dadd( -0.535271, -64.6617, -0.56459, 0.88 ) }
    dend_38 { pt3dadd( 0.151184, -65.9812, -0.183713, 0.81 ) }
    dend_38 { pt3dadd( 0.726856, -66.8717, 0.140361, 0.81 ) }
    dend_38 { pt3dadd( 1.19214, -67.4746, 0.420333, 0.81 ) }
    dend_38 { pt3dadd( 1.90067, -68.2482, 0.865233, 0.88 ) }
    dend_38 { pt3dadd( 2.62571, -69.0452, 1.36303, 1.03 ) }
    dend_38 { pt3dadd( 3.09001, -69.6356, 1.72595, 1.03 ) }
    dend_38 { pt3dadd( 3.63555, -70.5412, 2.2146, 0.81 ) }
    dend_38 { pt3dadd( 3.99038, -71.3878, 2.59409, 1.4 ) }
    dend_38 { pt3dadd( 4.14496, -71.9172, 2.79331, 1.92 ) }
    dend_38 { pt3dadd( 4.43208, -73.33, 3.19636, 1.4 ) }
    dend_38 { pt3dadd( 4.71803, -74.9955, 3.52745, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( 4.91058, -76.1658, 3.68619, 0.88 ) }
    dend_38 { pt3dadd( 5.11923, -77.3863, 3.78782, 1.03 ) }
    dend_38 { pt3dadd( 5.25446, -78.0661, 3.82084, 1.03 ) }
    dend_38 { pt3dadd( 5.5135, -79.1735, 3.84485, 0.81 ) }
    dend_38 { pt3dadd( 5.80086, -80.1944, 3.82195, 1.18 ) }
    dend_38 { pt3dadd( 5.88549, -80.5029, 3.8022, 1.18 ) }
    dend_38 { pt3dadd( 6.00018, -81.1066, 3.75151, 0.74 ) }
    dend_38 { pt3dadd( 6.01015, -81.8918, 3.68806, 0.44 ) }
    dend_38 { pt3dadd( 5.93628, -82.3589, 3.65627, 0.44 ) }
    dend_38 { pt3dadd( 5.73363, -83.0447, 3.62094, 0.66 ) }
    dend_38 { pt3dadd( 5.40758, -83.955, 3.57379, 0.81 ) }
    dend_38 { pt3dadd( 5.107, -84.7788, 3.52925, 0.96 ) }
    dend_38 { pt3dadd( 4.64623, -86.0676, 3.45823, 1.33 ) }
    dend_38 { pt3dadd( 4.35535, -86.9194, 3.41125, 0.88 ) }
    dend_38 { pt3dadd( 4.0919, -87.7563, 3.37988, 1.11 ) }
    dend_38 { pt3dadd( 3.8069, -88.7368, 3.37755, 1.18 ) }
    dend_38 { pt3dadd( 3.547, -89.668, 3.4028, 1.18 ) }
    dend_38 { pt3dadd( 3.18307, -90.9683, 3.4661, 0.52 ) }
    dend_38 { pt3dadd( 2.81388, -92.3171, 3.57855, 0.52 ) }
    dend_38 { pt3dadd( 2.53972, -93.3234, 3.67994, 0.74 ) }
    dend_38 { pt3dadd( 2.28932, -94.2601, 3.78722, 0.96 ) }
    dend_38 { pt3dadd( 2.06881, -95.1367, 3.88173, 1.62 ) }
    dend_38 { pt3dadd( 1.86723, -96.012, 3.96033, 1.62 ) }
    dend_38 { pt3dadd( 1.64842, -97.1063, 4.0294, 1.33 ) }
    dend_38 { pt3dadd( 1.50687, -98.0052, 4.0543, 0.44 ) }
    dend_38 { pt3dadd( 1.41948, -98.5389, 4.03851, 0.59 ) }
    dend_38 { pt3dadd( 1.2053, -99.5375, 3.97465, 0.59 ) }
    dend_38 { pt3dadd( 0.902441, -100.609, 3.8922, 0.88 ) }
    dend_38 { pt3dadd( 0.604953, -101.433, 3.8192, 1.25 ) }
    dend_38 { pt3dadd( 0.384815, -101.935, 3.77654, 2.21 ) }
    dend_38 { pt3dadd( -0.189642, -103.103, 3.70833, 1.84 ) }
    dend_38 { pt3dadd( -0.882396, -104.421, 3.66886, 1.33 ) }
    dend_38 { pt3dadd( -1.53956, -105.627, 3.68936, 0.66 ) }
    dend_38 { pt3dadd( -1.86682, -106.261, 3.71891, 0.44 ) }
    dend_38 { pt3dadd( -2.19389, -106.943, 3.76253, 0.44 ) }
    dend_38 { pt3dadd( -2.50879, -107.673, 3.81767, 0.81 ) }
    dend_38 { pt3dadd( -2.82546, -108.604, 3.89151, 1.11 ) }
    dend_38 { pt3dadd( -3.08683, -109.643, 3.96002, 0.74 ) }
    dend_38 { pt3dadd( -3.3165, -110.768, 4.02258, 0.37 ) }
    dend_38 { pt3dadd( -3.47922, -111.635, 4.05088, 0.37 ) }
    dend_38 { pt3dadd( -3.58835, -112.183, 4.06151, 0.74 ) }
    dend_38 { pt3dadd( -3.77673, -113.012, 4.07438, 0.88 ) }
    dend_38 { pt3dadd( -4.09301, -114.224, 4.10775, 0.44 ) }
    dend_38 { pt3dadd( -4.27839, -114.786, 4.14244, 0.44 ) }
    dend_38 { pt3dadd( -4.51352, -115.323, 4.22064, 0.59 ) }
    dend_38 { pt3dadd( -4.8501, -115.914, 4.35269, 0.96 ) }
    dend_38 { pt3dadd( -5.17837, -116.393, 4.49706, 1.25 ) }
    dend_38 { pt3dadd( -5.56049, -116.891, 4.6933, 1.25 ) }
    dend_38 { pt3dadd( -6.01789, -117.486, 4.97124, 0.81 ) }
    dend_38 { pt3dadd( -6.31232, -117.962, 5.1987, 1.11 ) }
    dend_38 { pt3dadd( -6.62614, -118.789, 5.52622, 0.22 ) }
    dend_38 { pt3dadd( -6.69455, -119.171, 5.62603, 0.22 ) }
    dend_38 { pt3dadd( -6.74949, -119.777, 5.74446, 0.22 ) }
    dend_38 { pt3dadd( -6.78918, -120.325, 5.81938, 0.74 ) }
    dend_38 { pt3dadd( -6.83556, -120.876, 5.87718, 1.18 ) }
    dend_38 { pt3dadd( -6.98336, -122.133, 5.99783, 0.66 ) }
    dend_38 { pt3dadd( -7.16999, -123.218, 6.1136, 0.37 ) }
    dend_38 { pt3dadd( -7.45677, -124.167, 6.22171, 0.66 ) }
    dend_38 { pt3dadd( -7.77463, -124.959, 6.34095, 0.66 ) }
    dend_38 { pt3dadd( -8.05038, -125.562, 6.46538, 1.25 ) }
    dend_38 { pt3dadd( -8.32853, -126.131, 6.62735, 2.06 ) }
    dend_38 { pt3dadd( -8.73836, -126.968, 6.93882, 2.21 ) }
    dend_38 { pt3dadd( -9.45252, -128.533, 7.59876, 1.03 ) }
    dend_38 { pt3dadd( -9.818, -129.43, 7.98209, 0.59 ) }
    dend_38 { pt3dadd( -10.1348, -130.365, 8.34386, 0.37 ) }
    dend_38 { pt3dadd( -10.3285, -131.06, 8.59494, 0.66 ) }
    dend_38 { pt3dadd( -10.512, -131.904, 8.88415, 0.37 ) }
    dend_38 { pt3dadd( -10.6489, -132.819, 9.20187, 0.29 ) }
    dend_38 { pt3dadd( -10.6958, -133.415, 9.40302, 0.52 ) }
    dend_38 { pt3dadd( -10.7873, -134.451, 9.73889, 0.22 ) }
    dend_38 { pt3dadd( -10.8379, -134.979, 9.96595, 0.22 ) }
    dend_38 { pt3dadd( -10.887, -135.552, 10.3105, 0.29 ) }
    dend_38 { pt3dadd( -10.9265, -136.075, 10.7519, 0.96 ) }
    dend_38 { pt3dadd( -10.9702, -136.579, 11.2592, 1.77 ) }
    dend_38 { pt3dadd( -11.0131, -137.077, 11.7593, 1.77 ) }
    dend_38 { pt3dadd( -11.0894, -138.235, 12.7972, 0.29 ) }
    dend_38 { pt3dadd( -11.1003, -138.745, 13.1465, 0.29 ) }
    dend_38 { pt3dadd( -11.1023, -139.197, 13.3623, 0.29 ) }
    dend_38 { pt3dadd( -11.093, -139.891, 13.5665, 0.29 ) }
    dend_38 { pt3dadd( -11.0943, -140.807, 13.7024, 0.29 ) }
    dend_38 { pt3dadd( -11.1407, -141.881, 13.7279, 0.29 ) }
    dend_38 { pt3dadd( -11.1978, -142.412, 13.6959, 0.29 ) }
    dend_38 { pt3dadd( -11.349, -143.197, 13.6263, 0.29 ) }
    dend_38 { pt3dadd( -11.6112, -144.114, 13.5538, 0.29 ) }
    dend_38 { pt3dadd( -11.9594, -145.068, 13.52, 0.29 ) }
    dend_38 { pt3dadd( -12.2079, -145.664, 13.52, 1.03 ) }
    dend_38 { pt3dadd( -12.5265, -146.358, 13.5399, 1.92 ) }
    dend_38 { pt3dadd( -13.0754, -147.526, 13.596, 3.02 ) }
    dend_38 { pt3dadd( -13.6912, -148.835, 13.6913, 2.36 ) }
    dend_38 { pt3dadd( -14.3946, -150.341, 13.8372, 0.22 ) }
    dend_38 { pt3dadd( -14.6428, -150.899, 13.9089, 0.22 ) }
    dend_38 { pt3dadd( -14.9502, -151.655, 14.0308, 0.22 ) }
    dend_38 { pt3dadd( -15.0726, -151.991, 14.093, 0.52 ) }
    dend_38 { pt3dadd( -15.248, -152.543, 14.2172, 0.96 ) }
    dend_38 { pt3dadd( -15.4855, -153.357, 14.4085, 0.44 ) }
    dend_38 { pt3dadd( -15.7699, -154.372, 14.6372, 0.22 ) }
    dend_38 { pt3dadd( -15.9452, -155.025, 14.7747, 0.37 ) }
    dend_38 { pt3dadd( -16.1408, -155.793, 14.9238, 0.81 ) }
    dend_38 { pt3dadd( -16.3211, -156.464, 15.0425, 0.96 ) }
    dend_38 { pt3dadd( -16.5872, -157.375, 15.1683, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -16.8435, -158.247, 15.2505, 0.66 ) }
    dend_38 { pt3dadd( -16.9515, -158.657, 15.2728, 0.22 ) }
    dend_38 { pt3dadd( -17.1507, -159.553, 15.305, 0.22 ) }
    dend_38 { pt3dadd( -17.2229, -159.979, 15.3254, 0.44 ) }
    dend_38 { pt3dadd( -17.3699, -161.069, 15.4006, 0.22 ) }
    dend_38 { pt3dadd( -17.4414, -161.826, 15.4906, 0.22 ) }
    dend_38 { pt3dadd( -17.5114, -162.737, 15.6441, 0.29 ) }
    dend_38 { pt3dadd( -17.577, -163.488, 15.7842, 0.52 ) }
    dend_38 { pt3dadd( -17.6469, -164.266, 15.9316, 0.52 ) }
    dend_38 { pt3dadd( -17.7426, -165.09, 16.0833, 0.52 ) }
    dend_38 { pt3dadd( -17.8645, -165.868, 16.2179, 1.18 ) }
    dend_38 { pt3dadd( -18.0137, -166.586, 16.3255, 2.43 ) }
    dend_38 { pt3dadd( -18.3224, -167.818, 16.4893, 1.33 ) }
    dend_38 { pt3dadd( -18.5927, -168.814, 16.5979, 0.59 ) }
    dend_38 { pt3dadd( -18.817, -169.627, 16.6702, 0.81 ) }
    dend_38 { pt3dadd( -19.0085, -170.33, 16.726, 0.15 ) }
    dend_38 { pt3dadd( -19.1365, -170.797, 16.7583, 0.15 ) }
    dend_38 { pt3dadd( -19.1929, -171.033, 16.779, 0.15 ) }
    dend_38 { pt3dadd( -19.2638, -171.328, 16.8166, 0.22 ) }
    dend_38 { pt3dadd( -19.4286, -171.893, 16.8952, 0.37 ) }
    dend_38 { pt3dadd( -19.6584, -172.55, 16.9515, 0.37 ) }
    dend_38 { pt3dadd( -19.954, -173.251, 16.9477, 0.22 ) }
    dend_38 { pt3dadd( -20.3359, -174.003, 16.8751, 0.22 ) }
    dend_38 { pt3dadd( -20.5929, -174.435, 16.7909, 0.22 ) }
    dend_38 { pt3dadd( -20.872, -174.835, 16.6817, 0.74 ) }
    dend_38 { pt3dadd( -21.3156, -175.411, 16.4869, 1.77 ) }
    dend_38 { pt3dadd( -21.8404, -176.062, 16.2395, 2.21 ) }
    dend_38 { pt3dadd( -22.2369, -176.53, 16.0749, 2.21 ) }
    dend_38 { pt3dadd( -23.1207, -177.535, 15.7585, 0.37 ) }
    dend_38 { pt3dadd( -23.6845, -178.204, 15.5971, 0.37 ) }
    dend_38 { pt3dadd( -24.1279, -178.78, 15.5135, 0.22 ) }
    dend_38 { pt3dadd( -24.5117, -179.322, 15.5001, 0.22 ) }
    dend_38 { pt3dadd( -24.97, -179.991, 15.545, 0.22 ) }
    dend_38 { pt3dadd( -25.2381, -180.382, 15.6058, 0.81 ) }
    dend_38 { pt3dadd( -25.6654, -180.973, 15.7824, 1.25 ) }
    dend_38 { pt3dadd( -26.1969, -181.643, 16.0633, 0.88 ) }
    dend_38 { pt3dadd( -26.8289, -182.352, 16.4082, 0.22 ) }
    dend_38 { pt3dadd( -27.1562, -182.712, 16.5857, 0.22 ) }
    dend_38 { pt3dadd( -27.5096, -183.15, 16.7706, 0.22 ) }
    dend_38 { pt3dadd( -27.8648, -183.691, 16.985, 0.22 ) }
    dend_38 { pt3dadd( -28.1665, -184.407, 17.2194, 0.44 ) }
    dend_38 { pt3dadd( -28.3428, -185.093, 17.3905, 1.47 ) }
    dend_38 { pt3dadd( -28.486, -185.842, 17.5163, 1.47 ) }
    dend_38 { pt3dadd( -28.658, -186.786, 17.6158, 0.44 ) }
    dend_38 { pt3dadd( -28.8114, -187.668, 17.6674, 0.96 ) }
    dend_38 { pt3dadd( -29.0574, -188.952, 17.6828, 0.22 ) }
    dend_38 { pt3dadd( -29.2027, -189.631, 17.6792, 0.22 ) }
    dend_38 { pt3dadd( -29.4717, -190.663, 17.6656, 0.22 ) }
    dend_38 { pt3dadd( -29.7162, -191.431, 17.6313, 0.22 ) }
    dend_38 { pt3dadd( -29.9252, -191.992, 17.5878, 0.22 ) }
    dend_38 { pt3dadd( -30.2085, -192.661, 17.5137, 0.22 ) }
    dend_38 { pt3dadd( -30.6205, -193.551, 17.4167, 0.22 ) }
    dend_38 { pt3dadd( -30.8668, -194.109, 17.3678, 0.81 ) }
    dend_38 { pt3dadd( -31.2225, -194.972, 17.314, 1.77 ) }
    dend_38 { pt3dadd( -31.5574, -195.813, 17.2926, 1.18 ) }
    dend_38 { pt3dadd( -32.1741, -197.431, 17.3044, 0.22 ) }
    dend_38 { pt3dadd( -32.3655, -197.972, 17.3371, 0.22 ) }
    dend_38 { pt3dadd( -32.6809, -198.901, 17.4502, 0.88 ) }
    dend_38 { pt3dadd( -33.0528, -200.057, 17.6773, 0.15 ) }
    dend_38 { pt3dadd( -33.2585, -200.733, 17.8852, 0.15 ) }
    dend_38 { pt3dadd( -33.4165, -201.395, 18.1507, 0.29 ) }
    dend_38 { pt3dadd( -33.518, -202.067, 18.4817, 0.74 ) }
    dend_38 { pt3dadd( -33.5733, -202.58, 18.7548, 1.4 ) }
    dend_38 { pt3dadd( -33.6413, -203.348, 19.208, 0.59 ) }
    dend_38 { pt3dadd( -33.7239, -204.367, 19.8181, 0.15 ) }
    dend_38 { pt3dadd( -33.7852, -205.146, 20.2629, 0.15 ) }
    dend_38 { pt3dadd( -33.8323, -205.85, 20.6522, 0.15 ) }
    dend_38 { pt3dadd( -33.8418, -206.497, 20.9833, 0.29 ) }
    dend_38 { pt3dadd( -33.819, -207.31, 21.3961, 0.96 ) }
    dend_38 { pt3dadd( -33.7784, -208.204, 21.8503, 0.44 ) }
    dend_38 { pt3dadd( -33.7464, -208.926, 22.2213, 0.22 ) }
    dend_38 { pt3dadd( -33.7199, -209.795, 22.704, 0.22 ) }
    dend_38 { pt3dadd( -33.6766, -210.628, 23.1898, 0.15 ) }
    dend_38 { pt3dadd( -33.6165, -211.339, 23.6002, 0.15 ) }
    dend_38 { pt3dadd( -33.5734, -211.819, 23.8651, 0.15 ) }
    dend_38 { pt3dadd( -33.5474, -212.298, 24.0991, 0.29 ) }
    dend_38 { pt3dadd( -33.5546, -213.15, 24.4299, 0.44 ) }
    dend_38 { pt3dadd( -33.6132, -213.989, 24.6744, 0.44 ) }
    dend_38 { pt3dadd( -33.7548, -215.148, 24.9414, 0.44 ) }
    dend_38 { pt3dadd( -33.8896, -216.107, 25.0901, 0.44 ) }
    dend_38 { pt3dadd( -34.0773, -217.287, 25.2125, 0.88 ) }
    dend_38 { pt3dadd( -34.262, -218.205, 25.2594, 1.03 ) }
    dend_38 { pt3dadd( -34.4932, -219.085, 25.2637, 0.37 ) }
    dend_38 { pt3dadd( -34.7557, -219.818, 25.2424, 0.15 ) }
    dend_38 { pt3dadd( -35.0967, -220.526, 25.2104, 0.15 ) }
    dend_38 { pt3dadd( -35.4573, -221.128, 25.1752, 0.37 ) }
    dend_38 { pt3dadd( -35.9961, -221.874, 25.1259, 0.22 ) }
    dend_38 { pt3dadd( -36.4451, -222.403, 25.0827, 0.81 ) }
    dend_38 { pt3dadd( -37.253, -223.216, 24.9951, 1.25 ) }
    dend_38 { pt3dadd( -38.2426, -224.058, 24.8703, 0.88 ) }
    dend_38 { pt3dadd( -38.9099, -224.55, 24.7722, 0.22 ) }
    dend_38 { pt3dadd( -39.5722, -225.002, 24.6416, 0.22 ) }
    dend_38 { pt3dadd( -40.2222, -225.442, 24.4763, 0.74 ) }
    dend_38 { pt3dadd( -41.0974, -226.085, 24.1876, 1.47 ) }
    dend_38 { pt3dadd( -41.7728, -226.65, 23.9007, 0.37 ) }
    dend_38 { pt3dadd( -42.7123, -227.587, 23.3696, 0.22 ) }
    dend_38 { pt3dadd( -43.2949, -228.322, 22.9266, 0.29 ) }
    dend_38 { pt3dadd( -43.7162, -229.044, 22.4908, 0.29 ) }
    dend_38 { pt3dadd( -43.9621, -229.734, 22.0917, 0.29 ) }
    dend_38 { pt3dadd( -44.0892, -230.498, 21.6841, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( -44.1367, -231.514, 21.221, 0.22 ) }
    dend_38 { pt3dadd( -44.0885, -232.657, 20.7946, 0.22 ) }
    dend_38 { pt3dadd( -44.0411, -233.215, 20.6254, 0.22 ) }
    dend_38 { pt3dadd( -43.9638, -234.069, 20.4505, 0.37 ) }
    dend_38 { pt3dadd( -43.926, -234.714, 20.3782, 0.59 ) }
    dend_38 { pt3dadd( -43.9235, -236.252, 20.2947, 0.66 ) }
    dend_38 { pt3dadd( -43.9889, -237.312, 20.2895, 0.88 ) }
    dend_38 { pt3dadd( -44.0806, -238.025, 20.3414, 0.88 ) }
    dend_38 { pt3dadd( -44.3119, -239.302, 20.479, 0.52 ) }
    dend_38 { pt3dadd( -44.6115, -240.687, 20.6651, 0.22 ) }
    dend_38 { pt3dadd( -44.9242, -242.076, 20.9196, 0.22 ) }
    dend_38 { pt3dadd( -45.0594, -242.645, 21.0518, 0.81 ) }
    dend_38 { pt3dadd( -45.4433, -244.154, 21.438, 1.25 ) }
    dend_38 { pt3dadd( -45.6445, -245.022, 21.6695, 1.03 ) }
    dend_38 { pt3dadd( -45.7579, -245.581, 21.8196, 1.03 ) }
    dend_38 { pt3dadd( -45.993, -246.957, 22.2261, 0.22 ) }
    dend_38 { pt3dadd( -46.1386, -247.974, 22.537, 0.22 ) }
    dend_38 { pt3dadd( -46.2451, -248.659, 22.7222, 0.22 ) }
    dend_38 { pt3dadd( -46.4486, -249.773, 22.9584, 0.22 ) }
    dend_38 { pt3dadd( -46.61, -250.408, 23.0714, 0.22 ) }
    dend_38 { pt3dadd( -46.9994, -251.576, 23.214, 0.22 ) }
    dend_38 { pt3dadd( -47.355, -252.353, 23.2424, 0.74 ) }
    dend_38 { pt3dadd( -47.7584, -253.097, 23.2136, 1.11 ) }
    dend_38 { pt3dadd( -48.0882, -253.648, 23.1331, 1.11 ) }
    dend_38 { pt3dadd( -48.7817, -254.693, 22.851, 0.74 ) }
    dend_38 { pt3dadd( -49.2868, -255.445, 22.5421, 1.4 ) }
    dend_38 { pt3dadd( -50.0357, -256.592, 21.9162, 0.66 ) }
    dend_38 { pt3dadd( -50.5194, -257.393, 21.4186, 0.07 ) }
    dend_38 { pt3dadd( -51.0824, -258.413, 20.7591, 0.07 ) }
    dend_38 { pt3dadd( -51.4412, -259.106, 20.3054, 0.22 ) }
    dend_38 { pt3dadd( -51.8183, -259.929, 19.7909, 0.22 ) }
    dend_38 { pt3dadd( -52.0715, -260.513, 19.4569, 0.44 ) }
    dend_38 { pt3dadd( -52.3804, -261.282, 19.0826, 0.44 ) }
    dend_38 { pt3dadd( -52.841, -262.32, 18.7357, 0.44 ) }
    dend_38 { pt3dadd( -53.1811, -262.996, 18.6296, 0.22 ) }
    dend_38 { pt3dadd( -53.6997, -263.945, 18.6043, 0.15 ) }
    dend_38 { pt3dadd( -54.0494, -264.474, 18.6547, 0.37 ) }
    dend_38 { pt3dadd( -54.3232, -264.801, 18.7235, 0.37 ) }
    dend_38 { pt3dadd( -55.0706, -265.566, 18.9674, 0.15 ) }
    dend_38 { pt3dadd( -55.7993, -266.221, 19.2356, 0.15 ) }
    dend_38 { pt3dadd( -56.0417, -266.414, 19.3234, 0.52 ) }
    dend_38 { pt3dadd( -56.7202, -266.855, 19.5274, 1.03 ) }
    dend_38 { pt3dadd( -57.6406, -267.395, 19.7467, 0.15 ) }
    dend_38 { pt3dadd( -58.3116, -267.762, 19.8494, 0.15 ) }
    dend_38 { pt3dadd( -58.9492, -268.106, 19.8769, 0.15 ) }
    dend_38 { pt3dadd( -59.3539, -268.349, 19.8581, 0.59 ) }
    dend_38 { pt3dadd( -60.2154, -268.938, 19.7696, 0.15 ) }
    dend_38 { pt3dadd( -60.4933, -269.148, 19.7245, 0.15 ) }
    dend_38 { pt3dadd( -60.9188, -269.525, 19.636, 0.66 ) }
    dend_38 { pt3dadd( -61.2778, -269.885, 19.5583, 0.81 ) }
    dend_38 { pt3dadd( -62.2532, -271.001, 19.3439, 0.15 ) }
    dend_38 { pt3dadd( -63.01, -271.971, 19.1762, 0.15 ) }
    dend_38 { pt3dadd( -63.6536, -272.89, 19.0321, 0.29 ) }
    dend_38 { pt3dadd( -64.5326, -274.209, 18.8326, 0.22 ) }
    dend_38 { pt3dadd( -65.2852, -275.403, 18.6618, 0.15 ) }
    dend_38 { pt3dadd( -65.5904, -275.892, 18.5925, 0.66 ) }
    dend_38 { pt3dadd( -66.0799, -276.646, 18.4615, 0.81 ) }
    dend_38 { pt3dadd( -66.6997, -277.508, 18.2686, 0.44 ) }
    dend_38 { pt3dadd( -67.0818, -278.019, 18.1435, 1.03 ) }
    dend_38 { pt3dadd( -67.5003, -278.508, 17.999, 1.25 ) }
    dend_38 { pt3dadd( -68.65, -279.724, 17.5777, 0.52 ) }
    dend_38 { pt3dadd( -69.5504, -280.586, 17.2325, 0.22 ) }
    dend_38 { pt3dadd( -70.1289, -281.068, 16.9955, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 63/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.81074, 26.9528, -0.265281, 0.96 ) }
    dend_24 { pt3dadd( 7.97162, 27.907, -0.933988, 0.96 ) }
    dend_24 { pt3dadd( 8.53735, 28.3688, -1.25746, 1.03 ) }
    dend_24 { pt3dadd( 9.28726, 28.9511, -1.55845, 1.03 ) }
    dend_24 { pt3dadd( 9.9518, 29.4671, -1.82517, 1.62 ) }
    dend_24 { pt3dadd( 10.5957, 29.9672, -2.08363, 1.33 ) }
    dend_24 { pt3dadd( 11.4999, 30.6693, -2.44654, 1.03 ) }
    dend_24 { pt3dadd( 12.1882, 31.2039, -2.69616, 0.96 ) }
    dend_24 { pt3dadd( 13.5176, 32.2201, -3.10933, 1.62 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 72/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 6.81074, 26.9528, -0.265281, 0.88 ) }
    dend_21 { pt3dadd( 7.43972, 28.1909, -0.257959, 0.88 ) }
    dend_21 { pt3dadd( 8.18612, 29.4281, -0.196741, 0.81 ) }
    dend_21 { pt3dadd( 8.56095, 30.0015, -0.188342, 0.66 ) }
    dend_21 { pt3dadd( 8.94724, 30.5927, -0.209873, 1.11 ) }
    dend_21 { pt3dadd( 9.43596, 31.3884, -0.278471, 0.74 ) }
    dend_21 { pt3dadd( 9.77698, 31.9773, -0.357568, 0.52 ) }
    dend_21 { pt3dadd( 10.2651, 32.7883, -0.567258, 0.22 ) }
    dend_21 { pt3dadd( 10.5209, 33.4316, -0.818235, 0.29 ) }
    dend_21 { pt3dadd( 10.5609, 33.8788, -1.10232, 0.29 ) }
    dend_21 { pt3dadd( 10.4759, 34.3393, -1.52265, 0.66 ) }
    dend_21 { pt3dadd( 10.3864, 34.5666, -1.79063, 0.66 ) }
    dend_21 { pt3dadd( 10.0914, 35.0997, -2.47901, 0.81 ) }
    dend_21 { pt3dadd( 9.7073, 35.7694, -3.35676, 1.18 ) }
    dend_21 { pt3dadd( 9.43996, 36.3341, -4.04783, 1.03 ) }
    dend_21 { pt3dadd( 9.22507, 37.0035, -4.80487, 0.81 ) }
    dend_21 { pt3dadd( 9.10563, 37.7179, -5.54098, 1.11 ) }
    dend_21 { pt3dadd( 9.06901, 38.7014, -6.46632, 0.88 ) }
    dend_21 { pt3dadd( 9.13368, 39.5249, -7.18739, 0.66 ) }
    dend_21 { pt3dadd( 9.25386, 40.2892, -7.79828, 0.66 ) }
    dend_21 { pt3dadd( 9.34529, 40.9414, -8.26269, 0.66 ) }
    dend_21 { pt3dadd( 9.40035, 41.5424, -8.65363, 0.66 ) }
    dend_21 { pt3dadd( 9.44492, 42.2617, -9.11701, 0.81 ) }
    dend_21 { pt3dadd( 9.46923, 42.8081, -9.49572, 1.18 ) }
    dend_21 { pt3dadd( 9.47016, 43.4102, -9.91924, 1.18 ) }
    dend_21 { pt3dadd( 9.44439, 44.7523, -10.8172, 0.52 ) }
    dend_21 { pt3dadd( 9.40089, 45.4611, -11.3011, 0.52 ) }
    dend_21 { pt3dadd( 9.37101, 46.0233, -11.6738, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 9.37158, 46.4309, -11.9145, 1.03 ) }
    dend_21 { pt3dadd( 9.45644, 47.1713, -12.294, 1.03 ) }
    dend_21 { pt3dadd( 9.74292, 48.0733, -12.6742, 0.66 ) }
    dend_21 { pt3dadd( 11.6614, 55.0696, -17.013, 0.66 ) }
    dend_21 { pt3dadd( 12.9109, 62.4765, -20.8243, 0.66 ) }
    dend_21 { pt3dadd( 12.4722, 69.5699, -25.3966, 0.66 ) }
    dend_21 { pt3dadd( 11.4215, 76.5038, -30.1392, 0.66 ) }
    dend_21 { pt3dadd( 10.6277, 82.9862, -35.5755, 0.66 ) }
    dend_21 { pt3dadd( 8.1423, 89.0173, -41.0906, 0.66 ) }
    dend_21 { pt3dadd( 6.54281, 94.6398, -47.3483, 0.66 ) }
    dend_21 { pt3dadd( 5.75848, 100.491, -53.5227, 0.66 ) }
    dend_21 { pt3dadd( 4.02597, 106.825, -58.9417, 0.66 ) }
    dend_21 { pt3dadd( 2.602, 112.344, -65.3408, 0.66 ) }
    dend_21 { pt3dadd( 3.06204, 117.912, -71.8231, 0.66 ) }
    dend_21 { pt3dadd( 2.94099, 123.631, -78.1764, 0.66 ) }
    dend_21 { pt3dadd( 2.73558, 129.202, -84.6716, 0.66 ) }
    dend_21 { pt3dadd( 2.82735, 134.395, -91.5054, 0.66 ) }
    dend_21 { pt3dadd( 2.47482, 138.661, -99.0159, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 18/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 3.53366, 27.6472, 7.93976, 0.96 ) }
    dend_13 { pt3dadd( 2.84712, 28.1456, 8.49001, 0.96 ) }
    dend_13 { pt3dadd( 2.20976, 28.4346, 9.04164, 0.66 ) }
    dend_13 { pt3dadd( 1.34488, 28.4761, 9.85159, 0.52 ) }
    dend_13 { pt3dadd( 1.02552, 28.2171, 10.2045, 0.52 ) }
    dend_13 { pt3dadd( 0.643649, 27.3927, 10.7069, 0.52 ) }
    dend_13 { pt3dadd( 0.462735, 26.9392, 10.97, 0.88 ) }
    dend_13 { pt3dadd( 0.113289, 25.8634, 11.5512, 1.11 ) }
    dend_13 { pt3dadd( -0.202418, 24.8798, 12.0964, 1.25 ) }
    dend_13 { pt3dadd( -0.492475, 24.1298, 12.5474, 1.25 ) }
    dend_13 { pt3dadd( -1.16907, 22.7825, 13.4411, 0.66 ) }
    dend_13 { pt3dadd( -1.59614, 22.1091, 13.9318, 0.96 ) }
    dend_13 { pt3dadd( -2.08779, 21.4742, 14.4687, 1.33 ) }
    dend_13 { pt3dadd( -2.74647, 20.7678, 15.1717, 1.33 ) }
    dend_13 { pt3dadd( -3.75507, 19.8315, 16.2582, 1.33 ) }
    dend_13 { pt3dadd( -4.8474, 18.8705, 17.4874, 0.88 ) }
    dend_13 { pt3dadd( -5.51143, 18.3327, 18.2258, 0.88 ) }
    dend_13 { pt3dadd( -6.26981, 17.7152, 19.0589, 1.4 ) }
    dend_13 { pt3dadd( -6.75535, 17.299, 19.6051, 1.55 ) }
    dend_13 { pt3dadd( -7.48637, 16.6152, 20.4748, 2.06 ) }
    dend_13 { pt3dadd( -7.99153, 16.0104, 21.2175, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 3.53366, 27.6472, 7.93976, 0.74 ) }
    dend_12 { pt3dadd( 3.1899, 26.8608, 7.80901, 0.74 ) }
    dend_12 { pt3dadd( 2.737, 25.8574, 7.69385, 0.52 ) }
    dend_12 { pt3dadd( 2.34195, 24.9788, 7.629, 0.88 ) }
    dend_12 { pt3dadd( 1.93757, 24.038, 7.62547, 0.44 ) }
    dend_12 { pt3dadd( 1.68244, 23.4302, 7.65902, 0.44 ) }
    dend_12 { pt3dadd( 1.49137, 22.9718, 7.70188, 0.37 ) }
    dend_12 { pt3dadd( 1.16225, 22.1475, 7.84037, 0.88 ) }
    dend_12 { pt3dadd( 0.874229, 21.2769, 8.02761, 0.44 ) }
    dend_12 { pt3dadd( 0.602449, 20.3132, 8.24375, 0.44 ) }
    dend_12 { pt3dadd( 0.446915, 19.6201, 8.37823, 0.74 ) }
    dend_12 { pt3dadd( 0.350512, 19.0729, 8.47415, 1.11 ) }
    dend_12 { pt3dadd( 0.194093, 17.8765, 8.67854, 0.96 ) }
    dend_12 { pt3dadd( 0.11109, 16.7591, 8.88188, 1.18 ) }
    dend_12 { pt3dadd( 0.0834588, 15.7987, 9.08299, 1.18 ) }
    dend_12 { pt3dadd( 0.0782141, 14.7013, 9.34456, 0.88 ) }
    dend_12 { pt3dadd( 0.0938932, 13.7891, 9.59575, 0.66 ) }
    dend_12 { pt3dadd( 0.121054, 13.0435, 9.8405, 0.66 ) }
    dend_12 { pt3dadd( 0.159995, 12.2475, 10.1245, 0.66 ) }
    dend_12 { pt3dadd( 0.208287, 11.3365, 10.4663, 0.66 ) }
    dend_12 { pt3dadd( 0.265926, 10.2968, 10.8414, 0.66 ) }
    dend_12 { pt3dadd( 0.300299, 8.84069, 11.2821, 0.52 ) }
    dend_12 { pt3dadd( 0.2987, 8.06017, 11.4564, 0.52 ) }
    dend_12 { pt3dadd( 0.271811, 6.72022, 11.643, 0.52 ) }
    dend_12 { pt3dadd( 0.233718, 5.80327, 11.6891, 0.52 ) }
    dend_12 { pt3dadd( 0.186596, 4.87163, 11.668, 0.52 ) }
    dend_12 { pt3dadd( 0.119585, 3.66985, 11.5948, 0.96 ) }
    dend_12 { pt3dadd( 0.0633024, 3.06091, 11.5513, 1.11 ) }
    dend_12 { pt3dadd( -0.0171548, 2.4377, 11.5085, 1.11 ) }
    dend_12 { pt3dadd( -0.264001, 0.899854, 11.4366, 0.44 ) }
    dend_12 { pt3dadd( -0.40744, 0.172654, 11.4087, 0.44 ) }
    dend_12 { pt3dadd( -0.723129, -1.12757, 11.406, 0.66 ) }
    dend_12 { pt3dadd( -0.975326, -2.0122, 11.4246, 0.52 ) }
    dend_12 { pt3dadd( -1.13029, -2.46755, 11.4313, 0.88 ) }
    dend_12 { pt3dadd( -1.28207, -2.86541, 11.4327, 1.33 ) }
    dend_12 { pt3dadd( -1.6289, -3.74828, 11.4044, 0.96 ) }
    dend_12 { pt3dadd( -2.09792, -5.01207, 11.3167, 0.59 ) }
    dend_12 { pt3dadd( -2.40161, -5.91169, 11.2112, 0.59 ) }
    dend_12 { pt3dadd( -2.56733, -6.49578, 11.1293, 0.96 ) }
    dend_12 { pt3dadd( -2.76556, -7.31626, 11.01, 0.52 ) }
    dend_12 { pt3dadd( -2.9832, -8.43151, 10.8539, 0.22 ) }
    dend_12 { pt3dadd( -3.09574, -9.15041, 10.7679, 0.29 ) }
    dend_12 { pt3dadd( -3.20391, -9.7932, 10.7085, 0.29 ) }
    dend_12 { pt3dadd( -3.3061, -10.2865, 10.6855, 1.03 ) }
    dend_12 { pt3dadd( -3.49546, -11.0322, 10.6739, 1.84 ) }
    dend_12 { pt3dadd( -3.84577, -12.1242, 10.7041, 0.74 ) }
    dend_12 { pt3dadd( -4.29273, -13.2522, 10.7942, 0.29 ) }
    dend_12 { pt3dadd( -4.81305, -14.2832, 10.9515, 0.29 ) }
    dend_12 { pt3dadd( -5.1376, -14.833, 11.0693, 0.29 ) }
    dend_12 { pt3dadd( -5.36947, -15.1972, 11.1588, 0.88 ) }
    dend_12 { pt3dadd( -5.68528, -15.6793, 11.2857, 1.47 ) }
    dend_12 { pt3dadd( -6.02565, -16.2124, 11.4146, 0.88 ) }
    dend_12 { pt3dadd( -6.79714, -17.5646, 11.6743, 0.22 ) }
    dend_12 { pt3dadd( -7.04442, -18.0848, 11.7395, 0.15 ) }
    dend_12 { pt3dadd( -7.30504, -18.742, 11.7998, 0.37 ) }
    dend_12 { pt3dadd( -7.52543, -19.3336, 11.8568, 0.22 ) }
    dend_12 { pt3dadd( -7.86557, -20.2203, 11.9635, 0.22 ) }
    dend_12 { pt3dadd( -8.18122, -20.956, 12.0813, 0.52 ) }
    dend_12 { pt3dadd( -8.38479, -21.3669, 12.1727, 0.96 ) }
    dend_12 { pt3dadd( -8.8628, -22.1204, 12.4184, 1.62 ) }
    dend_12 { pt3dadd( -9.53078, -22.9751, 12.7836, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -10.2846, -23.8337, 13.2198, 0.59 ) }
    dend_12 { pt3dadd( -10.8742, -24.4634, 13.5803, 0.88 ) }
    dend_12 { pt3dadd( -11.4373, -25.0602, 13.9253, 1.55 ) }
    dend_12 { pt3dadd( -11.9301, -25.5888, 14.2227, 1.55 ) }
    dend_12 { pt3dadd( -12.6672, -26.4322, 14.6453, 0.37 ) }
    dend_12 { pt3dadd( -13.2621, -27.2118, 14.9957, 0.22 ) }
    dend_12 { pt3dadd( -13.5939, -27.6983, 15.196, 0.44 ) }
    dend_12 { pt3dadd( -14.0514, -28.4376, 15.4738, 1.11 ) }
    dend_12 { pt3dadd( -14.2617, -28.8256, 15.595, 1.11 ) }
    dend_12 { pt3dadd( -14.6884, -29.7226, 15.8339, 0.44 ) }
    dend_12 { pt3dadd( -15.04, -30.5238, 15.9988, 0.22 ) }
    dend_12 { pt3dadd( -15.3411, -31.2636, 16.0977, 0.29 ) }
    dend_12 { pt3dadd( -15.5283, -31.7141, 16.1316, 0.15 ) }
    dend_12 { pt3dadd( -15.8521, -32.4734, 16.1593, 0.29 ) }
    dend_12 { pt3dadd( -15.9837, -32.776, 16.1626, 0.96 ) }
    dend_12 { pt3dadd( -16.3037, -33.4839, 16.1571, 1.62 ) }
    dend_12 { pt3dadd( -16.8378, -34.6808, 16.122, 2.06 ) }
    dend_12 { pt3dadd( -17.3402, -35.8538, 16.0931, 1.4 ) }
    dend_12 { pt3dadd( -17.5754, -36.4217, 16.087, 0.59 ) }
    dend_12 { pt3dadd( -17.9336, -37.3131, 16.0969, 0.22 ) }
    dend_12 { pt3dadd( -18.1499, -37.9124, 16.1054, 0.22 ) }
    dend_12 { pt3dadd( -18.3415, -38.5187, 16.1194, 0.66 ) }
    dend_12 { pt3dadd( -18.5296, -39.1885, 16.1332, 0.74 ) }
    dend_12 { pt3dadd( -18.7102, -39.9089, 16.1523, 0.22 ) }
    dend_12 { pt3dadd( -18.9143, -40.7175, 16.194, 0.15 ) }
    dend_12 { pt3dadd( -19.0787, -41.3849, 16.2537, 0.22 ) }
    dend_12 { pt3dadd( -19.182, -41.8537, 16.3036, 0.66 ) }
    dend_12 { pt3dadd( -19.307, -42.4417, 16.3809, 1.25 ) }
    dend_12 { pt3dadd( -19.4883, -43.2529, 16.5087, 1.47 ) }
    dend_12 { pt3dadd( -19.7355, -44.2261, 16.6881, 0.88 ) }
    dend_12 { pt3dadd( -19.9826, -45.0527, 16.8603, 0.22 ) }
    dend_12 { pt3dadd( -20.183, -45.6212, 16.9905, 0.22 ) }
    dend_12 { pt3dadd( -20.4019, -46.1673, 17.1217, 0.22 ) }
    dend_12 { pt3dadd( -20.7965, -47.0221, 17.3364, 0.37 ) }
    dend_12 { pt3dadd( -21.179, -47.7521, 17.5168, 0.37 ) }
    dend_12 { pt3dadd( -21.6083, -48.5184, 17.7008, 0.52 ) }
    dend_12 { pt3dadd( -21.8696, -48.9785, 17.8097, 0.22 ) }
    dend_12 { pt3dadd( -22.1114, -49.4267, 17.9135, 0.37 ) }
    dend_12 { pt3dadd( -22.3197, -49.8825, 18.0029, 0.74 ) }
    dend_12 { pt3dadd( -22.5947, -50.6962, 18.1207, 0.22 ) }
    dend_12 { pt3dadd( -22.8043, -51.574, 18.2042, 0.22 ) }
    dend_12 { pt3dadd( -22.9394, -52.2796, 18.2434, 0.29 ) }
    dend_12 { pt3dadd( -23.0432, -52.804, 18.2663, 0.52 ) }
    dend_12 { pt3dadd( -23.199, -53.558, 18.2923, 1.11 ) }
    dend_12 { pt3dadd( -23.3421, -54.2229, 18.3085, 1.7 ) }
    dend_12 { pt3dadd( -23.5574, -55.1409, 18.3224, 1.33 ) }
    dend_12 { pt3dadd( -23.8099, -56.1802, 18.3177, 0.22 ) }
    dend_12 { pt3dadd( -23.9876, -57.0045, 18.3024, 0.22 ) }
    dend_12 { pt3dadd( -24.0454, -57.2898, 18.2955, 0.22 ) }
    dend_12 { pt3dadd( -24.1093, -57.6225, 18.2867, 0.29 ) }
    dend_12 { pt3dadd( -24.2044, -58.1377, 18.2742, 0.52 ) }
    dend_12 { pt3dadd( -24.3163, -58.8024, 18.2591, 0.22 ) }
    dend_12 { pt3dadd( -24.4245, -59.3572, 18.2614, 0.22 ) }
    dend_12 { pt3dadd( -24.5516, -59.8189, 18.2815, 0.22 ) }
    dend_12 { pt3dadd( -24.756, -60.2947, 18.3378, 0.81 ) }
    dend_12 { pt3dadd( -24.9941, -60.681, 18.4183, 1.47 ) }
    dend_12 { pt3dadd( -25.2133, -60.9668, 18.4986, 1.47 ) }
    dend_12 { pt3dadd( -25.7883, -61.6343, 18.7163, 0.22 ) }
    dend_12 { pt3dadd( -26.1081, -61.9969, 18.8378, 0.22 ) }
    dend_12 { pt3dadd( -26.4881, -62.4582, 18.9788, 0.37 ) }
    dend_12 { pt3dadd( -26.9563, -63.0791, 19.1466, 0.44 ) }
    dend_12 { pt3dadd( -27.2639, -63.5167, 19.2539, 0.22 ) }
    dend_12 { pt3dadd( -27.3873, -63.7077, 19.291, 0.22 ) }
    dend_12 { pt3dadd( -27.5375, -63.9571, 19.329, 0.22 ) }
    dend_12 { pt3dadd( -27.8222, -64.4489, 19.3938, 0.22 ) }
    dend_12 { pt3dadd( -28.052, -64.8449, 19.445, 0.74 ) }
    dend_12 { pt3dadd( -28.3333, -65.3337, 19.5072, 1.47 ) }
    dend_12 { pt3dadd( -28.7625, -66.0276, 19.6236, 1.99 ) }
    dend_12 { pt3dadd( -29.1854, -66.6594, 19.7728, 1.77 ) }
    dend_12 { pt3dadd( -29.8993, -67.6327, 20.0703, 0.66 ) }
    dend_12 { pt3dadd( -30.3135, -68.1506, 20.2642, 0.15 ) }
    dend_12 { pt3dadd( -30.7514, -68.6679, 20.4791, 0.15 ) }
    dend_12 { pt3dadd( -31.2211, -69.2173, 20.7112, 0.22 ) }
    dend_12 { pt3dadd( -31.6331, -69.6775, 20.9162, 0.22 ) }
    dend_12 { pt3dadd( -32.0716, -70.1463, 21.1056, 0.29 ) }
    dend_12 { pt3dadd( -32.4528, -70.5509, 21.2395, 0.81 ) }
    dend_12 { pt3dadd( -32.9769, -71.1349, 21.3737, 1.47 ) }
    dend_12 { pt3dadd( -33.5784, -71.8501, 21.4549, 0.52 ) }
    dend_12 { pt3dadd( -34.105, -72.5814, 21.4375, 0.22 ) }
    dend_12 { pt3dadd( -34.4647, -73.1718, 21.3674, 0.22 ) }
    dend_12 { pt3dadd( -34.7039, -73.6632, 21.2891, 0.22 ) }
    dend_12 { pt3dadd( -34.804, -73.9173, 21.2392, 0.22 ) }
    dend_12 { pt3dadd( -34.9389, -74.3371, 21.1475, 0.29 ) }
    dend_12 { pt3dadd( -35.1225, -74.9763, 20.9997, 0.74 ) }
    dend_12 { pt3dadd( -35.2616, -75.4593, 20.884, 1.03 ) }
    dend_12 { pt3dadd( -35.6005, -76.4805, 20.672, 0.37 ) }
    dend_12 { pt3dadd( -35.8659, -77.1738, 20.5486, 0.88 ) }
    dend_12 { pt3dadd( -36.1396, -77.8377, 20.4454, 1.18 ) }
    dend_12 { pt3dadd( -36.3966, -78.44, 20.3602, 1.18 ) }
    dend_12 { pt3dadd( -36.8661, -79.5519, 20.2316, 0.29 ) }
    dend_12 { pt3dadd( -37.287, -80.5104, 20.1571, 0.29 ) }
    dend_12 { pt3dadd( -37.5854, -81.1684, 20.139, 0.37 ) }
    dend_12 { pt3dadd( -37.7996, -81.6294, 20.1579, 0.88 ) }
    dend_12 { pt3dadd( -38.0131, -82.1009, 20.2022, 0.66 ) }
    dend_12 { pt3dadd( -38.2657, -82.7503, 20.2828, 0.22 ) }
    dend_12 { pt3dadd( -38.4312, -83.2832, 20.3598, 0.22 ) }
    dend_12 { pt3dadd( -38.5737, -83.875, 20.4329, 0.37 ) }
    dend_12 { pt3dadd( -38.6537, -84.2978, 20.4802, 0.66 ) }
    dend_12 { pt3dadd( -38.764, -84.9665, 20.5574, 1.11 ) }
    dend_12 { pt3dadd( -38.8948, -85.7625, 20.6555, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( -38.9904, -86.2644, 20.7247, 0.29 ) }
    dend_12 { pt3dadd( -39.1297, -86.9606, 20.8345, 0.22 ) }
    dend_12 { pt3dadd( -39.2361, -87.4328, 20.9044, 0.29 ) }
    dend_12 { pt3dadd( -39.4421, -88.2576, 20.9916, 0.96 ) }
    dend_12 { pt3dadd( -39.606, -88.8424, 21.0261, 1.03 ) }
    dend_12 { pt3dadd( -39.9008, -89.8443, 21.0328, 0.81 ) }
    dend_12 { pt3dadd( -40.1355, -90.6466, 20.9916, 0.29 ) }
    dend_12 { pt3dadd( -40.346, -91.3078, 20.9348, 0.22 ) }
    dend_12 { pt3dadd( -40.5804, -91.9983, 20.8581, 0.29 ) }
    dend_12 { pt3dadd( -40.7947, -92.5983, 20.7767, 0.74 ) }
    dend_12 { pt3dadd( -40.9833, -93.1258, 20.7016, 0.52 ) }
    dend_12 { pt3dadd( -41.417, -94.2808, 20.5547, 0.29 ) }
    dend_12 { pt3dadd( -41.8569, -95.3554, 20.4754, 0.29 ) }
    dend_12 { pt3dadd( -42.2917, -96.3366, 20.4925, 0.29 ) }
    dend_12 { pt3dadd( -42.5447, -96.868, 20.5369, 0.29 ) }
    dend_12 { pt3dadd( -42.8061, -97.383, 20.599, 1.03 ) }
    dend_12 { pt3dadd( -43.0714, -97.8806, 20.6667, 1.7 ) }
    dend_12 { pt3dadd( -43.5362, -98.7511, 20.7918, 1.4 ) }
    dend_12 { pt3dadd( -44.2292, -100.059, 20.992, 0.44 ) }
    dend_12 { pt3dadd( -44.6298, -100.803, 21.1294, 0.15 ) }
    dend_12 { pt3dadd( -44.8076, -101.129, 21.1945, 0.37 ) }
    dend_12 { pt3dadd( -45.0966, -101.65, 21.2932, 0.59 ) }
    dend_12 { pt3dadd( -45.3775, -102.16, 21.3725, 0.59 ) }
    dend_12 { pt3dadd( -45.909, -103.118, 21.4827, 0.22 ) }
    dend_12 { pt3dadd( -46.3278, -103.828, 21.5477, 0.22 ) }
    dend_12 { pt3dadd( -46.6457, -104.351, 21.5978, 0.22 ) }
    dend_12 { pt3dadd( -46.8978, -104.772, 21.6328, 0.88 ) }
    dend_12 { pt3dadd( -47.1333, -105.198, 21.6785, 1.47 ) }
    dend_12 { pt3dadd( -47.4597, -105.832, 21.7482, 1.84 ) }
    dend_12 { pt3dadd( -48.3593, -107.703, 21.9613, 0.22 ) }
    dend_12 { pt3dadd( -48.4936, -107.995, 21.9898, 0.22 ) }
    dend_12 { pt3dadd( -48.6677, -108.385, 22.0309, 0.22 ) }
    dend_12 { pt3dadd( -49.074, -109.251, 22.1268, 0.22 ) }
    dend_12 { pt3dadd( -49.3567, -109.794, 22.1949, 0.22 ) }
    dend_12 { pt3dadd( -49.6005, -110.209, 22.2465, 0.74 ) }
    dend_12 { pt3dadd( -50.0676, -110.938, 22.3119, 1.33 ) }
    dend_12 { pt3dadd( -50.6779, -111.81, 22.3865, 0.22 ) }
    dend_12 { pt3dadd( -51.0494, -112.299, 22.4263, 0.22 ) }
    dend_12 { pt3dadd( -51.4593, -112.85, 22.4753, 0.22 ) }
    dend_12 { pt3dadd( -51.738, -113.303, 22.54, 0.15 ) }
    dend_12 { pt3dadd( -51.9173, -113.675, 22.6125, 0.15 ) }
    dend_12 { pt3dadd( -52.1351, -114.221, 22.7694, 0.37 ) }
    dend_12 { pt3dadd( -52.2254, -114.493, 22.8646, 0.96 ) }
    dend_12 { pt3dadd( -52.5277, -115.522, 23.2748, 2.14 ) }
    dend_12 { pt3dadd( -52.8716, -116.722, 23.8058, 0.66 ) }
    dend_12 { pt3dadd( -53.1273, -117.55, 24.2279, 0.15 ) }
    dend_12 { pt3dadd( -53.3734, -118.254, 24.6466, 0.15 ) }
    dend_12 { pt3dadd( -53.5325, -118.665, 24.9236, 0.44 ) }
    dend_12 { pt3dadd( -53.6903, -119.041, 25.1963, 1.03 ) }
    dend_12 { pt3dadd( -53.9611, -119.653, 25.6486, 1.55 ) }
    dend_12 { pt3dadd( -54.29, -120.409, 26.2216, 0.44 ) }
    dend_12 { pt3dadd( -54.513, -120.939, 26.574, 0.22 ) }
    dend_12 { pt3dadd( -54.6739, -121.357, 26.8046, 0.22 ) }
    dend_12 { pt3dadd( -54.9217, -122.009, 27.1129, 0.22 ) }
    dend_12 { pt3dadd( -55.1659, -122.628, 27.3639, 0.29 ) }
    dend_12 { pt3dadd( -55.4647, -123.337, 27.5999, 0.29 ) }
    dend_12 { pt3dadd( -55.8671, -124.224, 27.8358, 0.15 ) }
    dend_12 { pt3dadd( -56.1882, -124.876, 27.9815, 0.22 ) }
    dend_12 { pt3dadd( -56.5576, -125.543, 28.0885, 0.88 ) }
    dend_12 { pt3dadd( -57.1289, -126.468, 28.1729, 0.74 ) }
    dend_12 { pt3dadd( -57.535, -127.057, 28.1892, 0.88 ) }
    dend_12 { pt3dadd( -57.9767, -127.657, 28.1617, 1.77 ) }
    dend_12 { pt3dadd( -58.4926, -128.33, 28.079, 2.29 ) }
    dend_12 { pt3dadd( -59.2863, -129.355, 27.8582, 0.07 ) }
    dend_12 { pt3dadd( -59.7667, -129.975, 27.6582, 0.15 ) }
    dend_12 { pt3dadd( -60.065, -130.363, 27.485, 0.15 ) }
    dend_12 { pt3dadd( -60.2227, -130.577, 27.3726, 0.15 ) }
    dend_12 { pt3dadd( -60.4828, -130.994, 27.1328, 0.15 ) }
    dend_12 { pt3dadd( -60.6294, -131.328, 26.942, 0.15 ) }
    dend_12 { pt3dadd( -60.814, -131.936, 26.6571, 0.15 ) }
    dend_12 { pt3dadd( -60.8707, -132.165, 26.5653, 0.15 ) }
    dend_12 { pt3dadd( -61.0145, -132.817, 26.3317, 0.66 ) }
    dend_12 { pt3dadd( -61.2852, -134.007, 25.9529, 0.29 ) }
    dend_12 { pt3dadd( -61.4724, -134.784, 25.7455, 0.22 ) }
    dend_12 { pt3dadd( -61.6463, -135.499, 25.5864, 0.22 ) }
    dend_12 { pt3dadd( -61.8149, -136.122, 25.4844, 0.22 ) }
    dend_12 { pt3dadd( -61.928, -136.439, 25.4568, 0.59 ) }
    dend_12 { pt3dadd( -62.0796, -136.741, 25.4635, 0.74 ) }
    dend_12 { pt3dadd( -62.2818, -137.036, 25.5274, 0.37 ) }
    dend_12 { pt3dadd( -62.5737, -137.389, 25.667, 0.15 ) }
    dend_12 { pt3dadd( -63.1698, -138.047, 26.0028, 0.15 ) }
    dend_12 { pt3dadd( -63.5052, -138.393, 26.2076, 0.22 ) }
    dend_12 { pt3dadd( -63.8472, -138.744, 26.4188, 0.29 ) }
    dend_12 { pt3dadd( -64.1926, -139.12, 26.6467, 0.22 ) }
    dend_12 { pt3dadd( -64.624, -139.643, 26.9447, 0.22 ) }
    dend_12 { pt3dadd( -65.0871, -140.285, 27.2762, 0.29 ) }
    dend_12 { pt3dadd( -65.3949, -140.774, 27.5101, 0.29 ) }
    dend_12 { pt3dadd( -65.786, -141.384, 27.8026, 0.22 ) }
    dend_12 { pt3dadd( -66.1242, -141.861, 28.0398, 0.37 ) }
    dend_12 { pt3dadd( -66.4684, -142.308, 28.258, 0.74 ) }
    dend_12 { pt3dadd( -66.7197, -142.629, 28.4111, 1.03 ) }
    dend_12 { pt3dadd( -67.2207, -143.276, 28.7138, 0.22 ) }
    dend_12 { pt3dadd( -67.6704, -143.883, 28.9787, 0.22 ) }
    dend_12 { pt3dadd( -68.0654, -144.416, 29.1948, 0.15 ) }
    dend_12 { pt3dadd( -68.3702, -144.836, 29.3431, 0.15 ) }
    dend_12 { pt3dadd( -68.5851, -145.157, 29.4419, 0.15 ) }
    dend_12 { pt3dadd( -68.9235, -145.719, 29.5698, 0.22 ) }
    dend_12 { pt3dadd( -69.3886, -146.578, 29.706, 0.29 ) }
    dend_12 { pt3dadd( -69.7454, -147.343, 29.7891, 0.74 ) }
    dend_12 { pt3dadd( -70.0914, -148.215, 29.869, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_12 { pt3dadd( -70.3397, -148.903, 29.9279, 0.37 ) }
    dend_12 { pt3dadd( -70.5841, -149.64, 29.9864, 0.37 ) }
    dend_12 { pt3dadd( -70.7564, -150.209, 30.0425, 1.4 ) }
    dend_12 { pt3dadd( -71.0017, -151.026, 30.1427, 2.95 ) }
    dend_12 { pt3dadd( -71.3706, -152.172, 30.3288, 1.18 ) }
    dend_12 { pt3dadd( -71.6997, -153.063, 30.5168, 0.22 ) }
    dend_12 { pt3dadd( -72.1059, -154.095, 30.7828, 0.29 ) }
    dend_12 { pt3dadd( -72.41, -154.861, 30.9996, 0.74 ) }
    dend_12 { pt3dadd( -72.6417, -155.429, 31.1633, 1.33 ) }
    dend_12 { pt3dadd( -73.0449, -156.283, 31.4257, 0.81 ) }
    dend_12 { pt3dadd( -73.4289, -156.978, 31.6128, 1.18 ) }
    dend_12 { pt3dadd( -74.0795, -158.121, 31.8554, 0.66 ) }
    dend_12 { pt3dadd( -74.4839, -158.87, 31.9613, 0.29 ) }
    dend_12 { pt3dadd( -74.6357, -159.163, 31.9874, 0.44 ) }
    dend_12 { pt3dadd( -75.2244, -160.384, 32.0539, 0.29 ) }
    dend_12 { pt3dadd( -75.6506, -161.297, 32.0682, 0.81 ) }
    dend_12 { pt3dadd( -76.2923, -162.604, 32.0368, 0.22 ) }
    dend_12 { pt3dadd( -76.6444, -163.191, 31.9942, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 42.0389, -7.98973, -33.6963, 0.15 ) }
    dend_9 { pt3dadd( 47.8867, -12.8185, -39.3452, 0.15 ) }
    dend_9 { pt3dadd( 53.3875, -18.1969, -44.7866, 0.15 ) }
    dend_9 { pt3dadd( 58.5582, -22.882, -51.1743, 0.15 ) }
    dend_9 { pt3dadd( 64.497, -27.7977, -56.6438, 0.15 ) }
    dend_9 { pt3dadd( 70.3094, -31.1669, -63.396, 0.15 ) }
    dend_9 { pt3dadd( 75.8917, -34.5301, -70.3415, 0.15 ) }
    dend_9 { pt3dadd( 81.2901, -39.0872, -76.6449, 0.15 ) }
    dend_9 { pt3dadd( 85.2432, -44.8327, -82.9328, 0.15 ) }
    dend_9 { pt3dadd( 90.8699, -50.0389, -88.4316, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 42.0389, -7.98973, -33.6963, 0.59 ) }
    dend_8 { pt3dadd( 49.2724, -14.012, -40.6222, 0.15 ) }
    dend_8 { pt3dadd( 56.1771, -20.0243, -47.8668, 0.15 ) }
    dend_8 { pt3dadd( 63.5621, -26.5755, -54.0992, 0.15 ) }
    dend_8 { pt3dadd( 71.1721, -33.3534, -59.8004, 0.15 ) }
    dend_8 { pt3dadd( 78.6721, -39.0189, -66.7781, 0.15 ) }
    dend_8 { pt3dadd( 85.5872, -44.8475, -74.1725, 0.15 ) }
    dend_8 { pt3dadd( 91.5504, -51.573, -81.5324, 0.15 ) }
    dend_8 { pt3dadd( 96.6562, -57.9449, -89.7767, 0.15 ) }
    dend_8 { pt3dadd( 100.682, -64.8542, -98.1058, 0.15 ) }
    dend_8 { pt3dadd( 103.729, -73.2315, -105.294, 0.15 ) }
    dend_8 { pt3dadd( 108.02, -80.9718, -112.668, 0.15 ) }
    dend_8 { pt3dadd( 112.107, -87.7605, -121.076, 0.15 ) }
    dend_8 { pt3dadd( 115.501, -94.1959, -130.047, 0.15 ) }
    dend_8 { pt3dadd( 120.806, -99.5127, -138.958, 0.15 ) }
    dend_8 { pt3dadd( 129.062, -104.104, -145.965, 0.15 ) }
    dend_8 { pt3dadd( 137.354, -109.07, -152.651, 0.15 ) }
    dend_8 { pt3dadd( 146.64, -112.38, -159.17, 0.15 ) }
    dend_8 { pt3dadd( 155.572, -116.468, -165.697, 0.15 ) }
    dend_8 { pt3dadd( 165.161, -118.267, -172.423, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 40.1385, -17.96, -45.5886, 0.15 ) }
    dend_6 { pt3dadd( 43.4136, -24.2012, -51.9031, 0.15 ) }
    dend_6 { pt3dadd( 46.6372, -31.1421, -57.3781, 0.15 ) }
    dend_6 { pt3dadd( 49.6923, -37.4544, -63.7254, 0.15 ) }
    dend_6 { pt3dadd( 52.1207, -45.4105, -67.9415, 0.15 ) }
    dend_6 { pt3dadd( 54.9524, -53.8077, -70.7079, 0.15 ) }
    dend_6 { pt3dadd( 57.3416, -62.0931, -74.18, 0.15 ) }
    dend_6 { pt3dadd( 59.9072, -69.3673, -79.5259, 0.15 ) }
    dend_6 { pt3dadd( 64.1213, -76.2996, -84.2879, 0.15 ) }
    dend_6 { pt3dadd( 67.5195, -84.1196, -88.0867, 0.15 ) }
    dend_6 { pt3dadd( 72.1811, -91.3965, -91.7269, 0.15 ) }
    dend_6 { pt3dadd( 76.2398, -99.0248, -95.2964, 0.15 ) }
    dend_6 { pt3dadd( 79.3402, -106.589, -99.8522, 0.15 ) }
    dend_6 { pt3dadd( 80.5939, -114.794, -104.064, 0.15 ) }
    dend_6 { pt3dadd( 82.7929, -123.046, -107.747, 0.15 ) }
    dend_6 { pt3dadd( 87.0442, -130.658, -111.124, 0.15 ) }
    dend_6 { pt3dadd( 89.976, -138.123, -115.963, 0.15 ) }
    dend_6 { pt3dadd( 94.2784, -144.96, -120.798, 0.15 ) }
    dend_6 { pt3dadd( 98.6283, -152.296, -124.686, 0.15 ) }
    dend_6 { pt3dadd( 102.049, -159.44, -129.735, 0.15 ) }
    dend_6 { pt3dadd( 105.916, -166.789, -134.082, 0.15 ) }
    dend_6 { pt3dadd( 108.488, -174.141, -139.306, 0.15 ) }
    dend_6 { pt3dadd( 111.091, -182.037, -143.542, 0.15 ) }
    dend_6 { pt3dadd( 114.025, -190.298, -146.634, 0.15 ) }
    dend_6 { pt3dadd( 116.073, -198.332, -150.89, 0.15 ) }
    dend_6 { pt3dadd( 118.678, -206.211, -155.16, 0.15 ) }
    dend_6 { pt3dadd( 120.615, -214.73, -158.276, 0.15 ) }
    dend_6 { pt3dadd( 123.659, -223.254, -160.282, 0.15 ) }
    dend_6 { pt3dadd( 128.676, -231.051, -161.353, 0.15 ) }
    dend_6 { pt3dadd( 134.969, -238.029, -161.61, 0.15 ) }
    dend_6 { pt3dadd( 142.164, -244.173, -161.8, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 40.1385, -17.96, -45.5886, 0.59 ) }
    dend_3 { pt3dadd( 47.0468, -26.4201, -52.5103, 0.15 ) }
    dend_3 { pt3dadd( 55.6762, -33.1295, -59.643, 0.15 ) }
    dend_3 { pt3dadd( 64.7335, -39.662, -66.4307, 0.15 ) }
    dend_3 { pt3dadd( 71.0537, -47.4132, -74.6679, 0.15 ) }
    dend_3 { pt3dadd( 76.0534, -55.5909, -83.3149, 0.15 ) }
    dend_3 { pt3dadd( 81.9489, -62.7861, -92.3666, 0.15 ) }
    dend_3 { pt3dadd( 88.8878, -68.7635, -101.673, 0.15 ) }
    dend_3 { pt3dadd( 97.0729, -73.707, -110.654, 0.15 ) }
    dend_3 { pt3dadd( 106.13, -79.4436, -118.184, 0.15 ) }
    dend_3 { pt3dadd( 114.796, -86.6243, -124.754, 0.15 ) }
    dend_3 { pt3dadd( 124.633, -93.9432, -129.24, 0.15 ) }
    dend_3 { pt3dadd( 133.39, -103.018, -132.223, 0.15 ) }
    dend_3 { pt3dadd( 140.965, -113.391, -133.223, 0.15 ) }
    dend_3 { pt3dadd( 147.155, -124.482, -131.223, 0.15 ) }
    dend_3 { pt3dadd( 153.358, -135.673, -130.187, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 95/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -71.1808, -125.611, 3.2541, 0.15 ) }
    dend_56 { pt3dadd( -75.5369, -132.767, 4.48924, 0.15 ) }
    dend_56 { pt3dadd( -80.6587, -139.507, 4.3407, 0.15 ) }
    dend_56 { pt3dadd( -85.4376, -146.462, 5.1107, 0.15 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 99/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -71.1808, -125.611, 3.2541, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_55 { pt3dadd( -75.5373, -133.224, 4.62628, 0.15 ) }
    dend_55 { pt3dadd( -78.1752, -141.555, 5.68617, 0.15 ) }
    dend_55 { pt3dadd( -80.9979, -149.719, 7.54852, 0.15 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 3/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -80.4966, -165.747, -148.159, 0.15 ) }
    dend_52 { pt3dadd( -83.2815, -172.446, -152.72, 0.15 ) }
    dend_52 { pt3dadd( -85.7628, -179.82, -156.217, 0.15 ) }
    dend_52 { pt3dadd( -88.0888, -186.704, -160.72, 0.15 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 7/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -80.4966, -165.747, -148.159, 0.59 ) }
    dend_51 { pt3dadd( -83.0322, -172.246, -154.098, 0.15 ) }
    dend_51 { pt3dadd( -83.7802, -178.47, -160.741, 0.15 ) }
    dend_51 { pt3dadd( -85.6821, -185.001, -166.852, 0.15 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 11/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 9.05091, -163.061, 45.7231, 0.15 ) }
    dend_45 { pt3dadd( 9.84664, -163.695, 45.8158, 0.15 ) }
    dend_45 { pt3dadd( 10.2133, -163.988, 45.8586, 0.37 ) }
    dend_45 { pt3dadd( 10.8282, -164.478, 45.9302, 1.18 ) }
    dend_45 { pt3dadd( 11.2757, -164.835, 45.9824, 0.88 ) }
    dend_45 { pt3dadd( 12.0618, -165.462, 46.074, 0.22 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 9.05091, -163.061, 45.7231, 0.22 ) }
    dend_44 { pt3dadd( 9.21695, -164.259, 45.4497, 0.22 ) }
    dend_44 { pt3dadd( 9.33234, -165.15, 45.2059, 0.81 ) }
    dend_44 { pt3dadd( 9.41608, -166.015, 44.9669, 1.18 ) }
    dend_44 { pt3dadd( 9.46092, -167.327, 44.6203, 0.22 ) }
    dend_44 { pt3dadd( 9.39082, -168.439, 44.3451, 0.22 ) }
    dend_44 { pt3dadd( 9.23782, -169.541, 44.0886, 0.29 ) }
    dend_44 { pt3dadd( 9.00862, -170.578, 43.8642, 0.66 ) }
    dend_44 { pt3dadd( 8.67328, -171.623, 43.6701, 0.81 ) }
    dend_44 { pt3dadd( 8.21369, -172.75, 43.5019, 0.22 ) }
    dend_44 { pt3dadd( 7.5051, -174.211, 43.3552, 0.22 ) }
    dend_44 { pt3dadd( 7.14011, -174.928, 43.324, 0.29 ) }
    dend_44 { pt3dadd( 6.78291, -175.649, 43.3204, 0.96 ) }
    dend_44 { pt3dadd( 6.45618, -176.356, 43.3479, 1.7 ) }
    dend_44 { pt3dadd( 5.83276, -177.91, 43.4753, 0.52 ) }
    dend_44 { pt3dadd( 5.38319, -179.307, 43.659, 0.22 ) }
    dend_44 { pt3dadd( 5.20544, -180.042, 43.7941, 0.15 ) }
    dend_44 { pt3dadd( 4.97673, -181.215, 44.0682, 0.22 ) }
    dend_44 { pt3dadd( 4.81006, -182.244, 44.3048, 0.15 ) }
    dend_44 { pt3dadd( 4.67912, -183.118, 44.5047, 0.15 ) }
    dend_44 { pt3dadd( 4.59365, -183.713, 44.6347, 0.15 ) }
    dend_44 { pt3dadd( 4.51, -184.38, 44.7626, 0.37 ) }
    dend_44 { pt3dadd( 4.40093, -185.244, 44.8715, 0.59 ) }
    dend_44 { pt3dadd( 4.18517, -186.84, 44.9421, 0.07 ) }
    dend_44 { pt3dadd( 4.04226, -187.747, 44.9115, 0.07 ) }
    dend_44 { pt3dadd( 3.88016, -188.735, 44.8345, 0.15 ) }
    dend_44 { pt3dadd( 3.77689, -189.414, 44.7675, 0.66 ) }
    dend_44 { pt3dadd( 3.65909, -190.252, 44.6817, 0.74 ) }
    dend_44 { pt3dadd( 3.48352, -191.661, 44.565, 0.15 ) }
    dend_44 { pt3dadd( 3.38032, -192.564, 44.5338, 0.22 ) }
    dend_44 { pt3dadd( 3.29993, -193.301, 44.5185, 0.15 ) }
    dend_44 { pt3dadd( 3.20933, -193.94, 44.5129, 0.81 ) }
    dend_44 { pt3dadd( 3.08267, -194.613, 44.5164, 0.66 ) }
    dend_44 { pt3dadd( 2.81565, -195.75, 44.5118, 0.15 ) }
    dend_44 { pt3dadd( 2.56857, -196.656, 44.4836, 0.22 ) }
    dend_44 { pt3dadd( 2.2292, -197.785, 44.4234, 0.52 ) }
    dend_44 { pt3dadd( 1.88905, -198.69, 44.3743, 0.59 ) }
    dend_44 { pt3dadd( 1.40678, -199.874, 44.3621, 0.07 ) }
    dend_44 { pt3dadd( 1.01591, -200.811, 44.3873, 0.22 ) }
    dend_44 { pt3dadd( 0.871264, -201.148, 44.3996, 0.22 ) }
    dend_44 { pt3dadd( 0.537972, -201.918, 44.438, 0.96 ) }
    dend_44 { pt3dadd( -0.107539, -203.377, 44.5419, 0.07 ) }
    dend_44 { pt3dadd( -0.645044, -204.651, 44.7075, 0.07 ) }
    dend_44 { pt3dadd( -0.887083, -205.234, 44.8452, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 61/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -14.4151, -177.728, 18.2532, 0.15 ) }
    dend_41 { pt3dadd( -14.7326, -189.144, 20.5237, 0.15 ) }
    dend_41 { pt3dadd( -16.2407, -200.558, 22.2663, 0.15 ) }
    dend_41 { pt3dadd( -17.7827, -211.926, 24.289, 0.15 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 65/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -14.4151, -177.728, 18.2532, 0.59 ) }
    dend_40 { pt3dadd( -15.5341, -186.866, 19.8359, 0.15 ) }
    dend_40 { pt3dadd( -16.9515, -196.075, 19.2728, 0.15 ) }
    dend_40 { pt3dadd( -19.6835, -204.942, 20.585, 0.15 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 69/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 13.5176, 32.2201, -3.10933, 0.52 ) }
    dend_32 { pt3dadd( 14.2665, 33.0969, -3.8748, 0.52 ) }
    dend_32 { pt3dadd( 15.0583, 33.548, -4.81293, 0.37 ) }
    dend_32 { pt3dadd( 15.6381, 33.7338, -5.48571, 0.37 ) }
    dend_32 { pt3dadd( 15.9345, 33.8199, -5.83788, 0.52 ) }
    dend_32 { pt3dadd( 16.4757, 34.0195, -6.51461, 0.52 ) }
    dend_32 { pt3dadd( 17.2926, 34.4066, -7.59805, 0.44 ) }
    dend_32 { pt3dadd( 17.6696, 34.593, -8.16551, 0.44 ) }
    dend_32 { pt3dadd( 18.0848, 34.856, -8.79932, 0.66 ) }
    dend_32 { pt3dadd( 18.445, 35.1723, -9.29014, 0.66 ) }
    dend_32 { pt3dadd( 18.9017, 35.6979, -9.81475, 0.88 ) }
    dend_32 { pt3dadd( 19.2024, 36.1235, -10.072, 1.03 ) }
    dend_32 { pt3dadd( 19.8478, 37.1113, -10.4297, 0.52 ) }
    dend_32 { pt3dadd( 20.3527, 37.8777, -10.6276, 0.52 ) }
    dend_32 { pt3dadd( 20.8005, 38.5341, -10.7588, 0.52 ) }
    dend_32 { pt3dadd( 21.2219, 39.101, -10.8518, 0.52 ) }
    dend_32 { pt3dadd( 21.9328, 40.0025, -11.0149, 0.22 ) }
    dend_32 { pt3dadd( 22.6191, 40.8355, -11.1602, 0.44 ) }
    dend_32 { pt3dadd( 23.3027, 41.6597, -11.2958, 0.74 ) }
    dend_32 { pt3dadd( 24.0157, 42.5857, -11.4588, 1.18 ) }
    dend_32 { pt3dadd( 24.5136, 43.2826, -11.6041, 0.88 ) }
    dend_32 { pt3dadd( 25.3006, 44.3997, -11.8897, 0.29 ) }
    dend_32 { pt3dadd( 31.6205, 52.0701, -14.3892, 0.29 ) }
    dend_32 { pt3dadd( 37.9839, 59.5289, -17.4375, 0.29 ) }
    dend_32 { pt3dadd( 44.1011, 67.5766, -18.8838, 0.29 ) }
    dend_32 { pt3dadd( 50.6983, 75.3851, -18.794, 0.29 ) }
    dend_32 { pt3dadd( 56.938, 83.4467, -18.4461, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 13.5176, 32.2201, -3.10933, 0.88 ) }
    dend_25 { pt3dadd( 15.0008, 33.0022, -2.97979, 0.88 ) }
    dend_25 { pt3dadd( 15.9948, 33.5163, -2.95202, 0.81 ) }
    dend_25 { pt3dadd( 17.1364, 34.1415, -3.02404, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_25 { pt3dadd( 18.3068, 34.8172, -3.20294, 1.33 ) }
    dend_25 { pt3dadd( 19.6515, 35.6565, -3.48519, 1.33 ) }
    dend_25 { pt3dadd( 20.4255, 36.1601, -3.66177, 1.33 ) }
    dend_25 { pt3dadd( 21.2697, 36.77, -3.8862, 1.33 ) }
    dend_25 { pt3dadd( 22.3083, 37.5654, -4.21077, 1.18 ) }
    dend_25 { pt3dadd( 23.2826, 38.3321, -4.55027, 1.03 ) }
    dend_25 { pt3dadd( 24.1516, 38.9923, -4.85057, 0.88 ) }
    dend_25 { pt3dadd( 25.2361, 39.8119, -5.19881, 1.4 ) }
    dend_25 { pt3dadd( 26.5707, 40.8377, -5.57198, 0.74 ) }
    dend_25 { pt3dadd( 27.6709, 41.6858, -5.84583, 1.25 ) }
    dend_25 { pt3dadd( 28.8646, 42.5844, -6.13238, 1.77 ) }
    dend_25 { pt3dadd( 30.4112, 43.7737, -6.54498, 0.96 ) }
    dend_25 { pt3dadd( 31.669, 44.7942, -6.95155, 0.59 ) }
    dend_25 { pt3dadd( 32.5653, 45.5892, -7.30269, 0.74 ) }
    dend_25 { pt3dadd( 33.2133, 46.218, -7.59416, 0.96 ) }
    dend_25 { pt3dadd( 34.3218, 47.3781, -8.108, 1.11 ) }
    dend_25 { pt3dadd( 35.1147, 48.2433, -8.45109, 1.4 ) }
    dend_25 { pt3dadd( 35.835, 49.0363, -8.72239, 1.4 ) }
    dend_25 { pt3dadd( 37.0685, 50.3073, -9.11854, 0.96 ) }
    dend_25 { pt3dadd( 37.6214, 50.8243, -9.24263, 0.96 ) }
    dend_25 { pt3dadd( 38.844, 51.8327, -9.37688, 1.18 ) }
    dend_25 { pt3dadd( 39.9214, 52.5922, -9.3832, 1.18 ) }
    dend_25 { pt3dadd( 41.0859, 53.3072, -9.35388, 1.03 ) }
    dend_25 { pt3dadd( 41.9029, 53.7637, -9.35791, 0.96 ) }
    dend_25 { pt3dadd( 43.0023, 54.3589, -9.4351, 0.81 ) }
    dend_25 { pt3dadd( 44.1852, 55.0146, -9.61868, 0.74 ) }
    dend_25 { pt3dadd( 45.4164, 55.7364, -9.92727, 0.96 ) }
    dend_25 { pt3dadd( 46.6569, 56.5235, -10.3179, 1.25 ) }
    dend_25 { pt3dadd( 47.9966, 57.439, -10.8002, 1.55 ) }
    dend_25 { pt3dadd( 49.1235, 58.2886, -11.2397, 0.88 ) }
    dend_25 { pt3dadd( 50.3329, 59.3469, -11.7722, 0.59 ) }
    dend_25 { pt3dadd( 51.0356, 60.0624, -12.0877, 0.81 ) }
    dend_25 { pt3dadd( 51.76, 60.9239, -12.3982, 0.96 ) }
    dend_25 { pt3dadd( 52.5264, 61.8863, -12.6886, 1.33 ) }
    dend_25 { pt3dadd( 53.6715, 63.4251, -13.0462, 1.55 ) }
    dend_25 { pt3dadd( 54.6288, 64.8221, -13.3138, 1.7 ) }
    dend_25 { pt3dadd( 55.4926, 66.226, -13.5599, 1.62 ) }
    dend_25 { pt3dadd( 56.3946, 67.847, -13.8402, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 2.47482, 138.661, -99.0159, 0.15 ) }
    dend_23 { pt3dadd( 2.73272, 147.56, -107.127, 0.15 ) }
    dend_23 { pt3dadd( 4.20948, 157.21, -114.097, 0.15 ) }
    dend_23 { pt3dadd( 3.2131, 166.637, -121.457, 0.15 ) }
    dend_23 { pt3dadd( 2.1758, 176.41, -128.303, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 43/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 2.47482, 138.661, -99.0159, 0.59 ) }
    dend_22 { pt3dadd( 1.18705, 144.905, -104.845, 0.15 ) }
    dend_22 { pt3dadd( -0.230112, 150.612, -111.22, 0.15 ) }
    dend_22 { pt3dadd( -2.32379, 157.639, -115.666, 0.15 ) }
    dend_22 { pt3dadd( -3.35107, 165.17, -119.601, 0.15 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 48/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -7.99153, 16.0104, 21.2175, 0.81 ) }
    dend_17 { pt3dadd( -5.99476, 16.8544, 21.0286, 0.81 ) }
    dend_17 { pt3dadd( -4.91308, 17.4273, 20.8658, 0.44 ) }
    dend_17 { pt3dadd( -3.33482, 18.4417, 20.6807, 0.59 ) }
    dend_17 { pt3dadd( -2.02492, 19.3594, 20.5982, 0.59 ) }
    dend_17 { pt3dadd( -0.921236, 20.159, 20.5684, 0.88 ) }
    dend_17 { pt3dadd( -0.0709429, 20.7834, 20.5679, 1.11 ) }
    dend_17 { pt3dadd( 0.915794, 21.5836, 20.4478, 1.11 ) }
    dend_17 { pt3dadd( 1.8362, 22.5593, 20.3724, 0.29 ) }
    dend_17 { pt3dadd( 2.11, 23.1605, 20.5474, 0.29 ) }
    dend_17 { pt3dadd( 2.04636, 23.6213, 20.9861, 0.29 ) }
    dend_17 { pt3dadd( 1.95931, 23.8551, 21.2861, 0.29 ) }
    dend_17 { pt3dadd( 1.91528, 24.1158, 21.6638, 0.29 ) }
    dend_17 { pt3dadd( 2.01163, 24.5492, 22.3679, 0.59 ) }
    dend_17 { pt3dadd( 2.29653, 24.9433, 23.0151, 1.11 ) }
    dend_17 { pt3dadd( 2.92308, 25.5472, 24.0368, 1.84 ) }
    dend_17 { pt3dadd( 3.54568, 26.0118, 24.8982, 1.84 ) }
    dend_17 { pt3dadd( 4.41686, 26.5712, 26.0038, 0.96 ) }
    dend_17 { pt3dadd( 5.06219, 26.9248, 26.776, 0.74 ) }
    dend_17 { pt3dadd( 5.78631, 27.316, 27.5966, 0.74 ) }
    dend_17 { pt3dadd( 6.56582, 27.7914, 28.5416, 0.74 ) }
    dend_17 { pt3dadd( 7.11323, 28.1988, 29.2975, 1.11 ) }
    dend_17 { pt3dadd( 7.68872, 28.7617, 30.1448, 1.47 ) }
    dend_17 { pt3dadd( 8.23316, 29.3883, 30.9425, 1.47 ) }
    dend_17 { pt3dadd( 8.93073, 30.2616, 31.9219, 0.74 ) }
    dend_17 { pt3dadd( 9.82768, 31.4438, 33.1441, 0.52 ) }
    dend_17 { pt3dadd( 10.3202, 32.0924, 33.7872, 0.52 ) }
    dend_17 { pt3dadd( 11.022, 32.977, 34.7052, 0.37 ) }
    dend_17 { pt3dadd( 11.685, 33.6213, 35.4965, 0.37 ) }
    dend_17 { pt3dadd( 12.021, 33.7529, 35.8399, 0.37 ) }
    dend_17 { pt3dadd( 12.4757, 33.7237, 36.2757, 0.37 ) }
    dend_17 { pt3dadd( 12.8185, 33.6499, 36.5994, 0.37 ) }
    dend_17 { pt3dadd( 13.5788, 33.5068, 37.5026, 0.37 ) }
    dend_17 { pt3dadd( 14.0481, 33.4976, 38.3168, 0.37 ) }
    dend_17 { pt3dadd( 14.6093, 33.7241, 39.533, 0.37 ) }
    dend_17 { pt3dadd( 14.949, 34.001, 40.3937, 0.37 ) }
    dend_17 { pt3dadd( 15.2376, 34.37, 41.3047, 0.59 ) }
    dend_17 { pt3dadd( 15.4847, 34.8335, 42.2615, 0.88 ) }
    dend_17 { pt3dadd( 15.799, 35.7929, 43.8679, 0.88 ) }
    dend_17 { pt3dadd( 15.9595, 36.6439, 45.1404, 0.59 ) }
    dend_17 { pt3dadd( 16.0625, 37.7525, 46.6265, 0.59 ) }
    dend_17 { pt3dadd( 16.1259, 38.4674, 47.4744, 0.29 ) }
    dend_17 { pt3dadd( 16.2169, 39.2607, 48.2863, 0.29 ) }
    dend_17 { pt3dadd( 16.3564, 40.206, 49.1156, 0.29 ) }
    dend_17 { pt3dadd( 16.4856, 40.9224, 49.657, 0.96 ) }
    dend_17 { pt3dadd( 16.6661, 41.6281, 50.1576, 1.84 ) }
    dend_17 { pt3dadd( 16.9888, 42.7189, 50.8799, 0.37 ) }
    dend_17 { pt3dadd( 17.2425, 43.5571, 51.4664, 0.81 ) }
    dend_17 { pt3dadd( 17.5127, 44.5344, 52.2622, 1.55 ) }
    dend_17 { pt3dadd( 17.7663, 45.4896, 53.1985, 0.22 ) }
    dend_17 { pt3dadd( 17.9386, 46.1996, 53.957, 0.22 ) }
    dend_17 { pt3dadd( 18.0646, 46.6933, 54.539, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_17 { pt3dadd( 18.2756, 47.3196, 55.2382, 0.29 ) }
    dend_17 { pt3dadd( 18.534, 47.9368, 55.8274, 0.29 ) }
    dend_17 { pt3dadd( 18.8936, 48.6657, 56.4291, 0.59 ) }
    dend_17 { pt3dadd( 19.5123, 49.743, 57.2524, 1.77 ) }
    dend_17 { pt3dadd( 19.987, 50.5101, 57.8074, 2.14 ) }
    dend_17 { pt3dadd( 20.9567, 51.9426, 58.7691, 0.29 ) }
    dend_17 { pt3dadd( 21.4468, 52.6263, 59.1872, 0.29 ) }
    dend_17 { pt3dadd( 21.9197, 53.293, 59.5791, 0.29 ) }
    dend_17 { pt3dadd( 22.1994, 53.6699, 59.7963, 0.29 ) }
    dend_17 { pt3dadd( 22.6149, 54.1848, 60.1278, 0.88 ) }
    dend_17 { pt3dadd( 23.1659, 54.8091, 60.5788, 1.62 ) }
    dend_17 { pt3dadd( 23.6687, 55.304, 60.9862, 1.62 ) }
    dend_17 { pt3dadd( 24.3554, 55.9485, 61.4794, 2.21 ) }
    dend_17 { pt3dadd( 26.0882, 57.4892, 62.5303, 0.22 ) }
    dend_17 { pt3dadd( 26.8165, 58.1176, 62.9154, 0.22 ) }
    dend_17 { pt3dadd( 27.3216, 58.5373, 63.1597, 0.22 ) }
    dend_17 { pt3dadd( 27.8413, 58.9627, 63.3868, 0.22 ) }
    dend_17 { pt3dadd( 28.819, 59.7587, 63.7585, 0.44 ) }
    dend_17 { pt3dadd( 29.9446, 60.6431, 64.0833, 0.66 ) }
    dend_17 { pt3dadd( 30.1188, 60.791, 64.1265, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -7.99153, 16.0104, 21.2175, 0.96 ) }
    dend_14 { pt3dadd( -7.4731, 15.1413, 21.3995, 0.96 ) }
    dend_14 { pt3dadd( -6.92324, 14.236, 21.5671, 0.37 ) }
    dend_14 { pt3dadd( -6.79206, 13.9015, 21.6245, 0.29 ) }
    dend_14 { pt3dadd( -6.65259, 13.2832, 21.713, 0.22 ) }
    dend_14 { pt3dadd( -6.61302, 12.8675, 21.7872, 0.22 ) }
    dend_14 { pt3dadd( -6.60425, 12.2189, 21.9218, 0.52 ) }
    dend_14 { pt3dadd( -6.65837, 11.4327, 22.109, 0.74 ) }
    dend_14 { pt3dadd( -6.88523, 10.3521, 22.403, 0.52 ) }
    dend_14 { pt3dadd( -7.09394, 9.57001, 22.621, 1.11 ) }
    dend_14 { pt3dadd( -7.42531, 8.37509, 22.9577, 1.62 ) }
    dend_14 { pt3dadd( -7.71749, 7.31486, 23.2443, 1.33 ) }
    dend_14 { pt3dadd( -8.10086, 5.81801, 23.6285, 1.11 ) }
    dend_14 { pt3dadd( -8.59147, 3.76836, 24.1355, 0.44 ) }
    dend_14 { pt3dadd( -8.83667, 2.68546, 24.3883, 0.44 ) }
    dend_14 { pt3dadd( -9.09709, 1.56469, 24.6362, 0.44 ) }
    dend_14 { pt3dadd( -9.31911, 0.672964, 24.8123, 0.96 ) }
    dend_14 { pt3dadd( -9.65176, -0.612682, 25.0594, 1.47 ) }
    dend_14 { pt3dadd( -10.0788, -2.09576, 25.3478, 1.7 ) }
    dend_14 { pt3dadd( -10.608, -3.73837, 25.7112, 1.7 ) }
    dend_14 { pt3dadd( -11.1776, -5.18748, 26.1144, 1.7 ) }
    dend_14 { pt3dadd( -11.7996, -6.5289, 26.5595, 0.59 ) }
    dend_14 { pt3dadd( -12.4302, -7.76507, 27.0406, 0.44 ) }
    dend_14 { pt3dadd( -13.0236, -8.86489, 27.5324, 0.44 ) }
    dend_14 { pt3dadd( -13.363, -9.50683, 27.8683, 0.44 ) }
    dend_14 { pt3dadd( -13.8165, -10.4796, 28.4683, 0.44 ) }
    dend_14 { pt3dadd( -13.9303, -10.8265, 28.7094, 0.44 ) }
    dend_14 { pt3dadd( -13.9772, -11.2814, 28.995, 0.44 ) }
    dend_14 { pt3dadd( -13.9421, -11.9988, 29.3561, 0.44 ) }
    dend_14 { pt3dadd( -13.9116, -12.4741, 29.5696, 0.88 ) }
    dend_14 { pt3dadd( -13.9121, -13.5913, 30.0355, 1.4 ) }
    dend_14 { pt3dadd( -13.9847, -14.354, 30.3613, 1.4 ) }
    dend_14 { pt3dadd( -14.2471, -15.5666, 30.9228, 0.66 ) }
    dend_14 { pt3dadd( -14.5311, -16.4514, 31.3521, 0.22 ) }
    dend_14 { pt3dadd( -14.8517, -17.3129, 31.7969, 0.22 ) }
    dend_14 { pt3dadd( -15.0372, -17.8079, 32.0637, 1.03 ) }
    dend_14 { pt3dadd( -15.3414, -18.6598, 32.5316, 2.36 ) }
    dend_14 { pt3dadd( -15.6449, -19.6611, 33.0825, 2.65 ) }
    dend_14 { pt3dadd( -16.0477, -21.4664, 34.0893, 0.81 ) }
    dend_14 { pt3dadd( -16.1299, -22.4861, 34.5769, 0.22 ) }
    dend_14 { pt3dadd( -16.1093, -22.9884, 34.7848, 0.22 ) }
    dend_14 { pt3dadd( -16.0484, -23.4714, 34.9692, 0.66 ) }
    dend_14 { pt3dadd( -15.9245, -24.071, 35.1843, 0.66 ) }
    dend_14 { pt3dadd( -15.8173, -24.4474, 35.3196, 0.66 ) }
    dend_14 { pt3dadd( -15.4337, -25.4946, 35.7173, 0.22 ) }
    dend_14 { pt3dadd( -15.2796, -26.0279, 35.9372, 0.22 ) }
    dend_14 { pt3dadd( -15.2372, -26.2734, 36.0613, 0.22 ) }
    dend_14 { pt3dadd( -15.2239, -26.6816, 36.3111, 0.22 ) }
    dend_14 { pt3dadd( -15.2805, -27.2311, 36.6762, 0.22 ) }
    dend_14 { pt3dadd( -15.3392, -27.46, 36.8362, 0.22 ) }
    dend_14 { pt3dadd( -15.5612, -27.9926, 37.2186, 0.22 ) }
    dend_14 { pt3dadd( -15.7199, -28.2999, 37.4131, 0.29 ) }
    dend_14 { pt3dadd( -16.1671, -29.0857, 37.8494, 0.29 ) }
    dend_14 { pt3dadd( -16.3888, -29.498, 38.0429, 0.59 ) }
    dend_14 { pt3dadd( -16.7627, -30.264, 38.3486, 0.88 ) }
    dend_14 { pt3dadd( -17.0775, -31.0327, 38.6213, 0.66 ) }
    dend_14 { pt3dadd( -17.3636, -32.0399, 38.9217, 0.22 ) }
    dend_14 { pt3dadd( -17.4337, -32.5288, 39.051, 0.22 ) }
    dend_14 { pt3dadd( -17.4834, -33.7509, 39.3787, 0.59 ) }
    dend_14 { pt3dadd( -17.449, -34.7873, 39.6646, 1.03 ) }
    dend_14 { pt3dadd( -17.3785, -35.8189, 39.9549, 1.62 ) }
    dend_14 { pt3dadd( -17.2721, -37.2096, 40.3801, 0.59 ) }
    dend_14 { pt3dadd( -17.2085, -38.6306, 40.831, 0.22 ) }
    dend_14 { pt3dadd( -17.2211, -39.6146, 41.173, 0.52 ) }
    dend_14 { pt3dadd( -17.2758, -40.1943, 41.4085, 1.25 ) }
    dend_14 { pt3dadd( -17.4463, -41.1406, 41.8643, 2.14 ) }
    dend_14 { pt3dadd( -17.692, -41.993, 42.3374, 1.33 ) }
    dend_14 { pt3dadd( -18.111, -43.1038, 43.0661, 0.52 ) }
    dend_14 { pt3dadd( -18.3505, -43.7275, 43.5077, 0.22 ) }
    dend_14 { pt3dadd( -18.5763, -44.4352, 44.0196, 0.44 ) }
    dend_14 { pt3dadd( -18.7118, -45.0099, 44.4507, 0.44 ) }
    dend_14 { pt3dadd( -18.7869, -45.6133, 44.8699, 0.22 ) }
    dend_14 { pt3dadd( -18.8437, -46.2009, 45.1919, 0.22 ) }
    dend_14 { pt3dadd( -18.9161, -46.9311, 45.5306, 0.22 ) }
    dend_14 { pt3dadd( -18.9862, -47.4427, 45.7181, 0.52 ) }
    dend_14 { pt3dadd( -19.1189, -48.156, 45.9317, 0.74 ) }
    dend_14 { pt3dadd( -19.4247, -49.2978, 46.3027, 0.81 ) }
    dend_14 { pt3dadd( -19.7934, -50.2789, 46.7682, 0.22 ) }
    dend_14 { pt3dadd( -20.1152, -50.8497, 47.1887, 0.22 ) }
    dend_14 { pt3dadd( -20.2771, -51.0831, 47.4316, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( -20.5097, -51.4385, 47.8409, 0.66 ) }
    dend_14 { pt3dadd( -20.8622, -52.0552, 48.604, 1.33 ) }
    dend_14 { pt3dadd( -21.1129, -52.6063, 49.2764, 1.55 ) }
    dend_14 { pt3dadd( -21.3282, -53.2572, 49.9639, 0.88 ) }
    dend_14 { pt3dadd( -21.6119, -54.1343, 50.7232, 0.15 ) }
    dend_14 { pt3dadd( -21.9239, -55.042, 51.434, 0.29 ) }
    dend_14 { pt3dadd( -22.0995, -55.5429, 51.7902, 0.88 ) }
    dend_14 { pt3dadd( -22.3074, -56.0573, 52.1103, 1.25 ) }
    dend_14 { pt3dadd( -22.5484, -56.6068, 52.4325, 1.33 ) }
    dend_14 { pt3dadd( -23.2102, -58.0439, 53.2744, 0.22 ) }
    dend_14 { pt3dadd( -23.5035, -58.6803, 53.6436, 0.74 ) }
    dend_14 { pt3dadd( -23.7798, -59.2894, 53.9972, 1.25 ) }
    dend_14 { pt3dadd( -24.2063, -60.349, 54.5629, 0.44 ) }
    dend_14 { pt3dadd( -24.4017, -61.163, 54.9227, 0.22 ) }
    dend_14 { pt3dadd( -24.4481, -61.6573, 55.0891, 0.22 ) }
    dend_14 { pt3dadd( -24.4356, -62.3569, 55.2408, 0.96 ) }
    dend_14 { pt3dadd( -24.405, -62.8053, 55.3183, 1.55 ) }
    dend_14 { pt3dadd( -24.3166, -63.7162, 55.4588, 1.33 ) }
    dend_14 { pt3dadd( -24.0781, -65.7993, 55.7971, 0.15 ) }
    dend_14 { pt3dadd( -24.0383, -66.2999, 55.8845, 0.37 ) }
    dend_14 { pt3dadd( -24.0037, -67.2321, 56.0832, 0.15 ) }
    dend_14 { pt3dadd( -24.0151, -68.0192, 56.3121, 0.15 ) }
    dend_14 { pt3dadd( -24.0613, -68.7378, 56.5791, 0.52 ) }
    dend_14 { pt3dadd( -24.1519, -69.5062, 56.922, 1.18 ) }
    dend_14 { pt3dadd( -24.314, -70.4324, 57.4071, 2.06 ) }
    dend_14 { pt3dadd( -24.5303, -71.6145, 58.0668, 0.96 ) }
    dend_14 { pt3dadd( -24.7607, -72.8308, 58.7766, 0.22 ) }
    dend_14 { pt3dadd( -24.9434, -73.6922, 59.2882, 0.22 ) }
    dend_14 { pt3dadd( -25.1685, -74.7075, 59.9105, 0.22 ) }
    dend_14 { pt3dadd( -25.3143, -75.36, 60.3162, 0.22 ) }
    dend_14 { pt3dadd( -25.5199, -76.334, 60.95, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 31/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 153.358, -135.673, -130.187, 0.15 ) }
    dend_5 { pt3dadd( 158.867, -141.756, -134.639, 0.15 ) }
    dend_5 { pt3dadd( 163.832, -148.616, -138.437, 0.15 ) }
    dend_5 { pt3dadd( 168.77, -155.187, -142.787, 0.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 35/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 153.358, -135.673, -130.187, 0.59 ) }
    dend_4 { pt3dadd( 157.912, -140.079, -133.191, 0.15 ) }
    dend_4 { pt3dadd( 162.705, -144.702, -135.39, 0.15 ) }
    dend_4 { pt3dadd( 166.162, -150.321, -137.505, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 56.938, 83.4467, -18.4461, 0.15 ) }
    dend_34 { pt3dadd( 65.2583, 92.893, -24.7203, 0.15 ) }
    dend_34 { pt3dadd( 70.7127, 103.655, -31.7375, 0.15 ) }
    dend_34 { pt3dadd( 73.0746, 114.812, -39.7184, 0.15 ) }
    dend_34 { pt3dadd( 73.5067, 126.421, -47.3062, 0.15 ) }
    dend_34 { pt3dadd( 71.9045, 137.24, -55.9512, 0.15 ) }
    dend_34 { pt3dadd( 72.1936, 147.825, -65.0521, 0.15 ) }
    dend_34 { pt3dadd( 73.1724, 158.761, -73.6338, 0.15 ) }
    dend_34 { pt3dadd( 73.9845, 169.637, -82.3149, 0.15 ) }
    dend_34 { pt3dadd( 75.364, 181.681, -88.9884, 0.15 ) }
    dend_34 { pt3dadd( 74.4547, 194.755, -93.105, 0.15 ) }
    dend_34 { pt3dadd( 76.0026, 208.302, -94.3798, 0.15 ) }
    dend_34 { pt3dadd( 79.2568, 221.626, -94.827, 0.15 ) }
    dend_34 { pt3dadd( 80.8066, 235.093, -92.7802, 0.15 ) }
    dend_34 { pt3dadd( 83.5686, 248.258, -89.965, 0.15 ) }
    dend_34 { pt3dadd( 87.5996, 261.284, -88.1287, 0.15 ) }
    dend_34 { pt3dadd( 88.9202, 274.896, -87.4846, 0.15 ) }
    dend_34 { pt3dadd( 89.8313, 288.531, -88.232, 0.15 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 56.938, 83.4467, -18.4461, 0.59 ) }
    dend_33 { pt3dadd( 63.1502, 91.1454, -15.2489, 0.15 ) }
    dend_33 { pt3dadd( 68.4785, 99.2362, -11.5654, 0.15 ) }
    dend_33 { pt3dadd( 74.0403, 106.212, -6.12001, 0.15 ) }
    dend_33 { pt3dadd( 77.8582, 113.959, -0.339139, 0.15 ) }
    dend_33 { pt3dadd( 82.2824, 120.678, 6.362, 0.15 ) }
    dend_33 { pt3dadd( 86.1303, 127.94, 12.7862, 0.15 ) }
    dend_33 { pt3dadd( 89.0485, 135.604, 19.1799, 0.15 ) }
    dend_33 { pt3dadd( 94.3025, 142.717, 24.7347, 0.15 ) }
    dend_33 { pt3dadd( 99.4145, 149.783, 30.4831, 0.15 ) }
    dend_33 { pt3dadd( 103.828, 157.662, 35.6056, 0.15 ) }
    dend_33 { pt3dadd( 107.119, 166.34, 40.1005, 0.15 ) }
    dend_33 { pt3dadd( 111.761, 173.746, 45.7736, 0.15 ) }
    dend_33 { pt3dadd( 117.508, 179.174, 52.7595, 0.15 ) }
    dend_33 { pt3dadd( 124.055, 183.878, 59.6205, 0.15 ) }
    dend_33 { pt3dadd( 130.887, 188.84, 65.9837, 0.15 ) }
    dend_33 { pt3dadd( 138.133, 194.989, 70.4664, 0.15 ) }
    dend_33 { pt3dadd( 146.625, 200.256, 73.8703, 0.15 ) }
    dend_33 { pt3dadd( 154.428, 206.372, 77.3543, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 56.3946, 67.847, -13.8402, 0.66 ) }
    dend_27 { pt3dadd( 57.0376, 69.0887, -14.1995, 0.66 ) }
    dend_27 { pt3dadd( 57.4055, 69.7258, -14.4066, 0.66 ) }
    dend_27 { pt3dadd( 57.8583, 70.4889, -14.6634, 0.44 ) }
    dend_27 { pt3dadd( 58.1888, 71.0451, -14.8369, 0.37 ) }
    dend_27 { pt3dadd( 58.6222, 71.7883, -15.0393, 0.37 ) }
    dend_27 { pt3dadd( 59.0058, 72.4571, -15.1831, 0.37 ) }
    dend_27 { pt3dadd( 59.2021, 72.7777, -15.2369, 0.59 ) }
    dend_27 { pt3dadd( 59.542, 73.3753, -15.3127, 1.11 ) }
    dend_27 { pt3dadd( 60.0147, 74.3581, -15.4004, 0.37 ) }
    dend_27 { pt3dadd( 60.3329, 75.1597, -15.3924, 0.59 ) }
    dend_27 { pt3dadd( 60.6637, 76.1582, -15.303, 0.37 ) }
    dend_27 { pt3dadd( 60.9766, 77.1516, -15.1585, 0.44 ) }
    dend_27 { pt3dadd( 61.159, 77.6946, -15.0646, 0.22 ) }
    dend_27 { pt3dadd( 61.3516, 78.1793, -14.972, 0.22 ) }
    dend_27 { pt3dadd( 61.9526, 79.4417, -14.7284, 0.22 ) }
    dend_27 { pt3dadd( 62.342, 80.0988, -14.6186, 0.22 ) }
    dend_27 { pt3dadd( 62.5902, 80.4292, -14.5794, 0.44 ) }
    dend_27 { pt3dadd( 63.0385, 80.9051, -14.5564, 0.66 ) }
    dend_27 { pt3dadd( 63.7686, 81.5504, -14.5908, 0.22 ) }
    dend_27 { pt3dadd( 64.0991, 81.8043, -14.633, 0.22 ) }
    dend_27 { pt3dadd( 64.5363, 82.1057, -14.7138, 0.66 ) }
    dend_27 { pt3dadd( 64.9109, 82.3531, -14.7738, 1.03 ) }
    dend_27 { pt3dadd( 65.7665, 82.9242, -14.9014, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_27 { pt3dadd( 66.4933, 83.4349, -15.0074, 0.66 ) }
    dend_27 { pt3dadd( 66.9352, 83.7644, -15.0642, 0.81 ) }
    dend_27 { pt3dadd( 67.932, 84.5241, -15.1805, 1.03 ) }
    dend_27 { pt3dadd( 68.6928, 85.1081, -15.2605, 0.74 ) }
    dend_27 { pt3dadd( 69.4453, 85.6808, -15.327, 0.37 ) }
    dend_27 { pt3dadd( 69.9988, 86.0764, -15.3691, 0.37 ) }
    dend_27 { pt3dadd( 70.4685, 86.404, -15.4046, 0.29 ) }
    dend_27 { pt3dadd( 70.9588, 86.7409, -15.4444, 0.29 ) }
    dend_27 { pt3dadd( 71.3667, 87.0197, -15.4854, 0.66 ) }
    dend_27 { pt3dadd( 71.9683, 87.423, -15.535, 1.25 ) }
    dend_27 { pt3dadd( 73.0437, 88.1265, -15.6207, 0.29 ) }
    dend_27 { pt3dadd( 73.3714, 88.3409, -15.6509, 0.29 ) }
    dend_27 { pt3dadd( 74.0539, 88.8128, -15.729, 0.88 ) }
    dend_27 { pt3dadd( 74.7048, 89.3023, -15.8136, 0.52 ) }
    dend_27 { pt3dadd( 75.2332, 89.7283, -15.892, 1.11 ) }
    dend_27 { pt3dadd( 75.9581, 90.3473, -16.0141, 0.66 ) }
    dend_27 { pt3dadd( 76.641, 90.9527, -16.1223, 0.29 ) }
    dend_27 { pt3dadd( 77.1376, 91.3758, -16.1967, 0.59 ) }
    dend_27 { pt3dadd( 78.0352, 92.0804, -16.3252, 0.22 ) }
    dend_27 { pt3dadd( 78.4582, 92.3799, -16.3816, 0.59 ) }
    dend_27 { pt3dadd( 79.0489, 92.7649, -16.4601, 1.18 ) }
    dend_27 { pt3dadd( 79.7895, 93.2031, -16.5447, 0.22 ) }
    dend_27 { pt3dadd( 80.2879, 93.479, -16.5968, 0.22 ) }
    dend_27 { pt3dadd( 80.7069, 93.7079, -16.6407, 0.22 ) }
    dend_27 { pt3dadd( 81.1609, 93.9733, -16.678, 0.22 ) }
    dend_27 { pt3dadd( 81.4636, 94.1914, -16.7035, 0.22 ) }
    dend_27 { pt3dadd( 81.805, 94.5094, -16.7392, 0.37 ) }
    dend_27 { pt3dadd( 82.3017, 95.0956, -16.7979, 0.37 ) }
    dend_27 { pt3dadd( 82.623, 95.5354, -16.831, 0.22 ) }
    dend_27 { pt3dadd( 82.9839, 96.0803, -16.8556, 0.52 ) }
    dend_27 { pt3dadd( 83.4651, 96.8334, -16.8581, 0.52 ) }
    dend_27 { pt3dadd( 83.7948, 97.3254, -16.843, 0.96 ) }
    dend_27 { pt3dadd( 84.1378, 97.7851, -16.8149, 1.77 ) }
    dend_27 { pt3dadd( 84.5336, 98.2594, -16.7752, 1.77 ) }
    dend_27 { pt3dadd( 85.1042, 98.906, -16.7216, 0.22 ) }
    dend_27 { pt3dadd( 85.5168, 99.3554, -16.6921, 0.22 ) }
    dend_27 { pt3dadd( 85.9202, 99.7574, -16.6616, 0.22 ) }
    dend_27 { pt3dadd( 86.3333, 100.151, -16.6404, 0.22 ) }
    dend_27 { pt3dadd( 86.7168, 100.506, -16.6422, 0.22 ) }
    dend_27 { pt3dadd( 87.1688, 100.946, -16.6698, 0.22 ) }
    dend_27 { pt3dadd( 87.6395, 101.431, -16.7355, 0.22 ) }
    dend_27 { pt3dadd( 87.8786, 101.697, -16.7778, 0.66 ) }
    dend_27 { pt3dadd( 88.2317, 102.102, -16.8412, 0.81 ) }
    dend_27 { pt3dadd( 88.7526, 102.707, -16.919, 0.22 ) }
    dend_27 { pt3dadd( 89.1695, 103.172, -16.9609, 0.22 ) }
    dend_27 { pt3dadd( 89.521, 103.582, -16.9841, 0.74 ) }
    dend_27 { pt3dadd( 89.9337, 104.126, -17.0051, 0.88 ) }
    dend_27 { pt3dadd( 90.1658, 104.474, -17.011, 1.11 ) }
    dend_27 { pt3dadd( 90.677, 105.347, -16.9926, 1.11 ) }
    dend_27 { pt3dadd( 91.0937, 106.174, -16.9546, 0.37 ) }
    dend_27 { pt3dadd( 91.5302, 107.112, -16.8836, 0.22 ) }
    dend_27 { pt3dadd( 91.7885, 107.705, -16.818, 0.29 ) }
    dend_27 { pt3dadd( 92.0208, 108.248, -16.7365, 0.29 ) }
    dend_27 { pt3dadd( 92.27, 108.794, -16.6304, 0.37 ) }
    dend_27 { pt3dadd( 92.5592, 109.282, -16.5018, 0.37 ) }
    dend_27 { pt3dadd( 92.8345, 109.592, -16.3822, 0.22 ) }
    dend_27 { pt3dadd( 93.206, 109.876, -16.2373, 0.22 ) }
    dend_27 { pt3dadd( 93.771, 110.226, -16.0318, 0.22 ) }
    dend_27 { pt3dadd( 94.3308, 110.528, -15.8502, 0.29 ) }
    dend_27 { pt3dadd( 95.1648, 110.954, -15.5938, 0.22 ) }
    dend_27 { pt3dadd( 95.6631, 111.22, -15.4478, 1.4 ) }
    dend_27 { pt3dadd( 96.1872, 111.54, -15.2947, 2.21 ) }
    dend_27 { pt3dadd( 96.5477, 111.818, -15.1746, 1.7 ) }
    dend_27 { pt3dadd( 97.0017, 112.255, -14.9803, 0.96 ) }
    dend_27 { pt3dadd( 97.5079, 112.806, -14.697, 0.96 ) }
    dend_27 { pt3dadd( 97.7962, 113.126, -14.5066, 1.47 ) }
    dend_27 { pt3dadd( 98.1067, 113.452, -14.2927, 1.47 ) }
    dend_27 { pt3dadd( 98.7328, 114.067, -13.8628, 0.22 ) }
    dend_27 { pt3dadd( 99.138, 114.445, -13.6051, 0.22 ) }
    dend_27 { pt3dadd( 99.5664, 114.849, -13.3574, 0.22 ) }
    dend_27 { pt3dadd( 99.9928, 115.252, -13.1554, 0.22 ) }
    dend_27 { pt3dadd( 100.362, 115.591, -13.0136, 0.22 ) }
    dend_27 { pt3dadd( 100.643, 115.851, -12.9447, 0.88 ) }
    dend_27 { pt3dadd( 101.072, 116.25, -12.8897, 1.99 ) }
    dend_27 { pt3dadd( 101.683, 116.831, -12.8692, 1.55 ) }
    dend_27 { pt3dadd( 102.4, 117.553, -12.8989, 0.22 ) }
    dend_27 { pt3dadd( 102.923, 118.092, -12.9351, 0.22 ) }
    dend_27 { pt3dadd( 103.624, 118.784, -12.9954, 0.29 ) }
    dend_27 { pt3dadd( 104.062, 119.196, -13.0394, 0.59 ) }
    dend_27 { pt3dadd( 104.754, 119.785, -13.1439, 0.96 ) }
    dend_27 { pt3dadd( 105.571, 120.403, -13.3034, 0.15 ) }
    dend_27 { pt3dadd( 106.265, 120.88, -13.4472, 1.18 ) }
    dend_27 { pt3dadd( 107.16, 121.461, -13.636, 1.18 ) }
    dend_27 { pt3dadd( 107.926, 121.932, -13.7938, 1.4 ) }
    dend_27 { pt3dadd( 109.033, 122.585, -14.0193, 0.22 ) }
    dend_27 { pt3dadd( 109.536, 122.882, -14.124, 0.37 ) }
    dend_27 { pt3dadd( 110.067, 123.213, -14.2278, 1.03 ) }
    dend_27 { pt3dadd( 110.306, 123.379, -14.2693, 0.88 ) }
    dend_27 { pt3dadd( 110.638, 123.633, -14.305, 0.74 ) }
    dend_27 { pt3dadd( 111.104, 124.001, -14.3218, 0.96 ) }
    dend_27 { pt3dadd( 111.739, 124.588, -14.2882, 0.22 ) }
    dend_27 { pt3dadd( 112.307, 125.144, -14.2629, 0.96 ) }
    dend_27 { pt3dadd( 112.611, 125.433, -14.2637, 0.74 ) }
    dend_27 { pt3dadd( 113.145, 125.908, -14.2601, 0.22 ) }
    dend_27 { pt3dadd( 113.679, 126.364, -14.2536, 0.29 ) }
    dend_27 { pt3dadd( 114.473, 127.023, -14.2467, 0.29 ) }
    dend_27 { pt3dadd( 115.025, 127.457, -14.2565, 0.29 ) }
    dend_27 { pt3dadd( 115.888, 128.12, -14.3104, 0.22 ) }
    dend_27 { pt3dadd( 116.318, 128.452, -14.3503, 0.66 ) }
    dend_27 { pt3dadd( 116.672, 128.743, -14.3901, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_27 { pt3dadd( 116.897, 128.923, -14.4203, 1.55 ) }
    dend_27 { pt3dadd( 117.737, 129.567, -14.5596, 0.15 ) }
    dend_27 { pt3dadd( 118.392, 130.098, -14.6797, 0.15 ) }
    dend_27 { pt3dadd( 118.947, 130.581, -14.7979, 0.15 ) }
    dend_27 { pt3dadd( 119.411, 131.009, -14.9306, 0.15 ) }
    dend_27 { pt3dadd( 119.833, 131.42, -15.0636, 0.15 ) }
    dend_27 { pt3dadd( 120.159, 131.771, -15.1628, 0.88 ) }
    dend_27 { pt3dadd( 120.559, 132.24, -15.2817, 1.18 ) }
    dend_27 { pt3dadd( 121.031, 132.848, -15.421, 1.18 ) }
    dend_27 { pt3dadd( 121.71, 133.731, -15.6189, 0.22 ) }
    dend_27 { pt3dadd( 122.433, 134.644, -15.8205, 0.22 ) }
    dend_27 { pt3dadd( 122.879, 135.235, -15.9439, 1.18 ) }
    dend_27 { pt3dadd( 123.093, 135.523, -15.9995, 1.92 ) }
    dend_27 { pt3dadd( 123.444, 136.005, -16.0792, 1.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 56.3946, 67.847, -13.8402, 0.44 ) }
    dend_26 { pt3dadd( 57.0327, 68.0458, -13.9583, 0.44 ) }
    dend_26 { pt3dadd( 57.7144, 68.2627, -14.0758, 0.44 ) }
    dend_26 { pt3dadd( 58.0569, 68.3523, -14.1262, 0.96 ) }
    dend_26 { pt3dadd( 58.8289, 68.508, -14.2215, 1.7 ) }
    dend_26 { pt3dadd( 59.5153, 68.6301, -14.3013, 1.99 ) }
    dend_26 { pt3dadd( 60.5464, 68.7946, -14.4286, 1.11 ) }
    dend_26 { pt3dadd( 61.2381, 68.8876, -14.5341, 0.37 ) }
    dend_26 { pt3dadd( 61.8704, 68.9638, -14.6678, 0.37 ) }
    dend_26 { pt3dadd( 62.6391, 69.0535, -14.8711, 0.37 ) }
    dend_26 { pt3dadd( 63.1143, 69.1163, -15.038, 0.37 ) }
    dend_26 { pt3dadd( 63.56, 69.1825, -15.2287, 0.44 ) }
    dend_26 { pt3dadd( 64.1986, 69.2799, -15.5491, 0.96 ) }
    dend_26 { pt3dadd( 64.9919, 69.4052, -15.9988, 1.62 ) }
    dend_26 { pt3dadd( 65.7839, 69.5476, -16.4419, 1.18 ) }
    dend_26 { pt3dadd( 66.8451, 69.7562, -16.9933, 0.29 ) }
    dend_26 { pt3dadd( 67.4034, 69.8603, -17.243, 0.44 ) }
    dend_26 { pt3dadd( 67.8285, 69.9348, -17.3966, 0.59 ) }
    dend_26 { pt3dadd( 68.5021, 70.0394, -17.5911, 0.29 ) }
    dend_26 { pt3dadd( 69.4228, 70.184, -17.7964, 0.29 ) }
    dend_26 { pt3dadd( 70.4862, 70.3752, -17.9821, 0.59 ) }
    dend_26 { pt3dadd( 71.2188, 70.5544, -18.0867, 1.03 ) }
    dend_26 { pt3dadd( 72.0956, 70.8368, -18.2029, 1.7 ) }
    dend_26 { pt3dadd( 72.924, 71.1555, -18.3091, 1.7 ) }
    dend_26 { pt3dadd( 73.9197, 71.5558, -18.4339, 0.96 ) }
    dend_26 { pt3dadd( 74.5162, 71.7865, -18.5236, 1.33 ) }
    dend_26 { pt3dadd( 75.6361, 72.2091, -18.6999, 1.62 ) }
    dend_26 { pt3dadd( 76.5239, 72.5476, -18.8623, 0.52 ) }
    dend_26 { pt3dadd( 77.2081, 72.8096, -18.9978, 0.22 ) }
    dend_26 { pt3dadd( 77.9389, 73.0923, -19.1534, 0.22 ) }
    dend_26 { pt3dadd( 78.8565, 73.4387, -19.3801, 0.22 ) }
    dend_26 { pt3dadd( 79.5496, 73.7219, -19.5788, 0.74 ) }
    dend_26 { pt3dadd( 80.1709, 74.0185, -19.7829, 1.33 ) }
    dend_26 { pt3dadd( 80.7092, 74.3496, -19.9859, 1.77 ) }
    dend_26 { pt3dadd( 81.4929, 74.9533, -20.3134, 0.44 ) }
    dend_26 { pt3dadd( 82.2049, 75.6165, -20.6293, 0.22 ) }
    dend_26 { pt3dadd( 82.7636, 76.187, -20.8793, 0.66 ) }
    dend_26 { pt3dadd( 83.2043, 76.6246, -21.0746, 0.29 ) }
    dend_26 { pt3dadd( 83.5938, 76.982, -21.2384, 0.29 ) }
    dend_26 { pt3dadd( 83.8449, 77.1746, -21.3361, 0.22 ) }
    dend_26 { pt3dadd( 84.196, 77.395, -21.452, 0.22 ) }
    dend_26 { pt3dadd( 84.7247, 77.6662, -21.5974, 0.52 ) }
    dend_26 { pt3dadd( 85.3729, 77.9279, -21.7656, 0.88 ) }
    dend_26 { pt3dadd( 85.943, 78.1162, -21.9262, 0.88 ) }
    dend_26 { pt3dadd( 86.5979, 78.3219, -22.1221, 0.22 ) }
    dend_26 { pt3dadd( 87.1832, 78.5234, -22.2924, 0.22 ) }
    dend_26 { pt3dadd( 87.4726, 78.6336, -22.376, 0.52 ) }
    dend_26 { pt3dadd( 87.9888, 78.8434, -22.5237, 1.4 ) }
    dend_26 { pt3dadd( 88.6811, 79.1152, -22.7353, 1.18 ) }
    dend_26 { pt3dadd( 89.7443, 79.5093, -23.0812, 0.22 ) }
    dend_26 { pt3dadd( 90.5092, 79.7908, -23.365, 0.59 ) }
    dend_26 { pt3dadd( 91.0738, 79.9946, -23.5819, 0.22 ) }
    dend_26 { pt3dadd( 91.7126, 80.2466, -23.8394, 0.88 ) }
    dend_26 { pt3dadd( 92.5234, 80.6197, -24.1793, 1.55 ) }
    dend_26 { pt3dadd( 92.8276, 80.7858, -24.3177, 1.55 ) }
    dend_26 { pt3dadd( 93.8336, 81.4341, -24.8388, 0.88 ) }
    dend_26 { pt3dadd( 94.3012, 81.7728, -25.1057, 0.44 ) }
    dend_26 { pt3dadd( 94.7257, 82.105, -25.3543, 0.22 ) }
    dend_26 { pt3dadd( 95.1552, 82.433, -25.6058, 0.22 ) }
    dend_26 { pt3dadd( 95.6076, 82.7705, -25.8666, 0.37 ) }
    dend_26 { pt3dadd( 96.1056, 83.1154, -26.1457, 1.11 ) }
    dend_26 { pt3dadd( 96.7554, 83.5274, -26.4909, 1.18 ) }
    dend_26 { pt3dadd( 97.3626, 83.9003, -26.8011, 0.29 ) }
    dend_26 { pt3dadd( 98.2047, 84.3984, -27.2125, 0.22 ) }
    dend_26 { pt3dadd( 98.6713, 84.6656, -27.4226, 0.22 ) }
    dend_26 { pt3dadd( 99.1531, 84.9468, -27.6137, 1.11 ) }
    dend_26 { pt3dadd( 99.5017, 85.163, -27.7277, 1.18 ) }
    dend_26 { pt3dadd( 100.216, 85.6524, -27.9024, 0.29 ) }
    dend_26 { pt3dadd( 100.89, 86.1088, -28.014, 0.29 ) }
    dend_26 { pt3dadd( 101.32, 86.3814, -28.0605, 1.03 ) }
    dend_26 { pt3dadd( 101.905, 86.696, -28.1029, 1.92 ) }
    dend_26 { pt3dadd( 102.316, 86.8873, -28.1447, 1.92 ) }
    dend_26 { pt3dadd( 103.629, 87.4182, -28.3393, 0.15 ) }
    dend_26 { pt3dadd( 104.314, 87.6491, -28.4668, 0.15 ) }
    dend_26 { pt3dadd( 104.72, 87.7771, -28.5463, 0.37 ) }
    dend_26 { pt3dadd( 105.295, 87.9621, -28.6661, 1.11 ) }
    dend_26 { pt3dadd( 106.262, 88.2773, -28.8672, 1.47 ) }
    dend_26 { pt3dadd( 107.202, 88.565, -29.0659, 0.44 ) }
    dend_26 { pt3dadd( 108.193, 88.8446, -29.2774, 0.22 ) }
    dend_26 { pt3dadd( 108.981, 89.0552, -29.443, 0.74 ) }
    dend_26 { pt3dadd( 109.612, 89.1913, -29.5629, 0.88 ) }
    dend_26 { pt3dadd( 110.7, 89.2983, -29.7575, 0.22 ) }
    dend_26 { pt3dadd( 111.21, 89.2726, -29.8362, 0.22 ) }
    dend_26 { pt3dadd( 111.708, 89.1639, -29.9194, 0.44 ) }
    dend_26 { pt3dadd( 112.192, 88.9971, -30.0087, 0.81 ) }
    dend_26 { pt3dadd( 112.78, 88.7544, -30.123, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_26 { pt3dadd( 113.734, 88.3648, -30.3117, 0.81 ) }
    dend_26 { pt3dadd( 114.513, 88.073, -30.4537, 0.22 ) }
    dend_26 { pt3dadd( 115.071, 87.9122, -30.5529, 0.22 ) }
    dend_26 { pt3dadd( 115.538, 87.8402, -30.642, 0.22 ) }
    dend_26 { pt3dadd( 116.445, 87.8303, -30.8251, 0.37 ) }
    dend_26 { pt3dadd( 117.444, 87.9515, -31.0417, 0.22 ) }
    dend_26 { pt3dadd( 117.808, 88.0423, -31.1333, 0.96 ) }
    dend_26 { pt3dadd( 118.459, 88.2702, -31.3337, 1.84 ) }
    dend_26 { pt3dadd( 119.682, 88.8012, -31.7936, 0.22 ) }
    dend_26 { pt3dadd( 120.24, 89.0987, -32.049, 0.22 ) }
    dend_26 { pt3dadd( 120.464, 89.2549, -32.172, 0.22 ) }
    dend_26 { pt3dadd( 120.858, 89.6146, -32.4156, 0.22 ) }
    dend_26 { pt3dadd( 121.219, 90.0057, -32.6483, 0.44 ) }
    dend_26 { pt3dadd( 121.71, 90.5722, -32.9471, 1.18 ) }
    dend_26 { pt3dadd( 122.141, 91.0476, -33.1777, 1.62 ) }
    dend_26 { pt3dadd( 122.587, 91.4868, -33.3797, 1.7 ) }
    dend_26 { pt3dadd( 123.307, 92.1714, -33.6443, 1.25 ) }
    dend_26 { pt3dadd( 124.254, 93.0109, -33.9272, 0.29 ) }
    dend_26 { pt3dadd( 124.86, 93.4697, -34.0823, 1.03 ) }
    dend_26 { pt3dadd( 125.403, 93.8174, -34.2205, 1.47 ) }
    dend_26 { pt3dadd( 126.448, 94.3802, -34.4813, 0.22 ) }
    dend_26 { pt3dadd( 127.293, 94.7689, -34.7002, 0.88 ) }
    dend_26 { pt3dadd( 127.935, 95.0301, -34.8701, 0.44 ) }
    dend_26 { pt3dadd( 128.884, 95.4142, -35.1338, 0.22 ) }
    dend_26 { pt3dadd( 129.564, 95.7187, -35.3244, 0.22 ) }
    dend_26 { pt3dadd( 130.093, 95.9841, -35.4711, 1.03 ) }
    dend_26 { pt3dadd( 130.719, 96.3387, -35.6339, 1.47 ) }
    dend_26 { pt3dadd( 131.254, 96.6967, -35.7712, 1.25 ) }
    dend_26 { pt3dadd( 132.049, 97.3418, -35.987, 0.52 ) }
    dend_26 { pt3dadd( 132.903, 98.1391, -36.2381, 0.37 ) }
    dend_26 { pt3dadd( 133.344, 98.5644, -36.3859, 1.03 ) }
    dend_26 { pt3dadd( 133.597, 98.805, -36.4919, 1.4 ) }
    dend_26 { pt3dadd( 134.369, 99.5159, -36.8718, 0.96 ) }
    dend_26 { pt3dadd( 134.892, 99.9464, -37.1694, 0.81 ) }
    dend_26 { pt3dadd( 135.675, 100.523, -37.6574, 0.22 ) }
    dend_26 { pt3dadd( 136.158, 100.832, -37.9745, 0.22 ) }
    dend_26 { pt3dadd( 136.575, 101.063, -38.2317, 0.74 ) }
    dend_26 { pt3dadd( 136.894, 101.229, -38.4099, 0.81 ) }
    dend_26 { pt3dadd( 137.512, 101.564, -38.7147, 0.22 ) }
    dend_26 { pt3dadd( 137.816, 101.757, -38.8511, 0.22 ) }
    dend_26 { pt3dadd( 138.26, 102.08, -39.0593, 0.88 ) }
    dend_26 { pt3dadd( 138.935, 102.638, -39.3762, 1.33 ) }
    dend_26 { pt3dadd( 139.474, 103.149, -39.6503, 1.7 ) }
    dend_26 { pt3dadd( 140.137, 103.86, -40.0115, 1.47 ) }
    dend_26 { pt3dadd( 140.837, 104.707, -40.4206, 0.22 ) }
    dend_26 { pt3dadd( 141.248, 105.244, -40.6726, 0.22 ) }
    dend_26 { pt3dadd( 141.699, 105.921, -40.9775, 0.29 ) }
    dend_26 { pt3dadd( 141.977, 106.452, -41.1919, 0.15 ) }
    dend_26 { pt3dadd( 142.14, 106.866, -41.3357, 0.15 ) }
    dend_26 { pt3dadd( 142.319, 107.494, -41.5178, 0.59 ) }
    dend_26 { pt3dadd( 142.456, 108.108, -41.6735, 0.37 ) }
    dend_26 { pt3dadd( 142.631, 108.934, -41.8989, 0.22 ) }
    dend_26 { pt3dadd( 142.822, 109.809, -42.1769, 0.22 ) }
    dend_26 { pt3dadd( 142.93, 110.237, -42.3298, 1.11 ) }
    dend_26 { pt3dadd( 143.163, 111.106, -42.6832, 0.22 ) }
    dend_26 { pt3dadd( 143.337, 111.749, -42.9758, 0.07 ) }
    dend_26 { pt3dadd( 143.492, 112.362, -43.2522, 0.07 ) }
    dend_26 { pt3dadd( 143.585, 112.739, -43.4027, 0.88 ) }
    dend_26 { pt3dadd( 143.653, 113.053, -43.4989, 1.11 ) }
    dend_26 { pt3dadd( 143.742, 113.722, -43.6054, 0.81 ) }
    dend_26 { pt3dadd( 143.785, 114.441, -43.6007, 0.37 ) }
    dend_26 { pt3dadd( 143.814, 115.461, -43.4628, 0.15 ) }
    dend_26 { pt3dadd( 143.836, 116.309, -43.2587, 0.15 ) }
    dend_26 { pt3dadd( 143.853, 117.039, -43.0138, 0.15 ) }
    dend_26 { pt3dadd( 143.886, 117.718, -42.7472, 0.59 ) }
    dend_26 { pt3dadd( 143.945, 118.688, -42.3047, 0.29 ) }
    dend_26 { pt3dadd( 143.978, 119.203, -42.0324, 0.66 ) }
    dend_26 { pt3dadd( 144.029, 119.794, -41.6844, 1.47 ) }
    dend_26 { pt3dadd( 144.121, 120.713, -41.1114, 0.22 ) }
    dend_26 { pt3dadd( 144.197, 121.371, -40.6989, 0.15 ) }
    dend_26 { pt3dadd( 144.313, 122.075, -40.2647, 0.15 ) }
    dend_26 { pt3dadd( 144.408, 122.57, -39.9647, 0.44 ) }
    dend_26 { pt3dadd( 144.509, 123.029, -39.7104, 0.44 ) }
    dend_26 { pt3dadd( 144.685, 123.729, -39.3466, 0.22 ) }
    dend_26 { pt3dadd( 144.762, 124.041, -39.1993, 0.15 ) }
    dend_26 { pt3dadd( 144.861, 124.698, -38.8929, 0.15 ) }
    dend_26 { pt3dadd( 144.879, 124.956, -38.7809, 0.15 ) }
    dend_26 { pt3dadd( 144.851, 125.345, -38.6159, 0.44 ) }
    dend_26 { pt3dadd( 144.8, 125.645, -38.4838, 0.44 ) }
    dend_26 { pt3dadd( 144.636, 126.518, -38.0736, 0.15 ) }
    dend_26 { pt3dadd( 144.548, 127.133, -37.7678, 0.22 ) }
    dend_26 { pt3dadd( 144.502, 127.549, -37.5555, 0.29 ) }
    dend_26 { pt3dadd( 144.516, 128.231, -37.2289, 0.29 ) }
    dend_26 { pt3dadd( 144.604, 128.765, -37.0098, 0.74 ) }
    dend_26 { pt3dadd( 144.809, 129.404, -36.7977, 0.66 ) }
    dend_26 { pt3dadd( 145.064, 129.97, -36.6556, 1.55 ) }
    dend_26 { pt3dadd( 145.224, 130.278, -36.6032, 1.55 ) }
    dend_26 { pt3dadd( 145.78, 131.232, -36.5282, 0.15 ) }
    dend_26 { pt3dadd( 146.217, 131.912, -36.522, 0.22 ) }
    dend_26 { pt3dadd( 146.646, 132.558, -36.5465, 0.22 ) }
    dend_26 { pt3dadd( 146.924, 132.965, -36.5799, 0.22 ) }
    dend_26 { pt3dadd( 147.317, 133.507, -36.6464, 0.37 ) }
    dend_26 { pt3dadd( 148.112, 134.549, -36.8066, 0.22 ) }
    dend_26 { pt3dadd( 148.812, 135.469, -36.9431, 0.15 ) }
    dend_26 { pt3dadd( 149.131, 135.899, -36.9874, 1.18 ) }
    dend_26 { pt3dadd( 149.505, 136.432, -37.017, 2.21 ) }
    dend_26 { pt3dadd( 149.637, 136.632, -37.0202, 2.21 ) }
    dend_26 { pt3dadd( 150.302, 137.792, -36.9742, 0.22 ) }
    dend_26 { pt3dadd( 150.704, 138.69, -36.8878, 0.22 ) }
    dend_26 { pt3dadd( 151.049, 139.687, -36.7767, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_26 { pt3dadd( 151.144, 140.024, -36.737, 0.66 ) }
    dend_26 { pt3dadd( 151.2, 140.273, -36.7118, 1.25 ) }
    dend_26 { pt3dadd( 151.361, 141.115, -36.6544, 1.62 ) }
    dend_26 { pt3dadd( 151.511, 142.147, -36.6255, 0.22 ) }
    dend_26 { pt3dadd( 151.648, 143.2, -36.6754, 0.22 ) }
    dend_26 { pt3dadd( 151.693, 143.609, -36.7172, 0.37 ) }
    dend_26 { pt3dadd( 151.765, 144.22, -36.7997, 0.88 ) }
    dend_26 { pt3dadd( 151.817, 144.692, -36.8692, 0.88 ) }
    dend_26 { pt3dadd( 151.862, 145.372, -36.9872, 0.22 ) }
    dend_26 { pt3dadd( 151.86, 146.152, -37.1173, 0.15 ) }
    dend_26 { pt3dadd( 151.822, 146.767, -37.1916, 0.15 ) }
    dend_26 { pt3dadd( 151.776, 147.069, -37.2647, 0.52 ) }
    dend_26 { pt3dadd( 151.649, 147.713, -37.4637, 0.88 ) }
    dend_26 { pt3dadd( 151.484, 148.457, -37.7228, 0.22 ) }
    dend_26 { pt3dadd( 151.366, 148.975, -37.9332, 0.22 ) }
    dend_26 { pt3dadd( 151.064, 150.23, -38.4473, 0.15 ) }
    dend_26 { pt3dadd( 150.618, 152.371, -39.3063, 0.22 ) }
    dend_26 { pt3dadd( 150.507, 153.039, -39.5682, 0.44 ) }
    dend_26 { pt3dadd( 150.436, 153.743, -39.8307, 0.22 ) }
    dend_26 { pt3dadd( 150.415, 154.492, -40.0825, 0.29 ) }
    dend_26 { pt3dadd( 150.436, 155.093, -40.2552, 0.22 ) }
    dend_26 { pt3dadd( 150.532, 156.121, -40.4698, 0.15 ) }
    dend_26 { pt3dadd( 150.612, 156.582, -40.4851, 0.15 ) }
    dend_26 { pt3dadd( 150.765, 157.397, -40.5073, 0.15 ) }
    dend_26 { pt3dadd( 150.863, 157.833, -40.5127, 0.29 ) }
    dend_26 { pt3dadd( 150.982, 158.262, -40.4987, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 26/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 30.1188, 60.791, 64.1265, 0.07 ) }
    dend_19 { pt3dadd( 29.9984, 61.363, 64.3228, 0.07 ) }
    dend_19 { pt3dadd( 29.9206, 61.894, 64.5193, 0.07 ) }
    dend_19 { pt3dadd( 29.8694, 62.9056, 64.9149, 0.07 ) }
    dend_19 { pt3dadd( 29.8664, 63.7587, 65.2262, 0.29 ) }
    dend_19 { pt3dadd( 29.8957, 64.4306, 65.4566, 0.07 ) }
    dend_19 { pt3dadd( 29.9942, 65.5228, 65.7941, 0.07 ) }
    dend_19 { pt3dadd( 30.0839, 66.0638, 65.9481, 0.52 ) }
    dend_19 { pt3dadd( 30.3694, 67.4234, 66.3212, 1.03 ) }
    dend_19 { pt3dadd( 30.7286, 68.8943, 66.7399, 0.15 ) }
    dend_19 { pt3dadd( 30.873, 69.4913, 66.9156, 0.15 ) }
    dend_19 { pt3dadd( 31.0309, 70.2377, 67.1387, 0.15 ) }
    dend_19 { pt3dadd( 31.1413, 70.9209, 67.3278, 0.15 ) }
    dend_19 { pt3dadd( 31.2048, 71.5332, 67.5222, 0.07 ) }
    dend_19 { pt3dadd( 31.2289, 72.0101, 67.7019, 0.07 ) }
    dend_19 { pt3dadd( 31.2635, 72.622, 67.9474, 0.44 ) }
    dend_19 { pt3dadd( 31.2916, 72.9713, 68.0955, 0.74 ) }
    dend_19 { pt3dadd( 31.3535, 73.3579, 68.2612, 0.74 ) }
    dend_19 { pt3dadd( 31.6764, 74.617, 68.7797, 0.15 ) }
    dend_19 { pt3dadd( 31.9238, 75.3796, 69.0758, 0.15 ) }
    dend_19 { pt3dadd( 32.2588, 76.3144, 69.4175, 0.37 ) }
    dend_19 { pt3dadd( 32.591, 77.1868, 69.7252, 1.7 ) }
    dend_19 { pt3dadd( 32.9461, 78.1515, 70.0466, 1.03 ) }
    dend_19 { pt3dadd( 33.4275, 79.4513, 70.4538, 0.15 ) }
    dend_19 { pt3dadd( 33.8739, 80.5866, 70.7966, 0.15 ) }
    dend_19 { pt3dadd( 34.0552, 81.0517, 70.9321, 0.66 ) }
    dend_19 { pt3dadd( 34.2944, 81.6398, 71.1049, 1.03 ) }
    dend_19 { pt3dadd( 34.7159, 82.6303, 71.3607, 0.15 ) }
    dend_19 { pt3dadd( 35.2498, 83.8192, 71.6386, 0.15 ) }
    dend_19 { pt3dadd( 35.6609, 84.6192, 71.8251, 0.15 ) }
    dend_19 { pt3dadd( 36.0161, 85.2595, 71.9633, 0.29 ) }
    dend_19 { pt3dadd( 36.3917, 85.9369, 72.0986, 0.29 ) }
    dend_19 { pt3dadd( 36.7016, 86.5773, 72.2255, 0.74 ) }
    dend_19 { pt3dadd( 37.0099, 87.3402, 72.4017, 0.81 ) }
    dend_19 { pt3dadd( 37.1761, 87.868, 72.5377, 0.81 ) }
    dend_19 { pt3dadd( 37.5115, 89.3336, 72.9542, 0.15 ) }
    dend_19 { pt3dadd( 37.6283, 90.0795, 73.232, 0.74 ) }
    dend_19 { pt3dadd( 37.7382, 91.6934, 73.9755, 0.15 ) }
    dend_19 { pt3dadd( 37.7034, 92.4713, 74.4353, 0.15 ) }
    dend_19 { pt3dadd( 37.5408, 93.1483, 74.9537, 0.15 ) }
    dend_19 { pt3dadd( 37.3395, 93.6196, 75.3875, 0.29 ) }
    dend_19 { pt3dadd( 36.8881, 94.3313, 76.2015, 0.15 ) }
    dend_19 { pt3dadd( 36.7228, 94.5304, 76.4641, 0.52 ) }
    dend_19 { pt3dadd( 36.1386, 95.0791, 77.3622, 1.4 ) }
    dend_19 { pt3dadd( 35.0434, 95.9671, 79.0224, 0.15 ) }
    dend_19 { pt3dadd( 34.7414, 96.1651, 79.4728, 0.15 ) }
    dend_19 { pt3dadd( 34.5972, 96.2407, 79.7046, 0.15 ) }
    dend_19 { pt3dadd( 33.9935, 96.4595, 80.7564, 0.81 ) }
    dend_19 { pt3dadd( 33.3656, 96.5649, 81.9377, 0.15 ) }
    dend_19 { pt3dadd( 33.1568, 96.5461, 82.3626, 0.15 ) }
    dend_19 { pt3dadd( 32.8553, 96.4658, 82.9806, 1.18 ) }
    dend_19 { pt3dadd( 31.986, 96.1849, 84.7233, 0.07 ) }
    dend_19 { pt3dadd( 31.3988, 95.9754, 85.8392, 0.07 ) }
    dend_19 { pt3dadd( 31.1126, 95.8766, 86.34, 0.59 ) }
    dend_19 { pt3dadd( 30.7978, 95.799, 86.8335, 1.77 ) }
    dend_19 { pt3dadd( 29.6978, 95.5859, 88.438, 0.07 ) }
    dend_19 { pt3dadd( 29.184, 95.5016, 89.1557, 0.07 ) }
    dend_19 { pt3dadd( 28.8307, 95.4436, 89.6038, 0.37 ) }
    dend_19 { pt3dadd( 28.4632, 95.3933, 90.032, 0.52 ) }
    dend_19 { pt3dadd( 27.6233, 95.2632, 91.0088, 0.07 ) }
    dend_19 { pt3dadd( 26.8111, 95.1427, 91.9155, 0.07 ) }
    dend_19 { pt3dadd( 26.4693, 95.0824, 92.2727, 0.07 ) }
    dend_19 { pt3dadd( 26.1874, 95.0219, 92.5646, 0.29 ) }
    dend_19 { pt3dadd( 25.5506, 94.8389, 93.2365, 0.66 ) }
    dend_19 { pt3dadd( 24.8203, 94.5397, 94.0347, 0.07 ) }
    dend_19 { pt3dadd( 24.2836, 94.2731, 94.6223, 0.29 ) }
    dend_19 { pt3dadd( 23.8061, 94.0237, 95.1513, 0.88 ) }
    dend_19 { pt3dadd( 22.8238, 93.5192, 96.3096, 0.15 ) }
    dend_19 { pt3dadd( 22.3376, 93.2679, 96.9269, 0.52 ) }
    dend_19 { pt3dadd( 21.3348, 92.7462, 98.2465, 0.07 ) }
    dend_19 { pt3dadd( 21.0104, 92.5852, 98.6738, 0.59 ) }
    dend_19 { pt3dadd( 20.5721, 92.367, 99.2636, 1.47 ) }
    dend_19 { pt3dadd( 19.5442, 91.8737, 100.669, 0.07 ) }
    dend_19 { pt3dadd( 19.1603, 91.691, 101.206, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( 18.5807, 91.4145, 102.028, 0.07 ) }
    dend_19 { pt3dadd( 18.4005, 91.3307, 102.278, 0.37 ) }
    dend_19 { pt3dadd( 18.0086, 91.1613, 102.786, 0.81 ) }
    dend_19 { pt3dadd( 17.2517, 90.8637, 103.713, 0.07 ) }
    dend_19 { pt3dadd( 16.6249, 90.6478, 104.409, 0.07 ) }
    dend_19 { pt3dadd( 16.2942, 90.5762, 104.753, 0.44 ) }
    dend_19 { pt3dadd( 15.9456, 90.536, 105.109, 0.88 ) }
    dend_19 { pt3dadd( 14.9609, 90.5135, 106.065, 0.15 ) }
    dend_19 { pt3dadd( 14.42, 90.5479, 106.556, 0.37 ) }
    dend_19 { pt3dadd( 14.1112, 90.5853, 106.814, 0.37 ) }
    dend_19 { pt3dadd( 12.8053, 90.7382, 107.82, 0.15 ) }
    dend_19 { pt3dadd( 12.373, 90.7822, 108.144, 0.15 ) }
    dend_19 { pt3dadd( 11.7131, 90.8562, 108.619, 0.37 ) }
    dend_19 { pt3dadd( 10.507, 90.9788, 109.445, 0.07 ) }
    dend_19 { pt3dadd( 9.72755, 91.0666, 109.968, 0.29 ) }
    dend_19 { pt3dadd( 9.02348, 91.1554, 110.446, 0.07 ) }
    dend_19 { pt3dadd( 8.32601, 91.2568, 110.92, 0.07 ) }
    dend_19 { pt3dadd( 6.83079, 91.4928, 111.934, 0.07 ) }
    dend_19 { pt3dadd( 4.8488, 91.8219, 113.281, 0.07 ) }
    dend_19 { pt3dadd( 4.21093, 91.9398, 113.716, 0.07 ) }
    dend_19 { pt3dadd( 3.30331, 92.125, 114.352, 0.07 ) }
    dend_19 { pt3dadd( 2.76591, 92.2492, 114.744, 0.59 ) }
    dend_19 { pt3dadd( 1.95751, 92.4317, 115.338, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 30.1188, 60.791, 64.1265, 0.37 ) }
    dend_18 { pt3dadd( 31.2022, 59.5513, 64.7422, 0.37 ) }
    dend_18 { pt3dadd( 31.9594, 58.7607, 65.0661, 0.37 ) }
    dend_18 { pt3dadd( 32.5096, 58.2412, 65.2477, 0.59 ) }
    dend_18 { pt3dadd( 33.4598, 57.3546, 65.4449, 0.22 ) }
    dend_18 { pt3dadd( 34.1401, 56.691, 65.5332, 0.22 ) }
    dend_18 { pt3dadd( 34.5985, 56.1788, 65.5781, 0.15 ) }
    dend_18 { pt3dadd( 35.0413, 55.6684, 65.6417, 0.15 ) }
    dend_18 { pt3dadd( 35.605, 54.9437, 65.6925, 0.15 ) }
    dend_18 { pt3dadd( 36.0798, 54.2247, 65.7339, 0.59 ) }
    dend_18 { pt3dadd( 36.3545, 53.6592, 65.7686, 0.88 ) }
    dend_18 { pt3dadd( 36.8883, 52.1558, 65.895, 0.15 ) }
    dend_18 { pt3dadd( 37.2005, 51.0399, 66.0698, 0.15 ) }
    dend_18 { pt3dadd( 37.3309, 50.4088, 66.1854, 0.44 ) }
    dend_18 { pt3dadd( 37.4169, 49.8, 66.311, 0.81 ) }
    dend_18 { pt3dadd( 37.5074, 48.8864, 66.5183, 0.07 ) }
    dend_18 { pt3dadd( 37.5813, 47.7674, 66.7572, 0.22 ) }
    dend_18 { pt3dadd( 37.6269, 46.5946, 66.9805, 0.22 ) }
    dend_18 { pt3dadd( 37.6635, 44.9504, 67.2478, 0.07 ) }
    dend_18 { pt3dadd( 37.6649, 43.5952, 67.4548, 0.07 ) }
    dend_18 { pt3dadd( 37.6647, 42.3106, 67.6342, 0.07 ) }
    dend_18 { pt3dadd( 37.6656, 41.5901, 67.709, 0.29 ) }
    dend_18 { pt3dadd( 37.668, 39.8414, 67.8641, 0.07 ) }
    dend_18 { pt3dadd( 37.6647, 39.0241, 67.9143, 0.88 ) }
    dend_18 { pt3dadd( 37.667, 37.9946, 67.98, 1.25 ) }
    dend_18 { pt3dadd( 37.6791, 37.324, 68.0115, 1.25 ) }
    dend_18 { pt3dadd( 37.7429, 35.1543, 68.0801, 0.07 ) }
    dend_18 { pt3dadd( 37.7834, 33.7204, 68.1122, 0.07 ) }
    dend_18 { pt3dadd( 37.8044, 32.9142, 68.1169, 0.07 ) }
    dend_18 { pt3dadd( 37.8148, 32.4408, 68.1177, 0.52 ) }
    dend_18 { pt3dadd( 37.8275, 31.175, 68.1118, 0.66 ) }
    dend_18 { pt3dadd( 37.8111, 30.5212, 68.1089, 0.22 ) }
    dend_18 { pt3dadd( 37.7647, 29.6639, 68.0961, 0.52 ) }
    dend_18 { pt3dadd( 37.6978, 28.9485, 68.0767, 0.29 ) }
    dend_18 { pt3dadd( 37.5349, 27.6074, 68.0602, 0.07 ) }
    dend_18 { pt3dadd( 37.3587, 26.4485, 68.0649, 0.07 ) }
    dend_18 { pt3dadd( 37.2125, 25.6006, 68.0898, 0.22 ) }
    dend_18 { pt3dadd( 37.0993, 25.0134, 68.1203, 0.22 ) }
    dend_18 { pt3dadd( 36.7722, 23.3848, 68.2194, 0.07 ) }
    dend_18 { pt3dadd( 36.6808, 22.9594, 68.2511, 0.37 ) }
    dend_18 { pt3dadd( 36.5704, 22.4655, 68.2954, 0.59 ) }
    dend_18 { pt3dadd( 36.3038, 21.3134, 68.4182, 0.07 ) }
    dend_18 { pt3dadd( 36.0856, 20.3792, 68.5331, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 66/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -25.5199, -76.334, 60.95, 0.15 ) }
    dend_16 { pt3dadd( -26.8207, -76.7368, 61.4007, 0.15 ) }
    dend_16 { pt3dadd( -28.1023, -77.1132, 61.8167, 0.15 ) }
    dend_16 { pt3dadd( -29.2834, -77.4467, 62.1671, 0.15 ) }
    dend_16 { pt3dadd( -30.4987, -77.7837, 62.5134, 0.37 ) }
    dend_16 { pt3dadd( -31.8442, -78.1465, 62.8834, 0.15 ) }
    dend_16 { pt3dadd( -33.2005, -78.4996, 63.2472, 0.07 ) }
    dend_16 { pt3dadd( -33.8845, -78.6772, 63.4341, 0.22 ) }
    dend_16 { pt3dadd( -35.9513, -79.2029, 63.9003, 0.15 ) }
    dend_16 { pt3dadd( -36.0982, -79.2354, 63.9292, 0.59 ) }
    dend_16 { pt3dadd( -37.0329, -79.4262, 64.1133, 1.11 ) }
    dend_16 { pt3dadd( -37.4555, -79.5134, 64.1966, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -25.5199, -76.334, 60.95, 0.59 ) }
    dend_15 { pt3dadd( -25.6328, -77.0455, 61.2105, 0.59 ) }
    dend_15 { pt3dadd( -25.7232, -77.5622, 61.4098, 0.96 ) }
    dend_15 { pt3dadd( -25.8155, -78.3676, 61.7063, 1.47 ) }
    dend_15 { pt3dadd( -25.8426, -78.9067, 61.8856, 1.47 ) }
    dend_15 { pt3dadd( -25.8372, -79.8739, 62.1845, 0.22 ) }
    dend_15 { pt3dadd( -25.8442, -80.236, 62.3058, 0.15 ) }
    dend_15 { pt3dadd( -25.8779, -80.5782, 62.4466, 0.15 ) }
    dend_15 { pt3dadd( -25.9564, -81.1587, 62.7188, 0.15 ) }
    dend_15 { pt3dadd( -26.0339, -81.6506, 62.9644, 0.37 ) }
    dend_15 { pt3dadd( -26.123, -82.1476, 63.2573, 0.37 ) }
    dend_15 { pt3dadd( -26.2942, -83.026, 63.8802, 0.22 ) }
    dend_15 { pt3dadd( -26.3894, -83.527, 64.287, 0.22 ) }
    dend_15 { pt3dadd( -26.4434, -83.823, 64.5404, 0.96 ) }
    dend_15 { pt3dadd( -26.5672, -84.5607, 65.2083, 2.06 ) }
    dend_15 { pt3dadd( -26.6654, -85.2686, 65.8805, 1.11 ) }
    dend_15 { pt3dadd( -26.7686, -86.2106, 66.7973, 0.22 ) }
    dend_15 { pt3dadd( -26.8096, -86.9376, 67.5052, 0.22 ) }
    dend_15 { pt3dadd( -26.8335, -87.2607, 67.8164, 0.22 ) }
    dend_15 { pt3dadd( -26.8622, -87.5179, 68.0626, 0.22 ) }
    dend_15 { pt3dadd( -26.8988, -87.7386, 68.2775, 0.22 ) }
    dend_15 { pt3dadd( -26.995, -88.0628, 68.57, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_15 { pt3dadd( -27.1628, -88.4155, 68.8673, 0.22 ) }
    dend_15 { pt3dadd( -27.4695, -88.9541, 69.3066, 0.22 ) }
    dend_15 { pt3dadd( -27.7362, -89.4304, 69.6677, 0.22 ) }
    dend_15 { pt3dadd( -27.9026, -89.7525, 69.8889, 0.66 ) }
    dend_15 { pt3dadd( -28.2071, -90.4301, 70.32, 1.11 ) }
    dend_15 { pt3dadd( -28.6199, -91.4477, 70.9476, 0.29 ) }
    dend_15 { pt3dadd( -28.9787, -92.3342, 71.4862, 0.22 ) }
    dend_15 { pt3dadd( -29.2795, -93.0741, 71.9388, 0.22 ) }
    dend_15 { pt3dadd( -29.4321, -93.4121, 72.1402, 0.29 ) }
    dend_15 { pt3dadd( -29.8286, -94.2517, 72.6273, 0.22 ) }
    dend_15 { pt3dadd( -30.0102, -94.6305, 72.8451, 0.96 ) }
    dend_15 { pt3dadd( -30.3281, -95.2724, 73.2104, 1.84 ) }
    dend_15 { pt3dadd( -30.8763, -96.3253, 73.8167, 0.29 ) }
    dend_15 { pt3dadd( -31.3407, -97.1415, 74.3311, 0.22 ) }
    dend_15 { pt3dadd( -31.6491, -97.6684, 74.6869, 0.22 ) }
    dend_15 { pt3dadd( -31.8393, -98.0008, 74.9165, 0.22 ) }
    dend_15 { pt3dadd( -31.999, -98.3337, 75.1367, 0.37 ) }
    dend_15 { pt3dadd( -32.2098, -98.9236, 75.4922, 0.52 ) }
    dend_15 { pt3dadd( -32.3935, -99.6462, 75.8463, 0.29 ) }
    dend_15 { pt3dadd( -32.5072, -100.297, 76.1291, 0.29 ) }
    dend_15 { pt3dadd( -32.5674, -100.685, 76.2701, 0.29 ) }
    dend_15 { pt3dadd( -32.6693, -101.453, 76.5236, 0.44 ) }
    dend_15 { pt3dadd( -32.7526, -102.359, 76.802, 0.52 ) }
    dend_15 { pt3dadd( -32.8284, -103.632, 77.1577, 0.15 ) }
    dend_15 { pt3dadd( -32.8519, -104.272, 77.3266, 0.59 ) }
    dend_15 { pt3dadd( -32.9017, -105.315, 77.6256, 1.7 ) }
    dend_15 { pt3dadd( -32.9956, -106.586, 78.0454, 0.15 ) }
    dend_15 { pt3dadd( -33.0546, -107.177, 78.282, 0.44 ) }
    dend_15 { pt3dadd( -33.0916, -107.58, 78.4611, 0.44 ) }
    dend_15 { pt3dadd( -33.1431, -108.151, 78.7481, 0.07 ) }
    dend_15 { pt3dadd( -33.1989, -108.642, 79.01, 0.07 ) }
    dend_15 { pt3dadd( -33.2687, -109.01, 79.2261, 0.07 ) }
    dend_15 { pt3dadd( -33.4078, -109.506, 79.5295, 0.29 ) }
    dend_15 { pt3dadd( -33.6888, -110.318, 80.0295, 0.52 ) }
    dend_15 { pt3dadd( -33.8977, -110.897, 80.3917, 0.22 ) }
    dend_15 { pt3dadd( -34.0779, -111.382, 80.7009, 0.22 ) }
    dend_15 { pt3dadd( -34.2806, -111.915, 81.0521, 0.37 ) }
    dend_15 { pt3dadd( -34.481, -112.421, 81.4179, 0.74 ) }
    dend_15 { pt3dadd( -34.8009, -113.132, 81.9891, 1.33 ) }
    dend_15 { pt3dadd( -35.1686, -113.815, 82.6026, 0.22 ) }
    dend_15 { pt3dadd( -35.4595, -114.295, 83.0554, 0.15 ) }
    dend_15 { pt3dadd( -35.6909, -114.652, 83.4059, 0.29 ) }
    dend_15 { pt3dadd( -36.0085, -115.136, 83.8955, 0.15 ) }
    dend_15 { pt3dadd( -36.273, -115.512, 84.2804, 0.59 ) }
    dend_15 { pt3dadd( -36.5612, -115.883, 84.6936, 0.74 ) }
    dend_15 { pt3dadd( -37.0109, -116.386, 85.28, 0.07 ) }
    dend_15 { pt3dadd( -37.4386, -116.842, 85.8273, 0.15 ) }
    dend_15 { pt3dadd( -37.7453, -117.162, 86.2155, 0.15 ) }
    dend_15 { pt3dadd( -37.9988, -117.426, 86.5293, 0.15 ) }
    dend_15 { pt3dadd( -38.2961, -117.722, 86.8708, 0.15 ) }
    dend_15 { pt3dadd( -38.7271, -118.137, 87.3295, 0.29 ) }
    dend_15 { pt3dadd( -39.0936, -118.461, 87.6821, 0.74 ) }
    dend_15 { pt3dadd( -39.658, -118.938, 88.1751, 1.03 ) }
    dend_15 { pt3dadd( -40.2251, -119.418, 88.6403, 0.29 ) }
    dend_15 { pt3dadd( -41.0155, -120.103, 89.2999, 0.22 ) }
    dend_15 { pt3dadd( -41.5078, -120.543, 89.6954, 0.88 ) }
    dend_15 { pt3dadd( -42.0629, -121.027, 90.1436, 1.33 ) }
    dend_15 { pt3dadd( -42.5561, -121.439, 90.5324, 1.47 ) }
    dend_15 { pt3dadd( -43.5035, -122.189, 91.2744, 0.22 ) }
    dend_15 { pt3dadd( -44.0019, -122.559, 91.6598, 0.22 ) }
    dend_15 { pt3dadd( -44.5789, -122.98, 92.1202, 1.03 ) }
    dend_15 { pt3dadd( -45.1981, -123.417, 92.61, 1.55 ) }
    dend_15 { pt3dadd( -46.0862, -124.054, 93.3188, 0.74 ) }
    dend_15 { pt3dadd( -46.9359, -124.719, 94.0473, 0.22 ) }
    dend_15 { pt3dadd( -47.3606, -125.1, 94.4277, 0.22 ) }
    dend_15 { pt3dadd( -47.7441, -125.469, 94.7684, 0.22 ) }
    dend_15 { pt3dadd( -48.1754, -125.931, 95.1726, 0.15 ) }
    dend_15 { pt3dadd( -48.5535, -126.422, 95.5496, 0.37 ) }
    dend_15 { pt3dadd( -48.9859, -127.138, 96.0411, 0.15 ) }
    dend_15 { pt3dadd( -49.2519, -127.714, 96.3862, 0.15 ) }
    dend_15 { pt3dadd( -49.5481, -128.516, 96.8471, 0.22 ) }
    dend_15 { pt3dadd( -49.6695, -128.892, 97.0518, 0.15 ) }
    dend_15 { pt3dadd( -49.8318, -129.477, 97.3676, 0.15 ) }
    dend_15 { pt3dadd( -49.907, -129.848, 97.5666, 0.74 ) }
    dend_15 { pt3dadd( -49.9615, -130.305, 97.8088, 0.88 ) }
    dend_15 { pt3dadd( -49.9749, -131.272, 98.3398, 0.15 ) }
    dend_15 { pt3dadd( -49.9699, -131.643, 98.5482, 0.22 ) }
    dend_15 { pt3dadd( -50.0219, -132.069, 98.8321, 0.22 ) }
    dend_15 { pt3dadd( -50.2004, -132.739, 99.3529, 0.22 ) }
    dend_15 { pt3dadd( -50.2682, -132.921, 99.5106, 0.22 ) }
    dend_15 { pt3dadd( -50.4565, -133.322, 99.8796, 0.88 ) }
    dend_15 { pt3dadd( -50.8317, -133.932, 100.458, 1.84 ) }
    dend_15 { pt3dadd( -51.495, -134.79, 101.304, 0.15 ) }
    dend_15 { pt3dadd( -51.9214, -135.284, 101.76, 0.15 ) }
    dend_15 { pt3dadd( -52.2631, -135.643, 102.056, 0.29 ) }
    dend_15 { pt3dadd( -52.7516, -136.193, 102.489, 0.74 ) }
    dend_15 { pt3dadd( -53.163, -136.704, 102.877, 1.11 ) }
    dend_15 { pt3dadd( -53.5242, -137.224, 103.259, 0.52 ) }
    dend_15 { pt3dadd( -54.0004, -137.971, 103.808, 0.22 ) }
    dend_15 { pt3dadd( -54.7662, -139.089, 104.711, 0.29 ) }
    dend_15 { pt3dadd( -55.374, -139.939, 105.477, 0.15 ) }
    dend_15 { pt3dadd( -55.7051, -140.394, 105.929, 0.37 ) }
    dend_15 { pt3dadd( -56.1285, -140.95, 106.552, 1.18 ) }
    dend_15 { pt3dadd( -56.6802, -141.689, 107.472, 0.44 ) }
    dend_15 { pt3dadd( -57.1478, -142.282, 108.348, 0.29 ) }
    dend_15 { pt3dadd( -57.4664, -142.684, 109.005, 0.15 ) }
    dend_15 { pt3dadd( -57.7341, -142.991, 109.523, 0.88 ) }
    dend_15 { pt3dadd( -58.1276, -143.437, 110.293, 1.03 ) }
    dend_15 { pt3dadd( -58.6558, -144.044, 111.403, 0.22 ) }
    dend_15 { pt3dadd( -59.1007, -144.617, 112.522, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -59.2976, -144.888, 113.077, 0.59 ) }
    dend_15 { pt3dadd( -59.5248, -145.191, 113.732, 0.96 ) }
    dend_15 { pt3dadd( -59.8491, -145.563, 114.646, 0.37 ) }
    dend_15 { pt3dadd( -60.2916, -145.978, 115.871, 0.15 ) }
    dend_15 { pt3dadd( -60.6652, -146.228, 116.853, 0.59 ) }
    dend_15 { pt3dadd( -60.8958, -146.345, 117.449, 1.77 ) }
    dend_15 { pt3dadd( -61.4837, -146.584, 118.96, 0.22 ) }
    dend_15 { pt3dadd( -61.8476, -146.72, 119.921, 0.22 ) }
    dend_15 { pt3dadd( -62.1257, -146.81, 120.609, 0.37 ) }
    dend_15 { pt3dadd( -62.4239, -146.909, 121.26, 0.37 ) }
    dend_15 { pt3dadd( -62.6668, -147.006, 121.762, 0.37 ) }
    dend_15 { pt3dadd( -62.9829, -147.155, 122.448, 0.81 ) }
    dend_15 { pt3dadd( -63.2243, -147.324, 123.065, 0.81 ) }
    dend_15 { pt3dadd( -63.5323, -147.727, 124.076, 0.29 ) }
    dend_15 { pt3dadd( -63.6517, -148.036, 124.708, 0.29 ) }
    dend_15 { pt3dadd( -63.6406, -148.303, 125.192, 0.29 ) }
    dend_15 { pt3dadd( -63.5822, -148.438, 125.436, 0.29 ) }
    dend_15 { pt3dadd( -63.2218, -148.927, 126.391, 0.29 ) }
    dend_15 { pt3dadd( -63.0418, -149.124, 126.774, 0.44 ) }
    dend_15 { pt3dadd( -62.6929, -149.491, 127.476, 0.44 ) }
    dend_15 { pt3dadd( -62.2614, -150.001, 128.471, 0.81 ) }
    dend_15 { pt3dadd( -61.9682, -150.432, 129.375, 0.81 ) }
    dend_15 { pt3dadd( -61.8113, -150.772, 130.109, 0.81 ) }
    dend_15 { pt3dadd( -61.7721, -150.966, 130.555, 0.22 ) }
    dend_15 { pt3dadd( -61.7672, -151.407, 131.621, 0.22 ) }
    dend_15 { pt3dadd( -61.8727, -151.901, 132.83, 0.22 ) }
    dend_15 { pt3dadd( -62.0474, -152.354, 133.904, 0.81 ) }
    dend_15 { pt3dadd( -62.2631, -152.802, 134.889, 0.52 ) }
    dend_15 { pt3dadd( -62.6683, -153.523, 136.296, 0.22 ) }
    dend_15 { pt3dadd( -62.88, -153.856, 136.866, 0.22 ) }
    dend_15 { pt3dadd( -63.0805, -154.127, 137.248, 0.52 ) }
    dend_15 { pt3dadd( -63.5264, -154.632, 137.799, 0.15 ) }
    dend_15 { pt3dadd( -63.7797, -154.874, 137.992, 0.59 ) }
    dend_15 { pt3dadd( -64.5208, -155.521, 138.359, 0.15 ) }
    dend_15 { pt3dadd( -65.1075, -155.995, 138.493, 0.37 ) }
    dend_15 { pt3dadd( -65.7872, -156.516, 138.573, 0.15 ) }
    dend_15 { pt3dadd( -66.4255, -156.941, 138.591, 0.37 ) }
    dend_15 { pt3dadd( -66.8641, -157.148, 138.549, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 38/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 123.444, 136.005, -16.0792, 0.96 ) }
    dend_31 { pt3dadd( 124.319, 136.819, -16.3066, 0.96 ) }
    dend_31 { pt3dadd( 124.919, 137.436, -16.4696, 1.25 ) }
    dend_31 { pt3dadd( 125.455, 138.053, -16.6232, 0.66 ) }
    dend_31 { pt3dadd( 125.78, 138.458, -16.72, 0.22 ) }
    dend_31 { pt3dadd( 126.17, 138.956, -16.8377, 0.15 ) }
    dend_31 { pt3dadd( 126.421, 139.269, -16.9127, 0.37 ) }
    dend_31 { pt3dadd( 126.928, 139.938, -17.0689, 0.15 ) }
    dend_31 { pt3dadd( 127.297, 140.399, -17.1795, 0.37 ) }
    dend_31 { pt3dadd( 127.583, 140.72, -17.2609, 0.88 ) }
    dend_31 { pt3dadd( 127.931, 141.061, -17.3764, 0.88 ) }
    dend_31 { pt3dadd( 128.735, 141.73, -17.7228, 0.22 ) }
    dend_31 { pt3dadd( 129.291, 142.154, -17.9689, 0.22 ) }
    dend_31 { pt3dadd( 129.86, 142.524, -18.2267, 0.22 ) }
    dend_31 { pt3dadd( 130.255, 142.75, -18.4128, 0.22 ) }
    dend_31 { pt3dadd( 131.095, 143.187, -18.8407, 1.25 ) }
    dend_31 { pt3dadd( 131.964, 143.598, -19.3501, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 123.444, 136.005, -16.0792, 0.29 ) }
    dend_28 { pt3dadd( 123.539, 137.016, -16.073, 0.29 ) }
    dend_28 { pt3dadd( 123.674, 137.502, -16.0965, 0.22 ) }
    dend_28 { pt3dadd( 123.822, 137.898, -16.1339, 0.66 ) }
    dend_28 { pt3dadd( 124.067, 138.476, -16.2102, 0.22 ) }
    dend_28 { pt3dadd( 124.325, 139.035, -16.297, 0.15 ) }
    dend_28 { pt3dadd( 124.562, 139.555, -16.3869, 0.15 ) }
    dend_28 { pt3dadd( 124.886, 140.202, -16.5361, 0.15 ) }
    dend_28 { pt3dadd( 125.244, 140.874, -16.7256, 0.22 ) }
    dend_28 { pt3dadd( 125.583, 141.476, -16.9216, 0.29 ) }
    dend_28 { pt3dadd( 125.879, 141.971, -17.0992, 0.22 ) }
    dend_28 { pt3dadd( 126.211, 142.464, -17.2929, 0.29 ) }
    dend_28 { pt3dadd( 126.744, 143.111, -17.5616, 0.22 ) }
    dend_28 { pt3dadd( 127.261, 143.658, -17.7964, 0.66 ) }
    dend_28 { pt3dadd( 127.577, 143.968, -17.9289, 1.11 ) }
    dend_28 { pt3dadd( 127.972, 144.347, -18.0934, 1.18 ) }
    dend_28 { pt3dadd( 128.522, 144.876, -18.3322, 0.37 ) }
    dend_28 { pt3dadd( 129.121, 145.458, -18.5966, 0.37 ) }
    dend_28 { pt3dadd( 129.591, 145.98, -18.8214, 0.22 ) }
    dend_28 { pt3dadd( 129.984, 146.565, -19.0438, 0.22 ) }
    dend_28 { pt3dadd( 130.217, 147.011, -19.2119, 0.22 ) }
    dend_28 { pt3dadd( 130.376, 147.389, -19.3483, 0.59 ) }
    dend_28 { pt3dadd( 130.472, 147.671, -19.4367, 1.03 ) }
    dend_28 { pt3dadd( 130.662, 148.309, -19.6121, 1.18 ) }
    dend_28 { pt3dadd( 131.031, 149.534, -19.8753, 0.44 ) }
    dend_28 { pt3dadd( 131.202, 150.062, -19.9729, 0.88 ) }
    dend_28 { pt3dadd( 131.395, 150.663, -20.0603, 1.7 ) }
    dend_28 { pt3dadd( 131.62, 151.366, -20.1388, 2.29 ) }
    dend_28 { pt3dadd( 131.825, 152.0, -20.1948, 2.29 ) }
    dend_28 { pt3dadd( 131.982, 152.472, -20.2142, 1.99 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 85/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 131.982, 152.472, -20.2142, 0.22 ) }
    dend_30 { pt3dadd( 133.266, 154.177, -20.7831, 0.22 ) }
    dend_30 { pt3dadd( 133.869, 154.977, -21.0502, 0.22 ) }
    dend_30 { pt3dadd( 134.507, 155.824, -21.3327, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 131.982, 152.472, -20.2142, 0.29 ) }
    dend_29 { pt3dadd( 133.027, 153.17, -20.2594, 0.29 ) }
    dend_29 { pt3dadd( 133.722, 153.633, -20.2894, 0.29 ) }
    dend_29 { pt3dadd( 134.422, 154.099, -20.3197, 0.29 ) }
    dend_29 { pt3dadd( 135.014, 154.494, -20.3453, 0.52 ) }
    dend_29 { pt3dadd( 135.618, 154.896, -20.3714, 0.52 ) }
    dend_29 { pt3dadd( 136.616, 155.562, -20.4146, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_58 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_62 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_63 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_61 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_60 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_53 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_48 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_42 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_68 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_67 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_65 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_64 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_57 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_54 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_49 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_3 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_25 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_33 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_27 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_58 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_11 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_47 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_66 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_46 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_16 OneSecGrp_SectionRef_67.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_45 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_56 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_55 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_31 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_28 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_29 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_51 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_4 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_5 OneSecGrp_SectionRef_59.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_62 nseg = 3
    dend_59 nseg = 9
    dend_63 nseg = 7
    dend_61 nseg = 7
    dend_60 nseg = 5
    dend_53 nseg = 3
    dend_48 nseg = 7
    dend_42 nseg = 5
    dend_68 nseg = 7
    dend_67 nseg = 9
    dend_65 nseg = 13
    dend_64 nseg = 9
    dend_57 nseg = 11
    dend_54 nseg = 3
    dend_50 nseg = 3
    dend_49 nseg = 5
    dend_43 nseg = 3
    dend_39 nseg = 7
    dend_38 nseg = 13
    dend_21 nseg = 7
    dend_12 nseg = 11
    dend_9 nseg = 5
    dend_8 nseg = 11
    dend_6 nseg = 15
    dend_3 nseg = 9
    dend_44 nseg = 3
    dend_32 nseg = 3
    dend_25 nseg = 3
    dend_23 nseg = 3
    dend_17 nseg = 5
    dend_14 nseg = 5
    dend_34 nseg = 11
    dend_33 nseg = 9
    dend_27 nseg = 5
    dend_26 nseg = 7
    dend_19 nseg = 5
    dend_18 nseg = 3
    dend_15 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_BTC_844c3bba88_0_0


