// Cell: cACint209_L6_BP_52bbfb0292_0_0
/*
{
  "id" : "cACint209_L6_BP_52bbfb0292_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.86497, 9.07459, 3.00835, 0.83", "-7.80096, 12.1253, 3.60196, 1.11", "-10.1217, 13.9228, 3.91074, 0.83", "-12.3763, 15.6541, 4.1874, 0.83", "-13.7112, 16.6412, 4.33901, 1.11", "-17.8916, 19.726, 4.8249, 1.11", "-25.3685, 25.0073, 5.68382, 0.83", "-28.0622, 26.8374, 5.96745, 0.83", "-30.1953, 28.2436, 6.14363, 0.83", "-32.2754, 29.6372, 6.29613, 0.83", "-33.9687, 30.7858, 6.37841, 0.55", "-35.2414, 31.5635, 6.46192, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.21807, 6.07633, -6.11201, 0.55", "6.33685, 6.53466, -6.58518, 0.55", "7.5663, 6.65036, -7.21127, 0.83", "9.51214, 6.77349, -8.37428, 0.55", "10.4514, 6.83293, -8.93569, 1.38", "12.7609, 6.97907, -10.316, 0.55", "13.7445, 6.92958, -10.9747, 0.83", "18.8328, 6.02201, -14.6753, 0.55", "19.325, 5.89996, -15.0824, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.682292, -10.3256, 3.17464, 1.11", "-0.727145, -14.2831, 4.59339, 1.11", "-0.745413, -15.8948, 5.17119, 0.83", "-0.769682, -18.0361, 5.93884, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.909155, 9.52775, -1.37003, 1.11", "1.04069, 11.2287, -1.36278, 1.11", "1.26041, 14.0036, -1.24925, 1.38", "1.27565, 14.1581, -1.2405, 1.38", "1.58109, 16.0647, -1.1271, 0.83", "1.99885, 18.0774, -0.90977, 0.83", "2.69828, 20.3412, -0.413564, 0.83", "3.0832, 21.1954, -0.132505, 0.83", "3.45337, 21.8107, 0.123581, 1.11", "4.51352, 23.3036, 0.770629, 0.55", "5.74397, 24.8573, 1.54698, 0.83", "7.32137, 26.4442, 2.40369, 0.55", "8.11348, 27.0984, 2.78148, 0.83", "9.22969, 27.9827, 3.38601, 0.55", "10.6244, 29.1083, 4.21978, 0.55", "12.5934, 30.8067, 5.51528, 0.55", "14.766, 32.7509, 6.94635, 0.55", "16.1628, 34.0127, 8.0449, 0.55", "17.9064, 35.6086, 9.62555, 0.55", "18.2727, 35.928, 9.98787, 0.83", "19.2494, 36.7715, 11.0173, 0.55", "20.0613, 37.4273, 11.8192, 0.83", "21.9482, 39.2313, 13.7277, 0.55", "22.6353, 39.8905, 14.2677, 0.83", "23.2535, 40.3725, 14.6137, 0.55", "23.8526, 40.7852, 14.8625, 0.83", "25.1593, 41.5458, 15.2838, 0.83", "26.8697, 42.584, 15.6965, 0.83", "27.9067, 43.2739, 15.8422, 0.55", "28.7005, 43.8746, 15.9577, 0.55", "30.7767, 45.4259, 16.2307, 0.83", "32.1107, 46.4206, 16.3552, 0.55", "34.1234, 47.876, 16.4649, 0.55", "35.9542, 49.0912, 16.4939, 0.55", "37.5841, 50.118, 16.4769, 0.55", "39.6282, 51.3163, 16.3638, 0.55", "40.867, 51.8952, 16.2545, 0.55", "41.6962, 52.2161, 16.0799, 0.55", "42.7783, 52.44, 15.7541, 0.55", "44.3657, 52.5055, 15.1324, 0.55", "45.3458, 52.4156, 14.7048, 0.55", "46.791, 52.2426, 14.185, 0.55", "49.5818, 52.0027, 13.4498, 0.55", "51.7969, 51.9175, 13.0326, 0.55", "54.1679, 51.94, 12.7322, 0.55", "55.7064, 52.006, 12.6598, 0.55", "59.7509, 52.5361, 12.7329, 0.55", "62.174, 53.0299, 12.9527, 0.55", "64.0173, 53.5148, 13.2822, 0.55", "65.149, 53.9876, 13.5243, 0.55", "66.4654, 54.7038, 13.7994, 0.55", "68.6751, 56.1299, 14.0788, 0.55", "69.1734, 56.4747, 14.0765, 0.55", "70.5882, 57.3938, 13.9787, 0.55", "71.8924, 58.3799, 13.8844, 0.83", "72.6029, 58.9274, 13.8221, 0.55", "73.6654, 59.8727, 13.688, 0.83", "79.4595, 64.9136, 14.4186, 0.83", "84.4944, 70.7528, 14.6829, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-35.2414, 31.5635, 6.46192, 0.55", "-36.7058, 32.3001, 5.73543, 0.55", "-38.2982, 33.1009, 4.94544, 0.55", "-40.22, 34.0674, 3.9921, 0.55", "-41.8068, 34.8655, 3.20491, 0.83", "-43.1365, 35.5343, 2.54523, 0.55", "-45.6047, 36.7756, 1.32079, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-35.2414, 31.5635, 6.46192, 0.55", "-37.8746, 31.9521, 6.40621, 0.55", "-40.6415, 32.3144, 6.6297, 0.55", "-43.7699, 32.7299, 6.95935, 0.55", "-48.2503, 33.3356, 7.85493, 0.55", "-51.964, 33.7668, 8.88539, 0.55", "-55.837, 34.1795, 10.1424, 0.55", "-59.523, 34.3715, 11.8017, 0.55", "-62.647, 34.2558, 13.5892, 0.55", "-66.4775, 33.8795, 16.293, 0.55", "-68.1088, 33.6162, 17.7343, 0.55", "-69.8603, 33.3218, 19.377, 0.55", "-72.9592, 32.5237, 22.1525, 0.55", "-74.6424, 32.0681, 23.3434, 0.55", "-76.4048, 31.5309, 24.5871, 0.55", "-78.5288, 30.8915, 25.8336, 0.55", "-80.8469, 30.2393, 27.1146, 0.55", "-84.1639, 29.2901, 28.8677, 0.55", "-88.6551, 28.2822, 30.7502, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "19.325, 5.89996, -15.0824, 0.55", "25.4828, 7.12955, -16.3677, 0.55", "29.0043, 7.70274, -17.6263, 0.55", "32.4655, 8.12162, -18.9399, 0.55", "34.8222, 8.31425, -19.8496, 0.55", "38.2601, 8.51278, -21.164, 0.55", "45.3754, 8.8184, -24.132, 0.55", "53.4322, 9.18923, -28.0447, 0.55", "57.3122, 9.16298, -30.2473, 0.55", "59.383, 9.11664, -31.5719, 0.55", "61.6527, 9.08999, -33.1161, 0.55", "65.6931, 8.92589, -35.8716, 0.55", "67.1518, 8.78587, -36.9342, 0.55", "73.3311, 8.41841, -41.8984, 0.55", "77.7047, 8.27588, -45.7334, 0.55", "80.2257, 8.25364, -48.0052, 0.55", "82.7381, 8.20858, -50.2722, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "19.325, 5.89996, -15.0824, 0.83", "21.9228, 6.92535, -14.9588, 0.83", "23.4055, 7.52489, -14.9492, 0.55", "25.5908, 8.49006, -15.0919, 0.83", "27.0649, 9.18184, -15.2198, 0.55", "29.1075, 10.1774, -15.3583, 0.83", "31.5739, 11.3974, -15.4342, 0.55", "32.8016, 11.9201, -15.4456, 0.55", "35.5707, 12.7411, -15.373, 0.83", "38.0439, 13.1418, -15.0722, 0.55", "39.4277, 13.323, -14.7839, 0.83", "41.5177, 13.5881, -14.1386, 0.55", "44.5391, 13.9327, -12.8456, 0.55", "48.705, 14.1684, -10.898, 0.55", "52.6612, 14.2023, -8.8172, 0.55", "55.7915, 14.1862, -7.12356, 0.55", "60.9568, 14.1755, -4.30104, 0.55", "64.7561, 14.2485, -2.13541, 0.55", "67.0838, 14.449, -0.708752, 0.55", "71.4422, 15.2037, 2.04754, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.769682, -18.0361, 5.93884, 0.83", "-0.76566, -20.6364, 5.83335, 0.83", "-0.761741, -23.1699, 5.73058, 0.83", "-0.757365, -25.9985, 5.61584, 0.83", "-0.755081, -27.4756, 5.55592, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.769682, -18.0361, 5.93884, 0.55", "-0.248232, -19.6299, 7.12188, 0.55", "0.184833, -21.5875, 8.63754, 0.55", "0.347014, -24.1652, 10.6894, 0.55", "0.336875, -25.1694, 11.5075, 0.83", "0.0469375, -27.7388, 13.8663, 0.55", "-0.214144, -29.069, 15.0994, 0.55", "-0.787109, -31.6572, 17.6017, 0.83", "-1.335, -33.5824, 19.5711, 0.55", "-1.92533, -35.1748, 21.1577, 0.55", "-3.10566, -38.1931, 24.1018, 0.55", "-4.04128, -40.5987, 26.4205, 0.55", "-4.75503, -42.5259, 28.31, 0.55", "-5.39456, -44.5687, 30.2625, 0.28", "-5.58658, -45.4175, 31.05, 0.55", "-5.89203, -46.9841, 32.4197, 0.28", "-6.0, -49.4201, 34.2101, 0.55", "-8.35787, -57.5848, 40.4193, 0.55", "-11.0068, -65.1376, 47.2541, 0.55", "-13.3523, -71.3371, 55.4297, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-45.6047, 36.7756, 1.32079, 0.55", "-46.797, 37.8179, 2.83371, 0.55", "-47.2411, 38.2795, 3.56116, 0.83", "-47.6896, 38.8552, 4.52195, 0.55", "-48.0002, 39.334, 5.30065, 0.83", "-48.8352, 40.6331, 7.29127, 0.55", "-49.1508, 41.138, 8.04183, 0.28", "-49.6295, 42.0499, 9.35242, 0.55", "-50.2773, 43.2767, 11.1005, 0.55", "-50.7971, 44.1755, 12.3906, 0.55", "-51.5172, 45.3454, 14.0798, 0.28", "-51.7304, 45.6219, 14.4831, 0.55", "-52.1899, 46.1831, 15.29, 0.28", "-52.5326, 46.5438, 15.792, 0.55", "-53.283, 47.2113, 16.7522, 0.28", "-53.7346, 47.5496, 17.3141, 0.55", "-54.5087, 48.0783, 18.3654, 0.28", "-55.0424, 48.4115, 19.0551, 0.55", "-57.0783, 51.456, 25.0069, 0.55", "-58.4473, 54.0975, 31.3305, 0.55", "-59.5553, 56.1657, 37.9133, 0.55", "-60.663, 57.3876, 44.7044, 0.55", "-60.7961, 59.1602, 51.463, 0.55", "-61.5487, 61.0554, 58.1473, 0.55", "-62.4488, 64.0256, 64.4089, 0.55", "-63.284, 66.4859, 70.8964, 0.55", "-63.991, 69.419, 77.2, 0.55", "-64.3066, 72.3408, 83.5406, 0.55", "-63.8028, 74.6406, 90.1206, 0.55", "-63.4026, 77.5486, 96.4626, 0.55", "-63.0707, 79.7757, 103.078, 0.55", "-61.8576, 81.8064, 109.654, 0.55", "-59.4981, 84.3247, 115.731, 0.55", "-57.1028, 85.539, 122.183, 0.55", "-53.8012, 86.5315, 128.262, 0.55", "-50.8147, 87.8781, 134.435, 0.55", "-48.5128, 89.7931, 140.749, 0.55", "-47.7162, 92.7111, 147.049, 0.55", "-46.2519, 94.9339, 153.511, 0.55", "-43.6014, 98.2186, 159.081, 0.55", "-42.0862, 101.978, 164.774, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-45.6047, 36.7756, 1.32079, 0.55", "-47.5888, 37.1128, -0.537937, 0.55", "-49.2193, 37.4854, -2.6922, 0.55", "-50.7888, 38.029, -5.02502, 0.55", "-51.7717, 38.3694, -6.48581, 0.55", "-53.5645, 38.9902, -9.15045, 0.83", "-54.8761, 39.4445, -11.0999, 0.55", "-56.4719, 40.0245, -13.9944, 0.83", "-57.1466, 40.4873, -15.6804, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-88.6551, 28.2822, 30.7502, 0.28", "-89.4288, 26.7334, 30.8363, 0.28", "-89.8085, 26.0567, 30.8259, 0.28", "-90.3062, 25.0956, 30.7725, 0.55", "-90.715, 24.2527, 30.7285, 0.28", "-91.3155, 22.9719, 30.6736, 0.55", "-92.9751, 19.2211, 30.5562, 0.28", "-93.5295, 17.8896, 30.4118, 0.55", "-94.3789, 15.8279, 30.1241, 0.28", "-94.8743, 14.5863, 29.8986, 0.55", "-95.2193, 13.7273, 29.7246, 0.28", "-95.6115, 12.7427, 29.5318, 0.55", "-96.7881, 9.47406, 28.9447, 0.28", "-97.1627, 8.47912, 28.7373, 0.55", "-97.8373, 6.92937, 28.2893, 0.28", "-98.3979, 5.91929, 27.9417, 0.28", "-98.8971, 5.23675, 27.7034, 0.55", "-100.612, 3.31939, 27.1222, 0.28", "-101.404, 2.54264, 26.9137, 0.55", "-103.352, 0.752374, 26.3605, 0.28", "-105.298, -0.844909, 25.8654, 0.28", "-107.415, -2.38874, 25.3581, 0.28", "-108.381, -2.9765, 25.183, 0.55", "-112.967, -9.03647, 24.0628, 0.55", "-117.857, -14.9523, 24.3989, 0.55", "-122.82, -20.7584, 23.5772, 0.55", "-128.025, -26.205, 22.0748, 0.55", "-133.415, -31.216, 19.8697, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-88.6551, 28.2822, 30.7502, 0.55", "-89.4904, 28.2062, 31.0236, 0.55", "-91.7994, 28.0798, 32.0984, 0.55", "-92.6578, 28.0225, 32.5554, 0.55", "-94.6661, 27.8333, 33.6791, 0.55", "-97.7816, 27.5319, 35.244, 0.55", "-99.4096, 27.4186, 36.014, 0.28", "-101.946, 27.1713, 37.177, 0.55", "-103.837, 26.9287, 37.9823, 0.55", "-104.634, 26.8212, 38.3256, 0.28", "-109.421, 26.1726, 40.3789, 0.55", "-111.67, 25.725, 41.2281, 0.28", "-114.732, 25.0592, 42.1973, 0.28", "-117.398, 24.4811, 42.868, 0.55", "-127.586, 24.374, 47.3142, 0.55", "-137.214, 24.3215, 52.8687, 0.55", "-145.997, 23.4927, 59.6321, 0.55", "-154.522, 24.6943, 66.6639, 0.55", "-161.375, 26.0862, 75.3049, 0.55", "-166.482, 28.5118, 84.8756, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "82.7381, 8.20858, -50.2722, 0.55", "86.6268, 9.51477, -53.2696, 0.55", "87.8447, 9.89529, -54.3042, 0.55", "89.3611, 10.3188, -55.5934, 0.55", "92.1038, 11.1042, -58.0966, 0.55", "94.9443, 11.8269, -60.8071, 0.55", "96.3149, 12.0624, -62.1249, 0.83", "97.4269, 12.2006, -63.3145, 0.55", "98.2439, 12.2561, -64.3072, 0.83", "100.159, 12.1419, -66.9125, 0.55", "101.707, 11.8942, -69.1086, 0.55", "103.489, 11.5718, -71.5419, 0.55", "105.482, 11.2857, -74.2799, 0.55", "106.812, 11.0689, -76.161, 0.55", "108.309, 10.8326, -78.3366, 0.55", "109.609, 10.7034, -80.3033, 0.55", "110.438, 10.7333, -81.6389, 0.55", "111.45, 10.9484, -84.2693, 0.55", "111.983, 11.0498, -85.9199, 0.55", "112.388, 11.1424, -88.1146, 0.55", "112.884, 11.2221, -91.838, 0.55", "112.975, 11.2132, -92.6837, 0.28", "114.179, 10.9803, -102.998, 0.28", "114.621, 10.9172, -106.027, 0.83", "116.412, 10.4756, -116.829, 0.83", "117.337, 10.0659, -121.899, 0.83", "117.798, 9.80783, -123.977, 0.55", "118.355, 9.53009, -126.012, 0.55", "120.036, 8.82612, -129.845, 0.55", "121.891, 8.11285, -133.246, 0.28", "122.498, 7.84207, -133.514, 0.55", "123.865, 7.21726, -133.574, 0.28", "124.726, 6.86042, -133.469, 0.55", "125.623, 6.45695, -133.285, 0.28", "126.712, 6.01417, -133.0, 0.55", "128.351, 5.48113, -132.729, 0.28", "129.658, 5.02399, -132.563, 0.55", "131.119, 4.6427, -132.473, 0.28", "133.101, 4.17494, -132.524, 0.55", "135.329, 3.73457, -132.701, 0.55", "137.289, 3.40269, -132.982, 0.28", "140.002, 3.00516, -133.513, 0.55", "144.7, 2.56987, -134.897, 0.55", "146.788, 2.5457, -135.732, 0.55", "147.689, 2.59561, -136.177, 0.83", "149.403, 2.74143, -137.177, 0.55", "150.599, 2.90815, -137.932, 0.83", "153.83, 3.448, -139.982, 0.55", "155.778, 3.65864, -141.315, 0.28", "156.592, 3.67448, -141.798, 0.55", "158.792, 3.45245, -142.922, 0.28", "159.552, 3.29097, -143.282, 0.55", "161.106, 2.7969, -143.801, 0.28", "162.668, 2.06676, -144.084, 0.55", "165.809, 0.272319, -144.121, 0.28", "167.25, -0.661734, -143.992, 0.55", "169.373, -2.20915, -143.711, 0.28", "172.06, -4.17874, -143.251, 0.55", "174.01, -5.58335, -142.878, 0.55", "177.408, -7.92032, -142.147, 0.28", "178.811, -8.7821, -141.951, 0.55", "181.248, -10.0556, -141.857, 0.28", "183.706, -11.0901, -141.893, 0.55", "185.076, -11.4547, -142.068, 0.28", "186.341, -11.5935, -142.283, 0.55", "189.939, -11.6945, -143.173, 0.28", "192.539, -11.5841, -143.807, 0.28", "194.827, -11.3222, -144.353, 0.55", "197.36, -10.9355, -145.061, 0.28", "198.006, -10.8054, -145.21, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "82.7381, 8.20858, -50.2722, 0.55", "83.1626, 6.17708, -52.0934, 0.55", "83.3555, 4.44255, -53.4968, 0.28", "83.5333, 2.8288, -54.6357, 0.55", "84.0985, -0.594105, -57.0906, 0.28", "84.1271, -0.80379, -57.2772, 0.55", "84.3085, -1.88698, -58.3551, 0.28", "84.3634, -2.75229, -59.4014, 0.55", "84.3585, -3.63288, -60.6103, 0.28", "84.3087, -4.82104, -62.3235, 0.55", "84.1825, -7.81587, -66.5579, 0.55", "84.0287, -10.534, -70.4739, 0.55", "83.8798, -12.7049, -73.6065, 0.55", "83.687, -14.8444, -76.6387, 0.55", "83.6356, -15.4018, -77.3939, 0.28", "83.6021, -16.0082, -78.1426, 0.55", "83.6494, -16.8675, -79.0925, 0.28", "83.9164, -18.4432, -80.6415, 0.55", "84.7252, -21.5633, -83.0893, 0.55", "85.1791, -23.269, -84.2454, 0.28", "85.5327, -24.9846, -85.4966, 0.55", "85.838, -27.3624, -87.3382, 0.28", "85.9508, -29.2671, -88.868, 0.55", "85.9874, -32.1078, -91.1567, 0.28", "86.0504, -35.0646, -93.4272, 0.55", "86.0796, -39.3481, -96.7621, 0.28", "86.0408, -41.6275, -98.5459, 0.55", "85.9589, -43.9472, -100.429, 0.28", "85.8606, -45.9656, -102.224, 0.28", "85.8288, -48.4555, -104.711, 0.55", "85.9795, -50.7829, -106.958, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "71.4422, 15.2037, 2.04754, 0.55", "74.352, 14.2067, 2.50124, 0.55", "76.4526, 13.4303, 2.61122, 0.55", "81.0352, 11.7163, 2.59351, 0.55", "83.0829, 10.9322, 2.38704, 0.55", "85.3241, 10.1447, 2.05018, 0.55", "88.3384, 9.17739, 1.38326, 0.55", "91.4933, 8.12058, 0.350647, 0.55", "93.1397, 7.57526, -0.394235, 0.55", "96.4725, 6.5434, -2.39263, 0.55", "98.0086, 6.08983, -3.36288, 0.55", "101.592, 4.97053, -5.7472, 0.55", "103.999, 4.10583, -7.35702, 0.55", "105.77, 3.4436, -8.45647, 0.83", "108.58, 2.26763, -10.1963, 0.55", "111.306, 0.952682, -11.8066, 0.83", "113.6, -0.29324, -13.1005, 0.55", "115.651, -1.38849, -14.128, 0.55", "116.831, -1.96706, -14.6321, 0.83", "119.591, -3.33409, -15.6488, 0.28", "120.978, -3.96813, -16.0495, 0.28", "122.301, -4.66021, -16.5267, 0.28", "123.738, -5.36592, -17.0429, 0.28", "126.046, -6.44034, -17.9134, 0.28", "126.978, -6.86521, -18.2317, 0.55", "129.218, -7.89503, -18.7527, 0.55", "133.25, -9.82512, -19.4786, 0.55", "134.361, -10.399, -19.6318, 0.55", "135.348, -10.9536, -19.7281, 0.83", "137.511, -12.1176, -19.7377, 0.55", "139.394, -13.1307, -19.713, 0.55", "141.175, -14.0814, -19.6794, 0.55", "142.547, -14.8364, -19.6995, 0.55", "144.688, -16.1768, -19.8729, 0.55", "147.157, -17.9724, -20.2703, 0.55", "150.888, -21.1925, -21.2693, 0.55", "152.861, -23.2799, -22.0254, 0.55", "154.497, -25.4192, -22.8419, 0.28", "154.957, -26.1845, -23.1433, 0.55", "155.886, -28.27, -23.9479, 0.28", "156.578, -30.5564, -24.7854, 0.55", "157.094, -33.384, -25.5931, 0.55", "157.456, -35.2594, -26.0398, 0.28", "157.594, -35.9284, -26.1672, 0.55", "157.967, -37.5988, -26.4637, 0.28", "158.5, -39.7873, -26.8027, 0.55", "159.975, -45.1116, -27.5074, 0.55", "160.763, -47.8102, -27.8128, 0.55", "161.501, -50.2893, -28.0733, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "71.4422, 15.2037, 2.04754, 0.55", "73.3701, 14.936, 3.48274, 0.55", "73.9885, 14.853, 3.90918, 0.55", "76.2778, 14.4508, 5.38235, 0.55", "78.8404, 14.0454, 7.07272, 0.55", "82.1227, 13.5055, 9.32443, 0.55", "83.0296, 13.3583, 9.94054, 0.55", "84.6476, 13.0355, 11.0199, 0.55", "86.4284, 12.732, 12.143, 0.55", "88.5084, 12.4499, 13.366, 0.55", "90.4725, 12.21, 14.5299, 0.55", "91.5577, 12.1335, 15.1272, 0.55", "92.8372, 12.0795, 15.8323, 0.55", "94.4267, 12.061, 16.6842, 0.83", "97.033, 12.0656, 17.8146, 0.55", "98.75, 12.016, 18.472, 0.83", "101.12, 11.8542, 19.2872, 0.55", "101.842, 11.7679, 19.5208, 0.55", "104.066, 11.3989, 20.1814, 0.55", "108.014, 10.5274, 21.1654, 0.55", "110.881, 9.74087, 21.7928, 0.55", "113.135, 9.00496, 22.3255, 0.55", "115.413, 8.1211, 22.928, 0.55", "115.891, 7.92176, 23.055, 0.28", "116.853, 7.47853, 23.3035, 0.83", "120.794, 5.59588, 24.3376, 0.55", "123.552, 4.29079, 25.006, 0.55", "125.824, 3.26921, 25.6238, 0.55", "127.181, 2.65255, 26.0058, 0.83", "128.252, 2.18261, 26.3112, 0.28", "129.223, 1.75943, 26.579, 0.55", "137.062, 0.166655, 30.1178, 0.55", "145.178, -2.55279, 31.9183, 0.55", "153.411, -4.29977, 34.2997, 0.55", "160.568, -7.38674, 38.2701, 0.55", "167.029, -11.5859, 42.4083, 0.55", "173.955, -16.7082, 43.9298, 0.55", "180.636, -22.3533, 43.8672, 0.55", "188.304, -26.5484, 43.5441, 0.55", "195.859, -30.9507, 43.7734, 0.55", "203.894, -34.4034, 43.6144, 0.55", "211.948, -37.6608, 44.6295, 0.55", "219.242, -42.3339, 45.8417, 0.55", "226.976, -45.6974, 48.1625, 0.55", "234.552, -47.9574, 51.9045, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-0.755081, -27.4756, 5.55592, 1.38", "2.45004, -30.5466, 4.88049, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.755081, -27.4756, 5.55592, 0.55", "-1.74648, -28.8124, 5.48174, 0.55", "-2.83093, -30.5177, 5.40056, 0.55", "-3.6862, -31.653, 5.3476, 0.55", "-4.39552, -32.6019, 5.18016, 0.55", "-5.9328, -34.5705, 4.65273, 0.55", "-7.01106, -35.8876, 4.24942, 0.55", "-7.96539, -37.0679, 3.85038, 0.55", "-10.4255, -39.9472, 2.82769, 0.55", "-13.3904, -43.2861, 1.62507, 0.55", "-15.6851, -45.8173, 0.649376, 0.55", "-17.145, -47.4773, 0.00307059, 0.55", "-18.8162, -49.4654, -0.73279, 0.55", "-20.9227, -52.3034, -1.63509, 0.55", "-22.1402, -54.3044, -2.13366, 0.55", "-23.6359, -57.171, -2.59853, 0.55", "-24.8136, -59.8472, -2.91524, 0.55", "-25.9743, -63.173, -3.21177, 0.55", "-27.0354, -67.0645, -3.43568, 0.55", "-27.5676, -70.0264, -3.50826, 0.55", "-27.7431, -71.4963, -3.43959, 0.55", "-27.9692, -74.9413, -3.07184, 0.55", "-28.1321, -78.1625, -2.63857, 0.55", "-28.1543, -81.4005, -1.94762, 0.55", "-28.1962, -83.2593, -1.45246, 0.55", "-28.3115, -89.0054, 0.291561, 0.55", "-28.3235, -89.4286, 0.427071, 0.55", "-28.3548, -92.0185, 1.32481, 0.55", "-28.6357, -96.6598, 3.01694, 0.55", "-28.7296, -98.2121, 3.49051, 0.55", "-28.8954, -100.64, 3.81271, 0.55", "-28.9139, -101.541, 3.73031, 0.55", "-28.7874, -104.582, 2.89696, 0.55", "-28.5559, -106.546, 1.95519, 0.55", "-28.0398, -109.67, -0.170323, 0.55", "-27.225, -113.483, -3.05053, 0.28", "-26.9964, -114.425, -3.88863, 0.55", "-26.6326, -115.852, -5.28492, 0.28", "-26.5787, -116.067, -5.50698, 0.55", "-26.3006, -117.246, -6.62256, 0.28", "-26.2426, -117.648, -6.91171, 0.55", "-26.0277, -119.739, -8.01694, 0.28", "-25.9829, -120.452, -8.38675, 0.55", "-25.8905, -122.515, -9.34209, 0.28", "-25.8587, -123.164, -9.64018, 0.55", "-25.7709, -125.406, -10.6343, 0.28", "-25.7247, -126.437, -11.0962, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-13.3523, -71.3371, 55.4297, 0.55", "-18.3134, -80.0295, 62.901, 0.55", "-24.601, -87.7305, 70.461, 0.55", "-30.4079, -96.2221, 77.5437, 0.55", "-36.3902, -104.775, 84.4031, 0.55", "-40.8513, -114.626, 90.6516, 0.55", "-45.3211, -124.064, 97.5021, 0.55", "-47.8734, -135.344, 102.219, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-13.3523, -71.3371, 55.4297, 0.55", "-13.3247, -79.3835, 63.7146, 0.55", "-12.3257, -88.6447, 70.5423, 0.55", "-13.1045, -98.2315, 76.9355, 0.55", "-14.2234, -108.464, 82.1726, 0.55", "-14.9362, -118.59, 87.6798, 0.55", "-15.7736, -128.29, 93.8927, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-57.1466, 40.4873, -15.6804, 0.83", "-57.2365, 41.1256, -17.1508, 0.83", "-57.4711, 42.7373, -20.4932, 0.55", "-57.5485, 43.464, -21.848, 0.83", "-57.6072, 44.2691, -23.222, 0.55", "-57.6261, 45.1567, -24.4719, 0.55", "-57.6117, 45.6294, -25.0266, 0.28", "-57.6025, 45.9783, -25.2913, 0.55", "-57.4608, 47.2406, -25.9136, 0.28", "-57.3789, 47.79, -26.1561, 0.55", "-57.0981, 49.7285, -26.9159, 0.28", "-56.903, 51.2841, -27.4565, 0.55", "-56.6969, 53.7431, -28.1974, 0.28", "-56.581, 55.9208, -28.7891, 0.28", "-56.5801, 57.1496, -29.0794, 0.55", "-56.6668, 58.609, -29.3995, 0.28", "-56.7506, 59.3097, -29.5311, 0.55", "-57.0539, 60.935, -29.8864, 0.28", "-57.3414, 62.0007, -30.1574, 0.28", "-57.6541, 63.0368, -30.448, 0.28", "-57.7987, 63.5831, -30.6093, 0.55", "-58.2772, 65.7735, -31.3442, 0.28", "-58.7683, 68.3502, -32.2848, 0.55", "-58.9254, 69.2386, -32.6167, 0.55", "-59.0926, 70.1364, -32.9266, 0.55", "-59.5589, 72.034, -33.5876, 0.55", "-59.9544, 73.2712, -34.0257, 0.28", "-60.1618, 73.7378, -34.1827, 0.55", "-60.8086, 75.0113, -34.5562, 0.28", "-61.5683, 76.3485, -34.9912, 0.55", "-62.8671, 78.2455, -35.6407, 0.28", "-63.5069, 79.0284, -35.9131, 0.28", "-64.5758, 80.0778, -36.3628, 0.55", "-65.7867, 81.1493, -36.8706, 0.28", "-66.0078, 81.3143, -36.9516, 0.55", "-66.8049, 81.8321, -37.2107, 0.28", "-69.5436, 83.4863, -38.0059, 0.55", "-73.3903, 85.4417, -39.125, 0.28", "-74.1115, 85.75, -39.3535, 0.55", "-76.1003, 86.5198, -39.9844, 0.28", "-76.9408, 86.8262, -40.2645, 0.28", "-77.6798, 87.0658, -40.5312, 0.55", "-79.8832, 87.4974, -41.3681, 0.28", "-81.4263, 87.6874, -41.8607, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-57.1466, 40.4873, -15.6804, 0.55", "-57.3819, 41.573, -16.11, 0.55", "-57.5238, 42.2323, -16.2993, 0.28", "-57.6944, 42.7392, -16.2994, 0.55", "-58.0863, 43.9031, -16.2995, 0.28", "-58.3615, 44.7206, -16.2997, 0.55", "-58.869, 46.2277, -16.2999, 0.28", "-59.1882, 47.0751, -16.1538, 0.55", "-60.3458, 49.2864, -15.0561, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-133.415, -31.216, 19.8697, 0.55", "-138.107, -38.1479, 19.8396, 0.55", "-141.488, -45.7933, 19.4052, 0.55", "-144.308, -53.3537, 17.1771, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-133.415, -31.216, 19.8697, 0.55", "-137.478, -36.3409, 18.5429, 0.55", "-140.941, -41.6523, 16.461, 0.55", "-144.144, -47.0733, 14.2496, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-166.482, 28.5118, 84.8756, 0.55", "-171.654, 29.9216, 89.6371, 0.55", "-177.461, 31.6654, 93.4642, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-166.482, 28.5118, 84.8756, 0.55", "-174.181, 27.8641, 89.275, 0.55", "-181.983, 28.6682, 93.4611, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "85.9795, -50.7829, -106.958, 0.28", "92.7044, -55.0467, -120.124, 0.28", "93.3841, -55.5275, -121.297, 0.55", "94.5318, -56.3394, -123.277, 0.28", "95.4981, -57.023, -124.944, 0.28", "96.7772, -57.9279, -127.15, 0.55", "98.4637, -59.1209, -130.06, 0.55", "100.912, -61.0998, -131.617, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "85.9795, -50.7829, -106.958, 0.55", "86.7092, -52.0578, -108.392, 0.55", "86.9251, -52.6418, -109.018, 0.28", "87.2371, -53.649, -110.107, 0.55", "87.9244, -55.8677, -112.507, 0.28", "88.4007, -57.4054, -114.17, 0.55", "89.2077, -60.0106, -116.988, 0.28", "90.0702, -63.207, -120.686, 0.28", "90.3979, -64.6842, -122.411, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "161.501, -50.2893, -28.0733, 0.28", "162.812, -52.8482, -27.5679, 0.28", "164.451, -56.2194, -26.6338, 0.28", "165.482, -58.4035, -25.9429, 0.55", "166.124, -59.6197, -25.5049, 0.28", "166.464, -60.2738, -25.263, 0.28", "168.15, -63.5039, -24.1166, 0.55", "168.545, -64.2253, -23.7722, 0.28", "169.452, -66.109, -22.7412, 0.55", "170.219, -67.7437, -21.9104, 0.28", "170.903, -69.081, -21.26, 0.55", "171.698, -70.6773, -20.5778, 0.55", "172.956, -73.2118, -19.8005, 0.55", "173.256, -73.8326, -19.6313, 0.55", "174.316, -76.1421, -19.0242, 0.28", "174.718, -77.0815, -18.8001, 0.55", "175.297, -78.2904, -18.5182, 0.28", "176.111, -80.0056, -18.1932, 0.55", "177.474, -82.7201, -18.058, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "161.501, -50.2893, -28.0733, 0.55", "158.186, -49.9192, -27.801, 0.55", "155.494, -49.6187, -27.5799, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.45004, -30.5466, 4.88049, 0.83", "2.63677, -30.8634, 4.8862, 0.83", "4.67959, -33.6342, 5.20449, 0.83", "6.50447, -36.0583, 5.31454, 0.55", "7.96033, -37.9922, 5.40235, 0.55", "11.0548, -42.1028, 5.58898, 0.83", "14.8082, -47.0887, 5.81535, 0.55", "16.8335, -49.6932, 6.00294, 0.83", "20.3352, -53.8124, 6.56198, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.45004, -30.5466, 4.88049, 0.55", "1.85945, -31.3387, 2.71818, 0.55", "1.22552, -32.1889, 0.397212, 0.55", "0.477174, -33.1925, -2.34272, 0.55", "-0.431569, -34.4113, -5.66988, 0.55", "-0.947249, -35.1029, -7.55792, 0.55", "-1.05084, -35.2418, -7.93721, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-15.7736, -128.29, 93.8927, 0.55", "-15.8827, -138.85, 101.718, 0.55", "-13.9996, -149.963, 108.48, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-15.7736, -128.29, 93.8927, 0.55", "-16.4562, -138.751, 100.046, 0.55", "-17.7746, -149.023, 106.41, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-60.3458, 49.2864, -15.0561, 0.28", "-61.4657, 51.4102, -13.5637, 0.28", "-61.8686, 52.2358, -12.9209, 0.55", "-63.0048, 54.6388, -11.0226, 0.28", "-63.5944, 55.803, -10.1804, 0.55", "-65.2334, 58.9296, -7.98886, 0.28", "-66.8993, 62.1073, -5.76142, 0.55", "-69.6405, 67.1502, -1.97517, 0.28", "-70.224, 68.2317, -1.17008, 0.55", "-71.5278, 70.7157, 0.496213, 0.28", "-72.0357, 71.7356, 1.1375, 0.55", "-78.162, 78.8758, 7.47631, 0.55", "-85.6353, 86.5289, 11.2547, 0.55", "-91.6677, 94.8418, 16.0712, 0.55", "-96.3588, 104.402, 19.9834, 0.55", "-102.337, 113.355, 23.5588, 0.55", "-108.931, 120.942, 28.8167, 0.55", "-114.433, 128.118, 35.668, 0.55", "-118.552, 134.596, 44.0202, 0.55", "-122.791, 141.602, 51.8715, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-60.3458, 49.2864, -15.0561, 0.55", "-63.7749, 48.3998, -12.4581, 0.55", "-65.5541, 47.8721, -11.095, 0.28", "-66.8781, 47.4793, -10.0807, 0.55", "-67.9816, 47.152, -9.23533, 0.28", "-68.7545, 46.9228, -8.64318, 0.55", "-70.8858, 46.2906, -7.01037, 0.28", "-72.3355, 45.6849, -6.08669, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-144.308, -53.3537, 17.1771, 0.55", "-148.142, -62.5923, 19.6258, 0.55", "-151.722, -71.5679, 23.1843, 0.55", "-154.602, -81.277, 25.051, 0.55", "-158.467, -90.3092, 28.1376, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-144.308, -53.3537, 17.1771, 0.55", "-150.166, -58.2225, 11.3019, 0.55", "-155.904, -61.8019, 4.45976, 0.55", "-162.07, -66.5179, -1.22237, 0.55", "-169.926, -69.8601, -5.65653, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-144.144, -47.0733, 14.2496, 0.55", "-148.489, -52.4849, 9.52069, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-144.144, -47.0733, 14.2496, 0.55", "-147.463, -55.5186, 16.6845, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "100.912, -61.0998, -131.617, 0.28", "103.253, -62.4832, -133.154, 0.28", "104.34, -63.1258, -133.869, 0.55", "106.414, -64.3512, -135.23, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "100.912, -61.0998, -131.617, 0.55", "100.334, -61.7369, -133.342, 0.55", "99.1768, -63.0113, -136.792, 0.28", "98.8, -63.4264, -137.916, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "90.3979, -64.6842, -122.411, 0.28", "92.011, -68.8238, -126.068, 0.28", "92.8098, -70.8735, -127.879, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "90.3979, -64.6842, -122.411, 0.55", "88.8791, -65.5512, -121.371, 0.55", "84.6439, -67.9688, -118.472, 0.28", "83.6378, -68.5432, -117.783, 0.55", "80.8856, -70.1143, -115.899, 0.28", "79.1115, -71.127, -114.685, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "20.3352, -53.8124, 6.56198, 0.83", "20.3767, -54.0177, 6.54518, 0.83", "20.9537, -56.6989, 6.40411, 0.83", "21.1987, -58.7182, 6.41158, 0.83", "21.2796, -60.6725, 6.60827, 0.83", "21.2769, -63.2743, 7.05806, 0.83", "21.1807, -66.2749, 7.67944, 0.83", "21.0709, -69.6182, 8.55022, 0.83", "20.9511, -72.8605, 9.54642, 0.83", "20.5529, -76.8653, 10.653, 0.83", "20.279, -78.717, 11.0477, 0.83", "20.0759, -80.113, 11.2568, 0.83", "19.6352, -82.7978, 11.5966, 0.83", "19.3087, -85.2025, 11.7747, 0.83", "18.9403, -90.3285, 11.6135, 0.83", "18.8051, -93.1421, 11.1663, 0.83", "18.6965, -95.7413, 10.5674, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "20.3352, -53.8124, 6.56198, 0.55", "19.7587, -55.7499, 6.22398, 0.55", "19.2777, -57.1649, 6.06158, 0.55", "18.9523, -58.0734, 6.04656, 0.55", "18.4424, -59.4982, 6.17076, 0.55", "17.4189, -62.3244, 6.60377, 0.55", "16.53, -64.4801, 7.12571, 0.55", "15.7421, -66.2194, 7.70163, 0.55", "14.8587, -67.9876, 8.37068, 0.55", "14.0843, -69.4597, 8.98482, 0.28", "13.3649, -70.6749, 9.6268, 0.55", "11.8876, -72.9092, 11.0316, 0.55", "10.8614, -74.2938, 11.9838, 0.55", "10.2826, -75.0698, 12.5075, 0.55", "9.58171, -75.9859, 13.0675, 0.83", "7.55585, -78.694, 14.5704, 0.28", "6.89589, -79.5886, 15.0482, 0.55", "5.76654, -81.1966, 15.888, 0.28", "5.40422, -81.6943, 16.1767, 0.55", "4.61582, -82.8565, 16.8624, 0.28", "4.19074, -83.5142, 17.214, 0.55", "2.93151, -85.6308, 17.8266, 0.55", "-0.18441, -91.3506, 21.9388, 0.55", "-3.13852, -96.8113, 26.4983, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.05084, -35.2418, -7.93721, 0.55", "-2.42784, -36.1947, -10.545, 0.55", "-2.84785, -36.4267, -11.2856, 0.55", "-3.91926, -37.0127, -13.0882, 0.55", "-6.31528, -38.2006, -16.8943, 0.28", "-6.68193, -38.3674, -17.4302, 0.55", "-8.22725, -39.1258, -19.5879, 0.55", "-10.4173, -40.1805, -22.2782, 0.55", "-11.2661, -40.5516, -23.2818, 0.28", "-12.0313, -40.8156, -24.108, 0.28", "-13.3974, -41.2459, -25.31, 0.55", "-15.0565, -41.6765, -26.8455, 0.28", "-16.5971, -41.9198, -28.3011, 0.55", "-17.8083, -41.9954, -29.3991, 0.55", "-18.6442, -41.9667, -30.1835, 0.55", "-21.0947, -41.7525, -32.5683, 0.55", "-23.7115, -41.3308, -35.0216, 0.55", "-24.808, -41.0915, -36.0048, 0.28", "-25.8425, -40.8812, -36.9601, 0.55", "-27.9303, -40.6068, -38.8769, 0.28", "-28.6323, -40.5374, -39.5144, 0.83", "-29.9707, -40.3959, -40.6076, 0.28", "-30.96, -40.3807, -41.2616, 0.55", "-32.3981, -40.4139, -42.1818, 0.28", "-32.9766, -40.4203, -42.5285, 0.55", "-34.061, -40.4566, -43.1116, 0.55", "-35.7339, -40.3439, -43.926, 0.55", "-36.8489, -40.2045, -44.3952, 0.28", "-37.7762, -39.9846, -44.7014, 0.55", "-38.8823, -39.5954, -45.065, 0.28", "-39.0645, -39.5172, -45.1304, 0.55", "-40.6921, -38.7461, -46.0096, 0.28", "-41.8497, -38.157, -46.7702, 0.55", "-43.3426, -37.268, -47.9821, 0.83", "-44.5448, -36.4996, -49.1209, 0.28", "-44.848, -36.3018, -49.4471, 0.55", "-47.1385, -34.8153, -52.0891, 0.28", "-47.5288, -34.5603, -52.5947, 0.55", "-48.6715, -33.7152, -54.1665, 0.28", "-48.9658, -33.4978, -54.5747, 0.55", "-49.7358, -32.9342, -55.5632, 0.28", "-50.2911, -32.5298, -56.2248, 0.55", "-51.5796, -31.6377, -57.497, 0.28", "-52.3467, -31.168, -58.2223, 0.55", "-53.9953, -30.281, -59.6792, 0.28", "-54.4857, -30.0461, -60.1056, 0.55", "-55.2558, -29.7431, -60.7456, 0.28", "-55.9157, -29.4901, -61.2542, 0.55", "-57.3041, -28.9889, -62.2248, 0.28", "-57.7246, -28.8485, -62.5031, 0.55", "-60.8879, -27.7497, -64.4205, 0.28", "-62.0259, -27.2887, -64.9928, 0.55", "-64.0918, -26.3747, -65.8826, 0.28", "-65.0318, -25.9279, -66.2549, 0.55", "-67.2094, -24.9242, -66.9887, 0.28", "-68.0121, -24.5919, -67.2251, 0.55", "-70.9208, -23.6483, -67.9348, 0.28", "-72.1225, -23.402, -68.2225, 0.55", "-73.8162, -23.3261, -68.6185, 0.55", "-74.8564, -23.3459, -68.8385, 0.55", "-76.9983, -23.448, -69.1262, 0.28", "-79.123, -23.5748, -69.2787, 0.28", "-80.9005, -23.6762, -69.355, 0.55", "-83.1181, -23.6264, -69.2119, 0.28", "-84.2412, -23.4761, -68.9965, 0.55", "-86.9672, -22.7235, -68.2233, 0.28", "-88.4057, -22.0901, -67.5075, 0.55", "-89.3482, -21.5537, -66.8551, 0.28", "-90.4014, -20.9532, -65.887, 0.55", "-91.7161, -20.1606, -64.5254, 0.28", "-92.2147, -19.8865, -64.0155, 0.55", "-94.8073, -18.7033, -61.6751, 0.28", "-95.6815, -18.3384, -60.8956, 0.55", "-97.7509, -17.5509, -58.9927, 0.28", "-98.8748, -17.1366, -57.9598, 0.55", "-99.7995, -16.7978, -57.1126, 0.55", "-100.907, -16.4012, -56.1293, 0.28", "-101.495, -16.2006, -55.7121, 0.55", "-103.485, -15.4637, -54.43, 0.28", "-104.531, -14.9614, -53.7352, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-1.05084, -35.2418, -7.93721, 0.55", "-0.208612, -35.3276, -9.16754, 0.55", "0.662356, -35.2496, -10.3782, 0.55", "1.81304, -35.0207, -11.8276, 0.55", "2.79038, -34.7135, -12.9638, 0.55", "9.6325, -31.6803, -19.8797, 0.55", "11.1472, -30.7636, -21.4547, 0.55", "13.3366, -29.1914, -23.8266, 0.55", "14.874, -28.0069, -25.5146, 0.55", "16.3853, -26.7289, -27.1152, 0.28", "18.7738, -24.5748, -29.4367, 0.55", "22.4456, -21.2123, -32.6575, 0.28", "22.7281, -21.0051, -33.0337, 0.55", "24.038, -20.2921, -36.0246, 0.28", "24.5972, -19.9831, -38.1985, 0.55", "25.0018, -19.8422, -40.6181, 0.55", "25.6915, -19.8161, -44.9826, 0.55", "27.0746, -19.8228, -53.5448, 0.55", "28.1106, -19.8758, -59.2782, 0.55", "28.5222, -19.906, -61.2471, 0.55", "31.5197, -19.967, -74.1165, 0.55", "32.4714, -19.9157, -77.5638, 0.55", "33.1498, -19.8707, -79.4569, 0.55", "35.1259, -19.8353, -83.7327, 0.55", "40.5258, -20.238, -93.7238, 0.55", "42.1084, -20.4531, -96.3552, 0.28", "43.1308, -20.6365, -97.787, 0.55", "44.6977, -21.0046, -99.8827, 0.28", "45.4171, -21.2498, -100.698, 0.55", "48.1519, -22.3647, -102.547, 0.28", "50.5448, -23.9767, -102.659, 0.55", "51.9955, -25.1469, -102.634, 0.28", "53.3398, -26.4601, -102.452, 0.55", "54.5383, -27.9138, -102.189, 0.28", "55.0682, -28.6707, -102.092, 0.55", "56.3105, -30.6663, -101.77, 0.28", "56.6429, -31.265, -101.78, 0.55", "58.5483, -34.6955, -102.04, 0.28", "59.4943, -36.2738, -102.375, 0.55", "61.6775, -39.6241, -103.49, 0.28", "62.5486, -40.8493, -104.045, 0.55", "65.6027, -44.8488, -106.127, 0.28", "66.3555, -45.8195, -106.678, 0.55", "68.6543, -48.9016, -108.554, 0.28", "69.1422, -49.63, -108.936, 0.55", "70.3605, -51.5628, -109.931, 0.28", "71.0874, -52.6808, -110.626, 0.55", "71.8496, -53.7724, -111.401, 0.55", "73.3705, -55.9504, -112.929, 0.28", "74.4615, -57.2796, -114.037, 0.55", "77.974, -60.5027, -117.605, 0.28", "79.3466, -61.5191, -119.052, 0.55", "80.3065, -62.1537, -120.03, 0.28", "81.292, -62.7195, -121.003, 0.55", "84.3729, -64.2654, -123.937, 0.28", "86.7264, -65.4702, -126.092, 0.55", "90.8244, -67.8126, -129.451, 0.28", "92.117, -68.5395, -130.501, 0.55", "94.6427, -69.8609, -132.297, 0.28", "95.4971, -70.2925, -132.827, 0.55", "96.9218, -70.9795, -133.441, 0.28", "98.1905, -71.5529, -133.878, 0.55", "101.658, -72.9429, -134.72, 0.28", "105.638, -74.3862, -135.622, 0.28", "107.659, -75.0326, -135.941, 0.28", "109.688, -75.6237, -136.379, 0.55", "112.649, -76.3586, -137.029, 0.28", "113.967, -76.6669, -137.291, 0.83", "117.338, -77.4965, -137.837, 0.28", "118.796, -77.8867, -138.152, 0.55", "125.197, -79.8285, -139.824, 0.28", "128.38, -80.8332, -140.906, 0.28", "130.681, -81.5625, -141.838, 0.55", "132.008, -82.0136, -142.527, 0.55", "135.496, -83.2567, -144.628, 0.28", "138.743, -84.5632, -146.723, 0.55", "141.7, -85.8438, -148.633, 0.28", "144.356, -87.04, -150.5, 0.55", "146.554, -88.0026, -152.03, 0.28", "148.365, -88.6618, -153.184, 0.55", "152.762, -90.0076, -155.768, 0.28", "155.004, -90.6863, -156.987, 0.55", "158.389, -91.715, -158.698, 0.28", "161.168, -92.4786, -160.034, 0.55", "167.663, -93.9883, -163.168, 0.28", "170.281, -94.4567, -164.614, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.9996, -149.963, 108.48, 0.55", "-13.1664, -159.147, 113.602, 0.55", "-10.3251, -168.723, 116.998, 0.55", "-8.67567, -178.149, 121.439, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-13.9996, -149.963, 108.48, 0.55", "-12.9216, -159.741, 115.422, 0.55", "-13.2117, -168.03, 124.15, 0.55", "-13.1981, -174.365, 134.39, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-17.7746, -149.023, 106.41, 0.55", "-17.4781, -156.292, 111.026, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-17.7746, -149.023, 106.41, 0.55", "-18.789, -158.465, 111.765, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "18.6965, -95.7413, 10.5674, 0.83", "19.4276, -98.2201, 11.1325, 0.83", "20.1117, -100.295, 11.7816, 0.83", "20.7918, -102.357, 12.4268, 0.83", "21.4376, -104.316, 13.0395, 0.83", "22.4328, -107.335, 13.9838, 0.83", "23.4209, -110.331, 14.9213, 0.83", "24.1886, -112.291, 15.8304, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "18.6965, -95.7413, 10.5674, 0.55", "20.3993, -97.7586, 10.7702, 0.55", "21.7281, -99.3474, 10.6376, 0.55", "22.662, -100.532, 10.4136, 0.55", "23.5488, -101.947, 9.95444, 0.83", "24.46, -103.572, 9.2254, 0.55", "25.3512, -105.162, 8.51231, 0.83", "26.2293, -106.9, 7.57027, 0.55", "26.7427, -107.914, 6.92873, 0.83", "28.2819, -111.214, 4.5869, 0.55", "29.2872, -113.829, 2.57307, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-3.13852, -96.8113, 26.4983, 0.55", "-7.46553, -104.729, 30.1931, 0.55", "-13.1403, -111.748, 33.881, 0.55", "-19.5641, -117.899, 37.8774, 0.55", "-26.8475, -122.946, 41.9443, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-3.13852, -96.8113, 26.4983, 0.55", "-4.30279, -101.385, 30.0644, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "24.1886, -112.291, 15.8304, 0.55", "24.5771, -114.471, 16.5603, 0.55", "25.1658, -117.243, 17.5442, 0.55", "25.7191, -119.863, 18.4584, 0.55", "26.0841, -121.728, 19.0848, 0.55", "26.6859, -125.064, 20.1598, 0.55", "28.4652, -134.461, 22.9074, 0.55", "29.1145, -137.663, 23.6843, 0.55", "29.5546, -139.932, 24.1167, 0.55", "30.0301, -142.543, 24.3993, 0.55", "30.3226, -144.582, 24.4493, 0.55", "31.0993, -149.36, 24.3409, 0.55", "31.5644, -152.992, 24.2839, 0.55", "31.9485, -155.368, 24.2996, 0.55", "32.9965, -161.499, 24.6532, 0.55", "33.718, -165.603, 25.0763, 0.55", "34.7433, -170.865, 25.9085, 0.55", "36.0929, -176.786, 27.2887, 0.55", "37.2307, -180.708, 28.4102, 0.55", "37.9747, -183.016, 29.1212, 0.55", "38.6191, -185.148, 29.7805, 0.55", "39.4504, -187.857, 30.4757, 0.55", "41.2685, -194.437, 31.7266, 0.55", "42.0354, -196.989, 32.095, 0.55", "42.817, -199.836, 32.5029, 0.55", "43.9504, -204.114, 33.1021, 0.55", "44.677, -207.407, 33.632, 0.55", "45.1776, -210.546, 34.1403, 0.55", "45.523, -213.544, 34.6584, 0.55", "45.8208, -216.468, 35.2182, 0.55", "46.0403, -218.551, 35.5931, 0.55", "46.3925, -221.968, 36.0848, 0.55", "46.6848, -226.106, 36.3812, 0.55", "46.8425, -228.128, 36.3644, 0.55", "46.9686, -229.916, 36.2139, 0.55", "47.3103, -233.302, 35.6985, 0.55", "47.4922, -235.455, 35.3192, 0.55", "47.7681, -238.098, 34.9414, 0.55", "47.9201, -239.948, 34.8015, 0.55", "48.2745, -244.743, 34.6417, 0.55", "48.5132, -248.312, 34.794, 0.55", "48.8973, -253.796, 35.4952, 0.55", "49.2983, -257.299, 36.2584, 0.55", "49.7192, -260.967, 37.1857, 0.28", "49.8662, -262.436, 37.628, 0.28", "50.2823, -265.972, 39.0303, 0.28", "50.6977, -269.212, 40.5955, 0.28", "51.7549, -273.435, 43.0165, 0.28", "54.8277, -283.128, 45.6392, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "24.1886, -112.291, 15.8304, 0.55", "25.8098, -112.73, 16.3891, 0.55", "29.1229, -113.889, 17.7948, 0.55", "31.9743, -115.053, 19.1396, 0.28", "35.0244, -116.383, 20.6792, 0.55", "36.83, -117.219, 21.8563, 0.28", "39.9163, -118.712, 24.1929, 0.55", "41.1475, -119.507, 25.561, 0.28", "41.5754, -119.788, 26.144, 0.28", "42.3085, -120.166, 27.1531, 0.55", "45.2281, -121.351, 30.7937, 0.28", "46.486, -121.801, 32.2794, 0.55", "50.434, -123.126, 36.2546, 0.28", "52.6249, -123.766, 38.2311, 0.28", "55.4066, -124.612, 40.5197, 0.55", "59.6538, -125.98, 43.5416, 0.28", "60.2448, -126.165, 43.8852, 0.55", "63.2006, -127.083, 45.3745, 0.28", "63.4753, -127.171, 45.4803, 0.55", "65.8985, -128.273, 46.516, 0.28", "67.0416, -128.882, 47.086, 0.55", "76.4017, -133.297, 51.8058, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-26.8475, -122.946, 41.9443, 0.55", "-30.4286, -127.003, 48.1293, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-26.8475, -122.946, 41.9443, 0.55", "-32.0754, -130.405, 42.9652, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "axon_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "axon_1", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_BP_52bbfb0292_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.86497, 9.07459, 3.00835, 0.83 ) }
    dend_43 { pt3dadd( -7.80096, 12.1253, 3.60196, 1.11 ) }
    dend_43 { pt3dadd( -10.1217, 13.9228, 3.91074, 0.83 ) }
    dend_43 { pt3dadd( -12.3763, 15.6541, 4.1874, 0.83 ) }
    dend_43 { pt3dadd( -13.7112, 16.6412, 4.33901, 1.11 ) }
    dend_43 { pt3dadd( -17.8916, 19.726, 4.8249, 1.11 ) }
    dend_43 { pt3dadd( -25.3685, 25.0073, 5.68382, 0.83 ) }
    dend_43 { pt3dadd( -28.0622, 26.8374, 5.96745, 0.83 ) }
    dend_43 { pt3dadd( -30.1953, 28.2436, 6.14363, 0.83 ) }
    dend_43 { pt3dadd( -32.2754, 29.6372, 6.29613, 0.83 ) }
    dend_43 { pt3dadd( -33.9687, 30.7858, 6.37841, 0.55 ) }
    dend_43 { pt3dadd( -35.2414, 31.5635, 6.46192, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.21807, 6.07633, -6.11201, 0.55 ) }
    dend_28 { pt3dadd( 6.33685, 6.53466, -6.58518, 0.55 ) }
    dend_28 { pt3dadd( 7.5663, 6.65036, -7.21127, 0.83 ) }
    dend_28 { pt3dadd( 9.51214, 6.77349, -8.37428, 0.55 ) }
    dend_28 { pt3dadd( 10.4514, 6.83293, -8.93569, 1.38 ) }
    dend_28 { pt3dadd( 12.7609, 6.97907, -10.316, 0.55 ) }
    dend_28 { pt3dadd( 13.7445, 6.92958, -10.9747, 0.83 ) }
    dend_28 { pt3dadd( 18.8328, 6.02201, -14.6753, 0.55 ) }
    dend_28 { pt3dadd( 19.325, 5.89996, -15.0824, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.682292, -10.3256, 3.17464, 1.11 ) }
    dend_1 { pt3dadd( -0.727145, -14.2831, 4.59339, 1.11 ) }
    dend_1 { pt3dadd( -0.745413, -15.8948, 5.17119, 0.83 ) }
    dend_1 { pt3dadd( -0.769682, -18.0361, 5.93884, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.909155, 9.52775, -1.37003, 1.11 ) }
    dend_0 { pt3dadd( 1.04069, 11.2287, -1.36278, 1.11 ) }
    dend_0 { pt3dadd( 1.26041, 14.0036, -1.24925, 1.38 ) }
    dend_0 { pt3dadd( 1.27565, 14.1581, -1.2405, 1.38 ) }
    dend_0 { pt3dadd( 1.58109, 16.0647, -1.1271, 0.83 ) }
    dend_0 { pt3dadd( 1.99885, 18.0774, -0.90977, 0.83 ) }
    dend_0 { pt3dadd( 2.69828, 20.3412, -0.413564, 0.83 ) }
    dend_0 { pt3dadd( 3.0832, 21.1954, -0.132505, 0.83 ) }
    dend_0 { pt3dadd( 3.45337, 21.8107, 0.123581, 1.11 ) }
    dend_0 { pt3dadd( 4.51352, 23.3036, 0.770629, 0.55 ) }
    dend_0 { pt3dadd( 5.74397, 24.8573, 1.54698, 0.83 ) }
    dend_0 { pt3dadd( 7.32137, 26.4442, 2.40369, 0.55 ) }
    dend_0 { pt3dadd( 8.11348, 27.0984, 2.78148, 0.83 ) }
    dend_0 { pt3dadd( 9.22969, 27.9827, 3.38601, 0.55 ) }
    dend_0 { pt3dadd( 10.6244, 29.1083, 4.21978, 0.55 ) }
    dend_0 { pt3dadd( 12.5934, 30.8067, 5.51528, 0.55 ) }
    dend_0 { pt3dadd( 14.766, 32.7509, 6.94635, 0.55 ) }
    dend_0 { pt3dadd( 16.1628, 34.0127, 8.0449, 0.55 ) }
    dend_0 { pt3dadd( 17.9064, 35.6086, 9.62555, 0.55 ) }
    dend_0 { pt3dadd( 18.2727, 35.928, 9.98787, 0.83 ) }
    dend_0 { pt3dadd( 19.2494, 36.7715, 11.0173, 0.55 ) }
    dend_0 { pt3dadd( 20.0613, 37.4273, 11.8192, 0.83 ) }
    dend_0 { pt3dadd( 21.9482, 39.2313, 13.7277, 0.55 ) }
    dend_0 { pt3dadd( 22.6353, 39.8905, 14.2677, 0.83 ) }
    dend_0 { pt3dadd( 23.2535, 40.3725, 14.6137, 0.55 ) }
    dend_0 { pt3dadd( 23.8526, 40.7852, 14.8625, 0.83 ) }
    dend_0 { pt3dadd( 25.1593, 41.5458, 15.2838, 0.83 ) }
    dend_0 { pt3dadd( 26.8697, 42.584, 15.6965, 0.83 ) }
    dend_0 { pt3dadd( 27.9067, 43.2739, 15.8422, 0.55 ) }
    dend_0 { pt3dadd( 28.7005, 43.8746, 15.9577, 0.55 ) }
    dend_0 { pt3dadd( 30.7767, 45.4259, 16.2307, 0.83 ) }
    dend_0 { pt3dadd( 32.1107, 46.4206, 16.3552, 0.55 ) }
    dend_0 { pt3dadd( 34.1234, 47.876, 16.4649, 0.55 ) }
    dend_0 { pt3dadd( 35.9542, 49.0912, 16.4939, 0.55 ) }
    dend_0 { pt3dadd( 37.5841, 50.118, 16.4769, 0.55 ) }
    dend_0 { pt3dadd( 39.6282, 51.3163, 16.3638, 0.55 ) }
    dend_0 { pt3dadd( 40.867, 51.8952, 16.2545, 0.55 ) }
    dend_0 { pt3dadd( 41.6962, 52.2161, 16.0799, 0.55 ) }
    dend_0 { pt3dadd( 42.7783, 52.44, 15.7541, 0.55 ) }
    dend_0 { pt3dadd( 44.3657, 52.5055, 15.1324, 0.55 ) }
    dend_0 { pt3dadd( 45.3458, 52.4156, 14.7048, 0.55 ) }
    dend_0 { pt3dadd( 46.791, 52.2426, 14.185, 0.55 ) }
    dend_0 { pt3dadd( 49.5818, 52.0027, 13.4498, 0.55 ) }
    dend_0 { pt3dadd( 51.7969, 51.9175, 13.0326, 0.55 ) }
    dend_0 { pt3dadd( 54.1679, 51.94, 12.7322, 0.55 ) }
    dend_0 { pt3dadd( 55.7064, 52.006, 12.6598, 0.55 ) }
    dend_0 { pt3dadd( 59.7509, 52.5361, 12.7329, 0.55 ) }
    dend_0 { pt3dadd( 62.174, 53.0299, 12.9527, 0.55 ) }
    dend_0 { pt3dadd( 64.0173, 53.5148, 13.2822, 0.55 ) }
    dend_0 { pt3dadd( 65.149, 53.9876, 13.5243, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 66.4654, 54.7038, 13.7994, 0.55 ) }
    dend_0 { pt3dadd( 68.6751, 56.1299, 14.0788, 0.55 ) }
    dend_0 { pt3dadd( 69.1734, 56.4747, 14.0765, 0.55 ) }
    dend_0 { pt3dadd( 70.5882, 57.3938, 13.9787, 0.55 ) }
    dend_0 { pt3dadd( 71.8924, 58.3799, 13.8844, 0.83 ) }
    dend_0 { pt3dadd( 72.6029, 58.9274, 13.8221, 0.55 ) }
    dend_0 { pt3dadd( 73.6654, 59.8727, 13.688, 0.83 ) }
    dend_0 { pt3dadd( 79.4595, 64.9136, 14.4186, 0.83 ) }
    dend_0 { pt3dadd( 84.4944, 70.7528, 14.6829, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -35.2414, 31.5635, 6.46192, 0.55 ) }
    dend_55 { pt3dadd( -36.7058, 32.3001, 5.73543, 0.55 ) }
    dend_55 { pt3dadd( -38.2982, 33.1009, 4.94544, 0.55 ) }
    dend_55 { pt3dadd( -40.22, 34.0674, 3.9921, 0.55 ) }
    dend_55 { pt3dadd( -41.8068, 34.8655, 3.20491, 0.83 ) }
    dend_55 { pt3dadd( -43.1365, 35.5343, 2.54523, 0.55 ) }
    dend_55 { pt3dadd( -45.6047, 36.7756, 1.32079, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -35.2414, 31.5635, 6.46192, 0.55 ) }
    dend_44 { pt3dadd( -37.8746, 31.9521, 6.40621, 0.55 ) }
    dend_44 { pt3dadd( -40.6415, 32.3144, 6.6297, 0.55 ) }
    dend_44 { pt3dadd( -43.7699, 32.7299, 6.95935, 0.55 ) }
    dend_44 { pt3dadd( -48.2503, 33.3356, 7.85493, 0.55 ) }
    dend_44 { pt3dadd( -51.964, 33.7668, 8.88539, 0.55 ) }
    dend_44 { pt3dadd( -55.837, 34.1795, 10.1424, 0.55 ) }
    dend_44 { pt3dadd( -59.523, 34.3715, 11.8017, 0.55 ) }
    dend_44 { pt3dadd( -62.647, 34.2558, 13.5892, 0.55 ) }
    dend_44 { pt3dadd( -66.4775, 33.8795, 16.293, 0.55 ) }
    dend_44 { pt3dadd( -68.1088, 33.6162, 17.7343, 0.55 ) }
    dend_44 { pt3dadd( -69.8603, 33.3218, 19.377, 0.55 ) }
    dend_44 { pt3dadd( -72.9592, 32.5237, 22.1525, 0.55 ) }
    dend_44 { pt3dadd( -74.6424, 32.0681, 23.3434, 0.55 ) }
    dend_44 { pt3dadd( -76.4048, 31.5309, 24.5871, 0.55 ) }
    dend_44 { pt3dadd( -78.5288, 30.8915, 25.8336, 0.55 ) }
    dend_44 { pt3dadd( -80.8469, 30.2393, 27.1146, 0.55 ) }
    dend_44 { pt3dadd( -84.1639, 29.2901, 28.8677, 0.55 ) }
    dend_44 { pt3dadd( -88.6551, 28.2822, 30.7502, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 19.325, 5.89996, -15.0824, 0.55 ) }
    dend_34 { pt3dadd( 25.4828, 7.12955, -16.3677, 0.55 ) }
    dend_34 { pt3dadd( 29.0043, 7.70274, -17.6263, 0.55 ) }
    dend_34 { pt3dadd( 32.4655, 8.12162, -18.9399, 0.55 ) }
    dend_34 { pt3dadd( 34.8222, 8.31425, -19.8496, 0.55 ) }
    dend_34 { pt3dadd( 38.2601, 8.51278, -21.164, 0.55 ) }
    dend_34 { pt3dadd( 45.3754, 8.8184, -24.132, 0.55 ) }
    dend_34 { pt3dadd( 53.4322, 9.18923, -28.0447, 0.55 ) }
    dend_34 { pt3dadd( 57.3122, 9.16298, -30.2473, 0.55 ) }
    dend_34 { pt3dadd( 59.383, 9.11664, -31.5719, 0.55 ) }
    dend_34 { pt3dadd( 61.6527, 9.08999, -33.1161, 0.55 ) }
    dend_34 { pt3dadd( 65.6931, 8.92589, -35.8716, 0.55 ) }
    dend_34 { pt3dadd( 67.1518, 8.78587, -36.9342, 0.55 ) }
    dend_34 { pt3dadd( 73.3311, 8.41841, -41.8984, 0.55 ) }
    dend_34 { pt3dadd( 77.7047, 8.27588, -45.7334, 0.55 ) }
    dend_34 { pt3dadd( 80.2257, 8.25364, -48.0052, 0.55 ) }
    dend_34 { pt3dadd( 82.7381, 8.20858, -50.2722, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 19.325, 5.89996, -15.0824, 0.83 ) }
    dend_29 { pt3dadd( 21.9228, 6.92535, -14.9588, 0.83 ) }
    dend_29 { pt3dadd( 23.4055, 7.52489, -14.9492, 0.55 ) }
    dend_29 { pt3dadd( 25.5908, 8.49006, -15.0919, 0.83 ) }
    dend_29 { pt3dadd( 27.0649, 9.18184, -15.2198, 0.55 ) }
    dend_29 { pt3dadd( 29.1075, 10.1774, -15.3583, 0.83 ) }
    dend_29 { pt3dadd( 31.5739, 11.3974, -15.4342, 0.55 ) }
    dend_29 { pt3dadd( 32.8016, 11.9201, -15.4456, 0.55 ) }
    dend_29 { pt3dadd( 35.5707, 12.7411, -15.373, 0.83 ) }
    dend_29 { pt3dadd( 38.0439, 13.1418, -15.0722, 0.55 ) }
    dend_29 { pt3dadd( 39.4277, 13.323, -14.7839, 0.83 ) }
    dend_29 { pt3dadd( 41.5177, 13.5881, -14.1386, 0.55 ) }
    dend_29 { pt3dadd( 44.5391, 13.9327, -12.8456, 0.55 ) }
    dend_29 { pt3dadd( 48.705, 14.1684, -10.898, 0.55 ) }
    dend_29 { pt3dadd( 52.6612, 14.2023, -8.8172, 0.55 ) }
    dend_29 { pt3dadd( 55.7915, 14.1862, -7.12356, 0.55 ) }
    dend_29 { pt3dadd( 60.9568, 14.1755, -4.30104, 0.55 ) }
    dend_29 { pt3dadd( 64.7561, 14.2485, -2.13541, 0.55 ) }
    dend_29 { pt3dadd( 67.0838, 14.449, -0.708752, 0.55 ) }
    dend_29 { pt3dadd( 71.4422, 15.2037, 2.04754, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.769682, -18.0361, 5.93884, 0.83 ) }
    dend_11 { pt3dadd( -0.76566, -20.6364, 5.83335, 0.83 ) }
    dend_11 { pt3dadd( -0.761741, -23.1699, 5.73058, 0.83 ) }
    dend_11 { pt3dadd( -0.757365, -25.9985, 5.61584, 0.83 ) }
    dend_11 { pt3dadd( -0.755081, -27.4756, 5.55592, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.769682, -18.0361, 5.93884, 0.55 ) }
    dend_2 { pt3dadd( -0.248232, -19.6299, 7.12188, 0.55 ) }
    dend_2 { pt3dadd( 0.184833, -21.5875, 8.63754, 0.55 ) }
    dend_2 { pt3dadd( 0.347014, -24.1652, 10.6894, 0.55 ) }
    dend_2 { pt3dadd( 0.336875, -25.1694, 11.5075, 0.83 ) }
    dend_2 { pt3dadd( 0.0469375, -27.7388, 13.8663, 0.55 ) }
    dend_2 { pt3dadd( -0.214144, -29.069, 15.0994, 0.55 ) }
    dend_2 { pt3dadd( -0.787109, -31.6572, 17.6017, 0.83 ) }
    dend_2 { pt3dadd( -1.335, -33.5824, 19.5711, 0.55 ) }
    dend_2 { pt3dadd( -1.92533, -35.1748, 21.1577, 0.55 ) }
    dend_2 { pt3dadd( -3.10566, -38.1931, 24.1018, 0.55 ) }
    dend_2 { pt3dadd( -4.04128, -40.5987, 26.4205, 0.55 ) }
    dend_2 { pt3dadd( -4.75503, -42.5259, 28.31, 0.55 ) }
    dend_2 { pt3dadd( -5.39456, -44.5687, 30.2625, 0.28 ) }
    dend_2 { pt3dadd( -5.58658, -45.4175, 31.05, 0.55 ) }
    dend_2 { pt3dadd( -5.89203, -46.9841, 32.4197, 0.28 ) }
    dend_2 { pt3dadd( -6.0, -49.4201, 34.2101, 0.55 ) }
    dend_2 { pt3dadd( -8.35787, -57.5848, 40.4193, 0.55 ) }
    dend_2 { pt3dadd( -11.0068, -65.1376, 47.2541, 0.55 ) }
    dend_2 { pt3dadd( -13.3523, -71.3371, 55.4297, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -45.6047, 36.7756, 1.32079, 0.55 ) }
    dend_61 { pt3dadd( -46.797, 37.8179, 2.83371, 0.55 ) }
    dend_61 { pt3dadd( -47.2411, 38.2795, 3.56116, 0.83 ) }
    dend_61 { pt3dadd( -47.6896, 38.8552, 4.52195, 0.55 ) }
    dend_61 { pt3dadd( -48.0002, 39.334, 5.30065, 0.83 ) }
    dend_61 { pt3dadd( -48.8352, 40.6331, 7.29127, 0.55 ) }
    dend_61 { pt3dadd( -49.1508, 41.138, 8.04183, 0.28 ) }
    dend_61 { pt3dadd( -49.6295, 42.0499, 9.35242, 0.55 ) }
    dend_61 { pt3dadd( -50.2773, 43.2767, 11.1005, 0.55 ) }
    dend_61 { pt3dadd( -50.7971, 44.1755, 12.3906, 0.55 ) }
    dend_61 { pt3dadd( -51.5172, 45.3454, 14.0798, 0.28 ) }
    dend_61 { pt3dadd( -51.7304, 45.6219, 14.4831, 0.55 ) }
    dend_61 { pt3dadd( -52.1899, 46.1831, 15.29, 0.28 ) }
    dend_61 { pt3dadd( -52.5326, 46.5438, 15.792, 0.55 ) }
    dend_61 { pt3dadd( -53.283, 47.2113, 16.7522, 0.28 ) }
    dend_61 { pt3dadd( -53.7346, 47.5496, 17.3141, 0.55 ) }
    dend_61 { pt3dadd( -54.5087, 48.0783, 18.3654, 0.28 ) }
    dend_61 { pt3dadd( -55.0424, 48.4115, 19.0551, 0.55 ) }
    dend_61 { pt3dadd( -57.0783, 51.456, 25.0069, 0.55 ) }
    dend_61 { pt3dadd( -58.4473, 54.0975, 31.3305, 0.55 ) }
    dend_61 { pt3dadd( -59.5553, 56.1657, 37.9133, 0.55 ) }
    dend_61 { pt3dadd( -60.663, 57.3876, 44.7044, 0.55 ) }
    dend_61 { pt3dadd( -60.7961, 59.1602, 51.463, 0.55 ) }
    dend_61 { pt3dadd( -61.5487, 61.0554, 58.1473, 0.55 ) }
    dend_61 { pt3dadd( -62.4488, 64.0256, 64.4089, 0.55 ) }
    dend_61 { pt3dadd( -63.284, 66.4859, 70.8964, 0.55 ) }
    dend_61 { pt3dadd( -63.991, 69.419, 77.2, 0.55 ) }
    dend_61 { pt3dadd( -64.3066, 72.3408, 83.5406, 0.55 ) }
    dend_61 { pt3dadd( -63.8028, 74.6406, 90.1206, 0.55 ) }
    dend_61 { pt3dadd( -63.4026, 77.5486, 96.4626, 0.55 ) }
    dend_61 { pt3dadd( -63.0707, 79.7757, 103.078, 0.55 ) }
    dend_61 { pt3dadd( -61.8576, 81.8064, 109.654, 0.55 ) }
    dend_61 { pt3dadd( -59.4981, 84.3247, 115.731, 0.55 ) }
    dend_61 { pt3dadd( -57.1028, 85.539, 122.183, 0.55 ) }
    dend_61 { pt3dadd( -53.8012, 86.5315, 128.262, 0.55 ) }
    dend_61 { pt3dadd( -50.8147, 87.8781, 134.435, 0.55 ) }
    dend_61 { pt3dadd( -48.5128, 89.7931, 140.749, 0.55 ) }
    dend_61 { pt3dadd( -47.7162, 92.7111, 147.049, 0.55 ) }
    dend_61 { pt3dadd( -46.2519, 94.9339, 153.511, 0.55 ) }
    dend_61 { pt3dadd( -43.6014, 98.2186, 159.081, 0.55 ) }
    dend_61 { pt3dadd( -42.0862, 101.978, 164.774, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -45.6047, 36.7756, 1.32079, 0.55 ) }
    dend_56 { pt3dadd( -47.5888, 37.1128, -0.537937, 0.55 ) }
    dend_56 { pt3dadd( -49.2193, 37.4854, -2.6922, 0.55 ) }
    dend_56 { pt3dadd( -50.7888, 38.029, -5.02502, 0.55 ) }
    dend_56 { pt3dadd( -51.7717, 38.3694, -6.48581, 0.55 ) }
    dend_56 { pt3dadd( -53.5645, 38.9902, -9.15045, 0.83 ) }
    dend_56 { pt3dadd( -54.8761, 39.4445, -11.0999, 0.55 ) }
    dend_56 { pt3dadd( -56.4719, 40.0245, -13.9944, 0.83 ) }
    dend_56 { pt3dadd( -57.1466, 40.4873, -15.6804, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -88.6551, 28.2822, 30.7502, 0.28 ) }
    dend_48 { pt3dadd( -89.4288, 26.7334, 30.8363, 0.28 ) }
    dend_48 { pt3dadd( -89.8085, 26.0567, 30.8259, 0.28 ) }
    dend_48 { pt3dadd( -90.3062, 25.0956, 30.7725, 0.55 ) }
    dend_48 { pt3dadd( -90.715, 24.2527, 30.7285, 0.28 ) }
    dend_48 { pt3dadd( -91.3155, 22.9719, 30.6736, 0.55 ) }
    dend_48 { pt3dadd( -92.9751, 19.2211, 30.5562, 0.28 ) }
    dend_48 { pt3dadd( -93.5295, 17.8896, 30.4118, 0.55 ) }
    dend_48 { pt3dadd( -94.3789, 15.8279, 30.1241, 0.28 ) }
    dend_48 { pt3dadd( -94.8743, 14.5863, 29.8986, 0.55 ) }
    dend_48 { pt3dadd( -95.2193, 13.7273, 29.7246, 0.28 ) }
    dend_48 { pt3dadd( -95.6115, 12.7427, 29.5318, 0.55 ) }
    dend_48 { pt3dadd( -96.7881, 9.47406, 28.9447, 0.28 ) }
    dend_48 { pt3dadd( -97.1627, 8.47912, 28.7373, 0.55 ) }
    dend_48 { pt3dadd( -97.8373, 6.92937, 28.2893, 0.28 ) }
    dend_48 { pt3dadd( -98.3979, 5.91929, 27.9417, 0.28 ) }
    dend_48 { pt3dadd( -98.8971, 5.23675, 27.7034, 0.55 ) }
    dend_48 { pt3dadd( -100.612, 3.31939, 27.1222, 0.28 ) }
    dend_48 { pt3dadd( -101.404, 2.54264, 26.9137, 0.55 ) }
    dend_48 { pt3dadd( -103.352, 0.752374, 26.3605, 0.28 ) }
    dend_48 { pt3dadd( -105.298, -0.844909, 25.8654, 0.28 ) }
    dend_48 { pt3dadd( -107.415, -2.38874, 25.3581, 0.28 ) }
    dend_48 { pt3dadd( -108.381, -2.9765, 25.183, 0.55 ) }
    dend_48 { pt3dadd( -112.967, -9.03647, 24.0628, 0.55 ) }
    dend_48 { pt3dadd( -117.857, -14.9523, 24.3989, 0.55 ) }
    dend_48 { pt3dadd( -122.82, -20.7584, 23.5772, 0.55 ) }
    dend_48 { pt3dadd( -128.025, -26.205, 22.0748, 0.55 ) }
    dend_48 { pt3dadd( -133.415, -31.216, 19.8697, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -88.6551, 28.2822, 30.7502, 0.55 ) }
    dend_45 { pt3dadd( -89.4904, 28.2062, 31.0236, 0.55 ) }
    dend_45 { pt3dadd( -91.7994, 28.0798, 32.0984, 0.55 ) }
    dend_45 { pt3dadd( -92.6578, 28.0225, 32.5554, 0.55 ) }
    dend_45 { pt3dadd( -94.6661, 27.8333, 33.6791, 0.55 ) }
    dend_45 { pt3dadd( -97.7816, 27.5319, 35.244, 0.55 ) }
    dend_45 { pt3dadd( -99.4096, 27.4186, 36.014, 0.28 ) }
    dend_45 { pt3dadd( -101.946, 27.1713, 37.177, 0.55 ) }
    dend_45 { pt3dadd( -103.837, 26.9287, 37.9823, 0.55 ) }
    dend_45 { pt3dadd( -104.634, 26.8212, 38.3256, 0.28 ) }
    dend_45 { pt3dadd( -109.421, 26.1726, 40.3789, 0.55 ) }
    dend_45 { pt3dadd( -111.67, 25.725, 41.2281, 0.28 ) }
    dend_45 { pt3dadd( -114.732, 25.0592, 42.1973, 0.28 ) }
    dend_45 { pt3dadd( -117.398, 24.4811, 42.868, 0.55 ) }
    dend_45 { pt3dadd( -127.586, 24.374, 47.3142, 0.55 ) }
    dend_45 { pt3dadd( -137.214, 24.3215, 52.8687, 0.55 ) }
    dend_45 { pt3dadd( -145.997, 23.4927, 59.6321, 0.55 ) }
    dend_45 { pt3dadd( -154.522, 24.6943, 66.6639, 0.55 ) }
    dend_45 { pt3dadd( -161.375, 26.0862, 75.3049, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -166.482, 28.5118, 84.8756, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 82.7381, 8.20858, -50.2722, 0.55 ) }
    dend_42 { pt3dadd( 86.6268, 9.51477, -53.2696, 0.55 ) }
    dend_42 { pt3dadd( 87.8447, 9.89529, -54.3042, 0.55 ) }
    dend_42 { pt3dadd( 89.3611, 10.3188, -55.5934, 0.55 ) }
    dend_42 { pt3dadd( 92.1038, 11.1042, -58.0966, 0.55 ) }
    dend_42 { pt3dadd( 94.9443, 11.8269, -60.8071, 0.55 ) }
    dend_42 { pt3dadd( 96.3149, 12.0624, -62.1249, 0.83 ) }
    dend_42 { pt3dadd( 97.4269, 12.2006, -63.3145, 0.55 ) }
    dend_42 { pt3dadd( 98.2439, 12.2561, -64.3072, 0.83 ) }
    dend_42 { pt3dadd( 100.159, 12.1419, -66.9125, 0.55 ) }
    dend_42 { pt3dadd( 101.707, 11.8942, -69.1086, 0.55 ) }
    dend_42 { pt3dadd( 103.489, 11.5718, -71.5419, 0.55 ) }
    dend_42 { pt3dadd( 105.482, 11.2857, -74.2799, 0.55 ) }
    dend_42 { pt3dadd( 106.812, 11.0689, -76.161, 0.55 ) }
    dend_42 { pt3dadd( 108.309, 10.8326, -78.3366, 0.55 ) }
    dend_42 { pt3dadd( 109.609, 10.7034, -80.3033, 0.55 ) }
    dend_42 { pt3dadd( 110.438, 10.7333, -81.6389, 0.55 ) }
    dend_42 { pt3dadd( 111.45, 10.9484, -84.2693, 0.55 ) }
    dend_42 { pt3dadd( 111.983, 11.0498, -85.9199, 0.55 ) }
    dend_42 { pt3dadd( 112.388, 11.1424, -88.1146, 0.55 ) }
    dend_42 { pt3dadd( 112.884, 11.2221, -91.838, 0.55 ) }
    dend_42 { pt3dadd( 112.975, 11.2132, -92.6837, 0.28 ) }
    dend_42 { pt3dadd( 114.179, 10.9803, -102.998, 0.28 ) }
    dend_42 { pt3dadd( 114.621, 10.9172, -106.027, 0.83 ) }
    dend_42 { pt3dadd( 116.412, 10.4756, -116.829, 0.83 ) }
    dend_42 { pt3dadd( 117.337, 10.0659, -121.899, 0.83 ) }
    dend_42 { pt3dadd( 117.798, 9.80783, -123.977, 0.55 ) }
    dend_42 { pt3dadd( 118.355, 9.53009, -126.012, 0.55 ) }
    dend_42 { pt3dadd( 120.036, 8.82612, -129.845, 0.55 ) }
    dend_42 { pt3dadd( 121.891, 8.11285, -133.246, 0.28 ) }
    dend_42 { pt3dadd( 122.498, 7.84207, -133.514, 0.55 ) }
    dend_42 { pt3dadd( 123.865, 7.21726, -133.574, 0.28 ) }
    dend_42 { pt3dadd( 124.726, 6.86042, -133.469, 0.55 ) }
    dend_42 { pt3dadd( 125.623, 6.45695, -133.285, 0.28 ) }
    dend_42 { pt3dadd( 126.712, 6.01417, -133.0, 0.55 ) }
    dend_42 { pt3dadd( 128.351, 5.48113, -132.729, 0.28 ) }
    dend_42 { pt3dadd( 129.658, 5.02399, -132.563, 0.55 ) }
    dend_42 { pt3dadd( 131.119, 4.6427, -132.473, 0.28 ) }
    dend_42 { pt3dadd( 133.101, 4.17494, -132.524, 0.55 ) }
    dend_42 { pt3dadd( 135.329, 3.73457, -132.701, 0.55 ) }
    dend_42 { pt3dadd( 137.289, 3.40269, -132.982, 0.28 ) }
    dend_42 { pt3dadd( 140.002, 3.00516, -133.513, 0.55 ) }
    dend_42 { pt3dadd( 144.7, 2.56987, -134.897, 0.55 ) }
    dend_42 { pt3dadd( 146.788, 2.5457, -135.732, 0.55 ) }
    dend_42 { pt3dadd( 147.689, 2.59561, -136.177, 0.83 ) }
    dend_42 { pt3dadd( 149.403, 2.74143, -137.177, 0.55 ) }
    dend_42 { pt3dadd( 150.599, 2.90815, -137.932, 0.83 ) }
    dend_42 { pt3dadd( 153.83, 3.448, -139.982, 0.55 ) }
    dend_42 { pt3dadd( 155.778, 3.65864, -141.315, 0.28 ) }
    dend_42 { pt3dadd( 156.592, 3.67448, -141.798, 0.55 ) }
    dend_42 { pt3dadd( 158.792, 3.45245, -142.922, 0.28 ) }
    dend_42 { pt3dadd( 159.552, 3.29097, -143.282, 0.55 ) }
    dend_42 { pt3dadd( 161.106, 2.7969, -143.801, 0.28 ) }
    dend_42 { pt3dadd( 162.668, 2.06676, -144.084, 0.55 ) }
    dend_42 { pt3dadd( 165.809, 0.272319, -144.121, 0.28 ) }
    dend_42 { pt3dadd( 167.25, -0.661734, -143.992, 0.55 ) }
    dend_42 { pt3dadd( 169.373, -2.20915, -143.711, 0.28 ) }
    dend_42 { pt3dadd( 172.06, -4.17874, -143.251, 0.55 ) }
    dend_42 { pt3dadd( 174.01, -5.58335, -142.878, 0.55 ) }
    dend_42 { pt3dadd( 177.408, -7.92032, -142.147, 0.28 ) }
    dend_42 { pt3dadd( 178.811, -8.7821, -141.951, 0.55 ) }
    dend_42 { pt3dadd( 181.248, -10.0556, -141.857, 0.28 ) }
    dend_42 { pt3dadd( 183.706, -11.0901, -141.893, 0.55 ) }
    dend_42 { pt3dadd( 185.076, -11.4547, -142.068, 0.28 ) }
    dend_42 { pt3dadd( 186.341, -11.5935, -142.283, 0.55 ) }
    dend_42 { pt3dadd( 189.939, -11.6945, -143.173, 0.28 ) }
    dend_42 { pt3dadd( 192.539, -11.5841, -143.807, 0.28 ) }
    dend_42 { pt3dadd( 194.827, -11.3222, -144.353, 0.55 ) }
    dend_42 { pt3dadd( 197.36, -10.9355, -145.061, 0.28 ) }
    dend_42 { pt3dadd( 198.006, -10.8054, -145.21, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 82.7381, 8.20858, -50.2722, 0.55 ) }
    dend_35 { pt3dadd( 83.1626, 6.17708, -52.0934, 0.55 ) }
    dend_35 { pt3dadd( 83.3555, 4.44255, -53.4968, 0.28 ) }
    dend_35 { pt3dadd( 83.5333, 2.8288, -54.6357, 0.55 ) }
    dend_35 { pt3dadd( 84.0985, -0.594105, -57.0906, 0.28 ) }
    dend_35 { pt3dadd( 84.1271, -0.80379, -57.2772, 0.55 ) }
    dend_35 { pt3dadd( 84.3085, -1.88698, -58.3551, 0.28 ) }
    dend_35 { pt3dadd( 84.3634, -2.75229, -59.4014, 0.55 ) }
    dend_35 { pt3dadd( 84.3585, -3.63288, -60.6103, 0.28 ) }
    dend_35 { pt3dadd( 84.3087, -4.82104, -62.3235, 0.55 ) }
    dend_35 { pt3dadd( 84.1825, -7.81587, -66.5579, 0.55 ) }
    dend_35 { pt3dadd( 84.0287, -10.534, -70.4739, 0.55 ) }
    dend_35 { pt3dadd( 83.8798, -12.7049, -73.6065, 0.55 ) }
    dend_35 { pt3dadd( 83.687, -14.8444, -76.6387, 0.55 ) }
    dend_35 { pt3dadd( 83.6356, -15.4018, -77.3939, 0.28 ) }
    dend_35 { pt3dadd( 83.6021, -16.0082, -78.1426, 0.55 ) }
    dend_35 { pt3dadd( 83.6494, -16.8675, -79.0925, 0.28 ) }
    dend_35 { pt3dadd( 83.9164, -18.4432, -80.6415, 0.55 ) }
    dend_35 { pt3dadd( 84.7252, -21.5633, -83.0893, 0.55 ) }
    dend_35 { pt3dadd( 85.1791, -23.269, -84.2454, 0.28 ) }
    dend_35 { pt3dadd( 85.5327, -24.9846, -85.4966, 0.55 ) }
    dend_35 { pt3dadd( 85.838, -27.3624, -87.3382, 0.28 ) }
    dend_35 { pt3dadd( 85.9508, -29.2671, -88.868, 0.55 ) }
    dend_35 { pt3dadd( 85.9874, -32.1078, -91.1567, 0.28 ) }
    dend_35 { pt3dadd( 86.0504, -35.0646, -93.4272, 0.55 ) }
    dend_35 { pt3dadd( 86.0796, -39.3481, -96.7621, 0.28 ) }
    dend_35 { pt3dadd( 86.0408, -41.6275, -98.5459, 0.55 ) }
    dend_35 { pt3dadd( 85.9589, -43.9472, -100.429, 0.28 ) }
    dend_35 { pt3dadd( 85.8606, -45.9656, -102.224, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 85.8288, -48.4555, -104.711, 0.55 ) }
    dend_35 { pt3dadd( 85.9795, -50.7829, -106.958, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 71.4422, 15.2037, 2.04754, 0.55 ) }
    dend_31 { pt3dadd( 74.352, 14.2067, 2.50124, 0.55 ) }
    dend_31 { pt3dadd( 76.4526, 13.4303, 2.61122, 0.55 ) }
    dend_31 { pt3dadd( 81.0352, 11.7163, 2.59351, 0.55 ) }
    dend_31 { pt3dadd( 83.0829, 10.9322, 2.38704, 0.55 ) }
    dend_31 { pt3dadd( 85.3241, 10.1447, 2.05018, 0.55 ) }
    dend_31 { pt3dadd( 88.3384, 9.17739, 1.38326, 0.55 ) }
    dend_31 { pt3dadd( 91.4933, 8.12058, 0.350647, 0.55 ) }
    dend_31 { pt3dadd( 93.1397, 7.57526, -0.394235, 0.55 ) }
    dend_31 { pt3dadd( 96.4725, 6.5434, -2.39263, 0.55 ) }
    dend_31 { pt3dadd( 98.0086, 6.08983, -3.36288, 0.55 ) }
    dend_31 { pt3dadd( 101.592, 4.97053, -5.7472, 0.55 ) }
    dend_31 { pt3dadd( 103.999, 4.10583, -7.35702, 0.55 ) }
    dend_31 { pt3dadd( 105.77, 3.4436, -8.45647, 0.83 ) }
    dend_31 { pt3dadd( 108.58, 2.26763, -10.1963, 0.55 ) }
    dend_31 { pt3dadd( 111.306, 0.952682, -11.8066, 0.83 ) }
    dend_31 { pt3dadd( 113.6, -0.29324, -13.1005, 0.55 ) }
    dend_31 { pt3dadd( 115.651, -1.38849, -14.128, 0.55 ) }
    dend_31 { pt3dadd( 116.831, -1.96706, -14.6321, 0.83 ) }
    dend_31 { pt3dadd( 119.591, -3.33409, -15.6488, 0.28 ) }
    dend_31 { pt3dadd( 120.978, -3.96813, -16.0495, 0.28 ) }
    dend_31 { pt3dadd( 122.301, -4.66021, -16.5267, 0.28 ) }
    dend_31 { pt3dadd( 123.738, -5.36592, -17.0429, 0.28 ) }
    dend_31 { pt3dadd( 126.046, -6.44034, -17.9134, 0.28 ) }
    dend_31 { pt3dadd( 126.978, -6.86521, -18.2317, 0.55 ) }
    dend_31 { pt3dadd( 129.218, -7.89503, -18.7527, 0.55 ) }
    dend_31 { pt3dadd( 133.25, -9.82512, -19.4786, 0.55 ) }
    dend_31 { pt3dadd( 134.361, -10.399, -19.6318, 0.55 ) }
    dend_31 { pt3dadd( 135.348, -10.9536, -19.7281, 0.83 ) }
    dend_31 { pt3dadd( 137.511, -12.1176, -19.7377, 0.55 ) }
    dend_31 { pt3dadd( 139.394, -13.1307, -19.713, 0.55 ) }
    dend_31 { pt3dadd( 141.175, -14.0814, -19.6794, 0.55 ) }
    dend_31 { pt3dadd( 142.547, -14.8364, -19.6995, 0.55 ) }
    dend_31 { pt3dadd( 144.688, -16.1768, -19.8729, 0.55 ) }
    dend_31 { pt3dadd( 147.157, -17.9724, -20.2703, 0.55 ) }
    dend_31 { pt3dadd( 150.888, -21.1925, -21.2693, 0.55 ) }
    dend_31 { pt3dadd( 152.861, -23.2799, -22.0254, 0.55 ) }
    dend_31 { pt3dadd( 154.497, -25.4192, -22.8419, 0.28 ) }
    dend_31 { pt3dadd( 154.957, -26.1845, -23.1433, 0.55 ) }
    dend_31 { pt3dadd( 155.886, -28.27, -23.9479, 0.28 ) }
    dend_31 { pt3dadd( 156.578, -30.5564, -24.7854, 0.55 ) }
    dend_31 { pt3dadd( 157.094, -33.384, -25.5931, 0.55 ) }
    dend_31 { pt3dadd( 157.456, -35.2594, -26.0398, 0.28 ) }
    dend_31 { pt3dadd( 157.594, -35.9284, -26.1672, 0.55 ) }
    dend_31 { pt3dadd( 157.967, -37.5988, -26.4637, 0.28 ) }
    dend_31 { pt3dadd( 158.5, -39.7873, -26.8027, 0.55 ) }
    dend_31 { pt3dadd( 159.975, -45.1116, -27.5074, 0.55 ) }
    dend_31 { pt3dadd( 160.763, -47.8102, -27.8128, 0.55 ) }
    dend_31 { pt3dadd( 161.501, -50.2893, -28.0733, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 71.4422, 15.2037, 2.04754, 0.55 ) }
    dend_30 { pt3dadd( 73.3701, 14.936, 3.48274, 0.55 ) }
    dend_30 { pt3dadd( 73.9885, 14.853, 3.90918, 0.55 ) }
    dend_30 { pt3dadd( 76.2778, 14.4508, 5.38235, 0.55 ) }
    dend_30 { pt3dadd( 78.8404, 14.0454, 7.07272, 0.55 ) }
    dend_30 { pt3dadd( 82.1227, 13.5055, 9.32443, 0.55 ) }
    dend_30 { pt3dadd( 83.0296, 13.3583, 9.94054, 0.55 ) }
    dend_30 { pt3dadd( 84.6476, 13.0355, 11.0199, 0.55 ) }
    dend_30 { pt3dadd( 86.4284, 12.732, 12.143, 0.55 ) }
    dend_30 { pt3dadd( 88.5084, 12.4499, 13.366, 0.55 ) }
    dend_30 { pt3dadd( 90.4725, 12.21, 14.5299, 0.55 ) }
    dend_30 { pt3dadd( 91.5577, 12.1335, 15.1272, 0.55 ) }
    dend_30 { pt3dadd( 92.8372, 12.0795, 15.8323, 0.55 ) }
    dend_30 { pt3dadd( 94.4267, 12.061, 16.6842, 0.83 ) }
    dend_30 { pt3dadd( 97.033, 12.0656, 17.8146, 0.55 ) }
    dend_30 { pt3dadd( 98.75, 12.016, 18.472, 0.83 ) }
    dend_30 { pt3dadd( 101.12, 11.8542, 19.2872, 0.55 ) }
    dend_30 { pt3dadd( 101.842, 11.7679, 19.5208, 0.55 ) }
    dend_30 { pt3dadd( 104.066, 11.3989, 20.1814, 0.55 ) }
    dend_30 { pt3dadd( 108.014, 10.5274, 21.1654, 0.55 ) }
    dend_30 { pt3dadd( 110.881, 9.74087, 21.7928, 0.55 ) }
    dend_30 { pt3dadd( 113.135, 9.00496, 22.3255, 0.55 ) }
    dend_30 { pt3dadd( 115.413, 8.1211, 22.928, 0.55 ) }
    dend_30 { pt3dadd( 115.891, 7.92176, 23.055, 0.28 ) }
    dend_30 { pt3dadd( 116.853, 7.47853, 23.3035, 0.83 ) }
    dend_30 { pt3dadd( 120.794, 5.59588, 24.3376, 0.55 ) }
    dend_30 { pt3dadd( 123.552, 4.29079, 25.006, 0.55 ) }
    dend_30 { pt3dadd( 125.824, 3.26921, 25.6238, 0.55 ) }
    dend_30 { pt3dadd( 127.181, 2.65255, 26.0058, 0.83 ) }
    dend_30 { pt3dadd( 128.252, 2.18261, 26.3112, 0.28 ) }
    dend_30 { pt3dadd( 129.223, 1.75943, 26.579, 0.55 ) }
    dend_30 { pt3dadd( 137.062, 0.166655, 30.1178, 0.55 ) }
    dend_30 { pt3dadd( 145.178, -2.55279, 31.9183, 0.55 ) }
    dend_30 { pt3dadd( 153.411, -4.29977, 34.2997, 0.55 ) }
    dend_30 { pt3dadd( 160.568, -7.38674, 38.2701, 0.55 ) }
    dend_30 { pt3dadd( 167.029, -11.5859, 42.4083, 0.55 ) }
    dend_30 { pt3dadd( 173.955, -16.7082, 43.9298, 0.55 ) }
    dend_30 { pt3dadd( 180.636, -22.3533, 43.8672, 0.55 ) }
    dend_30 { pt3dadd( 188.304, -26.5484, 43.5441, 0.55 ) }
    dend_30 { pt3dadd( 195.859, -30.9507, 43.7734, 0.55 ) }
    dend_30 { pt3dadd( 203.894, -34.4034, 43.6144, 0.55 ) }
    dend_30 { pt3dadd( 211.948, -37.6608, 44.6295, 0.55 ) }
    dend_30 { pt3dadd( 219.242, -42.3339, 45.8417, 0.55 ) }
    dend_30 { pt3dadd( 226.976, -45.6974, 48.1625, 0.55 ) }
    dend_30 { pt3dadd( 234.552, -47.9574, 51.9045, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -0.755081, -27.4756, 5.55592, 1.38 ) }
    dend_13 { pt3dadd( 2.45004, -30.5466, 4.88049, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.755081, -27.4756, 5.55592, 0.55 ) }
    dend_12 { pt3dadd( -1.74648, -28.8124, 5.48174, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -2.83093, -30.5177, 5.40056, 0.55 ) }
    dend_12 { pt3dadd( -3.6862, -31.653, 5.3476, 0.55 ) }
    dend_12 { pt3dadd( -4.39552, -32.6019, 5.18016, 0.55 ) }
    dend_12 { pt3dadd( -5.9328, -34.5705, 4.65273, 0.55 ) }
    dend_12 { pt3dadd( -7.01106, -35.8876, 4.24942, 0.55 ) }
    dend_12 { pt3dadd( -7.96539, -37.0679, 3.85038, 0.55 ) }
    dend_12 { pt3dadd( -10.4255, -39.9472, 2.82769, 0.55 ) }
    dend_12 { pt3dadd( -13.3904, -43.2861, 1.62507, 0.55 ) }
    dend_12 { pt3dadd( -15.6851, -45.8173, 0.649376, 0.55 ) }
    dend_12 { pt3dadd( -17.145, -47.4773, 0.00307059, 0.55 ) }
    dend_12 { pt3dadd( -18.8162, -49.4654, -0.73279, 0.55 ) }
    dend_12 { pt3dadd( -20.9227, -52.3034, -1.63509, 0.55 ) }
    dend_12 { pt3dadd( -22.1402, -54.3044, -2.13366, 0.55 ) }
    dend_12 { pt3dadd( -23.6359, -57.171, -2.59853, 0.55 ) }
    dend_12 { pt3dadd( -24.8136, -59.8472, -2.91524, 0.55 ) }
    dend_12 { pt3dadd( -25.9743, -63.173, -3.21177, 0.55 ) }
    dend_12 { pt3dadd( -27.0354, -67.0645, -3.43568, 0.55 ) }
    dend_12 { pt3dadd( -27.5676, -70.0264, -3.50826, 0.55 ) }
    dend_12 { pt3dadd( -27.7431, -71.4963, -3.43959, 0.55 ) }
    dend_12 { pt3dadd( -27.9692, -74.9413, -3.07184, 0.55 ) }
    dend_12 { pt3dadd( -28.1321, -78.1625, -2.63857, 0.55 ) }
    dend_12 { pt3dadd( -28.1543, -81.4005, -1.94762, 0.55 ) }
    dend_12 { pt3dadd( -28.1962, -83.2593, -1.45246, 0.55 ) }
    dend_12 { pt3dadd( -28.3115, -89.0054, 0.291561, 0.55 ) }
    dend_12 { pt3dadd( -28.3235, -89.4286, 0.427071, 0.55 ) }
    dend_12 { pt3dadd( -28.3548, -92.0185, 1.32481, 0.55 ) }
    dend_12 { pt3dadd( -28.6357, -96.6598, 3.01694, 0.55 ) }
    dend_12 { pt3dadd( -28.7296, -98.2121, 3.49051, 0.55 ) }
    dend_12 { pt3dadd( -28.8954, -100.64, 3.81271, 0.55 ) }
    dend_12 { pt3dadd( -28.9139, -101.541, 3.73031, 0.55 ) }
    dend_12 { pt3dadd( -28.7874, -104.582, 2.89696, 0.55 ) }
    dend_12 { pt3dadd( -28.5559, -106.546, 1.95519, 0.55 ) }
    dend_12 { pt3dadd( -28.0398, -109.67, -0.170323, 0.55 ) }
    dend_12 { pt3dadd( -27.225, -113.483, -3.05053, 0.28 ) }
    dend_12 { pt3dadd( -26.9964, -114.425, -3.88863, 0.55 ) }
    dend_12 { pt3dadd( -26.6326, -115.852, -5.28492, 0.28 ) }
    dend_12 { pt3dadd( -26.5787, -116.067, -5.50698, 0.55 ) }
    dend_12 { pt3dadd( -26.3006, -117.246, -6.62256, 0.28 ) }
    dend_12 { pt3dadd( -26.2426, -117.648, -6.91171, 0.55 ) }
    dend_12 { pt3dadd( -26.0277, -119.739, -8.01694, 0.28 ) }
    dend_12 { pt3dadd( -25.9829, -120.452, -8.38675, 0.55 ) }
    dend_12 { pt3dadd( -25.8905, -122.515, -9.34209, 0.28 ) }
    dend_12 { pt3dadd( -25.8587, -123.164, -9.64018, 0.55 ) }
    dend_12 { pt3dadd( -25.7709, -125.406, -10.6343, 0.28 ) }
    dend_12 { pt3dadd( -25.7247, -126.437, -11.0962, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -13.3523, -71.3371, 55.4297, 0.55 ) }
    dend_10 { pt3dadd( -18.3134, -80.0295, 62.901, 0.55 ) }
    dend_10 { pt3dadd( -24.601, -87.7305, 70.461, 0.55 ) }
    dend_10 { pt3dadd( -30.4079, -96.2221, 77.5437, 0.55 ) }
    dend_10 { pt3dadd( -36.3902, -104.775, 84.4031, 0.55 ) }
    dend_10 { pt3dadd( -40.8513, -114.626, 90.6516, 0.55 ) }
    dend_10 { pt3dadd( -45.3211, -124.064, 97.5021, 0.55 ) }
    dend_10 { pt3dadd( -47.8734, -135.344, 102.219, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -13.3523, -71.3371, 55.4297, 0.55 ) }
    dend_3 { pt3dadd( -13.3247, -79.3835, 63.7146, 0.55 ) }
    dend_3 { pt3dadd( -12.3257, -88.6447, 70.5423, 0.55 ) }
    dend_3 { pt3dadd( -13.1045, -98.2315, 76.9355, 0.55 ) }
    dend_3 { pt3dadd( -14.2234, -108.464, 82.1726, 0.55 ) }
    dend_3 { pt3dadd( -14.9362, -118.59, 87.6798, 0.55 ) }
    dend_3 { pt3dadd( -15.7736, -128.29, 93.8927, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -57.1466, 40.4873, -15.6804, 0.83 ) }
    dend_60 { pt3dadd( -57.2365, 41.1256, -17.1508, 0.83 ) }
    dend_60 { pt3dadd( -57.4711, 42.7373, -20.4932, 0.55 ) }
    dend_60 { pt3dadd( -57.5485, 43.464, -21.848, 0.83 ) }
    dend_60 { pt3dadd( -57.6072, 44.2691, -23.222, 0.55 ) }
    dend_60 { pt3dadd( -57.6261, 45.1567, -24.4719, 0.55 ) }
    dend_60 { pt3dadd( -57.6117, 45.6294, -25.0266, 0.28 ) }
    dend_60 { pt3dadd( -57.6025, 45.9783, -25.2913, 0.55 ) }
    dend_60 { pt3dadd( -57.4608, 47.2406, -25.9136, 0.28 ) }
    dend_60 { pt3dadd( -57.3789, 47.79, -26.1561, 0.55 ) }
    dend_60 { pt3dadd( -57.0981, 49.7285, -26.9159, 0.28 ) }
    dend_60 { pt3dadd( -56.903, 51.2841, -27.4565, 0.55 ) }
    dend_60 { pt3dadd( -56.6969, 53.7431, -28.1974, 0.28 ) }
    dend_60 { pt3dadd( -56.581, 55.9208, -28.7891, 0.28 ) }
    dend_60 { pt3dadd( -56.5801, 57.1496, -29.0794, 0.55 ) }
    dend_60 { pt3dadd( -56.6668, 58.609, -29.3995, 0.28 ) }
    dend_60 { pt3dadd( -56.7506, 59.3097, -29.5311, 0.55 ) }
    dend_60 { pt3dadd( -57.0539, 60.935, -29.8864, 0.28 ) }
    dend_60 { pt3dadd( -57.3414, 62.0007, -30.1574, 0.28 ) }
    dend_60 { pt3dadd( -57.6541, 63.0368, -30.448, 0.28 ) }
    dend_60 { pt3dadd( -57.7987, 63.5831, -30.6093, 0.55 ) }
    dend_60 { pt3dadd( -58.2772, 65.7735, -31.3442, 0.28 ) }
    dend_60 { pt3dadd( -58.7683, 68.3502, -32.2848, 0.55 ) }
    dend_60 { pt3dadd( -58.9254, 69.2386, -32.6167, 0.55 ) }
    dend_60 { pt3dadd( -59.0926, 70.1364, -32.9266, 0.55 ) }
    dend_60 { pt3dadd( -59.5589, 72.034, -33.5876, 0.55 ) }
    dend_60 { pt3dadd( -59.9544, 73.2712, -34.0257, 0.28 ) }
    dend_60 { pt3dadd( -60.1618, 73.7378, -34.1827, 0.55 ) }
    dend_60 { pt3dadd( -60.8086, 75.0113, -34.5562, 0.28 ) }
    dend_60 { pt3dadd( -61.5683, 76.3485, -34.9912, 0.55 ) }
    dend_60 { pt3dadd( -62.8671, 78.2455, -35.6407, 0.28 ) }
    dend_60 { pt3dadd( -63.5069, 79.0284, -35.9131, 0.28 ) }
    dend_60 { pt3dadd( -64.5758, 80.0778, -36.3628, 0.55 ) }
    dend_60 { pt3dadd( -65.7867, 81.1493, -36.8706, 0.28 ) }
    dend_60 { pt3dadd( -66.0078, 81.3143, -36.9516, 0.55 ) }
    dend_60 { pt3dadd( -66.8049, 81.8321, -37.2107, 0.28 ) }
    dend_60 { pt3dadd( -69.5436, 83.4863, -38.0059, 0.55 ) }
    dend_60 { pt3dadd( -73.3903, 85.4417, -39.125, 0.28 ) }
    dend_60 { pt3dadd( -74.1115, 85.75, -39.3535, 0.55 ) }
    dend_60 { pt3dadd( -76.1003, 86.5198, -39.9844, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -76.9408, 86.8262, -40.2645, 0.28 ) }
    dend_60 { pt3dadd( -77.6798, 87.0658, -40.5312, 0.55 ) }
    dend_60 { pt3dadd( -79.8832, 87.4974, -41.3681, 0.28 ) }
    dend_60 { pt3dadd( -81.4263, 87.6874, -41.8607, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -57.1466, 40.4873, -15.6804, 0.55 ) }
    dend_57 { pt3dadd( -57.3819, 41.573, -16.11, 0.55 ) }
    dend_57 { pt3dadd( -57.5238, 42.2323, -16.2993, 0.28 ) }
    dend_57 { pt3dadd( -57.6944, 42.7392, -16.2994, 0.55 ) }
    dend_57 { pt3dadd( -58.0863, 43.9031, -16.2995, 0.28 ) }
    dend_57 { pt3dadd( -58.3615, 44.7206, -16.2997, 0.55 ) }
    dend_57 { pt3dadd( -58.869, 46.2277, -16.2999, 0.28 ) }
    dend_57 { pt3dadd( -59.1882, 47.0751, -16.1538, 0.55 ) }
    dend_57 { pt3dadd( -60.3458, 49.2864, -15.0561, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -133.415, -31.216, 19.8697, 0.55 ) }
    dend_52 { pt3dadd( -138.107, -38.1479, 19.8396, 0.55 ) }
    dend_52 { pt3dadd( -141.488, -45.7933, 19.4052, 0.55 ) }
    dend_52 { pt3dadd( -144.308, -53.3537, 17.1771, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -133.415, -31.216, 19.8697, 0.55 ) }
    dend_49 { pt3dadd( -137.478, -36.3409, 18.5429, 0.55 ) }
    dend_49 { pt3dadd( -140.941, -41.6523, 16.461, 0.55 ) }
    dend_49 { pt3dadd( -144.144, -47.0733, 14.2496, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -166.482, 28.5118, 84.8756, 0.55 ) }
    dend_47 { pt3dadd( -171.654, 29.9216, 89.6371, 0.55 ) }
    dend_47 { pt3dadd( -177.461, 31.6654, 93.4642, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -166.482, 28.5118, 84.8756, 0.55 ) }
    dend_46 { pt3dadd( -174.181, 27.8641, 89.275, 0.55 ) }
    dend_46 { pt3dadd( -181.983, 28.6682, 93.4611, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 85.9795, -50.7829, -106.958, 0.28 ) }
    dend_39 { pt3dadd( 92.7044, -55.0467, -120.124, 0.28 ) }
    dend_39 { pt3dadd( 93.3841, -55.5275, -121.297, 0.55 ) }
    dend_39 { pt3dadd( 94.5318, -56.3394, -123.277, 0.28 ) }
    dend_39 { pt3dadd( 95.4981, -57.023, -124.944, 0.28 ) }
    dend_39 { pt3dadd( 96.7772, -57.9279, -127.15, 0.55 ) }
    dend_39 { pt3dadd( 98.4637, -59.1209, -130.06, 0.55 ) }
    dend_39 { pt3dadd( 100.912, -61.0998, -131.617, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 85.9795, -50.7829, -106.958, 0.55 ) }
    dend_36 { pt3dadd( 86.7092, -52.0578, -108.392, 0.55 ) }
    dend_36 { pt3dadd( 86.9251, -52.6418, -109.018, 0.28 ) }
    dend_36 { pt3dadd( 87.2371, -53.649, -110.107, 0.55 ) }
    dend_36 { pt3dadd( 87.9244, -55.8677, -112.507, 0.28 ) }
    dend_36 { pt3dadd( 88.4007, -57.4054, -114.17, 0.55 ) }
    dend_36 { pt3dadd( 89.2077, -60.0106, -116.988, 0.28 ) }
    dend_36 { pt3dadd( 90.0702, -63.207, -120.686, 0.28 ) }
    dend_36 { pt3dadd( 90.3979, -64.6842, -122.411, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 161.501, -50.2893, -28.0733, 0.28 ) }
    dend_33 { pt3dadd( 162.812, -52.8482, -27.5679, 0.28 ) }
    dend_33 { pt3dadd( 164.451, -56.2194, -26.6338, 0.28 ) }
    dend_33 { pt3dadd( 165.482, -58.4035, -25.9429, 0.55 ) }
    dend_33 { pt3dadd( 166.124, -59.6197, -25.5049, 0.28 ) }
    dend_33 { pt3dadd( 166.464, -60.2738, -25.263, 0.28 ) }
    dend_33 { pt3dadd( 168.15, -63.5039, -24.1166, 0.55 ) }
    dend_33 { pt3dadd( 168.545, -64.2253, -23.7722, 0.28 ) }
    dend_33 { pt3dadd( 169.452, -66.109, -22.7412, 0.55 ) }
    dend_33 { pt3dadd( 170.219, -67.7437, -21.9104, 0.28 ) }
    dend_33 { pt3dadd( 170.903, -69.081, -21.26, 0.55 ) }
    dend_33 { pt3dadd( 171.698, -70.6773, -20.5778, 0.55 ) }
    dend_33 { pt3dadd( 172.956, -73.2118, -19.8005, 0.55 ) }
    dend_33 { pt3dadd( 173.256, -73.8326, -19.6313, 0.55 ) }
    dend_33 { pt3dadd( 174.316, -76.1421, -19.0242, 0.28 ) }
    dend_33 { pt3dadd( 174.718, -77.0815, -18.8001, 0.55 ) }
    dend_33 { pt3dadd( 175.297, -78.2904, -18.5182, 0.28 ) }
    dend_33 { pt3dadd( 176.111, -80.0056, -18.1932, 0.55 ) }
    dend_33 { pt3dadd( 177.474, -82.7201, -18.058, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 161.501, -50.2893, -28.0733, 0.55 ) }
    dend_32 { pt3dadd( 158.186, -49.9192, -27.801, 0.55 ) }
    dend_32 { pt3dadd( 155.494, -49.6187, -27.5799, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.45004, -30.5466, 4.88049, 0.83 ) }
    dend_17 { pt3dadd( 2.63677, -30.8634, 4.8862, 0.83 ) }
    dend_17 { pt3dadd( 4.67959, -33.6342, 5.20449, 0.83 ) }
    dend_17 { pt3dadd( 6.50447, -36.0583, 5.31454, 0.55 ) }
    dend_17 { pt3dadd( 7.96033, -37.9922, 5.40235, 0.55 ) }
    dend_17 { pt3dadd( 11.0548, -42.1028, 5.58898, 0.83 ) }
    dend_17 { pt3dadd( 14.8082, -47.0887, 5.81535, 0.55 ) }
    dend_17 { pt3dadd( 16.8335, -49.6932, 6.00294, 0.83 ) }
    dend_17 { pt3dadd( 20.3352, -53.8124, 6.56198, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.45004, -30.5466, 4.88049, 0.55 ) }
    dend_14 { pt3dadd( 1.85945, -31.3387, 2.71818, 0.55 ) }
    dend_14 { pt3dadd( 1.22552, -32.1889, 0.397212, 0.55 ) }
    dend_14 { pt3dadd( 0.477174, -33.1925, -2.34272, 0.55 ) }
    dend_14 { pt3dadd( -0.431569, -34.4113, -5.66988, 0.55 ) }
    dend_14 { pt3dadd( -0.947249, -35.1029, -7.55792, 0.55 ) }
    dend_14 { pt3dadd( -1.05084, -35.2418, -7.93721, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -15.7736, -128.29, 93.8927, 0.55 ) }
    dend_7 { pt3dadd( -15.8827, -138.85, 101.718, 0.55 ) }
    dend_7 { pt3dadd( -13.9996, -149.963, 108.48, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -15.7736, -128.29, 93.8927, 0.55 ) }
    dend_4 { pt3dadd( -16.4562, -138.751, 100.046, 0.55 ) }
    dend_4 { pt3dadd( -17.7746, -149.023, 106.41, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -60.3458, 49.2864, -15.0561, 0.28 ) }
    dend_59 { pt3dadd( -61.4657, 51.4102, -13.5637, 0.28 ) }
    dend_59 { pt3dadd( -61.8686, 52.2358, -12.9209, 0.55 ) }
    dend_59 { pt3dadd( -63.0048, 54.6388, -11.0226, 0.28 ) }
    dend_59 { pt3dadd( -63.5944, 55.803, -10.1804, 0.55 ) }
    dend_59 { pt3dadd( -65.2334, 58.9296, -7.98886, 0.28 ) }
    dend_59 { pt3dadd( -66.8993, 62.1073, -5.76142, 0.55 ) }
    dend_59 { pt3dadd( -69.6405, 67.1502, -1.97517, 0.28 ) }
    dend_59 { pt3dadd( -70.224, 68.2317, -1.17008, 0.55 ) }
    dend_59 { pt3dadd( -71.5278, 70.7157, 0.496213, 0.28 ) }
    dend_59 { pt3dadd( -72.0357, 71.7356, 1.1375, 0.55 ) }
    dend_59 { pt3dadd( -78.162, 78.8758, 7.47631, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -85.6353, 86.5289, 11.2547, 0.55 ) }
    dend_59 { pt3dadd( -91.6677, 94.8418, 16.0712, 0.55 ) }
    dend_59 { pt3dadd( -96.3588, 104.402, 19.9834, 0.55 ) }
    dend_59 { pt3dadd( -102.337, 113.355, 23.5588, 0.55 ) }
    dend_59 { pt3dadd( -108.931, 120.942, 28.8167, 0.55 ) }
    dend_59 { pt3dadd( -114.433, 128.118, 35.668, 0.55 ) }
    dend_59 { pt3dadd( -118.552, 134.596, 44.0202, 0.55 ) }
    dend_59 { pt3dadd( -122.791, 141.602, 51.8715, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -60.3458, 49.2864, -15.0561, 0.55 ) }
    dend_58 { pt3dadd( -63.7749, 48.3998, -12.4581, 0.55 ) }
    dend_58 { pt3dadd( -65.5541, 47.8721, -11.095, 0.28 ) }
    dend_58 { pt3dadd( -66.8781, 47.4793, -10.0807, 0.55 ) }
    dend_58 { pt3dadd( -67.9816, 47.152, -9.23533, 0.28 ) }
    dend_58 { pt3dadd( -68.7545, 46.9228, -8.64318, 0.55 ) }
    dend_58 { pt3dadd( -70.8858, 46.2906, -7.01037, 0.28 ) }
    dend_58 { pt3dadd( -72.3355, 45.6849, -6.08669, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -144.308, -53.3537, 17.1771, 0.55 ) }
    dend_54 { pt3dadd( -148.142, -62.5923, 19.6258, 0.55 ) }
    dend_54 { pt3dadd( -151.722, -71.5679, 23.1843, 0.55 ) }
    dend_54 { pt3dadd( -154.602, -81.277, 25.051, 0.55 ) }
    dend_54 { pt3dadd( -158.467, -90.3092, 28.1376, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -144.308, -53.3537, 17.1771, 0.55 ) }
    dend_53 { pt3dadd( -150.166, -58.2225, 11.3019, 0.55 ) }
    dend_53 { pt3dadd( -155.904, -61.8019, 4.45976, 0.55 ) }
    dend_53 { pt3dadd( -162.07, -66.5179, -1.22237, 0.55 ) }
    dend_53 { pt3dadd( -169.926, -69.8601, -5.65653, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -144.144, -47.0733, 14.2496, 0.55 ) }
    dend_51 { pt3dadd( -148.489, -52.4849, 9.52069, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -144.144, -47.0733, 14.2496, 0.55 ) }
    dend_50 { pt3dadd( -147.463, -55.5186, 16.6845, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 100.912, -61.0998, -131.617, 0.28 ) }
    dend_41 { pt3dadd( 103.253, -62.4832, -133.154, 0.28 ) }
    dend_41 { pt3dadd( 104.34, -63.1258, -133.869, 0.55 ) }
    dend_41 { pt3dadd( 106.414, -64.3512, -135.23, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 100.912, -61.0998, -131.617, 0.55 ) }
    dend_40 { pt3dadd( 100.334, -61.7369, -133.342, 0.55 ) }
    dend_40 { pt3dadd( 99.1768, -63.0113, -136.792, 0.28 ) }
    dend_40 { pt3dadd( 98.8, -63.4264, -137.916, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 90.3979, -64.6842, -122.411, 0.28 ) }
    dend_38 { pt3dadd( 92.011, -68.8238, -126.068, 0.28 ) }
    dend_38 { pt3dadd( 92.8098, -70.8735, -127.879, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 90.3979, -64.6842, -122.411, 0.55 ) }
    dend_37 { pt3dadd( 88.8791, -65.5512, -121.371, 0.55 ) }
    dend_37 { pt3dadd( 84.6439, -67.9688, -118.472, 0.28 ) }
    dend_37 { pt3dadd( 83.6378, -68.5432, -117.783, 0.55 ) }
    dend_37 { pt3dadd( 80.8856, -70.1143, -115.899, 0.28 ) }
    dend_37 { pt3dadd( 79.1115, -71.127, -114.685, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 20.3352, -53.8124, 6.56198, 0.83 ) }
    dend_23 { pt3dadd( 20.3767, -54.0177, 6.54518, 0.83 ) }
    dend_23 { pt3dadd( 20.9537, -56.6989, 6.40411, 0.83 ) }
    dend_23 { pt3dadd( 21.1987, -58.7182, 6.41158, 0.83 ) }
    dend_23 { pt3dadd( 21.2796, -60.6725, 6.60827, 0.83 ) }
    dend_23 { pt3dadd( 21.2769, -63.2743, 7.05806, 0.83 ) }
    dend_23 { pt3dadd( 21.1807, -66.2749, 7.67944, 0.83 ) }
    dend_23 { pt3dadd( 21.0709, -69.6182, 8.55022, 0.83 ) }
    dend_23 { pt3dadd( 20.9511, -72.8605, 9.54642, 0.83 ) }
    dend_23 { pt3dadd( 20.5529, -76.8653, 10.653, 0.83 ) }
    dend_23 { pt3dadd( 20.279, -78.717, 11.0477, 0.83 ) }
    dend_23 { pt3dadd( 20.0759, -80.113, 11.2568, 0.83 ) }
    dend_23 { pt3dadd( 19.6352, -82.7978, 11.5966, 0.83 ) }
    dend_23 { pt3dadd( 19.3087, -85.2025, 11.7747, 0.83 ) }
    dend_23 { pt3dadd( 18.9403, -90.3285, 11.6135, 0.83 ) }
    dend_23 { pt3dadd( 18.8051, -93.1421, 11.1663, 0.83 ) }
    dend_23 { pt3dadd( 18.6965, -95.7413, 10.5674, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 20.3352, -53.8124, 6.56198, 0.55 ) }
    dend_18 { pt3dadd( 19.7587, -55.7499, 6.22398, 0.55 ) }
    dend_18 { pt3dadd( 19.2777, -57.1649, 6.06158, 0.55 ) }
    dend_18 { pt3dadd( 18.9523, -58.0734, 6.04656, 0.55 ) }
    dend_18 { pt3dadd( 18.4424, -59.4982, 6.17076, 0.55 ) }
    dend_18 { pt3dadd( 17.4189, -62.3244, 6.60377, 0.55 ) }
    dend_18 { pt3dadd( 16.53, -64.4801, 7.12571, 0.55 ) }
    dend_18 { pt3dadd( 15.7421, -66.2194, 7.70163, 0.55 ) }
    dend_18 { pt3dadd( 14.8587, -67.9876, 8.37068, 0.55 ) }
    dend_18 { pt3dadd( 14.0843, -69.4597, 8.98482, 0.28 ) }
    dend_18 { pt3dadd( 13.3649, -70.6749, 9.6268, 0.55 ) }
    dend_18 { pt3dadd( 11.8876, -72.9092, 11.0316, 0.55 ) }
    dend_18 { pt3dadd( 10.8614, -74.2938, 11.9838, 0.55 ) }
    dend_18 { pt3dadd( 10.2826, -75.0698, 12.5075, 0.55 ) }
    dend_18 { pt3dadd( 9.58171, -75.9859, 13.0675, 0.83 ) }
    dend_18 { pt3dadd( 7.55585, -78.694, 14.5704, 0.28 ) }
    dend_18 { pt3dadd( 6.89589, -79.5886, 15.0482, 0.55 ) }
    dend_18 { pt3dadd( 5.76654, -81.1966, 15.888, 0.28 ) }
    dend_18 { pt3dadd( 5.40422, -81.6943, 16.1767, 0.55 ) }
    dend_18 { pt3dadd( 4.61582, -82.8565, 16.8624, 0.28 ) }
    dend_18 { pt3dadd( 4.19074, -83.5142, 17.214, 0.55 ) }
    dend_18 { pt3dadd( 2.93151, -85.6308, 17.8266, 0.55 ) }
    dend_18 { pt3dadd( -0.18441, -91.3506, 21.9388, 0.55 ) }
    dend_18 { pt3dadd( -3.13852, -96.8113, 26.4983, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.05084, -35.2418, -7.93721, 0.55 ) }
    dend_16 { pt3dadd( -2.42784, -36.1947, -10.545, 0.55 ) }
    dend_16 { pt3dadd( -2.84785, -36.4267, -11.2856, 0.55 ) }
    dend_16 { pt3dadd( -3.91926, -37.0127, -13.0882, 0.55 ) }
    dend_16 { pt3dadd( -6.31528, -38.2006, -16.8943, 0.28 ) }
    dend_16 { pt3dadd( -6.68193, -38.3674, -17.4302, 0.55 ) }
    dend_16 { pt3dadd( -8.22725, -39.1258, -19.5879, 0.55 ) }
    dend_16 { pt3dadd( -10.4173, -40.1805, -22.2782, 0.55 ) }
    dend_16 { pt3dadd( -11.2661, -40.5516, -23.2818, 0.28 ) }
    dend_16 { pt3dadd( -12.0313, -40.8156, -24.108, 0.28 ) }
    dend_16 { pt3dadd( -13.3974, -41.2459, -25.31, 0.55 ) }
    dend_16 { pt3dadd( -15.0565, -41.6765, -26.8455, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -16.5971, -41.9198, -28.3011, 0.55 ) }
    dend_16 { pt3dadd( -17.8083, -41.9954, -29.3991, 0.55 ) }
    dend_16 { pt3dadd( -18.6442, -41.9667, -30.1835, 0.55 ) }
    dend_16 { pt3dadd( -21.0947, -41.7525, -32.5683, 0.55 ) }
    dend_16 { pt3dadd( -23.7115, -41.3308, -35.0216, 0.55 ) }
    dend_16 { pt3dadd( -24.808, -41.0915, -36.0048, 0.28 ) }
    dend_16 { pt3dadd( -25.8425, -40.8812, -36.9601, 0.55 ) }
    dend_16 { pt3dadd( -27.9303, -40.6068, -38.8769, 0.28 ) }
    dend_16 { pt3dadd( -28.6323, -40.5374, -39.5144, 0.83 ) }
    dend_16 { pt3dadd( -29.9707, -40.3959, -40.6076, 0.28 ) }
    dend_16 { pt3dadd( -30.96, -40.3807, -41.2616, 0.55 ) }
    dend_16 { pt3dadd( -32.3981, -40.4139, -42.1818, 0.28 ) }
    dend_16 { pt3dadd( -32.9766, -40.4203, -42.5285, 0.55 ) }
    dend_16 { pt3dadd( -34.061, -40.4566, -43.1116, 0.55 ) }
    dend_16 { pt3dadd( -35.7339, -40.3439, -43.926, 0.55 ) }
    dend_16 { pt3dadd( -36.8489, -40.2045, -44.3952, 0.28 ) }
    dend_16 { pt3dadd( -37.7762, -39.9846, -44.7014, 0.55 ) }
    dend_16 { pt3dadd( -38.8823, -39.5954, -45.065, 0.28 ) }
    dend_16 { pt3dadd( -39.0645, -39.5172, -45.1304, 0.55 ) }
    dend_16 { pt3dadd( -40.6921, -38.7461, -46.0096, 0.28 ) }
    dend_16 { pt3dadd( -41.8497, -38.157, -46.7702, 0.55 ) }
    dend_16 { pt3dadd( -43.3426, -37.268, -47.9821, 0.83 ) }
    dend_16 { pt3dadd( -44.5448, -36.4996, -49.1209, 0.28 ) }
    dend_16 { pt3dadd( -44.848, -36.3018, -49.4471, 0.55 ) }
    dend_16 { pt3dadd( -47.1385, -34.8153, -52.0891, 0.28 ) }
    dend_16 { pt3dadd( -47.5288, -34.5603, -52.5947, 0.55 ) }
    dend_16 { pt3dadd( -48.6715, -33.7152, -54.1665, 0.28 ) }
    dend_16 { pt3dadd( -48.9658, -33.4978, -54.5747, 0.55 ) }
    dend_16 { pt3dadd( -49.7358, -32.9342, -55.5632, 0.28 ) }
    dend_16 { pt3dadd( -50.2911, -32.5298, -56.2248, 0.55 ) }
    dend_16 { pt3dadd( -51.5796, -31.6377, -57.497, 0.28 ) }
    dend_16 { pt3dadd( -52.3467, -31.168, -58.2223, 0.55 ) }
    dend_16 { pt3dadd( -53.9953, -30.281, -59.6792, 0.28 ) }
    dend_16 { pt3dadd( -54.4857, -30.0461, -60.1056, 0.55 ) }
    dend_16 { pt3dadd( -55.2558, -29.7431, -60.7456, 0.28 ) }
    dend_16 { pt3dadd( -55.9157, -29.4901, -61.2542, 0.55 ) }
    dend_16 { pt3dadd( -57.3041, -28.9889, -62.2248, 0.28 ) }
    dend_16 { pt3dadd( -57.7246, -28.8485, -62.5031, 0.55 ) }
    dend_16 { pt3dadd( -60.8879, -27.7497, -64.4205, 0.28 ) }
    dend_16 { pt3dadd( -62.0259, -27.2887, -64.9928, 0.55 ) }
    dend_16 { pt3dadd( -64.0918, -26.3747, -65.8826, 0.28 ) }
    dend_16 { pt3dadd( -65.0318, -25.9279, -66.2549, 0.55 ) }
    dend_16 { pt3dadd( -67.2094, -24.9242, -66.9887, 0.28 ) }
    dend_16 { pt3dadd( -68.0121, -24.5919, -67.2251, 0.55 ) }
    dend_16 { pt3dadd( -70.9208, -23.6483, -67.9348, 0.28 ) }
    dend_16 { pt3dadd( -72.1225, -23.402, -68.2225, 0.55 ) }
    dend_16 { pt3dadd( -73.8162, -23.3261, -68.6185, 0.55 ) }
    dend_16 { pt3dadd( -74.8564, -23.3459, -68.8385, 0.55 ) }
    dend_16 { pt3dadd( -76.9983, -23.448, -69.1262, 0.28 ) }
    dend_16 { pt3dadd( -79.123, -23.5748, -69.2787, 0.28 ) }
    dend_16 { pt3dadd( -80.9005, -23.6762, -69.355, 0.55 ) }
    dend_16 { pt3dadd( -83.1181, -23.6264, -69.2119, 0.28 ) }
    dend_16 { pt3dadd( -84.2412, -23.4761, -68.9965, 0.55 ) }
    dend_16 { pt3dadd( -86.9672, -22.7235, -68.2233, 0.28 ) }
    dend_16 { pt3dadd( -88.4057, -22.0901, -67.5075, 0.55 ) }
    dend_16 { pt3dadd( -89.3482, -21.5537, -66.8551, 0.28 ) }
    dend_16 { pt3dadd( -90.4014, -20.9532, -65.887, 0.55 ) }
    dend_16 { pt3dadd( -91.7161, -20.1606, -64.5254, 0.28 ) }
    dend_16 { pt3dadd( -92.2147, -19.8865, -64.0155, 0.55 ) }
    dend_16 { pt3dadd( -94.8073, -18.7033, -61.6751, 0.28 ) }
    dend_16 { pt3dadd( -95.6815, -18.3384, -60.8956, 0.55 ) }
    dend_16 { pt3dadd( -97.7509, -17.5509, -58.9927, 0.28 ) }
    dend_16 { pt3dadd( -98.8748, -17.1366, -57.9598, 0.55 ) }
    dend_16 { pt3dadd( -99.7995, -16.7978, -57.1126, 0.55 ) }
    dend_16 { pt3dadd( -100.907, -16.4012, -56.1293, 0.28 ) }
    dend_16 { pt3dadd( -101.495, -16.2006, -55.7121, 0.55 ) }
    dend_16 { pt3dadd( -103.485, -15.4637, -54.43, 0.28 ) }
    dend_16 { pt3dadd( -104.531, -14.9614, -53.7352, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -1.05084, -35.2418, -7.93721, 0.55 ) }
    dend_15 { pt3dadd( -0.208612, -35.3276, -9.16754, 0.55 ) }
    dend_15 { pt3dadd( 0.662356, -35.2496, -10.3782, 0.55 ) }
    dend_15 { pt3dadd( 1.81304, -35.0207, -11.8276, 0.55 ) }
    dend_15 { pt3dadd( 2.79038, -34.7135, -12.9638, 0.55 ) }
    dend_15 { pt3dadd( 9.6325, -31.6803, -19.8797, 0.55 ) }
    dend_15 { pt3dadd( 11.1472, -30.7636, -21.4547, 0.55 ) }
    dend_15 { pt3dadd( 13.3366, -29.1914, -23.8266, 0.55 ) }
    dend_15 { pt3dadd( 14.874, -28.0069, -25.5146, 0.55 ) }
    dend_15 { pt3dadd( 16.3853, -26.7289, -27.1152, 0.28 ) }
    dend_15 { pt3dadd( 18.7738, -24.5748, -29.4367, 0.55 ) }
    dend_15 { pt3dadd( 22.4456, -21.2123, -32.6575, 0.28 ) }
    dend_15 { pt3dadd( 22.7281, -21.0051, -33.0337, 0.55 ) }
    dend_15 { pt3dadd( 24.038, -20.2921, -36.0246, 0.28 ) }
    dend_15 { pt3dadd( 24.5972, -19.9831, -38.1985, 0.55 ) }
    dend_15 { pt3dadd( 25.0018, -19.8422, -40.6181, 0.55 ) }
    dend_15 { pt3dadd( 25.6915, -19.8161, -44.9826, 0.55 ) }
    dend_15 { pt3dadd( 27.0746, -19.8228, -53.5448, 0.55 ) }
    dend_15 { pt3dadd( 28.1106, -19.8758, -59.2782, 0.55 ) }
    dend_15 { pt3dadd( 28.5222, -19.906, -61.2471, 0.55 ) }
    dend_15 { pt3dadd( 31.5197, -19.967, -74.1165, 0.55 ) }
    dend_15 { pt3dadd( 32.4714, -19.9157, -77.5638, 0.55 ) }
    dend_15 { pt3dadd( 33.1498, -19.8707, -79.4569, 0.55 ) }
    dend_15 { pt3dadd( 35.1259, -19.8353, -83.7327, 0.55 ) }
    dend_15 { pt3dadd( 40.5258, -20.238, -93.7238, 0.55 ) }
    dend_15 { pt3dadd( 42.1084, -20.4531, -96.3552, 0.28 ) }
    dend_15 { pt3dadd( 43.1308, -20.6365, -97.787, 0.55 ) }
    dend_15 { pt3dadd( 44.6977, -21.0046, -99.8827, 0.28 ) }
    dend_15 { pt3dadd( 45.4171, -21.2498, -100.698, 0.55 ) }
    dend_15 { pt3dadd( 48.1519, -22.3647, -102.547, 0.28 ) }
    dend_15 { pt3dadd( 50.5448, -23.9767, -102.659, 0.55 ) }
    dend_15 { pt3dadd( 51.9955, -25.1469, -102.634, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 53.3398, -26.4601, -102.452, 0.55 ) }
    dend_15 { pt3dadd( 54.5383, -27.9138, -102.189, 0.28 ) }
    dend_15 { pt3dadd( 55.0682, -28.6707, -102.092, 0.55 ) }
    dend_15 { pt3dadd( 56.3105, -30.6663, -101.77, 0.28 ) }
    dend_15 { pt3dadd( 56.6429, -31.265, -101.78, 0.55 ) }
    dend_15 { pt3dadd( 58.5483, -34.6955, -102.04, 0.28 ) }
    dend_15 { pt3dadd( 59.4943, -36.2738, -102.375, 0.55 ) }
    dend_15 { pt3dadd( 61.6775, -39.6241, -103.49, 0.28 ) }
    dend_15 { pt3dadd( 62.5486, -40.8493, -104.045, 0.55 ) }
    dend_15 { pt3dadd( 65.6027, -44.8488, -106.127, 0.28 ) }
    dend_15 { pt3dadd( 66.3555, -45.8195, -106.678, 0.55 ) }
    dend_15 { pt3dadd( 68.6543, -48.9016, -108.554, 0.28 ) }
    dend_15 { pt3dadd( 69.1422, -49.63, -108.936, 0.55 ) }
    dend_15 { pt3dadd( 70.3605, -51.5628, -109.931, 0.28 ) }
    dend_15 { pt3dadd( 71.0874, -52.6808, -110.626, 0.55 ) }
    dend_15 { pt3dadd( 71.8496, -53.7724, -111.401, 0.55 ) }
    dend_15 { pt3dadd( 73.3705, -55.9504, -112.929, 0.28 ) }
    dend_15 { pt3dadd( 74.4615, -57.2796, -114.037, 0.55 ) }
    dend_15 { pt3dadd( 77.974, -60.5027, -117.605, 0.28 ) }
    dend_15 { pt3dadd( 79.3466, -61.5191, -119.052, 0.55 ) }
    dend_15 { pt3dadd( 80.3065, -62.1537, -120.03, 0.28 ) }
    dend_15 { pt3dadd( 81.292, -62.7195, -121.003, 0.55 ) }
    dend_15 { pt3dadd( 84.3729, -64.2654, -123.937, 0.28 ) }
    dend_15 { pt3dadd( 86.7264, -65.4702, -126.092, 0.55 ) }
    dend_15 { pt3dadd( 90.8244, -67.8126, -129.451, 0.28 ) }
    dend_15 { pt3dadd( 92.117, -68.5395, -130.501, 0.55 ) }
    dend_15 { pt3dadd( 94.6427, -69.8609, -132.297, 0.28 ) }
    dend_15 { pt3dadd( 95.4971, -70.2925, -132.827, 0.55 ) }
    dend_15 { pt3dadd( 96.9218, -70.9795, -133.441, 0.28 ) }
    dend_15 { pt3dadd( 98.1905, -71.5529, -133.878, 0.55 ) }
    dend_15 { pt3dadd( 101.658, -72.9429, -134.72, 0.28 ) }
    dend_15 { pt3dadd( 105.638, -74.3862, -135.622, 0.28 ) }
    dend_15 { pt3dadd( 107.659, -75.0326, -135.941, 0.28 ) }
    dend_15 { pt3dadd( 109.688, -75.6237, -136.379, 0.55 ) }
    dend_15 { pt3dadd( 112.649, -76.3586, -137.029, 0.28 ) }
    dend_15 { pt3dadd( 113.967, -76.6669, -137.291, 0.83 ) }
    dend_15 { pt3dadd( 117.338, -77.4965, -137.837, 0.28 ) }
    dend_15 { pt3dadd( 118.796, -77.8867, -138.152, 0.55 ) }
    dend_15 { pt3dadd( 125.197, -79.8285, -139.824, 0.28 ) }
    dend_15 { pt3dadd( 128.38, -80.8332, -140.906, 0.28 ) }
    dend_15 { pt3dadd( 130.681, -81.5625, -141.838, 0.55 ) }
    dend_15 { pt3dadd( 132.008, -82.0136, -142.527, 0.55 ) }
    dend_15 { pt3dadd( 135.496, -83.2567, -144.628, 0.28 ) }
    dend_15 { pt3dadd( 138.743, -84.5632, -146.723, 0.55 ) }
    dend_15 { pt3dadd( 141.7, -85.8438, -148.633, 0.28 ) }
    dend_15 { pt3dadd( 144.356, -87.04, -150.5, 0.55 ) }
    dend_15 { pt3dadd( 146.554, -88.0026, -152.03, 0.28 ) }
    dend_15 { pt3dadd( 148.365, -88.6618, -153.184, 0.55 ) }
    dend_15 { pt3dadd( 152.762, -90.0076, -155.768, 0.28 ) }
    dend_15 { pt3dadd( 155.004, -90.6863, -156.987, 0.55 ) }
    dend_15 { pt3dadd( 158.389, -91.715, -158.698, 0.28 ) }
    dend_15 { pt3dadd( 161.168, -92.4786, -160.034, 0.55 ) }
    dend_15 { pt3dadd( 167.663, -93.9883, -163.168, 0.28 ) }
    dend_15 { pt3dadd( 170.281, -94.4567, -164.614, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.9996, -149.963, 108.48, 0.55 ) }
    dend_9 { pt3dadd( -13.1664, -159.147, 113.602, 0.55 ) }
    dend_9 { pt3dadd( -10.3251, -168.723, 116.998, 0.55 ) }
    dend_9 { pt3dadd( -8.67567, -178.149, 121.439, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -13.9996, -149.963, 108.48, 0.55 ) }
    dend_8 { pt3dadd( -12.9216, -159.741, 115.422, 0.55 ) }
    dend_8 { pt3dadd( -13.2117, -168.03, 124.15, 0.55 ) }
    dend_8 { pt3dadd( -13.1981, -174.365, 134.39, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -17.7746, -149.023, 106.41, 0.55 ) }
    dend_6 { pt3dadd( -17.4781, -156.292, 111.026, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -17.7746, -149.023, 106.41, 0.55 ) }
    dend_5 { pt3dadd( -18.789, -158.465, 111.765, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 18.6965, -95.7413, 10.5674, 0.83 ) }
    dend_25 { pt3dadd( 19.4276, -98.2201, 11.1325, 0.83 ) }
    dend_25 { pt3dadd( 20.1117, -100.295, 11.7816, 0.83 ) }
    dend_25 { pt3dadd( 20.7918, -102.357, 12.4268, 0.83 ) }
    dend_25 { pt3dadd( 21.4376, -104.316, 13.0395, 0.83 ) }
    dend_25 { pt3dadd( 22.4328, -107.335, 13.9838, 0.83 ) }
    dend_25 { pt3dadd( 23.4209, -110.331, 14.9213, 0.83 ) }
    dend_25 { pt3dadd( 24.1886, -112.291, 15.8304, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 18.6965, -95.7413, 10.5674, 0.55 ) }
    dend_24 { pt3dadd( 20.3993, -97.7586, 10.7702, 0.55 ) }
    dend_24 { pt3dadd( 21.7281, -99.3474, 10.6376, 0.55 ) }
    dend_24 { pt3dadd( 22.662, -100.532, 10.4136, 0.55 ) }
    dend_24 { pt3dadd( 23.5488, -101.947, 9.95444, 0.83 ) }
    dend_24 { pt3dadd( 24.46, -103.572, 9.2254, 0.55 ) }
    dend_24 { pt3dadd( 25.3512, -105.162, 8.51231, 0.83 ) }
    dend_24 { pt3dadd( 26.2293, -106.9, 7.57027, 0.55 ) }
    dend_24 { pt3dadd( 26.7427, -107.914, 6.92873, 0.83 ) }
    dend_24 { pt3dadd( 28.2819, -111.214, 4.5869, 0.55 ) }
    dend_24 { pt3dadd( 29.2872, -113.829, 2.57307, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -3.13852, -96.8113, 26.4983, 0.55 ) }
    dend_20 { pt3dadd( -7.46553, -104.729, 30.1931, 0.55 ) }
    dend_20 { pt3dadd( -13.1403, -111.748, 33.881, 0.55 ) }
    dend_20 { pt3dadd( -19.5641, -117.899, 37.8774, 0.55 ) }
    dend_20 { pt3dadd( -26.8475, -122.946, 41.9443, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -3.13852, -96.8113, 26.4983, 0.55 ) }
    dend_19 { pt3dadd( -4.30279, -101.385, 30.0644, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 24.1886, -112.291, 15.8304, 0.55 ) }
    dend_27 { pt3dadd( 24.5771, -114.471, 16.5603, 0.55 ) }
    dend_27 { pt3dadd( 25.1658, -117.243, 17.5442, 0.55 ) }
    dend_27 { pt3dadd( 25.7191, -119.863, 18.4584, 0.55 ) }
    dend_27 { pt3dadd( 26.0841, -121.728, 19.0848, 0.55 ) }
    dend_27 { pt3dadd( 26.6859, -125.064, 20.1598, 0.55 ) }
    dend_27 { pt3dadd( 28.4652, -134.461, 22.9074, 0.55 ) }
    dend_27 { pt3dadd( 29.1145, -137.663, 23.6843, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 29.5546, -139.932, 24.1167, 0.55 ) }
    dend_27 { pt3dadd( 30.0301, -142.543, 24.3993, 0.55 ) }
    dend_27 { pt3dadd( 30.3226, -144.582, 24.4493, 0.55 ) }
    dend_27 { pt3dadd( 31.0993, -149.36, 24.3409, 0.55 ) }
    dend_27 { pt3dadd( 31.5644, -152.992, 24.2839, 0.55 ) }
    dend_27 { pt3dadd( 31.9485, -155.368, 24.2996, 0.55 ) }
    dend_27 { pt3dadd( 32.9965, -161.499, 24.6532, 0.55 ) }
    dend_27 { pt3dadd( 33.718, -165.603, 25.0763, 0.55 ) }
    dend_27 { pt3dadd( 34.7433, -170.865, 25.9085, 0.55 ) }
    dend_27 { pt3dadd( 36.0929, -176.786, 27.2887, 0.55 ) }
    dend_27 { pt3dadd( 37.2307, -180.708, 28.4102, 0.55 ) }
    dend_27 { pt3dadd( 37.9747, -183.016, 29.1212, 0.55 ) }
    dend_27 { pt3dadd( 38.6191, -185.148, 29.7805, 0.55 ) }
    dend_27 { pt3dadd( 39.4504, -187.857, 30.4757, 0.55 ) }
    dend_27 { pt3dadd( 41.2685, -194.437, 31.7266, 0.55 ) }
    dend_27 { pt3dadd( 42.0354, -196.989, 32.095, 0.55 ) }
    dend_27 { pt3dadd( 42.817, -199.836, 32.5029, 0.55 ) }
    dend_27 { pt3dadd( 43.9504, -204.114, 33.1021, 0.55 ) }
    dend_27 { pt3dadd( 44.677, -207.407, 33.632, 0.55 ) }
    dend_27 { pt3dadd( 45.1776, -210.546, 34.1403, 0.55 ) }
    dend_27 { pt3dadd( 45.523, -213.544, 34.6584, 0.55 ) }
    dend_27 { pt3dadd( 45.8208, -216.468, 35.2182, 0.55 ) }
    dend_27 { pt3dadd( 46.0403, -218.551, 35.5931, 0.55 ) }
    dend_27 { pt3dadd( 46.3925, -221.968, 36.0848, 0.55 ) }
    dend_27 { pt3dadd( 46.6848, -226.106, 36.3812, 0.55 ) }
    dend_27 { pt3dadd( 46.8425, -228.128, 36.3644, 0.55 ) }
    dend_27 { pt3dadd( 46.9686, -229.916, 36.2139, 0.55 ) }
    dend_27 { pt3dadd( 47.3103, -233.302, 35.6985, 0.55 ) }
    dend_27 { pt3dadd( 47.4922, -235.455, 35.3192, 0.55 ) }
    dend_27 { pt3dadd( 47.7681, -238.098, 34.9414, 0.55 ) }
    dend_27 { pt3dadd( 47.9201, -239.948, 34.8015, 0.55 ) }
    dend_27 { pt3dadd( 48.2745, -244.743, 34.6417, 0.55 ) }
    dend_27 { pt3dadd( 48.5132, -248.312, 34.794, 0.55 ) }
    dend_27 { pt3dadd( 48.8973, -253.796, 35.4952, 0.55 ) }
    dend_27 { pt3dadd( 49.2983, -257.299, 36.2584, 0.55 ) }
    dend_27 { pt3dadd( 49.7192, -260.967, 37.1857, 0.28 ) }
    dend_27 { pt3dadd( 49.8662, -262.436, 37.628, 0.28 ) }
    dend_27 { pt3dadd( 50.2823, -265.972, 39.0303, 0.28 ) }
    dend_27 { pt3dadd( 50.6977, -269.212, 40.5955, 0.28 ) }
    dend_27 { pt3dadd( 51.7549, -273.435, 43.0165, 0.28 ) }
    dend_27 { pt3dadd( 54.8277, -283.128, 45.6392, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 24.1886, -112.291, 15.8304, 0.55 ) }
    dend_26 { pt3dadd( 25.8098, -112.73, 16.3891, 0.55 ) }
    dend_26 { pt3dadd( 29.1229, -113.889, 17.7948, 0.55 ) }
    dend_26 { pt3dadd( 31.9743, -115.053, 19.1396, 0.28 ) }
    dend_26 { pt3dadd( 35.0244, -116.383, 20.6792, 0.55 ) }
    dend_26 { pt3dadd( 36.83, -117.219, 21.8563, 0.28 ) }
    dend_26 { pt3dadd( 39.9163, -118.712, 24.1929, 0.55 ) }
    dend_26 { pt3dadd( 41.1475, -119.507, 25.561, 0.28 ) }
    dend_26 { pt3dadd( 41.5754, -119.788, 26.144, 0.28 ) }
    dend_26 { pt3dadd( 42.3085, -120.166, 27.1531, 0.55 ) }
    dend_26 { pt3dadd( 45.2281, -121.351, 30.7937, 0.28 ) }
    dend_26 { pt3dadd( 46.486, -121.801, 32.2794, 0.55 ) }
    dend_26 { pt3dadd( 50.434, -123.126, 36.2546, 0.28 ) }
    dend_26 { pt3dadd( 52.6249, -123.766, 38.2311, 0.28 ) }
    dend_26 { pt3dadd( 55.4066, -124.612, 40.5197, 0.55 ) }
    dend_26 { pt3dadd( 59.6538, -125.98, 43.5416, 0.28 ) }
    dend_26 { pt3dadd( 60.2448, -126.165, 43.8852, 0.55 ) }
    dend_26 { pt3dadd( 63.2006, -127.083, 45.3745, 0.28 ) }
    dend_26 { pt3dadd( 63.4753, -127.171, 45.4803, 0.55 ) }
    dend_26 { pt3dadd( 65.8985, -128.273, 46.516, 0.28 ) }
    dend_26 { pt3dadd( 67.0416, -128.882, 47.086, 0.55 ) }
    dend_26 { pt3dadd( 76.4017, -133.297, 51.8058, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -26.8475, -122.946, 41.9443, 0.55 ) }
    dend_22 { pt3dadd( -30.4286, -127.003, 48.1293, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -26.8475, -122.946, 41.9443, 0.55 ) }
    dend_21 { pt3dadd( -32.0754, -130.405, 42.9652, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_5 = new SectionList()
    dend_43 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_0 nseg = 5
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 9
    dend_48 nseg = 3
    dend_45 nseg = 5
    dend_42 nseg = 9
    dend_35 nseg = 5
    dend_31 nseg = 7
    dend_30 nseg = 9
    dend_12 nseg = 5
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_60 nseg = 3
    dend_59 nseg = 7
    dend_54 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 7
    dend_15 nseg = 13
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_BP_52bbfb0292_0_0


