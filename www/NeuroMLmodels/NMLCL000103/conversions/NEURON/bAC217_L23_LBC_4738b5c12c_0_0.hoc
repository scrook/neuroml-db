// Cell: bAC217_L23_LBC_4738b5c12c_0_0
/*
{
  "id" : "bAC217_L23_LBC_4738b5c12c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.51694, 11.0104, -0.0819092, 3.19551", "-3.15841, 9.8621, -0.0768064, 5.3635", "-2.79987, 8.71381, -0.0717036, 5.2385", "-2.44133, 7.56552, -0.0666008, 5.40379", "-2.0828, 6.41722, -0.061498, 6.02088", "-1.72426, 5.26893, -0.0563952, 7.0572", "-1.36573, 4.12064, -0.0512924, 8.33548", "-1.00719, 2.97235, -0.0461896, 9.39045", "-0.648657, 1.82405, -0.0410868, 9.67825", "-0.290122, 0.675761, -0.035984, 9.93356", "0.0684139, -0.472532, -0.0308812, 10.1889", "0.426949, -1.62083, -0.0257784, 10.0539", "0.785485, -2.76912, -0.0206756, 9.68551", "1.14402, -3.91741, -0.0155728, 9.07939", "1.50256, -5.0657, -0.0104701, 8.46979", "1.86109, -6.214, -0.00536725, 7.63175", "2.21963, -7.36229, -2.64453E-4, 6.67377", "2.57816, -8.51058, 0.00483835, 5.68988", "2.9367, -9.65888, 0.00994114, 4.70477", "3.29523, -10.8072, 0.0150439, 3.57171", "3.65377, -11.9555, 0.0201467, 2.11631" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.91059, 2.76677, 14.561, 0.83", "-3.8577, 5.89912, 15.1946, 0.83", "-5.43096, 10.9703, 16.3468, 0.83", "-6.2589, 13.6772, 16.9764, 0.55", "-7.09052, 16.0711, 17.6206, 0.83", "-8.44343, 19.9512, 18.7321, 0.55", "-9.73929, 23.5377, 19.8501, 0.55", "-11.0665, 27.0554, 21.1806, 0.55", "-12.2263, 29.8094, 22.5016, 0.55", "-13.9608, 33.6398, 24.7714, 0.55", "-15.9283, 37.6751, 27.3836, 0.55", "-17.4526, 40.5087, 29.3985, 0.55", "-19.8044, 44.7859, 32.5811, 0.55", "-22.1005, 49.0173, 35.6913, 0.55", "-24.3542, 53.307, 38.8253, 0.55", "-25.9981, 56.5082, 41.1605, 0.55", "-28.0424, 60.2978, 43.9891, 0.55", "-29.2907, 62.7192, 45.6778, 0.55", "-30.3863, 64.9796, 47.026, 0.83", "-31.5472, 67.8356, 48.2108, 0.55", "-35.8145, 79.2689, 52.5672, 0.55", "-40.8013, 89.0633, 59.1899, 0.55", "-44.6984, 99.7183, 65.3104, 0.55", "-46.2066, 110.807, 71.7481, 0.55", "-49.4823, 122.053, 77.2355, 0.55", "-50.4926, 133.343, 83.444, 0.55", "-50.0666, 145.187, 88.6913, 0.55", "-48.2382, 156.53, 94.5807, 0.55", "-45.5083, 167.751, 100.319, 0.55", "-42.9386, 178.177, 107.352, 0.55", "-41.1483, 187.554, 115.826, 0.55", "-41.1921, 197.231, 124.196, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-4.33059, 2.15777, 1.82102, 0.83", "-5.03733, 2.36095, 0.861092, 0.83", "-6.49178, 2.77497, -0.987314, 0.83", "-9.12667, 3.5242, -4.15753, 0.83", "-12.3664, 4.41904, -8.15694, 0.83", "-13.7426, 4.77603, -9.75785, 0.55", "-15.0053, 5.09261, -11.1366, 0.83", "-16.0051, 5.43184, -12.281, 0.28", "-16.792, 5.78323, -13.3344, 0.55", "-20.0898, 7.42904, -18.1669, 0.55", "-21.3183, 8.00676, -20.0934, 0.83", "-22.798, 8.72066, -22.5666, 0.55", "-25.6043, 10.0561, -27.3728, 0.55", "-29.2441, 11.91, -33.8691, 0.55", "-31.7409, 13.2179, -38.4971, 0.55", "-33.9118, 14.3562, -42.4765, 0.55", "-34.8275, 14.8265, -44.133, 0.55", "-35.5929, 15.1684, -45.3855, 0.55", "-37.9109, 16.0047, -48.4699, 0.55", "-40.5382, 16.9448, -51.3092, 0.55", "-42.4084, 17.6012, -53.1288, 0.28", "-44.5772, 18.3402, -55.1177, 1.11", "-50.2935, 19.9397, -60.0692, 0.28", "-52.4088, 20.4406, -61.7525, 0.28", "-54.0932, 20.7427, -62.9515, 1.11", "-58.0962, 21.3113, -65.5778, 0.28", "-60.6156, 21.5769, -67.1815, 0.83", "-63.4149, 21.7902, -68.8769, 0.28", "-64.6847, 21.8685, -69.592, 1.11", "-68.2182, 22.1362, -71.7735, 0.28", "-69.4506, 22.2898, -72.5456, 0.28", "-71.1681, 22.6664, -73.5131, 1.11", "-74.5718, 23.8257, -75.232, 0.28", "-75.8302, 24.4012, -75.752, 0.83", "-79.7144, 26.7761, -76.9213, 0.28", "-81.6615, 28.2829, -77.2736, 1.11", "-85.1932, 31.5458, -77.5752, 0.28", "-87.5554, 34.0539, -77.4681, 0.83", "-89.834, 36.8418, -77.0433, 0.28", "-92.3954, 40.3524, -76.3219, 0.28", "-93.1782, 41.5806, -75.9933, 0.83", "-94.2953, 43.5039, -75.5594, 0.83", "-95.304, 45.5222, -75.2298, 0.28", "-96.0819, 47.2408, -75.122, 0.55", "-96.9998, 49.394, -75.2731, 0.28", "-97.6907, 51.0307, -75.6497, 0.83", "-99.0927, 54.4035, -76.7108, 0.28", "-100.105, 56.7504, -77.6312, 0.83", "-100.981, 58.7171, -78.5115, 0.28", "-102.371, 61.6163, -79.944, 0.83", "-105.018, 66.4296, -82.5173, 0.28", "-106.326, 68.3281, -83.5322, 0.83", "-107.491, 69.6657, -84.2192, 0.55", "-108.489, 70.5955, -84.706, 0.55", "-109.932, 71.6858, -85.2319, 0.28", "-112.499, 73.2355, -85.8387, 0.83", "-116.945, 75.3353, -86.3822, 0.28", "-118.819, 76.1387, -86.5697, 0.83", "-120.781, 77.03, -86.6817, 0.28", "-123.792, 78.4281, -86.7127, 0.83", "-126.194, 79.7223, -86.6753, 1.11", "-128.81, 81.3945, -86.5879, 0.55", "-130.033, 82.2707, -86.6259, 0.83", "-133.045, 84.7072, -86.8944, 0.28", "-134.429, 85.9794, -87.0767, 0.83", "-137.696, 89.2394, -87.7694, 0.28", "-139.234, 90.8227, -88.2803, 1.11", "-142.19, 93.8095, -89.5536, 0.28", "-143.75, 95.3076, -90.2923, 0.55", "-145.478, 96.8384, -91.235, 0.55", "-148.042, 98.9302, -92.7114, 0.55", "-150.755, 100.83, -94.1974, 0.28", "-151.873, 101.603, -94.8044, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "5.05941, 4.24727, 7.73102, 0.83", "5.8842, 4.6316, 8.07383, 0.83", "7.08754, 5.14949, 8.5846, 0.83", "9.30004, 6.14564, 9.57681, 0.83", "11.4013, 7.11951, 10.6824, 0.55", "13.8553, 8.20712, 12.0331, 1.11", "16.6978, 9.52043, 13.5665, 0.55", "18.5595, 10.3632, 14.5797, 0.83", "21.2814, 11.6577, 15.9991, 0.55", "24.7209, 13.2715, 17.6909, 0.83", "27.377, 14.4737, 18.8413, 0.55", "31.5085, 16.3248, 20.3773, 0.55", "34.0266, 17.3611, 21.0469, 0.55", "38.7296, 19.2252, 21.7895, 0.55", "42.5467, 20.6072, 21.9106, 0.83", "45.7804, 21.7342, 21.6395, 0.83", "47.9738, 22.4948, 21.2879, 0.83", "52.1524, 23.7732, 20.4341, 0.83", "54.2663, 24.4093, 19.9731, 0.83", "58.1323, 25.6075, 19.1253, 0.83", "61.1729, 26.7677, 18.5449, 0.83", "64.0089, 27.9199, 18.1782, 0.83", "67.3908, 29.3412, 17.9505, 0.83", "70.3432, 30.65, 17.9863, 0.83", "72.1458, 31.483, 18.061, 0.83", "75.8733, 33.2071, 18.2447, 0.83", "77.8686, 34.1106, 18.3722, 0.83", "80.4696, 35.2905, 18.5751, 1.11", "82.5524, 36.2107, 18.7419, 0.55", "84.7039, 37.0574, 18.9552, 0.55", "88.1893, 38.2995, 19.4067, 0.83", "90.5633, 39.0628, 19.792, 0.83", "93.1056, 39.95, 20.0754, 0.55", "95.2232, 40.7562, 20.1609, 0.55", "97.3318, 41.7253, 20.0579, 0.83", "98.5022, 42.3247, 19.8845, 0.83", "101.844, 44.2894, 18.8475, 0.55", "105.862, 46.5488, 17.1874, 0.55", "108.366, 47.8906, 16.0216, 0.55", "111.803, 49.6813, 14.3026, 0.55", "115.828, 51.7621, 12.2382, 0.55", "119.615, 53.7188, 10.3146, 0.83", "122.411, 55.169, 8.94604, 0.55", "125.314, 56.5592, 7.78781, 0.55", "127.29, 57.5162, 7.03217, 0.55", "130.468, 59.006, 5.83853, 0.55", "131.984, 59.7219, 5.33654, 0.83", "133.692, 60.4977, 4.88665, 0.55", "136.593, 61.8886, 4.04987, 0.55", "138.671, 62.8747, 3.4089, 0.83", "140.841, 64.0453, 2.68442, 0.55", "143.461, 65.4737, 1.71201, 0.55", "145.487, 66.6493, 0.96575, 0.55", "146.824, 67.5267, 0.515268, 0.28", "147.719, 68.1891, 0.266009, 1.11", "151.528, 71.1095, -0.448227, 0.55", "153.618, 72.8563, -0.703242, 0.55", "154.965, 73.9872, -0.822776, 0.55", "157.508, 75.97, -1.023, 0.55", "158.752, 76.8693, -1.09641, 0.28", "161.075, 78.4911, -1.2558, 0.55", "162.546, 79.4874, -1.35566, 0.55", "164.169, 80.6745, -1.4974, 0.55", "167.377, 83.0562, -1.90806, 0.55", "169.292, 84.4361, -2.22662, 0.55", "171.299, 85.8197, -2.62657, 0.28", "172.432, 86.6085, -2.86729, 0.55", "174.424, 88.0105, -3.28818, 1.38", "177.889, 90.4018, -3.95846, 0.55", "179.918, 91.7499, -4.29125, 1.11", "181.679, 92.8942, -4.5632, 0.55", "183.668, 94.1232, -4.84372, 0.55", "185.191, 94.9908, -5.04499, 0.83", "188.736, 96.8034, -5.44765, 0.55", "190.549, 97.5975, -5.60158, 0.55", "191.614, 97.9801, -5.68081, 0.83", "196.069, 99.2543, -5.97799, 0.55", "198.343, 99.7727, -6.08817, 0.55", "200.511, 100.323, -6.11599, 0.55", "201.923, 100.751, -6.03864, 0.83", "204.098, 101.52, -5.75829, 0.55", "208.531, 103.429, -4.74066, 0.55", "210.952, 104.763, -3.92552, 0.55", "214.406, 107.012, -2.5301, 0.55", "216.645, 108.672, -1.42248, 0.55", "218.141, 109.855, -0.586198, 0.83", "220.52, 111.752, 0.86617, 0.55", "223.423, 114.027, 2.76301, 0.55", "226.358, 116.261, 4.67679, 0.55", "228.117, 117.459, 5.76773, 0.83", "229.522, 118.362, 6.54848, 0.55", "231.261, 119.44, 7.46087, 0.28", "232.555, 120.119, 8.07314, 0.55", "241.934, 122.992, 7.11755, 0.55", "251.192, 125.833, 5.28265, 0.55", "260.596, 128.779, 5.06482, 0.55", "270.144, 131.073, 4.46531, 0.55", "279.717, 132.19, 2.62446, 0.55", "288.956, 134.14, -0.111791, 0.55", "298.207, 134.587, -3.32365, 0.55", "307.662, 134.055, -5.82775, 0.55", "316.821, 133.414, -9.24196, 0.55", "325.659, 132.809, -13.4222, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "5.82941, 2.04227, -1.46898, 0.55", "7.95788, 2.71597, -1.99595, 0.55", "9.37116, 3.1828, -2.35071, 1.11", "11.8115, 3.81193, -2.93946, 0.55", "13.3133, 4.05551, -3.43248, 0.83", "16.6346, 4.39929, -4.77635, 0.83", "19.4239, 4.6158, -6.08369, 0.55", "21.8874, 4.76412, -7.37376, 0.83", "24.1136, 4.91104, -8.51586, 0.55", "28.0221, 5.21496, -10.4335, 0.55", "30.726, 5.41296, -11.5609, 0.55", "33.5626, 5.627, -12.6009, 1.11", "37.2858, 5.87743, -13.485, 0.55", "39.8283, 6.11036, -13.7341, 0.55", "41.5118, 6.36872, -13.5949, 0.55", "45.21, 6.94763, -12.8981, 0.83", "48.659, 7.37762, -12.0627, 0.55", "51.3027, 7.65667, -11.3614, 0.55", "54.4083, 7.82043, -10.7107, 0.55", "58.5874, 8.02591, -10.4856, 0.83", "61.6978, 8.1215, -10.7406, 0.28", "62.5688, 8.11091, -10.9399, 0.55", "63.9407, 8.00563, -11.3578, 0.55", "67.203, 7.38604, -12.7943, 0.55", "71.4011, 6.18174, -15.0423, 0.55", "74.0702, 5.23051, -16.7821, 0.55", "76.5329, 4.32025, -18.4919, 0.28", "78.0217, 3.78039, -19.5595, 0.55", "81.2389, 2.67641, -21.8421, 0.28", "82.9502, 2.17327, -23.1012, 0.55", "86.9737, 1.23156, -26.0814, 0.28", "88.834, 1.04896, -27.5253, 0.55", "92.0455, 1.26822, -30.032, 0.28", "93.8405, 1.71046, -31.3728, 0.55", "96.411, 2.86101, -33.1276, 0.28", "97.787, 3.65303, -34.0581, 0.83", "100.612, 5.57022, -35.9207, 0.28", "102.51, 6.91649, -37.3176, 0.55", "104.591, 8.45016, -38.9747, 0.28", "105.716, 9.23411, -39.859, 0.55", "109.897, 11.9458, -42.9162, 0.28", "111.279, 12.7041, -43.8647, 0.55", "114.405, 14.2614, -45.7219, 0.28", "115.477, 14.7537, -46.2827, 1.11", "117.544, 15.6296, -47.2439, 0.28", "118.796, 16.1671, -47.7188, 1.11", "123.643, 18.3672, -48.9775, 0.28", "127.613, 20.2355, -49.7945, 0.28", "130.012, 21.4799, -50.069, 0.83", "133.266, 23.4094, -50.2705, 0.28", "134.356, 24.1439, -50.2895, 0.55", "136.529, 25.8527, -50.1329, 0.28", "138.334, 27.566, -49.8058, 1.11", "141.907, 31.4253, -48.9504, 0.28", "144.901, 34.9866, -48.1144, 0.28", "145.762, 36.1138, -47.8372, 0.55", "147.709, 38.7894, -47.2213, 0.28", "148.512, 39.9683, -46.9671, 1.66", "149.598, 41.6042, -46.6024, 0.28", "150.96, 43.6444, -46.2639, 0.55", "151.809, 44.8592, -46.0744, 0.28", "152.926, 46.3383, -46.0307, 0.55", "154.288, 48.0525, -46.1799, 0.28", "155.157, 49.0793, -46.4362, 0.55", "156.615, 50.7981, -46.9697, 0.28", "157.905, 52.3095, -47.5296, 1.11", "161.043, 55.8288, -49.0982, 0.28", "162.079, 56.9397, -49.6996, 0.55", "165.495, 60.5693, -52.0105, 0.28", "167.046, 62.1933, -53.1801, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-5.12059, 9.83328, 7.96102, 1.11", "-7.02667, 9.60261, 7.05256, 1.11", "-11.1761, 9.10048, 5.07489, 1.11", "-16.666, 8.43612, 2.45834, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.92059, 11.2823, 0.421023, 2.22", "-2.76316, 13.4012, -0.609433, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.75941, -12.3217, 2.43102, 2.49", "3.18722, -15.9247, 2.43102, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999927224605856
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.65377, -11.9555, 0.0201467, 0.863891", "8.12441, -26.2738, 0.0201467, 0.863891", "12.5951, -40.5921, 0.0201467, 0.863891" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-16.666, 8.43612, 2.45834, 0.55", "-18.5634, 7.59805, 3.59025, 0.55", "-19.9559, 6.77297, 4.4964, 0.55", "-21.3614, 5.90763, 5.38091, 0.55", "-22.8566, 5.05973, 6.26315, 0.55", "-25.2003, 3.84677, 7.67177, 0.55", "-27.881, 2.62619, 9.27234, 0.55", "-30.9573, 1.47787, 11.1047, 0.83", "-34.5248, 0.40796, 13.1733, 0.55", "-36.8487, -0.067665, 14.5099, 0.55", "-39.3599, -0.345255, 15.8903, 0.55", "-41.5496, -0.417048, 17.0269, 0.55", "-44.0216, -0.290797, 18.229, 0.55", "-46.1612, -0.09663, 19.2339, 0.55", "-48.3444, 0.152348, 20.2697, 0.55", "-50.1303, 0.292062, 21.0901, 0.55", "-52.0845, 0.358222, 21.9358, 0.55", "-54.2719, 0.35576, 22.8588, 0.55", "-56.8743, 0.41945, 23.9246, 0.55", "-60.0349, 0.64276, 25.1883, 0.55", "-61.1625, 0.78124, 25.6215, 0.55", "-64.3536, 1.33262, 26.8425, 0.83", "-66.8691, 1.83208, 27.8753, 0.55", "-70.3489, 2.64808, 29.4099, 0.55", "-71.7103, 3.00865, 30.0113, 0.83", "-74.6484, 3.75257, 31.3348, 0.55", "-76.6894, 4.29646, 32.2814, 0.55", "-78.8681, 4.81753, 33.2818, 0.55", "-80.4998, 5.12887, 34.0256, 0.55", "-81.731, 5.2919, 34.5272, 0.28", "-84.4566, 5.53056, 35.4781, 0.55", "-86.0662, 5.58182, 36.0039, 0.55", "-87.7287, 5.5514, 36.5652, 0.55", "-90.3204, 5.47869, 37.3978, 0.83", "-92.1721, 5.35718, 37.9945, 0.55", "-94.4743, 5.16827, 38.8148, 0.55", "-96.6453, 5.00103, 39.6732, 0.55", "-98.7058, 4.84399, 40.5522, 0.55", "-100.625, 4.73861, 41.4963, 0.55", "-108.412, 4.90483, 46.8869, 0.55", "-116.769, 3.17491, 51.0396, 0.55", "-125.195, 2.75339, 55.3494, 0.55", "-132.978, 1.30939, 60.5787, 0.55", "-139.085, -1.25909, 67.4083, 0.55", "-144.721, -6.249, 73.3839, 0.55", "-150.15, -12.686, 78.1793, 0.55", "-156.042, -17.4375, 84.0825, 0.55", "-161.982, -22.0744, 90.0192, 0.55", "-168.328, -25.8715, 96.0716, 0.55", "-172.974, -29.4758, 103.6, 0.55", "-176.575, -34.1548, 111.172, 0.55", "-178.584, -37.4452, 119.904, 0.55", "-178.712, -39.5268, 129.18, 0.55", "-178.197, -42.0275, 138.351, 0.55", "-176.414, -45.6829, 147.003, 0.55", "-175.518, -49.3675, 155.78, 0.55", "-175.345, -54.1145, 164.133, 0.55", "-176.998, -58.8824, 172.31, 0.55", "-178.97, -62.3889, 180.975, 0.55", "-180.058, -67.194, 189.227, 0.55", "-179.456, -72.5174, 197.24, 0.55", "-177.363, -79.0295, 204.129, 0.55", "-174.516, -85.2026, 211.03, 0.55", "-171.622, -91.8258, 217.52, 0.55", "-168.389, -98.6578, 223.642, 0.55", "-165.394, -104.815, 230.492, 0.55", "-161.846, -111.837, 236.232, 0.55", "-157.476, -118.539, 241.743, 0.55", "-153.141, -124.849, 247.687, 0.55", "-148.676, -131.451, 253.232, 0.55", "-145.972, -138.186, 259.7, 0.55", "-144.879, -146.04, 265.456, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-16.666, 8.43612, 2.45834, 0.83", "-20.3647, 11.1816, 1.78126, 0.83", "-22.0263, 12.2876, 0.506729, 0.83", "-23.9742, 13.5841, -0.987391, 1.38", "-26.7864, 15.456, -3.14452, 1.11", "-29.5744, 17.3118, -5.28309, 1.11", "-31.9922, 18.9211, -7.13767, 1.11", "-40.6337, 25.5041, -16.4541, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-2.76316, 13.4012, -0.609433, 1.66", "-3.369, 15.9759, -1.88928, 1.66", "-4.02891, 18.2755, -3.01547, 1.94", "-4.5864, 20.3408, -3.99448, 0.83", "-5.14532, 22.9566, -5.22993, 0.83", "-5.52827, 24.8959, -6.24598, 0.83", "-6.04679, 28.431, -8.06973, 0.83", "-6.32931, 30.8693, -9.40595, 0.83", "-6.52699, 32.9006, -10.5318, 0.83", "-6.73843, 35.8966, -12.1133, 1.38", "-6.94683, 40.639, -14.7373, 0.83", "-7.01595, 46.4652, -17.8117, 0.83", "-6.81281, 50.6424, -19.7875, 0.83", "-6.58407, 53.4252, -21.0422, 0.83", "-6.18793, 57.5219, -22.7417, 0.83", "-5.44921, 63.8603, -25.1505, 0.83", "-4.97077, 66.9729, -26.2071, 0.83", "-4.03482, 72.4387, -27.9424, 0.83", "-3.16222, 77.0735, -29.3185, 0.83", "-2.78382, 79.0177, -29.9393, 1.94", "-2.43387, 81.2181, -30.6154, 1.11", "-2.18221, 83.4374, -31.2377, 0.55", "-2.00745, 85.6753, -32.0137, 1.38", "-1.77583, 91.1644, -34.0892, 0.55", "-1.68704, 94.9561, -35.5736, 1.11", "-1.62898, 99.9267, -37.6094, 0.55", "-1.63079, 102.952, -38.8737, 1.94", "-1.74978, 109.363, -41.5869, 0.28", "-1.8276, 111.297, -42.3827, 0.83", "-2.01134, 113.81, -43.3476, 0.28", "-2.17293, 115.667, -44.0056, 1.66", "-2.56957, 119.636, -45.2596, 0.55", "-2.79974, 121.483, -45.685, 0.28", "-3.47483, 126.481, -46.3059, 0.55", "-3.79488, 128.935, -46.619, 0.83", "-4.06248, 131.35, -46.9014, 0.83", "-4.22308, 133.101, -47.1413, 0.55", "-4.35378, 135.451, -47.5164, 0.55", "-4.26746, 139.275, -48.2883, 1.11", "-3.75355, 142.975, -49.1523, 0.28", "-3.31331, 144.761, -49.5917, 0.55", "-2.52937, 147.039, -50.2819, 0.28", "-2.04654, 148.194, -50.6784, 0.55", "-1.0183, 150.347, -51.4688, 0.55", "0.351717, 153.065, -52.4643, 0.83", "1.13726, 154.71, -52.9911, 0.55", "2.7713, 158.367, -54.1781, 1.38", "4.29336, 161.826, -55.3723, 0.55", "5.09846, 163.854, -56.1601, 0.28", "5.68934, 165.531, -56.8501, 0.55", "6.38487, 167.915, -57.8084, 0.28", "6.87553, 169.904, -58.5335, 1.11", "7.48787, 172.683, -59.337, 0.55", "7.99778, 175.202, -59.9704, 0.28", "8.4804, 177.646, -60.4907, 0.55", "9.19708, 181.079, -61.1155, 0.55", "9.66495, 183.159, -61.3894, 0.55", "10.4373, 186.609, -61.8015, 0.55", "11.0136, 189.052, -62.087, 0.28", "11.5856, 191.329, -62.4195, 0.55", "12.3647, 194.377, -62.995, 0.83", "13.1752, 197.368, -63.8029, 0.55", "13.9002, 200.15, -64.8961, 0.28", "14.3312, 202.069, -65.9919, 0.55", "14.6089, 203.731, -67.0818, 0.55", "14.6831, 204.621, -67.7309, 0.55", "14.7854, 207.812, -70.1492, 0.28", "14.8178, 210.295, -71.9058, 1.11", "14.8509, 214.803, -74.6046, 0.83", "14.9746, 217.239, -75.8493, 0.55", "15.2601, 220.418, -77.203, 0.83", "15.4631, 222.042, -77.7214, 0.83", "15.9314, 224.916, -78.2533, 0.28", "16.2567, 226.669, -78.3959, 0.55", "17.1644, 231.01, -78.4646, 0.55", "18.1723, 235.4, -78.4538, 0.28", "19.0785, 239.22, -78.3747, 0.55", "19.6481, 241.777, -78.3611, 1.11", "20.1573, 244.142, -78.4261, 0.55", "20.5009, 245.918, -78.5224, 0.28", "20.6161, 246.851, -78.567, 0.55", "20.7681, 248.392, -78.577, 0.28", "20.7972, 249.17, -78.5254, 0.55", "20.8222, 250.938, -78.2986, 0.55", "20.8851, 252.821, -77.9651, 0.83", "21.0999, 256.948, -76.9959, 0.55", "21.3353, 260.326, -76.18, 0.83", "21.7629, 265.286, -75.0619, 0.55", "21.987, 267.62, -74.6397, 0.55", "22.4378, 271.906, -74.0371, 0.28", "22.7308, 274.339, -73.8796, 1.38", "23.1608, 277.393, -74.0022, 0.55", "23.562, 280.206, -74.4247, 0.83", "23.846, 282.982, -75.2644, 0.28", "23.8785, 283.821, -75.5762, 0.55", "23.7995, 286.291, -76.7115, 0.28", "23.6654, 287.934, -77.5222, 0.55", "23.4687, 289.534, -78.2643, 0.55", "22.8558, 293.692, -80.097, 0.28", "22.6547, 295.037, -80.6725, 0.83", "22.2163, 298.019, -81.9503, 0.55", "21.7433, 301.272, -83.3351, 0.28", "21.4515, 303.193, -84.1187, 0.55", "21.1344, 305.627, -84.907, 0.28", "21.0568, 306.276, -85.0632, 0.55", "20.8247, 308.03, -85.3844, 0.28", "20.6129, 309.5, -85.5728, 0.55", "20.1812, 312.243, -85.8364, 0.28", "19.41, 316.638, -86.213, 0.55", "18.8343, 319.607, -86.5254, 1.11", "17.9617, 323.998, -87.1955, 0.55", "17.6696, 325.459, -87.4671, 0.83", "16.9026, 329.209, -88.3771, 0.55", "16.0847, 333.156, -89.5459, 0.55", "15.6534, 335.564, -90.4768, 0.83", "15.3086, 339.121, -92.0454, 0.28", "15.2988, 341.251, -93.044, 0.83", "15.4958, 344.25, -94.3168, 0.28", "15.6303, 345.342, -94.7357, 0.55", "16.3556, 349.808, -96.3299, 0.28", "17.056, 353.594, -97.4624, 0.28", "17.7575, 357.016, -98.3153, 0.28", "18.9395, 362.153, -99.4323, 0.28", "19.2877, 363.57, -99.6374, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.76316, 13.4012, -0.609433, 0.83", "-4.7853, 16.0741, -0.572112, 0.83", "-6.27702, 18.2382, -0.694825, 0.83", "-7.26513, 19.8261, -0.825803, 0.55", "-8.09983, 21.2629, -0.990166, 0.83", "-8.79492, 22.4429, -1.18303, 0.55", "-9.74738, 24.0857, -1.48172, 0.83", "-10.9589, 26.4237, -2.63102, 0.83", "-11.7436, 28.0406, -3.72105, 0.83", "-12.2855, 29.1976, -4.6015, 0.83", "-13.3528, 31.4251, -6.3049, 0.55", "-14.2005, 33.2144, -7.67805, 0.83", "-17.8893, 41.1015, -13.4656, 0.83", "-18.7667, 42.9756, -14.722, 0.83", "-20.2742, 46.249, -16.6742, 0.83", "-21.7738, 49.7356, -18.3394, 0.83", "-22.969, 52.6931, -19.3776, 0.83", "-24.5834, 56.9175, -20.3101, 0.83", "-25.7358, 60.2881, -20.5796, 0.83", "-26.6328, 63.3676, -20.7844, 0.83", "-27.5558, 67.487, -20.9684, 0.83", "-28.1534, 71.172, -21.0269, 0.83", "-28.6697, 75.6894, -20.9158, 0.83", "-28.8734, 78.8276, -20.8525, 0.83", "-28.9472, 81.1713, -20.8672, 0.55", "-29.0368, 84.0604, -20.9807, 1.11", "-29.0955, 87.4198, -21.2048, 0.55", "-29.092, 90.6821, -21.4555, 0.55", "-29.1535, 93.5466, -21.6979, 0.55", "-29.3594, 96.1377, -21.9173, 0.55", "-29.8336, 99.4512, -22.1769, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.18722, -15.9247, 2.43102, 0.83", "3.77832, -18.0403, 3.84359, 0.83", "4.84984, -21.8754, 6.40426, 1.66", "5.86899, -25.5231, 8.83977, 1.94", "7.0176, -29.6341, 11.5846, 1.94", "8.73196, -35.7701, 15.6815, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.18722, -15.9247, 2.43102, 0.83", "1.79704, -20.1444, 2.07929, 0.83", "0.609525, -23.2662, 1.90491, 0.83", "-0.0703951, -25.0651, 1.76874, 0.55", "-1.17154, -27.6099, 1.46304, 1.11", "-2.33526, -30.2229, 1.05356, 0.83", "-3.05042, -31.9598, 0.759778, 0.55", "-4.30858, -35.0853, 0.00642265, 0.83", "-5.69443, -38.524, -1.07326, 0.55", "-6.7153, -41.2674, -2.27263, 0.55", "-7.44722, -43.398, -3.44442, 0.83", "-8.48905, -46.6409, -5.50855, 0.83", "-9.55629, -50.0383, -7.91005, 0.55", "-10.1675, -52.3987, -9.75483, 0.55", "-10.9526, -55.5523, -12.4383, 1.11", "-11.3054, -57.0536, -13.9226, 0.55", "-11.4905, -57.719, -14.7095, 0.55", "-11.9149, -59.0094, -16.4193, 0.55", "-12.4318, -60.4677, -18.4417, 0.83", "-13.2086, -62.3566, -21.1749, 0.83", "-14.8598, -65.513, -25.657, 0.55", "-15.7376, -66.8818, -27.6021, 0.28", "-16.5314, -68.0529, -29.189, 0.83", "-17.6001, -69.5761, -31.1382, 0.55", "-18.2301, -70.4843, -32.173, 0.55", "-19.5696, -72.6826, -34.2061, 1.38", "-21.8434, -77.0611, -37.3272, 0.55", "-22.2891, -78.1917, -38.0135, 0.83", "-22.7825, -80.7322, -39.2505, 0.28", "-22.8174, -82.0088, -39.6992, 1.11", "-22.6798, -83.8892, -40.2162, 1.11", "-22.4848, -85.2282, -40.486, 1.11", "-22.1173, -87.4984, -40.7694, 0.55", "-21.3065, -92.8146, -41.3891, 0.28", "-20.6937, -97.0573, -41.8157, 0.55", "-20.3682, -99.4356, -42.0788, 0.55", "-19.9275, -102.648, -42.4288, 1.94", "-19.6575, -104.951, -42.6622, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "12.5951, -40.5921, 0.0201467, 0.756209", "17.0657, -54.9104, 0.0201467, 0.756209", "21.5363, -69.2287, 0.0201467, 0.756209" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-40.6337, 25.5041, -16.4541, 0.83", "-41.1906, 25.5155, -16.4391, 0.83", "-45.1089, 25.7127, -16.1989, 0.83", "-49.6881, 26.1613, -16.0853, 0.83", "-53.0847, 26.6024, -16.1799, 0.83", "-57.3319, 27.2159, -16.4218, 0.83", "-59.871, 27.63, -16.6018, 0.83", "-63.3618, 28.3665, -16.9228, 0.55", "-68.6487, 29.8616, -17.5877, 1.38", "-71.9002, 30.9474, -18.0756, 0.55", "-73.7563, 31.5762, -18.3904, 0.55", "-76.9279, 32.5849, -19.1301, 0.55", "-80.8845, 33.7981, -20.1485, 0.55", "-83.1319, 34.5145, -20.7668, 0.83", "-86.6345, 35.5823, -21.5819, 0.83", "-90.0906, 36.59, -22.38, 0.55", "-96.1944, 38.3186, -23.8333, 0.55", "-102.044, 39.7838, -25.5445, 0.55", "-104.618, 40.3878, -26.3766, 0.55", "-108.192, 41.0995, -27.5655, 0.83", "-112.017, 41.8346, -28.9164, 0.55", "-115.989, 42.6123, -30.3237, 1.66", "-122.116, 43.7515, -32.3226, 0.28", "-123.421, 44.0256, -32.7518, 0.55", "-127.217, 45.0649, -33.8217, 0.28", "-128.992, 45.6843, -34.23, 0.55", "-132.662, 47.2273, -34.8381, 0.55", "-135.909, 48.8499, -35.1954, 0.55", "-139.818, 51.0889, -35.4712, 0.83", "-143.988, 53.6342, -35.8486, 0.55", "-146.051, 55.006, -36.0933, 0.55", "-149.793, 57.6284, -36.6243, 0.55", "-153.005, 60.1747, -37.332, 0.83", "-155.093, 61.9965, -37.9194, 0.55", "-156.838, 63.7049, -38.5201, 0.55", "-158.499, 65.5287, -39.1086, 0.28", "-161.738, 69.3265, -40.1677, 0.55", "-165.326, 73.7416, -41.0831, 0.28", "-167.499, 76.4466, -41.5754, 0.55", "-170.014, 79.4002, -42.061, 0.28", "-172.851, 82.3648, -42.499, 0.55", "-175.456, 84.7608, -42.7589, 0.83", "-182.07, 89.9088, -43.1549, 0.55", "-183.744, 90.9909, -43.2336, 1.11", "-187.6, 93.1673, -43.5306, 0.55", "-191.379, 94.9995, -43.8419, 0.83", "-195.214, 96.7689, -44.2665, 0.28", "-196.596, 97.351, -44.5412, 0.83", "-200.156, 98.7316, -45.5912, 0.28", "-201.835, 99.4806, -46.1985, 0.55", "-204.247, 100.821, -47.4227, 0.55", "-207.247, 102.641, -49.4983, 0.55", "-210.681, 104.742, -52.238, 0.55", "-213.309, 106.428, -54.4837, 0.55", "-215.107, 107.613, -56.057, 0.55", "-218.908, 110.266, -59.8008, 0.55", "-221.78, 112.444, -63.0327, 0.28", "-222.7, 113.142, -64.2465, 0.55", "-223.79, 114.035, -65.817, 0.28", "-225.355, 115.469, -68.6429, 1.11", "-226.898, 117.111, -71.925, 0.55", "-227.378, 117.592, -73.4988, 0.83", "-228.767, 118.981, -79.3336, 0.28", "-229.24, 119.419, -81.6411, 0.55", "-229.822, 119.901, -84.7015, 0.28", "-230.098, 120.118, -86.1843, 0.83", "-233.192, 122.472, -101.99, 0.55", "-233.494, 122.693, -103.604, 0.83", "-234.451, 123.47, -109.364, 0.28", "-234.738, 123.692, -111.22, 0.55", "-235.075, 123.889, -113.123, 0.28", "-235.665, 124.253, -116.388, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-40.6337, 25.5041, -16.4541, 1.11", "-41.9017, 26.5731, -21.7518, 1.11", "-42.8632, 27.6475, -26.1924, 0.28", "-43.099, 27.845, -27.0446, 0.83", "-44.2296, 28.8703, -30.8654, 0.28", "-44.5203, 29.1468, -31.8446, 0.55", "-45.5695, 30.2749, -35.4573, 0.55", "-46.4029, 31.1515, -38.3264, 2.22", "-49.9858, 35.1456, -50.5154, 0.28", "-50.5681, 35.8281, -52.4468, 1.94", "-53.5492, 39.6754, -62.4376, 0.28", "-54.2239, 40.5622, -64.6776, 0.55", "-55.1798, 41.8484, -67.828, 0.28", "-55.6004, 42.4752, -69.2184, 1.66", "-56.6024, 44.2263, -72.5537, 0.28", "-57.7297, 46.0787, -75.887, 0.28", "-58.5835, 47.4074, -77.9669, 2.49", "-61.1072, 50.8397, -83.3458, 0.28", "-62.9924, 53.3534, -86.9198, 0.28", "-63.7088, 54.3741, -88.1884, 1.66", "-65.323, 56.8908, -90.8717, 0.28", "-66.1359, 58.2647, -92.1209, 0.83", "-68.1612, 61.9394, -95.195, 0.28", "-69.0901, 63.746, -96.593, 1.11", "-70.5902, 66.768, -99.2029, 0.28", "-71.5678, 69.0123, -101.204, 0.28", "-72.1469, 70.6619, -102.687, 0.83", "-72.9106, 73.0334, -105.097, 0.28", "-73.0305, 73.4188, -105.501, 0.83", "-73.4699, 74.5894, -106.883, 0.28", "-73.864, 75.5311, -108.06, 0.83", "-74.1739, 76.3391, -109.022, 0.83", "-75.3914, 80.3607, -113.626, 0.28", "-75.7689, 82.0215, -115.669, 1.11", "-75.994, 83.5536, -117.692, 0.28", "-76.0275, 84.4441, -118.874, 0.83", "-75.9714, 85.9461, -121.094, 0.28", "-75.7786, 87.4159, -123.469, 0.83", "-75.2415, 89.9622, -128.235, 0.28", "-75.0252, 90.9199, -130.386, 0.28", "-74.8752, 91.6929, -132.553, 0.55", "-74.6776, 93.1071, -137.115, 0.28", "-74.6301, 93.4895, -138.414, 0.83", "-74.5814, 94.636, -142.23, 0.28", "-74.5696, 95.0995, -143.758, 0.83", "-74.5697, 96.1217, -147.651, 0.28", "-74.5264, 96.5155, -149.259, 0.83", "-74.3443, 96.9274, -150.919, 0.28", "-74.2438, 97.0563, -151.485, 0.28", "-73.795, 97.472, -153.249, 0.83", "-72.35, 98.6321, -158.457, 0.28", "-72.0618, 98.8257, -159.404, 0.55", "-71.5786, 99.0308, -161.229, 0.28", "-71.3492, 99.0545, -162.214, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-29.8336, 99.4512, -22.1769, 0.55", "-28.9208, 102.32, -22.9012, 0.55", "-28.6792, 103.105, -23.1105, 0.28", "-28.3365, 104.365, -23.4661, 0.55", "-27.557, 107.685, -24.5587, 0.28", "-27.0074, 110.09, -25.4263, 0.55", "-26.5899, 112.358, -26.2753, 0.55", "-26.3232, 114.615, -27.1663, 0.55", "-26.0704, 117.344, -28.3228, 0.55", "-25.8251, 120.157, -29.5291, 0.55", "-25.6786, 121.959, -30.2551, 0.55", "-25.4833, 124.874, -31.393, 0.55", "-25.283, 128.213, -32.5521, 0.55", "-25.0603, 130.93, -33.3073, 0.55", "-24.6616, 134.698, -34.0186, 0.28", "-24.508, 135.984, -34.153, 0.55", "-24.3261, 137.335, -34.2389, 0.55", "-24.0347, 139.181, -34.3067, 0.55", "-23.8537, 140.541, -34.3082, 0.55", "-23.6715, 142.67, -34.3927, 0.83", "-23.5189, 144.707, -34.5713, 0.55", "-23.2617, 146.975, -34.7907, 0.28", "-22.8681, 149.763, -35.1138, 0.55", "-22.5205, 151.929, -35.3976, 0.28", "-22.2907, 153.31, -35.5921, 1.38", "-21.8092, 155.839, -35.9674, 1.38", "-20.7398, 161.152, -36.6605, 0.28", "-20.4151, 162.773, -36.8767, 0.83", "-20.1727, 163.932, -37.0304, 0.83", "-19.4658, 167.385, -37.4984, 0.28", "-19.1387, 169.082, -37.7096, 0.55", "-18.8575, 170.735, -37.9439, 0.55", "-18.4915, 173.303, -38.3902, 0.55", "-18.0894, 176.091, -38.7786, 0.28", "-17.9217, 177.1, -38.9216, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-29.8336, 99.4512, -22.1769, 0.83", "-30.1712, 101.339, -22.5415, 0.83", "-30.7993, 104.85, -23.2197, 0.28", "-31.3485, 107.92, -23.8128, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "8.73196, -35.7701, 15.6815, 1.66", "7.36454, -38.5884, 17.8123, 1.66" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "8.73196, -35.7701, 15.6815, 0.55", "10.7817, -36.6281, 16.088, 0.55", "13.8527, -37.8742, 16.6881, 0.55", "16.2126, -38.7841, 17.1726, 0.55", "18.0372, -39.4711, 17.5493, 0.55", "21.6362, -40.7849, 18.4063, 0.55", "23.2674, -41.3809, 18.8418, 0.55", "26.248, -42.4206, 19.7399, 0.55", "27.5604, -42.8366, 20.2027, 0.55", "29.8672, -43.5523, 21.0922, 0.55", "32.506, -44.2975, 22.1831, 0.55", "34.9874, -44.8799, 23.2586, 0.55", "38.2244, -45.5923, 24.6768, 0.55", "41.3802, -46.1558, 26.0862, 0.55", "43.1398, -46.3947, 26.8553, 0.55", "46.294, -46.688, 28.1927, 0.55", "48.1199, -46.7816, 28.926, 0.55", "50.1033, -46.8159, 29.7003, 0.55", "52.1028, -46.792, 30.4562, 0.55", "54.3283, -46.7268, 31.2901, 0.55", "56.3788, -46.6709, 32.0733, 0.55", "57.6399, -46.6273, 32.5501, 0.55", "60.2727, -46.5039, 33.5333, 0.55", "62.4889, -46.358, 34.3372, 0.55", "64.7117, -46.1604, 35.0974, 0.55", "65.6427, -46.0695, 35.4018, 0.55", "67.2885, -45.8553, 35.9685, 0.55", "68.7573, -45.6742, 36.4959, 0.55", "69.6899, -45.5705, 36.8536, 0.55", "71.9429, -45.3998, 37.7302, 0.55", "74.1819, -45.3089, 38.5895, 0.55", "77.0084, -45.3472, 39.6955, 0.55", "79.3867, -45.5525, 40.5898, 0.55", "80.5306, -45.7278, 41.0476, 0.55", "82.6529, -46.2241, 41.976, 0.55", "84.1717, -46.7471, 42.7159, 0.55", "85.6392, -47.4316, 43.6279, 0.28", "86.5681, -48.07, 44.3325, 1.38", "88.527, -49.6439, 46.0456, 0.55", "89.6591, -50.6905, 47.2022, 0.55", "90.5272, -51.6989, 48.3161, 0.83", "92.0933, -53.8454, 50.8181, 0.55", "92.7272, -54.8571, 52.0839, 0.55", "98.8999, -55.495, 55.5178, 0.55", "105.216, -55.3471, 58.7298, 0.55", "111.694, -56.1349, 61.5136, 0.55", "117.534, -57.8736, 65.1825, 0.55", "122.674, -59.9019, 69.6695, 0.55", "128.438, -61.0855, 73.6421, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-19.6575, -104.951, -42.6622, 0.28", "-20.2045, -108.266, -43.3151, 0.28", "-20.4472, -109.773, -43.6135, 0.83", "-21.0413, -114.671, -44.6864, 0.28", "-21.1779, -115.942, -44.9296, 0.83", "-21.4421, -118.399, -45.3995, 0.28", "-21.7242, -121.023, -45.9016, 0.55", "-21.9458, -122.847, -46.2972, 0.55", "-22.3769, -126.877, -47.2169, 0.28", "-22.4581, -128.73, -47.6322, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-19.6575, -104.951, -42.6622, 0.28", "-22.3339, -113.432, -42.4141, 0.28", "-22.9308, -115.324, -42.3587, 0.55", "-23.7383, -117.883, -42.2839, 0.55", "-24.4493, -120.136, -42.218, 0.28", "-25.097, -122.188, -42.158, 0.55", "-25.8636, -124.617, -42.0869, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-17.9217, 177.1, -38.9216, 0.28", "-18.3395, 178.842, -39.3484, 0.28", "-18.7175, 180.226, -39.7304, 0.83", "-19.368, 182.128, -40.355, 0.28", "-19.9838, 183.817, -40.9077, 0.28", "-20.2545, 184.565, -41.1368, 0.55", "-21.0484, 186.687, -41.7045, 0.28", "-21.6063, 188.009, -42.0607, 0.83", "-22.8278, 190.108, -42.7419, 0.28", "-23.8138, 191.473, -43.2834, 0.28", "-24.3635, 192.194, -43.5874, 0.55", "-25.6109, 193.712, -44.2473, 0.28", "-26.8505, 195.063, -44.8779, 0.83", "-29.0496, 197.231, -46.0328, 0.83", "-30.683, 198.765, -46.7568, 0.83", "-32.3336, 200.234, -47.447, 0.28", "-34.42, 202.092, -48.233, 0.55", "-36.7357, 204.212, -49.0019, 0.28", "-38.1158, 205.5, -49.4019, 1.11", "-41.7287, 208.957, -50.3308, 0.28", "-42.9753, 210.061, -50.5847, 0.83", "-44.8451, 211.613, -50.9394, 0.28", "-45.6363, 212.277, -51.0618, 0.55", "-47.5324, 213.872, -51.2743, 0.28", "-47.8428, 214.129, -51.3143, 0.55", "-49.3032, 215.226, -51.6605, 0.28", "-51.2154, 216.646, -52.0726, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-17.9217, 177.1, -38.9216, 0.28", "-16.2369, 179.538, -38.9457, 0.28", "-15.2045, 181.194, -38.9501, 0.55", "-13.9818, 183.359, -38.8238, 0.28", "-13.2777, 184.867, -39.0204, 0.55", "-12.4425, 186.864, -39.6165, 0.28", "-12.3101, 187.18, -39.711, 0.55", "-11.5538, 189.461, -40.6133, 0.28", "-10.9231, 191.85, -41.7357, 0.83", "-9.76518, 197.054, -45.049, 0.28", "-9.40364, 199.013, -46.5682, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "7.36454, -38.5884, 17.8123, 1.66", "7.21658, -39.5038, 18.0294, 1.66", "6.7526, -42.2627, 18.7161, 1.11", "5.85706, -49.4369, 20.64, 1.11", "5.12397, -56.8114, 22.8305, 1.11", "4.64202, -61.4361, 24.4147, 1.11", "4.15772, -66.7828, 26.4064, 1.11", "4.0035, -69.8371, 27.6206, 1.11", "3.96825, -75.8371, 30.1641, 1.11", "4.08869, -81.8313, 32.9456, 1.11", "4.16372, -92.1429, 38.036, 1.11", "4.1304, -97.5044, 40.6538, 1.11", "4.01241, -102.723, 43.1857, 1.11", "3.56153, -108.193, 45.7505, 1.11", "2.48474, -114.369, 48.5699, 0.83", "1.31283, -118.781, 50.5226, 0.55", "0.067122, -122.268, 51.9329, 0.55", "-1.2917, -125.513, 53.0703, 0.55", "-3.56261, -130.188, 54.6557, 0.55", "-6.92877, -136.649, 56.6937, 0.55", "-9.52769, -141.803, 58.1429, 0.55", "-11.5698, -146.059, 59.3267, 0.55", "-13.8938, -151.219, 60.8597, 0.28", "-17.3179, -163.574, 67.1693, 0.28", "-21.4096, -174.571, 75.1665, 0.28", "-25.1825, -184.865, 84.1094, 0.28", "-27.8906, -194.073, 94.3957, 0.28", "-28.1068, -202.931, 105.269, 0.28", "-26.0705, -210.427, 116.834, 0.28", "-24.055, -217.767, 128.493, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "7.36454, -38.5884, 17.8123, 0.55", "10.1729, -39.6304, 20.024, 0.55", "11.4992, -40.17, 20.9161, 0.55", "15.3447, -41.606, 23.4567, 0.55", "25.1011, -44.9687, 29.4628, 0.55", "27.2989, -45.6006, 30.7192, 0.55", "32.8774, -46.8028, 33.7662, 0.55", "36.9235, -47.603, 36.0991, 0.28", "43.0536, -48.617, 39.6379, 0.28", "45.5188, -48.959, 41.051, 0.28", "48.8313, -49.1408, 42.2762, 0.28", "54.1687, -48.9707, 44.2799, 0.28", "66.7334, -52.1035, 51.4707, 0.28", "77.817, -55.841, 60.582, 0.28", "88.7708, -59.5258, 69.8696, 0.28", "99.4761, -60.2373, 80.0623, 0.28", "110.226, -63.1305, 89.8368, 0.28", "118.998, -67.5007, 100.995, 0.28", "127.145, -74.858, 111.148, 0.28", "133.753, -81.4127, 122.826, 0.28", "139.548, -87.1688, 135.298, 0.28", "146.858, -93.3864, 146.716, 0.28", "154.673, -99.2128, 157.983, 0.28", "161.84, -102.663, 170.507, 0.28", "171.789, -106.788, 180.716, 0.28", "183.191, -108.679, 189.965, 0.28", "193.789, -111.07, 200.028, 0.28", "205.311, -111.01, 209.317, 0.28", "216.308, -111.628, 219.201, 0.28", "227.383, -111.221, 229.014, 0.28", "237.462, -108.463, 239.537, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "128.438, -61.0855, 73.6421, 0.28", "136.292, -63.8622, 75.1268, 0.28", "143.704, -67.6071, 76.9086, 0.28", "151.274, -70.5599, 79.3149, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "128.438, -61.0855, 73.6421, 0.28", "136.642, -62.2535, 80.4752, 0.28", "145.571, -64.7172, 85.9597, 0.28", "154.949, -66.4906, 90.9034, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-25.8636, -124.617, -42.0869, 0.28", "-27.8278, -127.676, -41.9842, 0.28", "-28.435, -128.617, -41.9548, 0.55", "-29.9834, -131.108, -42.0193, 0.28", "-30.9316, -132.614, -42.0919, 0.83", "-32.5915, -135.158, -42.239, 0.28", "-33.8646, -137.092, -42.3559, 0.28", "-35.1862, -139.045, -42.6269, 0.83", "-37.3218, -142.17, -43.2201, 0.28", "-38.0451, -143.258, -43.5296, 0.55", "-40.4236, -147.01, -44.8275, 0.28", "-41.3072, -148.466, -45.4313, 0.83", "-43.9246, -152.841, -47.4802, 0.28", "-44.5473, -153.986, -48.0679, 0.83", "-46.1829, -157.437, -49.9063, 0.28", "-46.5514, -158.505, -50.4587, 0.55", "-46.8957, -160.228, -51.3157, 0.28", "-47.1122, -161.761, -52.0408, 0.83", "-47.2847, -165.942, -53.6564, 0.28", "-47.2588, -167.15, -54.0702, 0.83", "-46.8945, -170.69, -54.9153, 0.28", "-46.6474, -172.083, -55.2208, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-25.8636, -124.617, -42.0869, 0.28", "-24.8617, -127.796, -42.2354, 0.28", "-24.3407, -129.449, -42.3127, 1.11", "-23.8738, -130.93, -42.3819, 0.28", "-23.4332, -132.327, -42.4472, 1.38" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_27", "dend_26", "dend_25", "dend_20", "dend_13", "dend_0", "dend_24", "dend_21", "dend_19", "dend_14", "dend_6", "dend_1", "dend_23", "dend_22", "dend_16", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "dend_18", "dend_17", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_27", "dend_26", "dend_25", "dend_20", "dend_13", "dend_0", "dend_24", "dend_21", "dend_19", "dend_14", "dend_6", "dend_1", "dend_23", "dend_22", "dend_16", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "dend_18", "dend_17", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_13", "dend_0", "axon_0", "axon_0", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_LBC_4738b5c12c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_27, dend_26, dend_25, dend_20, dend_13, dend_0, dend_24, dend_21, dend_19, dend_14, dend_6, dend_1, dend_23, dend_22, dend_16, dend_15, dend_10, dend_7, dend_5, dend_2, dend_18, dend_17, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_27, dend_26, dend_25, dend_20, dend_13, dend_0, dend_24, dend_21, dend_19, dend_14, dend_6, dend_1, dend_23, dend_22, dend_16, dend_15, dend_10, dend_7, dend_5, dend_2, dend_18, dend_17, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_13, dend_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.49999927224605856)
    connect dend_27(0), soma_0(0.49999927224605856)
    connect dend_26(0), soma_0(0.49999927224605856)
    connect dend_25(0), soma_0(0.49999927224605856)
    connect dend_20(0), soma_0(0.49999927224605856)
    connect dend_13(0), soma_0(0.49999927224605856)
    connect dend_0(0), soma_0(0.49999927224605856)
    connect axon_0(0), soma_0(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.51694, 11.0104, -0.0819092, 3.19551 ) }
    soma_0 { pt3dadd( -3.15841, 9.8621, -0.0768064, 5.3635 ) }
    soma_0 { pt3dadd( -2.79987, 8.71381, -0.0717036, 5.2385 ) }
    soma_0 { pt3dadd( -2.44133, 7.56552, -0.0666008, 5.40379 ) }
    soma_0 { pt3dadd( -2.0828, 6.41722, -0.061498, 6.02088 ) }
    soma_0 { pt3dadd( -1.72426, 5.26893, -0.0563952, 7.0572 ) }
    soma_0 { pt3dadd( -1.36573, 4.12064, -0.0512924, 8.33548 ) }
    soma_0 { pt3dadd( -1.00719, 2.97235, -0.0461896, 9.39045 ) }
    soma_0 { pt3dadd( -0.648657, 1.82405, -0.0410868, 9.67825 ) }
    soma_0 { pt3dadd( -0.290122, 0.675761, -0.035984, 9.93356 ) }
    soma_0 { pt3dadd( 0.0684139, -0.472532, -0.0308812, 10.1889 ) }
    soma_0 { pt3dadd( 0.426949, -1.62083, -0.0257784, 10.0539 ) }
    soma_0 { pt3dadd( 0.785485, -2.76912, -0.0206756, 9.68551 ) }
    soma_0 { pt3dadd( 1.14402, -3.91741, -0.0155728, 9.07939 ) }
    soma_0 { pt3dadd( 1.50256, -5.0657, -0.0104701, 8.46979 ) }
    soma_0 { pt3dadd( 1.86109, -6.214, -0.00536725, 7.63175 ) }
    soma_0 { pt3dadd( 2.21963, -7.36229, -2.64453E-4, 6.67377 ) }
    soma_0 { pt3dadd( 2.57816, -8.51058, 0.00483835, 5.68988 ) }
    soma_0 { pt3dadd( 2.9367, -9.65888, 0.00994114, 4.70477 ) }
    soma_0 { pt3dadd( 3.29523, -10.8072, 0.0150439, 3.57171 ) }
    soma_0 { pt3dadd( 3.65377, -11.9555, 0.0201467, 2.11631 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.91059, 2.76677, 14.561, 0.83 ) }
    dend_28 { pt3dadd( -3.8577, 5.89912, 15.1946, 0.83 ) }
    dend_28 { pt3dadd( -5.43096, 10.9703, 16.3468, 0.83 ) }
    dend_28 { pt3dadd( -6.2589, 13.6772, 16.9764, 0.55 ) }
    dend_28 { pt3dadd( -7.09052, 16.0711, 17.6206, 0.83 ) }
    dend_28 { pt3dadd( -8.44343, 19.9512, 18.7321, 0.55 ) }
    dend_28 { pt3dadd( -9.73929, 23.5377, 19.8501, 0.55 ) }
    dend_28 { pt3dadd( -11.0665, 27.0554, 21.1806, 0.55 ) }
    dend_28 { pt3dadd( -12.2263, 29.8094, 22.5016, 0.55 ) }
    dend_28 { pt3dadd( -13.9608, 33.6398, 24.7714, 0.55 ) }
    dend_28 { pt3dadd( -15.9283, 37.6751, 27.3836, 0.55 ) }
    dend_28 { pt3dadd( -17.4526, 40.5087, 29.3985, 0.55 ) }
    dend_28 { pt3dadd( -19.8044, 44.7859, 32.5811, 0.55 ) }
    dend_28 { pt3dadd( -22.1005, 49.0173, 35.6913, 0.55 ) }
    dend_28 { pt3dadd( -24.3542, 53.307, 38.8253, 0.55 ) }
    dend_28 { pt3dadd( -25.9981, 56.5082, 41.1605, 0.55 ) }
    dend_28 { pt3dadd( -28.0424, 60.2978, 43.9891, 0.55 ) }
    dend_28 { pt3dadd( -29.2907, 62.7192, 45.6778, 0.55 ) }
    dend_28 { pt3dadd( -30.3863, 64.9796, 47.026, 0.83 ) }
    dend_28 { pt3dadd( -31.5472, 67.8356, 48.2108, 0.55 ) }
    dend_28 { pt3dadd( -35.8145, 79.2689, 52.5672, 0.55 ) }
    dend_28 { pt3dadd( -40.8013, 89.0633, 59.1899, 0.55 ) }
    dend_28 { pt3dadd( -44.6984, 99.7183, 65.3104, 0.55 ) }
    dend_28 { pt3dadd( -46.2066, 110.807, 71.7481, 0.55 ) }
    dend_28 { pt3dadd( -49.4823, 122.053, 77.2355, 0.55 ) }
    dend_28 { pt3dadd( -50.4926, 133.343, 83.444, 0.55 ) }
    dend_28 { pt3dadd( -50.0666, 145.187, 88.6913, 0.55 ) }
    dend_28 { pt3dadd( -48.2382, 156.53, 94.5807, 0.55 ) }
    dend_28 { pt3dadd( -45.5083, 167.751, 100.319, 0.55 ) }
    dend_28 { pt3dadd( -42.9386, 178.177, 107.352, 0.55 ) }
    dend_28 { pt3dadd( -41.1483, 187.554, 115.826, 0.55 ) }
    dend_28 { pt3dadd( -41.1921, 197.231, 124.196, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -4.33059, 2.15777, 1.82102, 0.83 ) }
    dend_27 { pt3dadd( -5.03733, 2.36095, 0.861092, 0.83 ) }
    dend_27 { pt3dadd( -6.49178, 2.77497, -0.987314, 0.83 ) }
    dend_27 { pt3dadd( -9.12667, 3.5242, -4.15753, 0.83 ) }
    dend_27 { pt3dadd( -12.3664, 4.41904, -8.15694, 0.83 ) }
    dend_27 { pt3dadd( -13.7426, 4.77603, -9.75785, 0.55 ) }
    dend_27 { pt3dadd( -15.0053, 5.09261, -11.1366, 0.83 ) }
    dend_27 { pt3dadd( -16.0051, 5.43184, -12.281, 0.28 ) }
    dend_27 { pt3dadd( -16.792, 5.78323, -13.3344, 0.55 ) }
    dend_27 { pt3dadd( -20.0898, 7.42904, -18.1669, 0.55 ) }
    dend_27 { pt3dadd( -21.3183, 8.00676, -20.0934, 0.83 ) }
    dend_27 { pt3dadd( -22.798, 8.72066, -22.5666, 0.55 ) }
    dend_27 { pt3dadd( -25.6043, 10.0561, -27.3728, 0.55 ) }
    dend_27 { pt3dadd( -29.2441, 11.91, -33.8691, 0.55 ) }
    dend_27 { pt3dadd( -31.7409, 13.2179, -38.4971, 0.55 ) }
    dend_27 { pt3dadd( -33.9118, 14.3562, -42.4765, 0.55 ) }
    dend_27 { pt3dadd( -34.8275, 14.8265, -44.133, 0.55 ) }
    dend_27 { pt3dadd( -35.5929, 15.1684, -45.3855, 0.55 ) }
    dend_27 { pt3dadd( -37.9109, 16.0047, -48.4699, 0.55 ) }
    dend_27 { pt3dadd( -40.5382, 16.9448, -51.3092, 0.55 ) }
    dend_27 { pt3dadd( -42.4084, 17.6012, -53.1288, 0.28 ) }
    dend_27 { pt3dadd( -44.5772, 18.3402, -55.1177, 1.11 ) }
    dend_27 { pt3dadd( -50.2935, 19.9397, -60.0692, 0.28 ) }
    dend_27 { pt3dadd( -52.4088, 20.4406, -61.7525, 0.28 ) }
    dend_27 { pt3dadd( -54.0932, 20.7427, -62.9515, 1.11 ) }
    dend_27 { pt3dadd( -58.0962, 21.3113, -65.5778, 0.28 ) }
    dend_27 { pt3dadd( -60.6156, 21.5769, -67.1815, 0.83 ) }
    dend_27 { pt3dadd( -63.4149, 21.7902, -68.8769, 0.28 ) }
    dend_27 { pt3dadd( -64.6847, 21.8685, -69.592, 1.11 ) }
    dend_27 { pt3dadd( -68.2182, 22.1362, -71.7735, 0.28 ) }
    dend_27 { pt3dadd( -69.4506, 22.2898, -72.5456, 0.28 ) }
    dend_27 { pt3dadd( -71.1681, 22.6664, -73.5131, 1.11 ) }
    dend_27 { pt3dadd( -74.5718, 23.8257, -75.232, 0.28 ) }
    dend_27 { pt3dadd( -75.8302, 24.4012, -75.752, 0.83 ) }
    dend_27 { pt3dadd( -79.7144, 26.7761, -76.9213, 0.28 ) }
    dend_27 { pt3dadd( -81.6615, 28.2829, -77.2736, 1.11 ) }
    dend_27 { pt3dadd( -85.1932, 31.5458, -77.5752, 0.28 ) }
    dend_27 { pt3dadd( -87.5554, 34.0539, -77.4681, 0.83 ) }
    dend_27 { pt3dadd( -89.834, 36.8418, -77.0433, 0.28 ) }
    dend_27 { pt3dadd( -92.3954, 40.3524, -76.3219, 0.28 ) }
    dend_27 { pt3dadd( -93.1782, 41.5806, -75.9933, 0.83 ) }
    dend_27 { pt3dadd( -94.2953, 43.5039, -75.5594, 0.83 ) }
    dend_27 { pt3dadd( -95.304, 45.5222, -75.2298, 0.28 ) }
    dend_27 { pt3dadd( -96.0819, 47.2408, -75.122, 0.55 ) }
    dend_27 { pt3dadd( -96.9998, 49.394, -75.2731, 0.28 ) }
    dend_27 { pt3dadd( -97.6907, 51.0307, -75.6497, 0.83 ) }
    dend_27 { pt3dadd( -99.0927, 54.4035, -76.7108, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( -100.105, 56.7504, -77.6312, 0.83 ) }
    dend_27 { pt3dadd( -100.981, 58.7171, -78.5115, 0.28 ) }
    dend_27 { pt3dadd( -102.371, 61.6163, -79.944, 0.83 ) }
    dend_27 { pt3dadd( -105.018, 66.4296, -82.5173, 0.28 ) }
    dend_27 { pt3dadd( -106.326, 68.3281, -83.5322, 0.83 ) }
    dend_27 { pt3dadd( -107.491, 69.6657, -84.2192, 0.55 ) }
    dend_27 { pt3dadd( -108.489, 70.5955, -84.706, 0.55 ) }
    dend_27 { pt3dadd( -109.932, 71.6858, -85.2319, 0.28 ) }
    dend_27 { pt3dadd( -112.499, 73.2355, -85.8387, 0.83 ) }
    dend_27 { pt3dadd( -116.945, 75.3353, -86.3822, 0.28 ) }
    dend_27 { pt3dadd( -118.819, 76.1387, -86.5697, 0.83 ) }
    dend_27 { pt3dadd( -120.781, 77.03, -86.6817, 0.28 ) }
    dend_27 { pt3dadd( -123.792, 78.4281, -86.7127, 0.83 ) }
    dend_27 { pt3dadd( -126.194, 79.7223, -86.6753, 1.11 ) }
    dend_27 { pt3dadd( -128.81, 81.3945, -86.5879, 0.55 ) }
    dend_27 { pt3dadd( -130.033, 82.2707, -86.6259, 0.83 ) }
    dend_27 { pt3dadd( -133.045, 84.7072, -86.8944, 0.28 ) }
    dend_27 { pt3dadd( -134.429, 85.9794, -87.0767, 0.83 ) }
    dend_27 { pt3dadd( -137.696, 89.2394, -87.7694, 0.28 ) }
    dend_27 { pt3dadd( -139.234, 90.8227, -88.2803, 1.11 ) }
    dend_27 { pt3dadd( -142.19, 93.8095, -89.5536, 0.28 ) }
    dend_27 { pt3dadd( -143.75, 95.3076, -90.2923, 0.55 ) }
    dend_27 { pt3dadd( -145.478, 96.8384, -91.235, 0.55 ) }
    dend_27 { pt3dadd( -148.042, 98.9302, -92.7114, 0.55 ) }
    dend_27 { pt3dadd( -150.755, 100.83, -94.1974, 0.28 ) }
    dend_27 { pt3dadd( -151.873, 101.603, -94.8044, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 5.05941, 4.24727, 7.73102, 0.83 ) }
    dend_26 { pt3dadd( 5.8842, 4.6316, 8.07383, 0.83 ) }
    dend_26 { pt3dadd( 7.08754, 5.14949, 8.5846, 0.83 ) }
    dend_26 { pt3dadd( 9.30004, 6.14564, 9.57681, 0.83 ) }
    dend_26 { pt3dadd( 11.4013, 7.11951, 10.6824, 0.55 ) }
    dend_26 { pt3dadd( 13.8553, 8.20712, 12.0331, 1.11 ) }
    dend_26 { pt3dadd( 16.6978, 9.52043, 13.5665, 0.55 ) }
    dend_26 { pt3dadd( 18.5595, 10.3632, 14.5797, 0.83 ) }
    dend_26 { pt3dadd( 21.2814, 11.6577, 15.9991, 0.55 ) }
    dend_26 { pt3dadd( 24.7209, 13.2715, 17.6909, 0.83 ) }
    dend_26 { pt3dadd( 27.377, 14.4737, 18.8413, 0.55 ) }
    dend_26 { pt3dadd( 31.5085, 16.3248, 20.3773, 0.55 ) }
    dend_26 { pt3dadd( 34.0266, 17.3611, 21.0469, 0.55 ) }
    dend_26 { pt3dadd( 38.7296, 19.2252, 21.7895, 0.55 ) }
    dend_26 { pt3dadd( 42.5467, 20.6072, 21.9106, 0.83 ) }
    dend_26 { pt3dadd( 45.7804, 21.7342, 21.6395, 0.83 ) }
    dend_26 { pt3dadd( 47.9738, 22.4948, 21.2879, 0.83 ) }
    dend_26 { pt3dadd( 52.1524, 23.7732, 20.4341, 0.83 ) }
    dend_26 { pt3dadd( 54.2663, 24.4093, 19.9731, 0.83 ) }
    dend_26 { pt3dadd( 58.1323, 25.6075, 19.1253, 0.83 ) }
    dend_26 { pt3dadd( 61.1729, 26.7677, 18.5449, 0.83 ) }
    dend_26 { pt3dadd( 64.0089, 27.9199, 18.1782, 0.83 ) }
    dend_26 { pt3dadd( 67.3908, 29.3412, 17.9505, 0.83 ) }
    dend_26 { pt3dadd( 70.3432, 30.65, 17.9863, 0.83 ) }
    dend_26 { pt3dadd( 72.1458, 31.483, 18.061, 0.83 ) }
    dend_26 { pt3dadd( 75.8733, 33.2071, 18.2447, 0.83 ) }
    dend_26 { pt3dadd( 77.8686, 34.1106, 18.3722, 0.83 ) }
    dend_26 { pt3dadd( 80.4696, 35.2905, 18.5751, 1.11 ) }
    dend_26 { pt3dadd( 82.5524, 36.2107, 18.7419, 0.55 ) }
    dend_26 { pt3dadd( 84.7039, 37.0574, 18.9552, 0.55 ) }
    dend_26 { pt3dadd( 88.1893, 38.2995, 19.4067, 0.83 ) }
    dend_26 { pt3dadd( 90.5633, 39.0628, 19.792, 0.83 ) }
    dend_26 { pt3dadd( 93.1056, 39.95, 20.0754, 0.55 ) }
    dend_26 { pt3dadd( 95.2232, 40.7562, 20.1609, 0.55 ) }
    dend_26 { pt3dadd( 97.3318, 41.7253, 20.0579, 0.83 ) }
    dend_26 { pt3dadd( 98.5022, 42.3247, 19.8845, 0.83 ) }
    dend_26 { pt3dadd( 101.844, 44.2894, 18.8475, 0.55 ) }
    dend_26 { pt3dadd( 105.862, 46.5488, 17.1874, 0.55 ) }
    dend_26 { pt3dadd( 108.366, 47.8906, 16.0216, 0.55 ) }
    dend_26 { pt3dadd( 111.803, 49.6813, 14.3026, 0.55 ) }
    dend_26 { pt3dadd( 115.828, 51.7621, 12.2382, 0.55 ) }
    dend_26 { pt3dadd( 119.615, 53.7188, 10.3146, 0.83 ) }
    dend_26 { pt3dadd( 122.411, 55.169, 8.94604, 0.55 ) }
    dend_26 { pt3dadd( 125.314, 56.5592, 7.78781, 0.55 ) }
    dend_26 { pt3dadd( 127.29, 57.5162, 7.03217, 0.55 ) }
    dend_26 { pt3dadd( 130.468, 59.006, 5.83853, 0.55 ) }
    dend_26 { pt3dadd( 131.984, 59.7219, 5.33654, 0.83 ) }
    dend_26 { pt3dadd( 133.692, 60.4977, 4.88665, 0.55 ) }
    dend_26 { pt3dadd( 136.593, 61.8886, 4.04987, 0.55 ) }
    dend_26 { pt3dadd( 138.671, 62.8747, 3.4089, 0.83 ) }
    dend_26 { pt3dadd( 140.841, 64.0453, 2.68442, 0.55 ) }
    dend_26 { pt3dadd( 143.461, 65.4737, 1.71201, 0.55 ) }
    dend_26 { pt3dadd( 145.487, 66.6493, 0.96575, 0.55 ) }
    dend_26 { pt3dadd( 146.824, 67.5267, 0.515268, 0.28 ) }
    dend_26 { pt3dadd( 147.719, 68.1891, 0.266009, 1.11 ) }
    dend_26 { pt3dadd( 151.528, 71.1095, -0.448227, 0.55 ) }
    dend_26 { pt3dadd( 153.618, 72.8563, -0.703242, 0.55 ) }
    dend_26 { pt3dadd( 154.965, 73.9872, -0.822776, 0.55 ) }
    dend_26 { pt3dadd( 157.508, 75.97, -1.023, 0.55 ) }
    dend_26 { pt3dadd( 158.752, 76.8693, -1.09641, 0.28 ) }
    dend_26 { pt3dadd( 161.075, 78.4911, -1.2558, 0.55 ) }
    dend_26 { pt3dadd( 162.546, 79.4874, -1.35566, 0.55 ) }
    dend_26 { pt3dadd( 164.169, 80.6745, -1.4974, 0.55 ) }
    dend_26 { pt3dadd( 167.377, 83.0562, -1.90806, 0.55 ) }
    dend_26 { pt3dadd( 169.292, 84.4361, -2.22662, 0.55 ) }
    dend_26 { pt3dadd( 171.299, 85.8197, -2.62657, 0.28 ) }
    dend_26 { pt3dadd( 172.432, 86.6085, -2.86729, 0.55 ) }
    dend_26 { pt3dadd( 174.424, 88.0105, -3.28818, 1.38 ) }
    dend_26 { pt3dadd( 177.889, 90.4018, -3.95846, 0.55 ) }
    dend_26 { pt3dadd( 179.918, 91.7499, -4.29125, 1.11 ) }
    dend_26 { pt3dadd( 181.679, 92.8942, -4.5632, 0.55 ) }
    dend_26 { pt3dadd( 183.668, 94.1232, -4.84372, 0.55 ) }
    dend_26 { pt3dadd( 185.191, 94.9908, -5.04499, 0.83 ) }
    dend_26 { pt3dadd( 188.736, 96.8034, -5.44765, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_26 { pt3dadd( 190.549, 97.5975, -5.60158, 0.55 ) }
    dend_26 { pt3dadd( 191.614, 97.9801, -5.68081, 0.83 ) }
    dend_26 { pt3dadd( 196.069, 99.2543, -5.97799, 0.55 ) }
    dend_26 { pt3dadd( 198.343, 99.7727, -6.08817, 0.55 ) }
    dend_26 { pt3dadd( 200.511, 100.323, -6.11599, 0.55 ) }
    dend_26 { pt3dadd( 201.923, 100.751, -6.03864, 0.83 ) }
    dend_26 { pt3dadd( 204.098, 101.52, -5.75829, 0.55 ) }
    dend_26 { pt3dadd( 208.531, 103.429, -4.74066, 0.55 ) }
    dend_26 { pt3dadd( 210.952, 104.763, -3.92552, 0.55 ) }
    dend_26 { pt3dadd( 214.406, 107.012, -2.5301, 0.55 ) }
    dend_26 { pt3dadd( 216.645, 108.672, -1.42248, 0.55 ) }
    dend_26 { pt3dadd( 218.141, 109.855, -0.586198, 0.83 ) }
    dend_26 { pt3dadd( 220.52, 111.752, 0.86617, 0.55 ) }
    dend_26 { pt3dadd( 223.423, 114.027, 2.76301, 0.55 ) }
    dend_26 { pt3dadd( 226.358, 116.261, 4.67679, 0.55 ) }
    dend_26 { pt3dadd( 228.117, 117.459, 5.76773, 0.83 ) }
    dend_26 { pt3dadd( 229.522, 118.362, 6.54848, 0.55 ) }
    dend_26 { pt3dadd( 231.261, 119.44, 7.46087, 0.28 ) }
    dend_26 { pt3dadd( 232.555, 120.119, 8.07314, 0.55 ) }
    dend_26 { pt3dadd( 241.934, 122.992, 7.11755, 0.55 ) }
    dend_26 { pt3dadd( 251.192, 125.833, 5.28265, 0.55 ) }
    dend_26 { pt3dadd( 260.596, 128.779, 5.06482, 0.55 ) }
    dend_26 { pt3dadd( 270.144, 131.073, 4.46531, 0.55 ) }
    dend_26 { pt3dadd( 279.717, 132.19, 2.62446, 0.55 ) }
    dend_26 { pt3dadd( 288.956, 134.14, -0.111791, 0.55 ) }
    dend_26 { pt3dadd( 298.207, 134.587, -3.32365, 0.55 ) }
    dend_26 { pt3dadd( 307.662, 134.055, -5.82775, 0.55 ) }
    dend_26 { pt3dadd( 316.821, 133.414, -9.24196, 0.55 ) }
    dend_26 { pt3dadd( 325.659, 132.809, -13.4222, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 5.82941, 2.04227, -1.46898, 0.55 ) }
    dend_25 { pt3dadd( 7.95788, 2.71597, -1.99595, 0.55 ) }
    dend_25 { pt3dadd( 9.37116, 3.1828, -2.35071, 1.11 ) }
    dend_25 { pt3dadd( 11.8115, 3.81193, -2.93946, 0.55 ) }
    dend_25 { pt3dadd( 13.3133, 4.05551, -3.43248, 0.83 ) }
    dend_25 { pt3dadd( 16.6346, 4.39929, -4.77635, 0.83 ) }
    dend_25 { pt3dadd( 19.4239, 4.6158, -6.08369, 0.55 ) }
    dend_25 { pt3dadd( 21.8874, 4.76412, -7.37376, 0.83 ) }
    dend_25 { pt3dadd( 24.1136, 4.91104, -8.51586, 0.55 ) }
    dend_25 { pt3dadd( 28.0221, 5.21496, -10.4335, 0.55 ) }
    dend_25 { pt3dadd( 30.726, 5.41296, -11.5609, 0.55 ) }
    dend_25 { pt3dadd( 33.5626, 5.627, -12.6009, 1.11 ) }
    dend_25 { pt3dadd( 37.2858, 5.87743, -13.485, 0.55 ) }
    dend_25 { pt3dadd( 39.8283, 6.11036, -13.7341, 0.55 ) }
    dend_25 { pt3dadd( 41.5118, 6.36872, -13.5949, 0.55 ) }
    dend_25 { pt3dadd( 45.21, 6.94763, -12.8981, 0.83 ) }
    dend_25 { pt3dadd( 48.659, 7.37762, -12.0627, 0.55 ) }
    dend_25 { pt3dadd( 51.3027, 7.65667, -11.3614, 0.55 ) }
    dend_25 { pt3dadd( 54.4083, 7.82043, -10.7107, 0.55 ) }
    dend_25 { pt3dadd( 58.5874, 8.02591, -10.4856, 0.83 ) }
    dend_25 { pt3dadd( 61.6978, 8.1215, -10.7406, 0.28 ) }
    dend_25 { pt3dadd( 62.5688, 8.11091, -10.9399, 0.55 ) }
    dend_25 { pt3dadd( 63.9407, 8.00563, -11.3578, 0.55 ) }
    dend_25 { pt3dadd( 67.203, 7.38604, -12.7943, 0.55 ) }
    dend_25 { pt3dadd( 71.4011, 6.18174, -15.0423, 0.55 ) }
    dend_25 { pt3dadd( 74.0702, 5.23051, -16.7821, 0.55 ) }
    dend_25 { pt3dadd( 76.5329, 4.32025, -18.4919, 0.28 ) }
    dend_25 { pt3dadd( 78.0217, 3.78039, -19.5595, 0.55 ) }
    dend_25 { pt3dadd( 81.2389, 2.67641, -21.8421, 0.28 ) }
    dend_25 { pt3dadd( 82.9502, 2.17327, -23.1012, 0.55 ) }
    dend_25 { pt3dadd( 86.9737, 1.23156, -26.0814, 0.28 ) }
    dend_25 { pt3dadd( 88.834, 1.04896, -27.5253, 0.55 ) }
    dend_25 { pt3dadd( 92.0455, 1.26822, -30.032, 0.28 ) }
    dend_25 { pt3dadd( 93.8405, 1.71046, -31.3728, 0.55 ) }
    dend_25 { pt3dadd( 96.411, 2.86101, -33.1276, 0.28 ) }
    dend_25 { pt3dadd( 97.787, 3.65303, -34.0581, 0.83 ) }
    dend_25 { pt3dadd( 100.612, 5.57022, -35.9207, 0.28 ) }
    dend_25 { pt3dadd( 102.51, 6.91649, -37.3176, 0.55 ) }
    dend_25 { pt3dadd( 104.591, 8.45016, -38.9747, 0.28 ) }
    dend_25 { pt3dadd( 105.716, 9.23411, -39.859, 0.55 ) }
    dend_25 { pt3dadd( 109.897, 11.9458, -42.9162, 0.28 ) }
    dend_25 { pt3dadd( 111.279, 12.7041, -43.8647, 0.55 ) }
    dend_25 { pt3dadd( 114.405, 14.2614, -45.7219, 0.28 ) }
    dend_25 { pt3dadd( 115.477, 14.7537, -46.2827, 1.11 ) }
    dend_25 { pt3dadd( 117.544, 15.6296, -47.2439, 0.28 ) }
    dend_25 { pt3dadd( 118.796, 16.1671, -47.7188, 1.11 ) }
    dend_25 { pt3dadd( 123.643, 18.3672, -48.9775, 0.28 ) }
    dend_25 { pt3dadd( 127.613, 20.2355, -49.7945, 0.28 ) }
    dend_25 { pt3dadd( 130.012, 21.4799, -50.069, 0.83 ) }
    dend_25 { pt3dadd( 133.266, 23.4094, -50.2705, 0.28 ) }
    dend_25 { pt3dadd( 134.356, 24.1439, -50.2895, 0.55 ) }
    dend_25 { pt3dadd( 136.529, 25.8527, -50.1329, 0.28 ) }
    dend_25 { pt3dadd( 138.334, 27.566, -49.8058, 1.11 ) }
    dend_25 { pt3dadd( 141.907, 31.4253, -48.9504, 0.28 ) }
    dend_25 { pt3dadd( 144.901, 34.9866, -48.1144, 0.28 ) }
    dend_25 { pt3dadd( 145.762, 36.1138, -47.8372, 0.55 ) }
    dend_25 { pt3dadd( 147.709, 38.7894, -47.2213, 0.28 ) }
    dend_25 { pt3dadd( 148.512, 39.9683, -46.9671, 1.66 ) }
    dend_25 { pt3dadd( 149.598, 41.6042, -46.6024, 0.28 ) }
    dend_25 { pt3dadd( 150.96, 43.6444, -46.2639, 0.55 ) }
    dend_25 { pt3dadd( 151.809, 44.8592, -46.0744, 0.28 ) }
    dend_25 { pt3dadd( 152.926, 46.3383, -46.0307, 0.55 ) }
    dend_25 { pt3dadd( 154.288, 48.0525, -46.1799, 0.28 ) }
    dend_25 { pt3dadd( 155.157, 49.0793, -46.4362, 0.55 ) }
    dend_25 { pt3dadd( 156.615, 50.7981, -46.9697, 0.28 ) }
    dend_25 { pt3dadd( 157.905, 52.3095, -47.5296, 1.11 ) }
    dend_25 { pt3dadd( 161.043, 55.8288, -49.0982, 0.28 ) }
    dend_25 { pt3dadd( 162.079, 56.9397, -49.6996, 0.55 ) }
    dend_25 { pt3dadd( 165.495, 60.5693, -52.0105, 0.28 ) }
    dend_25 { pt3dadd( 167.046, 62.1933, -53.1801, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 99/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -5.12059, 9.83328, 7.96102, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( -7.02667, 9.60261, 7.05256, 1.11 ) }
    dend_20 { pt3dadd( -11.1761, 9.10048, 5.07489, 1.11 ) }
    dend_20 { pt3dadd( -16.666, 8.43612, 2.45834, 1.38 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 3/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.92059, 11.2823, 0.421023, 2.22 ) }
    dend_13 { pt3dadd( -2.76316, 13.4012, -0.609433, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 5/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.75941, -12.3217, 2.43102, 2.49 ) }
    dend_0 { pt3dadd( 3.18722, -15.9247, 2.43102, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 7/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.65377, -11.9555, 0.0201467, 0.863891 ) }
    axon_0 { pt3dadd( 8.12441, -26.2738, 0.0201467, 0.863891 ) }
    axon_0 { pt3dadd( 12.5951, -40.5921, 0.0201467, 0.863891 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 10/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -16.666, 8.43612, 2.45834, 0.55 ) }
    dend_24 { pt3dadd( -18.5634, 7.59805, 3.59025, 0.55 ) }
    dend_24 { pt3dadd( -19.9559, 6.77297, 4.4964, 0.55 ) }
    dend_24 { pt3dadd( -21.3614, 5.90763, 5.38091, 0.55 ) }
    dend_24 { pt3dadd( -22.8566, 5.05973, 6.26315, 0.55 ) }
    dend_24 { pt3dadd( -25.2003, 3.84677, 7.67177, 0.55 ) }
    dend_24 { pt3dadd( -27.881, 2.62619, 9.27234, 0.55 ) }
    dend_24 { pt3dadd( -30.9573, 1.47787, 11.1047, 0.83 ) }
    dend_24 { pt3dadd( -34.5248, 0.40796, 13.1733, 0.55 ) }
    dend_24 { pt3dadd( -36.8487, -0.067665, 14.5099, 0.55 ) }
    dend_24 { pt3dadd( -39.3599, -0.345255, 15.8903, 0.55 ) }
    dend_24 { pt3dadd( -41.5496, -0.417048, 17.0269, 0.55 ) }
    dend_24 { pt3dadd( -44.0216, -0.290797, 18.229, 0.55 ) }
    dend_24 { pt3dadd( -46.1612, -0.09663, 19.2339, 0.55 ) }
    dend_24 { pt3dadd( -48.3444, 0.152348, 20.2697, 0.55 ) }
    dend_24 { pt3dadd( -50.1303, 0.292062, 21.0901, 0.55 ) }
    dend_24 { pt3dadd( -52.0845, 0.358222, 21.9358, 0.55 ) }
    dend_24 { pt3dadd( -54.2719, 0.35576, 22.8588, 0.55 ) }
    dend_24 { pt3dadd( -56.8743, 0.41945, 23.9246, 0.55 ) }
    dend_24 { pt3dadd( -60.0349, 0.64276, 25.1883, 0.55 ) }
    dend_24 { pt3dadd( -61.1625, 0.78124, 25.6215, 0.55 ) }
    dend_24 { pt3dadd( -64.3536, 1.33262, 26.8425, 0.83 ) }
    dend_24 { pt3dadd( -66.8691, 1.83208, 27.8753, 0.55 ) }
    dend_24 { pt3dadd( -70.3489, 2.64808, 29.4099, 0.55 ) }
    dend_24 { pt3dadd( -71.7103, 3.00865, 30.0113, 0.83 ) }
    dend_24 { pt3dadd( -74.6484, 3.75257, 31.3348, 0.55 ) }
    dend_24 { pt3dadd( -76.6894, 4.29646, 32.2814, 0.55 ) }
    dend_24 { pt3dadd( -78.8681, 4.81753, 33.2818, 0.55 ) }
    dend_24 { pt3dadd( -80.4998, 5.12887, 34.0256, 0.55 ) }
    dend_24 { pt3dadd( -81.731, 5.2919, 34.5272, 0.28 ) }
    dend_24 { pt3dadd( -84.4566, 5.53056, 35.4781, 0.55 ) }
    dend_24 { pt3dadd( -86.0662, 5.58182, 36.0039, 0.55 ) }
    dend_24 { pt3dadd( -87.7287, 5.5514, 36.5652, 0.55 ) }
    dend_24 { pt3dadd( -90.3204, 5.47869, 37.3978, 0.83 ) }
    dend_24 { pt3dadd( -92.1721, 5.35718, 37.9945, 0.55 ) }
    dend_24 { pt3dadd( -94.4743, 5.16827, 38.8148, 0.55 ) }
    dend_24 { pt3dadd( -96.6453, 5.00103, 39.6732, 0.55 ) }
    dend_24 { pt3dadd( -98.7058, 4.84399, 40.5522, 0.55 ) }
    dend_24 { pt3dadd( -100.625, 4.73861, 41.4963, 0.55 ) }
    dend_24 { pt3dadd( -108.412, 4.90483, 46.8869, 0.55 ) }
    dend_24 { pt3dadd( -116.769, 3.17491, 51.0396, 0.55 ) }
    dend_24 { pt3dadd( -125.195, 2.75339, 55.3494, 0.55 ) }
    dend_24 { pt3dadd( -132.978, 1.30939, 60.5787, 0.55 ) }
    dend_24 { pt3dadd( -139.085, -1.25909, 67.4083, 0.55 ) }
    dend_24 { pt3dadd( -144.721, -6.249, 73.3839, 0.55 ) }
    dend_24 { pt3dadd( -150.15, -12.686, 78.1793, 0.55 ) }
    dend_24 { pt3dadd( -156.042, -17.4375, 84.0825, 0.55 ) }
    dend_24 { pt3dadd( -161.982, -22.0744, 90.0192, 0.55 ) }
    dend_24 { pt3dadd( -168.328, -25.8715, 96.0716, 0.55 ) }
    dend_24 { pt3dadd( -172.974, -29.4758, 103.6, 0.55 ) }
    dend_24 { pt3dadd( -176.575, -34.1548, 111.172, 0.55 ) }
    dend_24 { pt3dadd( -178.584, -37.4452, 119.904, 0.55 ) }
    dend_24 { pt3dadd( -178.712, -39.5268, 129.18, 0.55 ) }
    dend_24 { pt3dadd( -178.197, -42.0275, 138.351, 0.55 ) }
    dend_24 { pt3dadd( -176.414, -45.6829, 147.003, 0.55 ) }
    dend_24 { pt3dadd( -175.518, -49.3675, 155.78, 0.55 ) }
    dend_24 { pt3dadd( -175.345, -54.1145, 164.133, 0.55 ) }
    dend_24 { pt3dadd( -176.998, -58.8824, 172.31, 0.55 ) }
    dend_24 { pt3dadd( -178.97, -62.3889, 180.975, 0.55 ) }
    dend_24 { pt3dadd( -180.058, -67.194, 189.227, 0.55 ) }
    dend_24 { pt3dadd( -179.456, -72.5174, 197.24, 0.55 ) }
    dend_24 { pt3dadd( -177.363, -79.0295, 204.129, 0.55 ) }
    dend_24 { pt3dadd( -174.516, -85.2026, 211.03, 0.55 ) }
    dend_24 { pt3dadd( -171.622, -91.8258, 217.52, 0.55 ) }
    dend_24 { pt3dadd( -168.389, -98.6578, 223.642, 0.55 ) }
    dend_24 { pt3dadd( -165.394, -104.815, 230.492, 0.55 ) }
    dend_24 { pt3dadd( -161.846, -111.837, 236.232, 0.55 ) }
    dend_24 { pt3dadd( -157.476, -118.539, 241.743, 0.55 ) }
    dend_24 { pt3dadd( -153.141, -124.849, 247.687, 0.55 ) }
    dend_24 { pt3dadd( -148.676, -131.451, 253.232, 0.55 ) }
    dend_24 { pt3dadd( -145.972, -138.186, 259.7, 0.55 ) }
    dend_24 { pt3dadd( -144.879, -146.04, 265.456, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 82/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -16.666, 8.43612, 2.45834, 0.83 ) }
    dend_21 { pt3dadd( -20.3647, 11.1816, 1.78126, 0.83 ) }
    dend_21 { pt3dadd( -22.0263, 12.2876, 0.506729, 0.83 ) }
    dend_21 { pt3dadd( -23.9742, 13.5841, -0.987391, 1.38 ) }
    dend_21 { pt3dadd( -26.7864, 15.456, -3.14452, 1.11 ) }
    dend_21 { pt3dadd( -29.5744, 17.3118, -5.28309, 1.11 ) }
    dend_21 { pt3dadd( -31.9922, 18.9211, -7.13767, 1.11 ) }
    dend_21 { pt3dadd( -40.6337, 25.5041, -16.4541, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -2.76316, 13.4012, -0.609433, 1.66 ) }
    dend_19 { pt3dadd( -3.369, 15.9759, -1.88928, 1.66 ) }
    dend_19 { pt3dadd( -4.02891, 18.2755, -3.01547, 1.94 ) }
    dend_19 { pt3dadd( -4.5864, 20.3408, -3.99448, 0.83 ) }
    dend_19 { pt3dadd( -5.14532, 22.9566, -5.22993, 0.83 ) }
    dend_19 { pt3dadd( -5.52827, 24.8959, -6.24598, 0.83 ) }
    dend_19 { pt3dadd( -6.04679, 28.431, -8.06973, 0.83 ) }
    dend_19 { pt3dadd( -6.32931, 30.8693, -9.40595, 0.83 ) }
    dend_19 { pt3dadd( -6.52699, 32.9006, -10.5318, 0.83 ) }
    dend_19 { pt3dadd( -6.73843, 35.8966, -12.1133, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_19 { pt3dadd( -6.94683, 40.639, -14.7373, 0.83 ) }
    dend_19 { pt3dadd( -7.01595, 46.4652, -17.8117, 0.83 ) }
    dend_19 { pt3dadd( -6.81281, 50.6424, -19.7875, 0.83 ) }
    dend_19 { pt3dadd( -6.58407, 53.4252, -21.0422, 0.83 ) }
    dend_19 { pt3dadd( -6.18793, 57.5219, -22.7417, 0.83 ) }
    dend_19 { pt3dadd( -5.44921, 63.8603, -25.1505, 0.83 ) }
    dend_19 { pt3dadd( -4.97077, 66.9729, -26.2071, 0.83 ) }
    dend_19 { pt3dadd( -4.03482, 72.4387, -27.9424, 0.83 ) }
    dend_19 { pt3dadd( -3.16222, 77.0735, -29.3185, 0.83 ) }
    dend_19 { pt3dadd( -2.78382, 79.0177, -29.9393, 1.94 ) }
    dend_19 { pt3dadd( -2.43387, 81.2181, -30.6154, 1.11 ) }
    dend_19 { pt3dadd( -2.18221, 83.4374, -31.2377, 0.55 ) }
    dend_19 { pt3dadd( -2.00745, 85.6753, -32.0137, 1.38 ) }
    dend_19 { pt3dadd( -1.77583, 91.1644, -34.0892, 0.55 ) }
    dend_19 { pt3dadd( -1.68704, 94.9561, -35.5736, 1.11 ) }
    dend_19 { pt3dadd( -1.62898, 99.9267, -37.6094, 0.55 ) }
    dend_19 { pt3dadd( -1.63079, 102.952, -38.8737, 1.94 ) }
    dend_19 { pt3dadd( -1.74978, 109.363, -41.5869, 0.28 ) }
    dend_19 { pt3dadd( -1.8276, 111.297, -42.3827, 0.83 ) }
    dend_19 { pt3dadd( -2.01134, 113.81, -43.3476, 0.28 ) }
    dend_19 { pt3dadd( -2.17293, 115.667, -44.0056, 1.66 ) }
    dend_19 { pt3dadd( -2.56957, 119.636, -45.2596, 0.55 ) }
    dend_19 { pt3dadd( -2.79974, 121.483, -45.685, 0.28 ) }
    dend_19 { pt3dadd( -3.47483, 126.481, -46.3059, 0.55 ) }
    dend_19 { pt3dadd( -3.79488, 128.935, -46.619, 0.83 ) }
    dend_19 { pt3dadd( -4.06248, 131.35, -46.9014, 0.83 ) }
    dend_19 { pt3dadd( -4.22308, 133.101, -47.1413, 0.55 ) }
    dend_19 { pt3dadd( -4.35378, 135.451, -47.5164, 0.55 ) }
    dend_19 { pt3dadd( -4.26746, 139.275, -48.2883, 1.11 ) }
    dend_19 { pt3dadd( -3.75355, 142.975, -49.1523, 0.28 ) }
    dend_19 { pt3dadd( -3.31331, 144.761, -49.5917, 0.55 ) }
    dend_19 { pt3dadd( -2.52937, 147.039, -50.2819, 0.28 ) }
    dend_19 { pt3dadd( -2.04654, 148.194, -50.6784, 0.55 ) }
    dend_19 { pt3dadd( -1.0183, 150.347, -51.4688, 0.55 ) }
    dend_19 { pt3dadd( 0.351717, 153.065, -52.4643, 0.83 ) }
    dend_19 { pt3dadd( 1.13726, 154.71, -52.9911, 0.55 ) }
    dend_19 { pt3dadd( 2.7713, 158.367, -54.1781, 1.38 ) }
    dend_19 { pt3dadd( 4.29336, 161.826, -55.3723, 0.55 ) }
    dend_19 { pt3dadd( 5.09846, 163.854, -56.1601, 0.28 ) }
    dend_19 { pt3dadd( 5.68934, 165.531, -56.8501, 0.55 ) }
    dend_19 { pt3dadd( 6.38487, 167.915, -57.8084, 0.28 ) }
    dend_19 { pt3dadd( 6.87553, 169.904, -58.5335, 1.11 ) }
    dend_19 { pt3dadd( 7.48787, 172.683, -59.337, 0.55 ) }
    dend_19 { pt3dadd( 7.99778, 175.202, -59.9704, 0.28 ) }
    dend_19 { pt3dadd( 8.4804, 177.646, -60.4907, 0.55 ) }
    dend_19 { pt3dadd( 9.19708, 181.079, -61.1155, 0.55 ) }
    dend_19 { pt3dadd( 9.66495, 183.159, -61.3894, 0.55 ) }
    dend_19 { pt3dadd( 10.4373, 186.609, -61.8015, 0.55 ) }
    dend_19 { pt3dadd( 11.0136, 189.052, -62.087, 0.28 ) }
    dend_19 { pt3dadd( 11.5856, 191.329, -62.4195, 0.55 ) }
    dend_19 { pt3dadd( 12.3647, 194.377, -62.995, 0.83 ) }
    dend_19 { pt3dadd( 13.1752, 197.368, -63.8029, 0.55 ) }
    dend_19 { pt3dadd( 13.9002, 200.15, -64.8961, 0.28 ) }
    dend_19 { pt3dadd( 14.3312, 202.069, -65.9919, 0.55 ) }
    dend_19 { pt3dadd( 14.6089, 203.731, -67.0818, 0.55 ) }
    dend_19 { pt3dadd( 14.6831, 204.621, -67.7309, 0.55 ) }
    dend_19 { pt3dadd( 14.7854, 207.812, -70.1492, 0.28 ) }
    dend_19 { pt3dadd( 14.8178, 210.295, -71.9058, 1.11 ) }
    dend_19 { pt3dadd( 14.8509, 214.803, -74.6046, 0.83 ) }
    dend_19 { pt3dadd( 14.9746, 217.239, -75.8493, 0.55 ) }
    dend_19 { pt3dadd( 15.2601, 220.418, -77.203, 0.83 ) }
    dend_19 { pt3dadd( 15.4631, 222.042, -77.7214, 0.83 ) }
    dend_19 { pt3dadd( 15.9314, 224.916, -78.2533, 0.28 ) }
    dend_19 { pt3dadd( 16.2567, 226.669, -78.3959, 0.55 ) }
    dend_19 { pt3dadd( 17.1644, 231.01, -78.4646, 0.55 ) }
    dend_19 { pt3dadd( 18.1723, 235.4, -78.4538, 0.28 ) }
    dend_19 { pt3dadd( 19.0785, 239.22, -78.3747, 0.55 ) }
    dend_19 { pt3dadd( 19.6481, 241.777, -78.3611, 1.11 ) }
    dend_19 { pt3dadd( 20.1573, 244.142, -78.4261, 0.55 ) }
    dend_19 { pt3dadd( 20.5009, 245.918, -78.5224, 0.28 ) }
    dend_19 { pt3dadd( 20.6161, 246.851, -78.567, 0.55 ) }
    dend_19 { pt3dadd( 20.7681, 248.392, -78.577, 0.28 ) }
    dend_19 { pt3dadd( 20.7972, 249.17, -78.5254, 0.55 ) }
    dend_19 { pt3dadd( 20.8222, 250.938, -78.2986, 0.55 ) }
    dend_19 { pt3dadd( 20.8851, 252.821, -77.9651, 0.83 ) }
    dend_19 { pt3dadd( 21.0999, 256.948, -76.9959, 0.55 ) }
    dend_19 { pt3dadd( 21.3353, 260.326, -76.18, 0.83 ) }
    dend_19 { pt3dadd( 21.7629, 265.286, -75.0619, 0.55 ) }
    dend_19 { pt3dadd( 21.987, 267.62, -74.6397, 0.55 ) }
    dend_19 { pt3dadd( 22.4378, 271.906, -74.0371, 0.28 ) }
    dend_19 { pt3dadd( 22.7308, 274.339, -73.8796, 1.38 ) }
    dend_19 { pt3dadd( 23.1608, 277.393, -74.0022, 0.55 ) }
    dend_19 { pt3dadd( 23.562, 280.206, -74.4247, 0.83 ) }
    dend_19 { pt3dadd( 23.846, 282.982, -75.2644, 0.28 ) }
    dend_19 { pt3dadd( 23.8785, 283.821, -75.5762, 0.55 ) }
    dend_19 { pt3dadd( 23.7995, 286.291, -76.7115, 0.28 ) }
    dend_19 { pt3dadd( 23.6654, 287.934, -77.5222, 0.55 ) }
    dend_19 { pt3dadd( 23.4687, 289.534, -78.2643, 0.55 ) }
    dend_19 { pt3dadd( 22.8558, 293.692, -80.097, 0.28 ) }
    dend_19 { pt3dadd( 22.6547, 295.037, -80.6725, 0.83 ) }
    dend_19 { pt3dadd( 22.2163, 298.019, -81.9503, 0.55 ) }
    dend_19 { pt3dadd( 21.7433, 301.272, -83.3351, 0.28 ) }
    dend_19 { pt3dadd( 21.4515, 303.193, -84.1187, 0.55 ) }
    dend_19 { pt3dadd( 21.1344, 305.627, -84.907, 0.28 ) }
    dend_19 { pt3dadd( 21.0568, 306.276, -85.0632, 0.55 ) }
    dend_19 { pt3dadd( 20.8247, 308.03, -85.3844, 0.28 ) }
    dend_19 { pt3dadd( 20.6129, 309.5, -85.5728, 0.55 ) }
    dend_19 { pt3dadd( 20.1812, 312.243, -85.8364, 0.28 ) }
    dend_19 { pt3dadd( 19.41, 316.638, -86.213, 0.55 ) }
    dend_19 { pt3dadd( 18.8343, 319.607, -86.5254, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_19 { pt3dadd( 17.9617, 323.998, -87.1955, 0.55 ) }
    dend_19 { pt3dadd( 17.6696, 325.459, -87.4671, 0.83 ) }
    dend_19 { pt3dadd( 16.9026, 329.209, -88.3771, 0.55 ) }
    dend_19 { pt3dadd( 16.0847, 333.156, -89.5459, 0.55 ) }
    dend_19 { pt3dadd( 15.6534, 335.564, -90.4768, 0.83 ) }
    dend_19 { pt3dadd( 15.3086, 339.121, -92.0454, 0.28 ) }
    dend_19 { pt3dadd( 15.2988, 341.251, -93.044, 0.83 ) }
    dend_19 { pt3dadd( 15.4958, 344.25, -94.3168, 0.28 ) }
    dend_19 { pt3dadd( 15.6303, 345.342, -94.7357, 0.55 ) }
    dend_19 { pt3dadd( 16.3556, 349.808, -96.3299, 0.28 ) }
    dend_19 { pt3dadd( 17.056, 353.594, -97.4624, 0.28 ) }
    dend_19 { pt3dadd( 17.7575, 357.016, -98.3153, 0.28 ) }
    dend_19 { pt3dadd( 18.9395, 362.153, -99.4323, 0.28 ) }
    dend_19 { pt3dadd( 19.2877, 363.57, -99.6374, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 14/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.76316, 13.4012, -0.609433, 0.83 ) }
    dend_14 { pt3dadd( -4.7853, 16.0741, -0.572112, 0.83 ) }
    dend_14 { pt3dadd( -6.27702, 18.2382, -0.694825, 0.83 ) }
    dend_14 { pt3dadd( -7.26513, 19.8261, -0.825803, 0.55 ) }
    dend_14 { pt3dadd( -8.09983, 21.2629, -0.990166, 0.83 ) }
    dend_14 { pt3dadd( -8.79492, 22.4429, -1.18303, 0.55 ) }
    dend_14 { pt3dadd( -9.74738, 24.0857, -1.48172, 0.83 ) }
    dend_14 { pt3dadd( -10.9589, 26.4237, -2.63102, 0.83 ) }
    dend_14 { pt3dadd( -11.7436, 28.0406, -3.72105, 0.83 ) }
    dend_14 { pt3dadd( -12.2855, 29.1976, -4.6015, 0.83 ) }
    dend_14 { pt3dadd( -13.3528, 31.4251, -6.3049, 0.55 ) }
    dend_14 { pt3dadd( -14.2005, 33.2144, -7.67805, 0.83 ) }
    dend_14 { pt3dadd( -17.8893, 41.1015, -13.4656, 0.83 ) }
    dend_14 { pt3dadd( -18.7667, 42.9756, -14.722, 0.83 ) }
    dend_14 { pt3dadd( -20.2742, 46.249, -16.6742, 0.83 ) }
    dend_14 { pt3dadd( -21.7738, 49.7356, -18.3394, 0.83 ) }
    dend_14 { pt3dadd( -22.969, 52.6931, -19.3776, 0.83 ) }
    dend_14 { pt3dadd( -24.5834, 56.9175, -20.3101, 0.83 ) }
    dend_14 { pt3dadd( -25.7358, 60.2881, -20.5796, 0.83 ) }
    dend_14 { pt3dadd( -26.6328, 63.3676, -20.7844, 0.83 ) }
    dend_14 { pt3dadd( -27.5558, 67.487, -20.9684, 0.83 ) }
    dend_14 { pt3dadd( -28.1534, 71.172, -21.0269, 0.83 ) }
    dend_14 { pt3dadd( -28.6697, 75.6894, -20.9158, 0.83 ) }
    dend_14 { pt3dadd( -28.8734, 78.8276, -20.8525, 0.83 ) }
    dend_14 { pt3dadd( -28.9472, 81.1713, -20.8672, 0.55 ) }
    dend_14 { pt3dadd( -29.0368, 84.0604, -20.9807, 1.11 ) }
    dend_14 { pt3dadd( -29.0955, 87.4198, -21.2048, 0.55 ) }
    dend_14 { pt3dadd( -29.092, 90.6821, -21.4555, 0.55 ) }
    dend_14 { pt3dadd( -29.1535, 93.5466, -21.6979, 0.55 ) }
    dend_14 { pt3dadd( -29.3594, 96.1377, -21.9173, 0.55 ) }
    dend_14 { pt3dadd( -29.8336, 99.4512, -22.1769, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.18722, -15.9247, 2.43102, 0.83 ) }
    dend_6 { pt3dadd( 3.77832, -18.0403, 3.84359, 0.83 ) }
    dend_6 { pt3dadd( 4.84984, -21.8754, 6.40426, 1.66 ) }
    dend_6 { pt3dadd( 5.86899, -25.5231, 8.83977, 1.94 ) }
    dend_6 { pt3dadd( 7.0176, -29.6341, 11.5846, 1.94 ) }
    dend_6 { pt3dadd( 8.73196, -35.7701, 15.6815, 1.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 51/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.18722, -15.9247, 2.43102, 0.83 ) }
    dend_1 { pt3dadd( 1.79704, -20.1444, 2.07929, 0.83 ) }
    dend_1 { pt3dadd( 0.609525, -23.2662, 1.90491, 0.83 ) }
    dend_1 { pt3dadd( -0.0703951, -25.0651, 1.76874, 0.55 ) }
    dend_1 { pt3dadd( -1.17154, -27.6099, 1.46304, 1.11 ) }
    dend_1 { pt3dadd( -2.33526, -30.2229, 1.05356, 0.83 ) }
    dend_1 { pt3dadd( -3.05042, -31.9598, 0.759778, 0.55 ) }
    dend_1 { pt3dadd( -4.30858, -35.0853, 0.00642265, 0.83 ) }
    dend_1 { pt3dadd( -5.69443, -38.524, -1.07326, 0.55 ) }
    dend_1 { pt3dadd( -6.7153, -41.2674, -2.27263, 0.55 ) }
    dend_1 { pt3dadd( -7.44722, -43.398, -3.44442, 0.83 ) }
    dend_1 { pt3dadd( -8.48905, -46.6409, -5.50855, 0.83 ) }
    dend_1 { pt3dadd( -9.55629, -50.0383, -7.91005, 0.55 ) }
    dend_1 { pt3dadd( -10.1675, -52.3987, -9.75483, 0.55 ) }
    dend_1 { pt3dadd( -10.9526, -55.5523, -12.4383, 1.11 ) }
    dend_1 { pt3dadd( -11.3054, -57.0536, -13.9226, 0.55 ) }
    dend_1 { pt3dadd( -11.4905, -57.719, -14.7095, 0.55 ) }
    dend_1 { pt3dadd( -11.9149, -59.0094, -16.4193, 0.55 ) }
    dend_1 { pt3dadd( -12.4318, -60.4677, -18.4417, 0.83 ) }
    dend_1 { pt3dadd( -13.2086, -62.3566, -21.1749, 0.83 ) }
    dend_1 { pt3dadd( -14.8598, -65.513, -25.657, 0.55 ) }
    dend_1 { pt3dadd( -15.7376, -66.8818, -27.6021, 0.28 ) }
    dend_1 { pt3dadd( -16.5314, -68.0529, -29.189, 0.83 ) }
    dend_1 { pt3dadd( -17.6001, -69.5761, -31.1382, 0.55 ) }
    dend_1 { pt3dadd( -18.2301, -70.4843, -32.173, 0.55 ) }
    dend_1 { pt3dadd( -19.5696, -72.6826, -34.2061, 1.38 ) }
    dend_1 { pt3dadd( -21.8434, -77.0611, -37.3272, 0.55 ) }
    dend_1 { pt3dadd( -22.2891, -78.1917, -38.0135, 0.83 ) }
    dend_1 { pt3dadd( -22.7825, -80.7322, -39.2505, 0.28 ) }
    dend_1 { pt3dadd( -22.8174, -82.0088, -39.6992, 1.11 ) }
    dend_1 { pt3dadd( -22.6798, -83.8892, -40.2162, 1.11 ) }
    dend_1 { pt3dadd( -22.4848, -85.2282, -40.486, 1.11 ) }
    dend_1 { pt3dadd( -22.1173, -87.4984, -40.7694, 0.55 ) }
    dend_1 { pt3dadd( -21.3065, -92.8146, -41.3891, 0.28 ) }
    dend_1 { pt3dadd( -20.6937, -97.0573, -41.8157, 0.55 ) }
    dend_1 { pt3dadd( -20.3682, -99.4356, -42.0788, 0.55 ) }
    dend_1 { pt3dadd( -19.9275, -102.648, -42.4288, 1.94 ) }
    dend_1 { pt3dadd( -19.6575, -104.951, -42.6622, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 89/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 12.5951, -40.5921, 0.0201467, 0.756209 ) }
    axon_1 { pt3dadd( 17.0657, -54.9104, 0.0201467, 0.756209 ) }
    axon_1 { pt3dadd( 21.5363, -69.2287, 0.0201467, 0.756209 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 92/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -40.6337, 25.5041, -16.4541, 0.83 ) }
    dend_23 { pt3dadd( -41.1906, 25.5155, -16.4391, 0.83 ) }
    dend_23 { pt3dadd( -45.1089, 25.7127, -16.1989, 0.83 ) }
    dend_23 { pt3dadd( -49.6881, 26.1613, -16.0853, 0.83 ) }
    dend_23 { pt3dadd( -53.0847, 26.6024, -16.1799, 0.83 ) }
    dend_23 { pt3dadd( -57.3319, 27.2159, -16.4218, 0.83 ) }
    dend_23 { pt3dadd( -59.871, 27.63, -16.6018, 0.83 ) }
    dend_23 { pt3dadd( -63.3618, 28.3665, -16.9228, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_23 { pt3dadd( -68.6487, 29.8616, -17.5877, 1.38 ) }
    dend_23 { pt3dadd( -71.9002, 30.9474, -18.0756, 0.55 ) }
    dend_23 { pt3dadd( -73.7563, 31.5762, -18.3904, 0.55 ) }
    dend_23 { pt3dadd( -76.9279, 32.5849, -19.1301, 0.55 ) }
    dend_23 { pt3dadd( -80.8845, 33.7981, -20.1485, 0.55 ) }
    dend_23 { pt3dadd( -83.1319, 34.5145, -20.7668, 0.83 ) }
    dend_23 { pt3dadd( -86.6345, 35.5823, -21.5819, 0.83 ) }
    dend_23 { pt3dadd( -90.0906, 36.59, -22.38, 0.55 ) }
    dend_23 { pt3dadd( -96.1944, 38.3186, -23.8333, 0.55 ) }
    dend_23 { pt3dadd( -102.044, 39.7838, -25.5445, 0.55 ) }
    dend_23 { pt3dadd( -104.618, 40.3878, -26.3766, 0.55 ) }
    dend_23 { pt3dadd( -108.192, 41.0995, -27.5655, 0.83 ) }
    dend_23 { pt3dadd( -112.017, 41.8346, -28.9164, 0.55 ) }
    dend_23 { pt3dadd( -115.989, 42.6123, -30.3237, 1.66 ) }
    dend_23 { pt3dadd( -122.116, 43.7515, -32.3226, 0.28 ) }
    dend_23 { pt3dadd( -123.421, 44.0256, -32.7518, 0.55 ) }
    dend_23 { pt3dadd( -127.217, 45.0649, -33.8217, 0.28 ) }
    dend_23 { pt3dadd( -128.992, 45.6843, -34.23, 0.55 ) }
    dend_23 { pt3dadd( -132.662, 47.2273, -34.8381, 0.55 ) }
    dend_23 { pt3dadd( -135.909, 48.8499, -35.1954, 0.55 ) }
    dend_23 { pt3dadd( -139.818, 51.0889, -35.4712, 0.83 ) }
    dend_23 { pt3dadd( -143.988, 53.6342, -35.8486, 0.55 ) }
    dend_23 { pt3dadd( -146.051, 55.006, -36.0933, 0.55 ) }
    dend_23 { pt3dadd( -149.793, 57.6284, -36.6243, 0.55 ) }
    dend_23 { pt3dadd( -153.005, 60.1747, -37.332, 0.83 ) }
    dend_23 { pt3dadd( -155.093, 61.9965, -37.9194, 0.55 ) }
    dend_23 { pt3dadd( -156.838, 63.7049, -38.5201, 0.55 ) }
    dend_23 { pt3dadd( -158.499, 65.5287, -39.1086, 0.28 ) }
    dend_23 { pt3dadd( -161.738, 69.3265, -40.1677, 0.55 ) }
    dend_23 { pt3dadd( -165.326, 73.7416, -41.0831, 0.28 ) }
    dend_23 { pt3dadd( -167.499, 76.4466, -41.5754, 0.55 ) }
    dend_23 { pt3dadd( -170.014, 79.4002, -42.061, 0.28 ) }
    dend_23 { pt3dadd( -172.851, 82.3648, -42.499, 0.55 ) }
    dend_23 { pt3dadd( -175.456, 84.7608, -42.7589, 0.83 ) }
    dend_23 { pt3dadd( -182.07, 89.9088, -43.1549, 0.55 ) }
    dend_23 { pt3dadd( -183.744, 90.9909, -43.2336, 1.11 ) }
    dend_23 { pt3dadd( -187.6, 93.1673, -43.5306, 0.55 ) }
    dend_23 { pt3dadd( -191.379, 94.9995, -43.8419, 0.83 ) }
    dend_23 { pt3dadd( -195.214, 96.7689, -44.2665, 0.28 ) }
    dend_23 { pt3dadd( -196.596, 97.351, -44.5412, 0.83 ) }
    dend_23 { pt3dadd( -200.156, 98.7316, -45.5912, 0.28 ) }
    dend_23 { pt3dadd( -201.835, 99.4806, -46.1985, 0.55 ) }
    dend_23 { pt3dadd( -204.247, 100.821, -47.4227, 0.55 ) }
    dend_23 { pt3dadd( -207.247, 102.641, -49.4983, 0.55 ) }
    dend_23 { pt3dadd( -210.681, 104.742, -52.238, 0.55 ) }
    dend_23 { pt3dadd( -213.309, 106.428, -54.4837, 0.55 ) }
    dend_23 { pt3dadd( -215.107, 107.613, -56.057, 0.55 ) }
    dend_23 { pt3dadd( -218.908, 110.266, -59.8008, 0.55 ) }
    dend_23 { pt3dadd( -221.78, 112.444, -63.0327, 0.28 ) }
    dend_23 { pt3dadd( -222.7, 113.142, -64.2465, 0.55 ) }
    dend_23 { pt3dadd( -223.79, 114.035, -65.817, 0.28 ) }
    dend_23 { pt3dadd( -225.355, 115.469, -68.6429, 1.11 ) }
    dend_23 { pt3dadd( -226.898, 117.111, -71.925, 0.55 ) }
    dend_23 { pt3dadd( -227.378, 117.592, -73.4988, 0.83 ) }
    dend_23 { pt3dadd( -228.767, 118.981, -79.3336, 0.28 ) }
    dend_23 { pt3dadd( -229.24, 119.419, -81.6411, 0.55 ) }
    dend_23 { pt3dadd( -229.822, 119.901, -84.7015, 0.28 ) }
    dend_23 { pt3dadd( -230.098, 120.118, -86.1843, 0.83 ) }
    dend_23 { pt3dadd( -233.192, 122.472, -101.99, 0.55 ) }
    dend_23 { pt3dadd( -233.494, 122.693, -103.604, 0.83 ) }
    dend_23 { pt3dadd( -234.451, 123.47, -109.364, 0.28 ) }
    dend_23 { pt3dadd( -234.738, 123.692, -111.22, 0.55 ) }
    dend_23 { pt3dadd( -235.075, 123.889, -113.123, 0.28 ) }
    dend_23 { pt3dadd( -235.665, 124.253, -116.388, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 64/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -40.6337, 25.5041, -16.4541, 1.11 ) }
    dend_22 { pt3dadd( -41.9017, 26.5731, -21.7518, 1.11 ) }
    dend_22 { pt3dadd( -42.8632, 27.6475, -26.1924, 0.28 ) }
    dend_22 { pt3dadd( -43.099, 27.845, -27.0446, 0.83 ) }
    dend_22 { pt3dadd( -44.2296, 28.8703, -30.8654, 0.28 ) }
    dend_22 { pt3dadd( -44.5203, 29.1468, -31.8446, 0.55 ) }
    dend_22 { pt3dadd( -45.5695, 30.2749, -35.4573, 0.55 ) }
    dend_22 { pt3dadd( -46.4029, 31.1515, -38.3264, 2.22 ) }
    dend_22 { pt3dadd( -49.9858, 35.1456, -50.5154, 0.28 ) }
    dend_22 { pt3dadd( -50.5681, 35.8281, -52.4468, 1.94 ) }
    dend_22 { pt3dadd( -53.5492, 39.6754, -62.4376, 0.28 ) }
    dend_22 { pt3dadd( -54.2239, 40.5622, -64.6776, 0.55 ) }
    dend_22 { pt3dadd( -55.1798, 41.8484, -67.828, 0.28 ) }
    dend_22 { pt3dadd( -55.6004, 42.4752, -69.2184, 1.66 ) }
    dend_22 { pt3dadd( -56.6024, 44.2263, -72.5537, 0.28 ) }
    dend_22 { pt3dadd( -57.7297, 46.0787, -75.887, 0.28 ) }
    dend_22 { pt3dadd( -58.5835, 47.4074, -77.9669, 2.49 ) }
    dend_22 { pt3dadd( -61.1072, 50.8397, -83.3458, 0.28 ) }
    dend_22 { pt3dadd( -62.9924, 53.3534, -86.9198, 0.28 ) }
    dend_22 { pt3dadd( -63.7088, 54.3741, -88.1884, 1.66 ) }
    dend_22 { pt3dadd( -65.323, 56.8908, -90.8717, 0.28 ) }
    dend_22 { pt3dadd( -66.1359, 58.2647, -92.1209, 0.83 ) }
    dend_22 { pt3dadd( -68.1612, 61.9394, -95.195, 0.28 ) }
    dend_22 { pt3dadd( -69.0901, 63.746, -96.593, 1.11 ) }
    dend_22 { pt3dadd( -70.5902, 66.768, -99.2029, 0.28 ) }
    dend_22 { pt3dadd( -71.5678, 69.0123, -101.204, 0.28 ) }
    dend_22 { pt3dadd( -72.1469, 70.6619, -102.687, 0.83 ) }
    dend_22 { pt3dadd( -72.9106, 73.0334, -105.097, 0.28 ) }
    dend_22 { pt3dadd( -73.0305, 73.4188, -105.501, 0.83 ) }
    dend_22 { pt3dadd( -73.4699, 74.5894, -106.883, 0.28 ) }
    dend_22 { pt3dadd( -73.864, 75.5311, -108.06, 0.83 ) }
    dend_22 { pt3dadd( -74.1739, 76.3391, -109.022, 0.83 ) }
    dend_22 { pt3dadd( -75.3914, 80.3607, -113.626, 0.28 ) }
    dend_22 { pt3dadd( -75.7689, 82.0215, -115.669, 1.11 ) }
    dend_22 { pt3dadd( -75.994, 83.5536, -117.692, 0.28 ) }
    dend_22 { pt3dadd( -76.0275, 84.4441, -118.874, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_22 { pt3dadd( -75.9714, 85.9461, -121.094, 0.28 ) }
    dend_22 { pt3dadd( -75.7786, 87.4159, -123.469, 0.83 ) }
    dend_22 { pt3dadd( -75.2415, 89.9622, -128.235, 0.28 ) }
    dend_22 { pt3dadd( -75.0252, 90.9199, -130.386, 0.28 ) }
    dend_22 { pt3dadd( -74.8752, 91.6929, -132.553, 0.55 ) }
    dend_22 { pt3dadd( -74.6776, 93.1071, -137.115, 0.28 ) }
    dend_22 { pt3dadd( -74.6301, 93.4895, -138.414, 0.83 ) }
    dend_22 { pt3dadd( -74.5814, 94.636, -142.23, 0.28 ) }
    dend_22 { pt3dadd( -74.5696, 95.0995, -143.758, 0.83 ) }
    dend_22 { pt3dadd( -74.5697, 96.1217, -147.651, 0.28 ) }
    dend_22 { pt3dadd( -74.5264, 96.5155, -149.259, 0.83 ) }
    dend_22 { pt3dadd( -74.3443, 96.9274, -150.919, 0.28 ) }
    dend_22 { pt3dadd( -74.2438, 97.0563, -151.485, 0.28 ) }
    dend_22 { pt3dadd( -73.795, 97.472, -153.249, 0.83 ) }
    dend_22 { pt3dadd( -72.35, 98.6321, -158.457, 0.28 ) }
    dend_22 { pt3dadd( -72.0618, 98.8257, -159.404, 0.55 ) }
    dend_22 { pt3dadd( -71.5786, 99.0308, -161.229, 0.28 ) }
    dend_22 { pt3dadd( -71.3492, 99.0545, -162.214, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 18/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -29.8336, 99.4512, -22.1769, 0.55 ) }
    dend_16 { pt3dadd( -28.9208, 102.32, -22.9012, 0.55 ) }
    dend_16 { pt3dadd( -28.6792, 103.105, -23.1105, 0.28 ) }
    dend_16 { pt3dadd( -28.3365, 104.365, -23.4661, 0.55 ) }
    dend_16 { pt3dadd( -27.557, 107.685, -24.5587, 0.28 ) }
    dend_16 { pt3dadd( -27.0074, 110.09, -25.4263, 0.55 ) }
    dend_16 { pt3dadd( -26.5899, 112.358, -26.2753, 0.55 ) }
    dend_16 { pt3dadd( -26.3232, 114.615, -27.1663, 0.55 ) }
    dend_16 { pt3dadd( -26.0704, 117.344, -28.3228, 0.55 ) }
    dend_16 { pt3dadd( -25.8251, 120.157, -29.5291, 0.55 ) }
    dend_16 { pt3dadd( -25.6786, 121.959, -30.2551, 0.55 ) }
    dend_16 { pt3dadd( -25.4833, 124.874, -31.393, 0.55 ) }
    dend_16 { pt3dadd( -25.283, 128.213, -32.5521, 0.55 ) }
    dend_16 { pt3dadd( -25.0603, 130.93, -33.3073, 0.55 ) }
    dend_16 { pt3dadd( -24.6616, 134.698, -34.0186, 0.28 ) }
    dend_16 { pt3dadd( -24.508, 135.984, -34.153, 0.55 ) }
    dend_16 { pt3dadd( -24.3261, 137.335, -34.2389, 0.55 ) }
    dend_16 { pt3dadd( -24.0347, 139.181, -34.3067, 0.55 ) }
    dend_16 { pt3dadd( -23.8537, 140.541, -34.3082, 0.55 ) }
    dend_16 { pt3dadd( -23.6715, 142.67, -34.3927, 0.83 ) }
    dend_16 { pt3dadd( -23.5189, 144.707, -34.5713, 0.55 ) }
    dend_16 { pt3dadd( -23.2617, 146.975, -34.7907, 0.28 ) }
    dend_16 { pt3dadd( -22.8681, 149.763, -35.1138, 0.55 ) }
    dend_16 { pt3dadd( -22.5205, 151.929, -35.3976, 0.28 ) }
    dend_16 { pt3dadd( -22.2907, 153.31, -35.5921, 1.38 ) }
    dend_16 { pt3dadd( -21.8092, 155.839, -35.9674, 1.38 ) }
    dend_16 { pt3dadd( -20.7398, 161.152, -36.6605, 0.28 ) }
    dend_16 { pt3dadd( -20.4151, 162.773, -36.8767, 0.83 ) }
    dend_16 { pt3dadd( -20.1727, 163.932, -37.0304, 0.83 ) }
    dend_16 { pt3dadd( -19.4658, 167.385, -37.4984, 0.28 ) }
    dend_16 { pt3dadd( -19.1387, 169.082, -37.7096, 0.55 ) }
    dend_16 { pt3dadd( -18.8575, 170.735, -37.9439, 0.55 ) }
    dend_16 { pt3dadd( -18.4915, 173.303, -38.3902, 0.55 ) }
    dend_16 { pt3dadd( -18.0894, 176.091, -38.7786, 0.28 ) }
    dend_16 { pt3dadd( -17.9217, 177.1, -38.9216, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 53/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -29.8336, 99.4512, -22.1769, 0.83 ) }
    dend_15 { pt3dadd( -30.1712, 101.339, -22.5415, 0.83 ) }
    dend_15 { pt3dadd( -30.7993, 104.85, -23.2197, 0.28 ) }
    dend_15 { pt3dadd( -31.3485, 107.92, -23.8128, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 57/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 8.73196, -35.7701, 15.6815, 1.66 ) }
    dend_10 { pt3dadd( 7.36454, -38.5884, 17.8123, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 59/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 8.73196, -35.7701, 15.6815, 0.55 ) }
    dend_7 { pt3dadd( 10.7817, -36.6281, 16.088, 0.55 ) }
    dend_7 { pt3dadd( 13.8527, -37.8742, 16.6881, 0.55 ) }
    dend_7 { pt3dadd( 16.2126, -38.7841, 17.1726, 0.55 ) }
    dend_7 { pt3dadd( 18.0372, -39.4711, 17.5493, 0.55 ) }
    dend_7 { pt3dadd( 21.6362, -40.7849, 18.4063, 0.55 ) }
    dend_7 { pt3dadd( 23.2674, -41.3809, 18.8418, 0.55 ) }
    dend_7 { pt3dadd( 26.248, -42.4206, 19.7399, 0.55 ) }
    dend_7 { pt3dadd( 27.5604, -42.8366, 20.2027, 0.55 ) }
    dend_7 { pt3dadd( 29.8672, -43.5523, 21.0922, 0.55 ) }
    dend_7 { pt3dadd( 32.506, -44.2975, 22.1831, 0.55 ) }
    dend_7 { pt3dadd( 34.9874, -44.8799, 23.2586, 0.55 ) }
    dend_7 { pt3dadd( 38.2244, -45.5923, 24.6768, 0.55 ) }
    dend_7 { pt3dadd( 41.3802, -46.1558, 26.0862, 0.55 ) }
    dend_7 { pt3dadd( 43.1398, -46.3947, 26.8553, 0.55 ) }
    dend_7 { pt3dadd( 46.294, -46.688, 28.1927, 0.55 ) }
    dend_7 { pt3dadd( 48.1199, -46.7816, 28.926, 0.55 ) }
    dend_7 { pt3dadd( 50.1033, -46.8159, 29.7003, 0.55 ) }
    dend_7 { pt3dadd( 52.1028, -46.792, 30.4562, 0.55 ) }
    dend_7 { pt3dadd( 54.3283, -46.7268, 31.2901, 0.55 ) }
    dend_7 { pt3dadd( 56.3788, -46.6709, 32.0733, 0.55 ) }
    dend_7 { pt3dadd( 57.6399, -46.6273, 32.5501, 0.55 ) }
    dend_7 { pt3dadd( 60.2727, -46.5039, 33.5333, 0.55 ) }
    dend_7 { pt3dadd( 62.4889, -46.358, 34.3372, 0.55 ) }
    dend_7 { pt3dadd( 64.7117, -46.1604, 35.0974, 0.55 ) }
    dend_7 { pt3dadd( 65.6427, -46.0695, 35.4018, 0.55 ) }
    dend_7 { pt3dadd( 67.2885, -45.8553, 35.9685, 0.55 ) }
    dend_7 { pt3dadd( 68.7573, -45.6742, 36.4959, 0.55 ) }
    dend_7 { pt3dadd( 69.6899, -45.5705, 36.8536, 0.55 ) }
    dend_7 { pt3dadd( 71.9429, -45.3998, 37.7302, 0.55 ) }
    dend_7 { pt3dadd( 74.1819, -45.3089, 38.5895, 0.55 ) }
    dend_7 { pt3dadd( 77.0084, -45.3472, 39.6955, 0.55 ) }
    dend_7 { pt3dadd( 79.3867, -45.5525, 40.5898, 0.55 ) }
    dend_7 { pt3dadd( 80.5306, -45.7278, 41.0476, 0.55 ) }
    dend_7 { pt3dadd( 82.6529, -46.2241, 41.976, 0.55 ) }
    dend_7 { pt3dadd( 84.1717, -46.7471, 42.7159, 0.55 ) }
    dend_7 { pt3dadd( 85.6392, -47.4316, 43.6279, 0.28 ) }
    dend_7 { pt3dadd( 86.5681, -48.07, 44.3325, 1.38 ) }
    dend_7 { pt3dadd( 88.527, -49.6439, 46.0456, 0.55 ) }
    dend_7 { pt3dadd( 89.6591, -50.6905, 47.2022, 0.55 ) }
    dend_7 { pt3dadd( 90.5272, -51.6989, 48.3161, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_7 { pt3dadd( 92.0933, -53.8454, 50.8181, 0.55 ) }
    dend_7 { pt3dadd( 92.7272, -54.8571, 52.0839, 0.55 ) }
    dend_7 { pt3dadd( 98.8999, -55.495, 55.5178, 0.55 ) }
    dend_7 { pt3dadd( 105.216, -55.3471, 58.7298, 0.55 ) }
    dend_7 { pt3dadd( 111.694, -56.1349, 61.5136, 0.55 ) }
    dend_7 { pt3dadd( 117.534, -57.8736, 65.1825, 0.55 ) }
    dend_7 { pt3dadd( 122.674, -59.9019, 69.6695, 0.55 ) }
    dend_7 { pt3dadd( 128.438, -61.0855, 73.6421, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -19.6575, -104.951, -42.6622, 0.28 ) }
    dend_5 { pt3dadd( -20.2045, -108.266, -43.3151, 0.28 ) }
    dend_5 { pt3dadd( -20.4472, -109.773, -43.6135, 0.83 ) }
    dend_5 { pt3dadd( -21.0413, -114.671, -44.6864, 0.28 ) }
    dend_5 { pt3dadd( -21.1779, -115.942, -44.9296, 0.83 ) }
    dend_5 { pt3dadd( -21.4421, -118.399, -45.3995, 0.28 ) }
    dend_5 { pt3dadd( -21.7242, -121.023, -45.9016, 0.55 ) }
    dend_5 { pt3dadd( -21.9458, -122.847, -46.2972, 0.55 ) }
    dend_5 { pt3dadd( -22.3769, -126.877, -47.2169, 0.28 ) }
    dend_5 { pt3dadd( -22.4581, -128.73, -47.6322, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 18/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -19.6575, -104.951, -42.6622, 0.28 ) }
    dend_2 { pt3dadd( -22.3339, -113.432, -42.4141, 0.28 ) }
    dend_2 { pt3dadd( -22.9308, -115.324, -42.3587, 0.55 ) }
    dend_2 { pt3dadd( -23.7383, -117.883, -42.2839, 0.55 ) }
    dend_2 { pt3dadd( -24.4493, -120.136, -42.218, 0.28 ) }
    dend_2 { pt3dadd( -25.097, -122.188, -42.158, 0.55 ) }
    dend_2 { pt3dadd( -25.8636, -124.617, -42.0869, 1.38 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 25/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -17.9217, 177.1, -38.9216, 0.28 ) }
    dend_18 { pt3dadd( -18.3395, 178.842, -39.3484, 0.28 ) }
    dend_18 { pt3dadd( -18.7175, 180.226, -39.7304, 0.83 ) }
    dend_18 { pt3dadd( -19.368, 182.128, -40.355, 0.28 ) }
    dend_18 { pt3dadd( -19.9838, 183.817, -40.9077, 0.28 ) }
    dend_18 { pt3dadd( -20.2545, 184.565, -41.1368, 0.55 ) }
    dend_18 { pt3dadd( -21.0484, 186.687, -41.7045, 0.28 ) }
    dend_18 { pt3dadd( -21.6063, 188.009, -42.0607, 0.83 ) }
    dend_18 { pt3dadd( -22.8278, 190.108, -42.7419, 0.28 ) }
    dend_18 { pt3dadd( -23.8138, 191.473, -43.2834, 0.28 ) }
    dend_18 { pt3dadd( -24.3635, 192.194, -43.5874, 0.55 ) }
    dend_18 { pt3dadd( -25.6109, 193.712, -44.2473, 0.28 ) }
    dend_18 { pt3dadd( -26.8505, 195.063, -44.8779, 0.83 ) }
    dend_18 { pt3dadd( -29.0496, 197.231, -46.0328, 0.83 ) }
    dend_18 { pt3dadd( -30.683, 198.765, -46.7568, 0.83 ) }
    dend_18 { pt3dadd( -32.3336, 200.234, -47.447, 0.28 ) }
    dend_18 { pt3dadd( -34.42, 202.092, -48.233, 0.55 ) }
    dend_18 { pt3dadd( -36.7357, 204.212, -49.0019, 0.28 ) }
    dend_18 { pt3dadd( -38.1158, 205.5, -49.4019, 1.11 ) }
    dend_18 { pt3dadd( -41.7287, 208.957, -50.3308, 0.28 ) }
    dend_18 { pt3dadd( -42.9753, 210.061, -50.5847, 0.83 ) }
    dend_18 { pt3dadd( -44.8451, 211.613, -50.9394, 0.28 ) }
    dend_18 { pt3dadd( -45.6363, 212.277, -51.0618, 0.55 ) }
    dend_18 { pt3dadd( -47.5324, 213.872, -51.2743, 0.28 ) }
    dend_18 { pt3dadd( -47.8428, 214.129, -51.3143, 0.55 ) }
    dend_18 { pt3dadd( -49.3032, 215.226, -51.6605, 0.28 ) }
    dend_18 { pt3dadd( -51.2154, 216.646, -52.0726, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -17.9217, 177.1, -38.9216, 0.28 ) }
    dend_17 { pt3dadd( -16.2369, 179.538, -38.9457, 0.28 ) }
    dend_17 { pt3dadd( -15.2045, 181.194, -38.9501, 0.55 ) }
    dend_17 { pt3dadd( -13.9818, 183.359, -38.8238, 0.28 ) }
    dend_17 { pt3dadd( -13.2777, 184.867, -39.0204, 0.55 ) }
    dend_17 { pt3dadd( -12.4425, 186.864, -39.6165, 0.28 ) }
    dend_17 { pt3dadd( -12.3101, 187.18, -39.711, 0.55 ) }
    dend_17 { pt3dadd( -11.5538, 189.461, -40.6133, 0.28 ) }
    dend_17 { pt3dadd( -10.9231, 191.85, -41.7357, 0.83 ) }
    dend_17 { pt3dadd( -9.76518, 197.054, -45.049, 0.28 ) }
    dend_17 { pt3dadd( -9.40364, 199.013, -46.5682, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 63/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 7.36454, -38.5884, 17.8123, 1.66 ) }
    dend_12 { pt3dadd( 7.21658, -39.5038, 18.0294, 1.66 ) }
    dend_12 { pt3dadd( 6.7526, -42.2627, 18.7161, 1.11 ) }
    dend_12 { pt3dadd( 5.85706, -49.4369, 20.64, 1.11 ) }
    dend_12 { pt3dadd( 5.12397, -56.8114, 22.8305, 1.11 ) }
    dend_12 { pt3dadd( 4.64202, -61.4361, 24.4147, 1.11 ) }
    dend_12 { pt3dadd( 4.15772, -66.7828, 26.4064, 1.11 ) }
    dend_12 { pt3dadd( 4.0035, -69.8371, 27.6206, 1.11 ) }
    dend_12 { pt3dadd( 3.96825, -75.8371, 30.1641, 1.11 ) }
    dend_12 { pt3dadd( 4.08869, -81.8313, 32.9456, 1.11 ) }
    dend_12 { pt3dadd( 4.16372, -92.1429, 38.036, 1.11 ) }
    dend_12 { pt3dadd( 4.1304, -97.5044, 40.6538, 1.11 ) }
    dend_12 { pt3dadd( 4.01241, -102.723, 43.1857, 1.11 ) }
    dend_12 { pt3dadd( 3.56153, -108.193, 45.7505, 1.11 ) }
    dend_12 { pt3dadd( 2.48474, -114.369, 48.5699, 0.83 ) }
    dend_12 { pt3dadd( 1.31283, -118.781, 50.5226, 0.55 ) }
    dend_12 { pt3dadd( 0.067122, -122.268, 51.9329, 0.55 ) }
    dend_12 { pt3dadd( -1.2917, -125.513, 53.0703, 0.55 ) }
    dend_12 { pt3dadd( -3.56261, -130.188, 54.6557, 0.55 ) }
    dend_12 { pt3dadd( -6.92877, -136.649, 56.6937, 0.55 ) }
    dend_12 { pt3dadd( -9.52769, -141.803, 58.1429, 0.55 ) }
    dend_12 { pt3dadd( -11.5698, -146.059, 59.3267, 0.55 ) }
    dend_12 { pt3dadd( -13.8938, -151.219, 60.8597, 0.28 ) }
    dend_12 { pt3dadd( -17.3179, -163.574, 67.1693, 0.28 ) }
    dend_12 { pt3dadd( -21.4096, -174.571, 75.1665, 0.28 ) }
    dend_12 { pt3dadd( -25.1825, -184.865, 84.1094, 0.28 ) }
    dend_12 { pt3dadd( -27.8906, -194.073, 94.3957, 0.28 ) }
    dend_12 { pt3dadd( -28.1068, -202.931, 105.269, 0.28 ) }
    dend_12 { pt3dadd( -26.0705, -210.427, 116.834, 0.28 ) }
    dend_12 { pt3dadd( -24.055, -217.767, 128.493, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 93/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 7.36454, -38.5884, 17.8123, 0.55 ) }
    dend_11 { pt3dadd( 10.1729, -39.6304, 20.024, 0.55 ) }
    dend_11 { pt3dadd( 11.4992, -40.17, 20.9161, 0.55 ) }
    dend_11 { pt3dadd( 15.3447, -41.606, 23.4567, 0.55 ) }
    dend_11 { pt3dadd( 25.1011, -44.9687, 29.4628, 0.55 ) }
    dend_11 { pt3dadd( 27.2989, -45.6006, 30.7192, 0.55 ) }
    dend_11 { pt3dadd( 32.8774, -46.8028, 33.7662, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_11 { pt3dadd( 36.9235, -47.603, 36.0991, 0.28 ) }
    dend_11 { pt3dadd( 43.0536, -48.617, 39.6379, 0.28 ) }
    dend_11 { pt3dadd( 45.5188, -48.959, 41.051, 0.28 ) }
    dend_11 { pt3dadd( 48.8313, -49.1408, 42.2762, 0.28 ) }
    dend_11 { pt3dadd( 54.1687, -48.9707, 44.2799, 0.28 ) }
    dend_11 { pt3dadd( 66.7334, -52.1035, 51.4707, 0.28 ) }
    dend_11 { pt3dadd( 77.817, -55.841, 60.582, 0.28 ) }
    dend_11 { pt3dadd( 88.7708, -59.5258, 69.8696, 0.28 ) }
    dend_11 { pt3dadd( 99.4761, -60.2373, 80.0623, 0.28 ) }
    dend_11 { pt3dadd( 110.226, -63.1305, 89.8368, 0.28 ) }
    dend_11 { pt3dadd( 118.998, -67.5007, 100.995, 0.28 ) }
    dend_11 { pt3dadd( 127.145, -74.858, 111.148, 0.28 ) }
    dend_11 { pt3dadd( 133.753, -81.4127, 122.826, 0.28 ) }
    dend_11 { pt3dadd( 139.548, -87.1688, 135.298, 0.28 ) }
    dend_11 { pt3dadd( 146.858, -93.3864, 146.716, 0.28 ) }
    dend_11 { pt3dadd( 154.673, -99.2128, 157.983, 0.28 ) }
    dend_11 { pt3dadd( 161.84, -102.663, 170.507, 0.28 ) }
    dend_11 { pt3dadd( 171.789, -106.788, 180.716, 0.28 ) }
    dend_11 { pt3dadd( 183.191, -108.679, 189.965, 0.28 ) }
    dend_11 { pt3dadd( 193.789, -111.07, 200.028, 0.28 ) }
    dend_11 { pt3dadd( 205.311, -111.01, 209.317, 0.28 ) }
    dend_11 { pt3dadd( 216.308, -111.628, 219.201, 0.28 ) }
    dend_11 { pt3dadd( 227.383, -111.221, 229.014, 0.28 ) }
    dend_11 { pt3dadd( 237.462, -108.463, 239.537, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 128.438, -61.0855, 73.6421, 0.28 ) }
    dend_9 { pt3dadd( 136.292, -63.8622, 75.1268, 0.28 ) }
    dend_9 { pt3dadd( 143.704, -67.6071, 76.9086, 0.28 ) }
    dend_9 { pt3dadd( 151.274, -70.5599, 79.3149, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 128.438, -61.0855, 73.6421, 0.28 ) }
    dend_8 { pt3dadd( 136.642, -62.2535, 80.4752, 0.28 ) }
    dend_8 { pt3dadd( 145.571, -64.7172, 85.9597, 0.28 ) }
    dend_8 { pt3dadd( 154.949, -66.4906, 90.9034, 0.28 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 32/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -25.8636, -124.617, -42.0869, 0.28 ) }
    dend_4 { pt3dadd( -27.8278, -127.676, -41.9842, 0.28 ) }
    dend_4 { pt3dadd( -28.435, -128.617, -41.9548, 0.55 ) }
    dend_4 { pt3dadd( -29.9834, -131.108, -42.0193, 0.28 ) }
    dend_4 { pt3dadd( -30.9316, -132.614, -42.0919, 0.83 ) }
    dend_4 { pt3dadd( -32.5915, -135.158, -42.239, 0.28 ) }
    dend_4 { pt3dadd( -33.8646, -137.092, -42.3559, 0.28 ) }
    dend_4 { pt3dadd( -35.1862, -139.045, -42.6269, 0.83 ) }
    dend_4 { pt3dadd( -37.3218, -142.17, -43.2201, 0.28 ) }
    dend_4 { pt3dadd( -38.0451, -143.258, -43.5296, 0.55 ) }
    dend_4 { pt3dadd( -40.4236, -147.01, -44.8275, 0.28 ) }
    dend_4 { pt3dadd( -41.3072, -148.466, -45.4313, 0.83 ) }
    dend_4 { pt3dadd( -43.9246, -152.841, -47.4802, 0.28 ) }
    dend_4 { pt3dadd( -44.5473, -153.986, -48.0679, 0.83 ) }
    dend_4 { pt3dadd( -46.1829, -157.437, -49.9063, 0.28 ) }
    dend_4 { pt3dadd( -46.5514, -158.505, -50.4587, 0.55 ) }
    dend_4 { pt3dadd( -46.8957, -160.228, -51.3157, 0.28 ) }
    dend_4 { pt3dadd( -47.1122, -161.761, -52.0408, 0.83 ) }
    dend_4 { pt3dadd( -47.2847, -165.942, -53.6564, 0.28 ) }
    dend_4 { pt3dadd( -47.2588, -167.15, -54.0702, 0.83 ) }
    dend_4 { pt3dadd( -46.8945, -170.69, -54.9153, 0.28 ) }
    dend_4 { pt3dadd( -46.6474, -172.083, -55.2208, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 54/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -25.8636, -124.617, -42.0869, 0.28 ) }
    dend_3 { pt3dadd( -24.8617, -127.796, -42.2354, 0.28 ) }
    dend_3 { pt3dadd( -24.3407, -129.449, -42.3127, 1.11 ) }
    dend_3 { pt3dadd( -23.8738, -130.93, -42.3819, 0.28 ) }
    dend_3 { pt3dadd( -23.4332, -132.327, -42.4472, 1.38 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_27, dend_26, dend_25, dend_20, dend_13, dend_0, dend_24, dend_21, dend_19, dend_14, dend_6, dend_1, dend_23, dend_22, dend_16, dend_15, dend_10, dend_7, dend_5, dend_2, dend_18, dend_17, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_27, dend_26, dend_25, dend_20, dend_13, dend_0, dend_24, dend_21, dend_19, dend_14, dend_6, dend_1, dend_23, dend_22, dend_16, dend_15, dend_10, dend_7, dend_5, dend_2, dend_18, dend_17, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_24 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_19 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_14 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_7 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_12 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_11 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_4 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_13 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_20 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_10 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_21 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_5 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_9 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_8 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_13, dend_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    axon_1 all.append()
    axon_1 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_28 nseg = 11
    dend_27 nseg = 11
    dend_26 nseg = 19
    dend_25 nseg = 11
    dend_24 nseg = 21
    dend_19 nseg = 19
    dend_14 nseg = 5
    dend_1 nseg = 5
    dend_23 nseg = 13
    dend_22 nseg = 9
    dend_16 nseg = 5
    dend_7 nseg = 7
    dend_18 nseg = 3
    dend_12 nseg = 11
    dend_11 nseg = 17
    dend_4 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_LBC_4738b5c12c_0_0


