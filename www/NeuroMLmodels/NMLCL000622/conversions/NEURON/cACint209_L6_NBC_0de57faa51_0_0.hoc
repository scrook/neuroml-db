// Cell: cACint209_L6_NBC_0de57faa51_0_0
/*
{
  "id" : "cACint209_L6_NBC_0de57faa51_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.873478, -12.1204, -1.0889, 3.2264", "-0.698655, -10.9282, -0.984246, 5.56239", "-0.523832, -9.73588, -0.879587, 7.69458", "-0.349009, -8.5436, -0.774929, 10.6304", "-0.174186, -7.35132, -0.670271, 12.3889", "6.37175E-4, -6.15904, -0.565612, 13.0429", "0.17546, -4.96676, -0.460954, 13.3962", "0.350283, -3.77448, -0.356295, 13.6031", "0.525106, -2.5822, -0.251637, 13.7768", "0.699929, -1.38992, -0.146979, 13.7572", "0.874752, -0.197642, -0.0423202, 13.4519", "1.04958, 0.994638, 0.0623382, 13.1714", "1.2244, 2.18692, 0.166997, 12.4149", "1.39922, 3.3792, 0.271655, 11.5059", "1.57404, 4.57148, 0.376313, 10.5982", "1.74887, 5.76376, 0.480972, 9.84377", "1.92369, 6.95604, 0.58563, 9.16735", "2.09851, 8.14832, 0.690289, 7.18404", "2.27334, 9.34059, 0.794947, 5.28238", "2.44816, 10.5329, 0.899606, 3.93844", "2.62298, 11.7252, 1.00426, 2.5386" ]
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "3.61398, 11.6299, -0.788928, 2.06", "3.61398, 11.6299, -0.788928, 2.06", "3.79979, 12.4527, -0.788928, 2.06", "3.83777, 12.6209, -0.788928, 2.06", "4.07319, 13.6633, -0.788928, 2.06", "4.29105, 14.6279, -0.788928, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.65398, 9.68973, -2.84893, 1.77", "4.4202, 11.2052, -5.32574, 1.62", "5.07442, 12.1959, -6.69103, 1.62", "5.09915, 12.2274, -6.75042, 1.62", "5.67996, 12.8431, -8.15583, 1.47", "5.73865, 12.8916, -8.28961, 1.47", "7.16058, 13.7639, -11.3599, 1.47", "8.47587, 14.1486, -13.8558, 1.92", "10.8694, 14.6083, -18.3863, 1.92", "11.6766, 14.7171, -19.9326, 1.92", "12.4953, 14.7446, -21.5434, 1.92", "13.2801, 14.7274, -23.1147, 1.84", "14.3863, 14.5499, -25.3677, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.85602, 7.83723, 2.46107, 1.62", "-2.85602, 7.83723, 2.46107, 1.62", "-3.43451, 8.42382, 2.66455, 1.62", "-3.48654, 8.47588, 2.68155, 1.62", "-4.74045, 9.78355, 3.0711, 1.84", "-5.7559, 10.8583, 3.37912, 1.84", "-6.84836, 12.0145, 3.71051, 1.62", "-8.05821, 13.2993, 4.0851, 1.62", "-9.44791, 14.7838, 4.53103, 1.92", "-10.158, 15.5516, 4.76096, 1.92", "-10.2069, 15.6067, 4.77716, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.07398, -8.58177, 1.15107, 2.21", "6.07398, -8.58177, 1.15107, 2.21", "6.6335, -9.54442, 2.61259, 1.84", "7.36594, -10.8046, 4.52581, 1.84", "7.38797, -10.8425, 4.58337, 1.84", "8.14502, -12.1451, 6.56089, 1.62", "8.9409, -13.5144, 8.63982, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.38602, -10.8438, -1.22893, 3.24", "-2.38602, -10.8438, -1.22893, 3.24", "-2.92887, -12.55, -1.20713, 3.24", "-3.58505, -14.6125, -1.18078, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.62298, 11.7252, 1.00426, 0.668195", "4.79915, 26.5665, 1.00426, 0.668195", "6.97531, 41.4078, 1.00426, 0.668195" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "4.29105, 14.6279, -0.788928, 1.47", "5.16852, 15.5223, 0.328823, 1.47", "7.62501, 18.0664, 2.66496, 1.18", "7.6696, 18.1155, 2.69606, 1.18", "8.77839, 19.2981, 3.15477, 1.18", "10.0588, 20.6269, 3.45231, 1.18", "10.1022, 20.6716, 3.45868, 1.18", "11.3075, 21.9223, 3.30803, 1.4", "12.4893, 23.1431, 2.91259, 1.4", "13.7788, 24.5705, 2.47335, 1.18", "14.6115, 25.5808, 2.17229, 1.18", "14.6619, 25.646, 2.15993, 1.18", "15.3993, 26.6216, 2.05161, 1.18", "15.449, 26.6883, 2.05532, 1.18", "16.4043, 27.9666, 2.36738, 1.18", "16.4522, 28.0288, 2.39543, 1.18", "17.8581, 29.6817, 3.2503, 1.18", "17.8972, 29.7245, 3.27412, 1.18", "18.9002, 30.7308, 3.8299, 1.18", "19.8325, 31.6349, 4.30141, 1.18", "21.4688, 33.1607, 5.0787, 1.03", "22.8483, 34.516, 5.69526, 1.03", "22.8894, 34.5595, 5.71399, 1.03", "24.1134, 35.8847, 6.24938, 0.81", "25.0965, 36.9979, 6.64819, 0.81", "25.1346, 37.0446, 6.66487, 0.81", "26.5203, 38.9109, 7.26805, 1.03", "27.8187, 40.8575, 7.9888, 1.03" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "4.29105, 14.6279, -0.788928, 1.11", "2.22203, 18.383, 0.131563, 1.11", "1.67806, 19.6129, 0.219347, 1.11", "1.15385, 20.7981, 0.303944, 1.03", "0.22883, 22.8895, 0.453222, 1.25", "0.190606, 22.9759, 0.45939, 1.25", "-0.863393, 25.3589, 0.629483, 1.25", "-1.47821, 27.0137, 0.315367, 1.47" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "14.3863, 14.5499, -25.3677, 1.55", "14.7503, 10.7503, -29.3246, 1.55", "14.9123, 9.65206, -30.172, 0.81", "15.0607, 8.63692, -30.7691, 0.81", "15.2628, 7.157, -31.5314, 0.81", "15.2684, 7.06498, -31.582, 0.81", "15.228, 5.90012, -32.3755, 1.11", "15.1488, 5.07302, -32.8227, 0.81", "14.8373, 4.02538, -33.7259, 0.59", "14.7906, 3.93341, -33.833, 0.59", "13.9751, 2.70511, -35.4858, 0.59", "12.9657, 1.27898, -37.4344, 1.25", "12.9357, 1.23987, -37.4903, 1.25", "11.7958, -0.209298, -39.5429, 1.18", "10.5572, -1.77141, -41.7815, 0.81", "9.32634, -3.40465, -44.0149, 0.52", "8.87811, -4.05433, -44.8205, 0.52", "8.84318, -4.1059, -44.8784, 0.52", "8.51484, -4.598, -45.415, 0.52" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "14.3863, 14.5499, -25.3677, 1.4", "16.0164, 14.0546, -25.9061, 1.4", "17.9473, 13.4679, -26.5439, 1.4", "17.991, 13.4546, -26.5584, 1.4", "19.0059, 13.1462, -26.8936, 1.4", "19.104, 13.1164, -26.926, 1.4" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-10.2069, 15.6067, 4.77716, 0.88", "-10.6976, 16.7771, 5.17609, 0.88", "-10.9476, 17.4363, 5.38832, 0.88", "-11.3133, 18.5445, 5.71667, 0.88", "-11.8565, 20.361, 6.23047, 0.74", "-12.1582, 21.5407, 6.56451, 0.74", "-12.3163, 22.2869, 6.76637, 1.03", "-12.3262, 22.3689, 6.78464, 1.03", "-12.3667, 23.2584, 7.01541, 1.03", "-12.3663, 23.3736, 7.0476, 1.03", "-12.4086, 24.5255, 7.45909, 0.88", "-12.6192, 25.6971, 8.04819, 1.18", "-12.6398, 25.7585, 8.08497, 1.18", "-13.142, 26.8992, 8.83473, 1.18", "-13.7193, 27.9588, 9.59855, 0.81", "-14.5038, 29.2044, 10.5482, 0.81", "-15.5939, 30.7281, 11.7333, 0.81", "-16.383, 31.7516, 12.5362, 0.81", "-16.4226, 31.8025, 12.5742, 0.81", "-17.0957, 32.7059, 13.1723, 0.66", "-17.1315, 32.7625, 13.2053, 0.66", "-17.5933, 33.8944, 13.6577, 0.66", "-17.6468, 34.19, 13.7613, 0.66", "-17.6965, 35.1521, 14.167, 0.96", "-17.6833, 36.2331, 14.6607, 0.96", "-17.6532, 36.6349, 14.8544, 0.96", "-17.5975, 37.1897, 15.1381, 0.96", "-17.394, 38.6142, 15.9452, 0.81", "-17.2033, 39.7883, 16.6444, 0.81", "-17.0188, 40.7198, 17.2363, 0.81", "-17.0022, 40.8102, 17.3022, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-10.2069, 15.6067, 4.77716, 0.88", "-10.1799, 16.1329, 4.79415, 0.88", "-10.1361, 16.7586, 4.80969, 0.74", "-10.0736, 17.5112, 4.82346, 0.74", "-10.0682, 17.5709, 4.82396, 0.74", "-9.92663, 18.8778, 4.8349, 0.74", "-9.81593, 19.7763, 4.84709, 0.88", "-9.74815, 20.2717, 4.84301, 0.88", "-9.72653, 20.4208, 4.84086, 0.88", "-9.6273, 21.1074, 4.8333, 0.74", "-9.51566, 21.9522, 4.85624, 0.74", "-9.3983, 22.9528, 4.91804, 0.74", "-9.30737, 23.8899, 5.00024, 1.62", "-9.22317, 24.8996, 5.1044, 1.62", "-9.15143, 26.0674, 5.26316, 1.33", "-9.11373, 26.9203, 5.40671, 0.96", "-9.09338, 27.7183, 5.56043, 0.96", "-9.07962, 28.3893, 5.70875, 0.96", "-9.07806, 28.4475, 5.72319, 0.96", "-9.05793, 29.2974, 5.93389, 0.96", "-9.02052, 30.2813, 6.15719, 0.74", "-8.97962, 31.0237, 6.29081, 0.74", "-8.97568, 31.0827, 6.30051, 0.74", "-8.92988, 31.6411, 6.30962, 1.03", "-8.92385, 31.7089, 6.30261, 1.03", "-8.86878, 32.3185, 6.17226, 1.03", "-8.86448, 32.3764, 6.15677, 1.03", "-8.78524, 33.4253, 5.75589, 1.03", "-8.67618, 34.8553, 5.10973, 1.03", "-8.6714, 34.9166, 5.07854, 1.03", "-8.58071, 36.018, 4.47696, 1.03", "-8.57643, 36.0702, 4.44699, 1.03", "-8.49895, 37.1835, 3.8211, 0.88", "-8.49527, 37.2435, 3.78733, 0.88", "-8.4778, 37.6545, 3.61178, 0.88", "-8.47682, 37.7107, 3.59052, 0.88", "-8.47371, 38.2543, 3.41993, 0.88", "-8.47482, 38.5839, 3.36542, 0.88", "-8.47459, 39.2339, 3.34574, 0.88", "-8.47364, 39.2937, 3.34455, 0.88", "-8.42514, 39.9969, 3.34538, 0.88", "-8.40285, 40.2754, 3.34732, 0.88", "-8.30984, 41.2151, 3.36381, 0.88", "-8.19451, 42.2107, 3.40009, 1.03", "-8.18622, 42.2785, 3.40477, 1.03", "-8.02836, 43.4121, 3.48495, 1.03" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.9409, -13.5144, 8.63982, 1.11", "10.3723, -15.8759, 9.27825, 1.11", "10.9655, -16.8377, 9.44772, 1.11", "11.0259, -16.9302, 9.43439, 1.11", "11.5621, -17.6425, 9.23076, 1.33", "12.3197, -18.5232, 8.89492, 1.11", "13.5294, -19.8018, 8.36159, 1.11", "13.5631, -19.8369, 8.34249, 1.11", "15.1965, -21.3999, 7.40402, 1.25", "16.4345, -22.5387, 6.68403, 1.55", "17.6299, -23.5453, 5.98024, 1.55", "18.3421, -24.1104, 5.5377, 1.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "8.9409, -13.5144, 8.63982, 1.47", "8.53566, -17.7417, 15.3137, 1.47", "8.47479, -18.8225, 16.7845, 1.03", "8.52849, -19.5964, 17.5929, 1.03", "8.75225, -21.0217, 18.8509, 0.88", "8.76829, -21.0844, 18.9006, 0.88", "9.25187, -22.6879, 20.1066, 0.88", "9.27514, -22.739, 20.1305, 0.88", "10.6072, -25.0948, 21.34, 0.88", "11.2678, -26.0274, 21.9011, 1.47", "12.5839, -27.5961, 22.9769, 0.88", "12.6319, -27.6476, 23.0188, 0.88", "13.998, -28.8731, 24.2352, 0.74", "14.104, -28.9569, 24.3388, 0.74", "15.1511, -29.6303, 25.4695, 0.74", "15.2173, -29.6664, 25.5383, 0.74", "16.2741, -30.1623, 26.6879, 1.33", "17.1101, -30.5471, 27.7076, 0.96", "18.4075, -31.164, 29.3588, 1.11", "18.4489, -31.185, 29.4142, 1.11", "19.1297, -31.5845, 30.3892, 1.11", "20.2357, -32.3546, 31.8907, 0.81", "21.0637, -33.0096, 32.947, 1.25", "21.7125, -33.6736, 33.8166, 0.88", "21.7475, -33.7177, 33.861, 0.88", "22.4735, -34.9131, 34.8163, 0.81", "22.8962, -36.0582, 35.4341, 0.81", "22.9156, -36.1543, 35.4594, 0.81", "23.035, -37.7464, 35.7216, 0.81", "23.0343, -37.8065, 35.7297, 0.81", "22.9795, -38.9059, 35.8422, 0.81", "22.9559, -39.9248, 35.9907, 1.18", "22.9844, -40.9409, 36.2279, 0.88", "23.221, -42.0837, 36.7709, 0.59", "23.5705, -42.923, 37.5725, 0.59", "23.5951, -42.9744, 37.6314, 0.59", "24.4168, -44.4622, 39.6304, 0.59", "24.4427, -44.5069, 39.6945, 0.59", "25.4428, -46.1627, 41.9178, 0.81", "26.2944, -47.6141, 43.7791, 0.81", "26.7857, -48.5154, 44.8961, 0.81", "26.8179, -48.5758, 44.9712, 0.81", "27.562, -50.0532, 46.7661, 0.74", "28.3192, -51.4281, 48.4123, 0.52", "29.2514, -52.992, 50.1905, 0.52", "29.3296, -53.0928, 50.3095, 0.52", "30.5111, -54.3182, 51.9935, 0.52", "30.5475, -54.356, 52.0426, 0.52", "31.0835, -54.9393, 52.7835, 0.52", "31.1565, -55.042, 52.8972, 0.52", "31.6546, -56.005, 53.5116, 0.52", "31.737, -56.2148, 53.61, 0.52", "32.4126, -58.1498, 54.3389, 0.52", "32.8587, -59.314, 54.8132, 0.52", "32.9792, -59.6316, 54.9483, 0.52", "33.3583, -60.6455, 55.3857, 0.52", "33.3938, -60.7387, 55.427, 0.52", "34.0756, -61.9966, 56.0594, 0.52", "34.6024, -62.4529, 56.4136, 0.88", "34.7242, -62.526, 56.4738, 0.88" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-3.58505, -14.6125, -1.18078, 0.59", "-4.51188, -14.8615, -1.32952, 0.59", "-5.96646, -15.2897, -1.38901, 0.59", "-7.75465, -15.8543, -1.33188, 0.59", "-8.45512, -16.0962, -1.27787, 0.59", "-10.9292, -17.0721, -1.02236, 0.88", "-12.1344, -17.6061, -0.921992, 0.88", "-13.4703, -18.2713, -0.782606, 0.96", "-14.6001, -18.8871, -0.659248, 1.25", "-15.6938, -19.5521, -0.588676, 1.47", "-17.1132, -20.3761, -0.860382, 1.11", "-18.842, -21.2994, -1.6828, 1.03", "-19.6625, -21.6982, -2.1869, 1.03", "-19.7523, -21.738, -2.25071, 1.03", "-21.5894, -22.5198, -3.65741, 1.55", "-25.3868, -24.1046, -6.68325, 0.66", "-26.8425, -24.7387, -7.83961, 0.66", "-27.6587, -25.1498, -8.49147, 0.66", "-27.7134, -25.1835, -8.53387, 0.66", "-28.5518, -25.8113, -9.1351, 0.74", "-29.2617, -26.5041, -9.56542, 1.03", "-30.0955, -27.7608, -10.0883, 1.03", "-31.1395, -29.4394, -10.7088, 1.25", "-31.741, -30.4185, -11.1071, 1.18", "-31.8088, -30.5209, -11.1515, 1.18", "-32.3637, -31.2017, -11.5467, 0.52", "-32.4177, -31.2445, -11.5804, 0.52", "-33.4148, -31.5921, -12.1026, 0.52", "-33.486, -31.6016, -12.1316, 0.52", "-34.0161, -31.6319, -12.3836, 0.52", "-35.6898, -31.6854, -13.1944, 0.88", "-36.8826, -31.7015, -13.7764, 1.25", "-38.4879, -31.7373, -14.5876, 1.25", "-39.3592, -31.7669, -15.0432, 0.88", "-40.9267, -31.923, -15.8545, 0.88", "-41.6149, -32.086, -16.2474, 0.52", "-41.9969, -32.2691, -16.4705, 0.52", "-42.2695, -32.4771, -16.6883, 0.52", "-42.5937, -32.7387, -16.9905, 0.52", "-43.2003, -33.1928, -17.6113, 0.52", "-44.3565, -34.0023, -18.8183, 0.88", "-45.1069, -34.5039, -19.6204, 1.25", "-47.1897, -35.805, -21.7412, 1.62", "-48.9261, -36.8382, -23.3514, 1.55", "-50.4411, -37.694, -24.6573, 0.81", "-50.5256, -37.7398, -24.7241, 0.81", "-50.9975, -38.0114, -25.0461, 0.37", "-52.0816, -38.7374, -25.6791, 0.37", "-53.333, -39.8245, -26.0999, 0.37", "-53.385, -39.88, -26.107, 0.37", "-54.1422, -40.6975, -26.2212, 1.03", "-54.8824, -41.4771, -26.3605, 1.47", "-55.6696, -42.3085, -26.5218, 0.96", "-56.2814, -42.9581, -26.6596, 0.29", "-57.9519, -44.7027, -27.0511, 0.29", "-60.195, -46.9887, -27.5587, 0.29", "-61.3192, -48.0789, -27.7953, 0.29", "-62.0905, -48.7828, -27.974, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.58505, -14.6125, -1.18078, 2.36", "-3.67894, -14.953, -1.23036, 2.36", "-4.02402, -16.114, -1.35465, 2.36", "-4.62381, -18.132, -1.57069, 1.99", "-5.19314, -20.0474, -1.77576, 1.99", "-5.70012, -21.7532, -1.95837, 2.14", "-6.26138, -23.6415, -2.16053, 3.02", "-6.59517, -24.6751, -2.26554, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.97531, 41.4078, 1.00426, 1.18", "9.15148, 56.2491, 1.00426, 1.18", "11.3276, 71.0904, 1.00426, 1.18" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "27.8187, 40.8575, 7.9888, 0.74", "28.3101, 43.978, 10.5171, 0.74", "28.3219, 44.0584, 10.5605, 0.74", "28.5566, 45.1519, 11.05, 0.74", "28.8114, 46.1543, 11.4399, 0.59", "29.0985, 47.1987, 11.7971, 0.59", "29.3423, 48.0681, 12.065, 0.59", "29.3625, 48.1453, 12.0756, 0.59", "29.677, 49.2157, 12.2694, 0.22", "29.8665, 49.7843, 12.3929, 0.81", "30.1109, 50.5016, 12.5752, 1.03", "30.3642, 51.0908, 12.7817, 1.03", "30.885, 52.2006, 13.2212, 0.81", "31.4647, 53.3546, 13.6928, 0.59", "32.2269, 54.8554, 14.3058, 0.59", "32.2786, 54.9476, 14.3497, 0.59", "33.5335, 57.0256, 15.4271, 0.59", "33.5727, 57.0881, 15.4605, 0.59", "34.0801, 57.888, 15.9306, 0.44", "34.5858, 58.6833, 16.5003, 0.44", "35.5381, 60.385, 17.8357, 0.44", "35.7611, 60.8623, 18.2111, 0.96", "35.9489, 61.4728, 18.6628, 0.96", "36.2496, 62.6527, 19.5329, 0.59", "36.4606, 63.7378, 20.2953, 0.29", "36.574, 64.5608, 20.8175, 0.29", "36.5797, 64.716, 20.8927, 0.29", "36.5731, 66.3753, 21.5322, 0.29", "36.5699, 66.4643, 21.5543, 0.29", "36.4795, 67.5616, 21.6071, 0.29", "36.4599, 67.7326, 21.5967, 0.81", "36.3242, 68.5578, 21.5236, 0.81", "36.1891, 69.1091, 21.4712, 0.29", "35.7704, 70.0322, 21.4206, 0.29", "35.1509, 70.9839, 21.424, 0.29", "35.0069, 71.1624, 21.4321, 0.29", "34.2875, 71.9085, 21.4575, 0.29", "33.9227, 72.2368, 21.4687, 0.29", "32.2844, 73.5081, 21.5428, 0.29", "30.8544, 74.464, 21.6051, 0.29", "30.7635, 74.5215, 21.6107, 0.29", "29.0492, 75.5861, 21.6883, 0.29", "28.899, 75.6763, 21.6913, 0.29", "28.0079, 76.191, 21.6874, 0.29", "27.1824, 76.6123, 21.6477, 0.81", "26.1881, 77.0353, 21.6268, 0.81", "25.6644, 87.447, 26.4882, 0.81", "25.9189, 97.0814, 32.8174, 0.81" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "27.8187, 40.8575, 7.9888, 1.03", "29.3753, 41.2604, 9.1784, 1.03", "30.319, 41.523, 9.85202, 0.74", "31.6276, 42.0202, 10.6673, 0.74", "31.6721, 42.0434, 10.6912, 0.74", "32.463, 42.5378, 10.9561, 0.52", "33.0075, 42.9174, 11.0398, 0.52", "33.0765, 42.9753, 11.026, 0.52", "33.9699, 43.8393, 10.8374, 0.81", "34.616, 44.5115, 10.6848, 1.11", "35.7884, 45.7464, 10.6946, 0.66", "36.3352, 46.3401, 10.8243, 0.59", "36.98, 46.963, 11.2626, 0.59", "38.0565, 47.898, 12.4296, 0.59", "38.0975, 47.9261, 12.4846, 0.59", "39.3263, 48.6441, 14.2442, 0.59", "39.3654, 48.6654, 14.3037, 0.59", "40.2919, 49.185, 15.6514, 1.25", "40.3351, 49.2116, 15.7055, 1.25", "41.2017, 49.8346, 16.4674, 0.96", "42.3701, 50.7376, 17.1819, 0.66", "42.4387, 50.7925, 17.2067, 0.66", "43.3968, 51.5953, 17.4588, 0.59", "44.4048, 52.5002, 17.6005, 0.59", "45.2525, 53.2923, 17.6889, 0.59", "45.8246, 53.8709, 17.7153, 0.59", "46.1155, 54.1517, 17.7176, 0.59", "46.4811, 54.4649, 17.7331, 0.81", "47.1283, 54.9485, 17.7801, 0.81", "47.3786, 55.1143, 17.8067, 0.81", "48.3513, 55.736, 17.9564, 0.81", "49.3063, 56.3396, 18.1077, 0.44", "50.1378, 56.8577, 18.2405, 0.44", "50.2208, 56.9087, 18.2535, 0.44", "51.0212, 57.4062, 18.4031, 0.81", "51.4961, 57.7154, 18.4991, 0.96", "52.1324, 58.1646, 18.6531, 0.81", "52.1816, 58.2043, 18.6661, 0.81", "52.9752, 58.9501, 18.8298, 0.52", "53.8358, 59.8218, 18.9697, 0.52", "54.2779, 60.3069, 19.0553, 0.81", "55.1289, 61.2911, 19.2356, 0.52", "55.2581, 61.4419, 19.2718, 0.52", "56.726, 63.1239, 19.7346, 0.37", "56.7682, 63.1703, 19.7485, 0.37", "57.7319, 64.195, 20.0661, 0.37", "58.2547, 64.7236, 20.2539, 1.03", "59.4156, 65.8201, 20.6978, 1.03", "59.4617, 65.8608, 20.7172, 1.03", "60.2159, 66.4696, 21.0926, 1.03", "60.2636, 66.5084, 21.1123, 1.03", "60.9845, 67.1226, 21.3269, 0.66", "61.0389, 67.1701, 21.3413, 0.66", "61.5128, 67.6267, 21.4219, 0.66", "61.5852, 67.7001, 21.4354, 0.66", "62.039, 68.2048, 21.5376, 0.66", "62.9916, 69.2845, 21.7594, 0.29" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-1.47821, 27.0137, 0.315367, 0.96", "-1.46668, 27.5614, 0.289485, 0.96", "-1.50852, 28.69, 0.200733, 0.74", "-1.70064, 30.1509, 0.0447073, 0.74", "-1.71176, 30.2144, 0.0368343, 0.74", "-2.00219, 31.4943, -0.139598, 0.66", "-2.30575, 32.68, -0.311937, 0.66", "-2.36683, 32.8474, -0.335021, 0.66", "-2.97504, 33.8623, -0.524794, 1.03", "-3.01646, 33.9125, -0.532601, 1.03", "-3.62299, 34.5413, -0.575227, 1.03", "-3.67945, 34.5932, -0.571558, 1.03", "-4.3097, 35.1484, -0.495087, 0.81", "-5.54929, 36.2782, -0.228408, 0.81", "-6.4495, 37.1385, 0.0213826, 0.81", "-7.48949, 38.1415, 0.406979, 0.66", "-8.48347, 39.1326, 0.850554, 0.66", "-8.53326, 39.1857, 0.874876, 0.66", "-9.57987, 40.4424, 1.44936, 1.03", "-10.1757, 41.2523, 1.83359, 1.03", "-10.986, 42.4338, 2.42546, 0.96", "-11.3443, 43.0192, 2.73514, 0.96", "-11.7951, 43.8879, 3.17749, 0.52", "-12.2066, 44.7868, 3.62124, 0.52", "-12.2269, 44.8437, 3.64619, 0.52", "-12.5625, 46.1152, 4.17532, 1.11", "-12.7189, 47.087, 4.49161, 1.11", "-12.8577, 48.094, 4.85824, 1.03", "-12.8656, 48.1544, 4.88148, 1.03", "-13.0121, 48.8732, 5.12719, 0.66", "-13.0334, 48.9437, 5.14574, 0.66", "-13.4768, 49.695, 5.22144, 0.44", "-14.1642, 50.3772, 5.25139, 0.44", "-14.4629, 50.5842, 5.27752, 0.44", "-15.2417, 51.0694, 5.51745, 0.44", "-15.4416, 51.197, 5.61956, 0.44", "-16.4015, 51.9141, 6.26198, 0.44", "-16.4464, 51.957, 6.3077, 0.44", "-17.1578, 52.8976, 7.31899, 0.74", "-17.8534, 54.1425, 8.73411, 0.52", "-18.1594, 54.907, 9.56779, 0.66", "-18.3521, 55.5356, 10.2261, 0.66", "-18.5915, 56.7782, 11.4093, 1.47", "-18.6565, 57.2594, 11.8177, 1.47", "-18.7671, 59.2073, 13.1162, 0.66", "-18.8013, 60.2545, 13.6726, 0.66", "-18.8092, 60.4014, 13.7429, 0.66", "-18.9624, 61.6633, 14.2486, 0.66", "-18.9755, 61.7338, 14.2741, 0.66", "-19.3803, 63.6656, 15.0043, 0.66", "-19.394, 63.7258, 15.0251, 0.66", "-19.6957, 64.6439, 15.4358, 0.66", "-20.2003, 65.9752, 16.1216, 0.66", "-20.7546, 67.2881, 16.8613, 0.88", "-20.8296, 67.4882, 16.9704, 0.88", "-21.1703, 68.5783, 17.591, 0.88", "-21.5391, 70.1103, 18.3985, 1.11", "-21.6319, 70.6518, 18.6624, 0.88", "-21.743, 71.4462, 19.0262, 0.59", "-21.9849, 72.9046, 19.5721, 0.59", "-22.2326, 74.037, 19.9686, 0.44", "-22.4271, 74.7931, 20.2079, 0.44", "-22.4627, 74.9082, 20.2312, 0.44", "-22.8797, 75.7911, 20.3507, 0.44", "-23.1482, 76.1881, 20.3737, 0.44", "-23.4796, 76.5611, 20.3412, 0.44", "-23.6443, 76.7486, 20.3025, 0.44", "-23.8764, 77.2004, 20.2592, 0.74", "-24.1135, 78.1167, 20.2394, 0.96", "-24.1138, 78.1815, 20.2422, 0.96", "-24.0622, 78.6538, 20.2762, 0.96", "-24.048, 78.728, 20.2828, 0.96", "-23.7938, 79.909, 20.3883, 0.44", "-23.7802, 79.9834, 20.3936, 0.44", "-23.7012, 80.9432, 20.4252, 0.44", "-23.7011, 81.0582, 20.4248, 0.44", "-23.7442, 81.8601, 20.3815, 0.44", "-23.826, 82.6456, 20.302, 0.96", "-24.0201, 83.852, 20.146, 0.96", "-24.3578, 85.3277, 19.9343, 0.96", "-24.594, 86.1436, 19.8055, 0.96", "-24.8112, 86.862, 19.6915, 0.44", "-25.1687, 88.0086, 19.5124, 0.44", "-25.6013, 89.4137, 19.3045, 0.44", "-25.9404, 90.5634, 19.1642, 0.44", "-25.9728, 90.6813, 19.1541, 0.44", "-26.1964, 91.539, 19.1264, 0.44", "-26.3685, 92.2248, 19.1413, 0.74", "-26.4999, 92.7953, 19.1738, 0.81", "-26.7151, 93.7628, 19.2468, 0.81", "-26.738, 93.8682, 19.2568, 0.81", "-27.0172, 94.7561, 19.3305, 0.29", "-27.1844, 95.1171, 19.3542, 0.29", "-27.271, 95.2805, 19.3595, 0.29", "-27.5734, 95.8161, 19.3543, 0.29", "-27.6887, 96.0071, 19.3422, 0.29", "-27.978, 96.4959, 19.2964, 0.29", "-28.0375, 96.5943, 19.2831, 0.29", "-28.5543, 97.4854, 19.1614, 0.29", "-28.8218, 97.9459, 19.1051, 0.29", "-28.865, 98.0212, 19.0971, 0.29", "-29.0266, 98.2914, 19.0724, 0.88", "-29.3791, 98.9905, 19.0269, 0.88", "-29.8623, 99.9869, 18.9355, 0.88", "-30.1375, 100.523, 18.8714, 0.88", "-30.1732, 100.589, 18.8617, 0.88", "-30.7439, 101.603, 18.6878, 0.29", "-31.619, 103.113, 18.3954, 0.29", "-32.0096, 103.803, 18.2368, 0.59", "-32.4186, 104.531, 18.0385, 0.59", "-32.7255, 105.087, 17.8708, 0.29", "-33.1062, 105.744, 17.6561, 0.29", "-33.1855, 105.866, 17.6114, 0.29", "-33.6657, 106.5, 17.363, 0.29", "-33.7301, 106.592, 17.3339, 0.29", "-34.137, 107.201, 17.1477, 0.29", "-34.297, 107.434, 17.0809, 0.29", "-34.6671, 107.928, 17.0118, 0.29", "-34.7222, 107.996, 17.0088, 0.29", "-35.4261, 108.81, 17.0204, 0.29", "-35.7133, 109.131, 17.0304, 1.11", "-36.3293, 109.804, 17.0578, 1.33", "-37.2787, 110.858, 17.1127, 0.74", "-37.9431, 111.651, 17.128, 0.44", "-38.6002, 112.501, 17.1094, 0.44", "-38.7457, 112.706, 17.0959, 0.44", "-38.9596, 113.038, 17.0559, 0.44", "-39.0377, 113.176, 17.0184, 0.44", "-39.5639, 114.243, 16.5951, 0.44", "-39.9139, 114.969, 16.2846, 1.11", "-40.2556, 115.696, 15.964, 1.55", "-40.5131, 116.274, 15.7196, 1.55", "-41.0641, 117.547, 15.2014, 0.22", "-41.4011, 118.366, 14.8944, 0.22", "-41.7429, 119.225, 14.608, 0.22", "-41.7797, 119.33, 14.5762, 0.22", "-42.0804, 120.289, 14.3317, 0.22", "-42.173, 120.593, 14.2746, 0.22", "-42.3972, 121.349, 14.2036, 0.22", "-42.5881, 121.892, 14.1493, 0.96", "-42.7015, 122.184, 14.1177, 0.96", "-42.9126, 122.637, 14.0783, 0.22", "-43.2135, 123.184, 14.0378, 0.22", "-43.3228, 123.379, 14.0271, 0.22", "-44.2062, 124.971, 13.9671, 0.22", "-44.2817, 125.115, 13.9737, 0.22", "-44.6799, 125.903, 14.0553, 0.81", "-44.7126, 125.971, 14.0658, 0.81", "-45.0813, 126.76, 14.2259, 1.33", "-45.3073, 127.252, 14.3499, 1.33", "-45.8554, 128.215, 14.6626, 0.15", "-46.1624, 128.678, 14.8123, 0.15", "-46.2324, 128.768, 14.8345, 0.15", "-46.9091, 129.568, 15.0076, 0.15", "-47.0063, 129.671, 15.0259, 0.15", "-49.0474, 131.694, 15.2962, 0.15", "-49.1811, 131.823, 15.2944, 0.15", "-50.8927, 133.385, 15.0748, 0.15", "-51.0208, 133.495, 15.0456, 1.03", "-51.6175, 133.973, 14.8367, 1.03", "-51.6749, 134.017, 14.8107, 1.03", "-52.9516, 134.888, 13.9005, 0.15", "-53.9585, 135.535, 13.102, 0.15", "-54.0772, 135.597, 12.9839, 0.59", "-54.5051, 135.826, 12.5536, 0.59", "-59.1757, 145.622, 11.9559, 0.59", "-65.6385, 154.175, 9.86627, 0.59", "-73.171, 162.095, 9.23521, 0.59", "-80.652, 170.025, 8.22914, 0.59", "-88.7454, 177.399, 7.58949, 0.59", "-95.2614, 186.153, 7.33513, 0.59", "-101.493, 195.045, 6.28946, 0.59" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-1.47821, 27.0137, 0.315367, 0.66", "-1.69343, 27.4644, -0.206582, 0.66", "-2.05378, 27.9189, -0.966152, 0.52", "-2.29742, 28.149, -1.39865, 0.52", "-2.3235, 28.1717, -1.439, 0.52", "-2.81825, 28.5911, -2.1595, 0.52", "-2.88232, 28.6476, -2.25147, 0.52", "-3.64774, 29.3905, -3.32262, 0.88", "-3.94732, 29.7331, -3.70401, 0.96", "-4.26566, 30.2348, -4.08613, 0.96", "-4.28707, 30.2763, -4.11021, 0.96", "-4.56631, 30.9523, -4.42206, 0.66", "-4.89938, 31.8829, -4.8096, 0.66", "-5.20252, 32.8431, -5.1594, 0.66", "-5.65826, 34.1863, -5.66081, 0.66", "-5.67563, 34.2318, -5.68014, 0.66", "-6.09233, 35.1614, -6.11826, 0.44", "-6.40485, 35.7337, -6.41898, 0.44", "-6.74347, 36.2259, -6.72539, 0.88", "-7.29798, 36.92, -7.22166, 0.88", "-7.79113, 37.4909, -7.64907, 0.44", "-8.13083, 37.8859, -7.93212, 0.96", "-8.47972, 38.2823, -8.20363, 1.25", "-8.94099, 38.8123, -8.56225, 1.25", "-9.54376, 39.4766, -8.96157, 0.52", "-10.1334, 40.1114, -9.26924, 0.29", "-10.2492, 40.237, -9.31242, 0.29", "-10.669, 40.7002, -9.4378, 0.29", "-10.975, 41.055, -9.50536, 0.29", "-11.5762, 41.7962, -9.58756, 0.29", "-12.0125, 42.3909, -9.61537, 0.29", "-12.2735, 42.8165, -9.6333, 0.29", "-12.4521, 43.1716, -9.65476, 0.29", "-12.7317, 43.8772, -9.70895, 0.66", "-12.903, 44.402, -9.7572, 0.96", "-13.1127, 45.1669, -9.85723, 0.96", "-13.2413, 45.6497, -9.91205, 0.96", "-13.3749, 46.1356, -9.96267, 0.52", "-13.4858, 46.4973, -10.0002, 0.37", "-13.6144, 46.8041, -10.0088, 0.37", "-13.6721, 46.906, -10.0039, 0.37", "-14.0441, 47.3942, -9.951, 0.37", "-14.2016, 47.5661, -9.92989, 0.37", "-14.5225, 47.8919, -9.89701, 0.37", "-15.2958, 48.6573, -9.83701, 0.37", "-15.4092, 48.7697, -9.82983, 0.37", "-15.9766, 49.3565, -9.85221, 0.37", "-16.2961, 49.7043, -9.9086, 0.66", "-16.6796, 50.1645, -10.0334, 0.66", "-17.1616, 50.8443, -10.2972, 0.66", "-17.1862, 50.8857, -10.3182, 0.66", "-17.6878, 51.8588, -10.8098, 0.29", "-17.9121, 52.3711, -11.0773, 0.29", "-17.965, 52.5091, -11.1501, 0.29", "-18.1663, 53.1198, -11.4614, 0.88", "-18.2999, 53.6087, -11.6892, 0.88", "-18.3864, 53.9141, -11.7927, 0.88", "-18.5115, 54.3373, -11.8767, 0.37", "-18.5272, 54.394, -11.8862, 0.37", "-18.639, 54.7534, -11.94, 0.37", "-18.6951, 54.9067, -11.9579, 0.37", "-19.0816, 55.7759, -12.0552, 0.37", "-19.1037, 55.8227, -12.063, 0.37", "-19.2845, 56.1862, -12.1364, 1.11", "-19.7127, 57.0176, -12.3343, 1.11", "-20.1269, 57.791, -12.5424, 1.11", "-20.5451, 58.5844, -12.8094, 1.11", "-20.8497, 59.1741, -13.0437, 1.11", "-20.9792, 59.4287, -13.1571, 0.44", "-21.3321, 60.032, -13.4684, 0.44", "-21.4309, 60.183, -13.5548, 0.44", "-21.9644, 60.9289, -13.9948, 0.44", "-21.9941, 60.9668, -14.0162, 0.44", "-22.4152, 61.4707, -14.2633, 0.44", "-23.641, 62.8952, -14.9005, 0.44", "-23.9236, 63.2113, -15.0311, 1.33", "-24.3199, 63.6663, -15.1904, 1.62", "-24.8291, 64.2877, -15.3526, 0.96", "-25.15, 64.7153, -15.4482, 0.37", "-25.619, 65.3987, -15.576, 0.37", "-25.6497, 65.4496, -15.5834, 0.37", "-26.3632, 66.6971, -15.7621, 0.37", "-26.9156, 67.7221, -15.9147, 0.37", "-27.2161, 68.3093, -16.0062, 0.74", "-27.3709, 68.6202, -16.0604, 0.29", "-27.4245, 68.7302, -16.0788, 0.29", "-27.9765, 69.8851, -16.2675, 0.29", "-28.0224, 69.9861, -16.2832, 0.29", "-28.2582, 70.5238, -16.3701, 1.55", "-28.5036, 71.1153, -16.459, 1.62", "-28.7125, 71.6233, -16.5365, 1.03", "-28.7328, 71.6709, -16.5443, 1.03", "-28.9145, 72.0814, -16.6173, 0.37", "-28.9358, 72.1283, -16.6263, 0.37", "-29.2143, 72.7119, -16.7528, 0.37", "-29.5525, 73.3796, -16.909, 1.11", "-29.8319, 73.9073, -17.0288, 1.11", "-29.9797, 74.176, -17.0874, 0.52", "-30.0363, 74.2842, -17.1083, 0.52", "-30.2528, 74.7324, -17.1838, 0.52", "-30.347, 74.9426, -17.2149, 0.52", "-30.5115, 75.3454, -17.267, 0.52", "-30.6443, 75.6879, -17.3102, 1.11", "-30.9689, 76.5545, -17.4205, 1.11", "-31.1368, 76.9891, -17.482, 0.37", "-31.3783, 77.5938, -17.5769, 0.37", "-31.4434, 77.7422, -17.6044, 0.37", "-31.7325, 78.3463, -17.736, 0.37", "-31.8471, 78.5631, -17.7895, 0.37", "-32.2205, 79.1836, -17.9637, 0.37", "-32.4652, 79.5638, -18.0786, 0.88", "-32.7383, 79.969, -18.2075, 0.88", "-32.7673, 80.0107, -18.2212, 0.88", "-32.8638, 80.1442, -18.2659, 0.29", "-32.9277, 80.2322, -18.295, 0.29", "-33.4355, 80.9447, -18.5222, 0.29", "-33.4634, 80.9863, -18.5382, 0.29", "-33.7925, 81.4771, -18.7591, 0.81", "-34.02, 81.8075, -18.9254, 1.11", "-34.1573, 81.9835, -19.0281, 1.11", "-34.1885, 82.0187, -19.0521, 1.11", "-34.641, 82.4409, -19.4024, 0.22", "-34.9612, 82.707, -19.6383, 0.22", "-35.0173, 82.7485, -19.6784, 0.22", "-35.5165, 83.1193, -20.0184, 0.22", "-35.6321, 83.2118, -20.0945, 0.22", "-36.0062, 83.535, -20.3233, 0.22", "-36.2464, 83.7708, -20.449, 0.22", "-36.2912, 83.8247, -20.4743, 0.66", "-36.4829, 84.1248, -20.6149, 0.66", "-36.6563, 84.4823, -20.776, 0.15", "-36.7203, 84.6145, -20.8366, 0.15", "-36.9696, 85.1385, -21.0807, 0.15", "-37.0184, 85.2316, -21.1204, 0.15", "-37.2731, 85.6739, -21.2953, 0.59", "-37.7382, 86.3551, -21.5491, 0.59", "-38.0034, 86.7003, -21.6614, 0.59", "-38.0408, 86.7455, -21.6746, 0.59", "-38.3676, 87.1183, -21.7688, 0.22", "-38.4022, 87.1569, -21.7785, 0.22", "-38.7524, 87.5298, -21.8728, 0.22", "-38.9375, 87.7295, -21.9386, 0.22", "-39.3824, 88.2301, -22.1321, 0.22", "-39.5662, 88.4501, -22.2217, 0.22", "-39.7257, 88.6451, -22.3071, 0.74", "-40.1431, 89.16, -22.5362, 0.74", "-40.3984, 89.4785, -22.6785, 0.22", "-40.4599, 89.5568, -22.713, 0.22", "-41.4236, 90.7583, -23.2417, 0.22", "-41.5648, 90.9325, -23.3335, 0.81", "-42.0295, 91.4981, -23.6685, 0.81", "-42.0576, 91.5349, -23.6936, 0.81", "-42.1846, 91.7077, -23.8273, 0.15", "-42.6244, 92.3213, -24.3611, 0.15", "-43.0545, 92.957, -25.0064, 0.66", "-43.1887, 93.1706, -25.2107, 0.66", "-43.537, 93.7753, -25.75, 0.15", "-43.6578, 93.9936, -25.9263, 0.37", "-43.7345, 94.1429, -26.0478, 0.15", "-43.7512, 94.1827, -26.0778, 0.15", "-44.0449, 94.851, -26.4912, 0.15", "-44.1234, 95.0293, -26.6014, 1.03", "-44.265, 95.3539, -26.84, 1.03", "-44.498, 95.9371, -27.3014, 0.22", "-44.5125, 95.9757, -27.3342, 0.22", "-44.7678, 96.7542, -28.071, 0.22", "-44.7787, 96.7914, -28.1067, 0.22", "-44.9617, 97.4228, -28.6832, 0.88", "-45.0669, 97.7385, -28.9162, 0.88", "-45.0873, 97.7832, -28.9344, 0.88", "-45.3067, 98.1701, -29.0049, 0.22", "-45.8555, 99.0661, -29.0545, 0.22", "-45.8839, 99.1102, -29.0544, 0.22", "-46.3869, 99.8419, -29.0102, 0.22", "-47.0326, 100.727, -28.9758, 0.22", "-47.5793, 101.45, -28.961, 0.22", "-47.9759, 101.967, -28.9588, 1.11", "-48.0479, 102.06, -28.9604, 1.11", "-48.2423, 102.317, -28.9808, 0.22", "-48.7926, 103.105, -29.1538, 0.22", "-48.9425, 103.327, -29.2344, 0.66", "-49.2945, 103.822, -29.4319, 0.66" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "19.104, 13.1164, -26.926, 0.81", "19.7651, 13.1268, -28.6398, 0.81", "19.797, 13.1316, -28.7093, 0.81", "20.1525, 13.2012, -29.4407, 0.81", "20.3193, 13.25, -29.7492, 0.81", "20.8855, 13.4491, -30.7339, 0.52", "23.1086, 14.3682, -34.3225, 0.81", "23.7508, 14.7211, -35.1966, 0.81", "23.7958, 14.7474, -35.2524, 0.81", "24.5246, 15.2226, -36.1008, 0.81", "24.6145, 15.28, -36.1961, 0.81", "25.1392, 15.5526, -36.6683, 0.81", "26.0981, 15.7985, -37.1658, 0.52", "26.435, 15.815, -37.832, 0.52", "26.5181, 15.8183, -38.0101, 0.52", "26.9328, 15.7936, -39.0364, 0.81", "27.6087, 15.7254, -40.896, 0.81", "27.6285, 15.7223, -40.96, 0.81", "28.5918, 15.6029, -44.67, 0.74", "28.8744, 15.6294, -45.7984, 1.84" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "19.104, 13.1164, -26.926, 1.4", "19.1492, 13.111, -26.894, 1.4", "22.1893, 12.8374, -25.1205, 0.96", "22.4051, 12.8262, -25.0254, 0.96", "23.9546, 12.7799, -24.5108, 0.96", "24.046, 12.7795, -24.4874, 0.96", "25.6799, 12.7929, -24.1315, 0.96", "25.7461, 12.7963, -24.1246, 0.96", "27.0478, 12.9568, -24.1928, 1.18", "28.0904, 13.1158, -24.2408, 0.88", "29.0731, 13.2954, -24.2824, 0.88", "29.1383, 13.3082, -24.285, 0.88", "29.7206, 13.4371, -24.3391, 0.88", "30.5345, 13.6305, -24.441, 0.88", "30.5983, 13.6466, -24.4506, 0.88", "32.6014, 14.1499, -24.7662, 0.88", "32.6917, 14.1714, -24.7808, 0.88", "34.7307, 14.617, -25.1867, 1.18", "36.166, 14.9127, -25.5114, 1.18", "36.5196, 14.9821, -25.5985, 1.18", "38.0718, 15.3189, -25.9888, 1.18", "38.3498, 15.3853, -26.062, 1.18", "40.2024, 15.7708, -26.5206, 1.18", "40.4054, 15.796, -26.565, 1.18", "40.9079, 15.8141, -26.6786, 0.52", "42.1628, 15.7387, -26.9448, 0.52", "42.2275, 15.728, -26.9572, 0.52", "43.4347, 15.4383, -27.1382, 0.88", "44.7481, 15.0127, -27.2617, 0.88", "44.982, 14.9337, -27.2895, 0.88", "45.8808, 14.6261, -27.4136, 1.25", "46.0791, 14.5645, -27.4426, 1.25", "46.9668, 14.3792, -27.5651, 1.25", "47.0982, 14.3633, -27.5826, 1.25", "48.6003, 14.2831, -27.8362, 1.11", "50.1228, 14.2508, -28.1267, 1.11", "51.3398, 14.2279, -28.3749, 0.81", "52.6955, 14.1913, -28.6633, 0.81", "52.9102, 14.1772, -28.7093, 0.81", "54.8035, 13.9791, -29.1059, 0.81", "54.9018, 13.9652, -29.126, 0.81", "56.9615, 13.5964, -29.5479, 0.81", "57.0586, 13.5744, -29.5666, 0.81", "59.2058, 13.0117, -29.9432, 0.81", "60.0716, 12.8028, -30.1194, 0.96", "60.2815, 12.7554, -30.1655, 0.96", "61.2279, 12.5711, -30.4053, 0.74", "62.4982, 12.3695, -30.7614, 0.74", "62.5617, 12.3607, -30.7799, 0.74", "65.2031, 12.0613, -31.6759, 0.74", "66.01, 11.9729, -31.9621, 1.4", "67.6586, 11.7927, -32.567, 1.77", "68.6323, 11.6905, -32.9426, 1.77", "68.8968, 11.662, -33.0475, 1.77", "70.3006, 11.4905, -33.5666, 1.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-17.0022, 40.8102, 17.3022, 0.44", "-18.8461, 41.3415, 18.0953, 0.44", "-20.5305, 41.8901, 18.7764, 0.44", "-22.4049, 42.5427, 19.512, 0.44", "-22.4732, 42.5672, 19.5374, 0.44", "-24.5191, 43.3156, 20.2792, 0.74", "-25.3514, 43.6037, 20.562, 0.74", "-25.8765, 43.8018, 20.7027, 0.37", "-25.9475, 43.8245, 20.7216, 0.37", "-26.9259, 44.0871, 20.8897, 0.37", "-26.9893, 44.0999, 20.9023, 0.37", "-28.1164, 44.2757, 21.1423, 0.37", "-28.2136, 44.2911, 21.167, 0.37", "-29.6274, 44.5651, 21.6251, 0.37", "-29.7203, 44.587, 21.6592, 0.37", "-31.1038, 45.013, 22.1766, 0.37", "-31.8038, 45.2877, 22.405, 0.37", "-31.879, 45.3284, 22.4243, 0.37", "-32.9559, 45.9734, 22.5995, 0.37", "-33.0204, 46.0143, 22.6063, 0.37", "-34.0213, 46.6225, 22.6521, 0.59", "-34.9971, 47.1912, 22.6317, 0.59", "-36.2609, 47.8554, 22.5804, 0.81", "-37.3509, 48.4112, 22.5212, 0.81", "-38.3776, 48.9348, 22.4452, 0.29", "-38.873, 49.1935, 22.4196, 0.29", "-39.018, 49.271, 22.4247, 0.29", "-40.1532, 49.8195, 22.5464, 0.29", "-40.3193, 49.8892, 22.5707, 0.29", "-41.3114, 50.2608, 22.7187, 0.59", "-42.0727, 50.5004, 22.8148, 0.59", "-43.7661, 50.9491, 23.03, 0.15", "-44.957, 51.2183, 23.1619, 0.37", "-45.3581, 51.29, 23.2001, 0.74", "-46.0965, 51.3775, 23.2856, 0.37", "-46.7013, 51.3966, 23.3712, 0.37", "-46.7878, 51.3962, 23.3878, 0.37", "-47.3505, 51.4379, 23.5461, 0.22", "-47.464, 51.5166, 23.647, 0.22", "-48.1746, 52.2665, 24.5126, 0.22", "-48.2291, 52.3284, 24.5819, 0.22", "-48.7898, 52.9933, 25.2644, 0.22", "-48.9505, 53.1328, 25.4533, 0.22", "-49.3081, 53.3558, 25.8352, 0.22", "-49.3634, 53.3821, 25.8815, 0.22", "-50.6228, 53.8941, 26.7805, 0.74", "-51.1294, 54.0722, 27.0958, 0.74", "-53.2794, 54.7222, 28.2812, 0.59", "-54.7675, 55.1453, 29.0089, 0.37", "-56.2514, 55.4813, 29.693, 0.37", "-56.3315, 55.4884, 29.7288, 0.37", "-57.0974, 55.4253, 30.1073, 0.37", "-57.2334, 55.4054, 30.1768, 0.37", "-58.3429, 55.1844, 30.7352, 0.37", "-59.8504, 54.8861, 31.6674, 0.88", "-61.8599, 54.5701, 33.2852, 0.88", "-63.5723, 54.4715, 35.1864, 0.37", "-64.3231, 54.5036, 36.266, 0.37", "-64.3845, 54.5101, 36.3652, 0.37", "-65.237, 54.7317, 38.0691, 0.37", "-65.7561, 55.1467, 39.4299, 0.37", "-66.327, 56.2393, 41.7514, 0.37", "-66.3324, 56.2726, 41.8198, 0.37", "-75.9916, 57.0971, 47.0222, 0.37" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-17.0022, 40.8102, 17.3022, 0.52", "-17.3102, 41.6765, 18.076, 0.52", "-17.6378, 42.3664, 18.5994, 0.52", "-17.6612, 42.4035, 18.6294, 0.52", "-18.2212, 43.1138, 19.2407, 0.52", "-18.2684, 43.1685, 19.2922, 0.52", "-18.8359, 43.8535, 19.9308, 0.52", "-19.4218, 44.5199, 20.5427, 0.74", "-20.0898, 45.3085, 21.2618, 0.74", "-20.7288, 46.1952, 22.0635, 0.59", "-21.1987, 46.9016, 22.8013, 0.59", "-21.5968, 47.5245, 23.5499, 0.66", "-21.6178, 47.5596, 23.5967, 0.66", "-21.8441, 48.0001, 24.2251, 0.66", "-22.3234, 49.1496, 25.8815, 0.52", "-22.7287, 50.4397, 27.7772, 0.52", "-22.869, 51.0711, 28.7102, 0.52", "-22.8768, 51.1233, 28.7884, 0.52", "-22.9226, 51.5695, 29.3965, 0.52", "-22.9258, 51.6615, 29.5105, 0.52", "-22.8316, 52.5011, 30.2669, 0.96", "-22.6692, 53.2397, 30.7075, 0.96", "-22.6115, 53.7057, 30.9396, 0.52", "-22.6261, 54.5653, 31.3591, 0.52", "-22.6384, 54.6206, 31.383, 0.52", "-22.9099, 55.4297, 31.6727, 0.74", "-22.9388, 55.4914, 31.6906, 0.74", "-23.3667, 56.3365, 32.021, 0.74", "-23.389, 56.3877, 32.0471, 0.74", "-23.6683, 57.1706, 32.496, 0.37", "-23.8455, 57.6221, 32.818, 0.37", "-23.8611, 57.6639, 32.8465, 0.37", "-24.2698, 58.855, 33.62, 0.37", "-24.4681, 59.4395, 34.0409, 0.59", "-24.8527, 60.4075, 34.7447, 0.81", "-25.5292, 61.6988, 35.7757, 0.52", "-26.0202, 62.476, 36.4246, 0.52", "-26.6349, 63.2949, 37.1133, 0.52", "-27.4126, 64.1219, 37.7682, 0.29", "-28.0579, 64.6482, 38.2307, 0.29", "-29.1049, 65.2862, 38.8609, 0.29", "-29.1988, 65.3334, 38.9103, 0.29", "-29.7654, 65.5504, 39.2147, 0.15", "-30.6803, 65.8102, 39.6454, 0.15", "-31.7492, 66.1289, 40.0374, 0.81", "-32.2797, 66.3094, 40.252, 0.81", "-36.1455, 73.3672, 43.8712, 0.81" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-8.02836, 43.4121, 3.48495, 0.66", "-7.78321, 43.7376, 3.52296, 0.66", "-7.47659, 44.2297, 3.51625, 0.66", "-7.38234, 44.4201, 3.50459, 0.66", "-6.8339, 45.6785, 3.40508, 0.66", "-6.80756, 45.7617, 3.39887, 0.66", "-6.48225, 47.0455, 3.28677, 0.66", "-6.3554, 47.7038, 3.20268, 0.66", "-6.28256, 48.3583, 3.12396, 0.29", "-6.27692, 48.4449, 3.11478, 0.29", "-6.20328, 49.8313, 2.93766, 0.29", "-6.15738, 50.4568, 2.86641, 0.29", "-6.15031, 50.5435, 2.85921, 0.29", "-5.96323, 52.0768, 2.73242, 0.29", "-5.93281, 52.2804, 2.71577, 0.29", "-5.63796, 54.0478, 2.58992, 0.29", "-5.62104, 54.1334, 2.58671, 0.29", "-5.50766, 54.7649, 2.56282, 0.96", "-5.31921, 55.9472, 2.55563, 0.96", "-5.30248, 56.0455, 2.56012, 0.96", "-5.17617, 56.7616, 2.62216, 0.81", "-4.9172, 58.3156, 2.81599, 0.59", "-4.59474, 60.1957, 3.05115, 0.52", "-4.44157, 61.0325, 3.11431, 0.37", "-4.11721, 62.9225, 3.16873, 0.37", "-3.94951, 63.9364, 3.16491, 1.03", "-3.81659, 64.7695, 3.13715, 1.03", "-3.8052, 64.8433, 3.13221, 1.03", "-3.49804, 66.6473, 2.89428, 0.52", "-3.31718, 67.8288, 2.65938, 0.52", "-3.29053, 68.0338, 2.61065, 0.52", "-3.07623, 69.8345, 2.2688, 0.44", "-3.06883, 69.9085, 2.26041, 0.44", "-2.99137, 71.688, 2.31508, 1.33", "-2.99609, 73.216, 2.61116, 1.4", "-3.00055, 73.343, 2.64899, 1.4", "-3.09104, 74.5596, 3.11232, 0.22", "-3.26809, 76.0483, 3.8256, 0.22", "-3.51381, 77.6395, 4.67475, 0.59", "-3.68296, 78.3793, 5.11781, 0.59", "-3.87363, 79.0833, 5.52387, 0.22", "-3.89756, 79.157, 5.56501, 0.22", "-4.10202, 79.6956, 5.84136, 0.22", "-4.39535, 80.3506, 6.1717, 0.22", "-4.7997, 81.189, 6.49593, 0.22", "-4.88623, 81.3533, 6.55962, 0.22", "-5.56108, 82.627, 7.05521, 0.81", "-5.59883, 82.7014, 7.08236, 0.81", "-6.0323, 83.5583, 7.37066, 0.81", "-6.19171, 83.9008, 7.46613, 0.81", "-6.61255, 84.8642, 7.70168, 0.22", "-6.66047, 84.9766, 7.72225, 0.22", "-7.1344, 86.1061, 7.84238, 0.22", "-7.36049, 86.6473, 7.88518, 0.22", "-7.73882, 87.5581, 7.93337, 0.22", "-8.08316, 88.4286, 7.88434, 1.03", "-8.38862, 89.2244, 7.77754, 1.03", "-8.73042, 90.1475, 7.60158, 0.66", "-9.17614, 91.4324, 7.29216, 0.22", "-9.5456, 92.6119, 6.97055, 0.22", "-10.1183, 94.5643, 6.34644, 0.22", "-10.1416, 94.656, 6.31328, 0.22", "-10.2862, 95.2867, 6.0791, 0.88", "-10.4029, 95.796, 5.90314, 0.88", "-10.6453, 96.8326, 5.59285, 0.22", "-10.6634, 96.9035, 5.57627, 0.22", "-11.2928, 98.8897, 5.30499, 0.22", "-11.3465, 99.0313, 5.28442, 0.22", "-11.7079, 99.8352, 5.09417, 0.22", "-11.749, 99.9088, 5.0687, 0.22", "-12.1654, 100.541, 4.80486, 0.96", "-12.7384, 101.358, 4.43854, 0.96", "-12.7934, 101.435, 4.40282, 0.96", "-13.4999, 102.604, 3.81796, 0.37", "-13.9366, 103.528, 3.37519, 0.29", "-14.3824, 104.685, 2.89005, 0.15", "-14.4063, 104.764, 2.85978, 0.15", "-14.617, 105.52, 2.5999, 0.15", "-14.9363, 106.704, 2.23924, 1.03", "-15.2499, 107.924, 1.94693, 1.03", "-15.3877, 108.538, 1.81247, 1.03", "-15.5187, 109.195, 1.69111, 0.22", "-15.7817, 110.593, 1.4995, 0.22", "-15.797, 110.679, 1.49264, 0.22", "-15.9462, 111.618, 1.49045, 0.96", "-16.0778, 112.65, 1.5148, 1.11", "-16.1062, 113.406, 1.57366, 0.22", "-16.0686, 114.226, 1.68171, 0.22", "-15.9704, 114.849, 1.75902, 0.22", "-15.9007, 115.202, 1.795, 0.22", "-15.8865, 115.288, 1.80457, 0.22", "-15.6357, 117.082, 1.9389, 0.22", "-15.6062, 117.212, 1.93841, 0.22", "-15.3024, 118.249, 1.81733, 0.22", "-15.2724, 118.344, 1.80129, 0.22", "-14.4499, 120.875, 1.33241, 0.22", "-13.4775, 123.818, 0.732518, 0.22", "-12.5214, 126.641, 0.0703933, 0.22", "-11.7771, 128.77, -0.451107, 1.33", "-11.466, 129.602, -0.668838, 1.33" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-8.02836, 43.4121, 3.48495, 0.74", "-8.53232, 44.5622, 3.659, 0.74", "-8.88877, 45.282, 3.7255, 0.37", "-9.23542, 45.9564, 3.77202, 0.37", "-9.34704, 46.172, 3.78254, 0.37", "-9.82751, 47.0925, 3.81542, 0.22", "-9.863, 47.1612, 3.81719, 0.22", "-10.4473, 48.2264, 3.76629, 0.22", "-10.4868, 48.2929, 3.76231, 0.22", "-10.9122, 48.9673, 3.73077, 0.22", "-11.0743, 49.2135, 3.7224, 0.88", "-11.4414, 49.7937, 3.71895, 0.88", "-11.6538, 50.1461, 3.72486, 0.44", "-11.8532, 50.5606, 3.74823, 0.29", "-12.0149, 50.9587, 3.77497, 0.29", "-12.0384, 51.0312, 3.78663, 0.29", "-12.2442, 51.8042, 3.95758, 0.29", "-12.3241, 52.1388, 4.04261, 0.29", "-12.5641, 53.2866, 4.35109, 0.29", "-12.5842, 53.3828, 4.37606, 0.29", "-12.8133, 54.2274, 4.6035, 0.29", "-12.9652, 54.6582, 4.73171, 0.29", "-13.2201, 55.1986, 4.89421, 0.29", "-13.3044, 55.3369, 4.93036, 0.29", "-13.693, 55.8535, 5.04189, 0.88", "-14.3079, 56.6112, 5.13512, 0.88", "-14.3514, 56.6617, 5.13599, 0.88", "-14.7131, 57.0912, 5.13464, 0.44", "-15.153, 57.6337, 5.12302, 0.37", "-15.2521, 57.776, 5.11819, 0.37", "-15.7572, 58.6146, 5.08878, 0.37", "-15.8922, 58.8757, 5.07758, 0.37", "-16.2109, 59.5628, 5.06784, 0.37", "-16.2744, 59.7155, 5.07096, 0.37", "-16.7331, 61.0428, 5.00409, 0.37", "-16.8166, 61.3205, 4.97038, 1.11", "-16.8382, 61.3931, 4.9555, 1.11", "-17.082, 62.1223, 4.74896, 1.11", "-17.1151, 62.1992, 4.72006, 1.11", "-17.7074, 63.2823, 4.22927, 0.74", "-18.0025, 63.6887, 3.99848, 0.29", "-18.4515, 64.2265, 3.67829, 0.29", "-18.5624, 64.3464, 3.60283, 0.29", "-19.0978, 64.8597, 3.26399, 0.74", "-19.3479, 65.1054, 3.13054, 0.74", "-19.6367, 65.3874, 3.01492, 0.29", "-19.6924, 65.4513, 2.9877, 0.29", "-20.2617, 66.2948, 2.66967, 0.22", "-20.3028, 66.3698, 2.64632, 0.22", "-20.7293, 67.2685, 2.45042, 0.22", "-20.7936, 67.4196, 2.42905, 0.22", "-21.1379, 68.1319, 2.36179, 0.74", "-21.5474, 68.9007, 2.31637, 0.74", "-22.1006, 69.8399, 2.33305, 0.74", "-22.4621, 70.3928, 2.35682, 0.44", "-22.8046, 70.8617, 2.38832, 0.22", "-23.9059, 72.2659, 2.50834, 0.22", "-23.9823, 72.3553, 2.51857, 0.22", "-24.5114, 72.9248, 2.57849, 0.81", "-25.1335, 73.6027, 2.69364, 0.96", "-25.2047, 73.6849, 2.70956, 0.96", "-25.6328, 74.2201, 2.84756, 0.96", "-25.6736, 74.2831, 2.8666, 0.96", "-25.927, 74.7217, 2.98341, 0.29", "-26.7472, 76.317, 3.34359, 0.29", "-26.7816, 76.3842, 3.36027, 0.29", "-27.0293, 76.824, 3.45651, 0.88", "-27.4692, 77.5596, 3.59744, 0.88", "-27.9876, 78.3546, 3.71334, 0.88", "-28.3404, 78.856, 3.76502, 0.29", "-28.806, 79.46, 3.7911, 0.15", "-29.7875, 80.6654, 3.83383, 0.15", "-30.2262, 81.1718, 3.84494, 0.44", "-30.8109, 81.8233, 3.84773, 0.44", "-30.8632, 81.8809, 3.84713, 0.44", "-31.1132, 82.1534, 3.83595, 0.81", "-32.2284, 83.3117, 3.79949, 0.81", "-32.8183, 83.8795, 3.79861, 0.22", "-33.4691, 84.4638, 3.80289, 0.22", "-33.6554, 84.624, 3.80632, 0.22", "-34.6665, 85.4696, 3.82414, 0.22", "-35.7447, 86.3341, 3.847, 0.22", "-35.8061, 86.3823, 3.84967, 0.22", "-36.478, 86.9334, 3.88735, 0.22", "-36.6551, 87.1032, 3.89553, 0.74", "-37.126, 87.7036, 3.90956, 0.74", "-37.2641, 87.9565, 3.90677, 0.74", "-37.4807, 88.4217, 3.90359, 0.74", "-37.6217, 88.7091, 3.90913, 0.74", "-38.1158, 89.6036, 3.92967, 0.22", "-38.4283, 90.1632, 3.91111, 0.22", "-39.0057, 91.1651, 3.86379, 0.22", "-39.4581, 91.9652, 3.8232, 0.88", "-40.1192, 93.1204, 3.78447, 1.25", "-40.7647, 94.2247, 3.75823, 1.25", "-41.6656, 95.7001, 3.72858, 1.25", "-42.2944, 96.6927, 3.70108, 0.59", "-42.9023, 97.6541, 3.62797, 0.59", "-43.5411, 98.6279, 3.49148, 0.15", "-44.1296, 99.4738, 3.34475, 0.15", "-44.4165, 99.861, 3.2661, 0.37", "-44.7339, 100.222, 3.17489, 0.37", "-45.5975, 101.132, 2.83343, 0.22", "-46.3334, 101.9, 2.35591, 0.22", "-46.3818, 101.958, 2.30859, 0.22", "-46.5326, 102.174, 2.11995, 0.74", "-46.9231, 102.815, 1.58385, 0.74", "-46.9572, 102.873, 1.54413, 0.74", "-47.7397, 104.177, 0.641905, 0.15", "-48.0613, 104.694, 0.274999, 0.15", "-48.1517, 104.829, 0.188064, 0.15", "-48.5418, 105.393, -0.17414, 0.15", "-49.4688, 106.699, -0.983876, 0.15", "-50.2552, 107.752, -1.57588, 0.88", "-50.8337, 108.47, -1.90151, 0.88", "-51.6832, 109.536, -2.41514, 0.66", "-57.3204, 118.97, -3.7419, 0.66" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "18.3421, -24.1104, 5.5377, 1.03", "18.7912, -24.9844, 5.02586, 1.03", "18.8405, -25.0654, 4.99272, 1.03", "19.2963, -25.7961, 4.72963, 1.03", "19.4937, -26.0795, 4.64788, 1.03", "20.6324, -27.6067, 4.28312, 1.03", "20.6708, -27.6547, 4.27294, 1.03", "22.2024, -29.4369, 4.01483, 0.88", "22.2942, -29.5338, 4.00777, 0.88", "23.7787, -30.9432, 4.0613, 0.88", "24.3594, -31.4313, 4.15506, 0.88", "24.9019, -31.8333, 4.30129, 1.25", "25.6197, -32.3186, 4.53688, 1.25", "27.0471, -33.1705, 5.08524, 0.74", "28.4417, -33.9757, 5.61062, 0.74", "29.6082, -34.625, 6.03974, 0.74", "29.6532, -34.6507, 6.05437, 0.74", "30.2898, -35.0235, 6.23882, 1.47", "31.1742, -35.5289, 6.43842, 1.47", "33.0502, -36.6245, 6.58516, 0.66", "33.8849, -37.1271, 6.55081, 0.66", "34.868, -37.7463, 6.4347, 1.33", "34.9197, -37.781, 6.42682, 1.33", "35.7156, -38.3642, 6.29325, 1.33", "37.1318, -39.4164, 6.0302, 1.18", "38.231, -40.2552, 5.79972, 1.18", "38.2995, -40.3093, 5.78477, 1.18", "39.4496, -41.2483, 5.5347, 0.88", "41.3323, -42.8907, 5.16349, 0.88" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "18.3421, -24.1104, 5.5377, 0.74", "18.3853, -24.1206, 5.58722, 0.74", "18.997, -24.2078, 6.46825, 0.74", "19.0339, -24.2136, 6.52333, 0.74", "20.5515, -24.501, 8.59797, 0.74", "22.8041, -24.9053, 11.4105, 0.74", "22.8467, -24.9126, 11.4611, 0.74", "25.1843, -25.2661, 14.0063, 1.4", "25.8031, -25.3513, 14.644, 0.74", "27.0978, -25.4937, 15.7896, 0.74", "28.7187, -25.6049, 16.8919, 0.74", "28.8041, -25.6112, 16.931, 0.74", "30.5841, -25.8811, 17.6496, 0.74", "30.6373, -25.8939, 17.6656, 0.74", "31.4897, -26.1025, 17.9808, 0.74", "31.5941, -26.1274, 18.0194, 0.74", "33.4076, -26.5447, 18.5758, 0.74", "35.2604, -26.9447, 19.1215, 0.74", "36.2083, -27.1451, 19.3911, 0.74", "38.3803, -27.607, 19.925, 0.74", "40.3507, -28.0667, 20.3393, 0.74", "42.0412, -28.4701, 20.6262, 1.25", "43.4106, -28.8121, 20.8461, 0.52", "44.0234, -28.9771, 20.9509, 0.52", "45.3763, -29.3901, 21.2148, 0.66", "47.2197, -30.0305, 21.625, 0.66", "47.2883, -30.0561, 21.6449, 0.66", "49.5624, -30.8365, 22.3416, 0.66", "50.1542, -31.0156, 22.4924, 0.96", "51.0087, -31.2642, 22.6793, 0.66", "52.3094, -31.5947, 22.9019, 0.52", "52.3728, -31.6134, 22.9086, 0.52", "53.6732, -32.1109, 22.9994, 0.52", "54.7933, -32.6507, 23.0772, 0.52", "55.7705, -33.1706, 23.2724, 0.52", "55.8179, -33.1979, 23.2874, 0.52", "57.0045, -33.8747, 23.6887, 0.52", "58.0448, -34.4291, 24.064, 0.52", "59.2646, -35.049, 24.5098, 1.25", "60.4251, -35.4736, 25.0016, 0.52", "61.8108, -35.8695, 25.6039, 0.52", "63.8938, -36.3675, 26.5029, 0.52", "64.035, -36.3896, 26.5592, 0.52", "64.995, -36.4889, 26.9057, 0.52", "68.2505, -36.5469, 27.881, 0.37", "68.8747, -36.5087, 28.0512, 0.37", "69.0108, -36.4865, 28.0877, 0.37", "70.1541, -36.2165, 28.4141, 0.37", "70.4824, -36.1413, 28.5217, 0.37", "72.075, -35.7766, 29.0819, 0.37", "72.1383, -35.7652, 29.099, 0.37", "73.4737, -35.4892, 29.5319, 0.37", "73.535, -35.476, 29.5544, 0.37", "75.2204, -35.117, 30.2937, 0.29", "75.312, -35.0973, 30.3317, 0.29", "76.1108, -34.9127, 30.6412, 0.29", "76.1744, -34.8993, 30.6551, 0.29", "76.8476, -34.7486, 30.7108, 0.29", "76.9932, -34.7185, 30.7136, 0.29", "78.1702, -34.5025, 30.6689, 0.29", "78.3001, -34.4741, 30.6733, 0.29", "79.5903, -34.1602, 30.7718, 0.29", "81.1546, -33.7113, 30.9164, 0.29", "81.2175, -33.6913, 30.9233, 0.29", "82.8022, -33.1443, 31.1247, 0.29", "84.1756, -32.6016, 31.3365, 0.59", "84.9429, -32.2699, 31.4648, 0.74", "85.7229, -31.8683, 31.6154, 0.74", "85.7801, -31.8364, 31.6247, 0.74", "93.9375, -32.2712, 36.5037, 0.74", "101.557, -32.0847, 42.203, 0.74", "109.017, -33.466, 47.9323, 0.74" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "34.7242, -62.526, 56.4738, 0.52", "35.4604, -63.509, 56.8845, 0.52", "35.7558, -63.9909, 57.0785, 0.66", "36.1501, -64.8156, 57.4003, 0.52", "36.5141, -65.7434, 57.7605, 0.29", "36.8541, -66.9399, 58.1956, 0.44", "36.8674, -67.0002, 58.2165, 0.44", "36.9192, -67.7125, 58.3817, 0.44", "36.8534, -68.4089, 58.537, 0.74", "36.8063, -68.6235, 58.5831, 0.74", "36.6144, -69.3174, 58.7023, 0.74", "36.5966, -69.3798, 58.7062, 0.74", "36.475, -70.2712, 58.8027, 0.74", "36.531, -70.9745, 59.0786, 0.44", "36.5455, -71.0305, 59.1091, 0.44", "36.8156, -71.8917, 59.6192, 0.37", "36.8486, -71.9776, 59.6765, 0.37", "37.5363, -73.5271, 60.8217, 0.37", "38.6663, -75.6002, 62.6101, 0.44", "39.0518, -76.217, 63.2107, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "34.7242, -62.526, 56.4738, 0.66", "35.697, -63.1141, 56.5157, 0.66", "36.2669, -63.4003, 56.6171, 0.29", "37.0509, -63.794, 56.7565, 0.29", "37.126, -63.8318, 56.7698, 0.29", "38.1183, -64.3301, 56.9463, 0.29", "38.2538, -64.3982, 56.9704, 0.29", "39.3327, -65.0644, 56.995, 0.74", "49.0849, -69.0685, 58.5727, 0.74", "58.0147, -74.8415, 58.4444, 0.74", "66.6354, -80.8847, 59.8682, 0.74", "74.3682, -88.1259, 59.6784, 0.74" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-62.0905, -48.7828, -27.974, 0.29", "-64.838, -49.6734, -28.8851, 0.29", "-66.4627, -50.2303, -29.4684, 0.29", "-68.0245, -50.803, -30.0333, 0.29", "-70.3669, -51.6844, -30.8807, 0.88", "-71.3177, -52.0328, -31.2652, 1.18", "-72.3743, -52.4123, -31.7172, 0.59", "-73.7901, -52.9717, -32.4338, 0.52", "-74.1946, -53.1014, -32.6925, 0.88", "-74.2461, -53.1163, -32.7292, 0.88", "-75.6446, -53.5581, -33.6982, 0.37", "-75.696, -53.5718, -33.7356, 0.37", "-78.0044, -54.1777, -35.435, 0.37", "-78.7914, -54.4676, -35.9777, 1.25", "-78.8355, -54.4871, -36.0055, 1.25", "-79.6829, -54.9408, -36.4626, 1.25", "-79.7422, -54.9777, -36.4874, 1.25", "-80.3397, -55.423, -36.7104, 0.29", "-81.5585, -56.5588, -37.038, 0.15", "-81.9426, -56.9152, -37.1645, 0.59", "-82.2457, -57.1838, -37.2794, 0.59", "-82.9101, -57.7442, -37.557, 0.15", "-83.8531, -58.4929, -37.9259, 0.15", "-83.9044, -58.5263, -37.9472, 0.15", "-84.8707, -59.1156, -38.3266, 0.88", "-84.9236, -59.1469, -38.3475, 0.88", "-85.6227, -59.5544, -38.623, 0.88", "-86.6331, -60.0918, -39.0453, 0.22", "-88.5484, -61.0976, -39.8882, 0.22", "-89.7198, -61.7607, -40.5691, 0.22", "-91.7143, -62.9295, -42.1802, 0.22", "-91.7565, -62.954, -42.2227, 0.22", "-93.0877, -63.7543, -44.2548, 0.22", "-93.5666, -64.207, -45.434, 0.22", "-94.0198, -65.3273, -48.2635, 0.22", "-93.7366, -66.3524, -50.7006, 0.22", "-93.7185, -66.3748, -50.7475, 0.22", "-91.9066, -68.1229, -53.4519, 0.22", "-88.2963, -71.0179, -56.7395, 0.22", "-88.2488, -71.0586, -56.7552, 0.22", "-86.5928, -72.5058, -56.8888, 0.22", "-86.5383, -72.5555, -56.8846, 0.22", "-84.7496, -74.2792, -56.5301, 0.22", "-84.7078, -74.3247, -56.5103, 0.22", "-81.428, -78.9134, -54.3692, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-62.0905, -48.7828, -27.974, 1.18", "-63.5706, -50.9546, -27.7575, 1.18", "-64.8278, -52.3868, -27.9235, 1.18", "-65.7051, -53.2756, -28.1423, 0.52", "-66.7613, -54.2832, -28.4689, 0.52", "-66.8042, -54.3231, -28.4834, 0.52", "-67.6745, -55.0662, -28.8778, 0.52", "-68.764, -55.9655, -29.3828, 0.52", "-68.852, -56.0217, -29.4442, 0.52", "-69.5855, -56.3684, -30.0905, 0.37", "-69.6259, -56.3879, -30.1313, 0.37", "-70.7425, -57.0092, -31.2172, 1.11", "-71.2748, -57.3557, -31.7234, 1.11", "-71.3209, -57.3885, -31.7632, 1.11", "-72.5412, -58.2521, -32.7808, 0.22", "-73.3261, -58.8034, -33.3923, 0.22", "-73.9476, -59.2894, -33.8449, 0.29", "-74.0094, -59.3443, -33.8844, 0.29", "-74.3508, -59.6159, -34.1329, 0.81", "-74.3978, -59.6496, -34.1709, 0.81", "-74.8963, -60.0117, -34.5801, 0.81", "-75.8627, -60.6959, -35.4389, 0.37", "-75.9015, -60.7244, -35.4756, 0.37", "-77.5047, -62.0051, -37.0069, 0.15", "-78.1275, -62.6253, -37.6686, 0.96", "-78.6093, -63.2016, -38.2195, 1.4", "-78.9961, -63.8616, -38.7836, 0.52", "-79.0054, -63.9037, -38.8111, 0.52", "-79.0026, -64.7419, -39.2792, 0.29", "-78.6266, -66.2088, -39.8955, 0.29", "-78.6054, -66.2695, -39.918, 0.29", "-78.1189, -67.4771, -40.3202, 0.29", "-77.3625, -69.4269, -40.8756, 0.29", "-77.3211, -69.544, -40.9053, 0.29", "-76.8414, -71.1659, -41.2078, 0.29", "-76.8025, -71.3161, -41.2278, 0.29", "-76.5818, -72.3086, -41.3108, 0.15", "-76.3664, -73.7772, -41.2693, 0.15", "-76.3648, -73.8364, -41.2622, 0.15", "-76.4141, -75.0366, -41.1163, 0.88" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.59517, -24.6751, -2.26554, 0.88", "-9.01395, -25.7323, -6.61767, 0.88", "-9.81882, -26.1165, -7.96115, 0.88", "-10.7123, -26.5431, -9.45257, 0.88", "-10.7486, -26.5604, -9.51316, 0.88", "-11.3658, -26.8551, -10.5435, 0.88", "-12.9454, -27.6092, -13.1801, 1.4", "-13.3178, -27.8519, -13.6211, 1.4" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.59517, -24.6751, -2.26554, 0.81", "-8.11028, -27.186, -1.21333, 0.81", "-9.19915, -28.9905, -0.45711, 0.81", "-10.0111, -30.3361, 0.106749, 0.81", "-10.7294, -31.5265, 0.605622, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-6.59517, -24.6751, -2.26554, 2.5", "-6.55675, -25.2708, -2.06938, 2.5", "-6.44939, -26.8141, -1.66761, 1.03", "-6.30642, -28.0659, -1.44508, 0.59", "-6.11751, -29.0877, -1.32086, 0.59", "-6.09844, -29.1479, -1.32038, 0.59", "-5.84666, -29.8245, -1.34875, 0.59", "-5.2787, -30.9634, -1.52763, 0.59", "-4.25526, -32.5762, -1.95346, 1.03", "-3.30361, -33.8914, -2.37095, 0.81", "-1.48978, -36.185, -3.04671, 0.81", "-1.45576, -36.2262, -3.05779, 0.81", "0.445604, -38.4445, -3.61746, 0.81", "2.4013, -40.7978, -4.12943, 0.81", "2.43809, -40.8491, -4.13741, 0.81", "3.28291, -42.3995, -4.30133, 0.52", "3.71922, -43.4987, -4.35517, 0.52", "3.8363, -43.899, -4.35751, 0.74", "4.22245, -46.1725, -4.26333, 1.11", "4.4947, -48.663, -4.14678, 1.11", "4.67389, -50.3489, -4.09812, 0.81", "4.68959, -50.4831, -4.09634, 0.81", "5.02729, -52.5035, -3.97741, 0.59", "5.04032, -52.5558, -3.97221, 0.59", "5.52975, -54.0308, -3.72872, 0.59", "5.54957, -54.0801, -3.71757, 0.59", "6.12086, -55.4302, -3.37568, 0.59", "6.82873, -57.1478, -2.98016, 0.44", "7.30438, -58.3429, -2.76785, 0.44", "7.46428, -58.814, -2.69866, 1.03", "7.48134, -58.8744, -2.69145, 1.03", "7.72303, -59.8346, -2.62833, 1.03", "7.73852, -59.9049, -2.63293, 1.03", "7.96958, -60.6946, -2.7813, 0.52", "8.41358, -61.7103, -3.00452, 0.52", "8.51313, -61.8899, -3.04412, 0.52", "9.08743, -62.7992, -3.23544, 0.74", "9.70482, -63.7422, -3.40816, 0.88", "10.2868, -64.652, -3.51004, 0.66", "10.7701, -65.4548, -3.54205, 0.44", "11.2764, -66.4402, -3.53131, 0.44", "11.2996, -66.499, -3.52866, 0.44", "11.7649, -68.0051, -3.41057, 0.44", "11.9679, -68.8492, -3.33126, 0.88", "12.1573, -69.8213, -3.25739, 1.18", "12.4801, -71.43, -3.12698, 0.88", "12.7249, -72.5161, -3.02165, 1.18", "12.7422, -72.5766, -3.01574, 1.18", "13.3621, -74.3573, -2.84187, 0.66", "13.3905, -74.4236, -2.83612, 0.66", "14.3431, -76.1105, -2.6621, 0.66", "14.3796, -76.1621, -2.65565, 0.66", "15.4125, -77.3988, -2.50338, 0.66", "15.4539, -77.4469, -2.49865, 0.66", "16.0701, -78.1481, -2.46934, 0.29", "16.6581, -78.92, -2.53129, 0.29", "16.6934, -78.9718, -2.54143, 0.29", "17.2306, -79.8482, -2.73742, 0.81", "17.8618, -80.9138, -3.00512, 1.18", "18.3977, -81.8126, -3.23655, 0.88", "19.0627, -82.936, -3.52561, 0.29", "19.4939, -83.6493, -3.70651, 0.29", "19.6507, -83.8891, -3.76466, 0.29", "20.556, -85.1435, -4.00305, 0.66", "21.0542, -85.7715, -4.07472, 1.03", "21.585, -86.4425, -4.07515, 0.37", "21.6235, -86.493, -4.07038, 0.37", "22.1834, -87.3198, -3.92894, 0.37", "22.6522, -88.0673, -3.69493, 0.81", "22.986, -88.6523, -3.44948, 0.81", "23.5253, -89.5488, -3.02568, 0.52", "23.5564, -89.5984, -3.00065, 0.52", "24.4042, -90.8146, -2.37143, 0.88", "25.3412, -92.0242, -1.71196, 0.52", "25.6443, -92.3435, -1.50462, 0.52", "26.2667, -92.7464, -1.09615, 0.74", "26.4328, -92.8057, -0.995967, 0.74", "27.1448, -92.8883, -0.524385, 0.52", "27.207, -92.8845, -0.484582, 0.52", "28.6621, -92.6158, 0.432388, 0.29", "30.2789, -92.1997, 1.53995, 0.22", "30.5423, -92.1125, 1.73832, 0.37", "31.9632, -91.5813, 2.85808, 0.81", "34.9711, -100.088, 2.52431, 0.81", "37.8322, -108.647, 2.75293, 0.81", "39.2674, -117.422, 4.25831, 0.81", "41.7047, -126.045, 5.33616, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "25.9189, 97.0814, 32.8174, 0.29", "23.6308, 101.918, 40.6092, 0.29", "20.1237, 105.255, 48.7731, 0.29", "17.2572, 108.678, 57.1463, 0.29", "12.8514, 112.848, 64.4218, 0.29", "9.03525, 118.387, 71.034, 0.29" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "25.9189, 97.0814, 32.8174, 0.74", "26.0224, 109.083, 36.0492, 0.29", "26.0894, 120.497, 41.0236, 0.29", "25.4863, 132.325, 44.8156, 0.29" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "62.9916, 69.2845, 21.7594, 0.37", "63.0301, 69.3549, 21.7906, 0.37", "63.4315, 70.0663, 22.0231, 0.37", "63.4859, 70.1547, 22.0476, 0.37", "63.8445, 70.7152, 22.276, 0.59", "64.254, 71.3436, 22.5582, 0.59", "64.3449, 71.4835, 22.6218, 0.59", "64.9811, 72.4254, 23.0521, 0.29", "65.2456, 72.7682, 23.2056, 0.29", "66.3296, 74.089, 23.7418, 0.15", "66.4013, 74.1708, 23.7789, 0.15", "66.7388, 74.5364, 23.9685, 0.15", "67.0607, 74.8826, 24.1567, 0.15", "67.7861, 75.6591, 24.5699, 0.15", "68.1259, 76.032, 24.7396, 0.44", "68.9551, 76.9227, 25.085, 0.29", "69.5505, 77.5735, 25.3483, 0.29", "69.8355, 77.8947, 25.4868, 0.29", "70.4737, 78.6942, 25.8412, 0.29", "70.8172, 79.2158, 26.0647, 0.74", "76.7071, 87.8481, 28.71, 0.74", "82.9282, 96.5712, 29.9228, 0.74", "88.6113, 105.591, 31.4393, 0.74" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "62.9916, 69.2845, 21.7594, 0.29", "63.0541, 69.2501, 21.7341, 0.29", "63.102, 69.2328, 21.7169, 0.29", "63.5069, 69.105, 21.5758, 0.29", "63.6177, 69.0763, 21.5386, 0.29", "63.9495, 68.9996, 21.4296, 0.29", "64.1009, 68.9646, 21.3799, 0.29", "65.0216, 68.7698, 21.0817, 0.29", "65.0722, 68.7604, 21.0656, 0.29", "65.5573, 68.6968, 20.9178, 0.88", "65.6162, 68.6909, 20.9003, 0.88", "73.0763, 67.7354, 19.2353, 0.88", "80.4902, 65.742, 18.741, 0.88", "88.045, 64.2932, 19.1531, 0.88", "95.6789, 63.242, 19.0836, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "28.8744, 15.6294, -45.7984, 0.74", "29.046, 18.2372, -48.2393, 0.74", "29.2174, 19.2132, -49.3924, 0.74", "29.2287, 19.265, -49.4571, 0.74", "29.4012, 19.8318, -50.2432, 0.74", "29.6357, 20.5176, -51.231, 0.74", "30.1172, 21.7683, -53.1583, 0.59", "31.0147, 23.6943, -56.2574, 0.59", "31.0765, 23.8113, -56.4623, 0.59", "31.8383, 25.1822, -58.8911, 0.59", "31.8612, 25.2207, -58.962, 0.59", "32.6869, 26.5545, -61.5118, 0.29", "32.7114, 26.5935, -61.5819, 0.29", "32.9194, 26.999, -62.2103, 0.29", "33.2027, 27.8029, -63.3518, 0.29", "33.2031, 27.8501, -63.4057, 0.29", "32.9738, 28.2175, -63.8857, 0.29", "32.8142, 28.3361, -64.0598, 0.29", "32.3259, 28.6964, -64.5952, 0.29", "31.7587, 29.0875, -65.2038, 0.74", "31.2796, 29.5572, -66.1425, 0.74", "30.5371, 30.7658, -68.5264, 0.37", "30.5256, 30.7998, -68.6024, 0.37", "30.4314, 31.2341, -69.6232, 0.37", "30.4235, 31.2818, -69.7414, 0.37", "30.1568, 33.2328, -74.365, 0.37", "30.1206, 33.5773, -75.1641, 1.03", "29.7825, 35.6222, -79.6479, 1.03", "29.7732, 35.6574, -79.7237, 1.03", "29.359, 36.902, -82.2457, 0.29", "29.1759, 37.3932, -83.1239, 0.29", "29.1321, 37.5054, -83.2814, 0.29", "28.803, 38.4895, -84.4795, 0.29", "28.7911, 38.5476, -84.5383, 0.29", "28.5769, 40.4989, -86.5005, 0.29", "28.5765, 40.5583, -86.5592, 0.29", "28.6419, 41.9934, -88.1208, 1.33", "28.6882, 42.5165, -88.7077, 1.33", "28.9627, 44.4971, -91.0206, 0.29", "29.0307, 45.2247, -91.8884, 0.29", "29.0253, 45.3081, -91.9839, 0.29", "28.8838, 46.1343, -92.8736, 1.03", "28.7896, 46.4301, -93.1707, 1.03", "28.7715, 46.4801, -93.2355, 1.03", "28.4853, 47.467, -94.4228, 0.22", "28.1757, 48.6008, -95.8534, 0.22", "28.161, 48.6505, -95.9193, 0.22", "27.8246, 49.7848, -97.4438, 1.18", "27.049, 52.6045, -101.107, 0.22", "26.8111, 53.7751, -102.641, 0.22", "26.6312, 55.2633, -104.646, 1.18", "26.6022, 56.9033, -107.209, 0.15", "26.6057, 57.0383, -107.435, 0.15", "26.7038, 57.8726, -108.787, 0.15", "26.9771, 59.3073, -110.962, 0.15", "27.294, 60.6497, -112.976, 1.62", "28.3084, 63.9946, -117.669, 0.22", "28.3256, 64.0426, -117.736, 0.22", "28.9417, 65.7566, -120.171, 0.22", "29.2405, 66.5958, -121.399, 1.25", "29.3282, 66.9121, -121.781, 1.25", "29.3481, 66.9837, -121.841, 1.25" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "28.8744, 15.6294, -45.7984, 0.96", "28.9871, 15.6321, -45.8512, 0.96", "29.8889, 15.6524, -46.2855, 0.74", "31.0554, 15.6572, -46.7753, 0.74", "32.341, 15.6753, -47.3522, 0.74", "32.4044, 15.6771, -47.3873, 0.74", "34.294, 15.7913, -48.6641, 0.74", "34.3345, 15.7961, -48.6951, 0.74", "35.5832, 16.0242, -49.8212, 0.74", "36.5831, 16.2686, -50.7695, 0.74", "37.6646, 16.6516, -51.8962, 1.62", "38.5595, 17.0257, -52.9283, 0.66", "39.2622, 17.3482, -53.7752, 0.52", "40.2495, 17.8097, -54.9765, 1.25", "40.9416, 18.1185, -55.8155, 1.25", "43.0108, 18.9528, -58.097, 0.59", "44.4305, 19.4627, -59.6598, 0.96", "45.9823, 19.9662, -61.4159, 0.96", "46.0162, 19.976, -61.4529, 0.96", "48.4926, 20.6207, -63.9532, 0.96", "49.2095, 20.7766, -64.6441, 1.47", "51.4403, 21.169, -66.5728, 0.74", "51.4868, 21.1779, -66.6072, 0.74", "53.8773, 21.6744, -68.2349, 0.74", "54.663, 21.8557, -68.7286, 1.47", "55.7259, 22.1337, -69.2817, 0.59", "55.9158, 22.1816, -69.3778, 0.59", "57.2529, 22.4949, -69.9397, 0.59", "57.3592, 22.5175, -69.9931, 0.59", "58.456, 22.6958, -70.7113, 2.14", "58.7288, 22.7295, -70.8925, 2.14", "60.0986, 22.8083, -71.7841, 0.66", "60.5123, 22.8155, -72.062, 0.66", "60.5522, 22.816, -72.0941, 0.66", "62.0032, 22.9347, -73.5487, 0.66", "62.0368, 22.9407, -73.5869, 0.66", "63.1924, 23.2624, -75.0616, 0.66", "63.3345, 23.3251, -75.2738, 1.18", "64.2557, 23.8267, -76.8289, 0.81", "65.1927, 24.3751, -78.4667, 0.44", "65.4778, 24.571, -79.0242, 0.44", "65.5005, 24.5855, -79.0676, 0.44", "66.2717, 25.0601, -80.5308, 0.44", "66.3131, 25.0766, -80.5945, 0.44", "66.9898, 25.1936, -81.4284, 0.44", "67.024, 25.1991, -81.466, 0.44", "67.7835, 25.3214, -82.313, 1.4", "67.8243, 25.3298, -82.3542, 1.4", "68.2019, 25.4154, -82.7121, 1.4", "70.4778, 25.9356, -85.0487, 0.52", "71.9504, 26.293, -86.6402, 0.37", "71.9861, 26.3018, -86.6758, 0.37", "73.9315, 26.8034, -88.4964, 0.37", "73.9734, 26.8145, -88.5356, 0.37", "76.2742, 27.4435, -90.7088, 0.37", "76.3166, 27.4545, -90.7475, 0.37", "77.8827, 27.8322, -92.1307, 0.37", "77.9198, 27.8411, -92.1649, 0.37", "79.1962, 28.1436, -93.39, 0.29", "80.7049, 28.5072, -94.7718, 0.29", "80.7436, 28.5169, -94.804, 0.29", "83.4398, 29.1653, -96.9536, 0.29", "84.7191, 29.4683, -98.0171, 1.62", "84.7588, 29.4773, -98.0482, 1.62", "85.5183, 29.6382, -98.5446, 1.62", "86.2432, 29.8057, -98.9702, 0.29", "87.324, 30.063, -99.6409, 0.29", "88.8424, 30.3892, -100.553, 0.29", "88.8864, 30.397, -100.578, 0.29", "90.23, 30.5989, -101.48, 0.29", "90.5816, 30.6442, -101.748, 1.11", "91.9821, 30.8149, -102.869, 0.29", "92.9832, 30.9193, -103.682, 0.29", "94.2396, 31.0655, -104.59, 1.47", "95.4399, 31.2249, -105.449, 0.15", "95.4819, 31.2296, -105.478, 0.15", "96.2527, 31.2935, -105.928, 0.15", "96.3058, 31.299, -105.952, 0.15", "97.3734, 31.4112, -106.389, 0.15", "97.4757, 31.4161, -106.429, 0.15", "98.5841, 31.426, -106.862, 0.15", "99.4867, 31.4142, -107.274, 1.11", "99.828, 31.3979, -107.456, 1.11", "99.8694, 31.3983, -107.486, 1.11", "101.123, 31.4757, -108.632, 0.37", "101.424, 31.523, -108.943, 0.59", "101.637, 31.5891, -109.181, 0.59", "101.685, 31.6071, -109.232, 0.59", "103.02, 32.1125, -110.594, 0.29", "103.261, 32.1895, -110.792, 0.22", "103.303, 32.2018, -110.82, 0.22", "103.947, 32.3735, -111.208, 0.22", "104.263, 32.4481, -111.392, 0.22", "105.199, 32.652, -111.891, 1.03", "107.005, 33.0088, -112.733, 0.22", "107.583, 33.1209, -113.011, 0.22", "107.628, 33.1293, -113.034, 0.22", "108.731, 33.3198, -113.618, 1.11", "109.105, 33.3888, -113.818, 1.11", "109.177, 33.4041, -113.855, 1.11" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "70.3006, 11.4905, -33.5666, 0.44", "71.2089, 11.4869, -33.6442, 0.44", "71.9577, 11.5258, -33.7779, 0.44", "72.3307, 11.5521, -33.858, 0.44", "74.3727, 11.9248, -35.0074, 0.44", "74.4448, 11.9432, -35.0575, 0.44", "75.2126, 12.166, -35.6331, 0.81", "76.4525, 12.5532, -36.6189, 0.81", "76.5217, 12.5831, -36.6886, 0.81", "78.8803, 13.8046, -39.2044, 0.22", "79.3291, 14.0822, -39.7184, 0.22", "79.4065, 14.1358, -39.8169, 0.22", "79.7291, 14.3917, -40.2424, 0.44", "80.8558, 15.3405, -41.6847, 0.29", "82.092, 16.4287, -43.1946, 0.29", "84.022, 18.3041, -45.6318, 0.96", "85.4816, 19.8391, -47.6564, 0.44", "86.1108, 20.4656, -48.4858, 0.44", "86.3622, 20.709, -48.8056, 1.03", "86.7092, 21.0132, -49.1735, 1.03", "88.4201, 22.5106, -50.8154, 0.29", "88.516, 22.568, -50.8746, 0.29", "90.8692, 23.5148, -51.9349, 0.29", "91.0391, 23.5634, -52.0099, 0.29", "92.9029, 23.9631, -52.7481, 0.29", "93.0391, 23.988, -52.7908, 0.29", "95.4251, 24.429, -53.4842, 0.29", "95.5166, 24.4522, -53.5239, 0.29", "96.3914, 24.7047, -54.0219, 0.29", "96.5644, 24.753, -54.1248, 0.29", "97.7404, 25.0279, -54.7561, 1.03", "99.7023, 25.3545, -55.5448, 0.29", "99.9761, 25.3752, -55.6095, 0.29", "102.682, 25.4643, -56.2652, 0.29", "102.769, 25.4645, -56.2867, 0.29", "104.52, 25.384, -56.6422, 0.81", "105.425, 25.3162, -56.7707, 0.22", "107.716, 25.1459, -56.9154, 0.22", "109.007, 25.113, -57.0737, 1.03", "109.17, 25.1193, -57.105, 1.03", "110.583, 25.2618, -57.4575, 0.15", "111.951, 25.53, -57.9129, 0.15", "112.033, 25.5519, -57.9414, 0.15", "113.849, 26.2653, -58.7252, 0.81", "114.016, 26.3279, -58.7946, 0.81", "114.42, 26.4432, -58.997, 0.81", "114.542, 26.4707, -59.0704, 0.81", "115.174, 26.5461, -59.4445, 0.15", "115.253, 26.5518, -59.4862, 0.15", "116.773, 26.538, -60.1063, 0.15", "118.204, 26.4846, -60.7097, 0.74", "118.479, 26.4662, -60.8298, 0.74", "118.573, 26.4588, -60.8704, 0.74" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "70.3006, 11.4905, -33.5666, 0.66", "70.4193, 11.3087, -33.7773, 0.66", "70.4455, 11.2739, -33.8242, 0.66", "70.9364, 10.7419, -34.5895, 0.66", "71.0772, 10.6264, -34.7839, 0.66", "71.6096, 10.2476, -35.474, 0.66", "72.1802, 9.90692, -36.1048, 1.18", "72.2835, 9.85643, -36.2052, 1.18", "72.8016, 9.65065, -36.624, 1.18", "73.4186, 9.46623, -37.0419, 0.44", "73.4808, 9.44965, -37.0782, 0.44", "74.437, 9.20368, -37.5463, 0.44", "74.692, 9.15668, -37.7008, 0.44", "75.3582, 9.0899, -38.1834, 0.44", "75.4082, 9.08812, -38.2245, 0.44", "75.8487, 9.0967, -38.6033, 0.74", "75.9049, 9.10224, -38.651, 0.74", "77.6316, 9.40615, -40.0719, 0.44", "78.7718, 9.55933, -40.8141, 0.44", "78.8307, 9.56236, -40.8407, 0.44", "79.4989, 9.52334, -41.0028, 0.88", "80.273, 9.42603, -41.0795, 0.88", "80.9854, 9.30317, -41.0713, 0.88", "82.4367, 8.93902, -40.8334, 0.44", "84.0451, 8.46202, -40.4927, 0.44", "85.4001, 8.01593, -40.1735, 1.25", "85.4679, 7.99193, -40.1563, 1.25", "86.1729, 7.72652, -39.9716, 1.25", "87.5183, 7.19983, -39.656, 0.37", "88.4192, 6.90015, -39.5857, 0.37", "88.5433, 6.86583, -39.5989, 0.37", "89.5566, 6.64409, -39.9058, 0.37", "89.6399, 6.62668, -39.9395, 0.37", "90.6321, 6.4384, -40.4535, 0.37", "92.2891, 6.16991, -41.4514, 1.03", "92.9725, 6.03815, -41.8775, 1.92", "93.3343, 5.95805, -42.1043, 0.29", "94.0147, 5.80753, -42.5601, 0.29", "94.1212, 5.78569, -42.6303, 0.29", "94.93, 5.62459, -43.1286, 0.29", "95.4356, 5.47167, -43.4014, 0.74", "95.4968, 5.45295, -43.4385, 0.74", "96.4847, 5.14786, -44.0376, 0.74", "96.5383, 5.13058, -44.0695, 0.74", "97.0548, 4.95238, -44.3479, 0.22", "97.7349, 4.7049, -44.678, 0.22", "97.8575, 4.6447, -44.7015, 0.22", "98.4141, 4.30541, -44.6788, 0.96", "98.6936, 4.11591, -44.6246, 0.96", "99.2419, 3.74358, -44.4983, 0.96", "99.2943, 3.70815, -44.4846, 0.96", "100.984, 2.59555, -44.0264, 0.37", "101.064, 2.54264, -44.0061, 0.37", "102.383, 1.70211, -43.7516, 0.37", "102.438, 1.66854, -43.7441, 0.37", "102.917, 1.39821, -43.7224, 0.59", "103.1, 1.31022, -43.7373, 0.22", "103.159, 1.2873, -43.7492, 0.22", "104.053, 0.942583, -43.8528, 0.22", "104.113, 0.919613, -43.8567, 0.22", "104.492, 0.773297, -43.8821, 0.44", "104.688, 0.691632, -43.9011, 0.44", "105.527, 0.315039, -44.0067, 0.22", "107.417, -0.566661, -44.3178, 0.22", "107.969, -0.834039, -44.4289, 1.03", "108.516, -1.10499, -44.5569, 0.22", "109.594, -1.6602, -44.8476, 0.22", "109.887, -1.81383, -44.9412, 0.22", "111.333, -2.56202, -45.473, 0.22", "113.068, -3.48434, -46.1442, 0.22", "113.949, -3.9422, -46.4867, 1.18", "114.716, -4.32835, -46.784, 1.18", "115.242, -4.57892, -46.9837, 0.15", "117.001, -5.38588, -47.646, 0.15", "117.065, -5.4143, -47.6702, 0.52", "117.541, -5.61205, -47.8478, 0.15", "117.655, -5.65573, -47.8895, 0.15", "119.206, -6.18683, -48.4174, 0.15", "119.638, -6.32863, -48.5564, 0.96", "120.262, -6.51896, -48.7624, 0.96", "120.449, -6.57292, -48.8239, 0.96", "121.022, -6.72226, -49.0084, 0.15", "122.369, -7.00524, -49.411, 0.15", "122.44, -7.01492, -49.4301, 0.15", "122.707, -7.04281, -49.4903, 0.81", "122.771, -7.04786, -49.5016, 0.81", "123.441, -7.09834, -49.585, 0.81", "123.916, -7.12967, -49.6092, 0.81", "123.981, -7.1334, -49.6121, 0.81", "124.482, -7.16814, -49.6418, 0.15", "124.555, -7.17343, -49.6466, 0.15", "125.367, -7.2307, -49.7029, 0.15", "125.465, -7.24024, -49.7056, 0.15", "127.114, -7.42747, -49.6965, 0.15", "127.477, -7.46558, -49.6822, 0.44", "127.671, -7.48323, -49.6689, 0.44", "127.814, -7.49374, -49.654, 0.44", "128.62, -7.54002, -49.5328, 0.15", "128.829, -7.55234, -49.4941, 0.15", "129.327, -7.5785, -49.3479, 0.15", "129.738, -7.60286, -49.23, 0.88", "130.209, -7.63142, -49.1148, 0.88", "130.345, -7.6361, -49.0931, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-75.9916, 57.0971, 47.0222, 0.37", "-86.5482, 59.1324, 54.5465, 0.37", "-96.7312, 61.1673, 62.5662, 0.37", "-106.989, 62.3341, 70.6751, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-75.9916, 57.0971, 47.0222, 0.29", "-86.1355, 60.7145, 49.5885, 0.37", "-96.5144, 64.5828, 49.57, 0.37", "-106.396, 69.4891, 50.3075, 0.37", "-114.836, 76.5373, 49.645, 0.37", "-122.449, 84.3412, 48.1939, 0.37", "-129.3, 92.8925, 48.3741, 0.37", "-136.06, 101.243, 50.4841, 0.37", "-140.95, 110.662, 52.948, 0.37", "-147.171, 118.965, 56.4056, 0.37", "-150.898, 128.687, 59.5256, 0.37", "-153.842, 137.875, 64.5278, 0.37", "-157.771, 146.266, 70.2684, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-36.1455, 73.3672, 43.8712, 0.29", "-38.8979, 78.8382, 48.3546, 0.29", "-41.1901, 84.8159, 52.3952, 0.29", "-42.117, 90.742, 57.0151, 0.29", "-42.5979, 96.4548, 61.9723, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-36.1455, 73.3672, 43.8712, 0.74", "-40.0572, 79.1183, 48.5692, 0.29", "-44.2775, 84.2155, 53.7676, 0.29", "-48.715, 89.4472, 58.635, 0.29", "-52.9239, 94.0213, 64.3308, 0.29", "-57.9602, 98.0492, 69.7865, 0.29", "-63.0029, 101.82, 75.4274, 0.29", "-67.8631, 105.417, 81.3406, 0.29", "-73.0134, 110.258, 85.9249, 0.29", "-77.6351, 115.476, 90.6357, 0.29", "-82.9304, 119.9, 95.4913, 0.29", "-87.5104, 124.285, 101.057, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "41.3323, -42.8907, 5.16349, 0.59", "42.3454, -43.051, 5.30402, 0.59", "42.5484, -43.0797, 5.32456, 0.59", "42.9313, -43.1315, 5.3585, 0.59", "44.0055, -43.3163, 5.45577, 0.44", "44.8539, -43.4768, 5.53298, 0.44", "45.9128, -43.7197, 5.57642, 0.81", "46.7855, -43.9701, 5.55889, 0.52", "46.8487, -43.9946, 5.55703, 0.52", "47.7762, -44.4482, 5.4717, 0.22", "47.8426, -44.4865, 5.46187, 0.22", "48.8719, -45.2239, 5.25275, 0.52", "49.7081, -45.9379, 5.04169, 0.44", "50.5996, -46.7781, 4.78601, 0.44", "51.4043, -47.5763, 4.5389, 0.22", "51.502, -47.6771, 4.50686, 0.22", "51.887, -48.0826, 4.38954, 0.22", "52.1255, -48.3371, 4.37312, 0.22", "52.5898, -48.8483, 4.4774, 0.22", "52.6373, -48.9005, 4.50812, 0.22", "52.9848, -49.298, 4.80517, 1.03", "53.0216, -49.3439, 4.83777, 1.03", "54.0007, -50.6687, 5.74186, 0.22", "54.4761, -51.3875, 6.20466, 0.22", "54.5058, -51.4366, 6.23969, 0.22", "54.859, -52.0075, 6.63893, 0.37", "55.1178, -52.4097, 6.94267, 0.59", "55.3568, -52.7341, 7.18209, 0.59", "55.3963, -52.7799, 7.21146, 0.59", "56.1918, -53.5499, 7.801, 0.22", "56.813, -54.0823, 8.24258, 0.22", "57.4647, -54.5799, 8.69676, 0.74", "57.9454, -54.9176, 9.01436, 0.74", "58.5735, -55.3675, 9.38032, 0.74", "58.6216, -55.4102, 9.40038, 0.74", "59.0639, -55.8673, 9.50438, 0.37", "59.1563, -55.9769, 9.51561, 0.22", "59.1984, -56.029, 9.51519, 0.22", "59.7485, -56.7386, 9.48851, 0.22", "60.8241, -58.1595, 9.40096, 0.22", "60.8673, -58.2107, 9.39705, 0.22", "61.3481, -58.741, 9.34678, 0.59", "61.8291, -59.2553, 9.29699, 1.03", "62.315, -59.7549, 9.24728, 0.44", "62.5441, -59.968, 9.22473, 0.22", "64.1096, -61.196, 9.09482, 0.22", "64.1628, -61.2373, 9.09151, 0.22", "72.663, -65.839, 9.17687, 0.22", "79.9943, -72.0518, 8.73524, 0.22", "88.0606, -77.0434, 6.93843, 0.22", "95.4968, -83.0651, 5.89516, 0.22", "102.135, -89.9619, 5.22432, 0.22" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "41.3323, -42.8907, 5.16349, 0.88", "41.4808, -43.5092, 5.09372, 0.88", "41.6905, -44.7853, 4.97598, 0.66", "41.7007, -44.8613, 4.96961, 0.66", "41.8759, -45.9873, 4.88512, 0.66", "42.1272, -47.5057, 4.77828, 0.59", "42.2818, -48.3806, 4.67857, 0.81", "42.4851, -49.5012, 4.53786, 0.81", "42.517, -49.6607, 4.5098, 0.81", "42.7643, -50.7513, 4.27886, 0.52", "42.7868, -50.8226, 4.25979, 0.52", "43.4434, -51.6958, 3.95247, 0.37", "43.5255, -51.7641, 3.92409, 0.37", "44.2454, -52.1689, 3.73256, 0.37", "44.6754, -52.3675, 3.63789, 0.37", "45.5319, -52.6984, 3.49437, 0.37", "47.0577, -53.2802, 3.19652, 0.22", "47.2297, -53.3449, 3.16809, 0.22", "48.1593, -53.7613, 2.99374, 0.81", "48.3076, -53.8342, 2.96235, 0.81", "49.0051, -54.2965, 2.83526, 1.18", "50.1167, -55.2991, 2.69796, 0.88", "50.5179, -55.7849, 2.68166, 0.29", "51.4177, -57.0609, 2.72496, 0.29", "51.4715, -57.1552, 2.73897, 0.29", "52.3174, -58.8024, 3.0807, 0.29", "52.6314, -59.4718, 3.20782, 0.81", "53.0372, -60.355, 3.37118, 0.81", "53.4178, -61.2045, 3.51392, 0.81", "54.1769, -62.8946, 3.79099, 0.44", "54.6891, -64.0532, 3.95042, 0.44", "55.3268, -65.5018, 4.05428, 1.11", "55.6073, -66.1081, 4.06617, 1.11" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "109.017, -33.466, 47.9323, 0.29", "115.235, -33.0835, 53.69, 0.29", "120.399, -33.2142, 60.4078, 0.29", "124.547, -34.6527, 67.6286, 0.29", "126.909, -37.4815, 75.1876, 0.29", "130.263, -40.0004, 82.493, 0.29", "132.191, -42.5783, 90.2654, 0.29", "133.481, -44.8965, 98.252, 0.29", "134.495, -49.0065, 105.469, 0.29", "136.729, -53.0728, 112.444, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "109.017, -33.466, 47.9323, 0.74", "115.989, -34.9501, 48.6909, 0.29", "123.076, -35.1806, 49.7439, 0.29", "130.202, -34.8712, 49.0939, 0.29", "137.337, -34.2606, 49.2207, 0.29", "144.449, -35.1251, 48.9589, 0.29", "151.599, -34.6911, 48.9446, 0.29", "158.481, -33.3561, 47.5714, 0.29", "165.302, -31.3102, 47.0812, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "39.0518, -76.217, 63.2107, 0.37", "39.3496, -76.5572, 63.3408, 0.37", "39.8969, -77.2796, 63.7654, 0.37", "40.4743, -78.3025, 64.4666, 0.22", "40.4959, -78.3552, 64.5027, 0.22", "40.8453, -79.9226, 65.4818, 0.52", "40.918, -80.4949, 65.8191, 0.52", "40.8532, -81.5689, 66.4362, 0.37", "40.5707, -82.6654, 66.9659, 0.22", "40.318, -83.3379, 67.2177, 0.22", "39.7287, -84.5834, 67.4759, 0.22", "39.6939, -84.6409, 67.4791, 0.22", "39.2397, -85.3023, 67.4662, 0.22", "38.1323, -86.7994, 67.3922, 0.22", "37.6504, -87.4813, 67.3573, 0.22", "36.766, -88.8766, 67.2822, 0.22", "35.5252, -91.0418, 67.1649, 0.15", "34.5597, -92.8866, 67.0667, 0.15", "33.3806, -95.3576, 66.9032, 0.15", "32.3427, -97.6571, 66.7275, 0.15", "30.9499, -100.95, 66.4771, 0.15", "30.5299, -102.093, 66.3863, 0.59", "30.1942, -103.225, 66.2818, 0.59", "29.9449, -104.287, 66.1696, 0.29", "29.8545, -104.902, 66.0664, 0.29", "28.1409, -114.275, 66.6688, 0.29", "25.6493, -123.222, 68.9883, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "39.0518, -76.217, 63.2107, 0.59", "39.444, -76.4845, 63.3011, 0.59", "40.5272, -77.3048, 63.7402, 0.22", "41.0614, -77.6915, 63.8816, 0.22", "43.0421, -79.1137, 64.3289, 0.22", "43.107, -79.1591, 64.3353, 0.22", "44.8106, -80.351, 64.5024, 0.22", "46.7685, -81.7658, 64.7295, 0.22", "49.2588, -83.6598, 65.0887, 0.22", "49.3217, -83.7078, 65.0948, 0.22", "51.4379, -85.1849, 65.023, 0.22", "61.2386, -90.8838, 65.9473, 0.22", "71.2303, -95.5615, 68.8023, 0.22", "81.8389, -99.7193, 69.3225, 0.22", "93.028, -102.035, 69.0849, 0.22", "103.47, -106.595, 68.7327, 0.22", "114.4, -109.59, 70.1561, 0.22", "125.346, -112.676, 71.2024, 0.22", "136.467, -115.028, 72.3857, 0.22", "147.476, -115.463, 75.4459, 0.22", "158.185, -116.818, 79.2159, 0.22", "169.305, -117.421, 81.8111, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-13.3178, -27.8519, -13.6211, 0.96", "-13.0791, -30.7437, -20.5215, 0.96", "-13.0171, -31.4945, -22.3132, 0.96", "-13.0137, -31.535, -22.4097, 0.96" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-13.3178, -27.8519, -13.6211, 1.4", "-13.731, -28.1018, -13.4609, 1.4", "-15.0896, -28.9354, -12.8936, 1.03", "-15.1822, -28.994, -12.8501, 1.03", "-16.324, -29.7432, -12.2977, 0.59", "-17.4789, -30.602, -11.6403, 0.59", "-18.6756, -31.5519, -10.9705, 0.66", "-18.7401, -31.6099, -10.934, 0.66", "-19.9243, -32.8135, -10.2489, 0.66", "-20.8369, -33.8359, -9.74764, 0.44", "-22.0277, -35.3426, -9.11896, 0.44", "-22.6866, -36.2698, -8.80791, 0.66", "-23.5659, -37.5205, -8.4491, 0.66", "-23.6856, -37.6661, -8.4039, 0.66", "-24.8508, -38.7576, -8.00128, 0.66", "-24.9488, -38.8224, -7.95786, 0.66", "-25.9146, -39.242, -7.47626, 0.66", "-27.1351, -39.6422, -6.72712, 0.88", "-28.7907, -40.0867, -5.64596, 1.03", "-30.1482, -40.4223, -4.72747, 0.74", "-31.8789, -40.8734, -3.51637, 0.66", "-33.4661, -41.3355, -2.39103, 0.66", "-34.4471, -41.6888, -1.66665, 0.66", "-35.8231, -42.3462, -0.581275, 0.66", "-35.8804, -42.3836, -0.534986, 0.66", "-37.3336, -43.5759, 0.622399, 0.66", "-37.3949, -43.6321, 0.666595, 0.66", "-38.6158, -44.7666, 1.51821, 0.66", "-38.6717, -44.8156, 1.55389, 0.66", "-40.0113, -45.8825, 2.39207, 0.66", "-40.2327, -46.0353, 2.51803, 1.03", "-41.067, -46.4978, 2.93501, 0.52", "-42.4579, -47.1877, 3.55914, 0.52", "-42.5274, -47.2207, 3.58948, 0.52", "-43.3431, -47.6271, 3.94815, 0.66", "-44.3897, -48.1642, 4.40834, 0.66", "-45.4632, -48.7617, 4.86973, 1.4", "-46.122, -49.1625, 5.15016, 0.81", "-47.4608, -50.0048, 5.69972, 0.52", "-48.694, -50.7963, 6.21428, 0.37", "-49.7507, -51.4882, 6.66458, 0.81", "-50.6004, -52.0785, 7.02764, 0.96", "-51.5203, -52.7451, 7.41666, 0.96", "-52.7481, -53.6462, 7.91748, 0.66", "-53.7508, -54.3766, 8.29849, 0.66", "-53.8402, -54.4445, 8.33393, 0.66", "-55.3429, -55.6122, 8.93989, 0.66", "-55.4054, -55.6611, 8.96215, 0.66", "-56.5655, -56.6282, 9.31464, 0.66", "-58.1357, -58.023, 9.71246, 0.66", "-59.387, -59.1512, 9.96233, 0.66", "-59.4375, -59.1993, 9.97173, 0.66", "-60.5517, -60.3129, 10.1834, 0.66", "-61.6899, -61.5068, 10.4296, 0.66", "-62.2261, -62.0695, 10.5688, 0.44", "-62.2826, -62.1263, 10.5867, 0.44", "-62.8889, -62.6366, 10.7635, 0.44", "-63.6793, -63.1528, 10.9762, 0.44", "-64.7894, -63.6677, 11.2129, 0.88", "-66.3435, -64.1949, 11.4409, 0.96", "-67.0106, -64.3865, 11.5074, 0.96", "-68.6655, -64.8115, 11.5806, 0.44", "-70.2297, -65.1603, 11.5583, 0.44", "-71.7206, -65.497, 11.4629, 0.44", "-72.835, -65.7504, 11.3503, 0.44", "-72.914, -65.7728, 11.3399, 0.44", "-73.7989, -66.0985, 11.2306, 0.66", "-73.8712, -66.1379, 11.2264, 0.66", "-74.8156, -66.8033, 11.1468, 0.66", "-74.8879, -66.863, 11.1427, 0.66", "-75.6401, -67.4823, 11.0705, 0.52", "-76.4637, -68.0909, 10.9749, 0.29", "-77.543, -68.7697, 10.8306, 0.29", "-78.5273, -69.3199, 10.6789, 0.96", "-79.6909, -69.8899, 10.5135, 0.96", "-80.9952, -70.4937, 10.4072, 0.88", "-82.3864, -71.0884, 10.3839, 0.74", "-84.2288, -71.8261, 10.508, 0.52", "-84.2947, -71.8503, 10.5182, 0.52", "-85.841, -72.4095, 10.9155, 0.52", "-87.1818, -72.8711, 11.3761, 0.96", "-88.2392, -73.2649, 11.8729, 1.18", "-89.2877, -73.7248, 12.4991, 0.59", "-89.718, -73.9502, 12.7983, 0.29", "-90.0837, -74.1485, 13.0202, 0.15", "-90.161, -74.191, 13.0537, 0.29", "-90.7684, -74.4807, 13.1393, 0.29", "-91.2271, -74.6598, 13.1527, 0.29", "-91.8552, -74.8329, 13.0731, 0.29", "-93.0173, -75.0638, 12.9036, 0.29", "-93.8686, -75.1902, 12.8072, 0.44", "-94.9712, -75.3181, 12.7081, 0.96", "-96.059, -75.4287, 12.6412, 1.33", "-97.7205, -75.6085, 12.6296, 1.33", "-98.7635, -75.7589, 12.6892, 0.52", "-99.8532, -75.9897, 12.8331, 0.22", "-99.9423, -76.0173, 12.8486, 0.22", "-100.846, -76.415, 13.0048, 0.22", "-101.578, -76.8222, 13.1253, 0.52", "-102.295, -77.2887, 13.2664, 0.88", "-102.363, -77.3337, 13.2754, 0.88", "-103.085, -77.7926, 13.3328, 0.88", "-104.582, -78.6707, 13.4662, 0.22", "-104.655, -78.7096, 13.4725, 0.22", "-105.875, -79.3273, 13.6228, 0.22", "-106.529, -79.6417, 13.7171, 0.22", "-106.593, -79.6716, 13.7278, 0.22", "-107.55, -80.1498, 13.9139, 0.22", "-107.875, -80.3418, 13.989, 0.22", "-109.405, -81.3231, 14.3029, 0.22", "-110.221, -81.9105, 14.4462, 1.25", "-110.284, -81.963, 14.4563, 1.25", "-111.201, -82.7867, 14.5937, 1.62", "-111.985, -83.5456, 14.6774, 1.62", "-112.783, -84.3778, 14.759, 0.22", "-113.131, -84.789, 14.7946, 0.22", "-114.489, -86.5628, 14.962, 0.22", "-114.591, -86.7046, 14.9742, 0.22", "-115.082, -87.4242, 15.0321, 0.22", "-115.615, -88.2265, 15.094, 0.96", "-116.388, -89.4177, 15.1857, 0.96", "-116.991, -90.2536, 15.2785, 0.15", "-117.584, -91.01, 15.3877, 0.15", "-117.645, -91.0793, 15.4039, 0.15", "-118.633, -92.0644, 15.7437, 0.15", "-118.804, -92.2217, 15.8084, 0.15", "-119.709, -92.9694, 16.1187, 0.15", "-119.772, -93.0192, 16.1378, 0.15", "-120.981, -93.9717, 16.464, 0.15", "-121.355, -94.2768, 16.5522, 0.88", "-122.175, -94.962, 16.7158, 1.11", "-122.984, -95.6711, 16.8827, 0.66", "-123.351, -96.0119, 16.9503, 0.22", "-123.864, -96.4676, 17.0441, 0.15", "-123.926, -96.5199, 17.0546, 0.15", "-124.683, -97.1299, 17.2271, 0.15", "-125.297, -97.5967, 17.414, 0.15", "-125.748, -97.9494, 17.5821, 0.37", "-126.087, -98.2078, 17.7043, 0.15", "-126.231, -98.3148, 17.7476, 0.15", "-127.048, -98.9403, 17.9542, 0.15", "-127.818, -99.5373, 18.1147, 0.15", "-128.232, -99.8493, 18.1901, 0.81", "-129.082, -100.473, 18.3516, 0.81", "-129.788, -100.952, 18.4956, 0.22", "-130.592, -101.454, 18.67, 0.22", "-130.743, -101.541, 18.6995, 0.22", "-131.574, -102.058, 18.8439, 0.22", "-131.642, -102.103, 18.8551, 0.22", "-133.04, -103.101, 19.0746, 0.22", "-133.184, -103.204, 19.0776, 0.22", "-134.162, -103.842, 18.6662, 0.22", "-134.951, -104.368, 18.163, 0.22", "-135.067, -104.435, 18.0667, 0.22", "-135.581, -104.715, 17.6113, 0.96", "-137.089, -105.505, 16.2694, 0.66", "-139.559, -106.652, 14.1643, 0.22", "-140.438, -107.037, 13.4739, 0.22", "-142.517, -107.979, 11.9924, 0.52", "-143.21, -108.317, 11.5567, 0.96", "-144.317, -108.882, 10.9867, 0.96", "-145.585, -109.621, 10.5895, 0.15", "-146.806, -110.425, 10.4583, 0.22", "-148.014, -111.27, 10.4454, 0.22", "-148.343, -111.538, 10.4993, 0.22", "-148.803, -111.932, 10.625, 0.44", "-149.331, -112.474, 10.8653, 0.74", "-149.38, -112.532, 10.8987, 0.74", "-149.89, -113.054, 11.1927, 0.74", "-149.946, -113.107, 11.2213, 0.74", "-150.851, -113.994, 11.6265, 0.22", "-151.875, -114.967, 11.9765, 0.22", "-151.934, -115.022, 11.9937, 0.22", "-152.985, -115.919, 12.2695, 0.22", "-153.695, -116.501, 12.4374, 0.22", "-153.833, -116.606, 12.4681, 0.22", "-155.844, -118.017, 12.8006, 0.22", "-156.015, -118.131, 12.8297, 0.22", "-157.956, -119.534, 13.3028, 0.22", "-158.245, -119.755, 13.3928, 0.22", "-159.074, -120.403, 13.6759, 0.52", "-159.948, -121.078, 14.0016, 1.33", "-160.798, -121.728, 14.3542, 1.55", "-162.319, -122.846, 15.02, 0.37", "-162.782, -123.175, 15.2428, 0.22", "-163.104, -123.401, 15.401, 0.22", "-164.155, -124.158, 15.9148, 0.22", "-164.283, -124.256, 15.9878, 0.22", "-164.797, -124.647, 16.2578, 0.22", "-164.885, -124.715, 16.2913, 0.22", "-165.297, -125.1, 16.4816, 0.59", "-165.836, -125.622, 16.7487, 0.59", "-166.565, -126.4, 17.1333, 0.22", "-166.695, -126.527, 17.2013, 0.22", "-167.12, -126.919, 17.4244, 0.22", "-167.495, -127.24, 17.6076, 0.22", "-168.734, -128.22, 18.1868, 0.22", "-168.935, -128.377, 18.2819, 0.66", "-169.264, -128.625, 18.4221, 0.22", "-169.325, -128.671, 18.4528, 0.22", "-170.347, -129.462, 19.0435, 0.22", "-170.429, -129.527, 19.0956, 0.22", "-171.014, -129.97, 19.4881, 0.66", "-171.776, -130.495, 19.9906, 0.66", "-172.54, -131.05, 20.469, 0.22", "-172.6, -131.093, 20.5051, 0.22", "-173.257, -131.502, 20.7783, 0.22", "-173.924, -131.869, 20.9652, 0.22", "-174.169, -131.982, 20.9884, 0.22", "-176.345, -132.877, 20.9669, 0.22", "-176.433, -132.91, 20.9601, 0.22", "-178.503, -133.619, 20.7675, 0.15", "-179.333, -133.894, 20.6754, 1.11", "-180.848, -134.32, 20.3477, 0.44", "-181.515, -134.468, 20.1213, 0.44", "-181.675, -134.502, 20.0548, 0.44", "-183.03, -134.828, 19.456, 0.44", "-183.876, -135.041, 18.9926, 0.81", "-187.152, -135.944, 17.0266, 0.22", "-189.788, -136.715, 15.3773, 0.74", "-190.682, -137.002, 14.8083, 0.74", "-190.758, -137.029, 14.7596, 0.74", "-193.945, -138.261, 12.5296, 0.22", "-195.204, -138.786, 11.6267, 0.22", "-195.417, -138.9, 11.4927, 0.22", "-196.706, -139.681, 10.7813, 0.22", "-197.227, -140.001, 10.534, 0.88", "-199.546, -141.509, 9.55505, 0.22", "-199.698, -141.622, 9.51045, 0.22", "-201.622, -143.01, 8.81737, 0.22", "-201.968, -143.253, 8.68643, 0.81", "-202.805, -143.802, 8.35478, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-10.7294, -31.5265, 0.605622, 0.29", "-6.08442, -33.0496, -2.83087, 0.29", "-5.30831, -33.2123, -3.30663, 0.44", "-5.2405, -33.2173, -3.33812, 0.44", "-3.76439, -33.2158, -3.89599, 0.44", "-5.23932, -33.3299, -3.4488, 0.44", "-5.37308, -33.3468, -3.41495, 0.44", "-7.09188, -33.7978, -3.15241, 0.44", "-8.08698, -34.0779, -3.05778, 0.44", "-8.15697, -34.1032, -3.05271, 0.44", "-8.69828, -34.3703, -3.04824, 0.66", "-8.75558, -34.4171, -3.04598, 0.66", "-9.36684, -35.0923, -3.03483, 0.66", "-9.40647, -35.1543, -3.03368, 0.66", "-9.94474, -35.9882, -3.01269, 0.44", "-9.98559, -36.0494, -3.01142, 0.44", "-10.5692, -36.9106, -2.96673, 0.44", "-10.6113, -36.9709, -2.96332, 0.44", "-11.1724, -37.8157, -2.90712, 0.44", "-11.5713, -38.3936, -2.81885, 0.74", "-12.054, -38.9788, -2.61928, 0.74", "-12.7617, -39.7541, -2.28085, 0.59", "-12.817, -39.8107, -2.25159, 0.59", "-13.8865, -40.7994, -1.66218, 0.59", "-15.0194, -41.6549, -1.00154, 0.81", "-16.8198, -42.7072, 0.0275871, 0.52", "-17.8609, -43.2204, 0.589543, 0.52", "-17.9308, -43.2527, 0.625821, 0.52", "-19.587, -44.048, 1.48565, 0.52", "-21.1196, -44.8552, 2.27134, 0.74", "-22.3628, -45.6317, 2.88772, 0.52", "-23.0137, -46.1107, 3.20069, 0.52", "-23.9077, -46.7959, 3.64249, 0.52", "-25.2345, -47.8066, 4.17607, 0.52", "-26.3999, -48.677, 4.44438, 0.81", "-26.464, -48.7313, 4.45457, 0.81", "-26.9956, -49.1758, 4.51163, 0.74", "-28.43, -50.0618, 4.55094, 0.59", "-29.9562, -50.5648, 4.36188, 0.81", "-31.2662, -50.675, 4.0209, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-10.7294, -31.5265, 0.605622, 0.74", "-10.7332, -31.6853, 0.566686, 0.74", "-10.7901, -32.3955, 0.373342, 1.18", "-10.9104, -33.543, 0.0493992, 1.03", "-11.0903, -35.3306, -0.448106, 0.74", "-11.2466, -36.8125, -0.905115, 0.66", "-11.4476, -38.5519, -1.44778, 0.66", "-11.5359, -39.1797, -1.68861, 1.03", "-11.5562, -39.3078, -1.74431, 1.03", "-11.6653, -40.0506, -2.07459, 0.81", "-11.7763, -41.3329, -2.55012, 0.81", "-11.8128, -42.772, -2.96566, 0.81", "-11.7526, -44.5547, -3.37045, 0.52", "-11.6623, -45.7886, -3.57757, 0.74", "-11.497, -47.6871, -3.69737, 1.03", "-11.2872, -49.7678, -3.6182, 0.96", "-11.2782, -49.847, -3.60813, 0.96", "-11.1512, -50.9643, -3.40907, 1.18", "-10.9804, -52.6458, -3.03634, 1.03", "-10.8038, -55.0257, -2.51148, 1.03", "-10.7303, -56.7937, -2.1312, 0.96", "-10.6837, -58.2699, -1.84894, 0.81", "-10.6448, -59.3662, -1.65002, 1.03", "-10.5725, -60.1562, -1.52319, 0.74", "-10.444, -60.9541, -1.42962, 0.59", "-10.4259, -61.0218, -1.4232, 0.59", "-10.0071, -62.2255, -1.27854, 0.59", "-9.95088, -62.3635, -1.25341, 0.59", "-8.8674, -65.0286, -0.552568, 0.59", "-8.84698, -65.0929, -0.531826, 0.59", "-8.39919, -66.7946, 0.078276, 0.59", "-8.37554, -66.934, 0.131528, 0.59", "-8.32831, -67.8709, 0.509556, 1.03", "-8.33504, -70.0174, 1.41071, 0.81", "-8.60015, -72.4898, 2.51614, 0.81", "-8.6074, -72.5448, 2.54012, 0.81", "-8.8322, -73.7793, 3.04564, 1.55", "-9.00238, -74.6537, 3.39029, 1.92" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "9.03525, 118.387, 71.034, 0.37", "4.6668, 120.126, 78.4886, 0.37" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "9.03525, 118.387, 71.034, 0.29", "10.13, 122.127, 80.0021, 0.37", "10.3344, 126.51, 88.7188, 0.37", "10.8634, 129.585, 97.9996, 0.37", "10.2237, 133.626, 106.867, 0.37", "9.93355, 138.433, 115.339, 0.37" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "29.3481, 66.9837, -121.841, 0.22", "31.2975, 68.0425, -123.533, 0.22", "32.8297, 68.8891, -124.83, 0.22", "32.9028, 68.9315, -124.901, 0.22", "34.9428, 70.1451, -126.873, 0.22", "35.5403, 70.5296, -127.411, 1.03", "35.8641, 70.7613, -127.737, 1.03", "35.9038, 70.7921, -127.773, 1.03", "36.9609, 71.8373, -129.008, 0.22", "37.6873, 72.6162, -129.937, 0.22", "38.4601, 73.5714, -130.98, 0.22", "39.556, 75.2039, -132.726, 0.22", "40.1639, 76.2965, -133.687, 0.22", "41.0308, 78.2633, -135.359, 0.22", "41.0503, 78.3173, -135.403, 0.22", "41.3863, 79.5984, -136.31, 0.22", "41.9354, 82.0865, -137.719, 0.22", "42.506, 84.9153, -139.166, 0.22", "43.1805, 88.5561, -140.991, 0.22", "43.2409, 88.8379, -141.126, 0.44", "44.2673, 93.1352, -143.17, 0.15", "45.1817, 96.1942, -144.592, 0.15", "46.6799, 100.278, -146.332, 0.15", "46.7178, 100.365, -146.369, 0.15", "47.5685, 102.04, -146.974, 0.15", "47.6203, 102.129, -147.01, 0.15", "49.3578, 104.123, -148.085, 0.15", "49.4868, 104.223, -148.148, 0.15", "50.4345, 104.71, -148.228, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "29.3481, 66.9837, -121.841, 0.22", "29.4696, 69.1191, -122.18, 0.22", "29.5795, 70.463, -122.311, 0.22", "29.5955, 70.6814, -122.349, 0.22", "29.847, 72.6995, -122.734, 0.22", "29.9682, 73.2829, -122.839, 0.66", "30.1204, 73.8932, -122.947, 0.22", "30.5507, 75.1231, -123.119, 0.22", "31.3, 76.8326, -123.41, 0.22", "32.1213, 78.2551, -123.684, 0.22", "33.2464, 79.9066, -124.036, 0.22", "33.2858, 79.9595, -124.048, 0.22", "33.9698, 80.7955, -124.245, 0.22", "34.0162, 80.8431, -124.255, 0.22", "36.0109, 82.5521, -124.375, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-42.5979, 96.4548, 61.9723, 0.37", "-45.2449, 105.475, 69.2024, 0.37", "-47.3336, 114.66, 76.3949, 0.37", "-49.487, 122.397, 85.1805, 0.37", "-49.7712, 131.151, 93.1833, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-42.5979, 96.4548, 61.9723, 0.29", "-44.7363, 104.525, 68.1425, 0.37", "-45.7325, 112.477, 74.751, 0.37", "-46.2638, 121.105, 80.4614, 0.37", "-45.487, 129.761, 86.1042, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "55.6073, -66.1081, 4.06617, 0.74", "55.1438, -67.1092, 4.85302, 0.74", "54.7634, -68.0865, 5.29521, 0.59", "54.3893, -69.048, 5.73024, 0.59", "54.3678, -69.1031, 5.75522, 0.59", "53.813, -70.5288, 6.40028, 0.59", "53.7879, -70.5932, 6.42942, 0.59", "52.8979, -72.9047, 7.71275, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "55.6073, -66.1081, 4.06617, 1.11", "55.7778, -66.3373, 3.93418, 1.11", "56.3348, -67.1124, 3.58551, 0.52", "56.3925, -67.2001, 3.56187, 0.52", "56.7938, -67.9141, 3.43875, 0.52", "56.8145, -67.9563, 3.42906, 0.52", "57.1874, -68.7727, 3.21864, 0.74", "57.2068, -68.8227, 3.20751, 0.74", "57.5626, -69.8922, 3.0285, 0.74", "57.752, -70.6086, 2.89483, 0.74", "57.915, -71.4184, 2.72889, 0.29", "57.9223, -71.4646, 2.71925, 0.29", "57.9517, -71.704, 2.65172, 0.29", "57.9588, -71.7557, 2.63518, 0.29", "58.0485, -72.3671, 2.40944, 0.29", "58.1608, -72.8845, 2.22714, 0.52", "58.1722, -72.9291, 2.21411, 0.52", "58.4197, -73.8499, 1.93695, 0.52", "58.5848, -74.5136, 1.74042, 0.52", "58.5936, -74.552, 1.7292, 0.52", "58.6509, -74.8706, 1.63829, 0.22", "58.6822, -75.1533, 1.5658, 0.22", "58.6855, -75.2057, 1.55071, 0.22", "58.7006, -75.8271, 1.37688, 0.22", "58.7076, -75.8801, 1.3658, 0.22", "58.9597, -76.7921, 1.29466, 0.22", "58.9975, -76.8922, 1.29535, 0.22", "59.3604, -77.6943, 1.34485, 0.81", "59.5797, -78.1156, 1.38799, 0.81", "60.25, -79.2662, 1.54868, 0.37", "60.7999, -80.1698, 1.71042, 0.37", "61.0652, -80.5823, 1.80744, 0.44", "61.1831, -80.7666, 1.85617, 0.15", "61.7353, -81.6329, 2.1301, 0.15", "61.7599, -81.6725, 2.14146, 0.15", "61.8125, -81.7649, 2.15596, 0.66", "61.9145, -81.9706, 2.16175, 0.88", "61.9447, -82.0313, 2.16267, 0.88", "62.1448, -82.449, 2.16976, 0.88", "66.3842, -87.8452, 1.6671, 0.88", "70.0063, -93.5673, 0.521037, 0.88" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-13.0137, -31.535, -22.4097, 0.59", "-9.79941, -33.1704, -27.3726, 0.59", "-9.75551, -33.1972, -27.4173, 0.59", "-8.83506, -33.9641, -27.6168, 0.59", "-8.78999, -34.0025, -27.6205, 0.59", "-7.62348, -34.9556, -27.9538, 0.59", "-7.48197, -35.0687, -27.9992, 0.59", "-5.66341, -36.6566, -28.325, 0.59", "-4.84045, -37.3922, -28.5818, 1.03", "-3.19311, -38.9634, -29.4545, 0.88", "-1.35142, -40.8392, -30.9658, 0.74", "-0.997055, -41.2179, -31.3534, 0.74", "-0.13545, -42.132, -32.4675, 0.74", "-0.106154, -42.1615, -32.5102, 0.74", "0.714219, -42.9386, -33.6631, 1.03", "1.81221, -44.0255, -35.1142, 0.29", "2.28942, -44.423, -35.5863, 0.44", "3.19746, -45.0403, -36.2225, 0.88", "4.027, -45.4918, -36.5887, 1.03", "4.93298, -45.9275, -36.9401, 1.03", "4.98697, -45.9478, -36.9554, 1.03", "6.54023, -46.4395, -37.3247, 1.03", "7.79021, -46.7926, -37.6848, 0.44", "7.84527, -46.8071, -37.7028, 0.44", "9.99067, -47.4811, -38.9551, 0.74", "10.6323, -47.7692, -39.4257, 0.74", "10.674, -47.7944, -39.4601, 0.74", "10.9303, -47.992, -39.6875, 0.74", "10.9726, -48.0288, -39.7259, 0.74", "12.8846, -49.9508, -41.4758, 0.88", "13.9254, -51.1512, -42.5055, 0.88", "15.131, -52.538, -43.7402, 0.59", "15.5781, -53.0394, -44.1967, 0.88", "15.6155, -53.0819, -44.2342, 0.88", "16.4988, -54.1367, -45.1538, 0.52", "17.4534, -55.3743, -46.2512, 0.37", "17.8653, -55.9588, -46.8274, 0.37", "17.8915, -55.9983, -46.8629, 0.37", "18.393, -56.7332, -47.4944, 0.37", "19.3275, -58.1723, -48.5715, 0.37", "20.3896, -59.7888, -49.7133, 0.37", "20.4546, -59.8845, -49.7776, 0.37", "21.194, -60.8925, -50.5367, 0.37", "22.8797, -62.9719, -52.2546, 0.37", "23.4894, -63.6387, -52.8475, 0.37", "24.5805, -64.6976, -53.7919, 0.96", "25.1037, -65.1536, -54.2395, 0.96", "26.9174, -66.6564, -55.846, 0.44", "26.9612, -66.6893, -55.8864, 0.44", "27.4792, -67.0526, -56.325, 1.33", "28.0542, -67.442, -56.9374, 1.33", "30.1695, -68.891, -59.3005, 0.66", "30.2819, -68.9692, -59.4417, 0.66", "31.3851, -69.763, -60.8518, 1.55", "31.8992, -70.1394, -61.5277, 1.55", "35.8459, -73.0524, -66.9288, 0.81", "36.3211, -73.4078, -67.6019, 1.77", "38.2318, -74.8601, -70.3157, 0.44", "39.0088, -75.4668, -71.4109, 0.44", "39.0398, -75.4925, -71.455, 0.44", "40.0807, -76.428, -72.922, 0.88", "40.1154, -76.4675, -72.9651, 0.88", "40.9493, -77.535, -74.0736, 0.37", "41.3988, -78.163, -74.6063, 0.37", "42.0381, -79.0471, -75.3817, 0.74", "42.3206, -79.4463, -75.7821, 0.74", "43.0768, -80.555, -76.9483, 0.37", "43.1021, -80.5917, -76.9875, 0.37", "43.5628, -81.2761, -77.7326, 0.37", "44.2742, -82.286, -78.8484, 1.18", "46.3949, -85.1583, -82.0025, 0.44", "46.4231, -85.192, -82.0427, 0.44", "46.9367, -85.7606, -82.7608, 0.44", "47.8867, -86.7165, -84.0294, 0.44", "48.2408, -87.039, -84.4789, 0.44", "48.3519, -87.1294, -84.5995, 0.44", "49.9338, -88.1987, -85.9259, 0.37", "49.9776, -88.2297, -85.9678, 0.37", "50.5846, -88.6568, -86.6118, 0.37", "51.6144, -89.507, -87.9062, 0.37", "51.7158, -89.6045, -88.0515, 0.37", "52.0809, -90.0024, -88.5845, 0.37", "53.2121, -91.3946, -90.2669, 0.37", "53.243, -91.4345, -90.3123, 0.37", "54.5803, -93.1704, -92.1936, 0.15", "55.3117, -94.1094, -93.1457, 0.88", "55.6843, -94.5818, -93.5948, 0.88", "55.7133, -94.6208, -93.629, 0.88", "56.9101, -96.3505, -95.0777, 0.29", "58.3302, -98.4678, -96.7872, 0.29", "59.2999, -99.9473, -97.9417, 0.29", "60.6581, -102.069, -99.5953, 0.96", "62.4052, -104.82, -101.78, 0.22", "63.3891, -106.392, -103.026, 0.37", "64.4678, -108.163, -104.421, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-13.0137, -31.535, -22.4097, 0.74", "-13.7152, -33.7301, -23.9677, 0.74", "-13.7385, -33.8056, -24.007, 0.74", "-14.0572, -34.8668, -24.4705, 0.74", "-14.5898, -36.5663, -25.0691, 0.74", "-15.1388, -38.0322, -25.5808, 0.74", "-15.1785, -38.1175, -25.6167, 0.74", "-15.9463, -39.4002, -26.0745, 0.74", "-16.0473, -39.5477, -26.1361, 0.74", "-16.8323, -40.5196, -26.6288, 0.74", "-17.6333, -41.3436, -27.096, 0.74", "-18.7193, -42.5192, -27.8953, 0.44", "-18.7628, -42.5833, -27.938, 0.44", "-19.0734, -43.2878, -28.4511, 0.66", "-19.0898, -43.3478, -28.4946, 0.66", "-19.1892, -44.1094, -29.0849, 0.96", "-19.2721, -45.726, -30.3268, 0.96", "-19.2596, -47.2854, -31.6223, 1.18", "-19.1839, -49.144, -33.4953, 1.18", "-19.12, -50.7791, -35.4172, 1.18", "-19.0796, -52.3653, -37.5193, 0.96", "-19.0817, -52.4602, -37.6709, 0.96", "-19.2239, -53.6086, -39.9677, 0.88", "-19.5458, -54.8202, -42.9844, 0.44", "-19.7714, -55.1815, -44.1676, 0.66", "-19.7964, -55.2011, -44.2516, 0.66", "-20.5479, -55.5676, -46.0417, 0.66", "-21.171, -55.8364, -47.2847, 0.44", "-21.2258, -55.8578, -47.3687, 0.44", "-22.5305, -56.4648, -49.0541, 0.74", "-23.0407, -56.8008, -49.7597, 0.74", "-23.0822, -56.8418, -49.8274, 0.74", "-23.4379, -57.6845, -51.1404, 0.44", "-23.5856, -58.0974, -51.7665, 0.44", "-23.7072, -58.3953, -52.2354, 0.44", "-24.0666, -59.1744, -53.4245, 0.44", "-24.6549, -60.3896, -55.3365, 0.81", "-25.8652, -62.7494, -59.1334, 0.96", "-26.5168, -63.9996, -61.107, 1.77", "-27.4378, -65.8445, -63.9664, 1.47", "-27.8523, -66.6717, -65.179, 1.47", "-28.714, -68.4582, -67.4909, 1.47", "-28.736, -68.5211, -67.5497, 1.47", "-28.9526, -69.4368, -68.2063, 1.55", "-29.3102, -71.8194, -69.7472, 1.11", "-29.4361, -72.9067, -70.3583, 0.66", "-29.661, -74.7419, -71.3531, 0.37", "-30.0826, -77.4892, -72.634, 0.37", "-30.4679, -79.6737, -73.6577, 0.37", "-30.7863, -81.1399, -74.3513, 0.37", "-30.8239, -81.2798, -74.4225, 0.37", "-31.1565, -82.251, -75.0001, 0.37", "-31.7551, -83.7793, -76.268, 0.37", "-32.4004, -85.1187, -77.4241, 0.22", "-32.6559, -85.6531, -77.8473, 0.22", "-33.5914, -87.5639, -79.3067, 1.25", "-34.1842, -88.6886, -80.1515, 1.62", "-36.055, -92.0729, -82.7384, 0.22", "-37.5825, -94.5546, -84.7414, 0.22", "-37.6252, -94.6172, -84.7874, 0.22", "-38.3306, -95.6309, -85.4529, 0.22", "-38.3884, -95.6998, -85.4995, 0.22", "-39.9759, -97.4241, -86.854, 0.22", "-40.0887, -97.5376, -86.9571, 0.22", "-40.9165, -98.4999, -87.9566, 0.22", "-41.0598, -98.6792, -88.1329, 0.22", "-42.2735, -100.257, -89.5714, 0.22", "-42.936, -101.25, -90.3127, 0.22", "-43.6262, -102.399, -91.0202, 0.96", "-44.0991, -103.293, -91.4766, 1.25", "-44.4734, -104.123, -91.9113, 0.52", "-44.8444, -104.979, -92.3578, 0.15", "-45.7012, -107.18, -93.6452, 0.15", "-45.7644, -107.341, -93.7533, 0.15", "-46.3528, -108.761, -94.7389, 0.15", "-47.3478, -111.04, -96.4617, 0.15", "-47.5225, -111.43, -96.7836, 1.4", "-48.6221, -113.868, -98.9089, 1.4", "-49.0071, -114.714, -99.6785, 0.22", "-49.435, -115.682, -100.554, 0.22", "-49.6832, -116.279, -101.105, 0.22", "-50.2786, -117.704, -102.357, 0.22", "-50.3057, -117.767, -102.413, 0.22", "-50.9359, -119.107, -103.492, 1.03", "-51.3606, -120.017, -104.21, 1.33", "-52.0083, -121.498, -105.246, 0.74", "-52.3883, -122.377, -105.704, 0.22", "-52.8512, -123.39, -106.035, 0.22", "-53.4772, -124.647, -106.25, 0.22", "-53.5218, -124.722, -106.25, 0.22", "-53.9136, -125.35, -106.278, 1.03", "-54.5742, -126.332, -106.332, 0.74", "-55.1804, -127.216, -106.388, 0.74", "-55.9052, -128.277, -106.519, 0.44", "-56.7082, -129.446, -106.768, 0.22", "-58.4551, -131.92, -107.41, 0.15", "-58.7669, -132.345, -107.561, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-31.2662, -50.675, 4.0209, 0.52", "-31.352, -50.8088, 3.91075, 0.52", "-31.7329, -51.2387, 3.76974, 0.52", "-32.58, -52.0516, 3.72325, 0.44", "-32.9852, -52.4481, 3.75688, 0.44", "-33.0155, -52.4763, 3.76206, 0.44", "-33.7662, -53.1593, 3.91984, 0.44", "-34.6155, -53.8359, 4.12529, 0.44", "-34.7252, -53.9127, 4.15863, 0.44", "-35.5046, -54.3852, 4.40764, 0.44", "-36.067, -54.6918, 4.54654, 0.44", "-36.104, -54.7112, 4.55114, 0.44", "-36.9796, -55.1408, 4.55681, 0.44", "-37.4862, -55.376, 4.51394, 0.37", "-37.7738, -55.488, 4.49142, 0.37", "-38.2253, -55.6446, 4.48394, 0.66", "-38.8269, -55.8586, 4.49856, 0.66", "-39.6034, -56.1448, 4.56195, 0.29", "-40.0514, -56.3192, 4.64757, 0.29", "-40.9878, -56.7124, 4.87687, 0.29", "-41.8661, -57.1147, 5.14689, 0.29", "-41.9078, -57.1332, 5.16188, 0.29", "-42.0637, -57.1985, 5.22656, 0.96", "-42.6104, -57.4375, 5.46274, 0.37", "-43.1636, -57.7017, 5.73698, 0.37", "-43.1975, -57.7203, 5.75319, 0.37", "-44.1987, -58.2429, 6.16417, 0.37", "-44.3496, -58.3201, 6.22379, 0.74", "-44.5523, -58.4185, 6.298, 0.29", "-45.3865, -58.792, 6.56619, 0.29", "-45.8889, -58.9895, 6.74829, 0.29", "-50.9157, -62.1544, 7.45462, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-31.2662, -50.675, 4.0209, 0.81", "-31.4259, -50.5421, 4.00744, 0.81", "-31.7362, -50.2893, 3.98992, 0.44", "-32.2884, -49.7735, 3.9654, 0.44", "-33.0561, -49.0566, 3.93131, 0.44", "-33.6472, -48.5045, 3.90507, 0.44", "-34.5977, -47.6169, 3.86286, 0.22", "-34.9581, -47.278, 3.8594, 0.22", "-35.585, -46.7169, 3.89063, 0.22", "-42.0221, -41.0051, 3.62693, 0.22", "-49.4325, -36.7145, 2.4348, 0.22", "-55.8665, -30.9973, 2.21587, 0.22", "-61.2239, -24.3038, 2.48178, 0.22", "-67.183, -18.1205, 2.90353, 0.22", "-73.8843, -12.8168, 1.79378, 0.22", "-80.5259, -7.76961, -0.376595, 0.22", "-87.9177, -4.06518, -2.92854, 0.22", "-95.7452, -0.875128, -4.83962, 0.22", "-104.118, 1.32242, -5.52049, 0.22", "-112.708, 2.60726, -5.83342, 0.22", "-121.331, 3.67381, -6.08873, 0.22", "-129.745, 5.41077, -4.78519, 0.22", "-138.058, 6.19682, -2.36754, 0.22", "-146.144, 7.99805, 0.261559, 0.22", "-153.904, 10.8803, 2.88215, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-9.00238, -74.6537, 3.39029, 0.37", "-12.286, -74.6277, 2.68157, 0.37", "-12.4943, -74.6282, 2.65013, 0.37", "-13.7993, -74.6501, 2.50723, 0.37", "-14.6586, -74.6861, 2.49621, 0.22", "-15.6537, -74.7278, 2.48343, 0.22", "-17.1199, -74.7892, 2.46462, 0.22", "-17.5097, -74.8124, 2.52957, 0.44", "-18.4589, -74.8892, 2.68517, 0.44", "-19.8838, -75.0432, 2.90499, 0.22", "-29.554, -73.8977, 0.955922, 0.22", "-38.937, -73.9424, -2.30304, 0.22", "-48.5542, -72.3425, -4.17891, 0.22", "-58.2212, -70.6072, -5.62361, 0.22" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-9.00238, -74.6537, 3.39029, 1.33", "-8.62833, -75.2462, 3.21476, 1.33", "-8.28148, -75.8917, 3.01356, 0.88", "-8.26403, -75.9346, 3.00386, 0.88", "-7.89884, -77.0441, 2.80185, 0.66", "-7.51334, -78.4521, 2.58522, 0.66", "-7.14632, -80.0016, 2.38058, 0.66", "-6.87264, -81.3734, 2.22761, 0.66", "-6.55953, -83.2112, 2.0516, 0.96", "-6.442, -84.1213, 1.97903, 1.69", "-6.3785, -84.9252, 1.93156, 1.25", "-6.34204, -85.7466, 1.8946, 0.96", "-6.33947, -85.8014, 1.89202, 0.96", "-6.22624, -86.8864, 1.84627, 0.59", "-5.93926, -88.7678, 1.73895, 0.59", "-5.58303, -90.5828, 1.6297, 0.96", "-5.16666, -92.4297, 1.51711, 1.11", "-4.90156, -93.5812, 1.45309, 0.74", "-4.64852, -94.6582, 1.40386, 0.74", "-4.51331, -95.2989, 1.38025, 0.52", "-4.35094, -96.1389, 1.35807, 0.52", "-4.33734, -96.2558, 1.35626, 0.52", "-4.37504, -97.398, 1.31563, 0.52", "-4.38559, -97.4694, 1.31077, 0.52", "-4.62244, -98.7523, 1.23126, 0.44", "-4.63105, -98.8144, 1.22997, 0.44", "-4.66274, -99.4068, 1.24629, 0.44", "-4.63681, -101.132, 1.32334, 0.44", "-4.63194, -101.186, 1.32808, 0.44", "-4.51193, -102.101, 1.43252, 0.88", "-4.2601, -103.701, 1.66737, 0.88", "-4.03627, -105.45, 1.98279, 0.88", "-4.03177, -105.504, 1.9944, 0.88", "-4.01484, -106.453, 2.27313, 1.25", "-4.04133, -107.114, 2.48395, 1.33", "-4.12842, -107.898, 2.75389, 0.96", "-4.31412, -108.881, 3.13545, 0.52", "-4.4847, -109.532, 3.34778, 0.52", "-4.77736, -110.531, 3.59858, 1.18", "-5.06073, -111.401, 3.74466, 1.18", "-5.08009, -111.461, 3.75144, 1.18", "-5.36987, -112.384, 3.77372, 0.96", "-5.72002, -113.502, 3.69786, 0.96", "-5.91144, -114.126, 3.6044, 1.25", "-6.09755, -114.84, 3.44054, 1.03", "-6.10896, -114.9, 3.4252, 1.03", "-6.20223, -115.686, 3.21446, 0.88", "-6.23019, -116.597, 3.00535, 0.88", "-6.19647, -117.456, 2.85219, 0.59", "-6.1272, -118.54, 2.68509, 0.52", "-6.09462, -118.948, 2.63338, 0.52", "-6.08575, -119.078, 2.62301, 0.52", "-6.01126, -120.218, 2.59614, 0.52", "-6.00985, -120.296, 2.60068, 0.52", "-6.06136, -121.282, 2.73481, 0.74", "-6.06819, -121.336, 2.74373, 0.74", "-6.1746, -122.129, 2.86099, 0.81", "-6.23221, -122.589, 2.91714, 0.81", "-6.31887, -123.286, 2.97486, 0.29", "-6.38156, -123.854, 3.01593, 0.29", "-6.38632, -123.916, 3.01942, 0.29", "-6.41525, -124.724, 3.04193, 0.29", "-6.41438, -124.787, 3.04156, 0.29", "-6.35293, -125.605, 2.99769, 0.29", "-6.27869, -126.306, 2.89985, 0.29", "-6.23684, -126.636, 2.8407, 0.88", "-6.16548, -127.134, 2.74251, 0.88", "-6.14228, -127.291, 2.71045, 0.88", "-6.06172, -127.874, 2.63634, 0.59", "-5.92678, -128.803, 2.55656, 0.59", "-5.92075, -128.865, 2.55458, 0.59", "-5.8312, -130.32, 2.58481, 0.59", "-5.80571, -130.954, 2.61877, 0.29", "-5.78259, -132.331, 2.72403, 0.29", "-5.78508, -132.503, 2.74135, 0.29", "-5.83655, -133.819, 2.92543, 0.29", "-5.93986, -135.099, 3.10811, 0.37", "-6.01499, -135.661, 3.19076, 1.18", "-6.17538, -136.628, 3.32111, 1.33", "-6.32786, -137.41, 3.40133, 0.74", "-6.55307, -138.459, 3.50851, 0.52", "-6.73916, -139.256, 3.58568, 0.52", "-6.89105, -139.852, 3.63341, 0.52", "-6.90677, -139.913, 3.63763, 0.52", "-7.11427, -140.745, 3.67774, 0.52", "-7.15325, -140.913, 3.68095, 0.52", "-7.2914, -141.528, 3.68418, 0.52", "-7.38395, -141.986, 3.7002, 0.88", "-7.50589, -142.618, 3.72988, 1.03", "-7.62819, -143.305, 3.76633, 0.59", "-7.63686, -143.36, 3.76952, 0.59", "-7.77412, -144.489, 3.79257, 0.29", "-7.83705, -145.288, 3.78108, 0.29", "-7.83813, -145.36, 3.77667, 0.29", "-7.79784, -146.171, 3.68941, 0.29", "-7.79067, -146.341, 3.65618, 0.29", "-7.78342, -147.068, 3.46259, 0.29", "-7.78558, -147.12, 3.44469, 0.29", "-7.87229, -147.78, 3.20973, 0.29", "-7.88312, -147.831, 3.19355, 0.29", "-8.14334, -148.838, 2.94176, 0.29", "-8.20911, -149.071, 2.90458, 0.29", "-8.42249, -149.792, 2.83254, 0.29", "-8.5367, -150.206, 2.80215, 1.03", "-8.68023, -150.787, 2.7746, 1.47", "-8.82339, -151.527, 2.75539, 0.37", "-8.97885, -152.66, 2.77854, 0.37", "-8.98653, -152.714, 2.78052, 0.37", "-9.06419, -153.241, 2.80877, 0.81", "-9.13776, -153.694, 2.84204, 0.88", "-9.21306, -154.089, 2.87505, 0.88", "-9.39775, -154.974, 2.95484, 0.22", "-9.58763, -155.875, 3.04149, 0.22", "-9.59908, -155.937, 3.04649, 0.22", "-9.65001, -156.217, 3.0676, 0.37", "-9.73768, -156.808, 3.09954, 0.37", "-9.84321, -157.752, 3.12716, 0.29", "-9.84595, -157.815, 3.1264, 0.29", "-9.83088, -158.794, 3.08827, 0.29", "-9.82483, -158.904, 3.08382, 0.29", "-9.71642, -160.043, 3.0306, 0.22", "-9.66761, -160.445, 3.01016, 0.66", "-9.58897, -161.11, 2.98147, 0.81", "-9.53258, -161.638, 2.9649, 0.96", "-9.46025, -162.249, 2.97796, 0.37", "-9.45234, -162.304, 2.98055, 0.37", "-9.28973, -163.327, 3.04117, 0.15", "-9.23196, -163.744, 3.06861, 0.74", "-9.18307, -164.313, 3.11344, 0.74", "-9.15979, -165.219, 3.1915, 0.22", "-9.18334, -165.928, 3.25375, 0.22", "-9.24076, -166.531, 3.31438, 0.22", "-9.31624, -166.957, 3.36478, 0.59", "-9.46064, -167.53, 3.43061, 0.59", "-9.61178, -167.953, 3.47823, 0.22", "-9.67094, -168.069, 3.49229, 0.22", "-9.96609, -168.56, 3.58787, 0.22", "-10.0918, -168.765, 3.63962, 0.44", "-10.2578, -169.051, 3.71346, 0.44", "-10.2802, -169.109, 3.72466, 0.44", "-10.4654, -169.788, 3.82806, 0.22", "-10.5176, -170.01, 3.82797, 0.22", "-10.6091, -170.486, 3.76222, 0.22", "-10.6296, -170.599, 3.73893, 0.22", "-10.8785, -171.986, 3.39025, 0.22", "-10.8919, -172.059, 3.36924, 0.22", "-11.0833, -173.231, 2.9705, 0.22", "-11.2928, -174.459, 2.51481, 0.22", "-11.3326, -174.68, 2.42256, 0.52", "-11.3433, -174.729, 2.40024, 0.52", "-11.439, -175.012, 2.24249, 0.52", "-13.0767, -182.652, 1.49847, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "52.8979, -72.9047, 7.71275, 0.44", "52.7854, -73.2781, 7.90729, 0.44", "52.8205, -73.3752, 7.93166, 0.44", "52.9972, -73.8067, 8.03272, 0.44", "53.1015, -74.0528, 8.08804, 0.44", "53.3416, -74.6092, 8.20524, 0.44", "53.3626, -74.657, 8.21482, 0.44", "54.4691, -77.0811, 8.62367, 0.44", "54.4925, -77.1283, 8.63076, 0.44", "54.6582, -77.4349, 8.67143, 1.33", "55.0753, -78.1142, 8.73812, 1.4", "55.2713, -78.376, 8.76696, 0.37", "55.3058, -78.4165, 8.77194, 0.37", "55.8276, -78.9086, 8.81947, 0.29", "55.8677, -78.9441, 8.82248, 0.29", "56.9905, -79.8469, 8.86255, 0.29", "58.0513, -80.6443, 8.85838, 0.29", "58.0947, -80.6761, 8.85712, 0.29", "59.9198, -81.9876, 8.76674, 0.29", "60.0224, -82.0572, 8.76084, 0.29", "61.2321, -82.8449, 8.67718, 0.52", "62.4837, -83.6155, 8.56122, 0.29", "62.9444, -83.8843, 8.50088, 0.59", "63.3203, -84.0835, 8.45006, 0.59", "64.4227, -84.5819, 8.29826, 0.44", "64.5719, -84.6467, 8.27795, 0.44", "65.1734, -84.9789, 8.16706, 0.29", "65.2632, -85.0354, 8.14724, 0.29", "65.9171, -85.4706, 7.99185, 0.29", "66.0514, -85.5677, 7.95684, 0.29", "66.6352, -86.0402, 7.78372, 0.29", "69.2864, -88.3066, 6.99943, 0.29", "69.3307, -88.347, 6.98621, 0.29", "75.5756, -92.7535, 6.10288, 0.29" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "52.8979, -72.9047, 7.71275, 0.52", "52.7496, -72.7127, 7.71602, 0.52", "52.6966, -72.6504, 7.72696, 0.52", "51.9664, -71.8295, 7.9397, 0.37", "50.8268, -70.6279, 8.30988, 0.37", "49.8798, -69.7023, 8.58022, 0.59", "48.7279, -68.7529, 8.74129, 0.59", "47.4047, -67.7955, 8.79947, 0.22", "47.3447, -67.7572, 8.79811, 0.22", "46.0136, -67.0686, 8.71587, 0.22", "45.1074, -66.6972, 8.61026, 0.22", "42.5928, -65.8258, 8.10388, 0.22", "42.2726, -65.73, 8.00588, 0.66", "42.1987, -65.7068, 7.97477, 0.66", "41.1377, -65.4004, 7.50158, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "70.0063, -93.5673, 0.521037, 0.29", "75.5414, -103.758, -0.954405, 0.29", "81.3732, -113.894, -1.04911, 0.29", "87.6132, -123.797, -1.03733, 0.29", "93.5265, -133.83, 0.0922244, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "70.0063, -93.5673, 0.521037, 0.74", "73.2734, -99.1658, -0.573966, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-50.9157, -62.1544, 7.45462, 0.37", "-59.1742, -65.6711, 11.6021, 0.37", "-66.7822, -70.6445, 15.3991, 0.37", "-74.3979, -75.0471, 19.8624, 0.37", "-81.9525, -79.808, 24.0323, 0.37", "-90.3013, -84.0471, 27.1663, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-50.9157, -62.1544, 7.45462, 0.29", "-57.6842, -68.0822, 5.23441, 0.37", "-64.1904, -74.6222, 4.87946, 0.37", "-72.1306, -79.4288, 4.75395, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-58.2212, -70.6072, -5.62361, 0.37", "-67.0782, -70.1876, -10.1563, 0.37", "-75.4913, -70.6536, -15.4657, 0.37", "-83.9206, -73.0909, -20.1504, 0.37", "-93.2456, -75.325, -22.7895, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-58.2212, -70.6072, -5.62361, 0.29", "-67.8677, -69.9432, -5.23465, 0.37", "-77.3075, -70.0926, -3.10685, 0.37", "-86.5355, -69.3949, -0.280405, 0.37", "-94.9258, -67.6195, 4.18223, 0.37", "-101.818, -64.8397, 10.3402, 0.37", "-107.103, -60.4832, 17.0918, 0.37", "-112.159, -57.5491, 24.7659, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "41.1377, -65.4004, 7.50158, 0.37", "41.1651, -65.5015, 7.49688, 0.37", "41.4634, -66.4856, 7.37095, 0.37", "41.4907, -66.5704, 7.35722, 0.37", "41.8719, -67.7554, 7.16541, 0.37", "41.8845, -67.7946, 7.15907, 0.37", "42.3956, -69.3835, 6.90189, 0.37", "42.4118, -69.4286, 6.89413, 0.37", "42.6689, -70.0046, 6.76602, 0.37", "45.4105, -76.3859, 6.70547, 0.37", "47.1329, -83.0828, 7.20879, 0.37", "48.907, -89.7338, 8.07289, 0.37", "50.8093, -96.0365, 10.334, 0.37", "52.8919, -102.306, 12.5323, 0.37", "53.9465, -108.699, 15.0663, 0.37", "54.2152, -115.492, 16.4291, 0.37", "55.6582, -122.147, 17.7645, 0.37", "57.1866, -128.736, 19.337, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "41.1377, -65.4004, 7.50158, 0.37", "41.0385, -65.3761, 7.46321, 0.37", "40.9648, -65.3609, 7.44651, 0.37", "39.7507, -65.1274, 7.23706, 0.22", "39.357, -65.0259, 7.18647, 0.22", "38.3466, -64.7243, 7.08143, 0.22", "38.2639, -64.695, 7.07525, 0.22", "37.0656, -64.223, 7.02633, 0.22", "36.9136, -64.1591, 7.02505, 0.22", "35.9184, -63.7181, 7.04628, 0.22", "35.6519, -63.5974, 7.0461, 0.22", "34.547, -63.0746, 7.02727, 0.22", "34.4207, -63.0129, 7.02456, 0.22", "32.5335, -62.0624, 6.96126, 0.22", "32.3386, -61.9653, 6.95273, 0.22", "30.4964, -61.0549, 6.85751, 0.22", "30.4207, -61.0108, 6.85402, 0.22", "29.1674, -60.1698, 6.81118, 0.22", "28.9238, -59.957, 6.80838, 0.22", "28.2982, -59.2302, 6.82088, 0.22", "27.9952, -58.8115, 6.83513, 0.22", "27.1204, -57.3549, 6.89714, 0.22", "27.0437, -57.219, 6.90327, 0.22", "26.1203, -55.4271, 6.99126, 0.22", "26.0783, -55.3367, 6.99394, 0.22", "25.553, -54.0949, 7.0061, 0.22", "25.3791, -53.6793, 6.99498, 0.22", "24.9221, -52.6428, 6.91649, 0.22", "24.8561, -52.4955, 6.90186, 0.22", "24.3435, -51.4482, 6.77847, 0.22", "24.3072, -51.3821, 6.77074, 0.22", "23.998, -50.8664, 6.71111, 0.29", "23.7067, -50.4544, 6.64819, 0.29", "22.9814, -49.5934, 6.49514, 0.29", "22.4926, -49.0781, 6.40558, 0.29", "22.0714, -48.6833, 6.3432, 0.29", "21.9916, -48.6114, 6.33149, 0.29", "21.1007, -47.839, 6.20322, 0.29", "21.0347, -47.7827, 6.19378, 0.29", "20.2164, -47.0788, 6.08222, 0.29", "19.9606, -46.8573, 6.05249, 0.29", "19.3046, -46.307, 6.0019, 0.29", "18.903, -45.9763, 5.99153, 0.44", "18.555, -45.6612, 6.00667, 0.52", "18.1554, -45.2653, 6.0218, 0.52", "18.1043, -45.2088, 6.02334, 0.52", "17.8336, -44.8698, 6.02889, 0.29", "17.5676, -44.4972, 6.02689, 0.29", "16.868, -43.4774, 6.0078, 0.29", "16.8217, -43.4171, 6.00662, 0.29", "16.3836, -42.8906, 5.99571, 0.29", "16.1986, -42.6681, 5.98549, 0.29", "15.9709, -42.4032, 5.96844, 0.29", "15.8221, -42.2275, 5.95588, 0.29", "15.0591, -41.3509, 5.89073, 0.29", "14.9012, -41.1714, 5.87924, 0.29", "14.3073, -40.4708, 5.84023, 0.29", "14.0616, -40.1693, 5.82658, 0.29", "13.1413, -38.9836, 5.78606, 0.29", "13.0453, -38.8522, 5.78247, 0.29", "12.5013, -38.0595, 5.76501, 0.52", "12.1611, -37.5624, 5.75267, 0.52", "11.918, -37.1812, 5.7426, 0.52", "11.7486, -36.8714, 5.72913, 0.37", "11.0372, -35.3685, 5.53687, 0.37", "11.009, -35.2994, 5.5243, 0.37", "10.8158, -34.6802, 5.38278, 0.52", "10.5566, -33.7103, 5.13006, 0.81", "10.3384, -32.8636, 4.89637, 0.81", "10.0117, -31.7459, 4.59731, 0.37", "9.96033, -31.5967, 4.56133, 0.37", "9.66623, -30.8456, 4.39676, 0.37", "9.5132, -30.5338, 4.33382, 0.37", "9.02366, -29.6595, 4.16519, 0.29", "8.28753, -28.3967, 3.95301, 0.29", "7.13551, -26.4774, 3.69336, 0.29", "7.06912, -26.3667, 3.6782, 0.29", "6.07226, -24.7019, 3.44544, 0.29", "6.02013, -24.6076, 3.43509, 0.29", "5.48761, -23.5333, 3.34614, 0.29", "5.35207, -23.2259, 3.33658, 0.29", "4.96173, -22.2484, 3.36459, 0.29", "4.86332, -21.9519, 3.38025, 0.29", "4.53986, -20.7126, 3.47531, 0.29", "4.51748, -20.6295, 3.48016, 0.29", "3.97354, -18.6255, 3.57176, 0.29", "3.93311, -18.4691, 3.57614, 0.29", "3.6056, -17.1739, 3.59016, 0.29", "3.56855, -17.0166, 3.58809, 0.29", "2.96496, -14.1915, 3.46298, 0.29", "2.93764, -14.0326, 3.45526, 0.29", "2.83762, -13.2546, 3.41395, 0.29", "2.81477, -13.0951, 3.40571, 0.29", "2.60822, -11.9409, 3.32029, 0.29", "2.56202, -11.7095, 3.29902, 0.29", "2.15329, -9.86846, 3.09543, 0.29", "2.07397, -9.55904, 3.0596, 0.29", "1.6415, -8.03257, 2.88403, 0.29", "1.24543, -6.77382, 2.82883, 0.29", "1.18697, -6.6052, 2.82299, 0.29", "0.724159, -5.36477, 2.79582, 0.29", "0.661126, -5.21553, 2.79673, 0.29", "-0.0876012, -3.34498, 2.86689, 0.29", "-0.624562, -1.7281, 3.05514, 0.29", "-5.75005, 7.67455, 1.49489, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-112.159, -57.5491, 24.7659, 0.37", "-121.153, -54.5377, 26.2319, 0.37", "-130.266, -52.3551, 28.3625, 0.37", "-139.072, -49.566, 30.9857, 0.37", "-148.07, -48.0632, 34.0288, 0.37", "-156.693, -47.0179, 38.1644, 0.37", "-164.609, -45.1154, 43.2797, 0.37", "-173.031, -44.7708, 47.9211, 0.37", "-181.75, -43.6866, 51.8376, 0.37", "-190.387, -42.3727, 55.8629, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-112.159, -57.5491, 24.7659, 0.29", "-117.314, -58.9711, 31.6954, 0.37", "-122.016, -61.5048, 38.6341, 0.37", "-128.154, -64.2059, 44.2623, 0.37", "-134.484, -66.2353, 49.9623, 0.37", "-140.536, -68.2769, 55.9528, 0.37", "-145.628, -70.5743, 62.6954, 0.37", "-150.845, -71.607, 69.6446, 0.37", "-155.513, -72.7811, 76.9507, 0.37", "-160.486, -73.3036, 84.1241, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_69", "dend_58", "dend_45", "dend_24", "dend_0", "dend_73", "dend_70", "dend_68", "dend_59", "dend_49", "dend_46", "dend_30", "dend_25", "dend_21", "dend_1", "dend_77", "dend_74", "dend_72", "dend_71", "dend_63", "dend_60", "dend_55", "dend_50", "dend_48", "dend_47", "dend_34", "dend_31", "dend_27", "dend_26", "dend_23", "dend_22", "dend_16", "dend_3", "dend_2", "dend_79", "dend_78", "dend_76", "dend_75", "dend_65", "dend_64", "dend_62", "dend_61", "dend_57", "dend_56", "dend_52", "dend_51", "dend_44", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_18", "dend_17", "dend_11", "dend_4", "dend_81", "dend_80", "dend_67", "dend_66", "dend_54", "dend_53", "dend_39", "dend_36", "dend_20", "dend_19", "dend_13", "dend_12", "dend_6", "dend_5", "dend_43", "dend_40", "dend_38", "dend_37", "dend_15", "dend_14", "dend_10", "dend_7", "dend_42", "dend_41", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_69", "dend_58", "dend_45", "dend_24", "dend_0", "dend_73", "dend_70", "dend_68", "dend_59", "dend_49", "dend_46", "dend_30", "dend_25", "dend_21", "dend_1", "dend_77", "dend_74", "dend_72", "dend_71", "dend_63", "dend_60", "dend_55", "dend_50", "dend_48", "dend_47", "dend_34", "dend_31", "dend_27", "dend_26", "dend_23", "dend_22", "dend_16", "dend_3", "dend_2", "dend_79", "dend_78", "dend_76", "dend_75", "dend_65", "dend_64", "dend_62", "dend_61", "dend_57", "dend_56", "dend_52", "dend_51", "dend_44", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_18", "dend_17", "dend_11", "dend_4", "dend_81", "dend_80", "dend_67", "dend_66", "dend_54", "dend_53", "dend_39", "dend_36", "dend_20", "dend_19", "dend_13", "dend_12", "dend_6", "dend_5", "dend_43", "dend_40", "dend_38", "dend_37", "dend_15", "dend_14", "dend_10", "dend_7", "dend_42", "dend_41", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_69", "dend_58", "dend_45", "dend_24", "dend_0", "axon_0", "dend_73", "dend_70", "dend_68", "dend_59", "dend_49", "dend_46", "dend_30", "dend_25", "dend_21", "dend_1", "axon_1", "dend_77", "dend_74", "dend_72", "dend_71", "dend_63", "dend_60", "dend_55", "dend_50", "dend_48", "dend_47", "dend_34", "dend_31", "dend_27", "dend_26", "dend_23", "dend_22", "dend_16", "dend_3", "dend_2", "dend_79", "dend_78", "dend_76", "dend_75", "dend_65", "dend_64", "dend_62", "dend_61", "dend_57", "dend_56", "dend_52", "dend_51", "dend_44", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_18", "dend_17", "dend_11", "dend_4", "dend_81", "dend_80", "dend_67", "dend_66", "dend_54", "dend_53", "dend_39", "dend_36", "dend_20", "dend_19", "dend_13", "dend_12", "dend_6", "dend_5", "dend_43", "dend_40", "dend_38", "dend_37", "dend_15", "dend_14", "dend_10", "dend_7", "dend_42", "dend_41", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_81", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_NBC_0de57faa51_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_73, id: dend_73, parent: dend_69
create dend_73
public dend_73
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_24
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_0
create dend_21
public dend_21
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_73
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_63, id: dend_63, parent: dend_59
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_49
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_44, id: dend_44, parent: dend_34
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, axon_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, axon_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_0, dend_0, dend_0, axon_0, axon_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_37, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_69(0), soma_0(0.499998293907579)
    connect dend_58(0), soma_0(0.499998293907579)
    connect dend_45(0), soma_0(0.499998293907579)
    connect dend_24(0), soma_0(0.499998293907579)
    connect dend_0(0), soma_0(0.499998293907579)
    connect axon_0(0), soma_0(1.0)
    connect dend_73(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_63(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_55(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_44(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.873478, -12.1204, -1.0889, 3.2264 ) }
    soma_0 { pt3dadd( -0.698655, -10.9282, -0.984246, 5.56239 ) }
    soma_0 { pt3dadd( -0.523832, -9.73588, -0.879587, 7.69458 ) }
    soma_0 { pt3dadd( -0.349009, -8.5436, -0.774929, 10.6304 ) }
    soma_0 { pt3dadd( -0.174186, -7.35132, -0.670271, 12.3889 ) }
    soma_0 { pt3dadd( 6.37175E-4, -6.15904, -0.565612, 13.0429 ) }
    soma_0 { pt3dadd( 0.17546, -4.96676, -0.460954, 13.3962 ) }
    soma_0 { pt3dadd( 0.350283, -3.77448, -0.356295, 13.6031 ) }
    soma_0 { pt3dadd( 0.525106, -2.5822, -0.251637, 13.7768 ) }
    soma_0 { pt3dadd( 0.699929, -1.38992, -0.146979, 13.7572 ) }
    soma_0 { pt3dadd( 0.874752, -0.197642, -0.0423202, 13.4519 ) }
    soma_0 { pt3dadd( 1.04958, 0.994638, 0.0623382, 13.1714 ) }
    soma_0 { pt3dadd( 1.2244, 2.18692, 0.166997, 12.4149 ) }
    soma_0 { pt3dadd( 1.39922, 3.3792, 0.271655, 11.5059 ) }
    soma_0 { pt3dadd( 1.57404, 4.57148, 0.376313, 10.5982 ) }
    soma_0 { pt3dadd( 1.74887, 5.76376, 0.480972, 9.84377 ) }
    soma_0 { pt3dadd( 1.92369, 6.95604, 0.58563, 9.16735 ) }
    soma_0 { pt3dadd( 2.09851, 8.14832, 0.690289, 7.18404 ) }
    soma_0 { pt3dadd( 2.27334, 9.34059, 0.794947, 5.28238 ) }
    soma_0 { pt3dadd( 2.44816, 10.5329, 0.899606, 3.93844 ) }
    soma_0 { pt3dadd( 2.62298, 11.7252, 1.00426, 2.5386 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 21/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 3.61398, 11.6299, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.61398, 11.6299, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.79979, 12.4527, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.83777, 12.6209, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 4.07319, 13.6633, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 4.29105, 14.6279, -0.788928, 2.06 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 27/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.65398, 9.68973, -2.84893, 1.77 ) }
    dend_58 { pt3dadd( 4.4202, 11.2052, -5.32574, 1.62 ) }
    dend_58 { pt3dadd( 5.07442, 12.1959, -6.69103, 1.62 ) }
    dend_58 { pt3dadd( 5.09915, 12.2274, -6.75042, 1.62 ) }
    dend_58 { pt3dadd( 5.67996, 12.8431, -8.15583, 1.47 ) }
    dend_58 { pt3dadd( 5.73865, 12.8916, -8.28961, 1.47 ) }
    dend_58 { pt3dadd( 7.16058, 13.7639, -11.3599, 1.47 ) }
    dend_58 { pt3dadd( 8.47587, 14.1486, -13.8558, 1.92 ) }
    dend_58 { pt3dadd( 10.8694, 14.6083, -18.3863, 1.92 ) }
    dend_58 { pt3dadd( 11.6766, 14.7171, -19.9326, 1.92 ) }
    dend_58 { pt3dadd( 12.4953, 14.7446, -21.5434, 1.92 ) }
    dend_58 { pt3dadd( 13.2801, 14.7274, -23.1147, 1.84 ) }
    dend_58 { pt3dadd( 14.3863, 14.5499, -25.3677, 1.84 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 40/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.85602, 7.83723, 2.46107, 1.62 ) }
    dend_45 { pt3dadd( -2.85602, 7.83723, 2.46107, 1.62 ) }
    dend_45 { pt3dadd( -3.43451, 8.42382, 2.66455, 1.62 ) }
    dend_45 { pt3dadd( -3.48654, 8.47588, 2.68155, 1.62 ) }
    dend_45 { pt3dadd( -4.74045, 9.78355, 3.0711, 1.84 ) }
    dend_45 { pt3dadd( -5.7559, 10.8583, 3.37912, 1.84 ) }
    dend_45 { pt3dadd( -6.84836, 12.0145, 3.71051, 1.62 ) }
    dend_45 { pt3dadd( -8.05821, 13.2993, 4.0851, 1.62 ) }
    dend_45 { pt3dadd( -9.44791, 14.7838, 4.53103, 1.92 ) }
    dend_45 { pt3dadd( -10.158, 15.5516, 4.76096, 1.92 ) }
    dend_45 { pt3dadd( -10.2069, 15.6067, 4.77716, 1.92 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.07398, -8.58177, 1.15107, 2.21 ) }
    dend_24 { pt3dadd( 6.07398, -8.58177, 1.15107, 2.21 ) }
    dend_24 { pt3dadd( 6.6335, -9.54442, 2.61259, 1.84 ) }
    dend_24 { pt3dadd( 7.36594, -10.8046, 4.52581, 1.84 ) }
    dend_24 { pt3dadd( 7.38797, -10.8425, 4.58337, 1.84 ) }
    dend_24 { pt3dadd( 8.14502, -12.1451, 6.56089, 1.62 ) }
    dend_24 { pt3dadd( 8.9409, -13.5144, 8.63982, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.38602, -10.8438, -1.22893, 3.24 ) }
    dend_0 { pt3dadd( -2.38602, -10.8438, -1.22893, 3.24 ) }
    dend_0 { pt3dadd( -2.92887, -12.55, -1.20713, 3.24 ) }
    dend_0 { pt3dadd( -3.58505, -14.6125, -1.18078, 2.87 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 62/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.62298, 11.7252, 1.00426, 0.668195 ) }
    axon_0 { pt3dadd( 4.79915, 26.5665, 1.00426, 0.668195 ) }
    axon_0 { pt3dadd( 6.97531, 41.4078, 1.00426, 0.668195 ) }
    // Section: dend_73, id: dend_73, parent: dend_69 (entry count 65/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 4.29105, 14.6279, -0.788928, 1.47 ) }
    dend_73 { pt3dadd( 5.16852, 15.5223, 0.328823, 1.47 ) }
    dend_73 { pt3dadd( 7.62501, 18.0664, 2.66496, 1.18 ) }
    dend_73 { pt3dadd( 7.6696, 18.1155, 2.69606, 1.18 ) }
    dend_73 { pt3dadd( 8.77839, 19.2981, 3.15477, 1.18 ) }
    dend_73 { pt3dadd( 10.0588, 20.6269, 3.45231, 1.18 ) }
    dend_73 { pt3dadd( 10.1022, 20.6716, 3.45868, 1.18 ) }
    dend_73 { pt3dadd( 11.3075, 21.9223, 3.30803, 1.4 ) }
    dend_73 { pt3dadd( 12.4893, 23.1431, 2.91259, 1.4 ) }
    dend_73 { pt3dadd( 13.7788, 24.5705, 2.47335, 1.18 ) }
    dend_73 { pt3dadd( 14.6115, 25.5808, 2.17229, 1.18 ) }
    dend_73 { pt3dadd( 14.6619, 25.646, 2.15993, 1.18 ) }
    dend_73 { pt3dadd( 15.3993, 26.6216, 2.05161, 1.18 ) }
    dend_73 { pt3dadd( 15.449, 26.6883, 2.05532, 1.18 ) }
    dend_73 { pt3dadd( 16.4043, 27.9666, 2.36738, 1.18 ) }
    dend_73 { pt3dadd( 16.4522, 28.0288, 2.39543, 1.18 ) }
    dend_73 { pt3dadd( 17.8581, 29.6817, 3.2503, 1.18 ) }
    dend_73 { pt3dadd( 17.8972, 29.7245, 3.27412, 1.18 ) }
    dend_73 { pt3dadd( 18.9002, 30.7308, 3.8299, 1.18 ) }
    dend_73 { pt3dadd( 19.8325, 31.6349, 4.30141, 1.18 ) }
    dend_73 { pt3dadd( 21.4688, 33.1607, 5.0787, 1.03 ) }
    dend_73 { pt3dadd( 22.8483, 34.516, 5.69526, 1.03 ) }
    dend_73 { pt3dadd( 22.8894, 34.5595, 5.71399, 1.03 ) }
    dend_73 { pt3dadd( 24.1134, 35.8847, 6.24938, 0.81 ) }
    dend_73 { pt3dadd( 25.0965, 36.9979, 6.64819, 0.81 ) }
    dend_73 { pt3dadd( 25.1346, 37.0446, 6.66487, 0.81 ) }
    dend_73 { pt3dadd( 26.5203, 38.9109, 7.26805, 1.03 ) }
    dend_73 { pt3dadd( 27.8187, 40.8575, 7.9888, 1.03 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 93/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 4.29105, 14.6279, -0.788928, 1.11 ) }
    dend_70 { pt3dadd( 2.22203, 18.383, 0.131563, 1.11 ) }
    dend_70 { pt3dadd( 1.67806, 19.6129, 0.219347, 1.11 ) }
    dend_70 { pt3dadd( 1.15385, 20.7981, 0.303944, 1.03 ) }
    dend_70 { pt3dadd( 0.22883, 22.8895, 0.453222, 1.25 ) }
    dend_70 { pt3dadd( 0.190606, 22.9759, 0.45939, 1.25 ) }
    dend_70 { pt3dadd( -0.863393, 25.3589, 0.629483, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_70 { pt3dadd( -1.47821, 27.0137, 0.315367, 1.47 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 1/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 14.3863, 14.5499, -25.3677, 1.55 ) }
    dend_68 { pt3dadd( 14.7503, 10.7503, -29.3246, 1.55 ) }
    dend_68 { pt3dadd( 14.9123, 9.65206, -30.172, 0.81 ) }
    dend_68 { pt3dadd( 15.0607, 8.63692, -30.7691, 0.81 ) }
    dend_68 { pt3dadd( 15.2628, 7.157, -31.5314, 0.81 ) }
    dend_68 { pt3dadd( 15.2684, 7.06498, -31.582, 0.81 ) }
    dend_68 { pt3dadd( 15.228, 5.90012, -32.3755, 1.11 ) }
    dend_68 { pt3dadd( 15.1488, 5.07302, -32.8227, 0.81 ) }
    dend_68 { pt3dadd( 14.8373, 4.02538, -33.7259, 0.59 ) }
    dend_68 { pt3dadd( 14.7906, 3.93341, -33.833, 0.59 ) }
    dend_68 { pt3dadd( 13.9751, 2.70511, -35.4858, 0.59 ) }
    dend_68 { pt3dadd( 12.9657, 1.27898, -37.4344, 1.25 ) }
    dend_68 { pt3dadd( 12.9357, 1.23987, -37.4903, 1.25 ) }
    dend_68 { pt3dadd( 11.7958, -0.209298, -39.5429, 1.18 ) }
    dend_68 { pt3dadd( 10.5572, -1.77141, -41.7815, 0.81 ) }
    dend_68 { pt3dadd( 9.32634, -3.40465, -44.0149, 0.52 ) }
    dend_68 { pt3dadd( 8.87811, -4.05433, -44.8205, 0.52 ) }
    dend_68 { pt3dadd( 8.84318, -4.1059, -44.8784, 0.52 ) }
    dend_68 { pt3dadd( 8.51484, -4.598, -45.415, 0.52 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 20/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 14.3863, 14.5499, -25.3677, 1.4 ) }
    dend_59 { pt3dadd( 16.0164, 14.0546, -25.9061, 1.4 ) }
    dend_59 { pt3dadd( 17.9473, 13.4679, -26.5439, 1.4 ) }
    dend_59 { pt3dadd( 17.991, 13.4546, -26.5584, 1.4 ) }
    dend_59 { pt3dadd( 19.0059, 13.1462, -26.8936, 1.4 ) }
    dend_59 { pt3dadd( 19.104, 13.1164, -26.926, 1.4 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 26/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -10.2069, 15.6067, 4.77716, 0.88 ) }
    dend_49 { pt3dadd( -10.6976, 16.7771, 5.17609, 0.88 ) }
    dend_49 { pt3dadd( -10.9476, 17.4363, 5.38832, 0.88 ) }
    dend_49 { pt3dadd( -11.3133, 18.5445, 5.71667, 0.88 ) }
    dend_49 { pt3dadd( -11.8565, 20.361, 6.23047, 0.74 ) }
    dend_49 { pt3dadd( -12.1582, 21.5407, 6.56451, 0.74 ) }
    dend_49 { pt3dadd( -12.3163, 22.2869, 6.76637, 1.03 ) }
    dend_49 { pt3dadd( -12.3262, 22.3689, 6.78464, 1.03 ) }
    dend_49 { pt3dadd( -12.3667, 23.2584, 7.01541, 1.03 ) }
    dend_49 { pt3dadd( -12.3663, 23.3736, 7.0476, 1.03 ) }
    dend_49 { pt3dadd( -12.4086, 24.5255, 7.45909, 0.88 ) }
    dend_49 { pt3dadd( -12.6192, 25.6971, 8.04819, 1.18 ) }
    dend_49 { pt3dadd( -12.6398, 25.7585, 8.08497, 1.18 ) }
    dend_49 { pt3dadd( -13.142, 26.8992, 8.83473, 1.18 ) }
    dend_49 { pt3dadd( -13.7193, 27.9588, 9.59855, 0.81 ) }
    dend_49 { pt3dadd( -14.5038, 29.2044, 10.5482, 0.81 ) }
    dend_49 { pt3dadd( -15.5939, 30.7281, 11.7333, 0.81 ) }
    dend_49 { pt3dadd( -16.383, 31.7516, 12.5362, 0.81 ) }
    dend_49 { pt3dadd( -16.4226, 31.8025, 12.5742, 0.81 ) }
    dend_49 { pt3dadd( -17.0957, 32.7059, 13.1723, 0.66 ) }
    dend_49 { pt3dadd( -17.1315, 32.7625, 13.2053, 0.66 ) }
    dend_49 { pt3dadd( -17.5933, 33.8944, 13.6577, 0.66 ) }
    dend_49 { pt3dadd( -17.6468, 34.19, 13.7613, 0.66 ) }
    dend_49 { pt3dadd( -17.6965, 35.1521, 14.167, 0.96 ) }
    dend_49 { pt3dadd( -17.6833, 36.2331, 14.6607, 0.96 ) }
    dend_49 { pt3dadd( -17.6532, 36.6349, 14.8544, 0.96 ) }
    dend_49 { pt3dadd( -17.5975, 37.1897, 15.1381, 0.96 ) }
    dend_49 { pt3dadd( -17.394, 38.6142, 15.9452, 0.81 ) }
    dend_49 { pt3dadd( -17.2033, 39.7883, 16.6444, 0.81 ) }
    dend_49 { pt3dadd( -17.0188, 40.7198, 17.2363, 0.81 ) }
    dend_49 { pt3dadd( -17.0022, 40.8102, 17.3022, 0.81 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 57/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -10.2069, 15.6067, 4.77716, 0.88 ) }
    dend_46 { pt3dadd( -10.1799, 16.1329, 4.79415, 0.88 ) }
    dend_46 { pt3dadd( -10.1361, 16.7586, 4.80969, 0.74 ) }
    dend_46 { pt3dadd( -10.0736, 17.5112, 4.82346, 0.74 ) }
    dend_46 { pt3dadd( -10.0682, 17.5709, 4.82396, 0.74 ) }
    dend_46 { pt3dadd( -9.92663, 18.8778, 4.8349, 0.74 ) }
    dend_46 { pt3dadd( -9.81593, 19.7763, 4.84709, 0.88 ) }
    dend_46 { pt3dadd( -9.74815, 20.2717, 4.84301, 0.88 ) }
    dend_46 { pt3dadd( -9.72653, 20.4208, 4.84086, 0.88 ) }
    dend_46 { pt3dadd( -9.6273, 21.1074, 4.8333, 0.74 ) }
    dend_46 { pt3dadd( -9.51566, 21.9522, 4.85624, 0.74 ) }
    dend_46 { pt3dadd( -9.3983, 22.9528, 4.91804, 0.74 ) }
    dend_46 { pt3dadd( -9.30737, 23.8899, 5.00024, 1.62 ) }
    dend_46 { pt3dadd( -9.22317, 24.8996, 5.1044, 1.62 ) }
    dend_46 { pt3dadd( -9.15143, 26.0674, 5.26316, 1.33 ) }
    dend_46 { pt3dadd( -9.11373, 26.9203, 5.40671, 0.96 ) }
    dend_46 { pt3dadd( -9.09338, 27.7183, 5.56043, 0.96 ) }
    dend_46 { pt3dadd( -9.07962, 28.3893, 5.70875, 0.96 ) }
    dend_46 { pt3dadd( -9.07806, 28.4475, 5.72319, 0.96 ) }
    dend_46 { pt3dadd( -9.05793, 29.2974, 5.93389, 0.96 ) }
    dend_46 { pt3dadd( -9.02052, 30.2813, 6.15719, 0.74 ) }
    dend_46 { pt3dadd( -8.97962, 31.0237, 6.29081, 0.74 ) }
    dend_46 { pt3dadd( -8.97568, 31.0827, 6.30051, 0.74 ) }
    dend_46 { pt3dadd( -8.92988, 31.6411, 6.30962, 1.03 ) }
    dend_46 { pt3dadd( -8.92385, 31.7089, 6.30261, 1.03 ) }
    dend_46 { pt3dadd( -8.86878, 32.3185, 6.17226, 1.03 ) }
    dend_46 { pt3dadd( -8.86448, 32.3764, 6.15677, 1.03 ) }
    dend_46 { pt3dadd( -8.78524, 33.4253, 5.75589, 1.03 ) }
    dend_46 { pt3dadd( -8.67618, 34.8553, 5.10973, 1.03 ) }
    dend_46 { pt3dadd( -8.6714, 34.9166, 5.07854, 1.03 ) }
    dend_46 { pt3dadd( -8.58071, 36.018, 4.47696, 1.03 ) }
    dend_46 { pt3dadd( -8.57643, 36.0702, 4.44699, 1.03 ) }
    dend_46 { pt3dadd( -8.49895, 37.1835, 3.8211, 0.88 ) }
    dend_46 { pt3dadd( -8.49527, 37.2435, 3.78733, 0.88 ) }
    dend_46 { pt3dadd( -8.4778, 37.6545, 3.61178, 0.88 ) }
    dend_46 { pt3dadd( -8.47682, 37.7107, 3.59052, 0.88 ) }
    dend_46 { pt3dadd( -8.47371, 38.2543, 3.41993, 0.88 ) }
    dend_46 { pt3dadd( -8.47482, 38.5839, 3.36542, 0.88 ) }
    dend_46 { pt3dadd( -8.47459, 39.2339, 3.34574, 0.88 ) }
    dend_46 { pt3dadd( -8.47364, 39.2937, 3.34455, 0.88 ) }
    dend_46 { pt3dadd( -8.42514, 39.9969, 3.34538, 0.88 ) }
    dend_46 { pt3dadd( -8.40285, 40.2754, 3.34732, 0.88 ) }
    dend_46 { pt3dadd( -8.30984, 41.2151, 3.36381, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( -8.19451, 42.2107, 3.40009, 1.03 ) }
    dend_46 { pt3dadd( -8.18622, 42.2785, 3.40477, 1.03 ) }
    dend_46 { pt3dadd( -8.02836, 43.4121, 3.48495, 1.03 ) }
    // Section: dend_30, id: dend_30, parent: dend_24 (entry count 3/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.9409, -13.5144, 8.63982, 1.11 ) }
    dend_30 { pt3dadd( 10.3723, -15.8759, 9.27825, 1.11 ) }
    dend_30 { pt3dadd( 10.9655, -16.8377, 9.44772, 1.11 ) }
    dend_30 { pt3dadd( 11.0259, -16.9302, 9.43439, 1.11 ) }
    dend_30 { pt3dadd( 11.5621, -17.6425, 9.23076, 1.33 ) }
    dend_30 { pt3dadd( 12.3197, -18.5232, 8.89492, 1.11 ) }
    dend_30 { pt3dadd( 13.5294, -19.8018, 8.36159, 1.11 ) }
    dend_30 { pt3dadd( 13.5631, -19.8369, 8.34249, 1.11 ) }
    dend_30 { pt3dadd( 15.1965, -21.3999, 7.40402, 1.25 ) }
    dend_30 { pt3dadd( 16.4345, -22.5387, 6.68403, 1.55 ) }
    dend_30 { pt3dadd( 17.6299, -23.5453, 5.98024, 1.55 ) }
    dend_30 { pt3dadd( 18.3421, -24.1104, 5.5377, 1.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 15/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 8.9409, -13.5144, 8.63982, 1.47 ) }
    dend_25 { pt3dadd( 8.53566, -17.7417, 15.3137, 1.47 ) }
    dend_25 { pt3dadd( 8.47479, -18.8225, 16.7845, 1.03 ) }
    dend_25 { pt3dadd( 8.52849, -19.5964, 17.5929, 1.03 ) }
    dend_25 { pt3dadd( 8.75225, -21.0217, 18.8509, 0.88 ) }
    dend_25 { pt3dadd( 8.76829, -21.0844, 18.9006, 0.88 ) }
    dend_25 { pt3dadd( 9.25187, -22.6879, 20.1066, 0.88 ) }
    dend_25 { pt3dadd( 9.27514, -22.739, 20.1305, 0.88 ) }
    dend_25 { pt3dadd( 10.6072, -25.0948, 21.34, 0.88 ) }
    dend_25 { pt3dadd( 11.2678, -26.0274, 21.9011, 1.47 ) }
    dend_25 { pt3dadd( 12.5839, -27.5961, 22.9769, 0.88 ) }
    dend_25 { pt3dadd( 12.6319, -27.6476, 23.0188, 0.88 ) }
    dend_25 { pt3dadd( 13.998, -28.8731, 24.2352, 0.74 ) }
    dend_25 { pt3dadd( 14.104, -28.9569, 24.3388, 0.74 ) }
    dend_25 { pt3dadd( 15.1511, -29.6303, 25.4695, 0.74 ) }
    dend_25 { pt3dadd( 15.2173, -29.6664, 25.5383, 0.74 ) }
    dend_25 { pt3dadd( 16.2741, -30.1623, 26.6879, 1.33 ) }
    dend_25 { pt3dadd( 17.1101, -30.5471, 27.7076, 0.96 ) }
    dend_25 { pt3dadd( 18.4075, -31.164, 29.3588, 1.11 ) }
    dend_25 { pt3dadd( 18.4489, -31.185, 29.4142, 1.11 ) }
    dend_25 { pt3dadd( 19.1297, -31.5845, 30.3892, 1.11 ) }
    dend_25 { pt3dadd( 20.2357, -32.3546, 31.8907, 0.81 ) }
    dend_25 { pt3dadd( 21.0637, -33.0096, 32.947, 1.25 ) }
    dend_25 { pt3dadd( 21.7125, -33.6736, 33.8166, 0.88 ) }
    dend_25 { pt3dadd( 21.7475, -33.7177, 33.861, 0.88 ) }
    dend_25 { pt3dadd( 22.4735, -34.9131, 34.8163, 0.81 ) }
    dend_25 { pt3dadd( 22.8962, -36.0582, 35.4341, 0.81 ) }
    dend_25 { pt3dadd( 22.9156, -36.1543, 35.4594, 0.81 ) }
    dend_25 { pt3dadd( 23.035, -37.7464, 35.7216, 0.81 ) }
    dend_25 { pt3dadd( 23.0343, -37.8065, 35.7297, 0.81 ) }
    dend_25 { pt3dadd( 22.9795, -38.9059, 35.8422, 0.81 ) }
    dend_25 { pt3dadd( 22.9559, -39.9248, 35.9907, 1.18 ) }
    dend_25 { pt3dadd( 22.9844, -40.9409, 36.2279, 0.88 ) }
    dend_25 { pt3dadd( 23.221, -42.0837, 36.7709, 0.59 ) }
    dend_25 { pt3dadd( 23.5705, -42.923, 37.5725, 0.59 ) }
    dend_25 { pt3dadd( 23.5951, -42.9744, 37.6314, 0.59 ) }
    dend_25 { pt3dadd( 24.4168, -44.4622, 39.6304, 0.59 ) }
    dend_25 { pt3dadd( 24.4427, -44.5069, 39.6945, 0.59 ) }
    dend_25 { pt3dadd( 25.4428, -46.1627, 41.9178, 0.81 ) }
    dend_25 { pt3dadd( 26.2944, -47.6141, 43.7791, 0.81 ) }
    dend_25 { pt3dadd( 26.7857, -48.5154, 44.8961, 0.81 ) }
    dend_25 { pt3dadd( 26.8179, -48.5758, 44.9712, 0.81 ) }
    dend_25 { pt3dadd( 27.562, -50.0532, 46.7661, 0.74 ) }
    dend_25 { pt3dadd( 28.3192, -51.4281, 48.4123, 0.52 ) }
    dend_25 { pt3dadd( 29.2514, -52.992, 50.1905, 0.52 ) }
    dend_25 { pt3dadd( 29.3296, -53.0928, 50.3095, 0.52 ) }
    dend_25 { pt3dadd( 30.5111, -54.3182, 51.9935, 0.52 ) }
    dend_25 { pt3dadd( 30.5475, -54.356, 52.0426, 0.52 ) }
    dend_25 { pt3dadd( 31.0835, -54.9393, 52.7835, 0.52 ) }
    dend_25 { pt3dadd( 31.1565, -55.042, 52.8972, 0.52 ) }
    dend_25 { pt3dadd( 31.6546, -56.005, 53.5116, 0.52 ) }
    dend_25 { pt3dadd( 31.737, -56.2148, 53.61, 0.52 ) }
    dend_25 { pt3dadd( 32.4126, -58.1498, 54.3389, 0.52 ) }
    dend_25 { pt3dadd( 32.8587, -59.314, 54.8132, 0.52 ) }
    dend_25 { pt3dadd( 32.9792, -59.6316, 54.9483, 0.52 ) }
    dend_25 { pt3dadd( 33.3583, -60.6455, 55.3857, 0.52 ) }
    dend_25 { pt3dadd( 33.3938, -60.7387, 55.427, 0.52 ) }
    dend_25 { pt3dadd( 34.0756, -61.9966, 56.0594, 0.52 ) }
    dend_25 { pt3dadd( 34.6024, -62.4529, 56.4136, 0.88 ) }
    dend_25 { pt3dadd( 34.7242, -62.526, 56.4738, 0.88 ) }
    // Section: dend_21, id: dend_21, parent: dend_0 (entry count 75/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -3.58505, -14.6125, -1.18078, 0.59 ) }
    dend_21 { pt3dadd( -4.51188, -14.8615, -1.32952, 0.59 ) }
    dend_21 { pt3dadd( -5.96646, -15.2897, -1.38901, 0.59 ) }
    dend_21 { pt3dadd( -7.75465, -15.8543, -1.33188, 0.59 ) }
    dend_21 { pt3dadd( -8.45512, -16.0962, -1.27787, 0.59 ) }
    dend_21 { pt3dadd( -10.9292, -17.0721, -1.02236, 0.88 ) }
    dend_21 { pt3dadd( -12.1344, -17.6061, -0.921992, 0.88 ) }
    dend_21 { pt3dadd( -13.4703, -18.2713, -0.782606, 0.96 ) }
    dend_21 { pt3dadd( -14.6001, -18.8871, -0.659248, 1.25 ) }
    dend_21 { pt3dadd( -15.6938, -19.5521, -0.588676, 1.47 ) }
    dend_21 { pt3dadd( -17.1132, -20.3761, -0.860382, 1.11 ) }
    dend_21 { pt3dadd( -18.842, -21.2994, -1.6828, 1.03 ) }
    dend_21 { pt3dadd( -19.6625, -21.6982, -2.1869, 1.03 ) }
    dend_21 { pt3dadd( -19.7523, -21.738, -2.25071, 1.03 ) }
    dend_21 { pt3dadd( -21.5894, -22.5198, -3.65741, 1.55 ) }
    dend_21 { pt3dadd( -25.3868, -24.1046, -6.68325, 0.66 ) }
    dend_21 { pt3dadd( -26.8425, -24.7387, -7.83961, 0.66 ) }
    dend_21 { pt3dadd( -27.6587, -25.1498, -8.49147, 0.66 ) }
    dend_21 { pt3dadd( -27.7134, -25.1835, -8.53387, 0.66 ) }
    dend_21 { pt3dadd( -28.5518, -25.8113, -9.1351, 0.74 ) }
    dend_21 { pt3dadd( -29.2617, -26.5041, -9.56542, 1.03 ) }
    dend_21 { pt3dadd( -30.0955, -27.7608, -10.0883, 1.03 ) }
    dend_21 { pt3dadd( -31.1395, -29.4394, -10.7088, 1.25 ) }
    dend_21 { pt3dadd( -31.741, -30.4185, -11.1071, 1.18 ) }
    dend_21 { pt3dadd( -31.8088, -30.5209, -11.1515, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -32.3637, -31.2017, -11.5467, 0.52 ) }
    dend_21 { pt3dadd( -32.4177, -31.2445, -11.5804, 0.52 ) }
    dend_21 { pt3dadd( -33.4148, -31.5921, -12.1026, 0.52 ) }
    dend_21 { pt3dadd( -33.486, -31.6016, -12.1316, 0.52 ) }
    dend_21 { pt3dadd( -34.0161, -31.6319, -12.3836, 0.52 ) }
    dend_21 { pt3dadd( -35.6898, -31.6854, -13.1944, 0.88 ) }
    dend_21 { pt3dadd( -36.8826, -31.7015, -13.7764, 1.25 ) }
    dend_21 { pt3dadd( -38.4879, -31.7373, -14.5876, 1.25 ) }
    dend_21 { pt3dadd( -39.3592, -31.7669, -15.0432, 0.88 ) }
    dend_21 { pt3dadd( -40.9267, -31.923, -15.8545, 0.88 ) }
    dend_21 { pt3dadd( -41.6149, -32.086, -16.2474, 0.52 ) }
    dend_21 { pt3dadd( -41.9969, -32.2691, -16.4705, 0.52 ) }
    dend_21 { pt3dadd( -42.2695, -32.4771, -16.6883, 0.52 ) }
    dend_21 { pt3dadd( -42.5937, -32.7387, -16.9905, 0.52 ) }
    dend_21 { pt3dadd( -43.2003, -33.1928, -17.6113, 0.52 ) }
    dend_21 { pt3dadd( -44.3565, -34.0023, -18.8183, 0.88 ) }
    dend_21 { pt3dadd( -45.1069, -34.5039, -19.6204, 1.25 ) }
    dend_21 { pt3dadd( -47.1897, -35.805, -21.7412, 1.62 ) }
    dend_21 { pt3dadd( -48.9261, -36.8382, -23.3514, 1.55 ) }
    dend_21 { pt3dadd( -50.4411, -37.694, -24.6573, 0.81 ) }
    dend_21 { pt3dadd( -50.5256, -37.7398, -24.7241, 0.81 ) }
    dend_21 { pt3dadd( -50.9975, -38.0114, -25.0461, 0.37 ) }
    dend_21 { pt3dadd( -52.0816, -38.7374, -25.6791, 0.37 ) }
    dend_21 { pt3dadd( -53.333, -39.8245, -26.0999, 0.37 ) }
    dend_21 { pt3dadd( -53.385, -39.88, -26.107, 0.37 ) }
    dend_21 { pt3dadd( -54.1422, -40.6975, -26.2212, 1.03 ) }
    dend_21 { pt3dadd( -54.8824, -41.4771, -26.3605, 1.47 ) }
    dend_21 { pt3dadd( -55.6696, -42.3085, -26.5218, 0.96 ) }
    dend_21 { pt3dadd( -56.2814, -42.9581, -26.6596, 0.29 ) }
    dend_21 { pt3dadd( -57.9519, -44.7027, -27.0511, 0.29 ) }
    dend_21 { pt3dadd( -60.195, -46.9887, -27.5587, 0.29 ) }
    dend_21 { pt3dadd( -61.3192, -48.0789, -27.7953, 0.29 ) }
    dend_21 { pt3dadd( -62.0905, -48.7828, -27.974, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 33/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.58505, -14.6125, -1.18078, 2.36 ) }
    dend_1 { pt3dadd( -3.67894, -14.953, -1.23036, 2.36 ) }
    dend_1 { pt3dadd( -4.02402, -16.114, -1.35465, 2.36 ) }
    dend_1 { pt3dadd( -4.62381, -18.132, -1.57069, 1.99 ) }
    dend_1 { pt3dadd( -5.19314, -20.0474, -1.77576, 1.99 ) }
    dend_1 { pt3dadd( -5.70012, -21.7532, -1.95837, 2.14 ) }
    dend_1 { pt3dadd( -6.26138, -23.6415, -2.16053, 3.02 ) }
    dend_1 { pt3dadd( -6.59517, -24.6751, -2.26554, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 41/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.97531, 41.4078, 1.00426, 1.18 ) }
    axon_1 { pt3dadd( 9.15148, 56.2491, 1.00426, 1.18 ) }
    axon_1 { pt3dadd( 11.3276, 71.0904, 1.00426, 1.18 ) }
    // Section: dend_77, id: dend_77, parent: dend_73 (entry count 44/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 27.8187, 40.8575, 7.9888, 0.74 ) }
    dend_77 { pt3dadd( 28.3101, 43.978, 10.5171, 0.74 ) }
    dend_77 { pt3dadd( 28.3219, 44.0584, 10.5605, 0.74 ) }
    dend_77 { pt3dadd( 28.5566, 45.1519, 11.05, 0.74 ) }
    dend_77 { pt3dadd( 28.8114, 46.1543, 11.4399, 0.59 ) }
    dend_77 { pt3dadd( 29.0985, 47.1987, 11.7971, 0.59 ) }
    dend_77 { pt3dadd( 29.3423, 48.0681, 12.065, 0.59 ) }
    dend_77 { pt3dadd( 29.3625, 48.1453, 12.0756, 0.59 ) }
    dend_77 { pt3dadd( 29.677, 49.2157, 12.2694, 0.22 ) }
    dend_77 { pt3dadd( 29.8665, 49.7843, 12.3929, 0.81 ) }
    dend_77 { pt3dadd( 30.1109, 50.5016, 12.5752, 1.03 ) }
    dend_77 { pt3dadd( 30.3642, 51.0908, 12.7817, 1.03 ) }
    dend_77 { pt3dadd( 30.885, 52.2006, 13.2212, 0.81 ) }
    dend_77 { pt3dadd( 31.4647, 53.3546, 13.6928, 0.59 ) }
    dend_77 { pt3dadd( 32.2269, 54.8554, 14.3058, 0.59 ) }
    dend_77 { pt3dadd( 32.2786, 54.9476, 14.3497, 0.59 ) }
    dend_77 { pt3dadd( 33.5335, 57.0256, 15.4271, 0.59 ) }
    dend_77 { pt3dadd( 33.5727, 57.0881, 15.4605, 0.59 ) }
    dend_77 { pt3dadd( 34.0801, 57.888, 15.9306, 0.44 ) }
    dend_77 { pt3dadd( 34.5858, 58.6833, 16.5003, 0.44 ) }
    dend_77 { pt3dadd( 35.5381, 60.385, 17.8357, 0.44 ) }
    dend_77 { pt3dadd( 35.7611, 60.8623, 18.2111, 0.96 ) }
    dend_77 { pt3dadd( 35.9489, 61.4728, 18.6628, 0.96 ) }
    dend_77 { pt3dadd( 36.2496, 62.6527, 19.5329, 0.59 ) }
    dend_77 { pt3dadd( 36.4606, 63.7378, 20.2953, 0.29 ) }
    dend_77 { pt3dadd( 36.574, 64.5608, 20.8175, 0.29 ) }
    dend_77 { pt3dadd( 36.5797, 64.716, 20.8927, 0.29 ) }
    dend_77 { pt3dadd( 36.5731, 66.3753, 21.5322, 0.29 ) }
    dend_77 { pt3dadd( 36.5699, 66.4643, 21.5543, 0.29 ) }
    dend_77 { pt3dadd( 36.4795, 67.5616, 21.6071, 0.29 ) }
    dend_77 { pt3dadd( 36.4599, 67.7326, 21.5967, 0.81 ) }
    dend_77 { pt3dadd( 36.3242, 68.5578, 21.5236, 0.81 ) }
    dend_77 { pt3dadd( 36.1891, 69.1091, 21.4712, 0.29 ) }
    dend_77 { pt3dadd( 35.7704, 70.0322, 21.4206, 0.29 ) }
    dend_77 { pt3dadd( 35.1509, 70.9839, 21.424, 0.29 ) }
    dend_77 { pt3dadd( 35.0069, 71.1624, 21.4321, 0.29 ) }
    dend_77 { pt3dadd( 34.2875, 71.9085, 21.4575, 0.29 ) }
    dend_77 { pt3dadd( 33.9227, 72.2368, 21.4687, 0.29 ) }
    dend_77 { pt3dadd( 32.2844, 73.5081, 21.5428, 0.29 ) }
    dend_77 { pt3dadd( 30.8544, 74.464, 21.6051, 0.29 ) }
    dend_77 { pt3dadd( 30.7635, 74.5215, 21.6107, 0.29 ) }
    dend_77 { pt3dadd( 29.0492, 75.5861, 21.6883, 0.29 ) }
    dend_77 { pt3dadd( 28.899, 75.6763, 21.6913, 0.29 ) }
    dend_77 { pt3dadd( 28.0079, 76.191, 21.6874, 0.29 ) }
    dend_77 { pt3dadd( 27.1824, 76.6123, 21.6477, 0.81 ) }
    dend_77 { pt3dadd( 26.1881, 77.0353, 21.6268, 0.81 ) }
    dend_77 { pt3dadd( 25.6644, 87.447, 26.4882, 0.81 ) }
    dend_77 { pt3dadd( 25.9189, 97.0814, 32.8174, 0.81 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 92/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 27.8187, 40.8575, 7.9888, 1.03 ) }
    dend_74 { pt3dadd( 29.3753, 41.2604, 9.1784, 1.03 ) }
    dend_74 { pt3dadd( 30.319, 41.523, 9.85202, 0.74 ) }
    dend_74 { pt3dadd( 31.6276, 42.0202, 10.6673, 0.74 ) }
    dend_74 { pt3dadd( 31.6721, 42.0434, 10.6912, 0.74 ) }
    dend_74 { pt3dadd( 32.463, 42.5378, 10.9561, 0.52 ) }
    dend_74 { pt3dadd( 33.0075, 42.9174, 11.0398, 0.52 ) }
    dend_74 { pt3dadd( 33.0765, 42.9753, 11.026, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_74 { pt3dadd( 33.9699, 43.8393, 10.8374, 0.81 ) }
    dend_74 { pt3dadd( 34.616, 44.5115, 10.6848, 1.11 ) }
    dend_74 { pt3dadd( 35.7884, 45.7464, 10.6946, 0.66 ) }
    dend_74 { pt3dadd( 36.3352, 46.3401, 10.8243, 0.59 ) }
    dend_74 { pt3dadd( 36.98, 46.963, 11.2626, 0.59 ) }
    dend_74 { pt3dadd( 38.0565, 47.898, 12.4296, 0.59 ) }
    dend_74 { pt3dadd( 38.0975, 47.9261, 12.4846, 0.59 ) }
    dend_74 { pt3dadd( 39.3263, 48.6441, 14.2442, 0.59 ) }
    dend_74 { pt3dadd( 39.3654, 48.6654, 14.3037, 0.59 ) }
    dend_74 { pt3dadd( 40.2919, 49.185, 15.6514, 1.25 ) }
    dend_74 { pt3dadd( 40.3351, 49.2116, 15.7055, 1.25 ) }
    dend_74 { pt3dadd( 41.2017, 49.8346, 16.4674, 0.96 ) }
    dend_74 { pt3dadd( 42.3701, 50.7376, 17.1819, 0.66 ) }
    dend_74 { pt3dadd( 42.4387, 50.7925, 17.2067, 0.66 ) }
    dend_74 { pt3dadd( 43.3968, 51.5953, 17.4588, 0.59 ) }
    dend_74 { pt3dadd( 44.4048, 52.5002, 17.6005, 0.59 ) }
    dend_74 { pt3dadd( 45.2525, 53.2923, 17.6889, 0.59 ) }
    dend_74 { pt3dadd( 45.8246, 53.8709, 17.7153, 0.59 ) }
    dend_74 { pt3dadd( 46.1155, 54.1517, 17.7176, 0.59 ) }
    dend_74 { pt3dadd( 46.4811, 54.4649, 17.7331, 0.81 ) }
    dend_74 { pt3dadd( 47.1283, 54.9485, 17.7801, 0.81 ) }
    dend_74 { pt3dadd( 47.3786, 55.1143, 17.8067, 0.81 ) }
    dend_74 { pt3dadd( 48.3513, 55.736, 17.9564, 0.81 ) }
    dend_74 { pt3dadd( 49.3063, 56.3396, 18.1077, 0.44 ) }
    dend_74 { pt3dadd( 50.1378, 56.8577, 18.2405, 0.44 ) }
    dend_74 { pt3dadd( 50.2208, 56.9087, 18.2535, 0.44 ) }
    dend_74 { pt3dadd( 51.0212, 57.4062, 18.4031, 0.81 ) }
    dend_74 { pt3dadd( 51.4961, 57.7154, 18.4991, 0.96 ) }
    dend_74 { pt3dadd( 52.1324, 58.1646, 18.6531, 0.81 ) }
    dend_74 { pt3dadd( 52.1816, 58.2043, 18.6661, 0.81 ) }
    dend_74 { pt3dadd( 52.9752, 58.9501, 18.8298, 0.52 ) }
    dend_74 { pt3dadd( 53.8358, 59.8218, 18.9697, 0.52 ) }
    dend_74 { pt3dadd( 54.2779, 60.3069, 19.0553, 0.81 ) }
    dend_74 { pt3dadd( 55.1289, 61.2911, 19.2356, 0.52 ) }
    dend_74 { pt3dadd( 55.2581, 61.4419, 19.2718, 0.52 ) }
    dend_74 { pt3dadd( 56.726, 63.1239, 19.7346, 0.37 ) }
    dend_74 { pt3dadd( 56.7682, 63.1703, 19.7485, 0.37 ) }
    dend_74 { pt3dadd( 57.7319, 64.195, 20.0661, 0.37 ) }
    dend_74 { pt3dadd( 58.2547, 64.7236, 20.2539, 1.03 ) }
    dend_74 { pt3dadd( 59.4156, 65.8201, 20.6978, 1.03 ) }
    dend_74 { pt3dadd( 59.4617, 65.8608, 20.7172, 1.03 ) }
    dend_74 { pt3dadd( 60.2159, 66.4696, 21.0926, 1.03 ) }
    dend_74 { pt3dadd( 60.2636, 66.5084, 21.1123, 1.03 ) }
    dend_74 { pt3dadd( 60.9845, 67.1226, 21.3269, 0.66 ) }
    dend_74 { pt3dadd( 61.0389, 67.1701, 21.3413, 0.66 ) }
    dend_74 { pt3dadd( 61.5128, 67.6267, 21.4219, 0.66 ) }
    dend_74 { pt3dadd( 61.5852, 67.7001, 21.4354, 0.66 ) }
    dend_74 { pt3dadd( 62.039, 68.2048, 21.5376, 0.66 ) }
    dend_74 { pt3dadd( 62.9916, 69.2845, 21.7594, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 49/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -1.47821, 27.0137, 0.315367, 0.96 ) }
    dend_72 { pt3dadd( -1.46668, 27.5614, 0.289485, 0.96 ) }
    dend_72 { pt3dadd( -1.50852, 28.69, 0.200733, 0.74 ) }
    dend_72 { pt3dadd( -1.70064, 30.1509, 0.0447073, 0.74 ) }
    dend_72 { pt3dadd( -1.71176, 30.2144, 0.0368343, 0.74 ) }
    dend_72 { pt3dadd( -2.00219, 31.4943, -0.139598, 0.66 ) }
    dend_72 { pt3dadd( -2.30575, 32.68, -0.311937, 0.66 ) }
    dend_72 { pt3dadd( -2.36683, 32.8474, -0.335021, 0.66 ) }
    dend_72 { pt3dadd( -2.97504, 33.8623, -0.524794, 1.03 ) }
    dend_72 { pt3dadd( -3.01646, 33.9125, -0.532601, 1.03 ) }
    dend_72 { pt3dadd( -3.62299, 34.5413, -0.575227, 1.03 ) }
    dend_72 { pt3dadd( -3.67945, 34.5932, -0.571558, 1.03 ) }
    dend_72 { pt3dadd( -4.3097, 35.1484, -0.495087, 0.81 ) }
    dend_72 { pt3dadd( -5.54929, 36.2782, -0.228408, 0.81 ) }
    dend_72 { pt3dadd( -6.4495, 37.1385, 0.0213826, 0.81 ) }
    dend_72 { pt3dadd( -7.48949, 38.1415, 0.406979, 0.66 ) }
    dend_72 { pt3dadd( -8.48347, 39.1326, 0.850554, 0.66 ) }
    dend_72 { pt3dadd( -8.53326, 39.1857, 0.874876, 0.66 ) }
    dend_72 { pt3dadd( -9.57987, 40.4424, 1.44936, 1.03 ) }
    dend_72 { pt3dadd( -10.1757, 41.2523, 1.83359, 1.03 ) }
    dend_72 { pt3dadd( -10.986, 42.4338, 2.42546, 0.96 ) }
    dend_72 { pt3dadd( -11.3443, 43.0192, 2.73514, 0.96 ) }
    dend_72 { pt3dadd( -11.7951, 43.8879, 3.17749, 0.52 ) }
    dend_72 { pt3dadd( -12.2066, 44.7868, 3.62124, 0.52 ) }
    dend_72 { pt3dadd( -12.2269, 44.8437, 3.64619, 0.52 ) }
    dend_72 { pt3dadd( -12.5625, 46.1152, 4.17532, 1.11 ) }
    dend_72 { pt3dadd( -12.7189, 47.087, 4.49161, 1.11 ) }
    dend_72 { pt3dadd( -12.8577, 48.094, 4.85824, 1.03 ) }
    dend_72 { pt3dadd( -12.8656, 48.1544, 4.88148, 1.03 ) }
    dend_72 { pt3dadd( -13.0121, 48.8732, 5.12719, 0.66 ) }
    dend_72 { pt3dadd( -13.0334, 48.9437, 5.14574, 0.66 ) }
    dend_72 { pt3dadd( -13.4768, 49.695, 5.22144, 0.44 ) }
    dend_72 { pt3dadd( -14.1642, 50.3772, 5.25139, 0.44 ) }
    dend_72 { pt3dadd( -14.4629, 50.5842, 5.27752, 0.44 ) }
    dend_72 { pt3dadd( -15.2417, 51.0694, 5.51745, 0.44 ) }
    dend_72 { pt3dadd( -15.4416, 51.197, 5.61956, 0.44 ) }
    dend_72 { pt3dadd( -16.4015, 51.9141, 6.26198, 0.44 ) }
    dend_72 { pt3dadd( -16.4464, 51.957, 6.3077, 0.44 ) }
    dend_72 { pt3dadd( -17.1578, 52.8976, 7.31899, 0.74 ) }
    dend_72 { pt3dadd( -17.8534, 54.1425, 8.73411, 0.52 ) }
    dend_72 { pt3dadd( -18.1594, 54.907, 9.56779, 0.66 ) }
    dend_72 { pt3dadd( -18.3521, 55.5356, 10.2261, 0.66 ) }
    dend_72 { pt3dadd( -18.5915, 56.7782, 11.4093, 1.47 ) }
    dend_72 { pt3dadd( -18.6565, 57.2594, 11.8177, 1.47 ) }
    dend_72 { pt3dadd( -18.7671, 59.2073, 13.1162, 0.66 ) }
    dend_72 { pt3dadd( -18.8013, 60.2545, 13.6726, 0.66 ) }
    dend_72 { pt3dadd( -18.8092, 60.4014, 13.7429, 0.66 ) }
    dend_72 { pt3dadd( -18.9624, 61.6633, 14.2486, 0.66 ) }
    dend_72 { pt3dadd( -18.9755, 61.7338, 14.2741, 0.66 ) }
    dend_72 { pt3dadd( -19.3803, 63.6656, 15.0043, 0.66 ) }
    dend_72 { pt3dadd( -19.394, 63.7258, 15.0251, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_72 { pt3dadd( -19.6957, 64.6439, 15.4358, 0.66 ) }
    dend_72 { pt3dadd( -20.2003, 65.9752, 16.1216, 0.66 ) }
    dend_72 { pt3dadd( -20.7546, 67.2881, 16.8613, 0.88 ) }
    dend_72 { pt3dadd( -20.8296, 67.4882, 16.9704, 0.88 ) }
    dend_72 { pt3dadd( -21.1703, 68.5783, 17.591, 0.88 ) }
    dend_72 { pt3dadd( -21.5391, 70.1103, 18.3985, 1.11 ) }
    dend_72 { pt3dadd( -21.6319, 70.6518, 18.6624, 0.88 ) }
    dend_72 { pt3dadd( -21.743, 71.4462, 19.0262, 0.59 ) }
    dend_72 { pt3dadd( -21.9849, 72.9046, 19.5721, 0.59 ) }
    dend_72 { pt3dadd( -22.2326, 74.037, 19.9686, 0.44 ) }
    dend_72 { pt3dadd( -22.4271, 74.7931, 20.2079, 0.44 ) }
    dend_72 { pt3dadd( -22.4627, 74.9082, 20.2312, 0.44 ) }
    dend_72 { pt3dadd( -22.8797, 75.7911, 20.3507, 0.44 ) }
    dend_72 { pt3dadd( -23.1482, 76.1881, 20.3737, 0.44 ) }
    dend_72 { pt3dadd( -23.4796, 76.5611, 20.3412, 0.44 ) }
    dend_72 { pt3dadd( -23.6443, 76.7486, 20.3025, 0.44 ) }
    dend_72 { pt3dadd( -23.8764, 77.2004, 20.2592, 0.74 ) }
    dend_72 { pt3dadd( -24.1135, 78.1167, 20.2394, 0.96 ) }
    dend_72 { pt3dadd( -24.1138, 78.1815, 20.2422, 0.96 ) }
    dend_72 { pt3dadd( -24.0622, 78.6538, 20.2762, 0.96 ) }
    dend_72 { pt3dadd( -24.048, 78.728, 20.2828, 0.96 ) }
    dend_72 { pt3dadd( -23.7938, 79.909, 20.3883, 0.44 ) }
    dend_72 { pt3dadd( -23.7802, 79.9834, 20.3936, 0.44 ) }
    dend_72 { pt3dadd( -23.7012, 80.9432, 20.4252, 0.44 ) }
    dend_72 { pt3dadd( -23.7011, 81.0582, 20.4248, 0.44 ) }
    dend_72 { pt3dadd( -23.7442, 81.8601, 20.3815, 0.44 ) }
    dend_72 { pt3dadd( -23.826, 82.6456, 20.302, 0.96 ) }
    dend_72 { pt3dadd( -24.0201, 83.852, 20.146, 0.96 ) }
    dend_72 { pt3dadd( -24.3578, 85.3277, 19.9343, 0.96 ) }
    dend_72 { pt3dadd( -24.594, 86.1436, 19.8055, 0.96 ) }
    dend_72 { pt3dadd( -24.8112, 86.862, 19.6915, 0.44 ) }
    dend_72 { pt3dadd( -25.1687, 88.0086, 19.5124, 0.44 ) }
    dend_72 { pt3dadd( -25.6013, 89.4137, 19.3045, 0.44 ) }
    dend_72 { pt3dadd( -25.9404, 90.5634, 19.1642, 0.44 ) }
    dend_72 { pt3dadd( -25.9728, 90.6813, 19.1541, 0.44 ) }
    dend_72 { pt3dadd( -26.1964, 91.539, 19.1264, 0.44 ) }
    dend_72 { pt3dadd( -26.3685, 92.2248, 19.1413, 0.74 ) }
    dend_72 { pt3dadd( -26.4999, 92.7953, 19.1738, 0.81 ) }
    dend_72 { pt3dadd( -26.7151, 93.7628, 19.2468, 0.81 ) }
    dend_72 { pt3dadd( -26.738, 93.8682, 19.2568, 0.81 ) }
    dend_72 { pt3dadd( -27.0172, 94.7561, 19.3305, 0.29 ) }
    dend_72 { pt3dadd( -27.1844, 95.1171, 19.3542, 0.29 ) }
    dend_72 { pt3dadd( -27.271, 95.2805, 19.3595, 0.29 ) }
    dend_72 { pt3dadd( -27.5734, 95.8161, 19.3543, 0.29 ) }
    dend_72 { pt3dadd( -27.6887, 96.0071, 19.3422, 0.29 ) }
    dend_72 { pt3dadd( -27.978, 96.4959, 19.2964, 0.29 ) }
    dend_72 { pt3dadd( -28.0375, 96.5943, 19.2831, 0.29 ) }
    dend_72 { pt3dadd( -28.5543, 97.4854, 19.1614, 0.29 ) }
    dend_72 { pt3dadd( -28.8218, 97.9459, 19.1051, 0.29 ) }
    dend_72 { pt3dadd( -28.865, 98.0212, 19.0971, 0.29 ) }
    dend_72 { pt3dadd( -29.0266, 98.2914, 19.0724, 0.88 ) }
    dend_72 { pt3dadd( -29.3791, 98.9905, 19.0269, 0.88 ) }
    dend_72 { pt3dadd( -29.8623, 99.9869, 18.9355, 0.88 ) }
    dend_72 { pt3dadd( -30.1375, 100.523, 18.8714, 0.88 ) }
    dend_72 { pt3dadd( -30.1732, 100.589, 18.8617, 0.88 ) }
    dend_72 { pt3dadd( -30.7439, 101.603, 18.6878, 0.29 ) }
    dend_72 { pt3dadd( -31.619, 103.113, 18.3954, 0.29 ) }
    dend_72 { pt3dadd( -32.0096, 103.803, 18.2368, 0.59 ) }
    dend_72 { pt3dadd( -32.4186, 104.531, 18.0385, 0.59 ) }
    dend_72 { pt3dadd( -32.7255, 105.087, 17.8708, 0.29 ) }
    dend_72 { pt3dadd( -33.1062, 105.744, 17.6561, 0.29 ) }
    dend_72 { pt3dadd( -33.1855, 105.866, 17.6114, 0.29 ) }
    dend_72 { pt3dadd( -33.6657, 106.5, 17.363, 0.29 ) }
    dend_72 { pt3dadd( -33.7301, 106.592, 17.3339, 0.29 ) }
    dend_72 { pt3dadd( -34.137, 107.201, 17.1477, 0.29 ) }
    dend_72 { pt3dadd( -34.297, 107.434, 17.0809, 0.29 ) }
    dend_72 { pt3dadd( -34.6671, 107.928, 17.0118, 0.29 ) }
    dend_72 { pt3dadd( -34.7222, 107.996, 17.0088, 0.29 ) }
    dend_72 { pt3dadd( -35.4261, 108.81, 17.0204, 0.29 ) }
    dend_72 { pt3dadd( -35.7133, 109.131, 17.0304, 1.11 ) }
    dend_72 { pt3dadd( -36.3293, 109.804, 17.0578, 1.33 ) }
    dend_72 { pt3dadd( -37.2787, 110.858, 17.1127, 0.74 ) }
    dend_72 { pt3dadd( -37.9431, 111.651, 17.128, 0.44 ) }
    dend_72 { pt3dadd( -38.6002, 112.501, 17.1094, 0.44 ) }
    dend_72 { pt3dadd( -38.7457, 112.706, 17.0959, 0.44 ) }
    dend_72 { pt3dadd( -38.9596, 113.038, 17.0559, 0.44 ) }
    dend_72 { pt3dadd( -39.0377, 113.176, 17.0184, 0.44 ) }
    dend_72 { pt3dadd( -39.5639, 114.243, 16.5951, 0.44 ) }
    dend_72 { pt3dadd( -39.9139, 114.969, 16.2846, 1.11 ) }
    dend_72 { pt3dadd( -40.2556, 115.696, 15.964, 1.55 ) }
    dend_72 { pt3dadd( -40.5131, 116.274, 15.7196, 1.55 ) }
    dend_72 { pt3dadd( -41.0641, 117.547, 15.2014, 0.22 ) }
    dend_72 { pt3dadd( -41.4011, 118.366, 14.8944, 0.22 ) }
    dend_72 { pt3dadd( -41.7429, 119.225, 14.608, 0.22 ) }
    dend_72 { pt3dadd( -41.7797, 119.33, 14.5762, 0.22 ) }
    dend_72 { pt3dadd( -42.0804, 120.289, 14.3317, 0.22 ) }
    dend_72 { pt3dadd( -42.173, 120.593, 14.2746, 0.22 ) }
    dend_72 { pt3dadd( -42.3972, 121.349, 14.2036, 0.22 ) }
    dend_72 { pt3dadd( -42.5881, 121.892, 14.1493, 0.96 ) }
    dend_72 { pt3dadd( -42.7015, 122.184, 14.1177, 0.96 ) }
    dend_72 { pt3dadd( -42.9126, 122.637, 14.0783, 0.22 ) }
    dend_72 { pt3dadd( -43.2135, 123.184, 14.0378, 0.22 ) }
    dend_72 { pt3dadd( -43.3228, 123.379, 14.0271, 0.22 ) }
    dend_72 { pt3dadd( -44.2062, 124.971, 13.9671, 0.22 ) }
    dend_72 { pt3dadd( -44.2817, 125.115, 13.9737, 0.22 ) }
    dend_72 { pt3dadd( -44.6799, 125.903, 14.0553, 0.81 ) }
    dend_72 { pt3dadd( -44.7126, 125.971, 14.0658, 0.81 ) }
    dend_72 { pt3dadd( -45.0813, 126.76, 14.2259, 1.33 ) }
    dend_72 { pt3dadd( -45.3073, 127.252, 14.3499, 1.33 ) }
    dend_72 { pt3dadd( -45.8554, 128.215, 14.6626, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_72 { pt3dadd( -46.1624, 128.678, 14.8123, 0.15 ) }
    dend_72 { pt3dadd( -46.2324, 128.768, 14.8345, 0.15 ) }
    dend_72 { pt3dadd( -46.9091, 129.568, 15.0076, 0.15 ) }
    dend_72 { pt3dadd( -47.0063, 129.671, 15.0259, 0.15 ) }
    dend_72 { pt3dadd( -49.0474, 131.694, 15.2962, 0.15 ) }
    dend_72 { pt3dadd( -49.1811, 131.823, 15.2944, 0.15 ) }
    dend_72 { pt3dadd( -50.8927, 133.385, 15.0748, 0.15 ) }
    dend_72 { pt3dadd( -51.0208, 133.495, 15.0456, 1.03 ) }
    dend_72 { pt3dadd( -51.6175, 133.973, 14.8367, 1.03 ) }
    dend_72 { pt3dadd( -51.6749, 134.017, 14.8107, 1.03 ) }
    dend_72 { pt3dadd( -52.9516, 134.888, 13.9005, 0.15 ) }
    dend_72 { pt3dadd( -53.9585, 135.535, 13.102, 0.15 ) }
    dend_72 { pt3dadd( -54.0772, 135.597, 12.9839, 0.59 ) }
    dend_72 { pt3dadd( -54.5051, 135.826, 12.5536, 0.59 ) }
    dend_72 { pt3dadd( -59.1757, 145.622, 11.9559, 0.59 ) }
    dend_72 { pt3dadd( -65.6385, 154.175, 9.86627, 0.59 ) }
    dend_72 { pt3dadd( -73.171, 162.095, 9.23521, 0.59 ) }
    dend_72 { pt3dadd( -80.652, 170.025, 8.22914, 0.59 ) }
    dend_72 { pt3dadd( -88.7454, 177.399, 7.58949, 0.59 ) }
    dend_72 { pt3dadd( -95.2614, 186.153, 7.33513, 0.59 ) }
    dend_72 { pt3dadd( -101.493, 195.045, 6.28946, 0.59 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 21/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -1.47821, 27.0137, 0.315367, 0.66 ) }
    dend_71 { pt3dadd( -1.69343, 27.4644, -0.206582, 0.66 ) }
    dend_71 { pt3dadd( -2.05378, 27.9189, -0.966152, 0.52 ) }
    dend_71 { pt3dadd( -2.29742, 28.149, -1.39865, 0.52 ) }
    dend_71 { pt3dadd( -2.3235, 28.1717, -1.439, 0.52 ) }
    dend_71 { pt3dadd( -2.81825, 28.5911, -2.1595, 0.52 ) }
    dend_71 { pt3dadd( -2.88232, 28.6476, -2.25147, 0.52 ) }
    dend_71 { pt3dadd( -3.64774, 29.3905, -3.32262, 0.88 ) }
    dend_71 { pt3dadd( -3.94732, 29.7331, -3.70401, 0.96 ) }
    dend_71 { pt3dadd( -4.26566, 30.2348, -4.08613, 0.96 ) }
    dend_71 { pt3dadd( -4.28707, 30.2763, -4.11021, 0.96 ) }
    dend_71 { pt3dadd( -4.56631, 30.9523, -4.42206, 0.66 ) }
    dend_71 { pt3dadd( -4.89938, 31.8829, -4.8096, 0.66 ) }
    dend_71 { pt3dadd( -5.20252, 32.8431, -5.1594, 0.66 ) }
    dend_71 { pt3dadd( -5.65826, 34.1863, -5.66081, 0.66 ) }
    dend_71 { pt3dadd( -5.67563, 34.2318, -5.68014, 0.66 ) }
    dend_71 { pt3dadd( -6.09233, 35.1614, -6.11826, 0.44 ) }
    dend_71 { pt3dadd( -6.40485, 35.7337, -6.41898, 0.44 ) }
    dend_71 { pt3dadd( -6.74347, 36.2259, -6.72539, 0.88 ) }
    dend_71 { pt3dadd( -7.29798, 36.92, -7.22166, 0.88 ) }
    dend_71 { pt3dadd( -7.79113, 37.4909, -7.64907, 0.44 ) }
    dend_71 { pt3dadd( -8.13083, 37.8859, -7.93212, 0.96 ) }
    dend_71 { pt3dadd( -8.47972, 38.2823, -8.20363, 1.25 ) }
    dend_71 { pt3dadd( -8.94099, 38.8123, -8.56225, 1.25 ) }
    dend_71 { pt3dadd( -9.54376, 39.4766, -8.96157, 0.52 ) }
    dend_71 { pt3dadd( -10.1334, 40.1114, -9.26924, 0.29 ) }
    dend_71 { pt3dadd( -10.2492, 40.237, -9.31242, 0.29 ) }
    dend_71 { pt3dadd( -10.669, 40.7002, -9.4378, 0.29 ) }
    dend_71 { pt3dadd( -10.975, 41.055, -9.50536, 0.29 ) }
    dend_71 { pt3dadd( -11.5762, 41.7962, -9.58756, 0.29 ) }
    dend_71 { pt3dadd( -12.0125, 42.3909, -9.61537, 0.29 ) }
    dend_71 { pt3dadd( -12.2735, 42.8165, -9.6333, 0.29 ) }
    dend_71 { pt3dadd( -12.4521, 43.1716, -9.65476, 0.29 ) }
    dend_71 { pt3dadd( -12.7317, 43.8772, -9.70895, 0.66 ) }
    dend_71 { pt3dadd( -12.903, 44.402, -9.7572, 0.96 ) }
    dend_71 { pt3dadd( -13.1127, 45.1669, -9.85723, 0.96 ) }
    dend_71 { pt3dadd( -13.2413, 45.6497, -9.91205, 0.96 ) }
    dend_71 { pt3dadd( -13.3749, 46.1356, -9.96267, 0.52 ) }
    dend_71 { pt3dadd( -13.4858, 46.4973, -10.0002, 0.37 ) }
    dend_71 { pt3dadd( -13.6144, 46.8041, -10.0088, 0.37 ) }
    dend_71 { pt3dadd( -13.6721, 46.906, -10.0039, 0.37 ) }
    dend_71 { pt3dadd( -14.0441, 47.3942, -9.951, 0.37 ) }
    dend_71 { pt3dadd( -14.2016, 47.5661, -9.92989, 0.37 ) }
    dend_71 { pt3dadd( -14.5225, 47.8919, -9.89701, 0.37 ) }
    dend_71 { pt3dadd( -15.2958, 48.6573, -9.83701, 0.37 ) }
    dend_71 { pt3dadd( -15.4092, 48.7697, -9.82983, 0.37 ) }
    dend_71 { pt3dadd( -15.9766, 49.3565, -9.85221, 0.37 ) }
    dend_71 { pt3dadd( -16.2961, 49.7043, -9.9086, 0.66 ) }
    dend_71 { pt3dadd( -16.6796, 50.1645, -10.0334, 0.66 ) }
    dend_71 { pt3dadd( -17.1616, 50.8443, -10.2972, 0.66 ) }
    dend_71 { pt3dadd( -17.1862, 50.8857, -10.3182, 0.66 ) }
    dend_71 { pt3dadd( -17.6878, 51.8588, -10.8098, 0.29 ) }
    dend_71 { pt3dadd( -17.9121, 52.3711, -11.0773, 0.29 ) }
    dend_71 { pt3dadd( -17.965, 52.5091, -11.1501, 0.29 ) }
    dend_71 { pt3dadd( -18.1663, 53.1198, -11.4614, 0.88 ) }
    dend_71 { pt3dadd( -18.2999, 53.6087, -11.6892, 0.88 ) }
    dend_71 { pt3dadd( -18.3864, 53.9141, -11.7927, 0.88 ) }
    dend_71 { pt3dadd( -18.5115, 54.3373, -11.8767, 0.37 ) }
    dend_71 { pt3dadd( -18.5272, 54.394, -11.8862, 0.37 ) }
    dend_71 { pt3dadd( -18.639, 54.7534, -11.94, 0.37 ) }
    dend_71 { pt3dadd( -18.6951, 54.9067, -11.9579, 0.37 ) }
    dend_71 { pt3dadd( -19.0816, 55.7759, -12.0552, 0.37 ) }
    dend_71 { pt3dadd( -19.1037, 55.8227, -12.063, 0.37 ) }
    dend_71 { pt3dadd( -19.2845, 56.1862, -12.1364, 1.11 ) }
    dend_71 { pt3dadd( -19.7127, 57.0176, -12.3343, 1.11 ) }
    dend_71 { pt3dadd( -20.1269, 57.791, -12.5424, 1.11 ) }
    dend_71 { pt3dadd( -20.5451, 58.5844, -12.8094, 1.11 ) }
    dend_71 { pt3dadd( -20.8497, 59.1741, -13.0437, 1.11 ) }
    dend_71 { pt3dadd( -20.9792, 59.4287, -13.1571, 0.44 ) }
    dend_71 { pt3dadd( -21.3321, 60.032, -13.4684, 0.44 ) }
    dend_71 { pt3dadd( -21.4309, 60.183, -13.5548, 0.44 ) }
    dend_71 { pt3dadd( -21.9644, 60.9289, -13.9948, 0.44 ) }
    dend_71 { pt3dadd( -21.9941, 60.9668, -14.0162, 0.44 ) }
    dend_71 { pt3dadd( -22.4152, 61.4707, -14.2633, 0.44 ) }
    dend_71 { pt3dadd( -23.641, 62.8952, -14.9005, 0.44 ) }
    dend_71 { pt3dadd( -23.9236, 63.2113, -15.0311, 1.33 ) }
    dend_71 { pt3dadd( -24.3199, 63.6663, -15.1904, 1.62 ) }
    dend_71 { pt3dadd( -24.8291, 64.2877, -15.3526, 0.96 ) }
    dend_71 { pt3dadd( -25.15, 64.7153, -15.4482, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_71 { pt3dadd( -25.619, 65.3987, -15.576, 0.37 ) }
    dend_71 { pt3dadd( -25.6497, 65.4496, -15.5834, 0.37 ) }
    dend_71 { pt3dadd( -26.3632, 66.6971, -15.7621, 0.37 ) }
    dend_71 { pt3dadd( -26.9156, 67.7221, -15.9147, 0.37 ) }
    dend_71 { pt3dadd( -27.2161, 68.3093, -16.0062, 0.74 ) }
    dend_71 { pt3dadd( -27.3709, 68.6202, -16.0604, 0.29 ) }
    dend_71 { pt3dadd( -27.4245, 68.7302, -16.0788, 0.29 ) }
    dend_71 { pt3dadd( -27.9765, 69.8851, -16.2675, 0.29 ) }
    dend_71 { pt3dadd( -28.0224, 69.9861, -16.2832, 0.29 ) }
    dend_71 { pt3dadd( -28.2582, 70.5238, -16.3701, 1.55 ) }
    dend_71 { pt3dadd( -28.5036, 71.1153, -16.459, 1.62 ) }
    dend_71 { pt3dadd( -28.7125, 71.6233, -16.5365, 1.03 ) }
    dend_71 { pt3dadd( -28.7328, 71.6709, -16.5443, 1.03 ) }
    dend_71 { pt3dadd( -28.9145, 72.0814, -16.6173, 0.37 ) }
    dend_71 { pt3dadd( -28.9358, 72.1283, -16.6263, 0.37 ) }
    dend_71 { pt3dadd( -29.2143, 72.7119, -16.7528, 0.37 ) }
    dend_71 { pt3dadd( -29.5525, 73.3796, -16.909, 1.11 ) }
    dend_71 { pt3dadd( -29.8319, 73.9073, -17.0288, 1.11 ) }
    dend_71 { pt3dadd( -29.9797, 74.176, -17.0874, 0.52 ) }
    dend_71 { pt3dadd( -30.0363, 74.2842, -17.1083, 0.52 ) }
    dend_71 { pt3dadd( -30.2528, 74.7324, -17.1838, 0.52 ) }
    dend_71 { pt3dadd( -30.347, 74.9426, -17.2149, 0.52 ) }
    dend_71 { pt3dadd( -30.5115, 75.3454, -17.267, 0.52 ) }
    dend_71 { pt3dadd( -30.6443, 75.6879, -17.3102, 1.11 ) }
    dend_71 { pt3dadd( -30.9689, 76.5545, -17.4205, 1.11 ) }
    dend_71 { pt3dadd( -31.1368, 76.9891, -17.482, 0.37 ) }
    dend_71 { pt3dadd( -31.3783, 77.5938, -17.5769, 0.37 ) }
    dend_71 { pt3dadd( -31.4434, 77.7422, -17.6044, 0.37 ) }
    dend_71 { pt3dadd( -31.7325, 78.3463, -17.736, 0.37 ) }
    dend_71 { pt3dadd( -31.8471, 78.5631, -17.7895, 0.37 ) }
    dend_71 { pt3dadd( -32.2205, 79.1836, -17.9637, 0.37 ) }
    dend_71 { pt3dadd( -32.4652, 79.5638, -18.0786, 0.88 ) }
    dend_71 { pt3dadd( -32.7383, 79.969, -18.2075, 0.88 ) }
    dend_71 { pt3dadd( -32.7673, 80.0107, -18.2212, 0.88 ) }
    dend_71 { pt3dadd( -32.8638, 80.1442, -18.2659, 0.29 ) }
    dend_71 { pt3dadd( -32.9277, 80.2322, -18.295, 0.29 ) }
    dend_71 { pt3dadd( -33.4355, 80.9447, -18.5222, 0.29 ) }
    dend_71 { pt3dadd( -33.4634, 80.9863, -18.5382, 0.29 ) }
    dend_71 { pt3dadd( -33.7925, 81.4771, -18.7591, 0.81 ) }
    dend_71 { pt3dadd( -34.02, 81.8075, -18.9254, 1.11 ) }
    dend_71 { pt3dadd( -34.1573, 81.9835, -19.0281, 1.11 ) }
    dend_71 { pt3dadd( -34.1885, 82.0187, -19.0521, 1.11 ) }
    dend_71 { pt3dadd( -34.641, 82.4409, -19.4024, 0.22 ) }
    dend_71 { pt3dadd( -34.9612, 82.707, -19.6383, 0.22 ) }
    dend_71 { pt3dadd( -35.0173, 82.7485, -19.6784, 0.22 ) }
    dend_71 { pt3dadd( -35.5165, 83.1193, -20.0184, 0.22 ) }
    dend_71 { pt3dadd( -35.6321, 83.2118, -20.0945, 0.22 ) }
    dend_71 { pt3dadd( -36.0062, 83.535, -20.3233, 0.22 ) }
    dend_71 { pt3dadd( -36.2464, 83.7708, -20.449, 0.22 ) }
    dend_71 { pt3dadd( -36.2912, 83.8247, -20.4743, 0.66 ) }
    dend_71 { pt3dadd( -36.4829, 84.1248, -20.6149, 0.66 ) }
    dend_71 { pt3dadd( -36.6563, 84.4823, -20.776, 0.15 ) }
    dend_71 { pt3dadd( -36.7203, 84.6145, -20.8366, 0.15 ) }
    dend_71 { pt3dadd( -36.9696, 85.1385, -21.0807, 0.15 ) }
    dend_71 { pt3dadd( -37.0184, 85.2316, -21.1204, 0.15 ) }
    dend_71 { pt3dadd( -37.2731, 85.6739, -21.2953, 0.59 ) }
    dend_71 { pt3dadd( -37.7382, 86.3551, -21.5491, 0.59 ) }
    dend_71 { pt3dadd( -38.0034, 86.7003, -21.6614, 0.59 ) }
    dend_71 { pt3dadd( -38.0408, 86.7455, -21.6746, 0.59 ) }
    dend_71 { pt3dadd( -38.3676, 87.1183, -21.7688, 0.22 ) }
    dend_71 { pt3dadd( -38.4022, 87.1569, -21.7785, 0.22 ) }
    dend_71 { pt3dadd( -38.7524, 87.5298, -21.8728, 0.22 ) }
    dend_71 { pt3dadd( -38.9375, 87.7295, -21.9386, 0.22 ) }
    dend_71 { pt3dadd( -39.3824, 88.2301, -22.1321, 0.22 ) }
    dend_71 { pt3dadd( -39.5662, 88.4501, -22.2217, 0.22 ) }
    dend_71 { pt3dadd( -39.7257, 88.6451, -22.3071, 0.74 ) }
    dend_71 { pt3dadd( -40.1431, 89.16, -22.5362, 0.74 ) }
    dend_71 { pt3dadd( -40.3984, 89.4785, -22.6785, 0.22 ) }
    dend_71 { pt3dadd( -40.4599, 89.5568, -22.713, 0.22 ) }
    dend_71 { pt3dadd( -41.4236, 90.7583, -23.2417, 0.22 ) }
    dend_71 { pt3dadd( -41.5648, 90.9325, -23.3335, 0.81 ) }
    dend_71 { pt3dadd( -42.0295, 91.4981, -23.6685, 0.81 ) }
    dend_71 { pt3dadd( -42.0576, 91.5349, -23.6936, 0.81 ) }
    dend_71 { pt3dadd( -42.1846, 91.7077, -23.8273, 0.15 ) }
    dend_71 { pt3dadd( -42.6244, 92.3213, -24.3611, 0.15 ) }
    dend_71 { pt3dadd( -43.0545, 92.957, -25.0064, 0.66 ) }
    dend_71 { pt3dadd( -43.1887, 93.1706, -25.2107, 0.66 ) }
    dend_71 { pt3dadd( -43.537, 93.7753, -25.75, 0.15 ) }
    dend_71 { pt3dadd( -43.6578, 93.9936, -25.9263, 0.37 ) }
    dend_71 { pt3dadd( -43.7345, 94.1429, -26.0478, 0.15 ) }
    dend_71 { pt3dadd( -43.7512, 94.1827, -26.0778, 0.15 ) }
    dend_71 { pt3dadd( -44.0449, 94.851, -26.4912, 0.15 ) }
    dend_71 { pt3dadd( -44.1234, 95.0293, -26.6014, 1.03 ) }
    dend_71 { pt3dadd( -44.265, 95.3539, -26.84, 1.03 ) }
    dend_71 { pt3dadd( -44.498, 95.9371, -27.3014, 0.22 ) }
    dend_71 { pt3dadd( -44.5125, 95.9757, -27.3342, 0.22 ) }
    dend_71 { pt3dadd( -44.7678, 96.7542, -28.071, 0.22 ) }
    dend_71 { pt3dadd( -44.7787, 96.7914, -28.1067, 0.22 ) }
    dend_71 { pt3dadd( -44.9617, 97.4228, -28.6832, 0.88 ) }
    dend_71 { pt3dadd( -45.0669, 97.7385, -28.9162, 0.88 ) }
    dend_71 { pt3dadd( -45.0873, 97.7832, -28.9344, 0.88 ) }
    dend_71 { pt3dadd( -45.3067, 98.1701, -29.0049, 0.22 ) }
    dend_71 { pt3dadd( -45.8555, 99.0661, -29.0545, 0.22 ) }
    dend_71 { pt3dadd( -45.8839, 99.1102, -29.0544, 0.22 ) }
    dend_71 { pt3dadd( -46.3869, 99.8419, -29.0102, 0.22 ) }
    dend_71 { pt3dadd( -47.0326, 100.727, -28.9758, 0.22 ) }
    dend_71 { pt3dadd( -47.5793, 101.45, -28.961, 0.22 ) }
    dend_71 { pt3dadd( -47.9759, 101.967, -28.9588, 1.11 ) }
    dend_71 { pt3dadd( -48.0479, 102.06, -28.9604, 1.11 ) }
    dend_71 { pt3dadd( -48.2423, 102.317, -28.9808, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_71 { pt3dadd( -48.7926, 103.105, -29.1538, 0.22 ) }
    dend_71 { pt3dadd( -48.9425, 103.327, -29.2344, 0.66 ) }
    dend_71 { pt3dadd( -49.2945, 103.822, -29.4319, 0.66 ) }
    // Section: dend_63, id: dend_63, parent: dend_59 (entry count 3/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 19.104, 13.1164, -26.926, 0.81 ) }
    dend_63 { pt3dadd( 19.7651, 13.1268, -28.6398, 0.81 ) }
    dend_63 { pt3dadd( 19.797, 13.1316, -28.7093, 0.81 ) }
    dend_63 { pt3dadd( 20.1525, 13.2012, -29.4407, 0.81 ) }
    dend_63 { pt3dadd( 20.3193, 13.25, -29.7492, 0.81 ) }
    dend_63 { pt3dadd( 20.8855, 13.4491, -30.7339, 0.52 ) }
    dend_63 { pt3dadd( 23.1086, 14.3682, -34.3225, 0.81 ) }
    dend_63 { pt3dadd( 23.7508, 14.7211, -35.1966, 0.81 ) }
    dend_63 { pt3dadd( 23.7958, 14.7474, -35.2524, 0.81 ) }
    dend_63 { pt3dadd( 24.5246, 15.2226, -36.1008, 0.81 ) }
    dend_63 { pt3dadd( 24.6145, 15.28, -36.1961, 0.81 ) }
    dend_63 { pt3dadd( 25.1392, 15.5526, -36.6683, 0.81 ) }
    dend_63 { pt3dadd( 26.0981, 15.7985, -37.1658, 0.52 ) }
    dend_63 { pt3dadd( 26.435, 15.815, -37.832, 0.52 ) }
    dend_63 { pt3dadd( 26.5181, 15.8183, -38.0101, 0.52 ) }
    dend_63 { pt3dadd( 26.9328, 15.7936, -39.0364, 0.81 ) }
    dend_63 { pt3dadd( 27.6087, 15.7254, -40.896, 0.81 ) }
    dend_63 { pt3dadd( 27.6285, 15.7223, -40.96, 0.81 ) }
    dend_63 { pt3dadd( 28.5918, 15.6029, -44.67, 0.74 ) }
    dend_63 { pt3dadd( 28.8744, 15.6294, -45.7984, 1.84 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 23/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 19.104, 13.1164, -26.926, 1.4 ) }
    dend_60 { pt3dadd( 19.1492, 13.111, -26.894, 1.4 ) }
    dend_60 { pt3dadd( 22.1893, 12.8374, -25.1205, 0.96 ) }
    dend_60 { pt3dadd( 22.4051, 12.8262, -25.0254, 0.96 ) }
    dend_60 { pt3dadd( 23.9546, 12.7799, -24.5108, 0.96 ) }
    dend_60 { pt3dadd( 24.046, 12.7795, -24.4874, 0.96 ) }
    dend_60 { pt3dadd( 25.6799, 12.7929, -24.1315, 0.96 ) }
    dend_60 { pt3dadd( 25.7461, 12.7963, -24.1246, 0.96 ) }
    dend_60 { pt3dadd( 27.0478, 12.9568, -24.1928, 1.18 ) }
    dend_60 { pt3dadd( 28.0904, 13.1158, -24.2408, 0.88 ) }
    dend_60 { pt3dadd( 29.0731, 13.2954, -24.2824, 0.88 ) }
    dend_60 { pt3dadd( 29.1383, 13.3082, -24.285, 0.88 ) }
    dend_60 { pt3dadd( 29.7206, 13.4371, -24.3391, 0.88 ) }
    dend_60 { pt3dadd( 30.5345, 13.6305, -24.441, 0.88 ) }
    dend_60 { pt3dadd( 30.5983, 13.6466, -24.4506, 0.88 ) }
    dend_60 { pt3dadd( 32.6014, 14.1499, -24.7662, 0.88 ) }
    dend_60 { pt3dadd( 32.6917, 14.1714, -24.7808, 0.88 ) }
    dend_60 { pt3dadd( 34.7307, 14.617, -25.1867, 1.18 ) }
    dend_60 { pt3dadd( 36.166, 14.9127, -25.5114, 1.18 ) }
    dend_60 { pt3dadd( 36.5196, 14.9821, -25.5985, 1.18 ) }
    dend_60 { pt3dadd( 38.0718, 15.3189, -25.9888, 1.18 ) }
    dend_60 { pt3dadd( 38.3498, 15.3853, -26.062, 1.18 ) }
    dend_60 { pt3dadd( 40.2024, 15.7708, -26.5206, 1.18 ) }
    dend_60 { pt3dadd( 40.4054, 15.796, -26.565, 1.18 ) }
    dend_60 { pt3dadd( 40.9079, 15.8141, -26.6786, 0.52 ) }
    dend_60 { pt3dadd( 42.1628, 15.7387, -26.9448, 0.52 ) }
    dend_60 { pt3dadd( 42.2275, 15.728, -26.9572, 0.52 ) }
    dend_60 { pt3dadd( 43.4347, 15.4383, -27.1382, 0.88 ) }
    dend_60 { pt3dadd( 44.7481, 15.0127, -27.2617, 0.88 ) }
    dend_60 { pt3dadd( 44.982, 14.9337, -27.2895, 0.88 ) }
    dend_60 { pt3dadd( 45.8808, 14.6261, -27.4136, 1.25 ) }
    dend_60 { pt3dadd( 46.0791, 14.5645, -27.4426, 1.25 ) }
    dend_60 { pt3dadd( 46.9668, 14.3792, -27.5651, 1.25 ) }
    dend_60 { pt3dadd( 47.0982, 14.3633, -27.5826, 1.25 ) }
    dend_60 { pt3dadd( 48.6003, 14.2831, -27.8362, 1.11 ) }
    dend_60 { pt3dadd( 50.1228, 14.2508, -28.1267, 1.11 ) }
    dend_60 { pt3dadd( 51.3398, 14.2279, -28.3749, 0.81 ) }
    dend_60 { pt3dadd( 52.6955, 14.1913, -28.6633, 0.81 ) }
    dend_60 { pt3dadd( 52.9102, 14.1772, -28.7093, 0.81 ) }
    dend_60 { pt3dadd( 54.8035, 13.9791, -29.1059, 0.81 ) }
    dend_60 { pt3dadd( 54.9018, 13.9652, -29.126, 0.81 ) }
    dend_60 { pt3dadd( 56.9615, 13.5964, -29.5479, 0.81 ) }
    dend_60 { pt3dadd( 57.0586, 13.5744, -29.5666, 0.81 ) }
    dend_60 { pt3dadd( 59.2058, 13.0117, -29.9432, 0.81 ) }
    dend_60 { pt3dadd( 60.0716, 12.8028, -30.1194, 0.96 ) }
    dend_60 { pt3dadd( 60.2815, 12.7554, -30.1655, 0.96 ) }
    dend_60 { pt3dadd( 61.2279, 12.5711, -30.4053, 0.74 ) }
    dend_60 { pt3dadd( 62.4982, 12.3695, -30.7614, 0.74 ) }
    dend_60 { pt3dadd( 62.5617, 12.3607, -30.7799, 0.74 ) }
    dend_60 { pt3dadd( 65.2031, 12.0613, -31.6759, 0.74 ) }
    dend_60 { pt3dadd( 66.01, 11.9729, -31.9621, 1.4 ) }
    dend_60 { pt3dadd( 67.6586, 11.7927, -32.567, 1.77 ) }
    dend_60 { pt3dadd( 68.6323, 11.6905, -32.9426, 1.77 ) }
    dend_60 { pt3dadd( 68.8968, 11.662, -33.0475, 1.77 ) }
    dend_60 { pt3dadd( 70.3006, 11.4905, -33.5666, 1.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_49 (entry count 78/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -17.0022, 40.8102, 17.3022, 0.44 ) }
    dend_55 { pt3dadd( -18.8461, 41.3415, 18.0953, 0.44 ) }
    dend_55 { pt3dadd( -20.5305, 41.8901, 18.7764, 0.44 ) }
    dend_55 { pt3dadd( -22.4049, 42.5427, 19.512, 0.44 ) }
    dend_55 { pt3dadd( -22.4732, 42.5672, 19.5374, 0.44 ) }
    dend_55 { pt3dadd( -24.5191, 43.3156, 20.2792, 0.74 ) }
    dend_55 { pt3dadd( -25.3514, 43.6037, 20.562, 0.74 ) }
    dend_55 { pt3dadd( -25.8765, 43.8018, 20.7027, 0.37 ) }
    dend_55 { pt3dadd( -25.9475, 43.8245, 20.7216, 0.37 ) }
    dend_55 { pt3dadd( -26.9259, 44.0871, 20.8897, 0.37 ) }
    dend_55 { pt3dadd( -26.9893, 44.0999, 20.9023, 0.37 ) }
    dend_55 { pt3dadd( -28.1164, 44.2757, 21.1423, 0.37 ) }
    dend_55 { pt3dadd( -28.2136, 44.2911, 21.167, 0.37 ) }
    dend_55 { pt3dadd( -29.6274, 44.5651, 21.6251, 0.37 ) }
    dend_55 { pt3dadd( -29.7203, 44.587, 21.6592, 0.37 ) }
    dend_55 { pt3dadd( -31.1038, 45.013, 22.1766, 0.37 ) }
    dend_55 { pt3dadd( -31.8038, 45.2877, 22.405, 0.37 ) }
    dend_55 { pt3dadd( -31.879, 45.3284, 22.4243, 0.37 ) }
    dend_55 { pt3dadd( -32.9559, 45.9734, 22.5995, 0.37 ) }
    dend_55 { pt3dadd( -33.0204, 46.0143, 22.6063, 0.37 ) }
    dend_55 { pt3dadd( -34.0213, 46.6225, 22.6521, 0.59 ) }
    dend_55 { pt3dadd( -34.9971, 47.1912, 22.6317, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( -36.2609, 47.8554, 22.5804, 0.81 ) }
    dend_55 { pt3dadd( -37.3509, 48.4112, 22.5212, 0.81 ) }
    dend_55 { pt3dadd( -38.3776, 48.9348, 22.4452, 0.29 ) }
    dend_55 { pt3dadd( -38.873, 49.1935, 22.4196, 0.29 ) }
    dend_55 { pt3dadd( -39.018, 49.271, 22.4247, 0.29 ) }
    dend_55 { pt3dadd( -40.1532, 49.8195, 22.5464, 0.29 ) }
    dend_55 { pt3dadd( -40.3193, 49.8892, 22.5707, 0.29 ) }
    dend_55 { pt3dadd( -41.3114, 50.2608, 22.7187, 0.59 ) }
    dend_55 { pt3dadd( -42.0727, 50.5004, 22.8148, 0.59 ) }
    dend_55 { pt3dadd( -43.7661, 50.9491, 23.03, 0.15 ) }
    dend_55 { pt3dadd( -44.957, 51.2183, 23.1619, 0.37 ) }
    dend_55 { pt3dadd( -45.3581, 51.29, 23.2001, 0.74 ) }
    dend_55 { pt3dadd( -46.0965, 51.3775, 23.2856, 0.37 ) }
    dend_55 { pt3dadd( -46.7013, 51.3966, 23.3712, 0.37 ) }
    dend_55 { pt3dadd( -46.7878, 51.3962, 23.3878, 0.37 ) }
    dend_55 { pt3dadd( -47.3505, 51.4379, 23.5461, 0.22 ) }
    dend_55 { pt3dadd( -47.464, 51.5166, 23.647, 0.22 ) }
    dend_55 { pt3dadd( -48.1746, 52.2665, 24.5126, 0.22 ) }
    dend_55 { pt3dadd( -48.2291, 52.3284, 24.5819, 0.22 ) }
    dend_55 { pt3dadd( -48.7898, 52.9933, 25.2644, 0.22 ) }
    dend_55 { pt3dadd( -48.9505, 53.1328, 25.4533, 0.22 ) }
    dend_55 { pt3dadd( -49.3081, 53.3558, 25.8352, 0.22 ) }
    dend_55 { pt3dadd( -49.3634, 53.3821, 25.8815, 0.22 ) }
    dend_55 { pt3dadd( -50.6228, 53.8941, 26.7805, 0.74 ) }
    dend_55 { pt3dadd( -51.1294, 54.0722, 27.0958, 0.74 ) }
    dend_55 { pt3dadd( -53.2794, 54.7222, 28.2812, 0.59 ) }
    dend_55 { pt3dadd( -54.7675, 55.1453, 29.0089, 0.37 ) }
    dend_55 { pt3dadd( -56.2514, 55.4813, 29.693, 0.37 ) }
    dend_55 { pt3dadd( -56.3315, 55.4884, 29.7288, 0.37 ) }
    dend_55 { pt3dadd( -57.0974, 55.4253, 30.1073, 0.37 ) }
    dend_55 { pt3dadd( -57.2334, 55.4054, 30.1768, 0.37 ) }
    dend_55 { pt3dadd( -58.3429, 55.1844, 30.7352, 0.37 ) }
    dend_55 { pt3dadd( -59.8504, 54.8861, 31.6674, 0.88 ) }
    dend_55 { pt3dadd( -61.8599, 54.5701, 33.2852, 0.88 ) }
    dend_55 { pt3dadd( -63.5723, 54.4715, 35.1864, 0.37 ) }
    dend_55 { pt3dadd( -64.3231, 54.5036, 36.266, 0.37 ) }
    dend_55 { pt3dadd( -64.3845, 54.5101, 36.3652, 0.37 ) }
    dend_55 { pt3dadd( -65.237, 54.7317, 38.0691, 0.37 ) }
    dend_55 { pt3dadd( -65.7561, 55.1467, 39.4299, 0.37 ) }
    dend_55 { pt3dadd( -66.327, 56.2393, 41.7514, 0.37 ) }
    dend_55 { pt3dadd( -66.3324, 56.2726, 41.8198, 0.37 ) }
    dend_55 { pt3dadd( -75.9916, 57.0971, 47.0222, 0.37 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 42/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -17.0022, 40.8102, 17.3022, 0.52 ) }
    dend_50 { pt3dadd( -17.3102, 41.6765, 18.076, 0.52 ) }
    dend_50 { pt3dadd( -17.6378, 42.3664, 18.5994, 0.52 ) }
    dend_50 { pt3dadd( -17.6612, 42.4035, 18.6294, 0.52 ) }
    dend_50 { pt3dadd( -18.2212, 43.1138, 19.2407, 0.52 ) }
    dend_50 { pt3dadd( -18.2684, 43.1685, 19.2922, 0.52 ) }
    dend_50 { pt3dadd( -18.8359, 43.8535, 19.9308, 0.52 ) }
    dend_50 { pt3dadd( -19.4218, 44.5199, 20.5427, 0.74 ) }
    dend_50 { pt3dadd( -20.0898, 45.3085, 21.2618, 0.74 ) }
    dend_50 { pt3dadd( -20.7288, 46.1952, 22.0635, 0.59 ) }
    dend_50 { pt3dadd( -21.1987, 46.9016, 22.8013, 0.59 ) }
    dend_50 { pt3dadd( -21.5968, 47.5245, 23.5499, 0.66 ) }
    dend_50 { pt3dadd( -21.6178, 47.5596, 23.5967, 0.66 ) }
    dend_50 { pt3dadd( -21.8441, 48.0001, 24.2251, 0.66 ) }
    dend_50 { pt3dadd( -22.3234, 49.1496, 25.8815, 0.52 ) }
    dend_50 { pt3dadd( -22.7287, 50.4397, 27.7772, 0.52 ) }
    dend_50 { pt3dadd( -22.869, 51.0711, 28.7102, 0.52 ) }
    dend_50 { pt3dadd( -22.8768, 51.1233, 28.7884, 0.52 ) }
    dend_50 { pt3dadd( -22.9226, 51.5695, 29.3965, 0.52 ) }
    dend_50 { pt3dadd( -22.9258, 51.6615, 29.5105, 0.52 ) }
    dend_50 { pt3dadd( -22.8316, 52.5011, 30.2669, 0.96 ) }
    dend_50 { pt3dadd( -22.6692, 53.2397, 30.7075, 0.96 ) }
    dend_50 { pt3dadd( -22.6115, 53.7057, 30.9396, 0.52 ) }
    dend_50 { pt3dadd( -22.6261, 54.5653, 31.3591, 0.52 ) }
    dend_50 { pt3dadd( -22.6384, 54.6206, 31.383, 0.52 ) }
    dend_50 { pt3dadd( -22.9099, 55.4297, 31.6727, 0.74 ) }
    dend_50 { pt3dadd( -22.9388, 55.4914, 31.6906, 0.74 ) }
    dend_50 { pt3dadd( -23.3667, 56.3365, 32.021, 0.74 ) }
    dend_50 { pt3dadd( -23.389, 56.3877, 32.0471, 0.74 ) }
    dend_50 { pt3dadd( -23.6683, 57.1706, 32.496, 0.37 ) }
    dend_50 { pt3dadd( -23.8455, 57.6221, 32.818, 0.37 ) }
    dend_50 { pt3dadd( -23.8611, 57.6639, 32.8465, 0.37 ) }
    dend_50 { pt3dadd( -24.2698, 58.855, 33.62, 0.37 ) }
    dend_50 { pt3dadd( -24.4681, 59.4395, 34.0409, 0.59 ) }
    dend_50 { pt3dadd( -24.8527, 60.4075, 34.7447, 0.81 ) }
    dend_50 { pt3dadd( -25.5292, 61.6988, 35.7757, 0.52 ) }
    dend_50 { pt3dadd( -26.0202, 62.476, 36.4246, 0.52 ) }
    dend_50 { pt3dadd( -26.6349, 63.2949, 37.1133, 0.52 ) }
    dend_50 { pt3dadd( -27.4126, 64.1219, 37.7682, 0.29 ) }
    dend_50 { pt3dadd( -28.0579, 64.6482, 38.2307, 0.29 ) }
    dend_50 { pt3dadd( -29.1049, 65.2862, 38.8609, 0.29 ) }
    dend_50 { pt3dadd( -29.1988, 65.3334, 38.9103, 0.29 ) }
    dend_50 { pt3dadd( -29.7654, 65.5504, 39.2147, 0.15 ) }
    dend_50 { pt3dadd( -30.6803, 65.8102, 39.6454, 0.15 ) }
    dend_50 { pt3dadd( -31.7492, 66.1289, 40.0374, 0.81 ) }
    dend_50 { pt3dadd( -32.2797, 66.3094, 40.252, 0.81 ) }
    dend_50 { pt3dadd( -36.1455, 73.3672, 43.8712, 0.81 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 89/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -8.02836, 43.4121, 3.48495, 0.66 ) }
    dend_48 { pt3dadd( -7.78321, 43.7376, 3.52296, 0.66 ) }
    dend_48 { pt3dadd( -7.47659, 44.2297, 3.51625, 0.66 ) }
    dend_48 { pt3dadd( -7.38234, 44.4201, 3.50459, 0.66 ) }
    dend_48 { pt3dadd( -6.8339, 45.6785, 3.40508, 0.66 ) }
    dend_48 { pt3dadd( -6.80756, 45.7617, 3.39887, 0.66 ) }
    dend_48 { pt3dadd( -6.48225, 47.0455, 3.28677, 0.66 ) }
    dend_48 { pt3dadd( -6.3554, 47.7038, 3.20268, 0.66 ) }
    dend_48 { pt3dadd( -6.28256, 48.3583, 3.12396, 0.29 ) }
    dend_48 { pt3dadd( -6.27692, 48.4449, 3.11478, 0.29 ) }
    dend_48 { pt3dadd( -6.20328, 49.8313, 2.93766, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_48 { pt3dadd( -6.15738, 50.4568, 2.86641, 0.29 ) }
    dend_48 { pt3dadd( -6.15031, 50.5435, 2.85921, 0.29 ) }
    dend_48 { pt3dadd( -5.96323, 52.0768, 2.73242, 0.29 ) }
    dend_48 { pt3dadd( -5.93281, 52.2804, 2.71577, 0.29 ) }
    dend_48 { pt3dadd( -5.63796, 54.0478, 2.58992, 0.29 ) }
    dend_48 { pt3dadd( -5.62104, 54.1334, 2.58671, 0.29 ) }
    dend_48 { pt3dadd( -5.50766, 54.7649, 2.56282, 0.96 ) }
    dend_48 { pt3dadd( -5.31921, 55.9472, 2.55563, 0.96 ) }
    dend_48 { pt3dadd( -5.30248, 56.0455, 2.56012, 0.96 ) }
    dend_48 { pt3dadd( -5.17617, 56.7616, 2.62216, 0.81 ) }
    dend_48 { pt3dadd( -4.9172, 58.3156, 2.81599, 0.59 ) }
    dend_48 { pt3dadd( -4.59474, 60.1957, 3.05115, 0.52 ) }
    dend_48 { pt3dadd( -4.44157, 61.0325, 3.11431, 0.37 ) }
    dend_48 { pt3dadd( -4.11721, 62.9225, 3.16873, 0.37 ) }
    dend_48 { pt3dadd( -3.94951, 63.9364, 3.16491, 1.03 ) }
    dend_48 { pt3dadd( -3.81659, 64.7695, 3.13715, 1.03 ) }
    dend_48 { pt3dadd( -3.8052, 64.8433, 3.13221, 1.03 ) }
    dend_48 { pt3dadd( -3.49804, 66.6473, 2.89428, 0.52 ) }
    dend_48 { pt3dadd( -3.31718, 67.8288, 2.65938, 0.52 ) }
    dend_48 { pt3dadd( -3.29053, 68.0338, 2.61065, 0.52 ) }
    dend_48 { pt3dadd( -3.07623, 69.8345, 2.2688, 0.44 ) }
    dend_48 { pt3dadd( -3.06883, 69.9085, 2.26041, 0.44 ) }
    dend_48 { pt3dadd( -2.99137, 71.688, 2.31508, 1.33 ) }
    dend_48 { pt3dadd( -2.99609, 73.216, 2.61116, 1.4 ) }
    dend_48 { pt3dadd( -3.00055, 73.343, 2.64899, 1.4 ) }
    dend_48 { pt3dadd( -3.09104, 74.5596, 3.11232, 0.22 ) }
    dend_48 { pt3dadd( -3.26809, 76.0483, 3.8256, 0.22 ) }
    dend_48 { pt3dadd( -3.51381, 77.6395, 4.67475, 0.59 ) }
    dend_48 { pt3dadd( -3.68296, 78.3793, 5.11781, 0.59 ) }
    dend_48 { pt3dadd( -3.87363, 79.0833, 5.52387, 0.22 ) }
    dend_48 { pt3dadd( -3.89756, 79.157, 5.56501, 0.22 ) }
    dend_48 { pt3dadd( -4.10202, 79.6956, 5.84136, 0.22 ) }
    dend_48 { pt3dadd( -4.39535, 80.3506, 6.1717, 0.22 ) }
    dend_48 { pt3dadd( -4.7997, 81.189, 6.49593, 0.22 ) }
    dend_48 { pt3dadd( -4.88623, 81.3533, 6.55962, 0.22 ) }
    dend_48 { pt3dadd( -5.56108, 82.627, 7.05521, 0.81 ) }
    dend_48 { pt3dadd( -5.59883, 82.7014, 7.08236, 0.81 ) }
    dend_48 { pt3dadd( -6.0323, 83.5583, 7.37066, 0.81 ) }
    dend_48 { pt3dadd( -6.19171, 83.9008, 7.46613, 0.81 ) }
    dend_48 { pt3dadd( -6.61255, 84.8642, 7.70168, 0.22 ) }
    dend_48 { pt3dadd( -6.66047, 84.9766, 7.72225, 0.22 ) }
    dend_48 { pt3dadd( -7.1344, 86.1061, 7.84238, 0.22 ) }
    dend_48 { pt3dadd( -7.36049, 86.6473, 7.88518, 0.22 ) }
    dend_48 { pt3dadd( -7.73882, 87.5581, 7.93337, 0.22 ) }
    dend_48 { pt3dadd( -8.08316, 88.4286, 7.88434, 1.03 ) }
    dend_48 { pt3dadd( -8.38862, 89.2244, 7.77754, 1.03 ) }
    dend_48 { pt3dadd( -8.73042, 90.1475, 7.60158, 0.66 ) }
    dend_48 { pt3dadd( -9.17614, 91.4324, 7.29216, 0.22 ) }
    dend_48 { pt3dadd( -9.5456, 92.6119, 6.97055, 0.22 ) }
    dend_48 { pt3dadd( -10.1183, 94.5643, 6.34644, 0.22 ) }
    dend_48 { pt3dadd( -10.1416, 94.656, 6.31328, 0.22 ) }
    dend_48 { pt3dadd( -10.2862, 95.2867, 6.0791, 0.88 ) }
    dend_48 { pt3dadd( -10.4029, 95.796, 5.90314, 0.88 ) }
    dend_48 { pt3dadd( -10.6453, 96.8326, 5.59285, 0.22 ) }
    dend_48 { pt3dadd( -10.6634, 96.9035, 5.57627, 0.22 ) }
    dend_48 { pt3dadd( -11.2928, 98.8897, 5.30499, 0.22 ) }
    dend_48 { pt3dadd( -11.3465, 99.0313, 5.28442, 0.22 ) }
    dend_48 { pt3dadd( -11.7079, 99.8352, 5.09417, 0.22 ) }
    dend_48 { pt3dadd( -11.749, 99.9088, 5.0687, 0.22 ) }
    dend_48 { pt3dadd( -12.1654, 100.541, 4.80486, 0.96 ) }
    dend_48 { pt3dadd( -12.7384, 101.358, 4.43854, 0.96 ) }
    dend_48 { pt3dadd( -12.7934, 101.435, 4.40282, 0.96 ) }
    dend_48 { pt3dadd( -13.4999, 102.604, 3.81796, 0.37 ) }
    dend_48 { pt3dadd( -13.9366, 103.528, 3.37519, 0.29 ) }
    dend_48 { pt3dadd( -14.3824, 104.685, 2.89005, 0.15 ) }
    dend_48 { pt3dadd( -14.4063, 104.764, 2.85978, 0.15 ) }
    dend_48 { pt3dadd( -14.617, 105.52, 2.5999, 0.15 ) }
    dend_48 { pt3dadd( -14.9363, 106.704, 2.23924, 1.03 ) }
    dend_48 { pt3dadd( -15.2499, 107.924, 1.94693, 1.03 ) }
    dend_48 { pt3dadd( -15.3877, 108.538, 1.81247, 1.03 ) }
    dend_48 { pt3dadd( -15.5187, 109.195, 1.69111, 0.22 ) }
    dend_48 { pt3dadd( -15.7817, 110.593, 1.4995, 0.22 ) }
    dend_48 { pt3dadd( -15.797, 110.679, 1.49264, 0.22 ) }
    dend_48 { pt3dadd( -15.9462, 111.618, 1.49045, 0.96 ) }
    dend_48 { pt3dadd( -16.0778, 112.65, 1.5148, 1.11 ) }
    dend_48 { pt3dadd( -16.1062, 113.406, 1.57366, 0.22 ) }
    dend_48 { pt3dadd( -16.0686, 114.226, 1.68171, 0.22 ) }
    dend_48 { pt3dadd( -15.9704, 114.849, 1.75902, 0.22 ) }
    dend_48 { pt3dadd( -15.9007, 115.202, 1.795, 0.22 ) }
    dend_48 { pt3dadd( -15.8865, 115.288, 1.80457, 0.22 ) }
    dend_48 { pt3dadd( -15.6357, 117.082, 1.9389, 0.22 ) }
    dend_48 { pt3dadd( -15.6062, 117.212, 1.93841, 0.22 ) }
    dend_48 { pt3dadd( -15.3024, 118.249, 1.81733, 0.22 ) }
    dend_48 { pt3dadd( -15.2724, 118.344, 1.80129, 0.22 ) }
    dend_48 { pt3dadd( -14.4499, 120.875, 1.33241, 0.22 ) }
    dend_48 { pt3dadd( -13.4775, 123.818, 0.732518, 0.22 ) }
    dend_48 { pt3dadd( -12.5214, 126.641, 0.0703933, 0.22 ) }
    dend_48 { pt3dadd( -11.7771, 128.77, -0.451107, 1.33 ) }
    dend_48 { pt3dadd( -11.466, 129.602, -0.668838, 1.33 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 89/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -8.02836, 43.4121, 3.48495, 0.74 ) }
    dend_47 { pt3dadd( -8.53232, 44.5622, 3.659, 0.74 ) }
    dend_47 { pt3dadd( -8.88877, 45.282, 3.7255, 0.37 ) }
    dend_47 { pt3dadd( -9.23542, 45.9564, 3.77202, 0.37 ) }
    dend_47 { pt3dadd( -9.34704, 46.172, 3.78254, 0.37 ) }
    dend_47 { pt3dadd( -9.82751, 47.0925, 3.81542, 0.22 ) }
    dend_47 { pt3dadd( -9.863, 47.1612, 3.81719, 0.22 ) }
    dend_47 { pt3dadd( -10.4473, 48.2264, 3.76629, 0.22 ) }
    dend_47 { pt3dadd( -10.4868, 48.2929, 3.76231, 0.22 ) }
    dend_47 { pt3dadd( -10.9122, 48.9673, 3.73077, 0.22 ) }
    dend_47 { pt3dadd( -11.0743, 49.2135, 3.7224, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_47 { pt3dadd( -11.4414, 49.7937, 3.71895, 0.88 ) }
    dend_47 { pt3dadd( -11.6538, 50.1461, 3.72486, 0.44 ) }
    dend_47 { pt3dadd( -11.8532, 50.5606, 3.74823, 0.29 ) }
    dend_47 { pt3dadd( -12.0149, 50.9587, 3.77497, 0.29 ) }
    dend_47 { pt3dadd( -12.0384, 51.0312, 3.78663, 0.29 ) }
    dend_47 { pt3dadd( -12.2442, 51.8042, 3.95758, 0.29 ) }
    dend_47 { pt3dadd( -12.3241, 52.1388, 4.04261, 0.29 ) }
    dend_47 { pt3dadd( -12.5641, 53.2866, 4.35109, 0.29 ) }
    dend_47 { pt3dadd( -12.5842, 53.3828, 4.37606, 0.29 ) }
    dend_47 { pt3dadd( -12.8133, 54.2274, 4.6035, 0.29 ) }
    dend_47 { pt3dadd( -12.9652, 54.6582, 4.73171, 0.29 ) }
    dend_47 { pt3dadd( -13.2201, 55.1986, 4.89421, 0.29 ) }
    dend_47 { pt3dadd( -13.3044, 55.3369, 4.93036, 0.29 ) }
    dend_47 { pt3dadd( -13.693, 55.8535, 5.04189, 0.88 ) }
    dend_47 { pt3dadd( -14.3079, 56.6112, 5.13512, 0.88 ) }
    dend_47 { pt3dadd( -14.3514, 56.6617, 5.13599, 0.88 ) }
    dend_47 { pt3dadd( -14.7131, 57.0912, 5.13464, 0.44 ) }
    dend_47 { pt3dadd( -15.153, 57.6337, 5.12302, 0.37 ) }
    dend_47 { pt3dadd( -15.2521, 57.776, 5.11819, 0.37 ) }
    dend_47 { pt3dadd( -15.7572, 58.6146, 5.08878, 0.37 ) }
    dend_47 { pt3dadd( -15.8922, 58.8757, 5.07758, 0.37 ) }
    dend_47 { pt3dadd( -16.2109, 59.5628, 5.06784, 0.37 ) }
    dend_47 { pt3dadd( -16.2744, 59.7155, 5.07096, 0.37 ) }
    dend_47 { pt3dadd( -16.7331, 61.0428, 5.00409, 0.37 ) }
    dend_47 { pt3dadd( -16.8166, 61.3205, 4.97038, 1.11 ) }
    dend_47 { pt3dadd( -16.8382, 61.3931, 4.9555, 1.11 ) }
    dend_47 { pt3dadd( -17.082, 62.1223, 4.74896, 1.11 ) }
    dend_47 { pt3dadd( -17.1151, 62.1992, 4.72006, 1.11 ) }
    dend_47 { pt3dadd( -17.7074, 63.2823, 4.22927, 0.74 ) }
    dend_47 { pt3dadd( -18.0025, 63.6887, 3.99848, 0.29 ) }
    dend_47 { pt3dadd( -18.4515, 64.2265, 3.67829, 0.29 ) }
    dend_47 { pt3dadd( -18.5624, 64.3464, 3.60283, 0.29 ) }
    dend_47 { pt3dadd( -19.0978, 64.8597, 3.26399, 0.74 ) }
    dend_47 { pt3dadd( -19.3479, 65.1054, 3.13054, 0.74 ) }
    dend_47 { pt3dadd( -19.6367, 65.3874, 3.01492, 0.29 ) }
    dend_47 { pt3dadd( -19.6924, 65.4513, 2.9877, 0.29 ) }
    dend_47 { pt3dadd( -20.2617, 66.2948, 2.66967, 0.22 ) }
    dend_47 { pt3dadd( -20.3028, 66.3698, 2.64632, 0.22 ) }
    dend_47 { pt3dadd( -20.7293, 67.2685, 2.45042, 0.22 ) }
    dend_47 { pt3dadd( -20.7936, 67.4196, 2.42905, 0.22 ) }
    dend_47 { pt3dadd( -21.1379, 68.1319, 2.36179, 0.74 ) }
    dend_47 { pt3dadd( -21.5474, 68.9007, 2.31637, 0.74 ) }
    dend_47 { pt3dadd( -22.1006, 69.8399, 2.33305, 0.74 ) }
    dend_47 { pt3dadd( -22.4621, 70.3928, 2.35682, 0.44 ) }
    dend_47 { pt3dadd( -22.8046, 70.8617, 2.38832, 0.22 ) }
    dend_47 { pt3dadd( -23.9059, 72.2659, 2.50834, 0.22 ) }
    dend_47 { pt3dadd( -23.9823, 72.3553, 2.51857, 0.22 ) }
    dend_47 { pt3dadd( -24.5114, 72.9248, 2.57849, 0.81 ) }
    dend_47 { pt3dadd( -25.1335, 73.6027, 2.69364, 0.96 ) }
    dend_47 { pt3dadd( -25.2047, 73.6849, 2.70956, 0.96 ) }
    dend_47 { pt3dadd( -25.6328, 74.2201, 2.84756, 0.96 ) }
    dend_47 { pt3dadd( -25.6736, 74.2831, 2.8666, 0.96 ) }
    dend_47 { pt3dadd( -25.927, 74.7217, 2.98341, 0.29 ) }
    dend_47 { pt3dadd( -26.7472, 76.317, 3.34359, 0.29 ) }
    dend_47 { pt3dadd( -26.7816, 76.3842, 3.36027, 0.29 ) }
    dend_47 { pt3dadd( -27.0293, 76.824, 3.45651, 0.88 ) }
    dend_47 { pt3dadd( -27.4692, 77.5596, 3.59744, 0.88 ) }
    dend_47 { pt3dadd( -27.9876, 78.3546, 3.71334, 0.88 ) }
    dend_47 { pt3dadd( -28.3404, 78.856, 3.76502, 0.29 ) }
    dend_47 { pt3dadd( -28.806, 79.46, 3.7911, 0.15 ) }
    dend_47 { pt3dadd( -29.7875, 80.6654, 3.83383, 0.15 ) }
    dend_47 { pt3dadd( -30.2262, 81.1718, 3.84494, 0.44 ) }
    dend_47 { pt3dadd( -30.8109, 81.8233, 3.84773, 0.44 ) }
    dend_47 { pt3dadd( -30.8632, 81.8809, 3.84713, 0.44 ) }
    dend_47 { pt3dadd( -31.1132, 82.1534, 3.83595, 0.81 ) }
    dend_47 { pt3dadd( -32.2284, 83.3117, 3.79949, 0.81 ) }
    dend_47 { pt3dadd( -32.8183, 83.8795, 3.79861, 0.22 ) }
    dend_47 { pt3dadd( -33.4691, 84.4638, 3.80289, 0.22 ) }
    dend_47 { pt3dadd( -33.6554, 84.624, 3.80632, 0.22 ) }
    dend_47 { pt3dadd( -34.6665, 85.4696, 3.82414, 0.22 ) }
    dend_47 { pt3dadd( -35.7447, 86.3341, 3.847, 0.22 ) }
    dend_47 { pt3dadd( -35.8061, 86.3823, 3.84967, 0.22 ) }
    dend_47 { pt3dadd( -36.478, 86.9334, 3.88735, 0.22 ) }
    dend_47 { pt3dadd( -36.6551, 87.1032, 3.89553, 0.74 ) }
    dend_47 { pt3dadd( -37.126, 87.7036, 3.90956, 0.74 ) }
    dend_47 { pt3dadd( -37.2641, 87.9565, 3.90677, 0.74 ) }
    dend_47 { pt3dadd( -37.4807, 88.4217, 3.90359, 0.74 ) }
    dend_47 { pt3dadd( -37.6217, 88.7091, 3.90913, 0.74 ) }
    dend_47 { pt3dadd( -38.1158, 89.6036, 3.92967, 0.22 ) }
    dend_47 { pt3dadd( -38.4283, 90.1632, 3.91111, 0.22 ) }
    dend_47 { pt3dadd( -39.0057, 91.1651, 3.86379, 0.22 ) }
    dend_47 { pt3dadd( -39.4581, 91.9652, 3.8232, 0.88 ) }
    dend_47 { pt3dadd( -40.1192, 93.1204, 3.78447, 1.25 ) }
    dend_47 { pt3dadd( -40.7647, 94.2247, 3.75823, 1.25 ) }
    dend_47 { pt3dadd( -41.6656, 95.7001, 3.72858, 1.25 ) }
    dend_47 { pt3dadd( -42.2944, 96.6927, 3.70108, 0.59 ) }
    dend_47 { pt3dadd( -42.9023, 97.6541, 3.62797, 0.59 ) }
    dend_47 { pt3dadd( -43.5411, 98.6279, 3.49148, 0.15 ) }
    dend_47 { pt3dadd( -44.1296, 99.4738, 3.34475, 0.15 ) }
    dend_47 { pt3dadd( -44.4165, 99.861, 3.2661, 0.37 ) }
    dend_47 { pt3dadd( -44.7339, 100.222, 3.17489, 0.37 ) }
    dend_47 { pt3dadd( -45.5975, 101.132, 2.83343, 0.22 ) }
    dend_47 { pt3dadd( -46.3334, 101.9, 2.35591, 0.22 ) }
    dend_47 { pt3dadd( -46.3818, 101.958, 2.30859, 0.22 ) }
    dend_47 { pt3dadd( -46.5326, 102.174, 2.11995, 0.74 ) }
    dend_47 { pt3dadd( -46.9231, 102.815, 1.58385, 0.74 ) }
    dend_47 { pt3dadd( -46.9572, 102.873, 1.54413, 0.74 ) }
    dend_47 { pt3dadd( -47.7397, 104.177, 0.641905, 0.15 ) }
    dend_47 { pt3dadd( -48.0613, 104.694, 0.274999, 0.15 ) }
    dend_47 { pt3dadd( -48.1517, 104.829, 0.188064, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_47 { pt3dadd( -48.5418, 105.393, -0.17414, 0.15 ) }
    dend_47 { pt3dadd( -49.4688, 106.699, -0.983876, 0.15 ) }
    dend_47 { pt3dadd( -50.2552, 107.752, -1.57588, 0.88 ) }
    dend_47 { pt3dadd( -50.8337, 108.47, -1.90151, 0.88 ) }
    dend_47 { pt3dadd( -51.6832, 109.536, -2.41514, 0.66 ) }
    dend_47 { pt3dadd( -57.3204, 118.97, -3.7419, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 6/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 18.3421, -24.1104, 5.5377, 1.03 ) }
    dend_34 { pt3dadd( 18.7912, -24.9844, 5.02586, 1.03 ) }
    dend_34 { pt3dadd( 18.8405, -25.0654, 4.99272, 1.03 ) }
    dend_34 { pt3dadd( 19.2963, -25.7961, 4.72963, 1.03 ) }
    dend_34 { pt3dadd( 19.4937, -26.0795, 4.64788, 1.03 ) }
    dend_34 { pt3dadd( 20.6324, -27.6067, 4.28312, 1.03 ) }
    dend_34 { pt3dadd( 20.6708, -27.6547, 4.27294, 1.03 ) }
    dend_34 { pt3dadd( 22.2024, -29.4369, 4.01483, 0.88 ) }
    dend_34 { pt3dadd( 22.2942, -29.5338, 4.00777, 0.88 ) }
    dend_34 { pt3dadd( 23.7787, -30.9432, 4.0613, 0.88 ) }
    dend_34 { pt3dadd( 24.3594, -31.4313, 4.15506, 0.88 ) }
    dend_34 { pt3dadd( 24.9019, -31.8333, 4.30129, 1.25 ) }
    dend_34 { pt3dadd( 25.6197, -32.3186, 4.53688, 1.25 ) }
    dend_34 { pt3dadd( 27.0471, -33.1705, 5.08524, 0.74 ) }
    dend_34 { pt3dadd( 28.4417, -33.9757, 5.61062, 0.74 ) }
    dend_34 { pt3dadd( 29.6082, -34.625, 6.03974, 0.74 ) }
    dend_34 { pt3dadd( 29.6532, -34.6507, 6.05437, 0.74 ) }
    dend_34 { pt3dadd( 30.2898, -35.0235, 6.23882, 1.47 ) }
    dend_34 { pt3dadd( 31.1742, -35.5289, 6.43842, 1.47 ) }
    dend_34 { pt3dadd( 33.0502, -36.6245, 6.58516, 0.66 ) }
    dend_34 { pt3dadd( 33.8849, -37.1271, 6.55081, 0.66 ) }
    dend_34 { pt3dadd( 34.868, -37.7463, 6.4347, 1.33 ) }
    dend_34 { pt3dadd( 34.9197, -37.781, 6.42682, 1.33 ) }
    dend_34 { pt3dadd( 35.7156, -38.3642, 6.29325, 1.33 ) }
    dend_34 { pt3dadd( 37.1318, -39.4164, 6.0302, 1.18 ) }
    dend_34 { pt3dadd( 38.231, -40.2552, 5.79972, 1.18 ) }
    dend_34 { pt3dadd( 38.2995, -40.3093, 5.78477, 1.18 ) }
    dend_34 { pt3dadd( 39.4496, -41.2483, 5.5347, 0.88 ) }
    dend_34 { pt3dadd( 41.3323, -42.8907, 5.16349, 0.88 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 35/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 18.3421, -24.1104, 5.5377, 0.74 ) }
    dend_31 { pt3dadd( 18.3853, -24.1206, 5.58722, 0.74 ) }
    dend_31 { pt3dadd( 18.997, -24.2078, 6.46825, 0.74 ) }
    dend_31 { pt3dadd( 19.0339, -24.2136, 6.52333, 0.74 ) }
    dend_31 { pt3dadd( 20.5515, -24.501, 8.59797, 0.74 ) }
    dend_31 { pt3dadd( 22.8041, -24.9053, 11.4105, 0.74 ) }
    dend_31 { pt3dadd( 22.8467, -24.9126, 11.4611, 0.74 ) }
    dend_31 { pt3dadd( 25.1843, -25.2661, 14.0063, 1.4 ) }
    dend_31 { pt3dadd( 25.8031, -25.3513, 14.644, 0.74 ) }
    dend_31 { pt3dadd( 27.0978, -25.4937, 15.7896, 0.74 ) }
    dend_31 { pt3dadd( 28.7187, -25.6049, 16.8919, 0.74 ) }
    dend_31 { pt3dadd( 28.8041, -25.6112, 16.931, 0.74 ) }
    dend_31 { pt3dadd( 30.5841, -25.8811, 17.6496, 0.74 ) }
    dend_31 { pt3dadd( 30.6373, -25.8939, 17.6656, 0.74 ) }
    dend_31 { pt3dadd( 31.4897, -26.1025, 17.9808, 0.74 ) }
    dend_31 { pt3dadd( 31.5941, -26.1274, 18.0194, 0.74 ) }
    dend_31 { pt3dadd( 33.4076, -26.5447, 18.5758, 0.74 ) }
    dend_31 { pt3dadd( 35.2604, -26.9447, 19.1215, 0.74 ) }
    dend_31 { pt3dadd( 36.2083, -27.1451, 19.3911, 0.74 ) }
    dend_31 { pt3dadd( 38.3803, -27.607, 19.925, 0.74 ) }
    dend_31 { pt3dadd( 40.3507, -28.0667, 20.3393, 0.74 ) }
    dend_31 { pt3dadd( 42.0412, -28.4701, 20.6262, 1.25 ) }
    dend_31 { pt3dadd( 43.4106, -28.8121, 20.8461, 0.52 ) }
    dend_31 { pt3dadd( 44.0234, -28.9771, 20.9509, 0.52 ) }
    dend_31 { pt3dadd( 45.3763, -29.3901, 21.2148, 0.66 ) }
    dend_31 { pt3dadd( 47.2197, -30.0305, 21.625, 0.66 ) }
    dend_31 { pt3dadd( 47.2883, -30.0561, 21.6449, 0.66 ) }
    dend_31 { pt3dadd( 49.5624, -30.8365, 22.3416, 0.66 ) }
    dend_31 { pt3dadd( 50.1542, -31.0156, 22.4924, 0.96 ) }
    dend_31 { pt3dadd( 51.0087, -31.2642, 22.6793, 0.66 ) }
    dend_31 { pt3dadd( 52.3094, -31.5947, 22.9019, 0.52 ) }
    dend_31 { pt3dadd( 52.3728, -31.6134, 22.9086, 0.52 ) }
    dend_31 { pt3dadd( 53.6732, -32.1109, 22.9994, 0.52 ) }
    dend_31 { pt3dadd( 54.7933, -32.6507, 23.0772, 0.52 ) }
    dend_31 { pt3dadd( 55.7705, -33.1706, 23.2724, 0.52 ) }
    dend_31 { pt3dadd( 55.8179, -33.1979, 23.2874, 0.52 ) }
    dend_31 { pt3dadd( 57.0045, -33.8747, 23.6887, 0.52 ) }
    dend_31 { pt3dadd( 58.0448, -34.4291, 24.064, 0.52 ) }
    dend_31 { pt3dadd( 59.2646, -35.049, 24.5098, 1.25 ) }
    dend_31 { pt3dadd( 60.4251, -35.4736, 25.0016, 0.52 ) }
    dend_31 { pt3dadd( 61.8108, -35.8695, 25.6039, 0.52 ) }
    dend_31 { pt3dadd( 63.8938, -36.3675, 26.5029, 0.52 ) }
    dend_31 { pt3dadd( 64.035, -36.3896, 26.5592, 0.52 ) }
    dend_31 { pt3dadd( 64.995, -36.4889, 26.9057, 0.52 ) }
    dend_31 { pt3dadd( 68.2505, -36.5469, 27.881, 0.37 ) }
    dend_31 { pt3dadd( 68.8747, -36.5087, 28.0512, 0.37 ) }
    dend_31 { pt3dadd( 69.0108, -36.4865, 28.0877, 0.37 ) }
    dend_31 { pt3dadd( 70.1541, -36.2165, 28.4141, 0.37 ) }
    dend_31 { pt3dadd( 70.4824, -36.1413, 28.5217, 0.37 ) }
    dend_31 { pt3dadd( 72.075, -35.7766, 29.0819, 0.37 ) }
    dend_31 { pt3dadd( 72.1383, -35.7652, 29.099, 0.37 ) }
    dend_31 { pt3dadd( 73.4737, -35.4892, 29.5319, 0.37 ) }
    dend_31 { pt3dadd( 73.535, -35.476, 29.5544, 0.37 ) }
    dend_31 { pt3dadd( 75.2204, -35.117, 30.2937, 0.29 ) }
    dend_31 { pt3dadd( 75.312, -35.0973, 30.3317, 0.29 ) }
    dend_31 { pt3dadd( 76.1108, -34.9127, 30.6412, 0.29 ) }
    dend_31 { pt3dadd( 76.1744, -34.8993, 30.6551, 0.29 ) }
    dend_31 { pt3dadd( 76.8476, -34.7486, 30.7108, 0.29 ) }
    dend_31 { pt3dadd( 76.9932, -34.7185, 30.7136, 0.29 ) }
    dend_31 { pt3dadd( 78.1702, -34.5025, 30.6689, 0.29 ) }
    dend_31 { pt3dadd( 78.3001, -34.4741, 30.6733, 0.29 ) }
    dend_31 { pt3dadd( 79.5903, -34.1602, 30.7718, 0.29 ) }
    dend_31 { pt3dadd( 81.1546, -33.7113, 30.9164, 0.29 ) }
    dend_31 { pt3dadd( 81.2175, -33.6913, 30.9233, 0.29 ) }
    dend_31 { pt3dadd( 82.8022, -33.1443, 31.1247, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 84.1756, -32.6016, 31.3365, 0.59 ) }
    dend_31 { pt3dadd( 84.9429, -32.2699, 31.4648, 0.74 ) }
    dend_31 { pt3dadd( 85.7229, -31.8683, 31.6154, 0.74 ) }
    dend_31 { pt3dadd( 85.7801, -31.8364, 31.6247, 0.74 ) }
    dend_31 { pt3dadd( 93.9375, -32.2712, 36.5037, 0.74 ) }
    dend_31 { pt3dadd( 101.557, -32.0847, 42.203, 0.74 ) }
    dend_31 { pt3dadd( 109.017, -33.466, 47.9323, 0.74 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 7/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 34.7242, -62.526, 56.4738, 0.52 ) }
    dend_27 { pt3dadd( 35.4604, -63.509, 56.8845, 0.52 ) }
    dend_27 { pt3dadd( 35.7558, -63.9909, 57.0785, 0.66 ) }
    dend_27 { pt3dadd( 36.1501, -64.8156, 57.4003, 0.52 ) }
    dend_27 { pt3dadd( 36.5141, -65.7434, 57.7605, 0.29 ) }
    dend_27 { pt3dadd( 36.8541, -66.9399, 58.1956, 0.44 ) }
    dend_27 { pt3dadd( 36.8674, -67.0002, 58.2165, 0.44 ) }
    dend_27 { pt3dadd( 36.9192, -67.7125, 58.3817, 0.44 ) }
    dend_27 { pt3dadd( 36.8534, -68.4089, 58.537, 0.74 ) }
    dend_27 { pt3dadd( 36.8063, -68.6235, 58.5831, 0.74 ) }
    dend_27 { pt3dadd( 36.6144, -69.3174, 58.7023, 0.74 ) }
    dend_27 { pt3dadd( 36.5966, -69.3798, 58.7062, 0.74 ) }
    dend_27 { pt3dadd( 36.475, -70.2712, 58.8027, 0.74 ) }
    dend_27 { pt3dadd( 36.531, -70.9745, 59.0786, 0.44 ) }
    dend_27 { pt3dadd( 36.5455, -71.0305, 59.1091, 0.44 ) }
    dend_27 { pt3dadd( 36.8156, -71.8917, 59.6192, 0.37 ) }
    dend_27 { pt3dadd( 36.8486, -71.9776, 59.6765, 0.37 ) }
    dend_27 { pt3dadd( 37.5363, -73.5271, 60.8217, 0.37 ) }
    dend_27 { pt3dadd( 38.6663, -75.6002, 62.6101, 0.44 ) }
    dend_27 { pt3dadd( 39.0518, -76.217, 63.2107, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 27/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 34.7242, -62.526, 56.4738, 0.66 ) }
    dend_26 { pt3dadd( 35.697, -63.1141, 56.5157, 0.66 ) }
    dend_26 { pt3dadd( 36.2669, -63.4003, 56.6171, 0.29 ) }
    dend_26 { pt3dadd( 37.0509, -63.794, 56.7565, 0.29 ) }
    dend_26 { pt3dadd( 37.126, -63.8318, 56.7698, 0.29 ) }
    dend_26 { pt3dadd( 38.1183, -64.3301, 56.9463, 0.29 ) }
    dend_26 { pt3dadd( 38.2538, -64.3982, 56.9704, 0.29 ) }
    dend_26 { pt3dadd( 39.3327, -65.0644, 56.995, 0.74 ) }
    dend_26 { pt3dadd( 49.0849, -69.0685, 58.5727, 0.74 ) }
    dend_26 { pt3dadd( 58.0147, -74.8415, 58.4444, 0.74 ) }
    dend_26 { pt3dadd( 66.6354, -80.8847, 59.8682, 0.74 ) }
    dend_26 { pt3dadd( 74.3682, -88.1259, 59.6784, 0.74 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 39/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -62.0905, -48.7828, -27.974, 0.29 ) }
    dend_23 { pt3dadd( -64.838, -49.6734, -28.8851, 0.29 ) }
    dend_23 { pt3dadd( -66.4627, -50.2303, -29.4684, 0.29 ) }
    dend_23 { pt3dadd( -68.0245, -50.803, -30.0333, 0.29 ) }
    dend_23 { pt3dadd( -70.3669, -51.6844, -30.8807, 0.88 ) }
    dend_23 { pt3dadd( -71.3177, -52.0328, -31.2652, 1.18 ) }
    dend_23 { pt3dadd( -72.3743, -52.4123, -31.7172, 0.59 ) }
    dend_23 { pt3dadd( -73.7901, -52.9717, -32.4338, 0.52 ) }
    dend_23 { pt3dadd( -74.1946, -53.1014, -32.6925, 0.88 ) }
    dend_23 { pt3dadd( -74.2461, -53.1163, -32.7292, 0.88 ) }
    dend_23 { pt3dadd( -75.6446, -53.5581, -33.6982, 0.37 ) }
    dend_23 { pt3dadd( -75.696, -53.5718, -33.7356, 0.37 ) }
    dend_23 { pt3dadd( -78.0044, -54.1777, -35.435, 0.37 ) }
    dend_23 { pt3dadd( -78.7914, -54.4676, -35.9777, 1.25 ) }
    dend_23 { pt3dadd( -78.8355, -54.4871, -36.0055, 1.25 ) }
    dend_23 { pt3dadd( -79.6829, -54.9408, -36.4626, 1.25 ) }
    dend_23 { pt3dadd( -79.7422, -54.9777, -36.4874, 1.25 ) }
    dend_23 { pt3dadd( -80.3397, -55.423, -36.7104, 0.29 ) }
    dend_23 { pt3dadd( -81.5585, -56.5588, -37.038, 0.15 ) }
    dend_23 { pt3dadd( -81.9426, -56.9152, -37.1645, 0.59 ) }
    dend_23 { pt3dadd( -82.2457, -57.1838, -37.2794, 0.59 ) }
    dend_23 { pt3dadd( -82.9101, -57.7442, -37.557, 0.15 ) }
    dend_23 { pt3dadd( -83.8531, -58.4929, -37.9259, 0.15 ) }
    dend_23 { pt3dadd( -83.9044, -58.5263, -37.9472, 0.15 ) }
    dend_23 { pt3dadd( -84.8707, -59.1156, -38.3266, 0.88 ) }
    dend_23 { pt3dadd( -84.9236, -59.1469, -38.3475, 0.88 ) }
    dend_23 { pt3dadd( -85.6227, -59.5544, -38.623, 0.88 ) }
    dend_23 { pt3dadd( -86.6331, -60.0918, -39.0453, 0.22 ) }
    dend_23 { pt3dadd( -88.5484, -61.0976, -39.8882, 0.22 ) }
    dend_23 { pt3dadd( -89.7198, -61.7607, -40.5691, 0.22 ) }
    dend_23 { pt3dadd( -91.7143, -62.9295, -42.1802, 0.22 ) }
    dend_23 { pt3dadd( -91.7565, -62.954, -42.2227, 0.22 ) }
    dend_23 { pt3dadd( -93.0877, -63.7543, -44.2548, 0.22 ) }
    dend_23 { pt3dadd( -93.5666, -64.207, -45.434, 0.22 ) }
    dend_23 { pt3dadd( -94.0198, -65.3273, -48.2635, 0.22 ) }
    dend_23 { pt3dadd( -93.7366, -66.3524, -50.7006, 0.22 ) }
    dend_23 { pt3dadd( -93.7185, -66.3748, -50.7475, 0.22 ) }
    dend_23 { pt3dadd( -91.9066, -68.1229, -53.4519, 0.22 ) }
    dend_23 { pt3dadd( -88.2963, -71.0179, -56.7395, 0.22 ) }
    dend_23 { pt3dadd( -88.2488, -71.0586, -56.7552, 0.22 ) }
    dend_23 { pt3dadd( -86.5928, -72.5058, -56.8888, 0.22 ) }
    dend_23 { pt3dadd( -86.5383, -72.5555, -56.8846, 0.22 ) }
    dend_23 { pt3dadd( -84.7496, -74.2792, -56.5301, 0.22 ) }
    dend_23 { pt3dadd( -84.7078, -74.3247, -56.5103, 0.22 ) }
    dend_23 { pt3dadd( -81.428, -78.9134, -54.3692, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 84/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -62.0905, -48.7828, -27.974, 1.18 ) }
    dend_22 { pt3dadd( -63.5706, -50.9546, -27.7575, 1.18 ) }
    dend_22 { pt3dadd( -64.8278, -52.3868, -27.9235, 1.18 ) }
    dend_22 { pt3dadd( -65.7051, -53.2756, -28.1423, 0.52 ) }
    dend_22 { pt3dadd( -66.7613, -54.2832, -28.4689, 0.52 ) }
    dend_22 { pt3dadd( -66.8042, -54.3231, -28.4834, 0.52 ) }
    dend_22 { pt3dadd( -67.6745, -55.0662, -28.8778, 0.52 ) }
    dend_22 { pt3dadd( -68.764, -55.9655, -29.3828, 0.52 ) }
    dend_22 { pt3dadd( -68.852, -56.0217, -29.4442, 0.52 ) }
    dend_22 { pt3dadd( -69.5855, -56.3684, -30.0905, 0.37 ) }
    dend_22 { pt3dadd( -69.6259, -56.3879, -30.1313, 0.37 ) }
    dend_22 { pt3dadd( -70.7425, -57.0092, -31.2172, 1.11 ) }
    dend_22 { pt3dadd( -71.2748, -57.3557, -31.7234, 1.11 ) }
    dend_22 { pt3dadd( -71.3209, -57.3885, -31.7632, 1.11 ) }
    dend_22 { pt3dadd( -72.5412, -58.2521, -32.7808, 0.22 ) }
    dend_22 { pt3dadd( -73.3261, -58.8034, -33.3923, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_22 { pt3dadd( -73.9476, -59.2894, -33.8449, 0.29 ) }
    dend_22 { pt3dadd( -74.0094, -59.3443, -33.8844, 0.29 ) }
    dend_22 { pt3dadd( -74.3508, -59.6159, -34.1329, 0.81 ) }
    dend_22 { pt3dadd( -74.3978, -59.6496, -34.1709, 0.81 ) }
    dend_22 { pt3dadd( -74.8963, -60.0117, -34.5801, 0.81 ) }
    dend_22 { pt3dadd( -75.8627, -60.6959, -35.4389, 0.37 ) }
    dend_22 { pt3dadd( -75.9015, -60.7244, -35.4756, 0.37 ) }
    dend_22 { pt3dadd( -77.5047, -62.0051, -37.0069, 0.15 ) }
    dend_22 { pt3dadd( -78.1275, -62.6253, -37.6686, 0.96 ) }
    dend_22 { pt3dadd( -78.6093, -63.2016, -38.2195, 1.4 ) }
    dend_22 { pt3dadd( -78.9961, -63.8616, -38.7836, 0.52 ) }
    dend_22 { pt3dadd( -79.0054, -63.9037, -38.8111, 0.52 ) }
    dend_22 { pt3dadd( -79.0026, -64.7419, -39.2792, 0.29 ) }
    dend_22 { pt3dadd( -78.6266, -66.2088, -39.8955, 0.29 ) }
    dend_22 { pt3dadd( -78.6054, -66.2695, -39.918, 0.29 ) }
    dend_22 { pt3dadd( -78.1189, -67.4771, -40.3202, 0.29 ) }
    dend_22 { pt3dadd( -77.3625, -69.4269, -40.8756, 0.29 ) }
    dend_22 { pt3dadd( -77.3211, -69.544, -40.9053, 0.29 ) }
    dend_22 { pt3dadd( -76.8414, -71.1659, -41.2078, 0.29 ) }
    dend_22 { pt3dadd( -76.8025, -71.3161, -41.2278, 0.29 ) }
    dend_22 { pt3dadd( -76.5818, -72.3086, -41.3108, 0.15 ) }
    dend_22 { pt3dadd( -76.3664, -73.7772, -41.2693, 0.15 ) }
    dend_22 { pt3dadd( -76.3648, -73.8364, -41.2622, 0.15 ) }
    dend_22 { pt3dadd( -76.4141, -75.0366, -41.1163, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.59517, -24.6751, -2.26554, 0.88 ) }
    dend_16 { pt3dadd( -9.01395, -25.7323, -6.61767, 0.88 ) }
    dend_16 { pt3dadd( -9.81882, -26.1165, -7.96115, 0.88 ) }
    dend_16 { pt3dadd( -10.7123, -26.5431, -9.45257, 0.88 ) }
    dend_16 { pt3dadd( -10.7486, -26.5604, -9.51316, 0.88 ) }
    dend_16 { pt3dadd( -11.3658, -26.8551, -10.5435, 0.88 ) }
    dend_16 { pt3dadd( -12.9454, -27.6092, -13.1801, 1.4 ) }
    dend_16 { pt3dadd( -13.3178, -27.8519, -13.6211, 1.4 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 32/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.59517, -24.6751, -2.26554, 0.81 ) }
    dend_3 { pt3dadd( -8.11028, -27.186, -1.21333, 0.81 ) }
    dend_3 { pt3dadd( -9.19915, -28.9905, -0.45711, 0.81 ) }
    dend_3 { pt3dadd( -10.0111, -30.3361, 0.106749, 0.81 ) }
    dend_3 { pt3dadd( -10.7294, -31.5265, 0.605622, 0.81 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 37/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -6.59517, -24.6751, -2.26554, 2.5 ) }
    dend_2 { pt3dadd( -6.55675, -25.2708, -2.06938, 2.5 ) }
    dend_2 { pt3dadd( -6.44939, -26.8141, -1.66761, 1.03 ) }
    dend_2 { pt3dadd( -6.30642, -28.0659, -1.44508, 0.59 ) }
    dend_2 { pt3dadd( -6.11751, -29.0877, -1.32086, 0.59 ) }
    dend_2 { pt3dadd( -6.09844, -29.1479, -1.32038, 0.59 ) }
    dend_2 { pt3dadd( -5.84666, -29.8245, -1.34875, 0.59 ) }
    dend_2 { pt3dadd( -5.2787, -30.9634, -1.52763, 0.59 ) }
    dend_2 { pt3dadd( -4.25526, -32.5762, -1.95346, 1.03 ) }
    dend_2 { pt3dadd( -3.30361, -33.8914, -2.37095, 0.81 ) }
    dend_2 { pt3dadd( -1.48978, -36.185, -3.04671, 0.81 ) }
    dend_2 { pt3dadd( -1.45576, -36.2262, -3.05779, 0.81 ) }
    dend_2 { pt3dadd( 0.445604, -38.4445, -3.61746, 0.81 ) }
    dend_2 { pt3dadd( 2.4013, -40.7978, -4.12943, 0.81 ) }
    dend_2 { pt3dadd( 2.43809, -40.8491, -4.13741, 0.81 ) }
    dend_2 { pt3dadd( 3.28291, -42.3995, -4.30133, 0.52 ) }
    dend_2 { pt3dadd( 3.71922, -43.4987, -4.35517, 0.52 ) }
    dend_2 { pt3dadd( 3.8363, -43.899, -4.35751, 0.74 ) }
    dend_2 { pt3dadd( 4.22245, -46.1725, -4.26333, 1.11 ) }
    dend_2 { pt3dadd( 4.4947, -48.663, -4.14678, 1.11 ) }
    dend_2 { pt3dadd( 4.67389, -50.3489, -4.09812, 0.81 ) }
    dend_2 { pt3dadd( 4.68959, -50.4831, -4.09634, 0.81 ) }
    dend_2 { pt3dadd( 5.02729, -52.5035, -3.97741, 0.59 ) }
    dend_2 { pt3dadd( 5.04032, -52.5558, -3.97221, 0.59 ) }
    dend_2 { pt3dadd( 5.52975, -54.0308, -3.72872, 0.59 ) }
    dend_2 { pt3dadd( 5.54957, -54.0801, -3.71757, 0.59 ) }
    dend_2 { pt3dadd( 6.12086, -55.4302, -3.37568, 0.59 ) }
    dend_2 { pt3dadd( 6.82873, -57.1478, -2.98016, 0.44 ) }
    dend_2 { pt3dadd( 7.30438, -58.3429, -2.76785, 0.44 ) }
    dend_2 { pt3dadd( 7.46428, -58.814, -2.69866, 1.03 ) }
    dend_2 { pt3dadd( 7.48134, -58.8744, -2.69145, 1.03 ) }
    dend_2 { pt3dadd( 7.72303, -59.8346, -2.62833, 1.03 ) }
    dend_2 { pt3dadd( 7.73852, -59.9049, -2.63293, 1.03 ) }
    dend_2 { pt3dadd( 7.96958, -60.6946, -2.7813, 0.52 ) }
    dend_2 { pt3dadd( 8.41358, -61.7103, -3.00452, 0.52 ) }
    dend_2 { pt3dadd( 8.51313, -61.8899, -3.04412, 0.52 ) }
    dend_2 { pt3dadd( 9.08743, -62.7992, -3.23544, 0.74 ) }
    dend_2 { pt3dadd( 9.70482, -63.7422, -3.40816, 0.88 ) }
    dend_2 { pt3dadd( 10.2868, -64.652, -3.51004, 0.66 ) }
    dend_2 { pt3dadd( 10.7701, -65.4548, -3.54205, 0.44 ) }
    dend_2 { pt3dadd( 11.2764, -66.4402, -3.53131, 0.44 ) }
    dend_2 { pt3dadd( 11.2996, -66.499, -3.52866, 0.44 ) }
    dend_2 { pt3dadd( 11.7649, -68.0051, -3.41057, 0.44 ) }
    dend_2 { pt3dadd( 11.9679, -68.8492, -3.33126, 0.88 ) }
    dend_2 { pt3dadd( 12.1573, -69.8213, -3.25739, 1.18 ) }
    dend_2 { pt3dadd( 12.4801, -71.43, -3.12698, 0.88 ) }
    dend_2 { pt3dadd( 12.7249, -72.5161, -3.02165, 1.18 ) }
    dend_2 { pt3dadd( 12.7422, -72.5766, -3.01574, 1.18 ) }
    dend_2 { pt3dadd( 13.3621, -74.3573, -2.84187, 0.66 ) }
    dend_2 { pt3dadd( 13.3905, -74.4236, -2.83612, 0.66 ) }
    dend_2 { pt3dadd( 14.3431, -76.1105, -2.6621, 0.66 ) }
    dend_2 { pt3dadd( 14.3796, -76.1621, -2.65565, 0.66 ) }
    dend_2 { pt3dadd( 15.4125, -77.3988, -2.50338, 0.66 ) }
    dend_2 { pt3dadd( 15.4539, -77.4469, -2.49865, 0.66 ) }
    dend_2 { pt3dadd( 16.0701, -78.1481, -2.46934, 0.29 ) }
    dend_2 { pt3dadd( 16.6581, -78.92, -2.53129, 0.29 ) }
    dend_2 { pt3dadd( 16.6934, -78.9718, -2.54143, 0.29 ) }
    dend_2 { pt3dadd( 17.2306, -79.8482, -2.73742, 0.81 ) }
    dend_2 { pt3dadd( 17.8618, -80.9138, -3.00512, 1.18 ) }
    dend_2 { pt3dadd( 18.3977, -81.8126, -3.23655, 0.88 ) }
    dend_2 { pt3dadd( 19.0627, -82.936, -3.52561, 0.29 ) }
    dend_2 { pt3dadd( 19.4939, -83.6493, -3.70651, 0.29 ) }
    dend_2 { pt3dadd( 19.6507, -83.8891, -3.76466, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 20.556, -85.1435, -4.00305, 0.66 ) }
    dend_2 { pt3dadd( 21.0542, -85.7715, -4.07472, 1.03 ) }
    dend_2 { pt3dadd( 21.585, -86.4425, -4.07515, 0.37 ) }
    dend_2 { pt3dadd( 21.6235, -86.493, -4.07038, 0.37 ) }
    dend_2 { pt3dadd( 22.1834, -87.3198, -3.92894, 0.37 ) }
    dend_2 { pt3dadd( 22.6522, -88.0673, -3.69493, 0.81 ) }
    dend_2 { pt3dadd( 22.986, -88.6523, -3.44948, 0.81 ) }
    dend_2 { pt3dadd( 23.5253, -89.5488, -3.02568, 0.52 ) }
    dend_2 { pt3dadd( 23.5564, -89.5984, -3.00065, 0.52 ) }
    dend_2 { pt3dadd( 24.4042, -90.8146, -2.37143, 0.88 ) }
    dend_2 { pt3dadd( 25.3412, -92.0242, -1.71196, 0.52 ) }
    dend_2 { pt3dadd( 25.6443, -92.3435, -1.50462, 0.52 ) }
    dend_2 { pt3dadd( 26.2667, -92.7464, -1.09615, 0.74 ) }
    dend_2 { pt3dadd( 26.4328, -92.8057, -0.995967, 0.74 ) }
    dend_2 { pt3dadd( 27.1448, -92.8883, -0.524385, 0.52 ) }
    dend_2 { pt3dadd( 27.207, -92.8845, -0.484582, 0.52 ) }
    dend_2 { pt3dadd( 28.6621, -92.6158, 0.432388, 0.29 ) }
    dend_2 { pt3dadd( 30.2789, -92.1997, 1.53995, 0.22 ) }
    dend_2 { pt3dadd( 30.5423, -92.1125, 1.73832, 0.37 ) }
    dend_2 { pt3dadd( 31.9632, -91.5813, 2.85808, 0.81 ) }
    dend_2 { pt3dadd( 34.9711, -100.088, 2.52431, 0.81 ) }
    dend_2 { pt3dadd( 37.8322, -108.647, 2.75293, 0.81 ) }
    dend_2 { pt3dadd( 39.2674, -117.422, 4.25831, 0.81 ) }
    dend_2 { pt3dadd( 41.7047, -126.045, 5.33616, 0.81 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 24/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 25.9189, 97.0814, 32.8174, 0.29 ) }
    dend_79 { pt3dadd( 23.6308, 101.918, 40.6092, 0.29 ) }
    dend_79 { pt3dadd( 20.1237, 105.255, 48.7731, 0.29 ) }
    dend_79 { pt3dadd( 17.2572, 108.678, 57.1463, 0.29 ) }
    dend_79 { pt3dadd( 12.8514, 112.848, 64.4218, 0.29 ) }
    dend_79 { pt3dadd( 9.03525, 118.387, 71.034, 0.29 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 30/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 25.9189, 97.0814, 32.8174, 0.74 ) }
    dend_78 { pt3dadd( 26.0224, 109.083, 36.0492, 0.29 ) }
    dend_78 { pt3dadd( 26.0894, 120.497, 41.0236, 0.29 ) }
    dend_78 { pt3dadd( 25.4863, 132.325, 44.8156, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 34/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 62.9916, 69.2845, 21.7594, 0.37 ) }
    dend_76 { pt3dadd( 63.0301, 69.3549, 21.7906, 0.37 ) }
    dend_76 { pt3dadd( 63.4315, 70.0663, 22.0231, 0.37 ) }
    dend_76 { pt3dadd( 63.4859, 70.1547, 22.0476, 0.37 ) }
    dend_76 { pt3dadd( 63.8445, 70.7152, 22.276, 0.59 ) }
    dend_76 { pt3dadd( 64.254, 71.3436, 22.5582, 0.59 ) }
    dend_76 { pt3dadd( 64.3449, 71.4835, 22.6218, 0.59 ) }
    dend_76 { pt3dadd( 64.9811, 72.4254, 23.0521, 0.29 ) }
    dend_76 { pt3dadd( 65.2456, 72.7682, 23.2056, 0.29 ) }
    dend_76 { pt3dadd( 66.3296, 74.089, 23.7418, 0.15 ) }
    dend_76 { pt3dadd( 66.4013, 74.1708, 23.7789, 0.15 ) }
    dend_76 { pt3dadd( 66.7388, 74.5364, 23.9685, 0.15 ) }
    dend_76 { pt3dadd( 67.0607, 74.8826, 24.1567, 0.15 ) }
    dend_76 { pt3dadd( 67.7861, 75.6591, 24.5699, 0.15 ) }
    dend_76 { pt3dadd( 68.1259, 76.032, 24.7396, 0.44 ) }
    dend_76 { pt3dadd( 68.9551, 76.9227, 25.085, 0.29 ) }
    dend_76 { pt3dadd( 69.5505, 77.5735, 25.3483, 0.29 ) }
    dend_76 { pt3dadd( 69.8355, 77.8947, 25.4868, 0.29 ) }
    dend_76 { pt3dadd( 70.4737, 78.6942, 25.8412, 0.29 ) }
    dend_76 { pt3dadd( 70.8172, 79.2158, 26.0647, 0.74 ) }
    dend_76 { pt3dadd( 76.7071, 87.8481, 28.71, 0.74 ) }
    dend_76 { pt3dadd( 82.9282, 96.5712, 29.9228, 0.74 ) }
    dend_76 { pt3dadd( 88.6113, 105.591, 31.4393, 0.74 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 57/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 62.9916, 69.2845, 21.7594, 0.29 ) }
    dend_75 { pt3dadd( 63.0541, 69.2501, 21.7341, 0.29 ) }
    dend_75 { pt3dadd( 63.102, 69.2328, 21.7169, 0.29 ) }
    dend_75 { pt3dadd( 63.5069, 69.105, 21.5758, 0.29 ) }
    dend_75 { pt3dadd( 63.6177, 69.0763, 21.5386, 0.29 ) }
    dend_75 { pt3dadd( 63.9495, 68.9996, 21.4296, 0.29 ) }
    dend_75 { pt3dadd( 64.1009, 68.9646, 21.3799, 0.29 ) }
    dend_75 { pt3dadd( 65.0216, 68.7698, 21.0817, 0.29 ) }
    dend_75 { pt3dadd( 65.0722, 68.7604, 21.0656, 0.29 ) }
    dend_75 { pt3dadd( 65.5573, 68.6968, 20.9178, 0.88 ) }
    dend_75 { pt3dadd( 65.6162, 68.6909, 20.9003, 0.88 ) }
    dend_75 { pt3dadd( 73.0763, 67.7354, 19.2353, 0.88 ) }
    dend_75 { pt3dadd( 80.4902, 65.742, 18.741, 0.88 ) }
    dend_75 { pt3dadd( 88.045, 64.2932, 19.1531, 0.88 ) }
    dend_75 { pt3dadd( 95.6789, 63.242, 19.0836, 0.88 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 72/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 28.8744, 15.6294, -45.7984, 0.74 ) }
    dend_65 { pt3dadd( 29.046, 18.2372, -48.2393, 0.74 ) }
    dend_65 { pt3dadd( 29.2174, 19.2132, -49.3924, 0.74 ) }
    dend_65 { pt3dadd( 29.2287, 19.265, -49.4571, 0.74 ) }
    dend_65 { pt3dadd( 29.4012, 19.8318, -50.2432, 0.74 ) }
    dend_65 { pt3dadd( 29.6357, 20.5176, -51.231, 0.74 ) }
    dend_65 { pt3dadd( 30.1172, 21.7683, -53.1583, 0.59 ) }
    dend_65 { pt3dadd( 31.0147, 23.6943, -56.2574, 0.59 ) }
    dend_65 { pt3dadd( 31.0765, 23.8113, -56.4623, 0.59 ) }
    dend_65 { pt3dadd( 31.8383, 25.1822, -58.8911, 0.59 ) }
    dend_65 { pt3dadd( 31.8612, 25.2207, -58.962, 0.59 ) }
    dend_65 { pt3dadd( 32.6869, 26.5545, -61.5118, 0.29 ) }
    dend_65 { pt3dadd( 32.7114, 26.5935, -61.5819, 0.29 ) }
    dend_65 { pt3dadd( 32.9194, 26.999, -62.2103, 0.29 ) }
    dend_65 { pt3dadd( 33.2027, 27.8029, -63.3518, 0.29 ) }
    dend_65 { pt3dadd( 33.2031, 27.8501, -63.4057, 0.29 ) }
    dend_65 { pt3dadd( 32.9738, 28.2175, -63.8857, 0.29 ) }
    dend_65 { pt3dadd( 32.8142, 28.3361, -64.0598, 0.29 ) }
    dend_65 { pt3dadd( 32.3259, 28.6964, -64.5952, 0.29 ) }
    dend_65 { pt3dadd( 31.7587, 29.0875, -65.2038, 0.74 ) }
    dend_65 { pt3dadd( 31.2796, 29.5572, -66.1425, 0.74 ) }
    dend_65 { pt3dadd( 30.5371, 30.7658, -68.5264, 0.37 ) }
    dend_65 { pt3dadd( 30.5256, 30.7998, -68.6024, 0.37 ) }
    dend_65 { pt3dadd( 30.4314, 31.2341, -69.6232, 0.37 ) }
    dend_65 { pt3dadd( 30.4235, 31.2818, -69.7414, 0.37 ) }
    dend_65 { pt3dadd( 30.1568, 33.2328, -74.365, 0.37 ) }
    dend_65 { pt3dadd( 30.1206, 33.5773, -75.1641, 1.03 ) }
    dend_65 { pt3dadd( 29.7825, 35.6222, -79.6479, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_65 { pt3dadd( 29.7732, 35.6574, -79.7237, 1.03 ) }
    dend_65 { pt3dadd( 29.359, 36.902, -82.2457, 0.29 ) }
    dend_65 { pt3dadd( 29.1759, 37.3932, -83.1239, 0.29 ) }
    dend_65 { pt3dadd( 29.1321, 37.5054, -83.2814, 0.29 ) }
    dend_65 { pt3dadd( 28.803, 38.4895, -84.4795, 0.29 ) }
    dend_65 { pt3dadd( 28.7911, 38.5476, -84.5383, 0.29 ) }
    dend_65 { pt3dadd( 28.5769, 40.4989, -86.5005, 0.29 ) }
    dend_65 { pt3dadd( 28.5765, 40.5583, -86.5592, 0.29 ) }
    dend_65 { pt3dadd( 28.6419, 41.9934, -88.1208, 1.33 ) }
    dend_65 { pt3dadd( 28.6882, 42.5165, -88.7077, 1.33 ) }
    dend_65 { pt3dadd( 28.9627, 44.4971, -91.0206, 0.29 ) }
    dend_65 { pt3dadd( 29.0307, 45.2247, -91.8884, 0.29 ) }
    dend_65 { pt3dadd( 29.0253, 45.3081, -91.9839, 0.29 ) }
    dend_65 { pt3dadd( 28.8838, 46.1343, -92.8736, 1.03 ) }
    dend_65 { pt3dadd( 28.7896, 46.4301, -93.1707, 1.03 ) }
    dend_65 { pt3dadd( 28.7715, 46.4801, -93.2355, 1.03 ) }
    dend_65 { pt3dadd( 28.4853, 47.467, -94.4228, 0.22 ) }
    dend_65 { pt3dadd( 28.1757, 48.6008, -95.8534, 0.22 ) }
    dend_65 { pt3dadd( 28.161, 48.6505, -95.9193, 0.22 ) }
    dend_65 { pt3dadd( 27.8246, 49.7848, -97.4438, 1.18 ) }
    dend_65 { pt3dadd( 27.049, 52.6045, -101.107, 0.22 ) }
    dend_65 { pt3dadd( 26.8111, 53.7751, -102.641, 0.22 ) }
    dend_65 { pt3dadd( 26.6312, 55.2633, -104.646, 1.18 ) }
    dend_65 { pt3dadd( 26.6022, 56.9033, -107.209, 0.15 ) }
    dend_65 { pt3dadd( 26.6057, 57.0383, -107.435, 0.15 ) }
    dend_65 { pt3dadd( 26.7038, 57.8726, -108.787, 0.15 ) }
    dend_65 { pt3dadd( 26.9771, 59.3073, -110.962, 0.15 ) }
    dend_65 { pt3dadd( 27.294, 60.6497, -112.976, 1.62 ) }
    dend_65 { pt3dadd( 28.3084, 63.9946, -117.669, 0.22 ) }
    dend_65 { pt3dadd( 28.3256, 64.0426, -117.736, 0.22 ) }
    dend_65 { pt3dadd( 28.9417, 65.7566, -120.171, 0.22 ) }
    dend_65 { pt3dadd( 29.2405, 66.5958, -121.399, 1.25 ) }
    dend_65 { pt3dadd( 29.3282, 66.9121, -121.781, 1.25 ) }
    dend_65 { pt3dadd( 29.3481, 66.9837, -121.841, 1.25 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 34/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 28.8744, 15.6294, -45.7984, 0.96 ) }
    dend_64 { pt3dadd( 28.9871, 15.6321, -45.8512, 0.96 ) }
    dend_64 { pt3dadd( 29.8889, 15.6524, -46.2855, 0.74 ) }
    dend_64 { pt3dadd( 31.0554, 15.6572, -46.7753, 0.74 ) }
    dend_64 { pt3dadd( 32.341, 15.6753, -47.3522, 0.74 ) }
    dend_64 { pt3dadd( 32.4044, 15.6771, -47.3873, 0.74 ) }
    dend_64 { pt3dadd( 34.294, 15.7913, -48.6641, 0.74 ) }
    dend_64 { pt3dadd( 34.3345, 15.7961, -48.6951, 0.74 ) }
    dend_64 { pt3dadd( 35.5832, 16.0242, -49.8212, 0.74 ) }
    dend_64 { pt3dadd( 36.5831, 16.2686, -50.7695, 0.74 ) }
    dend_64 { pt3dadd( 37.6646, 16.6516, -51.8962, 1.62 ) }
    dend_64 { pt3dadd( 38.5595, 17.0257, -52.9283, 0.66 ) }
    dend_64 { pt3dadd( 39.2622, 17.3482, -53.7752, 0.52 ) }
    dend_64 { pt3dadd( 40.2495, 17.8097, -54.9765, 1.25 ) }
    dend_64 { pt3dadd( 40.9416, 18.1185, -55.8155, 1.25 ) }
    dend_64 { pt3dadd( 43.0108, 18.9528, -58.097, 0.59 ) }
    dend_64 { pt3dadd( 44.4305, 19.4627, -59.6598, 0.96 ) }
    dend_64 { pt3dadd( 45.9823, 19.9662, -61.4159, 0.96 ) }
    dend_64 { pt3dadd( 46.0162, 19.976, -61.4529, 0.96 ) }
    dend_64 { pt3dadd( 48.4926, 20.6207, -63.9532, 0.96 ) }
    dend_64 { pt3dadd( 49.2095, 20.7766, -64.6441, 1.47 ) }
    dend_64 { pt3dadd( 51.4403, 21.169, -66.5728, 0.74 ) }
    dend_64 { pt3dadd( 51.4868, 21.1779, -66.6072, 0.74 ) }
    dend_64 { pt3dadd( 53.8773, 21.6744, -68.2349, 0.74 ) }
    dend_64 { pt3dadd( 54.663, 21.8557, -68.7286, 1.47 ) }
    dend_64 { pt3dadd( 55.7259, 22.1337, -69.2817, 0.59 ) }
    dend_64 { pt3dadd( 55.9158, 22.1816, -69.3778, 0.59 ) }
    dend_64 { pt3dadd( 57.2529, 22.4949, -69.9397, 0.59 ) }
    dend_64 { pt3dadd( 57.3592, 22.5175, -69.9931, 0.59 ) }
    dend_64 { pt3dadd( 58.456, 22.6958, -70.7113, 2.14 ) }
    dend_64 { pt3dadd( 58.7288, 22.7295, -70.8925, 2.14 ) }
    dend_64 { pt3dadd( 60.0986, 22.8083, -71.7841, 0.66 ) }
    dend_64 { pt3dadd( 60.5123, 22.8155, -72.062, 0.66 ) }
    dend_64 { pt3dadd( 60.5522, 22.816, -72.0941, 0.66 ) }
    dend_64 { pt3dadd( 62.0032, 22.9347, -73.5487, 0.66 ) }
    dend_64 { pt3dadd( 62.0368, 22.9407, -73.5869, 0.66 ) }
    dend_64 { pt3dadd( 63.1924, 23.2624, -75.0616, 0.66 ) }
    dend_64 { pt3dadd( 63.3345, 23.3251, -75.2738, 1.18 ) }
    dend_64 { pt3dadd( 64.2557, 23.8267, -76.8289, 0.81 ) }
    dend_64 { pt3dadd( 65.1927, 24.3751, -78.4667, 0.44 ) }
    dend_64 { pt3dadd( 65.4778, 24.571, -79.0242, 0.44 ) }
    dend_64 { pt3dadd( 65.5005, 24.5855, -79.0676, 0.44 ) }
    dend_64 { pt3dadd( 66.2717, 25.0601, -80.5308, 0.44 ) }
    dend_64 { pt3dadd( 66.3131, 25.0766, -80.5945, 0.44 ) }
    dend_64 { pt3dadd( 66.9898, 25.1936, -81.4284, 0.44 ) }
    dend_64 { pt3dadd( 67.024, 25.1991, -81.466, 0.44 ) }
    dend_64 { pt3dadd( 67.7835, 25.3214, -82.313, 1.4 ) }
    dend_64 { pt3dadd( 67.8243, 25.3298, -82.3542, 1.4 ) }
    dend_64 { pt3dadd( 68.2019, 25.4154, -82.7121, 1.4 ) }
    dend_64 { pt3dadd( 70.4778, 25.9356, -85.0487, 0.52 ) }
    dend_64 { pt3dadd( 71.9504, 26.293, -86.6402, 0.37 ) }
    dend_64 { pt3dadd( 71.9861, 26.3018, -86.6758, 0.37 ) }
    dend_64 { pt3dadd( 73.9315, 26.8034, -88.4964, 0.37 ) }
    dend_64 { pt3dadd( 73.9734, 26.8145, -88.5356, 0.37 ) }
    dend_64 { pt3dadd( 76.2742, 27.4435, -90.7088, 0.37 ) }
    dend_64 { pt3dadd( 76.3166, 27.4545, -90.7475, 0.37 ) }
    dend_64 { pt3dadd( 77.8827, 27.8322, -92.1307, 0.37 ) }
    dend_64 { pt3dadd( 77.9198, 27.8411, -92.1649, 0.37 ) }
    dend_64 { pt3dadd( 79.1962, 28.1436, -93.39, 0.29 ) }
    dend_64 { pt3dadd( 80.7049, 28.5072, -94.7718, 0.29 ) }
    dend_64 { pt3dadd( 80.7436, 28.5169, -94.804, 0.29 ) }
    dend_64 { pt3dadd( 83.4398, 29.1653, -96.9536, 0.29 ) }
    dend_64 { pt3dadd( 84.7191, 29.4683, -98.0171, 1.62 ) }
    dend_64 { pt3dadd( 84.7588, 29.4773, -98.0482, 1.62 ) }
    dend_64 { pt3dadd( 85.5183, 29.6382, -98.5446, 1.62 ) }
    dend_64 { pt3dadd( 86.2432, 29.8057, -98.9702, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_64 { pt3dadd( 87.324, 30.063, -99.6409, 0.29 ) }
    dend_64 { pt3dadd( 88.8424, 30.3892, -100.553, 0.29 ) }
    dend_64 { pt3dadd( 88.8864, 30.397, -100.578, 0.29 ) }
    dend_64 { pt3dadd( 90.23, 30.5989, -101.48, 0.29 ) }
    dend_64 { pt3dadd( 90.5816, 30.6442, -101.748, 1.11 ) }
    dend_64 { pt3dadd( 91.9821, 30.8149, -102.869, 0.29 ) }
    dend_64 { pt3dadd( 92.9832, 30.9193, -103.682, 0.29 ) }
    dend_64 { pt3dadd( 94.2396, 31.0655, -104.59, 1.47 ) }
    dend_64 { pt3dadd( 95.4399, 31.2249, -105.449, 0.15 ) }
    dend_64 { pt3dadd( 95.4819, 31.2296, -105.478, 0.15 ) }
    dend_64 { pt3dadd( 96.2527, 31.2935, -105.928, 0.15 ) }
    dend_64 { pt3dadd( 96.3058, 31.299, -105.952, 0.15 ) }
    dend_64 { pt3dadd( 97.3734, 31.4112, -106.389, 0.15 ) }
    dend_64 { pt3dadd( 97.4757, 31.4161, -106.429, 0.15 ) }
    dend_64 { pt3dadd( 98.5841, 31.426, -106.862, 0.15 ) }
    dend_64 { pt3dadd( 99.4867, 31.4142, -107.274, 1.11 ) }
    dend_64 { pt3dadd( 99.828, 31.3979, -107.456, 1.11 ) }
    dend_64 { pt3dadd( 99.8694, 31.3983, -107.486, 1.11 ) }
    dend_64 { pt3dadd( 101.123, 31.4757, -108.632, 0.37 ) }
    dend_64 { pt3dadd( 101.424, 31.523, -108.943, 0.59 ) }
    dend_64 { pt3dadd( 101.637, 31.5891, -109.181, 0.59 ) }
    dend_64 { pt3dadd( 101.685, 31.6071, -109.232, 0.59 ) }
    dend_64 { pt3dadd( 103.02, 32.1125, -110.594, 0.29 ) }
    dend_64 { pt3dadd( 103.261, 32.1895, -110.792, 0.22 ) }
    dend_64 { pt3dadd( 103.303, 32.2018, -110.82, 0.22 ) }
    dend_64 { pt3dadd( 103.947, 32.3735, -111.208, 0.22 ) }
    dend_64 { pt3dadd( 104.263, 32.4481, -111.392, 0.22 ) }
    dend_64 { pt3dadd( 105.199, 32.652, -111.891, 1.03 ) }
    dend_64 { pt3dadd( 107.005, 33.0088, -112.733, 0.22 ) }
    dend_64 { pt3dadd( 107.583, 33.1209, -113.011, 0.22 ) }
    dend_64 { pt3dadd( 107.628, 33.1293, -113.034, 0.22 ) }
    dend_64 { pt3dadd( 108.731, 33.3198, -113.618, 1.11 ) }
    dend_64 { pt3dadd( 109.105, 33.3888, -113.818, 1.11 ) }
    dend_64 { pt3dadd( 109.177, 33.4041, -113.855, 1.11 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 34/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 70.3006, 11.4905, -33.5666, 0.44 ) }
    dend_62 { pt3dadd( 71.2089, 11.4869, -33.6442, 0.44 ) }
    dend_62 { pt3dadd( 71.9577, 11.5258, -33.7779, 0.44 ) }
    dend_62 { pt3dadd( 72.3307, 11.5521, -33.858, 0.44 ) }
    dend_62 { pt3dadd( 74.3727, 11.9248, -35.0074, 0.44 ) }
    dend_62 { pt3dadd( 74.4448, 11.9432, -35.0575, 0.44 ) }
    dend_62 { pt3dadd( 75.2126, 12.166, -35.6331, 0.81 ) }
    dend_62 { pt3dadd( 76.4525, 12.5532, -36.6189, 0.81 ) }
    dend_62 { pt3dadd( 76.5217, 12.5831, -36.6886, 0.81 ) }
    dend_62 { pt3dadd( 78.8803, 13.8046, -39.2044, 0.22 ) }
    dend_62 { pt3dadd( 79.3291, 14.0822, -39.7184, 0.22 ) }
    dend_62 { pt3dadd( 79.4065, 14.1358, -39.8169, 0.22 ) }
    dend_62 { pt3dadd( 79.7291, 14.3917, -40.2424, 0.44 ) }
    dend_62 { pt3dadd( 80.8558, 15.3405, -41.6847, 0.29 ) }
    dend_62 { pt3dadd( 82.092, 16.4287, -43.1946, 0.29 ) }
    dend_62 { pt3dadd( 84.022, 18.3041, -45.6318, 0.96 ) }
    dend_62 { pt3dadd( 85.4816, 19.8391, -47.6564, 0.44 ) }
    dend_62 { pt3dadd( 86.1108, 20.4656, -48.4858, 0.44 ) }
    dend_62 { pt3dadd( 86.3622, 20.709, -48.8056, 1.03 ) }
    dend_62 { pt3dadd( 86.7092, 21.0132, -49.1735, 1.03 ) }
    dend_62 { pt3dadd( 88.4201, 22.5106, -50.8154, 0.29 ) }
    dend_62 { pt3dadd( 88.516, 22.568, -50.8746, 0.29 ) }
    dend_62 { pt3dadd( 90.8692, 23.5148, -51.9349, 0.29 ) }
    dend_62 { pt3dadd( 91.0391, 23.5634, -52.0099, 0.29 ) }
    dend_62 { pt3dadd( 92.9029, 23.9631, -52.7481, 0.29 ) }
    dend_62 { pt3dadd( 93.0391, 23.988, -52.7908, 0.29 ) }
    dend_62 { pt3dadd( 95.4251, 24.429, -53.4842, 0.29 ) }
    dend_62 { pt3dadd( 95.5166, 24.4522, -53.5239, 0.29 ) }
    dend_62 { pt3dadd( 96.3914, 24.7047, -54.0219, 0.29 ) }
    dend_62 { pt3dadd( 96.5644, 24.753, -54.1248, 0.29 ) }
    dend_62 { pt3dadd( 97.7404, 25.0279, -54.7561, 1.03 ) }
    dend_62 { pt3dadd( 99.7023, 25.3545, -55.5448, 0.29 ) }
    dend_62 { pt3dadd( 99.9761, 25.3752, -55.6095, 0.29 ) }
    dend_62 { pt3dadd( 102.682, 25.4643, -56.2652, 0.29 ) }
    dend_62 { pt3dadd( 102.769, 25.4645, -56.2867, 0.29 ) }
    dend_62 { pt3dadd( 104.52, 25.384, -56.6422, 0.81 ) }
    dend_62 { pt3dadd( 105.425, 25.3162, -56.7707, 0.22 ) }
    dend_62 { pt3dadd( 107.716, 25.1459, -56.9154, 0.22 ) }
    dend_62 { pt3dadd( 109.007, 25.113, -57.0737, 1.03 ) }
    dend_62 { pt3dadd( 109.17, 25.1193, -57.105, 1.03 ) }
    dend_62 { pt3dadd( 110.583, 25.2618, -57.4575, 0.15 ) }
    dend_62 { pt3dadd( 111.951, 25.53, -57.9129, 0.15 ) }
    dend_62 { pt3dadd( 112.033, 25.5519, -57.9414, 0.15 ) }
    dend_62 { pt3dadd( 113.849, 26.2653, -58.7252, 0.81 ) }
    dend_62 { pt3dadd( 114.016, 26.3279, -58.7946, 0.81 ) }
    dend_62 { pt3dadd( 114.42, 26.4432, -58.997, 0.81 ) }
    dend_62 { pt3dadd( 114.542, 26.4707, -59.0704, 0.81 ) }
    dend_62 { pt3dadd( 115.174, 26.5461, -59.4445, 0.15 ) }
    dend_62 { pt3dadd( 115.253, 26.5518, -59.4862, 0.15 ) }
    dend_62 { pt3dadd( 116.773, 26.538, -60.1063, 0.15 ) }
    dend_62 { pt3dadd( 118.204, 26.4846, -60.7097, 0.74 ) }
    dend_62 { pt3dadd( 118.479, 26.4662, -60.8298, 0.74 ) }
    dend_62 { pt3dadd( 118.573, 26.4588, -60.8704, 0.74 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 87/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 70.3006, 11.4905, -33.5666, 0.66 ) }
    dend_61 { pt3dadd( 70.4193, 11.3087, -33.7773, 0.66 ) }
    dend_61 { pt3dadd( 70.4455, 11.2739, -33.8242, 0.66 ) }
    dend_61 { pt3dadd( 70.9364, 10.7419, -34.5895, 0.66 ) }
    dend_61 { pt3dadd( 71.0772, 10.6264, -34.7839, 0.66 ) }
    dend_61 { pt3dadd( 71.6096, 10.2476, -35.474, 0.66 ) }
    dend_61 { pt3dadd( 72.1802, 9.90692, -36.1048, 1.18 ) }
    dend_61 { pt3dadd( 72.2835, 9.85643, -36.2052, 1.18 ) }
    dend_61 { pt3dadd( 72.8016, 9.65065, -36.624, 1.18 ) }
    dend_61 { pt3dadd( 73.4186, 9.46623, -37.0419, 0.44 ) }
    dend_61 { pt3dadd( 73.4808, 9.44965, -37.0782, 0.44 ) }
    dend_61 { pt3dadd( 74.437, 9.20368, -37.5463, 0.44 ) }
    dend_61 { pt3dadd( 74.692, 9.15668, -37.7008, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_61 { pt3dadd( 75.3582, 9.0899, -38.1834, 0.44 ) }
    dend_61 { pt3dadd( 75.4082, 9.08812, -38.2245, 0.44 ) }
    dend_61 { pt3dadd( 75.8487, 9.0967, -38.6033, 0.74 ) }
    dend_61 { pt3dadd( 75.9049, 9.10224, -38.651, 0.74 ) }
    dend_61 { pt3dadd( 77.6316, 9.40615, -40.0719, 0.44 ) }
    dend_61 { pt3dadd( 78.7718, 9.55933, -40.8141, 0.44 ) }
    dend_61 { pt3dadd( 78.8307, 9.56236, -40.8407, 0.44 ) }
    dend_61 { pt3dadd( 79.4989, 9.52334, -41.0028, 0.88 ) }
    dend_61 { pt3dadd( 80.273, 9.42603, -41.0795, 0.88 ) }
    dend_61 { pt3dadd( 80.9854, 9.30317, -41.0713, 0.88 ) }
    dend_61 { pt3dadd( 82.4367, 8.93902, -40.8334, 0.44 ) }
    dend_61 { pt3dadd( 84.0451, 8.46202, -40.4927, 0.44 ) }
    dend_61 { pt3dadd( 85.4001, 8.01593, -40.1735, 1.25 ) }
    dend_61 { pt3dadd( 85.4679, 7.99193, -40.1563, 1.25 ) }
    dend_61 { pt3dadd( 86.1729, 7.72652, -39.9716, 1.25 ) }
    dend_61 { pt3dadd( 87.5183, 7.19983, -39.656, 0.37 ) }
    dend_61 { pt3dadd( 88.4192, 6.90015, -39.5857, 0.37 ) }
    dend_61 { pt3dadd( 88.5433, 6.86583, -39.5989, 0.37 ) }
    dend_61 { pt3dadd( 89.5566, 6.64409, -39.9058, 0.37 ) }
    dend_61 { pt3dadd( 89.6399, 6.62668, -39.9395, 0.37 ) }
    dend_61 { pt3dadd( 90.6321, 6.4384, -40.4535, 0.37 ) }
    dend_61 { pt3dadd( 92.2891, 6.16991, -41.4514, 1.03 ) }
    dend_61 { pt3dadd( 92.9725, 6.03815, -41.8775, 1.92 ) }
    dend_61 { pt3dadd( 93.3343, 5.95805, -42.1043, 0.29 ) }
    dend_61 { pt3dadd( 94.0147, 5.80753, -42.5601, 0.29 ) }
    dend_61 { pt3dadd( 94.1212, 5.78569, -42.6303, 0.29 ) }
    dend_61 { pt3dadd( 94.93, 5.62459, -43.1286, 0.29 ) }
    dend_61 { pt3dadd( 95.4356, 5.47167, -43.4014, 0.74 ) }
    dend_61 { pt3dadd( 95.4968, 5.45295, -43.4385, 0.74 ) }
    dend_61 { pt3dadd( 96.4847, 5.14786, -44.0376, 0.74 ) }
    dend_61 { pt3dadd( 96.5383, 5.13058, -44.0695, 0.74 ) }
    dend_61 { pt3dadd( 97.0548, 4.95238, -44.3479, 0.22 ) }
    dend_61 { pt3dadd( 97.7349, 4.7049, -44.678, 0.22 ) }
    dend_61 { pt3dadd( 97.8575, 4.6447, -44.7015, 0.22 ) }
    dend_61 { pt3dadd( 98.4141, 4.30541, -44.6788, 0.96 ) }
    dend_61 { pt3dadd( 98.6936, 4.11591, -44.6246, 0.96 ) }
    dend_61 { pt3dadd( 99.2419, 3.74358, -44.4983, 0.96 ) }
    dend_61 { pt3dadd( 99.2943, 3.70815, -44.4846, 0.96 ) }
    dend_61 { pt3dadd( 100.984, 2.59555, -44.0264, 0.37 ) }
    dend_61 { pt3dadd( 101.064, 2.54264, -44.0061, 0.37 ) }
    dend_61 { pt3dadd( 102.383, 1.70211, -43.7516, 0.37 ) }
    dend_61 { pt3dadd( 102.438, 1.66854, -43.7441, 0.37 ) }
    dend_61 { pt3dadd( 102.917, 1.39821, -43.7224, 0.59 ) }
    dend_61 { pt3dadd( 103.1, 1.31022, -43.7373, 0.22 ) }
    dend_61 { pt3dadd( 103.159, 1.2873, -43.7492, 0.22 ) }
    dend_61 { pt3dadd( 104.053, 0.942583, -43.8528, 0.22 ) }
    dend_61 { pt3dadd( 104.113, 0.919613, -43.8567, 0.22 ) }
    dend_61 { pt3dadd( 104.492, 0.773297, -43.8821, 0.44 ) }
    dend_61 { pt3dadd( 104.688, 0.691632, -43.9011, 0.44 ) }
    dend_61 { pt3dadd( 105.527, 0.315039, -44.0067, 0.22 ) }
    dend_61 { pt3dadd( 107.417, -0.566661, -44.3178, 0.22 ) }
    dend_61 { pt3dadd( 107.969, -0.834039, -44.4289, 1.03 ) }
    dend_61 { pt3dadd( 108.516, -1.10499, -44.5569, 0.22 ) }
    dend_61 { pt3dadd( 109.594, -1.6602, -44.8476, 0.22 ) }
    dend_61 { pt3dadd( 109.887, -1.81383, -44.9412, 0.22 ) }
    dend_61 { pt3dadd( 111.333, -2.56202, -45.473, 0.22 ) }
    dend_61 { pt3dadd( 113.068, -3.48434, -46.1442, 0.22 ) }
    dend_61 { pt3dadd( 113.949, -3.9422, -46.4867, 1.18 ) }
    dend_61 { pt3dadd( 114.716, -4.32835, -46.784, 1.18 ) }
    dend_61 { pt3dadd( 115.242, -4.57892, -46.9837, 0.15 ) }
    dend_61 { pt3dadd( 117.001, -5.38588, -47.646, 0.15 ) }
    dend_61 { pt3dadd( 117.065, -5.4143, -47.6702, 0.52 ) }
    dend_61 { pt3dadd( 117.541, -5.61205, -47.8478, 0.15 ) }
    dend_61 { pt3dadd( 117.655, -5.65573, -47.8895, 0.15 ) }
    dend_61 { pt3dadd( 119.206, -6.18683, -48.4174, 0.15 ) }
    dend_61 { pt3dadd( 119.638, -6.32863, -48.5564, 0.96 ) }
    dend_61 { pt3dadd( 120.262, -6.51896, -48.7624, 0.96 ) }
    dend_61 { pt3dadd( 120.449, -6.57292, -48.8239, 0.96 ) }
    dend_61 { pt3dadd( 121.022, -6.72226, -49.0084, 0.15 ) }
    dend_61 { pt3dadd( 122.369, -7.00524, -49.411, 0.15 ) }
    dend_61 { pt3dadd( 122.44, -7.01492, -49.4301, 0.15 ) }
    dend_61 { pt3dadd( 122.707, -7.04281, -49.4903, 0.81 ) }
    dend_61 { pt3dadd( 122.771, -7.04786, -49.5016, 0.81 ) }
    dend_61 { pt3dadd( 123.441, -7.09834, -49.585, 0.81 ) }
    dend_61 { pt3dadd( 123.916, -7.12967, -49.6092, 0.81 ) }
    dend_61 { pt3dadd( 123.981, -7.1334, -49.6121, 0.81 ) }
    dend_61 { pt3dadd( 124.482, -7.16814, -49.6418, 0.15 ) }
    dend_61 { pt3dadd( 124.555, -7.17343, -49.6466, 0.15 ) }
    dend_61 { pt3dadd( 125.367, -7.2307, -49.7029, 0.15 ) }
    dend_61 { pt3dadd( 125.465, -7.24024, -49.7056, 0.15 ) }
    dend_61 { pt3dadd( 127.114, -7.42747, -49.6965, 0.15 ) }
    dend_61 { pt3dadd( 127.477, -7.46558, -49.6822, 0.44 ) }
    dend_61 { pt3dadd( 127.671, -7.48323, -49.6689, 0.44 ) }
    dend_61 { pt3dadd( 127.814, -7.49374, -49.654, 0.44 ) }
    dend_61 { pt3dadd( 128.62, -7.54002, -49.5328, 0.15 ) }
    dend_61 { pt3dadd( 128.829, -7.55234, -49.4941, 0.15 ) }
    dend_61 { pt3dadd( 129.327, -7.5785, -49.3479, 0.15 ) }
    dend_61 { pt3dadd( 129.738, -7.60286, -49.23, 0.88 ) }
    dend_61 { pt3dadd( 130.209, -7.63142, -49.1148, 0.88 ) }
    dend_61 { pt3dadd( 130.345, -7.6361, -49.0931, 0.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 90/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -75.9916, 57.0971, 47.0222, 0.37 ) }
    dend_57 { pt3dadd( -86.5482, 59.1324, 54.5465, 0.37 ) }
    dend_57 { pt3dadd( -96.7312, 61.1673, 62.5662, 0.37 ) }
    dend_57 { pt3dadd( -106.989, 62.3341, 70.6751, 0.37 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 94/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -75.9916, 57.0971, 47.0222, 0.29 ) }
    dend_56 { pt3dadd( -86.1355, 60.7145, 49.5885, 0.37 ) }
    dend_56 { pt3dadd( -96.5144, 64.5828, 49.57, 0.37 ) }
    dend_56 { pt3dadd( -106.396, 69.4891, 50.3075, 0.37 ) }
    dend_56 { pt3dadd( -114.836, 76.5373, 49.645, 0.37 ) }
    dend_56 { pt3dadd( -122.449, 84.3412, 48.1939, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_56 { pt3dadd( -129.3, 92.8925, 48.3741, 0.37 ) }
    dend_56 { pt3dadd( -136.06, 101.243, 50.4841, 0.37 ) }
    dend_56 { pt3dadd( -140.95, 110.662, 52.948, 0.37 ) }
    dend_56 { pt3dadd( -147.171, 118.965, 56.4056, 0.37 ) }
    dend_56 { pt3dadd( -150.898, 128.687, 59.5256, 0.37 ) }
    dend_56 { pt3dadd( -153.842, 137.875, 64.5278, 0.37 ) }
    dend_56 { pt3dadd( -157.771, 146.266, 70.2684, 0.37 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 7/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -36.1455, 73.3672, 43.8712, 0.29 ) }
    dend_52 { pt3dadd( -38.8979, 78.8382, 48.3546, 0.29 ) }
    dend_52 { pt3dadd( -41.1901, 84.8159, 52.3952, 0.29 ) }
    dend_52 { pt3dadd( -42.117, 90.742, 57.0151, 0.29 ) }
    dend_52 { pt3dadd( -42.5979, 96.4548, 61.9723, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 12/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -36.1455, 73.3672, 43.8712, 0.74 ) }
    dend_51 { pt3dadd( -40.0572, 79.1183, 48.5692, 0.29 ) }
    dend_51 { pt3dadd( -44.2775, 84.2155, 53.7676, 0.29 ) }
    dend_51 { pt3dadd( -48.715, 89.4472, 58.635, 0.29 ) }
    dend_51 { pt3dadd( -52.9239, 94.0213, 64.3308, 0.29 ) }
    dend_51 { pt3dadd( -57.9602, 98.0492, 69.7865, 0.29 ) }
    dend_51 { pt3dadd( -63.0029, 101.82, 75.4274, 0.29 ) }
    dend_51 { pt3dadd( -67.8631, 105.417, 81.3406, 0.29 ) }
    dend_51 { pt3dadd( -73.0134, 110.258, 85.9249, 0.29 ) }
    dend_51 { pt3dadd( -77.6351, 115.476, 90.6357, 0.29 ) }
    dend_51 { pt3dadd( -82.9304, 119.9, 95.4913, 0.29 ) }
    dend_51 { pt3dadd( -87.5104, 124.285, 101.057, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_34 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 41.3323, -42.8907, 5.16349, 0.59 ) }
    dend_44 { pt3dadd( 42.3454, -43.051, 5.30402, 0.59 ) }
    dend_44 { pt3dadd( 42.5484, -43.0797, 5.32456, 0.59 ) }
    dend_44 { pt3dadd( 42.9313, -43.1315, 5.3585, 0.59 ) }
    dend_44 { pt3dadd( 44.0055, -43.3163, 5.45577, 0.44 ) }
    dend_44 { pt3dadd( 44.8539, -43.4768, 5.53298, 0.44 ) }
    dend_44 { pt3dadd( 45.9128, -43.7197, 5.57642, 0.81 ) }
    dend_44 { pt3dadd( 46.7855, -43.9701, 5.55889, 0.52 ) }
    dend_44 { pt3dadd( 46.8487, -43.9946, 5.55703, 0.52 ) }
    dend_44 { pt3dadd( 47.7762, -44.4482, 5.4717, 0.22 ) }
    dend_44 { pt3dadd( 47.8426, -44.4865, 5.46187, 0.22 ) }
    dend_44 { pt3dadd( 48.8719, -45.2239, 5.25275, 0.52 ) }
    dend_44 { pt3dadd( 49.7081, -45.9379, 5.04169, 0.44 ) }
    dend_44 { pt3dadd( 50.5996, -46.7781, 4.78601, 0.44 ) }
    dend_44 { pt3dadd( 51.4043, -47.5763, 4.5389, 0.22 ) }
    dend_44 { pt3dadd( 51.502, -47.6771, 4.50686, 0.22 ) }
    dend_44 { pt3dadd( 51.887, -48.0826, 4.38954, 0.22 ) }
    dend_44 { pt3dadd( 52.1255, -48.3371, 4.37312, 0.22 ) }
    dend_44 { pt3dadd( 52.5898, -48.8483, 4.4774, 0.22 ) }
    dend_44 { pt3dadd( 52.6373, -48.9005, 4.50812, 0.22 ) }
    dend_44 { pt3dadd( 52.9848, -49.298, 4.80517, 1.03 ) }
    dend_44 { pt3dadd( 53.0216, -49.3439, 4.83777, 1.03 ) }
    dend_44 { pt3dadd( 54.0007, -50.6687, 5.74186, 0.22 ) }
    dend_44 { pt3dadd( 54.4761, -51.3875, 6.20466, 0.22 ) }
    dend_44 { pt3dadd( 54.5058, -51.4366, 6.23969, 0.22 ) }
    dend_44 { pt3dadd( 54.859, -52.0075, 6.63893, 0.37 ) }
    dend_44 { pt3dadd( 55.1178, -52.4097, 6.94267, 0.59 ) }
    dend_44 { pt3dadd( 55.3568, -52.7341, 7.18209, 0.59 ) }
    dend_44 { pt3dadd( 55.3963, -52.7799, 7.21146, 0.59 ) }
    dend_44 { pt3dadd( 56.1918, -53.5499, 7.801, 0.22 ) }
    dend_44 { pt3dadd( 56.813, -54.0823, 8.24258, 0.22 ) }
    dend_44 { pt3dadd( 57.4647, -54.5799, 8.69676, 0.74 ) }
    dend_44 { pt3dadd( 57.9454, -54.9176, 9.01436, 0.74 ) }
    dend_44 { pt3dadd( 58.5735, -55.3675, 9.38032, 0.74 ) }
    dend_44 { pt3dadd( 58.6216, -55.4102, 9.40038, 0.74 ) }
    dend_44 { pt3dadd( 59.0639, -55.8673, 9.50438, 0.37 ) }
    dend_44 { pt3dadd( 59.1563, -55.9769, 9.51561, 0.22 ) }
    dend_44 { pt3dadd( 59.1984, -56.029, 9.51519, 0.22 ) }
    dend_44 { pt3dadd( 59.7485, -56.7386, 9.48851, 0.22 ) }
    dend_44 { pt3dadd( 60.8241, -58.1595, 9.40096, 0.22 ) }
    dend_44 { pt3dadd( 60.8673, -58.2107, 9.39705, 0.22 ) }
    dend_44 { pt3dadd( 61.3481, -58.741, 9.34678, 0.59 ) }
    dend_44 { pt3dadd( 61.8291, -59.2553, 9.29699, 1.03 ) }
    dend_44 { pt3dadd( 62.315, -59.7549, 9.24728, 0.44 ) }
    dend_44 { pt3dadd( 62.5441, -59.968, 9.22473, 0.22 ) }
    dend_44 { pt3dadd( 64.1096, -61.196, 9.09482, 0.22 ) }
    dend_44 { pt3dadd( 64.1628, -61.2373, 9.09151, 0.22 ) }
    dend_44 { pt3dadd( 72.663, -65.839, 9.17687, 0.22 ) }
    dend_44 { pt3dadd( 79.9943, -72.0518, 8.73524, 0.22 ) }
    dend_44 { pt3dadd( 88.0606, -77.0434, 6.93843, 0.22 ) }
    dend_44 { pt3dadd( 95.4968, -83.0651, 5.89516, 0.22 ) }
    dend_44 { pt3dadd( 102.135, -89.9619, 5.22432, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 41.3323, -42.8907, 5.16349, 0.88 ) }
    dend_35 { pt3dadd( 41.4808, -43.5092, 5.09372, 0.88 ) }
    dend_35 { pt3dadd( 41.6905, -44.7853, 4.97598, 0.66 ) }
    dend_35 { pt3dadd( 41.7007, -44.8613, 4.96961, 0.66 ) }
    dend_35 { pt3dadd( 41.8759, -45.9873, 4.88512, 0.66 ) }
    dend_35 { pt3dadd( 42.1272, -47.5057, 4.77828, 0.59 ) }
    dend_35 { pt3dadd( 42.2818, -48.3806, 4.67857, 0.81 ) }
    dend_35 { pt3dadd( 42.4851, -49.5012, 4.53786, 0.81 ) }
    dend_35 { pt3dadd( 42.517, -49.6607, 4.5098, 0.81 ) }
    dend_35 { pt3dadd( 42.7643, -50.7513, 4.27886, 0.52 ) }
    dend_35 { pt3dadd( 42.7868, -50.8226, 4.25979, 0.52 ) }
    dend_35 { pt3dadd( 43.4434, -51.6958, 3.95247, 0.37 ) }
    dend_35 { pt3dadd( 43.5255, -51.7641, 3.92409, 0.37 ) }
    dend_35 { pt3dadd( 44.2454, -52.1689, 3.73256, 0.37 ) }
    dend_35 { pt3dadd( 44.6754, -52.3675, 3.63789, 0.37 ) }
    dend_35 { pt3dadd( 45.5319, -52.6984, 3.49437, 0.37 ) }
    dend_35 { pt3dadd( 47.0577, -53.2802, 3.19652, 0.22 ) }
    dend_35 { pt3dadd( 47.2297, -53.3449, 3.16809, 0.22 ) }
    dend_35 { pt3dadd( 48.1593, -53.7613, 2.99374, 0.81 ) }
    dend_35 { pt3dadd( 48.3076, -53.8342, 2.96235, 0.81 ) }
    dend_35 { pt3dadd( 49.0051, -54.2965, 2.83526, 1.18 ) }
    dend_35 { pt3dadd( 50.1167, -55.2991, 2.69796, 0.88 ) }
    dend_35 { pt3dadd( 50.5179, -55.7849, 2.68166, 0.29 ) }
    dend_35 { pt3dadd( 51.4177, -57.0609, 2.72496, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( 51.4715, -57.1552, 2.73897, 0.29 ) }
    dend_35 { pt3dadd( 52.3174, -58.8024, 3.0807, 0.29 ) }
    dend_35 { pt3dadd( 52.6314, -59.4718, 3.20782, 0.81 ) }
    dend_35 { pt3dadd( 53.0372, -60.355, 3.37118, 0.81 ) }
    dend_35 { pt3dadd( 53.4178, -61.2045, 3.51392, 0.81 ) }
    dend_35 { pt3dadd( 54.1769, -62.8946, 3.79099, 0.44 ) }
    dend_35 { pt3dadd( 54.6891, -64.0532, 3.95042, 0.44 ) }
    dend_35 { pt3dadd( 55.3268, -65.5018, 4.05428, 1.11 ) }
    dend_35 { pt3dadd( 55.6073, -66.1081, 4.06617, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 9/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 109.017, -33.466, 47.9323, 0.29 ) }
    dend_33 { pt3dadd( 115.235, -33.0835, 53.69, 0.29 ) }
    dend_33 { pt3dadd( 120.399, -33.2142, 60.4078, 0.29 ) }
    dend_33 { pt3dadd( 124.547, -34.6527, 67.6286, 0.29 ) }
    dend_33 { pt3dadd( 126.909, -37.4815, 75.1876, 0.29 ) }
    dend_33 { pt3dadd( 130.263, -40.0004, 82.493, 0.29 ) }
    dend_33 { pt3dadd( 132.191, -42.5783, 90.2654, 0.29 ) }
    dend_33 { pt3dadd( 133.481, -44.8965, 98.252, 0.29 ) }
    dend_33 { pt3dadd( 134.495, -49.0065, 105.469, 0.29 ) }
    dend_33 { pt3dadd( 136.729, -53.0728, 112.444, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 19/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 109.017, -33.466, 47.9323, 0.74 ) }
    dend_32 { pt3dadd( 115.989, -34.9501, 48.6909, 0.29 ) }
    dend_32 { pt3dadd( 123.076, -35.1806, 49.7439, 0.29 ) }
    dend_32 { pt3dadd( 130.202, -34.8712, 49.0939, 0.29 ) }
    dend_32 { pt3dadd( 137.337, -34.2606, 49.2207, 0.29 ) }
    dend_32 { pt3dadd( 144.449, -35.1251, 48.9589, 0.29 ) }
    dend_32 { pt3dadd( 151.599, -34.6911, 48.9446, 0.29 ) }
    dend_32 { pt3dadd( 158.481, -33.3561, 47.5714, 0.29 ) }
    dend_32 { pt3dadd( 165.302, -31.3102, 47.0812, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 28/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 39.0518, -76.217, 63.2107, 0.37 ) }
    dend_29 { pt3dadd( 39.3496, -76.5572, 63.3408, 0.37 ) }
    dend_29 { pt3dadd( 39.8969, -77.2796, 63.7654, 0.37 ) }
    dend_29 { pt3dadd( 40.4743, -78.3025, 64.4666, 0.22 ) }
    dend_29 { pt3dadd( 40.4959, -78.3552, 64.5027, 0.22 ) }
    dend_29 { pt3dadd( 40.8453, -79.9226, 65.4818, 0.52 ) }
    dend_29 { pt3dadd( 40.918, -80.4949, 65.8191, 0.52 ) }
    dend_29 { pt3dadd( 40.8532, -81.5689, 66.4362, 0.37 ) }
    dend_29 { pt3dadd( 40.5707, -82.6654, 66.9659, 0.22 ) }
    dend_29 { pt3dadd( 40.318, -83.3379, 67.2177, 0.22 ) }
    dend_29 { pt3dadd( 39.7287, -84.5834, 67.4759, 0.22 ) }
    dend_29 { pt3dadd( 39.6939, -84.6409, 67.4791, 0.22 ) }
    dend_29 { pt3dadd( 39.2397, -85.3023, 67.4662, 0.22 ) }
    dend_29 { pt3dadd( 38.1323, -86.7994, 67.3922, 0.22 ) }
    dend_29 { pt3dadd( 37.6504, -87.4813, 67.3573, 0.22 ) }
    dend_29 { pt3dadd( 36.766, -88.8766, 67.2822, 0.22 ) }
    dend_29 { pt3dadd( 35.5252, -91.0418, 67.1649, 0.15 ) }
    dend_29 { pt3dadd( 34.5597, -92.8866, 67.0667, 0.15 ) }
    dend_29 { pt3dadd( 33.3806, -95.3576, 66.9032, 0.15 ) }
    dend_29 { pt3dadd( 32.3427, -97.6571, 66.7275, 0.15 ) }
    dend_29 { pt3dadd( 30.9499, -100.95, 66.4771, 0.15 ) }
    dend_29 { pt3dadd( 30.5299, -102.093, 66.3863, 0.59 ) }
    dend_29 { pt3dadd( 30.1942, -103.225, 66.2818, 0.59 ) }
    dend_29 { pt3dadd( 29.9449, -104.287, 66.1696, 0.29 ) }
    dend_29 { pt3dadd( 29.8545, -104.902, 66.0664, 0.29 ) }
    dend_29 { pt3dadd( 28.1409, -114.275, 66.6688, 0.29 ) }
    dend_29 { pt3dadd( 25.6493, -123.222, 68.9883, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 39.0518, -76.217, 63.2107, 0.59 ) }
    dend_28 { pt3dadd( 39.444, -76.4845, 63.3011, 0.59 ) }
    dend_28 { pt3dadd( 40.5272, -77.3048, 63.7402, 0.22 ) }
    dend_28 { pt3dadd( 41.0614, -77.6915, 63.8816, 0.22 ) }
    dend_28 { pt3dadd( 43.0421, -79.1137, 64.3289, 0.22 ) }
    dend_28 { pt3dadd( 43.107, -79.1591, 64.3353, 0.22 ) }
    dend_28 { pt3dadd( 44.8106, -80.351, 64.5024, 0.22 ) }
    dend_28 { pt3dadd( 46.7685, -81.7658, 64.7295, 0.22 ) }
    dend_28 { pt3dadd( 49.2588, -83.6598, 65.0887, 0.22 ) }
    dend_28 { pt3dadd( 49.3217, -83.7078, 65.0948, 0.22 ) }
    dend_28 { pt3dadd( 51.4379, -85.1849, 65.023, 0.22 ) }
    dend_28 { pt3dadd( 61.2386, -90.8838, 65.9473, 0.22 ) }
    dend_28 { pt3dadd( 71.2303, -95.5615, 68.8023, 0.22 ) }
    dend_28 { pt3dadd( 81.8389, -99.7193, 69.3225, 0.22 ) }
    dend_28 { pt3dadd( 93.028, -102.035, 69.0849, 0.22 ) }
    dend_28 { pt3dadd( 103.47, -106.595, 68.7327, 0.22 ) }
    dend_28 { pt3dadd( 114.4, -109.59, 70.1561, 0.22 ) }
    dend_28 { pt3dadd( 125.346, -112.676, 71.2024, 0.22 ) }
    dend_28 { pt3dadd( 136.467, -115.028, 72.3857, 0.22 ) }
    dend_28 { pt3dadd( 147.476, -115.463, 75.4459, 0.22 ) }
    dend_28 { pt3dadd( 158.185, -116.818, 79.2159, 0.22 ) }
    dend_28 { pt3dadd( 169.305, -117.421, 81.8111, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 77/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -13.3178, -27.8519, -13.6211, 0.96 ) }
    dend_18 { pt3dadd( -13.0791, -30.7437, -20.5215, 0.96 ) }
    dend_18 { pt3dadd( -13.0171, -31.4945, -22.3132, 0.96 ) }
    dend_18 { pt3dadd( -13.0137, -31.535, -22.4097, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 81/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -13.3178, -27.8519, -13.6211, 1.4 ) }
    dend_17 { pt3dadd( -13.731, -28.1018, -13.4609, 1.4 ) }
    dend_17 { pt3dadd( -15.0896, -28.9354, -12.8936, 1.03 ) }
    dend_17 { pt3dadd( -15.1822, -28.994, -12.8501, 1.03 ) }
    dend_17 { pt3dadd( -16.324, -29.7432, -12.2977, 0.59 ) }
    dend_17 { pt3dadd( -17.4789, -30.602, -11.6403, 0.59 ) }
    dend_17 { pt3dadd( -18.6756, -31.5519, -10.9705, 0.66 ) }
    dend_17 { pt3dadd( -18.7401, -31.6099, -10.934, 0.66 ) }
    dend_17 { pt3dadd( -19.9243, -32.8135, -10.2489, 0.66 ) }
    dend_17 { pt3dadd( -20.8369, -33.8359, -9.74764, 0.44 ) }
    dend_17 { pt3dadd( -22.0277, -35.3426, -9.11896, 0.44 ) }
    dend_17 { pt3dadd( -22.6866, -36.2698, -8.80791, 0.66 ) }
    dend_17 { pt3dadd( -23.5659, -37.5205, -8.4491, 0.66 ) }
    dend_17 { pt3dadd( -23.6856, -37.6661, -8.4039, 0.66 ) }
    dend_17 { pt3dadd( -24.8508, -38.7576, -8.00128, 0.66 ) }
    dend_17 { pt3dadd( -24.9488, -38.8224, -7.95786, 0.66 ) }
    dend_17 { pt3dadd( -25.9146, -39.242, -7.47626, 0.66 ) }
    dend_17 { pt3dadd( -27.1351, -39.6422, -6.72712, 0.88 ) }
    dend_17 { pt3dadd( -28.7907, -40.0867, -5.64596, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_17 { pt3dadd( -30.1482, -40.4223, -4.72747, 0.74 ) }
    dend_17 { pt3dadd( -31.8789, -40.8734, -3.51637, 0.66 ) }
    dend_17 { pt3dadd( -33.4661, -41.3355, -2.39103, 0.66 ) }
    dend_17 { pt3dadd( -34.4471, -41.6888, -1.66665, 0.66 ) }
    dend_17 { pt3dadd( -35.8231, -42.3462, -0.581275, 0.66 ) }
    dend_17 { pt3dadd( -35.8804, -42.3836, -0.534986, 0.66 ) }
    dend_17 { pt3dadd( -37.3336, -43.5759, 0.622399, 0.66 ) }
    dend_17 { pt3dadd( -37.3949, -43.6321, 0.666595, 0.66 ) }
    dend_17 { pt3dadd( -38.6158, -44.7666, 1.51821, 0.66 ) }
    dend_17 { pt3dadd( -38.6717, -44.8156, 1.55389, 0.66 ) }
    dend_17 { pt3dadd( -40.0113, -45.8825, 2.39207, 0.66 ) }
    dend_17 { pt3dadd( -40.2327, -46.0353, 2.51803, 1.03 ) }
    dend_17 { pt3dadd( -41.067, -46.4978, 2.93501, 0.52 ) }
    dend_17 { pt3dadd( -42.4579, -47.1877, 3.55914, 0.52 ) }
    dend_17 { pt3dadd( -42.5274, -47.2207, 3.58948, 0.52 ) }
    dend_17 { pt3dadd( -43.3431, -47.6271, 3.94815, 0.66 ) }
    dend_17 { pt3dadd( -44.3897, -48.1642, 4.40834, 0.66 ) }
    dend_17 { pt3dadd( -45.4632, -48.7617, 4.86973, 1.4 ) }
    dend_17 { pt3dadd( -46.122, -49.1625, 5.15016, 0.81 ) }
    dend_17 { pt3dadd( -47.4608, -50.0048, 5.69972, 0.52 ) }
    dend_17 { pt3dadd( -48.694, -50.7963, 6.21428, 0.37 ) }
    dend_17 { pt3dadd( -49.7507, -51.4882, 6.66458, 0.81 ) }
    dend_17 { pt3dadd( -50.6004, -52.0785, 7.02764, 0.96 ) }
    dend_17 { pt3dadd( -51.5203, -52.7451, 7.41666, 0.96 ) }
    dend_17 { pt3dadd( -52.7481, -53.6462, 7.91748, 0.66 ) }
    dend_17 { pt3dadd( -53.7508, -54.3766, 8.29849, 0.66 ) }
    dend_17 { pt3dadd( -53.8402, -54.4445, 8.33393, 0.66 ) }
    dend_17 { pt3dadd( -55.3429, -55.6122, 8.93989, 0.66 ) }
    dend_17 { pt3dadd( -55.4054, -55.6611, 8.96215, 0.66 ) }
    dend_17 { pt3dadd( -56.5655, -56.6282, 9.31464, 0.66 ) }
    dend_17 { pt3dadd( -58.1357, -58.023, 9.71246, 0.66 ) }
    dend_17 { pt3dadd( -59.387, -59.1512, 9.96233, 0.66 ) }
    dend_17 { pt3dadd( -59.4375, -59.1993, 9.97173, 0.66 ) }
    dend_17 { pt3dadd( -60.5517, -60.3129, 10.1834, 0.66 ) }
    dend_17 { pt3dadd( -61.6899, -61.5068, 10.4296, 0.66 ) }
    dend_17 { pt3dadd( -62.2261, -62.0695, 10.5688, 0.44 ) }
    dend_17 { pt3dadd( -62.2826, -62.1263, 10.5867, 0.44 ) }
    dend_17 { pt3dadd( -62.8889, -62.6366, 10.7635, 0.44 ) }
    dend_17 { pt3dadd( -63.6793, -63.1528, 10.9762, 0.44 ) }
    dend_17 { pt3dadd( -64.7894, -63.6677, 11.2129, 0.88 ) }
    dend_17 { pt3dadd( -66.3435, -64.1949, 11.4409, 0.96 ) }
    dend_17 { pt3dadd( -67.0106, -64.3865, 11.5074, 0.96 ) }
    dend_17 { pt3dadd( -68.6655, -64.8115, 11.5806, 0.44 ) }
    dend_17 { pt3dadd( -70.2297, -65.1603, 11.5583, 0.44 ) }
    dend_17 { pt3dadd( -71.7206, -65.497, 11.4629, 0.44 ) }
    dend_17 { pt3dadd( -72.835, -65.7504, 11.3503, 0.44 ) }
    dend_17 { pt3dadd( -72.914, -65.7728, 11.3399, 0.44 ) }
    dend_17 { pt3dadd( -73.7989, -66.0985, 11.2306, 0.66 ) }
    dend_17 { pt3dadd( -73.8712, -66.1379, 11.2264, 0.66 ) }
    dend_17 { pt3dadd( -74.8156, -66.8033, 11.1468, 0.66 ) }
    dend_17 { pt3dadd( -74.8879, -66.863, 11.1427, 0.66 ) }
    dend_17 { pt3dadd( -75.6401, -67.4823, 11.0705, 0.52 ) }
    dend_17 { pt3dadd( -76.4637, -68.0909, 10.9749, 0.29 ) }
    dend_17 { pt3dadd( -77.543, -68.7697, 10.8306, 0.29 ) }
    dend_17 { pt3dadd( -78.5273, -69.3199, 10.6789, 0.96 ) }
    dend_17 { pt3dadd( -79.6909, -69.8899, 10.5135, 0.96 ) }
    dend_17 { pt3dadd( -80.9952, -70.4937, 10.4072, 0.88 ) }
    dend_17 { pt3dadd( -82.3864, -71.0884, 10.3839, 0.74 ) }
    dend_17 { pt3dadd( -84.2288, -71.8261, 10.508, 0.52 ) }
    dend_17 { pt3dadd( -84.2947, -71.8503, 10.5182, 0.52 ) }
    dend_17 { pt3dadd( -85.841, -72.4095, 10.9155, 0.52 ) }
    dend_17 { pt3dadd( -87.1818, -72.8711, 11.3761, 0.96 ) }
    dend_17 { pt3dadd( -88.2392, -73.2649, 11.8729, 1.18 ) }
    dend_17 { pt3dadd( -89.2877, -73.7248, 12.4991, 0.59 ) }
    dend_17 { pt3dadd( -89.718, -73.9502, 12.7983, 0.29 ) }
    dend_17 { pt3dadd( -90.0837, -74.1485, 13.0202, 0.15 ) }
    dend_17 { pt3dadd( -90.161, -74.191, 13.0537, 0.29 ) }
    dend_17 { pt3dadd( -90.7684, -74.4807, 13.1393, 0.29 ) }
    dend_17 { pt3dadd( -91.2271, -74.6598, 13.1527, 0.29 ) }
    dend_17 { pt3dadd( -91.8552, -74.8329, 13.0731, 0.29 ) }
    dend_17 { pt3dadd( -93.0173, -75.0638, 12.9036, 0.29 ) }
    dend_17 { pt3dadd( -93.8686, -75.1902, 12.8072, 0.44 ) }
    dend_17 { pt3dadd( -94.9712, -75.3181, 12.7081, 0.96 ) }
    dend_17 { pt3dadd( -96.059, -75.4287, 12.6412, 1.33 ) }
    dend_17 { pt3dadd( -97.7205, -75.6085, 12.6296, 1.33 ) }
    dend_17 { pt3dadd( -98.7635, -75.7589, 12.6892, 0.52 ) }
    dend_17 { pt3dadd( -99.8532, -75.9897, 12.8331, 0.22 ) }
    dend_17 { pt3dadd( -99.9423, -76.0173, 12.8486, 0.22 ) }
    dend_17 { pt3dadd( -100.846, -76.415, 13.0048, 0.22 ) }
    dend_17 { pt3dadd( -101.578, -76.8222, 13.1253, 0.52 ) }
    dend_17 { pt3dadd( -102.295, -77.2887, 13.2664, 0.88 ) }
    dend_17 { pt3dadd( -102.363, -77.3337, 13.2754, 0.88 ) }
    dend_17 { pt3dadd( -103.085, -77.7926, 13.3328, 0.88 ) }
    dend_17 { pt3dadd( -104.582, -78.6707, 13.4662, 0.22 ) }
    dend_17 { pt3dadd( -104.655, -78.7096, 13.4725, 0.22 ) }
    dend_17 { pt3dadd( -105.875, -79.3273, 13.6228, 0.22 ) }
    dend_17 { pt3dadd( -106.529, -79.6417, 13.7171, 0.22 ) }
    dend_17 { pt3dadd( -106.593, -79.6716, 13.7278, 0.22 ) }
    dend_17 { pt3dadd( -107.55, -80.1498, 13.9139, 0.22 ) }
    dend_17 { pt3dadd( -107.875, -80.3418, 13.989, 0.22 ) }
    dend_17 { pt3dadd( -109.405, -81.3231, 14.3029, 0.22 ) }
    dend_17 { pt3dadd( -110.221, -81.9105, 14.4462, 1.25 ) }
    dend_17 { pt3dadd( -110.284, -81.963, 14.4563, 1.25 ) }
    dend_17 { pt3dadd( -111.201, -82.7867, 14.5937, 1.62 ) }
    dend_17 { pt3dadd( -111.985, -83.5456, 14.6774, 1.62 ) }
    dend_17 { pt3dadd( -112.783, -84.3778, 14.759, 0.22 ) }
    dend_17 { pt3dadd( -113.131, -84.789, 14.7946, 0.22 ) }
    dend_17 { pt3dadd( -114.489, -86.5628, 14.962, 0.22 ) }
    dend_17 { pt3dadd( -114.591, -86.7046, 14.9742, 0.22 ) }
    dend_17 { pt3dadd( -115.082, -87.4242, 15.0321, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_17 { pt3dadd( -115.615, -88.2265, 15.094, 0.96 ) }
    dend_17 { pt3dadd( -116.388, -89.4177, 15.1857, 0.96 ) }
    dend_17 { pt3dadd( -116.991, -90.2536, 15.2785, 0.15 ) }
    dend_17 { pt3dadd( -117.584, -91.01, 15.3877, 0.15 ) }
    dend_17 { pt3dadd( -117.645, -91.0793, 15.4039, 0.15 ) }
    dend_17 { pt3dadd( -118.633, -92.0644, 15.7437, 0.15 ) }
    dend_17 { pt3dadd( -118.804, -92.2217, 15.8084, 0.15 ) }
    dend_17 { pt3dadd( -119.709, -92.9694, 16.1187, 0.15 ) }
    dend_17 { pt3dadd( -119.772, -93.0192, 16.1378, 0.15 ) }
    dend_17 { pt3dadd( -120.981, -93.9717, 16.464, 0.15 ) }
    dend_17 { pt3dadd( -121.355, -94.2768, 16.5522, 0.88 ) }
    dend_17 { pt3dadd( -122.175, -94.962, 16.7158, 1.11 ) }
    dend_17 { pt3dadd( -122.984, -95.6711, 16.8827, 0.66 ) }
    dend_17 { pt3dadd( -123.351, -96.0119, 16.9503, 0.22 ) }
    dend_17 { pt3dadd( -123.864, -96.4676, 17.0441, 0.15 ) }
    dend_17 { pt3dadd( -123.926, -96.5199, 17.0546, 0.15 ) }
    dend_17 { pt3dadd( -124.683, -97.1299, 17.2271, 0.15 ) }
    dend_17 { pt3dadd( -125.297, -97.5967, 17.414, 0.15 ) }
    dend_17 { pt3dadd( -125.748, -97.9494, 17.5821, 0.37 ) }
    dend_17 { pt3dadd( -126.087, -98.2078, 17.7043, 0.15 ) }
    dend_17 { pt3dadd( -126.231, -98.3148, 17.7476, 0.15 ) }
    dend_17 { pt3dadd( -127.048, -98.9403, 17.9542, 0.15 ) }
    dend_17 { pt3dadd( -127.818, -99.5373, 18.1147, 0.15 ) }
    dend_17 { pt3dadd( -128.232, -99.8493, 18.1901, 0.81 ) }
    dend_17 { pt3dadd( -129.082, -100.473, 18.3516, 0.81 ) }
    dend_17 { pt3dadd( -129.788, -100.952, 18.4956, 0.22 ) }
    dend_17 { pt3dadd( -130.592, -101.454, 18.67, 0.22 ) }
    dend_17 { pt3dadd( -130.743, -101.541, 18.6995, 0.22 ) }
    dend_17 { pt3dadd( -131.574, -102.058, 18.8439, 0.22 ) }
    dend_17 { pt3dadd( -131.642, -102.103, 18.8551, 0.22 ) }
    dend_17 { pt3dadd( -133.04, -103.101, 19.0746, 0.22 ) }
    dend_17 { pt3dadd( -133.184, -103.204, 19.0776, 0.22 ) }
    dend_17 { pt3dadd( -134.162, -103.842, 18.6662, 0.22 ) }
    dend_17 { pt3dadd( -134.951, -104.368, 18.163, 0.22 ) }
    dend_17 { pt3dadd( -135.067, -104.435, 18.0667, 0.22 ) }
    dend_17 { pt3dadd( -135.581, -104.715, 17.6113, 0.96 ) }
    dend_17 { pt3dadd( -137.089, -105.505, 16.2694, 0.66 ) }
    dend_17 { pt3dadd( -139.559, -106.652, 14.1643, 0.22 ) }
    dend_17 { pt3dadd( -140.438, -107.037, 13.4739, 0.22 ) }
    dend_17 { pt3dadd( -142.517, -107.979, 11.9924, 0.52 ) }
    dend_17 { pt3dadd( -143.21, -108.317, 11.5567, 0.96 ) }
    dend_17 { pt3dadd( -144.317, -108.882, 10.9867, 0.96 ) }
    dend_17 { pt3dadd( -145.585, -109.621, 10.5895, 0.15 ) }
    dend_17 { pt3dadd( -146.806, -110.425, 10.4583, 0.22 ) }
    dend_17 { pt3dadd( -148.014, -111.27, 10.4454, 0.22 ) }
    dend_17 { pt3dadd( -148.343, -111.538, 10.4993, 0.22 ) }
    dend_17 { pt3dadd( -148.803, -111.932, 10.625, 0.44 ) }
    dend_17 { pt3dadd( -149.331, -112.474, 10.8653, 0.74 ) }
    dend_17 { pt3dadd( -149.38, -112.532, 10.8987, 0.74 ) }
    dend_17 { pt3dadd( -149.89, -113.054, 11.1927, 0.74 ) }
    dend_17 { pt3dadd( -149.946, -113.107, 11.2213, 0.74 ) }
    dend_17 { pt3dadd( -150.851, -113.994, 11.6265, 0.22 ) }
    dend_17 { pt3dadd( -151.875, -114.967, 11.9765, 0.22 ) }
    dend_17 { pt3dadd( -151.934, -115.022, 11.9937, 0.22 ) }
    dend_17 { pt3dadd( -152.985, -115.919, 12.2695, 0.22 ) }
    dend_17 { pt3dadd( -153.695, -116.501, 12.4374, 0.22 ) }
    dend_17 { pt3dadd( -153.833, -116.606, 12.4681, 0.22 ) }
    dend_17 { pt3dadd( -155.844, -118.017, 12.8006, 0.22 ) }
    dend_17 { pt3dadd( -156.015, -118.131, 12.8297, 0.22 ) }
    dend_17 { pt3dadd( -157.956, -119.534, 13.3028, 0.22 ) }
    dend_17 { pt3dadd( -158.245, -119.755, 13.3928, 0.22 ) }
    dend_17 { pt3dadd( -159.074, -120.403, 13.6759, 0.52 ) }
    dend_17 { pt3dadd( -159.948, -121.078, 14.0016, 1.33 ) }
    dend_17 { pt3dadd( -160.798, -121.728, 14.3542, 1.55 ) }
    dend_17 { pt3dadd( -162.319, -122.846, 15.02, 0.37 ) }
    dend_17 { pt3dadd( -162.782, -123.175, 15.2428, 0.22 ) }
    dend_17 { pt3dadd( -163.104, -123.401, 15.401, 0.22 ) }
    dend_17 { pt3dadd( -164.155, -124.158, 15.9148, 0.22 ) }
    dend_17 { pt3dadd( -164.283, -124.256, 15.9878, 0.22 ) }
    dend_17 { pt3dadd( -164.797, -124.647, 16.2578, 0.22 ) }
    dend_17 { pt3dadd( -164.885, -124.715, 16.2913, 0.22 ) }
    dend_17 { pt3dadd( -165.297, -125.1, 16.4816, 0.59 ) }
    dend_17 { pt3dadd( -165.836, -125.622, 16.7487, 0.59 ) }
    dend_17 { pt3dadd( -166.565, -126.4, 17.1333, 0.22 ) }
    dend_17 { pt3dadd( -166.695, -126.527, 17.2013, 0.22 ) }
    dend_17 { pt3dadd( -167.12, -126.919, 17.4244, 0.22 ) }
    dend_17 { pt3dadd( -167.495, -127.24, 17.6076, 0.22 ) }
    dend_17 { pt3dadd( -168.734, -128.22, 18.1868, 0.22 ) }
    dend_17 { pt3dadd( -168.935, -128.377, 18.2819, 0.66 ) }
    dend_17 { pt3dadd( -169.264, -128.625, 18.4221, 0.22 ) }
    dend_17 { pt3dadd( -169.325, -128.671, 18.4528, 0.22 ) }
    dend_17 { pt3dadd( -170.347, -129.462, 19.0435, 0.22 ) }
    dend_17 { pt3dadd( -170.429, -129.527, 19.0956, 0.22 ) }
    dend_17 { pt3dadd( -171.014, -129.97, 19.4881, 0.66 ) }
    dend_17 { pt3dadd( -171.776, -130.495, 19.9906, 0.66 ) }
    dend_17 { pt3dadd( -172.54, -131.05, 20.469, 0.22 ) }
    dend_17 { pt3dadd( -172.6, -131.093, 20.5051, 0.22 ) }
    dend_17 { pt3dadd( -173.257, -131.502, 20.7783, 0.22 ) }
    dend_17 { pt3dadd( -173.924, -131.869, 20.9652, 0.22 ) }
    dend_17 { pt3dadd( -174.169, -131.982, 20.9884, 0.22 ) }
    dend_17 { pt3dadd( -176.345, -132.877, 20.9669, 0.22 ) }
    dend_17 { pt3dadd( -176.433, -132.91, 20.9601, 0.22 ) }
    dend_17 { pt3dadd( -178.503, -133.619, 20.7675, 0.15 ) }
    dend_17 { pt3dadd( -179.333, -133.894, 20.6754, 1.11 ) }
    dend_17 { pt3dadd( -180.848, -134.32, 20.3477, 0.44 ) }
    dend_17 { pt3dadd( -181.515, -134.468, 20.1213, 0.44 ) }
    dend_17 { pt3dadd( -181.675, -134.502, 20.0548, 0.44 ) }
    dend_17 { pt3dadd( -183.03, -134.828, 19.456, 0.44 ) }
    dend_17 { pt3dadd( -183.876, -135.041, 18.9926, 0.81 ) }
    dend_17 { pt3dadd( -187.152, -135.944, 17.0266, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_17 { pt3dadd( -189.788, -136.715, 15.3773, 0.74 ) }
    dend_17 { pt3dadd( -190.682, -137.002, 14.8083, 0.74 ) }
    dend_17 { pt3dadd( -190.758, -137.029, 14.7596, 0.74 ) }
    dend_17 { pt3dadd( -193.945, -138.261, 12.5296, 0.22 ) }
    dend_17 { pt3dadd( -195.204, -138.786, 11.6267, 0.22 ) }
    dend_17 { pt3dadd( -195.417, -138.9, 11.4927, 0.22 ) }
    dend_17 { pt3dadd( -196.706, -139.681, 10.7813, 0.22 ) }
    dend_17 { pt3dadd( -197.227, -140.001, 10.534, 0.88 ) }
    dend_17 { pt3dadd( -199.546, -141.509, 9.55505, 0.22 ) }
    dend_17 { pt3dadd( -199.698, -141.622, 9.51045, 0.22 ) }
    dend_17 { pt3dadd( -201.622, -143.01, 8.81737, 0.22 ) }
    dend_17 { pt3dadd( -201.968, -143.253, 8.68643, 0.81 ) }
    dend_17 { pt3dadd( -202.805, -143.802, 8.35478, 0.52 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 13/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -10.7294, -31.5265, 0.605622, 0.29 ) }
    dend_11 { pt3dadd( -6.08442, -33.0496, -2.83087, 0.29 ) }
    dend_11 { pt3dadd( -5.30831, -33.2123, -3.30663, 0.44 ) }
    dend_11 { pt3dadd( -5.2405, -33.2173, -3.33812, 0.44 ) }
    dend_11 { pt3dadd( -3.76439, -33.2158, -3.89599, 0.44 ) }
    dend_11 { pt3dadd( -5.23932, -33.3299, -3.4488, 0.44 ) }
    dend_11 { pt3dadd( -5.37308, -33.3468, -3.41495, 0.44 ) }
    dend_11 { pt3dadd( -7.09188, -33.7978, -3.15241, 0.44 ) }
    dend_11 { pt3dadd( -8.08698, -34.0779, -3.05778, 0.44 ) }
    dend_11 { pt3dadd( -8.15697, -34.1032, -3.05271, 0.44 ) }
    dend_11 { pt3dadd( -8.69828, -34.3703, -3.04824, 0.66 ) }
    dend_11 { pt3dadd( -8.75558, -34.4171, -3.04598, 0.66 ) }
    dend_11 { pt3dadd( -9.36684, -35.0923, -3.03483, 0.66 ) }
    dend_11 { pt3dadd( -9.40647, -35.1543, -3.03368, 0.66 ) }
    dend_11 { pt3dadd( -9.94474, -35.9882, -3.01269, 0.44 ) }
    dend_11 { pt3dadd( -9.98559, -36.0494, -3.01142, 0.44 ) }
    dend_11 { pt3dadd( -10.5692, -36.9106, -2.96673, 0.44 ) }
    dend_11 { pt3dadd( -10.6113, -36.9709, -2.96332, 0.44 ) }
    dend_11 { pt3dadd( -11.1724, -37.8157, -2.90712, 0.44 ) }
    dend_11 { pt3dadd( -11.5713, -38.3936, -2.81885, 0.74 ) }
    dend_11 { pt3dadd( -12.054, -38.9788, -2.61928, 0.74 ) }
    dend_11 { pt3dadd( -12.7617, -39.7541, -2.28085, 0.59 ) }
    dend_11 { pt3dadd( -12.817, -39.8107, -2.25159, 0.59 ) }
    dend_11 { pt3dadd( -13.8865, -40.7994, -1.66218, 0.59 ) }
    dend_11 { pt3dadd( -15.0194, -41.6549, -1.00154, 0.81 ) }
    dend_11 { pt3dadd( -16.8198, -42.7072, 0.0275871, 0.52 ) }
    dend_11 { pt3dadd( -17.8609, -43.2204, 0.589543, 0.52 ) }
    dend_11 { pt3dadd( -17.9308, -43.2527, 0.625821, 0.52 ) }
    dend_11 { pt3dadd( -19.587, -44.048, 1.48565, 0.52 ) }
    dend_11 { pt3dadd( -21.1196, -44.8552, 2.27134, 0.74 ) }
    dend_11 { pt3dadd( -22.3628, -45.6317, 2.88772, 0.52 ) }
    dend_11 { pt3dadd( -23.0137, -46.1107, 3.20069, 0.52 ) }
    dend_11 { pt3dadd( -23.9077, -46.7959, 3.64249, 0.52 ) }
    dend_11 { pt3dadd( -25.2345, -47.8066, 4.17607, 0.52 ) }
    dend_11 { pt3dadd( -26.3999, -48.677, 4.44438, 0.81 ) }
    dend_11 { pt3dadd( -26.464, -48.7313, 4.45457, 0.81 ) }
    dend_11 { pt3dadd( -26.9956, -49.1758, 4.51163, 0.74 ) }
    dend_11 { pt3dadd( -28.43, -50.0618, 4.55094, 0.59 ) }
    dend_11 { pt3dadd( -29.9562, -50.5648, 4.36188, 0.81 ) }
    dend_11 { pt3dadd( -31.2662, -50.675, 4.0209, 0.81 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 53/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -10.7294, -31.5265, 0.605622, 0.74 ) }
    dend_4 { pt3dadd( -10.7332, -31.6853, 0.566686, 0.74 ) }
    dend_4 { pt3dadd( -10.7901, -32.3955, 0.373342, 1.18 ) }
    dend_4 { pt3dadd( -10.9104, -33.543, 0.0493992, 1.03 ) }
    dend_4 { pt3dadd( -11.0903, -35.3306, -0.448106, 0.74 ) }
    dend_4 { pt3dadd( -11.2466, -36.8125, -0.905115, 0.66 ) }
    dend_4 { pt3dadd( -11.4476, -38.5519, -1.44778, 0.66 ) }
    dend_4 { pt3dadd( -11.5359, -39.1797, -1.68861, 1.03 ) }
    dend_4 { pt3dadd( -11.5562, -39.3078, -1.74431, 1.03 ) }
    dend_4 { pt3dadd( -11.6653, -40.0506, -2.07459, 0.81 ) }
    dend_4 { pt3dadd( -11.7763, -41.3329, -2.55012, 0.81 ) }
    dend_4 { pt3dadd( -11.8128, -42.772, -2.96566, 0.81 ) }
    dend_4 { pt3dadd( -11.7526, -44.5547, -3.37045, 0.52 ) }
    dend_4 { pt3dadd( -11.6623, -45.7886, -3.57757, 0.74 ) }
    dend_4 { pt3dadd( -11.497, -47.6871, -3.69737, 1.03 ) }
    dend_4 { pt3dadd( -11.2872, -49.7678, -3.6182, 0.96 ) }
    dend_4 { pt3dadd( -11.2782, -49.847, -3.60813, 0.96 ) }
    dend_4 { pt3dadd( -11.1512, -50.9643, -3.40907, 1.18 ) }
    dend_4 { pt3dadd( -10.9804, -52.6458, -3.03634, 1.03 ) }
    dend_4 { pt3dadd( -10.8038, -55.0257, -2.51148, 1.03 ) }
    dend_4 { pt3dadd( -10.7303, -56.7937, -2.1312, 0.96 ) }
    dend_4 { pt3dadd( -10.6837, -58.2699, -1.84894, 0.81 ) }
    dend_4 { pt3dadd( -10.6448, -59.3662, -1.65002, 1.03 ) }
    dend_4 { pt3dadd( -10.5725, -60.1562, -1.52319, 0.74 ) }
    dend_4 { pt3dadd( -10.444, -60.9541, -1.42962, 0.59 ) }
    dend_4 { pt3dadd( -10.4259, -61.0218, -1.4232, 0.59 ) }
    dend_4 { pt3dadd( -10.0071, -62.2255, -1.27854, 0.59 ) }
    dend_4 { pt3dadd( -9.95088, -62.3635, -1.25341, 0.59 ) }
    dend_4 { pt3dadd( -8.8674, -65.0286, -0.552568, 0.59 ) }
    dend_4 { pt3dadd( -8.84698, -65.0929, -0.531826, 0.59 ) }
    dend_4 { pt3dadd( -8.39919, -66.7946, 0.078276, 0.59 ) }
    dend_4 { pt3dadd( -8.37554, -66.934, 0.131528, 0.59 ) }
    dend_4 { pt3dadd( -8.32831, -67.8709, 0.509556, 1.03 ) }
    dend_4 { pt3dadd( -8.33504, -70.0174, 1.41071, 0.81 ) }
    dend_4 { pt3dadd( -8.60015, -72.4898, 2.51614, 0.81 ) }
    dend_4 { pt3dadd( -8.6074, -72.5448, 2.54012, 0.81 ) }
    dend_4 { pt3dadd( -8.8322, -73.7793, 3.04564, 1.55 ) }
    dend_4 { pt3dadd( -9.00238, -74.6537, 3.39029, 1.92 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 91/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 9.03525, 118.387, 71.034, 0.37 ) }
    dend_81 { pt3dadd( 4.6668, 120.126, 78.4886, 0.37 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 93/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 9.03525, 118.387, 71.034, 0.29 ) }
    dend_80 { pt3dadd( 10.13, 122.127, 80.0021, 0.37 ) }
    dend_80 { pt3dadd( 10.3344, 126.51, 88.7188, 0.37 ) }
    dend_80 { pt3dadd( 10.8634, 129.585, 97.9996, 0.37 ) }
    dend_80 { pt3dadd( 10.2237, 133.626, 106.867, 0.37 ) }
    dend_80 { pt3dadd( 9.93355, 138.433, 115.339, 0.37 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 99/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 29.3481, 66.9837, -121.841, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_67 { pt3dadd( 31.2975, 68.0425, -123.533, 0.22 ) }
    dend_67 { pt3dadd( 32.8297, 68.8891, -124.83, 0.22 ) }
    dend_67 { pt3dadd( 32.9028, 68.9315, -124.901, 0.22 ) }
    dend_67 { pt3dadd( 34.9428, 70.1451, -126.873, 0.22 ) }
    dend_67 { pt3dadd( 35.5403, 70.5296, -127.411, 1.03 ) }
    dend_67 { pt3dadd( 35.8641, 70.7613, -127.737, 1.03 ) }
    dend_67 { pt3dadd( 35.9038, 70.7921, -127.773, 1.03 ) }
    dend_67 { pt3dadd( 36.9609, 71.8373, -129.008, 0.22 ) }
    dend_67 { pt3dadd( 37.6873, 72.6162, -129.937, 0.22 ) }
    dend_67 { pt3dadd( 38.4601, 73.5714, -130.98, 0.22 ) }
    dend_67 { pt3dadd( 39.556, 75.2039, -132.726, 0.22 ) }
    dend_67 { pt3dadd( 40.1639, 76.2965, -133.687, 0.22 ) }
    dend_67 { pt3dadd( 41.0308, 78.2633, -135.359, 0.22 ) }
    dend_67 { pt3dadd( 41.0503, 78.3173, -135.403, 0.22 ) }
    dend_67 { pt3dadd( 41.3863, 79.5984, -136.31, 0.22 ) }
    dend_67 { pt3dadd( 41.9354, 82.0865, -137.719, 0.22 ) }
    dend_67 { pt3dadd( 42.506, 84.9153, -139.166, 0.22 ) }
    dend_67 { pt3dadd( 43.1805, 88.5561, -140.991, 0.22 ) }
    dend_67 { pt3dadd( 43.2409, 88.8379, -141.126, 0.44 ) }
    dend_67 { pt3dadd( 44.2673, 93.1352, -143.17, 0.15 ) }
    dend_67 { pt3dadd( 45.1817, 96.1942, -144.592, 0.15 ) }
    dend_67 { pt3dadd( 46.6799, 100.278, -146.332, 0.15 ) }
    dend_67 { pt3dadd( 46.7178, 100.365, -146.369, 0.15 ) }
    dend_67 { pt3dadd( 47.5685, 102.04, -146.974, 0.15 ) }
    dend_67 { pt3dadd( 47.6203, 102.129, -147.01, 0.15 ) }
    dend_67 { pt3dadd( 49.3578, 104.123, -148.085, 0.15 ) }
    dend_67 { pt3dadd( 49.4868, 104.223, -148.148, 0.15 ) }
    dend_67 { pt3dadd( 50.4345, 104.71, -148.228, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 28/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 29.3481, 66.9837, -121.841, 0.22 ) }
    dend_66 { pt3dadd( 29.4696, 69.1191, -122.18, 0.22 ) }
    dend_66 { pt3dadd( 29.5795, 70.463, -122.311, 0.22 ) }
    dend_66 { pt3dadd( 29.5955, 70.6814, -122.349, 0.22 ) }
    dend_66 { pt3dadd( 29.847, 72.6995, -122.734, 0.22 ) }
    dend_66 { pt3dadd( 29.9682, 73.2829, -122.839, 0.66 ) }
    dend_66 { pt3dadd( 30.1204, 73.8932, -122.947, 0.22 ) }
    dend_66 { pt3dadd( 30.5507, 75.1231, -123.119, 0.22 ) }
    dend_66 { pt3dadd( 31.3, 76.8326, -123.41, 0.22 ) }
    dend_66 { pt3dadd( 32.1213, 78.2551, -123.684, 0.22 ) }
    dend_66 { pt3dadd( 33.2464, 79.9066, -124.036, 0.22 ) }
    dend_66 { pt3dadd( 33.2858, 79.9595, -124.048, 0.22 ) }
    dend_66 { pt3dadd( 33.9698, 80.7955, -124.245, 0.22 ) }
    dend_66 { pt3dadd( 34.0162, 80.8431, -124.255, 0.22 ) }
    dend_66 { pt3dadd( 36.0109, 82.5521, -124.375, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 43/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -42.5979, 96.4548, 61.9723, 0.37 ) }
    dend_54 { pt3dadd( -45.2449, 105.475, 69.2024, 0.37 ) }
    dend_54 { pt3dadd( -47.3336, 114.66, 76.3949, 0.37 ) }
    dend_54 { pt3dadd( -49.487, 122.397, 85.1805, 0.37 ) }
    dend_54 { pt3dadd( -49.7712, 131.151, 93.1833, 0.37 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -42.5979, 96.4548, 61.9723, 0.29 ) }
    dend_53 { pt3dadd( -44.7363, 104.525, 68.1425, 0.37 ) }
    dend_53 { pt3dadd( -45.7325, 112.477, 74.751, 0.37 ) }
    dend_53 { pt3dadd( -46.2638, 121.105, 80.4614, 0.37 ) }
    dend_53 { pt3dadd( -45.487, 129.761, 86.1042, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 53/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 55.6073, -66.1081, 4.06617, 0.74 ) }
    dend_39 { pt3dadd( 55.1438, -67.1092, 4.85302, 0.74 ) }
    dend_39 { pt3dadd( 54.7634, -68.0865, 5.29521, 0.59 ) }
    dend_39 { pt3dadd( 54.3893, -69.048, 5.73024, 0.59 ) }
    dend_39 { pt3dadd( 54.3678, -69.1031, 5.75522, 0.59 ) }
    dend_39 { pt3dadd( 53.813, -70.5288, 6.40028, 0.59 ) }
    dend_39 { pt3dadd( 53.7879, -70.5932, 6.42942, 0.59 ) }
    dend_39 { pt3dadd( 52.8979, -72.9047, 7.71275, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 61/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 55.6073, -66.1081, 4.06617, 1.11 ) }
    dend_36 { pt3dadd( 55.7778, -66.3373, 3.93418, 1.11 ) }
    dend_36 { pt3dadd( 56.3348, -67.1124, 3.58551, 0.52 ) }
    dend_36 { pt3dadd( 56.3925, -67.2001, 3.56187, 0.52 ) }
    dend_36 { pt3dadd( 56.7938, -67.9141, 3.43875, 0.52 ) }
    dend_36 { pt3dadd( 56.8145, -67.9563, 3.42906, 0.52 ) }
    dend_36 { pt3dadd( 57.1874, -68.7727, 3.21864, 0.74 ) }
    dend_36 { pt3dadd( 57.2068, -68.8227, 3.20751, 0.74 ) }
    dend_36 { pt3dadd( 57.5626, -69.8922, 3.0285, 0.74 ) }
    dend_36 { pt3dadd( 57.752, -70.6086, 2.89483, 0.74 ) }
    dend_36 { pt3dadd( 57.915, -71.4184, 2.72889, 0.29 ) }
    dend_36 { pt3dadd( 57.9223, -71.4646, 2.71925, 0.29 ) }
    dend_36 { pt3dadd( 57.9517, -71.704, 2.65172, 0.29 ) }
    dend_36 { pt3dadd( 57.9588, -71.7557, 2.63518, 0.29 ) }
    dend_36 { pt3dadd( 58.0485, -72.3671, 2.40944, 0.29 ) }
    dend_36 { pt3dadd( 58.1608, -72.8845, 2.22714, 0.52 ) }
    dend_36 { pt3dadd( 58.1722, -72.9291, 2.21411, 0.52 ) }
    dend_36 { pt3dadd( 58.4197, -73.8499, 1.93695, 0.52 ) }
    dend_36 { pt3dadd( 58.5848, -74.5136, 1.74042, 0.52 ) }
    dend_36 { pt3dadd( 58.5936, -74.552, 1.7292, 0.52 ) }
    dend_36 { pt3dadd( 58.6509, -74.8706, 1.63829, 0.22 ) }
    dend_36 { pt3dadd( 58.6822, -75.1533, 1.5658, 0.22 ) }
    dend_36 { pt3dadd( 58.6855, -75.2057, 1.55071, 0.22 ) }
    dend_36 { pt3dadd( 58.7006, -75.8271, 1.37688, 0.22 ) }
    dend_36 { pt3dadd( 58.7076, -75.8801, 1.3658, 0.22 ) }
    dend_36 { pt3dadd( 58.9597, -76.7921, 1.29466, 0.22 ) }
    dend_36 { pt3dadd( 58.9975, -76.8922, 1.29535, 0.22 ) }
    dend_36 { pt3dadd( 59.3604, -77.6943, 1.34485, 0.81 ) }
    dend_36 { pt3dadd( 59.5797, -78.1156, 1.38799, 0.81 ) }
    dend_36 { pt3dadd( 60.25, -79.2662, 1.54868, 0.37 ) }
    dend_36 { pt3dadd( 60.7999, -80.1698, 1.71042, 0.37 ) }
    dend_36 { pt3dadd( 61.0652, -80.5823, 1.80744, 0.44 ) }
    dend_36 { pt3dadd( 61.1831, -80.7666, 1.85617, 0.15 ) }
    dend_36 { pt3dadd( 61.7353, -81.6329, 2.1301, 0.15 ) }
    dend_36 { pt3dadd( 61.7599, -81.6725, 2.14146, 0.15 ) }
    dend_36 { pt3dadd( 61.8125, -81.7649, 2.15596, 0.66 ) }
    dend_36 { pt3dadd( 61.9145, -81.9706, 2.16175, 0.88 ) }
    dend_36 { pt3dadd( 61.9447, -82.0313, 2.16267, 0.88 ) }
    dend_36 { pt3dadd( 62.1448, -82.449, 2.16976, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_36 { pt3dadd( 66.3842, -87.8452, 1.6671, 0.88 ) }
    dend_36 { pt3dadd( 70.0063, -93.5673, 0.521037, 0.88 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -13.0137, -31.535, -22.4097, 0.59 ) }
    dend_20 { pt3dadd( -9.79941, -33.1704, -27.3726, 0.59 ) }
    dend_20 { pt3dadd( -9.75551, -33.1972, -27.4173, 0.59 ) }
    dend_20 { pt3dadd( -8.83506, -33.9641, -27.6168, 0.59 ) }
    dend_20 { pt3dadd( -8.78999, -34.0025, -27.6205, 0.59 ) }
    dend_20 { pt3dadd( -7.62348, -34.9556, -27.9538, 0.59 ) }
    dend_20 { pt3dadd( -7.48197, -35.0687, -27.9992, 0.59 ) }
    dend_20 { pt3dadd( -5.66341, -36.6566, -28.325, 0.59 ) }
    dend_20 { pt3dadd( -4.84045, -37.3922, -28.5818, 1.03 ) }
    dend_20 { pt3dadd( -3.19311, -38.9634, -29.4545, 0.88 ) }
    dend_20 { pt3dadd( -1.35142, -40.8392, -30.9658, 0.74 ) }
    dend_20 { pt3dadd( -0.997055, -41.2179, -31.3534, 0.74 ) }
    dend_20 { pt3dadd( -0.13545, -42.132, -32.4675, 0.74 ) }
    dend_20 { pt3dadd( -0.106154, -42.1615, -32.5102, 0.74 ) }
    dend_20 { pt3dadd( 0.714219, -42.9386, -33.6631, 1.03 ) }
    dend_20 { pt3dadd( 1.81221, -44.0255, -35.1142, 0.29 ) }
    dend_20 { pt3dadd( 2.28942, -44.423, -35.5863, 0.44 ) }
    dend_20 { pt3dadd( 3.19746, -45.0403, -36.2225, 0.88 ) }
    dend_20 { pt3dadd( 4.027, -45.4918, -36.5887, 1.03 ) }
    dend_20 { pt3dadd( 4.93298, -45.9275, -36.9401, 1.03 ) }
    dend_20 { pt3dadd( 4.98697, -45.9478, -36.9554, 1.03 ) }
    dend_20 { pt3dadd( 6.54023, -46.4395, -37.3247, 1.03 ) }
    dend_20 { pt3dadd( 7.79021, -46.7926, -37.6848, 0.44 ) }
    dend_20 { pt3dadd( 7.84527, -46.8071, -37.7028, 0.44 ) }
    dend_20 { pt3dadd( 9.99067, -47.4811, -38.9551, 0.74 ) }
    dend_20 { pt3dadd( 10.6323, -47.7692, -39.4257, 0.74 ) }
    dend_20 { pt3dadd( 10.674, -47.7944, -39.4601, 0.74 ) }
    dend_20 { pt3dadd( 10.9303, -47.992, -39.6875, 0.74 ) }
    dend_20 { pt3dadd( 10.9726, -48.0288, -39.7259, 0.74 ) }
    dend_20 { pt3dadd( 12.8846, -49.9508, -41.4758, 0.88 ) }
    dend_20 { pt3dadd( 13.9254, -51.1512, -42.5055, 0.88 ) }
    dend_20 { pt3dadd( 15.131, -52.538, -43.7402, 0.59 ) }
    dend_20 { pt3dadd( 15.5781, -53.0394, -44.1967, 0.88 ) }
    dend_20 { pt3dadd( 15.6155, -53.0819, -44.2342, 0.88 ) }
    dend_20 { pt3dadd( 16.4988, -54.1367, -45.1538, 0.52 ) }
    dend_20 { pt3dadd( 17.4534, -55.3743, -46.2512, 0.37 ) }
    dend_20 { pt3dadd( 17.8653, -55.9588, -46.8274, 0.37 ) }
    dend_20 { pt3dadd( 17.8915, -55.9983, -46.8629, 0.37 ) }
    dend_20 { pt3dadd( 18.393, -56.7332, -47.4944, 0.37 ) }
    dend_20 { pt3dadd( 19.3275, -58.1723, -48.5715, 0.37 ) }
    dend_20 { pt3dadd( 20.3896, -59.7888, -49.7133, 0.37 ) }
    dend_20 { pt3dadd( 20.4546, -59.8845, -49.7776, 0.37 ) }
    dend_20 { pt3dadd( 21.194, -60.8925, -50.5367, 0.37 ) }
    dend_20 { pt3dadd( 22.8797, -62.9719, -52.2546, 0.37 ) }
    dend_20 { pt3dadd( 23.4894, -63.6387, -52.8475, 0.37 ) }
    dend_20 { pt3dadd( 24.5805, -64.6976, -53.7919, 0.96 ) }
    dend_20 { pt3dadd( 25.1037, -65.1536, -54.2395, 0.96 ) }
    dend_20 { pt3dadd( 26.9174, -66.6564, -55.846, 0.44 ) }
    dend_20 { pt3dadd( 26.9612, -66.6893, -55.8864, 0.44 ) }
    dend_20 { pt3dadd( 27.4792, -67.0526, -56.325, 1.33 ) }
    dend_20 { pt3dadd( 28.0542, -67.442, -56.9374, 1.33 ) }
    dend_20 { pt3dadd( 30.1695, -68.891, -59.3005, 0.66 ) }
    dend_20 { pt3dadd( 30.2819, -68.9692, -59.4417, 0.66 ) }
    dend_20 { pt3dadd( 31.3851, -69.763, -60.8518, 1.55 ) }
    dend_20 { pt3dadd( 31.8992, -70.1394, -61.5277, 1.55 ) }
    dend_20 { pt3dadd( 35.8459, -73.0524, -66.9288, 0.81 ) }
    dend_20 { pt3dadd( 36.3211, -73.4078, -67.6019, 1.77 ) }
    dend_20 { pt3dadd( 38.2318, -74.8601, -70.3157, 0.44 ) }
    dend_20 { pt3dadd( 39.0088, -75.4668, -71.4109, 0.44 ) }
    dend_20 { pt3dadd( 39.0398, -75.4925, -71.455, 0.44 ) }
    dend_20 { pt3dadd( 40.0807, -76.428, -72.922, 0.88 ) }
    dend_20 { pt3dadd( 40.1154, -76.4675, -72.9651, 0.88 ) }
    dend_20 { pt3dadd( 40.9493, -77.535, -74.0736, 0.37 ) }
    dend_20 { pt3dadd( 41.3988, -78.163, -74.6063, 0.37 ) }
    dend_20 { pt3dadd( 42.0381, -79.0471, -75.3817, 0.74 ) }
    dend_20 { pt3dadd( 42.3206, -79.4463, -75.7821, 0.74 ) }
    dend_20 { pt3dadd( 43.0768, -80.555, -76.9483, 0.37 ) }
    dend_20 { pt3dadd( 43.1021, -80.5917, -76.9875, 0.37 ) }
    dend_20 { pt3dadd( 43.5628, -81.2761, -77.7326, 0.37 ) }
    dend_20 { pt3dadd( 44.2742, -82.286, -78.8484, 1.18 ) }
    dend_20 { pt3dadd( 46.3949, -85.1583, -82.0025, 0.44 ) }
    dend_20 { pt3dadd( 46.4231, -85.192, -82.0427, 0.44 ) }
    dend_20 { pt3dadd( 46.9367, -85.7606, -82.7608, 0.44 ) }
    dend_20 { pt3dadd( 47.8867, -86.7165, -84.0294, 0.44 ) }
    dend_20 { pt3dadd( 48.2408, -87.039, -84.4789, 0.44 ) }
    dend_20 { pt3dadd( 48.3519, -87.1294, -84.5995, 0.44 ) }
    dend_20 { pt3dadd( 49.9338, -88.1987, -85.9259, 0.37 ) }
    dend_20 { pt3dadd( 49.9776, -88.2297, -85.9678, 0.37 ) }
    dend_20 { pt3dadd( 50.5846, -88.6568, -86.6118, 0.37 ) }
    dend_20 { pt3dadd( 51.6144, -89.507, -87.9062, 0.37 ) }
    dend_20 { pt3dadd( 51.7158, -89.6045, -88.0515, 0.37 ) }
    dend_20 { pt3dadd( 52.0809, -90.0024, -88.5845, 0.37 ) }
    dend_20 { pt3dadd( 53.2121, -91.3946, -90.2669, 0.37 ) }
    dend_20 { pt3dadd( 53.243, -91.4345, -90.3123, 0.37 ) }
    dend_20 { pt3dadd( 54.5803, -93.1704, -92.1936, 0.15 ) }
    dend_20 { pt3dadd( 55.3117, -94.1094, -93.1457, 0.88 ) }
    dend_20 { pt3dadd( 55.6843, -94.5818, -93.5948, 0.88 ) }
    dend_20 { pt3dadd( 55.7133, -94.6208, -93.629, 0.88 ) }
    dend_20 { pt3dadd( 56.9101, -96.3505, -95.0777, 0.29 ) }
    dend_20 { pt3dadd( 58.3302, -98.4678, -96.7872, 0.29 ) }
    dend_20 { pt3dadd( 59.2999, -99.9473, -97.9417, 0.29 ) }
    dend_20 { pt3dadd( 60.6581, -102.069, -99.5953, 0.96 ) }
    dend_20 { pt3dadd( 62.4052, -104.82, -101.78, 0.22 ) }
    dend_20 { pt3dadd( 63.3891, -106.392, -103.026, 0.37 ) }
    dend_20 { pt3dadd( 64.4678, -108.163, -104.421, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -13.0137, -31.535, -22.4097, 0.74 ) }
    dend_19 { pt3dadd( -13.7152, -33.7301, -23.9677, 0.74 ) }
    dend_19 { pt3dadd( -13.7385, -33.8056, -24.007, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_19 { pt3dadd( -14.0572, -34.8668, -24.4705, 0.74 ) }
    dend_19 { pt3dadd( -14.5898, -36.5663, -25.0691, 0.74 ) }
    dend_19 { pt3dadd( -15.1388, -38.0322, -25.5808, 0.74 ) }
    dend_19 { pt3dadd( -15.1785, -38.1175, -25.6167, 0.74 ) }
    dend_19 { pt3dadd( -15.9463, -39.4002, -26.0745, 0.74 ) }
    dend_19 { pt3dadd( -16.0473, -39.5477, -26.1361, 0.74 ) }
    dend_19 { pt3dadd( -16.8323, -40.5196, -26.6288, 0.74 ) }
    dend_19 { pt3dadd( -17.6333, -41.3436, -27.096, 0.74 ) }
    dend_19 { pt3dadd( -18.7193, -42.5192, -27.8953, 0.44 ) }
    dend_19 { pt3dadd( -18.7628, -42.5833, -27.938, 0.44 ) }
    dend_19 { pt3dadd( -19.0734, -43.2878, -28.4511, 0.66 ) }
    dend_19 { pt3dadd( -19.0898, -43.3478, -28.4946, 0.66 ) }
    dend_19 { pt3dadd( -19.1892, -44.1094, -29.0849, 0.96 ) }
    dend_19 { pt3dadd( -19.2721, -45.726, -30.3268, 0.96 ) }
    dend_19 { pt3dadd( -19.2596, -47.2854, -31.6223, 1.18 ) }
    dend_19 { pt3dadd( -19.1839, -49.144, -33.4953, 1.18 ) }
    dend_19 { pt3dadd( -19.12, -50.7791, -35.4172, 1.18 ) }
    dend_19 { pt3dadd( -19.0796, -52.3653, -37.5193, 0.96 ) }
    dend_19 { pt3dadd( -19.0817, -52.4602, -37.6709, 0.96 ) }
    dend_19 { pt3dadd( -19.2239, -53.6086, -39.9677, 0.88 ) }
    dend_19 { pt3dadd( -19.5458, -54.8202, -42.9844, 0.44 ) }
    dend_19 { pt3dadd( -19.7714, -55.1815, -44.1676, 0.66 ) }
    dend_19 { pt3dadd( -19.7964, -55.2011, -44.2516, 0.66 ) }
    dend_19 { pt3dadd( -20.5479, -55.5676, -46.0417, 0.66 ) }
    dend_19 { pt3dadd( -21.171, -55.8364, -47.2847, 0.44 ) }
    dend_19 { pt3dadd( -21.2258, -55.8578, -47.3687, 0.44 ) }
    dend_19 { pt3dadd( -22.5305, -56.4648, -49.0541, 0.74 ) }
    dend_19 { pt3dadd( -23.0407, -56.8008, -49.7597, 0.74 ) }
    dend_19 { pt3dadd( -23.0822, -56.8418, -49.8274, 0.74 ) }
    dend_19 { pt3dadd( -23.4379, -57.6845, -51.1404, 0.44 ) }
    dend_19 { pt3dadd( -23.5856, -58.0974, -51.7665, 0.44 ) }
    dend_19 { pt3dadd( -23.7072, -58.3953, -52.2354, 0.44 ) }
    dend_19 { pt3dadd( -24.0666, -59.1744, -53.4245, 0.44 ) }
    dend_19 { pt3dadd( -24.6549, -60.3896, -55.3365, 0.81 ) }
    dend_19 { pt3dadd( -25.8652, -62.7494, -59.1334, 0.96 ) }
    dend_19 { pt3dadd( -26.5168, -63.9996, -61.107, 1.77 ) }
    dend_19 { pt3dadd( -27.4378, -65.8445, -63.9664, 1.47 ) }
    dend_19 { pt3dadd( -27.8523, -66.6717, -65.179, 1.47 ) }
    dend_19 { pt3dadd( -28.714, -68.4582, -67.4909, 1.47 ) }
    dend_19 { pt3dadd( -28.736, -68.5211, -67.5497, 1.47 ) }
    dend_19 { pt3dadd( -28.9526, -69.4368, -68.2063, 1.55 ) }
    dend_19 { pt3dadd( -29.3102, -71.8194, -69.7472, 1.11 ) }
    dend_19 { pt3dadd( -29.4361, -72.9067, -70.3583, 0.66 ) }
    dend_19 { pt3dadd( -29.661, -74.7419, -71.3531, 0.37 ) }
    dend_19 { pt3dadd( -30.0826, -77.4892, -72.634, 0.37 ) }
    dend_19 { pt3dadd( -30.4679, -79.6737, -73.6577, 0.37 ) }
    dend_19 { pt3dadd( -30.7863, -81.1399, -74.3513, 0.37 ) }
    dend_19 { pt3dadd( -30.8239, -81.2798, -74.4225, 0.37 ) }
    dend_19 { pt3dadd( -31.1565, -82.251, -75.0001, 0.37 ) }
    dend_19 { pt3dadd( -31.7551, -83.7793, -76.268, 0.37 ) }
    dend_19 { pt3dadd( -32.4004, -85.1187, -77.4241, 0.22 ) }
    dend_19 { pt3dadd( -32.6559, -85.6531, -77.8473, 0.22 ) }
    dend_19 { pt3dadd( -33.5914, -87.5639, -79.3067, 1.25 ) }
    dend_19 { pt3dadd( -34.1842, -88.6886, -80.1515, 1.62 ) }
    dend_19 { pt3dadd( -36.055, -92.0729, -82.7384, 0.22 ) }
    dend_19 { pt3dadd( -37.5825, -94.5546, -84.7414, 0.22 ) }
    dend_19 { pt3dadd( -37.6252, -94.6172, -84.7874, 0.22 ) }
    dend_19 { pt3dadd( -38.3306, -95.6309, -85.4529, 0.22 ) }
    dend_19 { pt3dadd( -38.3884, -95.6998, -85.4995, 0.22 ) }
    dend_19 { pt3dadd( -39.9759, -97.4241, -86.854, 0.22 ) }
    dend_19 { pt3dadd( -40.0887, -97.5376, -86.9571, 0.22 ) }
    dend_19 { pt3dadd( -40.9165, -98.4999, -87.9566, 0.22 ) }
    dend_19 { pt3dadd( -41.0598, -98.6792, -88.1329, 0.22 ) }
    dend_19 { pt3dadd( -42.2735, -100.257, -89.5714, 0.22 ) }
    dend_19 { pt3dadd( -42.936, -101.25, -90.3127, 0.22 ) }
    dend_19 { pt3dadd( -43.6262, -102.399, -91.0202, 0.96 ) }
    dend_19 { pt3dadd( -44.0991, -103.293, -91.4766, 1.25 ) }
    dend_19 { pt3dadd( -44.4734, -104.123, -91.9113, 0.52 ) }
    dend_19 { pt3dadd( -44.8444, -104.979, -92.3578, 0.15 ) }
    dend_19 { pt3dadd( -45.7012, -107.18, -93.6452, 0.15 ) }
    dend_19 { pt3dadd( -45.7644, -107.341, -93.7533, 0.15 ) }
    dend_19 { pt3dadd( -46.3528, -108.761, -94.7389, 0.15 ) }
    dend_19 { pt3dadd( -47.3478, -111.04, -96.4617, 0.15 ) }
    dend_19 { pt3dadd( -47.5225, -111.43, -96.7836, 1.4 ) }
    dend_19 { pt3dadd( -48.6221, -113.868, -98.9089, 1.4 ) }
    dend_19 { pt3dadd( -49.0071, -114.714, -99.6785, 0.22 ) }
    dend_19 { pt3dadd( -49.435, -115.682, -100.554, 0.22 ) }
    dend_19 { pt3dadd( -49.6832, -116.279, -101.105, 0.22 ) }
    dend_19 { pt3dadd( -50.2786, -117.704, -102.357, 0.22 ) }
    dend_19 { pt3dadd( -50.3057, -117.767, -102.413, 0.22 ) }
    dend_19 { pt3dadd( -50.9359, -119.107, -103.492, 1.03 ) }
    dend_19 { pt3dadd( -51.3606, -120.017, -104.21, 1.33 ) }
    dend_19 { pt3dadd( -52.0083, -121.498, -105.246, 0.74 ) }
    dend_19 { pt3dadd( -52.3883, -122.377, -105.704, 0.22 ) }
    dend_19 { pt3dadd( -52.8512, -123.39, -106.035, 0.22 ) }
    dend_19 { pt3dadd( -53.4772, -124.647, -106.25, 0.22 ) }
    dend_19 { pt3dadd( -53.5218, -124.722, -106.25, 0.22 ) }
    dend_19 { pt3dadd( -53.9136, -125.35, -106.278, 1.03 ) }
    dend_19 { pt3dadd( -54.5742, -126.332, -106.332, 0.74 ) }
    dend_19 { pt3dadd( -55.1804, -127.216, -106.388, 0.74 ) }
    dend_19 { pt3dadd( -55.9052, -128.277, -106.519, 0.44 ) }
    dend_19 { pt3dadd( -56.7082, -129.446, -106.768, 0.22 ) }
    dend_19 { pt3dadd( -58.4551, -131.92, -107.41, 0.15 ) }
    dend_19 { pt3dadd( -58.7669, -132.345, -107.561, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 94/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -31.2662, -50.675, 4.0209, 0.52 ) }
    dend_13 { pt3dadd( -31.352, -50.8088, 3.91075, 0.52 ) }
    dend_13 { pt3dadd( -31.7329, -51.2387, 3.76974, 0.52 ) }
    dend_13 { pt3dadd( -32.58, -52.0516, 3.72325, 0.44 ) }
    dend_13 { pt3dadd( -32.9852, -52.4481, 3.75688, 0.44 ) }
    dend_13 { pt3dadd( -33.0155, -52.4763, 3.76206, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_13 { pt3dadd( -33.7662, -53.1593, 3.91984, 0.44 ) }
    dend_13 { pt3dadd( -34.6155, -53.8359, 4.12529, 0.44 ) }
    dend_13 { pt3dadd( -34.7252, -53.9127, 4.15863, 0.44 ) }
    dend_13 { pt3dadd( -35.5046, -54.3852, 4.40764, 0.44 ) }
    dend_13 { pt3dadd( -36.067, -54.6918, 4.54654, 0.44 ) }
    dend_13 { pt3dadd( -36.104, -54.7112, 4.55114, 0.44 ) }
    dend_13 { pt3dadd( -36.9796, -55.1408, 4.55681, 0.44 ) }
    dend_13 { pt3dadd( -37.4862, -55.376, 4.51394, 0.37 ) }
    dend_13 { pt3dadd( -37.7738, -55.488, 4.49142, 0.37 ) }
    dend_13 { pt3dadd( -38.2253, -55.6446, 4.48394, 0.66 ) }
    dend_13 { pt3dadd( -38.8269, -55.8586, 4.49856, 0.66 ) }
    dend_13 { pt3dadd( -39.6034, -56.1448, 4.56195, 0.29 ) }
    dend_13 { pt3dadd( -40.0514, -56.3192, 4.64757, 0.29 ) }
    dend_13 { pt3dadd( -40.9878, -56.7124, 4.87687, 0.29 ) }
    dend_13 { pt3dadd( -41.8661, -57.1147, 5.14689, 0.29 ) }
    dend_13 { pt3dadd( -41.9078, -57.1332, 5.16188, 0.29 ) }
    dend_13 { pt3dadd( -42.0637, -57.1985, 5.22656, 0.96 ) }
    dend_13 { pt3dadd( -42.6104, -57.4375, 5.46274, 0.37 ) }
    dend_13 { pt3dadd( -43.1636, -57.7017, 5.73698, 0.37 ) }
    dend_13 { pt3dadd( -43.1975, -57.7203, 5.75319, 0.37 ) }
    dend_13 { pt3dadd( -44.1987, -58.2429, 6.16417, 0.37 ) }
    dend_13 { pt3dadd( -44.3496, -58.3201, 6.22379, 0.74 ) }
    dend_13 { pt3dadd( -44.5523, -58.4185, 6.298, 0.29 ) }
    dend_13 { pt3dadd( -45.3865, -58.792, 6.56619, 0.29 ) }
    dend_13 { pt3dadd( -45.8889, -58.9895, 6.74829, 0.29 ) }
    dend_13 { pt3dadd( -50.9157, -62.1544, 7.45462, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 26/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -31.2662, -50.675, 4.0209, 0.81 ) }
    dend_12 { pt3dadd( -31.4259, -50.5421, 4.00744, 0.81 ) }
    dend_12 { pt3dadd( -31.7362, -50.2893, 3.98992, 0.44 ) }
    dend_12 { pt3dadd( -32.2884, -49.7735, 3.9654, 0.44 ) }
    dend_12 { pt3dadd( -33.0561, -49.0566, 3.93131, 0.44 ) }
    dend_12 { pt3dadd( -33.6472, -48.5045, 3.90507, 0.44 ) }
    dend_12 { pt3dadd( -34.5977, -47.6169, 3.86286, 0.22 ) }
    dend_12 { pt3dadd( -34.9581, -47.278, 3.8594, 0.22 ) }
    dend_12 { pt3dadd( -35.585, -46.7169, 3.89063, 0.22 ) }
    dend_12 { pt3dadd( -42.0221, -41.0051, 3.62693, 0.22 ) }
    dend_12 { pt3dadd( -49.4325, -36.7145, 2.4348, 0.22 ) }
    dend_12 { pt3dadd( -55.8665, -30.9973, 2.21587, 0.22 ) }
    dend_12 { pt3dadd( -61.2239, -24.3038, 2.48178, 0.22 ) }
    dend_12 { pt3dadd( -67.183, -18.1205, 2.90353, 0.22 ) }
    dend_12 { pt3dadd( -73.8843, -12.8168, 1.79378, 0.22 ) }
    dend_12 { pt3dadd( -80.5259, -7.76961, -0.376595, 0.22 ) }
    dend_12 { pt3dadd( -87.9177, -4.06518, -2.92854, 0.22 ) }
    dend_12 { pt3dadd( -95.7452, -0.875128, -4.83962, 0.22 ) }
    dend_12 { pt3dadd( -104.118, 1.32242, -5.52049, 0.22 ) }
    dend_12 { pt3dadd( -112.708, 2.60726, -5.83342, 0.22 ) }
    dend_12 { pt3dadd( -121.331, 3.67381, -6.08873, 0.22 ) }
    dend_12 { pt3dadd( -129.745, 5.41077, -4.78519, 0.22 ) }
    dend_12 { pt3dadd( -138.058, 6.19682, -2.36754, 0.22 ) }
    dend_12 { pt3dadd( -146.144, 7.99805, 0.261559, 0.22 ) }
    dend_12 { pt3dadd( -153.904, 10.8803, 2.88215, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -9.00238, -74.6537, 3.39029, 0.37 ) }
    dend_6 { pt3dadd( -12.286, -74.6277, 2.68157, 0.37 ) }
    dend_6 { pt3dadd( -12.4943, -74.6282, 2.65013, 0.37 ) }
    dend_6 { pt3dadd( -13.7993, -74.6501, 2.50723, 0.37 ) }
    dend_6 { pt3dadd( -14.6586, -74.6861, 2.49621, 0.22 ) }
    dend_6 { pt3dadd( -15.6537, -74.7278, 2.48343, 0.22 ) }
    dend_6 { pt3dadd( -17.1199, -74.7892, 2.46462, 0.22 ) }
    dend_6 { pt3dadd( -17.5097, -74.8124, 2.52957, 0.44 ) }
    dend_6 { pt3dadd( -18.4589, -74.8892, 2.68517, 0.44 ) }
    dend_6 { pt3dadd( -19.8838, -75.0432, 2.90499, 0.22 ) }
    dend_6 { pt3dadd( -29.554, -73.8977, 0.955922, 0.22 ) }
    dend_6 { pt3dadd( -38.937, -73.9424, -2.30304, 0.22 ) }
    dend_6 { pt3dadd( -48.5542, -72.3425, -4.17891, 0.22 ) }
    dend_6 { pt3dadd( -58.2212, -70.6072, -5.62361, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 65/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -9.00238, -74.6537, 3.39029, 1.33 ) }
    dend_5 { pt3dadd( -8.62833, -75.2462, 3.21476, 1.33 ) }
    dend_5 { pt3dadd( -8.28148, -75.8917, 3.01356, 0.88 ) }
    dend_5 { pt3dadd( -8.26403, -75.9346, 3.00386, 0.88 ) }
    dend_5 { pt3dadd( -7.89884, -77.0441, 2.80185, 0.66 ) }
    dend_5 { pt3dadd( -7.51334, -78.4521, 2.58522, 0.66 ) }
    dend_5 { pt3dadd( -7.14632, -80.0016, 2.38058, 0.66 ) }
    dend_5 { pt3dadd( -6.87264, -81.3734, 2.22761, 0.66 ) }
    dend_5 { pt3dadd( -6.55953, -83.2112, 2.0516, 0.96 ) }
    dend_5 { pt3dadd( -6.442, -84.1213, 1.97903, 1.69 ) }
    dend_5 { pt3dadd( -6.3785, -84.9252, 1.93156, 1.25 ) }
    dend_5 { pt3dadd( -6.34204, -85.7466, 1.8946, 0.96 ) }
    dend_5 { pt3dadd( -6.33947, -85.8014, 1.89202, 0.96 ) }
    dend_5 { pt3dadd( -6.22624, -86.8864, 1.84627, 0.59 ) }
    dend_5 { pt3dadd( -5.93926, -88.7678, 1.73895, 0.59 ) }
    dend_5 { pt3dadd( -5.58303, -90.5828, 1.6297, 0.96 ) }
    dend_5 { pt3dadd( -5.16666, -92.4297, 1.51711, 1.11 ) }
    dend_5 { pt3dadd( -4.90156, -93.5812, 1.45309, 0.74 ) }
    dend_5 { pt3dadd( -4.64852, -94.6582, 1.40386, 0.74 ) }
    dend_5 { pt3dadd( -4.51331, -95.2989, 1.38025, 0.52 ) }
    dend_5 { pt3dadd( -4.35094, -96.1389, 1.35807, 0.52 ) }
    dend_5 { pt3dadd( -4.33734, -96.2558, 1.35626, 0.52 ) }
    dend_5 { pt3dadd( -4.37504, -97.398, 1.31563, 0.52 ) }
    dend_5 { pt3dadd( -4.38559, -97.4694, 1.31077, 0.52 ) }
    dend_5 { pt3dadd( -4.62244, -98.7523, 1.23126, 0.44 ) }
    dend_5 { pt3dadd( -4.63105, -98.8144, 1.22997, 0.44 ) }
    dend_5 { pt3dadd( -4.66274, -99.4068, 1.24629, 0.44 ) }
    dend_5 { pt3dadd( -4.63681, -101.132, 1.32334, 0.44 ) }
    dend_5 { pt3dadd( -4.63194, -101.186, 1.32808, 0.44 ) }
    dend_5 { pt3dadd( -4.51193, -102.101, 1.43252, 0.88 ) }
    dend_5 { pt3dadd( -4.2601, -103.701, 1.66737, 0.88 ) }
    dend_5 { pt3dadd( -4.03627, -105.45, 1.98279, 0.88 ) }
    dend_5 { pt3dadd( -4.03177, -105.504, 1.9944, 0.88 ) }
    dend_5 { pt3dadd( -4.01484, -106.453, 2.27313, 1.25 ) }
    dend_5 { pt3dadd( -4.04133, -107.114, 2.48395, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_5 { pt3dadd( -4.12842, -107.898, 2.75389, 0.96 ) }
    dend_5 { pt3dadd( -4.31412, -108.881, 3.13545, 0.52 ) }
    dend_5 { pt3dadd( -4.4847, -109.532, 3.34778, 0.52 ) }
    dend_5 { pt3dadd( -4.77736, -110.531, 3.59858, 1.18 ) }
    dend_5 { pt3dadd( -5.06073, -111.401, 3.74466, 1.18 ) }
    dend_5 { pt3dadd( -5.08009, -111.461, 3.75144, 1.18 ) }
    dend_5 { pt3dadd( -5.36987, -112.384, 3.77372, 0.96 ) }
    dend_5 { pt3dadd( -5.72002, -113.502, 3.69786, 0.96 ) }
    dend_5 { pt3dadd( -5.91144, -114.126, 3.6044, 1.25 ) }
    dend_5 { pt3dadd( -6.09755, -114.84, 3.44054, 1.03 ) }
    dend_5 { pt3dadd( -6.10896, -114.9, 3.4252, 1.03 ) }
    dend_5 { pt3dadd( -6.20223, -115.686, 3.21446, 0.88 ) }
    dend_5 { pt3dadd( -6.23019, -116.597, 3.00535, 0.88 ) }
    dend_5 { pt3dadd( -6.19647, -117.456, 2.85219, 0.59 ) }
    dend_5 { pt3dadd( -6.1272, -118.54, 2.68509, 0.52 ) }
    dend_5 { pt3dadd( -6.09462, -118.948, 2.63338, 0.52 ) }
    dend_5 { pt3dadd( -6.08575, -119.078, 2.62301, 0.52 ) }
    dend_5 { pt3dadd( -6.01126, -120.218, 2.59614, 0.52 ) }
    dend_5 { pt3dadd( -6.00985, -120.296, 2.60068, 0.52 ) }
    dend_5 { pt3dadd( -6.06136, -121.282, 2.73481, 0.74 ) }
    dend_5 { pt3dadd( -6.06819, -121.336, 2.74373, 0.74 ) }
    dend_5 { pt3dadd( -6.1746, -122.129, 2.86099, 0.81 ) }
    dend_5 { pt3dadd( -6.23221, -122.589, 2.91714, 0.81 ) }
    dend_5 { pt3dadd( -6.31887, -123.286, 2.97486, 0.29 ) }
    dend_5 { pt3dadd( -6.38156, -123.854, 3.01593, 0.29 ) }
    dend_5 { pt3dadd( -6.38632, -123.916, 3.01942, 0.29 ) }
    dend_5 { pt3dadd( -6.41525, -124.724, 3.04193, 0.29 ) }
    dend_5 { pt3dadd( -6.41438, -124.787, 3.04156, 0.29 ) }
    dend_5 { pt3dadd( -6.35293, -125.605, 2.99769, 0.29 ) }
    dend_5 { pt3dadd( -6.27869, -126.306, 2.89985, 0.29 ) }
    dend_5 { pt3dadd( -6.23684, -126.636, 2.8407, 0.88 ) }
    dend_5 { pt3dadd( -6.16548, -127.134, 2.74251, 0.88 ) }
    dend_5 { pt3dadd( -6.14228, -127.291, 2.71045, 0.88 ) }
    dend_5 { pt3dadd( -6.06172, -127.874, 2.63634, 0.59 ) }
    dend_5 { pt3dadd( -5.92678, -128.803, 2.55656, 0.59 ) }
    dend_5 { pt3dadd( -5.92075, -128.865, 2.55458, 0.59 ) }
    dend_5 { pt3dadd( -5.8312, -130.32, 2.58481, 0.59 ) }
    dend_5 { pt3dadd( -5.80571, -130.954, 2.61877, 0.29 ) }
    dend_5 { pt3dadd( -5.78259, -132.331, 2.72403, 0.29 ) }
    dend_5 { pt3dadd( -5.78508, -132.503, 2.74135, 0.29 ) }
    dend_5 { pt3dadd( -5.83655, -133.819, 2.92543, 0.29 ) }
    dend_5 { pt3dadd( -5.93986, -135.099, 3.10811, 0.37 ) }
    dend_5 { pt3dadd( -6.01499, -135.661, 3.19076, 1.18 ) }
    dend_5 { pt3dadd( -6.17538, -136.628, 3.32111, 1.33 ) }
    dend_5 { pt3dadd( -6.32786, -137.41, 3.40133, 0.74 ) }
    dend_5 { pt3dadd( -6.55307, -138.459, 3.50851, 0.52 ) }
    dend_5 { pt3dadd( -6.73916, -139.256, 3.58568, 0.52 ) }
    dend_5 { pt3dadd( -6.89105, -139.852, 3.63341, 0.52 ) }
    dend_5 { pt3dadd( -6.90677, -139.913, 3.63763, 0.52 ) }
    dend_5 { pt3dadd( -7.11427, -140.745, 3.67774, 0.52 ) }
    dend_5 { pt3dadd( -7.15325, -140.913, 3.68095, 0.52 ) }
    dend_5 { pt3dadd( -7.2914, -141.528, 3.68418, 0.52 ) }
    dend_5 { pt3dadd( -7.38395, -141.986, 3.7002, 0.88 ) }
    dend_5 { pt3dadd( -7.50589, -142.618, 3.72988, 1.03 ) }
    dend_5 { pt3dadd( -7.62819, -143.305, 3.76633, 0.59 ) }
    dend_5 { pt3dadd( -7.63686, -143.36, 3.76952, 0.59 ) }
    dend_5 { pt3dadd( -7.77412, -144.489, 3.79257, 0.29 ) }
    dend_5 { pt3dadd( -7.83705, -145.288, 3.78108, 0.29 ) }
    dend_5 { pt3dadd( -7.83813, -145.36, 3.77667, 0.29 ) }
    dend_5 { pt3dadd( -7.79784, -146.171, 3.68941, 0.29 ) }
    dend_5 { pt3dadd( -7.79067, -146.341, 3.65618, 0.29 ) }
    dend_5 { pt3dadd( -7.78342, -147.068, 3.46259, 0.29 ) }
    dend_5 { pt3dadd( -7.78558, -147.12, 3.44469, 0.29 ) }
    dend_5 { pt3dadd( -7.87229, -147.78, 3.20973, 0.29 ) }
    dend_5 { pt3dadd( -7.88312, -147.831, 3.19355, 0.29 ) }
    dend_5 { pt3dadd( -8.14334, -148.838, 2.94176, 0.29 ) }
    dend_5 { pt3dadd( -8.20911, -149.071, 2.90458, 0.29 ) }
    dend_5 { pt3dadd( -8.42249, -149.792, 2.83254, 0.29 ) }
    dend_5 { pt3dadd( -8.5367, -150.206, 2.80215, 1.03 ) }
    dend_5 { pt3dadd( -8.68023, -150.787, 2.7746, 1.47 ) }
    dend_5 { pt3dadd( -8.82339, -151.527, 2.75539, 0.37 ) }
    dend_5 { pt3dadd( -8.97885, -152.66, 2.77854, 0.37 ) }
    dend_5 { pt3dadd( -8.98653, -152.714, 2.78052, 0.37 ) }
    dend_5 { pt3dadd( -9.06419, -153.241, 2.80877, 0.81 ) }
    dend_5 { pt3dadd( -9.13776, -153.694, 2.84204, 0.88 ) }
    dend_5 { pt3dadd( -9.21306, -154.089, 2.87505, 0.88 ) }
    dend_5 { pt3dadd( -9.39775, -154.974, 2.95484, 0.22 ) }
    dend_5 { pt3dadd( -9.58763, -155.875, 3.04149, 0.22 ) }
    dend_5 { pt3dadd( -9.59908, -155.937, 3.04649, 0.22 ) }
    dend_5 { pt3dadd( -9.65001, -156.217, 3.0676, 0.37 ) }
    dend_5 { pt3dadd( -9.73768, -156.808, 3.09954, 0.37 ) }
    dend_5 { pt3dadd( -9.84321, -157.752, 3.12716, 0.29 ) }
    dend_5 { pt3dadd( -9.84595, -157.815, 3.1264, 0.29 ) }
    dend_5 { pt3dadd( -9.83088, -158.794, 3.08827, 0.29 ) }
    dend_5 { pt3dadd( -9.82483, -158.904, 3.08382, 0.29 ) }
    dend_5 { pt3dadd( -9.71642, -160.043, 3.0306, 0.22 ) }
    dend_5 { pt3dadd( -9.66761, -160.445, 3.01016, 0.66 ) }
    dend_5 { pt3dadd( -9.58897, -161.11, 2.98147, 0.81 ) }
    dend_5 { pt3dadd( -9.53258, -161.638, 2.9649, 0.96 ) }
    dend_5 { pt3dadd( -9.46025, -162.249, 2.97796, 0.37 ) }
    dend_5 { pt3dadd( -9.45234, -162.304, 2.98055, 0.37 ) }
    dend_5 { pt3dadd( -9.28973, -163.327, 3.04117, 0.15 ) }
    dend_5 { pt3dadd( -9.23196, -163.744, 3.06861, 0.74 ) }
    dend_5 { pt3dadd( -9.18307, -164.313, 3.11344, 0.74 ) }
    dend_5 { pt3dadd( -9.15979, -165.219, 3.1915, 0.22 ) }
    dend_5 { pt3dadd( -9.18334, -165.928, 3.25375, 0.22 ) }
    dend_5 { pt3dadd( -9.24076, -166.531, 3.31438, 0.22 ) }
    dend_5 { pt3dadd( -9.31624, -166.957, 3.36478, 0.59 ) }
    dend_5 { pt3dadd( -9.46064, -167.53, 3.43061, 0.59 ) }
    dend_5 { pt3dadd( -9.61178, -167.953, 3.47823, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_5 { pt3dadd( -9.67094, -168.069, 3.49229, 0.22 ) }
    dend_5 { pt3dadd( -9.96609, -168.56, 3.58787, 0.22 ) }
    dend_5 { pt3dadd( -10.0918, -168.765, 3.63962, 0.44 ) }
    dend_5 { pt3dadd( -10.2578, -169.051, 3.71346, 0.44 ) }
    dend_5 { pt3dadd( -10.2802, -169.109, 3.72466, 0.44 ) }
    dend_5 { pt3dadd( -10.4654, -169.788, 3.82806, 0.22 ) }
    dend_5 { pt3dadd( -10.5176, -170.01, 3.82797, 0.22 ) }
    dend_5 { pt3dadd( -10.6091, -170.486, 3.76222, 0.22 ) }
    dend_5 { pt3dadd( -10.6296, -170.599, 3.73893, 0.22 ) }
    dend_5 { pt3dadd( -10.8785, -171.986, 3.39025, 0.22 ) }
    dend_5 { pt3dadd( -10.8919, -172.059, 3.36924, 0.22 ) }
    dend_5 { pt3dadd( -11.0833, -173.231, 2.9705, 0.22 ) }
    dend_5 { pt3dadd( -11.2928, -174.459, 2.51481, 0.22 ) }
    dend_5 { pt3dadd( -11.3326, -174.68, 2.42256, 0.52 ) }
    dend_5 { pt3dadd( -11.3433, -174.729, 2.40024, 0.52 ) }
    dend_5 { pt3dadd( -11.439, -175.012, 2.24249, 0.52 ) }
    dend_5 { pt3dadd( -13.0767, -182.652, 1.49847, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 17/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 52.8979, -72.9047, 7.71275, 0.44 ) }
    dend_43 { pt3dadd( 52.7854, -73.2781, 7.90729, 0.44 ) }
    dend_43 { pt3dadd( 52.8205, -73.3752, 7.93166, 0.44 ) }
    dend_43 { pt3dadd( 52.9972, -73.8067, 8.03272, 0.44 ) }
    dend_43 { pt3dadd( 53.1015, -74.0528, 8.08804, 0.44 ) }
    dend_43 { pt3dadd( 53.3416, -74.6092, 8.20524, 0.44 ) }
    dend_43 { pt3dadd( 53.3626, -74.657, 8.21482, 0.44 ) }
    dend_43 { pt3dadd( 54.4691, -77.0811, 8.62367, 0.44 ) }
    dend_43 { pt3dadd( 54.4925, -77.1283, 8.63076, 0.44 ) }
    dend_43 { pt3dadd( 54.6582, -77.4349, 8.67143, 1.33 ) }
    dend_43 { pt3dadd( 55.0753, -78.1142, 8.73812, 1.4 ) }
    dend_43 { pt3dadd( 55.2713, -78.376, 8.76696, 0.37 ) }
    dend_43 { pt3dadd( 55.3058, -78.4165, 8.77194, 0.37 ) }
    dend_43 { pt3dadd( 55.8276, -78.9086, 8.81947, 0.29 ) }
    dend_43 { pt3dadd( 55.8677, -78.9441, 8.82248, 0.29 ) }
    dend_43 { pt3dadd( 56.9905, -79.8469, 8.86255, 0.29 ) }
    dend_43 { pt3dadd( 58.0513, -80.6443, 8.85838, 0.29 ) }
    dend_43 { pt3dadd( 58.0947, -80.6761, 8.85712, 0.29 ) }
    dend_43 { pt3dadd( 59.9198, -81.9876, 8.76674, 0.29 ) }
    dend_43 { pt3dadd( 60.0224, -82.0572, 8.76084, 0.29 ) }
    dend_43 { pt3dadd( 61.2321, -82.8449, 8.67718, 0.52 ) }
    dend_43 { pt3dadd( 62.4837, -83.6155, 8.56122, 0.29 ) }
    dend_43 { pt3dadd( 62.9444, -83.8843, 8.50088, 0.59 ) }
    dend_43 { pt3dadd( 63.3203, -84.0835, 8.45006, 0.59 ) }
    dend_43 { pt3dadd( 64.4227, -84.5819, 8.29826, 0.44 ) }
    dend_43 { pt3dadd( 64.5719, -84.6467, 8.27795, 0.44 ) }
    dend_43 { pt3dadd( 65.1734, -84.9789, 8.16706, 0.29 ) }
    dend_43 { pt3dadd( 65.2632, -85.0354, 8.14724, 0.29 ) }
    dend_43 { pt3dadd( 65.9171, -85.4706, 7.99185, 0.29 ) }
    dend_43 { pt3dadd( 66.0514, -85.5677, 7.95684, 0.29 ) }
    dend_43 { pt3dadd( 66.6352, -86.0402, 7.78372, 0.29 ) }
    dend_43 { pt3dadd( 69.2864, -88.3066, 6.99943, 0.29 ) }
    dend_43 { pt3dadd( 69.3307, -88.347, 6.98621, 0.29 ) }
    dend_43 { pt3dadd( 75.5756, -92.7535, 6.10288, 0.29 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 52.8979, -72.9047, 7.71275, 0.52 ) }
    dend_40 { pt3dadd( 52.7496, -72.7127, 7.71602, 0.52 ) }
    dend_40 { pt3dadd( 52.6966, -72.6504, 7.72696, 0.52 ) }
    dend_40 { pt3dadd( 51.9664, -71.8295, 7.9397, 0.37 ) }
    dend_40 { pt3dadd( 50.8268, -70.6279, 8.30988, 0.37 ) }
    dend_40 { pt3dadd( 49.8798, -69.7023, 8.58022, 0.59 ) }
    dend_40 { pt3dadd( 48.7279, -68.7529, 8.74129, 0.59 ) }
    dend_40 { pt3dadd( 47.4047, -67.7955, 8.79947, 0.22 ) }
    dend_40 { pt3dadd( 47.3447, -67.7572, 8.79811, 0.22 ) }
    dend_40 { pt3dadd( 46.0136, -67.0686, 8.71587, 0.22 ) }
    dend_40 { pt3dadd( 45.1074, -66.6972, 8.61026, 0.22 ) }
    dend_40 { pt3dadd( 42.5928, -65.8258, 8.10388, 0.22 ) }
    dend_40 { pt3dadd( 42.2726, -65.73, 8.00588, 0.66 ) }
    dend_40 { pt3dadd( 42.1987, -65.7068, 7.97477, 0.66 ) }
    dend_40 { pt3dadd( 41.1377, -65.4004, 7.50158, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 66/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 70.0063, -93.5673, 0.521037, 0.29 ) }
    dend_38 { pt3dadd( 75.5414, -103.758, -0.954405, 0.29 ) }
    dend_38 { pt3dadd( 81.3732, -113.894, -1.04911, 0.29 ) }
    dend_38 { pt3dadd( 87.6132, -123.797, -1.03733, 0.29 ) }
    dend_38 { pt3dadd( 93.5265, -133.83, 0.0922244, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 71/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 70.0063, -93.5673, 0.521037, 0.74 ) }
    dend_37 { pt3dadd( 73.2734, -99.1658, -0.573966, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -50.9157, -62.1544, 7.45462, 0.37 ) }
    dend_15 { pt3dadd( -59.1742, -65.6711, 11.6021, 0.37 ) }
    dend_15 { pt3dadd( -66.7822, -70.6445, 15.3991, 0.37 ) }
    dend_15 { pt3dadd( -74.3979, -75.0471, 19.8624, 0.37 ) }
    dend_15 { pt3dadd( -81.9525, -79.808, 24.0323, 0.37 ) }
    dend_15 { pt3dadd( -90.3013, -84.0471, 27.1663, 0.37 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 79/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -50.9157, -62.1544, 7.45462, 0.29 ) }
    dend_14 { pt3dadd( -57.6842, -68.0822, 5.23441, 0.37 ) }
    dend_14 { pt3dadd( -64.1904, -74.6222, 4.87946, 0.37 ) }
    dend_14 { pt3dadd( -72.1306, -79.4288, 4.75395, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 83/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -58.2212, -70.6072, -5.62361, 0.37 ) }
    dend_10 { pt3dadd( -67.0782, -70.1876, -10.1563, 0.37 ) }
    dend_10 { pt3dadd( -75.4913, -70.6536, -15.4657, 0.37 ) }
    dend_10 { pt3dadd( -83.9206, -73.0909, -20.1504, 0.37 ) }
    dend_10 { pt3dadd( -93.2456, -75.325, -22.7895, 0.37 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -58.2212, -70.6072, -5.62361, 0.29 ) }
    dend_7 { pt3dadd( -67.8677, -69.9432, -5.23465, 0.37 ) }
    dend_7 { pt3dadd( -77.3075, -70.0926, -3.10685, 0.37 ) }
    dend_7 { pt3dadd( -86.5355, -69.3949, -0.280405, 0.37 ) }
    dend_7 { pt3dadd( -94.9258, -67.6195, 4.18223, 0.37 ) }
    dend_7 { pt3dadd( -101.818, -64.8397, 10.3402, 0.37 ) }
    dend_7 { pt3dadd( -107.103, -60.4832, 17.0918, 0.37 ) }
    dend_7 { pt3dadd( -112.159, -57.5491, 24.7659, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 96/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 41.1377, -65.4004, 7.50158, 0.37 ) }
    dend_42 { pt3dadd( 41.1651, -65.5015, 7.49688, 0.37 ) }
    dend_42 { pt3dadd( 41.4634, -66.4856, 7.37095, 0.37 ) }
    dend_42 { pt3dadd( 41.4907, -66.5704, 7.35722, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_42 { pt3dadd( 41.8719, -67.7554, 7.16541, 0.37 ) }
    dend_42 { pt3dadd( 41.8845, -67.7946, 7.15907, 0.37 ) }
    dend_42 { pt3dadd( 42.3956, -69.3835, 6.90189, 0.37 ) }
    dend_42 { pt3dadd( 42.4118, -69.4286, 6.89413, 0.37 ) }
    dend_42 { pt3dadd( 42.6689, -70.0046, 6.76602, 0.37 ) }
    dend_42 { pt3dadd( 45.4105, -76.3859, 6.70547, 0.37 ) }
    dend_42 { pt3dadd( 47.1329, -83.0828, 7.20879, 0.37 ) }
    dend_42 { pt3dadd( 48.907, -89.7338, 8.07289, 0.37 ) }
    dend_42 { pt3dadd( 50.8093, -96.0365, 10.334, 0.37 ) }
    dend_42 { pt3dadd( 52.8919, -102.306, 12.5323, 0.37 ) }
    dend_42 { pt3dadd( 53.9465, -108.699, 15.0663, 0.37 ) }
    dend_42 { pt3dadd( 54.2152, -115.492, 16.4291, 0.37 ) }
    dend_42 { pt3dadd( 55.6582, -122.147, 17.7645, 0.37 ) }
    dend_42 { pt3dadd( 57.1866, -128.736, 19.337, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 14/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 41.1377, -65.4004, 7.50158, 0.37 ) }
    dend_41 { pt3dadd( 41.0385, -65.3761, 7.46321, 0.37 ) }
    dend_41 { pt3dadd( 40.9648, -65.3609, 7.44651, 0.37 ) }
    dend_41 { pt3dadd( 39.7507, -65.1274, 7.23706, 0.22 ) }
    dend_41 { pt3dadd( 39.357, -65.0259, 7.18647, 0.22 ) }
    dend_41 { pt3dadd( 38.3466, -64.7243, 7.08143, 0.22 ) }
    dend_41 { pt3dadd( 38.2639, -64.695, 7.07525, 0.22 ) }
    dend_41 { pt3dadd( 37.0656, -64.223, 7.02633, 0.22 ) }
    dend_41 { pt3dadd( 36.9136, -64.1591, 7.02505, 0.22 ) }
    dend_41 { pt3dadd( 35.9184, -63.7181, 7.04628, 0.22 ) }
    dend_41 { pt3dadd( 35.6519, -63.5974, 7.0461, 0.22 ) }
    dend_41 { pt3dadd( 34.547, -63.0746, 7.02727, 0.22 ) }
    dend_41 { pt3dadd( 34.4207, -63.0129, 7.02456, 0.22 ) }
    dend_41 { pt3dadd( 32.5335, -62.0624, 6.96126, 0.22 ) }
    dend_41 { pt3dadd( 32.3386, -61.9653, 6.95273, 0.22 ) }
    dend_41 { pt3dadd( 30.4964, -61.0549, 6.85751, 0.22 ) }
    dend_41 { pt3dadd( 30.4207, -61.0108, 6.85402, 0.22 ) }
    dend_41 { pt3dadd( 29.1674, -60.1698, 6.81118, 0.22 ) }
    dend_41 { pt3dadd( 28.9238, -59.957, 6.80838, 0.22 ) }
    dend_41 { pt3dadd( 28.2982, -59.2302, 6.82088, 0.22 ) }
    dend_41 { pt3dadd( 27.9952, -58.8115, 6.83513, 0.22 ) }
    dend_41 { pt3dadd( 27.1204, -57.3549, 6.89714, 0.22 ) }
    dend_41 { pt3dadd( 27.0437, -57.219, 6.90327, 0.22 ) }
    dend_41 { pt3dadd( 26.1203, -55.4271, 6.99126, 0.22 ) }
    dend_41 { pt3dadd( 26.0783, -55.3367, 6.99394, 0.22 ) }
    dend_41 { pt3dadd( 25.553, -54.0949, 7.0061, 0.22 ) }
    dend_41 { pt3dadd( 25.3791, -53.6793, 6.99498, 0.22 ) }
    dend_41 { pt3dadd( 24.9221, -52.6428, 6.91649, 0.22 ) }
    dend_41 { pt3dadd( 24.8561, -52.4955, 6.90186, 0.22 ) }
    dend_41 { pt3dadd( 24.3435, -51.4482, 6.77847, 0.22 ) }
    dend_41 { pt3dadd( 24.3072, -51.3821, 6.77074, 0.22 ) }
    dend_41 { pt3dadd( 23.998, -50.8664, 6.71111, 0.29 ) }
    dend_41 { pt3dadd( 23.7067, -50.4544, 6.64819, 0.29 ) }
    dend_41 { pt3dadd( 22.9814, -49.5934, 6.49514, 0.29 ) }
    dend_41 { pt3dadd( 22.4926, -49.0781, 6.40558, 0.29 ) }
    dend_41 { pt3dadd( 22.0714, -48.6833, 6.3432, 0.29 ) }
    dend_41 { pt3dadd( 21.9916, -48.6114, 6.33149, 0.29 ) }
    dend_41 { pt3dadd( 21.1007, -47.839, 6.20322, 0.29 ) }
    dend_41 { pt3dadd( 21.0347, -47.7827, 6.19378, 0.29 ) }
    dend_41 { pt3dadd( 20.2164, -47.0788, 6.08222, 0.29 ) }
    dend_41 { pt3dadd( 19.9606, -46.8573, 6.05249, 0.29 ) }
    dend_41 { pt3dadd( 19.3046, -46.307, 6.0019, 0.29 ) }
    dend_41 { pt3dadd( 18.903, -45.9763, 5.99153, 0.44 ) }
    dend_41 { pt3dadd( 18.555, -45.6612, 6.00667, 0.52 ) }
    dend_41 { pt3dadd( 18.1554, -45.2653, 6.0218, 0.52 ) }
    dend_41 { pt3dadd( 18.1043, -45.2088, 6.02334, 0.52 ) }
    dend_41 { pt3dadd( 17.8336, -44.8698, 6.02889, 0.29 ) }
    dend_41 { pt3dadd( 17.5676, -44.4972, 6.02689, 0.29 ) }
    dend_41 { pt3dadd( 16.868, -43.4774, 6.0078, 0.29 ) }
    dend_41 { pt3dadd( 16.8217, -43.4171, 6.00662, 0.29 ) }
    dend_41 { pt3dadd( 16.3836, -42.8906, 5.99571, 0.29 ) }
    dend_41 { pt3dadd( 16.1986, -42.6681, 5.98549, 0.29 ) }
    dend_41 { pt3dadd( 15.9709, -42.4032, 5.96844, 0.29 ) }
    dend_41 { pt3dadd( 15.8221, -42.2275, 5.95588, 0.29 ) }
    dend_41 { pt3dadd( 15.0591, -41.3509, 5.89073, 0.29 ) }
    dend_41 { pt3dadd( 14.9012, -41.1714, 5.87924, 0.29 ) }
    dend_41 { pt3dadd( 14.3073, -40.4708, 5.84023, 0.29 ) }
    dend_41 { pt3dadd( 14.0616, -40.1693, 5.82658, 0.29 ) }
    dend_41 { pt3dadd( 13.1413, -38.9836, 5.78606, 0.29 ) }
    dend_41 { pt3dadd( 13.0453, -38.8522, 5.78247, 0.29 ) }
    dend_41 { pt3dadd( 12.5013, -38.0595, 5.76501, 0.52 ) }
    dend_41 { pt3dadd( 12.1611, -37.5624, 5.75267, 0.52 ) }
    dend_41 { pt3dadd( 11.918, -37.1812, 5.7426, 0.52 ) }
    dend_41 { pt3dadd( 11.7486, -36.8714, 5.72913, 0.37 ) }
    dend_41 { pt3dadd( 11.0372, -35.3685, 5.53687, 0.37 ) }
    dend_41 { pt3dadd( 11.009, -35.2994, 5.5243, 0.37 ) }
    dend_41 { pt3dadd( 10.8158, -34.6802, 5.38278, 0.52 ) }
    dend_41 { pt3dadd( 10.5566, -33.7103, 5.13006, 0.81 ) }
    dend_41 { pt3dadd( 10.3384, -32.8636, 4.89637, 0.81 ) }
    dend_41 { pt3dadd( 10.0117, -31.7459, 4.59731, 0.37 ) }
    dend_41 { pt3dadd( 9.96033, -31.5967, 4.56133, 0.37 ) }
    dend_41 { pt3dadd( 9.66623, -30.8456, 4.39676, 0.37 ) }
    dend_41 { pt3dadd( 9.5132, -30.5338, 4.33382, 0.37 ) }
    dend_41 { pt3dadd( 9.02366, -29.6595, 4.16519, 0.29 ) }
    dend_41 { pt3dadd( 8.28753, -28.3967, 3.95301, 0.29 ) }
    dend_41 { pt3dadd( 7.13551, -26.4774, 3.69336, 0.29 ) }
    dend_41 { pt3dadd( 7.06912, -26.3667, 3.6782, 0.29 ) }
    dend_41 { pt3dadd( 6.07226, -24.7019, 3.44544, 0.29 ) }
    dend_41 { pt3dadd( 6.02013, -24.6076, 3.43509, 0.29 ) }
    dend_41 { pt3dadd( 5.48761, -23.5333, 3.34614, 0.29 ) }
    dend_41 { pt3dadd( 5.35207, -23.2259, 3.33658, 0.29 ) }
    dend_41 { pt3dadd( 4.96173, -22.2484, 3.36459, 0.29 ) }
    dend_41 { pt3dadd( 4.86332, -21.9519, 3.38025, 0.29 ) }
    dend_41 { pt3dadd( 4.53986, -20.7126, 3.47531, 0.29 ) }
    dend_41 { pt3dadd( 4.51748, -20.6295, 3.48016, 0.29 ) }
    dend_41 { pt3dadd( 3.97354, -18.6255, 3.57176, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_41 { pt3dadd( 3.93311, -18.4691, 3.57614, 0.29 ) }
    dend_41 { pt3dadd( 3.6056, -17.1739, 3.59016, 0.29 ) }
    dend_41 { pt3dadd( 3.56855, -17.0166, 3.58809, 0.29 ) }
    dend_41 { pt3dadd( 2.96496, -14.1915, 3.46298, 0.29 ) }
    dend_41 { pt3dadd( 2.93764, -14.0326, 3.45526, 0.29 ) }
    dend_41 { pt3dadd( 2.83762, -13.2546, 3.41395, 0.29 ) }
    dend_41 { pt3dadd( 2.81477, -13.0951, 3.40571, 0.29 ) }
    dend_41 { pt3dadd( 2.60822, -11.9409, 3.32029, 0.29 ) }
    dend_41 { pt3dadd( 2.56202, -11.7095, 3.29902, 0.29 ) }
    dend_41 { pt3dadd( 2.15329, -9.86846, 3.09543, 0.29 ) }
    dend_41 { pt3dadd( 2.07397, -9.55904, 3.0596, 0.29 ) }
    dend_41 { pt3dadd( 1.6415, -8.03257, 2.88403, 0.29 ) }
    dend_41 { pt3dadd( 1.24543, -6.77382, 2.82883, 0.29 ) }
    dend_41 { pt3dadd( 1.18697, -6.6052, 2.82299, 0.29 ) }
    dend_41 { pt3dadd( 0.724159, -5.36477, 2.79582, 0.29 ) }
    dend_41 { pt3dadd( 0.661126, -5.21553, 2.79673, 0.29 ) }
    dend_41 { pt3dadd( -0.0876012, -3.34498, 2.86689, 0.29 ) }
    dend_41 { pt3dadd( -0.624562, -1.7281, 3.05514, 0.29 ) }
    dend_41 { pt3dadd( -5.75005, 7.67455, 1.49489, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 19/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -112.159, -57.5491, 24.7659, 0.37 ) }
    dend_9 { pt3dadd( -121.153, -54.5377, 26.2319, 0.37 ) }
    dend_9 { pt3dadd( -130.266, -52.3551, 28.3625, 0.37 ) }
    dend_9 { pt3dadd( -139.072, -49.566, 30.9857, 0.37 ) }
    dend_9 { pt3dadd( -148.07, -48.0632, 34.0288, 0.37 ) }
    dend_9 { pt3dadd( -156.693, -47.0179, 38.1644, 0.37 ) }
    dend_9 { pt3dadd( -164.609, -45.1154, 43.2797, 0.37 ) }
    dend_9 { pt3dadd( -173.031, -44.7708, 47.9211, 0.37 ) }
    dend_9 { pt3dadd( -181.75, -43.6866, 51.8376, 0.37 ) }
    dend_9 { pt3dadd( -190.387, -42.3727, 55.8629, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 29/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -112.159, -57.5491, 24.7659, 0.29 ) }
    dend_8 { pt3dadd( -117.314, -58.9711, 31.6954, 0.37 ) }
    dend_8 { pt3dadd( -122.016, -61.5048, 38.6341, 0.37 ) }
    dend_8 { pt3dadd( -128.154, -64.2059, 44.2623, 0.37 ) }
    dend_8 { pt3dadd( -134.484, -66.2353, 49.9623, 0.37 ) }
    dend_8 { pt3dadd( -140.536, -68.2769, 55.9528, 0.37 ) }
    dend_8 { pt3dadd( -145.628, -70.5743, 62.6954, 0.37 ) }
    dend_8 { pt3dadd( -150.845, -71.607, 69.6446, 0.37 ) }
    dend_8 { pt3dadd( -155.513, -72.7811, 76.9507, 0.37 ) }
    dend_8 { pt3dadd( -160.486, -73.3036, 84.1241, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_69 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, axon_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, axon_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
    ModelViewParmSubset_5 = new SectionList()
    dend_69 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_25 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_77 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_74 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_72 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_71 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_60 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_55 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_48 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_47 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_26 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_79 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_76 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_65 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_64 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_62 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_61 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_56 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_51 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_33 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_29 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_28 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_11 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_4 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_80 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_67 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_54 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_53 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_20 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_19 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_12 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_6 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_5 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_38 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_15 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_7 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_42 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_41 OneSecGrp_SectionRef_83.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_9 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_8 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_69 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_24 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_45 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_70 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_58 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_59 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_18 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_46 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_73 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_49 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_63 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_34 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_68 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_35 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_13 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_39 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_40 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_36 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_14 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_22 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_37 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_75 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_43 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_78 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_57 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_10 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_66 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_81 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_0, dend_0, dend_0, axon_0, axon_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_37, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_66 all.append()
    dend_66 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 3
    dend_21 nseg = 3
    dend_77 nseg = 3
    dend_74 nseg = 3
    dend_72 nseg = 11
    dend_71 nseg = 5
    dend_60 nseg = 3
    dend_55 nseg = 3
    dend_50 nseg = 3
    dend_48 nseg = 5
    dend_47 nseg = 5
    dend_31 nseg = 5
    dend_26 nseg = 3
    dend_23 nseg = 3
    dend_2 nseg = 7
    dend_79 nseg = 3
    dend_76 nseg = 3
    dend_65 nseg = 5
    dend_64 nseg = 5
    dend_62 nseg = 3
    dend_61 nseg = 3
    dend_56 nseg = 7
    dend_51 nseg = 5
    dend_44 nseg = 3
    dend_33 nseg = 3
    dend_32 nseg = 3
    dend_29 nseg = 3
    dend_28 nseg = 7
    dend_17 nseg = 13
    dend_11 nseg = 3
    dend_4 nseg = 3
    dend_80 nseg = 3
    dend_67 nseg = 3
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_20 nseg = 7
    dend_19 nseg = 7
    dend_12 nseg = 7
    dend_6 nseg = 3
    dend_5 nseg = 5
    dend_38 nseg = 3
    dend_15 nseg = 3
    dend_7 nseg = 3
    dend_42 nseg = 3
    dend_41 nseg = 5
    dend_9 nseg = 5
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_NBC_0de57faa51_0_0


