// Cell: bAC217_L6_NBC_1ef33fd873_0_0
/*
{
  "id" : "bAC217_L6_NBC_1ef33fd873_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.69096, -9.75392, 0.0, 3.54463", "1.52222, -8.84351, 0.0, 6.43815", "1.35347, -7.93311, 0.0, 8.80214", "1.18473, -7.0227, 0.0, 10.0004", "1.01599, -6.11229, 0.0, 10.9716", "0.847242, -5.20188, 0.0, 11.7871", "0.678498, -4.29147, 0.0, 12.5324", "0.509755, -3.38107, 0.0, 13.2727", "0.341011, -2.47066, 0.0, 13.4566", "0.172268, -1.56025, 0.0, 13.5676", "0.00352426, -0.649843, 0.0, 13.7469", "-0.165219, 0.260565, 0.0, 13.8983", "-0.333963, 1.17097, 0.0, 14.0", "-0.502706, 2.08138, 0.0, 13.9192", "-0.67145, 2.99179, 0.0, 13.4728", "-0.840193, 3.9022, 0.0, 12.9681", "-1.00894, 4.8126, 0.0, 12.2669", "-1.17768, 5.72301, 0.0, 11.0106", "-1.34642, 6.63342, 0.0, 9.31796", "-1.51517, 7.54383, 0.0, 7.37652", "-1.68391, 8.45424, 0.0, 4.20409" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.62975, 6.93315, -1.86, 3.64", "-2.10805, 8.45232, -1.86, 3.64", "-3.07777, 11.5324, -1.86, 3.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.38975, -6.9021, 8.54, 2.73", "-2.18068, -9.42425, 8.54, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.41975, 1.3269, -4.58, 0.68", "-4.72851, -0.358125, -5.53416, 0.68", "-4.95032, -1.5099, -6.17273, 0.45", "-5.4775, -3.77174, -7.35299, 0.45", "-6.08152, -6.2859, -8.69666, 0.45", "-6.28744, -7.09455, -9.15173, 1.14", "-7.0632, -10.1045, -11.0529, 0.23", "-7.32433, -11.187, -11.7952, 0.23", "-7.80166, -12.8125, -13.0116, 0.91", "-8.63519, -14.8501, -14.8335, 0.23", "-9.29285, -16.0107, -16.0626, 0.91", "-10.3279, -17.6308, -17.9425, 0.23", "-10.8669, -18.3564, -18.9468, 0.23", "-11.6184, -19.3383, -20.412, 0.68", "-12.9305, -21.0782, -23.1191, 0.23", "-13.4963, -21.8955, -24.364, 0.23", "-13.996, -22.763, -25.5549, 1.14", "-15.0758, -25.12, -28.4008, 0.23", "-15.3566, -26.0242, -29.4668, 0.23", "-15.5624, -27.0728, -30.6957, 1.14", "-15.8939, -28.8575, -32.8359, 0.23", "-16.1083, -29.7506, -34.1062, 0.23", "-16.4193, -30.7515, -35.7204, 0.91", "-16.9185, -32.2006, -38.1936, 0.91", "-17.4056, -33.3477, -40.4097, 0.23", "-17.8718, -34.2166, -42.1885, 0.23", "-18.6816, -35.504, -44.8612, 0.68", "-19.2452, -36.3316, -46.7124, 0.23", "-19.6515, -36.8739, -47.948, 1.14", "-20.7702, -38.3331, -50.9526, 0.23", "-21.0729, -38.8226, -51.8041, 0.23", "-21.3478, -39.462, -52.75, 0.23", "-24.8361, -46.0995, -60.4448, 0.23", "-28.0743, -53.2089, -67.7975, 0.23", "-30.3987, -58.5152, -76.884, 0.23", "-33.6584, -62.065, -86.5706, 0.23", "-37.9344, -67.6302, -94.7507, 0.23", "-44.8876, -71.773, -101.934, 0.23", "-51.1694, -76.0869, -109.609, 0.23", "-57.4126, -79.4228, -117.809, 0.23", "-63.7283, -84.2575, -125.123, 0.23", "-68.5792, -88.6005, -133.751, 0.23", "-73.7129, -94.474, -141.183, 0.23", "-79.1254, -101.268, -147.518, 0.23", "-84.8295, -107.284, -154.4, 0.23", "-90.0145, -114.71, -160.155, 0.23", "-94.7583, -123.313, -164.373, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.43025, -8.4621, 1.04, 1.14", "4.07055, -10.4408, -0.0136412, 1.14", "5.48054, -12.1418, -0.919345, 1.14", "6.84546, -13.7884, -1.7961, 1.14", "7.66451, -14.7764, -2.32221, 1.14", "8.42088, -15.6889, -2.80807, 1.59", "9.32232, -16.7763, -3.3871, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.95025, 5.2269, -1.12, 1.59", "3.6305, 6.49475, -1.12, 1.59", "4.34732, 7.83077, -1.12, 1.59", "5.51716, 10.0112, -1.12, 1.59", "6.19507, 11.2747, -1.12, 1.59", "7.18318, 13.1163, -1.12, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.68391, 8.45424, 0.0, 0.702523", "-4.41759, 23.203, 0.0, 0.702523", "-7.15127, 37.9518, 0.0, 0.702523" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-3.07777, 11.5324, -1.86, 0.68", "-4.44294, 11.8535, -1.74791, 0.68", "-5.39739, 12.0925, -1.68516, 0.68", "-6.70625, 12.4203, -1.59912, 1.14", "-7.45924, 12.6089, -1.54961, 0.23", "-9.21264, 13.048, -1.43434, 0.23", "-10.2099, 13.2978, -1.36878, 0.91", "-11.902, 13.6766, -1.20994, 1.82" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-3.07777, 11.5324, -1.86, 1.82", "-0.481016, 13.9951, -2.95953, 1.82", "2.02232, 16.3844, -4.00925, 1.14", "3.92197, 18.1803, -4.76977, 0.68", "5.19963, 19.3512, -5.23998, 1.14", "8.56289, 22.346, -6.48107, 0.45", "10.4652, 23.9919, -7.20155, 0.45", "11.6364, 24.917, -7.64203, 1.59", "12.8508, 25.824, -8.08204, 1.59", "14.6187, 27.1235, -8.67633, 0.68", "16.6887, 28.6218, -9.3711, 0.68", "18.3526, 29.7673, -9.88172, 1.36", "20.0064, 30.8575, -10.4001, 2.05", "21.5786, 31.8461, -10.9289, 0.91", "23.3326, 32.9634, -11.5684, 1.59" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-2.18068, -9.42425, 8.54, 0.68", "-5.91184, -10.3503, 7.97758, 0.68", "-10.0386, -11.3302, 7.37984, 0.68", "-12.5537, -11.9072, 6.96762, 0.23", "-14.3384, -12.3132, 6.66254, 0.91", "-16.6919, -12.8727, 6.258, 0.91", "-18.9658, -13.4233, 5.83674, 0.23", "-20.7206, -13.8448, 5.48088, 0.23", "-23.6149, -14.5923, 4.87971, 0.68", "-25.7213, -15.2013, 4.411, 0.68", "-27.8653, -15.8635, 3.87243, 0.23", "-30.1314, -16.6176, 3.25742, 0.68", "-31.7975, -17.2115, 2.79186, 0.68", "-34.7866, -18.3497, 1.97467, 0.23", "-37.1584, -19.309, 1.37214, 0.23", "-38.9032, -20.0393, 0.948687, 0.68", "-40.2071, -20.5888, 0.718955, 0.68", "-42.0717, -21.3853, 0.511789, 0.68", "-44.5111, -22.4109, 0.34951, 0.23", "-46.6081, -23.2401, 0.307087, 0.45", "-48.5265, -23.9622, 0.382289, 0.45", "-52.0957, -25.2955, 0.617314, 0.23", "-53.4182, -25.8066, 0.76031, 1.14", "-54.7365, -26.3393, 0.942389, 1.14", "-57.5343, -27.5128, 1.38923, 0.23", "-59.5958, -28.4492, 1.7283, 0.23", "-61.4539, -29.3766, 2.01014, 0.91", "-64.6856, -31.1092, 2.39521, 0.23", "-66.2508, -31.9795, 2.56544, 1.14", "-66.9399, -32.371, 2.62915, 1.14", "-69.1039, -33.6047, 2.76061, 0.23", "-71.0107, -34.6424, 2.78067, 1.14", "-73.1503, -35.7197, 2.72471, 0.23", "-75.0181, -36.5531, 2.59339, 1.14", "-76.1379, -37.0146, 2.5163, 0.23", "-78.4337, -37.9012, 2.35913, 0.23", "-79.9784, -38.4791, 2.26418, 1.14", "-81.1311, -38.8905, 2.21465, 1.14", "-84.0699, -39.9771, 2.13175, 0.23", "-85.2327, -40.4343, 2.1918, 1.14", "-86.7289, -41.0507, 2.35881, 1.14", "-88.4942, -41.7942, 2.6386, 0.23", "-90.263, -42.5712, 3.03954, 0.91", "-92.176, -43.4496, 3.56214, 0.23", "-95.4432, -45.0685, 4.51127, 0.23", "-96.1397, -45.4309, 4.71604, 1.14", "-98.0626, -46.4761, 5.20995, 1.14", "-100.508, -47.8755, 5.69482, 0.23", "-101.747, -48.6053, 5.85731, 0.23", "-104.912, -50.4638, 6.18797, 0.68", "-107.097, -51.728, 6.32015, 0.23", "-109.382, -53.0625, 6.45298, 1.14", "-112.059, -54.6603, 6.58464, 0.23", "-114.33, -56.0349, 6.70451, 0.91", "-117.209, -57.7876, 6.94827, 0.23", "-119.105, -58.9429, 7.16331, 0.23", "-119.775, -59.3562, 7.27243, 0.23", "-120.843, -60.0157, 7.51433, 0.23", "-122.887, -61.2761, 8.15538, 0.91", "-124.373, -62.2095, 8.6924, 0.91", "-126.31, -63.4024, 9.34871, 0.23", "-128.16, -64.5193, 9.93838, 1.14", "-129.35, -65.1908, 10.3317, 1.14", "-132.008, -66.6193, 11.2007, 0.23", "-133.417, -67.3599, 11.6313, 0.68", "-136.374, -68.9701, 12.511, 0.23", "-138.682, -70.3106, 13.2001, 0.91", "-141.474, -72.1296, 13.9643, 0.23", "-142.297, -72.7362, 14.1708, 0.23", "-143.454, -73.6869, 14.4004, 0.23", "-145.066, -75.1838, 14.6638, 1.14", "-147.05, -77.1977, 14.8978, 0.23", "-148.491, -78.7908, 14.8718, 0.68", "-150.673, -81.3464, 14.4487, 0.23", "-152.407, -83.3968, 13.9301, 0.91", "-154.395, -85.6204, 13.2333, 0.23", "-155.366, -86.6195, 12.8923, 0.91", "-157.8, -88.9168, 12.0249, 0.23", "-159.929, -90.7115, 11.3592, 0.91", "-162.105, -92.3744, 10.7891, 0.23", "-164.194, -93.808, 10.378, 0.91", "-166.964, -95.4155, 10.0729, 0.23", "-168.076, -95.9814, 10.0211, 0.91", "-169.953, -96.7743, 10.0689, 0.23", "-171.51, -97.3268, 10.1094, 0.91", "-172.087, -97.5011, 10.0721, 0.91", "-175.22, -98.3853, 9.7424, 0.23", "-176.208, -98.6293, 9.63419, 0.23", "-178.184, -99.0977, 9.41805, 0.91", "-180.592, -99.6505, 9.15683, 0.23", "-183.722, -100.343, 8.82518, 0.91", "-188.067, -101.301, 8.38794, 0.23", "-190.719, -101.887, 8.15411, 0.91" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.18068, -9.42425, 8.54, 0.91", "-0.487079, -12.1255, 9.66064, 0.91", "0.795128, -14.1706, 10.5091, 0.91", "2.45881, -16.8242, 11.6099, 1.36" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "9.32232, -16.7763, -3.3871, 0.91", "8.79426, -19.9814, -4.73451, 0.91", "8.28758, -23.0568, -6.02739, 0.91", "7.91474, -25.3198, -6.97876, 0.91" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "9.32232, -16.7763, -3.3871, 0.23", "11.6207, -18.0647, -3.03898, 0.23", "13.4309, -19.068, -2.79713, 0.68", "15.8976, -20.464, -2.5048, 0.68", "17.3944, -21.3639, -2.42998, 0.23", "18.1995, -21.8583, -2.43137, 0.91", "19.4039, -22.5986, -2.47013, 0.91", "20.9447, -23.5418, -2.63911, 0.23", "22.3404, -24.3273, -2.88581, 0.91", "24.7351, -25.6154, -3.3582, 0.23", "25.6602, -26.1039, -3.5562, 0.91", "26.9075, -26.7471, -3.8231, 0.23", "28.4939, -27.5748, -4.13643, 1.14", "29.6636, -28.1491, -4.29596, 1.14", "31.9467, -29.2247, -4.4518, 0.23", "33.0875, -29.7334, -4.44945, 0.91", "34.2862, -30.2693, -4.40624, 0.91", "36.6773, -31.2644, -4.26373, 0.23", "38.6849, -32.0035, -4.06958, 0.68", "40.5006, -32.5708, -3.86273, 0.23", "41.4829, -32.79, -3.73832, 0.91", "43.6487, -33.1341, -3.44696, 0.23", "45.855, -33.3326, -3.16937, 0.91", "47.7486, -33.3869, -2.96078, 0.23", "49.0569, -33.3857, -2.88692, 0.91", "51.6868, -33.3594, -2.80809, 0.23", "52.494, -33.3585, -2.80379, 1.14", "54.1183, -33.3809, -2.83616, 1.14", "56.2034, -33.5365, -2.92859, 0.23", "58.6291, -33.8704, -3.08454, 0.68", "59.5624, -34.0554, -3.12148, 1.36", "61.378, -34.5527, -3.09604, 0.23", "62.2125, -34.8015, -3.04882, 0.45", "64.4796, -35.5064, -2.83323, 0.23", "65.9663, -35.9776, -2.6079, 0.91", "68.7758, -36.8929, -1.99507, 0.23", "71.4357, -37.7381, -1.35155, 1.14", "72.7454, -38.1424, -1.0085, 0.23", "73.8951, -38.4704, -0.693507, 0.91", "76.1145, -39.0662, -0.0322763, 0.23", "77.429, -39.4094, 0.366407, 1.14", "79.5422, -39.957, 0.966035, 0.23", "80.7689, -40.3054, 1.30846, 0.91", "81.1528, -40.4283, 1.41405, 0.91", "82.9673, -41.033, 1.8741, 0.23", "84.1554, -41.405, 2.11661, 0.91", "86.1823, -42.0504, 2.45704, 0.23", "87.6671, -42.5308, 2.69766, 0.91", "89.3472, -43.0648, 2.95031, 0.23", "90.5929, -43.4565, 3.1161, 0.68", "93.3642, -44.3604, 3.4327, 0.23", "95.1464, -44.9679, 3.66794, 0.23", "96.2761, -45.3445, 3.85654, 1.14", "97.0262, -45.5913, 4.01518, 1.14", "99.2257, -46.3421, 4.5796, 0.23", "100.506, -46.776, 4.94906, 1.14", "102.712, -47.4954, 5.62317, 0.23", "105.893, -48.4663, 6.68822, 0.91", "107.374, -48.9131, 7.1787, 0.23", "109.021, -49.3952, 7.68317, 0.91", "111.413, -50.0488, 8.34559, 0.23", "113.201, -50.544, 8.71673, 0.91", "115.597, -51.3103, 9.02541, 0.23", "118.716, -52.4821, 9.18, 0.23", "121.201, -53.4961, 9.15607, 0.45", "122.992, -54.2975, 9.0624, 0.23", "125.345, -55.4371, 8.82156, 0.23", "127.281, -56.433, 8.4795, 0.91", "128.563, -57.1235, 8.11254, 0.23", "129.499, -57.6556, 7.78975, 0.45", "130.197, -58.0604, 7.53278, 0.23", "131.459, -58.7293, 7.0814, 0.91", "133.455, -59.6022, 6.39912, 0.23", "134.995, -60.1569, 5.86733, 0.91", "136.135, -60.5375, 5.47797, 0.23", "136.505, -60.6582, 5.35391, 0.91", "137.822, -61.0817, 4.95539, 0.23", "139.275, -61.6083, 4.5637, 0.45", "141.079, -62.3129, 4.20834, 0.23", "141.677, -62.5577, 4.11232, 0.91", "142.391, -62.8792, 4.00547, 0.23", "143.651, -63.5241, 3.8425, 1.14", "145.553, -64.6632, 3.7232, 0.23", "146.584, -65.3859, 3.65218, 0.68", "147.167, -65.9249, 3.57751, 0.23", "148.127, -67.1418, 3.37828, 0.23", "148.487, -68.2126, 3.17528, 0.23", "148.013, -69.6792, 2.88568, 0.91", "146.865, -71.8588, 2.44609, 0.23", "145.613, -73.8233, 2.02926, 0.23", "144.792, -74.9394, 1.78247, 0.23", "143.109, -76.8629, 1.32838, 0.23", "140.925, -79.0358, 0.785691, 0.68", "148.41, -83.6735, -0.076046, 0.68", "156.014, -87.6168, -2.35534, 0.68", "162.924, -91.8226, -5.96169, 0.68", "169.628, -95.625, -10.3422, 0.68", "177.654, -98.1545, -13.2097, 0.68", "185.881, -100.894, -15.1574, 0.68", "193.806, -104.204, -17.4028, 0.68", "202.247, -106.481, -19.038, 0.68" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "7.18318, 13.1163, -1.12, 0.23", "9.07953, 14.443, -1.54378, 0.23", "12.0998, 16.402, -2.10587, 0.68", "13.006, 16.9897, -2.27449, 0.68", "14.8666, 18.1965, -2.62075, 0.23", "17.0412, 19.6069, -3.02544, 0.91", "19.051, 20.9105, -3.39946, 0.91", "20.7271, 22.0861, -3.69646, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.18318, 13.1163, -1.12, 0.68", "6.8498, 16.606, -1.24417, 0.68", "6.70299, 18.8089, -1.39884, 0.68", "6.62403, 20.6027, -1.55183, 0.91", "6.68351, 23.6646, -2.02604, 0.23", "6.75825, 24.7157, -2.2175, 0.68", "7.11209, 28.4419, -2.94354, 0.23", "7.4573, 30.8812, -3.53973, 1.14", "7.70354, 32.2937, -3.91936, 1.14", "8.74571, 37.0978, -5.27164, 0.23", "9.54967, 40.0739, -6.12168, 0.91", "9.96033, 41.3719, -6.4842, 0.91", "10.613, 43.0943, -6.96124, 0.23", "11.5509, 45.4911, -7.58888, 0.23", "12.187, 47.0785, -7.99503, 0.91", "12.8506, 48.6838, -8.35434, 0.91", "13.824, 50.9966, -8.87766, 0.23", "15.0197, 53.743, -9.4719, 0.68", "16.2886, 56.5563, -10.095, 0.23", "17.0682, 58.3406, -10.4846, 0.91", "18.4363, 61.489, -11.2237, 0.23", "19.0474, 62.8184, -11.5327, 0.23", "19.4133, 63.6002, -11.7043, 1.14", "19.987, 64.807, -11.9165, 1.14", "20.8859, 66.65, -12.172, 0.23", "21.4958, 68.0488, -12.3714, 0.68", "22.4765, 70.6594, -12.8013, 0.23", "23.1398, 72.6606, -13.1452, 0.91", "24.0384, 75.8707, -13.7082, 0.23", "24.5852, 78.2483, -14.1242, 1.14", "25.1675, 81.8623, -14.8938, 0.23", "25.3637, 84.2076, -15.47, 0.68", "25.3825, 85.5415, -15.8747, 0.23", "25.3144, 87.5225, -16.5539, 0.91", "25.1809, 88.8217, -17.0474, 0.91", "24.3929, 94.0522, -19.2114, 0.23", "24.139, 95.598, -19.9134, 1.14", "23.6123, 98.7981, -21.5256, 0.23", "23.2644, 100.914, -22.6556, 0.91", "22.9514, 102.671, -23.641, 0.91", "22.4309, 105.518, -25.2732, 0.23", "21.7866, 109.13, -27.5336, 0.91", "21.4645, 111.039, -28.7622, 0.23", "21.2735, 112.227, -29.4533, 0.45", "21.065, 113.752, -30.3088, 0.23", "20.9225, 114.973, -30.9731, 0.91", "20.6349, 117.9, -32.5895, 0.23", "20.4512, 119.98, -33.8054, 1.14", "20.1436, 124.158, -36.4697, 0.23", "19.9426, 127.034, -38.4563, 1.36", "19.7617, 130.294, -41.0204, 0.45", "19.6883, 131.953, -42.5181, 0.91", "19.5789, 134.382, -44.9618, 0.23", "19.4921, 135.927, -46.7717, 0.68", "19.4076, 137.083, -48.3639, 0.68", "19.2097, 139.388, -51.6573, 0.23", "19.1389, 140.726, -53.562, 0.23", "19.1263, 141.445, -54.4935, 0.91", "19.2998, 143.067, -56.3906, 0.45", "19.6702, 144.594, -57.9472, 0.23", "20.1979, 145.892, -59.0931, 0.91", "21.1301, 147.584, -60.3178, 0.23", "21.7216, 148.451, -60.8759, 1.14", "23.1532, 150.082, -61.8614, 0.23", "24.5671, 151.465, -62.6771, 0.91", "26.5087, 153.243, -63.7695, 0.23", "27.4433, 154.098, -64.3113, 0.23", "28.9313, 155.503, -65.2723, 1.14", "31.4697, 158.042, -67.257, 0.23", "33.5178, 160.336, -69.2947, 1.14", "35.4252, 162.918, -72.1054, 0.23", "35.8396, 163.548, -72.8422, 0.23", "36.604, 164.883, -74.5533, 0.68", "37.2453, 166.293, -76.6391, 0.23", "37.4704, 167.52, -78.7758, 1.14", "37.2664, 169.332, -82.5241, 0.23", "37.7626, 178.815, -89.995, 0.23", "35.6697, 189.387, -95.3833, 0.23", "35.9156, 199.865, -101.326, 0.23", "34.6987, 210.106, -107.573, 0.23", "35.3957, 220.842, -112.98, 0.23", "34.5371, 231.494, -118.533, 0.23", "32.2038, 241.674, -124.569, 0.23", "30.2058, 251.388, -131.462, 0.23", "29.2066, 260.678, -139.135, 0.23", "29.5412, 269.166, -147.776, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.15127, 37.9518, 0.0, 0.15", "-9.88495, 52.7006, 0.0, 0.15", "-12.6186, 67.4494, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-11.902, 13.6766, -1.20994, 0.23", "-12.3774, 14.0536, -3.39325, 0.23", "-12.6495, 14.2695, -4.64338, 0.23", "-13.0081, 14.5539, -6.29033, 0.91", "-13.6717, 15.0802, -9.33816, 0.23", "-14.3779, 15.6404, -12.5819, 0.23", "-14.6401, 15.8484, -13.7865, 1.14" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-11.902, 13.6766, -1.20994, 0.23", "-13.0854, 14.4879, -1.31431, 0.23", "-14.7052, 15.5862, -1.43738, 0.91", "-16.7648, 16.96, -1.589, 0.68", "-18.7419, 18.2875, -1.68671, 0.23", "-20.2434, 19.3356, -1.80108, 0.68", "-21.5599, 20.2747, -1.92376, 0.23", "-22.233, 20.773, -2.02549, 1.14", "-23.1149, 21.4216, -2.21777, 1.14", "-25.2322, 23.0124, -2.86308, 0.23", "-27.1179, 24.4749, -3.56736, 0.45", "-28.2893, 25.3751, -4.04793, 0.23", "-29.8834, 26.5428, -4.73048, 0.23", "-31.8105, 27.8758, -5.57347, 0.23", "-33.2829, 28.8352, -6.22552, 0.91", "-34.0802, 29.306, -6.57594, 0.91", "-37.0347, 30.8751, -7.70628, 0.23", "-38.8876, 31.8032, -8.34572, 0.68", "-40.4422, 32.5448, -8.80139, 0.23", "-41.0529, 32.8317, -8.97454, 0.91", "-42.469, 33.444, -9.35448, 0.91", "-44.9902, 34.4965, -10.0485, 0.23", "-46.2544, 34.995, -10.407, 2.05", "-47.5188, 35.5296, -10.733, 2.05" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "23.3326, 32.9634, -11.5684, 0.68", "25.6844, 33.5037, -12.1316, 0.68", "29.1875, 34.2061, -13.041, 1.14", "32.6015, 34.8694, -13.846, 0.68", "36.8254, 35.7044, -14.7522, 0.68", "39.671, 36.3021, -15.306, 0.68", "42.101, 36.8125, -15.779, 1.14", "46.0222, 37.6408, -16.4497, 0.68", "50.0647, 38.4983, -17.0386, 0.68", "52.5495, 39.0608, -17.401, 0.68", "54.2983, 39.4277, -17.6049, 0.91" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "23.3326, 32.9634, -11.5684, 0.68", "23.3971, 35.2114, -11.9528, 0.68", "23.4451, 36.4775, -12.1153, 1.14", "23.5138, 37.9848, -12.2662, 0.23", "23.6138, 40.2735, -12.3712, 0.68", "23.6645, 41.9335, -12.373, 0.68", "23.6816, 42.7879, -12.3531, 0.68", "23.6763, 44.8025, -12.1798, 1.14", "23.626, 47.6157, -11.8835, 0.23", "23.567, 49.1355, -11.6932, 0.23", "23.4402, 51.3109, -11.3694, 0.68", "23.3515, 52.1281, -11.2459, 0.68", "23.1362, 53.7348, -10.9956, 0.23", "22.9355, 54.8734, -10.8124, 0.91", "22.5196, 56.7747, -10.5157, 0.23", "22.2454, 57.9281, -10.3979, 0.68", "21.673, 60.0753, -10.203, 1.14" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-190.719, -101.887, 8.15411, 0.23", "-192.847, -102.074, 8.10866, 0.23", "-194.142, -102.21, 8.08792, 0.68", "-195.845, -102.419, 8.05601, 0.23", "-197.198, -102.661, 7.97628, 0.45", "-200.087, -103.332, 7.55118, 0.23", "-202.183, -103.88, 7.15108, 0.45", "-202.904, -104.11, 6.98567, 0.23", "-204.073, -104.549, 6.6794, 0.68", "-206.511, -105.568, 5.95648, 0.23", "-209.882, -107.059, 5.01718, 0.68", "-210.702, -107.42, 4.79396, 0.23", "-211.549, -107.788, 4.61411, 0.68", "-213.276, -108.534, 4.35301, 0.23", "-214.465, -109.013, 4.24779, 0.91", "-217.334, -110.082, 4.20287, 0.23", "-218.957, -110.653, 4.24891, 1.14", "-220.928, -111.316, 4.26569, 0.23", "-222.233, -111.711, 4.26664, 0.91", "-224.233, -112.26, 4.23603, 0.23", "-225.318, -112.543, 4.19099, 0.68", "-226.545, -112.846, 4.08316, 0.23", "-228.145, -113.235, 3.95931, 0.68", "-229.589, -113.562, 3.85073, 0.23", "-230.832, -113.887, 3.79073, 0.91", "-231.708, -114.155, 3.76619, 0.23", "-233.279, -114.703, 3.73209, 0.45", "-233.999, -114.968, 3.72446, 0.23", "-235.719, -115.615, 3.70205, 0.45", "-238.528, -116.638, 3.61535, 0.23", "-239.915, -117.14, 3.5805, 0.23", "-241.863, -117.836, 3.54052, 0.68", "-244.235, -118.661, 3.50129, 0.23", "-245.628, -119.118, 3.47502, 0.23", "-247.851, -119.787, 3.41743, 0.91" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-190.719, -101.887, 8.15411, 0.23", "-191.967, -102.634, 7.33686, 0.23", "-192.388, -102.854, 7.10033, 0.68", "-193.161, -103.221, 6.73665, 0.23", "-193.786, -103.505, 6.47058, 0.91", "-194.672, -103.907, 6.0937, 0.23", "-195.558, -104.308, 5.7169, 0.45", "-196.413, -104.663, 5.44053, 0.23", "-197.427, -105.072, 5.10462, 0.68", "-197.704, -105.18, 5.01445, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "2.45881, -16.8242, 11.6099, 1.14", "3.81322, -19.6574, 15.3786, 1.14", "5.53828, -23.1323, 19.6713, 1.14", "7.07206, -26.1423, 23.0699, 0.68", "8.33228, -28.6154, 25.8624, 0.68", "8.98692, -29.9001, 27.313, 0.91", "10.1988, -32.2784, 29.9983, 0.68", "11.2786, -34.4322, 32.2064, 1.14", "12.1096, -35.9791, 33.5556, 1.36" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "2.45881, -16.8242, 11.6099, 0.23", "3.65422, -19.6714, 10.7267, 0.23", "5.02413, -23.0294, 9.47794, 0.23", "6.65126, -26.9694, 7.97702, 0.23", "7.76365, -29.5393, 7.02245, 1.82", "8.52948, -31.3858, 6.283, 1.82", "9.49807, -33.7102, 5.33781, 0.68", "10.5235, -36.2543, 4.20508, 0.23", "11.3849, -38.6388, 3.23093, 0.23", "11.8709, -40.221, 2.52624, 0.91", "12.6836, -43.1206, 1.11583, 0.23", "13.0403, -44.7167, 0.366768, 0.23", "13.4646, -47.4492, -0.792124, 0.23", "13.5637, -48.7467, -1.23717, 0.68", "13.6182, -51.9829, -2.25651, 0.23", "13.592, -53.258, -2.59732, 1.36", "13.5164, -55.6731, -3.05155, 0.23", "13.4512, -57.2189, -3.28664, 0.23", "13.4141, -59.5615, -3.47911, 0.91", "13.5367, -61.6746, -3.49608, 0.91", "13.7258, -63.1219, -3.46172, 0.91", "14.4768, -66.6278, -3.45059, 0.23", "15.0227, -68.4002, -3.50618, 0.23", "15.922, -70.8058, -3.72004, 0.91", "17.1809, -73.7282, -4.09683, 0.23", "18.3702, -76.2644, -4.50832, 0.45", "20.005, -79.5221, -5.1305, 0.23", "21.501, -82.4523, -5.7743, 0.68", "23.2275, -85.974, -6.68203, 0.23", "23.9872, -87.706, -7.17199, 1.14", "24.1799, -88.2151, -7.31222, 1.14", "24.597, -89.4603, -7.5869, 1.14", "25.4462, -92.2553, -8.10944, 0.23", "26.0731, -94.38, -8.43973, 0.91", "27.0827, -97.7279, -8.87917, 0.23", "27.543, -99.2388, -9.07047, 1.14", "28.5897, -102.594, -9.52042, 0.23", "29.1383, -104.34, -9.75646, 1.14", "29.9231, -106.877, -10.0795, 0.23", "30.297, -108.206, -10.2287, 1.14", "30.6894, -109.739, -10.4005, 1.14", "31.495, -113.389, -10.8694, 0.23", "31.8815, -115.534, -11.1581, 1.14", "32.3147, -118.402, -11.5777, 0.23", "32.5821, -120.393, -11.8785, 1.14", "33.0168, -123.523, -12.3289, 0.23", "33.2835, -125.33, -12.5904, 1.82", "33.831, -128.737, -13.0544, 0.23", "33.9821, -129.612, -13.1809, 0.68", "34.2634, -131.21, -13.4203, 0.23", "34.6859, -133.534, -13.7447, 0.91", "35.0888, -135.923, -14.0429, 0.23", "35.2544, -136.963, -14.0844, 1.14", "35.5436, -138.638, -14.0662, 0.23", "35.7476, -139.758, -14.0129, 0.68", "36.342, -142.888, -13.8169, 0.23", "36.5703, -143.999, -13.7286, 1.14", "37.5209, -148.15, -13.3246, 0.23", "37.9932, -150.28, -12.9908, 0.91", "38.2088, -151.293, -12.7906, 0.91", "38.6456, -153.457, -12.3029, 0.23", "38.8722, -154.744, -11.9977, 1.14", "39.0188, -155.781, -11.7662, 1.14", "39.4631, -160.532, -11.1299, 0.23", "39.5846, -162.469, -10.9537, 0.91", "39.6311, -163.259, -10.9493, 0.91", "39.8022, -165.708, -11.1284, 0.23", "39.9146, -166.913, -11.3322, 0.68", "40.3089, -169.973, -12.2412, 0.23", "40.4632, -170.96, -12.6732, 0.91", "40.8523, -173.501, -13.8079, 0.23", "41.0674, -174.965, -14.4204, 1.14", "41.1732, -175.72, -14.7116, 1.14", "41.3083, -176.82, -15.0612, 1.59", "41.5353, -179.345, -15.616, 0.23", "41.6097, -180.548, -15.8653, 1.14", "41.7073, -182.637, -16.2423, 0.23", "41.7528, -183.298, -16.3815, 0.68", "41.8685, -184.387, -16.6487, 0.23", "42.0441, -185.429, -16.9212, 0.91", "42.4164, -186.772, -17.3323, 0.23", "42.8143, -188.061, -17.6586, 1.14", "43.5448, -190.424, -17.9926, 0.23", "44.081, -192.177, -18.1165, 0.23", "44.5715, -193.825, -18.1494, 0.91", "45.4906, -197.026, -18.0647, 0.23", "46.2984, -199.994, -17.8545, 1.14", "47.4256, -204.354, -17.3201, 0.23", "47.7181, -205.636, -17.1095, 0.91", "47.8708, -206.433, -16.9632, 0.91", "48.1949, -208.746, -16.5472, 0.23", "48.3335, -210.59, -16.3175, 1.14", "48.3972, -213.31, -16.2678, 0.23", "48.3421, -214.458, -16.3399, 0.68", "48.142, -216.57, -16.4538, 0.23", "48.0065, -217.581, -16.5044, 1.14", "47.481, -220.793, -16.6375, 0.23", "47.3114, -221.933, -16.6716, 0.91", "47.2445, -222.503, -16.685, 0.91", "47.0539, -224.957, -16.4987, 0.23", "46.9867, -226.016, -16.2841, 0.91", "46.831, -228.328, -15.6112, 0.23", "46.7598, -229.477, -15.2026, 1.14", "46.6105, -231.388, -14.5373, 0.23", "46.394, -233.664, -13.7946, 0.91", "46.2522, -235.748, -13.329, 0.23", "46.2192, -236.893, -13.1489, 0.91", "46.2026, -239.037, -12.96, 0.23", "46.2156, -241.208, -12.856, 1.14", "46.2676, -242.006, -12.8733, 1.14", "46.7989, -245.672, -13.3842, 0.23", "47.1428, -247.21, -13.7366, 0.23", "47.3313, -247.843, -13.911, 0.68", "48.352, -256.99, -14.6283, 0.68", "50.3359, -266.007, -14.436, 0.68", "53.3604, -274.645, -13.0984, 0.68", "57.0027, -283.0, -11.4609, 0.68" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "7.91474, -25.3198, -6.97876, 1.59", "7.83672, -25.581, -7.09793, 1.59", "7.2662, -27.4912, -7.96941, 1.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "7.91474, -25.3198, -6.97876, 0.23", "8.35135, -26.2277, -8.52408, 0.23", "9.08504, -27.5625, -10.9567, 0.68", "9.91857, -29.0234, -13.5747, 0.23", "10.8622, -30.44, -16.2553, 0.91", "12.4774, -32.7959, -20.7655, 0.91", "13.4056, -34.1865, -23.3923, 0.23", "14.2126, -35.2307, -25.4996, 0.23", "14.6617, -35.7184, -26.5124, 1.59", "16.5176, -37.4983, -30.1314, 0.23", "16.9684, -37.8804, -30.8301, 0.23", "17.6107, -38.4393, -31.5608, 0.23", "18.4058, -39.0441, -32.2156, 0.23", "19.7659, -39.9289, -33.1597, 1.14", "21.2475, -40.7738, -34.1194, 0.68", "22.7265, -41.6478, -35.0877, 0.68", "24.0978, -42.5108, -36.0793, 0.68", "25.7189, -43.498, -37.5639, 0.23", "27.4617, -44.6529, -39.5481, 0.23", "28.6728, -45.5124, -41.0748, 0.68", "29.9058, -46.3908, -42.7512, 0.23", "30.7177, -46.9619, -43.9367, 0.91", "33.5475, -48.9832, -48.4662, 0.23", "34.3204, -49.6514, -49.9296, 0.23", "35.1451, -50.4067, -51.6175, 0.68", "39.6976, -54.361, -59.9733, 0.68", "43.6587, -58.9011, -68.3133, 0.68", "48.6569, -63.817, -75.8355, 0.68", "53.6598, -69.9273, -82.3691, 0.68", "57.2835, -76.1092, -89.6864, 0.68", "59.8204, -83.0369, -96.7496, 0.68", "61.989, -90.8919, -102.852, 0.68", "66.4343, -98.4375, -108.085, 0.68", "70.5877, -106.314, -113.039, 0.68", "75.1872, -114.505, -116.97, 0.68", "80.0801, -122.805, -120.266, 0.68", "84.3696, -131.765, -122.394, 0.68", "88.389, -140.858, -124.457, 0.68", "91.3608, -150.085, -127.432, 0.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "202.247, -106.481, -19.038, 0.23", "211.899, -111.09, -19.6585, 0.23", "220.944, -116.63, -20.9653, 0.23", "228.868, -123.748, -21.1881, 0.23", "235.328, -132.044, -22.5224, 0.23", "241.491, -140.655, -21.7749, 0.23", "246.957, -149.692, -20.8458, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "202.247, -106.481, -19.038, 0.23", "210.06, -110.147, -19.5484, 0.23", "218.078, -113.364, -18.9514, 0.23", "225.83, -117.087, -19.8122, 0.23", "233.236, -120.946, -21.982, 0.23", "240.249, -124.998, -24.9248, 0.23", "247.489, -129.367, -26.5965, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "20.7271, 22.0861, -3.69646, 0.23", "22.4108, 23.4506, -4.61217, 0.23", "24.6942, 25.2858, -5.93451, 0.68", "27.1011, 27.1641, -7.24514, 0.23", "28.4095, 28.2038, -7.91666, 0.91", "29.2446, 28.8989, -8.356, 0.91", "30.5985, 30.0733, -9.06794, 0.23", "32.6354, 31.8552, -10.0309, 1.59", "34.443, 33.5097, -10.8514, 0.23", "35.5067, 34.5495, -11.3392, 1.14", "37.3589, 36.31, -12.1312, 0.23", "38.1685, 37.0533, -12.4884, 0.23", "39.6569, 38.4553, -13.167, 1.14", "40.7682, 39.5393, -13.7746, 0.23", "41.507, 40.2682, -14.2506, 1.14", "42.6068, 41.3291, -14.9946, 1.14", "44.5895, 43.1591, -16.2928, 0.23", "46.2786, 44.6642, -17.3655, 1.59", "48.7825, 46.8207, -18.9053, 0.23", "50.3987, 48.1882, -19.8046, 0.68", "52.5976, 49.9713, -20.8719, 0.23", "54.053, 51.1457, -21.4752, 1.36", "55.6106, 52.3616, -21.9727, 0.23", "57.5242, 53.8465, -22.4357, 1.36", "60.865, 56.5025, -22.9857, 0.23", "63.37, 58.5892, -23.3486, 0.23", "64.8109, 59.8871, -23.5124, 0.23", "66.4292, 61.4909, -23.6668, 2.05", "68.2369, 63.4392, -23.789, 0.23", "70.0769, 65.624, -23.8289, 0.23", "71.1201, 66.9645, -23.8027, 1.59", "72.7366, 69.1386, -23.7386, 0.23", "73.3048, 69.895, -23.7107, 1.14", "74.0858, 70.971, -23.662, 1.14", "74.8538, 72.0172, -23.6288, 0.23", "76.2031, 73.8905, -23.5978, 1.14", "77.2536, 75.239, -23.5217, 0.23", "78.0128, 76.122, -23.5001, 0.23", "78.8998, 77.086, -23.5243, 0.91", "80.0813, 78.3265, -23.6045, 0.23", "81.248, 79.5383, -23.7217, 1.36", "83.1912, 81.6468, -24.1149, 0.23", "85.149, 83.8515, -24.7022, 0.23", "86.1165, 84.9173, -25.1036, 0.91", "86.7282, 85.5828, -25.4084, 0.91", "88.0396, 86.9925, -26.2503, 0.23", "89.3493, 88.3442, -27.2598, 0.91", "90.8694, 89.9406, -28.6547, 0.23", "92.1637, 91.2546, -29.8243, 1.14", "92.7581, 91.7985, -30.3298, 1.14", "94.2607, 93.0704, -31.5123, 0.23", "95.2096, 93.7743, -32.1888, 1.14", "96.8104, 94.8416, -33.103, 0.23", "97.5943, 95.3491, -33.5304, 1.14", "100.405, 97.1402, -34.9565, 0.23", "101.446, 97.8, -35.4555, 0.23", "103.504, 99.1278, -36.3245, 1.82", "105.753, 100.595, -37.227, 0.23", "108.505, 102.397, -38.2604, 1.36", "109.272, 102.926, -38.5339, 0.23", "110.336, 103.711, -38.8706, 0.68", "112.278, 105.191, -39.4263, 0.23", "113.281, 106.037, -39.664, 0.23", "114.115, 106.778, -39.8358, 1.14", "114.981, 107.557, -39.9398, 1.14", "115.661, 108.219, -40.0279, 0.23", "116.157, 108.726, -40.1302, 0.23", "116.978, 109.651, -40.3516, 1.14", "117.607, 110.425, -40.5303, 1.14", "118.606, 111.763, -40.9155, 0.23", "119.137, 112.496, -41.1575, 0.91", "120.238, 114.072, -41.6957, 0.23", "121.406, 115.822, -42.2977, 1.14", "122.443, 117.368, -42.8343, 0.23", "123.664, 119.173, -43.5437, 1.14", "124.281, 120.068, -43.9174, 0.23", "125.0, 121.085, -44.3331, 0.68", "126.163, 122.626, -44.9336, 0.23", "126.592, 123.158, -45.1802, 0.91", "128.394, 125.405, -46.2329, 0.23", "129.065, 126.282, -46.6062, 0.23", "129.818, 127.384, -47.0691, 0.23", "130.615, 128.773, -47.654, 0.91", "131.471, 130.679, -48.3937, 0.23", "132.011, 132.54, -49.051, 1.14", "132.144, 133.431, -49.3195, 0.23", "132.214, 134.669, -49.6757, 0.91", "132.196, 136.858, -50.2263, 0.23", "132.101, 138.347, -50.5323, 0.91", "131.913, 140.333, -50.8358, 0.23", "131.771, 141.535, -51.0708, 0.91", "131.591, 143.045, -51.3977, 0.23", "131.402, 144.926, -51.8395, 0.23", "131.31, 145.811, -52.0387, 0.91", "131.192, 146.993, -52.3151, 0.23", "131.004, 149.337, -52.8606, 1.14", "130.931, 150.211, -53.067, 1.14", "130.665, 153.352, -53.7555, 0.23", "130.514, 155.009, -54.1298, 0.23", "130.471, 155.595, -54.2549, 0.45", "130.433, 156.351, -54.3861, 0.23", "130.404, 157.248, -54.4447, 0.23", "130.359, 159.058, -54.5362, 0.23", "137.489, 166.825, -55.9844, 0.23", "144.21, 174.421, -59.2408, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "20.7271, 22.0861, -3.69646, 0.23", "22.3518, 22.8309, -4.0331, 0.23", "25.2106, 24.1671, -4.63563, 0.91", "27.6244, 25.2785, -5.21025, 0.23", "28.9861, 25.8911, -5.5383, 0.91", "30.4826, 26.5425, -5.87964, 0.23", "31.8695, 27.1355, -6.17088, 0.23", "33.0911, 27.6585, -6.43846, 0.91", "34.3606, 28.2291, -6.71607, 0.23", "35.8708, 28.8989, -6.94326, 0.91", "37.6968, 29.7244, -7.20404, 0.23", "39.3994, 30.4994, -7.39435, 0.68", "40.5922, 31.045, -7.52809, 0.23", "41.7521, 31.587, -7.64713, 1.14", "43.4473, 32.4315, -7.77048, 0.23", "44.4188, 32.9497, -7.86642, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "29.5412, 269.166, -147.776, 0.23", "30.8456, 278.048, -153.331, 0.23", "30.6228, 286.078, -160.216, 0.23", "31.7135, 294.351, -166.713, 0.23", "30.7621, 303.171, -172.429, 0.23", "27.6536, 311.383, -178.322, 0.23", "23.0301, 319.862, -182.622, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "29.5412, 269.166, -147.776, 0.23", "29.9644, 277.725, -152.023, 0.23", "31.6369, 286.456, -155.528, 0.23", "33.9431, 295.473, -157.659, 0.23", "35.4042, 304.622, -159.953, 0.23", "37.2522, 313.93, -160.971, 0.23", "40.1196, 322.921, -162.448, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-14.6401, 15.8484, -13.7865, 0.23", "-15.5677, 14.7069, -16.0857, 0.23", "-16.107, 14.0856, -17.4777, 0.23", "-16.5979, 13.5187, -18.688, 0.91", "-17.5818, 12.3964, -20.872, 0.68", "-18.5075, 11.3746, -22.6925, 0.23", "-19.2405, 10.6355, -23.934, 0.68", "-20.467, 9.40948, -25.9061, 0.23", "-21.0559, 8.90696, -26.6672, 0.91", "-22.3725, 7.94367, -28.0618, 0.23", "-23.2608, 7.36827, -28.7726, 1.14", "-25.1832, 6.1123, -30.0075, 0.23", "-25.9761, 5.55821, -30.4729, 0.68", "-26.8221, 4.94065, -30.9171, 0.23", "-27.4747, 4.42375, -31.265, 0.23", "-27.9941, 3.97877, -31.5317, 0.23", "-29.255, 2.6779, -32.26, 1.14", "-30.5522, 1.11847, -33.0458, 0.23", "-31.8773, -0.667909, -34.0072, 0.91", "-32.8918, -2.12308, -34.8296, 0.23", "-33.6013, -3.23812, -35.4559, 1.14", "-34.8667, -5.26227, -36.6277, 0.23", "-35.5093, -6.33179, -37.2662, 0.91", "-36.5289, -8.13979, -38.3174, 0.23", "-37.1095, -9.30264, -38.9837, 1.14", "-37.8225, -10.8733, -39.9799, 0.23", "-43.0491, -18.121, -44.2527, 0.23" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-14.6401, 15.8484, -13.7865, 0.23", "-13.1191, 15.3704, -15.3066, 0.23", "-11.2027, 14.8608, -17.145, 0.91", "-9.66067, 14.4564, -18.542, 0.23", "-9.19897, 14.3498, -18.9831, 0.68", "-8.0844, 14.1313, -20.1183, 0.23", "-7.35402, 14.0194, -20.949, 1.14", "-5.57003, 13.7742, -23.1069, 0.23", "-4.29223, 13.5847, -24.95, 0.91", "-2.46277, 13.2145, -27.9838, 0.23", "-1.70777, 13.029, -29.4029, 1.36", "-0.140673, 12.6073, -32.9116, 0.23", "0.484605, 12.3954, -34.6762, 0.91", "1.64934, 11.7883, -39.1753, 0.23", "2.10609, 11.481, -41.3868, 0.68", "2.48436, 11.0825, -43.7708, 0.91", "2.81084, 10.5673, -46.449, 0.23", "2.88126, 10.2545, -47.9523, 0.23", "2.83114, 9.98186, -49.637, 1.14", "7.05462, 9.04777, -58.0791, 1.14", "13.1523, 9.48742, -65.3215, 1.14" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-47.5188, 35.5296, -10.733, 0.23", "-49.5001, 37.5951, -9.84384, 0.23", "-51.3232, 39.4268, -9.12403, 0.23", "-52.0947, 40.1732, -8.86784, 0.91", "-54.6358, 42.4949, -8.01833, 0.23", "-56.1703, 43.8512, -7.53222, 0.91", "-59.3824, 46.6342, -6.5831, 0.23", "-61.4082, 48.2352, -5.96589, 1.14", "-64.5861, 50.6245, -5.07781, 0.23", "-66.8497, 52.3027, -4.51773, 0.91", "-68.8761, 53.7613, -4.11781, 0.23", "-70.6111, 54.9001, -3.72356, 0.91", "-73.2023, 56.3898, -3.12512, 0.23", "-75.3028, 57.4874, -2.62385, 0.68", "-76.8277, 58.18, -2.32331, 0.23", "-78.4494, 58.7939, -2.07508, 0.68", "-81.875, 59.8328, -1.63337, 0.23", "-83.5355, 60.2079, -1.46134, 1.14", "-86.1684, 60.6463, -1.29227, 0.23", "-89.3923, 61.0167, -1.10899, 0.23", "-92.6479, 61.2935, -1.07013, 0.68", "-94.2597, 61.4404, -1.14014, 0.23", "-97.9086, 61.8198, -1.55307, 0.68", "-99.2534, 61.9741, -1.73478, 0.23", "-101.18, 62.2371, -2.04751, 0.68", "-103.343, 62.6434, -2.45129, 0.23", "-106.303, 63.3339, -3.07113, 0.91", "-109.55, 64.2556, -3.70443, 0.23", "-112.307, 65.1917, -4.22175, 0.91", "-115.22, 66.2452, -4.56723, 0.23", "-116.611, 66.7579, -4.66258, 0.23", "-119.434, 67.8878, -4.75139, 0.91", "-121.982, 68.9582, -4.67326, 0.23", "-123.673, 69.7245, -4.53873, 0.68", "-127.98, 71.7965, -4.01147, 0.23", "-130.58, 73.1445, -3.59593, 0.68", "-133.741, 74.9181, -3.01317, 0.23", "-136.632, 76.7263, -2.27335, 0.23", "-138.438, 77.9864, -1.69106, 0.23", "-139.992, 79.27, -1.07236, 0.68", "-140.84, 80.1061, -0.651185, 0.23", "-141.483, 80.7967, -0.260531, 0.91", "-144.41, 84.1327, 1.81136, 0.23", "-145.517, 85.5388, 2.64438, 0.23", "-147.043, 87.5498, 3.91757, 0.23", "-148.589, 89.5599, 5.19064, 0.68" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-47.5188, 35.5296, -10.733, 0.45", "-49.7369, 35.3693, -12.7134, 0.45", "-52.5994, 35.0191, -15.215, 0.91", "-54.0436, 34.8145, -16.6172, 0.23", "-56.1201, 34.4097, -18.9295, 0.91", "-56.8566, 34.2374, -19.7974, 0.91", "-57.7245, 34.0217, -20.8641, 0.23", "-59.2952, 33.5717, -22.9246, 0.68", "-61.0435, 32.961, -25.345, 0.23", "-62.8231, 32.3267, -27.8211, 1.14", "-63.8193, 31.9825, -29.2422, 1.14", "-65.7783, 31.3713, -32.0652, 0.23", "-66.9662, 31.0824, -33.7105, 1.14", "-69.1275, 30.6571, -36.6631, 0.23", "-70.3961, 30.4525, -38.221, 0.23", "-72.5802, 30.1348, -40.7253, 0.23", "-73.0045, 30.0558, -41.1743, 0.91", "-74.3019, 29.7833, -42.396, 1.59", "-77.3174, 29.15, -44.9326, 0.23", "-80.3064, 28.5516, -47.1468, 1.36", "-82.8676, 28.0401, -48.8111, 0.91", "-86.5784, 27.2979, -50.9131, 0.23", "-89.3634, 26.747, -52.376, 1.14", "-92.2054, 26.1933, -53.75, 0.23", "-93.9263, 25.9073, -54.4669, 0.23", "-96.4475, 25.5713, -55.4653, 0.68", "-97.7872, 25.4412, -55.9829, 0.68", "-99.6759, 25.3051, -56.7342, 0.23", "-102.071, 25.1049, -57.7185, 0.91", "-104.226, 24.9323, -58.6867, 0.23", "-105.26, 24.8603, -59.1943, 0.91", "-107.047, 24.7694, -60.1423, 0.23", "-110.377, 24.6064, -61.9481, 1.14", "-111.637, 24.5461, -62.6461, 0.23", "-113.406, 24.4664, -63.6412, 0.68", "-115.699, 24.3436, -64.9471, 0.23", "-117.488, 24.2346, -65.8878, 0.45", "-119.101, 24.0721, -66.6109, 0.23", "-119.908, 23.974, -66.9194, 0.23", "-122.134, 23.6345, -67.5768, 0.91", "-126.013, 22.91, -68.4912, 0.23", "-128.767, 22.3639, -69.0556, 0.91", "-133.92, 21.3432, -70.0045, 0.23", "-135.311, 21.0591, -70.2411, 0.23", "-138.881, 20.2609, -70.7987, 1.59", "-143.431, 19.1188, -71.3731, 0.23", "-144.852, 18.7363, -71.5334, 0.91", "-145.761, 18.49, -71.6317, 0.91", "-149.312, 17.5384, -72.0073, 0.23", "-152.551, 16.6286, -72.3888, 0.91", "-155.638, 15.7533, -72.8165, 0.23", "-157.295, 15.2795, -73.0487, 1.14", "-160.476, 14.3732, -73.5842, 0.23", "-162.148, 13.9007, -73.9452, 0.91", "-163.424, 13.5886, -74.2975, 0.23", "-165.068, 13.263, -74.9165, 0.68", "-169.393, 12.5276, -76.855, 0.23", "-171.204, 12.2242, -77.7101, 0.91", "-173.348, 11.8787, -78.7943, 0.23", "-175.829, 11.5306, -80.1211, 0.68", "-178.352, 11.1924, -81.5603, 0.23", "-180.218, 10.9385, -82.7013, 0.23", "-182.527, 10.5749, -84.2455, 0.91", "-185.128, 10.1153, -86.0071, 0.23", "-186.966, 9.77301, -87.2468, 1.14", "-189.644, 9.22573, -89.0407, 0.23", "-191.08, 8.95467, -89.9573, 0.91", "-193.366, 8.65909, -91.3943, 0.23", "-196.098, 8.4717, -93.0082, 0.91", "-197.661, 8.42258, -93.8403, 0.23", "-199.014, 8.43402, -94.4719, 0.68", "-200.502, 8.53276, -95.122, 0.23", "-203.273, 8.81433, -96.1904, 0.91", "-206.054, 9.09998, -97.0544, 0.23", "-207.446, 9.25385, -97.3954, 0.23", "-208.552, 9.3532, -97.63, 0.91", "-209.751, 9.42744, -97.8395, 0.23", "-212.856, 9.5172, -98.329, 0.91", "-215.601, 9.44515, -98.5435, 0.23", "-217.759, 9.29215, -98.5052, 0.68", "-219.515, 9.10197, -98.3705, 0.23", "-223.262, 8.48325, -97.8346, 0.91", "-225.229, 8.12194, -97.5064, 0.23", "-229.067, 7.32804, -96.7629, 0.91", "-232.664, 6.52615, -95.9508, 0.23", "-234.982, 5.89274, -95.3153, 0.91", "-238.849, 4.76029, -93.956, 0.23" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "54.2983, 39.4277, -17.6049, 0.23", "56.1913, 40.939, -16.817, 0.23", "57.4526, 41.8689, -16.2513, 0.91", "59.0606, 42.9863, -15.4204, 0.23", "61.3348, 44.5341, -14.2361, 0.23", "62.0197, 44.9937, -13.8822, 0.91", "63.5795, 46.0812, -13.0299, 0.23", "64.7499, 46.8786, -12.3238, 0.68", "66.3821, 48.0629, -11.2962, 0.23", "67.5508, 49.0046, -10.5012, 0.68", "68.9987, 50.3439, -9.54873, 0.23", "70.3541, 51.6755, -8.6815, 0.68", "71.0128, 52.3631, -8.29615, 0.23", "71.6797, 53.0628, -7.94962, 0.91", "73.2029, 54.5212, -7.33732, 0.23", "74.3802, 55.509, -6.9507, 0.68", "76.1167, 56.7938, -6.51628, 0.23", "77.2376, 57.4894, -6.27894, 0.68", "79.6042, 58.822, -5.71261, 0.23", "81.8446, 59.9935, -5.16544, 0.91", "83.3783, 60.7575, -4.87482, 0.23", "84.1747, 61.1505, -4.73377, 0.23", "86.8823, 62.5916, -4.28636, 0.68", "89.072, 63.887, -3.94596, 0.23", "90.3725, 64.7983, -3.76669, 0.91", "93.1455, 67.0026, -3.55896, 0.23", "93.9238, 67.6677, -3.56637, 0.23", "95.1893, 68.8094, -3.71374, 0.91", "97.0459, 70.5413, -4.19923, 0.23", "98.389, 71.8395, -4.67988, 0.91", "100.405, 73.8284, -5.44453, 0.23", "101.877, 75.2917, -6.0209, 0.68", "103.639, 76.9564, -6.79206, 0.23", "104.843, 78.0175, -7.40759, 0.23", "105.981, 78.9553, -8.12316, 0.91", "114.548, 82.9177, -8.05604, 0.91", "123.579, 85.0432, -6.15341, 0.91", "133.055, 85.3443, -6.34631, 0.91" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "54.2983, 39.4277, -17.6049, 0.23", "56.0222, 39.3459, -20.1512, 0.23", "57.4827, 39.2556, -22.1938, 0.68", "59.6124, 39.0798, -25.0993, 1.36", "62.0682, 38.8129, -28.2666, 0.23", "63.3024, 38.6675, -29.7381, 0.45", "65.3404, 38.4376, -32.0324, 0.45", "67.0679, 38.2601, -33.7102, 0.23", "68.6093, 38.0802, -35.0145, 1.14", "69.8599, 37.9705, -35.8938, 1.14", "71.3743, 37.9213, -36.7734, 0.45", "75.3729, 38.1145, -38.7629, 0.23", "77.1844, 38.2927, -39.4928, 1.14", "78.4879, 38.4284, -39.9329, 0.23", "80.1268, 38.6489, -40.3953, 0.23", "82.5475, 38.9807, -41.0637, 0.91", "85.1554, 39.3431, -41.8514, 0.23", "85.8586, 39.4404, -42.0518, 0.68", "86.9777, 39.5814, -42.424, 0.68", "88.5706, 39.7589, -43.1075, 0.23", "91.1882, 40.0124, -44.2761, 0.91", "94.3623, 40.4238, -45.7321, 0.23", "95.9044, 40.6303, -46.4584, 1.14", "97.0932, 40.7724, -46.9959, 1.14", "100.974, 41.2232, -48.6838, 0.23", "103.012, 41.448, -49.5165, 0.68", "104.522, 41.6552, -49.9971, 0.23", "107.637, 42.1819, -50.722, 1.14", "110.705, 42.8853, -51.2931, 0.23", "112.201, 43.348, -51.4597, 0.91", "113.089, 43.7025, -51.5124, 1.36", "115.823, 45.0727, -51.6972, 0.23", "117.643, 46.1303, -51.7567, 0.91", "118.918, 46.9709, -51.7582, 0.91", "120.878, 48.368, -51.7804, 0.23", "122.837, 49.7301, -51.819, 0.91", "125.761, 51.6175, -51.9306, 0.23", "127.639, 52.736, -52.0418, 0.91", "130.11, 54.0341, -52.166, 0.23", "130.828, 54.3837, -52.1943, 0.23", "132.841, 55.3089, -52.258, 0.23", "135.335, 56.3731, -52.2654, 0.68", "137.183, 57.0873, -52.2894, 0.23", "139.245, 57.8912, -52.3015, 0.23", "141.414, 58.6892, -52.2751, 0.68", "150.987, 59.3862, -57.2531, 0.68" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "21.673, 60.0753, -10.203, 0.23", "19.9773, 61.171, -10.0334, 0.23", "18.3374, 62.3346, -9.98114, 0.91", "15.9104, 64.367, -10.0217, 0.23", "14.998, 65.3033, -10.1776, 1.14", "14.2174, 66.2677, -10.3977, 0.23", "13.4319, 67.4021, -10.6826, 0.68", "12.7346, 68.8078, -11.1253, 0.23", "12.149, 70.4772, -11.7727, 1.36", "11.4738, 73.2599, -12.9772, 0.23", "11.2089, 74.7169, -13.6287, 0.91", "10.9915, 76.1634, -14.2779, 0.23", "10.7894, 77.8564, -14.9963, 0.68", "10.6396, 79.3002, -15.5554, 0.23", "10.5775, 80.3129, -15.9278, 1.14", "10.5795, 82.1168, -16.5616, 0.23", "10.628, 83.3608, -17.0247, 0.23", "10.7015, 84.5269, -17.4589, 0.91", "10.8284, 85.9659, -17.9693, 0.23", "10.997, 87.5698, -18.504, 0.23", "11.267, 89.6391, -19.1816, 1.14", "11.4246, 90.6357, -19.4852, 1.14", "11.7693, 92.4822, -20.0697, 0.23", "12.0447, 93.9527, -20.5201, 0.23", "12.2697, 95.1318, -20.8403, 0.23", "12.4218, 96.0983, -21.098, 0.23", "12.5135, 96.9758, -21.3417, 0.45", "12.4987, 98.9773, -22.0979, 0.23", "12.3656, 99.9508, -22.5326, 0.91", "12.1373, 100.887, -23.0303, 0.91", "11.7256, 102.291, -23.8498, 0.68", "11.1306, 104.289, -25.109, 1.36", "10.437, 106.666, -26.6902, 0.23", "10.2292, 107.603, -27.3411, 0.23", "10.0669, 109.026, -28.3583, 0.23", "10.1125, 109.97, -29.0434, 1.14", "10.6051, 111.61, -30.1208, 0.23", "10.7931, 111.944, -30.312, 0.68", "12.2549, 113.908, -31.2902, 0.23", "12.6539, 114.412, -31.5148, 1.14", "13.6383, 115.686, -31.9755, 0.23", "14.9272, 117.342, -32.5438, 0.91", "15.6435, 118.255, -32.8088, 0.23", "16.8148, 119.789, -33.2059, 0.68", "17.6496, 120.901, -33.4116, 0.68", "18.4516, 122.028, -33.5999, 0.23", "17.1247, 130.951, -35.884, 0.23", "17.522, 140.096, -37.4964, 0.23" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "21.673, 60.0753, -10.203, 0.23", "22.1012, 60.5626, -10.2436, 0.23", "22.7876, 61.3257, -10.3975, 1.14", "23.775, 62.4159, -10.6651, 0.23", "24.3447, 63.0584, -10.8258, 0.68", "24.8452, 63.6322, -10.9681, 0.23", "25.4088, 64.285, -11.1283, 0.68", "26.3039, 65.3892, -11.4363, 0.23", "26.9097, 66.2097, -11.6738, 0.91", "27.4929, 67.0898, -11.9028, 0.23", "27.6873, 67.3889, -11.9548, 0.91", "28.3912, 68.4946, -12.055, 0.23", "29.1608, 69.7156, -12.0947, 0.91", "29.886, 70.8735, -12.0542, 0.23", "30.1902, 71.3593, -12.0212, 0.91", "31.1072, 72.7194, -11.8741, 0.23", "31.4391, 73.1425, -11.7961, 1.14", "31.7387, 73.4506, -11.711, 1.14", "32.2994, 73.8711, -11.5377, 0.23", "33.1069, 74.3391, -11.3152, 0.91", "34.0178, 74.7256, -11.119, 0.23", "35.1833, 75.0817, -10.9515, 0.23", "35.9571, 75.223, -10.8381, 0.91", "37.1118, 75.3315, -10.6826, 0.23", "37.7944, 75.3566, -10.6009, 0.91", "39.2635, 75.347, -10.4666, 0.23", "40.1832, 75.324, -10.4159, 0.68", "42.0402, 75.2551, -10.3923, 0.23", "42.7804, 75.2182, -10.4002, 0.68", "43.3171, 75.1887, -10.4315, 0.23", "44.2338, 75.1355, -10.5088, 0.91", "44.8084, 75.0936, -10.5849, 0.23", "45.4371, 75.0527, -10.6982, 0.23", "45.9027, 75.0289, -10.8065, 0.23", "46.907, 74.9971, -11.0234, 0.91", "47.3761, 74.9937, -11.1185, 0.23", "48.0858, 75.0253, -11.2912, 0.68", "49.2528, 75.1431, -11.611, 0.23", "49.7412, 75.2296, -11.7748, 0.91", "50.67, 75.4693, -12.1303, 0.23", "51.1549, 75.6153, -12.3294, 0.91", "52.4743, 76.0685, -12.9092, 0.23", "53.2533, 76.3772, -13.2859, 0.91", "54.0295, 76.6936, -13.7297, 0.23", "54.7366, 77.0129, -14.1935, 0.68", "58.9056, 79.4722, -15.3209, 0.68", "63.0016, 81.4943, -17.3113, 0.68", "67.1961, 83.759, -18.7376, 0.68", "71.1942, 86.396, -20.0491, 0.68" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-197.704, -105.18, 5.01445, 0.23", "-199.131, -107.019, 5.21837, 0.23", "-199.997, -108.211, 5.26748, 0.68", "-200.757, -109.305, 5.27676, 0.23", "-201.838, -110.883, 5.26545, 0.45", "-203.714, -113.658, 5.22269, 0.23", "-204.917, -115.424, 5.18453, 0.23", "-206.063, -117.225, 5.09097, 0.91", "-207.049, -118.816, 5.06428, 0.23", "-207.462, -119.506, 5.05207, 0.23", "-208.068, -120.55, 5.03569, 0.91", "-208.888, -122.094, 5.0054, 0.23", "-209.319, -122.994, 5.03184, 0.91", "-210.399, -125.782, 5.026, 0.23", "-211.065, -127.94, 4.89293, 0.23", "-211.641, -129.979, 4.74777, 0.23", "-212.197, -132.197, 4.55721, 0.23", "-212.641, -134.32, 4.32994, 0.68", "-213.158, -137.222, 3.91995, 0.23", "-213.426, -139.558, 3.43693, 0.23" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-197.704, -105.18, 5.01445, 0.23", "-201.639, -106.373, 3.33636, 0.23", "-204.478, -107.275, 2.30164, 0.45", "-207.39, -108.191, 1.45893, 0.23", "-208.824, -108.666, 1.02557, 0.23", "-209.815, -109.003, 0.733081, 0.23", "-211.1, -109.474, 0.296602, 0.68", "-214.109, -110.733, -0.695586, 0.23", "-215.669, -111.464, -1.20753, 0.45", "-218.7, -113.014, -2.27237, 0.23", "-221.958, -114.704, -3.45256, 0.91", "-225.158, -116.336, -4.61966, 0.23", "-227.778, -117.714, -5.59478, 0.91", "-229.189, -118.446, -6.12223, 0.23", "-230.051, -118.897, -6.4505, 0.91", "-231.631, -119.666, -6.9851, 0.23", "-233.622, -120.666, -7.90444, 0.68", "-236.176, -121.968, -9.24948, 0.23", "-237.788, -122.808, -10.2364, 0.68", "-239.614, -123.818, -11.3835, 0.23", "-240.942, -124.633, -12.3094, 0.91", "-245.229, -127.446, -15.4591, 0.23", "-247.139, -128.761, -16.9416, 0.23", "-248.379, -129.609, -17.9374, 0.23", "-250.791, -131.244, -19.8356, 0.91", "-253.337, -133.004, -21.8325, 0.23", "-254.771, -134.013, -22.9053, 0.23", "-256.044, -134.899, -23.8101, 0.68", "-258.189, -136.467, -25.4485, 0.23", "-259.586, -137.516, -26.5514, 0.91", "-261.728, -139.154, -28.2998, 0.23", "-263.714, -140.655, -29.787, 0.91", "-266.238, -142.683, -31.61, 0.23", "-267.367, -143.621, -32.3917, 0.23", "-268.982, -144.994, -33.424, 0.68", "-270.568, -146.361, -34.3377, 0.23", "-272.217, -147.794, -35.1459, 1.14", "-273.976, -149.33, -35.9486, 0.23", "-275.632, -150.748, -36.5886, 0.23", "-277.78, -152.651, -37.403, 0.91", "-279.693, -154.349, -38.0624, 0.23", "-281.975, -156.489, -38.9745, 1.14", "-282.953, -157.426, -39.4285, 0.23", "-283.703, -158.104, -39.7961, 0.91", "-285.504, -159.754, -40.6891, 0.23", "-287.607, -161.714, -41.873, 1.14", "-290.774, -164.664, -43.8384, 0.23", "-291.958, -165.775, -44.6086, 0.23", "-293.44, -167.268, -45.6354, 0.45", "-301.986, -173.729, -49.2382, 0.45" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "12.1096, -35.9791, 33.5556, 0.23", "13.3689, -37.1442, 34.4492, 0.23", "14.6976, -38.4415, 35.4301, 0.91", "17.9269, -41.604, 37.7496, 0.23", "20.2674, -43.87, 39.3966, 0.91", "23.5209, -47.0014, 41.5553, 0.23", "24.5997, -48.0856, 42.2545, 0.23", "26.917, -50.6518, 43.7102, 0.23", "27.6434, -51.5755, 44.2847, 0.68", "28.9627, -53.4897, 45.4925, 0.23", "29.9763, -55.245, 46.7578, 0.91", "31.434, -58.4279, 49.3061, 0.23", "31.6878, -59.0471, 49.8765, 0.91", "33.6613, -64.099, 54.861, 0.23", "34.0761, -65.1135, 55.936, 0.91", "35.2608, -67.5407, 58.909, 0.23", "35.9388, -68.5583, 60.4691, 0.91", "38.5053, -71.2392, 65.5196, 0.23", "39.2485, -71.8309, 66.7131, 0.23", "40.2821, -72.4954, 68.1363, 0.91", "43.5536, -74.3461, 72.2472, 0.23", "47.2325, -76.19, 76.7129, 0.23", "50.8514, -77.9498, 81.024, 0.23", "53.4238, -79.2455, 84.0583, 0.23", "56.6301, -80.9135, 87.9653, 0.23", "58.393, -81.876, 90.137, 0.91", "62.7005, -84.2503, 94.9741, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "12.1096, -35.9791, 33.5556, 0.23", "12.6661, -40.4385, 33.8558, 0.23", "12.9903, -43.1259, 34.1537, 0.23", "13.4504, -47.1963, 34.6632, 0.91", "13.7681, -50.5813, 35.2124, 0.23", "13.888, -52.0965, 35.4698, 0.23", "14.1044, -54.4081, 35.8657, 1.14", "14.5025, -58.2953, 36.6095, 0.23", "14.8641, -60.8746, 37.1121, 0.23", "15.4212, -63.6788, 37.6283, 0.91", "16.1251, -66.2374, 38.0184, 0.23", "17.1755, -69.1503, 38.431, 0.23", "17.7754, -70.5075, 38.5925, 0.91", "18.7536, -72.5133, 38.8965, 0.68", "20.1437, -75.2941, 39.5001, 0.23", "20.8894, -76.8233, 39.8839, 0.91", "22.8568, -81.1202, 41.2752, 0.23", "23.5589, -82.9552, 41.9386, 0.91", "25.2645, -88.3729, 43.9862, 0.23", "25.9148, -91.2693, 45.1483, 0.91", "26.1161, -92.8947, 45.8526, 0.91", "26.2569, -96.3004, 47.3665, 0.23", "26.1377, -98.8062, 48.4718, 0.91", "25.8128, -100.948, 49.4718, 0.23", "25.1807, -103.189, 50.596, 0.91", "24.2427, -105.498, 51.9004, 0.23", "23.6254, -106.703, 52.6523, 1.14", "23.0739, -107.583, 53.2542, 0.23", "20.7222, -111.201, 56.1462, 0.91", "19.473, -113.106, 57.759, 0.23", "18.846, -114.108, 58.5962, 1.14", "18.1176, -115.43, 59.7346, 0.23", "17.4917, -116.805, 60.9722, 0.91", "16.643, -119.333, 63.2922, 0.23", "16.388, -120.471, 64.3176, 0.91", "16.2591, -121.142, 64.9087, 0.23", "15.7211, -124.298, 67.8184, 0.91", "15.2648, -126.892, 70.3604, 0.23", "14.7723, -129.709, 73.1368, 0.91", "14.3717, -131.836, 75.26, 0.23", "14.1133, -133.138, 76.6155, 1.14", "13.5533, -135.696, 79.3119, 0.23", "12.8998, -138.107, 81.7681, 0.91" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "7.2662, -27.4912, -7.96941, 0.23", "6.85571, -30.9782, -6.77581, 0.23", "6.54818, -32.7174, -5.96742, 0.23", "6.15445, -35.0192, -4.76711, 0.91", "6.02115, -35.9414, -4.27958, 0.23", "5.79667, -37.9157, -3.21874, 0.68", "5.56846, -39.7069, -2.13412, 0.23", "5.09525, -42.9103, -0.0406116, 0.68", "4.96025, -43.7713, 0.565335, 0.68", "4.80641, -44.9876, 1.42157, 0.23", "4.58548, -46.7689, 2.66807, 1.14", "4.20595, -50.2427, 4.80232, 0.23", "4.12672, -50.9122, 5.13185, 0.23", "4.05856, -51.6083, 5.40404, 0.23", "3.90382, -53.0032, 5.88275, 1.14", "3.45065, -56.105, 6.91864, 0.23", "3.10812, -58.2649, 7.54879, 1.14", "2.48163, -62.1871, 8.6137, 0.23", "2.00326, -65.0547, 9.4285, 0.23", "1.6839, -67.0144, 9.99801, 0.68", "1.07892, -70.8324, 11.0644, 0.23", "0.82354, -72.4784, 11.4983, 1.14", "0.354197, -75.3942, 12.2658, 0.23", "0.178996, -76.5715, 12.5081, 0.23", "0.0530776, -77.7663, 12.6769, 0.23", "-0.104912, -79.6951, 12.9202, 0.91", "-0.248477, -81.4522, 13.1504, 0.23", "-0.417984, -83.094, 13.4301, 0.91", "-0.647375, -84.7261, 13.8063, 0.23", "-0.986034, -86.5348, 14.3887, 0.91", "-1.58132, -88.7878, 15.2978, 0.23", "-2.78672, -92.884, 17.1457, 0.23", "-3.01334, -93.8178, 17.5293, 0.68", "-3.56053, -96.6736, 18.6844, 1.14", "-3.87169, -99.4826, 19.863, 0.23", "-3.98263, -103.29, 21.4167, 0.23", "-3.8743, -104.957, 22.0369, 0.23", "-3.16406, -110.023, 23.7099, 0.23", "-2.7195, -112.495, 24.4258, 0.68", "-1.7328, -117.568, 25.7742, 0.23", "-1.27692, -119.53, 26.2707, 0.68", "-0.384006, -122.916, 27.144, 0.23", "0.0936482, -125.014, 27.7475, 0.23", "0.451344, -127.266, 28.5056, 0.91", "1.13086, -132.432, 29.9316, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.2662, -27.4912, -7.96941, 0.23", "6.73429, -28.383, -10.2806, 0.23", "6.16229, -29.5868, -12.6579, 0.68", "5.55828, -31.2336, -15.612, 0.68", "5.26388, -32.1634, -17.1424, 0.68", "4.99282, -33.0942, -18.54, 0.68", "4.60337, -34.4467, -20.4613, 0.23", "4.25893, -35.7421, -21.9624, 0.23", "3.85993, -37.4885, -23.7228, 0.23", "3.56034, -38.7033, -24.8543, 0.23", "3.12779, -40.3328, -26.4097, 1.14", "2.87053, -41.2116, -27.252, 1.14", "1.98954, -43.402, -29.3277, 0.23", "1.17885, -45.0654, -30.8328, 0.91", "0.290503, -46.8403, -32.3465, 0.91", "-0.0434758, -47.5159, -32.9184, 0.91", "-1.10641, -49.844, -34.9313, 0.23", "-2.11756, -52.234, -36.9185, 0.23", "-3.12102, -54.7334, -38.9408, 0.23", "-3.75363, -56.4555, -40.265, 0.23", "-4.31897, -58.3156, -41.6767, 0.91", "-5.16991, -61.7075, -44.2414, 0.23", "-5.7076, -64.4363, -46.32, 0.91", "-5.86071, -65.4769, -47.1194, 0.91", "-6.05973, -66.901, -48.1587, 0.23", "-6.3364, -68.7323, -49.4135, 0.68", "-6.69477, -70.952, -50.9307, 0.23", "-6.86316, -71.8929, -51.5752, 0.68", "-7.26233, -74.0028, -53.1197, 0.23", "-7.47548, -74.9173, -53.8161, 1.14", "-7.88165, -76.3075, -54.9232, 1.14", "-8.64762, -78.4198, -56.7147, 0.23", "-9.56253, -80.5547, -58.7576, 0.23", "-10.1277, -81.6192, -59.9368, 0.91", "-10.722, -82.5422, -61.1102, 0.91", "-11.6792, -83.7342, -62.6924, 0.23", "-12.7521, -84.8614, -64.2391, 0.91", "-13.39, -85.4329, -65.0532, 0.91", "-15.0885, -86.6891, -66.9973, 0.23", "-15.9597, -87.3042, -67.9529, 0.23", "-18.1667, -88.8604, -70.3099, 0.68", "-19.1554, -89.6022, -71.36, 0.23", "-19.817, -90.1714, -72.0844, 1.14", "-20.4106, -90.7452, -72.7782, 1.14", "-21.8734, -92.3592, -74.6524, 0.23", "-22.5446, -93.1512, -75.6187, 0.23", "-23.4574, -94.44, -77.1847, 1.14", "-24.2888, -95.8692, -78.8383, 0.23", "-24.5567, -96.46, -79.5351, 0.68", "-24.8578, -97.4016, -80.609, 0.23", "-25.1035, -98.6067, -81.9243, 0.23", "-25.1966, -100.231, -83.5383, 0.68", "-25.1187, -102.241, -85.3966, 0.23", "-24.8959, -104.207, -86.984, 0.23", "-24.5547, -106.287, -88.4256, 0.45", "-24.26, -107.538, -89.1621, 1.59", "-23.3009, -111.033, -90.8998, 0.23", "-23.0681, -111.809, -91.2378, 0.23", "-22.3644, -114.134, -92.0756, 1.14", "-21.905, -115.662, -92.5603, 1.14", "-21.097, -118.266, -93.3699, 0.23", "-20.5915, -119.874, -93.8612, 0.91", "-19.6275, -123.065, -94.8142, 0.23", "-19.2523, -124.348, -95.257, 0.23", "-18.7262, -126.138, -95.9651, 1.14", "-18.4313, -127.174, -96.4063, 1.14", "-17.227, -131.367, -98.3066, 0.23", "-16.6094, -133.364, -99.2536, 1.14", "-15.7089, -136.077, -100.673, 0.23", "-15.0803, -137.808, -101.658, 1.14", "-14.8819, -138.308, -101.954, 1.14", "-14.344, -139.761, -102.716, 0.23", "-14.1034, -140.553, -103.009, 0.68", "-13.6362, -142.485, -103.329, 0.23", "-13.3344, -144.21, -103.12, 1.14", "-13.1527, -145.609, -102.763, 1.14", "-12.7276, -148.981, -101.66, 0.23", "-12.4851, -150.786, -100.978, 0.91", "-12.2973, -151.801, -100.609, 0.91", "-11.5512, -154.849, -99.5883, 0.23", "-11.1365, -156.254, -99.2335, 1.14", "-10.508, -158.075, -99.0488, 1.36", "-9.47274, -160.693, -99.1543, 0.23", "-8.34163, -163.548, -99.5028, 0.23", "-7.60398, -165.471, -99.827, 0.91", "-7.03089, -167.018, -100.153, 0.91", "-5.77263, -170.615, -100.903, 0.23", "-5.22892, -172.21, -101.247, 1.14", "-4.2231, -175.315, -101.878, 0.23", "-3.70375, -177.153, -102.217, 1.14", "-3.21816, -179.104, -102.589, 0.23", "-2.95522, -180.203, -102.809, 0.91", "-2.41537, -183.326, -103.649, 0.23", "-2.26465, -185.212, -104.411, 1.59", "-2.4048, -187.541, -105.794, 0.23", "-2.74029, -188.823, -106.684, 0.91", "-2.99714, -189.358, -107.111, 0.91", "-4.5306, -191.641, -109.06, 0.23", "-5.53989, -192.776, -110.098, 1.14", "-6.31952, -193.529, -110.777, 1.14", "-8.58, -195.699, -112.568, 0.23", "-9.28059, -196.475, -113.12, 0.91", "-10.4795, -197.954, -114.024, 0.23", "-10.9442, -198.633, -114.355, 0.91", "-11.8201, -200.337, -115.174, 0.23", "-12.4336, -201.999, -116.082, 0.91", "-12.9325, -204.341, -117.698, 0.23", "-13.0507, -205.426, -118.554, 0.23", "-13.0513, -206.979, -120.018, 1.14", "-12.8631, -209.182, -122.334, 0.23", "-12.5157, -210.778, -124.216, 1.36", "-11.9622, -212.743, -126.741, 0.23", "-11.581, -213.835, -128.196, 1.14", "-11.0298, -215.27, -130.089, 0.23", "-10.676, -216.199, -131.318, 0.68", "-9.94804, -218.339, -134.051, 0.23", "-9.65143, -219.233, -135.118, 0.91", "-9.19797, -220.801, -136.746, 0.23", "-8.93524, -221.87, -137.714, 0.23", "-8.62507, -223.259, -138.834, 0.23", "-11.3886, -230.896, -144.589, 0.23", "-14.743, -238.281, -150.372, 0.23", "-17.9509, -246.087, -155.647, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "91.3608, -150.085, -127.432, 0.23", "95.5836, -155.969, -133.273, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "91.3608, -150.085, -127.432, 0.23", "94.1264, -157.278, -134.214, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "44.4188, 32.9497, -7.86642, 0.23", "45.0349, 32.7506, -8.28588, 0.23", "45.6086, 32.6318, -8.68918, 0.68", "46.4649, 32.4958, -9.27688, 0.23", "47.11, 32.4404, -9.70833, 0.91", "47.7766, 32.411, -10.1688, 0.23", "48.3295, 32.4069, -10.5642, 1.14", "49.5537, 32.4603, -11.4218, 0.23", "50.1092, 32.5156, -11.8384, 0.68", "51.5778, 32.7024, -12.9426, 0.23", "52.2624, 32.7857, -13.4533, 0.68", "53.5018, 32.9267, -14.3324, 0.23", "54.2938, 33.0115, -14.8756, 0.68", "56.0168, 33.2035, -16.0136, 0.23", "57.2858, 33.3554, -16.8426, 0.23", "58.4208, 33.4881, -17.5558, 0.68", "59.626, 33.6307, -18.2713, 0.23", "60.3588, 33.7242, -18.6826, 0.68", "61.2703, 33.868, -19.1656, 0.23", "62.2688, 34.0479, -19.6289, 0.23", "62.7149, 34.1602, -19.8401, 0.23", "62.9966, 34.2618, -19.9779, 0.23", "63.564, 34.4883, -20.2524, 0.23", "64.5425, 34.8948, -20.6764, 0.68", "65.1175, 35.1497, -20.9007, 0.23", "65.5764, 35.3857, -21.0665, 0.23", "66.5031, 35.9227, -21.4256, 1.36", "69.6587, 36.0717, -23.2412, 1.36", "72.7369, 35.6709, -25.143, 1.36", "75.9743, 35.8498, -26.8057, 1.36" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "44.4188, 32.9497, -7.86642, 0.23", "45.255, 33.3108, -7.8953, 0.23", "47.6006, 34.3236, -7.97633, 1.14", "50.223, 35.4559, -8.06692, 0.23", "51.4188, 35.9722, -8.10823, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-43.0491, -18.121, -44.2527, 0.23", "-49.9629, -27.395, -54.0017, 0.23", "-56.7909, -36.2202, -64.2295, 0.23", "-61.9761, -46.4377, -74.0356, 0.23", "-65.4458, -57.6636, -83.4133, 0.23", "-69.9395, -66.7134, -94.6351, 0.23", "-72.8404, -76.0709, -106.091, 0.23", "-76.1031, -86.6011, -116.333, 0.23", "-77.624, -96.0457, -127.96, 0.23", "-77.6505, -106.561, -138.674, 0.23", "-76.8956, -115.965, -150.384, 0.23" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-43.0491, -18.121, -44.2527, 0.23", "-46.8266, -23.2178, -49.7676, 0.23", "-51.9367, -28.794, -53.4434, 0.23", "-56.1182, -34.9836, -57.2472, 0.23", "-60.4084, -41.1192, -61.0234, 0.23", "-64.5774, -46.4357, -66.0219, 0.23", "-69.8239, -51.8303, -69.7888, 0.23", "-74.5847, -57.8791, -73.1363, 0.23", "-79.3692, -63.6445, -76.9362, 0.23", "-82.9565, -69.3862, -81.8863, 0.23", "-86.7282, -75.125, -86.7041, 0.23" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "13.1523, 9.48742, -65.3215, 0.23", "16.5471, 7.57167, -73.365, 0.23", "20.1433, 5.07456, -81.1561, 0.23", "25.7848, 3.60319, -87.9285, 0.23", "30.5652, 3.09867, -95.4562, 0.23", "37.0016, 3.90076, -101.562, 0.23", "42.9857, 6.03895, -107.769, 0.23", "50.1718, 8.94279, -112.05, 0.23", "57.2888, 10.6149, -117.102, 0.23", "64.9567, 12.3677, -121.225, 0.23", "72.754, 13.5991, -125.318, 0.23", "80.8816, 13.3046, -128.977, 0.23" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "13.1523, 9.48742, -65.3215, 0.23", "19.7475, 10.6934, -74.9158, 0.23", "26.2135, 11.5942, -84.634, 0.23", "34.173, 10.4126, -93.1488, 0.23", "42.7876, 7.96336, -100.694, 0.23", "50.2876, 4.83249, -109.117, 0.23", "58.1988, 0.499814, -116.553, 0.23", "66.9329, -4.31187, -122.636, 0.23", "74.8247, -9.82494, -129.228, 0.23", "82.9099, -16.361, -134.467, 0.23", "89.7422, -24.161, -139.675, 0.23", "97.148, -32.2915, -143.333, 0.23" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-148.589, 89.5599, 5.19064, 0.23", "-150.473, 91.7815, 5.59293, 0.23", "-152.085, 93.5406, 5.95936, 0.23", "-153.957, 95.6578, 6.46321, 0.45", "-155.139, 97.0314, 6.87962, 0.23", "-156.331, 98.467, 7.51056, 0.68", "-157.898, 100.355, 8.34006, 0.23", "-159.72, 102.508, 9.45861, 0.68", "-160.66, 103.654, 10.0998, 0.23", "-161.788, 105.03, 11.0483, 0.68", "-163.865, 107.71, 13.3062, 0.23" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-148.589, 89.5599, 5.19064, 0.23", "-151.147, 90.9575, 5.59154, 0.23", "-152.741, 91.716, 6.03801, 0.23", "-154.461, 92.5337, 6.51934, 0.23", "-157.451, 93.9556, 7.3563, 0.68", "-160.853, 95.5738, 8.30887, 0.23", "-164.921, 97.5082, 9.44753, 0.23", "-168.693, 99.2792, 10.7782, 0.23" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "71.1942, 86.396, -20.0491, 0.23", "80.3037, 91.239, -22.0723, 0.23", "89.064, 95.6779, -25.8729, 0.23", "97.2107, 101.084, -29.7245, 0.23", "103.68, 107.4, -35.0507, 0.23", "111.243, 113.885, -38.2898, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "71.1942, 86.396, -20.0491, 0.23", "77.9996, 90.0084, -21.2567, 0.23", "84.4206, 94.1716, -22.6827, 0.23", "90.9735, 98.3386, -23.2057, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "12.8998, -138.107, 81.7681, 0.23", "14.1196, -140.362, 82.7052, 0.23", "15.2064, -142.457, 83.4745, 0.68", "16.4896, -145.06, 84.3068, 0.23", "17.3011, -146.756, 84.7905, 0.91", "17.905, -148.012, 85.1512, 0.23", "18.3395, -148.893, 85.4353, 0.23", "19.057, -150.313, 85.9522, 0.68", "19.8317, -151.723, 86.4312, 0.23", "20.4082, -152.715, 86.8184, 0.91", "21.6534, -154.708, 87.8728, 0.23", "23.2724, -157.116, 89.3761, 0.91", "24.1141, -158.288, 90.2111, 0.23", "25.0652, -159.525, 91.2039, 0.91", "26.922, -161.907, 93.3236, 0.23", "28.3651, -163.779, 95.0716, 0.23", "29.0567, -164.676, 95.9389, 0.91", "30.135, -166.089, 97.3562, 0.23", "30.9832, -167.242, 98.5559, 0.91", "32.6361, -169.466, 100.952, 0.23", "33.2781, -170.285, 101.784, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "12.8998, -138.107, 81.7681, 0.23", "11.6421, -140.852, 83.8174, 0.23", "10.2211, -143.995, 86.0746, 0.23", "9.17344, -146.335, 87.8613, 0.68", "8.64256, -147.596, 88.9042, 0.23", "8.28294, -148.414, 89.6035, 0.91", "6.83449, -151.509, 92.4357, 0.23", "6.28013, -152.649, 93.5373, 0.91", "4.93521, -155.227, 96.1117, 0.23", "3.66637, -157.62, 98.4771, 0.23", "3.16631, -158.618, 99.4052, 0.91", "1.582, -161.865, 102.09, 0.23", "1.15051, -162.71, 102.655, 0.91", "0.501491, -164.049, 103.324, 0.23", "-0.104371, -165.38, 103.786, 1.14", "-1.33657, -168.207, 104.489, 0.23", "-2.54616, -171.229, 105.131, 0.91", "-3.82628, -174.573, 105.617, 0.23", "-4.87506, -177.315, 106.036, 0.68", "-5.88521, -179.812, 106.433, 0.23", "-6.69554, -181.66, 106.714, 0.91" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "51.4188, 35.9722, -8.10823, 0.23", "53.6376, 35.0118, -8.19075, 0.23", "57.0629, 33.9687, -8.51666, 0.23", "59.696, 33.4153, -8.85608, 0.91", "61.2781, 33.201, -9.06727, 0.23", "62.4975, 33.0905, -9.2218, 0.91", "64.975, 32.968, -9.60352, 0.23", "67.8159, 33.0689, -10.0872, 0.23", "70.2354, 33.2981, -10.5973, 0.23", "73.1644, 33.6093, -11.288, 0.23", "75.5947, 33.8672, -11.9261, 0.91", "77.7988, 34.0913, -12.4997, 0.23", "79.3974, 34.2513, -12.8817, 0.68", "81.3455, 34.4188, -13.2902, 0.23", "82.8793, 34.557, -13.5489, 0.23", "83.5739, 34.6319, -13.6333, 0.23", "85.8544, 34.9096, -13.7226, 0.91", "87.5547, 35.1448, -13.6579, 0.23", "88.7888, 35.3538, -13.5463, 0.91", "91.6251, 35.9935, -13.3009, 0.23", "94.0295, 36.683, -13.1138, 0.23", "95.6484, 37.2302, -13.0029, 0.23", "97.0244, 37.7538, -12.9314, 0.68", "99.3636, 38.6954, -12.8842, 0.23", "102.911, 40.1781, -12.9145, 0.23", "105.053, 41.119, -13.0889, 0.23", "106.083, 41.563, -13.2348, 0.23", "107.514, 42.1543, -13.5343, 0.23", "108.794, 42.6347, -13.8537, 0.68", "109.479, 42.836, -14.0557, 0.68", "111.265, 43.0947, -14.4998, 0.23", "112.695, 43.2121, -14.8862, 0.68", "113.716, 43.2661, -15.1673, 0.23", "114.929, 43.3307, -15.4887, 0.68", "117.248, 43.4827, -16.0305, 0.23", "119.286, 43.5761, -16.4046, 0.91" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "51.4188, 35.9722, -8.10823, 0.68", "52.8251, 37.0076, -8.60227, 0.68", "53.7664, 37.6427, -8.89379, 0.68", "56.0074, 39.0622, -9.53179, 0.23", "57.5712, 40.0168, -9.92576, 0.23", "59.7612, 41.2831, -10.4079, 0.91", "62.4026, 42.7525, -10.9292, 0.23", "63.0564, 43.1031, -11.0392, 1.36", "63.7158, 43.4513, -11.1196, 1.36", "65.6614, 44.4805, -11.1007, 0.23", "67.591, 45.6387, -10.8812, 0.23", "68.6422, 46.3503, -10.692, 0.23", "69.4706, 46.9929, -10.5231, 1.14", "70.9342, 48.2647, -10.3391, 1.14", "73.497, 50.7259, -10.3119, 0.23", "74.7622, 52.0578, -10.5422, 0.68", "75.946, 53.2872, -10.9575, 0.23", "77.577, 54.812, -11.7043, 0.68", "79.971, 56.7673, -12.9891, 0.23", "81.5019, 57.7872, -13.8451, 0.23", "83.6619, 58.9238, -15.0758, 1.14", "86.0501, 59.769, -16.2128, 0.23", "88.148, 60.1932, -16.9756, 0.68", "89.1634, 60.2588, -17.212, 0.23", "92.0425, 60.1718, -17.5231, 0.91", "93.3332, 60.083, -17.5749, 0.91", "95.4985, 59.8961, -17.5735, 0.23", "96.9058, 59.8036, -17.5844, 0.23", "97.724, 59.7906, -17.6011, 0.23", "99.9978, 59.9147, -17.6937, 0.68", "102.483, 60.2996, -17.8641, 0.23", "103.692, 60.5817, -17.9802, 0.68", "104.908, 60.9811, -18.1544, 0.23", "106.011, 61.4062, -18.4016, 0.23", "107.357, 61.9309, -18.7791, 0.23", "108.317, 62.3008, -19.0863, 0.68", "110.823, 63.1798, -19.9337, 0.23", "112.667, 63.8049, -20.5892, 1.14", "115.28, 64.63, -21.5603, 0.23", "117.567, 65.2811, -22.4346, 0.23", "119.186, 65.7135, -23.0607, 0.91", "121.973, 66.3491, -24.0924, 0.23", "131.048, 72.091, -26.3655, 0.23", "140.261, 77.0972, -29.6867, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-76.8956, -115.965, -150.384, 0.23", "-77.8289, -124.629, -155.219, 0.23", "-80.5993, -133.299, -159.383, 0.23", "-83.0511, -142.665, -161.942, 0.23", "-84.456, -152.329, -164.085, 0.23", "-83.6771, -162.199, -165.31, 0.23", "-82.414, -172.114, -165.187, 0.23", "-79.8184, -181.754, -165.184, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-76.8956, -115.965, -150.384, 0.23", "-79.1273, -121.296, -159.088, 0.23", "-82.2613, -127.488, -166.885, 0.23", "-84.1544, -132.841, -175.65, 0.23", "-86.6004, -138.946, -183.747, 0.23", "-88.9656, -143.323, -192.961, 0.23", "-91.1104, -146.626, -202.689, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-86.7282, -75.125, -86.7041, 0.23", "-93.9608, -84.3614, -93.4494, 0.23", "-101.448, -94.0944, -99.1136, 0.23", "-109.31, -103.921, -104.072, 0.23", "-116.918, -113.845, -109.214, 0.23", "-124.607, -122.769, -115.9, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-86.7282, -75.125, -86.7041, 0.23", "-91.1904, -81.3252, -91.7289, 0.23", "-93.889, -88.1033, -97.1712, 0.23", "-95.2481, -94.817, -103.138, 0.23", "-97.628, -101.518, -108.813, 0.23", "-101.302, -108.032, -114.038, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "80.8816, 13.3046, -128.977, 0.23", "85.9563, 12.8487, -134.178, 0.23", "89.5869, 12.2846, -140.48, 0.23", "92.4759, 11.589, -147.146, 0.23", "96.0104, 11.9401, -153.509, 0.23", "100.103, 12.5738, -159.493, 0.23", "104.853, 12.8024, -164.999, 0.23", "110.106, 12.5945, -170.029, 0.23", "115.27, 12.3455, -175.15, 0.23", "121.139, 10.6696, -179.129, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "80.8816, 13.3046, -128.977, 0.23", "88.2262, 13.3869, -135.973, 0.23", "94.3065, 14.0239, -144.07, 0.23", "100.801, 14.3076, -151.862, 0.23", "108.497, 15.5349, -158.318, 0.23", "116.191, 16.8164, -164.763, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "97.148, -32.2915, -143.333, 0.23", "105.829, -35.2642, -150.737, 0.23", "114.879, -38.9285, -157.321, 0.23", "123.816, -41.5051, -164.574, 0.23", "131.391, -46.2445, -172.231, 0.23", "138.816, -50.1154, -180.524, 0.23", "144.992, -54.8482, -189.365, 0.23" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "97.148, -32.2915, -143.333, 0.23", "105.571, -35.5657, -150.614, 0.23", "112.264, -38.7582, -159.551, 0.23", "119.832, -40.9381, -168.096, 0.23", "126.664, -43.0258, -177.264, 0.23", "132.285, -44.3525, -187.354, 0.23" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "111.243, 113.885, -38.2898, 0.23", "117.826, 117.739, -39.8782, 0.23", "124.05, 122.333, -40.7016, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "111.243, 113.885, -38.2898, 0.23", "118.546, 118.477, -41.1195, 0.23", "125.607, 123.481, -43.8248, 0.23", "131.95, 129.802, -45.0061, 0.23", "137.426, 136.905, -45.8077, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "33.2781, -170.285, 101.784, 0.23", "34.7631, -171.853, 103.887, 0.23", "35.5034, -172.635, 104.935, 0.91", "37.4902, -174.733, 107.748, 0.23", "38.2593, -175.545, 108.836, 0.68", "39.7732, -177.143, 110.98, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "33.2781, -170.285, 101.784, 0.23", "33.6384, -172.918, 103.442, 0.23", "34.0845, -176.179, 105.495, 0.68", "34.3674, -178.247, 106.797, 0.23", "34.5654, -179.695, 107.708, 0.91" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-6.69554, -181.66, 106.714, 0.23", "-6.46058, -182.319, 107.25, 0.23", "-6.29607, -182.63, 107.516, 0.68", "-5.5291, -183.817, 108.378, 0.23", "-5.4094, -184.003, 108.513, 0.23", "-5.02559, -184.597, 108.944, 0.23", "-4.50378, -185.404, 109.531, 0.91", "-4.13079, -185.932, 109.94, 0.23", "-3.5362, -186.621, 110.454, 0.68" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-6.69554, -181.66, 106.714, 0.23", "-8.52006, -183.424, 108.966, 0.23", "-10.1835, -184.937, 110.883, 0.91", "-12.6485, -187.119, 113.8, 0.23", "-13.2494, -187.619, 114.515, 0.68", "-15.1906, -189.235, 116.816, 0.23", "-15.7796, -189.733, 117.612, 1.14", "-16.3914, -190.246, 118.558, 1.14", "-18.4713, -192.201, 121.97, 0.23", "-19.8864, -193.619, 124.373, 1.14", "-20.3212, -194.091, 125.167, 1.14", "-22.7432, -196.926, 129.911, 0.23", "-23.4731, -197.862, 131.53, 0.23", "-24.7687, -199.727, 134.869, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "119.286, 43.5761, -16.4046, 0.23", "120.275, 44.4039, -15.5622, 0.23", "120.802, 44.8242, -15.1644, 0.91", "123.854, 47.0441, -13.2364, 0.23", "125.83, 48.2531, -12.2268, 0.68", "127.578, 49.1556, -11.5401, 0.23", "129.344, 49.9799, -10.9723, 0.91", "130.636, 50.4916, -10.6885, 0.23", "132.529, 51.1415, -10.434, 0.68", "135.217, 51.9211, -10.3214, 0.23", "137.963, 52.5972, -10.3201, 0.23", "139.434, 52.9347, -10.3824, 0.23", "140.838, 53.2351, -10.4444, 0.91", "141.827, 53.425, -10.5012, 0.91", "150.307, 56.0379, -9.99148, 0.91", "158.874, 58.2868, -9.21187, 0.91", "167.014, 60.7135, -6.66316, 0.91", "174.938, 64.3376, -5.08523, 0.91" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "119.286, 43.5761, -16.4046, 0.23", "120.094, 43.5342, -16.3963, 0.23", "121.778, 43.4248, -16.3947, 0.45", "123.541, 43.29, -16.4044, 0.23", "125.329, 43.1571, -16.3706, 0.68", "127.2, 43.0436, -16.3195, 0.23", "129.272, 42.929, -16.2586, 0.68", "130.132, 42.8953, -16.2322, 0.23", "131.024, 42.8638, -16.2061, 0.68", "132.814, 42.7978, -16.1683, 0.23", "135.166, 42.7468, -16.0779, 1.14", "136.32, 42.7382, -16.0248, 0.23", "136.873, 42.7382, -15.9716, 0.91", "138.117, 42.7662, -15.8224, 0.23", "138.88, 42.7953, -15.7287, 1.14", "140.478, 42.8561, -15.5429, 0.23", "142.379, 42.9296, -15.2162, 0.91", "144.335, 43.0004, -14.8441, 0.23", "146.229, 43.0725, -14.4877, 0.68", "148.54, 43.1694, -14.0768, 0.23", "149.547, 43.207, -13.8837, 0.68", "151.717, 43.2636, -13.4338, 0.23", "153.805, 43.3058, -12.9956, 0.68", "155.698, 43.3463, -12.5924, 0.23", "157.189, 43.3771, -12.255, 0.23", "160.808, 43.4506, -11.4572, 0.23", "163.242, 43.5141, -10.9819, 0.23", "165.044, 43.5747, -10.685, 0.68", "168.203, 43.7285, -10.1421, 0.23", "170.305, 43.8567, -9.79843, 0.23", "172.404, 44.0265, -9.45289, 0.23", "174.585, 44.2388, -9.15807, 0.45", "175.55, 44.3433, -9.03487, 0.68", "178.81, 44.7205, -8.58943, 0.23", "180.441, 44.9136, -8.36949, 0.68", "183.372, 45.3545, -7.83382, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "140.261, 77.0972, -29.6867, 0.23", "149.029, 81.1353, -31.7713, 0.23", "158.256, 84.5254, -32.8362, 0.23", "167.476, 87.3808, -35.0284, 0.23", "177.067, 89.2547, -36.6657, 0.23", "186.959, 89.595, -37.2953, 0.23", "196.749, 88.1563, -37.8794, 0.23", "206.648, 87.6628, -37.5164, 0.23", "216.483, 87.7281, -36.2367, 0.23", "226.397, 87.9745, -36.3419, 0.23", "236.244, 88.0521, -35.1622, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "140.261, 77.0972, -29.6867, 0.23", "150.491, 81.4862, -31.4462, 0.23", "161.011, 85.3649, -32.67, 0.23", "170.767, 90.6225, -34.6169, 0.23", "180.467, 95.3363, -37.8733, 0.23", "191.018, 98.8803, -39.7397, 0.23", "201.5, 102.941, -40.6205, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_NBC_1ef33fd873_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_44
create dend_56
public dend_56
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_27
create dend_39
public dend_39
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_45
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_4
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_70, id: dend_70, parent: dend_62
create dend_70
public dend_70
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_30
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_5
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_41
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.4999998479938421)
    connect dend_27(0), soma_0(0.4999998479938421)
    connect dend_26(0), soma_0(0.4999998479938421)
    connect dend_15(0), soma_0(0.4999998479938421)
    connect dend_0(0), soma_0(0.4999998479938421)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_70(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.69096, -9.75392, 0.0, 3.54463 ) }
    soma_0 { pt3dadd( 1.52222, -8.84351, 0.0, 6.43815 ) }
    soma_0 { pt3dadd( 1.35347, -7.93311, 0.0, 8.80214 ) }
    soma_0 { pt3dadd( 1.18473, -7.0227, 0.0, 10.0004 ) }
    soma_0 { pt3dadd( 1.01599, -6.11229, 0.0, 10.9716 ) }
    soma_0 { pt3dadd( 0.847242, -5.20188, 0.0, 11.7871 ) }
    soma_0 { pt3dadd( 0.678498, -4.29147, 0.0, 12.5324 ) }
    soma_0 { pt3dadd( 0.509755, -3.38107, 0.0, 13.2727 ) }
    soma_0 { pt3dadd( 0.341011, -2.47066, 0.0, 13.4566 ) }
    soma_0 { pt3dadd( 0.172268, -1.56025, 0.0, 13.5676 ) }
    soma_0 { pt3dadd( 0.00352426, -0.649843, 0.0, 13.7469 ) }
    soma_0 { pt3dadd( -0.165219, 0.260565, 0.0, 13.8983 ) }
    soma_0 { pt3dadd( -0.333963, 1.17097, 0.0, 14.0 ) }
    soma_0 { pt3dadd( -0.502706, 2.08138, 0.0, 13.9192 ) }
    soma_0 { pt3dadd( -0.67145, 2.99179, 0.0, 13.4728 ) }
    soma_0 { pt3dadd( -0.840193, 3.9022, 0.0, 12.9681 ) }
    soma_0 { pt3dadd( -1.00894, 4.8126, 0.0, 12.2669 ) }
    soma_0 { pt3dadd( -1.17768, 5.72301, 0.0, 11.0106 ) }
    soma_0 { pt3dadd( -1.34642, 6.63342, 0.0, 9.31796 ) }
    soma_0 { pt3dadd( -1.51517, 7.54383, 0.0, 7.37652 ) }
    soma_0 { pt3dadd( -1.68391, 8.45424, 0.0, 4.20409 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.62975, 6.93315, -1.86, 3.64 ) }
    dend_44 { pt3dadd( -2.10805, 8.45232, -1.86, 3.64 ) }
    dend_44 { pt3dadd( -3.07777, 11.5324, -1.86, 3.18 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 24/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.38975, -6.9021, 8.54, 2.73 ) }
    dend_27 { pt3dadd( -2.18068, -9.42425, 8.54, 2.73 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.41975, 1.3269, -4.58, 0.68 ) }
    dend_26 { pt3dadd( -4.72851, -0.358125, -5.53416, 0.68 ) }
    dend_26 { pt3dadd( -4.95032, -1.5099, -6.17273, 0.45 ) }
    dend_26 { pt3dadd( -5.4775, -3.77174, -7.35299, 0.45 ) }
    dend_26 { pt3dadd( -6.08152, -6.2859, -8.69666, 0.45 ) }
    dend_26 { pt3dadd( -6.28744, -7.09455, -9.15173, 1.14 ) }
    dend_26 { pt3dadd( -7.0632, -10.1045, -11.0529, 0.23 ) }
    dend_26 { pt3dadd( -7.32433, -11.187, -11.7952, 0.23 ) }
    dend_26 { pt3dadd( -7.80166, -12.8125, -13.0116, 0.91 ) }
    dend_26 { pt3dadd( -8.63519, -14.8501, -14.8335, 0.23 ) }
    dend_26 { pt3dadd( -9.29285, -16.0107, -16.0626, 0.91 ) }
    dend_26 { pt3dadd( -10.3279, -17.6308, -17.9425, 0.23 ) }
    dend_26 { pt3dadd( -10.8669, -18.3564, -18.9468, 0.23 ) }
    dend_26 { pt3dadd( -11.6184, -19.3383, -20.412, 0.68 ) }
    dend_26 { pt3dadd( -12.9305, -21.0782, -23.1191, 0.23 ) }
    dend_26 { pt3dadd( -13.4963, -21.8955, -24.364, 0.23 ) }
    dend_26 { pt3dadd( -13.996, -22.763, -25.5549, 1.14 ) }
    dend_26 { pt3dadd( -15.0758, -25.12, -28.4008, 0.23 ) }
    dend_26 { pt3dadd( -15.3566, -26.0242, -29.4668, 0.23 ) }
    dend_26 { pt3dadd( -15.5624, -27.0728, -30.6957, 1.14 ) }
    dend_26 { pt3dadd( -15.8939, -28.8575, -32.8359, 0.23 ) }
    dend_26 { pt3dadd( -16.1083, -29.7506, -34.1062, 0.23 ) }
    dend_26 { pt3dadd( -16.4193, -30.7515, -35.7204, 0.91 ) }
    dend_26 { pt3dadd( -16.9185, -32.2006, -38.1936, 0.91 ) }
    dend_26 { pt3dadd( -17.4056, -33.3477, -40.4097, 0.23 ) }
    dend_26 { pt3dadd( -17.8718, -34.2166, -42.1885, 0.23 ) }
    dend_26 { pt3dadd( -18.6816, -35.504, -44.8612, 0.68 ) }
    dend_26 { pt3dadd( -19.2452, -36.3316, -46.7124, 0.23 ) }
    dend_26 { pt3dadd( -19.6515, -36.8739, -47.948, 1.14 ) }
    dend_26 { pt3dadd( -20.7702, -38.3331, -50.9526, 0.23 ) }
    dend_26 { pt3dadd( -21.0729, -38.8226, -51.8041, 0.23 ) }
    dend_26 { pt3dadd( -21.3478, -39.462, -52.75, 0.23 ) }
    dend_26 { pt3dadd( -24.8361, -46.0995, -60.4448, 0.23 ) }
    dend_26 { pt3dadd( -28.0743, -53.2089, -67.7975, 0.23 ) }
    dend_26 { pt3dadd( -30.3987, -58.5152, -76.884, 0.23 ) }
    dend_26 { pt3dadd( -33.6584, -62.065, -86.5706, 0.23 ) }
    dend_26 { pt3dadd( -37.9344, -67.6302, -94.7507, 0.23 ) }
    dend_26 { pt3dadd( -44.8876, -71.773, -101.934, 0.23 ) }
    dend_26 { pt3dadd( -51.1694, -76.0869, -109.609, 0.23 ) }
    dend_26 { pt3dadd( -57.4126, -79.4228, -117.809, 0.23 ) }
    dend_26 { pt3dadd( -63.7283, -84.2575, -125.123, 0.23 ) }
    dend_26 { pt3dadd( -68.5792, -88.6005, -133.751, 0.23 ) }
    dend_26 { pt3dadd( -73.7129, -94.474, -141.183, 0.23 ) }
    dend_26 { pt3dadd( -79.1254, -101.268, -147.518, 0.23 ) }
    dend_26 { pt3dadd( -84.8295, -107.284, -154.4, 0.23 ) }
    dend_26 { pt3dadd( -90.0145, -114.71, -160.155, 0.23 ) }
    dend_26 { pt3dadd( -94.7583, -123.313, -164.373, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.43025, -8.4621, 1.04, 1.14 ) }
    dend_15 { pt3dadd( 4.07055, -10.4408, -0.0136412, 1.14 ) }
    dend_15 { pt3dadd( 5.48054, -12.1418, -0.919345, 1.14 ) }
    dend_15 { pt3dadd( 6.84546, -13.7884, -1.7961, 1.14 ) }
    dend_15 { pt3dadd( 7.66451, -14.7764, -2.32221, 1.14 ) }
    dend_15 { pt3dadd( 8.42088, -15.6889, -2.80807, 1.59 ) }
    dend_15 { pt3dadd( 9.32232, -16.7763, -3.3871, 1.59 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 80/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.95025, 5.2269, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 3.6305, 6.49475, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 4.34732, 7.83077, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 5.51716, 10.0112, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 6.19507, 11.2747, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 7.18318, 13.1163, -1.12, 1.82 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.68391, 8.45424, 0.0, 0.702523 ) }
    axon_0 { pt3dadd( -4.41759, 23.203, 0.0, 0.702523 ) }
    axon_0 { pt3dadd( -7.15127, 37.9518, 0.0, 0.702523 ) }
    // Section: dend_56, id: dend_56, parent: dend_44 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -3.07777, 11.5324, -1.86, 0.68 ) }
    dend_56 { pt3dadd( -4.44294, 11.8535, -1.74791, 0.68 ) }
    dend_56 { pt3dadd( -5.39739, 12.0925, -1.68516, 0.68 ) }
    dend_56 { pt3dadd( -6.70625, 12.4203, -1.59912, 1.14 ) }
    dend_56 { pt3dadd( -7.45924, 12.6089, -1.54961, 0.23 ) }
    dend_56 { pt3dadd( -9.21264, 13.048, -1.43434, 0.23 ) }
    dend_56 { pt3dadd( -10.2099, 13.2978, -1.36878, 0.91 ) }
    dend_56 { pt3dadd( -11.902, 13.6766, -1.20994, 1.82 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 97/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -3.07777, 11.5324, -1.86, 1.82 ) }
    dend_45 { pt3dadd( -0.481016, 13.9951, -2.95953, 1.82 ) }
    dend_45 { pt3dadd( 2.02232, 16.3844, -4.00925, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_45 { pt3dadd( 3.92197, 18.1803, -4.76977, 0.68 ) }
    dend_45 { pt3dadd( 5.19963, 19.3512, -5.23998, 1.14 ) }
    dend_45 { pt3dadd( 8.56289, 22.346, -6.48107, 0.45 ) }
    dend_45 { pt3dadd( 10.4652, 23.9919, -7.20155, 0.45 ) }
    dend_45 { pt3dadd( 11.6364, 24.917, -7.64203, 1.59 ) }
    dend_45 { pt3dadd( 12.8508, 25.824, -8.08204, 1.59 ) }
    dend_45 { pt3dadd( 14.6187, 27.1235, -8.67633, 0.68 ) }
    dend_45 { pt3dadd( 16.6887, 28.6218, -9.3711, 0.68 ) }
    dend_45 { pt3dadd( 18.3526, 29.7673, -9.88172, 1.36 ) }
    dend_45 { pt3dadd( 20.0064, 30.8575, -10.4001, 2.05 ) }
    dend_45 { pt3dadd( 21.5786, 31.8461, -10.9289, 0.91 ) }
    dend_45 { pt3dadd( 23.3326, 32.9634, -11.5684, 1.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_27 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -2.18068, -9.42425, 8.54, 0.68 ) }
    dend_39 { pt3dadd( -5.91184, -10.3503, 7.97758, 0.68 ) }
    dend_39 { pt3dadd( -10.0386, -11.3302, 7.37984, 0.68 ) }
    dend_39 { pt3dadd( -12.5537, -11.9072, 6.96762, 0.23 ) }
    dend_39 { pt3dadd( -14.3384, -12.3132, 6.66254, 0.91 ) }
    dend_39 { pt3dadd( -16.6919, -12.8727, 6.258, 0.91 ) }
    dend_39 { pt3dadd( -18.9658, -13.4233, 5.83674, 0.23 ) }
    dend_39 { pt3dadd( -20.7206, -13.8448, 5.48088, 0.23 ) }
    dend_39 { pt3dadd( -23.6149, -14.5923, 4.87971, 0.68 ) }
    dend_39 { pt3dadd( -25.7213, -15.2013, 4.411, 0.68 ) }
    dend_39 { pt3dadd( -27.8653, -15.8635, 3.87243, 0.23 ) }
    dend_39 { pt3dadd( -30.1314, -16.6176, 3.25742, 0.68 ) }
    dend_39 { pt3dadd( -31.7975, -17.2115, 2.79186, 0.68 ) }
    dend_39 { pt3dadd( -34.7866, -18.3497, 1.97467, 0.23 ) }
    dend_39 { pt3dadd( -37.1584, -19.309, 1.37214, 0.23 ) }
    dend_39 { pt3dadd( -38.9032, -20.0393, 0.948687, 0.68 ) }
    dend_39 { pt3dadd( -40.2071, -20.5888, 0.718955, 0.68 ) }
    dend_39 { pt3dadd( -42.0717, -21.3853, 0.511789, 0.68 ) }
    dend_39 { pt3dadd( -44.5111, -22.4109, 0.34951, 0.23 ) }
    dend_39 { pt3dadd( -46.6081, -23.2401, 0.307087, 0.45 ) }
    dend_39 { pt3dadd( -48.5265, -23.9622, 0.382289, 0.45 ) }
    dend_39 { pt3dadd( -52.0957, -25.2955, 0.617314, 0.23 ) }
    dend_39 { pt3dadd( -53.4182, -25.8066, 0.76031, 1.14 ) }
    dend_39 { pt3dadd( -54.7365, -26.3393, 0.942389, 1.14 ) }
    dend_39 { pt3dadd( -57.5343, -27.5128, 1.38923, 0.23 ) }
    dend_39 { pt3dadd( -59.5958, -28.4492, 1.7283, 0.23 ) }
    dend_39 { pt3dadd( -61.4539, -29.3766, 2.01014, 0.91 ) }
    dend_39 { pt3dadd( -64.6856, -31.1092, 2.39521, 0.23 ) }
    dend_39 { pt3dadd( -66.2508, -31.9795, 2.56544, 1.14 ) }
    dend_39 { pt3dadd( -66.9399, -32.371, 2.62915, 1.14 ) }
    dend_39 { pt3dadd( -69.1039, -33.6047, 2.76061, 0.23 ) }
    dend_39 { pt3dadd( -71.0107, -34.6424, 2.78067, 1.14 ) }
    dend_39 { pt3dadd( -73.1503, -35.7197, 2.72471, 0.23 ) }
    dend_39 { pt3dadd( -75.0181, -36.5531, 2.59339, 1.14 ) }
    dend_39 { pt3dadd( -76.1379, -37.0146, 2.5163, 0.23 ) }
    dend_39 { pt3dadd( -78.4337, -37.9012, 2.35913, 0.23 ) }
    dend_39 { pt3dadd( -79.9784, -38.4791, 2.26418, 1.14 ) }
    dend_39 { pt3dadd( -81.1311, -38.8905, 2.21465, 1.14 ) }
    dend_39 { pt3dadd( -84.0699, -39.9771, 2.13175, 0.23 ) }
    dend_39 { pt3dadd( -85.2327, -40.4343, 2.1918, 1.14 ) }
    dend_39 { pt3dadd( -86.7289, -41.0507, 2.35881, 1.14 ) }
    dend_39 { pt3dadd( -88.4942, -41.7942, 2.6386, 0.23 ) }
    dend_39 { pt3dadd( -90.263, -42.5712, 3.03954, 0.91 ) }
    dend_39 { pt3dadd( -92.176, -43.4496, 3.56214, 0.23 ) }
    dend_39 { pt3dadd( -95.4432, -45.0685, 4.51127, 0.23 ) }
    dend_39 { pt3dadd( -96.1397, -45.4309, 4.71604, 1.14 ) }
    dend_39 { pt3dadd( -98.0626, -46.4761, 5.20995, 1.14 ) }
    dend_39 { pt3dadd( -100.508, -47.8755, 5.69482, 0.23 ) }
    dend_39 { pt3dadd( -101.747, -48.6053, 5.85731, 0.23 ) }
    dend_39 { pt3dadd( -104.912, -50.4638, 6.18797, 0.68 ) }
    dend_39 { pt3dadd( -107.097, -51.728, 6.32015, 0.23 ) }
    dend_39 { pt3dadd( -109.382, -53.0625, 6.45298, 1.14 ) }
    dend_39 { pt3dadd( -112.059, -54.6603, 6.58464, 0.23 ) }
    dend_39 { pt3dadd( -114.33, -56.0349, 6.70451, 0.91 ) }
    dend_39 { pt3dadd( -117.209, -57.7876, 6.94827, 0.23 ) }
    dend_39 { pt3dadd( -119.105, -58.9429, 7.16331, 0.23 ) }
    dend_39 { pt3dadd( -119.775, -59.3562, 7.27243, 0.23 ) }
    dend_39 { pt3dadd( -120.843, -60.0157, 7.51433, 0.23 ) }
    dend_39 { pt3dadd( -122.887, -61.2761, 8.15538, 0.91 ) }
    dend_39 { pt3dadd( -124.373, -62.2095, 8.6924, 0.91 ) }
    dend_39 { pt3dadd( -126.31, -63.4024, 9.34871, 0.23 ) }
    dend_39 { pt3dadd( -128.16, -64.5193, 9.93838, 1.14 ) }
    dend_39 { pt3dadd( -129.35, -65.1908, 10.3317, 1.14 ) }
    dend_39 { pt3dadd( -132.008, -66.6193, 11.2007, 0.23 ) }
    dend_39 { pt3dadd( -133.417, -67.3599, 11.6313, 0.68 ) }
    dend_39 { pt3dadd( -136.374, -68.9701, 12.511, 0.23 ) }
    dend_39 { pt3dadd( -138.682, -70.3106, 13.2001, 0.91 ) }
    dend_39 { pt3dadd( -141.474, -72.1296, 13.9643, 0.23 ) }
    dend_39 { pt3dadd( -142.297, -72.7362, 14.1708, 0.23 ) }
    dend_39 { pt3dadd( -143.454, -73.6869, 14.4004, 0.23 ) }
    dend_39 { pt3dadd( -145.066, -75.1838, 14.6638, 1.14 ) }
    dend_39 { pt3dadd( -147.05, -77.1977, 14.8978, 0.23 ) }
    dend_39 { pt3dadd( -148.491, -78.7908, 14.8718, 0.68 ) }
    dend_39 { pt3dadd( -150.673, -81.3464, 14.4487, 0.23 ) }
    dend_39 { pt3dadd( -152.407, -83.3968, 13.9301, 0.91 ) }
    dend_39 { pt3dadd( -154.395, -85.6204, 13.2333, 0.23 ) }
    dend_39 { pt3dadd( -155.366, -86.6195, 12.8923, 0.91 ) }
    dend_39 { pt3dadd( -157.8, -88.9168, 12.0249, 0.23 ) }
    dend_39 { pt3dadd( -159.929, -90.7115, 11.3592, 0.91 ) }
    dend_39 { pt3dadd( -162.105, -92.3744, 10.7891, 0.23 ) }
    dend_39 { pt3dadd( -164.194, -93.808, 10.378, 0.91 ) }
    dend_39 { pt3dadd( -166.964, -95.4155, 10.0729, 0.23 ) }
    dend_39 { pt3dadd( -168.076, -95.9814, 10.0211, 0.91 ) }
    dend_39 { pt3dadd( -169.953, -96.7743, 10.0689, 0.23 ) }
    dend_39 { pt3dadd( -171.51, -97.3268, 10.1094, 0.91 ) }
    dend_39 { pt3dadd( -172.087, -97.5011, 10.0721, 0.91 ) }
    dend_39 { pt3dadd( -175.22, -98.3853, 9.7424, 0.23 ) }
    dend_39 { pt3dadd( -176.208, -98.6293, 9.63419, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_39 { pt3dadd( -178.184, -99.0977, 9.41805, 0.91 ) }
    dend_39 { pt3dadd( -180.592, -99.6505, 9.15683, 0.23 ) }
    dend_39 { pt3dadd( -183.722, -100.343, 8.82518, 0.91 ) }
    dend_39 { pt3dadd( -188.067, -101.301, 8.38794, 0.23 ) }
    dend_39 { pt3dadd( -190.719, -101.887, 8.15411, 0.91 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 5/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.18068, -9.42425, 8.54, 0.91 ) }
    dend_28 { pt3dadd( -0.487079, -12.1255, 9.66064, 0.91 ) }
    dend_28 { pt3dadd( 0.795128, -14.1706, 10.5091, 0.91 ) }
    dend_28 { pt3dadd( 2.45881, -16.8242, 11.6099, 1.36 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 9.32232, -16.7763, -3.3871, 0.91 ) }
    dend_19 { pt3dadd( 8.79426, -19.9814, -4.73451, 0.91 ) }
    dend_19 { pt3dadd( 8.28758, -23.0568, -6.02739, 0.91 ) }
    dend_19 { pt3dadd( 7.91474, -25.3198, -6.97876, 0.91 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 9.32232, -16.7763, -3.3871, 0.23 ) }
    dend_16 { pt3dadd( 11.6207, -18.0647, -3.03898, 0.23 ) }
    dend_16 { pt3dadd( 13.4309, -19.068, -2.79713, 0.68 ) }
    dend_16 { pt3dadd( 15.8976, -20.464, -2.5048, 0.68 ) }
    dend_16 { pt3dadd( 17.3944, -21.3639, -2.42998, 0.23 ) }
    dend_16 { pt3dadd( 18.1995, -21.8583, -2.43137, 0.91 ) }
    dend_16 { pt3dadd( 19.4039, -22.5986, -2.47013, 0.91 ) }
    dend_16 { pt3dadd( 20.9447, -23.5418, -2.63911, 0.23 ) }
    dend_16 { pt3dadd( 22.3404, -24.3273, -2.88581, 0.91 ) }
    dend_16 { pt3dadd( 24.7351, -25.6154, -3.3582, 0.23 ) }
    dend_16 { pt3dadd( 25.6602, -26.1039, -3.5562, 0.91 ) }
    dend_16 { pt3dadd( 26.9075, -26.7471, -3.8231, 0.23 ) }
    dend_16 { pt3dadd( 28.4939, -27.5748, -4.13643, 1.14 ) }
    dend_16 { pt3dadd( 29.6636, -28.1491, -4.29596, 1.14 ) }
    dend_16 { pt3dadd( 31.9467, -29.2247, -4.4518, 0.23 ) }
    dend_16 { pt3dadd( 33.0875, -29.7334, -4.44945, 0.91 ) }
    dend_16 { pt3dadd( 34.2862, -30.2693, -4.40624, 0.91 ) }
    dend_16 { pt3dadd( 36.6773, -31.2644, -4.26373, 0.23 ) }
    dend_16 { pt3dadd( 38.6849, -32.0035, -4.06958, 0.68 ) }
    dend_16 { pt3dadd( 40.5006, -32.5708, -3.86273, 0.23 ) }
    dend_16 { pt3dadd( 41.4829, -32.79, -3.73832, 0.91 ) }
    dend_16 { pt3dadd( 43.6487, -33.1341, -3.44696, 0.23 ) }
    dend_16 { pt3dadd( 45.855, -33.3326, -3.16937, 0.91 ) }
    dend_16 { pt3dadd( 47.7486, -33.3869, -2.96078, 0.23 ) }
    dend_16 { pt3dadd( 49.0569, -33.3857, -2.88692, 0.91 ) }
    dend_16 { pt3dadd( 51.6868, -33.3594, -2.80809, 0.23 ) }
    dend_16 { pt3dadd( 52.494, -33.3585, -2.80379, 1.14 ) }
    dend_16 { pt3dadd( 54.1183, -33.3809, -2.83616, 1.14 ) }
    dend_16 { pt3dadd( 56.2034, -33.5365, -2.92859, 0.23 ) }
    dend_16 { pt3dadd( 58.6291, -33.8704, -3.08454, 0.68 ) }
    dend_16 { pt3dadd( 59.5624, -34.0554, -3.12148, 1.36 ) }
    dend_16 { pt3dadd( 61.378, -34.5527, -3.09604, 0.23 ) }
    dend_16 { pt3dadd( 62.2125, -34.8015, -3.04882, 0.45 ) }
    dend_16 { pt3dadd( 64.4796, -35.5064, -2.83323, 0.23 ) }
    dend_16 { pt3dadd( 65.9663, -35.9776, -2.6079, 0.91 ) }
    dend_16 { pt3dadd( 68.7758, -36.8929, -1.99507, 0.23 ) }
    dend_16 { pt3dadd( 71.4357, -37.7381, -1.35155, 1.14 ) }
    dend_16 { pt3dadd( 72.7454, -38.1424, -1.0085, 0.23 ) }
    dend_16 { pt3dadd( 73.8951, -38.4704, -0.693507, 0.91 ) }
    dend_16 { pt3dadd( 76.1145, -39.0662, -0.0322763, 0.23 ) }
    dend_16 { pt3dadd( 77.429, -39.4094, 0.366407, 1.14 ) }
    dend_16 { pt3dadd( 79.5422, -39.957, 0.966035, 0.23 ) }
    dend_16 { pt3dadd( 80.7689, -40.3054, 1.30846, 0.91 ) }
    dend_16 { pt3dadd( 81.1528, -40.4283, 1.41405, 0.91 ) }
    dend_16 { pt3dadd( 82.9673, -41.033, 1.8741, 0.23 ) }
    dend_16 { pt3dadd( 84.1554, -41.405, 2.11661, 0.91 ) }
    dend_16 { pt3dadd( 86.1823, -42.0504, 2.45704, 0.23 ) }
    dend_16 { pt3dadd( 87.6671, -42.5308, 2.69766, 0.91 ) }
    dend_16 { pt3dadd( 89.3472, -43.0648, 2.95031, 0.23 ) }
    dend_16 { pt3dadd( 90.5929, -43.4565, 3.1161, 0.68 ) }
    dend_16 { pt3dadd( 93.3642, -44.3604, 3.4327, 0.23 ) }
    dend_16 { pt3dadd( 95.1464, -44.9679, 3.66794, 0.23 ) }
    dend_16 { pt3dadd( 96.2761, -45.3445, 3.85654, 1.14 ) }
    dend_16 { pt3dadd( 97.0262, -45.5913, 4.01518, 1.14 ) }
    dend_16 { pt3dadd( 99.2257, -46.3421, 4.5796, 0.23 ) }
    dend_16 { pt3dadd( 100.506, -46.776, 4.94906, 1.14 ) }
    dend_16 { pt3dadd( 102.712, -47.4954, 5.62317, 0.23 ) }
    dend_16 { pt3dadd( 105.893, -48.4663, 6.68822, 0.91 ) }
    dend_16 { pt3dadd( 107.374, -48.9131, 7.1787, 0.23 ) }
    dend_16 { pt3dadd( 109.021, -49.3952, 7.68317, 0.91 ) }
    dend_16 { pt3dadd( 111.413, -50.0488, 8.34559, 0.23 ) }
    dend_16 { pt3dadd( 113.201, -50.544, 8.71673, 0.91 ) }
    dend_16 { pt3dadd( 115.597, -51.3103, 9.02541, 0.23 ) }
    dend_16 { pt3dadd( 118.716, -52.4821, 9.18, 0.23 ) }
    dend_16 { pt3dadd( 121.201, -53.4961, 9.15607, 0.45 ) }
    dend_16 { pt3dadd( 122.992, -54.2975, 9.0624, 0.23 ) }
    dend_16 { pt3dadd( 125.345, -55.4371, 8.82156, 0.23 ) }
    dend_16 { pt3dadd( 127.281, -56.433, 8.4795, 0.91 ) }
    dend_16 { pt3dadd( 128.563, -57.1235, 8.11254, 0.23 ) }
    dend_16 { pt3dadd( 129.499, -57.6556, 7.78975, 0.45 ) }
    dend_16 { pt3dadd( 130.197, -58.0604, 7.53278, 0.23 ) }
    dend_16 { pt3dadd( 131.459, -58.7293, 7.0814, 0.91 ) }
    dend_16 { pt3dadd( 133.455, -59.6022, 6.39912, 0.23 ) }
    dend_16 { pt3dadd( 134.995, -60.1569, 5.86733, 0.91 ) }
    dend_16 { pt3dadd( 136.135, -60.5375, 5.47797, 0.23 ) }
    dend_16 { pt3dadd( 136.505, -60.6582, 5.35391, 0.91 ) }
    dend_16 { pt3dadd( 137.822, -61.0817, 4.95539, 0.23 ) }
    dend_16 { pt3dadd( 139.275, -61.6083, 4.5637, 0.45 ) }
    dend_16 { pt3dadd( 141.079, -62.3129, 4.20834, 0.23 ) }
    dend_16 { pt3dadd( 141.677, -62.5577, 4.11232, 0.91 ) }
    dend_16 { pt3dadd( 142.391, -62.8792, 4.00547, 0.23 ) }
    dend_16 { pt3dadd( 143.651, -63.5241, 3.8425, 1.14 ) }
    dend_16 { pt3dadd( 145.553, -64.6632, 3.7232, 0.23 ) }
    dend_16 { pt3dadd( 146.584, -65.3859, 3.65218, 0.68 ) }
    dend_16 { pt3dadd( 147.167, -65.9249, 3.57751, 0.23 ) }
    dend_16 { pt3dadd( 148.127, -67.1418, 3.37828, 0.23 ) }
    dend_16 { pt3dadd( 148.487, -68.2126, 3.17528, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( 148.013, -69.6792, 2.88568, 0.91 ) }
    dend_16 { pt3dadd( 146.865, -71.8588, 2.44609, 0.23 ) }
    dend_16 { pt3dadd( 145.613, -73.8233, 2.02926, 0.23 ) }
    dend_16 { pt3dadd( 144.792, -74.9394, 1.78247, 0.23 ) }
    dend_16 { pt3dadd( 143.109, -76.8629, 1.32838, 0.23 ) }
    dend_16 { pt3dadd( 140.925, -79.0358, 0.785691, 0.68 ) }
    dend_16 { pt3dadd( 148.41, -83.6735, -0.076046, 0.68 ) }
    dend_16 { pt3dadd( 156.014, -87.6168, -2.35534, 0.68 ) }
    dend_16 { pt3dadd( 162.924, -91.8226, -5.96169, 0.68 ) }
    dend_16 { pt3dadd( 169.628, -95.625, -10.3422, 0.68 ) }
    dend_16 { pt3dadd( 177.654, -98.1545, -13.2097, 0.68 ) }
    dend_16 { pt3dadd( 185.881, -100.894, -15.1574, 0.68 ) }
    dend_16 { pt3dadd( 193.806, -104.204, -17.4028, 0.68 ) }
    dend_16 { pt3dadd( 202.247, -106.481, -19.038, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 14/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 7.18318, 13.1163, -1.12, 0.23 ) }
    dend_4 { pt3dadd( 9.07953, 14.443, -1.54378, 0.23 ) }
    dend_4 { pt3dadd( 12.0998, 16.402, -2.10587, 0.68 ) }
    dend_4 { pt3dadd( 13.006, 16.9897, -2.27449, 0.68 ) }
    dend_4 { pt3dadd( 14.8666, 18.1965, -2.62075, 0.23 ) }
    dend_4 { pt3dadd( 17.0412, 19.6069, -3.02544, 0.91 ) }
    dend_4 { pt3dadd( 19.051, 20.9105, -3.39946, 0.91 ) }
    dend_4 { pt3dadd( 20.7271, 22.0861, -3.69646, 0.91 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 22/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.18318, 13.1163, -1.12, 0.68 ) }
    dend_1 { pt3dadd( 6.8498, 16.606, -1.24417, 0.68 ) }
    dend_1 { pt3dadd( 6.70299, 18.8089, -1.39884, 0.68 ) }
    dend_1 { pt3dadd( 6.62403, 20.6027, -1.55183, 0.91 ) }
    dend_1 { pt3dadd( 6.68351, 23.6646, -2.02604, 0.23 ) }
    dend_1 { pt3dadd( 6.75825, 24.7157, -2.2175, 0.68 ) }
    dend_1 { pt3dadd( 7.11209, 28.4419, -2.94354, 0.23 ) }
    dend_1 { pt3dadd( 7.4573, 30.8812, -3.53973, 1.14 ) }
    dend_1 { pt3dadd( 7.70354, 32.2937, -3.91936, 1.14 ) }
    dend_1 { pt3dadd( 8.74571, 37.0978, -5.27164, 0.23 ) }
    dend_1 { pt3dadd( 9.54967, 40.0739, -6.12168, 0.91 ) }
    dend_1 { pt3dadd( 9.96033, 41.3719, -6.4842, 0.91 ) }
    dend_1 { pt3dadd( 10.613, 43.0943, -6.96124, 0.23 ) }
    dend_1 { pt3dadd( 11.5509, 45.4911, -7.58888, 0.23 ) }
    dend_1 { pt3dadd( 12.187, 47.0785, -7.99503, 0.91 ) }
    dend_1 { pt3dadd( 12.8506, 48.6838, -8.35434, 0.91 ) }
    dend_1 { pt3dadd( 13.824, 50.9966, -8.87766, 0.23 ) }
    dend_1 { pt3dadd( 15.0197, 53.743, -9.4719, 0.68 ) }
    dend_1 { pt3dadd( 16.2886, 56.5563, -10.095, 0.23 ) }
    dend_1 { pt3dadd( 17.0682, 58.3406, -10.4846, 0.91 ) }
    dend_1 { pt3dadd( 18.4363, 61.489, -11.2237, 0.23 ) }
    dend_1 { pt3dadd( 19.0474, 62.8184, -11.5327, 0.23 ) }
    dend_1 { pt3dadd( 19.4133, 63.6002, -11.7043, 1.14 ) }
    dend_1 { pt3dadd( 19.987, 64.807, -11.9165, 1.14 ) }
    dend_1 { pt3dadd( 20.8859, 66.65, -12.172, 0.23 ) }
    dend_1 { pt3dadd( 21.4958, 68.0488, -12.3714, 0.68 ) }
    dend_1 { pt3dadd( 22.4765, 70.6594, -12.8013, 0.23 ) }
    dend_1 { pt3dadd( 23.1398, 72.6606, -13.1452, 0.91 ) }
    dend_1 { pt3dadd( 24.0384, 75.8707, -13.7082, 0.23 ) }
    dend_1 { pt3dadd( 24.5852, 78.2483, -14.1242, 1.14 ) }
    dend_1 { pt3dadd( 25.1675, 81.8623, -14.8938, 0.23 ) }
    dend_1 { pt3dadd( 25.3637, 84.2076, -15.47, 0.68 ) }
    dend_1 { pt3dadd( 25.3825, 85.5415, -15.8747, 0.23 ) }
    dend_1 { pt3dadd( 25.3144, 87.5225, -16.5539, 0.91 ) }
    dend_1 { pt3dadd( 25.1809, 88.8217, -17.0474, 0.91 ) }
    dend_1 { pt3dadd( 24.3929, 94.0522, -19.2114, 0.23 ) }
    dend_1 { pt3dadd( 24.139, 95.598, -19.9134, 1.14 ) }
    dend_1 { pt3dadd( 23.6123, 98.7981, -21.5256, 0.23 ) }
    dend_1 { pt3dadd( 23.2644, 100.914, -22.6556, 0.91 ) }
    dend_1 { pt3dadd( 22.9514, 102.671, -23.641, 0.91 ) }
    dend_1 { pt3dadd( 22.4309, 105.518, -25.2732, 0.23 ) }
    dend_1 { pt3dadd( 21.7866, 109.13, -27.5336, 0.91 ) }
    dend_1 { pt3dadd( 21.4645, 111.039, -28.7622, 0.23 ) }
    dend_1 { pt3dadd( 21.2735, 112.227, -29.4533, 0.45 ) }
    dend_1 { pt3dadd( 21.065, 113.752, -30.3088, 0.23 ) }
    dend_1 { pt3dadd( 20.9225, 114.973, -30.9731, 0.91 ) }
    dend_1 { pt3dadd( 20.6349, 117.9, -32.5895, 0.23 ) }
    dend_1 { pt3dadd( 20.4512, 119.98, -33.8054, 1.14 ) }
    dend_1 { pt3dadd( 20.1436, 124.158, -36.4697, 0.23 ) }
    dend_1 { pt3dadd( 19.9426, 127.034, -38.4563, 1.36 ) }
    dend_1 { pt3dadd( 19.7617, 130.294, -41.0204, 0.45 ) }
    dend_1 { pt3dadd( 19.6883, 131.953, -42.5181, 0.91 ) }
    dend_1 { pt3dadd( 19.5789, 134.382, -44.9618, 0.23 ) }
    dend_1 { pt3dadd( 19.4921, 135.927, -46.7717, 0.68 ) }
    dend_1 { pt3dadd( 19.4076, 137.083, -48.3639, 0.68 ) }
    dend_1 { pt3dadd( 19.2097, 139.388, -51.6573, 0.23 ) }
    dend_1 { pt3dadd( 19.1389, 140.726, -53.562, 0.23 ) }
    dend_1 { pt3dadd( 19.1263, 141.445, -54.4935, 0.91 ) }
    dend_1 { pt3dadd( 19.2998, 143.067, -56.3906, 0.45 ) }
    dend_1 { pt3dadd( 19.6702, 144.594, -57.9472, 0.23 ) }
    dend_1 { pt3dadd( 20.1979, 145.892, -59.0931, 0.91 ) }
    dend_1 { pt3dadd( 21.1301, 147.584, -60.3178, 0.23 ) }
    dend_1 { pt3dadd( 21.7216, 148.451, -60.8759, 1.14 ) }
    dend_1 { pt3dadd( 23.1532, 150.082, -61.8614, 0.23 ) }
    dend_1 { pt3dadd( 24.5671, 151.465, -62.6771, 0.91 ) }
    dend_1 { pt3dadd( 26.5087, 153.243, -63.7695, 0.23 ) }
    dend_1 { pt3dadd( 27.4433, 154.098, -64.3113, 0.23 ) }
    dend_1 { pt3dadd( 28.9313, 155.503, -65.2723, 1.14 ) }
    dend_1 { pt3dadd( 31.4697, 158.042, -67.257, 0.23 ) }
    dend_1 { pt3dadd( 33.5178, 160.336, -69.2947, 1.14 ) }
    dend_1 { pt3dadd( 35.4252, 162.918, -72.1054, 0.23 ) }
    dend_1 { pt3dadd( 35.8396, 163.548, -72.8422, 0.23 ) }
    dend_1 { pt3dadd( 36.604, 164.883, -74.5533, 0.68 ) }
    dend_1 { pt3dadd( 37.2453, 166.293, -76.6391, 0.23 ) }
    dend_1 { pt3dadd( 37.4704, 167.52, -78.7758, 1.14 ) }
    dend_1 { pt3dadd( 37.2664, 169.332, -82.5241, 0.23 ) }
    dend_1 { pt3dadd( 37.7626, 178.815, -89.995, 0.23 ) }
    dend_1 { pt3dadd( 35.6697, 189.387, -95.3833, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 35.9156, 199.865, -101.326, 0.23 ) }
    dend_1 { pt3dadd( 34.6987, 210.106, -107.573, 0.23 ) }
    dend_1 { pt3dadd( 35.3957, 220.842, -112.98, 0.23 ) }
    dend_1 { pt3dadd( 34.5371, 231.494, -118.533, 0.23 ) }
    dend_1 { pt3dadd( 32.2038, 241.674, -124.569, 0.23 ) }
    dend_1 { pt3dadd( 30.2058, 251.388, -131.462, 0.23 ) }
    dend_1 { pt3dadd( 29.2066, 260.678, -139.135, 0.23 ) }
    dend_1 { pt3dadd( 29.5412, 269.166, -147.776, 0.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.15127, 37.9518, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -9.88495, 52.7006, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -12.6186, 67.4494, 0.0, 0.15 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 11/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -11.902, 13.6766, -1.20994, 0.23 ) }
    dend_62 { pt3dadd( -12.3774, 14.0536, -3.39325, 0.23 ) }
    dend_62 { pt3dadd( -12.6495, 14.2695, -4.64338, 0.23 ) }
    dend_62 { pt3dadd( -13.0081, 14.5539, -6.29033, 0.91 ) }
    dend_62 { pt3dadd( -13.6717, 15.0802, -9.33816, 0.23 ) }
    dend_62 { pt3dadd( -14.3779, 15.6404, -12.5819, 0.23 ) }
    dend_62 { pt3dadd( -14.6401, 15.8484, -13.7865, 1.14 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 18/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -11.902, 13.6766, -1.20994, 0.23 ) }
    dend_57 { pt3dadd( -13.0854, 14.4879, -1.31431, 0.23 ) }
    dend_57 { pt3dadd( -14.7052, 15.5862, -1.43738, 0.91 ) }
    dend_57 { pt3dadd( -16.7648, 16.96, -1.589, 0.68 ) }
    dend_57 { pt3dadd( -18.7419, 18.2875, -1.68671, 0.23 ) }
    dend_57 { pt3dadd( -20.2434, 19.3356, -1.80108, 0.68 ) }
    dend_57 { pt3dadd( -21.5599, 20.2747, -1.92376, 0.23 ) }
    dend_57 { pt3dadd( -22.233, 20.773, -2.02549, 1.14 ) }
    dend_57 { pt3dadd( -23.1149, 21.4216, -2.21777, 1.14 ) }
    dend_57 { pt3dadd( -25.2322, 23.0124, -2.86308, 0.23 ) }
    dend_57 { pt3dadd( -27.1179, 24.4749, -3.56736, 0.45 ) }
    dend_57 { pt3dadd( -28.2893, 25.3751, -4.04793, 0.23 ) }
    dend_57 { pt3dadd( -29.8834, 26.5428, -4.73048, 0.23 ) }
    dend_57 { pt3dadd( -31.8105, 27.8758, -5.57347, 0.23 ) }
    dend_57 { pt3dadd( -33.2829, 28.8352, -6.22552, 0.91 ) }
    dend_57 { pt3dadd( -34.0802, 29.306, -6.57594, 0.91 ) }
    dend_57 { pt3dadd( -37.0347, 30.8751, -7.70628, 0.23 ) }
    dend_57 { pt3dadd( -38.8876, 31.8032, -8.34572, 0.68 ) }
    dend_57 { pt3dadd( -40.4422, 32.5448, -8.80139, 0.23 ) }
    dend_57 { pt3dadd( -41.0529, 32.8317, -8.97454, 0.91 ) }
    dend_57 { pt3dadd( -42.469, 33.444, -9.35448, 0.91 ) }
    dend_57 { pt3dadd( -44.9902, 34.4965, -10.0485, 0.23 ) }
    dend_57 { pt3dadd( -46.2544, 34.995, -10.407, 2.05 ) }
    dend_57 { pt3dadd( -47.5188, 35.5296, -10.733, 2.05 ) }
    // Section: dend_53, id: dend_53, parent: dend_45 (entry count 42/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 23.3326, 32.9634, -11.5684, 0.68 ) }
    dend_53 { pt3dadd( 25.6844, 33.5037, -12.1316, 0.68 ) }
    dend_53 { pt3dadd( 29.1875, 34.2061, -13.041, 1.14 ) }
    dend_53 { pt3dadd( 32.6015, 34.8694, -13.846, 0.68 ) }
    dend_53 { pt3dadd( 36.8254, 35.7044, -14.7522, 0.68 ) }
    dend_53 { pt3dadd( 39.671, 36.3021, -15.306, 0.68 ) }
    dend_53 { pt3dadd( 42.101, 36.8125, -15.779, 1.14 ) }
    dend_53 { pt3dadd( 46.0222, 37.6408, -16.4497, 0.68 ) }
    dend_53 { pt3dadd( 50.0647, 38.4983, -17.0386, 0.68 ) }
    dend_53 { pt3dadd( 52.5495, 39.0608, -17.401, 0.68 ) }
    dend_53 { pt3dadd( 54.2983, 39.4277, -17.6049, 0.91 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 23.3326, 32.9634, -11.5684, 0.68 ) }
    dend_46 { pt3dadd( 23.3971, 35.2114, -11.9528, 0.68 ) }
    dend_46 { pt3dadd( 23.4451, 36.4775, -12.1153, 1.14 ) }
    dend_46 { pt3dadd( 23.5138, 37.9848, -12.2662, 0.23 ) }
    dend_46 { pt3dadd( 23.6138, 40.2735, -12.3712, 0.68 ) }
    dend_46 { pt3dadd( 23.6645, 41.9335, -12.373, 0.68 ) }
    dend_46 { pt3dadd( 23.6816, 42.7879, -12.3531, 0.68 ) }
    dend_46 { pt3dadd( 23.6763, 44.8025, -12.1798, 1.14 ) }
    dend_46 { pt3dadd( 23.626, 47.6157, -11.8835, 0.23 ) }
    dend_46 { pt3dadd( 23.567, 49.1355, -11.6932, 0.23 ) }
    dend_46 { pt3dadd( 23.4402, 51.3109, -11.3694, 0.68 ) }
    dend_46 { pt3dadd( 23.3515, 52.1281, -11.2459, 0.68 ) }
    dend_46 { pt3dadd( 23.1362, 53.7348, -10.9956, 0.23 ) }
    dend_46 { pt3dadd( 22.9355, 54.8734, -10.8124, 0.91 ) }
    dend_46 { pt3dadd( 22.5196, 56.7747, -10.5157, 0.23 ) }
    dend_46 { pt3dadd( 22.2454, 57.9281, -10.3979, 0.68 ) }
    dend_46 { pt3dadd( 21.673, 60.0753, -10.203, 1.14 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 70/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -190.719, -101.887, 8.15411, 0.23 ) }
    dend_43 { pt3dadd( -192.847, -102.074, 8.10866, 0.23 ) }
    dend_43 { pt3dadd( -194.142, -102.21, 8.08792, 0.68 ) }
    dend_43 { pt3dadd( -195.845, -102.419, 8.05601, 0.23 ) }
    dend_43 { pt3dadd( -197.198, -102.661, 7.97628, 0.45 ) }
    dend_43 { pt3dadd( -200.087, -103.332, 7.55118, 0.23 ) }
    dend_43 { pt3dadd( -202.183, -103.88, 7.15108, 0.45 ) }
    dend_43 { pt3dadd( -202.904, -104.11, 6.98567, 0.23 ) }
    dend_43 { pt3dadd( -204.073, -104.549, 6.6794, 0.68 ) }
    dend_43 { pt3dadd( -206.511, -105.568, 5.95648, 0.23 ) }
    dend_43 { pt3dadd( -209.882, -107.059, 5.01718, 0.68 ) }
    dend_43 { pt3dadd( -210.702, -107.42, 4.79396, 0.23 ) }
    dend_43 { pt3dadd( -211.549, -107.788, 4.61411, 0.68 ) }
    dend_43 { pt3dadd( -213.276, -108.534, 4.35301, 0.23 ) }
    dend_43 { pt3dadd( -214.465, -109.013, 4.24779, 0.91 ) }
    dend_43 { pt3dadd( -217.334, -110.082, 4.20287, 0.23 ) }
    dend_43 { pt3dadd( -218.957, -110.653, 4.24891, 1.14 ) }
    dend_43 { pt3dadd( -220.928, -111.316, 4.26569, 0.23 ) }
    dend_43 { pt3dadd( -222.233, -111.711, 4.26664, 0.91 ) }
    dend_43 { pt3dadd( -224.233, -112.26, 4.23603, 0.23 ) }
    dend_43 { pt3dadd( -225.318, -112.543, 4.19099, 0.68 ) }
    dend_43 { pt3dadd( -226.545, -112.846, 4.08316, 0.23 ) }
    dend_43 { pt3dadd( -228.145, -113.235, 3.95931, 0.68 ) }
    dend_43 { pt3dadd( -229.589, -113.562, 3.85073, 0.23 ) }
    dend_43 { pt3dadd( -230.832, -113.887, 3.79073, 0.91 ) }
    dend_43 { pt3dadd( -231.708, -114.155, 3.76619, 0.23 ) }
    dend_43 { pt3dadd( -233.279, -114.703, 3.73209, 0.45 ) }
    dend_43 { pt3dadd( -233.999, -114.968, 3.72446, 0.23 ) }
    dend_43 { pt3dadd( -235.719, -115.615, 3.70205, 0.45 ) }
    dend_43 { pt3dadd( -238.528, -116.638, 3.61535, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( -239.915, -117.14, 3.5805, 0.23 ) }
    dend_43 { pt3dadd( -241.863, -117.836, 3.54052, 0.68 ) }
    dend_43 { pt3dadd( -244.235, -118.661, 3.50129, 0.23 ) }
    dend_43 { pt3dadd( -245.628, -119.118, 3.47502, 0.23 ) }
    dend_43 { pt3dadd( -247.851, -119.787, 3.41743, 0.91 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 5/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -190.719, -101.887, 8.15411, 0.23 ) }
    dend_40 { pt3dadd( -191.967, -102.634, 7.33686, 0.23 ) }
    dend_40 { pt3dadd( -192.388, -102.854, 7.10033, 0.68 ) }
    dend_40 { pt3dadd( -193.161, -103.221, 6.73665, 0.23 ) }
    dend_40 { pt3dadd( -193.786, -103.505, 6.47058, 0.91 ) }
    dend_40 { pt3dadd( -194.672, -103.907, 6.0937, 0.23 ) }
    dend_40 { pt3dadd( -195.558, -104.308, 5.7169, 0.45 ) }
    dend_40 { pt3dadd( -196.413, -104.663, 5.44053, 0.23 ) }
    dend_40 { pt3dadd( -197.427, -105.072, 5.10462, 0.68 ) }
    dend_40 { pt3dadd( -197.704, -105.18, 5.01445, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 15/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 2.45881, -16.8242, 11.6099, 1.14 ) }
    dend_30 { pt3dadd( 3.81322, -19.6574, 15.3786, 1.14 ) }
    dend_30 { pt3dadd( 5.53828, -23.1323, 19.6713, 1.14 ) }
    dend_30 { pt3dadd( 7.07206, -26.1423, 23.0699, 0.68 ) }
    dend_30 { pt3dadd( 8.33228, -28.6154, 25.8624, 0.68 ) }
    dend_30 { pt3dadd( 8.98692, -29.9001, 27.313, 0.91 ) }
    dend_30 { pt3dadd( 10.1988, -32.2784, 29.9983, 0.68 ) }
    dend_30 { pt3dadd( 11.2786, -34.4322, 32.2064, 1.14 ) }
    dend_30 { pt3dadd( 12.1096, -35.9791, 33.5556, 1.36 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 2.45881, -16.8242, 11.6099, 0.23 ) }
    dend_29 { pt3dadd( 3.65422, -19.6714, 10.7267, 0.23 ) }
    dend_29 { pt3dadd( 5.02413, -23.0294, 9.47794, 0.23 ) }
    dend_29 { pt3dadd( 6.65126, -26.9694, 7.97702, 0.23 ) }
    dend_29 { pt3dadd( 7.76365, -29.5393, 7.02245, 1.82 ) }
    dend_29 { pt3dadd( 8.52948, -31.3858, 6.283, 1.82 ) }
    dend_29 { pt3dadd( 9.49807, -33.7102, 5.33781, 0.68 ) }
    dend_29 { pt3dadd( 10.5235, -36.2543, 4.20508, 0.23 ) }
    dend_29 { pt3dadd( 11.3849, -38.6388, 3.23093, 0.23 ) }
    dend_29 { pt3dadd( 11.8709, -40.221, 2.52624, 0.91 ) }
    dend_29 { pt3dadd( 12.6836, -43.1206, 1.11583, 0.23 ) }
    dend_29 { pt3dadd( 13.0403, -44.7167, 0.366768, 0.23 ) }
    dend_29 { pt3dadd( 13.4646, -47.4492, -0.792124, 0.23 ) }
    dend_29 { pt3dadd( 13.5637, -48.7467, -1.23717, 0.68 ) }
    dend_29 { pt3dadd( 13.6182, -51.9829, -2.25651, 0.23 ) }
    dend_29 { pt3dadd( 13.592, -53.258, -2.59732, 1.36 ) }
    dend_29 { pt3dadd( 13.5164, -55.6731, -3.05155, 0.23 ) }
    dend_29 { pt3dadd( 13.4512, -57.2189, -3.28664, 0.23 ) }
    dend_29 { pt3dadd( 13.4141, -59.5615, -3.47911, 0.91 ) }
    dend_29 { pt3dadd( 13.5367, -61.6746, -3.49608, 0.91 ) }
    dend_29 { pt3dadd( 13.7258, -63.1219, -3.46172, 0.91 ) }
    dend_29 { pt3dadd( 14.4768, -66.6278, -3.45059, 0.23 ) }
    dend_29 { pt3dadd( 15.0227, -68.4002, -3.50618, 0.23 ) }
    dend_29 { pt3dadd( 15.922, -70.8058, -3.72004, 0.91 ) }
    dend_29 { pt3dadd( 17.1809, -73.7282, -4.09683, 0.23 ) }
    dend_29 { pt3dadd( 18.3702, -76.2644, -4.50832, 0.45 ) }
    dend_29 { pt3dadd( 20.005, -79.5221, -5.1305, 0.23 ) }
    dend_29 { pt3dadd( 21.501, -82.4523, -5.7743, 0.68 ) }
    dend_29 { pt3dadd( 23.2275, -85.974, -6.68203, 0.23 ) }
    dend_29 { pt3dadd( 23.9872, -87.706, -7.17199, 1.14 ) }
    dend_29 { pt3dadd( 24.1799, -88.2151, -7.31222, 1.14 ) }
    dend_29 { pt3dadd( 24.597, -89.4603, -7.5869, 1.14 ) }
    dend_29 { pt3dadd( 25.4462, -92.2553, -8.10944, 0.23 ) }
    dend_29 { pt3dadd( 26.0731, -94.38, -8.43973, 0.91 ) }
    dend_29 { pt3dadd( 27.0827, -97.7279, -8.87917, 0.23 ) }
    dend_29 { pt3dadd( 27.543, -99.2388, -9.07047, 1.14 ) }
    dend_29 { pt3dadd( 28.5897, -102.594, -9.52042, 0.23 ) }
    dend_29 { pt3dadd( 29.1383, -104.34, -9.75646, 1.14 ) }
    dend_29 { pt3dadd( 29.9231, -106.877, -10.0795, 0.23 ) }
    dend_29 { pt3dadd( 30.297, -108.206, -10.2287, 1.14 ) }
    dend_29 { pt3dadd( 30.6894, -109.739, -10.4005, 1.14 ) }
    dend_29 { pt3dadd( 31.495, -113.389, -10.8694, 0.23 ) }
    dend_29 { pt3dadd( 31.8815, -115.534, -11.1581, 1.14 ) }
    dend_29 { pt3dadd( 32.3147, -118.402, -11.5777, 0.23 ) }
    dend_29 { pt3dadd( 32.5821, -120.393, -11.8785, 1.14 ) }
    dend_29 { pt3dadd( 33.0168, -123.523, -12.3289, 0.23 ) }
    dend_29 { pt3dadd( 33.2835, -125.33, -12.5904, 1.82 ) }
    dend_29 { pt3dadd( 33.831, -128.737, -13.0544, 0.23 ) }
    dend_29 { pt3dadd( 33.9821, -129.612, -13.1809, 0.68 ) }
    dend_29 { pt3dadd( 34.2634, -131.21, -13.4203, 0.23 ) }
    dend_29 { pt3dadd( 34.6859, -133.534, -13.7447, 0.91 ) }
    dend_29 { pt3dadd( 35.0888, -135.923, -14.0429, 0.23 ) }
    dend_29 { pt3dadd( 35.2544, -136.963, -14.0844, 1.14 ) }
    dend_29 { pt3dadd( 35.5436, -138.638, -14.0662, 0.23 ) }
    dend_29 { pt3dadd( 35.7476, -139.758, -14.0129, 0.68 ) }
    dend_29 { pt3dadd( 36.342, -142.888, -13.8169, 0.23 ) }
    dend_29 { pt3dadd( 36.5703, -143.999, -13.7286, 1.14 ) }
    dend_29 { pt3dadd( 37.5209, -148.15, -13.3246, 0.23 ) }
    dend_29 { pt3dadd( 37.9932, -150.28, -12.9908, 0.91 ) }
    dend_29 { pt3dadd( 38.2088, -151.293, -12.7906, 0.91 ) }
    dend_29 { pt3dadd( 38.6456, -153.457, -12.3029, 0.23 ) }
    dend_29 { pt3dadd( 38.8722, -154.744, -11.9977, 1.14 ) }
    dend_29 { pt3dadd( 39.0188, -155.781, -11.7662, 1.14 ) }
    dend_29 { pt3dadd( 39.4631, -160.532, -11.1299, 0.23 ) }
    dend_29 { pt3dadd( 39.5846, -162.469, -10.9537, 0.91 ) }
    dend_29 { pt3dadd( 39.6311, -163.259, -10.9493, 0.91 ) }
    dend_29 { pt3dadd( 39.8022, -165.708, -11.1284, 0.23 ) }
    dend_29 { pt3dadd( 39.9146, -166.913, -11.3322, 0.68 ) }
    dend_29 { pt3dadd( 40.3089, -169.973, -12.2412, 0.23 ) }
    dend_29 { pt3dadd( 40.4632, -170.96, -12.6732, 0.91 ) }
    dend_29 { pt3dadd( 40.8523, -173.501, -13.8079, 0.23 ) }
    dend_29 { pt3dadd( 41.0674, -174.965, -14.4204, 1.14 ) }
    dend_29 { pt3dadd( 41.1732, -175.72, -14.7116, 1.14 ) }
    dend_29 { pt3dadd( 41.3083, -176.82, -15.0612, 1.59 ) }
    dend_29 { pt3dadd( 41.5353, -179.345, -15.616, 0.23 ) }
    dend_29 { pt3dadd( 41.6097, -180.548, -15.8653, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_29 { pt3dadd( 41.7073, -182.637, -16.2423, 0.23 ) }
    dend_29 { pt3dadd( 41.7528, -183.298, -16.3815, 0.68 ) }
    dend_29 { pt3dadd( 41.8685, -184.387, -16.6487, 0.23 ) }
    dend_29 { pt3dadd( 42.0441, -185.429, -16.9212, 0.91 ) }
    dend_29 { pt3dadd( 42.4164, -186.772, -17.3323, 0.23 ) }
    dend_29 { pt3dadd( 42.8143, -188.061, -17.6586, 1.14 ) }
    dend_29 { pt3dadd( 43.5448, -190.424, -17.9926, 0.23 ) }
    dend_29 { pt3dadd( 44.081, -192.177, -18.1165, 0.23 ) }
    dend_29 { pt3dadd( 44.5715, -193.825, -18.1494, 0.91 ) }
    dend_29 { pt3dadd( 45.4906, -197.026, -18.0647, 0.23 ) }
    dend_29 { pt3dadd( 46.2984, -199.994, -17.8545, 1.14 ) }
    dend_29 { pt3dadd( 47.4256, -204.354, -17.3201, 0.23 ) }
    dend_29 { pt3dadd( 47.7181, -205.636, -17.1095, 0.91 ) }
    dend_29 { pt3dadd( 47.8708, -206.433, -16.9632, 0.91 ) }
    dend_29 { pt3dadd( 48.1949, -208.746, -16.5472, 0.23 ) }
    dend_29 { pt3dadd( 48.3335, -210.59, -16.3175, 1.14 ) }
    dend_29 { pt3dadd( 48.3972, -213.31, -16.2678, 0.23 ) }
    dend_29 { pt3dadd( 48.3421, -214.458, -16.3399, 0.68 ) }
    dend_29 { pt3dadd( 48.142, -216.57, -16.4538, 0.23 ) }
    dend_29 { pt3dadd( 48.0065, -217.581, -16.5044, 1.14 ) }
    dend_29 { pt3dadd( 47.481, -220.793, -16.6375, 0.23 ) }
    dend_29 { pt3dadd( 47.3114, -221.933, -16.6716, 0.91 ) }
    dend_29 { pt3dadd( 47.2445, -222.503, -16.685, 0.91 ) }
    dend_29 { pt3dadd( 47.0539, -224.957, -16.4987, 0.23 ) }
    dend_29 { pt3dadd( 46.9867, -226.016, -16.2841, 0.91 ) }
    dend_29 { pt3dadd( 46.831, -228.328, -15.6112, 0.23 ) }
    dend_29 { pt3dadd( 46.7598, -229.477, -15.2026, 1.14 ) }
    dend_29 { pt3dadd( 46.6105, -231.388, -14.5373, 0.23 ) }
    dend_29 { pt3dadd( 46.394, -233.664, -13.7946, 0.91 ) }
    dend_29 { pt3dadd( 46.2522, -235.748, -13.329, 0.23 ) }
    dend_29 { pt3dadd( 46.2192, -236.893, -13.1489, 0.91 ) }
    dend_29 { pt3dadd( 46.2026, -239.037, -12.96, 0.23 ) }
    dend_29 { pt3dadd( 46.2156, -241.208, -12.856, 1.14 ) }
    dend_29 { pt3dadd( 46.2676, -242.006, -12.8733, 1.14 ) }
    dend_29 { pt3dadd( 46.7989, -245.672, -13.3842, 0.23 ) }
    dend_29 { pt3dadd( 47.1428, -247.21, -13.7366, 0.23 ) }
    dend_29 { pt3dadd( 47.3313, -247.843, -13.911, 0.68 ) }
    dend_29 { pt3dadd( 48.352, -256.99, -14.6283, 0.68 ) }
    dend_29 { pt3dadd( 50.3359, -266.007, -14.436, 0.68 ) }
    dend_29 { pt3dadd( 53.3604, -274.645, -13.0984, 0.68 ) }
    dend_29 { pt3dadd( 57.0027, -283.0, -11.4609, 0.68 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 41/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 7.91474, -25.3198, -6.97876, 1.59 ) }
    dend_23 { pt3dadd( 7.83672, -25.581, -7.09793, 1.59 ) }
    dend_23 { pt3dadd( 7.2662, -27.4912, -7.96941, 1.14 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 44/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 7.91474, -25.3198, -6.97876, 0.23 ) }
    dend_20 { pt3dadd( 8.35135, -26.2277, -8.52408, 0.23 ) }
    dend_20 { pt3dadd( 9.08504, -27.5625, -10.9567, 0.68 ) }
    dend_20 { pt3dadd( 9.91857, -29.0234, -13.5747, 0.23 ) }
    dend_20 { pt3dadd( 10.8622, -30.44, -16.2553, 0.91 ) }
    dend_20 { pt3dadd( 12.4774, -32.7959, -20.7655, 0.91 ) }
    dend_20 { pt3dadd( 13.4056, -34.1865, -23.3923, 0.23 ) }
    dend_20 { pt3dadd( 14.2126, -35.2307, -25.4996, 0.23 ) }
    dend_20 { pt3dadd( 14.6617, -35.7184, -26.5124, 1.59 ) }
    dend_20 { pt3dadd( 16.5176, -37.4983, -30.1314, 0.23 ) }
    dend_20 { pt3dadd( 16.9684, -37.8804, -30.8301, 0.23 ) }
    dend_20 { pt3dadd( 17.6107, -38.4393, -31.5608, 0.23 ) }
    dend_20 { pt3dadd( 18.4058, -39.0441, -32.2156, 0.23 ) }
    dend_20 { pt3dadd( 19.7659, -39.9289, -33.1597, 1.14 ) }
    dend_20 { pt3dadd( 21.2475, -40.7738, -34.1194, 0.68 ) }
    dend_20 { pt3dadd( 22.7265, -41.6478, -35.0877, 0.68 ) }
    dend_20 { pt3dadd( 24.0978, -42.5108, -36.0793, 0.68 ) }
    dend_20 { pt3dadd( 25.7189, -43.498, -37.5639, 0.23 ) }
    dend_20 { pt3dadd( 27.4617, -44.6529, -39.5481, 0.23 ) }
    dend_20 { pt3dadd( 28.6728, -45.5124, -41.0748, 0.68 ) }
    dend_20 { pt3dadd( 29.9058, -46.3908, -42.7512, 0.23 ) }
    dend_20 { pt3dadd( 30.7177, -46.9619, -43.9367, 0.91 ) }
    dend_20 { pt3dadd( 33.5475, -48.9832, -48.4662, 0.23 ) }
    dend_20 { pt3dadd( 34.3204, -49.6514, -49.9296, 0.23 ) }
    dend_20 { pt3dadd( 35.1451, -50.4067, -51.6175, 0.68 ) }
    dend_20 { pt3dadd( 39.6976, -54.361, -59.9733, 0.68 ) }
    dend_20 { pt3dadd( 43.6587, -58.9011, -68.3133, 0.68 ) }
    dend_20 { pt3dadd( 48.6569, -63.817, -75.8355, 0.68 ) }
    dend_20 { pt3dadd( 53.6598, -69.9273, -82.3691, 0.68 ) }
    dend_20 { pt3dadd( 57.2835, -76.1092, -89.6864, 0.68 ) }
    dend_20 { pt3dadd( 59.8204, -83.0369, -96.7496, 0.68 ) }
    dend_20 { pt3dadd( 61.989, -90.8919, -102.852, 0.68 ) }
    dend_20 { pt3dadd( 66.4343, -98.4375, -108.085, 0.68 ) }
    dend_20 { pt3dadd( 70.5877, -106.314, -113.039, 0.68 ) }
    dend_20 { pt3dadd( 75.1872, -114.505, -116.97, 0.68 ) }
    dend_20 { pt3dadd( 80.0801, -122.805, -120.266, 0.68 ) }
    dend_20 { pt3dadd( 84.3696, -131.765, -122.394, 0.68 ) }
    dend_20 { pt3dadd( 88.389, -140.858, -124.457, 0.68 ) }
    dend_20 { pt3dadd( 91.3608, -150.085, -127.432, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 83/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 202.247, -106.481, -19.038, 0.23 ) }
    dend_18 { pt3dadd( 211.899, -111.09, -19.6585, 0.23 ) }
    dend_18 { pt3dadd( 220.944, -116.63, -20.9653, 0.23 ) }
    dend_18 { pt3dadd( 228.868, -123.748, -21.1881, 0.23 ) }
    dend_18 { pt3dadd( 235.328, -132.044, -22.5224, 0.23 ) }
    dend_18 { pt3dadd( 241.491, -140.655, -21.7749, 0.23 ) }
    dend_18 { pt3dadd( 246.957, -149.692, -20.8458, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 90/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 202.247, -106.481, -19.038, 0.23 ) }
    dend_17 { pt3dadd( 210.06, -110.147, -19.5484, 0.23 ) }
    dend_17 { pt3dadd( 218.078, -113.364, -18.9514, 0.23 ) }
    dend_17 { pt3dadd( 225.83, -117.087, -19.8122, 0.23 ) }
    dend_17 { pt3dadd( 233.236, -120.946, -21.982, 0.23 ) }
    dend_17 { pt3dadd( 240.249, -124.998, -24.9248, 0.23 ) }
    dend_17 { pt3dadd( 247.489, -129.367, -26.5965, 0.23 ) }
    // Section: dend_14, id: dend_14, parent: dend_4 (entry count 97/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 20.7271, 22.0861, -3.69646, 0.23 ) }
    dend_14 { pt3dadd( 22.4108, 23.4506, -4.61217, 0.23 ) }
    dend_14 { pt3dadd( 24.6942, 25.2858, -5.93451, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( 27.1011, 27.1641, -7.24514, 0.23 ) }
    dend_14 { pt3dadd( 28.4095, 28.2038, -7.91666, 0.91 ) }
    dend_14 { pt3dadd( 29.2446, 28.8989, -8.356, 0.91 ) }
    dend_14 { pt3dadd( 30.5985, 30.0733, -9.06794, 0.23 ) }
    dend_14 { pt3dadd( 32.6354, 31.8552, -10.0309, 1.59 ) }
    dend_14 { pt3dadd( 34.443, 33.5097, -10.8514, 0.23 ) }
    dend_14 { pt3dadd( 35.5067, 34.5495, -11.3392, 1.14 ) }
    dend_14 { pt3dadd( 37.3589, 36.31, -12.1312, 0.23 ) }
    dend_14 { pt3dadd( 38.1685, 37.0533, -12.4884, 0.23 ) }
    dend_14 { pt3dadd( 39.6569, 38.4553, -13.167, 1.14 ) }
    dend_14 { pt3dadd( 40.7682, 39.5393, -13.7746, 0.23 ) }
    dend_14 { pt3dadd( 41.507, 40.2682, -14.2506, 1.14 ) }
    dend_14 { pt3dadd( 42.6068, 41.3291, -14.9946, 1.14 ) }
    dend_14 { pt3dadd( 44.5895, 43.1591, -16.2928, 0.23 ) }
    dend_14 { pt3dadd( 46.2786, 44.6642, -17.3655, 1.59 ) }
    dend_14 { pt3dadd( 48.7825, 46.8207, -18.9053, 0.23 ) }
    dend_14 { pt3dadd( 50.3987, 48.1882, -19.8046, 0.68 ) }
    dend_14 { pt3dadd( 52.5976, 49.9713, -20.8719, 0.23 ) }
    dend_14 { pt3dadd( 54.053, 51.1457, -21.4752, 1.36 ) }
    dend_14 { pt3dadd( 55.6106, 52.3616, -21.9727, 0.23 ) }
    dend_14 { pt3dadd( 57.5242, 53.8465, -22.4357, 1.36 ) }
    dend_14 { pt3dadd( 60.865, 56.5025, -22.9857, 0.23 ) }
    dend_14 { pt3dadd( 63.37, 58.5892, -23.3486, 0.23 ) }
    dend_14 { pt3dadd( 64.8109, 59.8871, -23.5124, 0.23 ) }
    dend_14 { pt3dadd( 66.4292, 61.4909, -23.6668, 2.05 ) }
    dend_14 { pt3dadd( 68.2369, 63.4392, -23.789, 0.23 ) }
    dend_14 { pt3dadd( 70.0769, 65.624, -23.8289, 0.23 ) }
    dend_14 { pt3dadd( 71.1201, 66.9645, -23.8027, 1.59 ) }
    dend_14 { pt3dadd( 72.7366, 69.1386, -23.7386, 0.23 ) }
    dend_14 { pt3dadd( 73.3048, 69.895, -23.7107, 1.14 ) }
    dend_14 { pt3dadd( 74.0858, 70.971, -23.662, 1.14 ) }
    dend_14 { pt3dadd( 74.8538, 72.0172, -23.6288, 0.23 ) }
    dend_14 { pt3dadd( 76.2031, 73.8905, -23.5978, 1.14 ) }
    dend_14 { pt3dadd( 77.2536, 75.239, -23.5217, 0.23 ) }
    dend_14 { pt3dadd( 78.0128, 76.122, -23.5001, 0.23 ) }
    dend_14 { pt3dadd( 78.8998, 77.086, -23.5243, 0.91 ) }
    dend_14 { pt3dadd( 80.0813, 78.3265, -23.6045, 0.23 ) }
    dend_14 { pt3dadd( 81.248, 79.5383, -23.7217, 1.36 ) }
    dend_14 { pt3dadd( 83.1912, 81.6468, -24.1149, 0.23 ) }
    dend_14 { pt3dadd( 85.149, 83.8515, -24.7022, 0.23 ) }
    dend_14 { pt3dadd( 86.1165, 84.9173, -25.1036, 0.91 ) }
    dend_14 { pt3dadd( 86.7282, 85.5828, -25.4084, 0.91 ) }
    dend_14 { pt3dadd( 88.0396, 86.9925, -26.2503, 0.23 ) }
    dend_14 { pt3dadd( 89.3493, 88.3442, -27.2598, 0.91 ) }
    dend_14 { pt3dadd( 90.8694, 89.9406, -28.6547, 0.23 ) }
    dend_14 { pt3dadd( 92.1637, 91.2546, -29.8243, 1.14 ) }
    dend_14 { pt3dadd( 92.7581, 91.7985, -30.3298, 1.14 ) }
    dend_14 { pt3dadd( 94.2607, 93.0704, -31.5123, 0.23 ) }
    dend_14 { pt3dadd( 95.2096, 93.7743, -32.1888, 1.14 ) }
    dend_14 { pt3dadd( 96.8104, 94.8416, -33.103, 0.23 ) }
    dend_14 { pt3dadd( 97.5943, 95.3491, -33.5304, 1.14 ) }
    dend_14 { pt3dadd( 100.405, 97.1402, -34.9565, 0.23 ) }
    dend_14 { pt3dadd( 101.446, 97.8, -35.4555, 0.23 ) }
    dend_14 { pt3dadd( 103.504, 99.1278, -36.3245, 1.82 ) }
    dend_14 { pt3dadd( 105.753, 100.595, -37.227, 0.23 ) }
    dend_14 { pt3dadd( 108.505, 102.397, -38.2604, 1.36 ) }
    dend_14 { pt3dadd( 109.272, 102.926, -38.5339, 0.23 ) }
    dend_14 { pt3dadd( 110.336, 103.711, -38.8706, 0.68 ) }
    dend_14 { pt3dadd( 112.278, 105.191, -39.4263, 0.23 ) }
    dend_14 { pt3dadd( 113.281, 106.037, -39.664, 0.23 ) }
    dend_14 { pt3dadd( 114.115, 106.778, -39.8358, 1.14 ) }
    dend_14 { pt3dadd( 114.981, 107.557, -39.9398, 1.14 ) }
    dend_14 { pt3dadd( 115.661, 108.219, -40.0279, 0.23 ) }
    dend_14 { pt3dadd( 116.157, 108.726, -40.1302, 0.23 ) }
    dend_14 { pt3dadd( 116.978, 109.651, -40.3516, 1.14 ) }
    dend_14 { pt3dadd( 117.607, 110.425, -40.5303, 1.14 ) }
    dend_14 { pt3dadd( 118.606, 111.763, -40.9155, 0.23 ) }
    dend_14 { pt3dadd( 119.137, 112.496, -41.1575, 0.91 ) }
    dend_14 { pt3dadd( 120.238, 114.072, -41.6957, 0.23 ) }
    dend_14 { pt3dadd( 121.406, 115.822, -42.2977, 1.14 ) }
    dend_14 { pt3dadd( 122.443, 117.368, -42.8343, 0.23 ) }
    dend_14 { pt3dadd( 123.664, 119.173, -43.5437, 1.14 ) }
    dend_14 { pt3dadd( 124.281, 120.068, -43.9174, 0.23 ) }
    dend_14 { pt3dadd( 125.0, 121.085, -44.3331, 0.68 ) }
    dend_14 { pt3dadd( 126.163, 122.626, -44.9336, 0.23 ) }
    dend_14 { pt3dadd( 126.592, 123.158, -45.1802, 0.91 ) }
    dend_14 { pt3dadd( 128.394, 125.405, -46.2329, 0.23 ) }
    dend_14 { pt3dadd( 129.065, 126.282, -46.6062, 0.23 ) }
    dend_14 { pt3dadd( 129.818, 127.384, -47.0691, 0.23 ) }
    dend_14 { pt3dadd( 130.615, 128.773, -47.654, 0.91 ) }
    dend_14 { pt3dadd( 131.471, 130.679, -48.3937, 0.23 ) }
    dend_14 { pt3dadd( 132.011, 132.54, -49.051, 1.14 ) }
    dend_14 { pt3dadd( 132.144, 133.431, -49.3195, 0.23 ) }
    dend_14 { pt3dadd( 132.214, 134.669, -49.6757, 0.91 ) }
    dend_14 { pt3dadd( 132.196, 136.858, -50.2263, 0.23 ) }
    dend_14 { pt3dadd( 132.101, 138.347, -50.5323, 0.91 ) }
    dend_14 { pt3dadd( 131.913, 140.333, -50.8358, 0.23 ) }
    dend_14 { pt3dadd( 131.771, 141.535, -51.0708, 0.91 ) }
    dend_14 { pt3dadd( 131.591, 143.045, -51.3977, 0.23 ) }
    dend_14 { pt3dadd( 131.402, 144.926, -51.8395, 0.23 ) }
    dend_14 { pt3dadd( 131.31, 145.811, -52.0387, 0.91 ) }
    dend_14 { pt3dadd( 131.192, 146.993, -52.3151, 0.23 ) }
    dend_14 { pt3dadd( 131.004, 149.337, -52.8606, 1.14 ) }
    dend_14 { pt3dadd( 130.931, 150.211, -53.067, 1.14 ) }
    dend_14 { pt3dadd( 130.665, 153.352, -53.7555, 0.23 ) }
    dend_14 { pt3dadd( 130.514, 155.009, -54.1298, 0.23 ) }
    dend_14 { pt3dadd( 130.471, 155.595, -54.2549, 0.45 ) }
    dend_14 { pt3dadd( 130.433, 156.351, -54.3861, 0.23 ) }
    dend_14 { pt3dadd( 130.404, 157.248, -54.4447, 0.23 ) }
    dend_14 { pt3dadd( 130.359, 159.058, -54.5362, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_14 { pt3dadd( 137.489, 166.825, -55.9844, 0.23 ) }
    dend_14 { pt3dadd( 144.21, 174.421, -59.2408, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 20.7271, 22.0861, -3.69646, 0.23 ) }
    dend_5 { pt3dadd( 22.3518, 22.8309, -4.0331, 0.23 ) }
    dend_5 { pt3dadd( 25.2106, 24.1671, -4.63563, 0.91 ) }
    dend_5 { pt3dadd( 27.6244, 25.2785, -5.21025, 0.23 ) }
    dend_5 { pt3dadd( 28.9861, 25.8911, -5.5383, 0.91 ) }
    dend_5 { pt3dadd( 30.4826, 26.5425, -5.87964, 0.23 ) }
    dend_5 { pt3dadd( 31.8695, 27.1355, -6.17088, 0.23 ) }
    dend_5 { pt3dadd( 33.0911, 27.6585, -6.43846, 0.91 ) }
    dend_5 { pt3dadd( 34.3606, 28.2291, -6.71607, 0.23 ) }
    dend_5 { pt3dadd( 35.8708, 28.8989, -6.94326, 0.91 ) }
    dend_5 { pt3dadd( 37.6968, 29.7244, -7.20404, 0.23 ) }
    dend_5 { pt3dadd( 39.3994, 30.4994, -7.39435, 0.68 ) }
    dend_5 { pt3dadd( 40.5922, 31.045, -7.52809, 0.23 ) }
    dend_5 { pt3dadd( 41.7521, 31.587, -7.64713, 1.14 ) }
    dend_5 { pt3dadd( 43.4473, 32.4315, -7.77048, 0.23 ) }
    dend_5 { pt3dadd( 44.4188, 32.9497, -7.86642, 0.23 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 18/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 29.5412, 269.166, -147.776, 0.23 ) }
    dend_3 { pt3dadd( 30.8456, 278.048, -153.331, 0.23 ) }
    dend_3 { pt3dadd( 30.6228, 286.078, -160.216, 0.23 ) }
    dend_3 { pt3dadd( 31.7135, 294.351, -166.713, 0.23 ) }
    dend_3 { pt3dadd( 30.7621, 303.171, -172.429, 0.23 ) }
    dend_3 { pt3dadd( 27.6536, 311.383, -178.322, 0.23 ) }
    dend_3 { pt3dadd( 23.0301, 319.862, -182.622, 0.23 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 25/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 29.5412, 269.166, -147.776, 0.23 ) }
    dend_2 { pt3dadd( 29.9644, 277.725, -152.023, 0.23 ) }
    dend_2 { pt3dadd( 31.6369, 286.456, -155.528, 0.23 ) }
    dend_2 { pt3dadd( 33.9431, 295.473, -157.659, 0.23 ) }
    dend_2 { pt3dadd( 35.4042, 304.622, -159.953, 0.23 ) }
    dend_2 { pt3dadd( 37.2522, 313.93, -160.971, 0.23 ) }
    dend_2 { pt3dadd( 40.1196, 322.921, -162.448, 0.23 ) }
    // Section: dend_70, id: dend_70, parent: dend_62 (entry count 32/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -14.6401, 15.8484, -13.7865, 0.23 ) }
    dend_70 { pt3dadd( -15.5677, 14.7069, -16.0857, 0.23 ) }
    dend_70 { pt3dadd( -16.107, 14.0856, -17.4777, 0.23 ) }
    dend_70 { pt3dadd( -16.5979, 13.5187, -18.688, 0.91 ) }
    dend_70 { pt3dadd( -17.5818, 12.3964, -20.872, 0.68 ) }
    dend_70 { pt3dadd( -18.5075, 11.3746, -22.6925, 0.23 ) }
    dend_70 { pt3dadd( -19.2405, 10.6355, -23.934, 0.68 ) }
    dend_70 { pt3dadd( -20.467, 9.40948, -25.9061, 0.23 ) }
    dend_70 { pt3dadd( -21.0559, 8.90696, -26.6672, 0.91 ) }
    dend_70 { pt3dadd( -22.3725, 7.94367, -28.0618, 0.23 ) }
    dend_70 { pt3dadd( -23.2608, 7.36827, -28.7726, 1.14 ) }
    dend_70 { pt3dadd( -25.1832, 6.1123, -30.0075, 0.23 ) }
    dend_70 { pt3dadd( -25.9761, 5.55821, -30.4729, 0.68 ) }
    dend_70 { pt3dadd( -26.8221, 4.94065, -30.9171, 0.23 ) }
    dend_70 { pt3dadd( -27.4747, 4.42375, -31.265, 0.23 ) }
    dend_70 { pt3dadd( -27.9941, 3.97877, -31.5317, 0.23 ) }
    dend_70 { pt3dadd( -29.255, 2.6779, -32.26, 1.14 ) }
    dend_70 { pt3dadd( -30.5522, 1.11847, -33.0458, 0.23 ) }
    dend_70 { pt3dadd( -31.8773, -0.667909, -34.0072, 0.91 ) }
    dend_70 { pt3dadd( -32.8918, -2.12308, -34.8296, 0.23 ) }
    dend_70 { pt3dadd( -33.6013, -3.23812, -35.4559, 1.14 ) }
    dend_70 { pt3dadd( -34.8667, -5.26227, -36.6277, 0.23 ) }
    dend_70 { pt3dadd( -35.5093, -6.33179, -37.2662, 0.91 ) }
    dend_70 { pt3dadd( -36.5289, -8.13979, -38.3174, 0.23 ) }
    dend_70 { pt3dadd( -37.1095, -9.30264, -38.9837, 1.14 ) }
    dend_70 { pt3dadd( -37.8225, -10.8733, -39.9799, 0.23 ) }
    dend_70 { pt3dadd( -43.0491, -18.121, -44.2527, 0.23 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 59/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -14.6401, 15.8484, -13.7865, 0.23 ) }
    dend_63 { pt3dadd( -13.1191, 15.3704, -15.3066, 0.23 ) }
    dend_63 { pt3dadd( -11.2027, 14.8608, -17.145, 0.91 ) }
    dend_63 { pt3dadd( -9.66067, 14.4564, -18.542, 0.23 ) }
    dend_63 { pt3dadd( -9.19897, 14.3498, -18.9831, 0.68 ) }
    dend_63 { pt3dadd( -8.0844, 14.1313, -20.1183, 0.23 ) }
    dend_63 { pt3dadd( -7.35402, 14.0194, -20.949, 1.14 ) }
    dend_63 { pt3dadd( -5.57003, 13.7742, -23.1069, 0.23 ) }
    dend_63 { pt3dadd( -4.29223, 13.5847, -24.95, 0.91 ) }
    dend_63 { pt3dadd( -2.46277, 13.2145, -27.9838, 0.23 ) }
    dend_63 { pt3dadd( -1.70777, 13.029, -29.4029, 1.36 ) }
    dend_63 { pt3dadd( -0.140673, 12.6073, -32.9116, 0.23 ) }
    dend_63 { pt3dadd( 0.484605, 12.3954, -34.6762, 0.91 ) }
    dend_63 { pt3dadd( 1.64934, 11.7883, -39.1753, 0.23 ) }
    dend_63 { pt3dadd( 2.10609, 11.481, -41.3868, 0.68 ) }
    dend_63 { pt3dadd( 2.48436, 11.0825, -43.7708, 0.91 ) }
    dend_63 { pt3dadd( 2.81084, 10.5673, -46.449, 0.23 ) }
    dend_63 { pt3dadd( 2.88126, 10.2545, -47.9523, 0.23 ) }
    dend_63 { pt3dadd( 2.83114, 9.98186, -49.637, 1.14 ) }
    dend_63 { pt3dadd( 7.05462, 9.04777, -58.0791, 1.14 ) }
    dend_63 { pt3dadd( 13.1523, 9.48742, -65.3215, 1.14 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 80/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -47.5188, 35.5296, -10.733, 0.23 ) }
    dend_59 { pt3dadd( -49.5001, 37.5951, -9.84384, 0.23 ) }
    dend_59 { pt3dadd( -51.3232, 39.4268, -9.12403, 0.23 ) }
    dend_59 { pt3dadd( -52.0947, 40.1732, -8.86784, 0.91 ) }
    dend_59 { pt3dadd( -54.6358, 42.4949, -8.01833, 0.23 ) }
    dend_59 { pt3dadd( -56.1703, 43.8512, -7.53222, 0.91 ) }
    dend_59 { pt3dadd( -59.3824, 46.6342, -6.5831, 0.23 ) }
    dend_59 { pt3dadd( -61.4082, 48.2352, -5.96589, 1.14 ) }
    dend_59 { pt3dadd( -64.5861, 50.6245, -5.07781, 0.23 ) }
    dend_59 { pt3dadd( -66.8497, 52.3027, -4.51773, 0.91 ) }
    dend_59 { pt3dadd( -68.8761, 53.7613, -4.11781, 0.23 ) }
    dend_59 { pt3dadd( -70.6111, 54.9001, -3.72356, 0.91 ) }
    dend_59 { pt3dadd( -73.2023, 56.3898, -3.12512, 0.23 ) }
    dend_59 { pt3dadd( -75.3028, 57.4874, -2.62385, 0.68 ) }
    dend_59 { pt3dadd( -76.8277, 58.18, -2.32331, 0.23 ) }
    dend_59 { pt3dadd( -78.4494, 58.7939, -2.07508, 0.68 ) }
    dend_59 { pt3dadd( -81.875, 59.8328, -1.63337, 0.23 ) }
    dend_59 { pt3dadd( -83.5355, 60.2079, -1.46134, 1.14 ) }
    dend_59 { pt3dadd( -86.1684, 60.6463, -1.29227, 0.23 ) }
    dend_59 { pt3dadd( -89.3923, 61.0167, -1.10899, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_59 { pt3dadd( -92.6479, 61.2935, -1.07013, 0.68 ) }
    dend_59 { pt3dadd( -94.2597, 61.4404, -1.14014, 0.23 ) }
    dend_59 { pt3dadd( -97.9086, 61.8198, -1.55307, 0.68 ) }
    dend_59 { pt3dadd( -99.2534, 61.9741, -1.73478, 0.23 ) }
    dend_59 { pt3dadd( -101.18, 62.2371, -2.04751, 0.68 ) }
    dend_59 { pt3dadd( -103.343, 62.6434, -2.45129, 0.23 ) }
    dend_59 { pt3dadd( -106.303, 63.3339, -3.07113, 0.91 ) }
    dend_59 { pt3dadd( -109.55, 64.2556, -3.70443, 0.23 ) }
    dend_59 { pt3dadd( -112.307, 65.1917, -4.22175, 0.91 ) }
    dend_59 { pt3dadd( -115.22, 66.2452, -4.56723, 0.23 ) }
    dend_59 { pt3dadd( -116.611, 66.7579, -4.66258, 0.23 ) }
    dend_59 { pt3dadd( -119.434, 67.8878, -4.75139, 0.91 ) }
    dend_59 { pt3dadd( -121.982, 68.9582, -4.67326, 0.23 ) }
    dend_59 { pt3dadd( -123.673, 69.7245, -4.53873, 0.68 ) }
    dend_59 { pt3dadd( -127.98, 71.7965, -4.01147, 0.23 ) }
    dend_59 { pt3dadd( -130.58, 73.1445, -3.59593, 0.68 ) }
    dend_59 { pt3dadd( -133.741, 74.9181, -3.01317, 0.23 ) }
    dend_59 { pt3dadd( -136.632, 76.7263, -2.27335, 0.23 ) }
    dend_59 { pt3dadd( -138.438, 77.9864, -1.69106, 0.23 ) }
    dend_59 { pt3dadd( -139.992, 79.27, -1.07236, 0.68 ) }
    dend_59 { pt3dadd( -140.84, 80.1061, -0.651185, 0.23 ) }
    dend_59 { pt3dadd( -141.483, 80.7967, -0.260531, 0.91 ) }
    dend_59 { pt3dadd( -144.41, 84.1327, 1.81136, 0.23 ) }
    dend_59 { pt3dadd( -145.517, 85.5388, 2.64438, 0.23 ) }
    dend_59 { pt3dadd( -147.043, 87.5498, 3.91757, 0.23 ) }
    dend_59 { pt3dadd( -148.589, 89.5599, 5.19064, 0.68 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 26/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -47.5188, 35.5296, -10.733, 0.45 ) }
    dend_58 { pt3dadd( -49.7369, 35.3693, -12.7134, 0.45 ) }
    dend_58 { pt3dadd( -52.5994, 35.0191, -15.215, 0.91 ) }
    dend_58 { pt3dadd( -54.0436, 34.8145, -16.6172, 0.23 ) }
    dend_58 { pt3dadd( -56.1201, 34.4097, -18.9295, 0.91 ) }
    dend_58 { pt3dadd( -56.8566, 34.2374, -19.7974, 0.91 ) }
    dend_58 { pt3dadd( -57.7245, 34.0217, -20.8641, 0.23 ) }
    dend_58 { pt3dadd( -59.2952, 33.5717, -22.9246, 0.68 ) }
    dend_58 { pt3dadd( -61.0435, 32.961, -25.345, 0.23 ) }
    dend_58 { pt3dadd( -62.8231, 32.3267, -27.8211, 1.14 ) }
    dend_58 { pt3dadd( -63.8193, 31.9825, -29.2422, 1.14 ) }
    dend_58 { pt3dadd( -65.7783, 31.3713, -32.0652, 0.23 ) }
    dend_58 { pt3dadd( -66.9662, 31.0824, -33.7105, 1.14 ) }
    dend_58 { pt3dadd( -69.1275, 30.6571, -36.6631, 0.23 ) }
    dend_58 { pt3dadd( -70.3961, 30.4525, -38.221, 0.23 ) }
    dend_58 { pt3dadd( -72.5802, 30.1348, -40.7253, 0.23 ) }
    dend_58 { pt3dadd( -73.0045, 30.0558, -41.1743, 0.91 ) }
    dend_58 { pt3dadd( -74.3019, 29.7833, -42.396, 1.59 ) }
    dend_58 { pt3dadd( -77.3174, 29.15, -44.9326, 0.23 ) }
    dend_58 { pt3dadd( -80.3064, 28.5516, -47.1468, 1.36 ) }
    dend_58 { pt3dadd( -82.8676, 28.0401, -48.8111, 0.91 ) }
    dend_58 { pt3dadd( -86.5784, 27.2979, -50.9131, 0.23 ) }
    dend_58 { pt3dadd( -89.3634, 26.747, -52.376, 1.14 ) }
    dend_58 { pt3dadd( -92.2054, 26.1933, -53.75, 0.23 ) }
    dend_58 { pt3dadd( -93.9263, 25.9073, -54.4669, 0.23 ) }
    dend_58 { pt3dadd( -96.4475, 25.5713, -55.4653, 0.68 ) }
    dend_58 { pt3dadd( -97.7872, 25.4412, -55.9829, 0.68 ) }
    dend_58 { pt3dadd( -99.6759, 25.3051, -56.7342, 0.23 ) }
    dend_58 { pt3dadd( -102.071, 25.1049, -57.7185, 0.91 ) }
    dend_58 { pt3dadd( -104.226, 24.9323, -58.6867, 0.23 ) }
    dend_58 { pt3dadd( -105.26, 24.8603, -59.1943, 0.91 ) }
    dend_58 { pt3dadd( -107.047, 24.7694, -60.1423, 0.23 ) }
    dend_58 { pt3dadd( -110.377, 24.6064, -61.9481, 1.14 ) }
    dend_58 { pt3dadd( -111.637, 24.5461, -62.6461, 0.23 ) }
    dend_58 { pt3dadd( -113.406, 24.4664, -63.6412, 0.68 ) }
    dend_58 { pt3dadd( -115.699, 24.3436, -64.9471, 0.23 ) }
    dend_58 { pt3dadd( -117.488, 24.2346, -65.8878, 0.45 ) }
    dend_58 { pt3dadd( -119.101, 24.0721, -66.6109, 0.23 ) }
    dend_58 { pt3dadd( -119.908, 23.974, -66.9194, 0.23 ) }
    dend_58 { pt3dadd( -122.134, 23.6345, -67.5768, 0.91 ) }
    dend_58 { pt3dadd( -126.013, 22.91, -68.4912, 0.23 ) }
    dend_58 { pt3dadd( -128.767, 22.3639, -69.0556, 0.91 ) }
    dend_58 { pt3dadd( -133.92, 21.3432, -70.0045, 0.23 ) }
    dend_58 { pt3dadd( -135.311, 21.0591, -70.2411, 0.23 ) }
    dend_58 { pt3dadd( -138.881, 20.2609, -70.7987, 1.59 ) }
    dend_58 { pt3dadd( -143.431, 19.1188, -71.3731, 0.23 ) }
    dend_58 { pt3dadd( -144.852, 18.7363, -71.5334, 0.91 ) }
    dend_58 { pt3dadd( -145.761, 18.49, -71.6317, 0.91 ) }
    dend_58 { pt3dadd( -149.312, 17.5384, -72.0073, 0.23 ) }
    dend_58 { pt3dadd( -152.551, 16.6286, -72.3888, 0.91 ) }
    dend_58 { pt3dadd( -155.638, 15.7533, -72.8165, 0.23 ) }
    dend_58 { pt3dadd( -157.295, 15.2795, -73.0487, 1.14 ) }
    dend_58 { pt3dadd( -160.476, 14.3732, -73.5842, 0.23 ) }
    dend_58 { pt3dadd( -162.148, 13.9007, -73.9452, 0.91 ) }
    dend_58 { pt3dadd( -163.424, 13.5886, -74.2975, 0.23 ) }
    dend_58 { pt3dadd( -165.068, 13.263, -74.9165, 0.68 ) }
    dend_58 { pt3dadd( -169.393, 12.5276, -76.855, 0.23 ) }
    dend_58 { pt3dadd( -171.204, 12.2242, -77.7101, 0.91 ) }
    dend_58 { pt3dadd( -173.348, 11.8787, -78.7943, 0.23 ) }
    dend_58 { pt3dadd( -175.829, 11.5306, -80.1211, 0.68 ) }
    dend_58 { pt3dadd( -178.352, 11.1924, -81.5603, 0.23 ) }
    dend_58 { pt3dadd( -180.218, 10.9385, -82.7013, 0.23 ) }
    dend_58 { pt3dadd( -182.527, 10.5749, -84.2455, 0.91 ) }
    dend_58 { pt3dadd( -185.128, 10.1153, -86.0071, 0.23 ) }
    dend_58 { pt3dadd( -186.966, 9.77301, -87.2468, 1.14 ) }
    dend_58 { pt3dadd( -189.644, 9.22573, -89.0407, 0.23 ) }
    dend_58 { pt3dadd( -191.08, 8.95467, -89.9573, 0.91 ) }
    dend_58 { pt3dadd( -193.366, 8.65909, -91.3943, 0.23 ) }
    dend_58 { pt3dadd( -196.098, 8.4717, -93.0082, 0.91 ) }
    dend_58 { pt3dadd( -197.661, 8.42258, -93.8403, 0.23 ) }
    dend_58 { pt3dadd( -199.014, 8.43402, -94.4719, 0.68 ) }
    dend_58 { pt3dadd( -200.502, 8.53276, -95.122, 0.23 ) }
    dend_58 { pt3dadd( -203.273, 8.81433, -96.1904, 0.91 ) }
    dend_58 { pt3dadd( -206.054, 9.09998, -97.0544, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_58 { pt3dadd( -207.446, 9.25385, -97.3954, 0.23 ) }
    dend_58 { pt3dadd( -208.552, 9.3532, -97.63, 0.91 ) }
    dend_58 { pt3dadd( -209.751, 9.42744, -97.8395, 0.23 ) }
    dend_58 { pt3dadd( -212.856, 9.5172, -98.329, 0.91 ) }
    dend_58 { pt3dadd( -215.601, 9.44515, -98.5435, 0.23 ) }
    dend_58 { pt3dadd( -217.759, 9.29215, -98.5052, 0.68 ) }
    dend_58 { pt3dadd( -219.515, 9.10197, -98.3705, 0.23 ) }
    dend_58 { pt3dadd( -223.262, 8.48325, -97.8346, 0.91 ) }
    dend_58 { pt3dadd( -225.229, 8.12194, -97.5064, 0.23 ) }
    dend_58 { pt3dadd( -229.067, 7.32804, -96.7629, 0.91 ) }
    dend_58 { pt3dadd( -232.664, 6.52615, -95.9508, 0.23 ) }
    dend_58 { pt3dadd( -234.982, 5.89274, -95.3153, 0.91 ) }
    dend_58 { pt3dadd( -238.849, 4.76029, -93.956, 0.23 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 54.2983, 39.4277, -17.6049, 0.23 ) }
    dend_55 { pt3dadd( 56.1913, 40.939, -16.817, 0.23 ) }
    dend_55 { pt3dadd( 57.4526, 41.8689, -16.2513, 0.91 ) }
    dend_55 { pt3dadd( 59.0606, 42.9863, -15.4204, 0.23 ) }
    dend_55 { pt3dadd( 61.3348, 44.5341, -14.2361, 0.23 ) }
    dend_55 { pt3dadd( 62.0197, 44.9937, -13.8822, 0.91 ) }
    dend_55 { pt3dadd( 63.5795, 46.0812, -13.0299, 0.23 ) }
    dend_55 { pt3dadd( 64.7499, 46.8786, -12.3238, 0.68 ) }
    dend_55 { pt3dadd( 66.3821, 48.0629, -11.2962, 0.23 ) }
    dend_55 { pt3dadd( 67.5508, 49.0046, -10.5012, 0.68 ) }
    dend_55 { pt3dadd( 68.9987, 50.3439, -9.54873, 0.23 ) }
    dend_55 { pt3dadd( 70.3541, 51.6755, -8.6815, 0.68 ) }
    dend_55 { pt3dadd( 71.0128, 52.3631, -8.29615, 0.23 ) }
    dend_55 { pt3dadd( 71.6797, 53.0628, -7.94962, 0.91 ) }
    dend_55 { pt3dadd( 73.2029, 54.5212, -7.33732, 0.23 ) }
    dend_55 { pt3dadd( 74.3802, 55.509, -6.9507, 0.68 ) }
    dend_55 { pt3dadd( 76.1167, 56.7938, -6.51628, 0.23 ) }
    dend_55 { pt3dadd( 77.2376, 57.4894, -6.27894, 0.68 ) }
    dend_55 { pt3dadd( 79.6042, 58.822, -5.71261, 0.23 ) }
    dend_55 { pt3dadd( 81.8446, 59.9935, -5.16544, 0.91 ) }
    dend_55 { pt3dadd( 83.3783, 60.7575, -4.87482, 0.23 ) }
    dend_55 { pt3dadd( 84.1747, 61.1505, -4.73377, 0.23 ) }
    dend_55 { pt3dadd( 86.8823, 62.5916, -4.28636, 0.68 ) }
    dend_55 { pt3dadd( 89.072, 63.887, -3.94596, 0.23 ) }
    dend_55 { pt3dadd( 90.3725, 64.7983, -3.76669, 0.91 ) }
    dend_55 { pt3dadd( 93.1455, 67.0026, -3.55896, 0.23 ) }
    dend_55 { pt3dadd( 93.9238, 67.6677, -3.56637, 0.23 ) }
    dend_55 { pt3dadd( 95.1893, 68.8094, -3.71374, 0.91 ) }
    dend_55 { pt3dadd( 97.0459, 70.5413, -4.19923, 0.23 ) }
    dend_55 { pt3dadd( 98.389, 71.8395, -4.67988, 0.91 ) }
    dend_55 { pt3dadd( 100.405, 73.8284, -5.44453, 0.23 ) }
    dend_55 { pt3dadd( 101.877, 75.2917, -6.0209, 0.68 ) }
    dend_55 { pt3dadd( 103.639, 76.9564, -6.79206, 0.23 ) }
    dend_55 { pt3dadd( 104.843, 78.0175, -7.40759, 0.23 ) }
    dend_55 { pt3dadd( 105.981, 78.9553, -8.12316, 0.91 ) }
    dend_55 { pt3dadd( 114.548, 82.9177, -8.05604, 0.91 ) }
    dend_55 { pt3dadd( 123.579, 85.0432, -6.15341, 0.91 ) }
    dend_55 { pt3dadd( 133.055, 85.3443, -6.34631, 0.91 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 51/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 54.2983, 39.4277, -17.6049, 0.23 ) }
    dend_54 { pt3dadd( 56.0222, 39.3459, -20.1512, 0.23 ) }
    dend_54 { pt3dadd( 57.4827, 39.2556, -22.1938, 0.68 ) }
    dend_54 { pt3dadd( 59.6124, 39.0798, -25.0993, 1.36 ) }
    dend_54 { pt3dadd( 62.0682, 38.8129, -28.2666, 0.23 ) }
    dend_54 { pt3dadd( 63.3024, 38.6675, -29.7381, 0.45 ) }
    dend_54 { pt3dadd( 65.3404, 38.4376, -32.0324, 0.45 ) }
    dend_54 { pt3dadd( 67.0679, 38.2601, -33.7102, 0.23 ) }
    dend_54 { pt3dadd( 68.6093, 38.0802, -35.0145, 1.14 ) }
    dend_54 { pt3dadd( 69.8599, 37.9705, -35.8938, 1.14 ) }
    dend_54 { pt3dadd( 71.3743, 37.9213, -36.7734, 0.45 ) }
    dend_54 { pt3dadd( 75.3729, 38.1145, -38.7629, 0.23 ) }
    dend_54 { pt3dadd( 77.1844, 38.2927, -39.4928, 1.14 ) }
    dend_54 { pt3dadd( 78.4879, 38.4284, -39.9329, 0.23 ) }
    dend_54 { pt3dadd( 80.1268, 38.6489, -40.3953, 0.23 ) }
    dend_54 { pt3dadd( 82.5475, 38.9807, -41.0637, 0.91 ) }
    dend_54 { pt3dadd( 85.1554, 39.3431, -41.8514, 0.23 ) }
    dend_54 { pt3dadd( 85.8586, 39.4404, -42.0518, 0.68 ) }
    dend_54 { pt3dadd( 86.9777, 39.5814, -42.424, 0.68 ) }
    dend_54 { pt3dadd( 88.5706, 39.7589, -43.1075, 0.23 ) }
    dend_54 { pt3dadd( 91.1882, 40.0124, -44.2761, 0.91 ) }
    dend_54 { pt3dadd( 94.3623, 40.4238, -45.7321, 0.23 ) }
    dend_54 { pt3dadd( 95.9044, 40.6303, -46.4584, 1.14 ) }
    dend_54 { pt3dadd( 97.0932, 40.7724, -46.9959, 1.14 ) }
    dend_54 { pt3dadd( 100.974, 41.2232, -48.6838, 0.23 ) }
    dend_54 { pt3dadd( 103.012, 41.448, -49.5165, 0.68 ) }
    dend_54 { pt3dadd( 104.522, 41.6552, -49.9971, 0.23 ) }
    dend_54 { pt3dadd( 107.637, 42.1819, -50.722, 1.14 ) }
    dend_54 { pt3dadd( 110.705, 42.8853, -51.2931, 0.23 ) }
    dend_54 { pt3dadd( 112.201, 43.348, -51.4597, 0.91 ) }
    dend_54 { pt3dadd( 113.089, 43.7025, -51.5124, 1.36 ) }
    dend_54 { pt3dadd( 115.823, 45.0727, -51.6972, 0.23 ) }
    dend_54 { pt3dadd( 117.643, 46.1303, -51.7567, 0.91 ) }
    dend_54 { pt3dadd( 118.918, 46.9709, -51.7582, 0.91 ) }
    dend_54 { pt3dadd( 120.878, 48.368, -51.7804, 0.23 ) }
    dend_54 { pt3dadd( 122.837, 49.7301, -51.819, 0.91 ) }
    dend_54 { pt3dadd( 125.761, 51.6175, -51.9306, 0.23 ) }
    dend_54 { pt3dadd( 127.639, 52.736, -52.0418, 0.91 ) }
    dend_54 { pt3dadd( 130.11, 54.0341, -52.166, 0.23 ) }
    dend_54 { pt3dadd( 130.828, 54.3837, -52.1943, 0.23 ) }
    dend_54 { pt3dadd( 132.841, 55.3089, -52.258, 0.23 ) }
    dend_54 { pt3dadd( 135.335, 56.3731, -52.2654, 0.68 ) }
    dend_54 { pt3dadd( 137.183, 57.0873, -52.2894, 0.23 ) }
    dend_54 { pt3dadd( 139.245, 57.8912, -52.3015, 0.23 ) }
    dend_54 { pt3dadd( 141.414, 58.6892, -52.2751, 0.68 ) }
    dend_54 { pt3dadd( 150.987, 59.3862, -57.2531, 0.68 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 97/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 21.673, 60.0753, -10.203, 0.23 ) }
    dend_52 { pt3dadd( 19.9773, 61.171, -10.0334, 0.23 ) }
    dend_52 { pt3dadd( 18.3374, 62.3346, -9.98114, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_52 { pt3dadd( 15.9104, 64.367, -10.0217, 0.23 ) }
    dend_52 { pt3dadd( 14.998, 65.3033, -10.1776, 1.14 ) }
    dend_52 { pt3dadd( 14.2174, 66.2677, -10.3977, 0.23 ) }
    dend_52 { pt3dadd( 13.4319, 67.4021, -10.6826, 0.68 ) }
    dend_52 { pt3dadd( 12.7346, 68.8078, -11.1253, 0.23 ) }
    dend_52 { pt3dadd( 12.149, 70.4772, -11.7727, 1.36 ) }
    dend_52 { pt3dadd( 11.4738, 73.2599, -12.9772, 0.23 ) }
    dend_52 { pt3dadd( 11.2089, 74.7169, -13.6287, 0.91 ) }
    dend_52 { pt3dadd( 10.9915, 76.1634, -14.2779, 0.23 ) }
    dend_52 { pt3dadd( 10.7894, 77.8564, -14.9963, 0.68 ) }
    dend_52 { pt3dadd( 10.6396, 79.3002, -15.5554, 0.23 ) }
    dend_52 { pt3dadd( 10.5775, 80.3129, -15.9278, 1.14 ) }
    dend_52 { pt3dadd( 10.5795, 82.1168, -16.5616, 0.23 ) }
    dend_52 { pt3dadd( 10.628, 83.3608, -17.0247, 0.23 ) }
    dend_52 { pt3dadd( 10.7015, 84.5269, -17.4589, 0.91 ) }
    dend_52 { pt3dadd( 10.8284, 85.9659, -17.9693, 0.23 ) }
    dend_52 { pt3dadd( 10.997, 87.5698, -18.504, 0.23 ) }
    dend_52 { pt3dadd( 11.267, 89.6391, -19.1816, 1.14 ) }
    dend_52 { pt3dadd( 11.4246, 90.6357, -19.4852, 1.14 ) }
    dend_52 { pt3dadd( 11.7693, 92.4822, -20.0697, 0.23 ) }
    dend_52 { pt3dadd( 12.0447, 93.9527, -20.5201, 0.23 ) }
    dend_52 { pt3dadd( 12.2697, 95.1318, -20.8403, 0.23 ) }
    dend_52 { pt3dadd( 12.4218, 96.0983, -21.098, 0.23 ) }
    dend_52 { pt3dadd( 12.5135, 96.9758, -21.3417, 0.45 ) }
    dend_52 { pt3dadd( 12.4987, 98.9773, -22.0979, 0.23 ) }
    dend_52 { pt3dadd( 12.3656, 99.9508, -22.5326, 0.91 ) }
    dend_52 { pt3dadd( 12.1373, 100.887, -23.0303, 0.91 ) }
    dend_52 { pt3dadd( 11.7256, 102.291, -23.8498, 0.68 ) }
    dend_52 { pt3dadd( 11.1306, 104.289, -25.109, 1.36 ) }
    dend_52 { pt3dadd( 10.437, 106.666, -26.6902, 0.23 ) }
    dend_52 { pt3dadd( 10.2292, 107.603, -27.3411, 0.23 ) }
    dend_52 { pt3dadd( 10.0669, 109.026, -28.3583, 0.23 ) }
    dend_52 { pt3dadd( 10.1125, 109.97, -29.0434, 1.14 ) }
    dend_52 { pt3dadd( 10.6051, 111.61, -30.1208, 0.23 ) }
    dend_52 { pt3dadd( 10.7931, 111.944, -30.312, 0.68 ) }
    dend_52 { pt3dadd( 12.2549, 113.908, -31.2902, 0.23 ) }
    dend_52 { pt3dadd( 12.6539, 114.412, -31.5148, 1.14 ) }
    dend_52 { pt3dadd( 13.6383, 115.686, -31.9755, 0.23 ) }
    dend_52 { pt3dadd( 14.9272, 117.342, -32.5438, 0.91 ) }
    dend_52 { pt3dadd( 15.6435, 118.255, -32.8088, 0.23 ) }
    dend_52 { pt3dadd( 16.8148, 119.789, -33.2059, 0.68 ) }
    dend_52 { pt3dadd( 17.6496, 120.901, -33.4116, 0.68 ) }
    dend_52 { pt3dadd( 18.4516, 122.028, -33.5999, 0.23 ) }
    dend_52 { pt3dadd( 17.1247, 130.951, -35.884, 0.23 ) }
    dend_52 { pt3dadd( 17.522, 140.096, -37.4964, 0.23 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 45/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 21.673, 60.0753, -10.203, 0.23 ) }
    dend_47 { pt3dadd( 22.1012, 60.5626, -10.2436, 0.23 ) }
    dend_47 { pt3dadd( 22.7876, 61.3257, -10.3975, 1.14 ) }
    dend_47 { pt3dadd( 23.775, 62.4159, -10.6651, 0.23 ) }
    dend_47 { pt3dadd( 24.3447, 63.0584, -10.8258, 0.68 ) }
    dend_47 { pt3dadd( 24.8452, 63.6322, -10.9681, 0.23 ) }
    dend_47 { pt3dadd( 25.4088, 64.285, -11.1283, 0.68 ) }
    dend_47 { pt3dadd( 26.3039, 65.3892, -11.4363, 0.23 ) }
    dend_47 { pt3dadd( 26.9097, 66.2097, -11.6738, 0.91 ) }
    dend_47 { pt3dadd( 27.4929, 67.0898, -11.9028, 0.23 ) }
    dend_47 { pt3dadd( 27.6873, 67.3889, -11.9548, 0.91 ) }
    dend_47 { pt3dadd( 28.3912, 68.4946, -12.055, 0.23 ) }
    dend_47 { pt3dadd( 29.1608, 69.7156, -12.0947, 0.91 ) }
    dend_47 { pt3dadd( 29.886, 70.8735, -12.0542, 0.23 ) }
    dend_47 { pt3dadd( 30.1902, 71.3593, -12.0212, 0.91 ) }
    dend_47 { pt3dadd( 31.1072, 72.7194, -11.8741, 0.23 ) }
    dend_47 { pt3dadd( 31.4391, 73.1425, -11.7961, 1.14 ) }
    dend_47 { pt3dadd( 31.7387, 73.4506, -11.711, 1.14 ) }
    dend_47 { pt3dadd( 32.2994, 73.8711, -11.5377, 0.23 ) }
    dend_47 { pt3dadd( 33.1069, 74.3391, -11.3152, 0.91 ) }
    dend_47 { pt3dadd( 34.0178, 74.7256, -11.119, 0.23 ) }
    dend_47 { pt3dadd( 35.1833, 75.0817, -10.9515, 0.23 ) }
    dend_47 { pt3dadd( 35.9571, 75.223, -10.8381, 0.91 ) }
    dend_47 { pt3dadd( 37.1118, 75.3315, -10.6826, 0.23 ) }
    dend_47 { pt3dadd( 37.7944, 75.3566, -10.6009, 0.91 ) }
    dend_47 { pt3dadd( 39.2635, 75.347, -10.4666, 0.23 ) }
    dend_47 { pt3dadd( 40.1832, 75.324, -10.4159, 0.68 ) }
    dend_47 { pt3dadd( 42.0402, 75.2551, -10.3923, 0.23 ) }
    dend_47 { pt3dadd( 42.7804, 75.2182, -10.4002, 0.68 ) }
    dend_47 { pt3dadd( 43.3171, 75.1887, -10.4315, 0.23 ) }
    dend_47 { pt3dadd( 44.2338, 75.1355, -10.5088, 0.91 ) }
    dend_47 { pt3dadd( 44.8084, 75.0936, -10.5849, 0.23 ) }
    dend_47 { pt3dadd( 45.4371, 75.0527, -10.6982, 0.23 ) }
    dend_47 { pt3dadd( 45.9027, 75.0289, -10.8065, 0.23 ) }
    dend_47 { pt3dadd( 46.907, 74.9971, -11.0234, 0.91 ) }
    dend_47 { pt3dadd( 47.3761, 74.9937, -11.1185, 0.23 ) }
    dend_47 { pt3dadd( 48.0858, 75.0253, -11.2912, 0.68 ) }
    dend_47 { pt3dadd( 49.2528, 75.1431, -11.611, 0.23 ) }
    dend_47 { pt3dadd( 49.7412, 75.2296, -11.7748, 0.91 ) }
    dend_47 { pt3dadd( 50.67, 75.4693, -12.1303, 0.23 ) }
    dend_47 { pt3dadd( 51.1549, 75.6153, -12.3294, 0.91 ) }
    dend_47 { pt3dadd( 52.4743, 76.0685, -12.9092, 0.23 ) }
    dend_47 { pt3dadd( 53.2533, 76.3772, -13.2859, 0.91 ) }
    dend_47 { pt3dadd( 54.0295, 76.6936, -13.7297, 0.23 ) }
    dend_47 { pt3dadd( 54.7366, 77.0129, -14.1935, 0.68 ) }
    dend_47 { pt3dadd( 58.9056, 79.4722, -15.3209, 0.68 ) }
    dend_47 { pt3dadd( 63.0016, 81.4943, -17.3113, 0.68 ) }
    dend_47 { pt3dadd( 67.1961, 83.759, -18.7376, 0.68 ) }
    dend_47 { pt3dadd( 71.1942, 86.396, -20.0491, 0.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 94/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -197.704, -105.18, 5.01445, 0.23 ) }
    dend_42 { pt3dadd( -199.131, -107.019, 5.21837, 0.23 ) }
    dend_42 { pt3dadd( -199.997, -108.211, 5.26748, 0.68 ) }
    dend_42 { pt3dadd( -200.757, -109.305, 5.27676, 0.23 ) }
    dend_42 { pt3dadd( -201.838, -110.883, 5.26545, 0.45 ) }
    dend_42 { pt3dadd( -203.714, -113.658, 5.22269, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_42 { pt3dadd( -204.917, -115.424, 5.18453, 0.23 ) }
    dend_42 { pt3dadd( -206.063, -117.225, 5.09097, 0.91 ) }
    dend_42 { pt3dadd( -207.049, -118.816, 5.06428, 0.23 ) }
    dend_42 { pt3dadd( -207.462, -119.506, 5.05207, 0.23 ) }
    dend_42 { pt3dadd( -208.068, -120.55, 5.03569, 0.91 ) }
    dend_42 { pt3dadd( -208.888, -122.094, 5.0054, 0.23 ) }
    dend_42 { pt3dadd( -209.319, -122.994, 5.03184, 0.91 ) }
    dend_42 { pt3dadd( -210.399, -125.782, 5.026, 0.23 ) }
    dend_42 { pt3dadd( -211.065, -127.94, 4.89293, 0.23 ) }
    dend_42 { pt3dadd( -211.641, -129.979, 4.74777, 0.23 ) }
    dend_42 { pt3dadd( -212.197, -132.197, 4.55721, 0.23 ) }
    dend_42 { pt3dadd( -212.641, -134.32, 4.32994, 0.68 ) }
    dend_42 { pt3dadd( -213.158, -137.222, 3.91995, 0.23 ) }
    dend_42 { pt3dadd( -213.426, -139.558, 3.43693, 0.23 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 14/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -197.704, -105.18, 5.01445, 0.23 ) }
    dend_41 { pt3dadd( -201.639, -106.373, 3.33636, 0.23 ) }
    dend_41 { pt3dadd( -204.478, -107.275, 2.30164, 0.45 ) }
    dend_41 { pt3dadd( -207.39, -108.191, 1.45893, 0.23 ) }
    dend_41 { pt3dadd( -208.824, -108.666, 1.02557, 0.23 ) }
    dend_41 { pt3dadd( -209.815, -109.003, 0.733081, 0.23 ) }
    dend_41 { pt3dadd( -211.1, -109.474, 0.296602, 0.68 ) }
    dend_41 { pt3dadd( -214.109, -110.733, -0.695586, 0.23 ) }
    dend_41 { pt3dadd( -215.669, -111.464, -1.20753, 0.45 ) }
    dend_41 { pt3dadd( -218.7, -113.014, -2.27237, 0.23 ) }
    dend_41 { pt3dadd( -221.958, -114.704, -3.45256, 0.91 ) }
    dend_41 { pt3dadd( -225.158, -116.336, -4.61966, 0.23 ) }
    dend_41 { pt3dadd( -227.778, -117.714, -5.59478, 0.91 ) }
    dend_41 { pt3dadd( -229.189, -118.446, -6.12223, 0.23 ) }
    dend_41 { pt3dadd( -230.051, -118.897, -6.4505, 0.91 ) }
    dend_41 { pt3dadd( -231.631, -119.666, -6.9851, 0.23 ) }
    dend_41 { pt3dadd( -233.622, -120.666, -7.90444, 0.68 ) }
    dend_41 { pt3dadd( -236.176, -121.968, -9.24948, 0.23 ) }
    dend_41 { pt3dadd( -237.788, -122.808, -10.2364, 0.68 ) }
    dend_41 { pt3dadd( -239.614, -123.818, -11.3835, 0.23 ) }
    dend_41 { pt3dadd( -240.942, -124.633, -12.3094, 0.91 ) }
    dend_41 { pt3dadd( -245.229, -127.446, -15.4591, 0.23 ) }
    dend_41 { pt3dadd( -247.139, -128.761, -16.9416, 0.23 ) }
    dend_41 { pt3dadd( -248.379, -129.609, -17.9374, 0.23 ) }
    dend_41 { pt3dadd( -250.791, -131.244, -19.8356, 0.91 ) }
    dend_41 { pt3dadd( -253.337, -133.004, -21.8325, 0.23 ) }
    dend_41 { pt3dadd( -254.771, -134.013, -22.9053, 0.23 ) }
    dend_41 { pt3dadd( -256.044, -134.899, -23.8101, 0.68 ) }
    dend_41 { pt3dadd( -258.189, -136.467, -25.4485, 0.23 ) }
    dend_41 { pt3dadd( -259.586, -137.516, -26.5514, 0.91 ) }
    dend_41 { pt3dadd( -261.728, -139.154, -28.2998, 0.23 ) }
    dend_41 { pt3dadd( -263.714, -140.655, -29.787, 0.91 ) }
    dend_41 { pt3dadd( -266.238, -142.683, -31.61, 0.23 ) }
    dend_41 { pt3dadd( -267.367, -143.621, -32.3917, 0.23 ) }
    dend_41 { pt3dadd( -268.982, -144.994, -33.424, 0.68 ) }
    dend_41 { pt3dadd( -270.568, -146.361, -34.3377, 0.23 ) }
    dend_41 { pt3dadd( -272.217, -147.794, -35.1459, 1.14 ) }
    dend_41 { pt3dadd( -273.976, -149.33, -35.9486, 0.23 ) }
    dend_41 { pt3dadd( -275.632, -150.748, -36.5886, 0.23 ) }
    dend_41 { pt3dadd( -277.78, -152.651, -37.403, 0.91 ) }
    dend_41 { pt3dadd( -279.693, -154.349, -38.0624, 0.23 ) }
    dend_41 { pt3dadd( -281.975, -156.489, -38.9745, 1.14 ) }
    dend_41 { pt3dadd( -282.953, -157.426, -39.4285, 0.23 ) }
    dend_41 { pt3dadd( -283.703, -158.104, -39.7961, 0.91 ) }
    dend_41 { pt3dadd( -285.504, -159.754, -40.6891, 0.23 ) }
    dend_41 { pt3dadd( -287.607, -161.714, -41.873, 1.14 ) }
    dend_41 { pt3dadd( -290.774, -164.664, -43.8384, 0.23 ) }
    dend_41 { pt3dadd( -291.958, -165.775, -44.6086, 0.23 ) }
    dend_41 { pt3dadd( -293.44, -167.268, -45.6354, 0.45 ) }
    dend_41 { pt3dadd( -301.986, -173.729, -49.2382, 0.45 ) }
    // Section: dend_38, id: dend_38, parent: dend_30 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 12.1096, -35.9791, 33.5556, 0.23 ) }
    dend_38 { pt3dadd( 13.3689, -37.1442, 34.4492, 0.23 ) }
    dend_38 { pt3dadd( 14.6976, -38.4415, 35.4301, 0.91 ) }
    dend_38 { pt3dadd( 17.9269, -41.604, 37.7496, 0.23 ) }
    dend_38 { pt3dadd( 20.2674, -43.87, 39.3966, 0.91 ) }
    dend_38 { pt3dadd( 23.5209, -47.0014, 41.5553, 0.23 ) }
    dend_38 { pt3dadd( 24.5997, -48.0856, 42.2545, 0.23 ) }
    dend_38 { pt3dadd( 26.917, -50.6518, 43.7102, 0.23 ) }
    dend_38 { pt3dadd( 27.6434, -51.5755, 44.2847, 0.68 ) }
    dend_38 { pt3dadd( 28.9627, -53.4897, 45.4925, 0.23 ) }
    dend_38 { pt3dadd( 29.9763, -55.245, 46.7578, 0.91 ) }
    dend_38 { pt3dadd( 31.434, -58.4279, 49.3061, 0.23 ) }
    dend_38 { pt3dadd( 31.6878, -59.0471, 49.8765, 0.91 ) }
    dend_38 { pt3dadd( 33.6613, -64.099, 54.861, 0.23 ) }
    dend_38 { pt3dadd( 34.0761, -65.1135, 55.936, 0.91 ) }
    dend_38 { pt3dadd( 35.2608, -67.5407, 58.909, 0.23 ) }
    dend_38 { pt3dadd( 35.9388, -68.5583, 60.4691, 0.91 ) }
    dend_38 { pt3dadd( 38.5053, -71.2392, 65.5196, 0.23 ) }
    dend_38 { pt3dadd( 39.2485, -71.8309, 66.7131, 0.23 ) }
    dend_38 { pt3dadd( 40.2821, -72.4954, 68.1363, 0.91 ) }
    dend_38 { pt3dadd( 43.5536, -74.3461, 72.2472, 0.23 ) }
    dend_38 { pt3dadd( 47.2325, -76.19, 76.7129, 0.23 ) }
    dend_38 { pt3dadd( 50.8514, -77.9498, 81.024, 0.23 ) }
    dend_38 { pt3dadd( 53.4238, -79.2455, 84.0583, 0.23 ) }
    dend_38 { pt3dadd( 56.6301, -80.9135, 87.9653, 0.23 ) }
    dend_38 { pt3dadd( 58.393, -81.876, 90.137, 0.91 ) }
    dend_38 { pt3dadd( 62.7005, -84.2503, 94.9741, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 91/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 12.1096, -35.9791, 33.5556, 0.23 ) }
    dend_31 { pt3dadd( 12.6661, -40.4385, 33.8558, 0.23 ) }
    dend_31 { pt3dadd( 12.9903, -43.1259, 34.1537, 0.23 ) }
    dend_31 { pt3dadd( 13.4504, -47.1963, 34.6632, 0.91 ) }
    dend_31 { pt3dadd( 13.7681, -50.5813, 35.2124, 0.23 ) }
    dend_31 { pt3dadd( 13.888, -52.0965, 35.4698, 0.23 ) }
    dend_31 { pt3dadd( 14.1044, -54.4081, 35.8657, 1.14 ) }
    dend_31 { pt3dadd( 14.5025, -58.2953, 36.6095, 0.23 ) }
    dend_31 { pt3dadd( 14.8641, -60.8746, 37.1121, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 15.4212, -63.6788, 37.6283, 0.91 ) }
    dend_31 { pt3dadd( 16.1251, -66.2374, 38.0184, 0.23 ) }
    dend_31 { pt3dadd( 17.1755, -69.1503, 38.431, 0.23 ) }
    dend_31 { pt3dadd( 17.7754, -70.5075, 38.5925, 0.91 ) }
    dend_31 { pt3dadd( 18.7536, -72.5133, 38.8965, 0.68 ) }
    dend_31 { pt3dadd( 20.1437, -75.2941, 39.5001, 0.23 ) }
    dend_31 { pt3dadd( 20.8894, -76.8233, 39.8839, 0.91 ) }
    dend_31 { pt3dadd( 22.8568, -81.1202, 41.2752, 0.23 ) }
    dend_31 { pt3dadd( 23.5589, -82.9552, 41.9386, 0.91 ) }
    dend_31 { pt3dadd( 25.2645, -88.3729, 43.9862, 0.23 ) }
    dend_31 { pt3dadd( 25.9148, -91.2693, 45.1483, 0.91 ) }
    dend_31 { pt3dadd( 26.1161, -92.8947, 45.8526, 0.91 ) }
    dend_31 { pt3dadd( 26.2569, -96.3004, 47.3665, 0.23 ) }
    dend_31 { pt3dadd( 26.1377, -98.8062, 48.4718, 0.91 ) }
    dend_31 { pt3dadd( 25.8128, -100.948, 49.4718, 0.23 ) }
    dend_31 { pt3dadd( 25.1807, -103.189, 50.596, 0.91 ) }
    dend_31 { pt3dadd( 24.2427, -105.498, 51.9004, 0.23 ) }
    dend_31 { pt3dadd( 23.6254, -106.703, 52.6523, 1.14 ) }
    dend_31 { pt3dadd( 23.0739, -107.583, 53.2542, 0.23 ) }
    dend_31 { pt3dadd( 20.7222, -111.201, 56.1462, 0.91 ) }
    dend_31 { pt3dadd( 19.473, -113.106, 57.759, 0.23 ) }
    dend_31 { pt3dadd( 18.846, -114.108, 58.5962, 1.14 ) }
    dend_31 { pt3dadd( 18.1176, -115.43, 59.7346, 0.23 ) }
    dend_31 { pt3dadd( 17.4917, -116.805, 60.9722, 0.91 ) }
    dend_31 { pt3dadd( 16.643, -119.333, 63.2922, 0.23 ) }
    dend_31 { pt3dadd( 16.388, -120.471, 64.3176, 0.91 ) }
    dend_31 { pt3dadd( 16.2591, -121.142, 64.9087, 0.23 ) }
    dend_31 { pt3dadd( 15.7211, -124.298, 67.8184, 0.91 ) }
    dend_31 { pt3dadd( 15.2648, -126.892, 70.3604, 0.23 ) }
    dend_31 { pt3dadd( 14.7723, -129.709, 73.1368, 0.91 ) }
    dend_31 { pt3dadd( 14.3717, -131.836, 75.26, 0.23 ) }
    dend_31 { pt3dadd( 14.1133, -133.138, 76.6155, 1.14 ) }
    dend_31 { pt3dadd( 13.5533, -135.696, 79.3119, 0.23 ) }
    dend_31 { pt3dadd( 12.8998, -138.107, 81.7681, 0.91 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 34/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 7.2662, -27.4912, -7.96941, 0.23 ) }
    dend_25 { pt3dadd( 6.85571, -30.9782, -6.77581, 0.23 ) }
    dend_25 { pt3dadd( 6.54818, -32.7174, -5.96742, 0.23 ) }
    dend_25 { pt3dadd( 6.15445, -35.0192, -4.76711, 0.91 ) }
    dend_25 { pt3dadd( 6.02115, -35.9414, -4.27958, 0.23 ) }
    dend_25 { pt3dadd( 5.79667, -37.9157, -3.21874, 0.68 ) }
    dend_25 { pt3dadd( 5.56846, -39.7069, -2.13412, 0.23 ) }
    dend_25 { pt3dadd( 5.09525, -42.9103, -0.0406116, 0.68 ) }
    dend_25 { pt3dadd( 4.96025, -43.7713, 0.565335, 0.68 ) }
    dend_25 { pt3dadd( 4.80641, -44.9876, 1.42157, 0.23 ) }
    dend_25 { pt3dadd( 4.58548, -46.7689, 2.66807, 1.14 ) }
    dend_25 { pt3dadd( 4.20595, -50.2427, 4.80232, 0.23 ) }
    dend_25 { pt3dadd( 4.12672, -50.9122, 5.13185, 0.23 ) }
    dend_25 { pt3dadd( 4.05856, -51.6083, 5.40404, 0.23 ) }
    dend_25 { pt3dadd( 3.90382, -53.0032, 5.88275, 1.14 ) }
    dend_25 { pt3dadd( 3.45065, -56.105, 6.91864, 0.23 ) }
    dend_25 { pt3dadd( 3.10812, -58.2649, 7.54879, 1.14 ) }
    dend_25 { pt3dadd( 2.48163, -62.1871, 8.6137, 0.23 ) }
    dend_25 { pt3dadd( 2.00326, -65.0547, 9.4285, 0.23 ) }
    dend_25 { pt3dadd( 1.6839, -67.0144, 9.99801, 0.68 ) }
    dend_25 { pt3dadd( 1.07892, -70.8324, 11.0644, 0.23 ) }
    dend_25 { pt3dadd( 0.82354, -72.4784, 11.4983, 1.14 ) }
    dend_25 { pt3dadd( 0.354197, -75.3942, 12.2658, 0.23 ) }
    dend_25 { pt3dadd( 0.178996, -76.5715, 12.5081, 0.23 ) }
    dend_25 { pt3dadd( 0.0530776, -77.7663, 12.6769, 0.23 ) }
    dend_25 { pt3dadd( -0.104912, -79.6951, 12.9202, 0.91 ) }
    dend_25 { pt3dadd( -0.248477, -81.4522, 13.1504, 0.23 ) }
    dend_25 { pt3dadd( -0.417984, -83.094, 13.4301, 0.91 ) }
    dend_25 { pt3dadd( -0.647375, -84.7261, 13.8063, 0.23 ) }
    dend_25 { pt3dadd( -0.986034, -86.5348, 14.3887, 0.91 ) }
    dend_25 { pt3dadd( -1.58132, -88.7878, 15.2978, 0.23 ) }
    dend_25 { pt3dadd( -2.78672, -92.884, 17.1457, 0.23 ) }
    dend_25 { pt3dadd( -3.01334, -93.8178, 17.5293, 0.68 ) }
    dend_25 { pt3dadd( -3.56053, -96.6736, 18.6844, 1.14 ) }
    dend_25 { pt3dadd( -3.87169, -99.4826, 19.863, 0.23 ) }
    dend_25 { pt3dadd( -3.98263, -103.29, 21.4167, 0.23 ) }
    dend_25 { pt3dadd( -3.8743, -104.957, 22.0369, 0.23 ) }
    dend_25 { pt3dadd( -3.16406, -110.023, 23.7099, 0.23 ) }
    dend_25 { pt3dadd( -2.7195, -112.495, 24.4258, 0.68 ) }
    dend_25 { pt3dadd( -1.7328, -117.568, 25.7742, 0.23 ) }
    dend_25 { pt3dadd( -1.27692, -119.53, 26.2707, 0.68 ) }
    dend_25 { pt3dadd( -0.384006, -122.916, 27.144, 0.23 ) }
    dend_25 { pt3dadd( 0.0936482, -125.014, 27.7475, 0.23 ) }
    dend_25 { pt3dadd( 0.451344, -127.266, 28.5056, 0.91 ) }
    dend_25 { pt3dadd( 1.13086, -132.432, 29.9316, 0.23 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 79/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.2662, -27.4912, -7.96941, 0.23 ) }
    dend_24 { pt3dadd( 6.73429, -28.383, -10.2806, 0.23 ) }
    dend_24 { pt3dadd( 6.16229, -29.5868, -12.6579, 0.68 ) }
    dend_24 { pt3dadd( 5.55828, -31.2336, -15.612, 0.68 ) }
    dend_24 { pt3dadd( 5.26388, -32.1634, -17.1424, 0.68 ) }
    dend_24 { pt3dadd( 4.99282, -33.0942, -18.54, 0.68 ) }
    dend_24 { pt3dadd( 4.60337, -34.4467, -20.4613, 0.23 ) }
    dend_24 { pt3dadd( 4.25893, -35.7421, -21.9624, 0.23 ) }
    dend_24 { pt3dadd( 3.85993, -37.4885, -23.7228, 0.23 ) }
    dend_24 { pt3dadd( 3.56034, -38.7033, -24.8543, 0.23 ) }
    dend_24 { pt3dadd( 3.12779, -40.3328, -26.4097, 1.14 ) }
    dend_24 { pt3dadd( 2.87053, -41.2116, -27.252, 1.14 ) }
    dend_24 { pt3dadd( 1.98954, -43.402, -29.3277, 0.23 ) }
    dend_24 { pt3dadd( 1.17885, -45.0654, -30.8328, 0.91 ) }
    dend_24 { pt3dadd( 0.290503, -46.8403, -32.3465, 0.91 ) }
    dend_24 { pt3dadd( -0.0434758, -47.5159, -32.9184, 0.91 ) }
    dend_24 { pt3dadd( -1.10641, -49.844, -34.9313, 0.23 ) }
    dend_24 { pt3dadd( -2.11756, -52.234, -36.9185, 0.23 ) }
    dend_24 { pt3dadd( -3.12102, -54.7334, -38.9408, 0.23 ) }
    dend_24 { pt3dadd( -3.75363, -56.4555, -40.265, 0.23 ) }
    dend_24 { pt3dadd( -4.31897, -58.3156, -41.6767, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_24 { pt3dadd( -5.16991, -61.7075, -44.2414, 0.23 ) }
    dend_24 { pt3dadd( -5.7076, -64.4363, -46.32, 0.91 ) }
    dend_24 { pt3dadd( -5.86071, -65.4769, -47.1194, 0.91 ) }
    dend_24 { pt3dadd( -6.05973, -66.901, -48.1587, 0.23 ) }
    dend_24 { pt3dadd( -6.3364, -68.7323, -49.4135, 0.68 ) }
    dend_24 { pt3dadd( -6.69477, -70.952, -50.9307, 0.23 ) }
    dend_24 { pt3dadd( -6.86316, -71.8929, -51.5752, 0.68 ) }
    dend_24 { pt3dadd( -7.26233, -74.0028, -53.1197, 0.23 ) }
    dend_24 { pt3dadd( -7.47548, -74.9173, -53.8161, 1.14 ) }
    dend_24 { pt3dadd( -7.88165, -76.3075, -54.9232, 1.14 ) }
    dend_24 { pt3dadd( -8.64762, -78.4198, -56.7147, 0.23 ) }
    dend_24 { pt3dadd( -9.56253, -80.5547, -58.7576, 0.23 ) }
    dend_24 { pt3dadd( -10.1277, -81.6192, -59.9368, 0.91 ) }
    dend_24 { pt3dadd( -10.722, -82.5422, -61.1102, 0.91 ) }
    dend_24 { pt3dadd( -11.6792, -83.7342, -62.6924, 0.23 ) }
    dend_24 { pt3dadd( -12.7521, -84.8614, -64.2391, 0.91 ) }
    dend_24 { pt3dadd( -13.39, -85.4329, -65.0532, 0.91 ) }
    dend_24 { pt3dadd( -15.0885, -86.6891, -66.9973, 0.23 ) }
    dend_24 { pt3dadd( -15.9597, -87.3042, -67.9529, 0.23 ) }
    dend_24 { pt3dadd( -18.1667, -88.8604, -70.3099, 0.68 ) }
    dend_24 { pt3dadd( -19.1554, -89.6022, -71.36, 0.23 ) }
    dend_24 { pt3dadd( -19.817, -90.1714, -72.0844, 1.14 ) }
    dend_24 { pt3dadd( -20.4106, -90.7452, -72.7782, 1.14 ) }
    dend_24 { pt3dadd( -21.8734, -92.3592, -74.6524, 0.23 ) }
    dend_24 { pt3dadd( -22.5446, -93.1512, -75.6187, 0.23 ) }
    dend_24 { pt3dadd( -23.4574, -94.44, -77.1847, 1.14 ) }
    dend_24 { pt3dadd( -24.2888, -95.8692, -78.8383, 0.23 ) }
    dend_24 { pt3dadd( -24.5567, -96.46, -79.5351, 0.68 ) }
    dend_24 { pt3dadd( -24.8578, -97.4016, -80.609, 0.23 ) }
    dend_24 { pt3dadd( -25.1035, -98.6067, -81.9243, 0.23 ) }
    dend_24 { pt3dadd( -25.1966, -100.231, -83.5383, 0.68 ) }
    dend_24 { pt3dadd( -25.1187, -102.241, -85.3966, 0.23 ) }
    dend_24 { pt3dadd( -24.8959, -104.207, -86.984, 0.23 ) }
    dend_24 { pt3dadd( -24.5547, -106.287, -88.4256, 0.45 ) }
    dend_24 { pt3dadd( -24.26, -107.538, -89.1621, 1.59 ) }
    dend_24 { pt3dadd( -23.3009, -111.033, -90.8998, 0.23 ) }
    dend_24 { pt3dadd( -23.0681, -111.809, -91.2378, 0.23 ) }
    dend_24 { pt3dadd( -22.3644, -114.134, -92.0756, 1.14 ) }
    dend_24 { pt3dadd( -21.905, -115.662, -92.5603, 1.14 ) }
    dend_24 { pt3dadd( -21.097, -118.266, -93.3699, 0.23 ) }
    dend_24 { pt3dadd( -20.5915, -119.874, -93.8612, 0.91 ) }
    dend_24 { pt3dadd( -19.6275, -123.065, -94.8142, 0.23 ) }
    dend_24 { pt3dadd( -19.2523, -124.348, -95.257, 0.23 ) }
    dend_24 { pt3dadd( -18.7262, -126.138, -95.9651, 1.14 ) }
    dend_24 { pt3dadd( -18.4313, -127.174, -96.4063, 1.14 ) }
    dend_24 { pt3dadd( -17.227, -131.367, -98.3066, 0.23 ) }
    dend_24 { pt3dadd( -16.6094, -133.364, -99.2536, 1.14 ) }
    dend_24 { pt3dadd( -15.7089, -136.077, -100.673, 0.23 ) }
    dend_24 { pt3dadd( -15.0803, -137.808, -101.658, 1.14 ) }
    dend_24 { pt3dadd( -14.8819, -138.308, -101.954, 1.14 ) }
    dend_24 { pt3dadd( -14.344, -139.761, -102.716, 0.23 ) }
    dend_24 { pt3dadd( -14.1034, -140.553, -103.009, 0.68 ) }
    dend_24 { pt3dadd( -13.6362, -142.485, -103.329, 0.23 ) }
    dend_24 { pt3dadd( -13.3344, -144.21, -103.12, 1.14 ) }
    dend_24 { pt3dadd( -13.1527, -145.609, -102.763, 1.14 ) }
    dend_24 { pt3dadd( -12.7276, -148.981, -101.66, 0.23 ) }
    dend_24 { pt3dadd( -12.4851, -150.786, -100.978, 0.91 ) }
    dend_24 { pt3dadd( -12.2973, -151.801, -100.609, 0.91 ) }
    dend_24 { pt3dadd( -11.5512, -154.849, -99.5883, 0.23 ) }
    dend_24 { pt3dadd( -11.1365, -156.254, -99.2335, 1.14 ) }
    dend_24 { pt3dadd( -10.508, -158.075, -99.0488, 1.36 ) }
    dend_24 { pt3dadd( -9.47274, -160.693, -99.1543, 0.23 ) }
    dend_24 { pt3dadd( -8.34163, -163.548, -99.5028, 0.23 ) }
    dend_24 { pt3dadd( -7.60398, -165.471, -99.827, 0.91 ) }
    dend_24 { pt3dadd( -7.03089, -167.018, -100.153, 0.91 ) }
    dend_24 { pt3dadd( -5.77263, -170.615, -100.903, 0.23 ) }
    dend_24 { pt3dadd( -5.22892, -172.21, -101.247, 1.14 ) }
    dend_24 { pt3dadd( -4.2231, -175.315, -101.878, 0.23 ) }
    dend_24 { pt3dadd( -3.70375, -177.153, -102.217, 1.14 ) }
    dend_24 { pt3dadd( -3.21816, -179.104, -102.589, 0.23 ) }
    dend_24 { pt3dadd( -2.95522, -180.203, -102.809, 0.91 ) }
    dend_24 { pt3dadd( -2.41537, -183.326, -103.649, 0.23 ) }
    dend_24 { pt3dadd( -2.26465, -185.212, -104.411, 1.59 ) }
    dend_24 { pt3dadd( -2.4048, -187.541, -105.794, 0.23 ) }
    dend_24 { pt3dadd( -2.74029, -188.823, -106.684, 0.91 ) }
    dend_24 { pt3dadd( -2.99714, -189.358, -107.111, 0.91 ) }
    dend_24 { pt3dadd( -4.5306, -191.641, -109.06, 0.23 ) }
    dend_24 { pt3dadd( -5.53989, -192.776, -110.098, 1.14 ) }
    dend_24 { pt3dadd( -6.31952, -193.529, -110.777, 1.14 ) }
    dend_24 { pt3dadd( -8.58, -195.699, -112.568, 0.23 ) }
    dend_24 { pt3dadd( -9.28059, -196.475, -113.12, 0.91 ) }
    dend_24 { pt3dadd( -10.4795, -197.954, -114.024, 0.23 ) }
    dend_24 { pt3dadd( -10.9442, -198.633, -114.355, 0.91 ) }
    dend_24 { pt3dadd( -11.8201, -200.337, -115.174, 0.23 ) }
    dend_24 { pt3dadd( -12.4336, -201.999, -116.082, 0.91 ) }
    dend_24 { pt3dadd( -12.9325, -204.341, -117.698, 0.23 ) }
    dend_24 { pt3dadd( -13.0507, -205.426, -118.554, 0.23 ) }
    dend_24 { pt3dadd( -13.0513, -206.979, -120.018, 1.14 ) }
    dend_24 { pt3dadd( -12.8631, -209.182, -122.334, 0.23 ) }
    dend_24 { pt3dadd( -12.5157, -210.778, -124.216, 1.36 ) }
    dend_24 { pt3dadd( -11.9622, -212.743, -126.741, 0.23 ) }
    dend_24 { pt3dadd( -11.581, -213.835, -128.196, 1.14 ) }
    dend_24 { pt3dadd( -11.0298, -215.27, -130.089, 0.23 ) }
    dend_24 { pt3dadd( -10.676, -216.199, -131.318, 0.68 ) }
    dend_24 { pt3dadd( -9.94804, -218.339, -134.051, 0.23 ) }
    dend_24 { pt3dadd( -9.65143, -219.233, -135.118, 0.91 ) }
    dend_24 { pt3dadd( -9.19797, -220.801, -136.746, 0.23 ) }
    dend_24 { pt3dadd( -8.93524, -221.87, -137.714, 0.23 ) }
    dend_24 { pt3dadd( -8.62507, -223.259, -138.834, 0.23 ) }
    dend_24 { pt3dadd( -11.3886, -230.896, -144.589, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_24 { pt3dadd( -14.743, -238.281, -150.372, 0.23 ) }
    dend_24 { pt3dadd( -17.9509, -246.087, -155.647, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 2/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 91.3608, -150.085, -127.432, 0.23 ) }
    dend_22 { pt3dadd( 95.5836, -155.969, -133.273, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 4/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 91.3608, -150.085, -127.432, 0.23 ) }
    dend_21 { pt3dadd( 94.1264, -157.278, -134.214, 0.23 ) }
    // Section: dend_13, id: dend_13, parent: dend_5 (entry count 6/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 44.4188, 32.9497, -7.86642, 0.23 ) }
    dend_13 { pt3dadd( 45.0349, 32.7506, -8.28588, 0.23 ) }
    dend_13 { pt3dadd( 45.6086, 32.6318, -8.68918, 0.68 ) }
    dend_13 { pt3dadd( 46.4649, 32.4958, -9.27688, 0.23 ) }
    dend_13 { pt3dadd( 47.11, 32.4404, -9.70833, 0.91 ) }
    dend_13 { pt3dadd( 47.7766, 32.411, -10.1688, 0.23 ) }
    dend_13 { pt3dadd( 48.3295, 32.4069, -10.5642, 1.14 ) }
    dend_13 { pt3dadd( 49.5537, 32.4603, -11.4218, 0.23 ) }
    dend_13 { pt3dadd( 50.1092, 32.5156, -11.8384, 0.68 ) }
    dend_13 { pt3dadd( 51.5778, 32.7024, -12.9426, 0.23 ) }
    dend_13 { pt3dadd( 52.2624, 32.7857, -13.4533, 0.68 ) }
    dend_13 { pt3dadd( 53.5018, 32.9267, -14.3324, 0.23 ) }
    dend_13 { pt3dadd( 54.2938, 33.0115, -14.8756, 0.68 ) }
    dend_13 { pt3dadd( 56.0168, 33.2035, -16.0136, 0.23 ) }
    dend_13 { pt3dadd( 57.2858, 33.3554, -16.8426, 0.23 ) }
    dend_13 { pt3dadd( 58.4208, 33.4881, -17.5558, 0.68 ) }
    dend_13 { pt3dadd( 59.626, 33.6307, -18.2713, 0.23 ) }
    dend_13 { pt3dadd( 60.3588, 33.7242, -18.6826, 0.68 ) }
    dend_13 { pt3dadd( 61.2703, 33.868, -19.1656, 0.23 ) }
    dend_13 { pt3dadd( 62.2688, 34.0479, -19.6289, 0.23 ) }
    dend_13 { pt3dadd( 62.7149, 34.1602, -19.8401, 0.23 ) }
    dend_13 { pt3dadd( 62.9966, 34.2618, -19.9779, 0.23 ) }
    dend_13 { pt3dadd( 63.564, 34.4883, -20.2524, 0.23 ) }
    dend_13 { pt3dadd( 64.5425, 34.8948, -20.6764, 0.68 ) }
    dend_13 { pt3dadd( 65.1175, 35.1497, -20.9007, 0.23 ) }
    dend_13 { pt3dadd( 65.5764, 35.3857, -21.0665, 0.23 ) }
    dend_13 { pt3dadd( 66.5031, 35.9227, -21.4256, 1.36 ) }
    dend_13 { pt3dadd( 69.6587, 36.0717, -23.2412, 1.36 ) }
    dend_13 { pt3dadd( 72.7369, 35.6709, -25.143, 1.36 ) }
    dend_13 { pt3dadd( 75.9743, 35.8498, -26.8057, 1.36 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 36/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 44.4188, 32.9497, -7.86642, 0.23 ) }
    dend_6 { pt3dadd( 45.255, 33.3108, -7.8953, 0.23 ) }
    dend_6 { pt3dadd( 47.6006, 34.3236, -7.97633, 1.14 ) }
    dend_6 { pt3dadd( 50.223, 35.4559, -8.06692, 0.23 ) }
    dend_6 { pt3dadd( 51.4188, 35.9722, -8.10823, 0.68 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 41/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -43.0491, -18.121, -44.2527, 0.23 ) }
    dend_74 { pt3dadd( -49.9629, -27.395, -54.0017, 0.23 ) }
    dend_74 { pt3dadd( -56.7909, -36.2202, -64.2295, 0.23 ) }
    dend_74 { pt3dadd( -61.9761, -46.4377, -74.0356, 0.23 ) }
    dend_74 { pt3dadd( -65.4458, -57.6636, -83.4133, 0.23 ) }
    dend_74 { pt3dadd( -69.9395, -66.7134, -94.6351, 0.23 ) }
    dend_74 { pt3dadd( -72.8404, -76.0709, -106.091, 0.23 ) }
    dend_74 { pt3dadd( -76.1031, -86.6011, -116.333, 0.23 ) }
    dend_74 { pt3dadd( -77.624, -96.0457, -127.96, 0.23 ) }
    dend_74 { pt3dadd( -77.6505, -106.561, -138.674, 0.23 ) }
    dend_74 { pt3dadd( -76.8956, -115.965, -150.384, 0.23 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 52/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -43.0491, -18.121, -44.2527, 0.23 ) }
    dend_71 { pt3dadd( -46.8266, -23.2178, -49.7676, 0.23 ) }
    dend_71 { pt3dadd( -51.9367, -28.794, -53.4434, 0.23 ) }
    dend_71 { pt3dadd( -56.1182, -34.9836, -57.2472, 0.23 ) }
    dend_71 { pt3dadd( -60.4084, -41.1192, -61.0234, 0.23 ) }
    dend_71 { pt3dadd( -64.5774, -46.4357, -66.0219, 0.23 ) }
    dend_71 { pt3dadd( -69.8239, -51.8303, -69.7888, 0.23 ) }
    dend_71 { pt3dadd( -74.5847, -57.8791, -73.1363, 0.23 ) }
    dend_71 { pt3dadd( -79.3692, -63.6445, -76.9362, 0.23 ) }
    dend_71 { pt3dadd( -82.9565, -69.3862, -81.8863, 0.23 ) }
    dend_71 { pt3dadd( -86.7282, -75.125, -86.7041, 0.23 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 63/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 13.1523, 9.48742, -65.3215, 0.23 ) }
    dend_67 { pt3dadd( 16.5471, 7.57167, -73.365, 0.23 ) }
    dend_67 { pt3dadd( 20.1433, 5.07456, -81.1561, 0.23 ) }
    dend_67 { pt3dadd( 25.7848, 3.60319, -87.9285, 0.23 ) }
    dend_67 { pt3dadd( 30.5652, 3.09867, -95.4562, 0.23 ) }
    dend_67 { pt3dadd( 37.0016, 3.90076, -101.562, 0.23 ) }
    dend_67 { pt3dadd( 42.9857, 6.03895, -107.769, 0.23 ) }
    dend_67 { pt3dadd( 50.1718, 8.94279, -112.05, 0.23 ) }
    dend_67 { pt3dadd( 57.2888, 10.6149, -117.102, 0.23 ) }
    dend_67 { pt3dadd( 64.9567, 12.3677, -121.225, 0.23 ) }
    dend_67 { pt3dadd( 72.754, 13.5991, -125.318, 0.23 ) }
    dend_67 { pt3dadd( 80.8816, 13.3046, -128.977, 0.23 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 75/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 13.1523, 9.48742, -65.3215, 0.23 ) }
    dend_64 { pt3dadd( 19.7475, 10.6934, -74.9158, 0.23 ) }
    dend_64 { pt3dadd( 26.2135, 11.5942, -84.634, 0.23 ) }
    dend_64 { pt3dadd( 34.173, 10.4126, -93.1488, 0.23 ) }
    dend_64 { pt3dadd( 42.7876, 7.96336, -100.694, 0.23 ) }
    dend_64 { pt3dadd( 50.2876, 4.83249, -109.117, 0.23 ) }
    dend_64 { pt3dadd( 58.1988, 0.499814, -116.553, 0.23 ) }
    dend_64 { pt3dadd( 66.9329, -4.31187, -122.636, 0.23 ) }
    dend_64 { pt3dadd( 74.8247, -9.82494, -129.228, 0.23 ) }
    dend_64 { pt3dadd( 82.9099, -16.361, -134.467, 0.23 ) }
    dend_64 { pt3dadd( 89.7422, -24.161, -139.675, 0.23 ) }
    dend_64 { pt3dadd( 97.148, -32.2915, -143.333, 0.23 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 87/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -148.589, 89.5599, 5.19064, 0.23 ) }
    dend_61 { pt3dadd( -150.473, 91.7815, 5.59293, 0.23 ) }
    dend_61 { pt3dadd( -152.085, 93.5406, 5.95936, 0.23 ) }
    dend_61 { pt3dadd( -153.957, 95.6578, 6.46321, 0.45 ) }
    dend_61 { pt3dadd( -155.139, 97.0314, 6.87962, 0.23 ) }
    dend_61 { pt3dadd( -156.331, 98.467, 7.51056, 0.68 ) }
    dend_61 { pt3dadd( -157.898, 100.355, 8.34006, 0.23 ) }
    dend_61 { pt3dadd( -159.72, 102.508, 9.45861, 0.68 ) }
    dend_61 { pt3dadd( -160.66, 103.654, 10.0998, 0.23 ) }
    dend_61 { pt3dadd( -161.788, 105.03, 11.0483, 0.68 ) }
    dend_61 { pt3dadd( -163.865, 107.71, 13.3062, 0.23 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 98/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -148.589, 89.5599, 5.19064, 0.23 ) }
    dend_60 { pt3dadd( -151.147, 90.9575, 5.59154, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_60 { pt3dadd( -152.741, 91.716, 6.03801, 0.23 ) }
    dend_60 { pt3dadd( -154.461, 92.5337, 6.51934, 0.23 ) }
    dend_60 { pt3dadd( -157.451, 93.9556, 7.3563, 0.68 ) }
    dend_60 { pt3dadd( -160.853, 95.5738, 8.30887, 0.23 ) }
    dend_60 { pt3dadd( -164.921, 97.5082, 9.44753, 0.23 ) }
    dend_60 { pt3dadd( -168.693, 99.2792, 10.7782, 0.23 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 6/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 71.1942, 86.396, -20.0491, 0.23 ) }
    dend_49 { pt3dadd( 80.3037, 91.239, -22.0723, 0.23 ) }
    dend_49 { pt3dadd( 89.064, 95.6779, -25.8729, 0.23 ) }
    dend_49 { pt3dadd( 97.2107, 101.084, -29.7245, 0.23 ) }
    dend_49 { pt3dadd( 103.68, 107.4, -35.0507, 0.23 ) }
    dend_49 { pt3dadd( 111.243, 113.885, -38.2898, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 12/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 71.1942, 86.396, -20.0491, 0.23 ) }
    dend_48 { pt3dadd( 77.9996, 90.0084, -21.2567, 0.23 ) }
    dend_48 { pt3dadd( 84.4206, 94.1716, -22.6827, 0.23 ) }
    dend_48 { pt3dadd( 90.9735, 98.3386, -23.2057, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 16/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 12.8998, -138.107, 81.7681, 0.23 ) }
    dend_35 { pt3dadd( 14.1196, -140.362, 82.7052, 0.23 ) }
    dend_35 { pt3dadd( 15.2064, -142.457, 83.4745, 0.68 ) }
    dend_35 { pt3dadd( 16.4896, -145.06, 84.3068, 0.23 ) }
    dend_35 { pt3dadd( 17.3011, -146.756, 84.7905, 0.91 ) }
    dend_35 { pt3dadd( 17.905, -148.012, 85.1512, 0.23 ) }
    dend_35 { pt3dadd( 18.3395, -148.893, 85.4353, 0.23 ) }
    dend_35 { pt3dadd( 19.057, -150.313, 85.9522, 0.68 ) }
    dend_35 { pt3dadd( 19.8317, -151.723, 86.4312, 0.23 ) }
    dend_35 { pt3dadd( 20.4082, -152.715, 86.8184, 0.91 ) }
    dend_35 { pt3dadd( 21.6534, -154.708, 87.8728, 0.23 ) }
    dend_35 { pt3dadd( 23.2724, -157.116, 89.3761, 0.91 ) }
    dend_35 { pt3dadd( 24.1141, -158.288, 90.2111, 0.23 ) }
    dend_35 { pt3dadd( 25.0652, -159.525, 91.2039, 0.91 ) }
    dend_35 { pt3dadd( 26.922, -161.907, 93.3236, 0.23 ) }
    dend_35 { pt3dadd( 28.3651, -163.779, 95.0716, 0.23 ) }
    dend_35 { pt3dadd( 29.0567, -164.676, 95.9389, 0.91 ) }
    dend_35 { pt3dadd( 30.135, -166.089, 97.3562, 0.23 ) }
    dend_35 { pt3dadd( 30.9832, -167.242, 98.5559, 0.91 ) }
    dend_35 { pt3dadd( 32.6361, -169.466, 100.952, 0.23 ) }
    dend_35 { pt3dadd( 33.2781, -170.285, 101.784, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 12.8998, -138.107, 81.7681, 0.23 ) }
    dend_32 { pt3dadd( 11.6421, -140.852, 83.8174, 0.23 ) }
    dend_32 { pt3dadd( 10.2211, -143.995, 86.0746, 0.23 ) }
    dend_32 { pt3dadd( 9.17344, -146.335, 87.8613, 0.68 ) }
    dend_32 { pt3dadd( 8.64256, -147.596, 88.9042, 0.23 ) }
    dend_32 { pt3dadd( 8.28294, -148.414, 89.6035, 0.91 ) }
    dend_32 { pt3dadd( 6.83449, -151.509, 92.4357, 0.23 ) }
    dend_32 { pt3dadd( 6.28013, -152.649, 93.5373, 0.91 ) }
    dend_32 { pt3dadd( 4.93521, -155.227, 96.1117, 0.23 ) }
    dend_32 { pt3dadd( 3.66637, -157.62, 98.4771, 0.23 ) }
    dend_32 { pt3dadd( 3.16631, -158.618, 99.4052, 0.91 ) }
    dend_32 { pt3dadd( 1.582, -161.865, 102.09, 0.23 ) }
    dend_32 { pt3dadd( 1.15051, -162.71, 102.655, 0.91 ) }
    dend_32 { pt3dadd( 0.501491, -164.049, 103.324, 0.23 ) }
    dend_32 { pt3dadd( -0.104371, -165.38, 103.786, 1.14 ) }
    dend_32 { pt3dadd( -1.33657, -168.207, 104.489, 0.23 ) }
    dend_32 { pt3dadd( -2.54616, -171.229, 105.131, 0.91 ) }
    dend_32 { pt3dadd( -3.82628, -174.573, 105.617, 0.23 ) }
    dend_32 { pt3dadd( -4.87506, -177.315, 106.036, 0.68 ) }
    dend_32 { pt3dadd( -5.88521, -179.812, 106.433, 0.23 ) }
    dend_32 { pt3dadd( -6.69554, -181.66, 106.714, 0.91 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 58/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 51.4188, 35.9722, -8.10823, 0.23 ) }
    dend_10 { pt3dadd( 53.6376, 35.0118, -8.19075, 0.23 ) }
    dend_10 { pt3dadd( 57.0629, 33.9687, -8.51666, 0.23 ) }
    dend_10 { pt3dadd( 59.696, 33.4153, -8.85608, 0.91 ) }
    dend_10 { pt3dadd( 61.2781, 33.201, -9.06727, 0.23 ) }
    dend_10 { pt3dadd( 62.4975, 33.0905, -9.2218, 0.91 ) }
    dend_10 { pt3dadd( 64.975, 32.968, -9.60352, 0.23 ) }
    dend_10 { pt3dadd( 67.8159, 33.0689, -10.0872, 0.23 ) }
    dend_10 { pt3dadd( 70.2354, 33.2981, -10.5973, 0.23 ) }
    dend_10 { pt3dadd( 73.1644, 33.6093, -11.288, 0.23 ) }
    dend_10 { pt3dadd( 75.5947, 33.8672, -11.9261, 0.91 ) }
    dend_10 { pt3dadd( 77.7988, 34.0913, -12.4997, 0.23 ) }
    dend_10 { pt3dadd( 79.3974, 34.2513, -12.8817, 0.68 ) }
    dend_10 { pt3dadd( 81.3455, 34.4188, -13.2902, 0.23 ) }
    dend_10 { pt3dadd( 82.8793, 34.557, -13.5489, 0.23 ) }
    dend_10 { pt3dadd( 83.5739, 34.6319, -13.6333, 0.23 ) }
    dend_10 { pt3dadd( 85.8544, 34.9096, -13.7226, 0.91 ) }
    dend_10 { pt3dadd( 87.5547, 35.1448, -13.6579, 0.23 ) }
    dend_10 { pt3dadd( 88.7888, 35.3538, -13.5463, 0.91 ) }
    dend_10 { pt3dadd( 91.6251, 35.9935, -13.3009, 0.23 ) }
    dend_10 { pt3dadd( 94.0295, 36.683, -13.1138, 0.23 ) }
    dend_10 { pt3dadd( 95.6484, 37.2302, -13.0029, 0.23 ) }
    dend_10 { pt3dadd( 97.0244, 37.7538, -12.9314, 0.68 ) }
    dend_10 { pt3dadd( 99.3636, 38.6954, -12.8842, 0.23 ) }
    dend_10 { pt3dadd( 102.911, 40.1781, -12.9145, 0.23 ) }
    dend_10 { pt3dadd( 105.053, 41.119, -13.0889, 0.23 ) }
    dend_10 { pt3dadd( 106.083, 41.563, -13.2348, 0.23 ) }
    dend_10 { pt3dadd( 107.514, 42.1543, -13.5343, 0.23 ) }
    dend_10 { pt3dadd( 108.794, 42.6347, -13.8537, 0.68 ) }
    dend_10 { pt3dadd( 109.479, 42.836, -14.0557, 0.68 ) }
    dend_10 { pt3dadd( 111.265, 43.0947, -14.4998, 0.23 ) }
    dend_10 { pt3dadd( 112.695, 43.2121, -14.8862, 0.68 ) }
    dend_10 { pt3dadd( 113.716, 43.2661, -15.1673, 0.23 ) }
    dend_10 { pt3dadd( 114.929, 43.3307, -15.4887, 0.68 ) }
    dend_10 { pt3dadd( 117.248, 43.4827, -16.0305, 0.23 ) }
    dend_10 { pt3dadd( 119.286, 43.5761, -16.4046, 0.91 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 94/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 51.4188, 35.9722, -8.10823, 0.68 ) }
    dend_7 { pt3dadd( 52.8251, 37.0076, -8.60227, 0.68 ) }
    dend_7 { pt3dadd( 53.7664, 37.6427, -8.89379, 0.68 ) }
    dend_7 { pt3dadd( 56.0074, 39.0622, -9.53179, 0.23 ) }
    dend_7 { pt3dadd( 57.5712, 40.0168, -9.92576, 0.23 ) }
    dend_7 { pt3dadd( 59.7612, 41.2831, -10.4079, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_7 { pt3dadd( 62.4026, 42.7525, -10.9292, 0.23 ) }
    dend_7 { pt3dadd( 63.0564, 43.1031, -11.0392, 1.36 ) }
    dend_7 { pt3dadd( 63.7158, 43.4513, -11.1196, 1.36 ) }
    dend_7 { pt3dadd( 65.6614, 44.4805, -11.1007, 0.23 ) }
    dend_7 { pt3dadd( 67.591, 45.6387, -10.8812, 0.23 ) }
    dend_7 { pt3dadd( 68.6422, 46.3503, -10.692, 0.23 ) }
    dend_7 { pt3dadd( 69.4706, 46.9929, -10.5231, 1.14 ) }
    dend_7 { pt3dadd( 70.9342, 48.2647, -10.3391, 1.14 ) }
    dend_7 { pt3dadd( 73.497, 50.7259, -10.3119, 0.23 ) }
    dend_7 { pt3dadd( 74.7622, 52.0578, -10.5422, 0.68 ) }
    dend_7 { pt3dadd( 75.946, 53.2872, -10.9575, 0.23 ) }
    dend_7 { pt3dadd( 77.577, 54.812, -11.7043, 0.68 ) }
    dend_7 { pt3dadd( 79.971, 56.7673, -12.9891, 0.23 ) }
    dend_7 { pt3dadd( 81.5019, 57.7872, -13.8451, 0.23 ) }
    dend_7 { pt3dadd( 83.6619, 58.9238, -15.0758, 1.14 ) }
    dend_7 { pt3dadd( 86.0501, 59.769, -16.2128, 0.23 ) }
    dend_7 { pt3dadd( 88.148, 60.1932, -16.9756, 0.68 ) }
    dend_7 { pt3dadd( 89.1634, 60.2588, -17.212, 0.23 ) }
    dend_7 { pt3dadd( 92.0425, 60.1718, -17.5231, 0.91 ) }
    dend_7 { pt3dadd( 93.3332, 60.083, -17.5749, 0.91 ) }
    dend_7 { pt3dadd( 95.4985, 59.8961, -17.5735, 0.23 ) }
    dend_7 { pt3dadd( 96.9058, 59.8036, -17.5844, 0.23 ) }
    dend_7 { pt3dadd( 97.724, 59.7906, -17.6011, 0.23 ) }
    dend_7 { pt3dadd( 99.9978, 59.9147, -17.6937, 0.68 ) }
    dend_7 { pt3dadd( 102.483, 60.2996, -17.8641, 0.23 ) }
    dend_7 { pt3dadd( 103.692, 60.5817, -17.9802, 0.68 ) }
    dend_7 { pt3dadd( 104.908, 60.9811, -18.1544, 0.23 ) }
    dend_7 { pt3dadd( 106.011, 61.4062, -18.4016, 0.23 ) }
    dend_7 { pt3dadd( 107.357, 61.9309, -18.7791, 0.23 ) }
    dend_7 { pt3dadd( 108.317, 62.3008, -19.0863, 0.68 ) }
    dend_7 { pt3dadd( 110.823, 63.1798, -19.9337, 0.23 ) }
    dend_7 { pt3dadd( 112.667, 63.8049, -20.5892, 1.14 ) }
    dend_7 { pt3dadd( 115.28, 64.63, -21.5603, 0.23 ) }
    dend_7 { pt3dadd( 117.567, 65.2811, -22.4346, 0.23 ) }
    dend_7 { pt3dadd( 119.186, 65.7135, -23.0607, 0.91 ) }
    dend_7 { pt3dadd( 121.973, 66.3491, -24.0924, 0.23 ) }
    dend_7 { pt3dadd( 131.048, 72.091, -26.3655, 0.23 ) }
    dend_7 { pt3dadd( 140.261, 77.0972, -29.6867, 0.23 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -76.8956, -115.965, -150.384, 0.23 ) }
    dend_76 { pt3dadd( -77.8289, -124.629, -155.219, 0.23 ) }
    dend_76 { pt3dadd( -80.5993, -133.299, -159.383, 0.23 ) }
    dend_76 { pt3dadd( -83.0511, -142.665, -161.942, 0.23 ) }
    dend_76 { pt3dadd( -84.456, -152.329, -164.085, 0.23 ) }
    dend_76 { pt3dadd( -83.6771, -162.199, -165.31, 0.23 ) }
    dend_76 { pt3dadd( -82.414, -172.114, -165.187, 0.23 ) }
    dend_76 { pt3dadd( -79.8184, -181.754, -165.184, 0.23 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 46/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -76.8956, -115.965, -150.384, 0.23 ) }
    dend_75 { pt3dadd( -79.1273, -121.296, -159.088, 0.23 ) }
    dend_75 { pt3dadd( -82.2613, -127.488, -166.885, 0.23 ) }
    dend_75 { pt3dadd( -84.1544, -132.841, -175.65, 0.23 ) }
    dend_75 { pt3dadd( -86.6004, -138.946, -183.747, 0.23 ) }
    dend_75 { pt3dadd( -88.9656, -143.323, -192.961, 0.23 ) }
    dend_75 { pt3dadd( -91.1104, -146.626, -202.689, 0.23 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 53/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -86.7282, -75.125, -86.7041, 0.23 ) }
    dend_73 { pt3dadd( -93.9608, -84.3614, -93.4494, 0.23 ) }
    dend_73 { pt3dadd( -101.448, -94.0944, -99.1136, 0.23 ) }
    dend_73 { pt3dadd( -109.31, -103.921, -104.072, 0.23 ) }
    dend_73 { pt3dadd( -116.918, -113.845, -109.214, 0.23 ) }
    dend_73 { pt3dadd( -124.607, -122.769, -115.9, 0.23 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 59/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -86.7282, -75.125, -86.7041, 0.23 ) }
    dend_72 { pt3dadd( -91.1904, -81.3252, -91.7289, 0.23 ) }
    dend_72 { pt3dadd( -93.889, -88.1033, -97.1712, 0.23 ) }
    dend_72 { pt3dadd( -95.2481, -94.817, -103.138, 0.23 ) }
    dend_72 { pt3dadd( -97.628, -101.518, -108.813, 0.23 ) }
    dend_72 { pt3dadd( -101.302, -108.032, -114.038, 0.23 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 65/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 80.8816, 13.3046, -128.977, 0.23 ) }
    dend_69 { pt3dadd( 85.9563, 12.8487, -134.178, 0.23 ) }
    dend_69 { pt3dadd( 89.5869, 12.2846, -140.48, 0.23 ) }
    dend_69 { pt3dadd( 92.4759, 11.589, -147.146, 0.23 ) }
    dend_69 { pt3dadd( 96.0104, 11.9401, -153.509, 0.23 ) }
    dend_69 { pt3dadd( 100.103, 12.5738, -159.493, 0.23 ) }
    dend_69 { pt3dadd( 104.853, 12.8024, -164.999, 0.23 ) }
    dend_69 { pt3dadd( 110.106, 12.5945, -170.029, 0.23 ) }
    dend_69 { pt3dadd( 115.27, 12.3455, -175.15, 0.23 ) }
    dend_69 { pt3dadd( 121.139, 10.6696, -179.129, 0.23 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 75/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 80.8816, 13.3046, -128.977, 0.23 ) }
    dend_68 { pt3dadd( 88.2262, 13.3869, -135.973, 0.23 ) }
    dend_68 { pt3dadd( 94.3065, 14.0239, -144.07, 0.23 ) }
    dend_68 { pt3dadd( 100.801, 14.3076, -151.862, 0.23 ) }
    dend_68 { pt3dadd( 108.497, 15.5349, -158.318, 0.23 ) }
    dend_68 { pt3dadd( 116.191, 16.8164, -164.763, 0.23 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 81/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 97.148, -32.2915, -143.333, 0.23 ) }
    dend_66 { pt3dadd( 105.829, -35.2642, -150.737, 0.23 ) }
    dend_66 { pt3dadd( 114.879, -38.9285, -157.321, 0.23 ) }
    dend_66 { pt3dadd( 123.816, -41.5051, -164.574, 0.23 ) }
    dend_66 { pt3dadd( 131.391, -46.2445, -172.231, 0.23 ) }
    dend_66 { pt3dadd( 138.816, -50.1154, -180.524, 0.23 ) }
    dend_66 { pt3dadd( 144.992, -54.8482, -189.365, 0.23 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 88/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 97.148, -32.2915, -143.333, 0.23 ) }
    dend_65 { pt3dadd( 105.571, -35.5657, -150.614, 0.23 ) }
    dend_65 { pt3dadd( 112.264, -38.7582, -159.551, 0.23 ) }
    dend_65 { pt3dadd( 119.832, -40.9381, -168.096, 0.23 ) }
    dend_65 { pt3dadd( 126.664, -43.0258, -177.264, 0.23 ) }
    dend_65 { pt3dadd( 132.285, -44.3525, -187.354, 0.23 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 94/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 111.243, 113.885, -38.2898, 0.23 ) }
    dend_51 { pt3dadd( 117.826, 117.739, -39.8782, 0.23 ) }
    dend_51 { pt3dadd( 124.05, 122.333, -40.7016, 0.23 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 97/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 111.243, 113.885, -38.2898, 0.23 ) }
    dend_50 { pt3dadd( 118.546, 118.477, -41.1195, 0.23 ) }
    dend_50 { pt3dadd( 125.607, 123.481, -43.8248, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_50 { pt3dadd( 131.95, 129.802, -45.0061, 0.23 ) }
    dend_50 { pt3dadd( 137.426, 136.905, -45.8077, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 2/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 33.2781, -170.285, 101.784, 0.23 ) }
    dend_37 { pt3dadd( 34.7631, -171.853, 103.887, 0.23 ) }
    dend_37 { pt3dadd( 35.5034, -172.635, 104.935, 0.91 ) }
    dend_37 { pt3dadd( 37.4902, -174.733, 107.748, 0.23 ) }
    dend_37 { pt3dadd( 38.2593, -175.545, 108.836, 0.68 ) }
    dend_37 { pt3dadd( 39.7732, -177.143, 110.98, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 8/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 33.2781, -170.285, 101.784, 0.23 ) }
    dend_36 { pt3dadd( 33.6384, -172.918, 103.442, 0.23 ) }
    dend_36 { pt3dadd( 34.0845, -176.179, 105.495, 0.68 ) }
    dend_36 { pt3dadd( 34.3674, -178.247, 106.797, 0.23 ) }
    dend_36 { pt3dadd( 34.5654, -179.695, 107.708, 0.91 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 13/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -6.69554, -181.66, 106.714, 0.23 ) }
    dend_34 { pt3dadd( -6.46058, -182.319, 107.25, 0.23 ) }
    dend_34 { pt3dadd( -6.29607, -182.63, 107.516, 0.68 ) }
    dend_34 { pt3dadd( -5.5291, -183.817, 108.378, 0.23 ) }
    dend_34 { pt3dadd( -5.4094, -184.003, 108.513, 0.23 ) }
    dend_34 { pt3dadd( -5.02559, -184.597, 108.944, 0.23 ) }
    dend_34 { pt3dadd( -4.50378, -185.404, 109.531, 0.91 ) }
    dend_34 { pt3dadd( -4.13079, -185.932, 109.94, 0.23 ) }
    dend_34 { pt3dadd( -3.5362, -186.621, 110.454, 0.68 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 22/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -6.69554, -181.66, 106.714, 0.23 ) }
    dend_33 { pt3dadd( -8.52006, -183.424, 108.966, 0.23 ) }
    dend_33 { pt3dadd( -10.1835, -184.937, 110.883, 0.91 ) }
    dend_33 { pt3dadd( -12.6485, -187.119, 113.8, 0.23 ) }
    dend_33 { pt3dadd( -13.2494, -187.619, 114.515, 0.68 ) }
    dend_33 { pt3dadd( -15.1906, -189.235, 116.816, 0.23 ) }
    dend_33 { pt3dadd( -15.7796, -189.733, 117.612, 1.14 ) }
    dend_33 { pt3dadd( -16.3914, -190.246, 118.558, 1.14 ) }
    dend_33 { pt3dadd( -18.4713, -192.201, 121.97, 0.23 ) }
    dend_33 { pt3dadd( -19.8864, -193.619, 124.373, 1.14 ) }
    dend_33 { pt3dadd( -20.3212, -194.091, 125.167, 1.14 ) }
    dend_33 { pt3dadd( -22.7432, -196.926, 129.911, 0.23 ) }
    dend_33 { pt3dadd( -23.4731, -197.862, 131.53, 0.23 ) }
    dend_33 { pt3dadd( -24.7687, -199.727, 134.869, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 36/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 119.286, 43.5761, -16.4046, 0.23 ) }
    dend_12 { pt3dadd( 120.275, 44.4039, -15.5622, 0.23 ) }
    dend_12 { pt3dadd( 120.802, 44.8242, -15.1644, 0.91 ) }
    dend_12 { pt3dadd( 123.854, 47.0441, -13.2364, 0.23 ) }
    dend_12 { pt3dadd( 125.83, 48.2531, -12.2268, 0.68 ) }
    dend_12 { pt3dadd( 127.578, 49.1556, -11.5401, 0.23 ) }
    dend_12 { pt3dadd( 129.344, 49.9799, -10.9723, 0.91 ) }
    dend_12 { pt3dadd( 130.636, 50.4916, -10.6885, 0.23 ) }
    dend_12 { pt3dadd( 132.529, 51.1415, -10.434, 0.68 ) }
    dend_12 { pt3dadd( 135.217, 51.9211, -10.3214, 0.23 ) }
    dend_12 { pt3dadd( 137.963, 52.5972, -10.3201, 0.23 ) }
    dend_12 { pt3dadd( 139.434, 52.9347, -10.3824, 0.23 ) }
    dend_12 { pt3dadd( 140.838, 53.2351, -10.4444, 0.91 ) }
    dend_12 { pt3dadd( 141.827, 53.425, -10.5012, 0.91 ) }
    dend_12 { pt3dadd( 150.307, 56.0379, -9.99148, 0.91 ) }
    dend_12 { pt3dadd( 158.874, 58.2868, -9.21187, 0.91 ) }
    dend_12 { pt3dadd( 167.014, 60.7135, -6.66316, 0.91 ) }
    dend_12 { pt3dadd( 174.938, 64.3376, -5.08523, 0.91 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 54/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 119.286, 43.5761, -16.4046, 0.23 ) }
    dend_11 { pt3dadd( 120.094, 43.5342, -16.3963, 0.23 ) }
    dend_11 { pt3dadd( 121.778, 43.4248, -16.3947, 0.45 ) }
    dend_11 { pt3dadd( 123.541, 43.29, -16.4044, 0.23 ) }
    dend_11 { pt3dadd( 125.329, 43.1571, -16.3706, 0.68 ) }
    dend_11 { pt3dadd( 127.2, 43.0436, -16.3195, 0.23 ) }
    dend_11 { pt3dadd( 129.272, 42.929, -16.2586, 0.68 ) }
    dend_11 { pt3dadd( 130.132, 42.8953, -16.2322, 0.23 ) }
    dend_11 { pt3dadd( 131.024, 42.8638, -16.2061, 0.68 ) }
    dend_11 { pt3dadd( 132.814, 42.7978, -16.1683, 0.23 ) }
    dend_11 { pt3dadd( 135.166, 42.7468, -16.0779, 1.14 ) }
    dend_11 { pt3dadd( 136.32, 42.7382, -16.0248, 0.23 ) }
    dend_11 { pt3dadd( 136.873, 42.7382, -15.9716, 0.91 ) }
    dend_11 { pt3dadd( 138.117, 42.7662, -15.8224, 0.23 ) }
    dend_11 { pt3dadd( 138.88, 42.7953, -15.7287, 1.14 ) }
    dend_11 { pt3dadd( 140.478, 42.8561, -15.5429, 0.23 ) }
    dend_11 { pt3dadd( 142.379, 42.9296, -15.2162, 0.91 ) }
    dend_11 { pt3dadd( 144.335, 43.0004, -14.8441, 0.23 ) }
    dend_11 { pt3dadd( 146.229, 43.0725, -14.4877, 0.68 ) }
    dend_11 { pt3dadd( 148.54, 43.1694, -14.0768, 0.23 ) }
    dend_11 { pt3dadd( 149.547, 43.207, -13.8837, 0.68 ) }
    dend_11 { pt3dadd( 151.717, 43.2636, -13.4338, 0.23 ) }
    dend_11 { pt3dadd( 153.805, 43.3058, -12.9956, 0.68 ) }
    dend_11 { pt3dadd( 155.698, 43.3463, -12.5924, 0.23 ) }
    dend_11 { pt3dadd( 157.189, 43.3771, -12.255, 0.23 ) }
    dend_11 { pt3dadd( 160.808, 43.4506, -11.4572, 0.23 ) }
    dend_11 { pt3dadd( 163.242, 43.5141, -10.9819, 0.23 ) }
    dend_11 { pt3dadd( 165.044, 43.5747, -10.685, 0.68 ) }
    dend_11 { pt3dadd( 168.203, 43.7285, -10.1421, 0.23 ) }
    dend_11 { pt3dadd( 170.305, 43.8567, -9.79843, 0.23 ) }
    dend_11 { pt3dadd( 172.404, 44.0265, -9.45289, 0.23 ) }
    dend_11 { pt3dadd( 174.585, 44.2388, -9.15807, 0.45 ) }
    dend_11 { pt3dadd( 175.55, 44.3433, -9.03487, 0.68 ) }
    dend_11 { pt3dadd( 178.81, 44.7205, -8.58943, 0.23 ) }
    dend_11 { pt3dadd( 180.441, 44.9136, -8.36949, 0.68 ) }
    dend_11 { pt3dadd( 183.372, 45.3545, -7.83382, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 90/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 140.261, 77.0972, -29.6867, 0.23 ) }
    dend_9 { pt3dadd( 149.029, 81.1353, -31.7713, 0.23 ) }
    dend_9 { pt3dadd( 158.256, 84.5254, -32.8362, 0.23 ) }
    dend_9 { pt3dadd( 167.476, 87.3808, -35.0284, 0.23 ) }
    dend_9 { pt3dadd( 177.067, 89.2547, -36.6657, 0.23 ) }
    dend_9 { pt3dadd( 186.959, 89.595, -37.2953, 0.23 ) }
    dend_9 { pt3dadd( 196.749, 88.1563, -37.8794, 0.23 ) }
    dend_9 { pt3dadd( 206.648, 87.6628, -37.5164, 0.23 ) }
    dend_9 { pt3dadd( 216.483, 87.7281, -36.2367, 0.23 ) }
    dend_9 { pt3dadd( 226.397, 87.9745, -36.3419, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 236.244, 88.0521, -35.1622, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 1/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 140.261, 77.0972, -29.6867, 0.23 ) }
    dend_8 { pt3dadd( 150.491, 81.4862, -31.4462, 0.23 ) }
    dend_8 { pt3dadd( 161.011, 85.3649, -32.67, 0.23 ) }
    dend_8 { pt3dadd( 170.767, 90.6225, -34.6169, 0.23 ) }
    dend_8 { pt3dadd( 180.467, 95.3363, -37.8733, 0.23 ) }
    dend_8 { pt3dadd( 191.018, 98.8803, -39.7397, 0.23 ) }
    dend_8 { pt3dadd( 201.5, 102.941, -40.6205, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_39 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_57 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_18 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_14 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_70 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_63 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_58 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_55 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_54 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_47 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_41 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_31 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_25 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_74 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_71 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_67 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_64 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_49 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_35 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_32 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_7 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_76 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_75 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_73 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_72 OneSecGrp_SectionRef_66.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_69 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_68 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_66 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_65 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_12 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_11 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_9 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_8 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_15 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_28 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_19 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_4 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_62 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_45 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_5 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_46 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_53 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_13 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_48 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_51 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_60 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_61 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_50 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_37 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_34 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_22 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_21 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_42 OneSecGrp_SectionRef_41.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 11
    dend_39 nseg = 11
    dend_16 nseg = 11
    dend_1 nseg = 15
    dend_57 nseg = 3
    dend_43 nseg = 3
    dend_29 nseg = 15
    dend_20 nseg = 11
    dend_18 nseg = 3
    dend_17 nseg = 3
    dend_14 nseg = 11
    dend_3 nseg = 3
    dend_2 nseg = 3
    dend_70 nseg = 3
    dend_63 nseg = 3
    dend_59 nseg = 7
    dend_58 nseg = 11
    dend_55 nseg = 5
    dend_54 nseg = 5
    dend_52 nseg = 5
    dend_47 nseg = 3
    dend_41 nseg = 7
    dend_38 nseg = 5
    dend_31 nseg = 7
    dend_25 nseg = 5
    dend_24 nseg = 15
    dend_74 nseg = 7
    dend_71 nseg = 5
    dend_67 nseg = 5
    dend_64 nseg = 7
    dend_49 nseg = 3
    dend_35 nseg = 3
    dend_32 nseg = 3
    dend_10 nseg = 3
    dend_7 nseg = 5
    dend_76 nseg = 3
    dend_75 nseg = 3
    dend_73 nseg = 3
    dend_72 nseg = 3
    dend_69 nseg = 3
    dend_68 nseg = 3
    dend_66 nseg = 3
    dend_65 nseg = 3
    dend_12 nseg = 3
    dend_11 nseg = 3
    dend_9 nseg = 5
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_NBC_1ef33fd873_0_0


