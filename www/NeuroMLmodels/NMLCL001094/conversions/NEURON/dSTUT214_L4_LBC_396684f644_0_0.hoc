// Cell: dSTUT214_L4_LBC_396684f644_0_0
/*
{
  "id" : "dSTUT214_L4_LBC_396684f644_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.05395, 9.08547, -0.234601, 2.54687", "-2.79219, 8.19057, -0.218348, 4.32292", "-2.53043, 7.29567, -0.202095, 9.95036", "-2.26867, 6.40077, -0.185842, 10.1502", "-2.00691, 5.50587, -0.169589, 10.462", "-1.74515, 4.61097, -0.153336, 10.4262", "-1.48339, 3.71607, -0.137083, 10.5866", "-1.22164, 2.82117, -0.12083, 10.9135", "-0.959876, 1.92627, -0.104577, 11.2266", "-0.698117, 1.03137, -0.0883238, 11.5453", "-0.436358, 0.136465, -0.0720707, 11.9293", "-0.174598, -0.758436, -0.0558177, 12.2062", "0.0871607, -1.65334, -0.0395646, 12.3612", "0.34892, -2.54824, -0.0233116, 12.3583", "0.610679, -3.44314, -0.00705855, 12.2953", "0.872438, -4.33804, 0.0091945, 11.8309", "1.1342, -5.23294, 0.0254475, 11.1435", "1.39596, -6.12784, 0.0417006, 10.0426", "1.65772, -7.02274, 0.0579536, 8.49572", "1.91947, -7.91764, 0.0742067, 6.62324", "2.18123, -8.81254, 0.0904597, 3.82196" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-3.18195, -5.17787, -7.31829, 0.81", "-3.54042, -5.5776, -7.19807, 0.81", "-3.90826, -6.04607, -7.08888, 0.81", "-4.40763, -6.77633, -6.95381, 0.52", "-4.97099, -7.6516, -6.82436, 0.44", "-5.37482, -8.29294, -6.74583, 0.29", "-5.61516, -8.66919, -6.70739, 0.74", "-5.97749, -9.27165, -6.66447, 0.74", "-6.28464, -9.82925, -6.64559, 0.59", "-6.6732, -10.5939, -6.6531, 1.03", "-6.95409, -11.1946, -6.6665, 1.03", "-7.30675, -12.0231, -6.66938, 0.74", "-7.47666, -12.4841, -6.66938, 0.44", "-7.70591, -13.2243, -6.66938, 1.4", "-7.84408, -13.8476, -6.66938, 1.62", "-7.92585, -14.4851, -6.66938, 1.77", "-7.99259, -15.5902, -6.66938, 1.11", "-7.99926, -16.3597, -6.67395, 0.29", "-7.99187, -17.1897, -6.68225, 0.29", "-7.96329, -18.334, -6.70346, 0.44", "-7.93547, -19.1813, -6.73099, 0.59", "-7.91156, -19.9529, -6.77842, 0.81", "-7.89094, -21.2173, -6.8892, 0.22", "-7.90241, -22.0423, -6.97559, 1.33", "-7.94387, -22.8936, -7.07131, 2.06", "-7.98517, -23.4079, -7.13403, 2.14", "-8.08348, -24.3861, -7.26674, 1.62", "-8.29023, -26.1662, -7.55252, 0.22", "-8.52904, -28.0698, -7.90692, 0.22", "-8.64385, -29.1156, -8.11606, 1.11", "-8.72173, -29.9087, -8.2759, 1.33", "-8.76706, -30.4661, -8.38748, 1.18", "-8.81526, -31.2727, -8.55615, 0.96", "-8.83846, -32.1406, -8.76016, 0.22", "-8.85785, -34.2114, -9.2814, 0.22", "-8.86655, -34.8892, -9.44701, 0.88", "-8.8738, -35.0988, -9.49322, 1.18", "-8.92116, -35.5807, -9.5772, 1.33", "-9.03292, -36.2658, -9.67103, 1.03", "-9.35032, -37.5949, -9.8407, 0.22", "-9.53396, -38.1536, -9.92348, 0.44", "-9.65761, -38.5045, -9.98035, 0.44", "-10.33, -40.2849, -10.3119, 0.22", "-10.5457, -40.8139, -10.4208, 0.44", "-10.8115, -41.4263, -10.5611, 0.44", "-11.926, -43.8331, -11.2797, 0.22", "-12.5478, -45.0769, -11.745, 1.77", "-12.8025, -45.5383, -11.9492, 2.36", "-13.0613, -45.9511, -12.1711, 2.36", "-13.621, -46.7426, -12.6365, 1.4", "-14.5611, -47.913, -13.3923, 0.52", "-15.2777, -48.687, -13.961, 0.22", "-15.662, -49.132, -14.3122, 0.66", "-16.3175, -50.1123, -14.9338, 0.22", "-16.6237, -50.6593, -15.238, 1.33", "-16.8465, -51.133, -15.4569, 1.62", "-17.0257, -51.5872, -15.6298, 1.62", "-17.8805, -54.1254, -16.4325, 0.22", "-18.7949, -57.2331, -17.2462, 0.22", "-19.0598, -58.2174, -17.4801, 0.59", "-19.4743, -59.8643, -17.8392, 0.22", "-19.7256, -60.8966, -18.0277, 1.4", "-19.9813, -61.9465, -18.1548, 1.92", "-20.1712, -62.7589, -18.1247, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499997984545444,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.68195, -3.24937, 2.62171, 1.92", "-4.95386, -3.89971, 2.6164, 1.92", "-5.35953, -5.61283, 2.49426, 1.25", "-5.51579, -6.68094, 2.38308, 0.88", "-5.62933, -7.79597, 2.25661, 1.11", "-5.71255, -8.70985, 2.15372, 1.47", "-5.79616, -9.46813, 2.07062, 1.69", "-5.93662, -11.1188, 1.88541, 1.69", "-6.01181, -12.0216, 1.78186, 1.4", "-6.1911, -12.9739, 1.67451, 1.4", "-6.57281, -13.8969, 1.59406, 1.11", "-7.00542, -14.5686, 1.55524, 0.74", "-7.44405, -15.0827, 1.54727, 0.74", "-8.08255, -15.6755, 1.60612, 1.11", "-8.68425, -16.1784, 1.68502, 1.11", "-9.53123, -16.8545, 1.81144, 0.81", "-10.2407, -17.4308, 1.95557, 1.25", "-10.8047, -17.9057, 2.09186, 1.47", "-11.3829, -18.3811, 2.23548, 1.62", "-12.1007, -18.9467, 2.40988, 1.33", "-12.9342, -19.5176, 2.59157, 0.74", "-13.7878, -19.9737, 2.74924, 0.52", "-14.5841, -20.2847, 2.88186, 0.66", "-15.8278, -20.629, 3.0484, 0.66", "-16.6039, -20.77, 3.12709, 0.66", "-17.7537, -20.895, 3.19919, 0.88", "-18.6349, -20.9437, 3.20869, 0.81", "-19.6218, -20.9796, 3.15195, 0.52", "-20.161, -21.0132, 3.0904, 0.52", "-20.8059, -21.0743, 2.97849, 0.52", "-21.9264, -21.2165, 2.738, 0.88", "-22.6923, -21.3249, 2.55708, 0.88", "-23.3498, -21.4249, 2.40221, 0.88", "-24.2478, -21.5538, 2.20659, 0.74", "-25.1244, -21.6575, 2.03726, 0.59", "-25.9924, -21.7254, 1.893, 0.81", "-27.107, -21.7765, 1.73928, 0.81", "-28.056, -21.7984, 1.63306, 1.03", "-29.0139, -21.8042, 1.53106, 1.25", "-29.4306, -21.8116, 1.51587, 1.25", "-30.3893, -21.8927, 1.52881, 0.66", "-31.3245, -22.0595, 1.56323, 0.66", "-32.188, -22.3361, 1.61438, 0.81", "-32.547, -22.5155, 1.66306, 0.81", "-33.963, -23.4778, 1.96781, 0.37", "-34.4082, -23.8242, 2.09989, 0.29", "-34.9524, -24.3033, 2.30535, 0.29", "-35.3451, -24.6647, 2.46715, 0.29", "-36.2514, -25.4339, 2.8049, 0.74", "-36.7882, -25.8367, 2.95497, 1.25", "-37.2395, -26.1342, 3.03014, 1.25", "-37.6389, -26.3753, 3.10082, 1.25", "-37.9509, -26.5581, 3.15963, 1.25", "-38.8607, -27.111, 3.31254, 0.52", "-39.5129, -27.5678, 3.3791, 1.03", "-39.7892, -27.8057, 3.40263, 1.33", "-40.2088, -28.2432, 3.43063, 1.55", "-40.4917, -28.6037, 3.45271, 1.55", "-40.6572, -28.8777, 3.47071, 1.55", "-40.9561, -29.6163, 3.52793, 1.03", "-41.2235, -30.4125, 3.61042, 0.44", "-41.3007, -30.6504, 3.64299, 0.44", "-41.4594, -31.0932, 3.74762, 0.29", "-41.5907, -31.4107, 3.84514, 0.29", "-41.8348, -31.8957, 4.02697, 0.29", "-42.1575, -32.4819, 4.28879, 0.29", "-42.4577, -32.9752, 4.54713, 0.29", "-42.9939, -33.8869, 5.00991, 0.44", "-43.2933, -34.4001, 5.27094, 0.66", "-43.819, -35.306, 5.70981, 0.74", "-44.3991, -36.3073, 6.18426, 0.66", "-44.9633, -37.2824, 6.67762, 0.29", "-45.4325, -38.0567, 7.08268, 0.22", "-45.9411, -38.7711, 7.47254, 0.22", "-46.3301, -39.2511, 7.73768, 0.74", "-46.5571, -39.5139, 7.87552, 0.74", "-47.2738, -40.3211, 8.27457, 0.59", "-47.8308, -40.9369, 8.57155, 0.66", "-48.6325, -41.7467, 8.98746, 0.22", "-49.2349, -42.3223, 9.2749, 0.22", "-49.7607, -42.7962, 9.52952, 0.37", "-50.1908, -43.1975, 9.71709, 0.37", "-50.6911, -43.6721, 9.89652, 0.15", "-51.3188, -44.2135, 10.1424, 0.15", "-51.9195, -44.6088, 10.4064, 0.37", "-52.4632, -44.8152, 10.621, 0.37", "-60.3868, -50.3575, 12.4043, 0.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499997984545444,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.67805, -4.68387, -3.44829, 3.83", "6.27805, -5.42487, -3.75829, 3.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499997984545444
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "0.528048, -8.54087, 1.37171, 2.8", "0.528048, -8.54087, 1.37171, 2.8", "0.71022, -9.73685, 1.4467, 2.8", "0.892184, -10.9315, 1.5216, 2.43", "1.06104, -12.04, 1.5911, 2.21", "1.26226, -13.3611, 1.67393, 2.06", "1.35504, -13.9702, 1.71212, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499997984545444
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-6.84195, 5.76613, -0.638285, 1.62", "-6.84195, 5.76613, -0.638285, 1.62", "-7.86783, 6.13203, -0.479464, 0.81", "-9.18447, 6.56499, -0.304683, 0.74", "-10.2134, 6.87598, -0.183557, 0.96", "-11.5913, 7.26705, -0.036154, 1.18", "-12.6555, 7.55507, 0.0538811, 1.18", "-13.5936, 7.80519, 0.127602, 1.47", "-14.3729, 8.01713, 0.190163, 1.47", "-15.2861, 8.28008, 0.250868, 1.33", "-16.2075, 8.5794, 0.330704, 0.88", "-17.2126, 8.94664, 0.449424, 0.52", "-18.0601, 9.28274, 0.572426, 0.52", "-18.8867, 9.61829, 0.704071, 0.52", "-19.58, 9.89473, 0.817138, 1.03", "-20.2939, 10.1606, 0.938445, 1.33", "-20.7107, 10.2917, 1.01963, 1.33", "-21.8369, 10.5876, 1.2513, 0.81", "-22.7717, 10.8019, 1.42479, 0.81", "-23.7071, 10.9792, 1.5725, 1.03", "-24.4653, 11.0919, 1.67898, 1.03", "-25.8488, 11.2419, 1.85886, 0.66", "-26.9118, 11.3268, 2.00359, 0.37", "-27.5807, 11.3815, 2.10384, 0.37", "-28.5218, 11.461, 2.25262, 0.37", "-29.2444, 11.531, 2.36096, 0.37", "-29.8352, 11.5962, 2.43619, 0.29", "-30.562, 11.6933, 2.51146, 0.29", "-31.8037, 11.9119, 2.64028, 0.59", "-32.5926, 12.095, 2.72188, 1.03", "-33.3679, 12.3153, 2.79965, 1.03", "-34.1365, 12.5582, 2.85959, 1.03", "-35.2022, 12.9006, 2.91525, 0.88", "-36.4214, 13.2821, 2.94916, 0.66", "-37.2141, 13.5158, 2.9632, 0.66", "-38.478, 13.8959, 2.98468, 1.25", "-39.1409, 14.1049, 2.99685, 1.55", "-39.8449, 14.3402, 3.0191, 1.55", "-40.6487, 14.6267, 3.04867, 0.88", "-41.6123, 14.9819, 3.1175, 0.37", "-42.1561, 15.2014, 3.18259, 0.37", "-42.6199, 15.4069, 3.25873, 0.37", "-43.0643, 15.6143, 3.34471, 0.37", "-43.6482, 15.8976, 3.46508, 0.59", "-44.3631, 16.2351, 3.61413, 0.81", "-45.187, 16.6037, 3.77653, 0.96", "-45.9159, 16.9003, 3.90374, 0.96", "-46.976, 17.2656, 4.0532, 0.37", "-47.7022, 17.4773, 4.12737, 0.96", "-48.3404, 17.6376, 4.18606, 1.25", "-48.9171, 17.765, 4.18017, 1.25", "-49.278, 17.8297, 4.12637, 1.25", "-50.0527, 17.9438, 3.92255, 0.74", "-50.6079, 18.0156, 3.73107, 0.59", "-51.0998, 18.0821, 3.52039, 0.88", "-52.3116, 18.2583, 2.95266, 1.18", "-53.5578, 18.4457, 2.36556, 0.96", "-54.1575, 18.5428, 2.09795, 0.96", "-55.097, 18.7246, 1.7132, 0.66", "-56.1622, 18.9432, 1.32671, 0.88", "-56.8588, 19.0985, 1.11985, 0.88", "-57.7014, 19.3122, 0.977531, 0.59", "-58.6378, 19.5726, 0.922745, 0.29", "-59.5517, 19.839, 0.909274, 0.29", "-59.8688, 19.9334, 0.916379, 0.59", "-60.4887, 20.1318, 0.95255, 0.59", "-62.0278, 20.6433, 1.08398, 0.37", "-63.6614, 21.1838, 1.26899, 0.37", "-64.8573, 21.559, 1.42803, 0.74", "-65.566, 21.7662, 1.54104, 0.96", "-66.0214, 21.8992, 1.60771, 0.96", "-67.0431, 22.1787, 1.74226, 0.37", "-67.7845, 22.3711, 1.84052, 0.66", "-68.4964, 22.5549, 1.9232, 1.25", "-69.048, 22.6956, 2.00025, 1.25", "-70.2017, 22.969, 2.14219, 0.81", "-70.7886, 23.0903, 2.18292, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499997984545444,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.408048, 9.16713, -0.318285, 1.4", "0.501224, 9.34625, -0.334657, 1.4", "0.942499, 10.1945, -0.412193, 1.18", "1.358, 10.9933, -0.4852, 1.4", "1.7866, 11.8172, -0.560509, 1.4", "2.17247, 12.559, -0.62831, 1.18", "2.43808, 13.0696, -0.67498, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499997984545444
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.18123, -8.81254, 0.0904597, 0.792933", "6.39229, -23.2093, 0.0904597, 0.792933", "10.6034, -37.6061, 0.0904597, 0.792933" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "6.27805, -5.42487, -3.75829, 0.66", "7.46353, -7.5287, -4.01393, 0.66", "7.64745, -7.70143, -4.09214, 0.66", "8.76641, -8.00097, -4.5449, 0.44", "10.6797, -8.09313, -5.12115, 0.44", "11.2445, -8.0757, -5.26087, 0.88", "12.1214, -7.99554, -5.43898, 1.03", "13.0958, -7.76876, -5.54211, 1.03", "14.5435, -7.35522, -5.67579, 0.96", "15.522, -7.0588, -5.76148, 1.33", "15.9909, -6.92105, -5.81716, 1.55", "16.9465, -6.69813, -5.90571, 1.55", "17.8511, -6.58228, -5.95075, 1.25", "19.3394, -6.67693, -5.97556, 0.96", "19.8307, -6.86389, -5.99252, 0.66", "20.6235, -7.38147, -5.95826, 1.11", "21.0258, -7.69885, -5.93388, 1.33", "21.4964, -8.09985, -5.9044, 1.33", "22.5016, -8.93226, -5.85024, 0.81", "23.3384, -9.5111, -5.81017, 0.66", "24.8177, -10.0848, -5.76316, 0.66", "25.6951, -10.2046, -5.77294, 1.11", "26.5506, -10.1934, -5.80681, 1.11", "27.3465, -10.0958, -5.87675, 1.11", "28.1993, -9.91799, -6.00199, 0.81", "29.0709, -9.73954, -6.19603, 0.81", "29.9395, -9.55834, -6.43858, 0.96", "30.9371, -9.39821, -6.69648, 1.92", "31.9207, -9.31344, -6.96145, 2.65", "32.5272, -9.3041, -7.13914, 2.65", "33.647, -9.35981, -7.52378, 1.62" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.27805, -5.42487, -3.75829, 0.96", "10.6475, -6.77661, -0.507176, 0.96", "11.7015, -7.02106, 0.15968, 1.11", "12.4148, -7.14699, 0.547122, 1.25", "13.1576, -7.24542, 0.887969, 1.4", "13.9717, -7.32553, 1.21888, 1.4", "15.3338, -7.42483, 1.72768, 1.11", "16.3119, -7.37858, 1.89577, 0.96", "17.3267, -7.28684, 2.09271, 0.66", "18.5496, -7.13359, 2.35156, 0.66", "19.3083, -7.00906, 2.51761, 0.66", "20.0727, -6.87536, 2.68275, 0.66", "20.895, -6.74036, 2.85669, 0.81", "21.686, -6.63981, 3.04692, 1.03", "22.2819, -6.60339, 3.21996, 1.03", "23.1642, -6.68287, 3.54032, 0.59", "23.9473, -6.88551, 3.85062, 0.44", "24.3232, -7.01282, 3.99824, 0.44", "25.0263, -7.22273, 4.2347, 0.44", "26.0764, -7.43165, 4.51789, 0.44", "26.9331, -7.50761, 4.69233, 0.59", "27.9095, -7.47705, 4.85084, 0.59", "29.0697, -7.30701, 4.99722, 0.74", "30.4766, -6.97079, 5.1409, 1.18", "31.3334, -6.68526, 5.21264, 1.4", "32.2734, -6.30986, 5.27519, 1.47", "32.9992, -5.991, 5.31296, 1.11", "33.9768, -5.54655, 5.35685, 0.29", "34.5474, -5.28639, 5.37698, 0.29", "35.1594, -5.00755, 5.39455, 0.29", "36.3169, -4.50062, 5.4161, 0.74", "37.0661, -4.19102, 5.42173, 1.03", "37.858, -3.88666, 5.42655, 1.03", "38.9552, -3.49661, 5.44035, 0.74", "39.8875, -3.18612, 5.44283, 0.74", "41.0922, -2.79193, 5.4183, 0.74", "42.3061, -2.38513, 5.36967, 1.33", "43.2487, -2.08232, 5.31787, 1.62", "43.6683, -1.94153, 5.28923, 1.62", "44.6914, -1.58589, 5.19679, 1.11", "45.8344, -1.19207, 5.0711, 0.37", "46.9757, -0.803158, 4.92846, 0.29", "47.5222, -0.624689, 4.8575, 0.29", "48.3972, -0.352848, 4.74839, 0.29", "49.0875, -0.140855, 4.67811, 0.29", "50.0207, 0.143064, 4.61481, 0.66", "50.7723, 0.384562, 4.58361, 0.66", "51.6303, 0.673597, 4.55592, 0.66", "52.3189, 0.930952, 4.54136, 0.52", "53.3471, 1.33701, 4.53272, 0.52", "53.974, 1.60667, 4.5368, 0.44", "54.9594, 2.05408, 4.56206, 0.59", "55.667, 2.40037, 4.59134, 0.74", "56.5453, 2.8497, 4.64632, 0.52", "57.2488, 3.19986, 4.70657, 0.52", "57.8997, 3.51145, 4.77874, 0.66", "59.2138, 4.11557, 4.94435, 0.66", "59.7564, 4.36619, 5.0206, 1.11", "60.1092, 4.54429, 5.07777, 1.11", "60.7522, 4.90514, 5.186, 1.11", "61.6541, 5.48154, 5.32862, 0.81", "62.3598, 5.99894, 5.45611, 0.96", "62.8815, 6.42535, 5.55718, 0.96", "63.7633, 7.19473, 5.73706, 1.18", "64.6383, 8.00466, 5.92155, 0.37", "65.5119, 8.84417, 6.10925, 0.37", "66.4393, 9.69736, 6.30093, 0.37", "67.0888, 10.2622, 6.43996, 0.81", "67.66, 10.7306, 6.56677, 0.81", "68.7441, 11.575, 6.80328, 0.59", "69.4302, 12.0883, 6.95287, 0.59", "70.4441, 12.8146, 7.1627, 0.74", "71.2169, 13.3403, 7.30402, 0.74", "71.9793, 13.8518, 7.45815, 0.37", "72.9399, 14.4976, 7.67184, 1.03", "73.1831, 14.6596, 7.72976, 1.25", "73.7038, 14.9841, 7.86009, 1.4", "74.4709, 15.4003, 8.05358, 0.88", "75.2562, 15.7259, 8.23343, 0.52", "75.785, 15.8751, 8.34562, 0.52", "76.6546, 16.043, 8.51815, 0.29", "77.5318, 16.1779, 8.6788, 0.29", "78.5756, 16.2801, 8.85318, 0.29", "79.611, 16.3169, 9.00729, 0.29", "80.4874, 16.3098, 9.11993, 0.29", "81.4167, 16.276, 9.22836, 0.88", "82.2473, 16.2279, 9.31464, 1.11", "83.0037, 16.1798, 9.38308, 1.11", "83.6388, 16.1319, 9.43101, 0.52", "84.4356, 16.0515, 9.48463, 0.52", "85.3906, 15.9171, 9.55151, 0.44", "85.6217, 15.866, 9.56595, 0.29", "94.7813, 17.3166, 13.2767, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "1.35504, -13.9702, 1.71212, 1.11", "1.34457, -14.6523, 1.13855, 1.11", "1.39868, -16.1688, 0.282539, 0.96", "1.45636, -16.9855, -0.00175144, 1.4", "1.52235, -18.1946, -0.268664, 1.25", "1.55373, -19.0919, -0.407289, 1.33", "1.55988, -20.1138, -0.525882, 1.4", "1.5259, -21.2091, -0.573757, 1.11", "1.44128, -22.4086, -0.508947, 1.4", "1.3401, -23.6682, -0.401914, 1.84", "1.26747, -24.5661, -0.31547, 1.84", "1.21536, -25.443, -0.246723, 1.55", "1.18987, -26.6422, -0.188745, 1.25", "1.20242, -27.7144, -0.147763, 0.66", "1.26361, -29.5185, -0.0514429, 0.52", "1.29473, -30.0852, -0.00188003, 0.52", "1.33564, -30.7607, 0.0862404, 0.52", "1.38429, -31.5899, 0.227402, 0.52", "1.41054, -32.2667, 0.375216, 0.52", "1.39215, -33.4677, 0.682562, 0.88", "1.31207, -34.2976, 0.9055, 1.18", "1.20926, -35.2102, 1.13863, 1.33", "1.10023, -36.0238, 1.31905, 1.4", "0.995489, -36.7012, 1.45172, 1.4", "0.878097, -37.4738, 1.58237, 1.4", "0.765974, -38.2345, 1.6869, 1.55", "0.557511, -39.453, 1.81227, 1.33", "0.23034, -41.0531, 1.93899, 1.03", "-0.0302292, -42.1144, 2.00621, 0.81", "-0.348385, -43.2267, 2.05597, 0.88", "-0.665885, -44.2214, 2.08706, 0.88", "-1.06752, -45.3388, 2.11047, 0.88", "-1.37496, -46.125, 2.1168, 0.88", "-1.68406, -46.9171, 2.12445, 1.33", "-2.02227, -47.8064, 2.13438, 1.55", "-2.20831, -48.2828, 2.1406, 1.69", "-2.54648, -49.0319, 2.15194, 1.69", "-2.78819, -49.4966, 2.1597, 1.69" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "1.35504, -13.9702, 1.71212, 1.18", "1.10648, -14.5626, 3.30089, 1.18", "1.05266, -14.8932, 4.08372, 1.18", "1.04249, -15.5055, 5.31377, 1.33", "1.0642, -15.8907, 5.97896, 1.33", "1.16086, -16.6056, 7.06153, 1.03", "1.26518, -17.2108, 7.87519, 0.88", "1.44478, -17.7283, 8.46434, 1.03", "1.64137, -18.3308, 9.00437, 1.18", "1.77138, -18.9145, 9.40283, 1.18", "1.80021, -19.53, 9.75133, 1.18", "1.71937, -20.0485, 9.96877, 1.25", "1.45474, -20.6746, 10.1446, 1.25", "0.939428, -21.4436, 10.3469, 0.96", "0.523947, -21.9609, 10.4841, 0.74", "0.088102, -22.5073, 10.6587, 0.74", "-0.513694, -23.3834, 11.0002, 0.66", "-0.875649, -24.1132, 11.3279, 0.66", "-1.25465, -25.2593, 11.8709, 0.96", "-1.40982, -26.0242, 12.2544, 0.96", "-1.50098, -26.8527, 12.6456, 0.66", "-1.54198, -27.4219, 12.883, 0.44", "-1.60844, -28.1174, 13.1441, 0.29", "-1.80772, -28.8586, 13.3539, 0.66", "-2.00775, -29.2664, 13.409, 0.66", "-2.44784, -30.0134, 13.4607, 0.44", "-2.88603, -30.7413, 13.4769, 1.03", "-3.17044, -31.2152, 13.483, 1.03", "-3.7112, -32.1145, 13.5057, 0.59", "-4.10429, -32.7289, 13.5284, 1.18", "-4.55519, -33.3601, 13.5407, 1.33", "-5.1509, -34.0561, 13.5461, 1.47", "-6.02973, -34.9508, 13.5951, 0.37", "-6.80415, -35.6526, 13.6695, 0.37", "-7.47192, -36.1362, 13.6611, 0.52", "-8.31707, -36.5926, 13.5412, 0.52", "-9.07626, -36.8894, 13.3477, 0.29", "-10.2549, -37.2623, 12.9958, 0.29", "-11.2269, -37.5066, 12.634, 0.29", "-13.6389, -37.993, 11.5257, 0.29", "-14.8534, -38.1707, 10.8626, 0.44", "-15.424, -38.2188, 10.4897, 0.59", "-21.1376, -44.687, 15.072, 0.59", "-28.3674, -50.7825, 17.6332, 0.59", "-36.9494, -55.5408, 18.757, 0.59" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-70.7886, 23.0903, 2.18292, 0.66", "-73.2452, 22.5332, 1.13264, 0.66", "-74.0945, 22.3145, 0.812597, 0.66", "-74.9638, 22.0546, 0.526171, 0.44", "-76.354, 21.6024, 0.145673, 0.22", "-77.567, 21.2086, -0.129441, 0.96", "-78.3275, 20.9622, -0.271621, 1.47", "-79.3219, 20.6423, -0.358354, 1.62", "-80.3516, 20.3221, -0.432655, 1.62", "-81.8964, 19.8705, -0.529109, 0.37", "-83.2719, 19.5052, -0.602474, 0.22", "-86.0938, 18.8395, -0.721877, 0.22", "-89.0322, 18.2371, -0.809009, 0.22", "-90.2026, 18.0312, -0.842402, 0.81", "-91.1636, 17.8844, -0.868103, 0.81", "-93.6222, 17.5359, -0.923955, 0.22", "-95.0807, 17.3238, -0.952283, 0.96", "-96.3907, 17.1329, -0.973072, 1.11", "-97.4173, 16.976, -0.992684, 1.25", "-98.318, 16.83, -1.01324, 0.81", "-100.867, 16.4111, -1.08106, 0.22", "-102.597, 16.1275, -1.13666, 0.29", "-104.118, 15.8707, -1.20036, 0.44", "-105.497, 15.64, -1.26665, 0.52", "-108.106, 15.2436, -1.39802, 0.22", "-109.058, 15.1239, -1.45383, 0.59", "-109.815, 15.0488, -1.5146, 0.74", "-110.65, 14.9756, -1.59666, 0.22", "-112.917, 14.7377, -1.93839, 0.22", "-113.924, 14.6041, -2.13493, 0.66", "-114.692, 14.4953, -2.30848, 0.96", "-115.727, 14.3466, -2.55111, 0.96", "-116.563, 14.2327, -2.72643, 0.96", "-119.134, 13.9376, -3.20939, 0.22", "-120.08, 13.8506, -3.3767, 0.37", "-121.313, 13.7587, -3.57677, 0.37", "-121.901, 13.7334, -3.66018, 0.37", "-125.33, 13.69, -4.02732, 0.15", "-126.598, 13.738, -4.09705, 1.18", "-127.217, 13.809, -4.08503, 1.4", "-127.679, 13.9049, -4.05527, 1.4", "-128.494, 14.1402, -3.99302, 1.18", "-129.065, 14.3497, -3.95258, 0.81", "-130.717, 15.1658, -3.84514, 0.22", "-131.69, 15.6916, -3.79846, 0.22", "-133.421, 16.7215, -3.62377, 0.29", "-134.256, 17.2614, -3.5121, 0.59", "-135.405, 18.0608, -3.31394, 1.11", "-136.017, 18.5203, -3.19094, 1.11", "-136.392, 18.845, -3.09484, 0.88", "-137.831, 20.1625, -2.73038, 0.44", "-138.335, 20.6411, -2.60209, 0.59", "-138.928, 21.2149, -2.45051, 0.59", "-139.693, 21.9403, -2.29219, 0.59", "-141.496, 23.558, -2.0187, 0.15", "-145.101, 26.6614, -1.64435, 0.15", "-145.921, 27.3535, -1.60071, 0.66", "-146.473, 27.8163, -1.58137, 0.81", "-149.027, 29.9642, -1.54617, 0.22", "-150.679, 31.3513, -1.54166, 0.22", "-151.4, 31.9479, -1.53943, 0.59", "-151.897, 32.3774, -1.53623, 0.59", "-153.702, 34.0261, -1.52023, 0.22", "-154.222, 34.5329, -1.51415, 0.81", "-154.672, 35.0069, -1.50776, 1.03", "-154.84, 35.2004, -1.50587, 1.03", "-157.046, 37.878, -1.4873, 0.22", "-157.71, 38.7132, -1.48365, 0.81", "-158.136, 39.2885, -1.48285, 0.88", "-160.112, 42.0742, -1.48285, 0.22", "-161.901, 44.7293, -1.48285, 0.22", "-162.455, 45.6095, -1.47391, 0.66", "-162.73, 46.1107, -1.46347, 0.66", "-163.557, 47.773, -1.42027, 0.29", "-163.882, 48.5274, -1.39846, 0.52", "-163.974, 48.8027, -1.38924, 0.52", "-164.433, 50.317, -1.33488, 0.22", "-165.0, 52.254, -1.262, 0.22", "-165.241, 53.1024, -1.22946, 0.22", "-165.506, 54.0579, -1.19305, 0.66", "-165.67, 54.6806, -1.1735, 0.66", "-165.795, 55.1586, -1.16649, 0.52" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-70.7886, 23.0903, 2.18292, 0.29", "-71.8574, 23.5758, 2.18292, 0.29", "-74.5061, 24.8531, 2.18292, 0.22", "-75.386, 25.2774, 2.18292, 0.74", "-75.8848, 25.518, 2.18292, 0.74", "-76.4912, 25.8104, 2.18292, 0.37", "-77.6982, 26.3924, 2.18292, 0.22", "-78.6786, 26.8616, 2.18292, 0.22", "-87.4057, 31.3752, 3.30812, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.43808, 13.0696, -0.67498, 0.96", "5.14123, 15.0244, -2.81943, 0.96", "5.80518, 15.5209, -3.23964, 1.03", "6.47284, 16.0312, -3.61485, 0.74", "7.35856, 16.7259, -4.05909, 0.22", "8.97081, 18.0456, -4.83507, 0.22", "10.0263, 18.9355, -5.34771, 0.88", "10.6461, 19.4985, -5.55476, 1.03", "11.3685, 20.1878, -5.80643, 0.81", "12.108, 20.9073, -6.09488, 0.22", "12.9587, 21.7436, -6.46285, 0.74", "13.3204, 22.1024, -6.62836, 1.18", "13.7306, 22.5293, -6.83137, 1.18", "14.4536, 23.3224, -7.19184, 0.22", "14.8449, 23.8072, -7.38927, 0.29", "15.1916, 24.3516, -7.62646, 0.29", "15.6295, 25.1982, -8.02898, 0.88", "15.9719, 26.0175, -8.44759, 1.03", "16.1659, 26.5755, -8.70513, 0.81", "16.5203, 27.7696, -9.23144, 0.29", "17.0103, 29.6645, -9.99138, 1.77", "17.2246, 30.5496, -10.3164, 2.21", "17.4621, 31.4405, -10.5945, 1.99", "17.9361, 32.9798, -10.9631, 1.25", "18.3774, 34.242, -11.1824, 0.22", "18.7419, 35.1678, -11.299, 0.81", "18.9753, 35.7135, -11.3442, 0.59", "19.9969, 38.0071, -11.5406, 0.22", "20.7946, 39.7155, -11.7427, 0.22", "21.5135, 41.2628, -12.0138, 0.22", "22.0914, 42.4917, -12.2792, 1.62", "22.2599, 42.841, -12.3681, 2.06", "22.565, 43.4557, -12.5348, 1.62", "22.9146, 44.1383, -12.7375, 1.11", "23.8555, 45.9073, -13.31, 0.22", "24.7858, 47.5617, -13.905, 0.22", "25.4314, 48.6771, -14.3449, 0.22", "25.8298, 49.3591, -14.6491, 0.59", "26.0188, 49.6805, -14.8078, 0.59", "26.5335, 50.466, -15.3327, 0.22", "27.468, 51.6533, -16.4067, 1.77", "27.914, 52.1868, -16.9471, 2.36", "28.4171, 52.749, -17.5065, 3.02", "28.7214, 53.0736, -17.7983, 3.02", "30.1899, 54.5624, -19.0005, 0.74", "30.7348, 55.1014, -19.4129, 0.44", "31.9457, 56.2555, -20.2186, 0.15", "33.4358, 57.7168, -21.1668, 0.15", "34.217, 58.5007, -21.6795, 1.4", "34.6803, 58.9858, -22.0145, 1.62", "37.0287, 61.6157, -23.9581, 0.15", "38.2003, 62.9612, -25.0969, 0.15", "39.0574, 63.9755, -26.1064, 1.55", "39.6322, 64.6781, -27.0382, 1.99", "40.1211, 65.2594, -28.034, 1.77", "40.7669, 65.9622, -29.6697, 0.96", "40.9803, 66.122, -30.4622, 0.74", "41.2783, 66.0868, -32.0973, 1.18", "41.8154, 65.1519, -35.9263, 0.88", "41.9662, 64.4445, -37.4568, 0.29", "42.0365, 63.8346, -38.3474, 1.18", "42.1131, 63.1387, -39.1255, 1.47", "42.3476, 61.6163, -40.5508, 0.22", "42.5727, 60.6426, -41.2997, 0.22", "42.8478, 59.9434, -41.7449, 1.62", "43.3854, 59.1621, -42.3846, 1.77", "44.2134, 58.3894, -43.2034, 0.22", "44.8969, 57.9959, -43.7447, 1.4", "45.5409, 57.7784, -44.1888, 1.47", "46.2923, 57.6028, -44.7159, 0.81", "47.7617, 57.354, -45.7522, 1.18", "48.5379, 57.2591, -46.327, 0.66", "49.1951, 57.1977, -46.8758, 1.4", "49.8056, 57.1513, -47.44, 1.4", "50.6428, 57.1071, -48.2407, 0.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.43808, 13.0696, -0.67498, 0.88", "2.88671, 13.6741, -0.719974, 0.88", "3.58199, 14.5747, -0.755391, 1.03", "4.19802, 15.3785, -0.742487, 1.25", "4.79752, 16.1597, -0.705966, 1.4", "5.63642, 17.2529, -0.654861, 1.62", "6.30863, 18.1289, -0.613911, 1.77", "6.61218, 18.514, -0.570256, 2.21", "7.09825, 19.1174, -0.483148, 2.36", "7.47118, 19.594, -0.394862, 2.73" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.6034, -37.6061, 0.0904597, 0.233668", "14.8144, -52.0028, 0.0904597, 0.233668", "19.0255, -66.3996, 0.0904597, 0.233668" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "33.647, -9.35981, -7.52378, 0.81", "35.0253, -9.201, -7.19292, 0.81", "36.2103, -9.01905, -7.05292, 0.96", "38.031, -8.74033, -6.98274, 0.88", "38.9064, -8.62606, -7.07208, 1.18", "39.5917, -8.55666, -7.1861, 1.18", "40.1656, -8.52978, -7.29716, 1.18", "41.2242, -8.48299, -7.56884, 1.11", "42.1472, -8.48293, -7.8514, 0.81", "43.6117, -8.56746, -8.43791, 0.66", "44.3001, -8.65605, -8.72704, 0.66", "45.1883, -8.81923, -9.11277, 0.66", "45.8401, -8.97452, -9.40141, 0.44", "46.6392, -9.19821, -9.73504, 1.03", "47.2209, -9.36133, -9.96985, 1.18", "47.8394, -9.51894, -10.1955, 1.18", "48.5117, -9.66027, -10.4563, 0.96", "49.0335, -9.75032, -10.6581, 0.66", "49.7098, -9.84429, -10.9065, 0.52", "50.4036, -9.87397, -11.1624, 0.81", "51.1894, -9.81549, -11.4285, 0.81", "51.8113, -9.71015, -11.618, 0.59", "52.5271, -9.54743, -11.8058, 0.44", "53.1567, -9.39531, -11.947, 0.37", "53.7302, -9.28314, -12.0612, 0.37", "54.357, -9.22082, -12.167, 0.74", "55.0339, -9.24894, -12.254, 0.74", "55.6088, -9.36556, -12.3244, 0.74", "56.2048, -9.61158, -12.4552, 0.59", "56.8558, -9.9871, -12.671, 0.59", "57.5755, -10.4581, -12.9108, 1.03", "58.1141, -10.8222, -13.0874, 1.25", "58.5529, -11.1222, -13.2262, 1.4", "59.7869, -11.9202, -13.5566, 0.88", "60.6941, -12.4143, -13.7322, 0.37", "61.6415, -12.7448, -13.9332, 0.29", "62.3937, -12.8832, -14.1348, 0.29", "62.8492, -12.9274, -14.3027, 0.29", "63.8649, -12.979, -14.7801, 0.52", "64.5108, -13.0356, -15.1304, 0.66", "66.1202, -13.2209, -16.2248, 1.84", "66.9553, -13.3072, -16.8597, 3.32", "67.9079, -13.3622, -17.6048, 3.68", "68.6333, -13.3611, -18.176, 3.54", "70.1639, -13.2735, -19.3972, 1.25", "71.6376, -13.0467, -20.5325, 0.37", "72.4174, -12.8181, -21.08, 0.22", "73.3901, -12.3766, -21.7047, 1.4", "73.7745, -12.1467, -21.9329, 1.62", "74.1423, -11.8918, -22.142, 1.62", "75.5736, -10.7661, -22.96, 0.22", "76.544, -10.0203, -23.4991, 0.22", "77.4062, -9.40526, -24.001, 0.22", "78.378, -8.778, -24.5663, 1.4", "78.8195, -8.52616, -24.8094, 1.84", "79.3821, -8.26933, -25.0791, 2.06", "79.633, -8.18178, -25.1781, 2.28", "80.1761, -8.02896, -25.3733, 2.28", "82.0608, -7.58099, -26.0363, 0.22", "83.0673, -7.36628, -26.3715, 0.22", "84.3874, -7.09279, -26.7924, 0.22", "85.5056, -6.87311, -27.1262, 1.55", "86.1079, -6.76029, -27.2997, 1.77", "86.7733, -6.63318, -27.4775, 1.47", "87.3319, -6.50946, -27.6012, 0.81", "88.4056, -6.2359, -27.8042, 0.22", "89.1565, -6.02787, -27.9378, 0.88", "89.7287, -5.86007, -28.0316, 0.96", "92.5099, -5.00655, -28.4243, 0.22", "94.3559, -4.38125, -28.6452, 0.22", "95.4414, -3.97659, -28.7582, 1.33", "96.0362, -3.74172, -28.813, 1.99", "96.6568, -3.4732, -28.8626, 1.18", "97.3671, -3.14538, -28.9125, 0.29", "100.522, -1.59394, -29.1037, 0.22", "101.077, -1.31026, -29.1373, 0.59", "101.532, -1.07123, -29.171, 0.59", "103.108, -0.226128, -29.3068, 0.22", "104.572, 0.553981, -29.4051, 0.22", "105.848, 1.24338, -29.4729, 0.22", "107.07, 1.9038, -29.5178, 1.99", "107.636, 2.2092, -29.5328, 2.65", "108.246, 2.54382, -29.5415, 2.87", "109.849, 3.40208, -29.5438, 0.59", "110.794, 3.93337, -29.5422, 0.22", "111.52, 4.3235, -29.5688, 0.66", "111.939, 4.53884, -29.5971, 0.96", "112.4, 4.7715, -29.6394, 0.96", "112.893, 5.00413, -29.7032, 0.59", "114.909, 5.92787, -30.052, 0.22", "116.942, 6.81755, -30.3933, 0.22", "117.762, 7.14918, -30.5304, 0.66", "118.545, 7.43857, -30.6817, 0.66", "120.018, 7.94415, -30.9956, 0.22", "120.372, 8.05858, -31.0836, 0.96", "121.288, 8.31253, -31.3408, 1.18", "122.751, 8.67936, -31.8775, 0.22", "123.993, 8.96059, -32.4372, 0.96", "124.611, 9.0786, -32.7642, 1.33", "125.627, 9.24306, -33.3793, 1.25", "126.631, 9.33766, -34.022, 0.52", "127.991, 9.37543, -34.9446, 0.88", "128.46, 9.34076, -35.28, 1.55", "128.907, 9.25526, -35.5933, 1.77", "129.304, 9.12914, -35.8873, 1.77", "130.43, 8.60608, -36.7625, 0.66", "131.057, 8.19401, -37.2858, 0.52", "131.981, 7.42107, -38.0299, 0.37", "132.527, 6.87239, -38.4831, 1.03", "133.059, 6.22535, -38.9543, 1.92", "133.418, 5.70583, -39.2864, 1.92", "134.014, 4.66993, -39.8512, 0.22", "134.403, 3.92356, -40.2037, 0.22", "134.642, 3.47076, -40.3842, 0.74", "134.972, 2.92684, -40.5934, 0.74", "135.424, 2.31856, -40.8299, 0.22", "135.718, 2.01256, -40.9761, 0.52", "136.112, 1.72293, -41.161, 0.52", "137.352, 1.15296, -41.7138, 0.22", "138.145, 0.965222, -42.0318, 1.18", "138.56, 0.932962, -42.1761, 1.4", "139.202, 0.951442, -42.3912, 1.47", "140.085, 1.03791, -42.6798, 0.81", "141.316, 1.26326, -43.0927, 0.22", "141.796, 1.38401, -43.302, 0.22", "142.382, 1.5053, -43.6228, 0.81", "142.987, 1.59931, -43.9895, 1.03", "143.284, 1.63475, -44.1922, 1.03", "144.231, 1.73695, -44.9123, 0.44", "145.397, 1.91729, -45.8164, 0.81", "146.102, 2.08296, -46.3689, 0.37", "147.081, 2.36645, -47.0764, 1.99", "147.731, 2.56588, -47.4773, 1.99", "148.219, 2.71982, -47.7563, 1.4", "149.29, 3.07601, -48.3377, 0.29", "149.91, 3.29761, -48.6569, 0.22", "150.81, 3.65919, -49.1709, 0.22", "152.044, 4.19596, -49.9383, 1.4", "152.758, 4.50097, -50.3783, 1.99", "153.42, 4.75471, -50.7909, 2.06", "153.812, 4.8871, -51.0287, 2.06", "154.759, 5.20422, -51.5509, 0.44", "155.516, 5.44902, -51.9359, 0.22", "156.116, 5.5991, -52.1697, 0.66", "156.897, 5.70423, -52.3944, 0.66", "157.555, 5.70907, -52.5497, 0.22", "158.202, 5.65637, -52.6822, 0.66", "158.655, 5.58772, -52.7641, 1.11", "159.205, 5.49837, -52.8729, 1.11", "159.785, 5.42932, -52.9934, 1.11", "160.309, 5.39292, -53.1026, 0.88", "161.109, 5.37658, -53.2689, 0.22", "161.836, 5.38641, -53.4091, 0.96", "162.337, 5.40573, -53.4938, 1.11", "162.778, 5.428, -53.5571, 1.11", "163.302, 5.45181, -53.6168, 0.81", "164.711, 5.48089, -53.7466, 0.15", "165.816, 5.41766, -53.8424, 0.15", "166.697, 5.30118, -53.9388, 0.74", "167.207, 5.20919, -53.9988, 0.81", "167.714, 5.10035, -54.0676, 0.81", "168.909, 4.80983, -54.2719, 0.22", "170.824, 4.28298, -54.6637, 0.22", "172.205, 3.85943, -54.9804, 0.66", "173.042, 3.56183, -55.188, 0.66", "173.844, 3.23226, -55.4029, 0.66", "174.617, 2.8266, -55.6381, 0.37", "175.131, 2.4351, -55.8181, 0.22", "175.504, 2.01791, -55.9615, 0.37", "175.981, 1.26979, -56.14, 0.15", "176.232, 0.776871, -56.2397, 0.29", "176.736, -0.466617, -56.4282, 0.22", "177.11, -1.62717, -56.5575, 0.22", "177.224, -2.07213, -56.6076, 0.37", "177.331, -2.56491, -56.667, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "33.647, -9.35981, -7.52378, 0.29", "32.2462, -7.29025, -9.66187, 0.29", "31.9584, -6.81559, -10.0987, 0.29", "31.6171, -6.16777, -10.6907, 0.74", "31.4608, -5.82022, -11.0385, 0.74", "31.3132, -5.39607, -11.5262, 0.52", "31.1786, -4.93053, -12.1005, 1.18", "31.1242, -4.43937, -12.7376, 1.18", "31.1419, -3.9221, -13.4659, 0.88", "31.2226, -3.29345, -14.3314, 0.96", "31.3241, -2.61025, -15.2386, 0.74", "31.3437, -2.47777, -15.3979, 1.4", "31.4144, -1.81723, -16.0383, 1.55", "31.4425, -0.997127, -16.6903, 0.59", "31.4351, -0.364553, -17.1336, 0.44", "31.4049, 0.442723, -17.687, 0.29", "31.3676, 1.05961, -18.0481, 0.29", "31.3141, 2.30125, -18.7217, 1.62", "31.2985, 3.0051, -19.1319, 1.84", "31.2557, 4.50919, -20.0144, 0.59", "31.2242, 5.2671, -20.4665, 0.59", "31.15, 6.81824, -21.435, 0.22", "31.0558, 8.8119, -22.7219, 0.22", "30.9596, 11.0035, -24.1516, 0.22", "30.91, 12.3499, -24.9849, 1.77", "30.8745, 13.1012, -25.4377, 2.36", "30.8209, 14.2066, -26.1439, 2.58", "30.8095, 14.4545, -26.3415, 2.58" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.78819, -49.4966, 2.1597, 0.52", "-1.84347, -50.9048, 0.928683, 0.52", "-1.5002, -51.3878, 0.533942, 0.52", "-1.08487, -51.986, 0.0769877, 0.74", "-0.502929, -52.8521, -0.54583, 0.88", "-0.168728, -53.36, -0.902876, 0.88", "0.155798, -53.8608, -1.23228, 0.88", "0.617004, -54.5333, -1.61192, 0.44", "0.934795, -54.9863, -1.84897, 0.44", "1.25557, -55.4098, -2.06768, 0.81", "1.56682, -55.7595, -2.25917, 0.96", "2.19334, -56.4102, -2.62141, 0.96", "2.98775, -57.2359, -3.0522, 0.44", "3.63105, -57.9251, -3.39508, 0.44", "4.3396, -58.7392, -3.76722, 0.66", "5.00312, -59.5383, -4.13165, 0.66", "5.67873, -60.3543, -4.45566, 0.52", "6.34067, -61.1819, -4.7676, 0.81", "6.97804, -62.0224, -5.0749, 0.81", "7.90895, -63.3166, -5.49956, 0.52", "8.44078, -64.1141, -5.74815, 0.52", "9.28287, -65.4343, -6.14903, 0.52", "9.76216, -66.1486, -6.36119, 1.47", "10.196, -66.7918, -6.54962, 1.92", "10.7221, -67.6333, -6.75914, 2.58", "11.0683, -68.2761, -6.88894, 2.58", "11.5794, -69.4107, -7.07396, 0.96", "11.956, -70.445, -7.24544, 0.52", "12.2712, -71.437, -7.37903, 0.88", "12.5643, -72.5443, -7.50821, 0.88", "12.8049, -73.665, -7.64285, 0.88", "12.9379, -74.4239, -7.7243, 0.74", "13.0881, -75.5764, -7.86506, 0.74", "13.1869, -76.6181, -8.05709, 1.11", "13.2656, -77.4912, -8.25488, 1.11", "13.3375, -78.3119, -8.46831, 0.81", "13.3925, -78.9303, -8.6397, 0.81", "13.5097, -80.1439, -8.99311, 0.74", "13.6925, -81.8221, -9.48339, 0.59", "13.8988, -83.44, -9.95884, 0.44", "14.102, -84.9738, -10.4149, 1.77", "14.1605, -85.4592, -10.5549, 2.14", "14.2621, -86.5459, -10.8465, 1.62", "14.3476, -88.0192, -11.2163, 0.22", "14.3669, -89.1032, -11.4681, 0.22", "14.3503, -90.1258, -11.7418, 0.96", "14.3247, -90.8906, -11.9626, 1.18", "14.2848, -91.7846, -12.21, 0.96", "14.2114, -93.0755, -12.5407, 0.22", "14.1393, -94.0111, -12.761, 0.59", "14.1107, -94.4589, -12.852, 0.59", "14.0886, -95.2853, -12.9963, 0.22", "14.1061, -96.5388, -13.1905, 0.29", "14.1316, -97.1638, -13.2662, 0.29", "14.1804, -98.0008, -13.2945, 1.84", "14.2394, -98.806, -13.2943, 2.5", "14.265, -99.1437, -13.2891, 2.73", "14.3029, -99.6504, -13.278, 2.65", "14.3935, -100.755, -13.2502, 1.77", "14.5923, -102.861, -13.1934, 0.22", "14.8268, -105.044, -13.1303, 0.22", "14.9344, -106.007, -13.1057, 0.52", "15.0277, -106.697, -13.0899, 0.66", "15.1706, -107.524, -13.0824, 0.29", "15.3969, -108.541, -13.0987, 1.47", "15.5447, -109.079, -13.1306, 2.14", "15.7174, -109.589, -13.1599, 2.21", "16.0354, -110.445, -13.2122, 1.55", "16.6313, -112.028, -13.3096, 0.22", "16.7896, -112.482, -13.3454, 0.52", "16.9294, -112.934, -13.3854, 0.52", "17.4194, -114.769, -13.5466, 0.22", "17.5279, -115.225, -13.5892, 0.66", "17.6269, -115.767, -13.6453, 0.66", "17.9304, -117.937, -13.9012, 0.22", "18.1547, -119.988, -14.1861, 0.22", "18.2441, -121.082, -14.3757, 0.81", "18.2737, -121.635, -14.4997, 1.03", "18.3334, -122.683, -14.8278, 0.22", "18.3974, -123.464, -15.1503, 0.22", "18.5291, -124.378, -15.6116, 1.47", "18.7018, -125.071, -15.9922, 2.28", "18.898, -125.623, -16.2911, 2.28", "19.9601, -128.025, -17.5521, 0.22", "20.5069, -129.143, -18.0729, 0.22", "21.145, -130.42, -18.5893, 0.22", "21.8283, -131.792, -19.0489, 0.22", "22.2811, -132.72, -19.2976, 2.28", "22.6782, -133.572, -19.464, 2.5", "23.6536, -135.849, -19.7067, 0.29", "23.8348, -136.398, -19.7616, 0.29", "24.0651, -137.429, -19.8843, 1.55", "24.1361, -137.925, -19.9522, 2.06", "24.2041, -138.619, -20.0811, 1.69", "24.2562, -139.369, -20.253, 0.88", "24.3306, -141.45, -20.8347, 0.22", "24.3354, -142.005, -20.9984, 0.66", "24.3266, -142.56, -21.1659, 0.66", "24.2556, -144.614, -21.7961, 0.22", "24.1802, -146.115, -22.2557, 0.22", "24.1109, -147.174, -22.5795, 0.22", "24.0577, -147.718, -22.7229, 0.44", "23.9615, -148.453, -22.9136, 0.44", "23.7693, -149.559, -23.177, 1.11", "23.6828, -149.952, -23.263, 1.55", "23.4965, -150.663, -23.4316, 1.69", "22.8813, -152.83, -24.0117, 0.15", "22.07, -155.473, -24.7677, 0.15", "21.5972, -156.93, -25.2064, 2.5", "21.4023, -157.517, -25.3881, 2.5", "20.8511, -159.191, -25.9324, 0.15", "20.6698, -159.795, -26.1443, 0.15", "20.5465, -160.311, -26.3524, 0.66", "20.4866, -160.753, -26.5262, 0.88", "20.4666, -161.301, -26.7329, 0.88", "20.4746, -161.792, -26.8792, 0.52", "20.4942, -163.299, -27.1571, 0.22", "20.4546, -164.209, -27.2593, 0.22", "20.3773, -165.041, -27.331, 0.96", "20.3223, -165.447, -27.3624, 1.11", "20.0697, -166.892, -27.4777, 0.22", "19.2415, -170.411, -27.7911, 0.22", "18.1476, -173.648, -28.0843, 0.22", "17.7294, -174.615, -28.1797, 1.47", "17.3312, -175.398, -28.2653, 1.62", "16.4554, -176.874, -28.4394, 0.22", "14.7945, -179.223, -28.7424, 0.22", "12.5051, -181.879, -29.1242, 0.22", "11.1749, -183.23, -29.3383, 0.88", "10.7578, -183.631, -29.3993, 0.88", "9.48687, -184.749, -29.5283, 0.22", "8.90672, -185.202, -29.5697, 0.88", "8.49768, -185.492, -29.5957, 0.88", "6.54639, -186.782, -29.7504, 0.22", "5.36617, -187.498, -29.8501, 0.22", "4.10221, -188.165, -29.9653, 1.55", "3.64378, -188.366, -30.0115, 2.06", "2.79496, -188.685, -30.1012, 2.06", "2.53989, -188.749, -30.1366, 2.06", "1.36611, -188.868, -30.3385, 0.22", "0.0936669, -188.895, -30.6049, 0.22", "-0.640084, -188.878, -30.7787, 0.74", "-1.07023, -188.85, -30.875, 0.74", "-3.06093, -188.602, -31.3274, 0.15", "-3.63714, -188.511, -31.4681, 0.52", "-3.98881, -188.439, -31.5635, 0.52", "-4.96279, -188.195, -31.8498, 0.22", "-5.5195, -188.051, -32.0428, 0.66", "-6.19132, -187.884, -32.2893, 0.66", "-6.96451, -187.697, -32.5815, 0.22", "-7.52842, -187.561, -32.8075, 1.18", "-8.05801, -187.434, -33.0299, 1.33", "-9.81933, -187.022, -33.804, 0.22", "-10.415, -186.904, -34.0669, 0.96", "-11.0101, -186.807, -34.323, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.78819, -49.4966, 2.1597, 1.4", "-2.94804, -49.8816, 2.11013, 1.4", "-3.44094, -51.2426, 1.94322, 0.66", "-3.76122, -52.2152, 1.83251, 0.66", "-4.06164, -53.2235, 1.72301, 0.66", "-4.2844, -54.033, 1.67591, 0.59", "-4.54668, -54.986, 1.62045, 0.59", "-4.74461, -55.808, 1.58896, 0.59", "-4.87673, -56.4934, 1.59383, 0.96", "-4.98157, -57.1828, 1.60573, 1.18", "-5.1158, -58.3126, 1.64865, 1.33" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "7.47118, 19.594, -0.394862, 1.4", "8.14336, 19.8228, -0.103859, 1.4", "9.73832, 20.3297, 0.627112, 1.11", "10.3645, 20.5464, 0.927638, 0.81", "11.1251, 20.8502, 1.29296, 1.11", "11.9841, 21.2404, 1.69591, 0.74", "12.3254, 21.4125, 1.85268, 0.74", "13.0925, 21.813, 2.17511, 0.66", "13.6173, 22.0947, 2.36902, 0.66", "14.3002, 22.5125, 2.63378, 0.74", "14.8576, 22.9127, 2.85069, 0.74", "15.3667, 23.344, 3.05415, 0.59", "16.0973, 23.9896, 3.32556, 0.59", "16.9098, 24.688, 3.59882, 0.74", "17.4855, 25.1446, 3.78444, 0.74", "18.1444, 25.6244, 3.99394, 0.74", "18.8397, 26.1014, 4.23516, 0.44", "19.5334, 26.5533, 4.47692, 0.44", "20.182, 26.973, 4.7021, 0.81", "20.7394, 27.311, 4.87963, 1.11", "21.5508, 27.7882, 5.13271, 1.11", "22.3488, 28.2833, 5.3756, 0.88", "23.0184, 28.7411, 5.59729, 0.88", "23.6185, 29.2542, 5.84138, 0.74", "24.1746, 29.8258, 6.10938, 0.74", "24.7275, 30.4639, 6.37408, 0.59", "25.1607, 31.0084, 6.55261, 0.44", "25.5435, 31.5312, 6.69511, 0.44", "26.0125, 32.2574, 6.90166, 0.44", "26.4751, 33.0435, 7.12935, 0.44", "26.952, 33.8979, 7.39217, 0.44", "27.3311, 34.5804, 7.61471, 0.59", "27.8718, 35.4483, 7.92424, 0.81", "28.2769, 36.0148, 8.14651, 1.25", "28.6265, 36.4533, 8.34587, 1.25", "29.2618, 37.244, 8.78823, 0.74", "29.7067, 37.7862, 9.15319, 0.52", "30.0943, 38.2169, 9.45504, 0.74", "30.545, 38.625, 9.72785, 0.74", "30.8777, 38.9312, 9.88367, 0.74", "31.2823, 39.4261, 10.0357, 0.44", "31.5854, 40.0111, 10.1333, 0.44", "31.8103, 40.6877, 10.2202, 0.44", "31.9347, 41.2406, 10.2891, 0.44", "32.1224, 42.3528, 10.4275, 0.81", "32.2787, 43.3423, 10.5603, 0.81", "32.4161, 44.1286, 10.6812, 1.03", "32.5885, 44.7751, 10.7972, 0.74", "32.8206, 45.3876, 10.9229, 0.52", "33.1551, 46.0049, 11.056, 0.52", "33.4617, 46.3649, 11.1355, 0.88", "33.7744, 46.6537, 11.2065, 0.88", "34.5538, 47.3199, 11.3819, 0.37", "35.156, 47.8337, 11.5484, 0.37", "35.6664, 48.3009, 11.7366, 0.37", "36.0258, 48.649, 11.8963, 0.37", "36.6047, 49.4037, 12.2771, 0.66", "36.7903, 49.8621, 12.5343, 1.03", "36.7519, 50.3348, 12.8482, 1.25", "36.68, 50.5365, 12.992, 1.25", "42.4128, 57.7941, 15.9537, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.47118, 19.594, -0.394862, 0.81", "7.14584, 21.3809, -0.0723372, 0.81", "7.02635, 22.1533, 0.0747877, 0.81", "6.92178, 22.8815, 0.223162, 0.81", "6.70971, 24.3128, 0.522672, 0.74", "6.54911, 25.252, 0.756235, 0.74", "6.41553, 26.1202, 0.992442, 0.81", "6.37907, 26.6215, 1.15575, 0.81", "6.39744, 27.3443, 1.39363, 0.52", "6.45554, 27.829, 1.54614, 0.52", "6.68427, 28.812, 1.816, 0.44", "6.94491, 29.4817, 1.92069, 0.37", "7.1872, 29.9209, 1.92862, 0.37", "7.92835, 31.0296, 1.80569, 1.25", "8.33896, 31.5973, 1.67549, 1.69", "8.72314, 32.124, 1.51583, 1.55", "9.6139, 33.3731, 1.06376, 0.88", "10.1064, 34.1289, 0.774151, 0.37", "10.5318, 34.8177, 0.487986, 0.37", "10.8189, 35.2932, 0.275535, 0.37", "11.2705, 36.1398, -0.0799551, 0.81", "11.5195, 36.6493, -0.271759, 1.03", "11.7428, 37.1138, -0.404246, 1.18", "11.9562, 37.5308, -0.520742, 1.18", "12.2628, 38.092, -0.667809, 0.59", "12.7238, 38.8692, -0.887568, 0.29", "13.0278, 39.385, -1.08564, 0.29", "13.6058, 40.3891, -1.52285, 0.29", "14.1511, 41.3759, -1.97453, 0.66", "14.4633, 41.958, -2.26183, 0.66", "14.8338, 42.6875, -2.63676, 1.25", "15.537, 44.1786, -3.37007, 2.36", "15.7255, 44.6281, -3.57268, 2.58", "16.0429, 45.4746, -3.92311, 1.99", "16.3729, 46.4643, -4.25584, 0.88", "16.7653, 47.8091, -4.57137, 0.29", "17.134, 49.2139, -4.76333, 0.81", "17.3231, 49.9824, -4.81069, 0.81", "17.432, 50.4571, -4.82612, 0.44", "17.6561, 51.5133, -4.82655, 0.22", "18.0393, 53.424, -4.77862, 0.22", "18.2816, 54.6023, -4.76284, 1.25", "18.386, 55.0805, -4.77111, 1.69", "18.4797, 55.4901, -4.79382, 1.69", "18.6521, 56.1632, -4.85329, 0.96", "18.8493, 56.8732, -4.94108, 0.52", "19.2234, 58.0557, -5.11633, 0.29", "19.5892, 59.132, -5.28019, 0.29", "20.0004, 60.281, -5.4735, 0.29", "20.2719, 61.0046, -5.61858, 0.81", "20.4449, 61.4509, -5.7236, 0.81", "20.9637, 62.7439, -6.06948, 0.22", "21.469, 63.9206, -6.42928, 0.22", "21.9749, 65.0276, -6.79929, 1.69", "22.3208, 65.7614, -7.05821, 2.43", "22.5939, 66.3471, -7.266, 2.28", "22.9908, 67.1816, -7.55146, 0.96", "23.5402, 68.3374, -7.91644, 0.22", "23.8555, 68.995, -8.10071, 0.66", "24.0401, 69.372, -8.18848, 0.66", "24.6581, 70.644, -8.44068, 0.22", "25.0603, 71.4768, -8.5899, 1.11", "25.3697, 72.1345, -8.70486, 1.62", "25.6146, 72.6344, -8.78822, 1.99", "25.7881, 72.9729, -8.84344, 1.99", "26.177, 73.6913, -8.95267, 1.4", "26.4719, 74.2067, -9.02475, 0.59", "27.3121, 75.6206, -9.20111, 0.22", "28.353, 77.2768, -9.37085, 0.22", "29.015, 78.2881, -9.45957, 0.22", "29.5648, 79.1004, -9.52034, 0.74", "29.8802, 79.5456, -9.54991, 0.74", "30.27, 80.0725, -9.58742, 0.37", "31.2168, 81.2766, -9.70918, 0.22", "32.1449, 82.3945, -9.87409, 1.25", "32.4101, 82.7018, -9.93041, 1.69", "32.7832, 83.1361, -10.0167, 1.69", "33.3128, 83.7588, -10.1556, 0.81", "34.2332, 84.8512, -10.4347, 0.22", "34.6553, 85.3591, -10.5767, 0.66", "34.9965, 85.7655, -10.6932, 0.66", "35.8375, 86.7602, -10.9909, 0.22", "36.8719, 87.9563, -11.3188, 1.92", "37.2283, 88.3805, -11.4117, 2.36", "37.6548, 88.9038, -11.4987, 2.58", "38.0428, 89.3918, -11.5689, 2.28", "38.4852, 89.9834, -11.6333, 1.47", "39.6352, 91.6368, -11.7539, 0.15", "40.6312, 93.144, -11.808, 0.15", "41.2171, 94.0736, -11.8188, 0.66", "41.4114, 94.3987, -11.8132, 0.66", "42.801, 96.8356, -11.6901, 0.22", "43.5536, 98.1894, -11.5647, 0.22", "44.2302, 99.4338, -11.4007, 0.22", "44.803, 100.446, -11.2197, 0.52", "45.3668, 101.4, -10.9987, 0.22", "45.977, 102.366, -10.7207, 1.4", "46.3812, 102.889, -10.5312, 1.62", "46.6129, 103.157, -10.4331, 1.62", "47.5097, 104.127, -10.1141, 0.22", "48.002, 104.631, -9.97374, 0.66", "48.2817, 104.912, -9.9121, 0.66", "50.2023, 106.901, -9.57414, 0.15", "51.1989, 107.975, -9.43876, 0.15", "51.8743, 108.732, -9.37872, 0.74", "52.1404, 109.043, -9.36526, 1.03", "52.4204, 109.391, -9.36192, 1.03", "53.698, 111.088, -9.38191, 0.22", "54.742, 112.448, -9.4307, 0.22", "55.5938, 113.466, -9.48213, 1.4", "56.0875, 114.018, -9.51335, 1.69", "56.5883, 114.536, -9.54542, 1.84", "57.2706, 115.183, -9.58984, 1.11", "60.559, 117.963, -9.81077, 0.22", "61.2256, 118.429, -9.8414, 0.22", "61.9897, 118.856, -9.85804, 0.96", "62.5402, 119.102, -9.86675, 1.18", "63.0495, 119.271, -9.86165, 1.18", "63.5556, 119.387, -9.84593, 0.59", "65.7035, 119.638, -9.73831, 0.22", "67.0174, 119.778, -9.65992, 0.59", "67.6749, 119.846, -9.6167, 0.59", "70.0226, 120.106, -9.46334, 0.15", "70.7616, 120.198, -9.41571, 0.88", "71.424, 120.301, -9.37362, 1.47", "71.8699, 120.436, -9.3425, 1.47", "72.166, 120.578, -9.32412, 1.47", "73.6385, 121.444, -9.24733, 0.15", "74.1213, 121.774, -9.22667, 0.44", "74.618, 122.144, -9.20405, 0.37", "77.6737, 124.617, -9.04673, 0.22", "79.8304, 126.507, -8.90008, 0.22", "80.4205, 127.051, -8.85628, 0.96", "80.8536, 127.483, -8.81954, 1.4", "81.003, 127.636, -8.80622, 1.4", "82.2044, 128.904, -8.69335, 0.22", "82.8895, 129.75, -8.62052, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "30.8095, 14.4545, -26.3415, 0.15", "32.4594, 13.414, -28.6408, 0.15", "33.1958, 12.957, -29.5315, 1.18", "34.4103, 12.1928, -30.899, 0.37", "35.4222, 11.506, -32.0097, 0.74", "36.5364, 10.7006, -33.1283, 0.88", "37.356, 10.0411, -33.9061, 0.22", "37.8617, 9.59168, -34.3723, 0.22", "38.4458, 9.04281, -34.8644, 0.96", "39.056, 8.47652, -35.3072, 1.11", "40.0651, 7.52314, -36.0, 0.22", "41.1541, 6.46989, -36.7998, 0.22", "41.687, 5.88517, -37.3011, 0.96", "42.1164, 5.32186, -37.8163, 1.62", "42.3033, 5.00843, -38.1231, 1.62", "42.6012, 4.29851, -38.8874, 1.4", "42.8405, 3.44337, -39.89, 1.18", "42.9893, 2.434, -41.1224, 0.44", "43.0075, 1.80116, -41.8737, 0.29", "42.9683, 1.05854, -42.7093, 0.88", "42.8907, 0.431484, -43.396, 0.88" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "30.8095, 14.4545, -26.3415, 0.29", "31.8158, 15.8803, -27.4588, 0.29", "32.4809, 16.8225, -28.1972, 0.29", "33.179, 17.8116, -28.9724, 0.37", "33.8805, 18.8054, -29.7512, 0.81" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-5.1158, -58.3126, 1.64865, 0.59", "-4.76043, -59.7118, 1.29813, 0.59", "-4.63133, -60.5506, 1.08281, 0.74", "-4.57103, -61.1812, 0.928219, 0.96", "-4.54144, -61.8323, 0.784377, 1.11", "-4.53663, -62.5816, 0.633488, 1.11", "-4.55102, -63.3509, 0.484177, 0.81", "-4.62834, -64.4101, 0.328488, 0.29", "-4.67905, -65.0197, 0.220074, 0.29", "-4.75399, -65.9834, 0.0431415, 0.59", "-4.78869, -66.5483, -0.0574537, 0.96", "-4.80884, -67.1223, -0.155306, 1.11", "-4.82559, -68.0554, -0.296451, 0.59", "-4.83205, -69.3411, -0.488958, 0.29", "-4.8293, -70.4473, -0.651861, 0.29", "-4.82068, -71.1341, -0.769003, 0.29", "-4.80243, -72.5966, -1.03414, 0.29", "-4.80017, -73.2839, -1.15529, 0.52", "-4.81062, -73.971, -1.26991, 0.66", "-4.84184, -74.9581, -1.41717, 1.11", "-4.87198, -75.9066, -1.5645, 1.4", "-4.89909, -76.6635, -1.67798, 1.62", "-4.92629, -77.9859, -1.82674, 0.44", "-4.92747, -79.0887, -1.91571, 0.44", "-4.92242, -80.002, -1.95935, 0.44", "-4.91914, -80.7002, -1.9633, 0.66", "-4.92469, -81.5312, -1.92241, 0.66", "-4.93259, -82.5374, -1.87075, 0.37", "-4.94388, -83.3937, -1.82763, 0.37", "-4.94899, -83.6759, -1.81464, 0.59", "-4.97419, -84.581, -1.78925, 0.59", "-5.02789, -85.999, -1.82575, 0.29", "-5.08714, -86.9581, -1.89416, 0.74", "-5.15051, -87.648, -1.96626, 0.96", "-5.22371, -88.4034, -2.05095, 0.96", "-5.29283, -89.1207, -2.14953, 0.96", "-5.44278, -90.6647, -2.39117, 0.29", "-5.63716, -92.5839, -2.71403, 0.29", "-5.81789, -94.2275, -2.97249, 1.4", "-5.90349, -94.9873, -3.0852, 1.92", "-5.98021, -95.6398, -3.1727, 2.28", "-6.10485, -96.5999, -3.27992, 2.28", "-6.22438, -97.3643, -3.3607, 1.4", "-6.54278, -99.0694, -3.5549, 0.22", "-6.76635, -100.082, -3.6601, 0.22", "-6.93501, -100.757, -3.71966, 0.88", "-7.10647, -101.399, -3.76297, 0.96", "-7.40483, -102.433, -3.8421, 0.22", "-7.74876, -103.574, -3.93577, 0.22", "-8.05137, -104.594, -4.01836, 0.74", "-8.14456, -104.937, -4.0435, 1.03", "-8.25797, -105.478, -4.07441, 1.03", "-8.33047, -105.973, -4.09758, 1.03", "-8.39324, -106.666, -4.11872, 0.81", "-8.44594, -107.998, -4.16936, 0.22", "-8.45352, -108.637, -4.19626, 0.22", "-8.43553, -109.856, -4.25315, 0.22", "-8.39121, -110.638, -4.28753, 1.18", "-8.33628, -111.188, -4.30919, 1.77", "-8.27345, -111.653, -4.32701, 1.99", "-8.1243, -112.544, -4.35964, 1.47", "-7.71689, -114.637, -4.42962, 0.22", "-7.22201, -116.922, -4.53021, 0.22", "-6.95358, -118.072, -4.58648, 0.59", "-6.77668, -118.806, -4.62806, 1.03", "-6.64817, -119.348, -4.664, 1.25", "-6.54595, -119.776, -4.70154, 1.47", "-6.13371, -121.548, -4.86007, 0.22", "-5.92581, -122.474, -4.94361, 0.66", "-5.84944, -122.818, -4.97271, 0.96", "-5.67767, -123.57, -5.0323, 0.96", "-5.30182, -125.164, -5.14858, 0.22", "-4.53569, -128.155, -5.33447, 0.22", "-4.29909, -128.997, -5.37009, 0.88", "-4.1932, -129.333, -5.3827, 1.11", "-4.075, -129.664, -5.39345, 1.33", "-3.84898, -130.22, -5.39624, 0.96", "-3.5237, -130.951, -5.32554, 0.44", "-2.80491, -132.482, -5.05614, 0.22", "-2.44364, -133.286, -4.87956, 0.66", "-2.16774, -133.915, -4.72619, 0.88", "-1.70464, -134.992, -4.42689, 0.22", "-0.86143, -137.02, -3.78116, 0.22", "-0.673025, -137.566, -3.58844, 0.22", "-0.493254, -138.285, -3.34934, 1.62", "-0.375178, -139.105, -3.12149, 2.5", "-0.359577, -139.466, -3.06934, 2.73", "-0.375035, -139.774, -3.0774, 2.73", "-0.544047, -141.249, -3.39675, 1.25", "-0.705486, -142.662, -3.81228, 0.29", "-0.755962, -143.185, -3.99217, 0.29", "-0.833948, -144.464, -4.47421, 0.66", "-0.848985, -144.87, -4.63707, 1.11", "-0.873508, -145.664, -4.96282, 1.25", "-0.88009, -146.242, -5.18952, 1.25", "-0.921437, -147.189, -5.47805, 1.03", "-1.01473, -148.343, -5.77373, 0.22", "-1.07489, -148.823, -5.86118, 0.22", "-1.23765, -149.637, -6.01488, 0.22", "-1.55508, -150.861, -6.24206, 1.84", "-1.83576, -151.788, -6.42085, 3.32", "-2.08316, -152.494, -6.55828, 3.54", "-2.36628, -153.216, -6.69032, 2.8", "-3.12763, -155.124, -7.01886, 0.29", "-3.32389, -155.582, -7.09187, 0.81", "-3.54411, -156.03, -7.15423, 0.88", "-4.09815, -157.055, -7.26921, 0.22", "-4.60121, -157.928, -7.37173, 0.22", "-5.00442, -158.614, -7.45827, 0.88", "-5.27848, -159.075, -7.51339, 1.25", "-5.53741, -159.515, -7.58065, 1.25", "-5.94105, -160.262, -7.71533, 0.59", "-6.66066, -161.775, -8.01863, 0.22", "-6.8768, -162.279, -8.12412, 0.74", "-7.07301, -162.748, -8.23923, 0.74", "-7.19783, -163.047, -8.3161, 0.52", "-7.7382, -164.379, -8.65568, 0.22", "-7.95783, -164.955, -8.80686, 1.03", "-8.07497, -165.281, -8.89632, 1.25", "-8.56263, -166.917, -9.38885, 0.22", "-8.73787, -167.733, -9.65378, 0.22", "-8.82, -168.251, -9.83998, 0.59", "-8.87322, -168.899, -10.1147, 0.59", "-8.83499, -169.856, -10.5482, 0.22", "-8.61485, -171.298, -11.2145, 0.22", "-8.4063, -172.059, -11.5706, 1.03", "-8.23092, -172.533, -11.7871, 1.33", "-7.91848, -173.163, -12.0444, 1.33", "-6.92604, -174.757, -12.6189, 0.22", "-6.66171, -175.113, -12.7331, 0.52", "-6.43314, -175.384, -12.8169, 0.52", "-4.87955, -176.923, -13.2246, 0.22", "-3.11272, -178.418, -13.5467, 0.22", "-2.34936, -178.994, -13.6428, 1.47", "-1.84307, -179.349, -13.6904, 2.21", "-1.21413, -179.782, -13.7416, 1.62", "1.41992, -181.57, -13.9273, 0.29", "2.98031, -182.653, -14.0457, 0.29", "4.6347, -183.961, -14.1975, 0.22", "5.45774, -184.706, -14.2816, 1.03", "5.69315, -184.942, -14.3098, 1.25", "6.06874, -185.361, -14.3599, 1.25", "7.43541, -187.224, -14.6142, 0.29", "8.95178, -189.585, -14.9427, 0.22", "9.61905, -190.719, -15.096, 1.92", "9.92575, -191.261, -15.1649, 2.36", "10.2363, -191.827, -15.2296, 2.58", "11.4016, -194.191, -15.462, 0.22", "11.7594, -195.079, -15.5295, 0.22", "12.0388, -195.985, -15.5914, 0.22", "12.1839, -196.567, -15.626, 0.74", "12.2641, -197.006, -15.6465, 0.88", "12.3861, -198.477, -15.7171, 0.22", "12.374, -199.104, -15.7457, 0.22", "12.3221, -199.864, -15.781, 0.81", "12.2471, -200.515, -15.8033, 0.96", "12.2024, -200.814, -15.8105, 0.96", "11.8067, -203.224, -15.8561, 0.22", "11.6962, -203.911, -15.867, 0.66", "11.6315, -204.317, -15.8732, 0.66", "10.8986, -208.71, -15.9335, 0.22", "10.4306, -211.372, -15.9632, 0.22", "10.3187, -212.003, -15.9672, 0.44" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-5.1158, -58.3126, 1.64865, 0.29", "-5.92351, -59.4076, 1.59219, 0.29", "-6.69586, -60.4241, 1.64979, 0.29", "-7.08128, -60.8969, 1.69739, 0.44", "-7.78258, -61.7142, 1.79369, 0.22", "-8.08438, -62.0605, 1.83576, 0.52", "-8.38789, -62.4079, 1.87772, 0.66", "-9.43067, -63.5724, 2.04029, 0.22", "-10.1233, -64.3011, 2.15411, 0.22", "-10.852, -65.0173, 2.25794, 0.22", "-11.4394, -65.5471, 2.32802, 0.66", "-11.8086, -65.8498, 2.36059, 0.96", "-12.2983, -66.2179, 2.38124, 0.96", "-12.902, -66.6174, 2.37147, 0.52", "-13.9207, -67.2393, 2.35904, 0.22", "-14.3217, -67.4552, 2.35431, 0.66", "-15.1565, -67.8578, 2.34551, 0.66", "-15.9028, -68.2072, 2.33064, 0.29", "-16.6743, -68.555, 2.30819, 0.29", "-17.0123, -68.7097, 2.29561, 0.59", "-17.6212, -68.9846, 2.26685, 0.59", "-18.3032, -69.2911, 2.21256, 0.59", "-19.7307, -69.9147, 2.04907, 0.22", "-21.0007, -70.48, 1.85285, 0.22", "-22.2206, -71.029, 1.70453, 0.22", "-23.2834, -71.4843, 1.61833, 0.22", "-24.2412, -71.8976, 1.56903, 0.88", "-24.913, -72.1975, 1.54579, 1.18", "-25.6505, -72.5485, 1.58659, 1.18", "-27.6536, -73.6336, 1.87955, 0.22", "-29.4634, -74.7714, 2.32075, 0.22", "-29.9872, -75.165, 2.50197, 0.59", "-30.4994, -75.6148, 2.72258, 0.59", "-31.777, -76.8698, 3.31279, 0.37", "-32.2038, -77.3298, 3.50548, 0.88", "-32.744, -77.9978, 3.69903, 1.03", "-33.051, -78.38, 3.78998, 1.03", "-33.8787, -79.2616, 3.9321, 0.29", "-34.5307, -79.8437, 3.97051, 0.44", "-35.0919, -80.2958, 3.93574, 0.66", "-36.1437, -81.0531, 3.86418, 0.29", "-36.7561, -81.44, 3.81742, 0.52", "-37.1336, -81.6546, 3.7843, 0.59", "-37.6073, -81.8941, 3.73012, 0.59", "-44.2264, -89.0142, 3.60517, 0.59" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_22", "dend_15", "dend_8", "dend_5", "dend_0", "dend_17", "dend_16", "dend_10", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_21", "dend_18", "dend_14", "dend_11", "dend_3", "dend_2", "dend_20", "dend_19", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_22", "dend_15", "dend_8", "dend_5", "dend_0", "dend_17", "dend_16", "dend_10", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_21", "dend_18", "dend_14", "dend_11", "dend_3", "dend_2", "dend_20", "dend_19", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L4_LBC_396684f644_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_22, dend_15, dend_8, dend_5, dend_0, dend_17, dend_16, dend_10, dend_9, dend_7, dend_6, dend_4, dend_1, dend_21, dend_18, dend_14, dend_11, dend_3, dend_2, dend_20, dend_19, dend_13, dend_12]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_23, dend_22, dend_15, dend_8, dend_5, dend_0, dend_17, dend_16, dend_10, dend_9, dend_7, dend_6, dend_4, dend_1, dend_21, dend_18, dend_14, dend_11, dend_3, dend_2, dend_20, dend_19, dend_13, dend_12]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_24
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.4499997984545444)
    connect dend_22(0), soma_0(0.4499997984545444)
    connect dend_15(0), soma_0(0.4499997984545444)
    connect dend_8(0), soma_0(0.4499997984545444)
    connect dend_5(0), soma_0(0.4499997984545444)
    connect dend_0(0), soma_0(0.4499997984545444)
    connect axon_0(0), soma_0(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.05395, 9.08547, -0.234601, 2.54687 ) }
    soma_0 { pt3dadd( -2.79219, 8.19057, -0.218348, 4.32292 ) }
    soma_0 { pt3dadd( -2.53043, 7.29567, -0.202095, 9.95036 ) }
    soma_0 { pt3dadd( -2.26867, 6.40077, -0.185842, 10.1502 ) }
    soma_0 { pt3dadd( -2.00691, 5.50587, -0.169589, 10.462 ) }
    soma_0 { pt3dadd( -1.74515, 4.61097, -0.153336, 10.4262 ) }
    soma_0 { pt3dadd( -1.48339, 3.71607, -0.137083, 10.5866 ) }
    soma_0 { pt3dadd( -1.22164, 2.82117, -0.12083, 10.9135 ) }
    soma_0 { pt3dadd( -0.959876, 1.92627, -0.104577, 11.2266 ) }
    soma_0 { pt3dadd( -0.698117, 1.03137, -0.0883238, 11.5453 ) }
    soma_0 { pt3dadd( -0.436358, 0.136465, -0.0720707, 11.9293 ) }
    soma_0 { pt3dadd( -0.174598, -0.758436, -0.0558177, 12.2062 ) }
    soma_0 { pt3dadd( 0.0871607, -1.65334, -0.0395646, 12.3612 ) }
    soma_0 { pt3dadd( 0.34892, -2.54824, -0.0233116, 12.3583 ) }
    soma_0 { pt3dadd( 0.610679, -3.44314, -0.00705855, 12.2953 ) }
    soma_0 { pt3dadd( 0.872438, -4.33804, 0.0091945, 11.8309 ) }
    soma_0 { pt3dadd( 1.1342, -5.23294, 0.0254475, 11.1435 ) }
    soma_0 { pt3dadd( 1.39596, -6.12784, 0.0417006, 10.0426 ) }
    soma_0 { pt3dadd( 1.65772, -7.02274, 0.0579536, 8.49572 ) }
    soma_0 { pt3dadd( 1.91947, -7.91764, 0.0742067, 6.62324 ) }
    soma_0 { pt3dadd( 2.18123, -8.81254, 0.0904597, 3.82196 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -3.18195, -5.17787, -7.31829, 0.81 ) }
    dend_23 { pt3dadd( -3.54042, -5.5776, -7.19807, 0.81 ) }
    dend_23 { pt3dadd( -3.90826, -6.04607, -7.08888, 0.81 ) }
    dend_23 { pt3dadd( -4.40763, -6.77633, -6.95381, 0.52 ) }
    dend_23 { pt3dadd( -4.97099, -7.6516, -6.82436, 0.44 ) }
    dend_23 { pt3dadd( -5.37482, -8.29294, -6.74583, 0.29 ) }
    dend_23 { pt3dadd( -5.61516, -8.66919, -6.70739, 0.74 ) }
    dend_23 { pt3dadd( -5.97749, -9.27165, -6.66447, 0.74 ) }
    dend_23 { pt3dadd( -6.28464, -9.82925, -6.64559, 0.59 ) }
    dend_23 { pt3dadd( -6.6732, -10.5939, -6.6531, 1.03 ) }
    dend_23 { pt3dadd( -6.95409, -11.1946, -6.6665, 1.03 ) }
    dend_23 { pt3dadd( -7.30675, -12.0231, -6.66938, 0.74 ) }
    dend_23 { pt3dadd( -7.47666, -12.4841, -6.66938, 0.44 ) }
    dend_23 { pt3dadd( -7.70591, -13.2243, -6.66938, 1.4 ) }
    dend_23 { pt3dadd( -7.84408, -13.8476, -6.66938, 1.62 ) }
    dend_23 { pt3dadd( -7.92585, -14.4851, -6.66938, 1.77 ) }
    dend_23 { pt3dadd( -7.99259, -15.5902, -6.66938, 1.11 ) }
    dend_23 { pt3dadd( -7.99926, -16.3597, -6.67395, 0.29 ) }
    dend_23 { pt3dadd( -7.99187, -17.1897, -6.68225, 0.29 ) }
    dend_23 { pt3dadd( -7.96329, -18.334, -6.70346, 0.44 ) }
    dend_23 { pt3dadd( -7.93547, -19.1813, -6.73099, 0.59 ) }
    dend_23 { pt3dadd( -7.91156, -19.9529, -6.77842, 0.81 ) }
    dend_23 { pt3dadd( -7.89094, -21.2173, -6.8892, 0.22 ) }
    dend_23 { pt3dadd( -7.90241, -22.0423, -6.97559, 1.33 ) }
    dend_23 { pt3dadd( -7.94387, -22.8936, -7.07131, 2.06 ) }
    dend_23 { pt3dadd( -7.98517, -23.4079, -7.13403, 2.14 ) }
    dend_23 { pt3dadd( -8.08348, -24.3861, -7.26674, 1.62 ) }
    dend_23 { pt3dadd( -8.29023, -26.1662, -7.55252, 0.22 ) }
    dend_23 { pt3dadd( -8.52904, -28.0698, -7.90692, 0.22 ) }
    dend_23 { pt3dadd( -8.64385, -29.1156, -8.11606, 1.11 ) }
    dend_23 { pt3dadd( -8.72173, -29.9087, -8.2759, 1.33 ) }
    dend_23 { pt3dadd( -8.76706, -30.4661, -8.38748, 1.18 ) }
    dend_23 { pt3dadd( -8.81526, -31.2727, -8.55615, 0.96 ) }
    dend_23 { pt3dadd( -8.83846, -32.1406, -8.76016, 0.22 ) }
    dend_23 { pt3dadd( -8.85785, -34.2114, -9.2814, 0.22 ) }
    dend_23 { pt3dadd( -8.86655, -34.8892, -9.44701, 0.88 ) }
    dend_23 { pt3dadd( -8.8738, -35.0988, -9.49322, 1.18 ) }
    dend_23 { pt3dadd( -8.92116, -35.5807, -9.5772, 1.33 ) }
    dend_23 { pt3dadd( -9.03292, -36.2658, -9.67103, 1.03 ) }
    dend_23 { pt3dadd( -9.35032, -37.5949, -9.8407, 0.22 ) }
    dend_23 { pt3dadd( -9.53396, -38.1536, -9.92348, 0.44 ) }
    dend_23 { pt3dadd( -9.65761, -38.5045, -9.98035, 0.44 ) }
    dend_23 { pt3dadd( -10.33, -40.2849, -10.3119, 0.22 ) }
    dend_23 { pt3dadd( -10.5457, -40.8139, -10.4208, 0.44 ) }
    dend_23 { pt3dadd( -10.8115, -41.4263, -10.5611, 0.44 ) }
    dend_23 { pt3dadd( -11.926, -43.8331, -11.2797, 0.22 ) }
    dend_23 { pt3dadd( -12.5478, -45.0769, -11.745, 1.77 ) }
    dend_23 { pt3dadd( -12.8025, -45.5383, -11.9492, 2.36 ) }
    dend_23 { pt3dadd( -13.0613, -45.9511, -12.1711, 2.36 ) }
    dend_23 { pt3dadd( -13.621, -46.7426, -12.6365, 1.4 ) }
    dend_23 { pt3dadd( -14.5611, -47.913, -13.3923, 0.52 ) }
    dend_23 { pt3dadd( -15.2777, -48.687, -13.961, 0.22 ) }
    dend_23 { pt3dadd( -15.662, -49.132, -14.3122, 0.66 ) }
    dend_23 { pt3dadd( -16.3175, -50.1123, -14.9338, 0.22 ) }
    dend_23 { pt3dadd( -16.6237, -50.6593, -15.238, 1.33 ) }
    dend_23 { pt3dadd( -16.8465, -51.133, -15.4569, 1.62 ) }
    dend_23 { pt3dadd( -17.0257, -51.5872, -15.6298, 1.62 ) }
    dend_23 { pt3dadd( -17.8805, -54.1254, -16.4325, 0.22 ) }
    dend_23 { pt3dadd( -18.7949, -57.2331, -17.2462, 0.22 ) }
    dend_23 { pt3dadd( -19.0598, -58.2174, -17.4801, 0.59 ) }
    dend_23 { pt3dadd( -19.4743, -59.8643, -17.8392, 0.22 ) }
    dend_23 { pt3dadd( -19.7256, -60.8966, -18.0277, 1.4 ) }
    dend_23 { pt3dadd( -19.9813, -61.9465, -18.1548, 1.92 ) }
    dend_23 { pt3dadd( -20.1712, -62.7589, -18.1247, 1.92 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 85/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.68195, -3.24937, 2.62171, 1.92 ) }
    dend_22 { pt3dadd( -4.95386, -3.89971, 2.6164, 1.92 ) }
    dend_22 { pt3dadd( -5.35953, -5.61283, 2.49426, 1.25 ) }
    dend_22 { pt3dadd( -5.51579, -6.68094, 2.38308, 0.88 ) }
    dend_22 { pt3dadd( -5.62933, -7.79597, 2.25661, 1.11 ) }
    dend_22 { pt3dadd( -5.71255, -8.70985, 2.15372, 1.47 ) }
    dend_22 { pt3dadd( -5.79616, -9.46813, 2.07062, 1.69 ) }
    dend_22 { pt3dadd( -5.93662, -11.1188, 1.88541, 1.69 ) }
    dend_22 { pt3dadd( -6.01181, -12.0216, 1.78186, 1.4 ) }
    dend_22 { pt3dadd( -6.1911, -12.9739, 1.67451, 1.4 ) }
    dend_22 { pt3dadd( -6.57281, -13.8969, 1.59406, 1.11 ) }
    dend_22 { pt3dadd( -7.00542, -14.5686, 1.55524, 0.74 ) }
    dend_22 { pt3dadd( -7.44405, -15.0827, 1.54727, 0.74 ) }
    dend_22 { pt3dadd( -8.08255, -15.6755, 1.60612, 1.11 ) }
    dend_22 { pt3dadd( -8.68425, -16.1784, 1.68502, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( -9.53123, -16.8545, 1.81144, 0.81 ) }
    dend_22 { pt3dadd( -10.2407, -17.4308, 1.95557, 1.25 ) }
    dend_22 { pt3dadd( -10.8047, -17.9057, 2.09186, 1.47 ) }
    dend_22 { pt3dadd( -11.3829, -18.3811, 2.23548, 1.62 ) }
    dend_22 { pt3dadd( -12.1007, -18.9467, 2.40988, 1.33 ) }
    dend_22 { pt3dadd( -12.9342, -19.5176, 2.59157, 0.74 ) }
    dend_22 { pt3dadd( -13.7878, -19.9737, 2.74924, 0.52 ) }
    dend_22 { pt3dadd( -14.5841, -20.2847, 2.88186, 0.66 ) }
    dend_22 { pt3dadd( -15.8278, -20.629, 3.0484, 0.66 ) }
    dend_22 { pt3dadd( -16.6039, -20.77, 3.12709, 0.66 ) }
    dend_22 { pt3dadd( -17.7537, -20.895, 3.19919, 0.88 ) }
    dend_22 { pt3dadd( -18.6349, -20.9437, 3.20869, 0.81 ) }
    dend_22 { pt3dadd( -19.6218, -20.9796, 3.15195, 0.52 ) }
    dend_22 { pt3dadd( -20.161, -21.0132, 3.0904, 0.52 ) }
    dend_22 { pt3dadd( -20.8059, -21.0743, 2.97849, 0.52 ) }
    dend_22 { pt3dadd( -21.9264, -21.2165, 2.738, 0.88 ) }
    dend_22 { pt3dadd( -22.6923, -21.3249, 2.55708, 0.88 ) }
    dend_22 { pt3dadd( -23.3498, -21.4249, 2.40221, 0.88 ) }
    dend_22 { pt3dadd( -24.2478, -21.5538, 2.20659, 0.74 ) }
    dend_22 { pt3dadd( -25.1244, -21.6575, 2.03726, 0.59 ) }
    dend_22 { pt3dadd( -25.9924, -21.7254, 1.893, 0.81 ) }
    dend_22 { pt3dadd( -27.107, -21.7765, 1.73928, 0.81 ) }
    dend_22 { pt3dadd( -28.056, -21.7984, 1.63306, 1.03 ) }
    dend_22 { pt3dadd( -29.0139, -21.8042, 1.53106, 1.25 ) }
    dend_22 { pt3dadd( -29.4306, -21.8116, 1.51587, 1.25 ) }
    dend_22 { pt3dadd( -30.3893, -21.8927, 1.52881, 0.66 ) }
    dend_22 { pt3dadd( -31.3245, -22.0595, 1.56323, 0.66 ) }
    dend_22 { pt3dadd( -32.188, -22.3361, 1.61438, 0.81 ) }
    dend_22 { pt3dadd( -32.547, -22.5155, 1.66306, 0.81 ) }
    dend_22 { pt3dadd( -33.963, -23.4778, 1.96781, 0.37 ) }
    dend_22 { pt3dadd( -34.4082, -23.8242, 2.09989, 0.29 ) }
    dend_22 { pt3dadd( -34.9524, -24.3033, 2.30535, 0.29 ) }
    dend_22 { pt3dadd( -35.3451, -24.6647, 2.46715, 0.29 ) }
    dend_22 { pt3dadd( -36.2514, -25.4339, 2.8049, 0.74 ) }
    dend_22 { pt3dadd( -36.7882, -25.8367, 2.95497, 1.25 ) }
    dend_22 { pt3dadd( -37.2395, -26.1342, 3.03014, 1.25 ) }
    dend_22 { pt3dadd( -37.6389, -26.3753, 3.10082, 1.25 ) }
    dend_22 { pt3dadd( -37.9509, -26.5581, 3.15963, 1.25 ) }
    dend_22 { pt3dadd( -38.8607, -27.111, 3.31254, 0.52 ) }
    dend_22 { pt3dadd( -39.5129, -27.5678, 3.3791, 1.03 ) }
    dend_22 { pt3dadd( -39.7892, -27.8057, 3.40263, 1.33 ) }
    dend_22 { pt3dadd( -40.2088, -28.2432, 3.43063, 1.55 ) }
    dend_22 { pt3dadd( -40.4917, -28.6037, 3.45271, 1.55 ) }
    dend_22 { pt3dadd( -40.6572, -28.8777, 3.47071, 1.55 ) }
    dend_22 { pt3dadd( -40.9561, -29.6163, 3.52793, 1.03 ) }
    dend_22 { pt3dadd( -41.2235, -30.4125, 3.61042, 0.44 ) }
    dend_22 { pt3dadd( -41.3007, -30.6504, 3.64299, 0.44 ) }
    dend_22 { pt3dadd( -41.4594, -31.0932, 3.74762, 0.29 ) }
    dend_22 { pt3dadd( -41.5907, -31.4107, 3.84514, 0.29 ) }
    dend_22 { pt3dadd( -41.8348, -31.8957, 4.02697, 0.29 ) }
    dend_22 { pt3dadd( -42.1575, -32.4819, 4.28879, 0.29 ) }
    dend_22 { pt3dadd( -42.4577, -32.9752, 4.54713, 0.29 ) }
    dend_22 { pt3dadd( -42.9939, -33.8869, 5.00991, 0.44 ) }
    dend_22 { pt3dadd( -43.2933, -34.4001, 5.27094, 0.66 ) }
    dend_22 { pt3dadd( -43.819, -35.306, 5.70981, 0.74 ) }
    dend_22 { pt3dadd( -44.3991, -36.3073, 6.18426, 0.66 ) }
    dend_22 { pt3dadd( -44.9633, -37.2824, 6.67762, 0.29 ) }
    dend_22 { pt3dadd( -45.4325, -38.0567, 7.08268, 0.22 ) }
    dend_22 { pt3dadd( -45.9411, -38.7711, 7.47254, 0.22 ) }
    dend_22 { pt3dadd( -46.3301, -39.2511, 7.73768, 0.74 ) }
    dend_22 { pt3dadd( -46.5571, -39.5139, 7.87552, 0.74 ) }
    dend_22 { pt3dadd( -47.2738, -40.3211, 8.27457, 0.59 ) }
    dend_22 { pt3dadd( -47.8308, -40.9369, 8.57155, 0.66 ) }
    dend_22 { pt3dadd( -48.6325, -41.7467, 8.98746, 0.22 ) }
    dend_22 { pt3dadd( -49.2349, -42.3223, 9.2749, 0.22 ) }
    dend_22 { pt3dadd( -49.7607, -42.7962, 9.52952, 0.37 ) }
    dend_22 { pt3dadd( -50.1908, -43.1975, 9.71709, 0.37 ) }
    dend_22 { pt3dadd( -50.6911, -43.6721, 9.89652, 0.15 ) }
    dend_22 { pt3dadd( -51.3188, -44.2135, 10.1424, 0.15 ) }
    dend_22 { pt3dadd( -51.9195, -44.6088, 10.4064, 0.37 ) }
    dend_22 { pt3dadd( -52.4632, -44.8152, 10.621, 0.37 ) }
    dend_22 { pt3dadd( -60.3868, -50.3575, 12.4043, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 72/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.67805, -4.68387, -3.44829, 3.83 ) }
    dend_15 { pt3dadd( 6.27805, -5.42487, -3.75829, 3.83 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 74/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 0.528048, -8.54087, 1.37171, 2.8 ) }
    dend_8 { pt3dadd( 0.528048, -8.54087, 1.37171, 2.8 ) }
    dend_8 { pt3dadd( 0.71022, -9.73685, 1.4467, 2.8 ) }
    dend_8 { pt3dadd( 0.892184, -10.9315, 1.5216, 2.43 ) }
    dend_8 { pt3dadd( 1.06104, -12.04, 1.5911, 2.21 ) }
    dend_8 { pt3dadd( 1.26226, -13.3611, 1.67393, 2.06 ) }
    dend_8 { pt3dadd( 1.35504, -13.9702, 1.71212, 2.06 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 81/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -6.84195, 5.76613, -0.638285, 1.62 ) }
    dend_5 { pt3dadd( -6.84195, 5.76613, -0.638285, 1.62 ) }
    dend_5 { pt3dadd( -7.86783, 6.13203, -0.479464, 0.81 ) }
    dend_5 { pt3dadd( -9.18447, 6.56499, -0.304683, 0.74 ) }
    dend_5 { pt3dadd( -10.2134, 6.87598, -0.183557, 0.96 ) }
    dend_5 { pt3dadd( -11.5913, 7.26705, -0.036154, 1.18 ) }
    dend_5 { pt3dadd( -12.6555, 7.55507, 0.0538811, 1.18 ) }
    dend_5 { pt3dadd( -13.5936, 7.80519, 0.127602, 1.47 ) }
    dend_5 { pt3dadd( -14.3729, 8.01713, 0.190163, 1.47 ) }
    dend_5 { pt3dadd( -15.2861, 8.28008, 0.250868, 1.33 ) }
    dend_5 { pt3dadd( -16.2075, 8.5794, 0.330704, 0.88 ) }
    dend_5 { pt3dadd( -17.2126, 8.94664, 0.449424, 0.52 ) }
    dend_5 { pt3dadd( -18.0601, 9.28274, 0.572426, 0.52 ) }
    dend_5 { pt3dadd( -18.8867, 9.61829, 0.704071, 0.52 ) }
    dend_5 { pt3dadd( -19.58, 9.89473, 0.817138, 1.03 ) }
    dend_5 { pt3dadd( -20.2939, 10.1606, 0.938445, 1.33 ) }
    dend_5 { pt3dadd( -20.7107, 10.2917, 1.01963, 1.33 ) }
    dend_5 { pt3dadd( -21.8369, 10.5876, 1.2513, 0.81 ) }
    dend_5 { pt3dadd( -22.7717, 10.8019, 1.42479, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_5 { pt3dadd( -23.7071, 10.9792, 1.5725, 1.03 ) }
    dend_5 { pt3dadd( -24.4653, 11.0919, 1.67898, 1.03 ) }
    dend_5 { pt3dadd( -25.8488, 11.2419, 1.85886, 0.66 ) }
    dend_5 { pt3dadd( -26.9118, 11.3268, 2.00359, 0.37 ) }
    dend_5 { pt3dadd( -27.5807, 11.3815, 2.10384, 0.37 ) }
    dend_5 { pt3dadd( -28.5218, 11.461, 2.25262, 0.37 ) }
    dend_5 { pt3dadd( -29.2444, 11.531, 2.36096, 0.37 ) }
    dend_5 { pt3dadd( -29.8352, 11.5962, 2.43619, 0.29 ) }
    dend_5 { pt3dadd( -30.562, 11.6933, 2.51146, 0.29 ) }
    dend_5 { pt3dadd( -31.8037, 11.9119, 2.64028, 0.59 ) }
    dend_5 { pt3dadd( -32.5926, 12.095, 2.72188, 1.03 ) }
    dend_5 { pt3dadd( -33.3679, 12.3153, 2.79965, 1.03 ) }
    dend_5 { pt3dadd( -34.1365, 12.5582, 2.85959, 1.03 ) }
    dend_5 { pt3dadd( -35.2022, 12.9006, 2.91525, 0.88 ) }
    dend_5 { pt3dadd( -36.4214, 13.2821, 2.94916, 0.66 ) }
    dend_5 { pt3dadd( -37.2141, 13.5158, 2.9632, 0.66 ) }
    dend_5 { pt3dadd( -38.478, 13.8959, 2.98468, 1.25 ) }
    dend_5 { pt3dadd( -39.1409, 14.1049, 2.99685, 1.55 ) }
    dend_5 { pt3dadd( -39.8449, 14.3402, 3.0191, 1.55 ) }
    dend_5 { pt3dadd( -40.6487, 14.6267, 3.04867, 0.88 ) }
    dend_5 { pt3dadd( -41.6123, 14.9819, 3.1175, 0.37 ) }
    dend_5 { pt3dadd( -42.1561, 15.2014, 3.18259, 0.37 ) }
    dend_5 { pt3dadd( -42.6199, 15.4069, 3.25873, 0.37 ) }
    dend_5 { pt3dadd( -43.0643, 15.6143, 3.34471, 0.37 ) }
    dend_5 { pt3dadd( -43.6482, 15.8976, 3.46508, 0.59 ) }
    dend_5 { pt3dadd( -44.3631, 16.2351, 3.61413, 0.81 ) }
    dend_5 { pt3dadd( -45.187, 16.6037, 3.77653, 0.96 ) }
    dend_5 { pt3dadd( -45.9159, 16.9003, 3.90374, 0.96 ) }
    dend_5 { pt3dadd( -46.976, 17.2656, 4.0532, 0.37 ) }
    dend_5 { pt3dadd( -47.7022, 17.4773, 4.12737, 0.96 ) }
    dend_5 { pt3dadd( -48.3404, 17.6376, 4.18606, 1.25 ) }
    dend_5 { pt3dadd( -48.9171, 17.765, 4.18017, 1.25 ) }
    dend_5 { pt3dadd( -49.278, 17.8297, 4.12637, 1.25 ) }
    dend_5 { pt3dadd( -50.0527, 17.9438, 3.92255, 0.74 ) }
    dend_5 { pt3dadd( -50.6079, 18.0156, 3.73107, 0.59 ) }
    dend_5 { pt3dadd( -51.0998, 18.0821, 3.52039, 0.88 ) }
    dend_5 { pt3dadd( -52.3116, 18.2583, 2.95266, 1.18 ) }
    dend_5 { pt3dadd( -53.5578, 18.4457, 2.36556, 0.96 ) }
    dend_5 { pt3dadd( -54.1575, 18.5428, 2.09795, 0.96 ) }
    dend_5 { pt3dadd( -55.097, 18.7246, 1.7132, 0.66 ) }
    dend_5 { pt3dadd( -56.1622, 18.9432, 1.32671, 0.88 ) }
    dend_5 { pt3dadd( -56.8588, 19.0985, 1.11985, 0.88 ) }
    dend_5 { pt3dadd( -57.7014, 19.3122, 0.977531, 0.59 ) }
    dend_5 { pt3dadd( -58.6378, 19.5726, 0.922745, 0.29 ) }
    dend_5 { pt3dadd( -59.5517, 19.839, 0.909274, 0.29 ) }
    dend_5 { pt3dadd( -59.8688, 19.9334, 0.916379, 0.59 ) }
    dend_5 { pt3dadd( -60.4887, 20.1318, 0.95255, 0.59 ) }
    dend_5 { pt3dadd( -62.0278, 20.6433, 1.08398, 0.37 ) }
    dend_5 { pt3dadd( -63.6614, 21.1838, 1.26899, 0.37 ) }
    dend_5 { pt3dadd( -64.8573, 21.559, 1.42803, 0.74 ) }
    dend_5 { pt3dadd( -65.566, 21.7662, 1.54104, 0.96 ) }
    dend_5 { pt3dadd( -66.0214, 21.8992, 1.60771, 0.96 ) }
    dend_5 { pt3dadd( -67.0431, 22.1787, 1.74226, 0.37 ) }
    dend_5 { pt3dadd( -67.7845, 22.3711, 1.84052, 0.66 ) }
    dend_5 { pt3dadd( -68.4964, 22.5549, 1.9232, 1.25 ) }
    dend_5 { pt3dadd( -69.048, 22.6956, 2.00025, 1.25 ) }
    dend_5 { pt3dadd( -70.2017, 22.969, 2.14219, 0.81 ) }
    dend_5 { pt3dadd( -70.7886, 23.0903, 2.18292, 0.81 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.408048, 9.16713, -0.318285, 1.4 ) }
    dend_0 { pt3dadd( 0.501224, 9.34625, -0.334657, 1.4 ) }
    dend_0 { pt3dadd( 0.942499, 10.1945, -0.412193, 1.18 ) }
    dend_0 { pt3dadd( 1.358, 10.9933, -0.4852, 1.4 ) }
    dend_0 { pt3dadd( 1.7866, 11.8172, -0.560509, 1.4 ) }
    dend_0 { pt3dadd( 2.17247, 12.559, -0.62831, 1.18 ) }
    dend_0 { pt3dadd( 2.43808, 13.0696, -0.67498, 1.18 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 65/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.18123, -8.81254, 0.0904597, 0.792933 ) }
    axon_0 { pt3dadd( 6.39229, -23.2093, 0.0904597, 0.792933 ) }
    axon_0 { pt3dadd( 10.6034, -37.6061, 0.0904597, 0.792933 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 68/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 6.27805, -5.42487, -3.75829, 0.66 ) }
    dend_17 { pt3dadd( 7.46353, -7.5287, -4.01393, 0.66 ) }
    dend_17 { pt3dadd( 7.64745, -7.70143, -4.09214, 0.66 ) }
    dend_17 { pt3dadd( 8.76641, -8.00097, -4.5449, 0.44 ) }
    dend_17 { pt3dadd( 10.6797, -8.09313, -5.12115, 0.44 ) }
    dend_17 { pt3dadd( 11.2445, -8.0757, -5.26087, 0.88 ) }
    dend_17 { pt3dadd( 12.1214, -7.99554, -5.43898, 1.03 ) }
    dend_17 { pt3dadd( 13.0958, -7.76876, -5.54211, 1.03 ) }
    dend_17 { pt3dadd( 14.5435, -7.35522, -5.67579, 0.96 ) }
    dend_17 { pt3dadd( 15.522, -7.0588, -5.76148, 1.33 ) }
    dend_17 { pt3dadd( 15.9909, -6.92105, -5.81716, 1.55 ) }
    dend_17 { pt3dadd( 16.9465, -6.69813, -5.90571, 1.55 ) }
    dend_17 { pt3dadd( 17.8511, -6.58228, -5.95075, 1.25 ) }
    dend_17 { pt3dadd( 19.3394, -6.67693, -5.97556, 0.96 ) }
    dend_17 { pt3dadd( 19.8307, -6.86389, -5.99252, 0.66 ) }
    dend_17 { pt3dadd( 20.6235, -7.38147, -5.95826, 1.11 ) }
    dend_17 { pt3dadd( 21.0258, -7.69885, -5.93388, 1.33 ) }
    dend_17 { pt3dadd( 21.4964, -8.09985, -5.9044, 1.33 ) }
    dend_17 { pt3dadd( 22.5016, -8.93226, -5.85024, 0.81 ) }
    dend_17 { pt3dadd( 23.3384, -9.5111, -5.81017, 0.66 ) }
    dend_17 { pt3dadd( 24.8177, -10.0848, -5.76316, 0.66 ) }
    dend_17 { pt3dadd( 25.6951, -10.2046, -5.77294, 1.11 ) }
    dend_17 { pt3dadd( 26.5506, -10.1934, -5.80681, 1.11 ) }
    dend_17 { pt3dadd( 27.3465, -10.0958, -5.87675, 1.11 ) }
    dend_17 { pt3dadd( 28.1993, -9.91799, -6.00199, 0.81 ) }
    dend_17 { pt3dadd( 29.0709, -9.73954, -6.19603, 0.81 ) }
    dend_17 { pt3dadd( 29.9395, -9.55834, -6.43858, 0.96 ) }
    dend_17 { pt3dadd( 30.9371, -9.39821, -6.69648, 1.92 ) }
    dend_17 { pt3dadd( 31.9207, -9.31344, -6.96145, 2.65 ) }
    dend_17 { pt3dadd( 32.5272, -9.3041, -7.13914, 2.65 ) }
    dend_17 { pt3dadd( 33.647, -9.35981, -7.52378, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 99/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.27805, -5.42487, -3.75829, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( 10.6475, -6.77661, -0.507176, 0.96 ) }
    dend_16 { pt3dadd( 11.7015, -7.02106, 0.15968, 1.11 ) }
    dend_16 { pt3dadd( 12.4148, -7.14699, 0.547122, 1.25 ) }
    dend_16 { pt3dadd( 13.1576, -7.24542, 0.887969, 1.4 ) }
    dend_16 { pt3dadd( 13.9717, -7.32553, 1.21888, 1.4 ) }
    dend_16 { pt3dadd( 15.3338, -7.42483, 1.72768, 1.11 ) }
    dend_16 { pt3dadd( 16.3119, -7.37858, 1.89577, 0.96 ) }
    dend_16 { pt3dadd( 17.3267, -7.28684, 2.09271, 0.66 ) }
    dend_16 { pt3dadd( 18.5496, -7.13359, 2.35156, 0.66 ) }
    dend_16 { pt3dadd( 19.3083, -7.00906, 2.51761, 0.66 ) }
    dend_16 { pt3dadd( 20.0727, -6.87536, 2.68275, 0.66 ) }
    dend_16 { pt3dadd( 20.895, -6.74036, 2.85669, 0.81 ) }
    dend_16 { pt3dadd( 21.686, -6.63981, 3.04692, 1.03 ) }
    dend_16 { pt3dadd( 22.2819, -6.60339, 3.21996, 1.03 ) }
    dend_16 { pt3dadd( 23.1642, -6.68287, 3.54032, 0.59 ) }
    dend_16 { pt3dadd( 23.9473, -6.88551, 3.85062, 0.44 ) }
    dend_16 { pt3dadd( 24.3232, -7.01282, 3.99824, 0.44 ) }
    dend_16 { pt3dadd( 25.0263, -7.22273, 4.2347, 0.44 ) }
    dend_16 { pt3dadd( 26.0764, -7.43165, 4.51789, 0.44 ) }
    dend_16 { pt3dadd( 26.9331, -7.50761, 4.69233, 0.59 ) }
    dend_16 { pt3dadd( 27.9095, -7.47705, 4.85084, 0.59 ) }
    dend_16 { pt3dadd( 29.0697, -7.30701, 4.99722, 0.74 ) }
    dend_16 { pt3dadd( 30.4766, -6.97079, 5.1409, 1.18 ) }
    dend_16 { pt3dadd( 31.3334, -6.68526, 5.21264, 1.4 ) }
    dend_16 { pt3dadd( 32.2734, -6.30986, 5.27519, 1.47 ) }
    dend_16 { pt3dadd( 32.9992, -5.991, 5.31296, 1.11 ) }
    dend_16 { pt3dadd( 33.9768, -5.54655, 5.35685, 0.29 ) }
    dend_16 { pt3dadd( 34.5474, -5.28639, 5.37698, 0.29 ) }
    dend_16 { pt3dadd( 35.1594, -5.00755, 5.39455, 0.29 ) }
    dend_16 { pt3dadd( 36.3169, -4.50062, 5.4161, 0.74 ) }
    dend_16 { pt3dadd( 37.0661, -4.19102, 5.42173, 1.03 ) }
    dend_16 { pt3dadd( 37.858, -3.88666, 5.42655, 1.03 ) }
    dend_16 { pt3dadd( 38.9552, -3.49661, 5.44035, 0.74 ) }
    dend_16 { pt3dadd( 39.8875, -3.18612, 5.44283, 0.74 ) }
    dend_16 { pt3dadd( 41.0922, -2.79193, 5.4183, 0.74 ) }
    dend_16 { pt3dadd( 42.3061, -2.38513, 5.36967, 1.33 ) }
    dend_16 { pt3dadd( 43.2487, -2.08232, 5.31787, 1.62 ) }
    dend_16 { pt3dadd( 43.6683, -1.94153, 5.28923, 1.62 ) }
    dend_16 { pt3dadd( 44.6914, -1.58589, 5.19679, 1.11 ) }
    dend_16 { pt3dadd( 45.8344, -1.19207, 5.0711, 0.37 ) }
    dend_16 { pt3dadd( 46.9757, -0.803158, 4.92846, 0.29 ) }
    dend_16 { pt3dadd( 47.5222, -0.624689, 4.8575, 0.29 ) }
    dend_16 { pt3dadd( 48.3972, -0.352848, 4.74839, 0.29 ) }
    dend_16 { pt3dadd( 49.0875, -0.140855, 4.67811, 0.29 ) }
    dend_16 { pt3dadd( 50.0207, 0.143064, 4.61481, 0.66 ) }
    dend_16 { pt3dadd( 50.7723, 0.384562, 4.58361, 0.66 ) }
    dend_16 { pt3dadd( 51.6303, 0.673597, 4.55592, 0.66 ) }
    dend_16 { pt3dadd( 52.3189, 0.930952, 4.54136, 0.52 ) }
    dend_16 { pt3dadd( 53.3471, 1.33701, 4.53272, 0.52 ) }
    dend_16 { pt3dadd( 53.974, 1.60667, 4.5368, 0.44 ) }
    dend_16 { pt3dadd( 54.9594, 2.05408, 4.56206, 0.59 ) }
    dend_16 { pt3dadd( 55.667, 2.40037, 4.59134, 0.74 ) }
    dend_16 { pt3dadd( 56.5453, 2.8497, 4.64632, 0.52 ) }
    dend_16 { pt3dadd( 57.2488, 3.19986, 4.70657, 0.52 ) }
    dend_16 { pt3dadd( 57.8997, 3.51145, 4.77874, 0.66 ) }
    dend_16 { pt3dadd( 59.2138, 4.11557, 4.94435, 0.66 ) }
    dend_16 { pt3dadd( 59.7564, 4.36619, 5.0206, 1.11 ) }
    dend_16 { pt3dadd( 60.1092, 4.54429, 5.07777, 1.11 ) }
    dend_16 { pt3dadd( 60.7522, 4.90514, 5.186, 1.11 ) }
    dend_16 { pt3dadd( 61.6541, 5.48154, 5.32862, 0.81 ) }
    dend_16 { pt3dadd( 62.3598, 5.99894, 5.45611, 0.96 ) }
    dend_16 { pt3dadd( 62.8815, 6.42535, 5.55718, 0.96 ) }
    dend_16 { pt3dadd( 63.7633, 7.19473, 5.73706, 1.18 ) }
    dend_16 { pt3dadd( 64.6383, 8.00466, 5.92155, 0.37 ) }
    dend_16 { pt3dadd( 65.5119, 8.84417, 6.10925, 0.37 ) }
    dend_16 { pt3dadd( 66.4393, 9.69736, 6.30093, 0.37 ) }
    dend_16 { pt3dadd( 67.0888, 10.2622, 6.43996, 0.81 ) }
    dend_16 { pt3dadd( 67.66, 10.7306, 6.56677, 0.81 ) }
    dend_16 { pt3dadd( 68.7441, 11.575, 6.80328, 0.59 ) }
    dend_16 { pt3dadd( 69.4302, 12.0883, 6.95287, 0.59 ) }
    dend_16 { pt3dadd( 70.4441, 12.8146, 7.1627, 0.74 ) }
    dend_16 { pt3dadd( 71.2169, 13.3403, 7.30402, 0.74 ) }
    dend_16 { pt3dadd( 71.9793, 13.8518, 7.45815, 0.37 ) }
    dend_16 { pt3dadd( 72.9399, 14.4976, 7.67184, 1.03 ) }
    dend_16 { pt3dadd( 73.1831, 14.6596, 7.72976, 1.25 ) }
    dend_16 { pt3dadd( 73.7038, 14.9841, 7.86009, 1.4 ) }
    dend_16 { pt3dadd( 74.4709, 15.4003, 8.05358, 0.88 ) }
    dend_16 { pt3dadd( 75.2562, 15.7259, 8.23343, 0.52 ) }
    dend_16 { pt3dadd( 75.785, 15.8751, 8.34562, 0.52 ) }
    dend_16 { pt3dadd( 76.6546, 16.043, 8.51815, 0.29 ) }
    dend_16 { pt3dadd( 77.5318, 16.1779, 8.6788, 0.29 ) }
    dend_16 { pt3dadd( 78.5756, 16.2801, 8.85318, 0.29 ) }
    dend_16 { pt3dadd( 79.611, 16.3169, 9.00729, 0.29 ) }
    dend_16 { pt3dadd( 80.4874, 16.3098, 9.11993, 0.29 ) }
    dend_16 { pt3dadd( 81.4167, 16.276, 9.22836, 0.88 ) }
    dend_16 { pt3dadd( 82.2473, 16.2279, 9.31464, 1.11 ) }
    dend_16 { pt3dadd( 83.0037, 16.1798, 9.38308, 1.11 ) }
    dend_16 { pt3dadd( 83.6388, 16.1319, 9.43101, 0.52 ) }
    dend_16 { pt3dadd( 84.4356, 16.0515, 9.48463, 0.52 ) }
    dend_16 { pt3dadd( 85.3906, 15.9171, 9.55151, 0.44 ) }
    dend_16 { pt3dadd( 85.6217, 15.866, 9.56595, 0.29 ) }
    dend_16 { pt3dadd( 94.7813, 17.3166, 13.2767, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 92/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 1.35504, -13.9702, 1.71212, 1.11 ) }
    dend_10 { pt3dadd( 1.34457, -14.6523, 1.13855, 1.11 ) }
    dend_10 { pt3dadd( 1.39868, -16.1688, 0.282539, 0.96 ) }
    dend_10 { pt3dadd( 1.45636, -16.9855, -0.00175144, 1.4 ) }
    dend_10 { pt3dadd( 1.52235, -18.1946, -0.268664, 1.25 ) }
    dend_10 { pt3dadd( 1.55373, -19.0919, -0.407289, 1.33 ) }
    dend_10 { pt3dadd( 1.55988, -20.1138, -0.525882, 1.4 ) }
    dend_10 { pt3dadd( 1.5259, -21.2091, -0.573757, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_10 { pt3dadd( 1.44128, -22.4086, -0.508947, 1.4 ) }
    dend_10 { pt3dadd( 1.3401, -23.6682, -0.401914, 1.84 ) }
    dend_10 { pt3dadd( 1.26747, -24.5661, -0.31547, 1.84 ) }
    dend_10 { pt3dadd( 1.21536, -25.443, -0.246723, 1.55 ) }
    dend_10 { pt3dadd( 1.18987, -26.6422, -0.188745, 1.25 ) }
    dend_10 { pt3dadd( 1.20242, -27.7144, -0.147763, 0.66 ) }
    dend_10 { pt3dadd( 1.26361, -29.5185, -0.0514429, 0.52 ) }
    dend_10 { pt3dadd( 1.29473, -30.0852, -0.00188003, 0.52 ) }
    dend_10 { pt3dadd( 1.33564, -30.7607, 0.0862404, 0.52 ) }
    dend_10 { pt3dadd( 1.38429, -31.5899, 0.227402, 0.52 ) }
    dend_10 { pt3dadd( 1.41054, -32.2667, 0.375216, 0.52 ) }
    dend_10 { pt3dadd( 1.39215, -33.4677, 0.682562, 0.88 ) }
    dend_10 { pt3dadd( 1.31207, -34.2976, 0.9055, 1.18 ) }
    dend_10 { pt3dadd( 1.20926, -35.2102, 1.13863, 1.33 ) }
    dend_10 { pt3dadd( 1.10023, -36.0238, 1.31905, 1.4 ) }
    dend_10 { pt3dadd( 0.995489, -36.7012, 1.45172, 1.4 ) }
    dend_10 { pt3dadd( 0.878097, -37.4738, 1.58237, 1.4 ) }
    dend_10 { pt3dadd( 0.765974, -38.2345, 1.6869, 1.55 ) }
    dend_10 { pt3dadd( 0.557511, -39.453, 1.81227, 1.33 ) }
    dend_10 { pt3dadd( 0.23034, -41.0531, 1.93899, 1.03 ) }
    dend_10 { pt3dadd( -0.0302292, -42.1144, 2.00621, 0.81 ) }
    dend_10 { pt3dadd( -0.348385, -43.2267, 2.05597, 0.88 ) }
    dend_10 { pt3dadd( -0.665885, -44.2214, 2.08706, 0.88 ) }
    dend_10 { pt3dadd( -1.06752, -45.3388, 2.11047, 0.88 ) }
    dend_10 { pt3dadd( -1.37496, -46.125, 2.1168, 0.88 ) }
    dend_10 { pt3dadd( -1.68406, -46.9171, 2.12445, 1.33 ) }
    dend_10 { pt3dadd( -2.02227, -47.8064, 2.13438, 1.55 ) }
    dend_10 { pt3dadd( -2.20831, -48.2828, 2.1406, 1.69 ) }
    dend_10 { pt3dadd( -2.54648, -49.0319, 2.15194, 1.69 ) }
    dend_10 { pt3dadd( -2.78819, -49.4966, 2.1597, 1.69 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 30/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 1.35504, -13.9702, 1.71212, 1.18 ) }
    dend_9 { pt3dadd( 1.10648, -14.5626, 3.30089, 1.18 ) }
    dend_9 { pt3dadd( 1.05266, -14.8932, 4.08372, 1.18 ) }
    dend_9 { pt3dadd( 1.04249, -15.5055, 5.31377, 1.33 ) }
    dend_9 { pt3dadd( 1.0642, -15.8907, 5.97896, 1.33 ) }
    dend_9 { pt3dadd( 1.16086, -16.6056, 7.06153, 1.03 ) }
    dend_9 { pt3dadd( 1.26518, -17.2108, 7.87519, 0.88 ) }
    dend_9 { pt3dadd( 1.44478, -17.7283, 8.46434, 1.03 ) }
    dend_9 { pt3dadd( 1.64137, -18.3308, 9.00437, 1.18 ) }
    dend_9 { pt3dadd( 1.77138, -18.9145, 9.40283, 1.18 ) }
    dend_9 { pt3dadd( 1.80021, -19.53, 9.75133, 1.18 ) }
    dend_9 { pt3dadd( 1.71937, -20.0485, 9.96877, 1.25 ) }
    dend_9 { pt3dadd( 1.45474, -20.6746, 10.1446, 1.25 ) }
    dend_9 { pt3dadd( 0.939428, -21.4436, 10.3469, 0.96 ) }
    dend_9 { pt3dadd( 0.523947, -21.9609, 10.4841, 0.74 ) }
    dend_9 { pt3dadd( 0.088102, -22.5073, 10.6587, 0.74 ) }
    dend_9 { pt3dadd( -0.513694, -23.3834, 11.0002, 0.66 ) }
    dend_9 { pt3dadd( -0.875649, -24.1132, 11.3279, 0.66 ) }
    dend_9 { pt3dadd( -1.25465, -25.2593, 11.8709, 0.96 ) }
    dend_9 { pt3dadd( -1.40982, -26.0242, 12.2544, 0.96 ) }
    dend_9 { pt3dadd( -1.50098, -26.8527, 12.6456, 0.66 ) }
    dend_9 { pt3dadd( -1.54198, -27.4219, 12.883, 0.44 ) }
    dend_9 { pt3dadd( -1.60844, -28.1174, 13.1441, 0.29 ) }
    dend_9 { pt3dadd( -1.80772, -28.8586, 13.3539, 0.66 ) }
    dend_9 { pt3dadd( -2.00775, -29.2664, 13.409, 0.66 ) }
    dend_9 { pt3dadd( -2.44784, -30.0134, 13.4607, 0.44 ) }
    dend_9 { pt3dadd( -2.88603, -30.7413, 13.4769, 1.03 ) }
    dend_9 { pt3dadd( -3.17044, -31.2152, 13.483, 1.03 ) }
    dend_9 { pt3dadd( -3.7112, -32.1145, 13.5057, 0.59 ) }
    dend_9 { pt3dadd( -4.10429, -32.7289, 13.5284, 1.18 ) }
    dend_9 { pt3dadd( -4.55519, -33.3601, 13.5407, 1.33 ) }
    dend_9 { pt3dadd( -5.1509, -34.0561, 13.5461, 1.47 ) }
    dend_9 { pt3dadd( -6.02973, -34.9508, 13.5951, 0.37 ) }
    dend_9 { pt3dadd( -6.80415, -35.6526, 13.6695, 0.37 ) }
    dend_9 { pt3dadd( -7.47192, -36.1362, 13.6611, 0.52 ) }
    dend_9 { pt3dadd( -8.31707, -36.5926, 13.5412, 0.52 ) }
    dend_9 { pt3dadd( -9.07626, -36.8894, 13.3477, 0.29 ) }
    dend_9 { pt3dadd( -10.2549, -37.2623, 12.9958, 0.29 ) }
    dend_9 { pt3dadd( -11.2269, -37.5066, 12.634, 0.29 ) }
    dend_9 { pt3dadd( -13.6389, -37.993, 11.5257, 0.29 ) }
    dend_9 { pt3dadd( -14.8534, -38.1707, 10.8626, 0.44 ) }
    dend_9 { pt3dadd( -15.424, -38.2188, 10.4897, 0.59 ) }
    dend_9 { pt3dadd( -21.1376, -44.687, 15.072, 0.59 ) }
    dend_9 { pt3dadd( -28.3674, -50.7825, 17.6332, 0.59 ) }
    dend_9 { pt3dadd( -36.9494, -55.5408, 18.757, 0.59 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 75/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -70.7886, 23.0903, 2.18292, 0.66 ) }
    dend_7 { pt3dadd( -73.2452, 22.5332, 1.13264, 0.66 ) }
    dend_7 { pt3dadd( -74.0945, 22.3145, 0.812597, 0.66 ) }
    dend_7 { pt3dadd( -74.9638, 22.0546, 0.526171, 0.44 ) }
    dend_7 { pt3dadd( -76.354, 21.6024, 0.145673, 0.22 ) }
    dend_7 { pt3dadd( -77.567, 21.2086, -0.129441, 0.96 ) }
    dend_7 { pt3dadd( -78.3275, 20.9622, -0.271621, 1.47 ) }
    dend_7 { pt3dadd( -79.3219, 20.6423, -0.358354, 1.62 ) }
    dend_7 { pt3dadd( -80.3516, 20.3221, -0.432655, 1.62 ) }
    dend_7 { pt3dadd( -81.8964, 19.8705, -0.529109, 0.37 ) }
    dend_7 { pt3dadd( -83.2719, 19.5052, -0.602474, 0.22 ) }
    dend_7 { pt3dadd( -86.0938, 18.8395, -0.721877, 0.22 ) }
    dend_7 { pt3dadd( -89.0322, 18.2371, -0.809009, 0.22 ) }
    dend_7 { pt3dadd( -90.2026, 18.0312, -0.842402, 0.81 ) }
    dend_7 { pt3dadd( -91.1636, 17.8844, -0.868103, 0.81 ) }
    dend_7 { pt3dadd( -93.6222, 17.5359, -0.923955, 0.22 ) }
    dend_7 { pt3dadd( -95.0807, 17.3238, -0.952283, 0.96 ) }
    dend_7 { pt3dadd( -96.3907, 17.1329, -0.973072, 1.11 ) }
    dend_7 { pt3dadd( -97.4173, 16.976, -0.992684, 1.25 ) }
    dend_7 { pt3dadd( -98.318, 16.83, -1.01324, 0.81 ) }
    dend_7 { pt3dadd( -100.867, 16.4111, -1.08106, 0.22 ) }
    dend_7 { pt3dadd( -102.597, 16.1275, -1.13666, 0.29 ) }
    dend_7 { pt3dadd( -104.118, 15.8707, -1.20036, 0.44 ) }
    dend_7 { pt3dadd( -105.497, 15.64, -1.26665, 0.52 ) }
    dend_7 { pt3dadd( -108.106, 15.2436, -1.39802, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_7 { pt3dadd( -109.058, 15.1239, -1.45383, 0.59 ) }
    dend_7 { pt3dadd( -109.815, 15.0488, -1.5146, 0.74 ) }
    dend_7 { pt3dadd( -110.65, 14.9756, -1.59666, 0.22 ) }
    dend_7 { pt3dadd( -112.917, 14.7377, -1.93839, 0.22 ) }
    dend_7 { pt3dadd( -113.924, 14.6041, -2.13493, 0.66 ) }
    dend_7 { pt3dadd( -114.692, 14.4953, -2.30848, 0.96 ) }
    dend_7 { pt3dadd( -115.727, 14.3466, -2.55111, 0.96 ) }
    dend_7 { pt3dadd( -116.563, 14.2327, -2.72643, 0.96 ) }
    dend_7 { pt3dadd( -119.134, 13.9376, -3.20939, 0.22 ) }
    dend_7 { pt3dadd( -120.08, 13.8506, -3.3767, 0.37 ) }
    dend_7 { pt3dadd( -121.313, 13.7587, -3.57677, 0.37 ) }
    dend_7 { pt3dadd( -121.901, 13.7334, -3.66018, 0.37 ) }
    dend_7 { pt3dadd( -125.33, 13.69, -4.02732, 0.15 ) }
    dend_7 { pt3dadd( -126.598, 13.738, -4.09705, 1.18 ) }
    dend_7 { pt3dadd( -127.217, 13.809, -4.08503, 1.4 ) }
    dend_7 { pt3dadd( -127.679, 13.9049, -4.05527, 1.4 ) }
    dend_7 { pt3dadd( -128.494, 14.1402, -3.99302, 1.18 ) }
    dend_7 { pt3dadd( -129.065, 14.3497, -3.95258, 0.81 ) }
    dend_7 { pt3dadd( -130.717, 15.1658, -3.84514, 0.22 ) }
    dend_7 { pt3dadd( -131.69, 15.6916, -3.79846, 0.22 ) }
    dend_7 { pt3dadd( -133.421, 16.7215, -3.62377, 0.29 ) }
    dend_7 { pt3dadd( -134.256, 17.2614, -3.5121, 0.59 ) }
    dend_7 { pt3dadd( -135.405, 18.0608, -3.31394, 1.11 ) }
    dend_7 { pt3dadd( -136.017, 18.5203, -3.19094, 1.11 ) }
    dend_7 { pt3dadd( -136.392, 18.845, -3.09484, 0.88 ) }
    dend_7 { pt3dadd( -137.831, 20.1625, -2.73038, 0.44 ) }
    dend_7 { pt3dadd( -138.335, 20.6411, -2.60209, 0.59 ) }
    dend_7 { pt3dadd( -138.928, 21.2149, -2.45051, 0.59 ) }
    dend_7 { pt3dadd( -139.693, 21.9403, -2.29219, 0.59 ) }
    dend_7 { pt3dadd( -141.496, 23.558, -2.0187, 0.15 ) }
    dend_7 { pt3dadd( -145.101, 26.6614, -1.64435, 0.15 ) }
    dend_7 { pt3dadd( -145.921, 27.3535, -1.60071, 0.66 ) }
    dend_7 { pt3dadd( -146.473, 27.8163, -1.58137, 0.81 ) }
    dend_7 { pt3dadd( -149.027, 29.9642, -1.54617, 0.22 ) }
    dend_7 { pt3dadd( -150.679, 31.3513, -1.54166, 0.22 ) }
    dend_7 { pt3dadd( -151.4, 31.9479, -1.53943, 0.59 ) }
    dend_7 { pt3dadd( -151.897, 32.3774, -1.53623, 0.59 ) }
    dend_7 { pt3dadd( -153.702, 34.0261, -1.52023, 0.22 ) }
    dend_7 { pt3dadd( -154.222, 34.5329, -1.51415, 0.81 ) }
    dend_7 { pt3dadd( -154.672, 35.0069, -1.50776, 1.03 ) }
    dend_7 { pt3dadd( -154.84, 35.2004, -1.50587, 1.03 ) }
    dend_7 { pt3dadd( -157.046, 37.878, -1.4873, 0.22 ) }
    dend_7 { pt3dadd( -157.71, 38.7132, -1.48365, 0.81 ) }
    dend_7 { pt3dadd( -158.136, 39.2885, -1.48285, 0.88 ) }
    dend_7 { pt3dadd( -160.112, 42.0742, -1.48285, 0.22 ) }
    dend_7 { pt3dadd( -161.901, 44.7293, -1.48285, 0.22 ) }
    dend_7 { pt3dadd( -162.455, 45.6095, -1.47391, 0.66 ) }
    dend_7 { pt3dadd( -162.73, 46.1107, -1.46347, 0.66 ) }
    dend_7 { pt3dadd( -163.557, 47.773, -1.42027, 0.29 ) }
    dend_7 { pt3dadd( -163.882, 48.5274, -1.39846, 0.52 ) }
    dend_7 { pt3dadd( -163.974, 48.8027, -1.38924, 0.52 ) }
    dend_7 { pt3dadd( -164.433, 50.317, -1.33488, 0.22 ) }
    dend_7 { pt3dadd( -165.0, 52.254, -1.262, 0.22 ) }
    dend_7 { pt3dadd( -165.241, 53.1024, -1.22946, 0.22 ) }
    dend_7 { pt3dadd( -165.506, 54.0579, -1.19305, 0.66 ) }
    dend_7 { pt3dadd( -165.67, 54.6806, -1.1735, 0.66 ) }
    dend_7 { pt3dadd( -165.795, 55.1586, -1.16649, 0.52 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 57/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -70.7886, 23.0903, 2.18292, 0.29 ) }
    dend_6 { pt3dadd( -71.8574, 23.5758, 2.18292, 0.29 ) }
    dend_6 { pt3dadd( -74.5061, 24.8531, 2.18292, 0.22 ) }
    dend_6 { pt3dadd( -75.386, 25.2774, 2.18292, 0.74 ) }
    dend_6 { pt3dadd( -75.8848, 25.518, 2.18292, 0.74 ) }
    dend_6 { pt3dadd( -76.4912, 25.8104, 2.18292, 0.37 ) }
    dend_6 { pt3dadd( -77.6982, 26.3924, 2.18292, 0.22 ) }
    dend_6 { pt3dadd( -78.6786, 26.8616, 2.18292, 0.22 ) }
    dend_6 { pt3dadd( -87.4057, 31.3752, 3.30812, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 66/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.43808, 13.0696, -0.67498, 0.96 ) }
    dend_4 { pt3dadd( 5.14123, 15.0244, -2.81943, 0.96 ) }
    dend_4 { pt3dadd( 5.80518, 15.5209, -3.23964, 1.03 ) }
    dend_4 { pt3dadd( 6.47284, 16.0312, -3.61485, 0.74 ) }
    dend_4 { pt3dadd( 7.35856, 16.7259, -4.05909, 0.22 ) }
    dend_4 { pt3dadd( 8.97081, 18.0456, -4.83507, 0.22 ) }
    dend_4 { pt3dadd( 10.0263, 18.9355, -5.34771, 0.88 ) }
    dend_4 { pt3dadd( 10.6461, 19.4985, -5.55476, 1.03 ) }
    dend_4 { pt3dadd( 11.3685, 20.1878, -5.80643, 0.81 ) }
    dend_4 { pt3dadd( 12.108, 20.9073, -6.09488, 0.22 ) }
    dend_4 { pt3dadd( 12.9587, 21.7436, -6.46285, 0.74 ) }
    dend_4 { pt3dadd( 13.3204, 22.1024, -6.62836, 1.18 ) }
    dend_4 { pt3dadd( 13.7306, 22.5293, -6.83137, 1.18 ) }
    dend_4 { pt3dadd( 14.4536, 23.3224, -7.19184, 0.22 ) }
    dend_4 { pt3dadd( 14.8449, 23.8072, -7.38927, 0.29 ) }
    dend_4 { pt3dadd( 15.1916, 24.3516, -7.62646, 0.29 ) }
    dend_4 { pt3dadd( 15.6295, 25.1982, -8.02898, 0.88 ) }
    dend_4 { pt3dadd( 15.9719, 26.0175, -8.44759, 1.03 ) }
    dend_4 { pt3dadd( 16.1659, 26.5755, -8.70513, 0.81 ) }
    dend_4 { pt3dadd( 16.5203, 27.7696, -9.23144, 0.29 ) }
    dend_4 { pt3dadd( 17.0103, 29.6645, -9.99138, 1.77 ) }
    dend_4 { pt3dadd( 17.2246, 30.5496, -10.3164, 2.21 ) }
    dend_4 { pt3dadd( 17.4621, 31.4405, -10.5945, 1.99 ) }
    dend_4 { pt3dadd( 17.9361, 32.9798, -10.9631, 1.25 ) }
    dend_4 { pt3dadd( 18.3774, 34.242, -11.1824, 0.22 ) }
    dend_4 { pt3dadd( 18.7419, 35.1678, -11.299, 0.81 ) }
    dend_4 { pt3dadd( 18.9753, 35.7135, -11.3442, 0.59 ) }
    dend_4 { pt3dadd( 19.9969, 38.0071, -11.5406, 0.22 ) }
    dend_4 { pt3dadd( 20.7946, 39.7155, -11.7427, 0.22 ) }
    dend_4 { pt3dadd( 21.5135, 41.2628, -12.0138, 0.22 ) }
    dend_4 { pt3dadd( 22.0914, 42.4917, -12.2792, 1.62 ) }
    dend_4 { pt3dadd( 22.2599, 42.841, -12.3681, 2.06 ) }
    dend_4 { pt3dadd( 22.565, 43.4557, -12.5348, 1.62 ) }
    dend_4 { pt3dadd( 22.9146, 44.1383, -12.7375, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_4 { pt3dadd( 23.8555, 45.9073, -13.31, 0.22 ) }
    dend_4 { pt3dadd( 24.7858, 47.5617, -13.905, 0.22 ) }
    dend_4 { pt3dadd( 25.4314, 48.6771, -14.3449, 0.22 ) }
    dend_4 { pt3dadd( 25.8298, 49.3591, -14.6491, 0.59 ) }
    dend_4 { pt3dadd( 26.0188, 49.6805, -14.8078, 0.59 ) }
    dend_4 { pt3dadd( 26.5335, 50.466, -15.3327, 0.22 ) }
    dend_4 { pt3dadd( 27.468, 51.6533, -16.4067, 1.77 ) }
    dend_4 { pt3dadd( 27.914, 52.1868, -16.9471, 2.36 ) }
    dend_4 { pt3dadd( 28.4171, 52.749, -17.5065, 3.02 ) }
    dend_4 { pt3dadd( 28.7214, 53.0736, -17.7983, 3.02 ) }
    dend_4 { pt3dadd( 30.1899, 54.5624, -19.0005, 0.74 ) }
    dend_4 { pt3dadd( 30.7348, 55.1014, -19.4129, 0.44 ) }
    dend_4 { pt3dadd( 31.9457, 56.2555, -20.2186, 0.15 ) }
    dend_4 { pt3dadd( 33.4358, 57.7168, -21.1668, 0.15 ) }
    dend_4 { pt3dadd( 34.217, 58.5007, -21.6795, 1.4 ) }
    dend_4 { pt3dadd( 34.6803, 58.9858, -22.0145, 1.62 ) }
    dend_4 { pt3dadd( 37.0287, 61.6157, -23.9581, 0.15 ) }
    dend_4 { pt3dadd( 38.2003, 62.9612, -25.0969, 0.15 ) }
    dend_4 { pt3dadd( 39.0574, 63.9755, -26.1064, 1.55 ) }
    dend_4 { pt3dadd( 39.6322, 64.6781, -27.0382, 1.99 ) }
    dend_4 { pt3dadd( 40.1211, 65.2594, -28.034, 1.77 ) }
    dend_4 { pt3dadd( 40.7669, 65.9622, -29.6697, 0.96 ) }
    dend_4 { pt3dadd( 40.9803, 66.122, -30.4622, 0.74 ) }
    dend_4 { pt3dadd( 41.2783, 66.0868, -32.0973, 1.18 ) }
    dend_4 { pt3dadd( 41.8154, 65.1519, -35.9263, 0.88 ) }
    dend_4 { pt3dadd( 41.9662, 64.4445, -37.4568, 0.29 ) }
    dend_4 { pt3dadd( 42.0365, 63.8346, -38.3474, 1.18 ) }
    dend_4 { pt3dadd( 42.1131, 63.1387, -39.1255, 1.47 ) }
    dend_4 { pt3dadd( 42.3476, 61.6163, -40.5508, 0.22 ) }
    dend_4 { pt3dadd( 42.5727, 60.6426, -41.2997, 0.22 ) }
    dend_4 { pt3dadd( 42.8478, 59.9434, -41.7449, 1.62 ) }
    dend_4 { pt3dadd( 43.3854, 59.1621, -42.3846, 1.77 ) }
    dend_4 { pt3dadd( 44.2134, 58.3894, -43.2034, 0.22 ) }
    dend_4 { pt3dadd( 44.8969, 57.9959, -43.7447, 1.4 ) }
    dend_4 { pt3dadd( 45.5409, 57.7784, -44.1888, 1.47 ) }
    dend_4 { pt3dadd( 46.2923, 57.6028, -44.7159, 0.81 ) }
    dend_4 { pt3dadd( 47.7617, 57.354, -45.7522, 1.18 ) }
    dend_4 { pt3dadd( 48.5379, 57.2591, -46.327, 0.66 ) }
    dend_4 { pt3dadd( 49.1951, 57.1977, -46.8758, 1.4 ) }
    dend_4 { pt3dadd( 49.8056, 57.1513, -47.44, 1.4 ) }
    dend_4 { pt3dadd( 50.6428, 57.1071, -48.2407, 0.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 41/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.43808, 13.0696, -0.67498, 0.88 ) }
    dend_1 { pt3dadd( 2.88671, 13.6741, -0.719974, 0.88 ) }
    dend_1 { pt3dadd( 3.58199, 14.5747, -0.755391, 1.03 ) }
    dend_1 { pt3dadd( 4.19802, 15.3785, -0.742487, 1.25 ) }
    dend_1 { pt3dadd( 4.79752, 16.1597, -0.705966, 1.4 ) }
    dend_1 { pt3dadd( 5.63642, 17.2529, -0.654861, 1.62 ) }
    dend_1 { pt3dadd( 6.30863, 18.1289, -0.613911, 1.77 ) }
    dend_1 { pt3dadd( 6.61218, 18.514, -0.570256, 2.21 ) }
    dend_1 { pt3dadd( 7.09825, 19.1174, -0.483148, 2.36 ) }
    dend_1 { pt3dadd( 7.47118, 19.594, -0.394862, 2.73 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 51/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.6034, -37.6061, 0.0904597, 0.233668 ) }
    axon_1 { pt3dadd( 14.8144, -52.0028, 0.0904597, 0.233668 ) }
    axon_1 { pt3dadd( 19.0255, -66.3996, 0.0904597, 0.233668 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 33.647, -9.35981, -7.52378, 0.81 ) }
    dend_21 { pt3dadd( 35.0253, -9.201, -7.19292, 0.81 ) }
    dend_21 { pt3dadd( 36.2103, -9.01905, -7.05292, 0.96 ) }
    dend_21 { pt3dadd( 38.031, -8.74033, -6.98274, 0.88 ) }
    dend_21 { pt3dadd( 38.9064, -8.62606, -7.07208, 1.18 ) }
    dend_21 { pt3dadd( 39.5917, -8.55666, -7.1861, 1.18 ) }
    dend_21 { pt3dadd( 40.1656, -8.52978, -7.29716, 1.18 ) }
    dend_21 { pt3dadd( 41.2242, -8.48299, -7.56884, 1.11 ) }
    dend_21 { pt3dadd( 42.1472, -8.48293, -7.8514, 0.81 ) }
    dend_21 { pt3dadd( 43.6117, -8.56746, -8.43791, 0.66 ) }
    dend_21 { pt3dadd( 44.3001, -8.65605, -8.72704, 0.66 ) }
    dend_21 { pt3dadd( 45.1883, -8.81923, -9.11277, 0.66 ) }
    dend_21 { pt3dadd( 45.8401, -8.97452, -9.40141, 0.44 ) }
    dend_21 { pt3dadd( 46.6392, -9.19821, -9.73504, 1.03 ) }
    dend_21 { pt3dadd( 47.2209, -9.36133, -9.96985, 1.18 ) }
    dend_21 { pt3dadd( 47.8394, -9.51894, -10.1955, 1.18 ) }
    dend_21 { pt3dadd( 48.5117, -9.66027, -10.4563, 0.96 ) }
    dend_21 { pt3dadd( 49.0335, -9.75032, -10.6581, 0.66 ) }
    dend_21 { pt3dadd( 49.7098, -9.84429, -10.9065, 0.52 ) }
    dend_21 { pt3dadd( 50.4036, -9.87397, -11.1624, 0.81 ) }
    dend_21 { pt3dadd( 51.1894, -9.81549, -11.4285, 0.81 ) }
    dend_21 { pt3dadd( 51.8113, -9.71015, -11.618, 0.59 ) }
    dend_21 { pt3dadd( 52.5271, -9.54743, -11.8058, 0.44 ) }
    dend_21 { pt3dadd( 53.1567, -9.39531, -11.947, 0.37 ) }
    dend_21 { pt3dadd( 53.7302, -9.28314, -12.0612, 0.37 ) }
    dend_21 { pt3dadd( 54.357, -9.22082, -12.167, 0.74 ) }
    dend_21 { pt3dadd( 55.0339, -9.24894, -12.254, 0.74 ) }
    dend_21 { pt3dadd( 55.6088, -9.36556, -12.3244, 0.74 ) }
    dend_21 { pt3dadd( 56.2048, -9.61158, -12.4552, 0.59 ) }
    dend_21 { pt3dadd( 56.8558, -9.9871, -12.671, 0.59 ) }
    dend_21 { pt3dadd( 57.5755, -10.4581, -12.9108, 1.03 ) }
    dend_21 { pt3dadd( 58.1141, -10.8222, -13.0874, 1.25 ) }
    dend_21 { pt3dadd( 58.5529, -11.1222, -13.2262, 1.4 ) }
    dend_21 { pt3dadd( 59.7869, -11.9202, -13.5566, 0.88 ) }
    dend_21 { pt3dadd( 60.6941, -12.4143, -13.7322, 0.37 ) }
    dend_21 { pt3dadd( 61.6415, -12.7448, -13.9332, 0.29 ) }
    dend_21 { pt3dadd( 62.3937, -12.8832, -14.1348, 0.29 ) }
    dend_21 { pt3dadd( 62.8492, -12.9274, -14.3027, 0.29 ) }
    dend_21 { pt3dadd( 63.8649, -12.979, -14.7801, 0.52 ) }
    dend_21 { pt3dadd( 64.5108, -13.0356, -15.1304, 0.66 ) }
    dend_21 { pt3dadd( 66.1202, -13.2209, -16.2248, 1.84 ) }
    dend_21 { pt3dadd( 66.9553, -13.3072, -16.8597, 3.32 ) }
    dend_21 { pt3dadd( 67.9079, -13.3622, -17.6048, 3.68 ) }
    dend_21 { pt3dadd( 68.6333, -13.3611, -18.176, 3.54 ) }
    dend_21 { pt3dadd( 70.1639, -13.2735, -19.3972, 1.25 ) }
    dend_21 { pt3dadd( 71.6376, -13.0467, -20.5325, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_21 { pt3dadd( 72.4174, -12.8181, -21.08, 0.22 ) }
    dend_21 { pt3dadd( 73.3901, -12.3766, -21.7047, 1.4 ) }
    dend_21 { pt3dadd( 73.7745, -12.1467, -21.9329, 1.62 ) }
    dend_21 { pt3dadd( 74.1423, -11.8918, -22.142, 1.62 ) }
    dend_21 { pt3dadd( 75.5736, -10.7661, -22.96, 0.22 ) }
    dend_21 { pt3dadd( 76.544, -10.0203, -23.4991, 0.22 ) }
    dend_21 { pt3dadd( 77.4062, -9.40526, -24.001, 0.22 ) }
    dend_21 { pt3dadd( 78.378, -8.778, -24.5663, 1.4 ) }
    dend_21 { pt3dadd( 78.8195, -8.52616, -24.8094, 1.84 ) }
    dend_21 { pt3dadd( 79.3821, -8.26933, -25.0791, 2.06 ) }
    dend_21 { pt3dadd( 79.633, -8.18178, -25.1781, 2.28 ) }
    dend_21 { pt3dadd( 80.1761, -8.02896, -25.3733, 2.28 ) }
    dend_21 { pt3dadd( 82.0608, -7.58099, -26.0363, 0.22 ) }
    dend_21 { pt3dadd( 83.0673, -7.36628, -26.3715, 0.22 ) }
    dend_21 { pt3dadd( 84.3874, -7.09279, -26.7924, 0.22 ) }
    dend_21 { pt3dadd( 85.5056, -6.87311, -27.1262, 1.55 ) }
    dend_21 { pt3dadd( 86.1079, -6.76029, -27.2997, 1.77 ) }
    dend_21 { pt3dadd( 86.7733, -6.63318, -27.4775, 1.47 ) }
    dend_21 { pt3dadd( 87.3319, -6.50946, -27.6012, 0.81 ) }
    dend_21 { pt3dadd( 88.4056, -6.2359, -27.8042, 0.22 ) }
    dend_21 { pt3dadd( 89.1565, -6.02787, -27.9378, 0.88 ) }
    dend_21 { pt3dadd( 89.7287, -5.86007, -28.0316, 0.96 ) }
    dend_21 { pt3dadd( 92.5099, -5.00655, -28.4243, 0.22 ) }
    dend_21 { pt3dadd( 94.3559, -4.38125, -28.6452, 0.22 ) }
    dend_21 { pt3dadd( 95.4414, -3.97659, -28.7582, 1.33 ) }
    dend_21 { pt3dadd( 96.0362, -3.74172, -28.813, 1.99 ) }
    dend_21 { pt3dadd( 96.6568, -3.4732, -28.8626, 1.18 ) }
    dend_21 { pt3dadd( 97.3671, -3.14538, -28.9125, 0.29 ) }
    dend_21 { pt3dadd( 100.522, -1.59394, -29.1037, 0.22 ) }
    dend_21 { pt3dadd( 101.077, -1.31026, -29.1373, 0.59 ) }
    dend_21 { pt3dadd( 101.532, -1.07123, -29.171, 0.59 ) }
    dend_21 { pt3dadd( 103.108, -0.226128, -29.3068, 0.22 ) }
    dend_21 { pt3dadd( 104.572, 0.553981, -29.4051, 0.22 ) }
    dend_21 { pt3dadd( 105.848, 1.24338, -29.4729, 0.22 ) }
    dend_21 { pt3dadd( 107.07, 1.9038, -29.5178, 1.99 ) }
    dend_21 { pt3dadd( 107.636, 2.2092, -29.5328, 2.65 ) }
    dend_21 { pt3dadd( 108.246, 2.54382, -29.5415, 2.87 ) }
    dend_21 { pt3dadd( 109.849, 3.40208, -29.5438, 0.59 ) }
    dend_21 { pt3dadd( 110.794, 3.93337, -29.5422, 0.22 ) }
    dend_21 { pt3dadd( 111.52, 4.3235, -29.5688, 0.66 ) }
    dend_21 { pt3dadd( 111.939, 4.53884, -29.5971, 0.96 ) }
    dend_21 { pt3dadd( 112.4, 4.7715, -29.6394, 0.96 ) }
    dend_21 { pt3dadd( 112.893, 5.00413, -29.7032, 0.59 ) }
    dend_21 { pt3dadd( 114.909, 5.92787, -30.052, 0.22 ) }
    dend_21 { pt3dadd( 116.942, 6.81755, -30.3933, 0.22 ) }
    dend_21 { pt3dadd( 117.762, 7.14918, -30.5304, 0.66 ) }
    dend_21 { pt3dadd( 118.545, 7.43857, -30.6817, 0.66 ) }
    dend_21 { pt3dadd( 120.018, 7.94415, -30.9956, 0.22 ) }
    dend_21 { pt3dadd( 120.372, 8.05858, -31.0836, 0.96 ) }
    dend_21 { pt3dadd( 121.288, 8.31253, -31.3408, 1.18 ) }
    dend_21 { pt3dadd( 122.751, 8.67936, -31.8775, 0.22 ) }
    dend_21 { pt3dadd( 123.993, 8.96059, -32.4372, 0.96 ) }
    dend_21 { pt3dadd( 124.611, 9.0786, -32.7642, 1.33 ) }
    dend_21 { pt3dadd( 125.627, 9.24306, -33.3793, 1.25 ) }
    dend_21 { pt3dadd( 126.631, 9.33766, -34.022, 0.52 ) }
    dend_21 { pt3dadd( 127.991, 9.37543, -34.9446, 0.88 ) }
    dend_21 { pt3dadd( 128.46, 9.34076, -35.28, 1.55 ) }
    dend_21 { pt3dadd( 128.907, 9.25526, -35.5933, 1.77 ) }
    dend_21 { pt3dadd( 129.304, 9.12914, -35.8873, 1.77 ) }
    dend_21 { pt3dadd( 130.43, 8.60608, -36.7625, 0.66 ) }
    dend_21 { pt3dadd( 131.057, 8.19401, -37.2858, 0.52 ) }
    dend_21 { pt3dadd( 131.981, 7.42107, -38.0299, 0.37 ) }
    dend_21 { pt3dadd( 132.527, 6.87239, -38.4831, 1.03 ) }
    dend_21 { pt3dadd( 133.059, 6.22535, -38.9543, 1.92 ) }
    dend_21 { pt3dadd( 133.418, 5.70583, -39.2864, 1.92 ) }
    dend_21 { pt3dadd( 134.014, 4.66993, -39.8512, 0.22 ) }
    dend_21 { pt3dadd( 134.403, 3.92356, -40.2037, 0.22 ) }
    dend_21 { pt3dadd( 134.642, 3.47076, -40.3842, 0.74 ) }
    dend_21 { pt3dadd( 134.972, 2.92684, -40.5934, 0.74 ) }
    dend_21 { pt3dadd( 135.424, 2.31856, -40.8299, 0.22 ) }
    dend_21 { pt3dadd( 135.718, 2.01256, -40.9761, 0.52 ) }
    dend_21 { pt3dadd( 136.112, 1.72293, -41.161, 0.52 ) }
    dend_21 { pt3dadd( 137.352, 1.15296, -41.7138, 0.22 ) }
    dend_21 { pt3dadd( 138.145, 0.965222, -42.0318, 1.18 ) }
    dend_21 { pt3dadd( 138.56, 0.932962, -42.1761, 1.4 ) }
    dend_21 { pt3dadd( 139.202, 0.951442, -42.3912, 1.47 ) }
    dend_21 { pt3dadd( 140.085, 1.03791, -42.6798, 0.81 ) }
    dend_21 { pt3dadd( 141.316, 1.26326, -43.0927, 0.22 ) }
    dend_21 { pt3dadd( 141.796, 1.38401, -43.302, 0.22 ) }
    dend_21 { pt3dadd( 142.382, 1.5053, -43.6228, 0.81 ) }
    dend_21 { pt3dadd( 142.987, 1.59931, -43.9895, 1.03 ) }
    dend_21 { pt3dadd( 143.284, 1.63475, -44.1922, 1.03 ) }
    dend_21 { pt3dadd( 144.231, 1.73695, -44.9123, 0.44 ) }
    dend_21 { pt3dadd( 145.397, 1.91729, -45.8164, 0.81 ) }
    dend_21 { pt3dadd( 146.102, 2.08296, -46.3689, 0.37 ) }
    dend_21 { pt3dadd( 147.081, 2.36645, -47.0764, 1.99 ) }
    dend_21 { pt3dadd( 147.731, 2.56588, -47.4773, 1.99 ) }
    dend_21 { pt3dadd( 148.219, 2.71982, -47.7563, 1.4 ) }
    dend_21 { pt3dadd( 149.29, 3.07601, -48.3377, 0.29 ) }
    dend_21 { pt3dadd( 149.91, 3.29761, -48.6569, 0.22 ) }
    dend_21 { pt3dadd( 150.81, 3.65919, -49.1709, 0.22 ) }
    dend_21 { pt3dadd( 152.044, 4.19596, -49.9383, 1.4 ) }
    dend_21 { pt3dadd( 152.758, 4.50097, -50.3783, 1.99 ) }
    dend_21 { pt3dadd( 153.42, 4.75471, -50.7909, 2.06 ) }
    dend_21 { pt3dadd( 153.812, 4.8871, -51.0287, 2.06 ) }
    dend_21 { pt3dadd( 154.759, 5.20422, -51.5509, 0.44 ) }
    dend_21 { pt3dadd( 155.516, 5.44902, -51.9359, 0.22 ) }
    dend_21 { pt3dadd( 156.116, 5.5991, -52.1697, 0.66 ) }
    dend_21 { pt3dadd( 156.897, 5.70423, -52.3944, 0.66 ) }
    dend_21 { pt3dadd( 157.555, 5.70907, -52.5497, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_21 { pt3dadd( 158.202, 5.65637, -52.6822, 0.66 ) }
    dend_21 { pt3dadd( 158.655, 5.58772, -52.7641, 1.11 ) }
    dend_21 { pt3dadd( 159.205, 5.49837, -52.8729, 1.11 ) }
    dend_21 { pt3dadd( 159.785, 5.42932, -52.9934, 1.11 ) }
    dend_21 { pt3dadd( 160.309, 5.39292, -53.1026, 0.88 ) }
    dend_21 { pt3dadd( 161.109, 5.37658, -53.2689, 0.22 ) }
    dend_21 { pt3dadd( 161.836, 5.38641, -53.4091, 0.96 ) }
    dend_21 { pt3dadd( 162.337, 5.40573, -53.4938, 1.11 ) }
    dend_21 { pt3dadd( 162.778, 5.428, -53.5571, 1.11 ) }
    dend_21 { pt3dadd( 163.302, 5.45181, -53.6168, 0.81 ) }
    dend_21 { pt3dadd( 164.711, 5.48089, -53.7466, 0.15 ) }
    dend_21 { pt3dadd( 165.816, 5.41766, -53.8424, 0.15 ) }
    dend_21 { pt3dadd( 166.697, 5.30118, -53.9388, 0.74 ) }
    dend_21 { pt3dadd( 167.207, 5.20919, -53.9988, 0.81 ) }
    dend_21 { pt3dadd( 167.714, 5.10035, -54.0676, 0.81 ) }
    dend_21 { pt3dadd( 168.909, 4.80983, -54.2719, 0.22 ) }
    dend_21 { pt3dadd( 170.824, 4.28298, -54.6637, 0.22 ) }
    dend_21 { pt3dadd( 172.205, 3.85943, -54.9804, 0.66 ) }
    dend_21 { pt3dadd( 173.042, 3.56183, -55.188, 0.66 ) }
    dend_21 { pt3dadd( 173.844, 3.23226, -55.4029, 0.66 ) }
    dend_21 { pt3dadd( 174.617, 2.8266, -55.6381, 0.37 ) }
    dend_21 { pt3dadd( 175.131, 2.4351, -55.8181, 0.22 ) }
    dend_21 { pt3dadd( 175.504, 2.01791, -55.9615, 0.37 ) }
    dend_21 { pt3dadd( 175.981, 1.26979, -56.14, 0.15 ) }
    dend_21 { pt3dadd( 176.232, 0.776871, -56.2397, 0.29 ) }
    dend_21 { pt3dadd( 176.736, -0.466617, -56.4282, 0.22 ) }
    dend_21 { pt3dadd( 177.11, -1.62717, -56.5575, 0.22 ) }
    dend_21 { pt3dadd( 177.224, -2.07213, -56.6076, 0.37 ) }
    dend_21 { pt3dadd( 177.331, -2.56491, -56.667, 0.37 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 29/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 33.647, -9.35981, -7.52378, 0.29 ) }
    dend_18 { pt3dadd( 32.2462, -7.29025, -9.66187, 0.29 ) }
    dend_18 { pt3dadd( 31.9584, -6.81559, -10.0987, 0.29 ) }
    dend_18 { pt3dadd( 31.6171, -6.16777, -10.6907, 0.74 ) }
    dend_18 { pt3dadd( 31.4608, -5.82022, -11.0385, 0.74 ) }
    dend_18 { pt3dadd( 31.3132, -5.39607, -11.5262, 0.52 ) }
    dend_18 { pt3dadd( 31.1786, -4.93053, -12.1005, 1.18 ) }
    dend_18 { pt3dadd( 31.1242, -4.43937, -12.7376, 1.18 ) }
    dend_18 { pt3dadd( 31.1419, -3.9221, -13.4659, 0.88 ) }
    dend_18 { pt3dadd( 31.2226, -3.29345, -14.3314, 0.96 ) }
    dend_18 { pt3dadd( 31.3241, -2.61025, -15.2386, 0.74 ) }
    dend_18 { pt3dadd( 31.3437, -2.47777, -15.3979, 1.4 ) }
    dend_18 { pt3dadd( 31.4144, -1.81723, -16.0383, 1.55 ) }
    dend_18 { pt3dadd( 31.4425, -0.997127, -16.6903, 0.59 ) }
    dend_18 { pt3dadd( 31.4351, -0.364553, -17.1336, 0.44 ) }
    dend_18 { pt3dadd( 31.4049, 0.442723, -17.687, 0.29 ) }
    dend_18 { pt3dadd( 31.3676, 1.05961, -18.0481, 0.29 ) }
    dend_18 { pt3dadd( 31.3141, 2.30125, -18.7217, 1.62 ) }
    dend_18 { pt3dadd( 31.2985, 3.0051, -19.1319, 1.84 ) }
    dend_18 { pt3dadd( 31.2557, 4.50919, -20.0144, 0.59 ) }
    dend_18 { pt3dadd( 31.2242, 5.2671, -20.4665, 0.59 ) }
    dend_18 { pt3dadd( 31.15, 6.81824, -21.435, 0.22 ) }
    dend_18 { pt3dadd( 31.0558, 8.8119, -22.7219, 0.22 ) }
    dend_18 { pt3dadd( 30.9596, 11.0035, -24.1516, 0.22 ) }
    dend_18 { pt3dadd( 30.91, 12.3499, -24.9849, 1.77 ) }
    dend_18 { pt3dadd( 30.8745, 13.1012, -25.4377, 2.36 ) }
    dend_18 { pt3dadd( 30.8209, 14.2066, -26.1439, 2.58 ) }
    dend_18 { pt3dadd( 30.8095, 14.4545, -26.3415, 2.58 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 57/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.78819, -49.4966, 2.1597, 0.52 ) }
    dend_14 { pt3dadd( -1.84347, -50.9048, 0.928683, 0.52 ) }
    dend_14 { pt3dadd( -1.5002, -51.3878, 0.533942, 0.52 ) }
    dend_14 { pt3dadd( -1.08487, -51.986, 0.0769877, 0.74 ) }
    dend_14 { pt3dadd( -0.502929, -52.8521, -0.54583, 0.88 ) }
    dend_14 { pt3dadd( -0.168728, -53.36, -0.902876, 0.88 ) }
    dend_14 { pt3dadd( 0.155798, -53.8608, -1.23228, 0.88 ) }
    dend_14 { pt3dadd( 0.617004, -54.5333, -1.61192, 0.44 ) }
    dend_14 { pt3dadd( 0.934795, -54.9863, -1.84897, 0.44 ) }
    dend_14 { pt3dadd( 1.25557, -55.4098, -2.06768, 0.81 ) }
    dend_14 { pt3dadd( 1.56682, -55.7595, -2.25917, 0.96 ) }
    dend_14 { pt3dadd( 2.19334, -56.4102, -2.62141, 0.96 ) }
    dend_14 { pt3dadd( 2.98775, -57.2359, -3.0522, 0.44 ) }
    dend_14 { pt3dadd( 3.63105, -57.9251, -3.39508, 0.44 ) }
    dend_14 { pt3dadd( 4.3396, -58.7392, -3.76722, 0.66 ) }
    dend_14 { pt3dadd( 5.00312, -59.5383, -4.13165, 0.66 ) }
    dend_14 { pt3dadd( 5.67873, -60.3543, -4.45566, 0.52 ) }
    dend_14 { pt3dadd( 6.34067, -61.1819, -4.7676, 0.81 ) }
    dend_14 { pt3dadd( 6.97804, -62.0224, -5.0749, 0.81 ) }
    dend_14 { pt3dadd( 7.90895, -63.3166, -5.49956, 0.52 ) }
    dend_14 { pt3dadd( 8.44078, -64.1141, -5.74815, 0.52 ) }
    dend_14 { pt3dadd( 9.28287, -65.4343, -6.14903, 0.52 ) }
    dend_14 { pt3dadd( 9.76216, -66.1486, -6.36119, 1.47 ) }
    dend_14 { pt3dadd( 10.196, -66.7918, -6.54962, 1.92 ) }
    dend_14 { pt3dadd( 10.7221, -67.6333, -6.75914, 2.58 ) }
    dend_14 { pt3dadd( 11.0683, -68.2761, -6.88894, 2.58 ) }
    dend_14 { pt3dadd( 11.5794, -69.4107, -7.07396, 0.96 ) }
    dend_14 { pt3dadd( 11.956, -70.445, -7.24544, 0.52 ) }
    dend_14 { pt3dadd( 12.2712, -71.437, -7.37903, 0.88 ) }
    dend_14 { pt3dadd( 12.5643, -72.5443, -7.50821, 0.88 ) }
    dend_14 { pt3dadd( 12.8049, -73.665, -7.64285, 0.88 ) }
    dend_14 { pt3dadd( 12.9379, -74.4239, -7.7243, 0.74 ) }
    dend_14 { pt3dadd( 13.0881, -75.5764, -7.86506, 0.74 ) }
    dend_14 { pt3dadd( 13.1869, -76.6181, -8.05709, 1.11 ) }
    dend_14 { pt3dadd( 13.2656, -77.4912, -8.25488, 1.11 ) }
    dend_14 { pt3dadd( 13.3375, -78.3119, -8.46831, 0.81 ) }
    dend_14 { pt3dadd( 13.3925, -78.9303, -8.6397, 0.81 ) }
    dend_14 { pt3dadd( 13.5097, -80.1439, -8.99311, 0.74 ) }
    dend_14 { pt3dadd( 13.6925, -81.8221, -9.48339, 0.59 ) }
    dend_14 { pt3dadd( 13.8988, -83.44, -9.95884, 0.44 ) }
    dend_14 { pt3dadd( 14.102, -84.9738, -10.4149, 1.77 ) }
    dend_14 { pt3dadd( 14.1605, -85.4592, -10.5549, 2.14 ) }
    dend_14 { pt3dadd( 14.2621, -86.5459, -10.8465, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 14.3476, -88.0192, -11.2163, 0.22 ) }
    dend_14 { pt3dadd( 14.3669, -89.1032, -11.4681, 0.22 ) }
    dend_14 { pt3dadd( 14.3503, -90.1258, -11.7418, 0.96 ) }
    dend_14 { pt3dadd( 14.3247, -90.8906, -11.9626, 1.18 ) }
    dend_14 { pt3dadd( 14.2848, -91.7846, -12.21, 0.96 ) }
    dend_14 { pt3dadd( 14.2114, -93.0755, -12.5407, 0.22 ) }
    dend_14 { pt3dadd( 14.1393, -94.0111, -12.761, 0.59 ) }
    dend_14 { pt3dadd( 14.1107, -94.4589, -12.852, 0.59 ) }
    dend_14 { pt3dadd( 14.0886, -95.2853, -12.9963, 0.22 ) }
    dend_14 { pt3dadd( 14.1061, -96.5388, -13.1905, 0.29 ) }
    dend_14 { pt3dadd( 14.1316, -97.1638, -13.2662, 0.29 ) }
    dend_14 { pt3dadd( 14.1804, -98.0008, -13.2945, 1.84 ) }
    dend_14 { pt3dadd( 14.2394, -98.806, -13.2943, 2.5 ) }
    dend_14 { pt3dadd( 14.265, -99.1437, -13.2891, 2.73 ) }
    dend_14 { pt3dadd( 14.3029, -99.6504, -13.278, 2.65 ) }
    dend_14 { pt3dadd( 14.3935, -100.755, -13.2502, 1.77 ) }
    dend_14 { pt3dadd( 14.5923, -102.861, -13.1934, 0.22 ) }
    dend_14 { pt3dadd( 14.8268, -105.044, -13.1303, 0.22 ) }
    dend_14 { pt3dadd( 14.9344, -106.007, -13.1057, 0.52 ) }
    dend_14 { pt3dadd( 15.0277, -106.697, -13.0899, 0.66 ) }
    dend_14 { pt3dadd( 15.1706, -107.524, -13.0824, 0.29 ) }
    dend_14 { pt3dadd( 15.3969, -108.541, -13.0987, 1.47 ) }
    dend_14 { pt3dadd( 15.5447, -109.079, -13.1306, 2.14 ) }
    dend_14 { pt3dadd( 15.7174, -109.589, -13.1599, 2.21 ) }
    dend_14 { pt3dadd( 16.0354, -110.445, -13.2122, 1.55 ) }
    dend_14 { pt3dadd( 16.6313, -112.028, -13.3096, 0.22 ) }
    dend_14 { pt3dadd( 16.7896, -112.482, -13.3454, 0.52 ) }
    dend_14 { pt3dadd( 16.9294, -112.934, -13.3854, 0.52 ) }
    dend_14 { pt3dadd( 17.4194, -114.769, -13.5466, 0.22 ) }
    dend_14 { pt3dadd( 17.5279, -115.225, -13.5892, 0.66 ) }
    dend_14 { pt3dadd( 17.6269, -115.767, -13.6453, 0.66 ) }
    dend_14 { pt3dadd( 17.9304, -117.937, -13.9012, 0.22 ) }
    dend_14 { pt3dadd( 18.1547, -119.988, -14.1861, 0.22 ) }
    dend_14 { pt3dadd( 18.2441, -121.082, -14.3757, 0.81 ) }
    dend_14 { pt3dadd( 18.2737, -121.635, -14.4997, 1.03 ) }
    dend_14 { pt3dadd( 18.3334, -122.683, -14.8278, 0.22 ) }
    dend_14 { pt3dadd( 18.3974, -123.464, -15.1503, 0.22 ) }
    dend_14 { pt3dadd( 18.5291, -124.378, -15.6116, 1.47 ) }
    dend_14 { pt3dadd( 18.7018, -125.071, -15.9922, 2.28 ) }
    dend_14 { pt3dadd( 18.898, -125.623, -16.2911, 2.28 ) }
    dend_14 { pt3dadd( 19.9601, -128.025, -17.5521, 0.22 ) }
    dend_14 { pt3dadd( 20.5069, -129.143, -18.0729, 0.22 ) }
    dend_14 { pt3dadd( 21.145, -130.42, -18.5893, 0.22 ) }
    dend_14 { pt3dadd( 21.8283, -131.792, -19.0489, 0.22 ) }
    dend_14 { pt3dadd( 22.2811, -132.72, -19.2976, 2.28 ) }
    dend_14 { pt3dadd( 22.6782, -133.572, -19.464, 2.5 ) }
    dend_14 { pt3dadd( 23.6536, -135.849, -19.7067, 0.29 ) }
    dend_14 { pt3dadd( 23.8348, -136.398, -19.7616, 0.29 ) }
    dend_14 { pt3dadd( 24.0651, -137.429, -19.8843, 1.55 ) }
    dend_14 { pt3dadd( 24.1361, -137.925, -19.9522, 2.06 ) }
    dend_14 { pt3dadd( 24.2041, -138.619, -20.0811, 1.69 ) }
    dend_14 { pt3dadd( 24.2562, -139.369, -20.253, 0.88 ) }
    dend_14 { pt3dadd( 24.3306, -141.45, -20.8347, 0.22 ) }
    dend_14 { pt3dadd( 24.3354, -142.005, -20.9984, 0.66 ) }
    dend_14 { pt3dadd( 24.3266, -142.56, -21.1659, 0.66 ) }
    dend_14 { pt3dadd( 24.2556, -144.614, -21.7961, 0.22 ) }
    dend_14 { pt3dadd( 24.1802, -146.115, -22.2557, 0.22 ) }
    dend_14 { pt3dadd( 24.1109, -147.174, -22.5795, 0.22 ) }
    dend_14 { pt3dadd( 24.0577, -147.718, -22.7229, 0.44 ) }
    dend_14 { pt3dadd( 23.9615, -148.453, -22.9136, 0.44 ) }
    dend_14 { pt3dadd( 23.7693, -149.559, -23.177, 1.11 ) }
    dend_14 { pt3dadd( 23.6828, -149.952, -23.263, 1.55 ) }
    dend_14 { pt3dadd( 23.4965, -150.663, -23.4316, 1.69 ) }
    dend_14 { pt3dadd( 22.8813, -152.83, -24.0117, 0.15 ) }
    dend_14 { pt3dadd( 22.07, -155.473, -24.7677, 0.15 ) }
    dend_14 { pt3dadd( 21.5972, -156.93, -25.2064, 2.5 ) }
    dend_14 { pt3dadd( 21.4023, -157.517, -25.3881, 2.5 ) }
    dend_14 { pt3dadd( 20.8511, -159.191, -25.9324, 0.15 ) }
    dend_14 { pt3dadd( 20.6698, -159.795, -26.1443, 0.15 ) }
    dend_14 { pt3dadd( 20.5465, -160.311, -26.3524, 0.66 ) }
    dend_14 { pt3dadd( 20.4866, -160.753, -26.5262, 0.88 ) }
    dend_14 { pt3dadd( 20.4666, -161.301, -26.7329, 0.88 ) }
    dend_14 { pt3dadd( 20.4746, -161.792, -26.8792, 0.52 ) }
    dend_14 { pt3dadd( 20.4942, -163.299, -27.1571, 0.22 ) }
    dend_14 { pt3dadd( 20.4546, -164.209, -27.2593, 0.22 ) }
    dend_14 { pt3dadd( 20.3773, -165.041, -27.331, 0.96 ) }
    dend_14 { pt3dadd( 20.3223, -165.447, -27.3624, 1.11 ) }
    dend_14 { pt3dadd( 20.0697, -166.892, -27.4777, 0.22 ) }
    dend_14 { pt3dadd( 19.2415, -170.411, -27.7911, 0.22 ) }
    dend_14 { pt3dadd( 18.1476, -173.648, -28.0843, 0.22 ) }
    dend_14 { pt3dadd( 17.7294, -174.615, -28.1797, 1.47 ) }
    dend_14 { pt3dadd( 17.3312, -175.398, -28.2653, 1.62 ) }
    dend_14 { pt3dadd( 16.4554, -176.874, -28.4394, 0.22 ) }
    dend_14 { pt3dadd( 14.7945, -179.223, -28.7424, 0.22 ) }
    dend_14 { pt3dadd( 12.5051, -181.879, -29.1242, 0.22 ) }
    dend_14 { pt3dadd( 11.1749, -183.23, -29.3383, 0.88 ) }
    dend_14 { pt3dadd( 10.7578, -183.631, -29.3993, 0.88 ) }
    dend_14 { pt3dadd( 9.48687, -184.749, -29.5283, 0.22 ) }
    dend_14 { pt3dadd( 8.90672, -185.202, -29.5697, 0.88 ) }
    dend_14 { pt3dadd( 8.49768, -185.492, -29.5957, 0.88 ) }
    dend_14 { pt3dadd( 6.54639, -186.782, -29.7504, 0.22 ) }
    dend_14 { pt3dadd( 5.36617, -187.498, -29.8501, 0.22 ) }
    dend_14 { pt3dadd( 4.10221, -188.165, -29.9653, 1.55 ) }
    dend_14 { pt3dadd( 3.64378, -188.366, -30.0115, 2.06 ) }
    dend_14 { pt3dadd( 2.79496, -188.685, -30.1012, 2.06 ) }
    dend_14 { pt3dadd( 2.53989, -188.749, -30.1366, 2.06 ) }
    dend_14 { pt3dadd( 1.36611, -188.868, -30.3385, 0.22 ) }
    dend_14 { pt3dadd( 0.0936669, -188.895, -30.6049, 0.22 ) }
    dend_14 { pt3dadd( -0.640084, -188.878, -30.7787, 0.74 ) }
    dend_14 { pt3dadd( -1.07023, -188.85, -30.875, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_14 { pt3dadd( -3.06093, -188.602, -31.3274, 0.15 ) }
    dend_14 { pt3dadd( -3.63714, -188.511, -31.4681, 0.52 ) }
    dend_14 { pt3dadd( -3.98881, -188.439, -31.5635, 0.52 ) }
    dend_14 { pt3dadd( -4.96279, -188.195, -31.8498, 0.22 ) }
    dend_14 { pt3dadd( -5.5195, -188.051, -32.0428, 0.66 ) }
    dend_14 { pt3dadd( -6.19132, -187.884, -32.2893, 0.66 ) }
    dend_14 { pt3dadd( -6.96451, -187.697, -32.5815, 0.22 ) }
    dend_14 { pt3dadd( -7.52842, -187.561, -32.8075, 1.18 ) }
    dend_14 { pt3dadd( -8.05801, -187.434, -33.0299, 1.33 ) }
    dend_14 { pt3dadd( -9.81933, -187.022, -33.804, 0.22 ) }
    dend_14 { pt3dadd( -10.415, -186.904, -34.0669, 0.96 ) }
    dend_14 { pt3dadd( -11.0101, -186.807, -34.323, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 12/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.78819, -49.4966, 2.1597, 1.4 ) }
    dend_11 { pt3dadd( -2.94804, -49.8816, 2.11013, 1.4 ) }
    dend_11 { pt3dadd( -3.44094, -51.2426, 1.94322, 0.66 ) }
    dend_11 { pt3dadd( -3.76122, -52.2152, 1.83251, 0.66 ) }
    dend_11 { pt3dadd( -4.06164, -53.2235, 1.72301, 0.66 ) }
    dend_11 { pt3dadd( -4.2844, -54.033, 1.67591, 0.59 ) }
    dend_11 { pt3dadd( -4.54668, -54.986, 1.62045, 0.59 ) }
    dend_11 { pt3dadd( -4.74461, -55.808, 1.58896, 0.59 ) }
    dend_11 { pt3dadd( -4.87673, -56.4934, 1.59383, 0.96 ) }
    dend_11 { pt3dadd( -4.98157, -57.1828, 1.60573, 1.18 ) }
    dend_11 { pt3dadd( -5.1158, -58.3126, 1.64865, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 23/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 7.47118, 19.594, -0.394862, 1.4 ) }
    dend_3 { pt3dadd( 8.14336, 19.8228, -0.103859, 1.4 ) }
    dend_3 { pt3dadd( 9.73832, 20.3297, 0.627112, 1.11 ) }
    dend_3 { pt3dadd( 10.3645, 20.5464, 0.927638, 0.81 ) }
    dend_3 { pt3dadd( 11.1251, 20.8502, 1.29296, 1.11 ) }
    dend_3 { pt3dadd( 11.9841, 21.2404, 1.69591, 0.74 ) }
    dend_3 { pt3dadd( 12.3254, 21.4125, 1.85268, 0.74 ) }
    dend_3 { pt3dadd( 13.0925, 21.813, 2.17511, 0.66 ) }
    dend_3 { pt3dadd( 13.6173, 22.0947, 2.36902, 0.66 ) }
    dend_3 { pt3dadd( 14.3002, 22.5125, 2.63378, 0.74 ) }
    dend_3 { pt3dadd( 14.8576, 22.9127, 2.85069, 0.74 ) }
    dend_3 { pt3dadd( 15.3667, 23.344, 3.05415, 0.59 ) }
    dend_3 { pt3dadd( 16.0973, 23.9896, 3.32556, 0.59 ) }
    dend_3 { pt3dadd( 16.9098, 24.688, 3.59882, 0.74 ) }
    dend_3 { pt3dadd( 17.4855, 25.1446, 3.78444, 0.74 ) }
    dend_3 { pt3dadd( 18.1444, 25.6244, 3.99394, 0.74 ) }
    dend_3 { pt3dadd( 18.8397, 26.1014, 4.23516, 0.44 ) }
    dend_3 { pt3dadd( 19.5334, 26.5533, 4.47692, 0.44 ) }
    dend_3 { pt3dadd( 20.182, 26.973, 4.7021, 0.81 ) }
    dend_3 { pt3dadd( 20.7394, 27.311, 4.87963, 1.11 ) }
    dend_3 { pt3dadd( 21.5508, 27.7882, 5.13271, 1.11 ) }
    dend_3 { pt3dadd( 22.3488, 28.2833, 5.3756, 0.88 ) }
    dend_3 { pt3dadd( 23.0184, 28.7411, 5.59729, 0.88 ) }
    dend_3 { pt3dadd( 23.6185, 29.2542, 5.84138, 0.74 ) }
    dend_3 { pt3dadd( 24.1746, 29.8258, 6.10938, 0.74 ) }
    dend_3 { pt3dadd( 24.7275, 30.4639, 6.37408, 0.59 ) }
    dend_3 { pt3dadd( 25.1607, 31.0084, 6.55261, 0.44 ) }
    dend_3 { pt3dadd( 25.5435, 31.5312, 6.69511, 0.44 ) }
    dend_3 { pt3dadd( 26.0125, 32.2574, 6.90166, 0.44 ) }
    dend_3 { pt3dadd( 26.4751, 33.0435, 7.12935, 0.44 ) }
    dend_3 { pt3dadd( 26.952, 33.8979, 7.39217, 0.44 ) }
    dend_3 { pt3dadd( 27.3311, 34.5804, 7.61471, 0.59 ) }
    dend_3 { pt3dadd( 27.8718, 35.4483, 7.92424, 0.81 ) }
    dend_3 { pt3dadd( 28.2769, 36.0148, 8.14651, 1.25 ) }
    dend_3 { pt3dadd( 28.6265, 36.4533, 8.34587, 1.25 ) }
    dend_3 { pt3dadd( 29.2618, 37.244, 8.78823, 0.74 ) }
    dend_3 { pt3dadd( 29.7067, 37.7862, 9.15319, 0.52 ) }
    dend_3 { pt3dadd( 30.0943, 38.2169, 9.45504, 0.74 ) }
    dend_3 { pt3dadd( 30.545, 38.625, 9.72785, 0.74 ) }
    dend_3 { pt3dadd( 30.8777, 38.9312, 9.88367, 0.74 ) }
    dend_3 { pt3dadd( 31.2823, 39.4261, 10.0357, 0.44 ) }
    dend_3 { pt3dadd( 31.5854, 40.0111, 10.1333, 0.44 ) }
    dend_3 { pt3dadd( 31.8103, 40.6877, 10.2202, 0.44 ) }
    dend_3 { pt3dadd( 31.9347, 41.2406, 10.2891, 0.44 ) }
    dend_3 { pt3dadd( 32.1224, 42.3528, 10.4275, 0.81 ) }
    dend_3 { pt3dadd( 32.2787, 43.3423, 10.5603, 0.81 ) }
    dend_3 { pt3dadd( 32.4161, 44.1286, 10.6812, 1.03 ) }
    dend_3 { pt3dadd( 32.5885, 44.7751, 10.7972, 0.74 ) }
    dend_3 { pt3dadd( 32.8206, 45.3876, 10.9229, 0.52 ) }
    dend_3 { pt3dadd( 33.1551, 46.0049, 11.056, 0.52 ) }
    dend_3 { pt3dadd( 33.4617, 46.3649, 11.1355, 0.88 ) }
    dend_3 { pt3dadd( 33.7744, 46.6537, 11.2065, 0.88 ) }
    dend_3 { pt3dadd( 34.5538, 47.3199, 11.3819, 0.37 ) }
    dend_3 { pt3dadd( 35.156, 47.8337, 11.5484, 0.37 ) }
    dend_3 { pt3dadd( 35.6664, 48.3009, 11.7366, 0.37 ) }
    dend_3 { pt3dadd( 36.0258, 48.649, 11.8963, 0.37 ) }
    dend_3 { pt3dadd( 36.6047, 49.4037, 12.2771, 0.66 ) }
    dend_3 { pt3dadd( 36.7903, 49.8621, 12.5343, 1.03 ) }
    dend_3 { pt3dadd( 36.7519, 50.3348, 12.8482, 1.25 ) }
    dend_3 { pt3dadd( 36.68, 50.5365, 12.992, 1.25 ) }
    dend_3 { pt3dadd( 42.4128, 57.7941, 15.9537, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 84/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.47118, 19.594, -0.394862, 0.81 ) }
    dend_2 { pt3dadd( 7.14584, 21.3809, -0.0723372, 0.81 ) }
    dend_2 { pt3dadd( 7.02635, 22.1533, 0.0747877, 0.81 ) }
    dend_2 { pt3dadd( 6.92178, 22.8815, 0.223162, 0.81 ) }
    dend_2 { pt3dadd( 6.70971, 24.3128, 0.522672, 0.74 ) }
    dend_2 { pt3dadd( 6.54911, 25.252, 0.756235, 0.74 ) }
    dend_2 { pt3dadd( 6.41553, 26.1202, 0.992442, 0.81 ) }
    dend_2 { pt3dadd( 6.37907, 26.6215, 1.15575, 0.81 ) }
    dend_2 { pt3dadd( 6.39744, 27.3443, 1.39363, 0.52 ) }
    dend_2 { pt3dadd( 6.45554, 27.829, 1.54614, 0.52 ) }
    dend_2 { pt3dadd( 6.68427, 28.812, 1.816, 0.44 ) }
    dend_2 { pt3dadd( 6.94491, 29.4817, 1.92069, 0.37 ) }
    dend_2 { pt3dadd( 7.1872, 29.9209, 1.92862, 0.37 ) }
    dend_2 { pt3dadd( 7.92835, 31.0296, 1.80569, 1.25 ) }
    dend_2 { pt3dadd( 8.33896, 31.5973, 1.67549, 1.69 ) }
    dend_2 { pt3dadd( 8.72314, 32.124, 1.51583, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( 9.6139, 33.3731, 1.06376, 0.88 ) }
    dend_2 { pt3dadd( 10.1064, 34.1289, 0.774151, 0.37 ) }
    dend_2 { pt3dadd( 10.5318, 34.8177, 0.487986, 0.37 ) }
    dend_2 { pt3dadd( 10.8189, 35.2932, 0.275535, 0.37 ) }
    dend_2 { pt3dadd( 11.2705, 36.1398, -0.0799551, 0.81 ) }
    dend_2 { pt3dadd( 11.5195, 36.6493, -0.271759, 1.03 ) }
    dend_2 { pt3dadd( 11.7428, 37.1138, -0.404246, 1.18 ) }
    dend_2 { pt3dadd( 11.9562, 37.5308, -0.520742, 1.18 ) }
    dend_2 { pt3dadd( 12.2628, 38.092, -0.667809, 0.59 ) }
    dend_2 { pt3dadd( 12.7238, 38.8692, -0.887568, 0.29 ) }
    dend_2 { pt3dadd( 13.0278, 39.385, -1.08564, 0.29 ) }
    dend_2 { pt3dadd( 13.6058, 40.3891, -1.52285, 0.29 ) }
    dend_2 { pt3dadd( 14.1511, 41.3759, -1.97453, 0.66 ) }
    dend_2 { pt3dadd( 14.4633, 41.958, -2.26183, 0.66 ) }
    dend_2 { pt3dadd( 14.8338, 42.6875, -2.63676, 1.25 ) }
    dend_2 { pt3dadd( 15.537, 44.1786, -3.37007, 2.36 ) }
    dend_2 { pt3dadd( 15.7255, 44.6281, -3.57268, 2.58 ) }
    dend_2 { pt3dadd( 16.0429, 45.4746, -3.92311, 1.99 ) }
    dend_2 { pt3dadd( 16.3729, 46.4643, -4.25584, 0.88 ) }
    dend_2 { pt3dadd( 16.7653, 47.8091, -4.57137, 0.29 ) }
    dend_2 { pt3dadd( 17.134, 49.2139, -4.76333, 0.81 ) }
    dend_2 { pt3dadd( 17.3231, 49.9824, -4.81069, 0.81 ) }
    dend_2 { pt3dadd( 17.432, 50.4571, -4.82612, 0.44 ) }
    dend_2 { pt3dadd( 17.6561, 51.5133, -4.82655, 0.22 ) }
    dend_2 { pt3dadd( 18.0393, 53.424, -4.77862, 0.22 ) }
    dend_2 { pt3dadd( 18.2816, 54.6023, -4.76284, 1.25 ) }
    dend_2 { pt3dadd( 18.386, 55.0805, -4.77111, 1.69 ) }
    dend_2 { pt3dadd( 18.4797, 55.4901, -4.79382, 1.69 ) }
    dend_2 { pt3dadd( 18.6521, 56.1632, -4.85329, 0.96 ) }
    dend_2 { pt3dadd( 18.8493, 56.8732, -4.94108, 0.52 ) }
    dend_2 { pt3dadd( 19.2234, 58.0557, -5.11633, 0.29 ) }
    dend_2 { pt3dadd( 19.5892, 59.132, -5.28019, 0.29 ) }
    dend_2 { pt3dadd( 20.0004, 60.281, -5.4735, 0.29 ) }
    dend_2 { pt3dadd( 20.2719, 61.0046, -5.61858, 0.81 ) }
    dend_2 { pt3dadd( 20.4449, 61.4509, -5.7236, 0.81 ) }
    dend_2 { pt3dadd( 20.9637, 62.7439, -6.06948, 0.22 ) }
    dend_2 { pt3dadd( 21.469, 63.9206, -6.42928, 0.22 ) }
    dend_2 { pt3dadd( 21.9749, 65.0276, -6.79929, 1.69 ) }
    dend_2 { pt3dadd( 22.3208, 65.7614, -7.05821, 2.43 ) }
    dend_2 { pt3dadd( 22.5939, 66.3471, -7.266, 2.28 ) }
    dend_2 { pt3dadd( 22.9908, 67.1816, -7.55146, 0.96 ) }
    dend_2 { pt3dadd( 23.5402, 68.3374, -7.91644, 0.22 ) }
    dend_2 { pt3dadd( 23.8555, 68.995, -8.10071, 0.66 ) }
    dend_2 { pt3dadd( 24.0401, 69.372, -8.18848, 0.66 ) }
    dend_2 { pt3dadd( 24.6581, 70.644, -8.44068, 0.22 ) }
    dend_2 { pt3dadd( 25.0603, 71.4768, -8.5899, 1.11 ) }
    dend_2 { pt3dadd( 25.3697, 72.1345, -8.70486, 1.62 ) }
    dend_2 { pt3dadd( 25.6146, 72.6344, -8.78822, 1.99 ) }
    dend_2 { pt3dadd( 25.7881, 72.9729, -8.84344, 1.99 ) }
    dend_2 { pt3dadd( 26.177, 73.6913, -8.95267, 1.4 ) }
    dend_2 { pt3dadd( 26.4719, 74.2067, -9.02475, 0.59 ) }
    dend_2 { pt3dadd( 27.3121, 75.6206, -9.20111, 0.22 ) }
    dend_2 { pt3dadd( 28.353, 77.2768, -9.37085, 0.22 ) }
    dend_2 { pt3dadd( 29.015, 78.2881, -9.45957, 0.22 ) }
    dend_2 { pt3dadd( 29.5648, 79.1004, -9.52034, 0.74 ) }
    dend_2 { pt3dadd( 29.8802, 79.5456, -9.54991, 0.74 ) }
    dend_2 { pt3dadd( 30.27, 80.0725, -9.58742, 0.37 ) }
    dend_2 { pt3dadd( 31.2168, 81.2766, -9.70918, 0.22 ) }
    dend_2 { pt3dadd( 32.1449, 82.3945, -9.87409, 1.25 ) }
    dend_2 { pt3dadd( 32.4101, 82.7018, -9.93041, 1.69 ) }
    dend_2 { pt3dadd( 32.7832, 83.1361, -10.0167, 1.69 ) }
    dend_2 { pt3dadd( 33.3128, 83.7588, -10.1556, 0.81 ) }
    dend_2 { pt3dadd( 34.2332, 84.8512, -10.4347, 0.22 ) }
    dend_2 { pt3dadd( 34.6553, 85.3591, -10.5767, 0.66 ) }
    dend_2 { pt3dadd( 34.9965, 85.7655, -10.6932, 0.66 ) }
    dend_2 { pt3dadd( 35.8375, 86.7602, -10.9909, 0.22 ) }
    dend_2 { pt3dadd( 36.8719, 87.9563, -11.3188, 1.92 ) }
    dend_2 { pt3dadd( 37.2283, 88.3805, -11.4117, 2.36 ) }
    dend_2 { pt3dadd( 37.6548, 88.9038, -11.4987, 2.58 ) }
    dend_2 { pt3dadd( 38.0428, 89.3918, -11.5689, 2.28 ) }
    dend_2 { pt3dadd( 38.4852, 89.9834, -11.6333, 1.47 ) }
    dend_2 { pt3dadd( 39.6352, 91.6368, -11.7539, 0.15 ) }
    dend_2 { pt3dadd( 40.6312, 93.144, -11.808, 0.15 ) }
    dend_2 { pt3dadd( 41.2171, 94.0736, -11.8188, 0.66 ) }
    dend_2 { pt3dadd( 41.4114, 94.3987, -11.8132, 0.66 ) }
    dend_2 { pt3dadd( 42.801, 96.8356, -11.6901, 0.22 ) }
    dend_2 { pt3dadd( 43.5536, 98.1894, -11.5647, 0.22 ) }
    dend_2 { pt3dadd( 44.2302, 99.4338, -11.4007, 0.22 ) }
    dend_2 { pt3dadd( 44.803, 100.446, -11.2197, 0.52 ) }
    dend_2 { pt3dadd( 45.3668, 101.4, -10.9987, 0.22 ) }
    dend_2 { pt3dadd( 45.977, 102.366, -10.7207, 1.4 ) }
    dend_2 { pt3dadd( 46.3812, 102.889, -10.5312, 1.62 ) }
    dend_2 { pt3dadd( 46.6129, 103.157, -10.4331, 1.62 ) }
    dend_2 { pt3dadd( 47.5097, 104.127, -10.1141, 0.22 ) }
    dend_2 { pt3dadd( 48.002, 104.631, -9.97374, 0.66 ) }
    dend_2 { pt3dadd( 48.2817, 104.912, -9.9121, 0.66 ) }
    dend_2 { pt3dadd( 50.2023, 106.901, -9.57414, 0.15 ) }
    dend_2 { pt3dadd( 51.1989, 107.975, -9.43876, 0.15 ) }
    dend_2 { pt3dadd( 51.8743, 108.732, -9.37872, 0.74 ) }
    dend_2 { pt3dadd( 52.1404, 109.043, -9.36526, 1.03 ) }
    dend_2 { pt3dadd( 52.4204, 109.391, -9.36192, 1.03 ) }
    dend_2 { pt3dadd( 53.698, 111.088, -9.38191, 0.22 ) }
    dend_2 { pt3dadd( 54.742, 112.448, -9.4307, 0.22 ) }
    dend_2 { pt3dadd( 55.5938, 113.466, -9.48213, 1.4 ) }
    dend_2 { pt3dadd( 56.0875, 114.018, -9.51335, 1.69 ) }
    dend_2 { pt3dadd( 56.5883, 114.536, -9.54542, 1.84 ) }
    dend_2 { pt3dadd( 57.2706, 115.183, -9.58984, 1.11 ) }
    dend_2 { pt3dadd( 60.559, 117.963, -9.81077, 0.22 ) }
    dend_2 { pt3dadd( 61.2256, 118.429, -9.8414, 0.22 ) }
    dend_2 { pt3dadd( 61.9897, 118.856, -9.85804, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 62.5402, 119.102, -9.86675, 1.18 ) }
    dend_2 { pt3dadd( 63.0495, 119.271, -9.86165, 1.18 ) }
    dend_2 { pt3dadd( 63.5556, 119.387, -9.84593, 0.59 ) }
    dend_2 { pt3dadd( 65.7035, 119.638, -9.73831, 0.22 ) }
    dend_2 { pt3dadd( 67.0174, 119.778, -9.65992, 0.59 ) }
    dend_2 { pt3dadd( 67.6749, 119.846, -9.6167, 0.59 ) }
    dend_2 { pt3dadd( 70.0226, 120.106, -9.46334, 0.15 ) }
    dend_2 { pt3dadd( 70.7616, 120.198, -9.41571, 0.88 ) }
    dend_2 { pt3dadd( 71.424, 120.301, -9.37362, 1.47 ) }
    dend_2 { pt3dadd( 71.8699, 120.436, -9.3425, 1.47 ) }
    dend_2 { pt3dadd( 72.166, 120.578, -9.32412, 1.47 ) }
    dend_2 { pt3dadd( 73.6385, 121.444, -9.24733, 0.15 ) }
    dend_2 { pt3dadd( 74.1213, 121.774, -9.22667, 0.44 ) }
    dend_2 { pt3dadd( 74.618, 122.144, -9.20405, 0.37 ) }
    dend_2 { pt3dadd( 77.6737, 124.617, -9.04673, 0.22 ) }
    dend_2 { pt3dadd( 79.8304, 126.507, -8.90008, 0.22 ) }
    dend_2 { pt3dadd( 80.4205, 127.051, -8.85628, 0.96 ) }
    dend_2 { pt3dadd( 80.8536, 127.483, -8.81954, 1.4 ) }
    dend_2 { pt3dadd( 81.003, 127.636, -8.80622, 1.4 ) }
    dend_2 { pt3dadd( 82.2044, 128.904, -8.69335, 0.22 ) }
    dend_2 { pt3dadd( 82.8895, 129.75, -8.62052, 0.22 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 30.8095, 14.4545, -26.3415, 0.15 ) }
    dend_20 { pt3dadd( 32.4594, 13.414, -28.6408, 0.15 ) }
    dend_20 { pt3dadd( 33.1958, 12.957, -29.5315, 1.18 ) }
    dend_20 { pt3dadd( 34.4103, 12.1928, -30.899, 0.37 ) }
    dend_20 { pt3dadd( 35.4222, 11.506, -32.0097, 0.74 ) }
    dend_20 { pt3dadd( 36.5364, 10.7006, -33.1283, 0.88 ) }
    dend_20 { pt3dadd( 37.356, 10.0411, -33.9061, 0.22 ) }
    dend_20 { pt3dadd( 37.8617, 9.59168, -34.3723, 0.22 ) }
    dend_20 { pt3dadd( 38.4458, 9.04281, -34.8644, 0.96 ) }
    dend_20 { pt3dadd( 39.056, 8.47652, -35.3072, 1.11 ) }
    dend_20 { pt3dadd( 40.0651, 7.52314, -36.0, 0.22 ) }
    dend_20 { pt3dadd( 41.1541, 6.46989, -36.7998, 0.22 ) }
    dend_20 { pt3dadd( 41.687, 5.88517, -37.3011, 0.96 ) }
    dend_20 { pt3dadd( 42.1164, 5.32186, -37.8163, 1.62 ) }
    dend_20 { pt3dadd( 42.3033, 5.00843, -38.1231, 1.62 ) }
    dend_20 { pt3dadd( 42.6012, 4.29851, -38.8874, 1.4 ) }
    dend_20 { pt3dadd( 42.8405, 3.44337, -39.89, 1.18 ) }
    dend_20 { pt3dadd( 42.9893, 2.434, -41.1224, 0.44 ) }
    dend_20 { pt3dadd( 43.0075, 1.80116, -41.8737, 0.29 ) }
    dend_20 { pt3dadd( 42.9683, 1.05854, -42.7093, 0.88 ) }
    dend_20 { pt3dadd( 42.8907, 0.431484, -43.396, 0.88 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 30.8095, 14.4545, -26.3415, 0.29 ) }
    dend_19 { pt3dadd( 31.8158, 15.8803, -27.4588, 0.29 ) }
    dend_19 { pt3dadd( 32.4809, 16.8225, -28.1972, 0.29 ) }
    dend_19 { pt3dadd( 33.179, 17.8116, -28.9724, 0.37 ) }
    dend_19 { pt3dadd( 33.8805, 18.8054, -29.7512, 0.81 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 47/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -5.1158, -58.3126, 1.64865, 0.59 ) }
    dend_13 { pt3dadd( -4.76043, -59.7118, 1.29813, 0.59 ) }
    dend_13 { pt3dadd( -4.63133, -60.5506, 1.08281, 0.74 ) }
    dend_13 { pt3dadd( -4.57103, -61.1812, 0.928219, 0.96 ) }
    dend_13 { pt3dadd( -4.54144, -61.8323, 0.784377, 1.11 ) }
    dend_13 { pt3dadd( -4.53663, -62.5816, 0.633488, 1.11 ) }
    dend_13 { pt3dadd( -4.55102, -63.3509, 0.484177, 0.81 ) }
    dend_13 { pt3dadd( -4.62834, -64.4101, 0.328488, 0.29 ) }
    dend_13 { pt3dadd( -4.67905, -65.0197, 0.220074, 0.29 ) }
    dend_13 { pt3dadd( -4.75399, -65.9834, 0.0431415, 0.59 ) }
    dend_13 { pt3dadd( -4.78869, -66.5483, -0.0574537, 0.96 ) }
    dend_13 { pt3dadd( -4.80884, -67.1223, -0.155306, 1.11 ) }
    dend_13 { pt3dadd( -4.82559, -68.0554, -0.296451, 0.59 ) }
    dend_13 { pt3dadd( -4.83205, -69.3411, -0.488958, 0.29 ) }
    dend_13 { pt3dadd( -4.8293, -70.4473, -0.651861, 0.29 ) }
    dend_13 { pt3dadd( -4.82068, -71.1341, -0.769003, 0.29 ) }
    dend_13 { pt3dadd( -4.80243, -72.5966, -1.03414, 0.29 ) }
    dend_13 { pt3dadd( -4.80017, -73.2839, -1.15529, 0.52 ) }
    dend_13 { pt3dadd( -4.81062, -73.971, -1.26991, 0.66 ) }
    dend_13 { pt3dadd( -4.84184, -74.9581, -1.41717, 1.11 ) }
    dend_13 { pt3dadd( -4.87198, -75.9066, -1.5645, 1.4 ) }
    dend_13 { pt3dadd( -4.89909, -76.6635, -1.67798, 1.62 ) }
    dend_13 { pt3dadd( -4.92629, -77.9859, -1.82674, 0.44 ) }
    dend_13 { pt3dadd( -4.92747, -79.0887, -1.91571, 0.44 ) }
    dend_13 { pt3dadd( -4.92242, -80.002, -1.95935, 0.44 ) }
    dend_13 { pt3dadd( -4.91914, -80.7002, -1.9633, 0.66 ) }
    dend_13 { pt3dadd( -4.92469, -81.5312, -1.92241, 0.66 ) }
    dend_13 { pt3dadd( -4.93259, -82.5374, -1.87075, 0.37 ) }
    dend_13 { pt3dadd( -4.94388, -83.3937, -1.82763, 0.37 ) }
    dend_13 { pt3dadd( -4.94899, -83.6759, -1.81464, 0.59 ) }
    dend_13 { pt3dadd( -4.97419, -84.581, -1.78925, 0.59 ) }
    dend_13 { pt3dadd( -5.02789, -85.999, -1.82575, 0.29 ) }
    dend_13 { pt3dadd( -5.08714, -86.9581, -1.89416, 0.74 ) }
    dend_13 { pt3dadd( -5.15051, -87.648, -1.96626, 0.96 ) }
    dend_13 { pt3dadd( -5.22371, -88.4034, -2.05095, 0.96 ) }
    dend_13 { pt3dadd( -5.29283, -89.1207, -2.14953, 0.96 ) }
    dend_13 { pt3dadd( -5.44278, -90.6647, -2.39117, 0.29 ) }
    dend_13 { pt3dadd( -5.63716, -92.5839, -2.71403, 0.29 ) }
    dend_13 { pt3dadd( -5.81789, -94.2275, -2.97249, 1.4 ) }
    dend_13 { pt3dadd( -5.90349, -94.9873, -3.0852, 1.92 ) }
    dend_13 { pt3dadd( -5.98021, -95.6398, -3.1727, 2.28 ) }
    dend_13 { pt3dadd( -6.10485, -96.5999, -3.27992, 2.28 ) }
    dend_13 { pt3dadd( -6.22438, -97.3643, -3.3607, 1.4 ) }
    dend_13 { pt3dadd( -6.54278, -99.0694, -3.5549, 0.22 ) }
    dend_13 { pt3dadd( -6.76635, -100.082, -3.6601, 0.22 ) }
    dend_13 { pt3dadd( -6.93501, -100.757, -3.71966, 0.88 ) }
    dend_13 { pt3dadd( -7.10647, -101.399, -3.76297, 0.96 ) }
    dend_13 { pt3dadd( -7.40483, -102.433, -3.8421, 0.22 ) }
    dend_13 { pt3dadd( -7.74876, -103.574, -3.93577, 0.22 ) }
    dend_13 { pt3dadd( -8.05137, -104.594, -4.01836, 0.74 ) }
    dend_13 { pt3dadd( -8.14456, -104.937, -4.0435, 1.03 ) }
    dend_13 { pt3dadd( -8.25797, -105.478, -4.07441, 1.03 ) }
    dend_13 { pt3dadd( -8.33047, -105.973, -4.09758, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_13 { pt3dadd( -8.39324, -106.666, -4.11872, 0.81 ) }
    dend_13 { pt3dadd( -8.44594, -107.998, -4.16936, 0.22 ) }
    dend_13 { pt3dadd( -8.45352, -108.637, -4.19626, 0.22 ) }
    dend_13 { pt3dadd( -8.43553, -109.856, -4.25315, 0.22 ) }
    dend_13 { pt3dadd( -8.39121, -110.638, -4.28753, 1.18 ) }
    dend_13 { pt3dadd( -8.33628, -111.188, -4.30919, 1.77 ) }
    dend_13 { pt3dadd( -8.27345, -111.653, -4.32701, 1.99 ) }
    dend_13 { pt3dadd( -8.1243, -112.544, -4.35964, 1.47 ) }
    dend_13 { pt3dadd( -7.71689, -114.637, -4.42962, 0.22 ) }
    dend_13 { pt3dadd( -7.22201, -116.922, -4.53021, 0.22 ) }
    dend_13 { pt3dadd( -6.95358, -118.072, -4.58648, 0.59 ) }
    dend_13 { pt3dadd( -6.77668, -118.806, -4.62806, 1.03 ) }
    dend_13 { pt3dadd( -6.64817, -119.348, -4.664, 1.25 ) }
    dend_13 { pt3dadd( -6.54595, -119.776, -4.70154, 1.47 ) }
    dend_13 { pt3dadd( -6.13371, -121.548, -4.86007, 0.22 ) }
    dend_13 { pt3dadd( -5.92581, -122.474, -4.94361, 0.66 ) }
    dend_13 { pt3dadd( -5.84944, -122.818, -4.97271, 0.96 ) }
    dend_13 { pt3dadd( -5.67767, -123.57, -5.0323, 0.96 ) }
    dend_13 { pt3dadd( -5.30182, -125.164, -5.14858, 0.22 ) }
    dend_13 { pt3dadd( -4.53569, -128.155, -5.33447, 0.22 ) }
    dend_13 { pt3dadd( -4.29909, -128.997, -5.37009, 0.88 ) }
    dend_13 { pt3dadd( -4.1932, -129.333, -5.3827, 1.11 ) }
    dend_13 { pt3dadd( -4.075, -129.664, -5.39345, 1.33 ) }
    dend_13 { pt3dadd( -3.84898, -130.22, -5.39624, 0.96 ) }
    dend_13 { pt3dadd( -3.5237, -130.951, -5.32554, 0.44 ) }
    dend_13 { pt3dadd( -2.80491, -132.482, -5.05614, 0.22 ) }
    dend_13 { pt3dadd( -2.44364, -133.286, -4.87956, 0.66 ) }
    dend_13 { pt3dadd( -2.16774, -133.915, -4.72619, 0.88 ) }
    dend_13 { pt3dadd( -1.70464, -134.992, -4.42689, 0.22 ) }
    dend_13 { pt3dadd( -0.86143, -137.02, -3.78116, 0.22 ) }
    dend_13 { pt3dadd( -0.673025, -137.566, -3.58844, 0.22 ) }
    dend_13 { pt3dadd( -0.493254, -138.285, -3.34934, 1.62 ) }
    dend_13 { pt3dadd( -0.375178, -139.105, -3.12149, 2.5 ) }
    dend_13 { pt3dadd( -0.359577, -139.466, -3.06934, 2.73 ) }
    dend_13 { pt3dadd( -0.375035, -139.774, -3.0774, 2.73 ) }
    dend_13 { pt3dadd( -0.544047, -141.249, -3.39675, 1.25 ) }
    dend_13 { pt3dadd( -0.705486, -142.662, -3.81228, 0.29 ) }
    dend_13 { pt3dadd( -0.755962, -143.185, -3.99217, 0.29 ) }
    dend_13 { pt3dadd( -0.833948, -144.464, -4.47421, 0.66 ) }
    dend_13 { pt3dadd( -0.848985, -144.87, -4.63707, 1.11 ) }
    dend_13 { pt3dadd( -0.873508, -145.664, -4.96282, 1.25 ) }
    dend_13 { pt3dadd( -0.88009, -146.242, -5.18952, 1.25 ) }
    dend_13 { pt3dadd( -0.921437, -147.189, -5.47805, 1.03 ) }
    dend_13 { pt3dadd( -1.01473, -148.343, -5.77373, 0.22 ) }
    dend_13 { pt3dadd( -1.07489, -148.823, -5.86118, 0.22 ) }
    dend_13 { pt3dadd( -1.23765, -149.637, -6.01488, 0.22 ) }
    dend_13 { pt3dadd( -1.55508, -150.861, -6.24206, 1.84 ) }
    dend_13 { pt3dadd( -1.83576, -151.788, -6.42085, 3.32 ) }
    dend_13 { pt3dadd( -2.08316, -152.494, -6.55828, 3.54 ) }
    dend_13 { pt3dadd( -2.36628, -153.216, -6.69032, 2.8 ) }
    dend_13 { pt3dadd( -3.12763, -155.124, -7.01886, 0.29 ) }
    dend_13 { pt3dadd( -3.32389, -155.582, -7.09187, 0.81 ) }
    dend_13 { pt3dadd( -3.54411, -156.03, -7.15423, 0.88 ) }
    dend_13 { pt3dadd( -4.09815, -157.055, -7.26921, 0.22 ) }
    dend_13 { pt3dadd( -4.60121, -157.928, -7.37173, 0.22 ) }
    dend_13 { pt3dadd( -5.00442, -158.614, -7.45827, 0.88 ) }
    dend_13 { pt3dadd( -5.27848, -159.075, -7.51339, 1.25 ) }
    dend_13 { pt3dadd( -5.53741, -159.515, -7.58065, 1.25 ) }
    dend_13 { pt3dadd( -5.94105, -160.262, -7.71533, 0.59 ) }
    dend_13 { pt3dadd( -6.66066, -161.775, -8.01863, 0.22 ) }
    dend_13 { pt3dadd( -6.8768, -162.279, -8.12412, 0.74 ) }
    dend_13 { pt3dadd( -7.07301, -162.748, -8.23923, 0.74 ) }
    dend_13 { pt3dadd( -7.19783, -163.047, -8.3161, 0.52 ) }
    dend_13 { pt3dadd( -7.7382, -164.379, -8.65568, 0.22 ) }
    dend_13 { pt3dadd( -7.95783, -164.955, -8.80686, 1.03 ) }
    dend_13 { pt3dadd( -8.07497, -165.281, -8.89632, 1.25 ) }
    dend_13 { pt3dadd( -8.56263, -166.917, -9.38885, 0.22 ) }
    dend_13 { pt3dadd( -8.73787, -167.733, -9.65378, 0.22 ) }
    dend_13 { pt3dadd( -8.82, -168.251, -9.83998, 0.59 ) }
    dend_13 { pt3dadd( -8.87322, -168.899, -10.1147, 0.59 ) }
    dend_13 { pt3dadd( -8.83499, -169.856, -10.5482, 0.22 ) }
    dend_13 { pt3dadd( -8.61485, -171.298, -11.2145, 0.22 ) }
    dend_13 { pt3dadd( -8.4063, -172.059, -11.5706, 1.03 ) }
    dend_13 { pt3dadd( -8.23092, -172.533, -11.7871, 1.33 ) }
    dend_13 { pt3dadd( -7.91848, -173.163, -12.0444, 1.33 ) }
    dend_13 { pt3dadd( -6.92604, -174.757, -12.6189, 0.22 ) }
    dend_13 { pt3dadd( -6.66171, -175.113, -12.7331, 0.52 ) }
    dend_13 { pt3dadd( -6.43314, -175.384, -12.8169, 0.52 ) }
    dend_13 { pt3dadd( -4.87955, -176.923, -13.2246, 0.22 ) }
    dend_13 { pt3dadd( -3.11272, -178.418, -13.5467, 0.22 ) }
    dend_13 { pt3dadd( -2.34936, -178.994, -13.6428, 1.47 ) }
    dend_13 { pt3dadd( -1.84307, -179.349, -13.6904, 2.21 ) }
    dend_13 { pt3dadd( -1.21413, -179.782, -13.7416, 1.62 ) }
    dend_13 { pt3dadd( 1.41992, -181.57, -13.9273, 0.29 ) }
    dend_13 { pt3dadd( 2.98031, -182.653, -14.0457, 0.29 ) }
    dend_13 { pt3dadd( 4.6347, -183.961, -14.1975, 0.22 ) }
    dend_13 { pt3dadd( 5.45774, -184.706, -14.2816, 1.03 ) }
    dend_13 { pt3dadd( 5.69315, -184.942, -14.3098, 1.25 ) }
    dend_13 { pt3dadd( 6.06874, -185.361, -14.3599, 1.25 ) }
    dend_13 { pt3dadd( 7.43541, -187.224, -14.6142, 0.29 ) }
    dend_13 { pt3dadd( 8.95178, -189.585, -14.9427, 0.22 ) }
    dend_13 { pt3dadd( 9.61905, -190.719, -15.096, 1.92 ) }
    dend_13 { pt3dadd( 9.92575, -191.261, -15.1649, 2.36 ) }
    dend_13 { pt3dadd( 10.2363, -191.827, -15.2296, 2.58 ) }
    dend_13 { pt3dadd( 11.4016, -194.191, -15.462, 0.22 ) }
    dend_13 { pt3dadd( 11.7594, -195.079, -15.5295, 0.22 ) }
    dend_13 { pt3dadd( 12.0388, -195.985, -15.5914, 0.22 ) }
    dend_13 { pt3dadd( 12.1839, -196.567, -15.626, 0.74 ) }
    dend_13 { pt3dadd( 12.2641, -197.006, -15.6465, 0.88 ) }
    dend_13 { pt3dadd( 12.3861, -198.477, -15.7171, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_13 { pt3dadd( 12.374, -199.104, -15.7457, 0.22 ) }
    dend_13 { pt3dadd( 12.3221, -199.864, -15.781, 0.81 ) }
    dend_13 { pt3dadd( 12.2471, -200.515, -15.8033, 0.96 ) }
    dend_13 { pt3dadd( 12.2024, -200.814, -15.8105, 0.96 ) }
    dend_13 { pt3dadd( 11.8067, -203.224, -15.8561, 0.22 ) }
    dend_13 { pt3dadd( 11.6962, -203.911, -15.867, 0.66 ) }
    dend_13 { pt3dadd( 11.6315, -204.317, -15.8732, 0.66 ) }
    dend_13 { pt3dadd( 10.8986, -208.71, -15.9335, 0.22 ) }
    dend_13 { pt3dadd( 10.4306, -211.372, -15.9632, 0.22 ) }
    dend_13 { pt3dadd( 10.3187, -212.003, -15.9672, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 10/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -5.1158, -58.3126, 1.64865, 0.29 ) }
    dend_12 { pt3dadd( -5.92351, -59.4076, 1.59219, 0.29 ) }
    dend_12 { pt3dadd( -6.69586, -60.4241, 1.64979, 0.29 ) }
    dend_12 { pt3dadd( -7.08128, -60.8969, 1.69739, 0.44 ) }
    dend_12 { pt3dadd( -7.78258, -61.7142, 1.79369, 0.22 ) }
    dend_12 { pt3dadd( -8.08438, -62.0605, 1.83576, 0.52 ) }
    dend_12 { pt3dadd( -8.38789, -62.4079, 1.87772, 0.66 ) }
    dend_12 { pt3dadd( -9.43067, -63.5724, 2.04029, 0.22 ) }
    dend_12 { pt3dadd( -10.1233, -64.3011, 2.15411, 0.22 ) }
    dend_12 { pt3dadd( -10.852, -65.0173, 2.25794, 0.22 ) }
    dend_12 { pt3dadd( -11.4394, -65.5471, 2.32802, 0.66 ) }
    dend_12 { pt3dadd( -11.8086, -65.8498, 2.36059, 0.96 ) }
    dend_12 { pt3dadd( -12.2983, -66.2179, 2.38124, 0.96 ) }
    dend_12 { pt3dadd( -12.902, -66.6174, 2.37147, 0.52 ) }
    dend_12 { pt3dadd( -13.9207, -67.2393, 2.35904, 0.22 ) }
    dend_12 { pt3dadd( -14.3217, -67.4552, 2.35431, 0.66 ) }
    dend_12 { pt3dadd( -15.1565, -67.8578, 2.34551, 0.66 ) }
    dend_12 { pt3dadd( -15.9028, -68.2072, 2.33064, 0.29 ) }
    dend_12 { pt3dadd( -16.6743, -68.555, 2.30819, 0.29 ) }
    dend_12 { pt3dadd( -17.0123, -68.7097, 2.29561, 0.59 ) }
    dend_12 { pt3dadd( -17.6212, -68.9846, 2.26685, 0.59 ) }
    dend_12 { pt3dadd( -18.3032, -69.2911, 2.21256, 0.59 ) }
    dend_12 { pt3dadd( -19.7307, -69.9147, 2.04907, 0.22 ) }
    dend_12 { pt3dadd( -21.0007, -70.48, 1.85285, 0.22 ) }
    dend_12 { pt3dadd( -22.2206, -71.029, 1.70453, 0.22 ) }
    dend_12 { pt3dadd( -23.2834, -71.4843, 1.61833, 0.22 ) }
    dend_12 { pt3dadd( -24.2412, -71.8976, 1.56903, 0.88 ) }
    dend_12 { pt3dadd( -24.913, -72.1975, 1.54579, 1.18 ) }
    dend_12 { pt3dadd( -25.6505, -72.5485, 1.58659, 1.18 ) }
    dend_12 { pt3dadd( -27.6536, -73.6336, 1.87955, 0.22 ) }
    dend_12 { pt3dadd( -29.4634, -74.7714, 2.32075, 0.22 ) }
    dend_12 { pt3dadd( -29.9872, -75.165, 2.50197, 0.59 ) }
    dend_12 { pt3dadd( -30.4994, -75.6148, 2.72258, 0.59 ) }
    dend_12 { pt3dadd( -31.777, -76.8698, 3.31279, 0.37 ) }
    dend_12 { pt3dadd( -32.2038, -77.3298, 3.50548, 0.88 ) }
    dend_12 { pt3dadd( -32.744, -77.9978, 3.69903, 1.03 ) }
    dend_12 { pt3dadd( -33.051, -78.38, 3.78998, 1.03 ) }
    dend_12 { pt3dadd( -33.8787, -79.2616, 3.9321, 0.29 ) }
    dend_12 { pt3dadd( -34.5307, -79.8437, 3.97051, 0.44 ) }
    dend_12 { pt3dadd( -35.0919, -80.2958, 3.93574, 0.66 ) }
    dend_12 { pt3dadd( -36.1437, -81.0531, 3.86418, 0.29 ) }
    dend_12 { pt3dadd( -36.7561, -81.44, 3.81742, 0.52 ) }
    dend_12 { pt3dadd( -37.1336, -81.6546, 3.7843, 0.59 ) }
    dend_12 { pt3dadd( -37.6073, -81.8941, 3.73012, 0.59 ) }
    dend_12 { pt3dadd( -44.2264, -89.0142, 3.60517, 0.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_22, dend_15, dend_8, dend_5, dend_0, dend_17, dend_16, dend_10, dend_9, dend_7, dend_6, dend_4, dend_1, dend_21, dend_18, dend_14, dend_11, dend_3, dend_2, dend_20, dend_19, dend_13, dend_12]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_23, dend_22, dend_15, dend_8, dend_5, dend_0, dend_17, dend_16, dend_10, dend_9, dend_7, dend_6, dend_4, dend_1, dend_21, dend_18, dend_14, dend_11, dend_3, dend_2, dend_20, dend_19, dend_13, dend_12]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_16 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_9 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_7 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_4 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_14 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_3 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_13 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_12 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_15 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_8 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_1 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_17 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_10 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_11 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_19 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_20 OneSecGrp_SectionRef_24.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 3
    dend_22 nseg = 5
    dend_5 nseg = 3
    dend_16 nseg = 5
    dend_9 nseg = 3
    dend_7 nseg = 5
    dend_4 nseg = 5
    dend_21 nseg = 9
    dend_14 nseg = 9
    dend_3 nseg = 3
    dend_2 nseg = 7
    dend_13 nseg = 9
    dend_12 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L4_LBC_396684f644_0_0


