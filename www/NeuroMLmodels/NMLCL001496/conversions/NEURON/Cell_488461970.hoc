// Cell: Cell_488461970
/*
{
  "id" : "Cell_488461970",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "310.93, 574.33, 24.5171, 12.4408", "317.15, 574.33, 24.5171, 12.4408", "323.37, 574.33, 24.5171, 12.4408" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "317.15, 574.33, 24.5171, 1.0", "322.991, 588.146, 24.5171, 1.0", "328.833, 601.962, 24.5171, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999977
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "315.738, 579.338, 31.3138, 0.2288", "316.14, 580.203, 32.2834, 0.4332", "317.017, 580.931, 33.0078, 0.5816", "317.895, 581.66, 33.5406, 0.7806", "318.773, 582.389, 33.9335, 0.834", "319.651, 583.117, 34.2359, 0.6334", "320.495, 583.859, 34.5271, 0.5716", "321.125, 584.782, 34.7998, 0.553", "321.618, 585.814, 35.0193, 0.7396", "322.077, 586.784, 35.2906, 0.9282", "322.4, 587.767, 35.6247, 0.8972", "323.108, 588.497, 35.9562, 0.628" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999977
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "313.219, 578.172, 23.2708, 0.9152", "312.321, 578.857, 23.147, 0.5992", "311.701, 579.706, 23.0594, 0.4784", "311.092, 580.626, 23.0026, 0.5266", "310.367, 581.503, 22.969, 0.6656", "309.884, 582.528, 22.9519, 0.6842", "309.703, 583.647, 22.9471, 0.735", "309.719, 584.786, 22.9281, 0.7492", "309.669, 585.924, 22.9096, 0.707", "309.548, 587.061, 22.9088, 0.7316", "309.387, 588.188, 22.9435, 0.7368", "309.182, 589.3, 23.0272, 0.7128", "309.039, 590.426, 23.1028, 0.6034", "309.002, 591.562, 23.1006, 0.4862", "309.0, 592.698, 23.0129, 0.5404", "308.983, 593.838, 22.8777, 0.467", "308.94, 594.979, 22.7144, 0.4886", "308.803, 596.107, 22.5182, 0.4498", "308.62, 597.229, 22.3006, 0.5308", "308.702, 598.337, 22.1514, 0.6254", "308.914, 599.454, 22.0441, 0.6134", "308.795, 600.547, 21.8725, 0.585", "308.355, 601.585, 21.6745, 0.5626", "307.823, 602.594, 21.4813, 0.6032", "307.286, 603.601, 21.2884, 0.5072", "306.793, 604.623, 21.0714, 0.475", "306.304, 605.65, 20.8485, 0.6234", "305.688, 606.575, 20.7337, 0.575", "305.084, 607.525, 20.6942, 0.454", "304.584, 608.513, 20.5612, 0.3816", "304.278, 609.498, 20.2611, 0.4238", "303.87, 610.434, 19.8962, 0.5616", "303.175, 611.325, 19.6717, 0.7574", "302.442, 612.177, 19.5054, 0.7224", "301.844, 613.126, 19.3595, 0.759", "301.312, 614.132, 19.2758, 0.5642", "300.752, 615.127, 19.2366, 0.5618", "300.157, 616.078, 19.2825, 0.4188", "299.522, 617.007, 19.3987, 0.3676", "299.06, 618.037, 19.5426, 0.3784", "298.679, 619.109, 19.7103, 0.343", "298.093, 620.061, 19.8218, 0.3168", "297.598, 621.056, 19.8358, 0.3068", "297.365, 622.162, 19.8388, 0.3292", "297.111, 623.271, 19.8761, 0.4014", "297.024, 624.286, 20.0642, 0.3856", "296.383, 625.032, 20.3473, 0.3976", "295.469, 625.567, 20.396, 0.4466", "294.97, 626.501, 20.2415, 0.636", "294.636, 627.469, 19.9895, 0.7394", "293.852, 628.223, 19.8467, 0.7606", "293.109, 629.027, 19.6305, 0.7114", "292.427, 629.771, 19.3528, 0.5934", "291.874, 630.725, 19.1587, 0.5038", "291.137, 631.577, 18.9412, 0.3978", "290.266, 632.308, 18.7127, 0.3658", "289.274, 632.651, 18.3873, 0.423", "288.722, 633.42, 18.0502, 0.4226", "288.238, 634.436, 17.8186, 0.4794", "287.519, 635.276, 17.7106, 0.5344", "286.726, 636.08, 17.5941, 0.4238", "286.144, 636.812, 17.276, 0.3352", "285.84, 637.672, 16.7986, 0.2926", "285.681, 638.775, 16.4018, 0.3076", "284.872, 639.057, 16.3545, 0.3378", "284.278, 639.892, 16.4937, 0.3826", "283.789, 640.88, 16.5704, 0.5206", "283.553, 641.989, 16.7196, 0.5082", "283.376, 643.068, 16.921, 0.4144", "282.814, 644.033, 17.0293, 0.357", "282.605, 645.118, 16.9882, 0.3696", "282.605, 646.242, 16.9716, 0.503", "282.502, 647.34, 17.0128, 0.445", "282.321, 648.461, 17.0159, 0.4466", "282.11, 649.551, 17.0663, 0.3764", "282.099, 650.641, 17.0688, 0.3738", "282.225, 651.728, 16.9016, 0.4362", "282.336, 652.824, 16.5964, 0.4534", "282.281, 653.953, 16.2798, 0.5064", "281.999, 655.052, 15.9538, 0.7314", "281.397, 656.01, 15.6358, 0.7612", "280.759, 656.957, 15.3384, 0.8674", "279.939, 657.736, 15.0438, 0.8168", "279.193, 658.461, 14.6166, 0.7804", "278.428, 659.279, 14.3133, 0.6636", "278.002, 660.288, 13.9331, 0.6852", "277.758, 661.399, 13.6349, 0.4852", "277.296, 662.178, 13.2779, 0.3646", "276.807, 662.834, 12.7162, 0.2996", "276.403, 663.803, 12.2494, 0.323", "276.227, 664.878, 11.9176, 0.354", "275.967, 665.932, 11.5615, 0.473", "275.989, 666.986, 11.1418, 0.3944", "276.207, 668.082, 10.7414, 0.3278", "275.942, 669.164, 10.4322, 0.279", "275.426, 670.184, 10.1816, 0.2828", "275.621, 671.296, 9.9837, 0.2896", "275.69, 672.423, 9.7835, 0.3034", "275.695, 673.545, 9.5673, 0.323", "276.112, 674.605, 9.4032, 0.3898", "276.595, 675.642, 9.2826, 0.3644", "277.349, 676.501, 9.1994, 0.356", "278.351, 677.048, 9.1507, 0.3814", "279.462, 677.319, 9.1314, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999977,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "312.87, 576.061, 19.2198, 0.2288", "311.921, 576.497, 18.2745, 0.3668", "310.978, 576.947, 17.3508, 0.4368", "310.38, 577.604, 16.5298, 0.618", "310.652, 578.71, 15.925, 0.7036", "310.884, 579.709, 15.4165, 0.7062", "311.659, 580.416, 14.971, 0.5528", "312.124, 581.422, 14.6658, 0.579", "312.109, 582.549, 14.4318, 0.4924", "311.408, 583.316, 14.119, 0.5316" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999977
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "318.217, 569.192, 24.3398, 5.0762", "319.004, 568.498, 24.509, 2.2056", "320.061, 568.115, 24.7307, 1.06", "320.998, 567.459, 24.9214, 1.0256", "321.727, 566.577, 25.0681, 0.9724", "322.227, 565.549, 25.1734, 1.0514", "322.664, 564.492, 25.2406, 1.021", "323.406, 563.624, 25.2865, 0.9092" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999977
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "313.161, 569.892, 25.0037, 0.2288", "312.671, 568.886, 25.142, 0.3196", "312.389, 567.829, 25.163, 0.3526", "311.667, 566.986, 25.1941, 0.4454", "310.952, 566.287, 25.3938, 0.4638", "310.208, 565.754, 25.4909, 0.5576", "309.271, 565.191, 25.5732, 0.6708", "308.361, 564.518, 25.7317, 0.7172", "307.437, 563.847, 25.9252, 0.6832", "306.377, 563.465, 26.0795, 0.5154", "305.27, 563.61, 26.3147, 0.485", "304.278, 563.089, 26.6216, 0.4372", "303.29, 562.546, 27.0337, 0.5374", "302.31, 562.281, 27.6354, 0.4922" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999977
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "321.596, 577.51, 24.6616, 0.2288", "322.491, 578.219, 24.7654, 0.3392", "323.45, 578.84, 24.8581, 0.385", "324.497, 579.295, 24.9292, 0.525", "325.564, 579.706, 24.9892, 0.5164", "326.651, 580.063, 25.0424, 0.4308", "327.733, 580.429, 25.0855, 0.3814", "328.593, 581.111, 25.0477, 0.4452", "329.57, 581.487, 25.1745, 0.4948", "330.06, 581.979, 25.5959, 0.4634" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999977
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "311.699, 573.949, 24.6364, 0.6864", "310.833, 574.568, 24.8466, 0.9982", "309.976, 575.176, 25.1712, 0.9108", "308.921, 575.468, 25.503, 0.7606", "307.834, 575.692, 25.641, 0.8818", "306.759, 576.067, 25.6858, 0.9976", "305.723, 576.51, 25.6124, 1.0534", "304.73, 576.987, 25.4131, 1.0132", "303.711, 577.497, 25.268, 0.949", "302.728, 578.056, 25.2308, 0.7812", "301.678, 578.506, 25.2608, 0.7062", "300.58, 578.684, 25.3982, 0.7932" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999977
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "312.703, 575.806, 28.7417, 0.2288", "311.727, 576.184, 29.6047, 0.3264", "310.906, 576.816, 30.406, 0.3652", "310.71, 577.878, 31.0136, 0.4686", "310.072, 578.716, 31.4334, 0.508", "308.94, 578.75, 31.712, 0.6352", "307.818, 578.971, 31.8856, 0.835", "306.861, 578.529, 32.149, 0.924" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999977
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "316.049, 569.463, 20.5332, 0.9152", "315.815, 568.379, 19.8374, 0.6664", "315.54, 567.276, 19.231, 0.6524", "315.069, 566.247, 18.6987, 0.6082", "314.384, 565.352, 18.2, 0.6146", "313.539, 564.617, 17.7008, 0.656", "312.707, 563.928, 17.1371, 0.5884", "312.203, 562.961, 16.5516, 0.7064", "311.884, 561.869, 16.0188, 0.66", "311.4, 560.883, 15.4585, 0.4872", "311.125, 559.831, 14.8691, 0.3596", "310.863, 558.732, 14.3259, 0.3326", "310.286, 557.765, 13.9266, 0.4074", "309.645, 556.819, 13.5556, 0.3988", "309.109, 555.946, 13.0136, 0.4108", "308.478, 555.008, 12.4659, 0.5256", "307.952, 554.028, 11.8728, 0.5188", "307.617, 553.344, 11.0354, 0.429", "307.45, 552.273, 10.2071, 0.4076", "306.672, 551.374, 9.0661, 0.3502", "306.038, 550.438, 8.6461, 0.3304", "305.961, 549.415, 8.1724, 0.3304", "306.601, 548.519, 7.7482, 0.3814", "307.629, 548.095, 6.8085, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999977
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "328.833, 601.962, 24.5171, 1.0", "334.674, 615.778, 24.5171, 1.0", "340.515, 629.594, 24.5171, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "323.108, 588.497, 35.9562, 0.628", "322.522, 588.471, 37.3988, 0.6864", "322.256, 589.381, 39.1451, 0.7244", "322.269, 590.024, 39.9938, 0.6482", "322.361, 590.596, 41.0388, 0.4562", "322.895, 591.55, 41.953, 0.3476", "323.677, 592.242, 42.5992, 0.317", "324.584, 592.849, 43.0847, 0.3478", "325.164, 593.808, 43.484, 0.437", "325.566, 594.785, 43.9225, 0.446", "325.2, 595.354, 44.6046, 0.5358", "324.73, 596.308, 45.0892, 0.5758", "324.322, 597.365, 45.5977, 0.8064", "323.95, 598.35, 46.2064, 0.933", "323.54, 599.338, 46.8583, 0.797", "323.195, 600.333, 47.5527, 0.5154", "323.389, 601.391, 48.1306, 0.3644", "323.504, 602.394, 48.7763, 0.3418", "322.987, 603.386, 49.3004, 0.4238", "322.883, 604.518, 49.6776, 0.4322", "322.65, 605.533, 50.6192, 0.4576" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "323.108, 588.497, 35.9562, 0.628", "323.324, 589.241, 35.6888, 0.4718", "323.729, 590.227, 35.1084, 0.5754", "323.999, 591.201, 34.3678, 0.4604", "324.286, 592.093, 33.5177, 0.3656", "324.918, 592.893, 32.688, 0.302", "325.165, 593.866, 32.0191, 0.325", "325.167, 594.999, 31.6546, 0.3696", "325.094, 596.112, 31.5731, 0.4436", "324.834, 597.072, 31.7946, 0.623", "325.166, 598.007, 32.06, 0.751", "325.887, 598.87, 32.3201, 0.6074", "326.286, 599.901, 32.4377, 0.5896", "326.713, 600.948, 32.4943, 0.495", "326.974, 602.039, 32.3977, 0.39", "326.858, 603.168, 32.2109, 0.3098", "327.125, 604.237, 31.9236, 0.2928", "327.385, 605.35, 31.6803, 0.3082", "327.644, 606.464, 31.486, 0.3388", "327.896, 607.577, 31.3239, 0.3842", "328.331, 608.618, 31.138, 0.5236", "328.743, 609.678, 30.9618, 0.5138", "328.875, 610.789, 30.7905, 0.425", "328.711, 611.899, 30.6936, 0.3752", "328.829, 613.032, 30.648, 0.4116", "328.832, 614.172, 30.6149, 0.5404", "328.886, 615.302, 30.5304, 0.7096", "329.053, 616.411, 30.373, 0.6756", "329.268, 617.528, 30.2162, 0.4694", "329.456, 618.651, 30.1112, 0.3254", "329.585, 619.785, 30.0384, 0.2746", "329.705, 620.884, 29.9076, 0.2746", "329.947, 621.889, 29.7648, 0.2746", "330.479, 622.837, 29.6573, 0.2746", "330.866, 623.869, 29.4874, 0.2746", "330.941, 625.01, 29.293, 0.2746", "331.479, 625.928, 29.045, 0.2746", "331.852, 626.862, 28.6432, 0.2746", "332.679, 627.331, 28.1299, 0.2746", "333.769, 627.331, 27.6732, 0.2746", "334.333, 628.317, 27.3006, 0.2746", "334.686, 629.382, 26.9878, 0.2746", "335.435, 630.248, 26.717, 0.2748", "336.217, 631.046, 26.4631, 0.2748", "337.289, 631.402, 26.1587, 0.2752", "338.228, 631.736, 25.6704, 0.2758", "338.693, 632.685, 25.018, 0.2768", "339.303, 633.601, 24.2844, 0.2786", "339.9, 634.532, 23.4987, 0.282", "340.488, 635.469, 22.6808, 0.2882", "341.152, 636.355, 21.849, 0.3008", "341.96, 637.084, 21.0053, 0.318", "342.771, 637.624, 20.0668, 0.3808", "343.392, 638.341, 19.0543, 0.3474", "343.986, 639.076, 18.0272, 0.326", "343.98, 639.928, 16.9336, 0.3176", "344.529, 640.893, 16.0224, 0.3798", "345.369, 641.508, 15.1886, 0.3456", "346.055, 642.093, 14.4099, 0.322", "346.758, 642.804, 13.9482, 0.3136", "347.808, 642.816, 13.8295, 0.356", "348.801, 643.097, 13.685, 0.3814", "349.24, 644.141, 13.4985, 0.6864" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "311.408, 583.316, 14.119, 0.5316", "310.643, 584.148, 13.3935, 0.6864", "310.011, 585.074, 13.3952, 0.6238", "309.598, 586.096, 13.4798, 0.5324", "309.68, 587.174, 13.4019, 0.5842", "310.412, 587.779, 13.0768, 0.7508", "310.448, 588.827, 12.64, 0.7174" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "311.408, 583.316, 14.119, 0.5316", "310.661, 582.91, 13.9398, 0.548", "309.633, 582.445, 13.8908, 0.6246", "308.607, 581.982, 13.9362, 0.5406", "307.546, 582.337, 13.893, 0.5674", "306.515, 582.828, 13.8174, 0.647", "305.74, 583.656, 13.6836, 0.649", "305.143, 584.624, 13.5654, 0.6734", "304.191, 585.257, 13.4201, 0.617", "303.165, 585.755, 13.2174, 0.5482", "302.149, 586.16, 12.8904, 0.7054", "301.241, 586.761, 12.4662, 0.53" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "323.406, 563.624, 25.2865, 0.9092", "324.419, 563.2, 25.3814, 0.7418", "325.37, 562.604, 25.3677, 0.9238" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "323.406, 563.624, 25.2865, 0.9092", "323.042, 564.104, 27.5114, 0.4576", "322.089, 564.151, 28.7067, 0.619", "320.988, 564.404, 29.1312, 0.6924", "319.969, 564.37, 29.6008, 0.7474", "318.974, 564.11, 30.1843, 0.558", "317.924, 564.335, 30.7065, 0.4774", "316.984, 564.903, 31.2287, 0.386", "316.064, 565.388, 31.8105, 0.3934", "315.001, 565.705, 32.3352, 0.463", "313.956, 566.128, 32.6984, 0.551", "313.157, 566.883, 33.0705, 0.454", "312.107, 567.267, 33.4424, 0.3932", "311.073, 566.827, 33.7761, 0.3906", "310.023, 566.602, 34.2244, 0.5364", "308.923, 566.628, 34.7522, 0.5324", "307.802, 566.629, 35.3055, 0.4852" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "302.31, 562.281, 27.6354, 0.4922", "301.152, 562.452, 28.6597, 0.4576", "300.095, 562.425, 29.0181, 0.3594", "298.956, 562.362, 29.2844, 0.3", "297.812, 562.346, 29.4515, 0.2746", "296.684, 562.493, 29.5257, 0.2748", "295.563, 562.477, 29.4711, 0.2748", "294.444, 562.331, 29.29, 0.2752", "293.33, 562.123, 29.064, 0.2756", "292.218, 561.879, 28.84, 0.2766", "291.09, 561.893, 28.6577, 0.2782", "289.974, 562.135, 28.5295, 0.2814", "288.897, 562.512, 28.4421, 0.287", "287.788, 562.446, 28.3968, 0.2988", "286.652, 562.348, 28.3942, 0.3142", "285.509, 562.363, 28.4094, 0.3734", "284.438, 562.032, 28.3755, 0.334", "283.34, 561.936, 28.4368, 0.3", "282.244, 561.723, 28.553, 0.2746", "281.171, 561.469, 28.511, 0.2748", "280.179, 561.41, 28.2957, 0.2748", "279.217, 561.919, 28.2145, 0.2752", "278.122, 562.151, 28.1257, 0.2756", "276.98, 562.132, 28.056, 0.2766", "275.836, 562.115, 28.0263, 0.2782", "274.692, 562.1, 28.0574, 0.2814", "273.549, 562.065, 28.1207, 0.287", "272.407, 562.023, 28.1882, 0.2988", "271.331, 561.727, 28.3035, 0.3142", "270.23, 561.457, 28.4225, 0.3734", "269.32, 561.192, 28.5986, 0.3338", "268.307, 560.71, 28.6762, 0.3", "267.917, 559.703, 28.6135, 0.2746", "267.267, 558.796, 28.5813, 0.2746", "266.29, 558.295, 28.4628, 0.2746", "265.217, 557.912, 28.4295, 0.2746", "264.206, 557.427, 28.4483, 0.2746", "263.441, 556.579, 28.4984, 0.2746", "262.721, 555.913, 28.6821, 0.2746", "261.866, 555.734, 29.0609, 0.2746", "260.749, 555.498, 29.3516, 0.2746", "259.714, 555.015, 29.5646, 0.2746", "258.813, 554.315, 29.7133, 0.2746", "257.848, 553.701, 29.806, 0.2746", "256.86, 553.124, 29.8449, 0.2746", "255.75, 552.863, 29.8536, 0.2744", "254.636, 552.604, 29.8721, 0.2744", "253.586, 552.154, 29.897, 0.2742", "252.561, 551.645, 29.9281, 0.274", "251.747, 550.846, 29.965, 0.2736", "250.82, 550.205, 30.0678, 0.2728", "249.685, 550.094, 30.1717, 0.2712", "248.541, 550.094, 30.2518, 0.2684", "247.397, 550.094, 30.3103, 0.2626", "246.253, 550.094, 30.3481, 0.2542", "245.109, 550.094, 30.368, 0.2288", "243.965, 550.094, 30.3716, 0.2288" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "302.31, 562.281, 27.6354, 0.4922", "301.59, 562.383, 28.3562, 0.385", "300.613, 562.505, 29.1785, 0.3006", "299.488, 562.493, 29.8925, 0.2756", "298.366, 562.3, 30.4732, 0.2766", "297.234, 562.322, 30.9599, 0.2782", "296.277, 562.544, 31.4913, 0.2814", "295.414, 562.856, 32.076, 0.287", "294.315, 562.8, 32.5506, 0.2988", "293.255, 562.394, 32.9, 0.3142", "292.17, 562.071, 33.1288, 0.3736", "291.055, 561.816, 33.266, 0.3342", "289.966, 561.473, 33.3007, 0.3006", "288.882, 561.114, 33.2833, 0.2758", "287.794, 560.76, 33.2671, 0.2768", "286.69, 560.465, 33.2618, 0.2786", "285.562, 560.292, 33.2696, 0.282", "284.42, 560.229, 33.2923, 0.2882", "283.276, 560.226, 33.3334, 0.301", "282.132, 560.245, 33.3917, 0.3182", "280.995, 560.352, 33.4653, 0.381", "279.869, 560.515, 33.5846, 0.3478", "278.765, 560.729, 33.7809, 0.327", "277.656, 560.949, 34.0102, 0.3192", "276.522, 561.091, 34.2213, 0.383", "275.423, 561.345, 34.3728, 0.3516", "274.43, 561.87, 34.533, 0.3326", "273.366, 562.186, 34.7561, 0.3372", "272.328, 562.625, 35.009, 0.3796", "271.221, 562.859, 35.2794, 0.5226", "270.08, 562.907, 35.5536, 0.476", "268.953, 562.773, 35.8884, 0.53", "267.845, 562.54, 36.2961, 0.4056", "266.775, 562.816, 36.7968, 0.3496", "265.741, 563.213, 37.4097, 0.3142", "264.672, 563.595, 38.0654, 0.3734", "263.722, 563.478, 38.9113, 0.3338", "262.8, 563.274, 39.8961, 0.3", "261.878, 563.069, 40.9511, 0.2746", "260.946, 562.856, 42.0109, 0.2746", "259.941, 562.533, 42.9122, 0.2746", "258.875, 562.118, 43.5571, 0.2746", "257.808, 561.702, 43.9802, 0.2746", "256.743, 561.286, 44.2445, 0.2746", "255.677, 560.87, 44.4122, 0.2746", "254.601, 560.488, 44.5516, 0.2746", "253.508, 560.161, 44.7292, 0.2746", "252.411, 559.855, 44.9697, 0.2746", "251.314, 559.55, 45.2659, 0.2746", "250.217, 559.244, 45.6106, 0.2746", "249.12, 558.939, 45.997, 0.2746", "248.183, 558.511, 46.5122, 0.2746", "247.304, 557.939, 47.1439, 0.2746", "246.209, 557.834, 47.7341, 0.2744", "245.238, 558.412, 48.3095, 0.2744", "244.297, 559.002, 48.9266, 0.2742", "243.669, 559.949, 49.5062, 0.274", "243.19, 560.776, 50.2412, 0.2736", "242.713, 561.6, 51.091, 0.2728", "241.965, 562.416, 51.8997, 0.2712", "241.161, 563.211, 52.6072, 0.2684", "240.357, 564.005, 53.207, 0.2626", "239.553, 564.799, 53.7062, 0.2542", "238.749, 565.593, 54.101, 0.2288", "237.945, 566.386, 54.7879, 0.2288" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "330.06, 581.979, 25.5959, 0.4634", "330.881, 581.141, 25.8784, 0.546", "332.022, 581.072, 25.8297, 0.4724", "333.135, 581.183, 25.6992, 0.5232", "334.015, 581.408, 25.3134, 0.3934", "334.949, 581.332, 24.845, 0.3258", "335.978, 581.301, 24.661, 0.2752", "336.901, 580.897, 24.8072, 0.276", "337.954, 580.667, 25.1208, 0.277", "339.084, 580.605, 25.4733, 0.2792", "340.202, 580.439, 25.8014, 0.2832", "341.294, 580.098, 26.0604, 0.2904", "342.395, 579.791, 26.2366, 0.305", "343.507, 579.53, 26.364, 0.3258", "344.632, 579.414, 26.4849, 0.395", "345.751, 579.569, 26.6244, 0.3736", "346.86, 579.821, 26.7646, 0.3756", "347.983, 580.032, 26.8643, 0.4062", "349.109, 580.23, 26.9074, 0.5592", "350.17, 580.617, 26.8962, 0.6054", "351.154, 581.182, 26.8033, 0.4712", "352.206, 581.484, 26.6134, 0.3752", "353.337, 581.521, 26.4034, 0.369", "354.476, 581.59, 26.2158, 0.4398", "355.6, 581.761, 26.0383, 0.6284", "356.707, 582.029, 25.8961, 0.7002", "357.763, 582.437, 25.851, 0.8102", "358.802, 582.901, 25.8815, 0.8964", "359.85, 583.358, 25.9263, 0.9422", "360.91, 583.786, 25.9636, 0.6642", "361.988, 584.17, 25.9851, 0.5378", "363.072, 584.534, 25.9826, 0.4752", "364.161, 584.883, 25.9549, 0.4402", "365.248, 585.242, 25.9115, 0.4402", "366.189, 585.853, 25.8482, 0.5814", "367.023, 586.471, 25.6458, 0.6166", "367.572, 587.318, 25.4974, 0.6374", "368.153, 588.249, 25.4797, 0.6622", "368.929, 589.087, 25.4554, 0.7756", "369.562, 590.039, 25.4117, 0.8868", "370.004, 591.042, 25.2356, 0.8878", "370.289, 591.888, 24.8273, 0.7426", "371.008, 592.74, 24.5358, 0.499", "371.516, 593.67, 24.4191, 0.3822", "372.057, 594.665, 24.2934, 0.3694", "372.592, 595.65, 24.1312, 0.5016", "373.268, 596.554, 24.0027, 0.447", "373.93, 597.454, 23.9207, 0.4278", "374.315, 598.52, 23.8014, 0.4508", "374.787, 599.516, 23.7292, 0.6676", "375.39, 600.448, 23.777, 0.6822", "375.741, 601.516, 23.8756, 0.5308", "375.838, 602.64, 24.0148, 0.4286", "375.928, 603.77, 24.1086, 0.5168", "376.127, 604.888, 24.1203, 0.4774", "376.265, 606.015, 24.0736, 0.4732", "376.409, 607.124, 23.963, 0.5886", "376.768, 608.155, 23.8966, 0.6624", "377.255, 609.133, 23.9904, 0.5656", "377.655, 610.164, 24.0705, 0.6034", "378.026, 611.236, 24.1228, 0.5338", "378.395, 612.303, 24.2278, 0.6266", "378.762, 613.361, 24.3964, 0.637", "378.937, 614.473, 24.5591, 0.5252", "379.019, 615.612, 24.6893, 0.4964", "379.16, 616.654, 24.656, 0.4924", "380.004, 617.05, 24.4488, 0.4728", "380.762, 617.65, 24.4572, 0.4968", "381.117, 618.652, 24.5703, 0.705", "381.632, 619.67, 24.6221, 0.7544", "382.203, 620.656, 24.6282, 0.6492", "382.738, 621.662, 24.6285, 0.7244", "383.186, 622.698, 24.5437, 0.6946", "383.48, 623.735, 24.3102, 0.5462", "383.519, 624.784, 23.9646, 0.4938", "383.421, 625.763, 23.7286, 0.4596", "383.62, 626.641, 23.7938, 0.5486", "384.23, 627.572, 23.9896, 0.6604", "384.795, 628.385, 24.0587, 0.6684", "385.078, 629.393, 24.2486, 0.7358", "385.454, 630.311, 24.6498, 0.6054", "385.662, 631.404, 25.0561, 0.458", "386.283, 632.362, 25.3537, 0.4142", "386.651, 633.247, 25.3574, 0.3624", "386.797, 634.12, 25.6099, 0.3528", "387.353, 634.965, 25.921, 0.373", "388.061, 635.764, 26.024, 0.4554", "389.031, 636.032, 25.8527, 0.6176", "389.801, 636.695, 25.5354, 0.873", "390.512, 637.554, 25.2515, 0.8802", "391.038, 638.389, 24.9665, 0.6406", "391.457, 639.261, 24.8066, 0.5086", "392.324, 639.744, 24.5123, 0.5788", "393.182, 640.337, 24.208, 0.7816", "394.031, 641.067, 23.8969, 0.8054", "395.043, 641.577, 23.6272, 0.7282", "396.029, 642.106, 23.354, 0.7174", "397.11, 642.458, 23.1479, 0.74", "398.181, 642.835, 23.0093, 0.5762", "399.217, 643.31, 22.9303, 0.356", "399.995, 643.75, 23.6222, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "330.06, 581.979, 25.5959, 0.4634", "330.618, 582.762, 28.0647, 0.6864", "330.915, 583.841, 28.7577, 0.7236", "331.383, 584.862, 29.0595, 0.7616", "332.151, 585.688, 29.4216, 0.7946", "332.725, 586.66, 29.8267, 0.8108", "333.174, 587.701, 30.2602, 0.8284", "333.741, 588.682, 30.7093, 0.6942", "334.253, 589.685, 31.1839, 0.5692", "334.53, 590.755, 31.7114, 0.65", "334.963, 591.781, 32.2616, 0.6562", "335.605, 592.705, 32.7972, 0.9074", "336.215, 593.594, 33.3724, 0.895", "336.794, 594.449, 33.9926, 0.906", "337.618, 595.239, 34.466, 0.7616", "338.452, 596.022, 34.8068, 0.6068" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "300.58, 578.684, 25.3982, 0.7932", "299.913, 578.328, 25.4688, 0.773", "298.919, 577.795, 25.4545, 0.702", "297.925, 577.238, 25.3918, 0.5034", "296.794, 577.185, 25.3425, 0.4606", "295.726, 577.349, 25.4324, 0.4036" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "300.58, 578.684, 25.3982, 0.7932", "299.864, 578.872, 26.1912, 0.2288", "298.848, 579.388, 26.2962, 0.4942", "298.176, 580.302, 26.3234, 0.7508", "298.022, 581.409, 26.448, 0.822", "298.006, 582.552, 26.5692, 0.8588", "297.97, 583.695, 26.6874, 0.7028", "297.74, 584.784, 26.8876, 0.5874", "297.289, 585.828, 27.0894, 0.6724", "296.873, 586.878, 27.2983, 0.7536", "296.653, 587.994, 27.3921, 0.8164", "296.636, 589.115, 27.3619, 0.6716", "296.6, 590.258, 27.3272, 0.528", "296.374, 591.377, 27.3073, 0.5704" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "306.861, 578.529, 32.149, 0.924", "305.877, 577.781, 33.4835, 0.2288", "304.874, 577.681, 33.8719, 0.287", "303.815, 577.833, 34.3165, 0.2988", "302.871, 578.471, 34.6287, 0.3142" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "306.861, 578.529, 32.149, 0.924", "306.068, 578.767, 32.3224, 0.8538", "305.144, 579.401, 32.4769, 0.722", "304.08, 579.813, 32.5973, 0.7124", "303.043, 580.297, 32.6942, 0.7002", "302.068, 580.85, 32.8, 0.6506", "301.008, 581.281, 32.8608, 0.4604", "299.948, 581.71, 32.9059, 0.3558", "298.838, 581.987, 32.933, 0.3306", "297.707, 582.153, 32.9468, 0.3812", "296.575, 582.322, 32.9465, 0.4584", "295.496, 582.703, 32.9333, 0.6818", "294.429, 583.115, 32.9182, 0.7082", "293.364, 583.531, 32.9042, 0.5798", "292.33, 584.013, 32.8868, 0.5162", "291.241, 584.29, 32.793, 0.6954", "290.171, 584.606, 32.6892, 0.7286", "289.128, 584.602, 32.7729, 0.6408", "288.061, 584.689, 32.8616, 0.516", "287.044, 584.309, 32.8068, 0.5588", "286.025, 583.872, 32.6956, 0.6794", "285.026, 583.323, 32.6332, 0.7032", "284.022, 582.853, 32.6948, 0.8026", "282.93, 582.732, 32.8908, 0.718", "281.791, 582.691, 33.1024, 0.7212", "280.925, 581.945, 33.3203, 0.6384", "280.086, 581.174, 33.516, 0.6856", "279.104, 580.799, 33.7952, 0.4858", "278.618, 580.566, 34.2992, 0.3654", "277.707, 580.166, 34.4702, 0.3012", "277.156, 579.322, 34.384, 0.325", "276.347, 578.708, 34.1611, 0.3634", "275.41, 578.275, 34.1264, 0.4608", "274.591, 577.897, 34.1905, 0.516", "273.856, 577.151, 34.1236, 0.5408", "273.072, 576.461, 34.1984, 0.5044", "272.431, 575.682, 34.54, 0.609", "272.06, 574.724, 35.0454, 0.653", "271.305, 573.976, 35.5303, 0.5484", "270.35, 573.406, 36.0153, 0.571", "269.319, 572.929, 36.3933, 0.4774", "268.716, 571.966, 36.6358, 0.5028", "268.189, 570.977, 36.8684, 0.5006" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "310.448, 588.827, 12.64, 0.7174", "310.214, 589.501, 10.8321, 0.9152", "310.563, 590.364, 10.0624, 0.6754", "311.564, 590.622, 9.6984, 0.6638", "312.227, 591.204, 9.2252, 0.6554", "312.91, 592.092, 8.8102, 0.5762", "313.918, 592.585, 8.437, 0.5084", "314.6, 593.393, 7.56, 0.9152" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "310.448, 588.827, 12.64, 0.7174", "310.252, 589.723, 12.2861, 0.7158", "310.439, 590.759, 12.1212, 0.6488", "310.089, 591.67, 12.1654, 0.6066", "309.306, 592.387, 12.1033, 0.8162", "308.699, 593.255, 11.9154, 0.7234", "308.024, 594.171, 11.7396, 0.829", "307.476, 595.159, 11.5254, 0.8208", "307.069, 596.222, 11.3151, 0.6508", "306.492, 597.208, 11.1938, 0.63", "305.813, 598.063, 11.279, 0.5358", "305.24, 599.049, 11.4055, 0.6304", "304.669, 600.041, 11.5097, 0.6424", "303.833, 600.82, 11.5864, 0.5426", "302.741, 601.117, 11.671, 0.4934", "301.692, 601.553, 11.6486, 0.6568", "300.783, 602.23, 11.5489, 0.6402", "299.791, 602.723, 11.3674, 0.5592", "298.995, 603.542, 11.2216, 0.6526", "298.057, 604.197, 11.1227, 0.5592", "297.057, 604.744, 11.0452, 0.5338", "296.131, 605.213, 11.5346, 0.6864" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "301.241, 586.761, 12.4662, 0.53", "300.512, 587.73, 11.6046, 0.411", "299.848, 588.468, 11.1482, 0.3336", "299.253, 589.332, 10.9348, 0.4104", "298.738, 590.295, 10.8791, 0.3982", "298.033, 591.11, 10.7604, 0.4396", "297.512, 591.92, 10.4378, 0.435", "296.898, 592.726, 10.0444, 0.3634", "296.029, 592.931, 9.9078, 0.3076", "295.404, 593.888, 9.7434, 0.2886", "294.907, 594.911, 9.5539, 0.3004", "294.318, 595.815, 9.308, 0.3222", "293.39, 596.098, 8.9242, 0.3648", "292.83, 595.433, 8.4339, 0.4334", "292.218, 594.513, 7.9702, 0.6102", "291.402, 593.712, 7.6028, 0.6976", "290.705, 592.812, 7.327, 0.6526", "289.724, 592.33, 7.1305, 0.661", "289.089, 591.562, 6.44, 1.144" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "301.241, 586.761, 12.4662, 0.53", "300.367, 587.099, 13.2224, 0.9152", "299.307, 586.901, 13.0186, 0.6442", "298.444, 586.3, 12.8461, 0.5822", "297.387, 586.357, 12.5558, 0.62", "296.302, 586.685, 12.3175, 0.6334", "295.289, 586.945, 12.2494, 0.4768", "294.164, 586.966, 12.1111, 0.381", "293.241, 586.374, 11.8446, 0.4028", "292.846, 585.601, 11.34, 0.3894", "291.9, 585.053, 10.8024, 0.3974", "291.218, 584.136, 10.3468, 0.4824", "290.583, 583.202, 10.0419, 0.5282", "289.717, 582.55, 9.7527, 0.6976", "289.211, 581.548, 9.5264, 0.8304", "289.034, 580.435, 9.322, 0.8136", "289.089, 579.292, 8.9989, 0.6864" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "325.37, 562.604, 25.3677, 0.9238", "326.027, 561.792, 25.3338, 0.93", "326.777, 560.934, 25.284, 0.9478", "327.579, 560.159, 25.1782, 0.95", "328.401, 559.382, 25.1922, 1.1034", "329.106, 558.594, 25.3946, 1.1218", "329.538, 557.557, 25.662, 1.0748" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "325.37, 562.604, 25.3677, 0.9238", "325.108, 560.818, 25.4114, 0.2288", "324.727, 559.811, 25.4005, 0.3778", "324.022, 558.973, 25.478, 0.342", "323.163, 558.266, 25.65, 0.315", "322.105, 557.881, 25.8334, 0.3034", "321.623, 557.002, 26.0862, 0.3226", "320.773, 556.33, 26.3575, 0.389", "319.739, 555.849, 26.602, 0.364", "318.75, 555.277, 26.7812, 0.3506", "317.89, 554.639, 26.9567, 0.394", "316.793, 554.815, 27.1589, 0.3716", "315.739, 554.524, 27.337, 0.372", "314.718, 554.179, 27.508, 0.3974", "313.67, 554.171, 27.5769, 0.555", "312.574, 554.15, 27.6464, 0.5382", "311.547, 553.722, 27.6738, 0.6344", "310.5, 553.314, 27.7253, 0.6524", "309.517, 553.012, 27.8844, 0.5486", "308.65, 552.469, 28.0871, 0.565", "307.593, 552.108, 28.2761, 0.4964", "306.716, 551.93, 28.2159, 0.3928", "305.621, 551.635, 28.2358, 0.3148", "304.499, 551.604, 28.3156, 0.3018", "303.553, 551.464, 28.6241, 0.327", "302.744, 551.006, 29.05, 0.3614", "301.889, 550.381, 29.2611, 0.4866", "300.828, 550.044, 29.4801, 0.4208", "299.773, 549.844, 29.6657, 0.3712", "298.722, 549.959, 29.633, 0.385", "297.604, 549.735, 29.5716, 0.3552", "296.503, 549.451, 29.5128, 0.3402", "295.439, 549.115, 29.4417, 0.3452", "294.527, 548.591, 29.2379, 0.4256", "293.6, 548.077, 29.0083, 0.4572", "292.481, 548.124, 28.8736, 0.3992", "291.349, 548.121, 28.7367, 0.3996", "290.313, 547.7, 28.5788, 0.3352", "289.319, 547.156, 28.392, 0.3026", "288.365, 546.529, 28.2187, 0.2794", "287.245, 546.382, 28.0297, 0.2836", "286.103, 546.306, 27.8463, 0.291", "284.99, 546.047, 27.6758, 0.306", "284.094, 545.372, 27.4935, 0.3274", "283.37, 544.615, 27.1838, 0.3992", "282.336, 544.167, 26.8716, 0.3766", "281.231, 543.926, 26.5821, 0.4046", "280.434, 543.418, 26.2931, 0.3446", "280.17, 542.31, 26.0523, 0.3198", "279.562, 541.398, 25.8555, 0.3122", "278.593, 540.827, 25.6939, 0.3402", "277.498, 540.526, 25.5511, 0.4166", "276.42, 540.156, 25.4456, 0.4396", "275.415, 539.617, 25.3767, 0.3718", "274.408, 539.075, 25.3313, 0.3242", "273.514, 538.379, 25.3187, 0.3142", "272.597, 537.706, 25.3025, 0.3734", "271.711, 536.987, 25.2792, 0.3338", "270.961, 536.129, 25.2512, 0.3", "269.989, 535.608, 25.2174, 0.2746", "268.887, 535.303, 25.1779, 0.2746", "267.897, 534.764, 25.1056, 0.2746", "267.034, 534.026, 25.0009, 0.2746", "266.315, 533.144, 24.906, 0.2748", "265.636, 532.223, 24.8335, 0.2748", "264.753, 531.515, 24.7811, 0.275", "263.817, 530.856, 24.747, 0.2756", "262.867, 530.218, 24.7285, 0.2764", "261.999, 529.477, 24.7181, 0.2778", "261.266, 528.602, 24.7069, 0.2806", "260.467, 527.787, 24.6907, 0.2858", "259.54, 527.121, 24.6674, 0.2952", "258.648, 526.407, 24.6355, 0.3136", "257.541, 526.202, 24.5944, 0.3426", "256.638, 525.514, 24.5361, 0.421", "255.67, 524.913, 24.4353, 0.4476", "254.661, 524.388, 24.2978, 0.3878", "253.672, 523.814, 24.1724, 0.3476", "252.624, 523.361, 24.0416, 0.3884", "251.575, 522.932, 23.8809, 0.3626", "250.465, 522.655, 23.7586, 0.348", "249.373, 522.315, 23.6704, 0.3892", "248.334, 521.837, 23.6068, 0.3628", "247.215, 521.604, 23.56, 0.3546", "246.126, 521.256, 23.5292, 0.3712", "245.132, 520.701, 23.4724, 0.4762", "244.359, 519.87, 23.3806, 0.5394", "243.303, 519.439, 23.3274, 0.6088", "242.235, 519.079, 23.3512, 0.5114", "241.115, 519.098, 23.4083, 0.5126", "240.131, 518.518, 23.4576, 0.5488", "239.201, 517.87, 23.4629, 0.4498", "238.386, 517.074, 23.476, 0.3856", "237.734, 516.141, 23.501, 0.3754", "236.911, 515.37, 23.5763, 0.5134", "235.975, 514.755, 23.7157, 0.4654", "235.117, 514.071, 23.8406, 0.4794", "234.47, 513.177, 23.816, 0.4628", "233.695, 512.344, 23.7157, 0.4098", "232.908, 511.537, 23.5894, 0.419", "232.073, 510.806, 23.5169, 0.372", "231.109, 510.207, 23.389, 0.3666", "230.213, 509.543, 23.1983, 0.4184", "229.461, 508.755, 22.9502, 0.443", "228.949, 507.84, 22.6559, 0.3782", "228.64, 506.779, 22.482, 0.3348", "228.277, 505.839, 22.5792, 0.3398", "228.102, 504.868, 22.8897, 0.3924", "227.887, 503.778, 23.1563, 0.5088", "227.686, 502.693, 23.315, 0.633", "227.611, 501.579, 23.3786, 0.6212", "227.477, 500.484, 23.4326, 0.63", "227.441, 499.42, 23.6051, 0.4972", "227.291, 498.309, 23.7717, 0.517", "227.651, 497.267, 23.982, 0.4068", "227.686, 496.144, 24.1847, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "307.802, 566.629, 35.3055, 0.4852", "307.008, 566.265, 35.9251, 0.3624", "305.908, 566.074, 36.4675, 0.3056", "304.851, 565.661, 36.9314, 0.2852", "303.74, 565.495, 37.3643, 0.294", "302.603, 565.446, 37.765, 0.3114", "301.554, 565.297, 38.2598, 0.3388", "300.675, 564.573, 38.7033, 0.414", "299.861, 563.8, 39.1003, 0.4348", "298.908, 563.31, 39.5895, 0.363", "297.931, 563.136, 40.1727, 0.3068", "296.874, 562.956, 40.719, 0.287", "295.923, 562.366, 41.2552, 0.2988", "294.872, 561.981, 41.7561, 0.3142", "293.779, 561.71, 42.2425, 0.3734", "292.687, 561.447, 42.7146, 0.3338", "291.564, 561.265, 43.1698, 0.3", "290.558, 560.801, 43.629, 0.2746", "289.537, 560.438, 44.1599, 0.2746", "288.48, 560.184, 44.7726, 0.2746", "287.422, 559.93, 45.4398, 0.2746", "286.364, 559.677, 46.1392, 0.2746", "285.307, 559.423, 46.851, 0.2746", "284.186, 559.353, 47.4754, 0.2746", "283.05, 559.312, 48.0158, 0.2746", "281.936, 559.287, 48.536, 0.2746", "280.827, 559.266, 49.042, 0.2746", "279.716, 559.244, 49.5323, 0.2746", "278.605, 559.224, 50.0058, 0.2746", "277.781, 558.482, 50.3863, 0.2746", "276.753, 557.991, 50.6722, 0.2746", "275.63, 557.779, 50.8847, 0.2746", "274.487, 557.772, 51.051, 0.2746", "273.344, 557.803, 51.212, 0.2746", "272.247, 557.582, 51.4458, 0.2746", "271.151, 557.356, 51.7423, 0.2746", "270.055, 557.129, 52.0764, 0.2746", "268.914, 557.157, 52.3662, 0.2746", "267.78, 557.302, 52.5823, 0.2746", "266.653, 557.5, 52.7335, 0.2746", "265.553, 557.817, 52.8321, 0.2746", "264.454, 558.134, 52.9004, 0.2746", "263.4, 558.577, 52.96, 0.2746", "262.345, 559.021, 53.0303, 0.2746", "262.318, 559.421, 53.1891, 0.2746", "261.769, 560.341, 53.3397, 0.2746", "260.652, 560.547, 53.5004, 0.2746", "259.546, 560.788, 53.7054, 0.2746", "258.441, 561.029, 53.9378, 0.2746", "257.306, 561.008, 54.1394, 0.2746", "256.164, 561.074, 54.3049, 0.2746", "255.048, 561.277, 54.4242, 0.2746", "253.962, 561.584, 54.5124, 0.2746", "253.009, 562.152, 54.712, 0.2746", "252.056, 562.722, 54.9976, 0.2746", "251.105, 563.291, 55.344, 0.2746", "250.112, 563.81, 55.6814, 0.2746", "249.069, 563.989, 55.9317, 0.2746", "247.962, 564.146, 56.0944, 0.2746", "246.843, 563.946, 56.1708, 0.2746", "245.738, 563.658, 56.1798, 0.2746", "244.605, 563.497, 56.1414, 0.2746", "243.472, 563.336, 56.0756, 0.2746", "242.462, 562.825, 55.9952, 0.2746", "241.445, 562.953, 55.9037, 0.2746", "240.641, 563.427, 55.5876, 0.2746", "239.743, 564.135, 55.344, 0.2746", "238.866, 564.84, 55.174, 0.2746", "238.089, 565.668, 55.0746, 0.2746", "237.029, 565.403, 55.0413, 0.2746", "236.276, 565.357, 55.0192, 0.2746", "235.673, 566.158, 55.2566, 0.2746", "234.82, 566.919, 55.4509, 0.2746", "233.887, 567.581, 55.6041, 0.2746", "232.881, 568.107, 55.7189, 0.2746", "231.779, 568.258, 55.7992, 0.2746", "230.642, 568.134, 55.8508, 0.2746", "229.532, 567.866, 55.8709, 0.2746", "228.429, 567.562, 55.8975, 0.2746", "227.373, 567.139, 55.9303, 0.2746", "226.26, 567.333, 55.9776, 0.2746", "225.33, 567.964, 56.0907, 0.2746", "224.367, 568.582, 56.1842, 0.2746", "223.266, 568.816, 56.2598, 0.2746", "222.13, 568.885, 56.3203, 0.2746", "221.216, 568.321, 56.369, 0.2746", "220.268, 567.681, 56.4094, 0.2746", "219.27, 567.131, 56.4491, 0.2746", "218.136, 566.982, 56.5057, 0.2746", "217.002, 566.834, 56.5855, 0.2746", "216.043, 566.797, 56.693, 0.2746", "214.91, 566.956, 56.828, 0.2746", "213.802, 567.062, 57.055, 0.2744", "212.717, 567.125, 57.4039, 0.2744", "211.631, 567.188, 57.8292, 0.2742", "210.511, 567.157, 58.2123, 0.274", "209.37, 567.068, 58.4956, 0.2736", "208.23, 566.994, 58.6863, 0.2728", "207.092, 567.105, 58.7933, 0.2712", "205.965, 567.283, 58.837, 0.2684", "204.852, 567.548, 58.8462, 0.2626", "203.76, 567.891, 58.8462, 0.2542", "202.712, 568.331, 58.8462, 0.2288", "201.741, 568.935, 58.8462, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "307.802, 566.629, 35.3055, 0.4852", "308.194, 566.772, 35.0034, 0.6864", "308.031, 567.904, 35.0034, 0.4422", "307.869, 569.036, 35.0034, 0.322", "307.706, 570.169, 35.0034, 0.2684", "307.596, 571.307, 35.0034, 0.2626", "307.508, 572.447, 35.0034, 0.2542", "307.436, 573.589, 35.0034, 0.2288", "307.24, 574.712, 35.0034, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "338.452, 596.022, 34.8068, 0.6068", "339.614, 596.736, 35.1397, 0.458", "340.184, 597.685, 35.1232, 0.4264", "340.69, 598.652, 35.2565, 0.5544", "341.304, 599.605, 35.4752, 0.573", "341.991, 600.519, 35.7322, 0.525", "342.771, 601.273, 36.1376, 0.608", "343.488, 602.12, 36.6122, 0.6136", "344.122, 603.057, 37.0796, 0.657", "344.87, 603.897, 37.5276, 0.577", "345.676, 604.676, 37.97, 0.5206", "346.253, 605.66, 38.3418, 0.4286", "347.02, 606.447, 38.5235, 0.4252", "347.954, 607.014, 38.7932, 0.5226", "348.566, 607.919, 39.1426, 0.6578", "349.147, 608.899, 39.4722, 0.6698", "349.723, 609.885, 39.7558, 0.7086", "350.432, 610.782, 40.0218, 0.6982", "351.076, 611.725, 40.2984, 0.623", "351.659, 612.705, 40.5891, 0.5246", "352.344, 613.597, 40.9492, 0.601", "353.093, 614.401, 41.4207, 0.6304", "353.705, 615.283, 42.0053, 0.543", "354.284, 616.196, 42.6418, 0.3848", "354.924, 617.139, 43.1819, 0.3", "355.657, 617.964, 43.7128, 0.2746", "356.231, 618.461, 44.3293, 0.2746" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "338.452, 596.022, 34.8068, 0.6068", "337.971, 595.586, 36.6052, 0.2288", "337.736, 595.284, 38.9707, 0.3672", "338.361, 595.179, 39.9566, 0.4386", "339.34, 594.703, 40.8565, 0.6152", "339.297, 594.617, 41.9135, 0.7296", "338.6, 595.145, 43.0116, 0.6028", "337.769, 595.881, 43.9656, 0.4112", "337.017, 596.73, 44.7308, 0.302", "336.542, 597.748, 45.3911, 0.2782", "335.796, 598.588, 45.9578, 0.2814", "334.803, 598.997, 46.5346, 0.2868", "333.793, 599.272, 47.1929, 0.2984", "332.745, 599.689, 47.8209, 0.3136", "331.698, 600.15, 48.4033, 0.3724", "330.901, 600.958, 48.9672, 0.332", "330.184, 601.706, 49.7386, 0.2966", "329.526, 602.61, 50.5638, 0.2684", "328.922, 603.357, 51.5589, 0.2626", "328.361, 603.959, 52.7324, 0.2542", "327.802, 604.56, 53.9916, 0.2288", "327.241, 605.161, 56.8058, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "295.726, 577.349, 25.4324, 0.4036", "295.081, 576.577, 25.4976, 0.4182", "294.233, 575.844, 25.4696, 0.5468", "293.258, 575.272, 25.3854, 0.5228", "292.294, 574.654, 25.3103, 0.6064", "291.345, 574.021, 25.2588, 0.5988", "290.338, 573.485, 25.2266, 0.4582", "289.318, 572.975, 25.2333, 0.3528" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "295.726, 577.349, 25.4324, 0.4036", "295.683, 577.333, 26.0635, 0.2288", "294.729, 577.148, 26.7826, 0.2898", "293.604, 577.084, 27.0796, 0.304", "292.618, 577.251, 27.2908, 0.324", "291.747, 576.753, 27.4319, 0.3916", "290.914, 576.022, 27.6256, 0.3688", "289.859, 575.643, 27.7788, 0.3592", "288.757, 575.547, 27.7852, 0.411", "287.633, 575.369, 27.7936, 0.3992", "286.504, 575.177, 27.8342, 0.4414", "285.374, 575.07, 27.9597, 0.4384", "284.25, 575.002, 28.1742, 0.3698", "283.142, 574.807, 28.4749, 0.3194", "282.082, 574.442, 28.8462, 0.3116", "281.001, 574.086, 29.2102, 0.3378", "279.908, 573.748, 29.526, 0.4184", "278.832, 573.365, 29.8172, 0.4116", "277.754, 572.991, 30.1134, 0.4718", "276.667, 573.015, 30.5071, 0.458", "275.63, 573.486, 30.877, 0.5846", "274.579, 573.846, 31.3149, 0.5384", "273.531, 574.17, 31.8203, 0.671", "272.431, 574.375, 32.3324, 0.5452", "271.334, 574.663, 32.8045, 0.5142", "270.278, 575.102, 33.1904, 0.6186", "269.185, 575.437, 33.549, 0.712", "268.062, 575.503, 33.9371, 0.6858", "266.938, 575.569, 34.3608, 0.6902" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "296.374, 591.377, 27.3073, 0.5704", "296.755, 591.281, 27.8625, 0.4576", "297.696, 591.198, 29.2284, 0.6618", "298.518, 591.709, 29.8287, 0.599", "299.213, 592.615, 30.3657, 0.7268", "299.89, 593.508, 30.896, 0.6928", "300.345, 594.464, 31.4824, 0.574", "300.43, 595.56, 32.06, 0.3952", "300.272, 596.64, 32.4764, 0.3192", "300.027, 597.69, 32.8378, 0.3112", "299.975, 598.781, 33.3264, 0.3372", "300.308, 599.641, 34.0245, 0.4162", "300.65, 600.606, 34.8342, 0.4138", "301.164, 601.602, 35.6252, 0.4458", "301.513, 602.688, 36.3376, 0.5568", "301.711, 603.803, 37.0238, 0.74", "302.032, 604.444, 37.9215, 0.7316", "302.142, 605.468, 38.8315, 0.5748", "302.625, 606.232, 39.793, 0.513", "303.081, 607.247, 40.5308, 0.6598", "303.255, 608.355, 41.1732, 0.8068", "303.584, 609.342, 41.8247, 0.7722", "304.226, 610.179, 42.4788, 0.5978", "304.579, 611.166, 43.0632, 0.58", "304.832, 612.238, 43.6036, 0.6654", "305.145, 613.288, 44.1706, 0.7072", "304.815, 614.377, 44.613, 0.6638", "304.388, 615.402, 45.0744, 0.4842", "303.805, 616.357, 45.5098, 0.4032", "303.404, 617.251, 46.0782, 0.403", "302.754, 618.158, 46.6052, 0.5892", "302.126, 618.989, 47.1811, 0.4872", "301.706, 619.856, 47.642, 0.4098", "301.978, 620.942, 47.9161, 0.4102", "302.335, 622.001, 48.1608, 0.3978", "302.881, 622.963, 48.463, 0.4386", "303.402, 623.963, 48.7808, 0.4332", "303.815, 625.029, 49.0862, 0.3602", "304.322, 626.047, 49.413, 0.3018", "305.167, 626.764, 49.7627, 0.278", "305.948, 627.096, 50.3264, 0.281", "306.341, 627.103, 51.2061, 0.2862", "307.394, 626.66, 51.9252, 0.2966", "308.386, 626.097, 52.5227, 0.3136", "309.376, 625.536, 52.9959, 0.356", "310.368, 624.973, 53.3456, 0.3814", "311.359, 624.41, 53.7732, 0.6864" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "296.374, 591.377, 27.3073, 0.5704", "296.228, 592.463, 27.2765, 0.5242", "296.225, 593.602, 27.2597, 0.5864", "296.363, 594.736, 27.2468, 0.6696", "296.568, 595.854, 27.249, 0.7524", "296.644, 596.97, 27.2748, 0.567", "296.807, 598.043, 27.1544, 0.494", "297.139, 598.734, 26.7198, 0.4176", "297.249, 599.725, 26.1733, 0.447", "296.789, 600.638, 25.9504, 0.5874", "296.711, 601.741, 25.7888, 0.6584", "296.577, 602.877, 25.7183, 0.5658", "296.684, 603.937, 25.8877, 0.567", "297.31, 604.887, 26.0968, 0.6462", "297.479, 606.016, 26.2668, 0.6474" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "302.871, 578.471, 34.6287, 0.3142", "302.625, 578.734, 36.094, 0.2288", "302.178, 579.586, 37.828, 0.3342", "301.546, 580.32, 38.5412, 0.3868", "300.536, 580.611, 39.37, 0.4746", "299.521, 580.738, 40.3099, 0.6838", "298.424, 580.851, 41.195, 0.8474", "297.618, 581.35, 42.1165, 0.8664", "296.766, 581.703, 43.0814, 0.6796", "295.753, 581.781, 44.0101, 0.4962", "294.622, 581.801, 44.7577, 0.5102", "293.524, 581.532, 45.3387, 0.4176", "292.445, 581.276, 45.8153, 0.3654" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "302.871, 578.471, 34.6287, 0.3142", "302.612, 579.562, 34.7992, 0.3738", "302.137, 580.59, 34.6438, 0.3344", "301.663, 581.619, 34.3885, 0.3012", "301.202, 582.651, 34.0858, 0.2766", "300.753, 583.688, 33.7814, 0.2784", "300.214, 584.683, 33.5107, 0.2818", "299.507, 585.575, 33.3206, 0.288", "298.751, 586.434, 33.2105, 0.2996", "298.205, 587.423, 33.1666, 0.3206", "297.551, 588.341, 33.1772, 0.362", "296.716, 589.12, 33.2321, 0.4266", "295.893, 589.877, 33.3903, 0.6054", "294.873, 590.278, 33.4681, 0.6498", "294.347, 591.278, 33.6356, 0.7542", "294.048, 592.324, 33.9122, 0.6108", "293.539, 593.275, 34.2518, 0.6078", "293.068, 594.281, 34.6077, 0.6994", "292.918, 595.38, 34.9642, 0.6258", "293.056, 596.439, 35.1554, 0.5266", "293.28, 597.537, 35.2352, 0.3918", "293.324, 598.676, 35.2839, 0.3614", "293.172, 599.805, 35.3427, 0.3826", "293.302, 600.771, 35.5776, 0.5032", "293.56, 601.76, 35.9313, 0.5616", "293.594, 602.811, 36.0629, 0.7852", "293.946, 603.864, 36.0343, 0.868", "294.373, 604.919, 35.9139, 0.8012", "294.604, 606.032, 35.7227, 0.6044", "294.765, 607.164, 35.5214, 0.5924", "294.909, 608.299, 35.3461, 0.688", "295.551, 609.242, 35.2237, 0.7504", "296.192, 610.166, 35.0582, 0.7376", "296.525, 611.22, 34.8681, 0.6502", "296.668, 612.347, 34.7256, 0.5702", "296.889, 613.463, 34.6525, 0.7098", "297.18, 614.476, 34.4971, 0.714", "297.617, 615.47, 34.2938, 0.5842", "297.903, 616.34, 34.3784, 0.5554", "298.299, 617.331, 34.5632, 0.6178", "298.505, 618.303, 34.5411, 0.6294", "298.578, 619.192, 34.5279, 0.4682", "298.324, 620.199, 34.6875, 0.3698", "297.927, 621.162, 34.7234, 0.3588", "297.727, 622.241, 34.6738, 0.421", "297.442, 623.314, 34.7466, 0.5936", "297.027, 624.376, 34.8673, 0.6354", "296.597, 625.436, 34.9902, 0.6908", "296.089, 626.459, 35.1022, 0.6714", "295.457, 627.356, 35.1442, 0.543", "295.589, 628.382, 35.4189, 0.5238", "295.799, 629.404, 35.8428, 0.5692", "296.342, 630.363, 36.2981, 0.4904", "296.622, 631.346, 36.6817, 0.4486", "296.306, 632.436, 37.0569, 0.55", "296.139, 633.556, 37.4391, 0.5578", "295.857, 634.591, 37.8347, 0.5316", "295.194, 634.849, 38.3776, 0.4502", "294.93, 635.568, 38.8601, 0.4596", "294.587, 636.629, 39.1815, 0.6134", "294.033, 637.621, 39.4416, 0.6952", "293.658, 638.692, 39.6858, 0.6898", "293.995, 639.757, 39.9168, 0.5272", "293.883, 640.816, 40.182, 0.5084", "293.286, 641.625, 40.6227, 0.4742", "292.834, 642.655, 41.0556, 0.636", "292.718, 643.738, 41.5296, 0.5288", "292.269, 644.623, 42.0406, 0.4764", "291.49, 645.436, 42.4525, 0.5842", "291.254, 646.47, 42.8036, 0.4764", "291.055, 646.929, 43.3896, 0.396", "290.52, 647.503, 44.1602, 0.353", "290.21, 648.483, 44.9372, 0.4464", "290.057, 649.58, 45.6126, 0.466", "289.885, 650.709, 46.1028, 0.5592", "289.927, 651.761, 46.1196, 0.6864" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "268.189, 570.977, 36.8684, 0.5006", "267.285, 569.693, 37.6692, 0.6864", "266.481, 568.996, 37.947, 0.4664", "265.977, 568.097, 38.159, 0.3616", "265.103, 567.49, 38.5137, 0.3672", "264.21, 566.934, 38.9729, 0.322", "263.159, 566.726, 39.4083, 0.2796", "262.057, 566.844, 39.8096, 0.2288", "261.061, 567.195, 40.04, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "268.189, 570.977, 36.8684, 0.5006", "267.441, 570.242, 36.9771, 0.5056", "266.544, 569.57, 37.0471, 0.4726", "265.445, 569.318, 37.1353, 0.3872", "264.349, 569.377, 37.3316, 0.3464", "263.337, 569.313, 37.6894, 0.3858", "262.293, 568.938, 38.033, 0.358", "261.314, 568.488, 38.2082, 0.3396", "260.385, 568.088, 38.4429, 0.3734", "260.069, 567.771, 38.9432, 0.334", "259.047, 567.376, 39.24, 0.3002", "258.506, 566.885, 39.0804, 0.2748", "257.659, 566.939, 38.7022, 0.2752", "256.541, 566.71, 38.393, 0.2756", "255.471, 566.342, 38.1046, 0.2766", "254.462, 565.804, 37.8689, 0.2782", "253.492, 565.221, 37.744, 0.2814", "252.525, 564.722, 37.718, 0.287", "251.387, 564.602, 37.7306, 0.2988", "250.252, 564.469, 37.7468, 0.3142", "249.278, 564.052, 37.7723, 0.3734", "248.419, 563.327, 37.8087, 0.3338", "247.415, 562.777, 37.8591, 0.3", "246.37, 562.336, 37.926, 0.2746", "245.254, 562.092, 38.0125, 0.2746", "244.282, 561.636, 38.1704, 0.2746", "243.458, 560.859, 38.3869, 0.2746", "242.685, 560.045, 38.612, 0.2746", "242.194, 559.076, 38.8623, 0.2746", "241.168, 558.573, 39.1468, 0.2746", "240.135, 558.164, 39.4671, 0.2746", "239.168, 558.183, 39.9252, 0.2746", "238.55, 558.223, 40.7168, 0.2746", "237.832, 558.27, 41.704, 0.2746", "236.693, 558.372, 42.4735, 0.2746", "235.553, 558.472, 43.0396, 0.2746" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "329.538, 557.557, 25.662, 1.0748", "330.15, 556.598, 25.8759, 1.152", "330.924, 555.755, 26.0302, 1.1832" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "329.538, 557.557, 25.662, 1.0748", "330.188, 556.665, 26.1114, 1.144", "331.044, 555.979, 25.6273, 0.9194", "332.022, 555.901, 25.5794, 0.5714", "333.065, 555.962, 25.263, 0.3836", "333.728, 555.986, 24.5092, 0.33", "334.053, 555.605, 23.3848, 0.4032", "334.288, 555.104, 22.0461, 0.3884", "334.701, 554.165, 20.8989, 0.404", "335.216, 553.283, 19.8811, 0.4538", "336.268, 553.132, 19.0084, 0.673", "337.248, 553.126, 18.1597, 0.6924", "338.324, 553.399, 17.5084, 0.5484", "338.659, 554.425, 17.026, 0.4682", "338.907, 555.36, 16.4749, 0.5562", "339.34, 555.781, 15.7884, 0.7154", "339.189, 556.447, 15.0304, 0.8006", "339.236, 557.531, 14.4021, 0.834", "339.501, 558.581, 13.8292, 0.814", "339.854, 559.578, 13.3935, 0.9458", "340.689, 560.308, 13.0278, 1.0568", "341.24, 561.289, 12.7896, 0.9942", "341.461, 562.402, 12.64, 0.808", "341.708, 563.516, 12.5124, 0.5748", "342.146, 564.555, 12.2906, 0.5132", "342.748, 565.482, 11.9328, 0.6588", "343.536, 566.286, 11.5002, 0.8126", "344.336, 567.07, 10.9861, 0.7468", "345.131, 567.866, 10.4107, 0.7246", "345.973, 568.607, 9.8129, 0.6582", "346.892, 569.094, 9.1384, 0.6582", "347.951, 569.307, 8.4678, 0.7458", "348.984, 569.411, 7.7834, 0.7118", "350.11, 569.603, 6.7491, 0.4576" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "356.231, 618.461, 44.3293, 0.2746", "356.251, 618.393, 45.2785, 0.4576", "357.143, 617.734, 45.2575, 0.3594", "358.153, 617.197, 45.253, 0.3", "359.272, 616.985, 45.2612, 0.2746", "360.413, 616.889, 45.2847, 0.2746", "361.556, 616.901, 45.3256, 0.2746", "362.699, 616.919, 45.3863, 0.2746", "363.832, 617.064, 45.4888, 0.2746", "364.954, 617.273, 45.6336, 0.2746", "366.087, 617.391, 45.817, 0.2744", "367.211, 617.21, 46.0348, 0.2744", "368.336, 617.03, 46.2767, 0.2742", "369.461, 616.849, 46.5329, 0.274", "370.585, 616.669, 46.7947, 0.2736", "371.708, 616.489, 47.0565, 0.2728", "372.833, 616.308, 47.3211, 0.2712", "373.958, 616.129, 47.5807, 0.2684", "375.082, 615.948, 47.8296, 0.2626", "376.206, 615.767, 48.064, 0.2542", "377.33, 615.588, 48.2798, 0.2288", "378.455, 615.407, 48.7001, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "356.231, 618.461, 44.3293, 0.2746", "356.359, 618.825, 44.7675, 0.2746", "356.739, 619.904, 45.0612, 0.2746", "357.119, 620.983, 45.2472, 0.2746", "357.457, 622.076, 45.3572, 0.2746", "357.775, 623.176, 45.4023, 0.2746", "358.091, 624.275, 45.4073, 0.2746", "358.333, 625.393, 45.4146, 0.2746", "358.493, 626.525, 45.4247, 0.2746", "358.649, 627.659, 45.4387, 0.2746", "358.804, 628.792, 45.4583, 0.2746", "358.905, 629.931, 45.4857, 0.2746", "358.691, 631.053, 45.5244, 0.2746", "358.467, 632.174, 45.5778, 0.2746", "358.448, 633.318, 45.6518, 0.2746", "358.44, 634.461, 45.7568, 0.2746", "358.432, 635.605, 45.9071, 0.2746", "358.424, 636.749, 46.1157, 0.2746", "358.428, 637.893, 46.387, 0.2746", "358.408, 639.034, 46.7485, 0.2746", "358.185, 639.864, 47.4124, 0.2746", "357.958, 640.69, 48.284, 0.2744", "357.739, 641.548, 49.2579, 0.2744", "357.7, 642.691, 50.0004, 0.2742", "357.661, 643.834, 50.5274, 0.274", "357.622, 644.978, 50.8567, 0.2736", "357.587, 646.121, 51.0138, 0.2728", "357.617, 647.265, 51.063, 0.2712", "357.645, 648.409, 51.063, 0.2684", "357.579, 649.551, 51.063, 0.2626", "357.5, 650.692, 51.063, 0.2542", "357.521, 651.835, 51.063, 0.2288", "357.552, 652.979, 51.063, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "289.318, 572.975, 25.2333, 0.3528", "288.815, 572.618, 25.1345, 0.3202", "287.742, 572.444, 24.9626, 0.3846", "286.644, 572.216, 24.7892, 0.3548", "285.682, 571.723, 24.766, 0.3384", "285.017, 570.956, 24.9354, 0.3478", "284.178, 570.262, 25.1686, 0.4006", "283.115, 569.914, 25.2378, 0.5554", "282.093, 569.443, 25.1432, 0.5672", "281.093, 568.949, 24.8844, 0.5514", "280.008, 568.63, 24.5104, 0.4754", "278.985, 568.235, 24.0257, 0.5622", "278.15, 567.537, 23.4794, 0.533", "277.486, 566.655, 22.9477, 0.486", "276.793, 565.846, 22.468, 0.3638", "275.873, 565.256, 22.0629, 0.3082", "275.127, 564.446, 21.7084, 0.29", "274.266, 563.734, 21.5379, 0.3028", "273.326, 563.269, 21.5751, 0.3292", "272.456, 562.722, 21.6541, 0.3652", "272.112, 561.742, 21.5561, 0.4936", "272.079, 560.641, 21.4026, 0.4336", "271.761, 559.647, 21.124, 0.396", "271.306, 558.652, 20.7141, 0.4256", "270.524, 557.883, 20.2765, 0.4572", "269.573, 557.248, 19.8895, 0.3996", "268.799, 556.431, 19.5152, 0.4002", "268.555, 555.352, 19.0893, 0.3362", "268.311, 554.275, 18.6402, 0.3044", "267.762, 553.301, 18.2, 0.2826", "267.141, 552.369, 17.7792, 0.2896" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "289.318, 572.975, 25.2333, 0.3528", "288.565, 572.685, 24.4306, 0.4576", "287.525, 572.43, 23.2182, 0.413", "286.435, 572.532, 22.7063, 0.425", "285.322, 572.728, 22.1589, 0.383", "284.318, 572.563, 21.4976, 0.388", "283.356, 572.12, 20.8443, 0.4528", "282.923, 571.885, 19.8836, 0.532", "281.951, 571.641, 18.8969, 0.4194", "281.06, 571.129, 17.9612, 0.3266", "280.232, 570.375, 17.2262, 0.277", "279.228, 569.967, 16.5757, 0.279", "278.308, 569.543, 16.1039, 0.2828", "277.331, 569.095, 15.8822, 0.2896", "276.213, 569.181, 15.7592, 0.3024", "275.075, 569.15, 15.6089, 0.3272", "273.975, 569.156, 15.3174, 0.3676", "273.049, 569.346, 14.8033, 0.4694", "272.105, 568.764, 14.2971, 0.5268", "270.988, 568.783, 13.8076, 0.5846", "269.867, 568.894, 13.3888, 0.4706", "268.771, 568.702, 12.9718, 0.4176", "267.674, 568.522, 12.5818, 0.4664", "266.563, 568.546, 12.1702, 0.5282", "265.481, 568.402, 11.6861, 0.5536", "264.398, 568.091, 11.2263, 0.5762", "263.429, 567.517, 10.8066, 0.5084", "262.777, 566.775, 9.6443, 0.2288" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "266.938, 575.569, 34.3608, 0.6902", "265.574, 575.978, 35.3973, 0.2288", "265.164, 576.963, 35.6129, 0.291", "264.859, 578.062, 35.7986, 0.3048", "264.108, 578.891, 35.957, 0.3328", "263.038, 579.238, 36.0937, 0.3718", "262.144, 579.895, 36.2855, 0.507", "261.116, 580.373, 36.475, 0.452", "260.038, 580.644, 36.6825, 0.4608", "259.285, 581.064, 36.7769, 0.3974", "258.369, 581.159, 37.0294, 0.4378", "257.291, 581.326, 37.2462, 0.4318", "256.262, 581.729, 37.5035, 0.3574", "255.156, 581.86, 37.772, 0.2966", "254.017, 581.917, 38.0246, 0.2684", "252.885, 581.86, 38.2071, 0.2626", "251.798, 582.136, 38.3037, 0.2542", "250.721, 582.107, 38.4986, 0.2288", "249.697, 581.599, 38.808, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "266.938, 575.569, 34.3608, 0.6902", "266.049, 575.451, 34.7435, 0.6702", "265.334, 574.803, 35.2864, 0.5408", "264.694, 574.321, 35.966, 0.5198", "263.7, 574.0, 36.5448, 0.563", "262.847, 573.7, 37.1843, 0.4718", "262.152, 572.92, 37.8487, 0.4492", "262.549, 572.341, 38.4174, 0.3822", "261.75, 571.619, 38.8312, 0.379", "260.64, 571.425, 39.0743, 0.4722", "259.516, 571.426, 39.2538, 0.3932", "258.446, 571.163, 39.4156, 0.3254", "257.349, 570.903, 39.4962, 0.2746", "256.249, 570.625, 39.4937, 0.2746", "255.247, 570.093, 39.4209, 0.2746", "254.265, 569.51, 39.2904, 0.2746", "253.267, 568.952, 39.118, 0.2746", "252.266, 568.409, 38.88, 0.2746", "251.149, 568.213, 38.6182, 0.2746", "250.18, 567.814, 38.2194, 0.2746", "249.39, 567.308, 37.6648, 0.2746", "248.271, 567.081, 37.2358, 0.2746", "247.138, 566.977, 36.9216, 0.2746", "246.111, 566.481, 36.7128, 0.2746", "245.157, 565.856, 36.5926, 0.2746", "244.135, 565.345, 36.5481, 0.2746", "243.196, 564.694, 36.5442, 0.2746", "242.3, 563.987, 36.5386, 0.2746", "241.33, 563.382, 36.5308, 0.2746", "240.394, 562.726, 36.5196, 0.2746", "239.376, 562.221, 36.5042, 0.2746", "238.335, 561.829, 36.4832, 0.2746", "237.547, 561.0, 36.4538, 0.2746", "236.689, 560.252, 36.4106, 0.2746", "235.704, 559.673, 36.3496, 0.2746", "234.757, 559.066, 36.2698, 0.2746", "233.956, 558.253, 36.1718, 0.2746", "233.202, 557.458, 36.0055, 0.2746", "232.555, 556.629, 35.702, 0.2746", "232.13, 555.653, 35.4091, 0.2746", "231.844, 554.547, 35.1854, 0.2746", "231.551, 553.441, 35.0263, 0.2746", "231.233, 552.343, 34.9266, 0.2746", "230.732, 551.32, 34.8799, 0.2746", "230.312, 550.261, 34.8709, 0.2746", "229.585, 549.414, 34.8709, 0.2746", "229.337, 548.346, 34.8709, 0.2746", "229.308, 547.203, 34.8709, 0.2746", "228.895, 546.151, 34.8709, 0.2748", "227.983, 545.495, 34.8709, 0.275", "227.328, 544.567, 34.8709, 0.2752", "226.967, 543.482, 34.8709, 0.2758", "226.336, 542.528, 34.8709, 0.2768", "225.775, 541.532, 34.8709, 0.2796", "225.082, 540.622, 34.8709, 0.2796", "224.351, 539.742, 34.8709, 0.305", "223.597, 538.881, 34.8709, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "297.479, 606.016, 26.2668, 0.6474", "297.975, 605.759, 24.5395, 0.6864", "297.736, 605.822, 21.9402, 0.4448", "297.037, 605.861, 20.8284, 0.3268", "296.416, 606.161, 19.6062, 0.2772", "295.883, 606.52, 18.4041, 0.2796", "294.8, 606.723, 17.6274, 0.2838", "293.763, 606.601, 17.3555, 0.2916", "292.848, 606.66, 17.5529, 0.3058", "291.906, 606.942, 18.0124, 0.3348", "290.839, 607.203, 18.4859, 0.3758", "289.995, 607.823, 18.7393, 0.513", "289.296, 608.629, 18.6623, 0.4706", "288.335, 609.007, 18.3361, 0.4594", "287.295, 609.378, 17.8993, 0.5686", "286.686, 610.199, 17.5375, 0.5988", "286.488, 611.24, 17.1486, 0.575", "286.149, 612.23, 16.6188, 0.69", "285.66, 613.155, 15.9586, 0.8178", "285.184, 614.14, 15.2432, 0.7814", "284.738, 615.179, 14.5177, 0.6694", "284.53, 616.227, 13.7315, 0.4482", "284.753, 617.219, 12.8873, 0.3332", "284.877, 618.102, 11.9627, 0.2886", "284.585, 618.977, 11.0127, 0.3018", "284.262, 620.037, 10.2628, 0.3198", "283.792, 621.075, 9.7535, 0.384", "283.083, 621.949, 9.3786, 0.3534", "282.18, 622.627, 9.1176, 0.336", "281.095, 622.955, 9.0003, 0.342", "279.955, 623.02, 8.9824, 0.396", "278.833, 623.026, 9.0625, 0.5172", "277.701, 623.045, 9.1874, 0.6408", "276.579, 623.251, 9.2898, 0.6726", "275.46, 623.375, 9.2722, 0.5454", "274.34, 623.186, 9.2296, 0.528", "273.226, 623.412, 9.149, 0.579", "272.291, 624.055, 8.9989, 0.4972", "271.393, 624.753, 8.8054, 0.517", "270.498, 625.334, 8.4949, 0.4068", "270.09, 626.395, 7.943, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "297.479, 606.016, 26.2668, 0.6474", "297.52, 606.75, 26.4342, 0.671", "297.645, 607.709, 26.3701, 0.6102", "297.247, 608.542, 26.5261, 0.5484", "296.714, 609.537, 26.6647, 0.6434", "296.135, 610.522, 26.7394, 0.717", "295.571, 611.509, 26.7179, 0.665", "294.818, 612.371, 26.598, 0.798", "294.211, 613.302, 26.3502, 0.845", "293.738, 614.05, 25.8073, 0.7576", "293.573, 614.858, 25.0659, 0.5266", "293.406, 615.887, 24.3468, 0.4342", "292.551, 616.457, 23.8053, 0.4624", "291.729, 616.294, 23.6888, 0.6902", "291.377, 617.352, 23.6922, 0.7186", "290.98, 618.263, 23.798, 0.624", "290.289, 619.079, 23.7384, 0.4776", "289.388, 619.2, 23.6452, 0.523", "288.638, 619.214, 23.308, 0.441", "287.96, 619.948, 23.0353, 0.41", "287.014, 620.57, 22.8077, 0.4514", "286.466, 621.565, 22.5826, 0.506", "285.998, 622.471, 22.2407, 0.4844", "285.578, 623.121, 21.777, 0.584", "284.673, 623.713, 21.53, 0.5492", "283.713, 624.313, 21.3111, 0.634", "282.845, 625.052, 21.1369, 0.7534", "281.943, 625.753, 21.0283, 0.9286", "281.036, 626.446, 20.9521, 0.7912", "280.145, 627.161, 20.8928, 0.7212", "279.254, 627.866, 20.8659, 0.609", "278.466, 628.542, 20.7777, 0.5458", "277.943, 629.393, 20.6889, 0.6412", "277.059, 630.058, 20.6839, 0.6998", "276.118, 630.71, 20.7035, 0.6976", "275.283, 631.49, 20.7343, 0.5446", "274.613, 632.415, 20.7606, 0.5268", "273.871, 633.267, 20.7312, 0.5748", "272.869, 633.202, 21.1053, 0.5006", "272.591, 634.221, 21.1736, 0.4688", "272.624, 635.288, 21.0224, 0.582", "272.624, 636.391, 20.7458, 0.6424", "272.509, 637.519, 20.4238, 0.5652", "272.212, 638.613, 20.0609, 0.4258", "271.924, 639.716, 19.7644, 0.3766", "271.586, 640.8, 19.5882, 0.4152", "271.437, 641.726, 19.2643, 0.5424", "271.795, 642.751, 18.9095, 0.7372", "272.313, 643.747, 18.7253, 0.6102", "273.223, 644.437, 18.5604, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "292.445, 581.276, 45.8153, 0.3654", "292.35, 581.417, 46.8098, 0.4576", "291.739, 582.256, 48.1513, 0.5582", "291.086, 582.981, 48.7732, 0.4208", "290.322, 583.795, 49.4004, 0.3294", "289.504, 584.519, 50.02, 0.282", "288.564, 584.87, 50.6439, 0.2882", "287.445, 585.006, 51.1389, 0.3008", "286.328, 585.254, 51.469, 0.3178", "285.268, 585.648, 51.6785, 0.3804", "284.345, 586.31, 51.8176, 0.3466", "283.509, 587.092, 51.9117, 0.3248", "282.64, 587.833, 51.9851, 0.3152", "281.625, 588.304, 52.0646, 0.3754", "280.589, 588.652, 52.2362, 0.3376", "279.564, 589.054, 52.4698, 0.3068", "278.469, 589.384, 52.6688, 0.287", "277.558, 589.985, 52.8343, 0.2986", "276.716, 590.748, 52.9701, 0.314", "275.695, 591.229, 53.081, 0.3732", "274.786, 591.864, 53.1849, 0.3336", "273.832, 592.367, 53.354, 0.2994", "272.871, 592.918, 53.5559, 0.2736", "272.192, 593.812, 53.7242, 0.2728", "271.446, 594.663, 53.8479, 0.2712", "270.493, 595.283, 53.9308, 0.2684", "269.807, 596.157, 53.9764, 0.2626", "268.792, 596.519, 53.9918, 0.2542", "267.761, 597.0, 53.9938, 0.2288", "266.851, 597.688, 53.9938, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "292.445, 581.276, 45.8153, 0.3654", "291.766, 581.276, 46.1272, 0.3742", "290.656, 581.406, 46.2319, 0.3354", "289.552, 581.63, 46.1482, 0.303", "288.448, 581.858, 45.9427, 0.28", "287.344, 582.084, 45.6551, 0.2846", "286.222, 582.26, 45.3438, 0.2932", "285.088, 582.393, 45.0612, 0.3092", "283.954, 582.523, 44.8207, 0.3382", "282.82, 582.652, 44.62, 0.395", "281.686, 582.781, 44.4508, 0.4854", "280.558, 582.951, 44.3024, 0.726", "279.598, 582.877, 44.2518, 0.8182", "278.531, 582.717, 44.084, 0.6474", "277.464, 582.791, 44.0101, 0.6166", "276.338, 582.83, 43.9947, 0.5454", "275.203, 582.704, 43.9692, 0.4806", "274.065, 582.599, 43.9214, 0.4924", "273.101, 582.394, 43.6724, 0.5596", "272.051, 582.021, 43.4658, 0.4652", "270.944, 581.885, 43.2177, 0.4374", "269.825, 581.663, 43.0646, 0.358", "268.865, 581.042, 42.9862, 0.3456", "267.746, 580.81, 42.973, 0.3546", "266.686, 580.448, 43.078, 0.4446", "265.836, 579.687, 43.2023, 0.4858", "265.025, 578.897, 43.3689, 0.4844", "264.127, 578.207, 43.4734, 0.4026", "263.153, 578.034, 43.5022, 0.4056", "262.077, 578.281, 43.6103, 0.3464", "260.943, 578.292, 43.7234, 0.3242", "259.828, 578.464, 43.801, 0.3142", "258.824, 578.966, 43.9085, 0.3734", "258.186, 579.846, 44.0143, 0.3338", "257.405, 580.563, 44.1692, 0.3", "256.523, 580.877, 44.1714, 0.2746", "255.456, 581.287, 44.1851, 0.2746", "254.359, 581.61, 44.2193, 0.2746", "253.267, 581.948, 44.2758, 0.2746", "252.173, 582.055, 44.3976, 0.2746", "251.078, 581.837, 44.6146, 0.2746", "250.006, 581.533, 44.9002, 0.2746", "249.538, 580.648, 45.1506, 0.2746", "249.314, 579.526, 45.3345, 0.2746", "248.482, 578.994, 45.4574, 0.2746", "247.396, 578.646, 45.5255, 0.2746", "246.868, 577.705, 45.5521, 0.2746", "246.256, 576.744, 45.5571, 0.2746", "245.576, 575.826, 45.5571, 0.2746", "244.79, 574.995, 45.5571, 0.2744", "243.906, 574.27, 45.5571, 0.2744", "242.852, 573.845, 45.5571, 0.2742", "242.399, 572.85, 45.5571, 0.274", "241.541, 572.119, 45.5571, 0.2736", "240.545, 571.556, 45.5571, 0.2728", "239.436, 571.298, 45.5571, 0.2712", "238.674, 570.464, 45.5571, 0.2684", "237.736, 569.81, 45.5571, 0.2626", "236.616, 569.6, 45.5571, 0.2542", "235.473, 569.545, 45.5571, 0.2288", "234.353, 569.315, 45.5571, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "235.553, 558.472, 43.0396, 0.2746", "234.669, 558.767, 43.4196, 0.2746", "233.584, 559.128, 43.6332, 0.2746", "232.499, 559.49, 43.72, 0.2746", "231.413, 559.852, 43.757, 0.2746", "230.408, 560.395, 43.8074, 0.2746", "229.492, 561.081, 43.8796, 0.2746", "228.749, 561.948, 43.9846, 0.2746", "228.046, 562.85, 44.1286, 0.2746", "227.371, 563.775, 44.3122, 0.2746", "226.738, 564.726, 44.5427, 0.2746", "226.204, 565.488, 45.0285, 0.2746", "225.673, 566.243, 45.6926, 0.2746", "224.861, 567.035, 46.2498, 0.2744", "223.818, 567.502, 46.6651, 0.2744", "222.757, 567.931, 46.9487, 0.2742", "221.833, 568.606, 47.1128, 0.274", "220.914, 569.286, 47.1722, 0.2736", "220.172, 570.157, 47.1783, 0.2728", "219.454, 571.047, 47.1783, 0.2712", "218.791, 571.981, 47.1783, 0.2684", "218.126, 572.912, 47.1783, 0.2626", "217.452, 573.835, 47.1783, 0.2542", "216.777, 574.759, 47.1783, 0.2288", "216.102, 575.682, 47.1783, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "235.553, 558.472, 43.0396, 0.2746", "235.898, 558.404, 43.7128, 0.2288", "236.164, 557.776, 45.4625, 0.2746", "236.34, 557.105, 46.3204, 0.2746", "236.569, 556.029, 47.031, 0.2746", "236.802, 554.909, 47.5639, 0.2746", "236.775, 553.768, 47.9324, 0.2746", "236.65, 552.631, 48.153, 0.2746", "236.439, 551.506, 48.2434, 0.2744", "236.175, 550.393, 48.272, 0.2744", "236.004, 549.263, 48.3039, 0.2742", "235.915, 548.122, 48.3482, 0.274", "235.601, 547.024, 48.4072, 0.2736", "235.268, 545.929, 48.4884, 0.2728", "234.918, 544.84, 48.6234, 0.2712", "234.414, 543.815, 48.8015, 0.2684", "233.896, 542.795, 49.012, 0.2626", "233.379, 541.774, 49.2453, 0.2542", "232.852, 540.933, 49.6826, 0.2288", "232.302, 540.216, 51.2366, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_28",
    "id" : "apic_28",
    "points3d" : [ "330.924, 555.755, 26.0302, 1.1832", "331.875, 555.975, 27.4487, 0.2288", "332.941, 556.248, 27.9955, 0.382", "333.995, 556.662, 28.1624, 0.4882", "334.993, 557.184, 28.3917, 0.6002", "336.014, 557.627, 28.7059, 0.535", "336.994, 558.188, 28.9559, 0.593", "338.079, 558.523, 29.2085, 0.5194", "339.115, 558.804, 29.5722, 0.575", "340.157, 559.141, 29.9975, 0.6614", "341.235, 559.509, 30.3621, 0.6746", "342.253, 560.028, 30.648, 0.7252", "343.343, 560.371, 30.8776, 0.6926", "344.423, 560.748, 31.0554, 0.7878", "345.434, 561.278, 31.2068, 0.6678", "346.198, 562.095, 31.4166, 0.739", "347.005, 562.893, 31.6616, 0.8186", "347.97, 563.503, 31.8912, 0.7628", "348.884, 564.192, 32.1006, 0.7318", "349.586, 565.094, 32.2963, 0.7806", "350.056, 566.129, 32.5111, 1.0414", "350.658, 567.042, 32.814, 1.1566", "351.219, 567.978, 33.1836, 1.098", "351.861, 568.92, 33.4964, 0.9372", "352.461, 569.885, 33.6773, 0.8924", "352.762, 570.968, 33.7302, 0.7246", "353.149, 572.009, 33.8537, 0.824", "353.623, 573.046, 33.9654, 0.8462", "353.821, 574.172, 34.0374, 0.7594" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "330.924, 555.755, 26.0302, 1.1832", "331.667, 554.877, 26.1321, 1.0988", "332.167, 553.848, 26.0828, 0.9462", "332.327, 552.718, 25.9893, 0.873", "332.373, 551.589, 25.8334, 0.8626", "332.609, 550.485, 25.634, 0.9214", "333.11, 549.458, 25.4685, 0.881", "333.667, 548.458, 25.3464, 0.8452", "334.244, 547.47, 25.265, 0.817", "334.587, 546.379, 25.2196, 0.8092", "334.619, 545.235, 25.2031, 0.808", "334.622, 544.091, 25.2014, 0.74", "334.634, 542.947, 25.2017, 0.9338", "334.71, 541.806, 25.2025, 1.1134", "335.043, 540.712, 25.2036, 1.1736", "335.298, 539.596, 25.205, 1.0082", "335.794, 538.565, 25.207, 0.9034", "336.341, 537.56, 25.2095, 0.872", "336.906, 536.566, 25.2134, 0.9386", "337.272, 535.481, 25.2188, 0.9134", "337.606, 534.388, 25.2263, 0.9014", "337.84, 533.268, 25.2367, 0.9402", "337.939, 532.128, 25.251, 0.9454" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "267.141, 552.369, 17.7792, 0.2896", "267.321, 552.808, 17.269, 0.2288", "266.623, 552.503, 18.3907, 0.2748", "265.654, 551.955, 18.8577, 0.2752", "264.604, 551.53, 19.3614, 0.2756", "263.663, 551.44, 20.0491, 0.2764", "262.588, 551.239, 20.7407, 0.278", "261.506, 550.881, 21.3217, 0.2812", "260.919, 550.016, 21.9265, 0.2864", "260.267, 549.141, 22.5, 0.2978", "259.436, 548.356, 22.9118, 0.3122", "258.581, 547.595, 23.1846, 0.37", "257.678, 546.893, 23.3674, 0.3276", "256.771, 546.201, 23.5136, 0.2882", "255.814, 545.587, 23.6412, 0.2542", "254.733, 545.212, 23.7233, 0.2288", "253.652, 544.838, 23.8428, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "267.141, 552.369, 17.7792, 0.2896", "266.423, 551.235, 17.2511, 0.3024", "265.785, 550.286, 17.1122, 0.3268", "265.022, 549.432, 17.0349, 0.3684", "264.253, 548.587, 16.9943, 0.4636", "263.468, 547.754, 16.9694, 0.552", "262.645, 546.96, 16.938, 0.4574", "261.812, 546.177, 16.8991, 0.3932", "260.864, 545.545, 16.8599, 0.4206", "259.903, 544.926, 16.8213, 0.4466", "259.007, 544.227, 16.814, 0.386", "258.074, 543.676, 16.7345, 0.344", "256.996, 543.378, 16.6289, 0.382", "255.882, 543.117, 16.5539, 0.3494", "254.805, 542.738, 16.508, 0.3298", "253.685, 542.604, 16.4878, 0.3246", "252.613, 542.306, 16.5474, 0.3928", "251.524, 541.98, 16.6326, 0.3706", "250.392, 541.987, 16.6986, 0.3638", "249.249, 542.009, 16.7429, 0.4132", "248.111, 541.912, 16.7588, 0.433", "246.977, 541.905, 16.7222, 0.36", "245.87, 541.662, 16.6891, 0.301", "245.132, 540.836, 16.6928, 0.2766", "244.068, 540.555, 16.7653, 0.2784", "242.931, 540.54, 16.9128, 0.2818", "241.794, 540.654, 17.0923, 0.2876", "240.667, 540.76, 17.3396, 0.2998", "239.547, 540.781, 17.6518, 0.316", "238.419, 540.667, 17.9738, 0.377", "237.284, 540.558, 18.2717, 0.3406", "236.179, 540.839, 18.5318, 0.3126", "235.046, 540.997, 18.7608, 0.2976", "233.943, 541.2, 19.0268, 0.3184", "232.962, 541.772, 19.2889, 0.3514", "231.852, 542.045, 19.5191, 0.4382", "230.717, 542.129, 19.7442, 0.4742", "229.618, 541.992, 20.039, 0.4618", "228.613, 542.073, 20.3, 0.3662", "227.844, 542.791, 20.6438, 0.3128", "226.764, 543.039, 20.9692, 0.298", "225.625, 542.956, 21.2136, 0.319", "224.677, 543.198, 21.469, 0.3528", "223.975, 544.05, 21.7344, 0.4396", "223.113, 544.782, 21.9548, 0.4842", "222.069, 545.197, 22.1539, 0.4444", "220.969, 545.234, 22.409, 0.5088", "219.913, 545.443, 22.7251, 0.4136", "218.944, 545.896, 22.9197, 0.3642", "217.937, 546.401, 23.1619, 0.3408", "216.95, 546.811, 23.5553, 0.4252", "215.861, 547.116, 23.9599, 0.4192", "214.72, 547.196, 24.3407, 0.5094", "213.66, 547.356, 24.7789, 0.4148", "212.89, 547.319, 25.4383, 0.3652", "212.003, 546.792, 26.0854, 0.3498", "210.872, 546.651, 26.6076, 0.4058", "209.758, 546.437, 27.1085, 0.5586", "208.683, 546.127, 27.6268, 0.6042", "207.65, 545.716, 28.1546, 0.4696", "206.646, 545.404, 28.7269, 0.3676", "205.738, 545.06, 29.3933, 0.3784", "205.178, 544.201, 30.0283, 0.3432", "204.76, 543.17, 30.4646, 0.317", "204.276, 542.159, 30.7056, 0.307", "203.537, 541.717, 31.0274, 0.3304", "202.464, 541.685, 31.2127, 0.3982", "201.461, 542.175, 31.3303, 0.4068", "201.424, 543.288, 31.4978, 0.305", "201.424, 544.432, 31.7727, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_30",
    "id" : "apic_30",
    "points3d" : [ "353.821, 574.172, 34.0374, 0.7594", "353.702, 575.349, 34.0942, 0.6864", "353.282, 576.414, 34.0656, 0.5078", "352.894, 577.488, 34.0343, 0.4332", "352.728, 578.619, 33.9937, 0.5248", "352.638, 579.752, 33.9172, 0.4936", "352.757, 580.825, 33.7324, 0.497", "353.029, 581.842, 33.549, 0.6638", "353.226, 582.941, 33.4488, 0.6514", "353.308, 584.077, 33.369, 0.5882", "352.958, 585.098, 33.3595, 0.6662", "352.46, 586.101, 33.3486, 0.7782", "352.137, 587.191, 33.329, 0.6874", "351.886, 588.289, 33.3528, 0.5952", "351.656, 589.399, 33.3757, 0.5106", "351.445, 590.515, 33.3113, 0.6224", "351.233, 591.636, 33.1878, 0.6696", "351.338, 592.746, 32.9798, 0.6176", "351.972, 593.384, 32.5438, 0.5138", "352.991, 593.784, 32.1054, 0.5846", "354.108, 594.024, 31.7484, 0.5818", "354.707, 594.943, 31.4656, 0.5422", "355.083, 595.993, 31.1797, 0.6348", "355.337, 597.094, 30.9397, 0.688", "355.66, 598.18, 30.8339, 0.675", "355.974, 599.233, 30.833, 0.5066", "356.111, 600.363, 30.7924, 0.4366", "356.42, 601.444, 30.7555, 0.503", "356.652, 602.426, 30.6177, 0.591", "357.073, 603.293, 30.4164, 0.694", "357.983, 603.979, 30.2593, 0.7206", "358.919, 604.636, 30.1336, 0.652", "359.781, 605.365, 30.093, 0.6402", "360.728, 605.971, 30.107, 0.515", "361.176, 606.889, 30.0488, 0.5564", "361.769, 607.767, 30.0871, 0.4494", "362.547, 608.597, 30.1151, 0.4562", "363.42, 609.321, 30.0832, 0.3878", "364.29, 610.055, 30.0874, 0.4252", "365.121, 610.836, 30.1207, 0.3836", "365.809, 611.74, 30.1134, 0.388", "366.463, 612.673, 30.0614, 0.4588", "366.823, 613.754, 30.0244, 0.5136", "367.322, 614.755, 30.0832, 0.5292", "368.084, 615.596, 30.1686, 0.5172", "368.784, 616.479, 30.1764, 0.4656", "369.672, 617.059, 30.0544, 0.5132", "370.518, 617.755, 30.0591, 0.5916", "371.441, 618.389, 30.0432, 0.555", "372.286, 618.956, 30.1115, 0.4566", "372.714, 619.962, 30.0773, 0.4228", "373.342, 620.748, 29.9048, 0.5526", "374.27, 621.271, 29.867, 0.546", "374.895, 622.024, 29.8259, 0.5906", "375.256, 623.032, 29.6204, 0.8536", "375.868, 623.903, 29.3185, 0.9242", "376.4, 624.744, 28.9262, 0.791", "376.88, 625.581, 28.7745, 0.683", "377.59, 626.448, 28.7182, 0.7228", "377.936, 627.529, 28.775, 0.7748", "378.327, 628.587, 28.987, 0.7492", "378.733, 629.644, 29.288, 0.8354", "378.94, 630.733, 29.6766, 0.8048", "379.298, 631.804, 30.0591, 0.7568", "379.78, 632.834, 30.4189, 0.625", "380.125, 633.924, 30.7289, 0.588", "380.32, 635.04, 30.9305, 0.429", "380.45, 636.149, 31.138, 0.3446", "380.979, 636.864, 31.5426, 0.311", "380.929, 637.985, 31.9393, 0.337", "380.951, 639.122, 32.2532, 0.4156", "380.944, 640.251, 32.5629, 0.414", "380.823, 641.387, 32.8101, 0.4398", "380.83, 642.505, 33.0487, 0.5756", "381.03, 643.538, 33.3169, 0.6306", "381.263, 644.55, 33.4225, 0.543", "381.65, 645.513, 33.5709, 0.385", "381.478, 646.211, 34.0225, 0.3004", "381.572, 646.851, 34.7245, 0.2754", "381.844, 647.795, 35.52, 0.2762", "381.939, 648.885, 36.2706, 0.2776", "382.343, 649.954, 36.846, 0.2802", "382.633, 651.062, 37.2291, 0.285", "382.399, 652.182, 37.4332, 0.2936", "382.167, 653.302, 37.5178, 0.3108", "381.923, 654.419, 37.5396, 0.3378", "381.678, 655.537, 37.5399, 0.412", "381.432, 656.654, 37.5399, 0.431", "381.186, 657.771, 37.5399, 0.356", "380.983, 658.897, 37.5399, 0.2938", "380.812, 660.029, 37.5399, 0.2626", "380.637, 661.159, 37.5399, 0.2542", "380.261, 662.239, 37.5399, 0.2288", "379.886, 663.32, 37.5399, 0.2288" ],
    "parent" : "apic_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_29",
    "id" : "apic_29",
    "points3d" : [ "353.821, 574.172, 34.0374, 0.7594", "354.749, 573.559, 34.2216, 0.5324", "355.777, 574.051, 34.2642, 0.4326", "356.642, 574.776, 34.2244, 0.5192", "357.245, 575.589, 34.0346, 0.5056", "357.89, 576.025, 33.6566, 0.4098", "358.038, 577.07, 33.2791, 0.3474", "358.057, 578.081, 33.0974, 0.358", "358.406, 578.994, 33.2534, 0.4508", "358.741, 579.964, 33.6249, 0.4976", "358.904, 581.066, 34.0354, 0.5048", "358.988, 582.207, 34.3837, 0.4476", "359.07, 583.347, 34.6324, 0.455", "359.167, 584.488, 34.7642, 0.6046", "359.247, 585.628, 34.7897, 0.6792", "359.406, 586.755, 34.7771, 0.6586", "359.517, 587.847, 34.8312, 0.4754", "359.963, 588.73, 34.7612, 0.3832", "360.955, 589.033, 34.5615, 0.3834", "361.967, 589.368, 34.2457, 0.4682", "362.893, 589.921, 34.0808, 0.6722", "363.702, 590.667, 33.8542, 0.8248", "364.483, 591.403, 33.8075, 0.83", "365.198, 592.272, 33.721, 0.5852", "365.947, 593.116, 33.7187, 0.4526", "366.694, 593.963, 33.6434, 0.4776", "367.444, 594.77, 33.488, 0.5804", "367.678, 595.872, 33.2956, 0.4986", "368.181, 596.866, 33.2049, 0.525", "368.907, 597.731, 33.2214, 0.3966", "369.839, 598.225, 33.1248, 0.3316", "370.817, 598.597, 33.0968, 0.286", "370.989, 599.725, 33.1246, 0.2956", "371.199, 600.752, 33.2629, 0.3148", "371.079, 601.682, 33.5308, 0.3438", "371.833, 602.083, 33.7408, 0.428", "372.128, 603.021, 33.9052, 0.4382", "372.345, 604.143, 33.9959, 0.4784", "372.807, 605.181, 33.9956, 0.6776", "373.434, 606.1, 33.8657, 0.672", "374.145, 606.988, 33.7145, 0.6506", "374.475, 608.06, 33.6848, 0.6636", "375.051, 609.037, 33.6445, 0.662", "375.844, 609.804, 33.5619, 0.5542", "376.354, 610.82, 33.5972, 0.4056", "376.821, 611.836, 33.7663, 0.3386", "377.288, 612.797, 34.0211, 0.3468", "378.015, 613.21, 34.4221, 0.4062", "378.466, 614.131, 34.6444, 0.5294", "379.293, 614.861, 34.764, 0.6956", "380.008, 615.722, 34.8502, 0.6188", "380.878, 616.442, 35.0101, 0.5136", "381.788, 617.109, 35.2302, 0.3678", "382.455, 617.855, 35.551, 0.3158", "382.826, 618.808, 36.0262, 0.304", "383.061, 619.876, 36.4641, 0.3288", "383.082, 621.02, 36.7962, 0.3766", "383.622, 621.883, 37.018, 0.4568", "384.611, 622.456, 37.1507, 0.6472", "385.677, 622.82, 37.256, 0.796", "386.738, 623.136, 37.4083, 0.6916", "387.768, 623.571, 37.5091, 0.7418", "388.83, 623.987, 37.5547, 0.795", "389.863, 624.458, 37.606, 0.8596", "390.893, 624.934, 37.5928, 0.9158", "391.798, 625.611, 37.511, 0.8706", "392.637, 626.38, 37.3668, 0.8262", "393.518, 627.104, 37.2338, 0.7802", "394.274, 627.924, 37.0364, 0.7484", "395.014, 628.782, 36.8105, 0.658", "395.99, 629.346, 36.6201, 0.6438", "397.073, 629.713, 36.4686, 0.5578", "398.129, 630.131, 36.3157, 0.4602", "399.072, 630.565, 36.045, 0.4374", "399.944, 631.201, 35.9444, 0.541", "400.53, 632.173, 35.9125, 0.7108", "400.762, 633.275, 35.8543, 0.678", "401.631, 633.693, 36.0102, 0.474", "402.323, 634.589, 36.1046, 0.3336", "403.036, 635.312, 35.9873, 0.2898", "403.881, 635.769, 35.6804, 0.303", "404.776, 636.474, 35.4659, 0.3268", "405.485, 637.272, 35.4368, 0.373", "405.826, 638.242, 35.5902, 0.45", "406.298, 639.269, 35.7386, 0.6348", "406.82, 640.273, 35.875, 0.7726", "407.217, 641.341, 36.01, 0.6488", "407.483, 642.424, 36.0298, 0.6606", "407.638, 643.517, 35.9355, 0.654", "407.817, 644.635, 35.8518, 0.5514", "408.264, 645.599, 35.9405, 0.5704", "409.167, 646.144, 36.185, 0.5062", "409.771, 646.961, 36.5254, 0.4108", "410.087, 648.035, 36.9317, 0.3492", "410.177, 649.17, 37.2954, 0.3614", "410.562, 650.238, 37.5841, 0.458", "411.444, 650.914, 37.8482, 0.5056", "412.382, 651.482, 38.1497, 0.5452", "413.443, 651.673, 38.4877, 0.3982", "414.479, 652.121, 38.6778, 0.2796", "415.207, 652.952, 38.5809, 0.2288" ],
    "parent" : "apic_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "337.939, 532.128, 25.251, 0.9454", "338.434, 530.95, 25.303, 0.8214", "338.889, 529.901, 25.342, 0.7818", "339.286, 528.829, 25.3798, 0.9284", "339.655, 527.771, 25.4744, 1.047", "340.084, 526.739, 25.6424, 1.0974", "340.543, 525.695, 25.7888, 1.0966", "340.879, 524.61, 25.9134, 1.0952", "341.033, 523.481, 26.0215, 1.0926", "341.203, 522.362, 26.0582, 1.0868", "341.621, 521.317, 26.0495, 1.0822", "342.242, 520.369, 26.0826, 1.0436", "342.952, 519.481, 26.161, 1.118", "343.632, 518.564, 26.2469, 1.2344", "344.219, 517.583, 26.3315, 1.325", "344.778, 516.585, 26.4174, 1.1852", "345.342, 515.591, 26.5003, 1.0478", "345.935, 514.614, 26.5849, 0.8882", "346.604, 513.724, 26.7319, 0.817", "347.241, 512.797, 26.901, 0.7388", "347.821, 511.812, 27.0273, 0.79", "348.27, 510.775, 27.0718, 0.8466", "348.641, 509.713, 27.0287, 0.9092", "349.145, 508.7, 26.9816, 1.0032", "349.637, 507.69, 27.0189, 1.0536", "350.071, 506.648, 27.1312, 1.064", "350.577, 505.627, 27.2614, 1.028", "351.208, 504.676, 27.3871, 1.0014", "351.909, 503.773, 27.5092, 0.7564", "352.449, 502.778, 27.6259, 0.5654", "352.963, 501.762, 27.7029, 0.5342", "353.644, 500.853, 27.7575, 0.7408", "354.397, 499.997, 27.8155, 0.9846", "355.231, 499.283, 27.9882, 0.968", "356.004, 498.519, 28.2901, 0.9232", "356.547, 497.563, 28.6577, 0.9096", "357.043, 496.55, 29.0228, 1.0044", "357.602, 495.553, 29.3213, 1.0546", "358.135, 494.542, 29.5352, 1.0708", "358.619, 493.506, 29.6696, 1.0164", "358.99, 492.426, 29.7475, 1.0962", "359.277, 491.319, 29.8004, 1.0544", "359.499, 490.197, 29.8539, 0.9832", "359.826, 489.106, 29.9236, 0.8196", "360.293, 488.062, 30.0143, 0.6696", "360.908, 487.106, 30.1395, 0.5624", "361.519, 486.179, 30.3509, 0.6782", "362.04, 485.232, 30.6586, 0.7394", "362.67, 484.309, 30.9156, 0.912", "363.21, 483.332, 31.0229, 0.944", "363.567, 482.258, 31.0478, 1.0294", "364.003, 481.204, 31.0422, 1.0602", "364.428, 480.144, 31.0218, 1.0504", "364.788, 479.061, 31.0248, 1.129", "365.12, 477.985, 31.1035, 1.261", "365.574, 476.946, 31.1786, 1.3444", "366.063, 475.935, 31.1604, 1.3672", "366.488, 474.882, 31.1072, 1.3632", "366.802, 473.783, 31.0646, 1.3502", "367.209, 472.718, 31.04, 1.355", "367.685, 471.677, 31.0411, 1.223", "368.128, 470.624, 31.094, 0.975", "368.62, 469.609, 31.2273, 0.7606", "369.235, 468.656, 31.386, 0.7728", "369.815, 467.673, 31.4972, 0.6374", "370.238, 466.618, 31.5952, 0.6958", "370.664, 465.558, 31.6686, 0.6752", "371.129, 464.512, 31.7002, 0.8038", "371.492, 463.434, 31.6739, 0.6912", "372.013, 462.443, 31.5815, 0.814", "372.669, 461.514, 31.491, 0.804", "373.284, 460.556, 31.477, 0.7948", "373.841, 459.579, 31.5745, 0.7336", "374.367, 458.571, 31.7257, 0.6056", "374.723, 457.488, 31.8822, 0.6678", "374.955, 456.369, 32.0359, 0.7016", "375.171, 455.253, 32.2028, 0.7014", "375.619, 454.322, 32.415, 0.55", "375.615, 453.185, 32.5486, 0.5442", "375.83, 452.078, 32.5825, 0.5724", "376.242, 451.013, 32.5816, 0.6648", "376.704, 449.972, 32.5483, 0.6404", "377.073, 448.895, 32.5027, 0.6296", "377.348, 447.787, 32.5007, 0.6716", "377.63, 446.695, 32.5942, 0.6768", "378.193, 445.738, 32.8121, 0.5814", "378.577, 444.806, 33.1173, 0.4568", "378.147, 443.775, 33.4376, 0.4302", "378.018, 442.71, 33.7327, 0.533", "378.299, 441.607, 33.9802, 0.671", "378.672, 440.527, 34.1631, 0.7248", "379.087, 439.464, 34.3199, 0.661", "379.458, 438.392, 34.4316, 0.6506", "379.882, 437.337, 34.5122, 0.5652", "380.354, 436.295, 34.608, 0.499", "380.771, 435.237, 34.757, 0.3874", "381.453, 434.432, 35.0104, 0.3534", "382.134, 433.59, 35.3273, 0.368", "382.544, 432.541, 35.5908, 0.475", "382.856, 431.461, 35.8422, 0.5136", "383.16, 430.368, 36.073, 0.6754", "383.474, 429.273, 36.2116, 0.7664", "383.757, 428.188, 36.346, 0.8044", "383.992, 427.104, 36.5481, 0.824", "384.405, 426.065, 36.7573, 0.6498", "384.994, 425.105, 36.8668, 0.6626", "385.6, 424.152, 36.8928, 0.6576", "386.092, 423.126, 36.9146, 0.5582", "386.424, 422.038, 36.9723, 0.5826", "386.544, 420.924, 37.1112, 0.5302", "386.558, 419.793, 37.3094, 0.4502", "386.559, 418.65, 37.5225, 0.4466", "386.563, 417.506, 37.7322, 0.4242", "386.591, 416.365, 37.9456, 0.4594", "386.727, 415.248, 38.1982, 0.61", "387.084, 414.198, 38.4955, 0.7024", "387.528, 413.171, 38.8217, 0.6366", "387.855, 412.088, 39.1278, 0.7506", "388.062, 410.972, 39.3305, 0.7316", "388.334, 409.883, 39.3994, 0.6716", "388.533, 408.788, 39.4906, 0.4522", "388.841, 407.73, 39.655, 0.3404", "389.417, 406.763, 39.8048, 0.3022", "390.126, 405.881, 39.8639, 0.327", "390.409, 404.799, 39.884, 0.366", "390.2, 403.682, 39.8955, 0.4714", "390.105, 402.543, 39.8933, 0.5068", "390.411, 401.447, 39.8916, 0.6632", "390.902, 400.415, 39.9118, 0.7414", "391.405, 399.388, 39.9585, 0.7708", "391.914, 398.364, 40.028, 0.6992", "392.41, 397.358, 40.1755, 0.722", "392.826, 396.305, 40.3544, 0.6942", "393.139, 395.205, 40.4908, 0.7546", "393.45, 394.117, 40.5331, 0.7804", "393.817, 393.036, 40.5345, 0.7892", "394.236, 391.982, 40.5871, 0.7654", "394.796, 390.99, 40.6006, 0.6888", "395.27, 389.952, 40.651, 0.7042", "395.689, 388.892, 40.7462, 0.6542", "396.242, 387.893, 40.8587, 0.7146", "396.975, 387.031, 41.0077, 0.5402", "397.756, 386.225, 41.0416, 0.4634", "398.336, 385.285, 40.9909, 0.498", "398.207, 384.179, 41.0553, 0.6176", "398.38, 383.107, 41.2283, 0.5696", "398.801, 382.103, 41.2656, 0.6468", "399.044, 380.992, 41.3518, 0.6694", "399.466, 379.99, 41.5752, 0.61", "400.195, 379.111, 41.79, 0.5342", "400.886, 378.199, 41.958, 0.4554", "401.7, 377.399, 42.1014, 0.468", "402.611, 376.725, 42.2467, 0.6348", "403.231, 375.768, 42.3962, 0.706", "403.825, 374.811, 42.5846, 0.8496", "404.522, 373.915, 42.7924, 0.8312", "405.227, 373.016, 42.9654, 0.8054", "405.813, 372.034, 43.104, 0.7174", "406.367, 371.034, 43.2155, 0.7496", "406.9, 370.021, 43.3079, 0.7762", "407.33, 368.963, 43.3941, 0.7566", "407.619, 367.861, 43.5033, 0.8256", "407.741, 366.739, 43.678, 0.901", "408.075, 365.669, 43.9093, 1.0662", "408.624, 364.667, 44.1143, 1.0198", "409.274, 363.727, 44.2893, 1.0458", "409.978, 362.827, 44.443, 1.0078", "410.546, 361.84, 44.5959, 1.1268", "410.919, 360.767, 44.7804, 1.1132", "411.293, 359.697, 44.9817, 1.0814", "411.865, 358.713, 45.1721, 1.055", "412.536, 357.796, 45.4104, 0.8476", "413.081, 356.807, 45.6616, 0.7736", "413.402, 355.718, 45.9399, 0.7326", "413.811, 354.672, 46.2762, 0.6458", "414.166, 353.605, 46.6528, 0.7664", "414.443, 352.512, 47.0515, 0.767", "414.792, 351.448, 47.4653, 0.7068", "415.267, 350.427, 47.8626, 0.6632", "415.815, 349.429, 48.204, 0.7112", "416.212, 348.372, 48.5036, 0.8612", "416.464, 347.269, 48.7726, 1.072", "416.815, 346.185, 48.958, 1.1032", "417.31, 345.161, 49.1103, 1.0756", "417.862, 344.176, 49.2909, 0.9824", "418.428, 343.192, 49.4735, 1.0126", "418.98, 342.192, 49.6163, 0.9996", "419.508, 341.177, 49.7165, 1.0812", "420.059, 340.174, 49.7848, 1.1766", "420.602, 339.167, 49.8221, 1.1678", "421.134, 338.155, 49.8341, 1.1374", "421.689, 337.155, 49.8347, 1.1492", "422.255, 336.161, 49.8324, 1.0682", "422.857, 335.191, 49.8291, 0.9616", "423.584, 334.31, 49.8246, 0.78", "424.362, 333.473, 49.8198, 0.5942", "425.027, 332.553, 49.8151, 0.4324", "425.395, 331.487, 49.7974, 0.3902", "425.613, 330.368, 49.7661, 0.4332", "426.038, 329.321, 49.7641, 0.61", "426.65, 328.359, 49.8053, 0.6966", "427.287, 327.408, 49.8618, 0.6548", "427.944, 326.472, 49.924, 0.6442", "428.641, 325.566, 49.9979, 0.5286", "429.263, 324.625, 50.1088, 0.5514", "429.722, 323.587, 50.2326, 0.5866", "430.169, 322.537, 50.3154, 0.686", "430.605, 321.482, 50.3644, 0.7056", "430.893, 320.394, 50.4423, 0.6246", "431.159, 319.3, 50.5677, 0.5872", "431.631, 318.278, 50.6486, 0.4274", "432.362, 317.423, 50.706, 0.3418", "432.988, 316.51, 50.801, 0.3048", "433.108, 315.409, 50.9006, 0.3316", "432.947, 314.276, 50.9802, 0.376", "433.07, 313.176, 51.0558, 0.4848", "433.678, 312.253, 51.1745, 0.5562", "434.417, 311.414, 51.2532, 0.6348", "435.128, 310.535, 51.2736, 0.5842", "435.934, 309.731, 51.3134, 0.5288", "436.624, 308.869, 51.4217, 0.4688", "437.211, 307.91, 51.553, 0.3788", "437.855, 306.981, 51.6096, 0.3372", "438.462, 306.028, 51.6292, 0.338", "439.019, 305.029, 51.6656, 0.4186", "439.489, 303.997, 51.7586, 0.4132", "439.867, 302.935, 51.9422, 0.4684", "440.292, 301.901, 52.2158, 0.4832", "440.788, 300.9, 52.5633, 0.4784", "441.332, 299.908, 52.9082, 0.3966", "441.911, 298.922, 53.1978, 0.3712", "442.455, 297.915, 53.4316, 0.396", "442.966, 296.892, 53.6189, 0.5512", "443.305, 295.82, 53.814, 0.5372", "443.474, 294.705, 54.0599, 0.604", "443.714, 293.597, 54.3376, 0.7344", "444.049, 292.506, 54.6202, 0.7162", "444.47, 291.451, 54.92, 0.5704", "444.993, 290.454, 55.258, 0.3884", "445.498, 289.456, 55.6284, 0.307", "445.943, 288.431, 56.0185, 0.2874", "446.415, 287.404, 56.3772, 0.2982", "446.924, 286.379, 56.6656, 0.3194", "447.436, 285.356, 56.8929, 0.3536", "447.922, 284.324, 57.0976, 0.441", "448.37, 283.282, 57.3236, 0.4856", "448.636, 282.189, 57.5638, 0.453", "448.731, 281.051, 57.8029, 0.4948", "448.913, 279.939, 58.0768, 0.534", "449.208, 278.861, 58.4074, 0.5632", "449.535, 277.78, 58.7306, 0.5998", "449.875, 276.688, 58.9963, 0.5234", "450.146, 275.583, 59.2388, 0.3958", "450.317, 274.467, 59.498, 0.3206", "450.452, 273.344, 59.7545, 0.3126", "450.577, 272.209, 59.9651, 0.3454", "450.697, 271.072, 60.125, 0.404", "450.926, 269.961, 60.2748, 0.5238", "451.258, 268.878, 60.433, 0.6916", "451.747, 267.857, 60.5615, 0.5804", "452.306, 266.867, 60.6164, 0.5932", "452.764, 265.836, 60.5954, 0.4704", "453.001, 264.734, 60.5732, 0.495", "453.125, 263.597, 60.592, 0.4604", "453.304, 262.476, 60.6791, 0.5576", "453.538, 261.371, 60.8546, 0.64", "453.846, 260.279, 61.0764, 0.8104", "454.225, 259.201, 61.2912, 0.812", "454.645, 258.141, 61.5028, 0.7388", "455.099, 257.113, 61.7448, 0.7436", "455.55, 256.075, 61.9814, 0.7584", "455.981, 255.017, 62.1667, 0.7556", "456.365, 253.941, 62.2952, 0.6696", "456.681, 252.845, 62.3686, 0.6726", "456.977, 251.742, 62.4285, 0.577", "457.346, 250.663, 62.5128, 0.6618", "457.995, 249.747, 62.6245, 0.691", "458.774, 248.91, 62.762, 0.6802", "459.408, 247.971, 62.9314, 0.5174", "459.763, 246.903, 63.1386, 0.4516", "460.016, 245.793, 63.3601, 0.5552", "460.243, 244.673, 63.5617, 0.5684", "460.459, 243.55, 63.7367, 0.5466", "460.678, 242.436, 63.9254, 0.5012", "460.899, 241.328, 64.1351, 0.4414" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "337.939, 532.128, 25.251, 0.9454", "336.707, 531.358, 25.1322, 0.2288", "335.841, 530.672, 25.1129, 0.7066", "335.31, 529.903, 24.9404, 0.7442", "334.437, 529.193, 24.6879, 0.6944", "333.641, 528.411, 24.4269, 0.4964", "332.612, 528.004, 24.1615, 0.4122", "331.495, 527.95, 23.8493, 0.4864", "330.385, 528.169, 23.5645, 0.4194", "330.027, 527.874, 22.995, 0.3736", "329.045, 527.937, 22.5179, 0.366", "328.193, 527.54, 22.405, 0.4342", "327.211, 527.28, 22.524, 0.6182", "325.757, 527.238, 22.239, 0.6802", "324.736, 527.561, 22.29, 0.777", "323.66, 527.726, 22.2032, 0.8168", "322.577, 527.633, 21.9621, 0.8824", "321.451, 527.589, 21.772, 0.814", "320.434, 527.975, 21.5978, 0.695", "319.431, 528.352, 21.3153, 0.6654", "318.589, 528.592, 21.0854, 0.5984", "317.5, 528.674, 21.0081, 0.5328", "316.457, 528.256, 20.9952, 0.5836", "315.497, 527.637, 20.9866, 0.7562", "314.512, 527.062, 21.0076, 0.697", "313.5, 526.552, 20.9905, 0.8244", "312.47, 526.092, 20.8807, 0.8246", "311.413, 525.66, 20.741, 0.8278", "310.371, 525.188, 20.6004, 0.8206", "309.376, 524.646, 20.4294, 0.6408", "308.345, 524.291, 20.239, 0.6582", "307.204, 524.238, 20.0861, 0.5888", "306.091, 524.038, 19.9371, 0.7258", "305.019, 523.721, 19.7523, 0.8346", "303.927, 523.458, 19.6652, 0.8256", "302.806, 523.24, 19.633, 0.6864", "301.727, 522.87, 19.6087, 0.7956", "300.74, 522.295, 19.5709, 0.8168", "299.687, 521.853, 19.5364, 0.821", "298.581, 521.563, 19.5017, 0.7692", "297.443, 521.442, 19.4527, 0.7332", "296.31, 521.434, 19.3612, 0.605", "295.183, 521.426, 19.2273, 0.6664", "294.041, 521.379, 19.1187, 0.6994", "292.944, 521.249, 19.143, 0.696", "291.905, 520.992, 19.2996, 0.5462", "290.947, 520.377, 19.4057, 0.5062", "290.25, 519.503, 19.3578, 0.6522", "289.482, 518.688, 19.1811, 0.7692", "288.563, 518.049, 18.891, 0.8172", "287.56, 517.504, 18.5735, 0.81", "286.672, 516.785, 18.2686, 0.8062", "285.772, 516.093, 17.9698, 0.753", "284.742, 515.69, 17.6372, 0.8792", "283.655, 515.453, 17.2922, 0.7072", "282.562, 515.156, 16.9879, 0.7576", "281.447, 514.909, 16.7759, 0.6608", "280.321, 514.767, 16.6961, 0.489", "279.189, 514.614, 16.662, 0.361", "278.07, 514.405, 16.6572, 0.343", "276.943, 514.353, 16.7418, 0.3906", "275.811, 514.404, 16.8577, 0.5416", "274.681, 514.565, 16.9341, 0.5182", "273.544, 514.514, 16.9515, 0.5742", "272.445, 514.257, 16.8846, 0.6522", "271.328, 514.214, 16.7306, 0.6952", "270.19, 514.236, 16.5822, 0.5804", "269.071, 514.002, 16.4716, 0.6264", "267.974, 513.692, 16.4088, 0.5992", "266.951, 513.178, 16.3943, 0.6366", "265.919, 512.7, 16.422, 0.5082", "264.799, 512.463, 16.4847, 0.5428", "263.678, 512.276, 16.5903, 0.4294", "262.562, 512.265, 16.7723, 0.3944", "261.446, 512.464, 16.9411, 0.393", "260.332, 512.423, 17.0374, 0.5398", "259.304, 512.101, 17.2315, 0.5448", "258.44, 511.661, 17.4891, 0.4778", "257.437, 512.045, 17.5871, 0.4952", "256.596, 512.813, 17.6582, 0.5274", "255.753, 513.584, 17.6705, 0.586", "255.044, 514.465, 17.6067, 0.4716", "254.485, 515.457, 17.4628, 0.4268", "253.759, 516.312, 17.283, 0.4478", "252.75, 516.609, 17.089, 0.6678", "251.633, 516.626, 16.8619, 0.654", "250.525, 516.763, 16.5872, 0.6166", "249.411, 516.649, 16.35, 0.6044", "248.317, 516.331, 16.2095, 0.5322", "247.2, 516.136, 16.1274, 0.4118", "246.251, 516.296, 15.9331, 0.351", "245.574, 517.033, 15.6876, 0.366", "244.915, 517.131, 15.7853, 0.459", "244.203, 517.74, 16.1196, 0.5436", "243.473, 517.763, 16.1252, 0.4408", "242.867, 517.792, 16.252, 0.3674", "242.446, 518.388, 16.5878, 0.3482", "241.353, 518.476, 16.8778, 0.4314", "240.247, 518.504, 17.106, 0.4666", "239.154, 518.333, 17.3468, 0.4238", "238.033, 518.238, 17.5412, 0.4104", "236.91, 518.406, 17.67, 0.5248", "235.786, 518.604, 17.7416, 0.517", "234.688, 518.901, 17.7766, 0.4258", "233.643, 519.347, 17.7859, 0.4016", "232.535, 519.517, 17.8422, 0.339", "231.451, 519.23, 17.9953, 0.3094", "230.351, 519.065, 18.256, 0.2922", "229.243, 519.011, 18.6012, 0.3068", "228.111, 519.119, 18.9188, 0.3364", "226.974, 519.083, 19.2133, 0.3798", "225.882, 518.785, 19.4782, 0.5154", "224.765, 518.794, 19.7364, 0.499", "223.623, 518.799, 19.9231, 0.3972", "222.48, 518.758, 20.0421, 0.3242", "221.351, 518.578, 20.109, 0.3142", "220.245, 518.359, 20.0796, 0.3734", "219.115, 518.306, 20.0962, 0.334", "217.974, 518.289, 20.1281, 0.3002", "216.831, 518.255, 20.1594, 0.2748", "215.692, 518.156, 20.1877, 0.2752", "214.55, 518.087, 20.2124, 0.2758", "213.408, 518.051, 20.2311, 0.2766", "212.271, 517.924, 20.2334, 0.2786", "211.16, 517.661, 20.2286, 0.2818", "210.112, 517.209, 20.2213, 0.2882", "209.327, 516.392, 20.211, 0.2994", "208.306, 515.898, 20.1956, 0.3228", "207.256, 515.445, 20.1743, 0.3536", "206.317, 514.797, 20.1466, 0.4722", "205.706, 513.838, 20.113, 0.393", "204.822, 513.126, 20.0514, 0.3252", "203.807, 512.623, 19.9427, 0.274", "202.959, 511.86, 19.8492, 0.2736", "202.137, 511.066, 19.7786, 0.2728", "201.119, 510.553, 19.7291, 0.2712", "200.393, 509.677, 19.6991, 0.2684", "199.3, 509.367, 19.6865, 0.2626", "198.174, 509.16, 19.6851, 0.2542", "197.047, 508.967, 19.6851, 0.2288", "195.904, 508.905, 19.6851, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "460.899, 241.328, 64.1351, 0.4414", "461.072, 240.305, 64.3194, 0.4412", "461.245, 239.175, 64.4652, 0.59", "461.605, 238.09, 64.5711, 0.599", "462.026, 237.027, 64.64, 0.7676", "462.352, 235.931, 64.6772, 0.8002", "462.62, 234.819, 64.6946, 0.6178", "462.907, 233.711, 64.7052, 0.5432", "463.243, 232.617, 64.7164, 0.4986", "463.58, 231.525, 64.7307, 0.6478", "463.871, 230.419, 64.7506, 0.713", "464.16, 229.311, 64.7786, 0.7162", "464.591, 228.253, 64.8194, 0.6084", "465.069, 227.213, 64.8763, 0.5024", "465.447, 226.135, 64.9508, 0.5356", "465.764, 225.035, 65.0443, 0.6276", "466.266, 224.018, 65.2067, 0.6488", "466.993, 223.201, 65.4875, 0.499", "467.291, 222.1, 65.7378, 0.4526", "467.582, 220.993, 65.9585, 0.3878", "467.904, 219.905, 66.2038, 0.394", "468.241, 218.838, 66.4924, 0.4774", "468.469, 217.72, 66.7484, 0.513", "468.634, 216.588, 66.9483, 0.6982", "468.807, 215.458, 67.1266, 0.6916", "469.016, 214.342, 67.3229, 0.5478", "469.225, 213.226, 67.5231, 0.4626", "469.734, 212.205, 67.7015, 0.5692", "470.247, 211.185, 67.8672, 0.6248", "471.043, 210.363, 67.9932, 0.5018", "471.437, 209.531, 68.0786, 0.4578", "471.995, 208.606, 68.1411, 0.397", "472.775, 207.882, 68.1962, 0.4128", "473.158, 206.899, 68.2587, 0.5046", "473.291, 205.791, 68.3376, 0.6", "473.926, 204.858, 68.4393, 0.682", "474.765, 204.158, 68.6423, 0.8374", "475.204, 203.133, 68.9002, 0.8808", "475.582, 202.066, 69.1659, 0.7764", "475.891, 201.008, 69.4722, 0.5638", "476.221, 199.935, 69.7158, 0.4918", "476.579, 199.005, 69.6702, 0.6244", "476.98, 197.984, 69.545, 0.723", "477.192, 196.878, 69.5187, 0.705", "477.452, 195.774, 69.538, 0.7312", "477.732, 194.672, 69.5442, 0.7186", "478.043, 193.604, 69.6514, 0.7652", "478.417, 192.597, 69.9107, 0.9684", "478.694, 191.492, 70.1187, 1.0072", "479.079, 190.415, 70.3013, 0.8884", "479.5, 189.383, 70.5832, 0.9092", "479.644, 188.362, 71.0242, 0.9204", "480.327, 187.466, 71.4468, 0.8454", "480.612, 186.374, 71.7338, 0.7136", "480.93, 185.338, 71.9261, 0.6636", "481.349, 184.416, 72.2607, 0.7714", "481.487, 183.456, 72.7247, 0.6834", "481.627, 182.351, 73.0755, 0.775", "481.966, 181.283, 73.3323, 0.851", "482.333, 180.203, 73.5745, 0.9898", "482.739, 179.189, 73.8752, 1.029", "483.236, 178.197, 74.186, 1.016", "483.751, 177.187, 74.496, 0.9496", "484.14, 176.127, 74.8115, 0.8046", "484.653, 175.135, 75.0627, 0.642", "485.01, 174.121, 75.3701, 0.5106", "485.153, 173.126, 75.8624, 0.5862", "485.345, 172.299, 76.2174, 0.5484", "485.374, 171.179, 76.666, 0.6558" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "460.899, 241.328, 64.1351, 0.4414", "461.343, 241.17, 64.6206, 0.2288", "462.351, 240.702, 64.8827, 0.3252", "463.136, 239.869, 64.9765, 0.3702", "463.932, 239.048, 65.0675, 0.443", "464.662, 238.199, 65.193, 0.6292", "465.304, 236.706, 65.4842, 0.727", "465.637, 235.616, 65.6219, 0.7368", "465.902, 234.504, 65.7275, 0.6724", "466.203, 233.4, 65.8076, 0.4954", "466.544, 232.309, 65.8703, 0.4462", "466.856, 231.212, 65.9098, 0.3742", "467.126, 230.108, 65.9154, 0.3768", "467.408, 229.02, 65.975, 0.4074", "467.71, 227.956, 66.176, 0.5676", "467.996, 226.874, 66.4373, 0.5912", "468.315, 225.778, 66.6977, 0.5896", "468.765, 224.748, 67.0015, 0.5782", "469.379, 223.805, 67.3257, 0.5966", "470.131, 222.951, 67.5884, 0.6686", "470.811, 222.051, 67.8163, 0.618", "471.347, 221.055, 68.0784, 0.732", "471.907, 220.085, 68.3903, 0.8488", "472.457, 219.108, 68.7294, 0.838", "472.827, 218.041, 69.0418, 0.7774", "473.084, 216.926, 69.3115, 0.6348", "473.498, 215.87, 69.5556, 0.745" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "485.374, 171.179, 76.666, 0.6558", "485.383, 170.195, 77.2383, 0.6798", "485.09, 169.442, 78.0704, 0.66", "484.414, 168.573, 78.8886, 0.4778", "484.045, 167.732, 79.7194, 0.3886", "484.126, 166.878, 80.5549, 0.3884", "483.494, 165.939, 81.2288, 0.5016", "482.927, 164.982, 81.7202, 0.6184", "482.614, 163.971, 82.0655, 0.6006", "482.49, 162.896, 82.315, 0.5602", "482.232, 161.835, 82.5107, 0.5226", "481.721, 161.095, 82.882, 0.499", "481.891, 160.168, 83.3087, 0.4604" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "485.374, 171.179, 76.666, 0.6558", "485.868, 170.194, 76.2278, 0.9152", "486.667, 169.39, 76.1939, 0.6454", "487.755, 169.122, 76.1214, 0.4428", "488.826, 168.804, 76.1286, 0.3626", "488.295, 167.832, 76.2042, 0.3798", "487.771, 166.844, 76.3342, 0.523", "487.453, 165.762, 76.4501, 0.4766", "487.199, 164.775, 76.3832, 0.5312", "486.507, 163.947, 76.2482, 0.4082", "486.035, 163.017, 76.0497, 0.353" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "473.498, 215.87, 69.5556, 0.745", "473.322, 215.24, 68.8845, 0.2288", "473.22, 214.14, 69.4042, 0.4022", "473.299, 213.049, 69.6786, 0.3868", "473.482, 211.943, 69.9972, 0.4", "473.64, 210.815, 70.3114, 0.4516", "473.689, 209.682, 70.6294, 0.6438", "473.72, 208.54, 70.9164, 0.76", "473.697, 207.411, 71.2149, 0.769", "473.876, 206.316, 71.4232, 0.8716", "473.696, 205.213, 71.6148, 0.874", "473.46, 204.203, 71.976, 0.8744", "473.257, 203.14, 72.4284, 0.8962", "473.22, 202.02, 72.8868, 0.8344", "473.164, 200.883, 73.2441, 0.7572", "473.042, 199.756, 73.5714, 0.6622", "473.05, 198.727, 73.9791, 0.4818", "473.165, 197.613, 74.3011, 0.3964", "473.031, 196.588, 74.3602, 0.4004", "473.151, 195.471, 74.3974, 0.5368", "473.386, 194.37, 74.5046, 0.6202", "473.523, 193.242, 74.6365, 0.9116", "473.649, 192.107, 74.7247, 1.0164", "473.662, 190.969, 74.7911, 0.8072", "473.465, 189.843, 74.8821, 0.7772", "473.687, 188.942, 75.1909, 0.8146", "473.938, 187.833, 75.4065, 0.891", "474.329, 186.759, 75.6036, 0.9984", "474.896, 185.792, 75.8699, 0.9048", "475.541, 184.86, 76.1594, 0.7794", "476.426, 184.145, 76.433, 0.771", "476.672, 183.034, 76.6531, 0.8118", "477.097, 181.971, 76.8594, 0.8436", "477.408, 180.894, 77.128, 0.8864", "477.701, 179.899, 77.5272, 0.814", "477.574, 178.764, 77.8565, 0.7306", "477.551, 177.68, 78.0206, 0.5586", "477.423, 176.708, 78.1819, 0.5524", "477.395, 175.702, 78.5383, 0.6244", "477.401, 174.719, 79.042, 0.5822", "477.105, 173.735, 79.5175, 0.67", "476.874, 172.628, 79.8958, 0.713", "477.271, 171.623, 80.318, 0.6878", "477.722, 170.62, 80.7531, 0.6936", "477.961, 169.546, 81.1692, 0.6778", "478.22, 168.516, 81.5777, 0.5474", "477.472, 168.007, 81.744, 0.5692", "477.458, 166.945, 81.753, 0.4732", "477.564, 165.899, 81.8381, 0.501", "477.413, 164.842, 82.0005, 0.4676", "477.153, 163.729, 82.1666, 0.5886", "477.007, 162.61, 82.3964, 0.6126", "477.359, 161.628, 82.563, 0.485", "477.549, 160.529, 82.6963, 0.397", "477.355, 159.454, 82.9749, 0.4278", "477.34, 158.389, 83.4394, 0.4596" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "473.498, 215.87, 69.5556, 0.745", "474.364, 215.249, 70.0946, 0.7316", "475.065, 214.344, 70.3926, 0.6216", "475.772, 213.447, 70.6916, 0.6004", "476.494, 212.574, 71.0262, 0.8182", "477.176, 211.687, 71.4162, 1.1194", "477.782, 210.779, 71.8774, 1.2598", "478.448, 209.869, 72.3198, 1.2622", "479.066, 208.908, 72.7121, 1.1454", "479.402, 207.826, 73.0601, 1.0594", "479.751, 206.751, 73.4205, 0.9526", "480.272, 205.785, 73.8573, 0.9574", "480.893, 204.883, 74.3635, 0.8958", "481.335, 203.849, 74.8902, 0.896", "481.657, 202.763, 75.4256, 0.7984", "482.046, 201.704, 75.9749, 0.6354", "482.357, 200.639, 76.5565, 0.7042", "482.698, 199.705, 77.2106, 0.6308", "483.087, 198.913, 77.9993, 0.5566", "483.571, 198.024, 78.6887, 0.5758", "484.26, 197.14, 79.2187, 0.7644", "484.642, 196.105, 79.6522, 0.6016", "485.078, 195.075, 79.966, 0.4984", "485.529, 194.092, 80.1041, 0.4882", "486.15, 193.485, 80.3482, 0.7326", "486.785, 192.674, 80.7279, 0.8228", "487.224, 191.644, 81.1686, 0.692", "487.262, 190.561, 81.501, 0.525", "487.358, 189.473, 81.9179, 0.535", "487.838, 188.599, 82.5093, 0.603", "488.62, 187.859, 83.0836, 0.718", "489.012, 186.85, 83.5825, 0.757", "489.621, 186.058, 84.2456, 0.7586", "490.157, 185.186, 84.999, 0.6468", "490.761, 184.282, 85.6786, 0.7682", "491.529, 183.452, 86.2658, 0.7712", "492.227, 182.618, 86.8739, 0.7108", "493.067, 181.871, 87.4378, 0.6894", "493.943, 181.145, 87.85, 0.6686", "494.296, 180.107, 88.1633, 0.5378", "494.636, 179.284, 88.6987, 0.5142", "494.921, 178.25, 89.2506, 0.5518", "495.607, 177.546, 89.9259, 0.4556", "496.247, 177.057, 90.4344, 0.396", "496.641, 176.528, 90.7508, 0.3958", "497.268, 175.818, 91.2962, 0.5464", "498.199, 175.726, 91.9724, 0.5508", "499.282, 175.526, 92.6699, 0.5192" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_27",
    "id" : "apic_27",
    "points3d" : [ "481.891, 160.168, 83.3087, 0.4604", "482.016, 159.559, 84.8985, 0.2288", "482.094, 158.796, 86.756, 0.3752", "482.172, 158.016, 87.631, 0.337", "482.592, 157.037, 88.4537, 0.3058", "482.993, 156.113, 88.9927, 0.2854", "483.216, 155.149, 89.5457, 0.2944", "482.909, 154.189, 90.2096, 0.3122", "482.635, 153.107, 90.8298, 0.3402", "482.81, 152.077, 91.5762, 0.4166", "483.456, 151.424, 92.5327, 0.4396", "484.091, 151.114, 93.5721, 0.3718", "484.549, 150.309, 94.5697, 0.3242", "484.923, 149.918, 95.8009, 0.3142", "485.734, 149.787, 97.1261, 0.3734", "486.759, 149.561, 98.3942, 0.3338", "487.885, 149.457, 99.4706, 0.3", "488.814, 149.11, 100.479, 0.2746", "489.229, 149.458, 101.687, 0.2746", "490.179, 149.734, 102.867, 0.2746", "491.243, 150.01, 103.944, 0.2746", "492.199, 150.469, 104.973, 0.2746", "493.113, 150.685, 106.046, 0.2746", "494.186, 150.562, 107.051, 0.2746", "495.313, 150.446, 107.928, 0.2746", "496.401, 150.365, 108.795, 0.2746", "497.401, 150.338, 109.762, 0.2746", "498.401, 150.338, 110.795, 0.2746", "499.465, 150.352, 111.817, 0.2746", "500.498, 150.529, 112.826, 0.2746", "501.319, 150.88, 113.885, 0.2746", "502.15, 151.024, 114.958, 0.2746", "503.243, 151.029, 115.808, 0.2746", "504.376, 151.165, 116.405, 0.2748", "505.45, 151.538, 116.803, 0.275", "506.4, 152.165, 117.047, 0.2752", "507.364, 152.779, 117.184, 0.2758", "508.482, 152.937, 117.291, 0.2768", "509.595, 153.147, 117.446, 0.2788", "510.71, 153.392, 117.602, 0.2826", "511.806, 153.72, 117.758, 0.2894", "512.93, 153.931, 117.921, 0.3018", "514.042, 154.157, 118.143, 0.3256", "515.166, 154.352, 118.396, 0.3662", "516.236, 154.719, 118.701, 0.4596", "517.184, 155.289, 119.095, 0.5446", "518.121, 155.876, 119.55, 0.4438", "519.059, 156.461, 120.032, 0.3668", "520.155, 156.736, 120.455, 0.3768", "521.296, 156.799, 120.786, 0.3402", "522.386, 157.087, 121.079, 0.3114", "523.468, 157.458, 121.269, 0.297", "524.531, 157.88, 121.382, 0.3108", "525.649, 158.122, 121.442, 0.3672", "526.646, 158.681, 121.472, 0.322", "527.755, 158.956, 121.486, 0.2796", "528.896, 159.033, 121.486, 0.2288", "530.04, 159.033, 121.486, 0.2288" ],
    "parent" : "apic_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "481.891, 160.168, 83.3087, 0.4604", "481.204, 159.882, 83.494, 0.3636", "480.425, 159.247, 83.6976, 0.308", "479.739, 158.368, 83.9073, 0.2892", "479.223, 157.397, 83.9387, 0.3026", "478.97, 156.349, 83.9222, 0.3214", "478.55, 155.369, 84.0003, 0.387", "477.787, 154.519, 84.1137, 0.3588", "477.125, 153.593, 84.2576, 0.3484", "476.524, 152.62, 84.4726, 0.3536", "475.925, 151.645, 84.7815, 0.4722", "475.325, 150.672, 85.1665, 0.3932", "474.808, 149.794, 85.7864, 0.3254", "474.538, 149.275, 86.76, 0.2746", "474.259, 148.749, 87.9584, 0.2746", "473.655, 147.921, 89.0918, 0.2746", "473.01, 146.986, 89.9581, 0.2746", "472.534, 145.963, 90.5792, 0.2746", "471.715, 145.169, 90.9891, 0.2746", "471.004, 144.29, 91.2932, 0.2746", "470.333, 143.39, 91.5589, 0.2746", "469.602, 142.51, 91.7717, 0.2746", "468.882, 141.622, 91.9584, 0.2746", "468.3, 140.68, 92.1474, 0.2746", "468.041, 139.679, 92.4202, 0.2746", "467.213, 138.891, 92.6358, 0.2746", "466.435, 138.053, 92.8102, 0.2746", "465.718, 137.162, 92.9667, 0.2746", "464.973, 136.296, 93.1185, 0.2746", "464.141, 135.511, 93.2775, 0.2746", "463.293, 134.745, 93.457, 0.2746", "462.484, 133.952, 93.7082, 0.2746", "461.626, 133.311, 94.1172, 0.2746", "460.745, 132.798, 94.6918, 0.2746", "459.986, 132.037, 95.3207, 0.2746", "459.311, 131.121, 95.884, 0.2746", "458.543, 130.276, 96.353, 0.2746", "457.838, 129.399, 96.766, 0.2746", "457.283, 128.485, 97.2275, 0.2746", "456.707, 127.575, 97.6965, 0.2746", "456.211, 126.594, 98.1655, 0.2746", "455.493, 125.839, 98.6734, 0.2746", "454.664, 125.1, 99.1519, 0.2746", "453.936, 124.227, 99.5324, 0.2746", "453.183, 123.387, 99.7382, 0.2746", "452.466, 122.509, 99.8379, 0.2746", "451.787, 121.588, 99.9015, 0.2746", "450.99, 120.946, 100.075, 0.2746", "450.171, 120.217, 100.256, 0.2746", "449.478, 119.532, 100.229, 0.2748", "448.703, 118.752, 100.215, 0.275", "447.659, 118.385, 100.197, 0.2752", "446.825, 117.61, 100.161, 0.2758", "446.058, 116.796, 100.185, 0.2768", "445.275, 116.052, 100.325, 0.2788", "444.246, 115.572, 100.514, 0.2824", "443.51, 114.747, 100.654, 0.2882", "442.574, 114.181, 100.834, 0.305", "441.816, 113.357, 101.029, 0.305", "441.012, 112.57, 101.08, 0.4576" ],
    "parent" : "apic_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "486.035, 163.017, 76.0497, 0.353", "485.976, 162.463, 75.9172, 0.3278", "485.577, 161.994, 76.284, 0.3628", "485.484, 161.127, 77.0378, 0.489", "485.391, 160.411, 78.1245, 0.4252", "485.526, 159.378, 79.2537, 0.3796", "485.218, 158.351, 80.3412, 0.4004", "484.961, 157.345, 81.298, 0.3846", "485.065, 156.458, 82.166, 0.3898", "484.492, 155.489, 82.7728, 0.462", "483.744, 154.632, 83.1835, 0.5206", "483.032, 153.744, 83.5187, 0.5372", "482.429, 153.338, 83.9068, 0.557", "482.009, 152.293, 84.198, 0.4186", "481.408, 151.332, 84.4508, 0.3254", "480.987, 150.329, 84.7753, 0.2746", "480.74, 149.231, 84.9965, 0.2746", "479.86, 148.544, 85.1701, 0.2746", "479.431, 147.484, 85.3115, 0.2746", "479.109, 146.402, 85.477, 0.2746", "478.379, 145.556, 85.5607, 0.2746", "477.638, 144.74, 85.7674, 0.2746", "476.897, 143.926, 86.0762, 0.2746", "476.15, 143.117, 86.4408, 0.2746", "475.118, 142.628, 86.7292, 0.2746", "474.198, 141.947, 86.9378, 0.2746", "473.291, 141.257, 87.0786, 0.2746", "472.577, 140.364, 87.1461, 0.2746", "471.759, 139.568, 87.1665, 0.2746", "471.059, 138.665, 87.164, 0.2746", "470.229, 137.884, 87.1587, 0.2746", "469.355, 137.19, 87.1517, 0.2746", "468.874, 136.152, 87.1419, 0.2746", "468.35, 135.138, 87.1256, 0.2746", "467.623, 134.276, 87.1032, 0.2746", "466.739, 133.581, 87.0789, 0.2746", "466.121, 132.62, 87.0565, 0.2746", "465.5, 131.703, 86.9938, 0.2746", "465.079, 130.83, 86.8115, 0.2746", "465.192, 129.865, 86.7647, 0.2746", "465.018, 128.919, 86.8941, 0.2746", "464.454, 127.938, 87.0058, 0.2746", "463.982, 126.973, 87.1654, 0.2744", "463.9, 125.97, 87.1158, 0.2744", "463.788, 124.927, 86.8532, 0.2742", "463.294, 124.064, 86.3856, 0.274", "463.568, 123.037, 85.9914, 0.2736", "463.33, 121.962, 85.7298, 0.2728", "462.494, 121.23, 85.4969, 0.2712", "462.018, 120.205, 85.3493, 0.2684", "461.949, 119.066, 85.2849, 0.2626", "461.947, 117.922, 85.2681, 0.2542", "461.832, 116.785, 85.2611, 0.2288", "461.146, 115.887, 85.4, 0.2288" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "486.035, 163.017, 76.0497, 0.353", "486.23, 162.258, 72.5259, 0.2288", "486.722, 162.389, 70.6152, 0.402", "487.391, 161.668, 69.8141, 0.389", "487.679, 160.753, 69.1541, 0.3916", "488.339, 160.303, 68.3166, 0.4964", "488.894, 159.633, 67.5511, 0.4328", "488.4, 159.076, 66.8046, 0.4242", "488.709, 158.544, 66.0162, 0.3338", "489.195, 157.631, 65.3181, 0.3", "489.113, 156.571, 64.7508, 0.2746", "489.194, 155.472, 64.4588, 0.2746", "489.832, 154.812, 64.1488, 0.2746", "490.69, 154.153, 63.8812, 0.2746", "490.928, 153.097, 63.7067, 0.2746", "490.973, 151.954, 63.5751, 0.2746", "491.6, 151.071, 63.4645, 0.2746", "492.627, 150.616, 63.3648, 0.2746", "493.722, 150.283, 63.2842, 0.2746", "494.832, 150.086, 63.1548, 0.2746", "495.44, 149.239, 62.9577, 0.2746", "495.613, 148.116, 62.806, 0.2746", "496.122, 147.098, 62.7102, 0.2746", "496.887, 146.25, 62.6713, 0.2746", "497.658, 145.404, 62.6878, 0.2746", "498.534, 144.671, 62.7774, 0.2746", "499.44, 143.977, 62.923, 0.2746", "500.178, 143.126, 63.1288, 0.2746", "500.878, 142.243, 63.3744, 0.2746", "501.472, 141.292, 63.6426, 0.2746", "502.047, 140.312, 63.8733, 0.2746", "502.555, 139.299, 63.9607, 0.2746", "503.143, 138.327, 63.9414, 0.2746", "503.861, 137.441, 63.861, 0.2746", "504.781, 136.764, 63.7599, 0.2746", "505.812, 136.272, 63.674, 0.2746", "506.469, 135.337, 63.6171, 0.2746", "507.033, 134.346, 63.5942, 0.2746", "507.882, 133.579, 63.5953, 0.2746", "508.76, 132.846, 63.614, 0.2746", "509.729, 132.246, 63.6457, 0.2744", "510.774, 131.875, 63.6765, 0.2744", "510.98, 130.821, 63.681, 0.2742", "510.868, 129.745, 63.8257, 0.274", "510.731, 128.652, 64.0262, 0.2736", "510.614, 127.524, 64.1589, 0.2728", "510.406, 126.423, 64.318, 0.2712", "509.889, 125.435, 64.4619, 0.2684", "509.511, 124.369, 64.608, 0.2626", "509.613, 123.294, 64.8354, 0.2542", "510.099, 122.282, 65.0843, 0.2288", "510.796, 121.378, 65.52, 0.2288" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "477.34, 158.389, 83.4394, 0.4596", "477.079, 157.443, 83.4361, 0.4576", "476.722, 156.386, 83.4126, 0.3596", "476.701, 155.242, 83.4033, 0.3006", "476.468, 154.165, 83.3896, 0.2756", "476.133, 153.121, 83.3703, 0.2766", "476.133, 151.977, 83.3426, 0.2782", "476.133, 150.833, 83.3045, 0.2814", "476.312, 149.721, 83.251, 0.287", "476.606, 148.619, 83.174, 0.2988", "476.705, 147.484, 83.0656, 0.3142", "476.728, 146.34, 82.9203, 0.3734", "476.96, 145.238, 82.7375, 0.3338", "477.244, 144.202, 82.4258, 0.3", "477.404, 143.172, 81.9535, 0.2746", "477.569, 142.124, 81.3884, 0.2746", "477.826, 141.046, 80.8609, 0.2746", "478.059, 139.938, 80.4793, 0.2746", "478.112, 138.803, 80.1973, 0.2746", "478.112, 137.659, 79.9786, 0.2746", "478.263, 136.567, 79.7213, 0.2746", "478.548, 135.557, 79.3537, 0.2746", "478.741, 134.465, 78.9947, 0.2746", "478.871, 133.329, 78.7086, 0.2746", "478.833, 132.19, 78.5044, 0.2746", "478.509, 131.1, 78.3782, 0.2746", "478.215, 129.996, 78.3208, 0.2746", "478.305, 128.872, 78.3098, 0.2746", "478.494, 127.744, 78.3138, 0.2746", "478.682, 126.615, 78.3216, 0.2744", "478.869, 125.487, 78.3289, 0.2744", "479.103, 124.367, 78.3401, 0.2742", "479.423, 123.269, 78.3602, 0.274", "479.831, 122.201, 78.3964, 0.2736", "480.556, 121.333, 78.4582, 0.2728", "480.712, 120.646, 78.3572, 0.2712", "481.052, 119.976, 78.5355, 0.2684", "481.258, 118.878, 78.7713, 0.2626", "481.51, 117.841, 79.165, 0.2542", "481.407, 116.868, 79.6846, 0.2288", "480.938, 116.002, 80.92, 0.2288" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "477.34, 158.389, 83.4394, 0.4596", "476.984, 156.993, 84.453, 0.4114", "476.822, 156.318, 85.2496, 0.386", "477.076, 155.392, 86.158, 0.485", "476.923, 154.346, 87.124, 0.418", "476.827, 153.226, 88.0566, 0.3662", "476.582, 152.191, 89.0624, 0.3756", "476.286, 151.34, 90.2014, 0.3378", "475.776, 150.815, 91.4735, 0.3074", "474.816, 150.674, 92.6268, 0.2884", "473.99, 150.473, 93.7933, 0.2998", "473.955, 149.553, 94.9628, 0.3234", "473.904, 148.444, 95.9865, 0.3548", "473.476, 147.499, 96.9671, 0.4742", "472.81, 146.637, 97.8813, 0.3968", "472.354, 145.7, 98.8098, 0.3322", "472.123, 144.644, 99.7016, 0.287", "471.872, 143.561, 100.525, 0.2988", "471.425, 142.596, 101.352, 0.3142", "470.908, 141.736, 102.208, 0.3734", "470.25, 140.82, 102.973, 0.3338", "469.532, 140.004, 103.716, 0.3", "468.865, 139.181, 104.429, 0.2746", "468.413, 138.151, 105.043, 0.2746", "468.184, 137.046, 105.659, 0.2746", "467.925, 136.036, 106.364, 0.2746", "467.456, 135.221, 107.263, 0.2746", "466.734, 134.573, 108.274, 0.2746", "465.847, 134.068, 109.355, 0.2746", "464.849, 133.61, 110.376, 0.2744", "463.798, 133.167, 111.278, 0.2744", "462.915, 132.842, 112.24, 0.2742", "462.152, 132.596, 113.329, 0.274", "461.267, 132.259, 114.432, 0.2736", "460.256, 131.783, 115.354, 0.2728", "459.258, 131.489, 116.236, 0.2712", "458.219, 131.469, 117.074, 0.2684", "457.401, 132.202, 117.689, 0.2626", "457.101, 133.271, 118.191, 0.2542", "456.932, 134.381, 118.611, 0.2288", "456.781, 135.515, 119.147, 0.2288" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "499.282, 175.526, 92.6699, 0.5192", "499.572, 175.105, 93.515, 0.425", "500.53, 174.588, 94.2866, 0.4234", "501.202, 173.706, 94.8508, 0.4954", "501.571, 172.679, 95.4005, 0.7222", "502.094, 171.753, 95.9022, 0.9202", "502.571, 170.949, 96.46, 0.9932", "503.191, 170.151, 97.1163, 0.9552", "504.113, 169.501, 97.7452, 0.81" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "499.282, 175.526, 92.6699, 0.5192", "499.847, 175.673, 93.4853, 0.4576", "500.883, 176.047, 93.8613, 0.58", "501.854, 176.367, 93.8899, 0.4622", "502.904, 176.338, 93.9837, 0.402", "503.226, 175.819, 94.4482, 0.4372", "503.69, 175.1, 95.1717, 0.4768", "504.378, 175.232, 96.098, 0.4444", "505.433, 175.069, 96.8425, 0.442", "506.451, 175.069, 97.6948, 0.6142", "507.244, 174.951, 98.747, 0.5342", "508.085, 174.756, 99.892, 0.4938", "509.121, 174.802, 100.87, 0.58", "509.966, 175.316, 101.811, 0.6448", "510.704, 175.898, 102.868, 0.54", "511.604, 176.163, 103.959, 0.5232", "512.673, 176.302, 104.983, 0.5444", "513.717, 176.42, 105.993, 0.5582", "514.601, 176.2, 106.849, 0.7074", "515.356, 175.792, 107.71, 0.8424", "516.271, 175.486, 108.66, 0.865", "517.042, 174.908, 109.686, 0.64", "517.984, 174.616, 110.768, 0.6026", "518.851, 173.984, 111.753, 0.52", "519.822, 174.015, 112.525, 0.431", "520.801, 174.153, 113.388, 0.4116", "521.836, 174.205, 114.278, 0.357", "522.181, 174.393, 115.435, 0.345", "522.493, 175.29, 116.545, 0.3474", "522.911, 176.092, 117.701, 0.4604", "523.491, 177.0, 118.732, 0.3728", "524.113, 177.954, 119.506, 0.2796", "524.662, 178.909, 120.736, 0.2288" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "504.113, 169.501, 97.7452, 0.81", "504.846, 169.089, 98.2484, 0.6754", "505.624, 168.298, 98.6829, 0.459", "506.261, 167.384, 99.1488, 0.3544", "507.021, 166.756, 99.7251, 0.323", "507.981, 166.451, 100.384, 0.3898", "508.919, 165.896, 101.026, 0.3638", "509.919, 165.378, 101.58, 0.3578", "510.972, 165.222, 102.117, 0.3712", "512.058, 165.014, 102.521, 0.5044", "513.138, 164.743, 102.872, 0.4538", "514.221, 164.434, 103.193, 0.4332", "515.322, 164.134, 103.456, 0.497", "516.348, 164.483, 103.577, 0.5772", "517.431, 164.75, 103.749, 0.6812", "518.558, 164.766, 103.955, 0.635", "519.687, 164.737, 104.174, 0.7944", "520.819, 164.575, 104.338, 0.8146", "521.963, 164.543, 104.459, 0.817", "523.097, 164.687, 104.535, 0.7622", "524.181, 165.011, 104.502, 0.719", "525.066, 165.533, 104.612, 0.5846", "526.115, 165.97, 104.649, 0.598", "527.132, 166.411, 104.557, 0.7222", "528.065, 167.0, 104.382, 0.699", "528.918, 167.626, 104.122, 0.514", "529.861, 168.194, 103.987, 0.4024", "530.736, 168.817, 104.009, 0.4436", "531.704, 169.407, 104.072, 0.4604", "532.605, 170.021, 104.231, 0.5514", "533.53, 170.585, 104.465, 0.6596", "534.4, 171.327, 104.653, 0.6964", "535.224, 171.999, 104.688, 0.6434", "536.049, 172.596, 104.559, 0.447", "536.711, 173.423, 104.415, 0.331", "537.321, 174.234, 104.534, 0.285", "537.696, 174.983, 105.024, 0.2938", "538.044, 175.472, 105.867, 0.3112", "538.775, 176.213, 106.694, 0.3382", "539.753, 176.795, 107.381, 0.413", "540.725, 177.397, 107.914, 0.4326", "541.54, 178.196, 108.285, 0.3592", "542.298, 179.053, 108.541, 0.2996", "542.847, 180.051, 108.776, 0.274", "543.344, 181.055, 109.116, 0.2736", "544.053, 181.943, 109.522, 0.2728", "544.86, 182.753, 110.0, 0.2712", "545.496, 183.697, 110.555, 0.2684", "546.135, 184.598, 111.224, 0.2626", "546.707, 185.235, 112.12, 0.2542", "547.28, 185.872, 113.149, 0.2288", "547.852, 186.51, 115.663, 0.2288" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "504.113, 169.501, 97.7452, 0.81", "505.245, 169.155, 97.6226, 0.6864", "506.323, 169.119, 97.3176, 0.4482", "507.464, 169.119, 97.0262, 0.3332", "508.606, 169.095, 96.7702, 0.289", "509.626, 168.783, 96.5, 0.3008", "510.167, 167.94, 96.3371, 0.3254", "510.748, 167.045, 96.2643, 0.3582", "511.454, 166.536, 95.9476, 0.4806", "512.11, 165.705, 95.5304, 0.4088", "513.206, 165.631, 95.212, 0.354", "514.313, 165.894, 94.9382, 0.3296", "515.31, 165.74, 94.5515, 0.3662", "515.874, 164.751, 94.2614, 0.4956", "516.674, 164.075, 94.1528, 0.436", "517.748, 163.984, 94.1469, 0.4066", "518.726, 163.967, 93.9708, 0.4164", "519.376, 163.845, 93.4836, 0.5792", "520.221, 163.157, 93.0213, 0.6374", "521.111, 162.617, 92.5022, 0.5556", "522.128, 162.315, 91.9318, 0.4092", "523.231, 162.144, 91.5239, 0.3402", "523.722, 161.296, 91.3458, 0.3748", "524.168, 160.373, 91.4004, 0.3364", "525.089, 160.082, 91.2416, 0.3046", "526.147, 159.855, 90.925, 0.2834", "527.225, 159.508, 90.5456, 0.2906", "527.876, 158.502, 89.6832, 0.3054", "528.125, 157.631, 89.0151, 0.3264", "528.012, 156.791, 88.2879, 0.3974", "528.128, 155.879, 87.9158, 0.3728", "528.14, 154.745, 87.5689, 0.3978", "528.14, 153.635, 87.1811, 0.332", "528.313, 152.584, 86.7706, 0.2966", "529.058, 151.836, 86.3584, 0.2684", "529.79, 151.141, 85.9093, 0.2626", "530.618, 150.449, 85.5215, 0.2542", "531.399, 149.625, 85.2998, 0.2288", "532.189, 148.834, 85.4, 0.2288" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_140",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_141",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_44", "dend_37", "apic_0", "dend_34", "dend_27", "dend_12", "dend_1", "dend_0", "dend_47", "dend_46", "dend_41", "dend_38", "apic_4", "apic_1", "dend_36", "dend_35", "dend_33", "dend_28", "dend_18", "dend_13", "dend_7", "dend_2", "dend_43", "dend_42", "dend_40", "dend_39", "apic_6", "apic_5", "apic_3", "apic_2", "dend_30", "dend_29", "dend_22", "dend_19", "dend_17", "dend_14", "dend_9", "dend_8", "dend_6", "dend_3", "apic_8", "apic_7", "dend_32", "dend_31", "dend_24", "dend_23", "dend_21", "dend_20", "dend_16", "dend_15", "dend_11", "dend_10", "dend_5", "dend_4", "apic_28", "apic_9", "dend_26", "dend_25", "apic_30", "apic_29", "apic_11", "apic_10", "apic_21", "apic_12", "apic_25", "apic_22", "apic_18", "apic_13", "apic_27", "apic_26", "apic_24", "apic_23", "apic_20", "apic_19", "apic_15", "apic_14", "apic_17", "apic_16" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_4", "apic_1", "apic_6", "apic_5", "apic_3", "apic_2", "apic_8", "apic_7", "apic_28", "apic_9", "apic_30", "apic_29", "apic_11", "apic_10", "apic_21", "apic_12", "apic_25", "apic_22", "apic_18", "apic_13", "apic_27", "apic_26", "apic_24", "apic_23", "apic_20", "apic_19", "apic_15", "apic_14", "apic_17", "apic_16" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_44", "dend_37", "dend_34", "dend_27", "dend_12", "dend_1", "dend_0", "dend_47", "dend_46", "dend_41", "dend_38", "dend_36", "dend_35", "dend_33", "dend_28", "dend_18", "dend_13", "dend_7", "dend_2", "dend_43", "dend_42", "dend_40", "dend_39", "dend_30", "dend_29", "dend_22", "dend_19", "dend_17", "dend_14", "dend_9", "dend_8", "dend_6", "dend_3", "dend_32", "dend_31", "dend_24", "dend_23", "dend_21", "dend_20", "dend_16", "dend_15", "dend_11", "dend_10", "dend_5", "dend_4", "dend_26", "dend_25" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5233",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "apic_4", "apic_4", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_8", "apic_8", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.9387329"
  }, {
    "group" : "apic",
    "value" : "2.9387329"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "128.34438"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "4.8461938E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "8.449898E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.77978843",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "6.556333E-5",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.031976756",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "6.9758657E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0025971308",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.14889011",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.817028E-4",
    "erev" : "-88.26162"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "8.4949884E-4",
    "erev" : "-88.26162"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "5.289482E-5",
    "erev" : "-88.26162"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "1.2118365E-7",
    "erev" : "-88.26162"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "2.8601973E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0033359523",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_488461970",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_488461970

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_18, id: dend_18, parent: dend_12
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_8, id: apic_8, parent: apic_6
create apic_8
public apic_8
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_28, id: apic_28, parent: apic_8
create apic_28
public apic_28
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: apic_30, id: apic_30, parent: apic_28
create apic_30
public apic_30
// Section: apic_29, id: apic_29, parent: apic_28
create apic_29
public apic_29
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_21, id: apic_21, parent: apic_11
create apic_21
public apic_21
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_25, id: apic_25, parent: apic_21
create apic_25
public apic_25
// Section: apic_22, id: apic_22, parent: apic_21
create apic_22
public apic_22
// Section: apic_18, id: apic_18, parent: apic_12
create apic_18
public apic_18
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_27, id: apic_27, parent: apic_25
create apic_27
public apic_27
// Section: apic_26, id: apic_26, parent: apic_25
create apic_26
public apic_26
// Section: apic_24, id: apic_24, parent: apic_22
create apic_24
public apic_24
// Section: apic_23, id: apic_23, parent: apic_22
create apic_23
public apic_23
// Section: apic_20, id: apic_20, parent: apic_18
create apic_20
public apic_20
// Section: apic_19, id: apic_19, parent: apic_18
create apic_19
public apic_19
// Section: apic_15, id: apic_15, parent: apic_13
create apic_15
public apic_15
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_17, id: apic_17, parent: apic_15
create apic_17
public apic_17
// Section: apic_16, id: apic_16, parent: apic_15
create apic_16
public apic_16

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_140, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_140
// Group: {name=ModelViewParmSubset_141, groups=[], sections=[dend_45, dend_44, dend_37, apic_0, dend_34, dend_27, dend_12, dend_1, dend_0, dend_47, dend_46, dend_41, dend_38, apic_4, apic_1, dend_36, dend_35, dend_33, dend_28, dend_18, dend_13, dend_7, dend_2, dend_43, dend_42, dend_40, dend_39, apic_6, apic_5, apic_3, apic_2, dend_30, dend_29, dend_22, dend_19, dend_17, dend_14, dend_9, dend_8, dend_6, dend_3, apic_8, apic_7, dend_32, dend_31, dend_24, dend_23, dend_21, dend_20, dend_16, dend_15, dend_11, dend_10, dend_5, dend_4, apic_28, apic_9, dend_26, dend_25, apic_30, apic_29, apic_11, apic_10, apic_21, apic_12, apic_25, apic_22, apic_18, apic_13, apic_27, apic_26, apic_24, apic_23, apic_20, apic_19, apic_15, apic_14, apic_17, apic_16]}
objref ModelViewParmSubset_141
// Group: {name=apic, groups=[], sections=[apic_0, apic_4, apic_1, apic_6, apic_5, apic_3, apic_2, apic_8, apic_7, apic_28, apic_9, apic_30, apic_29, apic_11, apic_10, apic_21, apic_12, apic_25, apic_22, apic_18, apic_13, apic_27, apic_26, apic_24, apic_23, apic_20, apic_19, apic_15, apic_14, apic_17, apic_16]}
objref apic
// Group: {name=dend, groups=[], sections=[dend_45, dend_44, dend_37, dend_34, dend_27, dend_12, dend_1, dend_0, dend_47, dend_46, dend_41, dend_38, dend_36, dend_35, dend_33, dend_28, dend_18, dend_13, dend_7, dend_2, dend_43, dend_42, dend_40, dend_39, dend_30, dend_29, dend_22, dend_19, dend_17, dend_14, dend_9, dend_8, dend_6, dend_3, dend_32, dend_31, dend_24, dend_23, dend_21, dend_20, dend_16, dend_15, dend_11, dend_10, dend_5, dend_4, dend_26, dend_25]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_5233, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_5233
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_488461970
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.4999999999999977)
    connect dend_45(0), soma_0(0.4999999999999977)
    connect dend_44(0), soma_0(0.4999999999999977)
    connect dend_37(0), soma_0(0.4999999999999977)
    connect apic_0(0), soma_0(0.4999999999999977)
    connect dend_34(0), soma_0(0.4999999999999977)
    connect dend_27(0), soma_0(0.4999999999999977)
    connect dend_12(0), soma_0(0.4999999999999977)
    connect dend_1(0), soma_0(0.4999999999999977)
    connect dend_0(0), soma_0(0.4999999999999977)
    connect axon_1(0), axon_0(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_18(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_8(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_28(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect apic_30(0), apic_28(1.0)
    connect apic_29(0), apic_28(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_21(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_25(0), apic_21(1.0)
    connect apic_22(0), apic_21(1.0)
    connect apic_18(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_27(0), apic_25(1.0)
    connect apic_26(0), apic_25(1.0)
    connect apic_24(0), apic_22(1.0)
    connect apic_23(0), apic_22(1.0)
    connect apic_20(0), apic_18(1.0)
    connect apic_19(0), apic_18(1.0)
    connect apic_15(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_17(0), apic_15(1.0)
    connect apic_16(0), apic_15(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 310.93, 574.33, 24.5171, 12.4408 ) }
    soma_0 { pt3dadd( 317.15, 574.33, 24.5171, 12.4408 ) }
    soma_0 { pt3dadd( 323.37, 574.33, 24.5171, 12.4408 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 317.15, 574.33, 24.5171, 1.0 ) }
    axon_0 { pt3dadd( 322.991, 588.146, 24.5171, 1.0 ) }
    axon_0 { pt3dadd( 328.833, 601.962, 24.5171, 1.0 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 6/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 315.738, 579.338, 31.3138, 0.2288 ) }
    dend_45 { pt3dadd( 316.14, 580.203, 32.2834, 0.4332 ) }
    dend_45 { pt3dadd( 317.017, 580.931, 33.0078, 0.5816 ) }
    dend_45 { pt3dadd( 317.895, 581.66, 33.5406, 0.7806 ) }
    dend_45 { pt3dadd( 318.773, 582.389, 33.9335, 0.834 ) }
    dend_45 { pt3dadd( 319.651, 583.117, 34.2359, 0.6334 ) }
    dend_45 { pt3dadd( 320.495, 583.859, 34.5271, 0.5716 ) }
    dend_45 { pt3dadd( 321.125, 584.782, 34.7998, 0.553 ) }
    dend_45 { pt3dadd( 321.618, 585.814, 35.0193, 0.7396 ) }
    dend_45 { pt3dadd( 322.077, 586.784, 35.2906, 0.9282 ) }
    dend_45 { pt3dadd( 322.4, 587.767, 35.6247, 0.8972 ) }
    dend_45 { pt3dadd( 323.108, 588.497, 35.9562, 0.628 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 18/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 313.219, 578.172, 23.2708, 0.9152 ) }
    dend_44 { pt3dadd( 312.321, 578.857, 23.147, 0.5992 ) }
    dend_44 { pt3dadd( 311.701, 579.706, 23.0594, 0.4784 ) }
    dend_44 { pt3dadd( 311.092, 580.626, 23.0026, 0.5266 ) }
    dend_44 { pt3dadd( 310.367, 581.503, 22.969, 0.6656 ) }
    dend_44 { pt3dadd( 309.884, 582.528, 22.9519, 0.6842 ) }
    dend_44 { pt3dadd( 309.703, 583.647, 22.9471, 0.735 ) }
    dend_44 { pt3dadd( 309.719, 584.786, 22.9281, 0.7492 ) }
    dend_44 { pt3dadd( 309.669, 585.924, 22.9096, 0.707 ) }
    dend_44 { pt3dadd( 309.548, 587.061, 22.9088, 0.7316 ) }
    dend_44 { pt3dadd( 309.387, 588.188, 22.9435, 0.7368 ) }
    dend_44 { pt3dadd( 309.182, 589.3, 23.0272, 0.7128 ) }
    dend_44 { pt3dadd( 309.039, 590.426, 23.1028, 0.6034 ) }
    dend_44 { pt3dadd( 309.002, 591.562, 23.1006, 0.4862 ) }
    dend_44 { pt3dadd( 309.0, 592.698, 23.0129, 0.5404 ) }
    dend_44 { pt3dadd( 308.983, 593.838, 22.8777, 0.467 ) }
    dend_44 { pt3dadd( 308.94, 594.979, 22.7144, 0.4886 ) }
    dend_44 { pt3dadd( 308.803, 596.107, 22.5182, 0.4498 ) }
    dend_44 { pt3dadd( 308.62, 597.229, 22.3006, 0.5308 ) }
    dend_44 { pt3dadd( 308.702, 598.337, 22.1514, 0.6254 ) }
    dend_44 { pt3dadd( 308.914, 599.454, 22.0441, 0.6134 ) }
    dend_44 { pt3dadd( 308.795, 600.547, 21.8725, 0.585 ) }
    dend_44 { pt3dadd( 308.355, 601.585, 21.6745, 0.5626 ) }
    dend_44 { pt3dadd( 307.823, 602.594, 21.4813, 0.6032 ) }
    dend_44 { pt3dadd( 307.286, 603.601, 21.2884, 0.5072 ) }
    dend_44 { pt3dadd( 306.793, 604.623, 21.0714, 0.475 ) }
    dend_44 { pt3dadd( 306.304, 605.65, 20.8485, 0.6234 ) }
    dend_44 { pt3dadd( 305.688, 606.575, 20.7337, 0.575 ) }
    dend_44 { pt3dadd( 305.084, 607.525, 20.6942, 0.454 ) }
    dend_44 { pt3dadd( 304.584, 608.513, 20.5612, 0.3816 ) }
    dend_44 { pt3dadd( 304.278, 609.498, 20.2611, 0.4238 ) }
    dend_44 { pt3dadd( 303.87, 610.434, 19.8962, 0.5616 ) }
    dend_44 { pt3dadd( 303.175, 611.325, 19.6717, 0.7574 ) }
    dend_44 { pt3dadd( 302.442, 612.177, 19.5054, 0.7224 ) }
    dend_44 { pt3dadd( 301.844, 613.126, 19.3595, 0.759 ) }
    dend_44 { pt3dadd( 301.312, 614.132, 19.2758, 0.5642 ) }
    dend_44 { pt3dadd( 300.752, 615.127, 19.2366, 0.5618 ) }
    dend_44 { pt3dadd( 300.157, 616.078, 19.2825, 0.4188 ) }
    dend_44 { pt3dadd( 299.522, 617.007, 19.3987, 0.3676 ) }
    dend_44 { pt3dadd( 299.06, 618.037, 19.5426, 0.3784 ) }
    dend_44 { pt3dadd( 298.679, 619.109, 19.7103, 0.343 ) }
    dend_44 { pt3dadd( 298.093, 620.061, 19.8218, 0.3168 ) }
    dend_44 { pt3dadd( 297.598, 621.056, 19.8358, 0.3068 ) }
    dend_44 { pt3dadd( 297.365, 622.162, 19.8388, 0.3292 ) }
    dend_44 { pt3dadd( 297.111, 623.271, 19.8761, 0.4014 ) }
    dend_44 { pt3dadd( 297.024, 624.286, 20.0642, 0.3856 ) }
    dend_44 { pt3dadd( 296.383, 625.032, 20.3473, 0.3976 ) }
    dend_44 { pt3dadd( 295.469, 625.567, 20.396, 0.4466 ) }
    dend_44 { pt3dadd( 294.97, 626.501, 20.2415, 0.636 ) }
    dend_44 { pt3dadd( 294.636, 627.469, 19.9895, 0.7394 ) }
    dend_44 { pt3dadd( 293.852, 628.223, 19.8467, 0.7606 ) }
    dend_44 { pt3dadd( 293.109, 629.027, 19.6305, 0.7114 ) }
    dend_44 { pt3dadd( 292.427, 629.771, 19.3528, 0.5934 ) }
    dend_44 { pt3dadd( 291.874, 630.725, 19.1587, 0.5038 ) }
    dend_44 { pt3dadd( 291.137, 631.577, 18.9412, 0.3978 ) }
    dend_44 { pt3dadd( 290.266, 632.308, 18.7127, 0.3658 ) }
    dend_44 { pt3dadd( 289.274, 632.651, 18.3873, 0.423 ) }
    dend_44 { pt3dadd( 288.722, 633.42, 18.0502, 0.4226 ) }
    dend_44 { pt3dadd( 288.238, 634.436, 17.8186, 0.4794 ) }
    dend_44 { pt3dadd( 287.519, 635.276, 17.7106, 0.5344 ) }
    dend_44 { pt3dadd( 286.726, 636.08, 17.5941, 0.4238 ) }
    dend_44 { pt3dadd( 286.144, 636.812, 17.276, 0.3352 ) }
    dend_44 { pt3dadd( 285.84, 637.672, 16.7986, 0.2926 ) }
    dend_44 { pt3dadd( 285.681, 638.775, 16.4018, 0.3076 ) }
    dend_44 { pt3dadd( 284.872, 639.057, 16.3545, 0.3378 ) }
    dend_44 { pt3dadd( 284.278, 639.892, 16.4937, 0.3826 ) }
    dend_44 { pt3dadd( 283.789, 640.88, 16.5704, 0.5206 ) }
    dend_44 { pt3dadd( 283.553, 641.989, 16.7196, 0.5082 ) }
    dend_44 { pt3dadd( 283.376, 643.068, 16.921, 0.4144 ) }
    dend_44 { pt3dadd( 282.814, 644.033, 17.0293, 0.357 ) }
    dend_44 { pt3dadd( 282.605, 645.118, 16.9882, 0.3696 ) }
    dend_44 { pt3dadd( 282.605, 646.242, 16.9716, 0.503 ) }
    dend_44 { pt3dadd( 282.502, 647.34, 17.0128, 0.445 ) }
    dend_44 { pt3dadd( 282.321, 648.461, 17.0159, 0.4466 ) }
    dend_44 { pt3dadd( 282.11, 649.551, 17.0663, 0.3764 ) }
    dend_44 { pt3dadd( 282.099, 650.641, 17.0688, 0.3738 ) }
    dend_44 { pt3dadd( 282.225, 651.728, 16.9016, 0.4362 ) }
    dend_44 { pt3dadd( 282.336, 652.824, 16.5964, 0.4534 ) }
    dend_44 { pt3dadd( 282.281, 653.953, 16.2798, 0.5064 ) }
    dend_44 { pt3dadd( 281.999, 655.052, 15.9538, 0.7314 ) }
    dend_44 { pt3dadd( 281.397, 656.01, 15.6358, 0.7612 ) }
    dend_44 { pt3dadd( 280.759, 656.957, 15.3384, 0.8674 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_44 { pt3dadd( 279.939, 657.736, 15.0438, 0.8168 ) }
    dend_44 { pt3dadd( 279.193, 658.461, 14.6166, 0.7804 ) }
    dend_44 { pt3dadd( 278.428, 659.279, 14.3133, 0.6636 ) }
    dend_44 { pt3dadd( 278.002, 660.288, 13.9331, 0.6852 ) }
    dend_44 { pt3dadd( 277.758, 661.399, 13.6349, 0.4852 ) }
    dend_44 { pt3dadd( 277.296, 662.178, 13.2779, 0.3646 ) }
    dend_44 { pt3dadd( 276.807, 662.834, 12.7162, 0.2996 ) }
    dend_44 { pt3dadd( 276.403, 663.803, 12.2494, 0.323 ) }
    dend_44 { pt3dadd( 276.227, 664.878, 11.9176, 0.354 ) }
    dend_44 { pt3dadd( 275.967, 665.932, 11.5615, 0.473 ) }
    dend_44 { pt3dadd( 275.989, 666.986, 11.1418, 0.3944 ) }
    dend_44 { pt3dadd( 276.207, 668.082, 10.7414, 0.3278 ) }
    dend_44 { pt3dadd( 275.942, 669.164, 10.4322, 0.279 ) }
    dend_44 { pt3dadd( 275.426, 670.184, 10.1816, 0.2828 ) }
    dend_44 { pt3dadd( 275.621, 671.296, 9.9837, 0.2896 ) }
    dend_44 { pt3dadd( 275.69, 672.423, 9.7835, 0.3034 ) }
    dend_44 { pt3dadd( 275.695, 673.545, 9.5673, 0.323 ) }
    dend_44 { pt3dadd( 276.112, 674.605, 9.4032, 0.3898 ) }
    dend_44 { pt3dadd( 276.595, 675.642, 9.2826, 0.3644 ) }
    dend_44 { pt3dadd( 277.349, 676.501, 9.1994, 0.356 ) }
    dend_44 { pt3dadd( 278.351, 677.048, 9.1507, 0.3814 ) }
    dend_44 { pt3dadd( 279.462, 677.319, 9.1314, 0.4576 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 22/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 312.87, 576.061, 19.2198, 0.2288 ) }
    dend_37 { pt3dadd( 311.921, 576.497, 18.2745, 0.3668 ) }
    dend_37 { pt3dadd( 310.978, 576.947, 17.3508, 0.4368 ) }
    dend_37 { pt3dadd( 310.38, 577.604, 16.5298, 0.618 ) }
    dend_37 { pt3dadd( 310.652, 578.71, 15.925, 0.7036 ) }
    dend_37 { pt3dadd( 310.884, 579.709, 15.4165, 0.7062 ) }
    dend_37 { pt3dadd( 311.659, 580.416, 14.971, 0.5528 ) }
    dend_37 { pt3dadd( 312.124, 581.422, 14.6658, 0.579 ) }
    dend_37 { pt3dadd( 312.109, 582.549, 14.4318, 0.4924 ) }
    dend_37 { pt3dadd( 311.408, 583.316, 14.119, 0.5316 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 32/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 318.217, 569.192, 24.3398, 5.0762 ) }
    apic_0 { pt3dadd( 319.004, 568.498, 24.509, 2.2056 ) }
    apic_0 { pt3dadd( 320.061, 568.115, 24.7307, 1.06 ) }
    apic_0 { pt3dadd( 320.998, 567.459, 24.9214, 1.0256 ) }
    apic_0 { pt3dadd( 321.727, 566.577, 25.0681, 0.9724 ) }
    apic_0 { pt3dadd( 322.227, 565.549, 25.1734, 1.0514 ) }
    apic_0 { pt3dadd( 322.664, 564.492, 25.2406, 1.021 ) }
    apic_0 { pt3dadd( 323.406, 563.624, 25.2865, 0.9092 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 40/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 313.161, 569.892, 25.0037, 0.2288 ) }
    dend_34 { pt3dadd( 312.671, 568.886, 25.142, 0.3196 ) }
    dend_34 { pt3dadd( 312.389, 567.829, 25.163, 0.3526 ) }
    dend_34 { pt3dadd( 311.667, 566.986, 25.1941, 0.4454 ) }
    dend_34 { pt3dadd( 310.952, 566.287, 25.3938, 0.4638 ) }
    dend_34 { pt3dadd( 310.208, 565.754, 25.4909, 0.5576 ) }
    dend_34 { pt3dadd( 309.271, 565.191, 25.5732, 0.6708 ) }
    dend_34 { pt3dadd( 308.361, 564.518, 25.7317, 0.7172 ) }
    dend_34 { pt3dadd( 307.437, 563.847, 25.9252, 0.6832 ) }
    dend_34 { pt3dadd( 306.377, 563.465, 26.0795, 0.5154 ) }
    dend_34 { pt3dadd( 305.27, 563.61, 26.3147, 0.485 ) }
    dend_34 { pt3dadd( 304.278, 563.089, 26.6216, 0.4372 ) }
    dend_34 { pt3dadd( 303.29, 562.546, 27.0337, 0.5374 ) }
    dend_34 { pt3dadd( 302.31, 562.281, 27.6354, 0.4922 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 54/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 321.596, 577.51, 24.6616, 0.2288 ) }
    dend_27 { pt3dadd( 322.491, 578.219, 24.7654, 0.3392 ) }
    dend_27 { pt3dadd( 323.45, 578.84, 24.8581, 0.385 ) }
    dend_27 { pt3dadd( 324.497, 579.295, 24.9292, 0.525 ) }
    dend_27 { pt3dadd( 325.564, 579.706, 24.9892, 0.5164 ) }
    dend_27 { pt3dadd( 326.651, 580.063, 25.0424, 0.4308 ) }
    dend_27 { pt3dadd( 327.733, 580.429, 25.0855, 0.3814 ) }
    dend_27 { pt3dadd( 328.593, 581.111, 25.0477, 0.4452 ) }
    dend_27 { pt3dadd( 329.57, 581.487, 25.1745, 0.4948 ) }
    dend_27 { pt3dadd( 330.06, 581.979, 25.5959, 0.4634 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 64/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 311.699, 573.949, 24.6364, 0.6864 ) }
    dend_12 { pt3dadd( 310.833, 574.568, 24.8466, 0.9982 ) }
    dend_12 { pt3dadd( 309.976, 575.176, 25.1712, 0.9108 ) }
    dend_12 { pt3dadd( 308.921, 575.468, 25.503, 0.7606 ) }
    dend_12 { pt3dadd( 307.834, 575.692, 25.641, 0.8818 ) }
    dend_12 { pt3dadd( 306.759, 576.067, 25.6858, 0.9976 ) }
    dend_12 { pt3dadd( 305.723, 576.51, 25.6124, 1.0534 ) }
    dend_12 { pt3dadd( 304.73, 576.987, 25.4131, 1.0132 ) }
    dend_12 { pt3dadd( 303.711, 577.497, 25.268, 0.949 ) }
    dend_12 { pt3dadd( 302.728, 578.056, 25.2308, 0.7812 ) }
    dend_12 { pt3dadd( 301.678, 578.506, 25.2608, 0.7062 ) }
    dend_12 { pt3dadd( 300.58, 578.684, 25.3982, 0.7932 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 76/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 312.703, 575.806, 28.7417, 0.2288 ) }
    dend_1 { pt3dadd( 311.727, 576.184, 29.6047, 0.3264 ) }
    dend_1 { pt3dadd( 310.906, 576.816, 30.406, 0.3652 ) }
    dend_1 { pt3dadd( 310.71, 577.878, 31.0136, 0.4686 ) }
    dend_1 { pt3dadd( 310.072, 578.716, 31.4334, 0.508 ) }
    dend_1 { pt3dadd( 308.94, 578.75, 31.712, 0.6352 ) }
    dend_1 { pt3dadd( 307.818, 578.971, 31.8856, 0.835 ) }
    dend_1 { pt3dadd( 306.861, 578.529, 32.149, 0.924 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 84/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 316.049, 569.463, 20.5332, 0.9152 ) }
    dend_0 { pt3dadd( 315.815, 568.379, 19.8374, 0.6664 ) }
    dend_0 { pt3dadd( 315.54, 567.276, 19.231, 0.6524 ) }
    dend_0 { pt3dadd( 315.069, 566.247, 18.6987, 0.6082 ) }
    dend_0 { pt3dadd( 314.384, 565.352, 18.2, 0.6146 ) }
    dend_0 { pt3dadd( 313.539, 564.617, 17.7008, 0.656 ) }
    dend_0 { pt3dadd( 312.707, 563.928, 17.1371, 0.5884 ) }
    dend_0 { pt3dadd( 312.203, 562.961, 16.5516, 0.7064 ) }
    dend_0 { pt3dadd( 311.884, 561.869, 16.0188, 0.66 ) }
    dend_0 { pt3dadd( 311.4, 560.883, 15.4585, 0.4872 ) }
    dend_0 { pt3dadd( 311.125, 559.831, 14.8691, 0.3596 ) }
    dend_0 { pt3dadd( 310.863, 558.732, 14.3259, 0.3326 ) }
    dend_0 { pt3dadd( 310.286, 557.765, 13.9266, 0.4074 ) }
    dend_0 { pt3dadd( 309.645, 556.819, 13.5556, 0.3988 ) }
    dend_0 { pt3dadd( 309.109, 555.946, 13.0136, 0.4108 ) }
    dend_0 { pt3dadd( 308.478, 555.008, 12.4659, 0.5256 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 307.952, 554.028, 11.8728, 0.5188 ) }
    dend_0 { pt3dadd( 307.617, 553.344, 11.0354, 0.429 ) }
    dend_0 { pt3dadd( 307.45, 552.273, 10.2071, 0.4076 ) }
    dend_0 { pt3dadd( 306.672, 551.374, 9.0661, 0.3502 ) }
    dend_0 { pt3dadd( 306.038, 550.438, 8.6461, 0.3304 ) }
    dend_0 { pt3dadd( 305.961, 549.415, 8.1724, 0.3304 ) }
    dend_0 { pt3dadd( 306.601, 548.519, 7.7482, 0.3814 ) }
    dend_0 { pt3dadd( 307.629, 548.095, 6.8085, 0.4576 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 328.833, 601.962, 24.5171, 1.0 ) }
    axon_1 { pt3dadd( 334.674, 615.778, 24.5171, 1.0 ) }
    axon_1 { pt3dadd( 340.515, 629.594, 24.5171, 1.0 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 11/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 323.108, 588.497, 35.9562, 0.628 ) }
    dend_47 { pt3dadd( 322.522, 588.471, 37.3988, 0.6864 ) }
    dend_47 { pt3dadd( 322.256, 589.381, 39.1451, 0.7244 ) }
    dend_47 { pt3dadd( 322.269, 590.024, 39.9938, 0.6482 ) }
    dend_47 { pt3dadd( 322.361, 590.596, 41.0388, 0.4562 ) }
    dend_47 { pt3dadd( 322.895, 591.55, 41.953, 0.3476 ) }
    dend_47 { pt3dadd( 323.677, 592.242, 42.5992, 0.317 ) }
    dend_47 { pt3dadd( 324.584, 592.849, 43.0847, 0.3478 ) }
    dend_47 { pt3dadd( 325.164, 593.808, 43.484, 0.437 ) }
    dend_47 { pt3dadd( 325.566, 594.785, 43.9225, 0.446 ) }
    dend_47 { pt3dadd( 325.2, 595.354, 44.6046, 0.5358 ) }
    dend_47 { pt3dadd( 324.73, 596.308, 45.0892, 0.5758 ) }
    dend_47 { pt3dadd( 324.322, 597.365, 45.5977, 0.8064 ) }
    dend_47 { pt3dadd( 323.95, 598.35, 46.2064, 0.933 ) }
    dend_47 { pt3dadd( 323.54, 599.338, 46.8583, 0.797 ) }
    dend_47 { pt3dadd( 323.195, 600.333, 47.5527, 0.5154 ) }
    dend_47 { pt3dadd( 323.389, 601.391, 48.1306, 0.3644 ) }
    dend_47 { pt3dadd( 323.504, 602.394, 48.7763, 0.3418 ) }
    dend_47 { pt3dadd( 322.987, 603.386, 49.3004, 0.4238 ) }
    dend_47 { pt3dadd( 322.883, 604.518, 49.6776, 0.4322 ) }
    dend_47 { pt3dadd( 322.65, 605.533, 50.6192, 0.4576 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 32/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 323.108, 588.497, 35.9562, 0.628 ) }
    dend_46 { pt3dadd( 323.324, 589.241, 35.6888, 0.4718 ) }
    dend_46 { pt3dadd( 323.729, 590.227, 35.1084, 0.5754 ) }
    dend_46 { pt3dadd( 323.999, 591.201, 34.3678, 0.4604 ) }
    dend_46 { pt3dadd( 324.286, 592.093, 33.5177, 0.3656 ) }
    dend_46 { pt3dadd( 324.918, 592.893, 32.688, 0.302 ) }
    dend_46 { pt3dadd( 325.165, 593.866, 32.0191, 0.325 ) }
    dend_46 { pt3dadd( 325.167, 594.999, 31.6546, 0.3696 ) }
    dend_46 { pt3dadd( 325.094, 596.112, 31.5731, 0.4436 ) }
    dend_46 { pt3dadd( 324.834, 597.072, 31.7946, 0.623 ) }
    dend_46 { pt3dadd( 325.166, 598.007, 32.06, 0.751 ) }
    dend_46 { pt3dadd( 325.887, 598.87, 32.3201, 0.6074 ) }
    dend_46 { pt3dadd( 326.286, 599.901, 32.4377, 0.5896 ) }
    dend_46 { pt3dadd( 326.713, 600.948, 32.4943, 0.495 ) }
    dend_46 { pt3dadd( 326.974, 602.039, 32.3977, 0.39 ) }
    dend_46 { pt3dadd( 326.858, 603.168, 32.2109, 0.3098 ) }
    dend_46 { pt3dadd( 327.125, 604.237, 31.9236, 0.2928 ) }
    dend_46 { pt3dadd( 327.385, 605.35, 31.6803, 0.3082 ) }
    dend_46 { pt3dadd( 327.644, 606.464, 31.486, 0.3388 ) }
    dend_46 { pt3dadd( 327.896, 607.577, 31.3239, 0.3842 ) }
    dend_46 { pt3dadd( 328.331, 608.618, 31.138, 0.5236 ) }
    dend_46 { pt3dadd( 328.743, 609.678, 30.9618, 0.5138 ) }
    dend_46 { pt3dadd( 328.875, 610.789, 30.7905, 0.425 ) }
    dend_46 { pt3dadd( 328.711, 611.899, 30.6936, 0.3752 ) }
    dend_46 { pt3dadd( 328.829, 613.032, 30.648, 0.4116 ) }
    dend_46 { pt3dadd( 328.832, 614.172, 30.6149, 0.5404 ) }
    dend_46 { pt3dadd( 328.886, 615.302, 30.5304, 0.7096 ) }
    dend_46 { pt3dadd( 329.053, 616.411, 30.373, 0.6756 ) }
    dend_46 { pt3dadd( 329.268, 617.528, 30.2162, 0.4694 ) }
    dend_46 { pt3dadd( 329.456, 618.651, 30.1112, 0.3254 ) }
    dend_46 { pt3dadd( 329.585, 619.785, 30.0384, 0.2746 ) }
    dend_46 { pt3dadd( 329.705, 620.884, 29.9076, 0.2746 ) }
    dend_46 { pt3dadd( 329.947, 621.889, 29.7648, 0.2746 ) }
    dend_46 { pt3dadd( 330.479, 622.837, 29.6573, 0.2746 ) }
    dend_46 { pt3dadd( 330.866, 623.869, 29.4874, 0.2746 ) }
    dend_46 { pt3dadd( 330.941, 625.01, 29.293, 0.2746 ) }
    dend_46 { pt3dadd( 331.479, 625.928, 29.045, 0.2746 ) }
    dend_46 { pt3dadd( 331.852, 626.862, 28.6432, 0.2746 ) }
    dend_46 { pt3dadd( 332.679, 627.331, 28.1299, 0.2746 ) }
    dend_46 { pt3dadd( 333.769, 627.331, 27.6732, 0.2746 ) }
    dend_46 { pt3dadd( 334.333, 628.317, 27.3006, 0.2746 ) }
    dend_46 { pt3dadd( 334.686, 629.382, 26.9878, 0.2746 ) }
    dend_46 { pt3dadd( 335.435, 630.248, 26.717, 0.2748 ) }
    dend_46 { pt3dadd( 336.217, 631.046, 26.4631, 0.2748 ) }
    dend_46 { pt3dadd( 337.289, 631.402, 26.1587, 0.2752 ) }
    dend_46 { pt3dadd( 338.228, 631.736, 25.6704, 0.2758 ) }
    dend_46 { pt3dadd( 338.693, 632.685, 25.018, 0.2768 ) }
    dend_46 { pt3dadd( 339.303, 633.601, 24.2844, 0.2786 ) }
    dend_46 { pt3dadd( 339.9, 634.532, 23.4987, 0.282 ) }
    dend_46 { pt3dadd( 340.488, 635.469, 22.6808, 0.2882 ) }
    dend_46 { pt3dadd( 341.152, 636.355, 21.849, 0.3008 ) }
    dend_46 { pt3dadd( 341.96, 637.084, 21.0053, 0.318 ) }
    dend_46 { pt3dadd( 342.771, 637.624, 20.0668, 0.3808 ) }
    dend_46 { pt3dadd( 343.392, 638.341, 19.0543, 0.3474 ) }
    dend_46 { pt3dadd( 343.986, 639.076, 18.0272, 0.326 ) }
    dend_46 { pt3dadd( 343.98, 639.928, 16.9336, 0.3176 ) }
    dend_46 { pt3dadd( 344.529, 640.893, 16.0224, 0.3798 ) }
    dend_46 { pt3dadd( 345.369, 641.508, 15.1886, 0.3456 ) }
    dend_46 { pt3dadd( 346.055, 642.093, 14.4099, 0.322 ) }
    dend_46 { pt3dadd( 346.758, 642.804, 13.9482, 0.3136 ) }
    dend_46 { pt3dadd( 347.808, 642.816, 13.8295, 0.356 ) }
    dend_46 { pt3dadd( 348.801, 643.097, 13.685, 0.3814 ) }
    dend_46 { pt3dadd( 349.24, 644.141, 13.4985, 0.6864 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 95/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 311.408, 583.316, 14.119, 0.5316 ) }
    dend_41 { pt3dadd( 310.643, 584.148, 13.3935, 0.6864 ) }
    dend_41 { pt3dadd( 310.011, 585.074, 13.3952, 0.6238 ) }
    dend_41 { pt3dadd( 309.598, 586.096, 13.4798, 0.5324 ) }
    dend_41 { pt3dadd( 309.68, 587.174, 13.4019, 0.5842 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( 310.412, 587.779, 13.0768, 0.7508 ) }
    dend_41 { pt3dadd( 310.448, 588.827, 12.64, 0.7174 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 2/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 311.408, 583.316, 14.119, 0.5316 ) }
    dend_38 { pt3dadd( 310.661, 582.91, 13.9398, 0.548 ) }
    dend_38 { pt3dadd( 309.633, 582.445, 13.8908, 0.6246 ) }
    dend_38 { pt3dadd( 308.607, 581.982, 13.9362, 0.5406 ) }
    dend_38 { pt3dadd( 307.546, 582.337, 13.893, 0.5674 ) }
    dend_38 { pt3dadd( 306.515, 582.828, 13.8174, 0.647 ) }
    dend_38 { pt3dadd( 305.74, 583.656, 13.6836, 0.649 ) }
    dend_38 { pt3dadd( 305.143, 584.624, 13.5654, 0.6734 ) }
    dend_38 { pt3dadd( 304.191, 585.257, 13.4201, 0.617 ) }
    dend_38 { pt3dadd( 303.165, 585.755, 13.2174, 0.5482 ) }
    dend_38 { pt3dadd( 302.149, 586.16, 12.8904, 0.7054 ) }
    dend_38 { pt3dadd( 301.241, 586.761, 12.4662, 0.53 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 14/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 323.406, 563.624, 25.2865, 0.9092 ) }
    apic_4 { pt3dadd( 324.419, 563.2, 25.3814, 0.7418 ) }
    apic_4 { pt3dadd( 325.37, 562.604, 25.3677, 0.9238 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 17/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 323.406, 563.624, 25.2865, 0.9092 ) }
    apic_1 { pt3dadd( 323.042, 564.104, 27.5114, 0.4576 ) }
    apic_1 { pt3dadd( 322.089, 564.151, 28.7067, 0.619 ) }
    apic_1 { pt3dadd( 320.988, 564.404, 29.1312, 0.6924 ) }
    apic_1 { pt3dadd( 319.969, 564.37, 29.6008, 0.7474 ) }
    apic_1 { pt3dadd( 318.974, 564.11, 30.1843, 0.558 ) }
    apic_1 { pt3dadd( 317.924, 564.335, 30.7065, 0.4774 ) }
    apic_1 { pt3dadd( 316.984, 564.903, 31.2287, 0.386 ) }
    apic_1 { pt3dadd( 316.064, 565.388, 31.8105, 0.3934 ) }
    apic_1 { pt3dadd( 315.001, 565.705, 32.3352, 0.463 ) }
    apic_1 { pt3dadd( 313.956, 566.128, 32.6984, 0.551 ) }
    apic_1 { pt3dadd( 313.157, 566.883, 33.0705, 0.454 ) }
    apic_1 { pt3dadd( 312.107, 567.267, 33.4424, 0.3932 ) }
    apic_1 { pt3dadd( 311.073, 566.827, 33.7761, 0.3906 ) }
    apic_1 { pt3dadd( 310.023, 566.602, 34.2244, 0.5364 ) }
    apic_1 { pt3dadd( 308.923, 566.628, 34.7522, 0.5324 ) }
    apic_1 { pt3dadd( 307.802, 566.629, 35.3055, 0.4852 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 34/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 302.31, 562.281, 27.6354, 0.4922 ) }
    dend_36 { pt3dadd( 301.152, 562.452, 28.6597, 0.4576 ) }
    dend_36 { pt3dadd( 300.095, 562.425, 29.0181, 0.3594 ) }
    dend_36 { pt3dadd( 298.956, 562.362, 29.2844, 0.3 ) }
    dend_36 { pt3dadd( 297.812, 562.346, 29.4515, 0.2746 ) }
    dend_36 { pt3dadd( 296.684, 562.493, 29.5257, 0.2748 ) }
    dend_36 { pt3dadd( 295.563, 562.477, 29.4711, 0.2748 ) }
    dend_36 { pt3dadd( 294.444, 562.331, 29.29, 0.2752 ) }
    dend_36 { pt3dadd( 293.33, 562.123, 29.064, 0.2756 ) }
    dend_36 { pt3dadd( 292.218, 561.879, 28.84, 0.2766 ) }
    dend_36 { pt3dadd( 291.09, 561.893, 28.6577, 0.2782 ) }
    dend_36 { pt3dadd( 289.974, 562.135, 28.5295, 0.2814 ) }
    dend_36 { pt3dadd( 288.897, 562.512, 28.4421, 0.287 ) }
    dend_36 { pt3dadd( 287.788, 562.446, 28.3968, 0.2988 ) }
    dend_36 { pt3dadd( 286.652, 562.348, 28.3942, 0.3142 ) }
    dend_36 { pt3dadd( 285.509, 562.363, 28.4094, 0.3734 ) }
    dend_36 { pt3dadd( 284.438, 562.032, 28.3755, 0.334 ) }
    dend_36 { pt3dadd( 283.34, 561.936, 28.4368, 0.3 ) }
    dend_36 { pt3dadd( 282.244, 561.723, 28.553, 0.2746 ) }
    dend_36 { pt3dadd( 281.171, 561.469, 28.511, 0.2748 ) }
    dend_36 { pt3dadd( 280.179, 561.41, 28.2957, 0.2748 ) }
    dend_36 { pt3dadd( 279.217, 561.919, 28.2145, 0.2752 ) }
    dend_36 { pt3dadd( 278.122, 562.151, 28.1257, 0.2756 ) }
    dend_36 { pt3dadd( 276.98, 562.132, 28.056, 0.2766 ) }
    dend_36 { pt3dadd( 275.836, 562.115, 28.0263, 0.2782 ) }
    dend_36 { pt3dadd( 274.692, 562.1, 28.0574, 0.2814 ) }
    dend_36 { pt3dadd( 273.549, 562.065, 28.1207, 0.287 ) }
    dend_36 { pt3dadd( 272.407, 562.023, 28.1882, 0.2988 ) }
    dend_36 { pt3dadd( 271.331, 561.727, 28.3035, 0.3142 ) }
    dend_36 { pt3dadd( 270.23, 561.457, 28.4225, 0.3734 ) }
    dend_36 { pt3dadd( 269.32, 561.192, 28.5986, 0.3338 ) }
    dend_36 { pt3dadd( 268.307, 560.71, 28.6762, 0.3 ) }
    dend_36 { pt3dadd( 267.917, 559.703, 28.6135, 0.2746 ) }
    dend_36 { pt3dadd( 267.267, 558.796, 28.5813, 0.2746 ) }
    dend_36 { pt3dadd( 266.29, 558.295, 28.4628, 0.2746 ) }
    dend_36 { pt3dadd( 265.217, 557.912, 28.4295, 0.2746 ) }
    dend_36 { pt3dadd( 264.206, 557.427, 28.4483, 0.2746 ) }
    dend_36 { pt3dadd( 263.441, 556.579, 28.4984, 0.2746 ) }
    dend_36 { pt3dadd( 262.721, 555.913, 28.6821, 0.2746 ) }
    dend_36 { pt3dadd( 261.866, 555.734, 29.0609, 0.2746 ) }
    dend_36 { pt3dadd( 260.749, 555.498, 29.3516, 0.2746 ) }
    dend_36 { pt3dadd( 259.714, 555.015, 29.5646, 0.2746 ) }
    dend_36 { pt3dadd( 258.813, 554.315, 29.7133, 0.2746 ) }
    dend_36 { pt3dadd( 257.848, 553.701, 29.806, 0.2746 ) }
    dend_36 { pt3dadd( 256.86, 553.124, 29.8449, 0.2746 ) }
    dend_36 { pt3dadd( 255.75, 552.863, 29.8536, 0.2744 ) }
    dend_36 { pt3dadd( 254.636, 552.604, 29.8721, 0.2744 ) }
    dend_36 { pt3dadd( 253.586, 552.154, 29.897, 0.2742 ) }
    dend_36 { pt3dadd( 252.561, 551.645, 29.9281, 0.274 ) }
    dend_36 { pt3dadd( 251.747, 550.846, 29.965, 0.2736 ) }
    dend_36 { pt3dadd( 250.82, 550.205, 30.0678, 0.2728 ) }
    dend_36 { pt3dadd( 249.685, 550.094, 30.1717, 0.2712 ) }
    dend_36 { pt3dadd( 248.541, 550.094, 30.2518, 0.2684 ) }
    dend_36 { pt3dadd( 247.397, 550.094, 30.3103, 0.2626 ) }
    dend_36 { pt3dadd( 246.253, 550.094, 30.3481, 0.2542 ) }
    dend_36 { pt3dadd( 245.109, 550.094, 30.368, 0.2288 ) }
    dend_36 { pt3dadd( 243.965, 550.094, 30.3716, 0.2288 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 91/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 302.31, 562.281, 27.6354, 0.4922 ) }
    dend_35 { pt3dadd( 301.59, 562.383, 28.3562, 0.385 ) }
    dend_35 { pt3dadd( 300.613, 562.505, 29.1785, 0.3006 ) }
    dend_35 { pt3dadd( 299.488, 562.493, 29.8925, 0.2756 ) }
    dend_35 { pt3dadd( 298.366, 562.3, 30.4732, 0.2766 ) }
    dend_35 { pt3dadd( 297.234, 562.322, 30.9599, 0.2782 ) }
    dend_35 { pt3dadd( 296.277, 562.544, 31.4913, 0.2814 ) }
    dend_35 { pt3dadd( 295.414, 562.856, 32.076, 0.287 ) }
    dend_35 { pt3dadd( 294.315, 562.8, 32.5506, 0.2988 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 293.255, 562.394, 32.9, 0.3142 ) }
    dend_35 { pt3dadd( 292.17, 562.071, 33.1288, 0.3736 ) }
    dend_35 { pt3dadd( 291.055, 561.816, 33.266, 0.3342 ) }
    dend_35 { pt3dadd( 289.966, 561.473, 33.3007, 0.3006 ) }
    dend_35 { pt3dadd( 288.882, 561.114, 33.2833, 0.2758 ) }
    dend_35 { pt3dadd( 287.794, 560.76, 33.2671, 0.2768 ) }
    dend_35 { pt3dadd( 286.69, 560.465, 33.2618, 0.2786 ) }
    dend_35 { pt3dadd( 285.562, 560.292, 33.2696, 0.282 ) }
    dend_35 { pt3dadd( 284.42, 560.229, 33.2923, 0.2882 ) }
    dend_35 { pt3dadd( 283.276, 560.226, 33.3334, 0.301 ) }
    dend_35 { pt3dadd( 282.132, 560.245, 33.3917, 0.3182 ) }
    dend_35 { pt3dadd( 280.995, 560.352, 33.4653, 0.381 ) }
    dend_35 { pt3dadd( 279.869, 560.515, 33.5846, 0.3478 ) }
    dend_35 { pt3dadd( 278.765, 560.729, 33.7809, 0.327 ) }
    dend_35 { pt3dadd( 277.656, 560.949, 34.0102, 0.3192 ) }
    dend_35 { pt3dadd( 276.522, 561.091, 34.2213, 0.383 ) }
    dend_35 { pt3dadd( 275.423, 561.345, 34.3728, 0.3516 ) }
    dend_35 { pt3dadd( 274.43, 561.87, 34.533, 0.3326 ) }
    dend_35 { pt3dadd( 273.366, 562.186, 34.7561, 0.3372 ) }
    dend_35 { pt3dadd( 272.328, 562.625, 35.009, 0.3796 ) }
    dend_35 { pt3dadd( 271.221, 562.859, 35.2794, 0.5226 ) }
    dend_35 { pt3dadd( 270.08, 562.907, 35.5536, 0.476 ) }
    dend_35 { pt3dadd( 268.953, 562.773, 35.8884, 0.53 ) }
    dend_35 { pt3dadd( 267.845, 562.54, 36.2961, 0.4056 ) }
    dend_35 { pt3dadd( 266.775, 562.816, 36.7968, 0.3496 ) }
    dend_35 { pt3dadd( 265.741, 563.213, 37.4097, 0.3142 ) }
    dend_35 { pt3dadd( 264.672, 563.595, 38.0654, 0.3734 ) }
    dend_35 { pt3dadd( 263.722, 563.478, 38.9113, 0.3338 ) }
    dend_35 { pt3dadd( 262.8, 563.274, 39.8961, 0.3 ) }
    dend_35 { pt3dadd( 261.878, 563.069, 40.9511, 0.2746 ) }
    dend_35 { pt3dadd( 260.946, 562.856, 42.0109, 0.2746 ) }
    dend_35 { pt3dadd( 259.941, 562.533, 42.9122, 0.2746 ) }
    dend_35 { pt3dadd( 258.875, 562.118, 43.5571, 0.2746 ) }
    dend_35 { pt3dadd( 257.808, 561.702, 43.9802, 0.2746 ) }
    dend_35 { pt3dadd( 256.743, 561.286, 44.2445, 0.2746 ) }
    dend_35 { pt3dadd( 255.677, 560.87, 44.4122, 0.2746 ) }
    dend_35 { pt3dadd( 254.601, 560.488, 44.5516, 0.2746 ) }
    dend_35 { pt3dadd( 253.508, 560.161, 44.7292, 0.2746 ) }
    dend_35 { pt3dadd( 252.411, 559.855, 44.9697, 0.2746 ) }
    dend_35 { pt3dadd( 251.314, 559.55, 45.2659, 0.2746 ) }
    dend_35 { pt3dadd( 250.217, 559.244, 45.6106, 0.2746 ) }
    dend_35 { pt3dadd( 249.12, 558.939, 45.997, 0.2746 ) }
    dend_35 { pt3dadd( 248.183, 558.511, 46.5122, 0.2746 ) }
    dend_35 { pt3dadd( 247.304, 557.939, 47.1439, 0.2746 ) }
    dend_35 { pt3dadd( 246.209, 557.834, 47.7341, 0.2744 ) }
    dend_35 { pt3dadd( 245.238, 558.412, 48.3095, 0.2744 ) }
    dend_35 { pt3dadd( 244.297, 559.002, 48.9266, 0.2742 ) }
    dend_35 { pt3dadd( 243.669, 559.949, 49.5062, 0.274 ) }
    dend_35 { pt3dadd( 243.19, 560.776, 50.2412, 0.2736 ) }
    dend_35 { pt3dadd( 242.713, 561.6, 51.091, 0.2728 ) }
    dend_35 { pt3dadd( 241.965, 562.416, 51.8997, 0.2712 ) }
    dend_35 { pt3dadd( 241.161, 563.211, 52.6072, 0.2684 ) }
    dend_35 { pt3dadd( 240.357, 564.005, 53.207, 0.2626 ) }
    dend_35 { pt3dadd( 239.553, 564.799, 53.7062, 0.2542 ) }
    dend_35 { pt3dadd( 238.749, 565.593, 54.101, 0.2288 ) }
    dend_35 { pt3dadd( 237.945, 566.386, 54.7879, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 56/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 330.06, 581.979, 25.5959, 0.4634 ) }
    dend_33 { pt3dadd( 330.881, 581.141, 25.8784, 0.546 ) }
    dend_33 { pt3dadd( 332.022, 581.072, 25.8297, 0.4724 ) }
    dend_33 { pt3dadd( 333.135, 581.183, 25.6992, 0.5232 ) }
    dend_33 { pt3dadd( 334.015, 581.408, 25.3134, 0.3934 ) }
    dend_33 { pt3dadd( 334.949, 581.332, 24.845, 0.3258 ) }
    dend_33 { pt3dadd( 335.978, 581.301, 24.661, 0.2752 ) }
    dend_33 { pt3dadd( 336.901, 580.897, 24.8072, 0.276 ) }
    dend_33 { pt3dadd( 337.954, 580.667, 25.1208, 0.277 ) }
    dend_33 { pt3dadd( 339.084, 580.605, 25.4733, 0.2792 ) }
    dend_33 { pt3dadd( 340.202, 580.439, 25.8014, 0.2832 ) }
    dend_33 { pt3dadd( 341.294, 580.098, 26.0604, 0.2904 ) }
    dend_33 { pt3dadd( 342.395, 579.791, 26.2366, 0.305 ) }
    dend_33 { pt3dadd( 343.507, 579.53, 26.364, 0.3258 ) }
    dend_33 { pt3dadd( 344.632, 579.414, 26.4849, 0.395 ) }
    dend_33 { pt3dadd( 345.751, 579.569, 26.6244, 0.3736 ) }
    dend_33 { pt3dadd( 346.86, 579.821, 26.7646, 0.3756 ) }
    dend_33 { pt3dadd( 347.983, 580.032, 26.8643, 0.4062 ) }
    dend_33 { pt3dadd( 349.109, 580.23, 26.9074, 0.5592 ) }
    dend_33 { pt3dadd( 350.17, 580.617, 26.8962, 0.6054 ) }
    dend_33 { pt3dadd( 351.154, 581.182, 26.8033, 0.4712 ) }
    dend_33 { pt3dadd( 352.206, 581.484, 26.6134, 0.3752 ) }
    dend_33 { pt3dadd( 353.337, 581.521, 26.4034, 0.369 ) }
    dend_33 { pt3dadd( 354.476, 581.59, 26.2158, 0.4398 ) }
    dend_33 { pt3dadd( 355.6, 581.761, 26.0383, 0.6284 ) }
    dend_33 { pt3dadd( 356.707, 582.029, 25.8961, 0.7002 ) }
    dend_33 { pt3dadd( 357.763, 582.437, 25.851, 0.8102 ) }
    dend_33 { pt3dadd( 358.802, 582.901, 25.8815, 0.8964 ) }
    dend_33 { pt3dadd( 359.85, 583.358, 25.9263, 0.9422 ) }
    dend_33 { pt3dadd( 360.91, 583.786, 25.9636, 0.6642 ) }
    dend_33 { pt3dadd( 361.988, 584.17, 25.9851, 0.5378 ) }
    dend_33 { pt3dadd( 363.072, 584.534, 25.9826, 0.4752 ) }
    dend_33 { pt3dadd( 364.161, 584.883, 25.9549, 0.4402 ) }
    dend_33 { pt3dadd( 365.248, 585.242, 25.9115, 0.4402 ) }
    dend_33 { pt3dadd( 366.189, 585.853, 25.8482, 0.5814 ) }
    dend_33 { pt3dadd( 367.023, 586.471, 25.6458, 0.6166 ) }
    dend_33 { pt3dadd( 367.572, 587.318, 25.4974, 0.6374 ) }
    dend_33 { pt3dadd( 368.153, 588.249, 25.4797, 0.6622 ) }
    dend_33 { pt3dadd( 368.929, 589.087, 25.4554, 0.7756 ) }
    dend_33 { pt3dadd( 369.562, 590.039, 25.4117, 0.8868 ) }
    dend_33 { pt3dadd( 370.004, 591.042, 25.2356, 0.8878 ) }
    dend_33 { pt3dadd( 370.289, 591.888, 24.8273, 0.7426 ) }
    dend_33 { pt3dadd( 371.008, 592.74, 24.5358, 0.499 ) }
    dend_33 { pt3dadd( 371.516, 593.67, 24.4191, 0.3822 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_33 { pt3dadd( 372.057, 594.665, 24.2934, 0.3694 ) }
    dend_33 { pt3dadd( 372.592, 595.65, 24.1312, 0.5016 ) }
    dend_33 { pt3dadd( 373.268, 596.554, 24.0027, 0.447 ) }
    dend_33 { pt3dadd( 373.93, 597.454, 23.9207, 0.4278 ) }
    dend_33 { pt3dadd( 374.315, 598.52, 23.8014, 0.4508 ) }
    dend_33 { pt3dadd( 374.787, 599.516, 23.7292, 0.6676 ) }
    dend_33 { pt3dadd( 375.39, 600.448, 23.777, 0.6822 ) }
    dend_33 { pt3dadd( 375.741, 601.516, 23.8756, 0.5308 ) }
    dend_33 { pt3dadd( 375.838, 602.64, 24.0148, 0.4286 ) }
    dend_33 { pt3dadd( 375.928, 603.77, 24.1086, 0.5168 ) }
    dend_33 { pt3dadd( 376.127, 604.888, 24.1203, 0.4774 ) }
    dend_33 { pt3dadd( 376.265, 606.015, 24.0736, 0.4732 ) }
    dend_33 { pt3dadd( 376.409, 607.124, 23.963, 0.5886 ) }
    dend_33 { pt3dadd( 376.768, 608.155, 23.8966, 0.6624 ) }
    dend_33 { pt3dadd( 377.255, 609.133, 23.9904, 0.5656 ) }
    dend_33 { pt3dadd( 377.655, 610.164, 24.0705, 0.6034 ) }
    dend_33 { pt3dadd( 378.026, 611.236, 24.1228, 0.5338 ) }
    dend_33 { pt3dadd( 378.395, 612.303, 24.2278, 0.6266 ) }
    dend_33 { pt3dadd( 378.762, 613.361, 24.3964, 0.637 ) }
    dend_33 { pt3dadd( 378.937, 614.473, 24.5591, 0.5252 ) }
    dend_33 { pt3dadd( 379.019, 615.612, 24.6893, 0.4964 ) }
    dend_33 { pt3dadd( 379.16, 616.654, 24.656, 0.4924 ) }
    dend_33 { pt3dadd( 380.004, 617.05, 24.4488, 0.4728 ) }
    dend_33 { pt3dadd( 380.762, 617.65, 24.4572, 0.4968 ) }
    dend_33 { pt3dadd( 381.117, 618.652, 24.5703, 0.705 ) }
    dend_33 { pt3dadd( 381.632, 619.67, 24.6221, 0.7544 ) }
    dend_33 { pt3dadd( 382.203, 620.656, 24.6282, 0.6492 ) }
    dend_33 { pt3dadd( 382.738, 621.662, 24.6285, 0.7244 ) }
    dend_33 { pt3dadd( 383.186, 622.698, 24.5437, 0.6946 ) }
    dend_33 { pt3dadd( 383.48, 623.735, 24.3102, 0.5462 ) }
    dend_33 { pt3dadd( 383.519, 624.784, 23.9646, 0.4938 ) }
    dend_33 { pt3dadd( 383.421, 625.763, 23.7286, 0.4596 ) }
    dend_33 { pt3dadd( 383.62, 626.641, 23.7938, 0.5486 ) }
    dend_33 { pt3dadd( 384.23, 627.572, 23.9896, 0.6604 ) }
    dend_33 { pt3dadd( 384.795, 628.385, 24.0587, 0.6684 ) }
    dend_33 { pt3dadd( 385.078, 629.393, 24.2486, 0.7358 ) }
    dend_33 { pt3dadd( 385.454, 630.311, 24.6498, 0.6054 ) }
    dend_33 { pt3dadd( 385.662, 631.404, 25.0561, 0.458 ) }
    dend_33 { pt3dadd( 386.283, 632.362, 25.3537, 0.4142 ) }
    dend_33 { pt3dadd( 386.651, 633.247, 25.3574, 0.3624 ) }
    dend_33 { pt3dadd( 386.797, 634.12, 25.6099, 0.3528 ) }
    dend_33 { pt3dadd( 387.353, 634.965, 25.921, 0.373 ) }
    dend_33 { pt3dadd( 388.061, 635.764, 26.024, 0.4554 ) }
    dend_33 { pt3dadd( 389.031, 636.032, 25.8527, 0.6176 ) }
    dend_33 { pt3dadd( 389.801, 636.695, 25.5354, 0.873 ) }
    dend_33 { pt3dadd( 390.512, 637.554, 25.2515, 0.8802 ) }
    dend_33 { pt3dadd( 391.038, 638.389, 24.9665, 0.6406 ) }
    dend_33 { pt3dadd( 391.457, 639.261, 24.8066, 0.5086 ) }
    dend_33 { pt3dadd( 392.324, 639.744, 24.5123, 0.5788 ) }
    dend_33 { pt3dadd( 393.182, 640.337, 24.208, 0.7816 ) }
    dend_33 { pt3dadd( 394.031, 641.067, 23.8969, 0.8054 ) }
    dend_33 { pt3dadd( 395.043, 641.577, 23.6272, 0.7282 ) }
    dend_33 { pt3dadd( 396.029, 642.106, 23.354, 0.7174 ) }
    dend_33 { pt3dadd( 397.11, 642.458, 23.1479, 0.74 ) }
    dend_33 { pt3dadd( 398.181, 642.835, 23.0093, 0.5762 ) }
    dend_33 { pt3dadd( 399.217, 643.31, 22.9303, 0.356 ) }
    dend_33 { pt3dadd( 399.995, 643.75, 23.6222, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 57/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 330.06, 581.979, 25.5959, 0.4634 ) }
    dend_28 { pt3dadd( 330.618, 582.762, 28.0647, 0.6864 ) }
    dend_28 { pt3dadd( 330.915, 583.841, 28.7577, 0.7236 ) }
    dend_28 { pt3dadd( 331.383, 584.862, 29.0595, 0.7616 ) }
    dend_28 { pt3dadd( 332.151, 585.688, 29.4216, 0.7946 ) }
    dend_28 { pt3dadd( 332.725, 586.66, 29.8267, 0.8108 ) }
    dend_28 { pt3dadd( 333.174, 587.701, 30.2602, 0.8284 ) }
    dend_28 { pt3dadd( 333.741, 588.682, 30.7093, 0.6942 ) }
    dend_28 { pt3dadd( 334.253, 589.685, 31.1839, 0.5692 ) }
    dend_28 { pt3dadd( 334.53, 590.755, 31.7114, 0.65 ) }
    dend_28 { pt3dadd( 334.963, 591.781, 32.2616, 0.6562 ) }
    dend_28 { pt3dadd( 335.605, 592.705, 32.7972, 0.9074 ) }
    dend_28 { pt3dadd( 336.215, 593.594, 33.3724, 0.895 ) }
    dend_28 { pt3dadd( 336.794, 594.449, 33.9926, 0.906 ) }
    dend_28 { pt3dadd( 337.618, 595.239, 34.466, 0.7616 ) }
    dend_28 { pt3dadd( 338.452, 596.022, 34.8068, 0.6068 ) }
    // Section: dend_18, id: dend_18, parent: dend_12 (entry count 73/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 300.58, 578.684, 25.3982, 0.7932 ) }
    dend_18 { pt3dadd( 299.913, 578.328, 25.4688, 0.773 ) }
    dend_18 { pt3dadd( 298.919, 577.795, 25.4545, 0.702 ) }
    dend_18 { pt3dadd( 297.925, 577.238, 25.3918, 0.5034 ) }
    dend_18 { pt3dadd( 296.794, 577.185, 25.3425, 0.4606 ) }
    dend_18 { pt3dadd( 295.726, 577.349, 25.4324, 0.4036 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 79/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 300.58, 578.684, 25.3982, 0.7932 ) }
    dend_13 { pt3dadd( 299.864, 578.872, 26.1912, 0.2288 ) }
    dend_13 { pt3dadd( 298.848, 579.388, 26.2962, 0.4942 ) }
    dend_13 { pt3dadd( 298.176, 580.302, 26.3234, 0.7508 ) }
    dend_13 { pt3dadd( 298.022, 581.409, 26.448, 0.822 ) }
    dend_13 { pt3dadd( 298.006, 582.552, 26.5692, 0.8588 ) }
    dend_13 { pt3dadd( 297.97, 583.695, 26.6874, 0.7028 ) }
    dend_13 { pt3dadd( 297.74, 584.784, 26.8876, 0.5874 ) }
    dend_13 { pt3dadd( 297.289, 585.828, 27.0894, 0.6724 ) }
    dend_13 { pt3dadd( 296.873, 586.878, 27.2983, 0.7536 ) }
    dend_13 { pt3dadd( 296.653, 587.994, 27.3921, 0.8164 ) }
    dend_13 { pt3dadd( 296.636, 589.115, 27.3619, 0.6716 ) }
    dend_13 { pt3dadd( 296.6, 590.258, 27.3272, 0.528 ) }
    dend_13 { pt3dadd( 296.374, 591.377, 27.3073, 0.5704 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 93/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 306.861, 578.529, 32.149, 0.924 ) }
    dend_7 { pt3dadd( 305.877, 577.781, 33.4835, 0.2288 ) }
    dend_7 { pt3dadd( 304.874, 577.681, 33.8719, 0.287 ) }
    dend_7 { pt3dadd( 303.815, 577.833, 34.3165, 0.2988 ) }
    dend_7 { pt3dadd( 302.871, 578.471, 34.6287, 0.3142 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 98/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 306.861, 578.529, 32.149, 0.924 ) }
    dend_2 { pt3dadd( 306.068, 578.767, 32.3224, 0.8538 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 305.144, 579.401, 32.4769, 0.722 ) }
    dend_2 { pt3dadd( 304.08, 579.813, 32.5973, 0.7124 ) }
    dend_2 { pt3dadd( 303.043, 580.297, 32.6942, 0.7002 ) }
    dend_2 { pt3dadd( 302.068, 580.85, 32.8, 0.6506 ) }
    dend_2 { pt3dadd( 301.008, 581.281, 32.8608, 0.4604 ) }
    dend_2 { pt3dadd( 299.948, 581.71, 32.9059, 0.3558 ) }
    dend_2 { pt3dadd( 298.838, 581.987, 32.933, 0.3306 ) }
    dend_2 { pt3dadd( 297.707, 582.153, 32.9468, 0.3812 ) }
    dend_2 { pt3dadd( 296.575, 582.322, 32.9465, 0.4584 ) }
    dend_2 { pt3dadd( 295.496, 582.703, 32.9333, 0.6818 ) }
    dend_2 { pt3dadd( 294.429, 583.115, 32.9182, 0.7082 ) }
    dend_2 { pt3dadd( 293.364, 583.531, 32.9042, 0.5798 ) }
    dend_2 { pt3dadd( 292.33, 584.013, 32.8868, 0.5162 ) }
    dend_2 { pt3dadd( 291.241, 584.29, 32.793, 0.6954 ) }
    dend_2 { pt3dadd( 290.171, 584.606, 32.6892, 0.7286 ) }
    dend_2 { pt3dadd( 289.128, 584.602, 32.7729, 0.6408 ) }
    dend_2 { pt3dadd( 288.061, 584.689, 32.8616, 0.516 ) }
    dend_2 { pt3dadd( 287.044, 584.309, 32.8068, 0.5588 ) }
    dend_2 { pt3dadd( 286.025, 583.872, 32.6956, 0.6794 ) }
    dend_2 { pt3dadd( 285.026, 583.323, 32.6332, 0.7032 ) }
    dend_2 { pt3dadd( 284.022, 582.853, 32.6948, 0.8026 ) }
    dend_2 { pt3dadd( 282.93, 582.732, 32.8908, 0.718 ) }
    dend_2 { pt3dadd( 281.791, 582.691, 33.1024, 0.7212 ) }
    dend_2 { pt3dadd( 280.925, 581.945, 33.3203, 0.6384 ) }
    dend_2 { pt3dadd( 280.086, 581.174, 33.516, 0.6856 ) }
    dend_2 { pt3dadd( 279.104, 580.799, 33.7952, 0.4858 ) }
    dend_2 { pt3dadd( 278.618, 580.566, 34.2992, 0.3654 ) }
    dend_2 { pt3dadd( 277.707, 580.166, 34.4702, 0.3012 ) }
    dend_2 { pt3dadd( 277.156, 579.322, 34.384, 0.325 ) }
    dend_2 { pt3dadd( 276.347, 578.708, 34.1611, 0.3634 ) }
    dend_2 { pt3dadd( 275.41, 578.275, 34.1264, 0.4608 ) }
    dend_2 { pt3dadd( 274.591, 577.897, 34.1905, 0.516 ) }
    dend_2 { pt3dadd( 273.856, 577.151, 34.1236, 0.5408 ) }
    dend_2 { pt3dadd( 273.072, 576.461, 34.1984, 0.5044 ) }
    dend_2 { pt3dadd( 272.431, 575.682, 34.54, 0.609 ) }
    dend_2 { pt3dadd( 272.06, 574.724, 35.0454, 0.653 ) }
    dend_2 { pt3dadd( 271.305, 573.976, 35.5303, 0.5484 ) }
    dend_2 { pt3dadd( 270.35, 573.406, 36.0153, 0.571 ) }
    dend_2 { pt3dadd( 269.319, 572.929, 36.3933, 0.4774 ) }
    dend_2 { pt3dadd( 268.716, 571.966, 36.6358, 0.5028 ) }
    dend_2 { pt3dadd( 268.189, 570.977, 36.8684, 0.5006 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 41/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 310.448, 588.827, 12.64, 0.7174 ) }
    dend_43 { pt3dadd( 310.214, 589.501, 10.8321, 0.9152 ) }
    dend_43 { pt3dadd( 310.563, 590.364, 10.0624, 0.6754 ) }
    dend_43 { pt3dadd( 311.564, 590.622, 9.6984, 0.6638 ) }
    dend_43 { pt3dadd( 312.227, 591.204, 9.2252, 0.6554 ) }
    dend_43 { pt3dadd( 312.91, 592.092, 8.8102, 0.5762 ) }
    dend_43 { pt3dadd( 313.918, 592.585, 8.437, 0.5084 ) }
    dend_43 { pt3dadd( 314.6, 593.393, 7.56, 0.9152 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 49/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 310.448, 588.827, 12.64, 0.7174 ) }
    dend_42 { pt3dadd( 310.252, 589.723, 12.2861, 0.7158 ) }
    dend_42 { pt3dadd( 310.439, 590.759, 12.1212, 0.6488 ) }
    dend_42 { pt3dadd( 310.089, 591.67, 12.1654, 0.6066 ) }
    dend_42 { pt3dadd( 309.306, 592.387, 12.1033, 0.8162 ) }
    dend_42 { pt3dadd( 308.699, 593.255, 11.9154, 0.7234 ) }
    dend_42 { pt3dadd( 308.024, 594.171, 11.7396, 0.829 ) }
    dend_42 { pt3dadd( 307.476, 595.159, 11.5254, 0.8208 ) }
    dend_42 { pt3dadd( 307.069, 596.222, 11.3151, 0.6508 ) }
    dend_42 { pt3dadd( 306.492, 597.208, 11.1938, 0.63 ) }
    dend_42 { pt3dadd( 305.813, 598.063, 11.279, 0.5358 ) }
    dend_42 { pt3dadd( 305.24, 599.049, 11.4055, 0.6304 ) }
    dend_42 { pt3dadd( 304.669, 600.041, 11.5097, 0.6424 ) }
    dend_42 { pt3dadd( 303.833, 600.82, 11.5864, 0.5426 ) }
    dend_42 { pt3dadd( 302.741, 601.117, 11.671, 0.4934 ) }
    dend_42 { pt3dadd( 301.692, 601.553, 11.6486, 0.6568 ) }
    dend_42 { pt3dadd( 300.783, 602.23, 11.5489, 0.6402 ) }
    dend_42 { pt3dadd( 299.791, 602.723, 11.3674, 0.5592 ) }
    dend_42 { pt3dadd( 298.995, 603.542, 11.2216, 0.6526 ) }
    dend_42 { pt3dadd( 298.057, 604.197, 11.1227, 0.5592 ) }
    dend_42 { pt3dadd( 297.057, 604.744, 11.0452, 0.5338 ) }
    dend_42 { pt3dadd( 296.131, 605.213, 11.5346, 0.6864 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 301.241, 586.761, 12.4662, 0.53 ) }
    dend_40 { pt3dadd( 300.512, 587.73, 11.6046, 0.411 ) }
    dend_40 { pt3dadd( 299.848, 588.468, 11.1482, 0.3336 ) }
    dend_40 { pt3dadd( 299.253, 589.332, 10.9348, 0.4104 ) }
    dend_40 { pt3dadd( 298.738, 590.295, 10.8791, 0.3982 ) }
    dend_40 { pt3dadd( 298.033, 591.11, 10.7604, 0.4396 ) }
    dend_40 { pt3dadd( 297.512, 591.92, 10.4378, 0.435 ) }
    dend_40 { pt3dadd( 296.898, 592.726, 10.0444, 0.3634 ) }
    dend_40 { pt3dadd( 296.029, 592.931, 9.9078, 0.3076 ) }
    dend_40 { pt3dadd( 295.404, 593.888, 9.7434, 0.2886 ) }
    dend_40 { pt3dadd( 294.907, 594.911, 9.5539, 0.3004 ) }
    dend_40 { pt3dadd( 294.318, 595.815, 9.308, 0.3222 ) }
    dend_40 { pt3dadd( 293.39, 596.098, 8.9242, 0.3648 ) }
    dend_40 { pt3dadd( 292.83, 595.433, 8.4339, 0.4334 ) }
    dend_40 { pt3dadd( 292.218, 594.513, 7.9702, 0.6102 ) }
    dend_40 { pt3dadd( 291.402, 593.712, 7.6028, 0.6976 ) }
    dend_40 { pt3dadd( 290.705, 592.812, 7.327, 0.6526 ) }
    dend_40 { pt3dadd( 289.724, 592.33, 7.1305, 0.661 ) }
    dend_40 { pt3dadd( 289.089, 591.562, 6.44, 1.144 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 90/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 301.241, 586.761, 12.4662, 0.53 ) }
    dend_39 { pt3dadd( 300.367, 587.099, 13.2224, 0.9152 ) }
    dend_39 { pt3dadd( 299.307, 586.901, 13.0186, 0.6442 ) }
    dend_39 { pt3dadd( 298.444, 586.3, 12.8461, 0.5822 ) }
    dend_39 { pt3dadd( 297.387, 586.357, 12.5558, 0.62 ) }
    dend_39 { pt3dadd( 296.302, 586.685, 12.3175, 0.6334 ) }
    dend_39 { pt3dadd( 295.289, 586.945, 12.2494, 0.4768 ) }
    dend_39 { pt3dadd( 294.164, 586.966, 12.1111, 0.381 ) }
    dend_39 { pt3dadd( 293.241, 586.374, 11.8446, 0.4028 ) }
    dend_39 { pt3dadd( 292.846, 585.601, 11.34, 0.3894 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_39 { pt3dadd( 291.9, 585.053, 10.8024, 0.3974 ) }
    dend_39 { pt3dadd( 291.218, 584.136, 10.3468, 0.4824 ) }
    dend_39 { pt3dadd( 290.583, 583.202, 10.0419, 0.5282 ) }
    dend_39 { pt3dadd( 289.717, 582.55, 9.7527, 0.6976 ) }
    dend_39 { pt3dadd( 289.211, 581.548, 9.5264, 0.8304 ) }
    dend_39 { pt3dadd( 289.034, 580.435, 9.322, 0.8136 ) }
    dend_39 { pt3dadd( 289.089, 579.292, 8.9989, 0.6864 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 7/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 325.37, 562.604, 25.3677, 0.9238 ) }
    apic_6 { pt3dadd( 326.027, 561.792, 25.3338, 0.93 ) }
    apic_6 { pt3dadd( 326.777, 560.934, 25.284, 0.9478 ) }
    apic_6 { pt3dadd( 327.579, 560.159, 25.1782, 0.95 ) }
    apic_6 { pt3dadd( 328.401, 559.382, 25.1922, 1.1034 ) }
    apic_6 { pt3dadd( 329.106, 558.594, 25.3946, 1.1218 ) }
    apic_6 { pt3dadd( 329.538, 557.557, 25.662, 1.0748 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 14/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 325.37, 562.604, 25.3677, 0.9238 ) }
    apic_5 { pt3dadd( 325.108, 560.818, 25.4114, 0.2288 ) }
    apic_5 { pt3dadd( 324.727, 559.811, 25.4005, 0.3778 ) }
    apic_5 { pt3dadd( 324.022, 558.973, 25.478, 0.342 ) }
    apic_5 { pt3dadd( 323.163, 558.266, 25.65, 0.315 ) }
    apic_5 { pt3dadd( 322.105, 557.881, 25.8334, 0.3034 ) }
    apic_5 { pt3dadd( 321.623, 557.002, 26.0862, 0.3226 ) }
    apic_5 { pt3dadd( 320.773, 556.33, 26.3575, 0.389 ) }
    apic_5 { pt3dadd( 319.739, 555.849, 26.602, 0.364 ) }
    apic_5 { pt3dadd( 318.75, 555.277, 26.7812, 0.3506 ) }
    apic_5 { pt3dadd( 317.89, 554.639, 26.9567, 0.394 ) }
    apic_5 { pt3dadd( 316.793, 554.815, 27.1589, 0.3716 ) }
    apic_5 { pt3dadd( 315.739, 554.524, 27.337, 0.372 ) }
    apic_5 { pt3dadd( 314.718, 554.179, 27.508, 0.3974 ) }
    apic_5 { pt3dadd( 313.67, 554.171, 27.5769, 0.555 ) }
    apic_5 { pt3dadd( 312.574, 554.15, 27.6464, 0.5382 ) }
    apic_5 { pt3dadd( 311.547, 553.722, 27.6738, 0.6344 ) }
    apic_5 { pt3dadd( 310.5, 553.314, 27.7253, 0.6524 ) }
    apic_5 { pt3dadd( 309.517, 553.012, 27.8844, 0.5486 ) }
    apic_5 { pt3dadd( 308.65, 552.469, 28.0871, 0.565 ) }
    apic_5 { pt3dadd( 307.593, 552.108, 28.2761, 0.4964 ) }
    apic_5 { pt3dadd( 306.716, 551.93, 28.2159, 0.3928 ) }
    apic_5 { pt3dadd( 305.621, 551.635, 28.2358, 0.3148 ) }
    apic_5 { pt3dadd( 304.499, 551.604, 28.3156, 0.3018 ) }
    apic_5 { pt3dadd( 303.553, 551.464, 28.6241, 0.327 ) }
    apic_5 { pt3dadd( 302.744, 551.006, 29.05, 0.3614 ) }
    apic_5 { pt3dadd( 301.889, 550.381, 29.2611, 0.4866 ) }
    apic_5 { pt3dadd( 300.828, 550.044, 29.4801, 0.4208 ) }
    apic_5 { pt3dadd( 299.773, 549.844, 29.6657, 0.3712 ) }
    apic_5 { pt3dadd( 298.722, 549.959, 29.633, 0.385 ) }
    apic_5 { pt3dadd( 297.604, 549.735, 29.5716, 0.3552 ) }
    apic_5 { pt3dadd( 296.503, 549.451, 29.5128, 0.3402 ) }
    apic_5 { pt3dadd( 295.439, 549.115, 29.4417, 0.3452 ) }
    apic_5 { pt3dadd( 294.527, 548.591, 29.2379, 0.4256 ) }
    apic_5 { pt3dadd( 293.6, 548.077, 29.0083, 0.4572 ) }
    apic_5 { pt3dadd( 292.481, 548.124, 28.8736, 0.3992 ) }
    apic_5 { pt3dadd( 291.349, 548.121, 28.7367, 0.3996 ) }
    apic_5 { pt3dadd( 290.313, 547.7, 28.5788, 0.3352 ) }
    apic_5 { pt3dadd( 289.319, 547.156, 28.392, 0.3026 ) }
    apic_5 { pt3dadd( 288.365, 546.529, 28.2187, 0.2794 ) }
    apic_5 { pt3dadd( 287.245, 546.382, 28.0297, 0.2836 ) }
    apic_5 { pt3dadd( 286.103, 546.306, 27.8463, 0.291 ) }
    apic_5 { pt3dadd( 284.99, 546.047, 27.6758, 0.306 ) }
    apic_5 { pt3dadd( 284.094, 545.372, 27.4935, 0.3274 ) }
    apic_5 { pt3dadd( 283.37, 544.615, 27.1838, 0.3992 ) }
    apic_5 { pt3dadd( 282.336, 544.167, 26.8716, 0.3766 ) }
    apic_5 { pt3dadd( 281.231, 543.926, 26.5821, 0.4046 ) }
    apic_5 { pt3dadd( 280.434, 543.418, 26.2931, 0.3446 ) }
    apic_5 { pt3dadd( 280.17, 542.31, 26.0523, 0.3198 ) }
    apic_5 { pt3dadd( 279.562, 541.398, 25.8555, 0.3122 ) }
    apic_5 { pt3dadd( 278.593, 540.827, 25.6939, 0.3402 ) }
    apic_5 { pt3dadd( 277.498, 540.526, 25.5511, 0.4166 ) }
    apic_5 { pt3dadd( 276.42, 540.156, 25.4456, 0.4396 ) }
    apic_5 { pt3dadd( 275.415, 539.617, 25.3767, 0.3718 ) }
    apic_5 { pt3dadd( 274.408, 539.075, 25.3313, 0.3242 ) }
    apic_5 { pt3dadd( 273.514, 538.379, 25.3187, 0.3142 ) }
    apic_5 { pt3dadd( 272.597, 537.706, 25.3025, 0.3734 ) }
    apic_5 { pt3dadd( 271.711, 536.987, 25.2792, 0.3338 ) }
    apic_5 { pt3dadd( 270.961, 536.129, 25.2512, 0.3 ) }
    apic_5 { pt3dadd( 269.989, 535.608, 25.2174, 0.2746 ) }
    apic_5 { pt3dadd( 268.887, 535.303, 25.1779, 0.2746 ) }
    apic_5 { pt3dadd( 267.897, 534.764, 25.1056, 0.2746 ) }
    apic_5 { pt3dadd( 267.034, 534.026, 25.0009, 0.2746 ) }
    apic_5 { pt3dadd( 266.315, 533.144, 24.906, 0.2748 ) }
    apic_5 { pt3dadd( 265.636, 532.223, 24.8335, 0.2748 ) }
    apic_5 { pt3dadd( 264.753, 531.515, 24.7811, 0.275 ) }
    apic_5 { pt3dadd( 263.817, 530.856, 24.747, 0.2756 ) }
    apic_5 { pt3dadd( 262.867, 530.218, 24.7285, 0.2764 ) }
    apic_5 { pt3dadd( 261.999, 529.477, 24.7181, 0.2778 ) }
    apic_5 { pt3dadd( 261.266, 528.602, 24.7069, 0.2806 ) }
    apic_5 { pt3dadd( 260.467, 527.787, 24.6907, 0.2858 ) }
    apic_5 { pt3dadd( 259.54, 527.121, 24.6674, 0.2952 ) }
    apic_5 { pt3dadd( 258.648, 526.407, 24.6355, 0.3136 ) }
    apic_5 { pt3dadd( 257.541, 526.202, 24.5944, 0.3426 ) }
    apic_5 { pt3dadd( 256.638, 525.514, 24.5361, 0.421 ) }
    apic_5 { pt3dadd( 255.67, 524.913, 24.4353, 0.4476 ) }
    apic_5 { pt3dadd( 254.661, 524.388, 24.2978, 0.3878 ) }
    apic_5 { pt3dadd( 253.672, 523.814, 24.1724, 0.3476 ) }
    apic_5 { pt3dadd( 252.624, 523.361, 24.0416, 0.3884 ) }
    apic_5 { pt3dadd( 251.575, 522.932, 23.8809, 0.3626 ) }
    apic_5 { pt3dadd( 250.465, 522.655, 23.7586, 0.348 ) }
    apic_5 { pt3dadd( 249.373, 522.315, 23.6704, 0.3892 ) }
    apic_5 { pt3dadd( 248.334, 521.837, 23.6068, 0.3628 ) }
    apic_5 { pt3dadd( 247.215, 521.604, 23.56, 0.3546 ) }
    apic_5 { pt3dadd( 246.126, 521.256, 23.5292, 0.3712 ) }
    apic_5 { pt3dadd( 245.132, 520.701, 23.4724, 0.4762 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_5 { pt3dadd( 244.359, 519.87, 23.3806, 0.5394 ) }
    apic_5 { pt3dadd( 243.303, 519.439, 23.3274, 0.6088 ) }
    apic_5 { pt3dadd( 242.235, 519.079, 23.3512, 0.5114 ) }
    apic_5 { pt3dadd( 241.115, 519.098, 23.4083, 0.5126 ) }
    apic_5 { pt3dadd( 240.131, 518.518, 23.4576, 0.5488 ) }
    apic_5 { pt3dadd( 239.201, 517.87, 23.4629, 0.4498 ) }
    apic_5 { pt3dadd( 238.386, 517.074, 23.476, 0.3856 ) }
    apic_5 { pt3dadd( 237.734, 516.141, 23.501, 0.3754 ) }
    apic_5 { pt3dadd( 236.911, 515.37, 23.5763, 0.5134 ) }
    apic_5 { pt3dadd( 235.975, 514.755, 23.7157, 0.4654 ) }
    apic_5 { pt3dadd( 235.117, 514.071, 23.8406, 0.4794 ) }
    apic_5 { pt3dadd( 234.47, 513.177, 23.816, 0.4628 ) }
    apic_5 { pt3dadd( 233.695, 512.344, 23.7157, 0.4098 ) }
    apic_5 { pt3dadd( 232.908, 511.537, 23.5894, 0.419 ) }
    apic_5 { pt3dadd( 232.073, 510.806, 23.5169, 0.372 ) }
    apic_5 { pt3dadd( 231.109, 510.207, 23.389, 0.3666 ) }
    apic_5 { pt3dadd( 230.213, 509.543, 23.1983, 0.4184 ) }
    apic_5 { pt3dadd( 229.461, 508.755, 22.9502, 0.443 ) }
    apic_5 { pt3dadd( 228.949, 507.84, 22.6559, 0.3782 ) }
    apic_5 { pt3dadd( 228.64, 506.779, 22.482, 0.3348 ) }
    apic_5 { pt3dadd( 228.277, 505.839, 22.5792, 0.3398 ) }
    apic_5 { pt3dadd( 228.102, 504.868, 22.8897, 0.3924 ) }
    apic_5 { pt3dadd( 227.887, 503.778, 23.1563, 0.5088 ) }
    apic_5 { pt3dadd( 227.686, 502.693, 23.315, 0.633 ) }
    apic_5 { pt3dadd( 227.611, 501.579, 23.3786, 0.6212 ) }
    apic_5 { pt3dadd( 227.477, 500.484, 23.4326, 0.63 ) }
    apic_5 { pt3dadd( 227.441, 499.42, 23.6051, 0.4972 ) }
    apic_5 { pt3dadd( 227.291, 498.309, 23.7717, 0.517 ) }
    apic_5 { pt3dadd( 227.651, 497.267, 23.982, 0.4068 ) }
    apic_5 { pt3dadd( 227.686, 496.144, 24.1847, 0.2288 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 30/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 307.802, 566.629, 35.3055, 0.4852 ) }
    apic_3 { pt3dadd( 307.008, 566.265, 35.9251, 0.3624 ) }
    apic_3 { pt3dadd( 305.908, 566.074, 36.4675, 0.3056 ) }
    apic_3 { pt3dadd( 304.851, 565.661, 36.9314, 0.2852 ) }
    apic_3 { pt3dadd( 303.74, 565.495, 37.3643, 0.294 ) }
    apic_3 { pt3dadd( 302.603, 565.446, 37.765, 0.3114 ) }
    apic_3 { pt3dadd( 301.554, 565.297, 38.2598, 0.3388 ) }
    apic_3 { pt3dadd( 300.675, 564.573, 38.7033, 0.414 ) }
    apic_3 { pt3dadd( 299.861, 563.8, 39.1003, 0.4348 ) }
    apic_3 { pt3dadd( 298.908, 563.31, 39.5895, 0.363 ) }
    apic_3 { pt3dadd( 297.931, 563.136, 40.1727, 0.3068 ) }
    apic_3 { pt3dadd( 296.874, 562.956, 40.719, 0.287 ) }
    apic_3 { pt3dadd( 295.923, 562.366, 41.2552, 0.2988 ) }
    apic_3 { pt3dadd( 294.872, 561.981, 41.7561, 0.3142 ) }
    apic_3 { pt3dadd( 293.779, 561.71, 42.2425, 0.3734 ) }
    apic_3 { pt3dadd( 292.687, 561.447, 42.7146, 0.3338 ) }
    apic_3 { pt3dadd( 291.564, 561.265, 43.1698, 0.3 ) }
    apic_3 { pt3dadd( 290.558, 560.801, 43.629, 0.2746 ) }
    apic_3 { pt3dadd( 289.537, 560.438, 44.1599, 0.2746 ) }
    apic_3 { pt3dadd( 288.48, 560.184, 44.7726, 0.2746 ) }
    apic_3 { pt3dadd( 287.422, 559.93, 45.4398, 0.2746 ) }
    apic_3 { pt3dadd( 286.364, 559.677, 46.1392, 0.2746 ) }
    apic_3 { pt3dadd( 285.307, 559.423, 46.851, 0.2746 ) }
    apic_3 { pt3dadd( 284.186, 559.353, 47.4754, 0.2746 ) }
    apic_3 { pt3dadd( 283.05, 559.312, 48.0158, 0.2746 ) }
    apic_3 { pt3dadd( 281.936, 559.287, 48.536, 0.2746 ) }
    apic_3 { pt3dadd( 280.827, 559.266, 49.042, 0.2746 ) }
    apic_3 { pt3dadd( 279.716, 559.244, 49.5323, 0.2746 ) }
    apic_3 { pt3dadd( 278.605, 559.224, 50.0058, 0.2746 ) }
    apic_3 { pt3dadd( 277.781, 558.482, 50.3863, 0.2746 ) }
    apic_3 { pt3dadd( 276.753, 557.991, 50.6722, 0.2746 ) }
    apic_3 { pt3dadd( 275.63, 557.779, 50.8847, 0.2746 ) }
    apic_3 { pt3dadd( 274.487, 557.772, 51.051, 0.2746 ) }
    apic_3 { pt3dadd( 273.344, 557.803, 51.212, 0.2746 ) }
    apic_3 { pt3dadd( 272.247, 557.582, 51.4458, 0.2746 ) }
    apic_3 { pt3dadd( 271.151, 557.356, 51.7423, 0.2746 ) }
    apic_3 { pt3dadd( 270.055, 557.129, 52.0764, 0.2746 ) }
    apic_3 { pt3dadd( 268.914, 557.157, 52.3662, 0.2746 ) }
    apic_3 { pt3dadd( 267.78, 557.302, 52.5823, 0.2746 ) }
    apic_3 { pt3dadd( 266.653, 557.5, 52.7335, 0.2746 ) }
    apic_3 { pt3dadd( 265.553, 557.817, 52.8321, 0.2746 ) }
    apic_3 { pt3dadd( 264.454, 558.134, 52.9004, 0.2746 ) }
    apic_3 { pt3dadd( 263.4, 558.577, 52.96, 0.2746 ) }
    apic_3 { pt3dadd( 262.345, 559.021, 53.0303, 0.2746 ) }
    apic_3 { pt3dadd( 262.318, 559.421, 53.1891, 0.2746 ) }
    apic_3 { pt3dadd( 261.769, 560.341, 53.3397, 0.2746 ) }
    apic_3 { pt3dadd( 260.652, 560.547, 53.5004, 0.2746 ) }
    apic_3 { pt3dadd( 259.546, 560.788, 53.7054, 0.2746 ) }
    apic_3 { pt3dadd( 258.441, 561.029, 53.9378, 0.2746 ) }
    apic_3 { pt3dadd( 257.306, 561.008, 54.1394, 0.2746 ) }
    apic_3 { pt3dadd( 256.164, 561.074, 54.3049, 0.2746 ) }
    apic_3 { pt3dadd( 255.048, 561.277, 54.4242, 0.2746 ) }
    apic_3 { pt3dadd( 253.962, 561.584, 54.5124, 0.2746 ) }
    apic_3 { pt3dadd( 253.009, 562.152, 54.712, 0.2746 ) }
    apic_3 { pt3dadd( 252.056, 562.722, 54.9976, 0.2746 ) }
    apic_3 { pt3dadd( 251.105, 563.291, 55.344, 0.2746 ) }
    apic_3 { pt3dadd( 250.112, 563.81, 55.6814, 0.2746 ) }
    apic_3 { pt3dadd( 249.069, 563.989, 55.9317, 0.2746 ) }
    apic_3 { pt3dadd( 247.962, 564.146, 56.0944, 0.2746 ) }
    apic_3 { pt3dadd( 246.843, 563.946, 56.1708, 0.2746 ) }
    apic_3 { pt3dadd( 245.738, 563.658, 56.1798, 0.2746 ) }
    apic_3 { pt3dadd( 244.605, 563.497, 56.1414, 0.2746 ) }
    apic_3 { pt3dadd( 243.472, 563.336, 56.0756, 0.2746 ) }
    apic_3 { pt3dadd( 242.462, 562.825, 55.9952, 0.2746 ) }
    apic_3 { pt3dadd( 241.445, 562.953, 55.9037, 0.2746 ) }
    apic_3 { pt3dadd( 240.641, 563.427, 55.5876, 0.2746 ) }
    apic_3 { pt3dadd( 239.743, 564.135, 55.344, 0.2746 ) }
    apic_3 { pt3dadd( 238.866, 564.84, 55.174, 0.2746 ) }
    apic_3 { pt3dadd( 238.089, 565.668, 55.0746, 0.2746 ) }
    apic_3 { pt3dadd( 237.029, 565.403, 55.0413, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_3 { pt3dadd( 236.276, 565.357, 55.0192, 0.2746 ) }
    apic_3 { pt3dadd( 235.673, 566.158, 55.2566, 0.2746 ) }
    apic_3 { pt3dadd( 234.82, 566.919, 55.4509, 0.2746 ) }
    apic_3 { pt3dadd( 233.887, 567.581, 55.6041, 0.2746 ) }
    apic_3 { pt3dadd( 232.881, 568.107, 55.7189, 0.2746 ) }
    apic_3 { pt3dadd( 231.779, 568.258, 55.7992, 0.2746 ) }
    apic_3 { pt3dadd( 230.642, 568.134, 55.8508, 0.2746 ) }
    apic_3 { pt3dadd( 229.532, 567.866, 55.8709, 0.2746 ) }
    apic_3 { pt3dadd( 228.429, 567.562, 55.8975, 0.2746 ) }
    apic_3 { pt3dadd( 227.373, 567.139, 55.9303, 0.2746 ) }
    apic_3 { pt3dadd( 226.26, 567.333, 55.9776, 0.2746 ) }
    apic_3 { pt3dadd( 225.33, 567.964, 56.0907, 0.2746 ) }
    apic_3 { pt3dadd( 224.367, 568.582, 56.1842, 0.2746 ) }
    apic_3 { pt3dadd( 223.266, 568.816, 56.2598, 0.2746 ) }
    apic_3 { pt3dadd( 222.13, 568.885, 56.3203, 0.2746 ) }
    apic_3 { pt3dadd( 221.216, 568.321, 56.369, 0.2746 ) }
    apic_3 { pt3dadd( 220.268, 567.681, 56.4094, 0.2746 ) }
    apic_3 { pt3dadd( 219.27, 567.131, 56.4491, 0.2746 ) }
    apic_3 { pt3dadd( 218.136, 566.982, 56.5057, 0.2746 ) }
    apic_3 { pt3dadd( 217.002, 566.834, 56.5855, 0.2746 ) }
    apic_3 { pt3dadd( 216.043, 566.797, 56.693, 0.2746 ) }
    apic_3 { pt3dadd( 214.91, 566.956, 56.828, 0.2746 ) }
    apic_3 { pt3dadd( 213.802, 567.062, 57.055, 0.2744 ) }
    apic_3 { pt3dadd( 212.717, 567.125, 57.4039, 0.2744 ) }
    apic_3 { pt3dadd( 211.631, 567.188, 57.8292, 0.2742 ) }
    apic_3 { pt3dadd( 210.511, 567.157, 58.2123, 0.274 ) }
    apic_3 { pt3dadd( 209.37, 567.068, 58.4956, 0.2736 ) }
    apic_3 { pt3dadd( 208.23, 566.994, 58.6863, 0.2728 ) }
    apic_3 { pt3dadd( 207.092, 567.105, 58.7933, 0.2712 ) }
    apic_3 { pt3dadd( 205.965, 567.283, 58.837, 0.2684 ) }
    apic_3 { pt3dadd( 204.852, 567.548, 58.8462, 0.2626 ) }
    apic_3 { pt3dadd( 203.76, 567.891, 58.8462, 0.2542 ) }
    apic_3 { pt3dadd( 202.712, 568.331, 58.8462, 0.2288 ) }
    apic_3 { pt3dadd( 201.741, 568.935, 58.8462, 0.2288 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 34/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 307.802, 566.629, 35.3055, 0.4852 ) }
    apic_2 { pt3dadd( 308.194, 566.772, 35.0034, 0.6864 ) }
    apic_2 { pt3dadd( 308.031, 567.904, 35.0034, 0.4422 ) }
    apic_2 { pt3dadd( 307.869, 569.036, 35.0034, 0.322 ) }
    apic_2 { pt3dadd( 307.706, 570.169, 35.0034, 0.2684 ) }
    apic_2 { pt3dadd( 307.596, 571.307, 35.0034, 0.2626 ) }
    apic_2 { pt3dadd( 307.508, 572.447, 35.0034, 0.2542 ) }
    apic_2 { pt3dadd( 307.436, 573.589, 35.0034, 0.2288 ) }
    apic_2 { pt3dadd( 307.24, 574.712, 35.0034, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 43/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 338.452, 596.022, 34.8068, 0.6068 ) }
    dend_30 { pt3dadd( 339.614, 596.736, 35.1397, 0.458 ) }
    dend_30 { pt3dadd( 340.184, 597.685, 35.1232, 0.4264 ) }
    dend_30 { pt3dadd( 340.69, 598.652, 35.2565, 0.5544 ) }
    dend_30 { pt3dadd( 341.304, 599.605, 35.4752, 0.573 ) }
    dend_30 { pt3dadd( 341.991, 600.519, 35.7322, 0.525 ) }
    dend_30 { pt3dadd( 342.771, 601.273, 36.1376, 0.608 ) }
    dend_30 { pt3dadd( 343.488, 602.12, 36.6122, 0.6136 ) }
    dend_30 { pt3dadd( 344.122, 603.057, 37.0796, 0.657 ) }
    dend_30 { pt3dadd( 344.87, 603.897, 37.5276, 0.577 ) }
    dend_30 { pt3dadd( 345.676, 604.676, 37.97, 0.5206 ) }
    dend_30 { pt3dadd( 346.253, 605.66, 38.3418, 0.4286 ) }
    dend_30 { pt3dadd( 347.02, 606.447, 38.5235, 0.4252 ) }
    dend_30 { pt3dadd( 347.954, 607.014, 38.7932, 0.5226 ) }
    dend_30 { pt3dadd( 348.566, 607.919, 39.1426, 0.6578 ) }
    dend_30 { pt3dadd( 349.147, 608.899, 39.4722, 0.6698 ) }
    dend_30 { pt3dadd( 349.723, 609.885, 39.7558, 0.7086 ) }
    dend_30 { pt3dadd( 350.432, 610.782, 40.0218, 0.6982 ) }
    dend_30 { pt3dadd( 351.076, 611.725, 40.2984, 0.623 ) }
    dend_30 { pt3dadd( 351.659, 612.705, 40.5891, 0.5246 ) }
    dend_30 { pt3dadd( 352.344, 613.597, 40.9492, 0.601 ) }
    dend_30 { pt3dadd( 353.093, 614.401, 41.4207, 0.6304 ) }
    dend_30 { pt3dadd( 353.705, 615.283, 42.0053, 0.543 ) }
    dend_30 { pt3dadd( 354.284, 616.196, 42.6418, 0.3848 ) }
    dend_30 { pt3dadd( 354.924, 617.139, 43.1819, 0.3 ) }
    dend_30 { pt3dadd( 355.657, 617.964, 43.7128, 0.2746 ) }
    dend_30 { pt3dadd( 356.231, 618.461, 44.3293, 0.2746 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 70/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 338.452, 596.022, 34.8068, 0.6068 ) }
    dend_29 { pt3dadd( 337.971, 595.586, 36.6052, 0.2288 ) }
    dend_29 { pt3dadd( 337.736, 595.284, 38.9707, 0.3672 ) }
    dend_29 { pt3dadd( 338.361, 595.179, 39.9566, 0.4386 ) }
    dend_29 { pt3dadd( 339.34, 594.703, 40.8565, 0.6152 ) }
    dend_29 { pt3dadd( 339.297, 594.617, 41.9135, 0.7296 ) }
    dend_29 { pt3dadd( 338.6, 595.145, 43.0116, 0.6028 ) }
    dend_29 { pt3dadd( 337.769, 595.881, 43.9656, 0.4112 ) }
    dend_29 { pt3dadd( 337.017, 596.73, 44.7308, 0.302 ) }
    dend_29 { pt3dadd( 336.542, 597.748, 45.3911, 0.2782 ) }
    dend_29 { pt3dadd( 335.796, 598.588, 45.9578, 0.2814 ) }
    dend_29 { pt3dadd( 334.803, 598.997, 46.5346, 0.2868 ) }
    dend_29 { pt3dadd( 333.793, 599.272, 47.1929, 0.2984 ) }
    dend_29 { pt3dadd( 332.745, 599.689, 47.8209, 0.3136 ) }
    dend_29 { pt3dadd( 331.698, 600.15, 48.4033, 0.3724 ) }
    dend_29 { pt3dadd( 330.901, 600.958, 48.9672, 0.332 ) }
    dend_29 { pt3dadd( 330.184, 601.706, 49.7386, 0.2966 ) }
    dend_29 { pt3dadd( 329.526, 602.61, 50.5638, 0.2684 ) }
    dend_29 { pt3dadd( 328.922, 603.357, 51.5589, 0.2626 ) }
    dend_29 { pt3dadd( 328.361, 603.959, 52.7324, 0.2542 ) }
    dend_29 { pt3dadd( 327.802, 604.56, 53.9916, 0.2288 ) }
    dend_29 { pt3dadd( 327.241, 605.161, 56.8058, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 92/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 295.726, 577.349, 25.4324, 0.4036 ) }
    dend_22 { pt3dadd( 295.081, 576.577, 25.4976, 0.4182 ) }
    dend_22 { pt3dadd( 294.233, 575.844, 25.4696, 0.5468 ) }
    dend_22 { pt3dadd( 293.258, 575.272, 25.3854, 0.5228 ) }
    dend_22 { pt3dadd( 292.294, 574.654, 25.3103, 0.6064 ) }
    dend_22 { pt3dadd( 291.345, 574.021, 25.2588, 0.5988 ) }
    dend_22 { pt3dadd( 290.338, 573.485, 25.2266, 0.4582 ) }
    dend_22 { pt3dadd( 289.318, 572.975, 25.2333, 0.3528 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 0/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 295.726, 577.349, 25.4324, 0.4036 ) }
    dend_19 { pt3dadd( 295.683, 577.333, 26.0635, 0.2288 ) }
    dend_19 { pt3dadd( 294.729, 577.148, 26.7826, 0.2898 ) }
    dend_19 { pt3dadd( 293.604, 577.084, 27.0796, 0.304 ) }
    dend_19 { pt3dadd( 292.618, 577.251, 27.2908, 0.324 ) }
    dend_19 { pt3dadd( 291.747, 576.753, 27.4319, 0.3916 ) }
    dend_19 { pt3dadd( 290.914, 576.022, 27.6256, 0.3688 ) }
    dend_19 { pt3dadd( 289.859, 575.643, 27.7788, 0.3592 ) }
    dend_19 { pt3dadd( 288.757, 575.547, 27.7852, 0.411 ) }
    dend_19 { pt3dadd( 287.633, 575.369, 27.7936, 0.3992 ) }
    dend_19 { pt3dadd( 286.504, 575.177, 27.8342, 0.4414 ) }
    dend_19 { pt3dadd( 285.374, 575.07, 27.9597, 0.4384 ) }
    dend_19 { pt3dadd( 284.25, 575.002, 28.1742, 0.3698 ) }
    dend_19 { pt3dadd( 283.142, 574.807, 28.4749, 0.3194 ) }
    dend_19 { pt3dadd( 282.082, 574.442, 28.8462, 0.3116 ) }
    dend_19 { pt3dadd( 281.001, 574.086, 29.2102, 0.3378 ) }
    dend_19 { pt3dadd( 279.908, 573.748, 29.526, 0.4184 ) }
    dend_19 { pt3dadd( 278.832, 573.365, 29.8172, 0.4116 ) }
    dend_19 { pt3dadd( 277.754, 572.991, 30.1134, 0.4718 ) }
    dend_19 { pt3dadd( 276.667, 573.015, 30.5071, 0.458 ) }
    dend_19 { pt3dadd( 275.63, 573.486, 30.877, 0.5846 ) }
    dend_19 { pt3dadd( 274.579, 573.846, 31.3149, 0.5384 ) }
    dend_19 { pt3dadd( 273.531, 574.17, 31.8203, 0.671 ) }
    dend_19 { pt3dadd( 272.431, 574.375, 32.3324, 0.5452 ) }
    dend_19 { pt3dadd( 271.334, 574.663, 32.8045, 0.5142 ) }
    dend_19 { pt3dadd( 270.278, 575.102, 33.1904, 0.6186 ) }
    dend_19 { pt3dadd( 269.185, 575.437, 33.549, 0.712 ) }
    dend_19 { pt3dadd( 268.062, 575.503, 33.9371, 0.6858 ) }
    dend_19 { pt3dadd( 266.938, 575.569, 34.3608, 0.6902 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 29/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 296.374, 591.377, 27.3073, 0.5704 ) }
    dend_17 { pt3dadd( 296.755, 591.281, 27.8625, 0.4576 ) }
    dend_17 { pt3dadd( 297.696, 591.198, 29.2284, 0.6618 ) }
    dend_17 { pt3dadd( 298.518, 591.709, 29.8287, 0.599 ) }
    dend_17 { pt3dadd( 299.213, 592.615, 30.3657, 0.7268 ) }
    dend_17 { pt3dadd( 299.89, 593.508, 30.896, 0.6928 ) }
    dend_17 { pt3dadd( 300.345, 594.464, 31.4824, 0.574 ) }
    dend_17 { pt3dadd( 300.43, 595.56, 32.06, 0.3952 ) }
    dend_17 { pt3dadd( 300.272, 596.64, 32.4764, 0.3192 ) }
    dend_17 { pt3dadd( 300.027, 597.69, 32.8378, 0.3112 ) }
    dend_17 { pt3dadd( 299.975, 598.781, 33.3264, 0.3372 ) }
    dend_17 { pt3dadd( 300.308, 599.641, 34.0245, 0.4162 ) }
    dend_17 { pt3dadd( 300.65, 600.606, 34.8342, 0.4138 ) }
    dend_17 { pt3dadd( 301.164, 601.602, 35.6252, 0.4458 ) }
    dend_17 { pt3dadd( 301.513, 602.688, 36.3376, 0.5568 ) }
    dend_17 { pt3dadd( 301.711, 603.803, 37.0238, 0.74 ) }
    dend_17 { pt3dadd( 302.032, 604.444, 37.9215, 0.7316 ) }
    dend_17 { pt3dadd( 302.142, 605.468, 38.8315, 0.5748 ) }
    dend_17 { pt3dadd( 302.625, 606.232, 39.793, 0.513 ) }
    dend_17 { pt3dadd( 303.081, 607.247, 40.5308, 0.6598 ) }
    dend_17 { pt3dadd( 303.255, 608.355, 41.1732, 0.8068 ) }
    dend_17 { pt3dadd( 303.584, 609.342, 41.8247, 0.7722 ) }
    dend_17 { pt3dadd( 304.226, 610.179, 42.4788, 0.5978 ) }
    dend_17 { pt3dadd( 304.579, 611.166, 43.0632, 0.58 ) }
    dend_17 { pt3dadd( 304.832, 612.238, 43.6036, 0.6654 ) }
    dend_17 { pt3dadd( 305.145, 613.288, 44.1706, 0.7072 ) }
    dend_17 { pt3dadd( 304.815, 614.377, 44.613, 0.6638 ) }
    dend_17 { pt3dadd( 304.388, 615.402, 45.0744, 0.4842 ) }
    dend_17 { pt3dadd( 303.805, 616.357, 45.5098, 0.4032 ) }
    dend_17 { pt3dadd( 303.404, 617.251, 46.0782, 0.403 ) }
    dend_17 { pt3dadd( 302.754, 618.158, 46.6052, 0.5892 ) }
    dend_17 { pt3dadd( 302.126, 618.989, 47.1811, 0.4872 ) }
    dend_17 { pt3dadd( 301.706, 619.856, 47.642, 0.4098 ) }
    dend_17 { pt3dadd( 301.978, 620.942, 47.9161, 0.4102 ) }
    dend_17 { pt3dadd( 302.335, 622.001, 48.1608, 0.3978 ) }
    dend_17 { pt3dadd( 302.881, 622.963, 48.463, 0.4386 ) }
    dend_17 { pt3dadd( 303.402, 623.963, 48.7808, 0.4332 ) }
    dend_17 { pt3dadd( 303.815, 625.029, 49.0862, 0.3602 ) }
    dend_17 { pt3dadd( 304.322, 626.047, 49.413, 0.3018 ) }
    dend_17 { pt3dadd( 305.167, 626.764, 49.7627, 0.278 ) }
    dend_17 { pt3dadd( 305.948, 627.096, 50.3264, 0.281 ) }
    dend_17 { pt3dadd( 306.341, 627.103, 51.2061, 0.2862 ) }
    dend_17 { pt3dadd( 307.394, 626.66, 51.9252, 0.2966 ) }
    dend_17 { pt3dadd( 308.386, 626.097, 52.5227, 0.3136 ) }
    dend_17 { pt3dadd( 309.376, 625.536, 52.9959, 0.356 ) }
    dend_17 { pt3dadd( 310.368, 624.973, 53.3456, 0.3814 ) }
    dend_17 { pt3dadd( 311.359, 624.41, 53.7732, 0.6864 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 76/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 296.374, 591.377, 27.3073, 0.5704 ) }
    dend_14 { pt3dadd( 296.228, 592.463, 27.2765, 0.5242 ) }
    dend_14 { pt3dadd( 296.225, 593.602, 27.2597, 0.5864 ) }
    dend_14 { pt3dadd( 296.363, 594.736, 27.2468, 0.6696 ) }
    dend_14 { pt3dadd( 296.568, 595.854, 27.249, 0.7524 ) }
    dend_14 { pt3dadd( 296.644, 596.97, 27.2748, 0.567 ) }
    dend_14 { pt3dadd( 296.807, 598.043, 27.1544, 0.494 ) }
    dend_14 { pt3dadd( 297.139, 598.734, 26.7198, 0.4176 ) }
    dend_14 { pt3dadd( 297.249, 599.725, 26.1733, 0.447 ) }
    dend_14 { pt3dadd( 296.789, 600.638, 25.9504, 0.5874 ) }
    dend_14 { pt3dadd( 296.711, 601.741, 25.7888, 0.6584 ) }
    dend_14 { pt3dadd( 296.577, 602.877, 25.7183, 0.5658 ) }
    dend_14 { pt3dadd( 296.684, 603.937, 25.8877, 0.567 ) }
    dend_14 { pt3dadd( 297.31, 604.887, 26.0968, 0.6462 ) }
    dend_14 { pt3dadd( 297.479, 606.016, 26.2668, 0.6474 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 91/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 302.871, 578.471, 34.6287, 0.3142 ) }
    dend_9 { pt3dadd( 302.625, 578.734, 36.094, 0.2288 ) }
    dend_9 { pt3dadd( 302.178, 579.586, 37.828, 0.3342 ) }
    dend_9 { pt3dadd( 301.546, 580.32, 38.5412, 0.3868 ) }
    dend_9 { pt3dadd( 300.536, 580.611, 39.37, 0.4746 ) }
    dend_9 { pt3dadd( 299.521, 580.738, 40.3099, 0.6838 ) }
    dend_9 { pt3dadd( 298.424, 580.851, 41.195, 0.8474 ) }
    dend_9 { pt3dadd( 297.618, 581.35, 42.1165, 0.8664 ) }
    dend_9 { pt3dadd( 296.766, 581.703, 43.0814, 0.6796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_9 { pt3dadd( 295.753, 581.781, 44.0101, 0.4962 ) }
    dend_9 { pt3dadd( 294.622, 581.801, 44.7577, 0.5102 ) }
    dend_9 { pt3dadd( 293.524, 581.532, 45.3387, 0.4176 ) }
    dend_9 { pt3dadd( 292.445, 581.276, 45.8153, 0.3654 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 4/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 302.871, 578.471, 34.6287, 0.3142 ) }
    dend_8 { pt3dadd( 302.612, 579.562, 34.7992, 0.3738 ) }
    dend_8 { pt3dadd( 302.137, 580.59, 34.6438, 0.3344 ) }
    dend_8 { pt3dadd( 301.663, 581.619, 34.3885, 0.3012 ) }
    dend_8 { pt3dadd( 301.202, 582.651, 34.0858, 0.2766 ) }
    dend_8 { pt3dadd( 300.753, 583.688, 33.7814, 0.2784 ) }
    dend_8 { pt3dadd( 300.214, 584.683, 33.5107, 0.2818 ) }
    dend_8 { pt3dadd( 299.507, 585.575, 33.3206, 0.288 ) }
    dend_8 { pt3dadd( 298.751, 586.434, 33.2105, 0.2996 ) }
    dend_8 { pt3dadd( 298.205, 587.423, 33.1666, 0.3206 ) }
    dend_8 { pt3dadd( 297.551, 588.341, 33.1772, 0.362 ) }
    dend_8 { pt3dadd( 296.716, 589.12, 33.2321, 0.4266 ) }
    dend_8 { pt3dadd( 295.893, 589.877, 33.3903, 0.6054 ) }
    dend_8 { pt3dadd( 294.873, 590.278, 33.4681, 0.6498 ) }
    dend_8 { pt3dadd( 294.347, 591.278, 33.6356, 0.7542 ) }
    dend_8 { pt3dadd( 294.048, 592.324, 33.9122, 0.6108 ) }
    dend_8 { pt3dadd( 293.539, 593.275, 34.2518, 0.6078 ) }
    dend_8 { pt3dadd( 293.068, 594.281, 34.6077, 0.6994 ) }
    dend_8 { pt3dadd( 292.918, 595.38, 34.9642, 0.6258 ) }
    dend_8 { pt3dadd( 293.056, 596.439, 35.1554, 0.5266 ) }
    dend_8 { pt3dadd( 293.28, 597.537, 35.2352, 0.3918 ) }
    dend_8 { pt3dadd( 293.324, 598.676, 35.2839, 0.3614 ) }
    dend_8 { pt3dadd( 293.172, 599.805, 35.3427, 0.3826 ) }
    dend_8 { pt3dadd( 293.302, 600.771, 35.5776, 0.5032 ) }
    dend_8 { pt3dadd( 293.56, 601.76, 35.9313, 0.5616 ) }
    dend_8 { pt3dadd( 293.594, 602.811, 36.0629, 0.7852 ) }
    dend_8 { pt3dadd( 293.946, 603.864, 36.0343, 0.868 ) }
    dend_8 { pt3dadd( 294.373, 604.919, 35.9139, 0.8012 ) }
    dend_8 { pt3dadd( 294.604, 606.032, 35.7227, 0.6044 ) }
    dend_8 { pt3dadd( 294.765, 607.164, 35.5214, 0.5924 ) }
    dend_8 { pt3dadd( 294.909, 608.299, 35.3461, 0.688 ) }
    dend_8 { pt3dadd( 295.551, 609.242, 35.2237, 0.7504 ) }
    dend_8 { pt3dadd( 296.192, 610.166, 35.0582, 0.7376 ) }
    dend_8 { pt3dadd( 296.525, 611.22, 34.8681, 0.6502 ) }
    dend_8 { pt3dadd( 296.668, 612.347, 34.7256, 0.5702 ) }
    dend_8 { pt3dadd( 296.889, 613.463, 34.6525, 0.7098 ) }
    dend_8 { pt3dadd( 297.18, 614.476, 34.4971, 0.714 ) }
    dend_8 { pt3dadd( 297.617, 615.47, 34.2938, 0.5842 ) }
    dend_8 { pt3dadd( 297.903, 616.34, 34.3784, 0.5554 ) }
    dend_8 { pt3dadd( 298.299, 617.331, 34.5632, 0.6178 ) }
    dend_8 { pt3dadd( 298.505, 618.303, 34.5411, 0.6294 ) }
    dend_8 { pt3dadd( 298.578, 619.192, 34.5279, 0.4682 ) }
    dend_8 { pt3dadd( 298.324, 620.199, 34.6875, 0.3698 ) }
    dend_8 { pt3dadd( 297.927, 621.162, 34.7234, 0.3588 ) }
    dend_8 { pt3dadd( 297.727, 622.241, 34.6738, 0.421 ) }
    dend_8 { pt3dadd( 297.442, 623.314, 34.7466, 0.5936 ) }
    dend_8 { pt3dadd( 297.027, 624.376, 34.8673, 0.6354 ) }
    dend_8 { pt3dadd( 296.597, 625.436, 34.9902, 0.6908 ) }
    dend_8 { pt3dadd( 296.089, 626.459, 35.1022, 0.6714 ) }
    dend_8 { pt3dadd( 295.457, 627.356, 35.1442, 0.543 ) }
    dend_8 { pt3dadd( 295.589, 628.382, 35.4189, 0.5238 ) }
    dend_8 { pt3dadd( 295.799, 629.404, 35.8428, 0.5692 ) }
    dend_8 { pt3dadd( 296.342, 630.363, 36.2981, 0.4904 ) }
    dend_8 { pt3dadd( 296.622, 631.346, 36.6817, 0.4486 ) }
    dend_8 { pt3dadd( 296.306, 632.436, 37.0569, 0.55 ) }
    dend_8 { pt3dadd( 296.139, 633.556, 37.4391, 0.5578 ) }
    dend_8 { pt3dadd( 295.857, 634.591, 37.8347, 0.5316 ) }
    dend_8 { pt3dadd( 295.194, 634.849, 38.3776, 0.4502 ) }
    dend_8 { pt3dadd( 294.93, 635.568, 38.8601, 0.4596 ) }
    dend_8 { pt3dadd( 294.587, 636.629, 39.1815, 0.6134 ) }
    dend_8 { pt3dadd( 294.033, 637.621, 39.4416, 0.6952 ) }
    dend_8 { pt3dadd( 293.658, 638.692, 39.6858, 0.6898 ) }
    dend_8 { pt3dadd( 293.995, 639.757, 39.9168, 0.5272 ) }
    dend_8 { pt3dadd( 293.883, 640.816, 40.182, 0.5084 ) }
    dend_8 { pt3dadd( 293.286, 641.625, 40.6227, 0.4742 ) }
    dend_8 { pt3dadd( 292.834, 642.655, 41.0556, 0.636 ) }
    dend_8 { pt3dadd( 292.718, 643.738, 41.5296, 0.5288 ) }
    dend_8 { pt3dadd( 292.269, 644.623, 42.0406, 0.4764 ) }
    dend_8 { pt3dadd( 291.49, 645.436, 42.4525, 0.5842 ) }
    dend_8 { pt3dadd( 291.254, 646.47, 42.8036, 0.4764 ) }
    dend_8 { pt3dadd( 291.055, 646.929, 43.3896, 0.396 ) }
    dend_8 { pt3dadd( 290.52, 647.503, 44.1602, 0.353 ) }
    dend_8 { pt3dadd( 290.21, 648.483, 44.9372, 0.4464 ) }
    dend_8 { pt3dadd( 290.057, 649.58, 45.6126, 0.466 ) }
    dend_8 { pt3dadd( 289.885, 650.709, 46.1028, 0.5592 ) }
    dend_8 { pt3dadd( 289.927, 651.761, 46.1196, 0.6864 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 80/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 268.189, 570.977, 36.8684, 0.5006 ) }
    dend_6 { pt3dadd( 267.285, 569.693, 37.6692, 0.6864 ) }
    dend_6 { pt3dadd( 266.481, 568.996, 37.947, 0.4664 ) }
    dend_6 { pt3dadd( 265.977, 568.097, 38.159, 0.3616 ) }
    dend_6 { pt3dadd( 265.103, 567.49, 38.5137, 0.3672 ) }
    dend_6 { pt3dadd( 264.21, 566.934, 38.9729, 0.322 ) }
    dend_6 { pt3dadd( 263.159, 566.726, 39.4083, 0.2796 ) }
    dend_6 { pt3dadd( 262.057, 566.844, 39.8096, 0.2288 ) }
    dend_6 { pt3dadd( 261.061, 567.195, 40.04, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 268.189, 570.977, 36.8684, 0.5006 ) }
    dend_3 { pt3dadd( 267.441, 570.242, 36.9771, 0.5056 ) }
    dend_3 { pt3dadd( 266.544, 569.57, 37.0471, 0.4726 ) }
    dend_3 { pt3dadd( 265.445, 569.318, 37.1353, 0.3872 ) }
    dend_3 { pt3dadd( 264.349, 569.377, 37.3316, 0.3464 ) }
    dend_3 { pt3dadd( 263.337, 569.313, 37.6894, 0.3858 ) }
    dend_3 { pt3dadd( 262.293, 568.938, 38.033, 0.358 ) }
    dend_3 { pt3dadd( 261.314, 568.488, 38.2082, 0.3396 ) }
    dend_3 { pt3dadd( 260.385, 568.088, 38.4429, 0.3734 ) }
    dend_3 { pt3dadd( 260.069, 567.771, 38.9432, 0.334 ) }
    dend_3 { pt3dadd( 259.047, 567.376, 39.24, 0.3002 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_3 { pt3dadd( 258.506, 566.885, 39.0804, 0.2748 ) }
    dend_3 { pt3dadd( 257.659, 566.939, 38.7022, 0.2752 ) }
    dend_3 { pt3dadd( 256.541, 566.71, 38.393, 0.2756 ) }
    dend_3 { pt3dadd( 255.471, 566.342, 38.1046, 0.2766 ) }
    dend_3 { pt3dadd( 254.462, 565.804, 37.8689, 0.2782 ) }
    dend_3 { pt3dadd( 253.492, 565.221, 37.744, 0.2814 ) }
    dend_3 { pt3dadd( 252.525, 564.722, 37.718, 0.287 ) }
    dend_3 { pt3dadd( 251.387, 564.602, 37.7306, 0.2988 ) }
    dend_3 { pt3dadd( 250.252, 564.469, 37.7468, 0.3142 ) }
    dend_3 { pt3dadd( 249.278, 564.052, 37.7723, 0.3734 ) }
    dend_3 { pt3dadd( 248.419, 563.327, 37.8087, 0.3338 ) }
    dend_3 { pt3dadd( 247.415, 562.777, 37.8591, 0.3 ) }
    dend_3 { pt3dadd( 246.37, 562.336, 37.926, 0.2746 ) }
    dend_3 { pt3dadd( 245.254, 562.092, 38.0125, 0.2746 ) }
    dend_3 { pt3dadd( 244.282, 561.636, 38.1704, 0.2746 ) }
    dend_3 { pt3dadd( 243.458, 560.859, 38.3869, 0.2746 ) }
    dend_3 { pt3dadd( 242.685, 560.045, 38.612, 0.2746 ) }
    dend_3 { pt3dadd( 242.194, 559.076, 38.8623, 0.2746 ) }
    dend_3 { pt3dadd( 241.168, 558.573, 39.1468, 0.2746 ) }
    dend_3 { pt3dadd( 240.135, 558.164, 39.4671, 0.2746 ) }
    dend_3 { pt3dadd( 239.168, 558.183, 39.9252, 0.2746 ) }
    dend_3 { pt3dadd( 238.55, 558.223, 40.7168, 0.2746 ) }
    dend_3 { pt3dadd( 237.832, 558.27, 41.704, 0.2746 ) }
    dend_3 { pt3dadd( 236.693, 558.372, 42.4735, 0.2746 ) }
    dend_3 { pt3dadd( 235.553, 558.472, 43.0396, 0.2746 ) }
    // Section: apic_8, id: apic_8, parent: apic_6 (entry count 25/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 329.538, 557.557, 25.662, 1.0748 ) }
    apic_8 { pt3dadd( 330.15, 556.598, 25.8759, 1.152 ) }
    apic_8 { pt3dadd( 330.924, 555.755, 26.0302, 1.1832 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 28/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 329.538, 557.557, 25.662, 1.0748 ) }
    apic_7 { pt3dadd( 330.188, 556.665, 26.1114, 1.144 ) }
    apic_7 { pt3dadd( 331.044, 555.979, 25.6273, 0.9194 ) }
    apic_7 { pt3dadd( 332.022, 555.901, 25.5794, 0.5714 ) }
    apic_7 { pt3dadd( 333.065, 555.962, 25.263, 0.3836 ) }
    apic_7 { pt3dadd( 333.728, 555.986, 24.5092, 0.33 ) }
    apic_7 { pt3dadd( 334.053, 555.605, 23.3848, 0.4032 ) }
    apic_7 { pt3dadd( 334.288, 555.104, 22.0461, 0.3884 ) }
    apic_7 { pt3dadd( 334.701, 554.165, 20.8989, 0.404 ) }
    apic_7 { pt3dadd( 335.216, 553.283, 19.8811, 0.4538 ) }
    apic_7 { pt3dadd( 336.268, 553.132, 19.0084, 0.673 ) }
    apic_7 { pt3dadd( 337.248, 553.126, 18.1597, 0.6924 ) }
    apic_7 { pt3dadd( 338.324, 553.399, 17.5084, 0.5484 ) }
    apic_7 { pt3dadd( 338.659, 554.425, 17.026, 0.4682 ) }
    apic_7 { pt3dadd( 338.907, 555.36, 16.4749, 0.5562 ) }
    apic_7 { pt3dadd( 339.34, 555.781, 15.7884, 0.7154 ) }
    apic_7 { pt3dadd( 339.189, 556.447, 15.0304, 0.8006 ) }
    apic_7 { pt3dadd( 339.236, 557.531, 14.4021, 0.834 ) }
    apic_7 { pt3dadd( 339.501, 558.581, 13.8292, 0.814 ) }
    apic_7 { pt3dadd( 339.854, 559.578, 13.3935, 0.9458 ) }
    apic_7 { pt3dadd( 340.689, 560.308, 13.0278, 1.0568 ) }
    apic_7 { pt3dadd( 341.24, 561.289, 12.7896, 0.9942 ) }
    apic_7 { pt3dadd( 341.461, 562.402, 12.64, 0.808 ) }
    apic_7 { pt3dadd( 341.708, 563.516, 12.5124, 0.5748 ) }
    apic_7 { pt3dadd( 342.146, 564.555, 12.2906, 0.5132 ) }
    apic_7 { pt3dadd( 342.748, 565.482, 11.9328, 0.6588 ) }
    apic_7 { pt3dadd( 343.536, 566.286, 11.5002, 0.8126 ) }
    apic_7 { pt3dadd( 344.336, 567.07, 10.9861, 0.7468 ) }
    apic_7 { pt3dadd( 345.131, 567.866, 10.4107, 0.7246 ) }
    apic_7 { pt3dadd( 345.973, 568.607, 9.8129, 0.6582 ) }
    apic_7 { pt3dadd( 346.892, 569.094, 9.1384, 0.6582 ) }
    apic_7 { pt3dadd( 347.951, 569.307, 8.4678, 0.7458 ) }
    apic_7 { pt3dadd( 348.984, 569.411, 7.7834, 0.7118 ) }
    apic_7 { pt3dadd( 350.11, 569.603, 6.7491, 0.4576 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 62/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 356.231, 618.461, 44.3293, 0.2746 ) }
    dend_32 { pt3dadd( 356.251, 618.393, 45.2785, 0.4576 ) }
    dend_32 { pt3dadd( 357.143, 617.734, 45.2575, 0.3594 ) }
    dend_32 { pt3dadd( 358.153, 617.197, 45.253, 0.3 ) }
    dend_32 { pt3dadd( 359.272, 616.985, 45.2612, 0.2746 ) }
    dend_32 { pt3dadd( 360.413, 616.889, 45.2847, 0.2746 ) }
    dend_32 { pt3dadd( 361.556, 616.901, 45.3256, 0.2746 ) }
    dend_32 { pt3dadd( 362.699, 616.919, 45.3863, 0.2746 ) }
    dend_32 { pt3dadd( 363.832, 617.064, 45.4888, 0.2746 ) }
    dend_32 { pt3dadd( 364.954, 617.273, 45.6336, 0.2746 ) }
    dend_32 { pt3dadd( 366.087, 617.391, 45.817, 0.2744 ) }
    dend_32 { pt3dadd( 367.211, 617.21, 46.0348, 0.2744 ) }
    dend_32 { pt3dadd( 368.336, 617.03, 46.2767, 0.2742 ) }
    dend_32 { pt3dadd( 369.461, 616.849, 46.5329, 0.274 ) }
    dend_32 { pt3dadd( 370.585, 616.669, 46.7947, 0.2736 ) }
    dend_32 { pt3dadd( 371.708, 616.489, 47.0565, 0.2728 ) }
    dend_32 { pt3dadd( 372.833, 616.308, 47.3211, 0.2712 ) }
    dend_32 { pt3dadd( 373.958, 616.129, 47.5807, 0.2684 ) }
    dend_32 { pt3dadd( 375.082, 615.948, 47.8296, 0.2626 ) }
    dend_32 { pt3dadd( 376.206, 615.767, 48.064, 0.2542 ) }
    dend_32 { pt3dadd( 377.33, 615.588, 48.2798, 0.2288 ) }
    dend_32 { pt3dadd( 378.455, 615.407, 48.7001, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 84/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 356.231, 618.461, 44.3293, 0.2746 ) }
    dend_31 { pt3dadd( 356.359, 618.825, 44.7675, 0.2746 ) }
    dend_31 { pt3dadd( 356.739, 619.904, 45.0612, 0.2746 ) }
    dend_31 { pt3dadd( 357.119, 620.983, 45.2472, 0.2746 ) }
    dend_31 { pt3dadd( 357.457, 622.076, 45.3572, 0.2746 ) }
    dend_31 { pt3dadd( 357.775, 623.176, 45.4023, 0.2746 ) }
    dend_31 { pt3dadd( 358.091, 624.275, 45.4073, 0.2746 ) }
    dend_31 { pt3dadd( 358.333, 625.393, 45.4146, 0.2746 ) }
    dend_31 { pt3dadd( 358.493, 626.525, 45.4247, 0.2746 ) }
    dend_31 { pt3dadd( 358.649, 627.659, 45.4387, 0.2746 ) }
    dend_31 { pt3dadd( 358.804, 628.792, 45.4583, 0.2746 ) }
    dend_31 { pt3dadd( 358.905, 629.931, 45.4857, 0.2746 ) }
    dend_31 { pt3dadd( 358.691, 631.053, 45.5244, 0.2746 ) }
    dend_31 { pt3dadd( 358.467, 632.174, 45.5778, 0.2746 ) }
    dend_31 { pt3dadd( 358.448, 633.318, 45.6518, 0.2746 ) }
    dend_31 { pt3dadd( 358.44, 634.461, 45.7568, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 358.432, 635.605, 45.9071, 0.2746 ) }
    dend_31 { pt3dadd( 358.424, 636.749, 46.1157, 0.2746 ) }
    dend_31 { pt3dadd( 358.428, 637.893, 46.387, 0.2746 ) }
    dend_31 { pt3dadd( 358.408, 639.034, 46.7485, 0.2746 ) }
    dend_31 { pt3dadd( 358.185, 639.864, 47.4124, 0.2746 ) }
    dend_31 { pt3dadd( 357.958, 640.69, 48.284, 0.2744 ) }
    dend_31 { pt3dadd( 357.739, 641.548, 49.2579, 0.2744 ) }
    dend_31 { pt3dadd( 357.7, 642.691, 50.0004, 0.2742 ) }
    dend_31 { pt3dadd( 357.661, 643.834, 50.5274, 0.274 ) }
    dend_31 { pt3dadd( 357.622, 644.978, 50.8567, 0.2736 ) }
    dend_31 { pt3dadd( 357.587, 646.121, 51.0138, 0.2728 ) }
    dend_31 { pt3dadd( 357.617, 647.265, 51.063, 0.2712 ) }
    dend_31 { pt3dadd( 357.645, 648.409, 51.063, 0.2684 ) }
    dend_31 { pt3dadd( 357.579, 649.551, 51.063, 0.2626 ) }
    dend_31 { pt3dadd( 357.5, 650.692, 51.063, 0.2542 ) }
    dend_31 { pt3dadd( 357.521, 651.835, 51.063, 0.2288 ) }
    dend_31 { pt3dadd( 357.552, 652.979, 51.063, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 17/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 289.318, 572.975, 25.2333, 0.3528 ) }
    dend_24 { pt3dadd( 288.815, 572.618, 25.1345, 0.3202 ) }
    dend_24 { pt3dadd( 287.742, 572.444, 24.9626, 0.3846 ) }
    dend_24 { pt3dadd( 286.644, 572.216, 24.7892, 0.3548 ) }
    dend_24 { pt3dadd( 285.682, 571.723, 24.766, 0.3384 ) }
    dend_24 { pt3dadd( 285.017, 570.956, 24.9354, 0.3478 ) }
    dend_24 { pt3dadd( 284.178, 570.262, 25.1686, 0.4006 ) }
    dend_24 { pt3dadd( 283.115, 569.914, 25.2378, 0.5554 ) }
    dend_24 { pt3dadd( 282.093, 569.443, 25.1432, 0.5672 ) }
    dend_24 { pt3dadd( 281.093, 568.949, 24.8844, 0.5514 ) }
    dend_24 { pt3dadd( 280.008, 568.63, 24.5104, 0.4754 ) }
    dend_24 { pt3dadd( 278.985, 568.235, 24.0257, 0.5622 ) }
    dend_24 { pt3dadd( 278.15, 567.537, 23.4794, 0.533 ) }
    dend_24 { pt3dadd( 277.486, 566.655, 22.9477, 0.486 ) }
    dend_24 { pt3dadd( 276.793, 565.846, 22.468, 0.3638 ) }
    dend_24 { pt3dadd( 275.873, 565.256, 22.0629, 0.3082 ) }
    dend_24 { pt3dadd( 275.127, 564.446, 21.7084, 0.29 ) }
    dend_24 { pt3dadd( 274.266, 563.734, 21.5379, 0.3028 ) }
    dend_24 { pt3dadd( 273.326, 563.269, 21.5751, 0.3292 ) }
    dend_24 { pt3dadd( 272.456, 562.722, 21.6541, 0.3652 ) }
    dend_24 { pt3dadd( 272.112, 561.742, 21.5561, 0.4936 ) }
    dend_24 { pt3dadd( 272.079, 560.641, 21.4026, 0.4336 ) }
    dend_24 { pt3dadd( 271.761, 559.647, 21.124, 0.396 ) }
    dend_24 { pt3dadd( 271.306, 558.652, 20.7141, 0.4256 ) }
    dend_24 { pt3dadd( 270.524, 557.883, 20.2765, 0.4572 ) }
    dend_24 { pt3dadd( 269.573, 557.248, 19.8895, 0.3996 ) }
    dend_24 { pt3dadd( 268.799, 556.431, 19.5152, 0.4002 ) }
    dend_24 { pt3dadd( 268.555, 555.352, 19.0893, 0.3362 ) }
    dend_24 { pt3dadd( 268.311, 554.275, 18.6402, 0.3044 ) }
    dend_24 { pt3dadd( 267.762, 553.301, 18.2, 0.2826 ) }
    dend_24 { pt3dadd( 267.141, 552.369, 17.7792, 0.2896 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 289.318, 572.975, 25.2333, 0.3528 ) }
    dend_23 { pt3dadd( 288.565, 572.685, 24.4306, 0.4576 ) }
    dend_23 { pt3dadd( 287.525, 572.43, 23.2182, 0.413 ) }
    dend_23 { pt3dadd( 286.435, 572.532, 22.7063, 0.425 ) }
    dend_23 { pt3dadd( 285.322, 572.728, 22.1589, 0.383 ) }
    dend_23 { pt3dadd( 284.318, 572.563, 21.4976, 0.388 ) }
    dend_23 { pt3dadd( 283.356, 572.12, 20.8443, 0.4528 ) }
    dend_23 { pt3dadd( 282.923, 571.885, 19.8836, 0.532 ) }
    dend_23 { pt3dadd( 281.951, 571.641, 18.8969, 0.4194 ) }
    dend_23 { pt3dadd( 281.06, 571.129, 17.9612, 0.3266 ) }
    dend_23 { pt3dadd( 280.232, 570.375, 17.2262, 0.277 ) }
    dend_23 { pt3dadd( 279.228, 569.967, 16.5757, 0.279 ) }
    dend_23 { pt3dadd( 278.308, 569.543, 16.1039, 0.2828 ) }
    dend_23 { pt3dadd( 277.331, 569.095, 15.8822, 0.2896 ) }
    dend_23 { pt3dadd( 276.213, 569.181, 15.7592, 0.3024 ) }
    dend_23 { pt3dadd( 275.075, 569.15, 15.6089, 0.3272 ) }
    dend_23 { pt3dadd( 273.975, 569.156, 15.3174, 0.3676 ) }
    dend_23 { pt3dadd( 273.049, 569.346, 14.8033, 0.4694 ) }
    dend_23 { pt3dadd( 272.105, 568.764, 14.2971, 0.5268 ) }
    dend_23 { pt3dadd( 270.988, 568.783, 13.8076, 0.5846 ) }
    dend_23 { pt3dadd( 269.867, 568.894, 13.3888, 0.4706 ) }
    dend_23 { pt3dadd( 268.771, 568.702, 12.9718, 0.4176 ) }
    dend_23 { pt3dadd( 267.674, 568.522, 12.5818, 0.4664 ) }
    dend_23 { pt3dadd( 266.563, 568.546, 12.1702, 0.5282 ) }
    dend_23 { pt3dadd( 265.481, 568.402, 11.6861, 0.5536 ) }
    dend_23 { pt3dadd( 264.398, 568.091, 11.2263, 0.5762 ) }
    dend_23 { pt3dadd( 263.429, 567.517, 10.8066, 0.5084 ) }
    dend_23 { pt3dadd( 262.777, 566.775, 9.6443, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 76/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 266.938, 575.569, 34.3608, 0.6902 ) }
    dend_21 { pt3dadd( 265.574, 575.978, 35.3973, 0.2288 ) }
    dend_21 { pt3dadd( 265.164, 576.963, 35.6129, 0.291 ) }
    dend_21 { pt3dadd( 264.859, 578.062, 35.7986, 0.3048 ) }
    dend_21 { pt3dadd( 264.108, 578.891, 35.957, 0.3328 ) }
    dend_21 { pt3dadd( 263.038, 579.238, 36.0937, 0.3718 ) }
    dend_21 { pt3dadd( 262.144, 579.895, 36.2855, 0.507 ) }
    dend_21 { pt3dadd( 261.116, 580.373, 36.475, 0.452 ) }
    dend_21 { pt3dadd( 260.038, 580.644, 36.6825, 0.4608 ) }
    dend_21 { pt3dadd( 259.285, 581.064, 36.7769, 0.3974 ) }
    dend_21 { pt3dadd( 258.369, 581.159, 37.0294, 0.4378 ) }
    dend_21 { pt3dadd( 257.291, 581.326, 37.2462, 0.4318 ) }
    dend_21 { pt3dadd( 256.262, 581.729, 37.5035, 0.3574 ) }
    dend_21 { pt3dadd( 255.156, 581.86, 37.772, 0.2966 ) }
    dend_21 { pt3dadd( 254.017, 581.917, 38.0246, 0.2684 ) }
    dend_21 { pt3dadd( 252.885, 581.86, 38.2071, 0.2626 ) }
    dend_21 { pt3dadd( 251.798, 582.136, 38.3037, 0.2542 ) }
    dend_21 { pt3dadd( 250.721, 582.107, 38.4986, 0.2288 ) }
    dend_21 { pt3dadd( 249.697, 581.599, 38.808, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 95/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 266.938, 575.569, 34.3608, 0.6902 ) }
    dend_20 { pt3dadd( 266.049, 575.451, 34.7435, 0.6702 ) }
    dend_20 { pt3dadd( 265.334, 574.803, 35.2864, 0.5408 ) }
    dend_20 { pt3dadd( 264.694, 574.321, 35.966, 0.5198 ) }
    dend_20 { pt3dadd( 263.7, 574.0, 36.5448, 0.563 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_20 { pt3dadd( 262.847, 573.7, 37.1843, 0.4718 ) }
    dend_20 { pt3dadd( 262.152, 572.92, 37.8487, 0.4492 ) }
    dend_20 { pt3dadd( 262.549, 572.341, 38.4174, 0.3822 ) }
    dend_20 { pt3dadd( 261.75, 571.619, 38.8312, 0.379 ) }
    dend_20 { pt3dadd( 260.64, 571.425, 39.0743, 0.4722 ) }
    dend_20 { pt3dadd( 259.516, 571.426, 39.2538, 0.3932 ) }
    dend_20 { pt3dadd( 258.446, 571.163, 39.4156, 0.3254 ) }
    dend_20 { pt3dadd( 257.349, 570.903, 39.4962, 0.2746 ) }
    dend_20 { pt3dadd( 256.249, 570.625, 39.4937, 0.2746 ) }
    dend_20 { pt3dadd( 255.247, 570.093, 39.4209, 0.2746 ) }
    dend_20 { pt3dadd( 254.265, 569.51, 39.2904, 0.2746 ) }
    dend_20 { pt3dadd( 253.267, 568.952, 39.118, 0.2746 ) }
    dend_20 { pt3dadd( 252.266, 568.409, 38.88, 0.2746 ) }
    dend_20 { pt3dadd( 251.149, 568.213, 38.6182, 0.2746 ) }
    dend_20 { pt3dadd( 250.18, 567.814, 38.2194, 0.2746 ) }
    dend_20 { pt3dadd( 249.39, 567.308, 37.6648, 0.2746 ) }
    dend_20 { pt3dadd( 248.271, 567.081, 37.2358, 0.2746 ) }
    dend_20 { pt3dadd( 247.138, 566.977, 36.9216, 0.2746 ) }
    dend_20 { pt3dadd( 246.111, 566.481, 36.7128, 0.2746 ) }
    dend_20 { pt3dadd( 245.157, 565.856, 36.5926, 0.2746 ) }
    dend_20 { pt3dadd( 244.135, 565.345, 36.5481, 0.2746 ) }
    dend_20 { pt3dadd( 243.196, 564.694, 36.5442, 0.2746 ) }
    dend_20 { pt3dadd( 242.3, 563.987, 36.5386, 0.2746 ) }
    dend_20 { pt3dadd( 241.33, 563.382, 36.5308, 0.2746 ) }
    dend_20 { pt3dadd( 240.394, 562.726, 36.5196, 0.2746 ) }
    dend_20 { pt3dadd( 239.376, 562.221, 36.5042, 0.2746 ) }
    dend_20 { pt3dadd( 238.335, 561.829, 36.4832, 0.2746 ) }
    dend_20 { pt3dadd( 237.547, 561.0, 36.4538, 0.2746 ) }
    dend_20 { pt3dadd( 236.689, 560.252, 36.4106, 0.2746 ) }
    dend_20 { pt3dadd( 235.704, 559.673, 36.3496, 0.2746 ) }
    dend_20 { pt3dadd( 234.757, 559.066, 36.2698, 0.2746 ) }
    dend_20 { pt3dadd( 233.956, 558.253, 36.1718, 0.2746 ) }
    dend_20 { pt3dadd( 233.202, 557.458, 36.0055, 0.2746 ) }
    dend_20 { pt3dadd( 232.555, 556.629, 35.702, 0.2746 ) }
    dend_20 { pt3dadd( 232.13, 555.653, 35.4091, 0.2746 ) }
    dend_20 { pt3dadd( 231.844, 554.547, 35.1854, 0.2746 ) }
    dend_20 { pt3dadd( 231.551, 553.441, 35.0263, 0.2746 ) }
    dend_20 { pt3dadd( 231.233, 552.343, 34.9266, 0.2746 ) }
    dend_20 { pt3dadd( 230.732, 551.32, 34.8799, 0.2746 ) }
    dend_20 { pt3dadd( 230.312, 550.261, 34.8709, 0.2746 ) }
    dend_20 { pt3dadd( 229.585, 549.414, 34.8709, 0.2746 ) }
    dend_20 { pt3dadd( 229.337, 548.346, 34.8709, 0.2746 ) }
    dend_20 { pt3dadd( 229.308, 547.203, 34.8709, 0.2746 ) }
    dend_20 { pt3dadd( 228.895, 546.151, 34.8709, 0.2748 ) }
    dend_20 { pt3dadd( 227.983, 545.495, 34.8709, 0.275 ) }
    dend_20 { pt3dadd( 227.328, 544.567, 34.8709, 0.2752 ) }
    dend_20 { pt3dadd( 226.967, 543.482, 34.8709, 0.2758 ) }
    dend_20 { pt3dadd( 226.336, 542.528, 34.8709, 0.2768 ) }
    dend_20 { pt3dadd( 225.775, 541.532, 34.8709, 0.2796 ) }
    dend_20 { pt3dadd( 225.082, 540.622, 34.8709, 0.2796 ) }
    dend_20 { pt3dadd( 224.351, 539.742, 34.8709, 0.305 ) }
    dend_20 { pt3dadd( 223.597, 538.881, 34.8709, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 52/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 297.479, 606.016, 26.2668, 0.6474 ) }
    dend_16 { pt3dadd( 297.975, 605.759, 24.5395, 0.6864 ) }
    dend_16 { pt3dadd( 297.736, 605.822, 21.9402, 0.4448 ) }
    dend_16 { pt3dadd( 297.037, 605.861, 20.8284, 0.3268 ) }
    dend_16 { pt3dadd( 296.416, 606.161, 19.6062, 0.2772 ) }
    dend_16 { pt3dadd( 295.883, 606.52, 18.4041, 0.2796 ) }
    dend_16 { pt3dadd( 294.8, 606.723, 17.6274, 0.2838 ) }
    dend_16 { pt3dadd( 293.763, 606.601, 17.3555, 0.2916 ) }
    dend_16 { pt3dadd( 292.848, 606.66, 17.5529, 0.3058 ) }
    dend_16 { pt3dadd( 291.906, 606.942, 18.0124, 0.3348 ) }
    dend_16 { pt3dadd( 290.839, 607.203, 18.4859, 0.3758 ) }
    dend_16 { pt3dadd( 289.995, 607.823, 18.7393, 0.513 ) }
    dend_16 { pt3dadd( 289.296, 608.629, 18.6623, 0.4706 ) }
    dend_16 { pt3dadd( 288.335, 609.007, 18.3361, 0.4594 ) }
    dend_16 { pt3dadd( 287.295, 609.378, 17.8993, 0.5686 ) }
    dend_16 { pt3dadd( 286.686, 610.199, 17.5375, 0.5988 ) }
    dend_16 { pt3dadd( 286.488, 611.24, 17.1486, 0.575 ) }
    dend_16 { pt3dadd( 286.149, 612.23, 16.6188, 0.69 ) }
    dend_16 { pt3dadd( 285.66, 613.155, 15.9586, 0.8178 ) }
    dend_16 { pt3dadd( 285.184, 614.14, 15.2432, 0.7814 ) }
    dend_16 { pt3dadd( 284.738, 615.179, 14.5177, 0.6694 ) }
    dend_16 { pt3dadd( 284.53, 616.227, 13.7315, 0.4482 ) }
    dend_16 { pt3dadd( 284.753, 617.219, 12.8873, 0.3332 ) }
    dend_16 { pt3dadd( 284.877, 618.102, 11.9627, 0.2886 ) }
    dend_16 { pt3dadd( 284.585, 618.977, 11.0127, 0.3018 ) }
    dend_16 { pt3dadd( 284.262, 620.037, 10.2628, 0.3198 ) }
    dend_16 { pt3dadd( 283.792, 621.075, 9.7535, 0.384 ) }
    dend_16 { pt3dadd( 283.083, 621.949, 9.3786, 0.3534 ) }
    dend_16 { pt3dadd( 282.18, 622.627, 9.1176, 0.336 ) }
    dend_16 { pt3dadd( 281.095, 622.955, 9.0003, 0.342 ) }
    dend_16 { pt3dadd( 279.955, 623.02, 8.9824, 0.396 ) }
    dend_16 { pt3dadd( 278.833, 623.026, 9.0625, 0.5172 ) }
    dend_16 { pt3dadd( 277.701, 623.045, 9.1874, 0.6408 ) }
    dend_16 { pt3dadd( 276.579, 623.251, 9.2898, 0.6726 ) }
    dend_16 { pt3dadd( 275.46, 623.375, 9.2722, 0.5454 ) }
    dend_16 { pt3dadd( 274.34, 623.186, 9.2296, 0.528 ) }
    dend_16 { pt3dadd( 273.226, 623.412, 9.149, 0.579 ) }
    dend_16 { pt3dadd( 272.291, 624.055, 8.9989, 0.4972 ) }
    dend_16 { pt3dadd( 271.393, 624.753, 8.8054, 0.517 ) }
    dend_16 { pt3dadd( 270.498, 625.334, 8.4949, 0.4068 ) }
    dend_16 { pt3dadd( 270.09, 626.395, 7.943, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 93/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 297.479, 606.016, 26.2668, 0.6474 ) }
    dend_15 { pt3dadd( 297.52, 606.75, 26.4342, 0.671 ) }
    dend_15 { pt3dadd( 297.645, 607.709, 26.3701, 0.6102 ) }
    dend_15 { pt3dadd( 297.247, 608.542, 26.5261, 0.5484 ) }
    dend_15 { pt3dadd( 296.714, 609.537, 26.6647, 0.6434 ) }
    dend_15 { pt3dadd( 296.135, 610.522, 26.7394, 0.717 ) }
    dend_15 { pt3dadd( 295.571, 611.509, 26.7179, 0.665 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( 294.818, 612.371, 26.598, 0.798 ) }
    dend_15 { pt3dadd( 294.211, 613.302, 26.3502, 0.845 ) }
    dend_15 { pt3dadd( 293.738, 614.05, 25.8073, 0.7576 ) }
    dend_15 { pt3dadd( 293.573, 614.858, 25.0659, 0.5266 ) }
    dend_15 { pt3dadd( 293.406, 615.887, 24.3468, 0.4342 ) }
    dend_15 { pt3dadd( 292.551, 616.457, 23.8053, 0.4624 ) }
    dend_15 { pt3dadd( 291.729, 616.294, 23.6888, 0.6902 ) }
    dend_15 { pt3dadd( 291.377, 617.352, 23.6922, 0.7186 ) }
    dend_15 { pt3dadd( 290.98, 618.263, 23.798, 0.624 ) }
    dend_15 { pt3dadd( 290.289, 619.079, 23.7384, 0.4776 ) }
    dend_15 { pt3dadd( 289.388, 619.2, 23.6452, 0.523 ) }
    dend_15 { pt3dadd( 288.638, 619.214, 23.308, 0.441 ) }
    dend_15 { pt3dadd( 287.96, 619.948, 23.0353, 0.41 ) }
    dend_15 { pt3dadd( 287.014, 620.57, 22.8077, 0.4514 ) }
    dend_15 { pt3dadd( 286.466, 621.565, 22.5826, 0.506 ) }
    dend_15 { pt3dadd( 285.998, 622.471, 22.2407, 0.4844 ) }
    dend_15 { pt3dadd( 285.578, 623.121, 21.777, 0.584 ) }
    dend_15 { pt3dadd( 284.673, 623.713, 21.53, 0.5492 ) }
    dend_15 { pt3dadd( 283.713, 624.313, 21.3111, 0.634 ) }
    dend_15 { pt3dadd( 282.845, 625.052, 21.1369, 0.7534 ) }
    dend_15 { pt3dadd( 281.943, 625.753, 21.0283, 0.9286 ) }
    dend_15 { pt3dadd( 281.036, 626.446, 20.9521, 0.7912 ) }
    dend_15 { pt3dadd( 280.145, 627.161, 20.8928, 0.7212 ) }
    dend_15 { pt3dadd( 279.254, 627.866, 20.8659, 0.609 ) }
    dend_15 { pt3dadd( 278.466, 628.542, 20.7777, 0.5458 ) }
    dend_15 { pt3dadd( 277.943, 629.393, 20.6889, 0.6412 ) }
    dend_15 { pt3dadd( 277.059, 630.058, 20.6839, 0.6998 ) }
    dend_15 { pt3dadd( 276.118, 630.71, 20.7035, 0.6976 ) }
    dend_15 { pt3dadd( 275.283, 631.49, 20.7343, 0.5446 ) }
    dend_15 { pt3dadd( 274.613, 632.415, 20.7606, 0.5268 ) }
    dend_15 { pt3dadd( 273.871, 633.267, 20.7312, 0.5748 ) }
    dend_15 { pt3dadd( 272.869, 633.202, 21.1053, 0.5006 ) }
    dend_15 { pt3dadd( 272.591, 634.221, 21.1736, 0.4688 ) }
    dend_15 { pt3dadd( 272.624, 635.288, 21.0224, 0.582 ) }
    dend_15 { pt3dadd( 272.624, 636.391, 20.7458, 0.6424 ) }
    dend_15 { pt3dadd( 272.509, 637.519, 20.4238, 0.5652 ) }
    dend_15 { pt3dadd( 272.212, 638.613, 20.0609, 0.4258 ) }
    dend_15 { pt3dadd( 271.924, 639.716, 19.7644, 0.3766 ) }
    dend_15 { pt3dadd( 271.586, 640.8, 19.5882, 0.4152 ) }
    dend_15 { pt3dadd( 271.437, 641.726, 19.2643, 0.5424 ) }
    dend_15 { pt3dadd( 271.795, 642.751, 18.9095, 0.7372 ) }
    dend_15 { pt3dadd( 272.313, 643.747, 18.7253, 0.6102 ) }
    dend_15 { pt3dadd( 273.223, 644.437, 18.5604, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 43/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 292.445, 581.276, 45.8153, 0.3654 ) }
    dend_11 { pt3dadd( 292.35, 581.417, 46.8098, 0.4576 ) }
    dend_11 { pt3dadd( 291.739, 582.256, 48.1513, 0.5582 ) }
    dend_11 { pt3dadd( 291.086, 582.981, 48.7732, 0.4208 ) }
    dend_11 { pt3dadd( 290.322, 583.795, 49.4004, 0.3294 ) }
    dend_11 { pt3dadd( 289.504, 584.519, 50.02, 0.282 ) }
    dend_11 { pt3dadd( 288.564, 584.87, 50.6439, 0.2882 ) }
    dend_11 { pt3dadd( 287.445, 585.006, 51.1389, 0.3008 ) }
    dend_11 { pt3dadd( 286.328, 585.254, 51.469, 0.3178 ) }
    dend_11 { pt3dadd( 285.268, 585.648, 51.6785, 0.3804 ) }
    dend_11 { pt3dadd( 284.345, 586.31, 51.8176, 0.3466 ) }
    dend_11 { pt3dadd( 283.509, 587.092, 51.9117, 0.3248 ) }
    dend_11 { pt3dadd( 282.64, 587.833, 51.9851, 0.3152 ) }
    dend_11 { pt3dadd( 281.625, 588.304, 52.0646, 0.3754 ) }
    dend_11 { pt3dadd( 280.589, 588.652, 52.2362, 0.3376 ) }
    dend_11 { pt3dadd( 279.564, 589.054, 52.4698, 0.3068 ) }
    dend_11 { pt3dadd( 278.469, 589.384, 52.6688, 0.287 ) }
    dend_11 { pt3dadd( 277.558, 589.985, 52.8343, 0.2986 ) }
    dend_11 { pt3dadd( 276.716, 590.748, 52.9701, 0.314 ) }
    dend_11 { pt3dadd( 275.695, 591.229, 53.081, 0.3732 ) }
    dend_11 { pt3dadd( 274.786, 591.864, 53.1849, 0.3336 ) }
    dend_11 { pt3dadd( 273.832, 592.367, 53.354, 0.2994 ) }
    dend_11 { pt3dadd( 272.871, 592.918, 53.5559, 0.2736 ) }
    dend_11 { pt3dadd( 272.192, 593.812, 53.7242, 0.2728 ) }
    dend_11 { pt3dadd( 271.446, 594.663, 53.8479, 0.2712 ) }
    dend_11 { pt3dadd( 270.493, 595.283, 53.9308, 0.2684 ) }
    dend_11 { pt3dadd( 269.807, 596.157, 53.9764, 0.2626 ) }
    dend_11 { pt3dadd( 268.792, 596.519, 53.9918, 0.2542 ) }
    dend_11 { pt3dadd( 267.761, 597.0, 53.9938, 0.2288 ) }
    dend_11 { pt3dadd( 266.851, 597.688, 53.9938, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 73/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 292.445, 581.276, 45.8153, 0.3654 ) }
    dend_10 { pt3dadd( 291.766, 581.276, 46.1272, 0.3742 ) }
    dend_10 { pt3dadd( 290.656, 581.406, 46.2319, 0.3354 ) }
    dend_10 { pt3dadd( 289.552, 581.63, 46.1482, 0.303 ) }
    dend_10 { pt3dadd( 288.448, 581.858, 45.9427, 0.28 ) }
    dend_10 { pt3dadd( 287.344, 582.084, 45.6551, 0.2846 ) }
    dend_10 { pt3dadd( 286.222, 582.26, 45.3438, 0.2932 ) }
    dend_10 { pt3dadd( 285.088, 582.393, 45.0612, 0.3092 ) }
    dend_10 { pt3dadd( 283.954, 582.523, 44.8207, 0.3382 ) }
    dend_10 { pt3dadd( 282.82, 582.652, 44.62, 0.395 ) }
    dend_10 { pt3dadd( 281.686, 582.781, 44.4508, 0.4854 ) }
    dend_10 { pt3dadd( 280.558, 582.951, 44.3024, 0.726 ) }
    dend_10 { pt3dadd( 279.598, 582.877, 44.2518, 0.8182 ) }
    dend_10 { pt3dadd( 278.531, 582.717, 44.084, 0.6474 ) }
    dend_10 { pt3dadd( 277.464, 582.791, 44.0101, 0.6166 ) }
    dend_10 { pt3dadd( 276.338, 582.83, 43.9947, 0.5454 ) }
    dend_10 { pt3dadd( 275.203, 582.704, 43.9692, 0.4806 ) }
    dend_10 { pt3dadd( 274.065, 582.599, 43.9214, 0.4924 ) }
    dend_10 { pt3dadd( 273.101, 582.394, 43.6724, 0.5596 ) }
    dend_10 { pt3dadd( 272.051, 582.021, 43.4658, 0.4652 ) }
    dend_10 { pt3dadd( 270.944, 581.885, 43.2177, 0.4374 ) }
    dend_10 { pt3dadd( 269.825, 581.663, 43.0646, 0.358 ) }
    dend_10 { pt3dadd( 268.865, 581.042, 42.9862, 0.3456 ) }
    dend_10 { pt3dadd( 267.746, 580.81, 42.973, 0.3546 ) }
    dend_10 { pt3dadd( 266.686, 580.448, 43.078, 0.4446 ) }
    dend_10 { pt3dadd( 265.836, 579.687, 43.2023, 0.4858 ) }
    dend_10 { pt3dadd( 265.025, 578.897, 43.3689, 0.4844 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_10 { pt3dadd( 264.127, 578.207, 43.4734, 0.4026 ) }
    dend_10 { pt3dadd( 263.153, 578.034, 43.5022, 0.4056 ) }
    dend_10 { pt3dadd( 262.077, 578.281, 43.6103, 0.3464 ) }
    dend_10 { pt3dadd( 260.943, 578.292, 43.7234, 0.3242 ) }
    dend_10 { pt3dadd( 259.828, 578.464, 43.801, 0.3142 ) }
    dend_10 { pt3dadd( 258.824, 578.966, 43.9085, 0.3734 ) }
    dend_10 { pt3dadd( 258.186, 579.846, 44.0143, 0.3338 ) }
    dend_10 { pt3dadd( 257.405, 580.563, 44.1692, 0.3 ) }
    dend_10 { pt3dadd( 256.523, 580.877, 44.1714, 0.2746 ) }
    dend_10 { pt3dadd( 255.456, 581.287, 44.1851, 0.2746 ) }
    dend_10 { pt3dadd( 254.359, 581.61, 44.2193, 0.2746 ) }
    dend_10 { pt3dadd( 253.267, 581.948, 44.2758, 0.2746 ) }
    dend_10 { pt3dadd( 252.173, 582.055, 44.3976, 0.2746 ) }
    dend_10 { pt3dadd( 251.078, 581.837, 44.6146, 0.2746 ) }
    dend_10 { pt3dadd( 250.006, 581.533, 44.9002, 0.2746 ) }
    dend_10 { pt3dadd( 249.538, 580.648, 45.1506, 0.2746 ) }
    dend_10 { pt3dadd( 249.314, 579.526, 45.3345, 0.2746 ) }
    dend_10 { pt3dadd( 248.482, 578.994, 45.4574, 0.2746 ) }
    dend_10 { pt3dadd( 247.396, 578.646, 45.5255, 0.2746 ) }
    dend_10 { pt3dadd( 246.868, 577.705, 45.5521, 0.2746 ) }
    dend_10 { pt3dadd( 246.256, 576.744, 45.5571, 0.2746 ) }
    dend_10 { pt3dadd( 245.576, 575.826, 45.5571, 0.2746 ) }
    dend_10 { pt3dadd( 244.79, 574.995, 45.5571, 0.2744 ) }
    dend_10 { pt3dadd( 243.906, 574.27, 45.5571, 0.2744 ) }
    dend_10 { pt3dadd( 242.852, 573.845, 45.5571, 0.2742 ) }
    dend_10 { pt3dadd( 242.399, 572.85, 45.5571, 0.274 ) }
    dend_10 { pt3dadd( 241.541, 572.119, 45.5571, 0.2736 ) }
    dend_10 { pt3dadd( 240.545, 571.556, 45.5571, 0.2728 ) }
    dend_10 { pt3dadd( 239.436, 571.298, 45.5571, 0.2712 ) }
    dend_10 { pt3dadd( 238.674, 570.464, 45.5571, 0.2684 ) }
    dend_10 { pt3dadd( 237.736, 569.81, 45.5571, 0.2626 ) }
    dend_10 { pt3dadd( 236.616, 569.6, 45.5571, 0.2542 ) }
    dend_10 { pt3dadd( 235.473, 569.545, 45.5571, 0.2288 ) }
    dend_10 { pt3dadd( 234.353, 569.315, 45.5571, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 34/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 235.553, 558.472, 43.0396, 0.2746 ) }
    dend_5 { pt3dadd( 234.669, 558.767, 43.4196, 0.2746 ) }
    dend_5 { pt3dadd( 233.584, 559.128, 43.6332, 0.2746 ) }
    dend_5 { pt3dadd( 232.499, 559.49, 43.72, 0.2746 ) }
    dend_5 { pt3dadd( 231.413, 559.852, 43.757, 0.2746 ) }
    dend_5 { pt3dadd( 230.408, 560.395, 43.8074, 0.2746 ) }
    dend_5 { pt3dadd( 229.492, 561.081, 43.8796, 0.2746 ) }
    dend_5 { pt3dadd( 228.749, 561.948, 43.9846, 0.2746 ) }
    dend_5 { pt3dadd( 228.046, 562.85, 44.1286, 0.2746 ) }
    dend_5 { pt3dadd( 227.371, 563.775, 44.3122, 0.2746 ) }
    dend_5 { pt3dadd( 226.738, 564.726, 44.5427, 0.2746 ) }
    dend_5 { pt3dadd( 226.204, 565.488, 45.0285, 0.2746 ) }
    dend_5 { pt3dadd( 225.673, 566.243, 45.6926, 0.2746 ) }
    dend_5 { pt3dadd( 224.861, 567.035, 46.2498, 0.2744 ) }
    dend_5 { pt3dadd( 223.818, 567.502, 46.6651, 0.2744 ) }
    dend_5 { pt3dadd( 222.757, 567.931, 46.9487, 0.2742 ) }
    dend_5 { pt3dadd( 221.833, 568.606, 47.1128, 0.274 ) }
    dend_5 { pt3dadd( 220.914, 569.286, 47.1722, 0.2736 ) }
    dend_5 { pt3dadd( 220.172, 570.157, 47.1783, 0.2728 ) }
    dend_5 { pt3dadd( 219.454, 571.047, 47.1783, 0.2712 ) }
    dend_5 { pt3dadd( 218.791, 571.981, 47.1783, 0.2684 ) }
    dend_5 { pt3dadd( 218.126, 572.912, 47.1783, 0.2626 ) }
    dend_5 { pt3dadd( 217.452, 573.835, 47.1783, 0.2542 ) }
    dend_5 { pt3dadd( 216.777, 574.759, 47.1783, 0.2288 ) }
    dend_5 { pt3dadd( 216.102, 575.682, 47.1783, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 59/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 235.553, 558.472, 43.0396, 0.2746 ) }
    dend_4 { pt3dadd( 235.898, 558.404, 43.7128, 0.2288 ) }
    dend_4 { pt3dadd( 236.164, 557.776, 45.4625, 0.2746 ) }
    dend_4 { pt3dadd( 236.34, 557.105, 46.3204, 0.2746 ) }
    dend_4 { pt3dadd( 236.569, 556.029, 47.031, 0.2746 ) }
    dend_4 { pt3dadd( 236.802, 554.909, 47.5639, 0.2746 ) }
    dend_4 { pt3dadd( 236.775, 553.768, 47.9324, 0.2746 ) }
    dend_4 { pt3dadd( 236.65, 552.631, 48.153, 0.2746 ) }
    dend_4 { pt3dadd( 236.439, 551.506, 48.2434, 0.2744 ) }
    dend_4 { pt3dadd( 236.175, 550.393, 48.272, 0.2744 ) }
    dend_4 { pt3dadd( 236.004, 549.263, 48.3039, 0.2742 ) }
    dend_4 { pt3dadd( 235.915, 548.122, 48.3482, 0.274 ) }
    dend_4 { pt3dadd( 235.601, 547.024, 48.4072, 0.2736 ) }
    dend_4 { pt3dadd( 235.268, 545.929, 48.4884, 0.2728 ) }
    dend_4 { pt3dadd( 234.918, 544.84, 48.6234, 0.2712 ) }
    dend_4 { pt3dadd( 234.414, 543.815, 48.8015, 0.2684 ) }
    dend_4 { pt3dadd( 233.896, 542.795, 49.012, 0.2626 ) }
    dend_4 { pt3dadd( 233.379, 541.774, 49.2453, 0.2542 ) }
    dend_4 { pt3dadd( 232.852, 540.933, 49.6826, 0.2288 ) }
    dend_4 { pt3dadd( 232.302, 540.216, 51.2366, 0.2288 ) }
    // Section: apic_28, id: apic_28, parent: apic_8 (entry count 79/100)
    apic_28 { pt3dclear() }
    apic_28 { pt3dadd( 330.924, 555.755, 26.0302, 1.1832 ) }
    apic_28 { pt3dadd( 331.875, 555.975, 27.4487, 0.2288 ) }
    apic_28 { pt3dadd( 332.941, 556.248, 27.9955, 0.382 ) }
    apic_28 { pt3dadd( 333.995, 556.662, 28.1624, 0.4882 ) }
    apic_28 { pt3dadd( 334.993, 557.184, 28.3917, 0.6002 ) }
    apic_28 { pt3dadd( 336.014, 557.627, 28.7059, 0.535 ) }
    apic_28 { pt3dadd( 336.994, 558.188, 28.9559, 0.593 ) }
    apic_28 { pt3dadd( 338.079, 558.523, 29.2085, 0.5194 ) }
    apic_28 { pt3dadd( 339.115, 558.804, 29.5722, 0.575 ) }
    apic_28 { pt3dadd( 340.157, 559.141, 29.9975, 0.6614 ) }
    apic_28 { pt3dadd( 341.235, 559.509, 30.3621, 0.6746 ) }
    apic_28 { pt3dadd( 342.253, 560.028, 30.648, 0.7252 ) }
    apic_28 { pt3dadd( 343.343, 560.371, 30.8776, 0.6926 ) }
    apic_28 { pt3dadd( 344.423, 560.748, 31.0554, 0.7878 ) }
    apic_28 { pt3dadd( 345.434, 561.278, 31.2068, 0.6678 ) }
    apic_28 { pt3dadd( 346.198, 562.095, 31.4166, 0.739 ) }
    apic_28 { pt3dadd( 347.005, 562.893, 31.6616, 0.8186 ) }
    apic_28 { pt3dadd( 347.97, 563.503, 31.8912, 0.7628 ) }
    apic_28 { pt3dadd( 348.884, 564.192, 32.1006, 0.7318 ) }
    apic_28 { pt3dadd( 349.586, 565.094, 32.2963, 0.7806 ) }
    apic_28 { pt3dadd( 350.056, 566.129, 32.5111, 1.0414 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_28 { pt3dadd( 350.658, 567.042, 32.814, 1.1566 ) }
    apic_28 { pt3dadd( 351.219, 567.978, 33.1836, 1.098 ) }
    apic_28 { pt3dadd( 351.861, 568.92, 33.4964, 0.9372 ) }
    apic_28 { pt3dadd( 352.461, 569.885, 33.6773, 0.8924 ) }
    apic_28 { pt3dadd( 352.762, 570.968, 33.7302, 0.7246 ) }
    apic_28 { pt3dadd( 353.149, 572.009, 33.8537, 0.824 ) }
    apic_28 { pt3dadd( 353.623, 573.046, 33.9654, 0.8462 ) }
    apic_28 { pt3dadd( 353.821, 574.172, 34.0374, 0.7594 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 8/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 330.924, 555.755, 26.0302, 1.1832 ) }
    apic_9 { pt3dadd( 331.667, 554.877, 26.1321, 1.0988 ) }
    apic_9 { pt3dadd( 332.167, 553.848, 26.0828, 0.9462 ) }
    apic_9 { pt3dadd( 332.327, 552.718, 25.9893, 0.873 ) }
    apic_9 { pt3dadd( 332.373, 551.589, 25.8334, 0.8626 ) }
    apic_9 { pt3dadd( 332.609, 550.485, 25.634, 0.9214 ) }
    apic_9 { pt3dadd( 333.11, 549.458, 25.4685, 0.881 ) }
    apic_9 { pt3dadd( 333.667, 548.458, 25.3464, 0.8452 ) }
    apic_9 { pt3dadd( 334.244, 547.47, 25.265, 0.817 ) }
    apic_9 { pt3dadd( 334.587, 546.379, 25.2196, 0.8092 ) }
    apic_9 { pt3dadd( 334.619, 545.235, 25.2031, 0.808 ) }
    apic_9 { pt3dadd( 334.622, 544.091, 25.2014, 0.74 ) }
    apic_9 { pt3dadd( 334.634, 542.947, 25.2017, 0.9338 ) }
    apic_9 { pt3dadd( 334.71, 541.806, 25.2025, 1.1134 ) }
    apic_9 { pt3dadd( 335.043, 540.712, 25.2036, 1.1736 ) }
    apic_9 { pt3dadd( 335.298, 539.596, 25.205, 1.0082 ) }
    apic_9 { pt3dadd( 335.794, 538.565, 25.207, 0.9034 ) }
    apic_9 { pt3dadd( 336.341, 537.56, 25.2095, 0.872 ) }
    apic_9 { pt3dadd( 336.906, 536.566, 25.2134, 0.9386 ) }
    apic_9 { pt3dadd( 337.272, 535.481, 25.2188, 0.9134 ) }
    apic_9 { pt3dadd( 337.606, 534.388, 25.2263, 0.9014 ) }
    apic_9 { pt3dadd( 337.84, 533.268, 25.2367, 0.9402 ) }
    apic_9 { pt3dadd( 337.939, 532.128, 25.251, 0.9454 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 31/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 267.141, 552.369, 17.7792, 0.2896 ) }
    dend_26 { pt3dadd( 267.321, 552.808, 17.269, 0.2288 ) }
    dend_26 { pt3dadd( 266.623, 552.503, 18.3907, 0.2748 ) }
    dend_26 { pt3dadd( 265.654, 551.955, 18.8577, 0.2752 ) }
    dend_26 { pt3dadd( 264.604, 551.53, 19.3614, 0.2756 ) }
    dend_26 { pt3dadd( 263.663, 551.44, 20.0491, 0.2764 ) }
    dend_26 { pt3dadd( 262.588, 551.239, 20.7407, 0.278 ) }
    dend_26 { pt3dadd( 261.506, 550.881, 21.3217, 0.2812 ) }
    dend_26 { pt3dadd( 260.919, 550.016, 21.9265, 0.2864 ) }
    dend_26 { pt3dadd( 260.267, 549.141, 22.5, 0.2978 ) }
    dend_26 { pt3dadd( 259.436, 548.356, 22.9118, 0.3122 ) }
    dend_26 { pt3dadd( 258.581, 547.595, 23.1846, 0.37 ) }
    dend_26 { pt3dadd( 257.678, 546.893, 23.3674, 0.3276 ) }
    dend_26 { pt3dadd( 256.771, 546.201, 23.5136, 0.2882 ) }
    dend_26 { pt3dadd( 255.814, 545.587, 23.6412, 0.2542 ) }
    dend_26 { pt3dadd( 254.733, 545.212, 23.7233, 0.2288 ) }
    dend_26 { pt3dadd( 253.652, 544.838, 23.8428, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 48/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 267.141, 552.369, 17.7792, 0.2896 ) }
    dend_25 { pt3dadd( 266.423, 551.235, 17.2511, 0.3024 ) }
    dend_25 { pt3dadd( 265.785, 550.286, 17.1122, 0.3268 ) }
    dend_25 { pt3dadd( 265.022, 549.432, 17.0349, 0.3684 ) }
    dend_25 { pt3dadd( 264.253, 548.587, 16.9943, 0.4636 ) }
    dend_25 { pt3dadd( 263.468, 547.754, 16.9694, 0.552 ) }
    dend_25 { pt3dadd( 262.645, 546.96, 16.938, 0.4574 ) }
    dend_25 { pt3dadd( 261.812, 546.177, 16.8991, 0.3932 ) }
    dend_25 { pt3dadd( 260.864, 545.545, 16.8599, 0.4206 ) }
    dend_25 { pt3dadd( 259.903, 544.926, 16.8213, 0.4466 ) }
    dend_25 { pt3dadd( 259.007, 544.227, 16.814, 0.386 ) }
    dend_25 { pt3dadd( 258.074, 543.676, 16.7345, 0.344 ) }
    dend_25 { pt3dadd( 256.996, 543.378, 16.6289, 0.382 ) }
    dend_25 { pt3dadd( 255.882, 543.117, 16.5539, 0.3494 ) }
    dend_25 { pt3dadd( 254.805, 542.738, 16.508, 0.3298 ) }
    dend_25 { pt3dadd( 253.685, 542.604, 16.4878, 0.3246 ) }
    dend_25 { pt3dadd( 252.613, 542.306, 16.5474, 0.3928 ) }
    dend_25 { pt3dadd( 251.524, 541.98, 16.6326, 0.3706 ) }
    dend_25 { pt3dadd( 250.392, 541.987, 16.6986, 0.3638 ) }
    dend_25 { pt3dadd( 249.249, 542.009, 16.7429, 0.4132 ) }
    dend_25 { pt3dadd( 248.111, 541.912, 16.7588, 0.433 ) }
    dend_25 { pt3dadd( 246.977, 541.905, 16.7222, 0.36 ) }
    dend_25 { pt3dadd( 245.87, 541.662, 16.6891, 0.301 ) }
    dend_25 { pt3dadd( 245.132, 540.836, 16.6928, 0.2766 ) }
    dend_25 { pt3dadd( 244.068, 540.555, 16.7653, 0.2784 ) }
    dend_25 { pt3dadd( 242.931, 540.54, 16.9128, 0.2818 ) }
    dend_25 { pt3dadd( 241.794, 540.654, 17.0923, 0.2876 ) }
    dend_25 { pt3dadd( 240.667, 540.76, 17.3396, 0.2998 ) }
    dend_25 { pt3dadd( 239.547, 540.781, 17.6518, 0.316 ) }
    dend_25 { pt3dadd( 238.419, 540.667, 17.9738, 0.377 ) }
    dend_25 { pt3dadd( 237.284, 540.558, 18.2717, 0.3406 ) }
    dend_25 { pt3dadd( 236.179, 540.839, 18.5318, 0.3126 ) }
    dend_25 { pt3dadd( 235.046, 540.997, 18.7608, 0.2976 ) }
    dend_25 { pt3dadd( 233.943, 541.2, 19.0268, 0.3184 ) }
    dend_25 { pt3dadd( 232.962, 541.772, 19.2889, 0.3514 ) }
    dend_25 { pt3dadd( 231.852, 542.045, 19.5191, 0.4382 ) }
    dend_25 { pt3dadd( 230.717, 542.129, 19.7442, 0.4742 ) }
    dend_25 { pt3dadd( 229.618, 541.992, 20.039, 0.4618 ) }
    dend_25 { pt3dadd( 228.613, 542.073, 20.3, 0.3662 ) }
    dend_25 { pt3dadd( 227.844, 542.791, 20.6438, 0.3128 ) }
    dend_25 { pt3dadd( 226.764, 543.039, 20.9692, 0.298 ) }
    dend_25 { pt3dadd( 225.625, 542.956, 21.2136, 0.319 ) }
    dend_25 { pt3dadd( 224.677, 543.198, 21.469, 0.3528 ) }
    dend_25 { pt3dadd( 223.975, 544.05, 21.7344, 0.4396 ) }
    dend_25 { pt3dadd( 223.113, 544.782, 21.9548, 0.4842 ) }
    dend_25 { pt3dadd( 222.069, 545.197, 22.1539, 0.4444 ) }
    dend_25 { pt3dadd( 220.969, 545.234, 22.409, 0.5088 ) }
    dend_25 { pt3dadd( 219.913, 545.443, 22.7251, 0.4136 ) }
    dend_25 { pt3dadd( 218.944, 545.896, 22.9197, 0.3642 ) }
    dend_25 { pt3dadd( 217.937, 546.401, 23.1619, 0.3408 ) }
    dend_25 { pt3dadd( 216.95, 546.811, 23.5553, 0.4252 ) }
    dend_25 { pt3dadd( 215.861, 547.116, 23.9599, 0.4192 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_25 { pt3dadd( 214.72, 547.196, 24.3407, 0.5094 ) }
    dend_25 { pt3dadd( 213.66, 547.356, 24.7789, 0.4148 ) }
    dend_25 { pt3dadd( 212.89, 547.319, 25.4383, 0.3652 ) }
    dend_25 { pt3dadd( 212.003, 546.792, 26.0854, 0.3498 ) }
    dend_25 { pt3dadd( 210.872, 546.651, 26.6076, 0.4058 ) }
    dend_25 { pt3dadd( 209.758, 546.437, 27.1085, 0.5586 ) }
    dend_25 { pt3dadd( 208.683, 546.127, 27.6268, 0.6042 ) }
    dend_25 { pt3dadd( 207.65, 545.716, 28.1546, 0.4696 ) }
    dend_25 { pt3dadd( 206.646, 545.404, 28.7269, 0.3676 ) }
    dend_25 { pt3dadd( 205.738, 545.06, 29.3933, 0.3784 ) }
    dend_25 { pt3dadd( 205.178, 544.201, 30.0283, 0.3432 ) }
    dend_25 { pt3dadd( 204.76, 543.17, 30.4646, 0.317 ) }
    dend_25 { pt3dadd( 204.276, 542.159, 30.7056, 0.307 ) }
    dend_25 { pt3dadd( 203.537, 541.717, 31.0274, 0.3304 ) }
    dend_25 { pt3dadd( 202.464, 541.685, 31.2127, 0.3982 ) }
    dend_25 { pt3dadd( 201.461, 542.175, 31.3303, 0.4068 ) }
    dend_25 { pt3dadd( 201.424, 543.288, 31.4978, 0.305 ) }
    dend_25 { pt3dadd( 201.424, 544.432, 31.7727, 0.2288 ) }
    // Section: apic_30, id: apic_30, parent: apic_28 (entry count 18/100)
    apic_30 { pt3dclear() }
    apic_30 { pt3dadd( 353.821, 574.172, 34.0374, 0.7594 ) }
    apic_30 { pt3dadd( 353.702, 575.349, 34.0942, 0.6864 ) }
    apic_30 { pt3dadd( 353.282, 576.414, 34.0656, 0.5078 ) }
    apic_30 { pt3dadd( 352.894, 577.488, 34.0343, 0.4332 ) }
    apic_30 { pt3dadd( 352.728, 578.619, 33.9937, 0.5248 ) }
    apic_30 { pt3dadd( 352.638, 579.752, 33.9172, 0.4936 ) }
    apic_30 { pt3dadd( 352.757, 580.825, 33.7324, 0.497 ) }
    apic_30 { pt3dadd( 353.029, 581.842, 33.549, 0.6638 ) }
    apic_30 { pt3dadd( 353.226, 582.941, 33.4488, 0.6514 ) }
    apic_30 { pt3dadd( 353.308, 584.077, 33.369, 0.5882 ) }
    apic_30 { pt3dadd( 352.958, 585.098, 33.3595, 0.6662 ) }
    apic_30 { pt3dadd( 352.46, 586.101, 33.3486, 0.7782 ) }
    apic_30 { pt3dadd( 352.137, 587.191, 33.329, 0.6874 ) }
    apic_30 { pt3dadd( 351.886, 588.289, 33.3528, 0.5952 ) }
    apic_30 { pt3dadd( 351.656, 589.399, 33.3757, 0.5106 ) }
    apic_30 { pt3dadd( 351.445, 590.515, 33.3113, 0.6224 ) }
    apic_30 { pt3dadd( 351.233, 591.636, 33.1878, 0.6696 ) }
    apic_30 { pt3dadd( 351.338, 592.746, 32.9798, 0.6176 ) }
    apic_30 { pt3dadd( 351.972, 593.384, 32.5438, 0.5138 ) }
    apic_30 { pt3dadd( 352.991, 593.784, 32.1054, 0.5846 ) }
    apic_30 { pt3dadd( 354.108, 594.024, 31.7484, 0.5818 ) }
    apic_30 { pt3dadd( 354.707, 594.943, 31.4656, 0.5422 ) }
    apic_30 { pt3dadd( 355.083, 595.993, 31.1797, 0.6348 ) }
    apic_30 { pt3dadd( 355.337, 597.094, 30.9397, 0.688 ) }
    apic_30 { pt3dadd( 355.66, 598.18, 30.8339, 0.675 ) }
    apic_30 { pt3dadd( 355.974, 599.233, 30.833, 0.5066 ) }
    apic_30 { pt3dadd( 356.111, 600.363, 30.7924, 0.4366 ) }
    apic_30 { pt3dadd( 356.42, 601.444, 30.7555, 0.503 ) }
    apic_30 { pt3dadd( 356.652, 602.426, 30.6177, 0.591 ) }
    apic_30 { pt3dadd( 357.073, 603.293, 30.4164, 0.694 ) }
    apic_30 { pt3dadd( 357.983, 603.979, 30.2593, 0.7206 ) }
    apic_30 { pt3dadd( 358.919, 604.636, 30.1336, 0.652 ) }
    apic_30 { pt3dadd( 359.781, 605.365, 30.093, 0.6402 ) }
    apic_30 { pt3dadd( 360.728, 605.971, 30.107, 0.515 ) }
    apic_30 { pt3dadd( 361.176, 606.889, 30.0488, 0.5564 ) }
    apic_30 { pt3dadd( 361.769, 607.767, 30.0871, 0.4494 ) }
    apic_30 { pt3dadd( 362.547, 608.597, 30.1151, 0.4562 ) }
    apic_30 { pt3dadd( 363.42, 609.321, 30.0832, 0.3878 ) }
    apic_30 { pt3dadd( 364.29, 610.055, 30.0874, 0.4252 ) }
    apic_30 { pt3dadd( 365.121, 610.836, 30.1207, 0.3836 ) }
    apic_30 { pt3dadd( 365.809, 611.74, 30.1134, 0.388 ) }
    apic_30 { pt3dadd( 366.463, 612.673, 30.0614, 0.4588 ) }
    apic_30 { pt3dadd( 366.823, 613.754, 30.0244, 0.5136 ) }
    apic_30 { pt3dadd( 367.322, 614.755, 30.0832, 0.5292 ) }
    apic_30 { pt3dadd( 368.084, 615.596, 30.1686, 0.5172 ) }
    apic_30 { pt3dadd( 368.784, 616.479, 30.1764, 0.4656 ) }
    apic_30 { pt3dadd( 369.672, 617.059, 30.0544, 0.5132 ) }
    apic_30 { pt3dadd( 370.518, 617.755, 30.0591, 0.5916 ) }
    apic_30 { pt3dadd( 371.441, 618.389, 30.0432, 0.555 ) }
    apic_30 { pt3dadd( 372.286, 618.956, 30.1115, 0.4566 ) }
    apic_30 { pt3dadd( 372.714, 619.962, 30.0773, 0.4228 ) }
    apic_30 { pt3dadd( 373.342, 620.748, 29.9048, 0.5526 ) }
    apic_30 { pt3dadd( 374.27, 621.271, 29.867, 0.546 ) }
    apic_30 { pt3dadd( 374.895, 622.024, 29.8259, 0.5906 ) }
    apic_30 { pt3dadd( 375.256, 623.032, 29.6204, 0.8536 ) }
    apic_30 { pt3dadd( 375.868, 623.903, 29.3185, 0.9242 ) }
    apic_30 { pt3dadd( 376.4, 624.744, 28.9262, 0.791 ) }
    apic_30 { pt3dadd( 376.88, 625.581, 28.7745, 0.683 ) }
    apic_30 { pt3dadd( 377.59, 626.448, 28.7182, 0.7228 ) }
    apic_30 { pt3dadd( 377.936, 627.529, 28.775, 0.7748 ) }
    apic_30 { pt3dadd( 378.327, 628.587, 28.987, 0.7492 ) }
    apic_30 { pt3dadd( 378.733, 629.644, 29.288, 0.8354 ) }
    apic_30 { pt3dadd( 378.94, 630.733, 29.6766, 0.8048 ) }
    apic_30 { pt3dadd( 379.298, 631.804, 30.0591, 0.7568 ) }
    apic_30 { pt3dadd( 379.78, 632.834, 30.4189, 0.625 ) }
    apic_30 { pt3dadd( 380.125, 633.924, 30.7289, 0.588 ) }
    apic_30 { pt3dadd( 380.32, 635.04, 30.9305, 0.429 ) }
    apic_30 { pt3dadd( 380.45, 636.149, 31.138, 0.3446 ) }
    apic_30 { pt3dadd( 380.979, 636.864, 31.5426, 0.311 ) }
    apic_30 { pt3dadd( 380.929, 637.985, 31.9393, 0.337 ) }
    apic_30 { pt3dadd( 380.951, 639.122, 32.2532, 0.4156 ) }
    apic_30 { pt3dadd( 380.944, 640.251, 32.5629, 0.414 ) }
    apic_30 { pt3dadd( 380.823, 641.387, 32.8101, 0.4398 ) }
    apic_30 { pt3dadd( 380.83, 642.505, 33.0487, 0.5756 ) }
    apic_30 { pt3dadd( 381.03, 643.538, 33.3169, 0.6306 ) }
    apic_30 { pt3dadd( 381.263, 644.55, 33.4225, 0.543 ) }
    apic_30 { pt3dadd( 381.65, 645.513, 33.5709, 0.385 ) }
    apic_30 { pt3dadd( 381.478, 646.211, 34.0225, 0.3004 ) }
    apic_30 { pt3dadd( 381.572, 646.851, 34.7245, 0.2754 ) }
    apic_30 { pt3dadd( 381.844, 647.795, 35.52, 0.2762 ) }
    apic_30 { pt3dadd( 381.939, 648.885, 36.2706, 0.2776 ) }
    apic_30 { pt3dadd( 382.343, 649.954, 36.846, 0.2802 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_30 { pt3dadd( 382.633, 651.062, 37.2291, 0.285 ) }
    apic_30 { pt3dadd( 382.399, 652.182, 37.4332, 0.2936 ) }
    apic_30 { pt3dadd( 382.167, 653.302, 37.5178, 0.3108 ) }
    apic_30 { pt3dadd( 381.923, 654.419, 37.5396, 0.3378 ) }
    apic_30 { pt3dadd( 381.678, 655.537, 37.5399, 0.412 ) }
    apic_30 { pt3dadd( 381.432, 656.654, 37.5399, 0.431 ) }
    apic_30 { pt3dadd( 381.186, 657.771, 37.5399, 0.356 ) }
    apic_30 { pt3dadd( 380.983, 658.897, 37.5399, 0.2938 ) }
    apic_30 { pt3dadd( 380.812, 660.029, 37.5399, 0.2626 ) }
    apic_30 { pt3dadd( 380.637, 661.159, 37.5399, 0.2542 ) }
    apic_30 { pt3dadd( 380.261, 662.239, 37.5399, 0.2288 ) }
    apic_30 { pt3dadd( 379.886, 663.32, 37.5399, 0.2288 ) }
    // Section: apic_29, id: apic_29, parent: apic_28 (entry count 12/100)
    apic_29 { pt3dclear() }
    apic_29 { pt3dadd( 353.821, 574.172, 34.0374, 0.7594 ) }
    apic_29 { pt3dadd( 354.749, 573.559, 34.2216, 0.5324 ) }
    apic_29 { pt3dadd( 355.777, 574.051, 34.2642, 0.4326 ) }
    apic_29 { pt3dadd( 356.642, 574.776, 34.2244, 0.5192 ) }
    apic_29 { pt3dadd( 357.245, 575.589, 34.0346, 0.5056 ) }
    apic_29 { pt3dadd( 357.89, 576.025, 33.6566, 0.4098 ) }
    apic_29 { pt3dadd( 358.038, 577.07, 33.2791, 0.3474 ) }
    apic_29 { pt3dadd( 358.057, 578.081, 33.0974, 0.358 ) }
    apic_29 { pt3dadd( 358.406, 578.994, 33.2534, 0.4508 ) }
    apic_29 { pt3dadd( 358.741, 579.964, 33.6249, 0.4976 ) }
    apic_29 { pt3dadd( 358.904, 581.066, 34.0354, 0.5048 ) }
    apic_29 { pt3dadd( 358.988, 582.207, 34.3837, 0.4476 ) }
    apic_29 { pt3dadd( 359.07, 583.347, 34.6324, 0.455 ) }
    apic_29 { pt3dadd( 359.167, 584.488, 34.7642, 0.6046 ) }
    apic_29 { pt3dadd( 359.247, 585.628, 34.7897, 0.6792 ) }
    apic_29 { pt3dadd( 359.406, 586.755, 34.7771, 0.6586 ) }
    apic_29 { pt3dadd( 359.517, 587.847, 34.8312, 0.4754 ) }
    apic_29 { pt3dadd( 359.963, 588.73, 34.7612, 0.3832 ) }
    apic_29 { pt3dadd( 360.955, 589.033, 34.5615, 0.3834 ) }
    apic_29 { pt3dadd( 361.967, 589.368, 34.2457, 0.4682 ) }
    apic_29 { pt3dadd( 362.893, 589.921, 34.0808, 0.6722 ) }
    apic_29 { pt3dadd( 363.702, 590.667, 33.8542, 0.8248 ) }
    apic_29 { pt3dadd( 364.483, 591.403, 33.8075, 0.83 ) }
    apic_29 { pt3dadd( 365.198, 592.272, 33.721, 0.5852 ) }
    apic_29 { pt3dadd( 365.947, 593.116, 33.7187, 0.4526 ) }
    apic_29 { pt3dadd( 366.694, 593.963, 33.6434, 0.4776 ) }
    apic_29 { pt3dadd( 367.444, 594.77, 33.488, 0.5804 ) }
    apic_29 { pt3dadd( 367.678, 595.872, 33.2956, 0.4986 ) }
    apic_29 { pt3dadd( 368.181, 596.866, 33.2049, 0.525 ) }
    apic_29 { pt3dadd( 368.907, 597.731, 33.2214, 0.3966 ) }
    apic_29 { pt3dadd( 369.839, 598.225, 33.1248, 0.3316 ) }
    apic_29 { pt3dadd( 370.817, 598.597, 33.0968, 0.286 ) }
    apic_29 { pt3dadd( 370.989, 599.725, 33.1246, 0.2956 ) }
    apic_29 { pt3dadd( 371.199, 600.752, 33.2629, 0.3148 ) }
    apic_29 { pt3dadd( 371.079, 601.682, 33.5308, 0.3438 ) }
    apic_29 { pt3dadd( 371.833, 602.083, 33.7408, 0.428 ) }
    apic_29 { pt3dadd( 372.128, 603.021, 33.9052, 0.4382 ) }
    apic_29 { pt3dadd( 372.345, 604.143, 33.9959, 0.4784 ) }
    apic_29 { pt3dadd( 372.807, 605.181, 33.9956, 0.6776 ) }
    apic_29 { pt3dadd( 373.434, 606.1, 33.8657, 0.672 ) }
    apic_29 { pt3dadd( 374.145, 606.988, 33.7145, 0.6506 ) }
    apic_29 { pt3dadd( 374.475, 608.06, 33.6848, 0.6636 ) }
    apic_29 { pt3dadd( 375.051, 609.037, 33.6445, 0.662 ) }
    apic_29 { pt3dadd( 375.844, 609.804, 33.5619, 0.5542 ) }
    apic_29 { pt3dadd( 376.354, 610.82, 33.5972, 0.4056 ) }
    apic_29 { pt3dadd( 376.821, 611.836, 33.7663, 0.3386 ) }
    apic_29 { pt3dadd( 377.288, 612.797, 34.0211, 0.3468 ) }
    apic_29 { pt3dadd( 378.015, 613.21, 34.4221, 0.4062 ) }
    apic_29 { pt3dadd( 378.466, 614.131, 34.6444, 0.5294 ) }
    apic_29 { pt3dadd( 379.293, 614.861, 34.764, 0.6956 ) }
    apic_29 { pt3dadd( 380.008, 615.722, 34.8502, 0.6188 ) }
    apic_29 { pt3dadd( 380.878, 616.442, 35.0101, 0.5136 ) }
    apic_29 { pt3dadd( 381.788, 617.109, 35.2302, 0.3678 ) }
    apic_29 { pt3dadd( 382.455, 617.855, 35.551, 0.3158 ) }
    apic_29 { pt3dadd( 382.826, 618.808, 36.0262, 0.304 ) }
    apic_29 { pt3dadd( 383.061, 619.876, 36.4641, 0.3288 ) }
    apic_29 { pt3dadd( 383.082, 621.02, 36.7962, 0.3766 ) }
    apic_29 { pt3dadd( 383.622, 621.883, 37.018, 0.4568 ) }
    apic_29 { pt3dadd( 384.611, 622.456, 37.1507, 0.6472 ) }
    apic_29 { pt3dadd( 385.677, 622.82, 37.256, 0.796 ) }
    apic_29 { pt3dadd( 386.738, 623.136, 37.4083, 0.6916 ) }
    apic_29 { pt3dadd( 387.768, 623.571, 37.5091, 0.7418 ) }
    apic_29 { pt3dadd( 388.83, 623.987, 37.5547, 0.795 ) }
    apic_29 { pt3dadd( 389.863, 624.458, 37.606, 0.8596 ) }
    apic_29 { pt3dadd( 390.893, 624.934, 37.5928, 0.9158 ) }
    apic_29 { pt3dadd( 391.798, 625.611, 37.511, 0.8706 ) }
    apic_29 { pt3dadd( 392.637, 626.38, 37.3668, 0.8262 ) }
    apic_29 { pt3dadd( 393.518, 627.104, 37.2338, 0.7802 ) }
    apic_29 { pt3dadd( 394.274, 627.924, 37.0364, 0.7484 ) }
    apic_29 { pt3dadd( 395.014, 628.782, 36.8105, 0.658 ) }
    apic_29 { pt3dadd( 395.99, 629.346, 36.6201, 0.6438 ) }
    apic_29 { pt3dadd( 397.073, 629.713, 36.4686, 0.5578 ) }
    apic_29 { pt3dadd( 398.129, 630.131, 36.3157, 0.4602 ) }
    apic_29 { pt3dadd( 399.072, 630.565, 36.045, 0.4374 ) }
    apic_29 { pt3dadd( 399.944, 631.201, 35.9444, 0.541 ) }
    apic_29 { pt3dadd( 400.53, 632.173, 35.9125, 0.7108 ) }
    apic_29 { pt3dadd( 400.762, 633.275, 35.8543, 0.678 ) }
    apic_29 { pt3dadd( 401.631, 633.693, 36.0102, 0.474 ) }
    apic_29 { pt3dadd( 402.323, 634.589, 36.1046, 0.3336 ) }
    apic_29 { pt3dadd( 403.036, 635.312, 35.9873, 0.2898 ) }
    apic_29 { pt3dadd( 403.881, 635.769, 35.6804, 0.303 ) }
    apic_29 { pt3dadd( 404.776, 636.474, 35.4659, 0.3268 ) }
    apic_29 { pt3dadd( 405.485, 637.272, 35.4368, 0.373 ) }
    apic_29 { pt3dadd( 405.826, 638.242, 35.5902, 0.45 ) }
    apic_29 { pt3dadd( 406.298, 639.269, 35.7386, 0.6348 ) }
    apic_29 { pt3dadd( 406.82, 640.273, 35.875, 0.7726 ) }
    apic_29 { pt3dadd( 407.217, 641.341, 36.01, 0.6488 ) }
    apic_29 { pt3dadd( 407.483, 642.424, 36.0298, 0.6606 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_29 { pt3dadd( 407.638, 643.517, 35.9355, 0.654 ) }
    apic_29 { pt3dadd( 407.817, 644.635, 35.8518, 0.5514 ) }
    apic_29 { pt3dadd( 408.264, 645.599, 35.9405, 0.5704 ) }
    apic_29 { pt3dadd( 409.167, 646.144, 36.185, 0.5062 ) }
    apic_29 { pt3dadd( 409.771, 646.961, 36.5254, 0.4108 ) }
    apic_29 { pt3dadd( 410.087, 648.035, 36.9317, 0.3492 ) }
    apic_29 { pt3dadd( 410.177, 649.17, 37.2954, 0.3614 ) }
    apic_29 { pt3dadd( 410.562, 650.238, 37.5841, 0.458 ) }
    apic_29 { pt3dadd( 411.444, 650.914, 37.8482, 0.5056 ) }
    apic_29 { pt3dadd( 412.382, 651.482, 38.1497, 0.5452 ) }
    apic_29 { pt3dadd( 413.443, 651.673, 38.4877, 0.3982 ) }
    apic_29 { pt3dadd( 414.479, 652.121, 38.6778, 0.2796 ) }
    apic_29 { pt3dadd( 415.207, 652.952, 38.5809, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 13/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 337.939, 532.128, 25.251, 0.9454 ) }
    apic_11 { pt3dadd( 338.434, 530.95, 25.303, 0.8214 ) }
    apic_11 { pt3dadd( 338.889, 529.901, 25.342, 0.7818 ) }
    apic_11 { pt3dadd( 339.286, 528.829, 25.3798, 0.9284 ) }
    apic_11 { pt3dadd( 339.655, 527.771, 25.4744, 1.047 ) }
    apic_11 { pt3dadd( 340.084, 526.739, 25.6424, 1.0974 ) }
    apic_11 { pt3dadd( 340.543, 525.695, 25.7888, 1.0966 ) }
    apic_11 { pt3dadd( 340.879, 524.61, 25.9134, 1.0952 ) }
    apic_11 { pt3dadd( 341.033, 523.481, 26.0215, 1.0926 ) }
    apic_11 { pt3dadd( 341.203, 522.362, 26.0582, 1.0868 ) }
    apic_11 { pt3dadd( 341.621, 521.317, 26.0495, 1.0822 ) }
    apic_11 { pt3dadd( 342.242, 520.369, 26.0826, 1.0436 ) }
    apic_11 { pt3dadd( 342.952, 519.481, 26.161, 1.118 ) }
    apic_11 { pt3dadd( 343.632, 518.564, 26.2469, 1.2344 ) }
    apic_11 { pt3dadd( 344.219, 517.583, 26.3315, 1.325 ) }
    apic_11 { pt3dadd( 344.778, 516.585, 26.4174, 1.1852 ) }
    apic_11 { pt3dadd( 345.342, 515.591, 26.5003, 1.0478 ) }
    apic_11 { pt3dadd( 345.935, 514.614, 26.5849, 0.8882 ) }
    apic_11 { pt3dadd( 346.604, 513.724, 26.7319, 0.817 ) }
    apic_11 { pt3dadd( 347.241, 512.797, 26.901, 0.7388 ) }
    apic_11 { pt3dadd( 347.821, 511.812, 27.0273, 0.79 ) }
    apic_11 { pt3dadd( 348.27, 510.775, 27.0718, 0.8466 ) }
    apic_11 { pt3dadd( 348.641, 509.713, 27.0287, 0.9092 ) }
    apic_11 { pt3dadd( 349.145, 508.7, 26.9816, 1.0032 ) }
    apic_11 { pt3dadd( 349.637, 507.69, 27.0189, 1.0536 ) }
    apic_11 { pt3dadd( 350.071, 506.648, 27.1312, 1.064 ) }
    apic_11 { pt3dadd( 350.577, 505.627, 27.2614, 1.028 ) }
    apic_11 { pt3dadd( 351.208, 504.676, 27.3871, 1.0014 ) }
    apic_11 { pt3dadd( 351.909, 503.773, 27.5092, 0.7564 ) }
    apic_11 { pt3dadd( 352.449, 502.778, 27.6259, 0.5654 ) }
    apic_11 { pt3dadd( 352.963, 501.762, 27.7029, 0.5342 ) }
    apic_11 { pt3dadd( 353.644, 500.853, 27.7575, 0.7408 ) }
    apic_11 { pt3dadd( 354.397, 499.997, 27.8155, 0.9846 ) }
    apic_11 { pt3dadd( 355.231, 499.283, 27.9882, 0.968 ) }
    apic_11 { pt3dadd( 356.004, 498.519, 28.2901, 0.9232 ) }
    apic_11 { pt3dadd( 356.547, 497.563, 28.6577, 0.9096 ) }
    apic_11 { pt3dadd( 357.043, 496.55, 29.0228, 1.0044 ) }
    apic_11 { pt3dadd( 357.602, 495.553, 29.3213, 1.0546 ) }
    apic_11 { pt3dadd( 358.135, 494.542, 29.5352, 1.0708 ) }
    apic_11 { pt3dadd( 358.619, 493.506, 29.6696, 1.0164 ) }
    apic_11 { pt3dadd( 358.99, 492.426, 29.7475, 1.0962 ) }
    apic_11 { pt3dadd( 359.277, 491.319, 29.8004, 1.0544 ) }
    apic_11 { pt3dadd( 359.499, 490.197, 29.8539, 0.9832 ) }
    apic_11 { pt3dadd( 359.826, 489.106, 29.9236, 0.8196 ) }
    apic_11 { pt3dadd( 360.293, 488.062, 30.0143, 0.6696 ) }
    apic_11 { pt3dadd( 360.908, 487.106, 30.1395, 0.5624 ) }
    apic_11 { pt3dadd( 361.519, 486.179, 30.3509, 0.6782 ) }
    apic_11 { pt3dadd( 362.04, 485.232, 30.6586, 0.7394 ) }
    apic_11 { pt3dadd( 362.67, 484.309, 30.9156, 0.912 ) }
    apic_11 { pt3dadd( 363.21, 483.332, 31.0229, 0.944 ) }
    apic_11 { pt3dadd( 363.567, 482.258, 31.0478, 1.0294 ) }
    apic_11 { pt3dadd( 364.003, 481.204, 31.0422, 1.0602 ) }
    apic_11 { pt3dadd( 364.428, 480.144, 31.0218, 1.0504 ) }
    apic_11 { pt3dadd( 364.788, 479.061, 31.0248, 1.129 ) }
    apic_11 { pt3dadd( 365.12, 477.985, 31.1035, 1.261 ) }
    apic_11 { pt3dadd( 365.574, 476.946, 31.1786, 1.3444 ) }
    apic_11 { pt3dadd( 366.063, 475.935, 31.1604, 1.3672 ) }
    apic_11 { pt3dadd( 366.488, 474.882, 31.1072, 1.3632 ) }
    apic_11 { pt3dadd( 366.802, 473.783, 31.0646, 1.3502 ) }
    apic_11 { pt3dadd( 367.209, 472.718, 31.04, 1.355 ) }
    apic_11 { pt3dadd( 367.685, 471.677, 31.0411, 1.223 ) }
    apic_11 { pt3dadd( 368.128, 470.624, 31.094, 0.975 ) }
    apic_11 { pt3dadd( 368.62, 469.609, 31.2273, 0.7606 ) }
    apic_11 { pt3dadd( 369.235, 468.656, 31.386, 0.7728 ) }
    apic_11 { pt3dadd( 369.815, 467.673, 31.4972, 0.6374 ) }
    apic_11 { pt3dadd( 370.238, 466.618, 31.5952, 0.6958 ) }
    apic_11 { pt3dadd( 370.664, 465.558, 31.6686, 0.6752 ) }
    apic_11 { pt3dadd( 371.129, 464.512, 31.7002, 0.8038 ) }
    apic_11 { pt3dadd( 371.492, 463.434, 31.6739, 0.6912 ) }
    apic_11 { pt3dadd( 372.013, 462.443, 31.5815, 0.814 ) }
    apic_11 { pt3dadd( 372.669, 461.514, 31.491, 0.804 ) }
    apic_11 { pt3dadd( 373.284, 460.556, 31.477, 0.7948 ) }
    apic_11 { pt3dadd( 373.841, 459.579, 31.5745, 0.7336 ) }
    apic_11 { pt3dadd( 374.367, 458.571, 31.7257, 0.6056 ) }
    apic_11 { pt3dadd( 374.723, 457.488, 31.8822, 0.6678 ) }
    apic_11 { pt3dadd( 374.955, 456.369, 32.0359, 0.7016 ) }
    apic_11 { pt3dadd( 375.171, 455.253, 32.2028, 0.7014 ) }
    apic_11 { pt3dadd( 375.619, 454.322, 32.415, 0.55 ) }
    apic_11 { pt3dadd( 375.615, 453.185, 32.5486, 0.5442 ) }
    apic_11 { pt3dadd( 375.83, 452.078, 32.5825, 0.5724 ) }
    apic_11 { pt3dadd( 376.242, 451.013, 32.5816, 0.6648 ) }
    apic_11 { pt3dadd( 376.704, 449.972, 32.5483, 0.6404 ) }
    apic_11 { pt3dadd( 377.073, 448.895, 32.5027, 0.6296 ) }
    apic_11 { pt3dadd( 377.348, 447.787, 32.5007, 0.6716 ) }
    apic_11 { pt3dadd( 377.63, 446.695, 32.5942, 0.6768 ) }
    apic_11 { pt3dadd( 378.193, 445.738, 32.8121, 0.5814 ) }
    apic_11 { pt3dadd( 378.577, 444.806, 33.1173, 0.4568 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_11 { pt3dadd( 378.147, 443.775, 33.4376, 0.4302 ) }
    apic_11 { pt3dadd( 378.018, 442.71, 33.7327, 0.533 ) }
    apic_11 { pt3dadd( 378.299, 441.607, 33.9802, 0.671 ) }
    apic_11 { pt3dadd( 378.672, 440.527, 34.1631, 0.7248 ) }
    apic_11 { pt3dadd( 379.087, 439.464, 34.3199, 0.661 ) }
    apic_11 { pt3dadd( 379.458, 438.392, 34.4316, 0.6506 ) }
    apic_11 { pt3dadd( 379.882, 437.337, 34.5122, 0.5652 ) }
    apic_11 { pt3dadd( 380.354, 436.295, 34.608, 0.499 ) }
    apic_11 { pt3dadd( 380.771, 435.237, 34.757, 0.3874 ) }
    apic_11 { pt3dadd( 381.453, 434.432, 35.0104, 0.3534 ) }
    apic_11 { pt3dadd( 382.134, 433.59, 35.3273, 0.368 ) }
    apic_11 { pt3dadd( 382.544, 432.541, 35.5908, 0.475 ) }
    apic_11 { pt3dadd( 382.856, 431.461, 35.8422, 0.5136 ) }
    apic_11 { pt3dadd( 383.16, 430.368, 36.073, 0.6754 ) }
    apic_11 { pt3dadd( 383.474, 429.273, 36.2116, 0.7664 ) }
    apic_11 { pt3dadd( 383.757, 428.188, 36.346, 0.8044 ) }
    apic_11 { pt3dadd( 383.992, 427.104, 36.5481, 0.824 ) }
    apic_11 { pt3dadd( 384.405, 426.065, 36.7573, 0.6498 ) }
    apic_11 { pt3dadd( 384.994, 425.105, 36.8668, 0.6626 ) }
    apic_11 { pt3dadd( 385.6, 424.152, 36.8928, 0.6576 ) }
    apic_11 { pt3dadd( 386.092, 423.126, 36.9146, 0.5582 ) }
    apic_11 { pt3dadd( 386.424, 422.038, 36.9723, 0.5826 ) }
    apic_11 { pt3dadd( 386.544, 420.924, 37.1112, 0.5302 ) }
    apic_11 { pt3dadd( 386.558, 419.793, 37.3094, 0.4502 ) }
    apic_11 { pt3dadd( 386.559, 418.65, 37.5225, 0.4466 ) }
    apic_11 { pt3dadd( 386.563, 417.506, 37.7322, 0.4242 ) }
    apic_11 { pt3dadd( 386.591, 416.365, 37.9456, 0.4594 ) }
    apic_11 { pt3dadd( 386.727, 415.248, 38.1982, 0.61 ) }
    apic_11 { pt3dadd( 387.084, 414.198, 38.4955, 0.7024 ) }
    apic_11 { pt3dadd( 387.528, 413.171, 38.8217, 0.6366 ) }
    apic_11 { pt3dadd( 387.855, 412.088, 39.1278, 0.7506 ) }
    apic_11 { pt3dadd( 388.062, 410.972, 39.3305, 0.7316 ) }
    apic_11 { pt3dadd( 388.334, 409.883, 39.3994, 0.6716 ) }
    apic_11 { pt3dadd( 388.533, 408.788, 39.4906, 0.4522 ) }
    apic_11 { pt3dadd( 388.841, 407.73, 39.655, 0.3404 ) }
    apic_11 { pt3dadd( 389.417, 406.763, 39.8048, 0.3022 ) }
    apic_11 { pt3dadd( 390.126, 405.881, 39.8639, 0.327 ) }
    apic_11 { pt3dadd( 390.409, 404.799, 39.884, 0.366 ) }
    apic_11 { pt3dadd( 390.2, 403.682, 39.8955, 0.4714 ) }
    apic_11 { pt3dadd( 390.105, 402.543, 39.8933, 0.5068 ) }
    apic_11 { pt3dadd( 390.411, 401.447, 39.8916, 0.6632 ) }
    apic_11 { pt3dadd( 390.902, 400.415, 39.9118, 0.7414 ) }
    apic_11 { pt3dadd( 391.405, 399.388, 39.9585, 0.7708 ) }
    apic_11 { pt3dadd( 391.914, 398.364, 40.028, 0.6992 ) }
    apic_11 { pt3dadd( 392.41, 397.358, 40.1755, 0.722 ) }
    apic_11 { pt3dadd( 392.826, 396.305, 40.3544, 0.6942 ) }
    apic_11 { pt3dadd( 393.139, 395.205, 40.4908, 0.7546 ) }
    apic_11 { pt3dadd( 393.45, 394.117, 40.5331, 0.7804 ) }
    apic_11 { pt3dadd( 393.817, 393.036, 40.5345, 0.7892 ) }
    apic_11 { pt3dadd( 394.236, 391.982, 40.5871, 0.7654 ) }
    apic_11 { pt3dadd( 394.796, 390.99, 40.6006, 0.6888 ) }
    apic_11 { pt3dadd( 395.27, 389.952, 40.651, 0.7042 ) }
    apic_11 { pt3dadd( 395.689, 388.892, 40.7462, 0.6542 ) }
    apic_11 { pt3dadd( 396.242, 387.893, 40.8587, 0.7146 ) }
    apic_11 { pt3dadd( 396.975, 387.031, 41.0077, 0.5402 ) }
    apic_11 { pt3dadd( 397.756, 386.225, 41.0416, 0.4634 ) }
    apic_11 { pt3dadd( 398.336, 385.285, 40.9909, 0.498 ) }
    apic_11 { pt3dadd( 398.207, 384.179, 41.0553, 0.6176 ) }
    apic_11 { pt3dadd( 398.38, 383.107, 41.2283, 0.5696 ) }
    apic_11 { pt3dadd( 398.801, 382.103, 41.2656, 0.6468 ) }
    apic_11 { pt3dadd( 399.044, 380.992, 41.3518, 0.6694 ) }
    apic_11 { pt3dadd( 399.466, 379.99, 41.5752, 0.61 ) }
    apic_11 { pt3dadd( 400.195, 379.111, 41.79, 0.5342 ) }
    apic_11 { pt3dadd( 400.886, 378.199, 41.958, 0.4554 ) }
    apic_11 { pt3dadd( 401.7, 377.399, 42.1014, 0.468 ) }
    apic_11 { pt3dadd( 402.611, 376.725, 42.2467, 0.6348 ) }
    apic_11 { pt3dadd( 403.231, 375.768, 42.3962, 0.706 ) }
    apic_11 { pt3dadd( 403.825, 374.811, 42.5846, 0.8496 ) }
    apic_11 { pt3dadd( 404.522, 373.915, 42.7924, 0.8312 ) }
    apic_11 { pt3dadd( 405.227, 373.016, 42.9654, 0.8054 ) }
    apic_11 { pt3dadd( 405.813, 372.034, 43.104, 0.7174 ) }
    apic_11 { pt3dadd( 406.367, 371.034, 43.2155, 0.7496 ) }
    apic_11 { pt3dadd( 406.9, 370.021, 43.3079, 0.7762 ) }
    apic_11 { pt3dadd( 407.33, 368.963, 43.3941, 0.7566 ) }
    apic_11 { pt3dadd( 407.619, 367.861, 43.5033, 0.8256 ) }
    apic_11 { pt3dadd( 407.741, 366.739, 43.678, 0.901 ) }
    apic_11 { pt3dadd( 408.075, 365.669, 43.9093, 1.0662 ) }
    apic_11 { pt3dadd( 408.624, 364.667, 44.1143, 1.0198 ) }
    apic_11 { pt3dadd( 409.274, 363.727, 44.2893, 1.0458 ) }
    apic_11 { pt3dadd( 409.978, 362.827, 44.443, 1.0078 ) }
    apic_11 { pt3dadd( 410.546, 361.84, 44.5959, 1.1268 ) }
    apic_11 { pt3dadd( 410.919, 360.767, 44.7804, 1.1132 ) }
    apic_11 { pt3dadd( 411.293, 359.697, 44.9817, 1.0814 ) }
    apic_11 { pt3dadd( 411.865, 358.713, 45.1721, 1.055 ) }
    apic_11 { pt3dadd( 412.536, 357.796, 45.4104, 0.8476 ) }
    apic_11 { pt3dadd( 413.081, 356.807, 45.6616, 0.7736 ) }
    apic_11 { pt3dadd( 413.402, 355.718, 45.9399, 0.7326 ) }
    apic_11 { pt3dadd( 413.811, 354.672, 46.2762, 0.6458 ) }
    apic_11 { pt3dadd( 414.166, 353.605, 46.6528, 0.7664 ) }
    apic_11 { pt3dadd( 414.443, 352.512, 47.0515, 0.767 ) }
    apic_11 { pt3dadd( 414.792, 351.448, 47.4653, 0.7068 ) }
    apic_11 { pt3dadd( 415.267, 350.427, 47.8626, 0.6632 ) }
    apic_11 { pt3dadd( 415.815, 349.429, 48.204, 0.7112 ) }
    apic_11 { pt3dadd( 416.212, 348.372, 48.5036, 0.8612 ) }
    apic_11 { pt3dadd( 416.464, 347.269, 48.7726, 1.072 ) }
    apic_11 { pt3dadd( 416.815, 346.185, 48.958, 1.1032 ) }
    apic_11 { pt3dadd( 417.31, 345.161, 49.1103, 1.0756 ) }
    apic_11 { pt3dadd( 417.862, 344.176, 49.2909, 0.9824 ) }
    apic_11 { pt3dadd( 418.428, 343.192, 49.4735, 1.0126 ) }
    apic_11 { pt3dadd( 418.98, 342.192, 49.6163, 0.9996 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_11 { pt3dadd( 419.508, 341.177, 49.7165, 1.0812 ) }
    apic_11 { pt3dadd( 420.059, 340.174, 49.7848, 1.1766 ) }
    apic_11 { pt3dadd( 420.602, 339.167, 49.8221, 1.1678 ) }
    apic_11 { pt3dadd( 421.134, 338.155, 49.8341, 1.1374 ) }
    apic_11 { pt3dadd( 421.689, 337.155, 49.8347, 1.1492 ) }
    apic_11 { pt3dadd( 422.255, 336.161, 49.8324, 1.0682 ) }
    apic_11 { pt3dadd( 422.857, 335.191, 49.8291, 0.9616 ) }
    apic_11 { pt3dadd( 423.584, 334.31, 49.8246, 0.78 ) }
    apic_11 { pt3dadd( 424.362, 333.473, 49.8198, 0.5942 ) }
    apic_11 { pt3dadd( 425.027, 332.553, 49.8151, 0.4324 ) }
    apic_11 { pt3dadd( 425.395, 331.487, 49.7974, 0.3902 ) }
    apic_11 { pt3dadd( 425.613, 330.368, 49.7661, 0.4332 ) }
    apic_11 { pt3dadd( 426.038, 329.321, 49.7641, 0.61 ) }
    apic_11 { pt3dadd( 426.65, 328.359, 49.8053, 0.6966 ) }
    apic_11 { pt3dadd( 427.287, 327.408, 49.8618, 0.6548 ) }
    apic_11 { pt3dadd( 427.944, 326.472, 49.924, 0.6442 ) }
    apic_11 { pt3dadd( 428.641, 325.566, 49.9979, 0.5286 ) }
    apic_11 { pt3dadd( 429.263, 324.625, 50.1088, 0.5514 ) }
    apic_11 { pt3dadd( 429.722, 323.587, 50.2326, 0.5866 ) }
    apic_11 { pt3dadd( 430.169, 322.537, 50.3154, 0.686 ) }
    apic_11 { pt3dadd( 430.605, 321.482, 50.3644, 0.7056 ) }
    apic_11 { pt3dadd( 430.893, 320.394, 50.4423, 0.6246 ) }
    apic_11 { pt3dadd( 431.159, 319.3, 50.5677, 0.5872 ) }
    apic_11 { pt3dadd( 431.631, 318.278, 50.6486, 0.4274 ) }
    apic_11 { pt3dadd( 432.362, 317.423, 50.706, 0.3418 ) }
    apic_11 { pt3dadd( 432.988, 316.51, 50.801, 0.3048 ) }
    apic_11 { pt3dadd( 433.108, 315.409, 50.9006, 0.3316 ) }
    apic_11 { pt3dadd( 432.947, 314.276, 50.9802, 0.376 ) }
    apic_11 { pt3dadd( 433.07, 313.176, 51.0558, 0.4848 ) }
    apic_11 { pt3dadd( 433.678, 312.253, 51.1745, 0.5562 ) }
    apic_11 { pt3dadd( 434.417, 311.414, 51.2532, 0.6348 ) }
    apic_11 { pt3dadd( 435.128, 310.535, 51.2736, 0.5842 ) }
    apic_11 { pt3dadd( 435.934, 309.731, 51.3134, 0.5288 ) }
    apic_11 { pt3dadd( 436.624, 308.869, 51.4217, 0.4688 ) }
    apic_11 { pt3dadd( 437.211, 307.91, 51.553, 0.3788 ) }
    apic_11 { pt3dadd( 437.855, 306.981, 51.6096, 0.3372 ) }
    apic_11 { pt3dadd( 438.462, 306.028, 51.6292, 0.338 ) }
    apic_11 { pt3dadd( 439.019, 305.029, 51.6656, 0.4186 ) }
    apic_11 { pt3dadd( 439.489, 303.997, 51.7586, 0.4132 ) }
    apic_11 { pt3dadd( 439.867, 302.935, 51.9422, 0.4684 ) }
    apic_11 { pt3dadd( 440.292, 301.901, 52.2158, 0.4832 ) }
    apic_11 { pt3dadd( 440.788, 300.9, 52.5633, 0.4784 ) }
    apic_11 { pt3dadd( 441.332, 299.908, 52.9082, 0.3966 ) }
    apic_11 { pt3dadd( 441.911, 298.922, 53.1978, 0.3712 ) }
    apic_11 { pt3dadd( 442.455, 297.915, 53.4316, 0.396 ) }
    apic_11 { pt3dadd( 442.966, 296.892, 53.6189, 0.5512 ) }
    apic_11 { pt3dadd( 443.305, 295.82, 53.814, 0.5372 ) }
    apic_11 { pt3dadd( 443.474, 294.705, 54.0599, 0.604 ) }
    apic_11 { pt3dadd( 443.714, 293.597, 54.3376, 0.7344 ) }
    apic_11 { pt3dadd( 444.049, 292.506, 54.6202, 0.7162 ) }
    apic_11 { pt3dadd( 444.47, 291.451, 54.92, 0.5704 ) }
    apic_11 { pt3dadd( 444.993, 290.454, 55.258, 0.3884 ) }
    apic_11 { pt3dadd( 445.498, 289.456, 55.6284, 0.307 ) }
    apic_11 { pt3dadd( 445.943, 288.431, 56.0185, 0.2874 ) }
    apic_11 { pt3dadd( 446.415, 287.404, 56.3772, 0.2982 ) }
    apic_11 { pt3dadd( 446.924, 286.379, 56.6656, 0.3194 ) }
    apic_11 { pt3dadd( 447.436, 285.356, 56.8929, 0.3536 ) }
    apic_11 { pt3dadd( 447.922, 284.324, 57.0976, 0.441 ) }
    apic_11 { pt3dadd( 448.37, 283.282, 57.3236, 0.4856 ) }
    apic_11 { pt3dadd( 448.636, 282.189, 57.5638, 0.453 ) }
    apic_11 { pt3dadd( 448.731, 281.051, 57.8029, 0.4948 ) }
    apic_11 { pt3dadd( 448.913, 279.939, 58.0768, 0.534 ) }
    apic_11 { pt3dadd( 449.208, 278.861, 58.4074, 0.5632 ) }
    apic_11 { pt3dadd( 449.535, 277.78, 58.7306, 0.5998 ) }
    apic_11 { pt3dadd( 449.875, 276.688, 58.9963, 0.5234 ) }
    apic_11 { pt3dadd( 450.146, 275.583, 59.2388, 0.3958 ) }
    apic_11 { pt3dadd( 450.317, 274.467, 59.498, 0.3206 ) }
    apic_11 { pt3dadd( 450.452, 273.344, 59.7545, 0.3126 ) }
    apic_11 { pt3dadd( 450.577, 272.209, 59.9651, 0.3454 ) }
    apic_11 { pt3dadd( 450.697, 271.072, 60.125, 0.404 ) }
    apic_11 { pt3dadd( 450.926, 269.961, 60.2748, 0.5238 ) }
    apic_11 { pt3dadd( 451.258, 268.878, 60.433, 0.6916 ) }
    apic_11 { pt3dadd( 451.747, 267.857, 60.5615, 0.5804 ) }
    apic_11 { pt3dadd( 452.306, 266.867, 60.6164, 0.5932 ) }
    apic_11 { pt3dadd( 452.764, 265.836, 60.5954, 0.4704 ) }
    apic_11 { pt3dadd( 453.001, 264.734, 60.5732, 0.495 ) }
    apic_11 { pt3dadd( 453.125, 263.597, 60.592, 0.4604 ) }
    apic_11 { pt3dadd( 453.304, 262.476, 60.6791, 0.5576 ) }
    apic_11 { pt3dadd( 453.538, 261.371, 60.8546, 0.64 ) }
    apic_11 { pt3dadd( 453.846, 260.279, 61.0764, 0.8104 ) }
    apic_11 { pt3dadd( 454.225, 259.201, 61.2912, 0.812 ) }
    apic_11 { pt3dadd( 454.645, 258.141, 61.5028, 0.7388 ) }
    apic_11 { pt3dadd( 455.099, 257.113, 61.7448, 0.7436 ) }
    apic_11 { pt3dadd( 455.55, 256.075, 61.9814, 0.7584 ) }
    apic_11 { pt3dadd( 455.981, 255.017, 62.1667, 0.7556 ) }
    apic_11 { pt3dadd( 456.365, 253.941, 62.2952, 0.6696 ) }
    apic_11 { pt3dadd( 456.681, 252.845, 62.3686, 0.6726 ) }
    apic_11 { pt3dadd( 456.977, 251.742, 62.4285, 0.577 ) }
    apic_11 { pt3dadd( 457.346, 250.663, 62.5128, 0.6618 ) }
    apic_11 { pt3dadd( 457.995, 249.747, 62.6245, 0.691 ) }
    apic_11 { pt3dadd( 458.774, 248.91, 62.762, 0.6802 ) }
    apic_11 { pt3dadd( 459.408, 247.971, 62.9314, 0.5174 ) }
    apic_11 { pt3dadd( 459.763, 246.903, 63.1386, 0.4516 ) }
    apic_11 { pt3dadd( 460.016, 245.793, 63.3601, 0.5552 ) }
    apic_11 { pt3dadd( 460.243, 244.673, 63.5617, 0.5684 ) }
    apic_11 { pt3dadd( 460.459, 243.55, 63.7367, 0.5466 ) }
    apic_11 { pt3dadd( 460.678, 242.436, 63.9254, 0.5012 ) }
    apic_11 { pt3dadd( 460.899, 241.328, 64.1351, 0.4414 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 98/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 337.939, 532.128, 25.251, 0.9454 ) }
    apic_10 { pt3dadd( 336.707, 531.358, 25.1322, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_10 { pt3dadd( 335.841, 530.672, 25.1129, 0.7066 ) }
    apic_10 { pt3dadd( 335.31, 529.903, 24.9404, 0.7442 ) }
    apic_10 { pt3dadd( 334.437, 529.193, 24.6879, 0.6944 ) }
    apic_10 { pt3dadd( 333.641, 528.411, 24.4269, 0.4964 ) }
    apic_10 { pt3dadd( 332.612, 528.004, 24.1615, 0.4122 ) }
    apic_10 { pt3dadd( 331.495, 527.95, 23.8493, 0.4864 ) }
    apic_10 { pt3dadd( 330.385, 528.169, 23.5645, 0.4194 ) }
    apic_10 { pt3dadd( 330.027, 527.874, 22.995, 0.3736 ) }
    apic_10 { pt3dadd( 329.045, 527.937, 22.5179, 0.366 ) }
    apic_10 { pt3dadd( 328.193, 527.54, 22.405, 0.4342 ) }
    apic_10 { pt3dadd( 327.211, 527.28, 22.524, 0.6182 ) }
    apic_10 { pt3dadd( 325.757, 527.238, 22.239, 0.6802 ) }
    apic_10 { pt3dadd( 324.736, 527.561, 22.29, 0.777 ) }
    apic_10 { pt3dadd( 323.66, 527.726, 22.2032, 0.8168 ) }
    apic_10 { pt3dadd( 322.577, 527.633, 21.9621, 0.8824 ) }
    apic_10 { pt3dadd( 321.451, 527.589, 21.772, 0.814 ) }
    apic_10 { pt3dadd( 320.434, 527.975, 21.5978, 0.695 ) }
    apic_10 { pt3dadd( 319.431, 528.352, 21.3153, 0.6654 ) }
    apic_10 { pt3dadd( 318.589, 528.592, 21.0854, 0.5984 ) }
    apic_10 { pt3dadd( 317.5, 528.674, 21.0081, 0.5328 ) }
    apic_10 { pt3dadd( 316.457, 528.256, 20.9952, 0.5836 ) }
    apic_10 { pt3dadd( 315.497, 527.637, 20.9866, 0.7562 ) }
    apic_10 { pt3dadd( 314.512, 527.062, 21.0076, 0.697 ) }
    apic_10 { pt3dadd( 313.5, 526.552, 20.9905, 0.8244 ) }
    apic_10 { pt3dadd( 312.47, 526.092, 20.8807, 0.8246 ) }
    apic_10 { pt3dadd( 311.413, 525.66, 20.741, 0.8278 ) }
    apic_10 { pt3dadd( 310.371, 525.188, 20.6004, 0.8206 ) }
    apic_10 { pt3dadd( 309.376, 524.646, 20.4294, 0.6408 ) }
    apic_10 { pt3dadd( 308.345, 524.291, 20.239, 0.6582 ) }
    apic_10 { pt3dadd( 307.204, 524.238, 20.0861, 0.5888 ) }
    apic_10 { pt3dadd( 306.091, 524.038, 19.9371, 0.7258 ) }
    apic_10 { pt3dadd( 305.019, 523.721, 19.7523, 0.8346 ) }
    apic_10 { pt3dadd( 303.927, 523.458, 19.6652, 0.8256 ) }
    apic_10 { pt3dadd( 302.806, 523.24, 19.633, 0.6864 ) }
    apic_10 { pt3dadd( 301.727, 522.87, 19.6087, 0.7956 ) }
    apic_10 { pt3dadd( 300.74, 522.295, 19.5709, 0.8168 ) }
    apic_10 { pt3dadd( 299.687, 521.853, 19.5364, 0.821 ) }
    apic_10 { pt3dadd( 298.581, 521.563, 19.5017, 0.7692 ) }
    apic_10 { pt3dadd( 297.443, 521.442, 19.4527, 0.7332 ) }
    apic_10 { pt3dadd( 296.31, 521.434, 19.3612, 0.605 ) }
    apic_10 { pt3dadd( 295.183, 521.426, 19.2273, 0.6664 ) }
    apic_10 { pt3dadd( 294.041, 521.379, 19.1187, 0.6994 ) }
    apic_10 { pt3dadd( 292.944, 521.249, 19.143, 0.696 ) }
    apic_10 { pt3dadd( 291.905, 520.992, 19.2996, 0.5462 ) }
    apic_10 { pt3dadd( 290.947, 520.377, 19.4057, 0.5062 ) }
    apic_10 { pt3dadd( 290.25, 519.503, 19.3578, 0.6522 ) }
    apic_10 { pt3dadd( 289.482, 518.688, 19.1811, 0.7692 ) }
    apic_10 { pt3dadd( 288.563, 518.049, 18.891, 0.8172 ) }
    apic_10 { pt3dadd( 287.56, 517.504, 18.5735, 0.81 ) }
    apic_10 { pt3dadd( 286.672, 516.785, 18.2686, 0.8062 ) }
    apic_10 { pt3dadd( 285.772, 516.093, 17.9698, 0.753 ) }
    apic_10 { pt3dadd( 284.742, 515.69, 17.6372, 0.8792 ) }
    apic_10 { pt3dadd( 283.655, 515.453, 17.2922, 0.7072 ) }
    apic_10 { pt3dadd( 282.562, 515.156, 16.9879, 0.7576 ) }
    apic_10 { pt3dadd( 281.447, 514.909, 16.7759, 0.6608 ) }
    apic_10 { pt3dadd( 280.321, 514.767, 16.6961, 0.489 ) }
    apic_10 { pt3dadd( 279.189, 514.614, 16.662, 0.361 ) }
    apic_10 { pt3dadd( 278.07, 514.405, 16.6572, 0.343 ) }
    apic_10 { pt3dadd( 276.943, 514.353, 16.7418, 0.3906 ) }
    apic_10 { pt3dadd( 275.811, 514.404, 16.8577, 0.5416 ) }
    apic_10 { pt3dadd( 274.681, 514.565, 16.9341, 0.5182 ) }
    apic_10 { pt3dadd( 273.544, 514.514, 16.9515, 0.5742 ) }
    apic_10 { pt3dadd( 272.445, 514.257, 16.8846, 0.6522 ) }
    apic_10 { pt3dadd( 271.328, 514.214, 16.7306, 0.6952 ) }
    apic_10 { pt3dadd( 270.19, 514.236, 16.5822, 0.5804 ) }
    apic_10 { pt3dadd( 269.071, 514.002, 16.4716, 0.6264 ) }
    apic_10 { pt3dadd( 267.974, 513.692, 16.4088, 0.5992 ) }
    apic_10 { pt3dadd( 266.951, 513.178, 16.3943, 0.6366 ) }
    apic_10 { pt3dadd( 265.919, 512.7, 16.422, 0.5082 ) }
    apic_10 { pt3dadd( 264.799, 512.463, 16.4847, 0.5428 ) }
    apic_10 { pt3dadd( 263.678, 512.276, 16.5903, 0.4294 ) }
    apic_10 { pt3dadd( 262.562, 512.265, 16.7723, 0.3944 ) }
    apic_10 { pt3dadd( 261.446, 512.464, 16.9411, 0.393 ) }
    apic_10 { pt3dadd( 260.332, 512.423, 17.0374, 0.5398 ) }
    apic_10 { pt3dadd( 259.304, 512.101, 17.2315, 0.5448 ) }
    apic_10 { pt3dadd( 258.44, 511.661, 17.4891, 0.4778 ) }
    apic_10 { pt3dadd( 257.437, 512.045, 17.5871, 0.4952 ) }
    apic_10 { pt3dadd( 256.596, 512.813, 17.6582, 0.5274 ) }
    apic_10 { pt3dadd( 255.753, 513.584, 17.6705, 0.586 ) }
    apic_10 { pt3dadd( 255.044, 514.465, 17.6067, 0.4716 ) }
    apic_10 { pt3dadd( 254.485, 515.457, 17.4628, 0.4268 ) }
    apic_10 { pt3dadd( 253.759, 516.312, 17.283, 0.4478 ) }
    apic_10 { pt3dadd( 252.75, 516.609, 17.089, 0.6678 ) }
    apic_10 { pt3dadd( 251.633, 516.626, 16.8619, 0.654 ) }
    apic_10 { pt3dadd( 250.525, 516.763, 16.5872, 0.6166 ) }
    apic_10 { pt3dadd( 249.411, 516.649, 16.35, 0.6044 ) }
    apic_10 { pt3dadd( 248.317, 516.331, 16.2095, 0.5322 ) }
    apic_10 { pt3dadd( 247.2, 516.136, 16.1274, 0.4118 ) }
    apic_10 { pt3dadd( 246.251, 516.296, 15.9331, 0.351 ) }
    apic_10 { pt3dadd( 245.574, 517.033, 15.6876, 0.366 ) }
    apic_10 { pt3dadd( 244.915, 517.131, 15.7853, 0.459 ) }
    apic_10 { pt3dadd( 244.203, 517.74, 16.1196, 0.5436 ) }
    apic_10 { pt3dadd( 243.473, 517.763, 16.1252, 0.4408 ) }
    apic_10 { pt3dadd( 242.867, 517.792, 16.252, 0.3674 ) }
    apic_10 { pt3dadd( 242.446, 518.388, 16.5878, 0.3482 ) }
    apic_10 { pt3dadd( 241.353, 518.476, 16.8778, 0.4314 ) }
    apic_10 { pt3dadd( 240.247, 518.504, 17.106, 0.4666 ) }
    apic_10 { pt3dadd( 239.154, 518.333, 17.3468, 0.4238 ) }
    apic_10 { pt3dadd( 238.033, 518.238, 17.5412, 0.4104 ) }
    apic_10 { pt3dadd( 236.91, 518.406, 17.67, 0.5248 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_10 { pt3dadd( 235.786, 518.604, 17.7416, 0.517 ) }
    apic_10 { pt3dadd( 234.688, 518.901, 17.7766, 0.4258 ) }
    apic_10 { pt3dadd( 233.643, 519.347, 17.7859, 0.4016 ) }
    apic_10 { pt3dadd( 232.535, 519.517, 17.8422, 0.339 ) }
    apic_10 { pt3dadd( 231.451, 519.23, 17.9953, 0.3094 ) }
    apic_10 { pt3dadd( 230.351, 519.065, 18.256, 0.2922 ) }
    apic_10 { pt3dadd( 229.243, 519.011, 18.6012, 0.3068 ) }
    apic_10 { pt3dadd( 228.111, 519.119, 18.9188, 0.3364 ) }
    apic_10 { pt3dadd( 226.974, 519.083, 19.2133, 0.3798 ) }
    apic_10 { pt3dadd( 225.882, 518.785, 19.4782, 0.5154 ) }
    apic_10 { pt3dadd( 224.765, 518.794, 19.7364, 0.499 ) }
    apic_10 { pt3dadd( 223.623, 518.799, 19.9231, 0.3972 ) }
    apic_10 { pt3dadd( 222.48, 518.758, 20.0421, 0.3242 ) }
    apic_10 { pt3dadd( 221.351, 518.578, 20.109, 0.3142 ) }
    apic_10 { pt3dadd( 220.245, 518.359, 20.0796, 0.3734 ) }
    apic_10 { pt3dadd( 219.115, 518.306, 20.0962, 0.334 ) }
    apic_10 { pt3dadd( 217.974, 518.289, 20.1281, 0.3002 ) }
    apic_10 { pt3dadd( 216.831, 518.255, 20.1594, 0.2748 ) }
    apic_10 { pt3dadd( 215.692, 518.156, 20.1877, 0.2752 ) }
    apic_10 { pt3dadd( 214.55, 518.087, 20.2124, 0.2758 ) }
    apic_10 { pt3dadd( 213.408, 518.051, 20.2311, 0.2766 ) }
    apic_10 { pt3dadd( 212.271, 517.924, 20.2334, 0.2786 ) }
    apic_10 { pt3dadd( 211.16, 517.661, 20.2286, 0.2818 ) }
    apic_10 { pt3dadd( 210.112, 517.209, 20.2213, 0.2882 ) }
    apic_10 { pt3dadd( 209.327, 516.392, 20.211, 0.2994 ) }
    apic_10 { pt3dadd( 208.306, 515.898, 20.1956, 0.3228 ) }
    apic_10 { pt3dadd( 207.256, 515.445, 20.1743, 0.3536 ) }
    apic_10 { pt3dadd( 206.317, 514.797, 20.1466, 0.4722 ) }
    apic_10 { pt3dadd( 205.706, 513.838, 20.113, 0.393 ) }
    apic_10 { pt3dadd( 204.822, 513.126, 20.0514, 0.3252 ) }
    apic_10 { pt3dadd( 203.807, 512.623, 19.9427, 0.274 ) }
    apic_10 { pt3dadd( 202.959, 511.86, 19.8492, 0.2736 ) }
    apic_10 { pt3dadd( 202.137, 511.066, 19.7786, 0.2728 ) }
    apic_10 { pt3dadd( 201.119, 510.553, 19.7291, 0.2712 ) }
    apic_10 { pt3dadd( 200.393, 509.677, 19.6991, 0.2684 ) }
    apic_10 { pt3dadd( 199.3, 509.367, 19.6865, 0.2626 ) }
    apic_10 { pt3dadd( 198.174, 509.16, 19.6851, 0.2542 ) }
    apic_10 { pt3dadd( 197.047, 508.967, 19.6851, 0.2288 ) }
    apic_10 { pt3dadd( 195.904, 508.905, 19.6851, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_11 (entry count 39/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 460.899, 241.328, 64.1351, 0.4414 ) }
    apic_21 { pt3dadd( 461.072, 240.305, 64.3194, 0.4412 ) }
    apic_21 { pt3dadd( 461.245, 239.175, 64.4652, 0.59 ) }
    apic_21 { pt3dadd( 461.605, 238.09, 64.5711, 0.599 ) }
    apic_21 { pt3dadd( 462.026, 237.027, 64.64, 0.7676 ) }
    apic_21 { pt3dadd( 462.352, 235.931, 64.6772, 0.8002 ) }
    apic_21 { pt3dadd( 462.62, 234.819, 64.6946, 0.6178 ) }
    apic_21 { pt3dadd( 462.907, 233.711, 64.7052, 0.5432 ) }
    apic_21 { pt3dadd( 463.243, 232.617, 64.7164, 0.4986 ) }
    apic_21 { pt3dadd( 463.58, 231.525, 64.7307, 0.6478 ) }
    apic_21 { pt3dadd( 463.871, 230.419, 64.7506, 0.713 ) }
    apic_21 { pt3dadd( 464.16, 229.311, 64.7786, 0.7162 ) }
    apic_21 { pt3dadd( 464.591, 228.253, 64.8194, 0.6084 ) }
    apic_21 { pt3dadd( 465.069, 227.213, 64.8763, 0.5024 ) }
    apic_21 { pt3dadd( 465.447, 226.135, 64.9508, 0.5356 ) }
    apic_21 { pt3dadd( 465.764, 225.035, 65.0443, 0.6276 ) }
    apic_21 { pt3dadd( 466.266, 224.018, 65.2067, 0.6488 ) }
    apic_21 { pt3dadd( 466.993, 223.201, 65.4875, 0.499 ) }
    apic_21 { pt3dadd( 467.291, 222.1, 65.7378, 0.4526 ) }
    apic_21 { pt3dadd( 467.582, 220.993, 65.9585, 0.3878 ) }
    apic_21 { pt3dadd( 467.904, 219.905, 66.2038, 0.394 ) }
    apic_21 { pt3dadd( 468.241, 218.838, 66.4924, 0.4774 ) }
    apic_21 { pt3dadd( 468.469, 217.72, 66.7484, 0.513 ) }
    apic_21 { pt3dadd( 468.634, 216.588, 66.9483, 0.6982 ) }
    apic_21 { pt3dadd( 468.807, 215.458, 67.1266, 0.6916 ) }
    apic_21 { pt3dadd( 469.016, 214.342, 67.3229, 0.5478 ) }
    apic_21 { pt3dadd( 469.225, 213.226, 67.5231, 0.4626 ) }
    apic_21 { pt3dadd( 469.734, 212.205, 67.7015, 0.5692 ) }
    apic_21 { pt3dadd( 470.247, 211.185, 67.8672, 0.6248 ) }
    apic_21 { pt3dadd( 471.043, 210.363, 67.9932, 0.5018 ) }
    apic_21 { pt3dadd( 471.437, 209.531, 68.0786, 0.4578 ) }
    apic_21 { pt3dadd( 471.995, 208.606, 68.1411, 0.397 ) }
    apic_21 { pt3dadd( 472.775, 207.882, 68.1962, 0.4128 ) }
    apic_21 { pt3dadd( 473.158, 206.899, 68.2587, 0.5046 ) }
    apic_21 { pt3dadd( 473.291, 205.791, 68.3376, 0.6 ) }
    apic_21 { pt3dadd( 473.926, 204.858, 68.4393, 0.682 ) }
    apic_21 { pt3dadd( 474.765, 204.158, 68.6423, 0.8374 ) }
    apic_21 { pt3dadd( 475.204, 203.133, 68.9002, 0.8808 ) }
    apic_21 { pt3dadd( 475.582, 202.066, 69.1659, 0.7764 ) }
    apic_21 { pt3dadd( 475.891, 201.008, 69.4722, 0.5638 ) }
    apic_21 { pt3dadd( 476.221, 199.935, 69.7158, 0.4918 ) }
    apic_21 { pt3dadd( 476.579, 199.005, 69.6702, 0.6244 ) }
    apic_21 { pt3dadd( 476.98, 197.984, 69.545, 0.723 ) }
    apic_21 { pt3dadd( 477.192, 196.878, 69.5187, 0.705 ) }
    apic_21 { pt3dadd( 477.452, 195.774, 69.538, 0.7312 ) }
    apic_21 { pt3dadd( 477.732, 194.672, 69.5442, 0.7186 ) }
    apic_21 { pt3dadd( 478.043, 193.604, 69.6514, 0.7652 ) }
    apic_21 { pt3dadd( 478.417, 192.597, 69.9107, 0.9684 ) }
    apic_21 { pt3dadd( 478.694, 191.492, 70.1187, 1.0072 ) }
    apic_21 { pt3dadd( 479.079, 190.415, 70.3013, 0.8884 ) }
    apic_21 { pt3dadd( 479.5, 189.383, 70.5832, 0.9092 ) }
    apic_21 { pt3dadd( 479.644, 188.362, 71.0242, 0.9204 ) }
    apic_21 { pt3dadd( 480.327, 187.466, 71.4468, 0.8454 ) }
    apic_21 { pt3dadd( 480.612, 186.374, 71.7338, 0.7136 ) }
    apic_21 { pt3dadd( 480.93, 185.338, 71.9261, 0.6636 ) }
    apic_21 { pt3dadd( 481.349, 184.416, 72.2607, 0.7714 ) }
    apic_21 { pt3dadd( 481.487, 183.456, 72.7247, 0.6834 ) }
    apic_21 { pt3dadd( 481.627, 182.351, 73.0755, 0.775 ) }
    apic_21 { pt3dadd( 481.966, 181.283, 73.3323, 0.851 ) }
    apic_21 { pt3dadd( 482.333, 180.203, 73.5745, 0.9898 ) }
    apic_21 { pt3dadd( 482.739, 179.189, 73.8752, 1.029 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_21 { pt3dadd( 483.236, 178.197, 74.186, 1.016 ) }
    apic_21 { pt3dadd( 483.751, 177.187, 74.496, 0.9496 ) }
    apic_21 { pt3dadd( 484.14, 176.127, 74.8115, 0.8046 ) }
    apic_21 { pt3dadd( 484.653, 175.135, 75.0627, 0.642 ) }
    apic_21 { pt3dadd( 485.01, 174.121, 75.3701, 0.5106 ) }
    apic_21 { pt3dadd( 485.153, 173.126, 75.8624, 0.5862 ) }
    apic_21 { pt3dadd( 485.345, 172.299, 76.2174, 0.5484 ) }
    apic_21 { pt3dadd( 485.374, 171.179, 76.666, 0.6558 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 8/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 460.899, 241.328, 64.1351, 0.4414 ) }
    apic_12 { pt3dadd( 461.343, 241.17, 64.6206, 0.2288 ) }
    apic_12 { pt3dadd( 462.351, 240.702, 64.8827, 0.3252 ) }
    apic_12 { pt3dadd( 463.136, 239.869, 64.9765, 0.3702 ) }
    apic_12 { pt3dadd( 463.932, 239.048, 65.0675, 0.443 ) }
    apic_12 { pt3dadd( 464.662, 238.199, 65.193, 0.6292 ) }
    apic_12 { pt3dadd( 465.304, 236.706, 65.4842, 0.727 ) }
    apic_12 { pt3dadd( 465.637, 235.616, 65.6219, 0.7368 ) }
    apic_12 { pt3dadd( 465.902, 234.504, 65.7275, 0.6724 ) }
    apic_12 { pt3dadd( 466.203, 233.4, 65.8076, 0.4954 ) }
    apic_12 { pt3dadd( 466.544, 232.309, 65.8703, 0.4462 ) }
    apic_12 { pt3dadd( 466.856, 231.212, 65.9098, 0.3742 ) }
    apic_12 { pt3dadd( 467.126, 230.108, 65.9154, 0.3768 ) }
    apic_12 { pt3dadd( 467.408, 229.02, 65.975, 0.4074 ) }
    apic_12 { pt3dadd( 467.71, 227.956, 66.176, 0.5676 ) }
    apic_12 { pt3dadd( 467.996, 226.874, 66.4373, 0.5912 ) }
    apic_12 { pt3dadd( 468.315, 225.778, 66.6977, 0.5896 ) }
    apic_12 { pt3dadd( 468.765, 224.748, 67.0015, 0.5782 ) }
    apic_12 { pt3dadd( 469.379, 223.805, 67.3257, 0.5966 ) }
    apic_12 { pt3dadd( 470.131, 222.951, 67.5884, 0.6686 ) }
    apic_12 { pt3dadd( 470.811, 222.051, 67.8163, 0.618 ) }
    apic_12 { pt3dadd( 471.347, 221.055, 68.0784, 0.732 ) }
    apic_12 { pt3dadd( 471.907, 220.085, 68.3903, 0.8488 ) }
    apic_12 { pt3dadd( 472.457, 219.108, 68.7294, 0.838 ) }
    apic_12 { pt3dadd( 472.827, 218.041, 69.0418, 0.7774 ) }
    apic_12 { pt3dadd( 473.084, 216.926, 69.3115, 0.6348 ) }
    apic_12 { pt3dadd( 473.498, 215.87, 69.5556, 0.745 ) }
    // Section: apic_25, id: apic_25, parent: apic_21 (entry count 35/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 485.374, 171.179, 76.666, 0.6558 ) }
    apic_25 { pt3dadd( 485.383, 170.195, 77.2383, 0.6798 ) }
    apic_25 { pt3dadd( 485.09, 169.442, 78.0704, 0.66 ) }
    apic_25 { pt3dadd( 484.414, 168.573, 78.8886, 0.4778 ) }
    apic_25 { pt3dadd( 484.045, 167.732, 79.7194, 0.3886 ) }
    apic_25 { pt3dadd( 484.126, 166.878, 80.5549, 0.3884 ) }
    apic_25 { pt3dadd( 483.494, 165.939, 81.2288, 0.5016 ) }
    apic_25 { pt3dadd( 482.927, 164.982, 81.7202, 0.6184 ) }
    apic_25 { pt3dadd( 482.614, 163.971, 82.0655, 0.6006 ) }
    apic_25 { pt3dadd( 482.49, 162.896, 82.315, 0.5602 ) }
    apic_25 { pt3dadd( 482.232, 161.835, 82.5107, 0.5226 ) }
    apic_25 { pt3dadd( 481.721, 161.095, 82.882, 0.499 ) }
    apic_25 { pt3dadd( 481.891, 160.168, 83.3087, 0.4604 ) }
    // Section: apic_22, id: apic_22, parent: apic_21 (entry count 48/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 485.374, 171.179, 76.666, 0.6558 ) }
    apic_22 { pt3dadd( 485.868, 170.194, 76.2278, 0.9152 ) }
    apic_22 { pt3dadd( 486.667, 169.39, 76.1939, 0.6454 ) }
    apic_22 { pt3dadd( 487.755, 169.122, 76.1214, 0.4428 ) }
    apic_22 { pt3dadd( 488.826, 168.804, 76.1286, 0.3626 ) }
    apic_22 { pt3dadd( 488.295, 167.832, 76.2042, 0.3798 ) }
    apic_22 { pt3dadd( 487.771, 166.844, 76.3342, 0.523 ) }
    apic_22 { pt3dadd( 487.453, 165.762, 76.4501, 0.4766 ) }
    apic_22 { pt3dadd( 487.199, 164.775, 76.3832, 0.5312 ) }
    apic_22 { pt3dadd( 486.507, 163.947, 76.2482, 0.4082 ) }
    apic_22 { pt3dadd( 486.035, 163.017, 76.0497, 0.353 ) }
    // Section: apic_18, id: apic_18, parent: apic_12 (entry count 59/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 473.498, 215.87, 69.5556, 0.745 ) }
    apic_18 { pt3dadd( 473.322, 215.24, 68.8845, 0.2288 ) }
    apic_18 { pt3dadd( 473.22, 214.14, 69.4042, 0.4022 ) }
    apic_18 { pt3dadd( 473.299, 213.049, 69.6786, 0.3868 ) }
    apic_18 { pt3dadd( 473.482, 211.943, 69.9972, 0.4 ) }
    apic_18 { pt3dadd( 473.64, 210.815, 70.3114, 0.4516 ) }
    apic_18 { pt3dadd( 473.689, 209.682, 70.6294, 0.6438 ) }
    apic_18 { pt3dadd( 473.72, 208.54, 70.9164, 0.76 ) }
    apic_18 { pt3dadd( 473.697, 207.411, 71.2149, 0.769 ) }
    apic_18 { pt3dadd( 473.876, 206.316, 71.4232, 0.8716 ) }
    apic_18 { pt3dadd( 473.696, 205.213, 71.6148, 0.874 ) }
    apic_18 { pt3dadd( 473.46, 204.203, 71.976, 0.8744 ) }
    apic_18 { pt3dadd( 473.257, 203.14, 72.4284, 0.8962 ) }
    apic_18 { pt3dadd( 473.22, 202.02, 72.8868, 0.8344 ) }
    apic_18 { pt3dadd( 473.164, 200.883, 73.2441, 0.7572 ) }
    apic_18 { pt3dadd( 473.042, 199.756, 73.5714, 0.6622 ) }
    apic_18 { pt3dadd( 473.05, 198.727, 73.9791, 0.4818 ) }
    apic_18 { pt3dadd( 473.165, 197.613, 74.3011, 0.3964 ) }
    apic_18 { pt3dadd( 473.031, 196.588, 74.3602, 0.4004 ) }
    apic_18 { pt3dadd( 473.151, 195.471, 74.3974, 0.5368 ) }
    apic_18 { pt3dadd( 473.386, 194.37, 74.5046, 0.6202 ) }
    apic_18 { pt3dadd( 473.523, 193.242, 74.6365, 0.9116 ) }
    apic_18 { pt3dadd( 473.649, 192.107, 74.7247, 1.0164 ) }
    apic_18 { pt3dadd( 473.662, 190.969, 74.7911, 0.8072 ) }
    apic_18 { pt3dadd( 473.465, 189.843, 74.8821, 0.7772 ) }
    apic_18 { pt3dadd( 473.687, 188.942, 75.1909, 0.8146 ) }
    apic_18 { pt3dadd( 473.938, 187.833, 75.4065, 0.891 ) }
    apic_18 { pt3dadd( 474.329, 186.759, 75.6036, 0.9984 ) }
    apic_18 { pt3dadd( 474.896, 185.792, 75.8699, 0.9048 ) }
    apic_18 { pt3dadd( 475.541, 184.86, 76.1594, 0.7794 ) }
    apic_18 { pt3dadd( 476.426, 184.145, 76.433, 0.771 ) }
    apic_18 { pt3dadd( 476.672, 183.034, 76.6531, 0.8118 ) }
    apic_18 { pt3dadd( 477.097, 181.971, 76.8594, 0.8436 ) }
    apic_18 { pt3dadd( 477.408, 180.894, 77.128, 0.8864 ) }
    apic_18 { pt3dadd( 477.701, 179.899, 77.5272, 0.814 ) }
    apic_18 { pt3dadd( 477.574, 178.764, 77.8565, 0.7306 ) }
    apic_18 { pt3dadd( 477.551, 177.68, 78.0206, 0.5586 ) }
    apic_18 { pt3dadd( 477.423, 176.708, 78.1819, 0.5524 ) }
    apic_18 { pt3dadd( 477.395, 175.702, 78.5383, 0.6244 ) }
    apic_18 { pt3dadd( 477.401, 174.719, 79.042, 0.5822 ) }
    apic_18 { pt3dadd( 477.105, 173.735, 79.5175, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_18 { pt3dadd( 476.874, 172.628, 79.8958, 0.713 ) }
    apic_18 { pt3dadd( 477.271, 171.623, 80.318, 0.6878 ) }
    apic_18 { pt3dadd( 477.722, 170.62, 80.7531, 0.6936 ) }
    apic_18 { pt3dadd( 477.961, 169.546, 81.1692, 0.6778 ) }
    apic_18 { pt3dadd( 478.22, 168.516, 81.5777, 0.5474 ) }
    apic_18 { pt3dadd( 477.472, 168.007, 81.744, 0.5692 ) }
    apic_18 { pt3dadd( 477.458, 166.945, 81.753, 0.4732 ) }
    apic_18 { pt3dadd( 477.564, 165.899, 81.8381, 0.501 ) }
    apic_18 { pt3dadd( 477.413, 164.842, 82.0005, 0.4676 ) }
    apic_18 { pt3dadd( 477.153, 163.729, 82.1666, 0.5886 ) }
    apic_18 { pt3dadd( 477.007, 162.61, 82.3964, 0.6126 ) }
    apic_18 { pt3dadd( 477.359, 161.628, 82.563, 0.485 ) }
    apic_18 { pt3dadd( 477.549, 160.529, 82.6963, 0.397 ) }
    apic_18 { pt3dadd( 477.355, 159.454, 82.9749, 0.4278 ) }
    apic_18 { pt3dadd( 477.34, 158.389, 83.4394, 0.4596 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 15/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 473.498, 215.87, 69.5556, 0.745 ) }
    apic_13 { pt3dadd( 474.364, 215.249, 70.0946, 0.7316 ) }
    apic_13 { pt3dadd( 475.065, 214.344, 70.3926, 0.6216 ) }
    apic_13 { pt3dadd( 475.772, 213.447, 70.6916, 0.6004 ) }
    apic_13 { pt3dadd( 476.494, 212.574, 71.0262, 0.8182 ) }
    apic_13 { pt3dadd( 477.176, 211.687, 71.4162, 1.1194 ) }
    apic_13 { pt3dadd( 477.782, 210.779, 71.8774, 1.2598 ) }
    apic_13 { pt3dadd( 478.448, 209.869, 72.3198, 1.2622 ) }
    apic_13 { pt3dadd( 479.066, 208.908, 72.7121, 1.1454 ) }
    apic_13 { pt3dadd( 479.402, 207.826, 73.0601, 1.0594 ) }
    apic_13 { pt3dadd( 479.751, 206.751, 73.4205, 0.9526 ) }
    apic_13 { pt3dadd( 480.272, 205.785, 73.8573, 0.9574 ) }
    apic_13 { pt3dadd( 480.893, 204.883, 74.3635, 0.8958 ) }
    apic_13 { pt3dadd( 481.335, 203.849, 74.8902, 0.896 ) }
    apic_13 { pt3dadd( 481.657, 202.763, 75.4256, 0.7984 ) }
    apic_13 { pt3dadd( 482.046, 201.704, 75.9749, 0.6354 ) }
    apic_13 { pt3dadd( 482.357, 200.639, 76.5565, 0.7042 ) }
    apic_13 { pt3dadd( 482.698, 199.705, 77.2106, 0.6308 ) }
    apic_13 { pt3dadd( 483.087, 198.913, 77.9993, 0.5566 ) }
    apic_13 { pt3dadd( 483.571, 198.024, 78.6887, 0.5758 ) }
    apic_13 { pt3dadd( 484.26, 197.14, 79.2187, 0.7644 ) }
    apic_13 { pt3dadd( 484.642, 196.105, 79.6522, 0.6016 ) }
    apic_13 { pt3dadd( 485.078, 195.075, 79.966, 0.4984 ) }
    apic_13 { pt3dadd( 485.529, 194.092, 80.1041, 0.4882 ) }
    apic_13 { pt3dadd( 486.15, 193.485, 80.3482, 0.7326 ) }
    apic_13 { pt3dadd( 486.785, 192.674, 80.7279, 0.8228 ) }
    apic_13 { pt3dadd( 487.224, 191.644, 81.1686, 0.692 ) }
    apic_13 { pt3dadd( 487.262, 190.561, 81.501, 0.525 ) }
    apic_13 { pt3dadd( 487.358, 189.473, 81.9179, 0.535 ) }
    apic_13 { pt3dadd( 487.838, 188.599, 82.5093, 0.603 ) }
    apic_13 { pt3dadd( 488.62, 187.859, 83.0836, 0.718 ) }
    apic_13 { pt3dadd( 489.012, 186.85, 83.5825, 0.757 ) }
    apic_13 { pt3dadd( 489.621, 186.058, 84.2456, 0.7586 ) }
    apic_13 { pt3dadd( 490.157, 185.186, 84.999, 0.6468 ) }
    apic_13 { pt3dadd( 490.761, 184.282, 85.6786, 0.7682 ) }
    apic_13 { pt3dadd( 491.529, 183.452, 86.2658, 0.7712 ) }
    apic_13 { pt3dadd( 492.227, 182.618, 86.8739, 0.7108 ) }
    apic_13 { pt3dadd( 493.067, 181.871, 87.4378, 0.6894 ) }
    apic_13 { pt3dadd( 493.943, 181.145, 87.85, 0.6686 ) }
    apic_13 { pt3dadd( 494.296, 180.107, 88.1633, 0.5378 ) }
    apic_13 { pt3dadd( 494.636, 179.284, 88.6987, 0.5142 ) }
    apic_13 { pt3dadd( 494.921, 178.25, 89.2506, 0.5518 ) }
    apic_13 { pt3dadd( 495.607, 177.546, 89.9259, 0.4556 ) }
    apic_13 { pt3dadd( 496.247, 177.057, 90.4344, 0.396 ) }
    apic_13 { pt3dadd( 496.641, 176.528, 90.7508, 0.3958 ) }
    apic_13 { pt3dadd( 497.268, 175.818, 91.2962, 0.5464 ) }
    apic_13 { pt3dadd( 498.199, 175.726, 91.9724, 0.5508 ) }
    apic_13 { pt3dadd( 499.282, 175.526, 92.6699, 0.5192 ) }
    // Section: apic_27, id: apic_27, parent: apic_25 (entry count 63/100)
    apic_27 { pt3dclear() }
    apic_27 { pt3dadd( 481.891, 160.168, 83.3087, 0.4604 ) }
    apic_27 { pt3dadd( 482.016, 159.559, 84.8985, 0.2288 ) }
    apic_27 { pt3dadd( 482.094, 158.796, 86.756, 0.3752 ) }
    apic_27 { pt3dadd( 482.172, 158.016, 87.631, 0.337 ) }
    apic_27 { pt3dadd( 482.592, 157.037, 88.4537, 0.3058 ) }
    apic_27 { pt3dadd( 482.993, 156.113, 88.9927, 0.2854 ) }
    apic_27 { pt3dadd( 483.216, 155.149, 89.5457, 0.2944 ) }
    apic_27 { pt3dadd( 482.909, 154.189, 90.2096, 0.3122 ) }
    apic_27 { pt3dadd( 482.635, 153.107, 90.8298, 0.3402 ) }
    apic_27 { pt3dadd( 482.81, 152.077, 91.5762, 0.4166 ) }
    apic_27 { pt3dadd( 483.456, 151.424, 92.5327, 0.4396 ) }
    apic_27 { pt3dadd( 484.091, 151.114, 93.5721, 0.3718 ) }
    apic_27 { pt3dadd( 484.549, 150.309, 94.5697, 0.3242 ) }
    apic_27 { pt3dadd( 484.923, 149.918, 95.8009, 0.3142 ) }
    apic_27 { pt3dadd( 485.734, 149.787, 97.1261, 0.3734 ) }
    apic_27 { pt3dadd( 486.759, 149.561, 98.3942, 0.3338 ) }
    apic_27 { pt3dadd( 487.885, 149.457, 99.4706, 0.3 ) }
    apic_27 { pt3dadd( 488.814, 149.11, 100.479, 0.2746 ) }
    apic_27 { pt3dadd( 489.229, 149.458, 101.687, 0.2746 ) }
    apic_27 { pt3dadd( 490.179, 149.734, 102.867, 0.2746 ) }
    apic_27 { pt3dadd( 491.243, 150.01, 103.944, 0.2746 ) }
    apic_27 { pt3dadd( 492.199, 150.469, 104.973, 0.2746 ) }
    apic_27 { pt3dadd( 493.113, 150.685, 106.046, 0.2746 ) }
    apic_27 { pt3dadd( 494.186, 150.562, 107.051, 0.2746 ) }
    apic_27 { pt3dadd( 495.313, 150.446, 107.928, 0.2746 ) }
    apic_27 { pt3dadd( 496.401, 150.365, 108.795, 0.2746 ) }
    apic_27 { pt3dadd( 497.401, 150.338, 109.762, 0.2746 ) }
    apic_27 { pt3dadd( 498.401, 150.338, 110.795, 0.2746 ) }
    apic_27 { pt3dadd( 499.465, 150.352, 111.817, 0.2746 ) }
    apic_27 { pt3dadd( 500.498, 150.529, 112.826, 0.2746 ) }
    apic_27 { pt3dadd( 501.319, 150.88, 113.885, 0.2746 ) }
    apic_27 { pt3dadd( 502.15, 151.024, 114.958, 0.2746 ) }
    apic_27 { pt3dadd( 503.243, 151.029, 115.808, 0.2746 ) }
    apic_27 { pt3dadd( 504.376, 151.165, 116.405, 0.2748 ) }
    apic_27 { pt3dadd( 505.45, 151.538, 116.803, 0.275 ) }
    apic_27 { pt3dadd( 506.4, 152.165, 117.047, 0.2752 ) }
    apic_27 { pt3dadd( 507.364, 152.779, 117.184, 0.2758 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_27 { pt3dadd( 508.482, 152.937, 117.291, 0.2768 ) }
    apic_27 { pt3dadd( 509.595, 153.147, 117.446, 0.2788 ) }
    apic_27 { pt3dadd( 510.71, 153.392, 117.602, 0.2826 ) }
    apic_27 { pt3dadd( 511.806, 153.72, 117.758, 0.2894 ) }
    apic_27 { pt3dadd( 512.93, 153.931, 117.921, 0.3018 ) }
    apic_27 { pt3dadd( 514.042, 154.157, 118.143, 0.3256 ) }
    apic_27 { pt3dadd( 515.166, 154.352, 118.396, 0.3662 ) }
    apic_27 { pt3dadd( 516.236, 154.719, 118.701, 0.4596 ) }
    apic_27 { pt3dadd( 517.184, 155.289, 119.095, 0.5446 ) }
    apic_27 { pt3dadd( 518.121, 155.876, 119.55, 0.4438 ) }
    apic_27 { pt3dadd( 519.059, 156.461, 120.032, 0.3668 ) }
    apic_27 { pt3dadd( 520.155, 156.736, 120.455, 0.3768 ) }
    apic_27 { pt3dadd( 521.296, 156.799, 120.786, 0.3402 ) }
    apic_27 { pt3dadd( 522.386, 157.087, 121.079, 0.3114 ) }
    apic_27 { pt3dadd( 523.468, 157.458, 121.269, 0.297 ) }
    apic_27 { pt3dadd( 524.531, 157.88, 121.382, 0.3108 ) }
    apic_27 { pt3dadd( 525.649, 158.122, 121.442, 0.3672 ) }
    apic_27 { pt3dadd( 526.646, 158.681, 121.472, 0.322 ) }
    apic_27 { pt3dadd( 527.755, 158.956, 121.486, 0.2796 ) }
    apic_27 { pt3dadd( 528.896, 159.033, 121.486, 0.2288 ) }
    apic_27 { pt3dadd( 530.04, 159.033, 121.486, 0.2288 ) }
    // Section: apic_26, id: apic_26, parent: apic_25 (entry count 21/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 481.891, 160.168, 83.3087, 0.4604 ) }
    apic_26 { pt3dadd( 481.204, 159.882, 83.494, 0.3636 ) }
    apic_26 { pt3dadd( 480.425, 159.247, 83.6976, 0.308 ) }
    apic_26 { pt3dadd( 479.739, 158.368, 83.9073, 0.2892 ) }
    apic_26 { pt3dadd( 479.223, 157.397, 83.9387, 0.3026 ) }
    apic_26 { pt3dadd( 478.97, 156.349, 83.9222, 0.3214 ) }
    apic_26 { pt3dadd( 478.55, 155.369, 84.0003, 0.387 ) }
    apic_26 { pt3dadd( 477.787, 154.519, 84.1137, 0.3588 ) }
    apic_26 { pt3dadd( 477.125, 153.593, 84.2576, 0.3484 ) }
    apic_26 { pt3dadd( 476.524, 152.62, 84.4726, 0.3536 ) }
    apic_26 { pt3dadd( 475.925, 151.645, 84.7815, 0.4722 ) }
    apic_26 { pt3dadd( 475.325, 150.672, 85.1665, 0.3932 ) }
    apic_26 { pt3dadd( 474.808, 149.794, 85.7864, 0.3254 ) }
    apic_26 { pt3dadd( 474.538, 149.275, 86.76, 0.2746 ) }
    apic_26 { pt3dadd( 474.259, 148.749, 87.9584, 0.2746 ) }
    apic_26 { pt3dadd( 473.655, 147.921, 89.0918, 0.2746 ) }
    apic_26 { pt3dadd( 473.01, 146.986, 89.9581, 0.2746 ) }
    apic_26 { pt3dadd( 472.534, 145.963, 90.5792, 0.2746 ) }
    apic_26 { pt3dadd( 471.715, 145.169, 90.9891, 0.2746 ) }
    apic_26 { pt3dadd( 471.004, 144.29, 91.2932, 0.2746 ) }
    apic_26 { pt3dadd( 470.333, 143.39, 91.5589, 0.2746 ) }
    apic_26 { pt3dadd( 469.602, 142.51, 91.7717, 0.2746 ) }
    apic_26 { pt3dadd( 468.882, 141.622, 91.9584, 0.2746 ) }
    apic_26 { pt3dadd( 468.3, 140.68, 92.1474, 0.2746 ) }
    apic_26 { pt3dadd( 468.041, 139.679, 92.4202, 0.2746 ) }
    apic_26 { pt3dadd( 467.213, 138.891, 92.6358, 0.2746 ) }
    apic_26 { pt3dadd( 466.435, 138.053, 92.8102, 0.2746 ) }
    apic_26 { pt3dadd( 465.718, 137.162, 92.9667, 0.2746 ) }
    apic_26 { pt3dadd( 464.973, 136.296, 93.1185, 0.2746 ) }
    apic_26 { pt3dadd( 464.141, 135.511, 93.2775, 0.2746 ) }
    apic_26 { pt3dadd( 463.293, 134.745, 93.457, 0.2746 ) }
    apic_26 { pt3dadd( 462.484, 133.952, 93.7082, 0.2746 ) }
    apic_26 { pt3dadd( 461.626, 133.311, 94.1172, 0.2746 ) }
    apic_26 { pt3dadd( 460.745, 132.798, 94.6918, 0.2746 ) }
    apic_26 { pt3dadd( 459.986, 132.037, 95.3207, 0.2746 ) }
    apic_26 { pt3dadd( 459.311, 131.121, 95.884, 0.2746 ) }
    apic_26 { pt3dadd( 458.543, 130.276, 96.353, 0.2746 ) }
    apic_26 { pt3dadd( 457.838, 129.399, 96.766, 0.2746 ) }
    apic_26 { pt3dadd( 457.283, 128.485, 97.2275, 0.2746 ) }
    apic_26 { pt3dadd( 456.707, 127.575, 97.6965, 0.2746 ) }
    apic_26 { pt3dadd( 456.211, 126.594, 98.1655, 0.2746 ) }
    apic_26 { pt3dadd( 455.493, 125.839, 98.6734, 0.2746 ) }
    apic_26 { pt3dadd( 454.664, 125.1, 99.1519, 0.2746 ) }
    apic_26 { pt3dadd( 453.936, 124.227, 99.5324, 0.2746 ) }
    apic_26 { pt3dadd( 453.183, 123.387, 99.7382, 0.2746 ) }
    apic_26 { pt3dadd( 452.466, 122.509, 99.8379, 0.2746 ) }
    apic_26 { pt3dadd( 451.787, 121.588, 99.9015, 0.2746 ) }
    apic_26 { pt3dadd( 450.99, 120.946, 100.075, 0.2746 ) }
    apic_26 { pt3dadd( 450.171, 120.217, 100.256, 0.2746 ) }
    apic_26 { pt3dadd( 449.478, 119.532, 100.229, 0.2748 ) }
    apic_26 { pt3dadd( 448.703, 118.752, 100.215, 0.275 ) }
    apic_26 { pt3dadd( 447.659, 118.385, 100.197, 0.2752 ) }
    apic_26 { pt3dadd( 446.825, 117.61, 100.161, 0.2758 ) }
    apic_26 { pt3dadd( 446.058, 116.796, 100.185, 0.2768 ) }
    apic_26 { pt3dadd( 445.275, 116.052, 100.325, 0.2788 ) }
    apic_26 { pt3dadd( 444.246, 115.572, 100.514, 0.2824 ) }
    apic_26 { pt3dadd( 443.51, 114.747, 100.654, 0.2882 ) }
    apic_26 { pt3dadd( 442.574, 114.181, 100.834, 0.305 ) }
    apic_26 { pt3dadd( 441.816, 113.357, 101.029, 0.305 ) }
    apic_26 { pt3dadd( 441.012, 112.57, 101.08, 0.4576 ) }
    // Section: apic_24, id: apic_24, parent: apic_22 (entry count 81/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 486.035, 163.017, 76.0497, 0.353 ) }
    apic_24 { pt3dadd( 485.976, 162.463, 75.9172, 0.3278 ) }
    apic_24 { pt3dadd( 485.577, 161.994, 76.284, 0.3628 ) }
    apic_24 { pt3dadd( 485.484, 161.127, 77.0378, 0.489 ) }
    apic_24 { pt3dadd( 485.391, 160.411, 78.1245, 0.4252 ) }
    apic_24 { pt3dadd( 485.526, 159.378, 79.2537, 0.3796 ) }
    apic_24 { pt3dadd( 485.218, 158.351, 80.3412, 0.4004 ) }
    apic_24 { pt3dadd( 484.961, 157.345, 81.298, 0.3846 ) }
    apic_24 { pt3dadd( 485.065, 156.458, 82.166, 0.3898 ) }
    apic_24 { pt3dadd( 484.492, 155.489, 82.7728, 0.462 ) }
    apic_24 { pt3dadd( 483.744, 154.632, 83.1835, 0.5206 ) }
    apic_24 { pt3dadd( 483.032, 153.744, 83.5187, 0.5372 ) }
    apic_24 { pt3dadd( 482.429, 153.338, 83.9068, 0.557 ) }
    apic_24 { pt3dadd( 482.009, 152.293, 84.198, 0.4186 ) }
    apic_24 { pt3dadd( 481.408, 151.332, 84.4508, 0.3254 ) }
    apic_24 { pt3dadd( 480.987, 150.329, 84.7753, 0.2746 ) }
    apic_24 { pt3dadd( 480.74, 149.231, 84.9965, 0.2746 ) }
    apic_24 { pt3dadd( 479.86, 148.544, 85.1701, 0.2746 ) }
    apic_24 { pt3dadd( 479.431, 147.484, 85.3115, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_24 { pt3dadd( 479.109, 146.402, 85.477, 0.2746 ) }
    apic_24 { pt3dadd( 478.379, 145.556, 85.5607, 0.2746 ) }
    apic_24 { pt3dadd( 477.638, 144.74, 85.7674, 0.2746 ) }
    apic_24 { pt3dadd( 476.897, 143.926, 86.0762, 0.2746 ) }
    apic_24 { pt3dadd( 476.15, 143.117, 86.4408, 0.2746 ) }
    apic_24 { pt3dadd( 475.118, 142.628, 86.7292, 0.2746 ) }
    apic_24 { pt3dadd( 474.198, 141.947, 86.9378, 0.2746 ) }
    apic_24 { pt3dadd( 473.291, 141.257, 87.0786, 0.2746 ) }
    apic_24 { pt3dadd( 472.577, 140.364, 87.1461, 0.2746 ) }
    apic_24 { pt3dadd( 471.759, 139.568, 87.1665, 0.2746 ) }
    apic_24 { pt3dadd( 471.059, 138.665, 87.164, 0.2746 ) }
    apic_24 { pt3dadd( 470.229, 137.884, 87.1587, 0.2746 ) }
    apic_24 { pt3dadd( 469.355, 137.19, 87.1517, 0.2746 ) }
    apic_24 { pt3dadd( 468.874, 136.152, 87.1419, 0.2746 ) }
    apic_24 { pt3dadd( 468.35, 135.138, 87.1256, 0.2746 ) }
    apic_24 { pt3dadd( 467.623, 134.276, 87.1032, 0.2746 ) }
    apic_24 { pt3dadd( 466.739, 133.581, 87.0789, 0.2746 ) }
    apic_24 { pt3dadd( 466.121, 132.62, 87.0565, 0.2746 ) }
    apic_24 { pt3dadd( 465.5, 131.703, 86.9938, 0.2746 ) }
    apic_24 { pt3dadd( 465.079, 130.83, 86.8115, 0.2746 ) }
    apic_24 { pt3dadd( 465.192, 129.865, 86.7647, 0.2746 ) }
    apic_24 { pt3dadd( 465.018, 128.919, 86.8941, 0.2746 ) }
    apic_24 { pt3dadd( 464.454, 127.938, 87.0058, 0.2746 ) }
    apic_24 { pt3dadd( 463.982, 126.973, 87.1654, 0.2744 ) }
    apic_24 { pt3dadd( 463.9, 125.97, 87.1158, 0.2744 ) }
    apic_24 { pt3dadd( 463.788, 124.927, 86.8532, 0.2742 ) }
    apic_24 { pt3dadd( 463.294, 124.064, 86.3856, 0.274 ) }
    apic_24 { pt3dadd( 463.568, 123.037, 85.9914, 0.2736 ) }
    apic_24 { pt3dadd( 463.33, 121.962, 85.7298, 0.2728 ) }
    apic_24 { pt3dadd( 462.494, 121.23, 85.4969, 0.2712 ) }
    apic_24 { pt3dadd( 462.018, 120.205, 85.3493, 0.2684 ) }
    apic_24 { pt3dadd( 461.949, 119.066, 85.2849, 0.2626 ) }
    apic_24 { pt3dadd( 461.947, 117.922, 85.2681, 0.2542 ) }
    apic_24 { pt3dadd( 461.832, 116.785, 85.2611, 0.2288 ) }
    apic_24 { pt3dadd( 461.146, 115.887, 85.4, 0.2288 ) }
    // Section: apic_23, id: apic_23, parent: apic_22 (entry count 35/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 486.035, 163.017, 76.0497, 0.353 ) }
    apic_23 { pt3dadd( 486.23, 162.258, 72.5259, 0.2288 ) }
    apic_23 { pt3dadd( 486.722, 162.389, 70.6152, 0.402 ) }
    apic_23 { pt3dadd( 487.391, 161.668, 69.8141, 0.389 ) }
    apic_23 { pt3dadd( 487.679, 160.753, 69.1541, 0.3916 ) }
    apic_23 { pt3dadd( 488.339, 160.303, 68.3166, 0.4964 ) }
    apic_23 { pt3dadd( 488.894, 159.633, 67.5511, 0.4328 ) }
    apic_23 { pt3dadd( 488.4, 159.076, 66.8046, 0.4242 ) }
    apic_23 { pt3dadd( 488.709, 158.544, 66.0162, 0.3338 ) }
    apic_23 { pt3dadd( 489.195, 157.631, 65.3181, 0.3 ) }
    apic_23 { pt3dadd( 489.113, 156.571, 64.7508, 0.2746 ) }
    apic_23 { pt3dadd( 489.194, 155.472, 64.4588, 0.2746 ) }
    apic_23 { pt3dadd( 489.832, 154.812, 64.1488, 0.2746 ) }
    apic_23 { pt3dadd( 490.69, 154.153, 63.8812, 0.2746 ) }
    apic_23 { pt3dadd( 490.928, 153.097, 63.7067, 0.2746 ) }
    apic_23 { pt3dadd( 490.973, 151.954, 63.5751, 0.2746 ) }
    apic_23 { pt3dadd( 491.6, 151.071, 63.4645, 0.2746 ) }
    apic_23 { pt3dadd( 492.627, 150.616, 63.3648, 0.2746 ) }
    apic_23 { pt3dadd( 493.722, 150.283, 63.2842, 0.2746 ) }
    apic_23 { pt3dadd( 494.832, 150.086, 63.1548, 0.2746 ) }
    apic_23 { pt3dadd( 495.44, 149.239, 62.9577, 0.2746 ) }
    apic_23 { pt3dadd( 495.613, 148.116, 62.806, 0.2746 ) }
    apic_23 { pt3dadd( 496.122, 147.098, 62.7102, 0.2746 ) }
    apic_23 { pt3dadd( 496.887, 146.25, 62.6713, 0.2746 ) }
    apic_23 { pt3dadd( 497.658, 145.404, 62.6878, 0.2746 ) }
    apic_23 { pt3dadd( 498.534, 144.671, 62.7774, 0.2746 ) }
    apic_23 { pt3dadd( 499.44, 143.977, 62.923, 0.2746 ) }
    apic_23 { pt3dadd( 500.178, 143.126, 63.1288, 0.2746 ) }
    apic_23 { pt3dadd( 500.878, 142.243, 63.3744, 0.2746 ) }
    apic_23 { pt3dadd( 501.472, 141.292, 63.6426, 0.2746 ) }
    apic_23 { pt3dadd( 502.047, 140.312, 63.8733, 0.2746 ) }
    apic_23 { pt3dadd( 502.555, 139.299, 63.9607, 0.2746 ) }
    apic_23 { pt3dadd( 503.143, 138.327, 63.9414, 0.2746 ) }
    apic_23 { pt3dadd( 503.861, 137.441, 63.861, 0.2746 ) }
    apic_23 { pt3dadd( 504.781, 136.764, 63.7599, 0.2746 ) }
    apic_23 { pt3dadd( 505.812, 136.272, 63.674, 0.2746 ) }
    apic_23 { pt3dadd( 506.469, 135.337, 63.6171, 0.2746 ) }
    apic_23 { pt3dadd( 507.033, 134.346, 63.5942, 0.2746 ) }
    apic_23 { pt3dadd( 507.882, 133.579, 63.5953, 0.2746 ) }
    apic_23 { pt3dadd( 508.76, 132.846, 63.614, 0.2746 ) }
    apic_23 { pt3dadd( 509.729, 132.246, 63.6457, 0.2744 ) }
    apic_23 { pt3dadd( 510.774, 131.875, 63.6765, 0.2744 ) }
    apic_23 { pt3dadd( 510.98, 130.821, 63.681, 0.2742 ) }
    apic_23 { pt3dadd( 510.868, 129.745, 63.8257, 0.274 ) }
    apic_23 { pt3dadd( 510.731, 128.652, 64.0262, 0.2736 ) }
    apic_23 { pt3dadd( 510.614, 127.524, 64.1589, 0.2728 ) }
    apic_23 { pt3dadd( 510.406, 126.423, 64.318, 0.2712 ) }
    apic_23 { pt3dadd( 509.889, 125.435, 64.4619, 0.2684 ) }
    apic_23 { pt3dadd( 509.511, 124.369, 64.608, 0.2626 ) }
    apic_23 { pt3dadd( 509.613, 123.294, 64.8354, 0.2542 ) }
    apic_23 { pt3dadd( 510.099, 122.282, 65.0843, 0.2288 ) }
    apic_23 { pt3dadd( 510.796, 121.378, 65.52, 0.2288 ) }
    // Section: apic_20, id: apic_20, parent: apic_18 (entry count 87/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 477.34, 158.389, 83.4394, 0.4596 ) }
    apic_20 { pt3dadd( 477.079, 157.443, 83.4361, 0.4576 ) }
    apic_20 { pt3dadd( 476.722, 156.386, 83.4126, 0.3596 ) }
    apic_20 { pt3dadd( 476.701, 155.242, 83.4033, 0.3006 ) }
    apic_20 { pt3dadd( 476.468, 154.165, 83.3896, 0.2756 ) }
    apic_20 { pt3dadd( 476.133, 153.121, 83.3703, 0.2766 ) }
    apic_20 { pt3dadd( 476.133, 151.977, 83.3426, 0.2782 ) }
    apic_20 { pt3dadd( 476.133, 150.833, 83.3045, 0.2814 ) }
    apic_20 { pt3dadd( 476.312, 149.721, 83.251, 0.287 ) }
    apic_20 { pt3dadd( 476.606, 148.619, 83.174, 0.2988 ) }
    apic_20 { pt3dadd( 476.705, 147.484, 83.0656, 0.3142 ) }
    apic_20 { pt3dadd( 476.728, 146.34, 82.9203, 0.3734 ) }
    apic_20 { pt3dadd( 476.96, 145.238, 82.7375, 0.3338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    apic_20 { pt3dadd( 477.244, 144.202, 82.4258, 0.3 ) }
    apic_20 { pt3dadd( 477.404, 143.172, 81.9535, 0.2746 ) }
    apic_20 { pt3dadd( 477.569, 142.124, 81.3884, 0.2746 ) }
    apic_20 { pt3dadd( 477.826, 141.046, 80.8609, 0.2746 ) }
    apic_20 { pt3dadd( 478.059, 139.938, 80.4793, 0.2746 ) }
    apic_20 { pt3dadd( 478.112, 138.803, 80.1973, 0.2746 ) }
    apic_20 { pt3dadd( 478.112, 137.659, 79.9786, 0.2746 ) }
    apic_20 { pt3dadd( 478.263, 136.567, 79.7213, 0.2746 ) }
    apic_20 { pt3dadd( 478.548, 135.557, 79.3537, 0.2746 ) }
    apic_20 { pt3dadd( 478.741, 134.465, 78.9947, 0.2746 ) }
    apic_20 { pt3dadd( 478.871, 133.329, 78.7086, 0.2746 ) }
    apic_20 { pt3dadd( 478.833, 132.19, 78.5044, 0.2746 ) }
    apic_20 { pt3dadd( 478.509, 131.1, 78.3782, 0.2746 ) }
    apic_20 { pt3dadd( 478.215, 129.996, 78.3208, 0.2746 ) }
    apic_20 { pt3dadd( 478.305, 128.872, 78.3098, 0.2746 ) }
    apic_20 { pt3dadd( 478.494, 127.744, 78.3138, 0.2746 ) }
    apic_20 { pt3dadd( 478.682, 126.615, 78.3216, 0.2744 ) }
    apic_20 { pt3dadd( 478.869, 125.487, 78.3289, 0.2744 ) }
    apic_20 { pt3dadd( 479.103, 124.367, 78.3401, 0.2742 ) }
    apic_20 { pt3dadd( 479.423, 123.269, 78.3602, 0.274 ) }
    apic_20 { pt3dadd( 479.831, 122.201, 78.3964, 0.2736 ) }
    apic_20 { pt3dadd( 480.556, 121.333, 78.4582, 0.2728 ) }
    apic_20 { pt3dadd( 480.712, 120.646, 78.3572, 0.2712 ) }
    apic_20 { pt3dadd( 481.052, 119.976, 78.5355, 0.2684 ) }
    apic_20 { pt3dadd( 481.258, 118.878, 78.7713, 0.2626 ) }
    apic_20 { pt3dadd( 481.51, 117.841, 79.165, 0.2542 ) }
    apic_20 { pt3dadd( 481.407, 116.868, 79.6846, 0.2288 ) }
    apic_20 { pt3dadd( 480.938, 116.002, 80.92, 0.2288 ) }
    // Section: apic_19, id: apic_19, parent: apic_18 (entry count 28/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 477.34, 158.389, 83.4394, 0.4596 ) }
    apic_19 { pt3dadd( 476.984, 156.993, 84.453, 0.4114 ) }
    apic_19 { pt3dadd( 476.822, 156.318, 85.2496, 0.386 ) }
    apic_19 { pt3dadd( 477.076, 155.392, 86.158, 0.485 ) }
    apic_19 { pt3dadd( 476.923, 154.346, 87.124, 0.418 ) }
    apic_19 { pt3dadd( 476.827, 153.226, 88.0566, 0.3662 ) }
    apic_19 { pt3dadd( 476.582, 152.191, 89.0624, 0.3756 ) }
    apic_19 { pt3dadd( 476.286, 151.34, 90.2014, 0.3378 ) }
    apic_19 { pt3dadd( 475.776, 150.815, 91.4735, 0.3074 ) }
    apic_19 { pt3dadd( 474.816, 150.674, 92.6268, 0.2884 ) }
    apic_19 { pt3dadd( 473.99, 150.473, 93.7933, 0.2998 ) }
    apic_19 { pt3dadd( 473.955, 149.553, 94.9628, 0.3234 ) }
    apic_19 { pt3dadd( 473.904, 148.444, 95.9865, 0.3548 ) }
    apic_19 { pt3dadd( 473.476, 147.499, 96.9671, 0.4742 ) }
    apic_19 { pt3dadd( 472.81, 146.637, 97.8813, 0.3968 ) }
    apic_19 { pt3dadd( 472.354, 145.7, 98.8098, 0.3322 ) }
    apic_19 { pt3dadd( 472.123, 144.644, 99.7016, 0.287 ) }
    apic_19 { pt3dadd( 471.872, 143.561, 100.525, 0.2988 ) }
    apic_19 { pt3dadd( 471.425, 142.596, 101.352, 0.3142 ) }
    apic_19 { pt3dadd( 470.908, 141.736, 102.208, 0.3734 ) }
    apic_19 { pt3dadd( 470.25, 140.82, 102.973, 0.3338 ) }
    apic_19 { pt3dadd( 469.532, 140.004, 103.716, 0.3 ) }
    apic_19 { pt3dadd( 468.865, 139.181, 104.429, 0.2746 ) }
    apic_19 { pt3dadd( 468.413, 138.151, 105.043, 0.2746 ) }
    apic_19 { pt3dadd( 468.184, 137.046, 105.659, 0.2746 ) }
    apic_19 { pt3dadd( 467.925, 136.036, 106.364, 0.2746 ) }
    apic_19 { pt3dadd( 467.456, 135.221, 107.263, 0.2746 ) }
    apic_19 { pt3dadd( 466.734, 134.573, 108.274, 0.2746 ) }
    apic_19 { pt3dadd( 465.847, 134.068, 109.355, 0.2746 ) }
    apic_19 { pt3dadd( 464.849, 133.61, 110.376, 0.2744 ) }
    apic_19 { pt3dadd( 463.798, 133.167, 111.278, 0.2744 ) }
    apic_19 { pt3dadd( 462.915, 132.842, 112.24, 0.2742 ) }
    apic_19 { pt3dadd( 462.152, 132.596, 113.329, 0.274 ) }
    apic_19 { pt3dadd( 461.267, 132.259, 114.432, 0.2736 ) }
    apic_19 { pt3dadd( 460.256, 131.783, 115.354, 0.2728 ) }
    apic_19 { pt3dadd( 459.258, 131.489, 116.236, 0.2712 ) }
    apic_19 { pt3dadd( 458.219, 131.469, 117.074, 0.2684 ) }
    apic_19 { pt3dadd( 457.401, 132.202, 117.689, 0.2626 ) }
    apic_19 { pt3dadd( 457.101, 133.271, 118.191, 0.2542 ) }
    apic_19 { pt3dadd( 456.932, 134.381, 118.611, 0.2288 ) }
    apic_19 { pt3dadd( 456.781, 135.515, 119.147, 0.2288 ) }
    // Section: apic_15, id: apic_15, parent: apic_13 (entry count 69/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 499.282, 175.526, 92.6699, 0.5192 ) }
    apic_15 { pt3dadd( 499.572, 175.105, 93.515, 0.425 ) }
    apic_15 { pt3dadd( 500.53, 174.588, 94.2866, 0.4234 ) }
    apic_15 { pt3dadd( 501.202, 173.706, 94.8508, 0.4954 ) }
    apic_15 { pt3dadd( 501.571, 172.679, 95.4005, 0.7222 ) }
    apic_15 { pt3dadd( 502.094, 171.753, 95.9022, 0.9202 ) }
    apic_15 { pt3dadd( 502.571, 170.949, 96.46, 0.9932 ) }
    apic_15 { pt3dadd( 503.191, 170.151, 97.1163, 0.9552 ) }
    apic_15 { pt3dadd( 504.113, 169.501, 97.7452, 0.81 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 78/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 499.282, 175.526, 92.6699, 0.5192 ) }
    apic_14 { pt3dadd( 499.847, 175.673, 93.4853, 0.4576 ) }
    apic_14 { pt3dadd( 500.883, 176.047, 93.8613, 0.58 ) }
    apic_14 { pt3dadd( 501.854, 176.367, 93.8899, 0.4622 ) }
    apic_14 { pt3dadd( 502.904, 176.338, 93.9837, 0.402 ) }
    apic_14 { pt3dadd( 503.226, 175.819, 94.4482, 0.4372 ) }
    apic_14 { pt3dadd( 503.69, 175.1, 95.1717, 0.4768 ) }
    apic_14 { pt3dadd( 504.378, 175.232, 96.098, 0.4444 ) }
    apic_14 { pt3dadd( 505.433, 175.069, 96.8425, 0.442 ) }
    apic_14 { pt3dadd( 506.451, 175.069, 97.6948, 0.6142 ) }
    apic_14 { pt3dadd( 507.244, 174.951, 98.747, 0.5342 ) }
    apic_14 { pt3dadd( 508.085, 174.756, 99.892, 0.4938 ) }
    apic_14 { pt3dadd( 509.121, 174.802, 100.87, 0.58 ) }
    apic_14 { pt3dadd( 509.966, 175.316, 101.811, 0.6448 ) }
    apic_14 { pt3dadd( 510.704, 175.898, 102.868, 0.54 ) }
    apic_14 { pt3dadd( 511.604, 176.163, 103.959, 0.5232 ) }
    apic_14 { pt3dadd( 512.673, 176.302, 104.983, 0.5444 ) }
    apic_14 { pt3dadd( 513.717, 176.42, 105.993, 0.5582 ) }
    apic_14 { pt3dadd( 514.601, 176.2, 106.849, 0.7074 ) }
    apic_14 { pt3dadd( 515.356, 175.792, 107.71, 0.8424 ) }
    apic_14 { pt3dadd( 516.271, 175.486, 108.66, 0.865 ) }
    apic_14 { pt3dadd( 517.042, 174.908, 109.686, 0.64 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    apic_14 { pt3dadd( 517.984, 174.616, 110.768, 0.6026 ) }
    apic_14 { pt3dadd( 518.851, 173.984, 111.753, 0.52 ) }
    apic_14 { pt3dadd( 519.822, 174.015, 112.525, 0.431 ) }
    apic_14 { pt3dadd( 520.801, 174.153, 113.388, 0.4116 ) }
    apic_14 { pt3dadd( 521.836, 174.205, 114.278, 0.357 ) }
    apic_14 { pt3dadd( 522.181, 174.393, 115.435, 0.345 ) }
    apic_14 { pt3dadd( 522.493, 175.29, 116.545, 0.3474 ) }
    apic_14 { pt3dadd( 522.911, 176.092, 117.701, 0.4604 ) }
    apic_14 { pt3dadd( 523.491, 177.0, 118.732, 0.3728 ) }
    apic_14 { pt3dadd( 524.113, 177.954, 119.506, 0.2796 ) }
    apic_14 { pt3dadd( 524.662, 178.909, 120.736, 0.2288 ) }
    // Section: apic_17, id: apic_17, parent: apic_15 (entry count 11/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 504.113, 169.501, 97.7452, 0.81 ) }
    apic_17 { pt3dadd( 504.846, 169.089, 98.2484, 0.6754 ) }
    apic_17 { pt3dadd( 505.624, 168.298, 98.6829, 0.459 ) }
    apic_17 { pt3dadd( 506.261, 167.384, 99.1488, 0.3544 ) }
    apic_17 { pt3dadd( 507.021, 166.756, 99.7251, 0.323 ) }
    apic_17 { pt3dadd( 507.981, 166.451, 100.384, 0.3898 ) }
    apic_17 { pt3dadd( 508.919, 165.896, 101.026, 0.3638 ) }
    apic_17 { pt3dadd( 509.919, 165.378, 101.58, 0.3578 ) }
    apic_17 { pt3dadd( 510.972, 165.222, 102.117, 0.3712 ) }
    apic_17 { pt3dadd( 512.058, 165.014, 102.521, 0.5044 ) }
    apic_17 { pt3dadd( 513.138, 164.743, 102.872, 0.4538 ) }
    apic_17 { pt3dadd( 514.221, 164.434, 103.193, 0.4332 ) }
    apic_17 { pt3dadd( 515.322, 164.134, 103.456, 0.497 ) }
    apic_17 { pt3dadd( 516.348, 164.483, 103.577, 0.5772 ) }
    apic_17 { pt3dadd( 517.431, 164.75, 103.749, 0.6812 ) }
    apic_17 { pt3dadd( 518.558, 164.766, 103.955, 0.635 ) }
    apic_17 { pt3dadd( 519.687, 164.737, 104.174, 0.7944 ) }
    apic_17 { pt3dadd( 520.819, 164.575, 104.338, 0.8146 ) }
    apic_17 { pt3dadd( 521.963, 164.543, 104.459, 0.817 ) }
    apic_17 { pt3dadd( 523.097, 164.687, 104.535, 0.7622 ) }
    apic_17 { pt3dadd( 524.181, 165.011, 104.502, 0.719 ) }
    apic_17 { pt3dadd( 525.066, 165.533, 104.612, 0.5846 ) }
    apic_17 { pt3dadd( 526.115, 165.97, 104.649, 0.598 ) }
    apic_17 { pt3dadd( 527.132, 166.411, 104.557, 0.7222 ) }
    apic_17 { pt3dadd( 528.065, 167.0, 104.382, 0.699 ) }
    apic_17 { pt3dadd( 528.918, 167.626, 104.122, 0.514 ) }
    apic_17 { pt3dadd( 529.861, 168.194, 103.987, 0.4024 ) }
    apic_17 { pt3dadd( 530.736, 168.817, 104.009, 0.4436 ) }
    apic_17 { pt3dadd( 531.704, 169.407, 104.072, 0.4604 ) }
    apic_17 { pt3dadd( 532.605, 170.021, 104.231, 0.5514 ) }
    apic_17 { pt3dadd( 533.53, 170.585, 104.465, 0.6596 ) }
    apic_17 { pt3dadd( 534.4, 171.327, 104.653, 0.6964 ) }
    apic_17 { pt3dadd( 535.224, 171.999, 104.688, 0.6434 ) }
    apic_17 { pt3dadd( 536.049, 172.596, 104.559, 0.447 ) }
    apic_17 { pt3dadd( 536.711, 173.423, 104.415, 0.331 ) }
    apic_17 { pt3dadd( 537.321, 174.234, 104.534, 0.285 ) }
    apic_17 { pt3dadd( 537.696, 174.983, 105.024, 0.2938 ) }
    apic_17 { pt3dadd( 538.044, 175.472, 105.867, 0.3112 ) }
    apic_17 { pt3dadd( 538.775, 176.213, 106.694, 0.3382 ) }
    apic_17 { pt3dadd( 539.753, 176.795, 107.381, 0.413 ) }
    apic_17 { pt3dadd( 540.725, 177.397, 107.914, 0.4326 ) }
    apic_17 { pt3dadd( 541.54, 178.196, 108.285, 0.3592 ) }
    apic_17 { pt3dadd( 542.298, 179.053, 108.541, 0.2996 ) }
    apic_17 { pt3dadd( 542.847, 180.051, 108.776, 0.274 ) }
    apic_17 { pt3dadd( 543.344, 181.055, 109.116, 0.2736 ) }
    apic_17 { pt3dadd( 544.053, 181.943, 109.522, 0.2728 ) }
    apic_17 { pt3dadd( 544.86, 182.753, 110.0, 0.2712 ) }
    apic_17 { pt3dadd( 545.496, 183.697, 110.555, 0.2684 ) }
    apic_17 { pt3dadd( 546.135, 184.598, 111.224, 0.2626 ) }
    apic_17 { pt3dadd( 546.707, 185.235, 112.12, 0.2542 ) }
    apic_17 { pt3dadd( 547.28, 185.872, 113.149, 0.2288 ) }
    apic_17 { pt3dadd( 547.852, 186.51, 115.663, 0.2288 ) }
    // Section: apic_16, id: apic_16, parent: apic_15 (entry count 63/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 504.113, 169.501, 97.7452, 0.81 ) }
    apic_16 { pt3dadd( 505.245, 169.155, 97.6226, 0.6864 ) }
    apic_16 { pt3dadd( 506.323, 169.119, 97.3176, 0.4482 ) }
    apic_16 { pt3dadd( 507.464, 169.119, 97.0262, 0.3332 ) }
    apic_16 { pt3dadd( 508.606, 169.095, 96.7702, 0.289 ) }
    apic_16 { pt3dadd( 509.626, 168.783, 96.5, 0.3008 ) }
    apic_16 { pt3dadd( 510.167, 167.94, 96.3371, 0.3254 ) }
    apic_16 { pt3dadd( 510.748, 167.045, 96.2643, 0.3582 ) }
    apic_16 { pt3dadd( 511.454, 166.536, 95.9476, 0.4806 ) }
    apic_16 { pt3dadd( 512.11, 165.705, 95.5304, 0.4088 ) }
    apic_16 { pt3dadd( 513.206, 165.631, 95.212, 0.354 ) }
    apic_16 { pt3dadd( 514.313, 165.894, 94.9382, 0.3296 ) }
    apic_16 { pt3dadd( 515.31, 165.74, 94.5515, 0.3662 ) }
    apic_16 { pt3dadd( 515.874, 164.751, 94.2614, 0.4956 ) }
    apic_16 { pt3dadd( 516.674, 164.075, 94.1528, 0.436 ) }
    apic_16 { pt3dadd( 517.748, 163.984, 94.1469, 0.4066 ) }
    apic_16 { pt3dadd( 518.726, 163.967, 93.9708, 0.4164 ) }
    apic_16 { pt3dadd( 519.376, 163.845, 93.4836, 0.5792 ) }
    apic_16 { pt3dadd( 520.221, 163.157, 93.0213, 0.6374 ) }
    apic_16 { pt3dadd( 521.111, 162.617, 92.5022, 0.5556 ) }
    apic_16 { pt3dadd( 522.128, 162.315, 91.9318, 0.4092 ) }
    apic_16 { pt3dadd( 523.231, 162.144, 91.5239, 0.3402 ) }
    apic_16 { pt3dadd( 523.722, 161.296, 91.3458, 0.3748 ) }
    apic_16 { pt3dadd( 524.168, 160.373, 91.4004, 0.3364 ) }
    apic_16 { pt3dadd( 525.089, 160.082, 91.2416, 0.3046 ) }
    apic_16 { pt3dadd( 526.147, 159.855, 90.925, 0.2834 ) }
    apic_16 { pt3dadd( 527.225, 159.508, 90.5456, 0.2906 ) }
    apic_16 { pt3dadd( 527.876, 158.502, 89.6832, 0.3054 ) }
    apic_16 { pt3dadd( 528.125, 157.631, 89.0151, 0.3264 ) }
    apic_16 { pt3dadd( 528.012, 156.791, 88.2879, 0.3974 ) }
    apic_16 { pt3dadd( 528.128, 155.879, 87.9158, 0.3728 ) }
    apic_16 { pt3dadd( 528.14, 154.745, 87.5689, 0.3978 ) }
    apic_16 { pt3dadd( 528.14, 153.635, 87.1811, 0.332 ) }
    apic_16 { pt3dadd( 528.313, 152.584, 86.7706, 0.2966 ) }
    apic_16 { pt3dadd( 529.058, 151.836, 86.3584, 0.2684 ) }
    apic_16 { pt3dadd( 529.79, 151.141, 85.9093, 0.2626 ) }
    apic_16 { pt3dadd( 530.618, 150.449, 85.5215, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    apic_16 { pt3dadd( 531.399, 149.625, 85.2998, 0.2288 ) }
    apic_16 { pt3dadd( 532.189, 148.834, 85.4, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_140, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_140 = new SectionList()
    soma_0 ModelViewParmSubset_140.append()
    axon_0 ModelViewParmSubset_140.append()
    axon_1 ModelViewParmSubset_140.append()

    // Group: {name=ModelViewParmSubset_141, groups=[], sections=[dend_45, dend_44, dend_37, apic_0, dend_34, dend_27, dend_12, dend_1, dend_0, dend_47, dend_46, dend_41, dend_38, apic_4, apic_1, dend_36, dend_35, dend_33, dend_28, dend_18, dend_13, dend_7, dend_2, dend_43, dend_42, dend_40, dend_39, apic_6, apic_5, apic_3, apic_2, dend_30, dend_29, dend_22, dend_19, dend_17, dend_14, dend_9, dend_8, dend_6, dend_3, apic_8, apic_7, dend_32, dend_31, dend_24, dend_23, dend_21, dend_20, dend_16, dend_15, dend_11, dend_10, dend_5, dend_4, apic_28, apic_9, dend_26, dend_25, apic_30, apic_29, apic_11, apic_10, apic_21, apic_12, apic_25, apic_22, apic_18, apic_13, apic_27, apic_26, apic_24, apic_23, apic_20, apic_19, apic_15, apic_14, apic_17, apic_16]}
    ModelViewParmSubset_141 = new SectionList()
    dend_45 ModelViewParmSubset_141.append()
    dend_44 ModelViewParmSubset_141.append()
    dend_37 ModelViewParmSubset_141.append()
    apic_0 ModelViewParmSubset_141.append()
    dend_34 ModelViewParmSubset_141.append()
    dend_27 ModelViewParmSubset_141.append()
    dend_12 ModelViewParmSubset_141.append()
    dend_1 ModelViewParmSubset_141.append()
    dend_0 ModelViewParmSubset_141.append()
    dend_47 ModelViewParmSubset_141.append()
    dend_46 ModelViewParmSubset_141.append()
    dend_41 ModelViewParmSubset_141.append()
    dend_38 ModelViewParmSubset_141.append()
    apic_4 ModelViewParmSubset_141.append()
    apic_1 ModelViewParmSubset_141.append()
    dend_36 ModelViewParmSubset_141.append()
    dend_35 ModelViewParmSubset_141.append()
    dend_33 ModelViewParmSubset_141.append()
    dend_28 ModelViewParmSubset_141.append()
    dend_18 ModelViewParmSubset_141.append()
    dend_13 ModelViewParmSubset_141.append()
    dend_7 ModelViewParmSubset_141.append()
    dend_2 ModelViewParmSubset_141.append()
    dend_43 ModelViewParmSubset_141.append()
    dend_42 ModelViewParmSubset_141.append()
    dend_40 ModelViewParmSubset_141.append()
    dend_39 ModelViewParmSubset_141.append()
    apic_6 ModelViewParmSubset_141.append()
    apic_5 ModelViewParmSubset_141.append()
    apic_3 ModelViewParmSubset_141.append()
    apic_2 ModelViewParmSubset_141.append()
    dend_30 ModelViewParmSubset_141.append()
    dend_29 ModelViewParmSubset_141.append()
    dend_22 ModelViewParmSubset_141.append()
    dend_19 ModelViewParmSubset_141.append()
    dend_17 ModelViewParmSubset_141.append()
    dend_14 ModelViewParmSubset_141.append()
    dend_9 ModelViewParmSubset_141.append()
    dend_8 ModelViewParmSubset_141.append()
    dend_6 ModelViewParmSubset_141.append()
    dend_3 ModelViewParmSubset_141.append()
    apic_8 ModelViewParmSubset_141.append()
    apic_7 ModelViewParmSubset_141.append()
    dend_32 ModelViewParmSubset_141.append()
    dend_31 ModelViewParmSubset_141.append()
    dend_24 ModelViewParmSubset_141.append()
    dend_23 ModelViewParmSubset_141.append()
    dend_21 ModelViewParmSubset_141.append()
    dend_20 ModelViewParmSubset_141.append()
    dend_16 ModelViewParmSubset_141.append()
    dend_15 ModelViewParmSubset_141.append()
    dend_11 ModelViewParmSubset_141.append()
    dend_10 ModelViewParmSubset_141.append()
    dend_5 ModelViewParmSubset_141.append()
    dend_4 ModelViewParmSubset_141.append()
    apic_28 ModelViewParmSubset_141.append()
    apic_9 ModelViewParmSubset_141.append()
    dend_26 ModelViewParmSubset_141.append()
    dend_25 ModelViewParmSubset_141.append()
    apic_30 ModelViewParmSubset_141.append()
    apic_29 ModelViewParmSubset_141.append()
    apic_11 ModelViewParmSubset_141.append()
    apic_10 ModelViewParmSubset_141.append()
    apic_21 ModelViewParmSubset_141.append()
    apic_12 ModelViewParmSubset_141.append()
    apic_25 ModelViewParmSubset_141.append()
    apic_22 ModelViewParmSubset_141.append()
    apic_18 ModelViewParmSubset_141.append()
    apic_13 ModelViewParmSubset_141.append()
    apic_27 ModelViewParmSubset_141.append()
    apic_26 ModelViewParmSubset_141.append()
    apic_24 ModelViewParmSubset_141.append()
    apic_23 ModelViewParmSubset_141.append()
    apic_20 ModelViewParmSubset_141.append()
    apic_19 ModelViewParmSubset_141.append()
    apic_15 ModelViewParmSubset_141.append()
    apic_14 ModelViewParmSubset_141.append()
    apic_17 ModelViewParmSubset_141.append()
    apic_16 ModelViewParmSubset_141.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_4, apic_1, apic_6, apic_5, apic_3, apic_2, apic_8, apic_7, apic_28, apic_9, apic_30, apic_29, apic_11, apic_10, apic_21, apic_12, apic_25, apic_22, apic_18, apic_13, apic_27, apic_26, apic_24, apic_23, apic_20, apic_19, apic_15, apic_14, apic_17, apic_16]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_4 apic.append()
    apic_1 apic.append()
    apic_6 apic.append()
    apic_5 apic.append()
    apic_3 apic.append()
    apic_2 apic.append()
    apic_8 apic.append()
    apic_7 apic.append()
    apic_28 apic.append()
    apic_9 apic.append()
    apic_30 apic.append()
    apic_29 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()
    apic_21 apic.append()
    apic_12 apic.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_25 apic.append()
    apic_22 apic.append()
    apic_18 apic.append()
    apic_13 apic.append()
    apic_27 apic.append()
    apic_26 apic.append()
    apic_24 apic.append()
    apic_23 apic.append()
    apic_20 apic.append()
    apic_19 apic.append()
    apic_15 apic.append()
    apic_14 apic.append()
    apic_17 apic.append()
    apic_16 apic.append()

    // Group: {name=dend, groups=[], sections=[dend_45, dend_44, dend_37, dend_34, dend_27, dend_12, dend_1, dend_0, dend_47, dend_46, dend_41, dend_38, dend_36, dend_35, dend_33, dend_28, dend_18, dend_13, dend_7, dend_2, dend_43, dend_42, dend_40, dend_39, dend_30, dend_29, dend_22, dend_19, dend_17, dend_14, dend_9, dend_8, dend_6, dend_3, dend_32, dend_31, dend_24, dend_23, dend_21, dend_20, dend_16, dend_15, dend_11, dend_10, dend_5, dend_4, dend_26, dend_25]}
    dend = new SectionList()
    dend_45 dend.append()
    dend_44 dend.append()
    dend_37 dend.append()
    dend_34 dend.append()
    dend_27 dend.append()
    dend_12 dend.append()
    dend_1 dend.append()
    dend_0 dend.append()
    dend_47 dend.append()
    dend_46 dend.append()
    dend_41 dend.append()
    dend_38 dend.append()
    dend_36 dend.append()
    dend_35 dend.append()
    dend_33 dend.append()
    dend_28 dend.append()
    dend_18 dend.append()
    dend_13 dend.append()
    dend_7 dend.append()
    dend_2 dend.append()
    dend_43 dend.append()
    dend_42 dend.append()
    dend_40 dend.append()
    dend_39 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_22 dend.append()
    dend_19 dend.append()
    dend_17 dend.append()
    dend_14 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()
    dend_6 dend.append()
    dend_3 dend.append()
    dend_32 dend.append()
    dend_31 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_5233, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_5233 = new SectionList()
    soma_0 OneSecGrp_SectionRef_5233.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.9387329  // units: uF/cm2
    forsec apic cm = 2.9387329  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 128.34438  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 4.8461938E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 8.449898E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.77978843  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 6.556333E-5  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.031976756  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 6.9758657E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0025971308  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.14889011  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.817028E-4  // units: S cm-2
        e_pas_nml2 = -88.26162  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 8.4949884E-4  // units: S cm-2
        e_pas_nml2 = -88.26162  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 5.289482E-5  // units: S cm-2
        e_pas_nml2 = -88.26162  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 1.2118365E-7  // units: S cm-2
        e_pas_nml2 = -88.26162  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 2.8601973E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0033359523  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_488461970
    forsec soma {
        insert CaDynamics_488461970
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_44 nseg = 5
    dend_46 nseg = 3
    dend_36 nseg = 3
    dend_35 nseg = 3
    dend_33 nseg = 5
    dend_2 nseg = 3
    apic_5 nseg = 7
    apic_3 nseg = 5
    dend_17 nseg = 3
    dend_8 nseg = 5
    apic_7 nseg = 3
    dend_20 nseg = 3
    dend_16 nseg = 3
    dend_15 nseg = 3
    dend_10 nseg = 3
    dend_25 nseg = 3
    apic_30 nseg = 5
    apic_29 nseg = 5
    apic_11 nseg = 17
    apic_10 nseg = 7
    apic_21 nseg = 3
    apic_18 nseg = 3
    apic_13 nseg = 3
    apic_27 nseg = 3
    apic_26 nseg = 3
    apic_24 nseg = 3
    apic_23 nseg = 3
    apic_20 nseg = 3
    apic_19 nseg = 3
    apic_14 nseg = 3
    apic_17 nseg = 3
    apic_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_488461970


