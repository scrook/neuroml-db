// Cell: cNAC187_L4_NBC_327fc63584_0_0
/*
{
  "id" : "cNAC187_L4_NBC_327fc63584_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.49578, 9.66883, 0.467618, 3.07883", "-1.35379, 8.66156, 0.417811, 3.68571", "-1.21179, 7.65428, 0.368005, 4.49861", "-1.0698, 6.64701, 0.318198, 5.02547", "-0.927807, 5.63974, 0.268391, 5.55232", "-0.785813, 4.63247, 0.218585, 6.08002", "-0.643819, 3.6252, 0.168778, 6.65441", "-0.501826, 2.61792, 0.118971, 7.239", "-0.359832, 1.61065, 0.0691646, 7.82473", "-0.217838, 0.603378, 0.0193579, 8.41046", "-0.0758445, -0.403894, -0.0304487, 8.6567", "0.0661492, -1.41117, -0.0802554, 8.65482", "0.208143, -2.41844, -0.130062, 8.55954", "0.350137, -3.42571, -0.179869, 8.46266", "0.49213, -4.43298, -0.229676, 8.09049", "0.634124, -5.44025, -0.279482, 7.48075", "0.776118, -6.44753, -0.329289, 6.87101", "0.918112, -7.4548, -0.379096, 6.23286", "1.06011, -8.46207, -0.428902, 5.0468", "1.2021, -9.46934, -0.478709, 3.42243", "1.34409, -10.4766, -0.528516, 2.06215" ]
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.94076, -11.1276, 1.79231, 1.94", "2.22076, -12.5176, 1.79231, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000041566367777
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "4.13076, -4.13764, 8.98231, 0.55", "5.5712, -2.78614, 8.56304, 0.55", "7.07641, -1.19968, 8.10133, 0.83", "9.18972, 1.10187, 7.28568, 0.83", "11.6781, 3.66632, 6.31806, 0.55", "12.7174, 4.6847, 5.97561, 0.83", "14.8319, 6.73328, 5.35434, 0.28", "16.1181, 8.03754, 5.05566, 0.83", "18.4112, 10.3551, 4.69733, 0.55", "20.4778, 12.3775, 4.7307, 0.55", "22.1699, 13.9603, 5.1188, 0.83", "22.9562, 14.7216, 5.45457, 0.83", "24.6309, 16.497, 6.48636, 0.55", "25.1756, 17.2003, 6.93366, 0.83", "26.5465, 19.3963, 8.32863, 0.28", "27.2172, 20.7586, 9.09692, 0.83", "28.52, 23.9532, 10.599, 0.28", "29.1566, 25.8156, 11.3641, 0.55", "29.8984, 28.7866, 12.4111, 0.28", "30.181, 30.4244, 12.9551, 0.83", "30.2902, 32.1163, 13.4629, 0.55", "30.2361, 34.2258, 14.1194, 0.55", "30.1038, 35.4603, 14.1841, 1.11", "29.8059, 37.9182, 13.6795, 0.55", "29.7496, 38.4834, 13.4498, 0.55", "29.5781, 41.7862, 12.0609, 0.83", "29.6289, 45.8283, 10.0926, 0.28", "30.5012, 56.9245, 4.3434, 0.83", "30.7197, 58.3314, 3.58666, 0.28", "31.0844, 60.1118, 2.46218, 0.55", "32.0278, 63.8201, -0.158189, 0.28", "32.6469, 65.6234, -1.84432, 0.83", "33.1061, 66.624, -3.06855, 0.28", "33.6253, 67.565, -2.59665, 0.83", "38.2566, 76.2368, -4.42733, 0.83", "42.3887, 85.0142, -6.85262, 0.83", "45.6372, 93.8198, -10.3038, 0.83", "50.2268, 102.354, -12.7773, 0.83", "53.6343, 111.459, -15.1164, 0.83", "57.8787, 119.864, -18.4854, 0.83", "62.1266, 127.759, -22.9137, 0.83", "65.3269, 135.7, -28.0813, 0.83", "69.4791, 142.71, -33.8795, 0.83", "74.2958, 150.212, -38.4099, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000041566367777,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.13924, 10.2624, 3.27231, 2.49", "-1.13924, 12.2024, 3.27231, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000041566367777
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.34409, -10.4766, -0.528516, 0.83", "3.43791, -25.3297, -0.528516, 0.83", "5.53174, -40.1829, -0.528516, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "2.22076, -12.5176, 1.79231, 0.28", "3.04133, -15.2652, 3.91819, 0.28", "3.40219, -16.4735, 4.85308, 0.55", "4.62882, -20.5807, 8.03094, 0.28", "5.7947, -24.4845, 11.0514, 0.28", "6.5148, -26.8957, 12.917, 0.28", "8.3039, -35.1695, 18.2409, 0.28", "9.98662, -42.0275, 25.3215, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "2.22076, -12.5176, 1.79231, 1.66", "2.35017, -15.2017, -1.31539, 1.66", "2.51712, -18.6644, -5.32457, 1.94" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.13924, 12.2024, 3.27231, 0.83", "0.0844085, 15.9686, 2.50581, 0.83", "0.81199, 18.1865, 1.70548, 0.55", "1.53236, 20.3846, 0.7273, 0.83", "2.70021, 23.9037, -0.983207, 0.83", "3.28873, 25.6745, -1.82379, 1.11", "4.81561, 30.2687, -4.00464, 1.11", "6.35615, 34.9293, -6.43981, 0.55", "7.81539, 39.2411, -8.86849, 1.11", "9.32438, 43.5803, -11.3949, 1.11", "10.4132, 46.7212, -13.1696, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.13924, 12.2024, 3.27231, 1.11", "-3.52865, 17.4206, 6.48456, 1.11", "-4.66745, 19.9076, 8.01552, 2.22" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.53174, -40.1829, -0.528516, 0.28", "7.62556, -55.036, -0.528516, 0.28", "9.71939, -69.8892, -0.528516, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "9.98662, -42.0275, 25.3215, 0.28", "9.93487, -49.6669, 31.7742, 0.28", "8.45519, -57.9726, 37.1432, 0.28", "5.66748, -66.7926, 40.9426, 0.28", "3.67517, -75.4554, 45.5237, 0.28", "-0.499843, -83.0749, 50.4748, 0.28", "-3.95596, -91.1355, 55.2791, 0.28", "-6.57925, -98.8098, 61.1291, 0.28", "-8.26024, -107.435, 65.9031, 0.28", "-9.46915, -115.783, 71.2745, 0.28", "-11.8728, -124.098, 76.2811, 0.28", "-13.6908, -132.46, 81.4571, 0.28", "-14.705, -141.561, 85.4748, 0.28", "-16.9415, -150.99, 87.9383, 0.28", "-17.8354, -160.76, 89.8759, 0.28", "-18.7626, -170.637, 91.1426, 0.28", "-21.2572, -179.932, 93.8546, 0.28", "-23.7761, -188.449, 98.4504, 0.28", "-26.9273, -197.559, 101.109, 0.28", "-31.7448, -206.165, 102.763, 0.28", "-35.5061, -215.286, 104.39, 0.28", "-40.0465, -223.637, 107.498, 0.28", "-45.2022, -231.499, 110.906, 0.28", "-51.875, -237.246, 115.643, 0.28", "-58.8237, -242.326, 120.735, 0.28", "-66.3687, -246.315, 125.945, 0.28", "-72.1285, -251.639, 132.149, 0.28", "-78.8706, -257.426, 136.737, 0.28", "-87.0255, -261.996, 140.288, 0.28", "-95.737, -264.417, 144.56, 0.28" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "9.98662, -42.0275, 25.3215, 0.28", "13.1169, -49.5508, 31.1182, 0.28", "17.0676, -56.6653, 36.93, 0.28", "20.2882, -64.0293, 42.8796, 0.28", "24.0947, -71.6369, 48.1366, 0.28", "27.2481, -78.4394, 54.7534, 0.28", "31.5911, -84.8939, 61.0364, 0.28", "34.9283, -91.1616, 68.0777, 0.28", "38.1647, -98.1657, 74.4392, 0.28", "40.2163, -106.414, 79.7062, 0.28", "43.6981, -113.687, 85.6224, 0.28", "48.1928, -121.162, 90.5114, 0.28", "53.2554, -127.306, 96.5631, 0.28", "58.2819, -132.856, 103.191, 0.28", "64.2911, -138.501, 108.851, 0.28", "69.4633, -143.449, 115.834, 0.28", "75.6596, -149.161, 121.216, 0.28", "81.632, -155.415, 126.24, 0.28", "88.1393, -161.509, 130.767, 0.28", "93.4118, -168.102, 136.13, 0.28", "97.9305, -175.684, 140.83, 0.28", "102.515, -183.658, 144.755, 0.28", "108.605, -191.169, 147.303, 0.28", "114.91, -197.968, 151.045, 0.28", "121.406, -204.945, 154.068, 0.28", "128.764, -211.272, 156.48, 0.28", "136.265, -217.871, 156.914, 0.28", "144.566, -223.331, 158.05, 0.28", "152.843, -228.596, 159.994, 0.28" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.51712, -18.6644, -5.32457, 0.55", "3.00537, -20.3901, -7.32563, 0.55", "3.58549, -22.1757, -9.37471, 0.55", "4.64049, -24.7859, -12.8081, 0.28", "5.14676, -25.9271, -14.3793, 0.83", "6.61729, -28.8884, -18.5614, 0.55", "7.78585, -31.026, -21.6561, 0.55", "8.34829, -31.8778, -23.0799, 0.55", "10.4471, -34.464, -27.7876, 0.28", "10.7118, -34.7298, -28.2952, 0.28", "11.3682, -35.3224, -29.4432, 0.28", "12.0373, -35.9106, -30.3792, 0.83", "14.1075, -37.7168, -32.8512, 0.83", "15.8213, -39.2519, -34.6831, 0.55", "16.9923, -40.4196, -35.8172, 0.83", "19.0676, -42.6359, -37.8084, 0.55", "21.2179, -45.1283, -39.954, 0.83", "23.0934, -47.3062, -41.71, 0.55", "23.72, -48.0343, -42.2458, 0.55", "25.5157, -49.9923, -43.7734, 0.83", "26.4937, -51.0593, -44.794, 0.83", "28.3863, -53.1599, -47.1108, 0.55", "29.2102, -54.0469, -48.2948, 0.55", "30.0327, -54.904, -49.4757, 0.28", "31.1692, -56.0259, -51.2321, 0.83", "33.7093, -58.364, -55.5801, 0.55", "35.4583, -59.8949, -58.7369, 0.28", "36.5913, -60.8326, -60.8636, 0.55", "37.1498, -61.2692, -61.8889, 0.28", "38.9422, -62.5179, -64.9817, 0.83", "42.0013, -64.3571, -69.5001, 0.28", "43.0933, -64.8984, -70.8997, 0.55", "46.0126, -66.2011, -74.2674, 0.28", "47.6352, -66.9765, -75.9975, 0.55", "50.4445, -68.3409, -78.7958, 0.55", "52.6617, -69.4984, -80.9381, 0.83", "57.1558, -72.0231, -85.2372, 0.28", "58.3067, -72.718, -86.3926, 0.55", "61.5008, -74.7833, -90.0437, 0.28", "62.4394, -75.4349, -91.277, 0.83", "64.8004, -77.1128, -94.8441, 0.28", "65.6613, -77.6945, -96.2783, 0.55", "65.9867, -77.8556, -96.7774, 0.55", "69.5872, -79.0892, -102.061, 0.28", "70.1899, -79.2183, -102.843, 0.55", "72.6314, -79.5828, -105.574, 0.28", "74.4643, -79.766, -107.287, 0.83", "78.9424, -80.2728, -111.138, 0.28", "80.076, -80.4365, -111.957, 0.55", "81.8846, -80.7864, -112.95, 0.28", "83.5026, -81.2045, -113.756, 0.83", "84.0441, -81.3973, -114.005, 0.83", "87.2146, -82.7324, -115.527, 0.28", "88.6758, -83.4285, -116.214, 0.55", "89.414, -83.7759, -116.582, 0.28", "91.2487, -84.6293, -117.52, 0.83", "94.7186, -86.1983, -119.127, 0.55", "95.9266, -86.6799, -119.619, 0.83", "97.9198, -87.3413, -120.211, 0.28", "98.7276, -87.5791, -120.452, 0.55", "99.6636, -87.8218, -120.712, 0.28", "101.205, -88.2311, -121.251, 0.55", "102.003, -88.4725, -121.532, 0.28", "103.475, -88.9996, -122.278, 0.55", "105.699, -89.8455, -123.598, 0.28", "106.468, -90.176, -124.166, 0.55", "109.508, -91.6121, -126.629, 0.28", "111.01, -92.3859, -127.92, 0.83", "113.372, -93.7246, -129.99, 0.28", "113.742, -93.9548, -130.325, 0.55", "116.639, -95.8899, -132.913, 0.28", "117.8, -96.7472, -133.939, 0.28", "118.178, -97.0687, -134.299, 0.55", "118.884, -97.8001, -135.014, 0.28", "119.534, -98.607, -135.686, 0.55", "120.844, -100.464, -137.081, 0.28", "122.045, -102.348, -138.327, 0.55", "123.894, -105.315, -140.217, 0.28", "125.103, -107.274, -141.571, 0.83", "126.365, -109.286, -143.034, 0.28", "127.075, -110.397, -143.723, 0.55", "127.498, -111.052, -144.104, 0.28", "128.225, -112.072, -144.697, 0.83", "131.385, -115.894, -146.767, 0.28", "132.135, -116.599, -147.545, 0.55", "134.242, -118.284, -150.695, 0.28", "135.59, -119.333, -153.375, 0.55", "136.283, -119.9, -155.104, 0.28", "136.606, -120.164, -156.019, 0.55", "139.846, -122.782, -165.708, 0.55", "141.212, -123.872, -170.037, 0.28", "142.057, -124.572, -172.911, 0.83", "144.089, -126.44, -179.68, 0.28", "144.239, -126.594, -180.14, 0.55", "144.948, -127.341, -181.88, 0.28", "146.538, -128.896, -184.376, 0.55", "147.793, -129.982, -185.759, 0.28", "148.945, -130.921, -186.854, 0.55", "151.585, -132.992, -189.054, 0.28", "152.845, -134.027, -190.08, 0.55", "156.067, -136.755, -192.924, 0.28", "157.976, -138.438, -194.535, 0.55", "160.749, -140.801, -196.846, 0.28", "161.577, -141.522, -197.516, 0.55", "163.366, -143.053, -198.958, 0.28", "166.205, -145.458, -201.386, 0.28", "166.862, -146.018, -201.881, 0.28", "167.809, -146.867, -202.656, 0.55", "169.444, -148.453, -203.985, 0.28", "171.431, -150.415, -205.757, 0.55", "174.679, -153.587, -208.858, 0.28", "175.763, -154.721, -209.83, 0.55", "176.796, -155.891, -210.903, 0.28", "177.77, -157.152, -212.149, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.51712, -18.6644, -5.32457, 1.66", "2.2696, -21.3606, -6.75639, 1.66", "1.92142, -25.1532, -8.77047, 1.94" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "10.4132, 46.7212, -13.1696, 0.55", "9.26084, 49.1006, -12.6154, 0.55", "8.47891, 50.5332, -12.2097, 0.55", "7.46776, 52.2812, -11.6918, 0.28", "6.77153, 53.4606, -11.4791, 0.55", "5.96815, 54.8375, -11.3248, 0.28", "4.97151, 56.6058, -11.1859, 0.55", "4.11796, 58.1713, -11.1348, 0.28", "3.59506, 59.2947, -11.0342, 0.83", "2.4395, 62.3769, -10.923, 0.28", "2.10524, 63.4563, -10.8153, 0.83", "1.69419, 64.8455, -10.6305, 0.55", "1.33067, 66.1551, -10.3784, 0.83", "0.189063, 70.1109, -9.32771, 0.55", "-0.637992, 72.8506, -8.33912, 0.83", "-1.73196, 76.4717, -6.77364, 0.55", "-2.21954, 78.0271, -6.07714, 0.55", "-3.08484, 80.6402, -4.77823, 0.83", "-4.37422, 84.3004, -2.87786, 0.55", "-4.96906, 85.9384, -1.95043, 0.83", "-5.59205, 87.7819, -0.798539, 0.28", "-5.73349, 88.2849, -0.470186, 0.55", "-6.61405, 92.0097, 1.91306, 0.28", "-6.96385, 93.8002, 2.97334, 0.55", "-7.41654, 96.6021, 4.39077, 0.28", "-7.65463, 98.363, 5.16931, 0.55", "-8.19274, 102.642, 6.80699, 0.28", "-8.43651, 105.126, 7.58332, 0.55", "-8.60131, 107.571, 8.13998, 0.28", "-8.72536, 110.087, 8.60758, 0.28", "-8.76702, 110.959, 8.68368, 0.55", "-8.87149, 112.811, 8.7493, 0.55", "-8.92486, 113.581, 8.65833, 0.55", "-10.3901, 123.215, 10.8995, 0.55", "-11.169, 133.105, 12.1629, 0.55", "-13.4474, 142.816, 11.4611, 0.55", "-14.7282, 152.471, 9.19429, 0.55", "-15.2096, 162.014, 6.24172, 0.55", "-14.8173, 171.406, 2.83093, 0.55", "-16.2252, 180.296, -1.52621, 0.55", "-16.8868, 188.885, -6.60571, 0.55", "-19.6501, 196.484, -12.4893, 0.55", "-21.5317, 203.439, -19.4242, 0.55", "-23.1358, 210.678, -26.1324, 0.55", "-25.23, 218.417, -32.1109, 0.55", "-26.9329, 226.482, -37.7721, 0.55", "-29.162, 234.064, -43.8996, 0.55", "-32.1797, 241.43, -49.9528, 0.55", "-35.6322, 248.747, -55.8297, 0.55", "-37.9297, 256.707, -61.4284, 0.55", "-42.4171, 264.202, -66.2965, 0.55", "-45.7294, 271.333, -72.4744, 0.55", "-49.1407, 277.999, -79.1035, 0.55", "-51.8818, 283.947, -86.6599, 0.55", "-54.9406, 288.898, -94.792, 0.55", "-58.1316, 292.796, -103.431, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "10.4132, 46.7212, -13.1696, 0.83", "12.5839, 50.2387, -13.4865, 0.83", "14.0824, 52.5362, -13.6474, 0.55", "15.079, 53.8908, -13.7246, 0.55", "16.0157, 55.1403, -13.7815, 0.55", "17.3215, 56.8679, -13.8426, 0.55", "19.2935, 59.4413, -13.8703, 0.83", "20.5491, 61.0039, -13.815, 0.83", "22.3243, 63.0659, -13.7322, 0.83", "24.0724, 65.0327, -13.6101, 0.83", "26.6133, 67.8082, -13.5095, 0.55", "28.9305, 70.3326, -13.5291, 0.83", "31.208, 72.7592, -13.6238, 0.83", "32.2113, 73.8702, -13.6927, 0.83", "34.7948, 76.7343, -13.9158, 0.83", "37.6757, 79.9136, -14.2129, 0.83", "39.9062, 82.3717, -14.4884, 0.55", "42.1162, 84.8652, -14.796, 0.55", "44.0194, 87.1585, -15.0107, 0.83", "45.4999, 89.1577, -15.2087, 0.55", "46.5652, 90.7889, -15.4245, 0.55", "47.748, 92.9465, -15.7258, 0.83", "49.1356, 95.9711, -16.3278, 0.83", "49.9476, 98.2344, -16.9437, 0.83", "50.8762, 101.641, -18.1346, 0.55", "51.3713, 104.035, -19.2379, 0.83", "51.5994, 105.349, -20.0949, 0.83", "51.8145, 106.876, -21.303, 0.83", "52.0141, 108.159, -22.4883, 0.83", "52.3505, 109.602, -24.0914, 0.55", "53.008, 111.737, -26.5647, 0.83", "54.3442, 115.406, -30.889, 0.28", "54.8944, 116.82, -32.5255, 0.83", "55.692, 118.817, -34.7602, 0.83", "57.3858, 123.037, -39.2908, 0.55", "58.0061, 124.602, -40.7647, 0.83", "59.2942, 128.182, -43.3518, 0.28", "59.923, 130.06, -44.3576, 0.28", "60.2784, 131.294, -44.8608, 0.55", "60.5073, 132.488, -45.1842, 0.28", "60.7591, 135.23, -45.5802, 0.83", "60.8324, 138.995, -46.2379, 0.28", "60.7914, 140.868, -46.5711, 0.28", "60.7677, 142.245, -46.942, 0.83", "60.7686, 145.894, -48.1941, 0.28", "60.7925, 147.947, -49.0579, 0.83", "60.9261, 151.411, -50.8302, 0.55", "61.02, 152.465, -51.488, 0.28", "61.4525, 154.965, -53.1225, 0.55", "61.9401, 156.661, -54.3147, 0.55", "62.4468, 157.71, -55.0973, 0.28", "63.0407, 158.529, -55.6921, 0.55", "64.8975, 160.493, -56.8857, 0.55", "65.9976, 161.501, -57.3743, 0.28", "67.1525, 162.478, -57.7005, 0.55", "68.6432, 163.734, -57.9012, 0.55", "71.8061, 166.538, -57.9053, 0.28", "73.0941, 167.757, -57.7564, 0.83", "75.4518, 170.169, -57.2615, 0.55", "76.8738, 171.758, -56.8872, 0.55", "79.4785, 175.057, -56.0554, 0.28", "81.4061, 177.878, -55.3348, 0.83", "83.0083, 180.822, -54.3695, 0.55", "84.2072, 183.482, -53.3242, 0.55", "84.8442, 185.286, -52.5877, 1.11", "85.4106, 187.344, -51.7905, 1.11", "85.66, 188.633, -51.3431, 1.11", "86.32, 195.107, -49.248, 0.28", "86.3586, 196.626, -48.8031, 0.28", "86.3328, 199.07, -48.1718, 0.55", "86.214, 201.298, -47.7779, 0.28", "86.1516, 202.122, -47.6979, 0.83", "85.9802, 203.9, -47.7343, 0.28", "85.843, 205.26, -47.9259, 0.55", "85.6865, 206.691, -47.9893, 0.28", "85.1546, 210.878, -47.8145, 0.28", "84.8853, 212.814, -47.6614, 0.55", "84.4742, 215.514, -47.3875, 0.28", "84.2224, 217.167, -47.1856, 0.83", "83.3223, 222.799, -46.3852, 0.28", "83.0599, 224.374, -46.1122, 0.83", "82.7683, 226.236, -45.7008, 0.28", "82.5473, 227.359, -45.3936, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-4.66745, 19.9076, 8.01552, 1.11", "-3.45807, 22.72, 9.05718, 1.11", "-2.49547, 24.9586, 9.88629, 0.83", "-1.37388, 27.5668, 10.8523, 0.83", "0.669604, 32.319, 12.6124, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-4.66745, 19.9076, 8.01552, 0.83", "-7.8304, 25.6695, 7.34382, 0.83", "-10.0435, 29.7011, 6.87383, 1.11", "-11.8911, 33.0669, 6.48145, 1.11", "-12.5529, 34.2724, 6.34092, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "1.92142, -25.1532, -8.77047, 0.83", "1.17896, -24.024, -10.379, 0.83", "0.0134843, -22.3658, -12.6753, 0.83", "-3.33071, -18.1696, -18.9778, 1.11", "-5.30835, -15.6881, -22.7048, 1.11", "-7.8317, -12.5218, -27.4603, 1.11", "-9.08059, -10.9547, -29.8139, 0.55", "-9.81118, -10.0677, -31.2434, 0.55", "-11.8535, -8.02154, -34.9232, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "1.92142, -25.1532, -8.77047, 1.11", "0.786136, -28.7102, -11.0783, 1.11", "0.0562065, -30.9971, -12.5621, 1.11", "-0.917978, -34.0493, -14.5424, 1.11", "-2.28918, -38.3454, -17.3298, 1.11", "-3.97835, -43.6377, -20.7636, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "82.5473, 227.359, -45.3936, 0.28", "80.9074, 227.096, -45.3936, 0.28", "79.4313, 226.861, -45.3936, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "82.5473, 227.359, -45.3936, 0.55", "81.6413, 229.714, -44.0338, 0.55", "80.7843, 232.018, -42.7797, 0.55", "79.8808, 234.363, -41.6125, 0.28", "79.5609, 235.217, -41.1546, 0.55", "78.7099, 237.816, -39.7876, 0.28", "78.5095, 238.546, -39.4222, 0.55", "78.2366, 239.874, -38.8164, 0.28", "78.0756, 241.141, -38.2745, 0.55", "77.9216, 243.353, -37.5016, 0.28", "77.9353, 245.094, -37.3495, 0.28", "78.071, 246.275, -37.7261, 0.55", "78.4215, 247.98, -38.7501, 0.28", "78.4215, 247.98, -38.7501, 0.55", "78.9942, 249.853, -40.0697, 0.28", "80.7166, 255.909, -44.2173, 0.28", "81.1651, 257.517, -45.2452, 0.55", "81.8915, 260.211, -46.784, 0.28", "82.1971, 261.492, -47.3433, 0.55", "82.9152, 265.329, -48.4692, 0.28", "83.0868, 266.798, -48.691, 0.55", "83.1718, 267.97, -48.7274, 0.28", "83.2352, 269.358, -48.7551, 0.55", "83.2607, 273.254, -48.7557, 0.28", "83.2253, 274.913, -48.8173, 0.55", "83.0849, 278.659, -49.1763, 0.28", "83.0043, 280.565, -49.3865, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "0.669604, 32.319, 12.6124, 0.83", "1.87318, 34.4679, 13.201, 0.83", "3.2181, 37.2861, 13.8962, 0.83", "4.16279, 39.54, 14.6585, 0.55", "5.39174, 42.6262, 16.0918, 0.83", "6.34428, 44.8248, 17.1852, 0.83", "7.07445, 46.4797, 18.0175, 0.83", "8.50697, 49.8524, 19.7704, 0.83", "10.2214, 54.1247, 21.9717, 0.83", "11.6414, 58.075, 23.9468, 0.83", "12.717, 61.0787, 25.5345, 0.55", "13.7136, 63.7173, 26.9714, 0.83", "14.4566, 65.6106, 28.0226, 0.83", "15.3438, 67.8156, 29.1297, 0.83", "16.6, 71.1846, 30.1352, 0.83", "21.1095, 79.7667, 32.5869, 0.83", "25.5106, 88.1559, 35.7888, 0.83", "28.9853, 97.004, 38.8934, 0.83", "32.7497, 105.393, 42.8252, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "0.669604, 32.319, 12.6124, 0.83", "-0.196705, 35.6249, 17.4725, 0.83", "-0.559466, 37.1687, 19.5388, 0.83", "-1.23039, 40.0241, 23.3604, 0.83", "-1.56281, 41.4388, 25.2539, 0.83", "-2.40998, 45.0442, 30.0794, 1.11", "-2.99407, 47.53, 33.4064, 0.83", "-3.40365, 49.2702, 35.6792, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-12.5529, 34.2724, 6.34092, 0.55", "-13.0889, 35.6544, 7.67906, 0.55", "-13.6263, 37.1604, 9.12358, 0.28", "-13.9793, 38.4124, 10.3354, 0.55", "-14.5366, 40.5384, 12.8971, 0.83", "-15.2789, 42.9216, 15.9312, 0.83", "-15.5209, 43.5217, 16.8755, 0.55", "-16.1518, 44.8191, 19.2596, 0.83", "-17.3204, 46.8135, 23.0386, 0.83", "-19.6036, 50.0018, 29.2787, 0.83", "-20.4576, 50.9688, 31.2669, 0.83", "-24.1556, 54.3268, 38.4008, 0.83", "-25.3992, 55.2811, 40.4571, 0.83", "-27.5747, 56.7174, 43.4839, 0.83", "-28.9457, 57.4788, 44.9456, 0.83", "-30.3598, 58.2936, 46.0187, 0.83", "-31.9099, 59.2402, 47.0546, 0.55", "-33.2704, 60.1614, 47.7156, 0.55", "-35.0085, 61.3897, 48.757, 0.83", "-36.4197, 62.3765, 49.6904, 0.55", "-38.6627, 64.0885, 51.2634, 0.83", "-41.2535, 66.3277, 53.2065, 0.55", "-42.294, 67.2978, 54.0619, 0.55", "-44.7535, 69.5457, 56.2734, 1.11", "-50.1903, 74.4358, 63.0946, 1.11", "-54.5887, 79.0658, 70.7898, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-12.5529, 34.2724, 6.34092, 0.55", "-12.6491, 37.9268, 5.42051, 0.55", "-12.6555, 38.5284, 5.28272, 0.83", "-12.6311, 39.9221, 5.08349, 0.28", "-12.6015, 41.3473, 4.95745, 1.11", "-12.5252, 44.1075, 4.73785, 1.11", "-12.4572, 46.8574, 4.53747, 0.83", "-12.3658, 48.8447, 4.45556, 1.11", "-12.1776, 51.7784, 4.30903, 0.55", "-11.9572, 54.8295, 4.15675, 0.83", "-11.7304, 58.0226, 3.96653, 0.28", "-11.6398, 59.6998, 3.85462, 1.11", "-11.4879, 63.8099, 3.58923, 1.11", "-11.449, 65.7405, 3.42526, 0.28", "-11.4183, 68.2247, 3.17945, 0.83", "-11.4072, 72.2067, 2.83373, 0.55", "-11.4563, 75.3585, 2.59808, 0.55", "-11.5279, 77.5692, 2.44376, 0.55", "-11.584, 78.6734, 2.34451, 1.11", "-11.7295, 82.0152, 1.97557, 1.11", "-11.8682, 85.3608, 1.51607, 0.83", "-11.9859, 88.1529, 1.05549, 0.83", "-12.0532, 90.0788, 0.693618, 0.28", "-12.1802, 93.2619, 0.0216901, 0.83", "-12.3221, 96.3475, -0.697923, 0.83", "-12.5067, 99.5613, -1.57083, 0.83", "-12.5826, 101.406, -2.13588, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-11.8535, -8.02154, -34.9232, 0.55", "-12.153, -7.06539, -37.0711, 0.55", "-12.2396, -6.71602, -37.7767, 1.11", "-13.0689, -3.37397, -44.5262, 0.83", "-13.8097, -0.388675, -50.5551, 0.55", "-13.9748, 0.27666, -51.8988, 0.55", "-14.5258, 2.49727, -56.3835, 0.83", "-14.6773, 3.53776, -58.507, 1.11" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-11.8535, -8.02154, -34.9232, 0.55", "-13.3342, -9.8104, -38.2549, 0.55", "-13.9843, -10.2807, -39.3899, 0.55", "-14.8587, -10.6164, -40.9922, 1.11", "-15.8076, -10.8638, -42.6186, 0.55", "-18.6289, -11.4405, -48.1811, 0.55", "-20.5687, -11.7195, -52.0303, 0.55", "-22.1538, -11.732, -55.3823, 0.83", "-25.7564, -11.4417, -63.2036, 0.28", "-26.6156, -11.3053, -65.2448, 0.83", "-30.451, -10.5402, -74.9711, 0.55", "-31.0176, -10.4179, -76.4251, 0.83", "-33.2693, -9.9119, -82.386, 0.28", "-33.6282, -9.8257, -83.3167, 0.55", "-36.6731, -8.87153, -90.917, 0.28", "-37.0653, -8.6982, -91.9408, 0.28", "-37.7196, -8.34523, -93.5112, 0.55", "-38.2438, -8.0112, -94.9198, 0.83", "-41.0169, -5.92318, -102.335, 0.28", "-41.3644, -5.60535, -103.378, 0.83", "-43.4455, -3.31202, -110.219, 0.28", "-43.8316, -2.82115, -111.665, 0.83", "-46.0959, 0.481763, -121.026, 0.28", "-46.5477, 1.16426, -123.032, 0.83", "-48.284, 3.66521, -130.961, 0.28", "-48.6617, 4.17032, -132.699, 0.55", "-49.1484, 4.74939, -134.906, 0.28", "-49.3388, 4.98334, -135.855, 0.83", "-50.3788, 5.9785, -140.486, 0.28", "-50.6478, 6.16451, -141.868, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-3.97835, -43.6377, -20.7636, 0.55", "-5.64044, -42.785, -22.9709, 0.55", "-5.97763, -42.6553, -23.4822, 0.55", "-9.39032, -41.5859, -28.5623, 0.83", "-10.7256, -41.2895, -30.6852, 0.28", "-11.5216, -41.164, -31.927, 0.55", "-13.8565, -40.9431, -35.7605, 1.11", "-17.4226, -40.7611, -41.9698, 0.55", "-18.097, -40.7613, -43.217, 1.11", "-20.2075, -40.9628, -47.0923, 0.55", "-21.1507, -41.0856, -48.8061, 0.55", "-24.064, -41.5622, -53.8597, 0.28", "-24.646, -41.69, -54.7962, 0.55", "-28.4638, -42.2196, -59.686, 0.28", "-29.8003, -42.3432, -61.054, 1.11", "-31.8505, -42.5079, -62.2644, 0.55", "-35.7072, -43.0275, -64.0925, 1.11", "-37.766, -43.3191, -64.7952, 0.55", "-39.892, -43.6852, -65.9952, 0.55", "-42.3274, -44.1367, -67.5456, 0.55", "-43.8336, -44.3183, -68.7758, 1.11", "-47.544, -44.5254, -72.1938, 0.55", "-49.4939, -44.3232, -74.1233, 0.83", "-53.9776, -43.2412, -78.5832, 0.28", "-55.5159, -42.7306, -80.1003, 0.55", "-58.9962, -41.2303, -83.2928, 0.28", "-60.0875, -40.6768, -84.1418, 0.83", "-65.0598, -37.8233, -87.0336, 0.28", "-66.542, -36.9541, -87.469, 0.83", "-68.6385, -35.8878, -86.9879, 0.28", "-69.8572, -35.5989, -85.8813, 0.55", "-72.7789, -35.3518, -82.1648, 0.28", "-72.9335, -35.3504, -81.9314, 0.83", "-77.3157, -35.4732, -74.3528, 0.28", "-77.7932, -35.4477, -73.4685, 0.83", "-79.9426, -35.0342, -69.2757, 0.28", "-80.4568, -34.8136, -68.2438, 0.83", "-82.7193, -33.2084, -63.7843, 0.28", "-83.3497, -32.5925, -62.6862, 0.83", "-84.6587, -30.9031, -60.8285, 0.28", "-85.4434, -29.788, -59.7336, 0.83", "-87.5249, -26.6503, -57.0514, 0.28", "-87.9328, -26.0464, -56.5712, 0.83", "-89.8225, -23.3639, -54.6959, 0.28", "-90.8058, -22.1974, -53.8757, 0.55", "-93.647, -19.2694, -51.8734, 0.28", "-94.2961, -18.6411, -51.4547, 0.55", "-95.8618, -17.202, -50.6397, 0.28", "-96.4568, -16.6506, -50.3093, 0.55", "-100.086, -13.3889, -48.1439, 0.28", "-100.373, -13.1321, -48.0148, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-3.97835, -43.6377, -20.7636, 0.83", "-4.01492, -48.0587, -21.3069, 0.83", "-4.13447, -51.6712, -21.7521, 0.55", "-4.21842, -53.0496, -21.9101, 0.55", "-4.42563, -55.2452, -22.2248, 1.11", "-4.63388, -56.997, -22.441, 0.55", "-4.88726, -58.9199, -22.6445, 1.11", "-5.3261, -61.5305, -22.9854, 0.55", "-5.66332, -63.2454, -23.1345, 1.11", "-6.35655, -66.4468, -23.392, 1.11", "-6.98953, -69.2064, -23.549, 0.55", "-7.61418, -71.9186, -23.6197, 1.11", "-8.15825, -74.4456, -23.6839, 0.83", "-8.68645, -77.2662, -23.7873, 0.28", "-9.22752, -80.5439, -24.0426, 1.11", "-9.60736, -83.1478, -24.3483, 0.83", "-9.98972, -86.2091, -24.8783, 0.83", "-10.2861, -89.0876, -25.4598, 0.83", "-10.4837, -91.7637, -26.0963, 0.83", "-10.6272, -94.5604, -26.9148, 0.28", "-10.6887, -96.5239, -27.5881, 0.83", "-10.6924, -98.1083, -28.181, 0.28", "-10.6754, -99.6675, -28.7507, 1.11", "-10.6483, -101.86, -29.3951, 0.28", "-10.6359, -103.773, -29.8245, 1.11", "-10.6337, -106.139, -30.4311, 0.28", "-10.6293, -107.324, -30.794, 1.11", "-10.6296, -108.855, -31.2911, 1.11", "-10.6152, -112.002, -32.4093, 0.55", "-10.5593, -114.607, -33.3535, 1.11", "-10.2818, -119.248, -35.1993, 0.83", "-10.0472, -121.158, -35.9986, 0.28", "-9.78071, -122.493, -36.5287, 0.55", "-9.13228, -124.888, -37.3505, 0.28", "-8.65592, -126.387, -37.7358, 0.83", "-7.76444, -129.059, -38.1505, 0.55", "-6.87609, -131.643, -38.1511, 1.38", "-5.16394, -136.831, -37.3905, 0.28", "-4.57112, -138.785, -36.8664, 0.83", "-4.06539, -140.662, -36.0514, 0.28", "-3.679, -142.32, -35.0777, 0.83", "-3.18984, -144.742, -33.2877, 0.83", "-2.52554, -148.257, -30.2932, 0.28", "-2.29396, -149.523, -29.1221, 0.55", "-1.94115, -151.383, -27.4711, 0.28", "-1.47111, -153.794, -25.4091, 0.83", "-1.05544, -155.846, -23.7552, 0.28", "-0.863136, -156.904, -23.0389, 0.55", "-0.519375, -159.048, -21.9019, 0.28", "-0.406463, -159.805, -21.58, 0.83", "-0.206876, -161.372, -21.1989, 0.28", "-0.0597526, -162.598, -21.0879, 0.83", "0.107854, -163.729, -21.0953, 0.83", "0.54247, -166.191, -21.2529, 0.83", "1.19078, -169.626, -21.6602, 0.28", "1.71244, -172.514, -22.2323, 0.28", "2.09786, -174.549, -22.6489, 0.83", "2.44641, -176.243, -23.0264, 0.55", "2.74547, -177.6, -23.312, 1.11", "3.8755, -182.41, -24.1875, 0.55", "4.8096, -186.27, -24.9241, 1.11", "5.60734, -189.369, -25.413, 0.28", "6.08864, -190.979, -25.7337, 0.55", "6.83416, -192.913, -26.1604, 0.28", "7.43201, -194.128, -26.3824, 0.55", "9.11603, -196.893, -26.7562, 0.28", "10.4998, -199.24, -26.8431, 0.83", "12.0716, -202.089, -26.8973, 0.28", "13.7982, -205.389, -26.8492, 0.83", "15.509, -208.667, -26.869, 0.55", "16.3946, -210.456, -26.8714, 0.83", "19.0, -215.999, -26.7195, 0.55", "20.0008, -218.141, -26.7417, 0.83", "21.2765, -220.962, -26.8908, 0.55", "22.3886, -223.445, -27.1866, 0.83", "23.966, -226.732, -27.8094, 0.55", "24.9475, -228.553, -28.2253, 0.55", "26.799, -231.359, -28.8471, 1.11", "28.4005, -233.499, -29.1724, 0.28", "29.169, -234.471, -29.2803, 0.55", "30.5667, -236.143, -29.3365, 0.28", "32.1318, -237.79, -29.3047, 1.11", "35.8039, -241.412, -28.8489, 0.28", "36.8625, -242.419, -28.53, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "32.7497, 105.393, 42.8252, 0.55", "36.5624, 114.273, 45.3922, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "32.7497, 105.393, 42.8252, 0.55", "36.403, 113.495, 47.4071, 0.55", "40.7271, 121.929, 50.5981, 0.55", "43.1705, 131.066, 53.8451, 0.55", "46.0785, 139.876, 57.5758, 0.55", "47.1192, 149.342, 60.6307, 0.55", "48.1131, 158.756, 63.8544, 0.55", "48.8452, 167.583, 68.4935, 0.55", "50.7591, 176.426, 72.7542, 0.55", "55.373, 184.693, 75.9746, 0.55", "60.9417, 192.637, 78.4, 0.55", "67.1086, 200.273, 80.3104, 0.55", "72.969, 207.717, 83.5113, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-3.40365, 49.2702, 35.6792, 0.83", "-2.58014, 47.4557, 35.7241, 0.83", "-1.4402, 45.1246, 36.0112, 0.83", "-0.707607, 43.5571, 36.2653, 0.83", "0.873513, 40.0845, 36.6396, 0.83", "2.33274, 36.731, 36.8898, 0.83", "4.21006, 32.4166, 37.2116, 0.55", "4.86585, 30.7655, 37.3002, 0.55", "5.40732, 29.3821, 37.4059, 0.55", "6.72722, 26.1911, 37.7813, 0.28", "7.30045, 24.9693, 38.0693, 0.83", "11.4484, 15.8922, 37.4357, 0.83", "16.0386, 7.11757, 38.8268, 0.83", "21.4612, -0.900338, 41.3384, 0.83", "26.3516, -9.07797, 44.3732, 0.83", "32.7837, -15.4645, 48.5971, 0.83", "39.7238, -19.8376, 54.3164, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-3.40365, 49.2702, 35.6792, 1.11", "-4.76681, 51.7404, 37.1804, 1.11", "-5.77375, 53.565, 38.2892, 1.11", "-7.42162, 56.5511, 40.104, 0.83", "-9.17654, 59.7312, 42.0366, 1.11", "-11.2873, 63.5561, 44.361, 0.83", "-12.1148, 65.0556, 45.2723, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-54.5887, 79.0658, 70.7898, 0.55", "-59.7705, 83.9439, 77.815, 0.55", "-66.2294, 86.6401, 84.9574, 0.55", "-72.1304, 90.0658, 92.2678, 0.55", "-79.7216, 92.5199, 98.297, 0.55", "-87.1032, 94.0907, 104.858, 0.55", "-93.9439, 96.562, 111.721, 0.55", "-101.533, 97.4778, 118.168, 0.55", "-109.189, 100.199, 123.997, 0.55", "-116.03, 104.311, 130.021, 0.55", "-121.358, 107.606, 137.815, 0.55", "-125.202, 111.108, 146.357, 0.55", "-127.739, 115.623, 154.912, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-54.5887, 79.0658, 70.7898, 0.55", "-58.2402, 84.3858, 78.4295, 0.55", "-61.6484, 88.1441, 87.0468, 0.55", "-64.5422, 92.4048, 95.6185, 0.55", "-67.5029, 96.8317, 104.082, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-12.5826, 101.406, -2.13588, 0.55", "-12.82, 103.977, -2.4789, 0.55", "-12.9523, 105.101, -2.65674, 0.28", "-13.1087, 106.471, -2.91816, 0.83", "-13.3281, 108.389, -3.2984, 0.28", "-13.4502, 109.498, -3.50704, 0.83", "-13.8567, 113.577, -4.2322, 0.28", "-14.0449, 115.22, -4.53724, 0.83", "-14.4028, 118.361, -5.16113, 0.28", "-14.5919, 120.267, -5.56836, 0.83", "-14.7625, 121.908, -5.93586, 0.28", "-14.8771, 123.282, -6.22078, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-12.5826, 101.406, -2.13588, 0.55", "-13.485, 103.516, -5.77989, 0.55", "-13.9443, 104.775, -7.96035, 0.55", "-14.2481, 105.876, -9.85901, 0.83", "-14.7348, 108.091, -13.5635, 0.55", "-15.064, 110.338, -17.1089, 0.83", "-15.2813, 112.483, -20.2465, 0.83", "-15.2767, 113.561, -21.6287, 0.83", "-14.8662, 116.723, -25.2923, 0.55", "-14.7053, 117.586, -26.1027, 0.55", "-14.3122, 119.228, -27.461, 0.83", "-13.8045, 121.077, -28.8524, 0.55", "-13.1443, 123.703, -30.8644, 0.83", "-12.7601, 125.677, -32.4136, 0.83", "-12.3947, 127.811, -34.2798, 0.83", "-11.5513, 133.693, -40.2017, 0.28", "-11.5147, 134.177, -40.8091, 0.55", "-11.491, 136.557, -44.262, 0.28", "-11.5853, 137.465, -45.7573, 1.11", "-12.0285, 139.831, -49.9151, 0.55", "-12.2404, 140.707, -51.5172, 0.83", "-13.2511, 144.001, -57.3375, 0.28", "-13.4387, 144.68, -58.5444, 0.83", "-14.3167, 147.824, -63.9019, 0.28", "-14.4717, 148.395, -64.8058, 0.55", "-14.825, 149.783, -66.7309, 0.28", "-14.9208, 150.299, -67.3735, 0.83", "-15.3133, 154.776, -72.3752, 0.28", "-15.4189, 156.417, -74.2091, 0.28", "-15.46, 157.406, -75.3164, 0.55", "-15.5354, 159.042, -77.1662, 0.28", "-15.6223, 160.319, -78.6489, 0.55", "-15.8412, 162.857, -81.7519, 0.28", "-15.813, 164.874, -84.0828, 1.38", "-15.4382, 167.637, -87.3203, 0.28", "-15.2541, 168.142, -87.9526, 0.83", "-14.3787, 169.835, -90.0599, 0.28", "-12.6043, 172.482, -93.3413, 0.55", "-10.1533, 175.533, -97.0314, 0.55", "-8.4711, 177.424, -99.3056, 1.66", "-2.41927, 183.909, -106.783, 0.55", "-1.79965, 184.585, -107.562, 1.11", "-0.215093, 186.344, -109.588, 0.28", "0.416818, 187.094, -110.417, 0.55", "2.92777, 190.4, -114.201, 0.28", "3.60732, 191.316, -115.197, 1.11", "5.69475, 193.866, -118.218, 0.55", "6.85462, 195.062, -119.797, 0.83", "8.32721, 196.292, -121.601, 0.55", "11.7625, 198.542, -125.17, 0.28", "13.1602, 199.142, -126.406, 0.83", "18.4362, 200.764, -130.616, 0.28", "20.445, 201.146, -132.012, 1.11", "21.8994, 201.301, -132.991, 0.28", "23.3355, 201.333, -134.012, 0.55", "26.6538, 201.108, -136.193, 0.28", "27.625, 200.969, -136.802, 0.83", "29.6268, 200.435, -137.817, 0.28", "30.4393, 200.099, -138.297, 0.55", "31.4088, 199.538, -138.954, 0.28", "31.8065, 199.215, -139.313, 0.55", "32.8078, 198.247, -140.275, 0.28", "33.2943, 197.733, -140.786, 0.83", "36.1845, 194.46, -143.928, 0.28", "37.896, 192.436, -145.838, 0.83", "40.9425, 188.719, -149.15, 0.28", "41.5488, 187.971, -149.882, 0.55", "42.6346, 186.632, -151.216, 0.28", "43.6147, 185.362, -152.257, 0.83", "45.439, 182.87, -153.947, 0.28", "46.4358, 181.603, -154.71, 0.55", "51.2748, 175.72, -157.687, 0.28", "52.5378, 174.165, -158.532, 0.83", "56.8822, 168.513, -161.308, 0.28", "59.6985, 164.814, -163.308, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-14.6773, 3.53776, -58.507, 0.83", "-15.3904, 3.40617, -60.3677, 0.83", "-18.1445, 2.64684, -67.3732, 0.28", "-18.7123, 2.47529, -68.7416, 0.55", "-21.2048, 1.81148, -74.4708, 0.28", "-22.0222, 1.60947, -76.2816, 0.83", "-26.1895, 0.596086, -85.7525, 0.28", "-26.706, 0.43707, -86.9294, 0.28", "-27.1435, 0.276818, -87.9688, 0.55", "-29.0536, -0.408151, -92.7193, 0.28", "-29.7684, -0.681638, -94.5611, 0.83", "-32.5269, -1.76476, -102.71, 0.28", "-33.1619, -2.01096, -104.613, 0.55", "-36.8691, -3.55742, -116.269, 0.28", "-37.211, -3.7149, -117.398, 0.83", "-39.9742, -5.18897, -126.981, 0.28", "-43.4293, -7.09218, -139.395, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-14.6773, 3.53776, -58.507, 0.55", "-15.037, 10.4791, -59.2966, 0.55", "-15.2286, 12.4155, -59.4432, 0.83", "-15.6027, 15.4398, -59.6039, 0.28", "-15.757, 16.6088, -59.7674, 0.55", "-16.2324, 20.123, -60.4095, 0.28", "-16.4481, 21.716, -60.9175, 0.55", "-16.9335, 24.9215, -62.2629, 0.28", "-17.1427, 26.4376, -62.9686, 0.83", "-17.6474, 30.9708, -65.1734, 0.28", "-17.855, 33.439, -66.4458, 0.83", "-18.2071, 40.5782, -70.6073, 0.28", "-18.2476, 42.8559, -71.929, 0.83", "-18.1944, 44.9152, -73.0812, 0.28", "-18.0801, 46.5667, -73.9398, 0.83", "-17.9165, 47.9733, -74.5209, 0.28", "-17.4926, 50.3949, -75.7535, 0.55", "-16.9968, 52.5752, -76.9075, 0.28", "-16.7649, 53.7877, -77.7407, 0.83", "-16.2164, 57.4249, -80.2419, 0.28", "-16.0344, 59.3099, -81.4472, 0.83", "-15.6832, 65.0825, -84.8996, 0.28", "-15.65, 66.5555, -85.7189, 0.55", "-15.6646, 71.344, -88.28, 0.28", "-15.7461, 74.3206, -89.7392, 1.11", "-15.9043, 77.2566, -90.9434, 0.28", "-16.0056, 78.9831, -91.554, 0.55", "-16.2874, 83.9674, -92.8356, 0.28", "-16.4056, 86.6588, -93.5383, 1.11", "-16.4743, 89.3954, -94.1849, 1.11", "-16.4968, 92.1259, -94.9056, 0.28", "-16.4723, 93.8309, -95.3341, 0.55", "-16.3798, 97.6243, -96.0949, 0.28", "-16.286, 99.66, -96.3634, 0.55", "-16.0878, 101.949, -96.8197, 0.28", "-15.9144, 103.145, -97.1117, 0.55", "-15.6017, 104.511, -97.6049, 0.28", "-15.2558, 105.751, -98.1974, 1.11", "-14.7568, 107.239, -98.9777, 1.11", "-13.0006, 112.07, -101.551, 0.28", "-12.6404, 112.997, -102.187, 0.55", "-11.5928, 115.678, -104.231, 0.28", "-11.0669, 117.007, -105.276, 0.55", "-10.1527, 119.276, -107.088, 0.28", "-9.65649, 120.556, -108.118, 1.11", "-7.92566, 125.283, -111.707, 0.28", "-7.70171, 125.938, -112.238, 0.83", "-6.88935, 128.422, -114.233, 0.28", "-6.42932, 129.872, -115.398, 0.83", "-5.9142, 131.501, -116.744, 0.28", "-5.71728, 132.191, -117.247, 0.55", "-5.08768, 134.568, -118.64, 0.28", "-4.73942, 136.113, -119.717, 0.55", "-4.36111, 138.374, -121.467, 0.28", "-4.26862, 139.051, -122.01, 0.55", "-4.08773, 140.454, -123.163, 0.28", "-4.0254, 141.057, -123.661, 0.55", "-3.65271, 144.652, -126.471, 0.28", "-3.56573, 145.566, -127.16, 0.55", "-3.4275, 147.285, -128.366, 0.55", "-3.17047, 151.367, -131.033, 0.28", "-3.09723, 152.355, -131.777, 0.55", "-2.99226, 153.624, -132.781, 0.28", "-2.88253, 154.794, -133.926, 0.55", "-2.63973, 157.38, -137.119, 0.28", "-2.58159, 158.049, -138.031, 0.83", "-2.14281, 162.103, -144.482, 0.28", "-2.06035, 162.605, -145.382, 0.83", "-1.39204, 165.743, -151.442, 0.28", "-1.02263, 167.023, -153.993, 0.83", "-0.646705, 167.978, -155.901, 0.28", "0.215301, 169.697, -159.295, 0.55", "1.47662, 171.712, -162.859, 0.28", "1.90796, 172.297, -163.857, 0.83", "3.21615, 173.756, -166.038, 0.28", "3.65345, 174.172, -166.763, 0.55", "5.24095, 175.499, -169.408, 0.28", "5.75545, 175.844, -170.207, 0.55", "7.50084, 176.872, -172.764, 0.28", "8.01933, 177.154, -173.566, 0.55", "10.4078, 178.258, -176.993, 0.28", "10.9257, 178.478, -177.664, 0.83", "14.6484, 179.857, -181.632, 0.28", "16.2252, 180.338, -183.051, 0.55", "18.2825, 180.766, -184.301, 0.55", "20.7814, 181.051, -185.189, 0.28", "22.7188, 181.107, -185.392, 0.55", "24.9935, 180.984, -185.348, 0.28", "26.7556, 180.783, -185.101, 0.55", "30.3201, 180.165, -184.374, 0.28", "33.2627, 179.561, -183.613, 0.55", "35.277, 179.06, -183.008, 0.28", "36.7532, 178.628, -182.524, 0.55", "37.8732, 178.251, -182.152, 0.55", "40.3459, 177.404, -181.4, 0.28", "41.4923, 177.02, -181.131, 0.55", "45.3789, 175.801, -180.358, 0.28", "47.9336, 175.128, -179.956, 0.55", "49.9166, 174.697, -179.795, 0.28", "51.3453, 174.458, -179.755, 0.55", "52.7292, 174.34, -179.806, 0.28", "54.2163, 174.344, -179.887, 0.55", "56.8563, 174.661, -180.115, 0.28", "59.4323, 175.133, -180.214, 0.55", "60.8528, 175.473, -180.251, 0.28", "62.0558, 175.786, -180.274, 0.55", "64.0802, 176.385, -180.331, 0.28", "65.2778, 176.792, -180.387, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "39.7238, -19.8376, 54.3164, 0.55", "45.6263, -27.7093, 56.1043, 0.55", "50.5684, -36.2835, 57.5393, 0.55", "57.064, -43.5633, 59.7327, 0.55", "63.5599, -50.5338, 62.7685, 0.55", "71.7782, -55.9271, 64.6048, 0.55", "79.3915, -61.555, 67.824, 0.55", "87.4614, -66.548, 70.9779, 0.55", "95.7705, -70.7677, 74.6048, 0.55", "104.653, -74.6461, 77.0679, 0.55", "114.181, -77.5267, 78.0281, 0.55", "123.536, -80.2675, 80.256, 0.55", "132.346, -84.3297, 82.6827, 0.55", "140.675, -89.4776, 84.7153, 0.55", "149.319, -93.4613, 87.783, 0.55", "157.823, -98.0373, 90.3789, 0.55", "166.263, -103.302, 91.4004, 0.55", "174.47, -108.977, 92.0719, 0.55", "181.684, -115.893, 92.424, 0.55", "188.571, -123.079, 93.3777, 0.55", "194.641, -130.673, 95.7196, 0.55", "200.217, -138.634, 98.0749, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "39.7238, -19.8376, 54.3164, 0.55", "43.8879, -28.5014, 57.0732, 0.55", "48.4858, -36.9267, 59.8791, 0.55", "52.9588, -45.264, 63.1168, 0.55", "56.6664, -54.4454, 64.5148, 0.55", "59.5266, -63.8966, 66.0941, 0.55", "63.6308, -72.8829, 67.6438, 0.55", "66.2844, -82.3198, 69.6195, 0.55", "68.5306, -91.5413, 72.7691, 0.55", "68.7784, -100.941, 76.1712, 0.55", "67.9052, -110.242, 79.7412, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-12.1148, 65.0556, 45.2723, 0.55", "-13.3447, 65.8989, 46.718, 0.55", "-14.4537, 66.4679, 48.0712, 0.55", "-15.3741, 66.7712, 49.0509, 0.55", "-17.1307, 67.0775, 50.606, 0.55", "-19.4937, 67.1808, 52.3582, 0.28", "-20.2379, 67.1525, 52.8193, 0.28", "-21.9934, 66.8965, 53.7314, 0.55", "-24.3617, 66.2135, 54.7405, 0.28", "-25.8432, 65.5879, 55.2384, 0.55", "-27.0476, 64.925, 55.4141, 0.28", "-28.2364, 64.2283, 55.3377, 0.55", "-35.4935, 63.3882, 62.1662, 0.55", "-41.8532, 61.6674, 69.6891, 0.55", "-48.7605, 61.6215, 76.9201, 0.55", "-56.2494, 62.082, 83.531, 0.55", "-64.5928, 62.3207, 89.0383, 0.55", "-73.3192, 62.7755, 93.9007, 0.55", "-82.1957, 61.634, 98.3622, 0.55", "-90.1028, 62.2604, 104.452, 0.55", "-98.3314, 63.8943, 109.894, 0.55", "-107.231, 65.8106, 114.031, 0.55", "-116.606, 68.5082, 116.232, 0.55", "-126.028, 71.851, 116.435, 0.55", "-135.528, 74.7687, 115.319, 0.55", "-144.629, 78.8696, 114.726, 0.55", "-153.016, 83.8639, 112.555, 0.55", "-161.355, 88.1702, 109.102, 0.55", "-170.352, 92.0794, 107.161, 0.55", "-179.356, 94.6534, 103.653, 0.55", "-188.655, 96.7763, 100.652, 0.55", "-198.32, 97.6539, 98.2364, 0.55", "-207.898, 100.035, 96.6282, 0.55", "-217.688, 100.819, 94.7479, 0.55", "-227.49, 101.152, 92.7936, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.1148, 65.0556, 45.2723, 0.83", "-13.2279, 67.9184, 45.6847, 0.83", "-13.9757, 69.8844, 46.3176, 0.83", "-14.6598, 71.6731, 46.9574, 0.83", "-15.6776, 74.3223, 47.1827, 0.83", "-16.6342, 76.9219, 46.8552, 1.11", "-17.9328, 80.5348, 46.1146, 0.83", "-19.338, 84.3931, 45.0294, 1.11", "-20.4159, 87.4053, 43.8702, 0.83", "-24.0781, 97.8468, 38.3638, 1.11", "-25.0152, 100.656, 36.2254, 1.11", "-25.5637, 102.333, 34.4312, 0.55", "-27.6852, 111.945, 32.6673, 0.55", "-28.2274, 121.568, 30.0042, 0.55", "-29.6143, 131.105, 27.3335, 0.55", "-31.5777, 140.872, 26.4815, 0.55", "-32.8705, 150.547, 24.3026, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-43.4293, -7.09218, -139.395, 0.55", "-43.6655, -6.88632, -140.346, 0.55", "-44.068, -6.62752, -141.681, 1.11", "-47.546, -5.04893, -151.075, 0.28", "-47.665, -5.01507, -151.342, 0.55", "-48.8205, -4.79962, -153.548, 0.28", "-49.5831, -4.74527, -154.758, 0.55", "-50.5883, -4.80742, -156.018, 0.28", "-51.9395, -5.19541, -157.074, 0.55", "-53.4938, -5.91502, -157.594, 0.28", "-55.0374, -6.76524, -158.199, 0.55", "-56.7729, -7.87078, -158.901, 0.28", "-57.8501, -8.58586, -159.378, 0.55", "-60.7226, -10.5641, -160.904, 0.28", "-61.7916, -11.3408, -161.603, 0.55", "-63.509, -12.6221, -162.976, 0.28", "-64.5289, -13.427, -163.985, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-43.4293, -7.09218, -139.395, 0.28", "-42.6768, -8.66144, -144.353, 0.28", "-42.5097, -9.2232, -145.887, 1.11", "-41.6076, -14.1504, -157.67, 0.28", "-41.5517, -14.8363, -159.178, 0.55", "-41.5544, -16.681, -162.8, 0.28", "-41.6012, -17.398, -163.979, 0.55", "-42.0553, -19.2884, -166.195, 0.28", "-42.4895, -20.5544, -167.221, 0.55", "-44.0402, -24.1796, -168.557, 0.28", "-44.9718, -26.2712, -169.137, 0.55", "-46.6954, -30.0065, -169.965, 0.28", "-48.0204, -32.7943, -170.662, 0.83", "-49.2183, -35.2761, -171.312, 0.28", "-50.2866, -37.4283, -171.897, 0.55", "-51.8102, -40.404, -172.626, 0.28", "-52.6001, -41.8123, -173.091, 0.55", "-54.3035, -44.4237, -174.301, 0.28", "-55.089, -45.5483, -175.05, 0.55", "-55.9055, -46.5139, -175.937, 0.28", "-56.5288, -47.1455, -176.789, 0.55", "-57.7201, -48.2304, -178.652, 0.28", "-58.681, -48.9512, -180.223, 0.83", "-60.7522, -50.213, -183.557, 0.28", "-61.5863, -50.7127, -185.012, 0.55", "-63.3044, -51.9149, -188.357, 0.28", "-63.6644, -52.2201, -189.095, 0.55", "-64.4877, -53.1329, -191.111, 0.28", "-64.9686, -53.7708, -192.512, 0.83", "-66.3469, -55.7006, -196.726, 0.28", "-67.1999, -57.0544, -199.572, 0.28", "-67.9462, -58.3699, -202.21, 0.55", "-69.4777, -61.3321, -208.186, 0.28", "-70.2883, -63.2487, -211.897, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "67.9052, -110.242, 79.7412, 0.55", "66.8345, -119.621, 83.0381, 0.55", "66.3243, -129.421, 84.9688, 0.55", "66.2482, -138.992, 87.8605, 0.55", "66.998, -148.109, 91.9027, 0.55", "68.2353, -157.275, 95.7029, 0.55", "68.5504, -165.925, 100.709, 0.55", "67.3929, -174.522, 105.685, 0.55", "66.9573, -182.891, 111.143, 0.55", "66.0502, -190.699, 117.323, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "67.9052, -110.242, 79.7412, 0.55", "73.3679, -118.417, 81.5601, 0.55", "78.4207, -126.964, 82.759, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-32.8705, 150.547, 24.3026, 0.55", "-39.7733, 155.669, 19.1931, 0.55", "-46.7499, 158.741, 12.7206, 0.55", "-53.5982, 159.99, 5.54141, 0.55", "-59.6848, 163.26, -1.6878, 0.55", "-66.2526, 166.335, -8.57304, 0.55", "-72.7015, 170.04, -15.2581, 0.55", "-79.4768, 175.562, -20.1156, 0.55", "-86.4801, 181.553, -23.9963, 0.55", "-93.5533, 186.896, -28.6237, 0.55", "-99.7398, 191.975, -34.6185, 0.55", "-105.241, 197.382, -40.9829, 0.55", "-110.764, 203.844, -46.2477, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-32.8705, 150.547, 24.3026, 0.55", "-31.4405, 160.441, 24.4846, 0.55", "-28.4644, 169.986, 24.2931, 0.55", "-27.2533, 179.829, 23.0109, 0.55", "-24.884, 189.34, 21.0224, 0.55", "-22.3672, 199.018, 20.9228, 0.55", "-18.93, 208.357, 21.9022, 0.55", "-16.2417, 217.988, 21.8989, 0.55", "-13.0315, 227.305, 20.2002, 0.55", "-9.25804, 236.023, 17.0727, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_29", "dend_0", "dend_44", "dend_31", "dend_24", "dend_1", "dend_46", "dend_45", "dend_43", "dend_32", "dend_28", "dend_25", "dend_9", "dend_2", "dend_36", "dend_33", "dend_27", "dend_26", "dend_21", "dend_10", "dend_6", "dend_3", "dend_38", "dend_37", "dend_35", "dend_34", "dend_23", "dend_22", "dend_16", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_40", "dend_39", "dend_20", "dend_17", "dend_15", "dend_12", "dend_42", "dend_41", "dend_19", "dend_18", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_30", "dend_29", "dend_0", "dend_44", "dend_31", "dend_24", "dend_1", "dend_46", "dend_45", "dend_43", "dend_32", "dend_28", "dend_25", "dend_9", "dend_2", "dend_36", "dend_33", "dend_27", "dend_26", "dend_21", "dend_10", "dend_6", "dend_3", "dend_38", "dend_37", "dend_35", "dend_34", "dend_23", "dend_22", "dend_16", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_40", "dend_39", "dend_20", "dend_17", "dend_15", "dend_12", "dend_42", "dend_41", "dend_19", "dend_18", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "axon_0", "axon_0", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_1", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_NBC_327fc63584_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_44, id: dend_44, parent: dend_30
create dend_44
public dend_44
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_0
create dend_24
public dend_24
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_31
create dend_43
public dend_43
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_9
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_29, dend_0, dend_44, dend_31, dend_24, dend_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_29, dend_0, dend_44, dend_31, dend_24, dend_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_21
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, axon_0, axon_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_30(0), soma_0(0.45000041566367777)
    connect dend_29(0), soma_0(0.45000041566367777)
    connect dend_0(0), soma_0(0.45000041566367777)
    connect axon_0(0), soma_0(1.0)
    connect dend_44(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_24(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.49578, 9.66883, 0.467618, 3.07883 ) }
    soma_0 { pt3dadd( -1.35379, 8.66156, 0.417811, 3.68571 ) }
    soma_0 { pt3dadd( -1.21179, 7.65428, 0.368005, 4.49861 ) }
    soma_0 { pt3dadd( -1.0698, 6.64701, 0.318198, 5.02547 ) }
    soma_0 { pt3dadd( -0.927807, 5.63974, 0.268391, 5.55232 ) }
    soma_0 { pt3dadd( -0.785813, 4.63247, 0.218585, 6.08002 ) }
    soma_0 { pt3dadd( -0.643819, 3.6252, 0.168778, 6.65441 ) }
    soma_0 { pt3dadd( -0.501826, 2.61792, 0.118971, 7.239 ) }
    soma_0 { pt3dadd( -0.359832, 1.61065, 0.0691646, 7.82473 ) }
    soma_0 { pt3dadd( -0.217838, 0.603378, 0.0193579, 8.41046 ) }
    soma_0 { pt3dadd( -0.0758445, -0.403894, -0.0304487, 8.6567 ) }
    soma_0 { pt3dadd( 0.0661492, -1.41117, -0.0802554, 8.65482 ) }
    soma_0 { pt3dadd( 0.208143, -2.41844, -0.130062, 8.55954 ) }
    soma_0 { pt3dadd( 0.350137, -3.42571, -0.179869, 8.46266 ) }
    soma_0 { pt3dadd( 0.49213, -4.43298, -0.229676, 8.09049 ) }
    soma_0 { pt3dadd( 0.634124, -5.44025, -0.279482, 7.48075 ) }
    soma_0 { pt3dadd( 0.776118, -6.44753, -0.329289, 6.87101 ) }
    soma_0 { pt3dadd( 0.918112, -7.4548, -0.379096, 6.23286 ) }
    soma_0 { pt3dadd( 1.06011, -8.46207, -0.428902, 5.0468 ) }
    soma_0 { pt3dadd( 1.2021, -9.46934, -0.478709, 3.42243 ) }
    soma_0 { pt3dadd( 1.34409, -10.4766, -0.528516, 2.06215 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.94076, -11.1276, 1.79231, 1.94 ) }
    dend_30 { pt3dadd( 2.22076, -12.5176, 1.79231, 1.94 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 23/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 4.13076, -4.13764, 8.98231, 0.55 ) }
    dend_29 { pt3dadd( 5.5712, -2.78614, 8.56304, 0.55 ) }
    dend_29 { pt3dadd( 7.07641, -1.19968, 8.10133, 0.83 ) }
    dend_29 { pt3dadd( 9.18972, 1.10187, 7.28568, 0.83 ) }
    dend_29 { pt3dadd( 11.6781, 3.66632, 6.31806, 0.55 ) }
    dend_29 { pt3dadd( 12.7174, 4.6847, 5.97561, 0.83 ) }
    dend_29 { pt3dadd( 14.8319, 6.73328, 5.35434, 0.28 ) }
    dend_29 { pt3dadd( 16.1181, 8.03754, 5.05566, 0.83 ) }
    dend_29 { pt3dadd( 18.4112, 10.3551, 4.69733, 0.55 ) }
    dend_29 { pt3dadd( 20.4778, 12.3775, 4.7307, 0.55 ) }
    dend_29 { pt3dadd( 22.1699, 13.9603, 5.1188, 0.83 ) }
    dend_29 { pt3dadd( 22.9562, 14.7216, 5.45457, 0.83 ) }
    dend_29 { pt3dadd( 24.6309, 16.497, 6.48636, 0.55 ) }
    dend_29 { pt3dadd( 25.1756, 17.2003, 6.93366, 0.83 ) }
    dend_29 { pt3dadd( 26.5465, 19.3963, 8.32863, 0.28 ) }
    dend_29 { pt3dadd( 27.2172, 20.7586, 9.09692, 0.83 ) }
    dend_29 { pt3dadd( 28.52, 23.9532, 10.599, 0.28 ) }
    dend_29 { pt3dadd( 29.1566, 25.8156, 11.3641, 0.55 ) }
    dend_29 { pt3dadd( 29.8984, 28.7866, 12.4111, 0.28 ) }
    dend_29 { pt3dadd( 30.181, 30.4244, 12.9551, 0.83 ) }
    dend_29 { pt3dadd( 30.2902, 32.1163, 13.4629, 0.55 ) }
    dend_29 { pt3dadd( 30.2361, 34.2258, 14.1194, 0.55 ) }
    dend_29 { pt3dadd( 30.1038, 35.4603, 14.1841, 1.11 ) }
    dend_29 { pt3dadd( 29.8059, 37.9182, 13.6795, 0.55 ) }
    dend_29 { pt3dadd( 29.7496, 38.4834, 13.4498, 0.55 ) }
    dend_29 { pt3dadd( 29.5781, 41.7862, 12.0609, 0.83 ) }
    dend_29 { pt3dadd( 29.6289, 45.8283, 10.0926, 0.28 ) }
    dend_29 { pt3dadd( 30.5012, 56.9245, 4.3434, 0.83 ) }
    dend_29 { pt3dadd( 30.7197, 58.3314, 3.58666, 0.28 ) }
    dend_29 { pt3dadd( 31.0844, 60.1118, 2.46218, 0.55 ) }
    dend_29 { pt3dadd( 32.0278, 63.8201, -0.158189, 0.28 ) }
    dend_29 { pt3dadd( 32.6469, 65.6234, -1.84432, 0.83 ) }
    dend_29 { pt3dadd( 33.1061, 66.624, -3.06855, 0.28 ) }
    dend_29 { pt3dadd( 33.6253, 67.565, -2.59665, 0.83 ) }
    dend_29 { pt3dadd( 38.2566, 76.2368, -4.42733, 0.83 ) }
    dend_29 { pt3dadd( 42.3887, 85.0142, -6.85262, 0.83 ) }
    dend_29 { pt3dadd( 45.6372, 93.8198, -10.3038, 0.83 ) }
    dend_29 { pt3dadd( 50.2268, 102.354, -12.7773, 0.83 ) }
    dend_29 { pt3dadd( 53.6343, 111.459, -15.1164, 0.83 ) }
    dend_29 { pt3dadd( 57.8787, 119.864, -18.4854, 0.83 ) }
    dend_29 { pt3dadd( 62.1266, 127.759, -22.9137, 0.83 ) }
    dend_29 { pt3dadd( 65.3269, 135.7, -28.0813, 0.83 ) }
    dend_29 { pt3dadd( 69.4791, 142.71, -33.8795, 0.83 ) }
    dend_29 { pt3dadd( 74.2958, 150.212, -38.4099, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 67/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.13924, 10.2624, 3.27231, 2.49 ) }
    dend_0 { pt3dadd( -1.13924, 12.2024, 3.27231, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 69/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.34409, -10.4766, -0.528516, 0.83 ) }
    axon_0 { pt3dadd( 3.43791, -25.3297, -0.528516, 0.83 ) }
    axon_0 { pt3dadd( 5.53174, -40.1829, -0.528516, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_30 (entry count 72/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 2.22076, -12.5176, 1.79231, 0.28 ) }
    dend_44 { pt3dadd( 3.04133, -15.2652, 3.91819, 0.28 ) }
    dend_44 { pt3dadd( 3.40219, -16.4735, 4.85308, 0.55 ) }
    dend_44 { pt3dadd( 4.62882, -20.5807, 8.03094, 0.28 ) }
    dend_44 { pt3dadd( 5.7947, -24.4845, 11.0514, 0.28 ) }
    dend_44 { pt3dadd( 6.5148, -26.8957, 12.917, 0.28 ) }
    dend_44 { pt3dadd( 8.3039, -35.1695, 18.2409, 0.28 ) }
    dend_44 { pt3dadd( 9.98662, -42.0275, 25.3215, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 2.22076, -12.5176, 1.79231, 1.66 ) }
    dend_31 { pt3dadd( 2.35017, -15.2017, -1.31539, 1.66 ) }
    dend_31 { pt3dadd( 2.51712, -18.6644, -5.32457, 1.94 ) }
    // Section: dend_24, id: dend_24, parent: dend_0 (entry count 83/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.13924, 12.2024, 3.27231, 0.83 ) }
    dend_24 { pt3dadd( 0.0844085, 15.9686, 2.50581, 0.83 ) }
    dend_24 { pt3dadd( 0.81199, 18.1865, 1.70548, 0.55 ) }
    dend_24 { pt3dadd( 1.53236, 20.3846, 0.7273, 0.83 ) }
    dend_24 { pt3dadd( 2.70021, 23.9037, -0.983207, 0.83 ) }
    dend_24 { pt3dadd( 3.28873, 25.6745, -1.82379, 1.11 ) }
    dend_24 { pt3dadd( 4.81561, 30.2687, -4.00464, 1.11 ) }
    dend_24 { pt3dadd( 6.35615, 34.9293, -6.43981, 0.55 ) }
    dend_24 { pt3dadd( 7.81539, 39.2411, -8.86849, 1.11 ) }
    dend_24 { pt3dadd( 9.32438, 43.5803, -11.3949, 1.11 ) }
    dend_24 { pt3dadd( 10.4132, 46.7212, -13.1696, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 94/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.13924, 12.2024, 3.27231, 1.11 ) }
    dend_1 { pt3dadd( -3.52865, 17.4206, 6.48456, 1.11 ) }
    dend_1 { pt3dadd( -4.66745, 19.9076, 8.01552, 2.22 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 97/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.53174, -40.1829, -0.528516, 0.28 ) }
    axon_1 { pt3dadd( 7.62556, -55.036, -0.528516, 0.28 ) }
    axon_1 { pt3dadd( 9.71939, -69.8892, -0.528516, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 0/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 9.98662, -42.0275, 25.3215, 0.28 ) }
    dend_46 { pt3dadd( 9.93487, -49.6669, 31.7742, 0.28 ) }
    dend_46 { pt3dadd( 8.45519, -57.9726, 37.1432, 0.28 ) }
    dend_46 { pt3dadd( 5.66748, -66.7926, 40.9426, 0.28 ) }
    dend_46 { pt3dadd( 3.67517, -75.4554, 45.5237, 0.28 ) }
    dend_46 { pt3dadd( -0.499843, -83.0749, 50.4748, 0.28 ) }
    dend_46 { pt3dadd( -3.95596, -91.1355, 55.2791, 0.28 ) }
    dend_46 { pt3dadd( -6.57925, -98.8098, 61.1291, 0.28 ) }
    dend_46 { pt3dadd( -8.26024, -107.435, 65.9031, 0.28 ) }
    dend_46 { pt3dadd( -9.46915, -115.783, 71.2745, 0.28 ) }
    dend_46 { pt3dadd( -11.8728, -124.098, 76.2811, 0.28 ) }
    dend_46 { pt3dadd( -13.6908, -132.46, 81.4571, 0.28 ) }
    dend_46 { pt3dadd( -14.705, -141.561, 85.4748, 0.28 ) }
    dend_46 { pt3dadd( -16.9415, -150.99, 87.9383, 0.28 ) }
    dend_46 { pt3dadd( -17.8354, -160.76, 89.8759, 0.28 ) }
    dend_46 { pt3dadd( -18.7626, -170.637, 91.1426, 0.28 ) }
    dend_46 { pt3dadd( -21.2572, -179.932, 93.8546, 0.28 ) }
    dend_46 { pt3dadd( -23.7761, -188.449, 98.4504, 0.28 ) }
    dend_46 { pt3dadd( -26.9273, -197.559, 101.109, 0.28 ) }
    dend_46 { pt3dadd( -31.7448, -206.165, 102.763, 0.28 ) }
    dend_46 { pt3dadd( -35.5061, -215.286, 104.39, 0.28 ) }
    dend_46 { pt3dadd( -40.0465, -223.637, 107.498, 0.28 ) }
    dend_46 { pt3dadd( -45.2022, -231.499, 110.906, 0.28 ) }
    dend_46 { pt3dadd( -51.875, -237.246, 115.643, 0.28 ) }
    dend_46 { pt3dadd( -58.8237, -242.326, 120.735, 0.28 ) }
    dend_46 { pt3dadd( -66.3687, -246.315, 125.945, 0.28 ) }
    dend_46 { pt3dadd( -72.1285, -251.639, 132.149, 0.28 ) }
    dend_46 { pt3dadd( -78.8706, -257.426, 136.737, 0.28 ) }
    dend_46 { pt3dadd( -87.0255, -261.996, 140.288, 0.28 ) }
    dend_46 { pt3dadd( -95.737, -264.417, 144.56, 0.28 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 30/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 9.98662, -42.0275, 25.3215, 0.28 ) }
    dend_45 { pt3dadd( 13.1169, -49.5508, 31.1182, 0.28 ) }
    dend_45 { pt3dadd( 17.0676, -56.6653, 36.93, 0.28 ) }
    dend_45 { pt3dadd( 20.2882, -64.0293, 42.8796, 0.28 ) }
    dend_45 { pt3dadd( 24.0947, -71.6369, 48.1366, 0.28 ) }
    dend_45 { pt3dadd( 27.2481, -78.4394, 54.7534, 0.28 ) }
    dend_45 { pt3dadd( 31.5911, -84.8939, 61.0364, 0.28 ) }
    dend_45 { pt3dadd( 34.9283, -91.1616, 68.0777, 0.28 ) }
    dend_45 { pt3dadd( 38.1647, -98.1657, 74.4392, 0.28 ) }
    dend_45 { pt3dadd( 40.2163, -106.414, 79.7062, 0.28 ) }
    dend_45 { pt3dadd( 43.6981, -113.687, 85.6224, 0.28 ) }
    dend_45 { pt3dadd( 48.1928, -121.162, 90.5114, 0.28 ) }
    dend_45 { pt3dadd( 53.2554, -127.306, 96.5631, 0.28 ) }
    dend_45 { pt3dadd( 58.2819, -132.856, 103.191, 0.28 ) }
    dend_45 { pt3dadd( 64.2911, -138.501, 108.851, 0.28 ) }
    dend_45 { pt3dadd( 69.4633, -143.449, 115.834, 0.28 ) }
    dend_45 { pt3dadd( 75.6596, -149.161, 121.216, 0.28 ) }
    dend_45 { pt3dadd( 81.632, -155.415, 126.24, 0.28 ) }
    dend_45 { pt3dadd( 88.1393, -161.509, 130.767, 0.28 ) }
    dend_45 { pt3dadd( 93.4118, -168.102, 136.13, 0.28 ) }
    dend_45 { pt3dadd( 97.9305, -175.684, 140.83, 0.28 ) }
    dend_45 { pt3dadd( 102.515, -183.658, 144.755, 0.28 ) }
    dend_45 { pt3dadd( 108.605, -191.169, 147.303, 0.28 ) }
    dend_45 { pt3dadd( 114.91, -197.968, 151.045, 0.28 ) }
    dend_45 { pt3dadd( 121.406, -204.945, 154.068, 0.28 ) }
    dend_45 { pt3dadd( 128.764, -211.272, 156.48, 0.28 ) }
    dend_45 { pt3dadd( 136.265, -217.871, 156.914, 0.28 ) }
    dend_45 { pt3dadd( 144.566, -223.331, 158.05, 0.28 ) }
    dend_45 { pt3dadd( 152.843, -228.596, 159.994, 0.28 ) }
    // Section: dend_43, id: dend_43, parent: dend_31 (entry count 59/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.51712, -18.6644, -5.32457, 0.55 ) }
    dend_43 { pt3dadd( 3.00537, -20.3901, -7.32563, 0.55 ) }
    dend_43 { pt3dadd( 3.58549, -22.1757, -9.37471, 0.55 ) }
    dend_43 { pt3dadd( 4.64049, -24.7859, -12.8081, 0.28 ) }
    dend_43 { pt3dadd( 5.14676, -25.9271, -14.3793, 0.83 ) }
    dend_43 { pt3dadd( 6.61729, -28.8884, -18.5614, 0.55 ) }
    dend_43 { pt3dadd( 7.78585, -31.026, -21.6561, 0.55 ) }
    dend_43 { pt3dadd( 8.34829, -31.8778, -23.0799, 0.55 ) }
    dend_43 { pt3dadd( 10.4471, -34.464, -27.7876, 0.28 ) }
    dend_43 { pt3dadd( 10.7118, -34.7298, -28.2952, 0.28 ) }
    dend_43 { pt3dadd( 11.3682, -35.3224, -29.4432, 0.28 ) }
    dend_43 { pt3dadd( 12.0373, -35.9106, -30.3792, 0.83 ) }
    dend_43 { pt3dadd( 14.1075, -37.7168, -32.8512, 0.83 ) }
    dend_43 { pt3dadd( 15.8213, -39.2519, -34.6831, 0.55 ) }
    dend_43 { pt3dadd( 16.9923, -40.4196, -35.8172, 0.83 ) }
    dend_43 { pt3dadd( 19.0676, -42.6359, -37.8084, 0.55 ) }
    dend_43 { pt3dadd( 21.2179, -45.1283, -39.954, 0.83 ) }
    dend_43 { pt3dadd( 23.0934, -47.3062, -41.71, 0.55 ) }
    dend_43 { pt3dadd( 23.72, -48.0343, -42.2458, 0.55 ) }
    dend_43 { pt3dadd( 25.5157, -49.9923, -43.7734, 0.83 ) }
    dend_43 { pt3dadd( 26.4937, -51.0593, -44.794, 0.83 ) }
    dend_43 { pt3dadd( 28.3863, -53.1599, -47.1108, 0.55 ) }
    dend_43 { pt3dadd( 29.2102, -54.0469, -48.2948, 0.55 ) }
    dend_43 { pt3dadd( 30.0327, -54.904, -49.4757, 0.28 ) }
    dend_43 { pt3dadd( 31.1692, -56.0259, -51.2321, 0.83 ) }
    dend_43 { pt3dadd( 33.7093, -58.364, -55.5801, 0.55 ) }
    dend_43 { pt3dadd( 35.4583, -59.8949, -58.7369, 0.28 ) }
    dend_43 { pt3dadd( 36.5913, -60.8326, -60.8636, 0.55 ) }
    dend_43 { pt3dadd( 37.1498, -61.2692, -61.8889, 0.28 ) }
    dend_43 { pt3dadd( 38.9422, -62.5179, -64.9817, 0.83 ) }
    dend_43 { pt3dadd( 42.0013, -64.3571, -69.5001, 0.28 ) }
    dend_43 { pt3dadd( 43.0933, -64.8984, -70.8997, 0.55 ) }
    dend_43 { pt3dadd( 46.0126, -66.2011, -74.2674, 0.28 ) }
    dend_43 { pt3dadd( 47.6352, -66.9765, -75.9975, 0.55 ) }
    dend_43 { pt3dadd( 50.4445, -68.3409, -78.7958, 0.55 ) }
    dend_43 { pt3dadd( 52.6617, -69.4984, -80.9381, 0.83 ) }
    dend_43 { pt3dadd( 57.1558, -72.0231, -85.2372, 0.28 ) }
    dend_43 { pt3dadd( 58.3067, -72.718, -86.3926, 0.55 ) }
    dend_43 { pt3dadd( 61.5008, -74.7833, -90.0437, 0.28 ) }
    dend_43 { pt3dadd( 62.4394, -75.4349, -91.277, 0.83 ) }
    dend_43 { pt3dadd( 64.8004, -77.1128, -94.8441, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_43 { pt3dadd( 65.6613, -77.6945, -96.2783, 0.55 ) }
    dend_43 { pt3dadd( 65.9867, -77.8556, -96.7774, 0.55 ) }
    dend_43 { pt3dadd( 69.5872, -79.0892, -102.061, 0.28 ) }
    dend_43 { pt3dadd( 70.1899, -79.2183, -102.843, 0.55 ) }
    dend_43 { pt3dadd( 72.6314, -79.5828, -105.574, 0.28 ) }
    dend_43 { pt3dadd( 74.4643, -79.766, -107.287, 0.83 ) }
    dend_43 { pt3dadd( 78.9424, -80.2728, -111.138, 0.28 ) }
    dend_43 { pt3dadd( 80.076, -80.4365, -111.957, 0.55 ) }
    dend_43 { pt3dadd( 81.8846, -80.7864, -112.95, 0.28 ) }
    dend_43 { pt3dadd( 83.5026, -81.2045, -113.756, 0.83 ) }
    dend_43 { pt3dadd( 84.0441, -81.3973, -114.005, 0.83 ) }
    dend_43 { pt3dadd( 87.2146, -82.7324, -115.527, 0.28 ) }
    dend_43 { pt3dadd( 88.6758, -83.4285, -116.214, 0.55 ) }
    dend_43 { pt3dadd( 89.414, -83.7759, -116.582, 0.28 ) }
    dend_43 { pt3dadd( 91.2487, -84.6293, -117.52, 0.83 ) }
    dend_43 { pt3dadd( 94.7186, -86.1983, -119.127, 0.55 ) }
    dend_43 { pt3dadd( 95.9266, -86.6799, -119.619, 0.83 ) }
    dend_43 { pt3dadd( 97.9198, -87.3413, -120.211, 0.28 ) }
    dend_43 { pt3dadd( 98.7276, -87.5791, -120.452, 0.55 ) }
    dend_43 { pt3dadd( 99.6636, -87.8218, -120.712, 0.28 ) }
    dend_43 { pt3dadd( 101.205, -88.2311, -121.251, 0.55 ) }
    dend_43 { pt3dadd( 102.003, -88.4725, -121.532, 0.28 ) }
    dend_43 { pt3dadd( 103.475, -88.9996, -122.278, 0.55 ) }
    dend_43 { pt3dadd( 105.699, -89.8455, -123.598, 0.28 ) }
    dend_43 { pt3dadd( 106.468, -90.176, -124.166, 0.55 ) }
    dend_43 { pt3dadd( 109.508, -91.6121, -126.629, 0.28 ) }
    dend_43 { pt3dadd( 111.01, -92.3859, -127.92, 0.83 ) }
    dend_43 { pt3dadd( 113.372, -93.7246, -129.99, 0.28 ) }
    dend_43 { pt3dadd( 113.742, -93.9548, -130.325, 0.55 ) }
    dend_43 { pt3dadd( 116.639, -95.8899, -132.913, 0.28 ) }
    dend_43 { pt3dadd( 117.8, -96.7472, -133.939, 0.28 ) }
    dend_43 { pt3dadd( 118.178, -97.0687, -134.299, 0.55 ) }
    dend_43 { pt3dadd( 118.884, -97.8001, -135.014, 0.28 ) }
    dend_43 { pt3dadd( 119.534, -98.607, -135.686, 0.55 ) }
    dend_43 { pt3dadd( 120.844, -100.464, -137.081, 0.28 ) }
    dend_43 { pt3dadd( 122.045, -102.348, -138.327, 0.55 ) }
    dend_43 { pt3dadd( 123.894, -105.315, -140.217, 0.28 ) }
    dend_43 { pt3dadd( 125.103, -107.274, -141.571, 0.83 ) }
    dend_43 { pt3dadd( 126.365, -109.286, -143.034, 0.28 ) }
    dend_43 { pt3dadd( 127.075, -110.397, -143.723, 0.55 ) }
    dend_43 { pt3dadd( 127.498, -111.052, -144.104, 0.28 ) }
    dend_43 { pt3dadd( 128.225, -112.072, -144.697, 0.83 ) }
    dend_43 { pt3dadd( 131.385, -115.894, -146.767, 0.28 ) }
    dend_43 { pt3dadd( 132.135, -116.599, -147.545, 0.55 ) }
    dend_43 { pt3dadd( 134.242, -118.284, -150.695, 0.28 ) }
    dend_43 { pt3dadd( 135.59, -119.333, -153.375, 0.55 ) }
    dend_43 { pt3dadd( 136.283, -119.9, -155.104, 0.28 ) }
    dend_43 { pt3dadd( 136.606, -120.164, -156.019, 0.55 ) }
    dend_43 { pt3dadd( 139.846, -122.782, -165.708, 0.55 ) }
    dend_43 { pt3dadd( 141.212, -123.872, -170.037, 0.28 ) }
    dend_43 { pt3dadd( 142.057, -124.572, -172.911, 0.83 ) }
    dend_43 { pt3dadd( 144.089, -126.44, -179.68, 0.28 ) }
    dend_43 { pt3dadd( 144.239, -126.594, -180.14, 0.55 ) }
    dend_43 { pt3dadd( 144.948, -127.341, -181.88, 0.28 ) }
    dend_43 { pt3dadd( 146.538, -128.896, -184.376, 0.55 ) }
    dend_43 { pt3dadd( 147.793, -129.982, -185.759, 0.28 ) }
    dend_43 { pt3dadd( 148.945, -130.921, -186.854, 0.55 ) }
    dend_43 { pt3dadd( 151.585, -132.992, -189.054, 0.28 ) }
    dend_43 { pt3dadd( 152.845, -134.027, -190.08, 0.55 ) }
    dend_43 { pt3dadd( 156.067, -136.755, -192.924, 0.28 ) }
    dend_43 { pt3dadd( 157.976, -138.438, -194.535, 0.55 ) }
    dend_43 { pt3dadd( 160.749, -140.801, -196.846, 0.28 ) }
    dend_43 { pt3dadd( 161.577, -141.522, -197.516, 0.55 ) }
    dend_43 { pt3dadd( 163.366, -143.053, -198.958, 0.28 ) }
    dend_43 { pt3dadd( 166.205, -145.458, -201.386, 0.28 ) }
    dend_43 { pt3dadd( 166.862, -146.018, -201.881, 0.28 ) }
    dend_43 { pt3dadd( 167.809, -146.867, -202.656, 0.55 ) }
    dend_43 { pt3dadd( 169.444, -148.453, -203.985, 0.28 ) }
    dend_43 { pt3dadd( 171.431, -150.415, -205.757, 0.55 ) }
    dend_43 { pt3dadd( 174.679, -153.587, -208.858, 0.28 ) }
    dend_43 { pt3dadd( 175.763, -154.721, -209.83, 0.55 ) }
    dend_43 { pt3dadd( 176.796, -155.891, -210.903, 0.28 ) }
    dend_43 { pt3dadd( 177.77, -157.152, -212.149, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 73/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.51712, -18.6644, -5.32457, 1.66 ) }
    dend_32 { pt3dadd( 2.2696, -21.3606, -6.75639, 1.66 ) }
    dend_32 { pt3dadd( 1.92142, -25.1532, -8.77047, 1.94 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 10.4132, 46.7212, -13.1696, 0.55 ) }
    dend_28 { pt3dadd( 9.26084, 49.1006, -12.6154, 0.55 ) }
    dend_28 { pt3dadd( 8.47891, 50.5332, -12.2097, 0.55 ) }
    dend_28 { pt3dadd( 7.46776, 52.2812, -11.6918, 0.28 ) }
    dend_28 { pt3dadd( 6.77153, 53.4606, -11.4791, 0.55 ) }
    dend_28 { pt3dadd( 5.96815, 54.8375, -11.3248, 0.28 ) }
    dend_28 { pt3dadd( 4.97151, 56.6058, -11.1859, 0.55 ) }
    dend_28 { pt3dadd( 4.11796, 58.1713, -11.1348, 0.28 ) }
    dend_28 { pt3dadd( 3.59506, 59.2947, -11.0342, 0.83 ) }
    dend_28 { pt3dadd( 2.4395, 62.3769, -10.923, 0.28 ) }
    dend_28 { pt3dadd( 2.10524, 63.4563, -10.8153, 0.83 ) }
    dend_28 { pt3dadd( 1.69419, 64.8455, -10.6305, 0.55 ) }
    dend_28 { pt3dadd( 1.33067, 66.1551, -10.3784, 0.83 ) }
    dend_28 { pt3dadd( 0.189063, 70.1109, -9.32771, 0.55 ) }
    dend_28 { pt3dadd( -0.637992, 72.8506, -8.33912, 0.83 ) }
    dend_28 { pt3dadd( -1.73196, 76.4717, -6.77364, 0.55 ) }
    dend_28 { pt3dadd( -2.21954, 78.0271, -6.07714, 0.55 ) }
    dend_28 { pt3dadd( -3.08484, 80.6402, -4.77823, 0.83 ) }
    dend_28 { pt3dadd( -4.37422, 84.3004, -2.87786, 0.55 ) }
    dend_28 { pt3dadd( -4.96906, 85.9384, -1.95043, 0.83 ) }
    dend_28 { pt3dadd( -5.59205, 87.7819, -0.798539, 0.28 ) }
    dend_28 { pt3dadd( -5.73349, 88.2849, -0.470186, 0.55 ) }
    dend_28 { pt3dadd( -6.61405, 92.0097, 1.91306, 0.28 ) }
    dend_28 { pt3dadd( -6.96385, 93.8002, 2.97334, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( -7.41654, 96.6021, 4.39077, 0.28 ) }
    dend_28 { pt3dadd( -7.65463, 98.363, 5.16931, 0.55 ) }
    dend_28 { pt3dadd( -8.19274, 102.642, 6.80699, 0.28 ) }
    dend_28 { pt3dadd( -8.43651, 105.126, 7.58332, 0.55 ) }
    dend_28 { pt3dadd( -8.60131, 107.571, 8.13998, 0.28 ) }
    dend_28 { pt3dadd( -8.72536, 110.087, 8.60758, 0.28 ) }
    dend_28 { pt3dadd( -8.76702, 110.959, 8.68368, 0.55 ) }
    dend_28 { pt3dadd( -8.87149, 112.811, 8.7493, 0.55 ) }
    dend_28 { pt3dadd( -8.92486, 113.581, 8.65833, 0.55 ) }
    dend_28 { pt3dadd( -10.3901, 123.215, 10.8995, 0.55 ) }
    dend_28 { pt3dadd( -11.169, 133.105, 12.1629, 0.55 ) }
    dend_28 { pt3dadd( -13.4474, 142.816, 11.4611, 0.55 ) }
    dend_28 { pt3dadd( -14.7282, 152.471, 9.19429, 0.55 ) }
    dend_28 { pt3dadd( -15.2096, 162.014, 6.24172, 0.55 ) }
    dend_28 { pt3dadd( -14.8173, 171.406, 2.83093, 0.55 ) }
    dend_28 { pt3dadd( -16.2252, 180.296, -1.52621, 0.55 ) }
    dend_28 { pt3dadd( -16.8868, 188.885, -6.60571, 0.55 ) }
    dend_28 { pt3dadd( -19.6501, 196.484, -12.4893, 0.55 ) }
    dend_28 { pt3dadd( -21.5317, 203.439, -19.4242, 0.55 ) }
    dend_28 { pt3dadd( -23.1358, 210.678, -26.1324, 0.55 ) }
    dend_28 { pt3dadd( -25.23, 218.417, -32.1109, 0.55 ) }
    dend_28 { pt3dadd( -26.9329, 226.482, -37.7721, 0.55 ) }
    dend_28 { pt3dadd( -29.162, 234.064, -43.8996, 0.55 ) }
    dend_28 { pt3dadd( -32.1797, 241.43, -49.9528, 0.55 ) }
    dend_28 { pt3dadd( -35.6322, 248.747, -55.8297, 0.55 ) }
    dend_28 { pt3dadd( -37.9297, 256.707, -61.4284, 0.55 ) }
    dend_28 { pt3dadd( -42.4171, 264.202, -66.2965, 0.55 ) }
    dend_28 { pt3dadd( -45.7294, 271.333, -72.4744, 0.55 ) }
    dend_28 { pt3dadd( -49.1407, 277.999, -79.1035, 0.55 ) }
    dend_28 { pt3dadd( -51.8818, 283.947, -86.6599, 0.55 ) }
    dend_28 { pt3dadd( -54.9406, 288.898, -94.792, 0.55 ) }
    dend_28 { pt3dadd( -58.1316, 292.796, -103.431, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 32/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 10.4132, 46.7212, -13.1696, 0.83 ) }
    dend_25 { pt3dadd( 12.5839, 50.2387, -13.4865, 0.83 ) }
    dend_25 { pt3dadd( 14.0824, 52.5362, -13.6474, 0.55 ) }
    dend_25 { pt3dadd( 15.079, 53.8908, -13.7246, 0.55 ) }
    dend_25 { pt3dadd( 16.0157, 55.1403, -13.7815, 0.55 ) }
    dend_25 { pt3dadd( 17.3215, 56.8679, -13.8426, 0.55 ) }
    dend_25 { pt3dadd( 19.2935, 59.4413, -13.8703, 0.83 ) }
    dend_25 { pt3dadd( 20.5491, 61.0039, -13.815, 0.83 ) }
    dend_25 { pt3dadd( 22.3243, 63.0659, -13.7322, 0.83 ) }
    dend_25 { pt3dadd( 24.0724, 65.0327, -13.6101, 0.83 ) }
    dend_25 { pt3dadd( 26.6133, 67.8082, -13.5095, 0.55 ) }
    dend_25 { pt3dadd( 28.9305, 70.3326, -13.5291, 0.83 ) }
    dend_25 { pt3dadd( 31.208, 72.7592, -13.6238, 0.83 ) }
    dend_25 { pt3dadd( 32.2113, 73.8702, -13.6927, 0.83 ) }
    dend_25 { pt3dadd( 34.7948, 76.7343, -13.9158, 0.83 ) }
    dend_25 { pt3dadd( 37.6757, 79.9136, -14.2129, 0.83 ) }
    dend_25 { pt3dadd( 39.9062, 82.3717, -14.4884, 0.55 ) }
    dend_25 { pt3dadd( 42.1162, 84.8652, -14.796, 0.55 ) }
    dend_25 { pt3dadd( 44.0194, 87.1585, -15.0107, 0.83 ) }
    dend_25 { pt3dadd( 45.4999, 89.1577, -15.2087, 0.55 ) }
    dend_25 { pt3dadd( 46.5652, 90.7889, -15.4245, 0.55 ) }
    dend_25 { pt3dadd( 47.748, 92.9465, -15.7258, 0.83 ) }
    dend_25 { pt3dadd( 49.1356, 95.9711, -16.3278, 0.83 ) }
    dend_25 { pt3dadd( 49.9476, 98.2344, -16.9437, 0.83 ) }
    dend_25 { pt3dadd( 50.8762, 101.641, -18.1346, 0.55 ) }
    dend_25 { pt3dadd( 51.3713, 104.035, -19.2379, 0.83 ) }
    dend_25 { pt3dadd( 51.5994, 105.349, -20.0949, 0.83 ) }
    dend_25 { pt3dadd( 51.8145, 106.876, -21.303, 0.83 ) }
    dend_25 { pt3dadd( 52.0141, 108.159, -22.4883, 0.83 ) }
    dend_25 { pt3dadd( 52.3505, 109.602, -24.0914, 0.55 ) }
    dend_25 { pt3dadd( 53.008, 111.737, -26.5647, 0.83 ) }
    dend_25 { pt3dadd( 54.3442, 115.406, -30.889, 0.28 ) }
    dend_25 { pt3dadd( 54.8944, 116.82, -32.5255, 0.83 ) }
    dend_25 { pt3dadd( 55.692, 118.817, -34.7602, 0.83 ) }
    dend_25 { pt3dadd( 57.3858, 123.037, -39.2908, 0.55 ) }
    dend_25 { pt3dadd( 58.0061, 124.602, -40.7647, 0.83 ) }
    dend_25 { pt3dadd( 59.2942, 128.182, -43.3518, 0.28 ) }
    dend_25 { pt3dadd( 59.923, 130.06, -44.3576, 0.28 ) }
    dend_25 { pt3dadd( 60.2784, 131.294, -44.8608, 0.55 ) }
    dend_25 { pt3dadd( 60.5073, 132.488, -45.1842, 0.28 ) }
    dend_25 { pt3dadd( 60.7591, 135.23, -45.5802, 0.83 ) }
    dend_25 { pt3dadd( 60.8324, 138.995, -46.2379, 0.28 ) }
    dend_25 { pt3dadd( 60.7914, 140.868, -46.5711, 0.28 ) }
    dend_25 { pt3dadd( 60.7677, 142.245, -46.942, 0.83 ) }
    dend_25 { pt3dadd( 60.7686, 145.894, -48.1941, 0.28 ) }
    dend_25 { pt3dadd( 60.7925, 147.947, -49.0579, 0.83 ) }
    dend_25 { pt3dadd( 60.9261, 151.411, -50.8302, 0.55 ) }
    dend_25 { pt3dadd( 61.02, 152.465, -51.488, 0.28 ) }
    dend_25 { pt3dadd( 61.4525, 154.965, -53.1225, 0.55 ) }
    dend_25 { pt3dadd( 61.9401, 156.661, -54.3147, 0.55 ) }
    dend_25 { pt3dadd( 62.4468, 157.71, -55.0973, 0.28 ) }
    dend_25 { pt3dadd( 63.0407, 158.529, -55.6921, 0.55 ) }
    dend_25 { pt3dadd( 64.8975, 160.493, -56.8857, 0.55 ) }
    dend_25 { pt3dadd( 65.9976, 161.501, -57.3743, 0.28 ) }
    dend_25 { pt3dadd( 67.1525, 162.478, -57.7005, 0.55 ) }
    dend_25 { pt3dadd( 68.6432, 163.734, -57.9012, 0.55 ) }
    dend_25 { pt3dadd( 71.8061, 166.538, -57.9053, 0.28 ) }
    dend_25 { pt3dadd( 73.0941, 167.757, -57.7564, 0.83 ) }
    dend_25 { pt3dadd( 75.4518, 170.169, -57.2615, 0.55 ) }
    dend_25 { pt3dadd( 76.8738, 171.758, -56.8872, 0.55 ) }
    dend_25 { pt3dadd( 79.4785, 175.057, -56.0554, 0.28 ) }
    dend_25 { pt3dadd( 81.4061, 177.878, -55.3348, 0.83 ) }
    dend_25 { pt3dadd( 83.0083, 180.822, -54.3695, 0.55 ) }
    dend_25 { pt3dadd( 84.2072, 183.482, -53.3242, 0.55 ) }
    dend_25 { pt3dadd( 84.8442, 185.286, -52.5877, 1.11 ) }
    dend_25 { pt3dadd( 85.4106, 187.344, -51.7905, 1.11 ) }
    dend_25 { pt3dadd( 85.66, 188.633, -51.3431, 1.11 ) }
    dend_25 { pt3dadd( 86.32, 195.107, -49.248, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_25 { pt3dadd( 86.3586, 196.626, -48.8031, 0.28 ) }
    dend_25 { pt3dadd( 86.3328, 199.07, -48.1718, 0.55 ) }
    dend_25 { pt3dadd( 86.214, 201.298, -47.7779, 0.28 ) }
    dend_25 { pt3dadd( 86.1516, 202.122, -47.6979, 0.83 ) }
    dend_25 { pt3dadd( 85.9802, 203.9, -47.7343, 0.28 ) }
    dend_25 { pt3dadd( 85.843, 205.26, -47.9259, 0.55 ) }
    dend_25 { pt3dadd( 85.6865, 206.691, -47.9893, 0.28 ) }
    dend_25 { pt3dadd( 85.1546, 210.878, -47.8145, 0.28 ) }
    dend_25 { pt3dadd( 84.8853, 212.814, -47.6614, 0.55 ) }
    dend_25 { pt3dadd( 84.4742, 215.514, -47.3875, 0.28 ) }
    dend_25 { pt3dadd( 84.2224, 217.167, -47.1856, 0.83 ) }
    dend_25 { pt3dadd( 83.3223, 222.799, -46.3852, 0.28 ) }
    dend_25 { pt3dadd( 83.0599, 224.374, -46.1122, 0.83 ) }
    dend_25 { pt3dadd( 82.7683, 226.236, -45.7008, 0.28 ) }
    dend_25 { pt3dadd( 82.5473, 227.359, -45.3936, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 15/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -4.66745, 19.9076, 8.01552, 1.11 ) }
    dend_9 { pt3dadd( -3.45807, 22.72, 9.05718, 1.11 ) }
    dend_9 { pt3dadd( -2.49547, 24.9586, 9.88629, 0.83 ) }
    dend_9 { pt3dadd( -1.37388, 27.5668, 10.8523, 0.83 ) }
    dend_9 { pt3dadd( 0.669604, 32.319, 12.6124, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 20/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -4.66745, 19.9076, 8.01552, 0.83 ) }
    dend_2 { pt3dadd( -7.8304, 25.6695, 7.34382, 0.83 ) }
    dend_2 { pt3dadd( -10.0435, 29.7011, 6.87383, 1.11 ) }
    dend_2 { pt3dadd( -11.8911, 33.0669, 6.48145, 1.11 ) }
    dend_2 { pt3dadd( -12.5529, 34.2724, 6.34092, 1.11 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 25/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 1.92142, -25.1532, -8.77047, 0.83 ) }
    dend_36 { pt3dadd( 1.17896, -24.024, -10.379, 0.83 ) }
    dend_36 { pt3dadd( 0.0134843, -22.3658, -12.6753, 0.83 ) }
    dend_36 { pt3dadd( -3.33071, -18.1696, -18.9778, 1.11 ) }
    dend_36 { pt3dadd( -5.30835, -15.6881, -22.7048, 1.11 ) }
    dend_36 { pt3dadd( -7.8317, -12.5218, -27.4603, 1.11 ) }
    dend_36 { pt3dadd( -9.08059, -10.9547, -29.8139, 0.55 ) }
    dend_36 { pt3dadd( -9.81118, -10.0677, -31.2434, 0.55 ) }
    dend_36 { pt3dadd( -11.8535, -8.02154, -34.9232, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 34/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 1.92142, -25.1532, -8.77047, 1.11 ) }
    dend_33 { pt3dadd( 0.786136, -28.7102, -11.0783, 1.11 ) }
    dend_33 { pt3dadd( 0.0562065, -30.9971, -12.5621, 1.11 ) }
    dend_33 { pt3dadd( -0.917978, -34.0493, -14.5424, 1.11 ) }
    dend_33 { pt3dadd( -2.28918, -38.3454, -17.3298, 1.11 ) }
    dend_33 { pt3dadd( -3.97835, -43.6377, -20.7636, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 82.5473, 227.359, -45.3936, 0.28 ) }
    dend_27 { pt3dadd( 80.9074, 227.096, -45.3936, 0.28 ) }
    dend_27 { pt3dadd( 79.4313, 226.861, -45.3936, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 43/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 82.5473, 227.359, -45.3936, 0.55 ) }
    dend_26 { pt3dadd( 81.6413, 229.714, -44.0338, 0.55 ) }
    dend_26 { pt3dadd( 80.7843, 232.018, -42.7797, 0.55 ) }
    dend_26 { pt3dadd( 79.8808, 234.363, -41.6125, 0.28 ) }
    dend_26 { pt3dadd( 79.5609, 235.217, -41.1546, 0.55 ) }
    dend_26 { pt3dadd( 78.7099, 237.816, -39.7876, 0.28 ) }
    dend_26 { pt3dadd( 78.5095, 238.546, -39.4222, 0.55 ) }
    dend_26 { pt3dadd( 78.2366, 239.874, -38.8164, 0.28 ) }
    dend_26 { pt3dadd( 78.0756, 241.141, -38.2745, 0.55 ) }
    dend_26 { pt3dadd( 77.9216, 243.353, -37.5016, 0.28 ) }
    dend_26 { pt3dadd( 77.9353, 245.094, -37.3495, 0.28 ) }
    dend_26 { pt3dadd( 78.071, 246.275, -37.7261, 0.55 ) }
    dend_26 { pt3dadd( 78.4215, 247.98, -38.7501, 0.28 ) }
    dend_26 { pt3dadd( 78.4215, 247.98, -38.7501, 0.55 ) }
    dend_26 { pt3dadd( 78.9942, 249.853, -40.0697, 0.28 ) }
    dend_26 { pt3dadd( 80.7166, 255.909, -44.2173, 0.28 ) }
    dend_26 { pt3dadd( 81.1651, 257.517, -45.2452, 0.55 ) }
    dend_26 { pt3dadd( 81.8915, 260.211, -46.784, 0.28 ) }
    dend_26 { pt3dadd( 82.1971, 261.492, -47.3433, 0.55 ) }
    dend_26 { pt3dadd( 82.9152, 265.329, -48.4692, 0.28 ) }
    dend_26 { pt3dadd( 83.0868, 266.798, -48.691, 0.55 ) }
    dend_26 { pt3dadd( 83.1718, 267.97, -48.7274, 0.28 ) }
    dend_26 { pt3dadd( 83.2352, 269.358, -48.7551, 0.55 ) }
    dend_26 { pt3dadd( 83.2607, 273.254, -48.7557, 0.28 ) }
    dend_26 { pt3dadd( 83.2253, 274.913, -48.8173, 0.55 ) }
    dend_26 { pt3dadd( 83.0849, 278.659, -49.1763, 0.28 ) }
    dend_26 { pt3dadd( 83.0043, 280.565, -49.3865, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_9 (entry count 70/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 0.669604, 32.319, 12.6124, 0.83 ) }
    dend_21 { pt3dadd( 1.87318, 34.4679, 13.201, 0.83 ) }
    dend_21 { pt3dadd( 3.2181, 37.2861, 13.8962, 0.83 ) }
    dend_21 { pt3dadd( 4.16279, 39.54, 14.6585, 0.55 ) }
    dend_21 { pt3dadd( 5.39174, 42.6262, 16.0918, 0.83 ) }
    dend_21 { pt3dadd( 6.34428, 44.8248, 17.1852, 0.83 ) }
    dend_21 { pt3dadd( 7.07445, 46.4797, 18.0175, 0.83 ) }
    dend_21 { pt3dadd( 8.50697, 49.8524, 19.7704, 0.83 ) }
    dend_21 { pt3dadd( 10.2214, 54.1247, 21.9717, 0.83 ) }
    dend_21 { pt3dadd( 11.6414, 58.075, 23.9468, 0.83 ) }
    dend_21 { pt3dadd( 12.717, 61.0787, 25.5345, 0.55 ) }
    dend_21 { pt3dadd( 13.7136, 63.7173, 26.9714, 0.83 ) }
    dend_21 { pt3dadd( 14.4566, 65.6106, 28.0226, 0.83 ) }
    dend_21 { pt3dadd( 15.3438, 67.8156, 29.1297, 0.83 ) }
    dend_21 { pt3dadd( 16.6, 71.1846, 30.1352, 0.83 ) }
    dend_21 { pt3dadd( 21.1095, 79.7667, 32.5869, 0.83 ) }
    dend_21 { pt3dadd( 25.5106, 88.1559, 35.7888, 0.83 ) }
    dend_21 { pt3dadd( 28.9853, 97.004, 38.8934, 0.83 ) }
    dend_21 { pt3dadd( 32.7497, 105.393, 42.8252, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 0.669604, 32.319, 12.6124, 0.83 ) }
    dend_10 { pt3dadd( -0.196705, 35.6249, 17.4725, 0.83 ) }
    dend_10 { pt3dadd( -0.559466, 37.1687, 19.5388, 0.83 ) }
    dend_10 { pt3dadd( -1.23039, 40.0241, 23.3604, 0.83 ) }
    dend_10 { pt3dadd( -1.56281, 41.4388, 25.2539, 0.83 ) }
    dend_10 { pt3dadd( -2.40998, 45.0442, 30.0794, 1.11 ) }
    dend_10 { pt3dadd( -2.99407, 47.53, 33.4064, 0.83 ) }
    dend_10 { pt3dadd( -3.40365, 49.2702, 35.6792, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 97/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -12.5529, 34.2724, 6.34092, 0.55 ) }
    dend_6 { pt3dadd( -13.0889, 35.6544, 7.67906, 0.55 ) }
    dend_6 { pt3dadd( -13.6263, 37.1604, 9.12358, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_6 { pt3dadd( -13.9793, 38.4124, 10.3354, 0.55 ) }
    dend_6 { pt3dadd( -14.5366, 40.5384, 12.8971, 0.83 ) }
    dend_6 { pt3dadd( -15.2789, 42.9216, 15.9312, 0.83 ) }
    dend_6 { pt3dadd( -15.5209, 43.5217, 16.8755, 0.55 ) }
    dend_6 { pt3dadd( -16.1518, 44.8191, 19.2596, 0.83 ) }
    dend_6 { pt3dadd( -17.3204, 46.8135, 23.0386, 0.83 ) }
    dend_6 { pt3dadd( -19.6036, 50.0018, 29.2787, 0.83 ) }
    dend_6 { pt3dadd( -20.4576, 50.9688, 31.2669, 0.83 ) }
    dend_6 { pt3dadd( -24.1556, 54.3268, 38.4008, 0.83 ) }
    dend_6 { pt3dadd( -25.3992, 55.2811, 40.4571, 0.83 ) }
    dend_6 { pt3dadd( -27.5747, 56.7174, 43.4839, 0.83 ) }
    dend_6 { pt3dadd( -28.9457, 57.4788, 44.9456, 0.83 ) }
    dend_6 { pt3dadd( -30.3598, 58.2936, 46.0187, 0.83 ) }
    dend_6 { pt3dadd( -31.9099, 59.2402, 47.0546, 0.55 ) }
    dend_6 { pt3dadd( -33.2704, 60.1614, 47.7156, 0.55 ) }
    dend_6 { pt3dadd( -35.0085, 61.3897, 48.757, 0.83 ) }
    dend_6 { pt3dadd( -36.4197, 62.3765, 49.6904, 0.55 ) }
    dend_6 { pt3dadd( -38.6627, 64.0885, 51.2634, 0.83 ) }
    dend_6 { pt3dadd( -41.2535, 66.3277, 53.2065, 0.55 ) }
    dend_6 { pt3dadd( -42.294, 67.2978, 54.0619, 0.55 ) }
    dend_6 { pt3dadd( -44.7535, 69.5457, 56.2734, 1.11 ) }
    dend_6 { pt3dadd( -50.1903, 74.4358, 63.0946, 1.11 ) }
    dend_6 { pt3dadd( -54.5887, 79.0658, 70.7898, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 23/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -12.5529, 34.2724, 6.34092, 0.55 ) }
    dend_3 { pt3dadd( -12.6491, 37.9268, 5.42051, 0.55 ) }
    dend_3 { pt3dadd( -12.6555, 38.5284, 5.28272, 0.83 ) }
    dend_3 { pt3dadd( -12.6311, 39.9221, 5.08349, 0.28 ) }
    dend_3 { pt3dadd( -12.6015, 41.3473, 4.95745, 1.11 ) }
    dend_3 { pt3dadd( -12.5252, 44.1075, 4.73785, 1.11 ) }
    dend_3 { pt3dadd( -12.4572, 46.8574, 4.53747, 0.83 ) }
    dend_3 { pt3dadd( -12.3658, 48.8447, 4.45556, 1.11 ) }
    dend_3 { pt3dadd( -12.1776, 51.7784, 4.30903, 0.55 ) }
    dend_3 { pt3dadd( -11.9572, 54.8295, 4.15675, 0.83 ) }
    dend_3 { pt3dadd( -11.7304, 58.0226, 3.96653, 0.28 ) }
    dend_3 { pt3dadd( -11.6398, 59.6998, 3.85462, 1.11 ) }
    dend_3 { pt3dadd( -11.4879, 63.8099, 3.58923, 1.11 ) }
    dend_3 { pt3dadd( -11.449, 65.7405, 3.42526, 0.28 ) }
    dend_3 { pt3dadd( -11.4183, 68.2247, 3.17945, 0.83 ) }
    dend_3 { pt3dadd( -11.4072, 72.2067, 2.83373, 0.55 ) }
    dend_3 { pt3dadd( -11.4563, 75.3585, 2.59808, 0.55 ) }
    dend_3 { pt3dadd( -11.5279, 77.5692, 2.44376, 0.55 ) }
    dend_3 { pt3dadd( -11.584, 78.6734, 2.34451, 1.11 ) }
    dend_3 { pt3dadd( -11.7295, 82.0152, 1.97557, 1.11 ) }
    dend_3 { pt3dadd( -11.8682, 85.3608, 1.51607, 0.83 ) }
    dend_3 { pt3dadd( -11.9859, 88.1529, 1.05549, 0.83 ) }
    dend_3 { pt3dadd( -12.0532, 90.0788, 0.693618, 0.28 ) }
    dend_3 { pt3dadd( -12.1802, 93.2619, 0.0216901, 0.83 ) }
    dend_3 { pt3dadd( -12.3221, 96.3475, -0.697923, 0.83 ) }
    dend_3 { pt3dadd( -12.5067, 99.5613, -1.57083, 0.83 ) }
    dend_3 { pt3dadd( -12.5826, 101.406, -2.13588, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 50/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -11.8535, -8.02154, -34.9232, 0.55 ) }
    dend_38 { pt3dadd( -12.153, -7.06539, -37.0711, 0.55 ) }
    dend_38 { pt3dadd( -12.2396, -6.71602, -37.7767, 1.11 ) }
    dend_38 { pt3dadd( -13.0689, -3.37397, -44.5262, 0.83 ) }
    dend_38 { pt3dadd( -13.8097, -0.388675, -50.5551, 0.55 ) }
    dend_38 { pt3dadd( -13.9748, 0.27666, -51.8988, 0.55 ) }
    dend_38 { pt3dadd( -14.5258, 2.49727, -56.3835, 0.83 ) }
    dend_38 { pt3dadd( -14.6773, 3.53776, -58.507, 1.11 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 58/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -11.8535, -8.02154, -34.9232, 0.55 ) }
    dend_37 { pt3dadd( -13.3342, -9.8104, -38.2549, 0.55 ) }
    dend_37 { pt3dadd( -13.9843, -10.2807, -39.3899, 0.55 ) }
    dend_37 { pt3dadd( -14.8587, -10.6164, -40.9922, 1.11 ) }
    dend_37 { pt3dadd( -15.8076, -10.8638, -42.6186, 0.55 ) }
    dend_37 { pt3dadd( -18.6289, -11.4405, -48.1811, 0.55 ) }
    dend_37 { pt3dadd( -20.5687, -11.7195, -52.0303, 0.55 ) }
    dend_37 { pt3dadd( -22.1538, -11.732, -55.3823, 0.83 ) }
    dend_37 { pt3dadd( -25.7564, -11.4417, -63.2036, 0.28 ) }
    dend_37 { pt3dadd( -26.6156, -11.3053, -65.2448, 0.83 ) }
    dend_37 { pt3dadd( -30.451, -10.5402, -74.9711, 0.55 ) }
    dend_37 { pt3dadd( -31.0176, -10.4179, -76.4251, 0.83 ) }
    dend_37 { pt3dadd( -33.2693, -9.9119, -82.386, 0.28 ) }
    dend_37 { pt3dadd( -33.6282, -9.8257, -83.3167, 0.55 ) }
    dend_37 { pt3dadd( -36.6731, -8.87153, -90.917, 0.28 ) }
    dend_37 { pt3dadd( -37.0653, -8.6982, -91.9408, 0.28 ) }
    dend_37 { pt3dadd( -37.7196, -8.34523, -93.5112, 0.55 ) }
    dend_37 { pt3dadd( -38.2438, -8.0112, -94.9198, 0.83 ) }
    dend_37 { pt3dadd( -41.0169, -5.92318, -102.335, 0.28 ) }
    dend_37 { pt3dadd( -41.3644, -5.60535, -103.378, 0.83 ) }
    dend_37 { pt3dadd( -43.4455, -3.31202, -110.219, 0.28 ) }
    dend_37 { pt3dadd( -43.8316, -2.82115, -111.665, 0.83 ) }
    dend_37 { pt3dadd( -46.0959, 0.481763, -121.026, 0.28 ) }
    dend_37 { pt3dadd( -46.5477, 1.16426, -123.032, 0.83 ) }
    dend_37 { pt3dadd( -48.284, 3.66521, -130.961, 0.28 ) }
    dend_37 { pt3dadd( -48.6617, 4.17032, -132.699, 0.55 ) }
    dend_37 { pt3dadd( -49.1484, 4.74939, -134.906, 0.28 ) }
    dend_37 { pt3dadd( -49.3388, 4.98334, -135.855, 0.83 ) }
    dend_37 { pt3dadd( -50.3788, 5.9785, -140.486, 0.28 ) }
    dend_37 { pt3dadd( -50.6478, 6.16451, -141.868, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 88/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -3.97835, -43.6377, -20.7636, 0.55 ) }
    dend_35 { pt3dadd( -5.64044, -42.785, -22.9709, 0.55 ) }
    dend_35 { pt3dadd( -5.97763, -42.6553, -23.4822, 0.55 ) }
    dend_35 { pt3dadd( -9.39032, -41.5859, -28.5623, 0.83 ) }
    dend_35 { pt3dadd( -10.7256, -41.2895, -30.6852, 0.28 ) }
    dend_35 { pt3dadd( -11.5216, -41.164, -31.927, 0.55 ) }
    dend_35 { pt3dadd( -13.8565, -40.9431, -35.7605, 1.11 ) }
    dend_35 { pt3dadd( -17.4226, -40.7611, -41.9698, 0.55 ) }
    dend_35 { pt3dadd( -18.097, -40.7613, -43.217, 1.11 ) }
    dend_35 { pt3dadd( -20.2075, -40.9628, -47.0923, 0.55 ) }
    dend_35 { pt3dadd( -21.1507, -41.0856, -48.8061, 0.55 ) }
    dend_35 { pt3dadd( -24.064, -41.5622, -53.8597, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_35 { pt3dadd( -24.646, -41.69, -54.7962, 0.55 ) }
    dend_35 { pt3dadd( -28.4638, -42.2196, -59.686, 0.28 ) }
    dend_35 { pt3dadd( -29.8003, -42.3432, -61.054, 1.11 ) }
    dend_35 { pt3dadd( -31.8505, -42.5079, -62.2644, 0.55 ) }
    dend_35 { pt3dadd( -35.7072, -43.0275, -64.0925, 1.11 ) }
    dend_35 { pt3dadd( -37.766, -43.3191, -64.7952, 0.55 ) }
    dend_35 { pt3dadd( -39.892, -43.6852, -65.9952, 0.55 ) }
    dend_35 { pt3dadd( -42.3274, -44.1367, -67.5456, 0.55 ) }
    dend_35 { pt3dadd( -43.8336, -44.3183, -68.7758, 1.11 ) }
    dend_35 { pt3dadd( -47.544, -44.5254, -72.1938, 0.55 ) }
    dend_35 { pt3dadd( -49.4939, -44.3232, -74.1233, 0.83 ) }
    dend_35 { pt3dadd( -53.9776, -43.2412, -78.5832, 0.28 ) }
    dend_35 { pt3dadd( -55.5159, -42.7306, -80.1003, 0.55 ) }
    dend_35 { pt3dadd( -58.9962, -41.2303, -83.2928, 0.28 ) }
    dend_35 { pt3dadd( -60.0875, -40.6768, -84.1418, 0.83 ) }
    dend_35 { pt3dadd( -65.0598, -37.8233, -87.0336, 0.28 ) }
    dend_35 { pt3dadd( -66.542, -36.9541, -87.469, 0.83 ) }
    dend_35 { pt3dadd( -68.6385, -35.8878, -86.9879, 0.28 ) }
    dend_35 { pt3dadd( -69.8572, -35.5989, -85.8813, 0.55 ) }
    dend_35 { pt3dadd( -72.7789, -35.3518, -82.1648, 0.28 ) }
    dend_35 { pt3dadd( -72.9335, -35.3504, -81.9314, 0.83 ) }
    dend_35 { pt3dadd( -77.3157, -35.4732, -74.3528, 0.28 ) }
    dend_35 { pt3dadd( -77.7932, -35.4477, -73.4685, 0.83 ) }
    dend_35 { pt3dadd( -79.9426, -35.0342, -69.2757, 0.28 ) }
    dend_35 { pt3dadd( -80.4568, -34.8136, -68.2438, 0.83 ) }
    dend_35 { pt3dadd( -82.7193, -33.2084, -63.7843, 0.28 ) }
    dend_35 { pt3dadd( -83.3497, -32.5925, -62.6862, 0.83 ) }
    dend_35 { pt3dadd( -84.6587, -30.9031, -60.8285, 0.28 ) }
    dend_35 { pt3dadd( -85.4434, -29.788, -59.7336, 0.83 ) }
    dend_35 { pt3dadd( -87.5249, -26.6503, -57.0514, 0.28 ) }
    dend_35 { pt3dadd( -87.9328, -26.0464, -56.5712, 0.83 ) }
    dend_35 { pt3dadd( -89.8225, -23.3639, -54.6959, 0.28 ) }
    dend_35 { pt3dadd( -90.8058, -22.1974, -53.8757, 0.55 ) }
    dend_35 { pt3dadd( -93.647, -19.2694, -51.8734, 0.28 ) }
    dend_35 { pt3dadd( -94.2961, -18.6411, -51.4547, 0.55 ) }
    dend_35 { pt3dadd( -95.8618, -17.202, -50.6397, 0.28 ) }
    dend_35 { pt3dadd( -96.4568, -16.6506, -50.3093, 0.55 ) }
    dend_35 { pt3dadd( -100.086, -13.3889, -48.1439, 0.28 ) }
    dend_35 { pt3dadd( -100.373, -13.1321, -48.0148, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -3.97835, -43.6377, -20.7636, 0.83 ) }
    dend_34 { pt3dadd( -4.01492, -48.0587, -21.3069, 0.83 ) }
    dend_34 { pt3dadd( -4.13447, -51.6712, -21.7521, 0.55 ) }
    dend_34 { pt3dadd( -4.21842, -53.0496, -21.9101, 0.55 ) }
    dend_34 { pt3dadd( -4.42563, -55.2452, -22.2248, 1.11 ) }
    dend_34 { pt3dadd( -4.63388, -56.997, -22.441, 0.55 ) }
    dend_34 { pt3dadd( -4.88726, -58.9199, -22.6445, 1.11 ) }
    dend_34 { pt3dadd( -5.3261, -61.5305, -22.9854, 0.55 ) }
    dend_34 { pt3dadd( -5.66332, -63.2454, -23.1345, 1.11 ) }
    dend_34 { pt3dadd( -6.35655, -66.4468, -23.392, 1.11 ) }
    dend_34 { pt3dadd( -6.98953, -69.2064, -23.549, 0.55 ) }
    dend_34 { pt3dadd( -7.61418, -71.9186, -23.6197, 1.11 ) }
    dend_34 { pt3dadd( -8.15825, -74.4456, -23.6839, 0.83 ) }
    dend_34 { pt3dadd( -8.68645, -77.2662, -23.7873, 0.28 ) }
    dend_34 { pt3dadd( -9.22752, -80.5439, -24.0426, 1.11 ) }
    dend_34 { pt3dadd( -9.60736, -83.1478, -24.3483, 0.83 ) }
    dend_34 { pt3dadd( -9.98972, -86.2091, -24.8783, 0.83 ) }
    dend_34 { pt3dadd( -10.2861, -89.0876, -25.4598, 0.83 ) }
    dend_34 { pt3dadd( -10.4837, -91.7637, -26.0963, 0.83 ) }
    dend_34 { pt3dadd( -10.6272, -94.5604, -26.9148, 0.28 ) }
    dend_34 { pt3dadd( -10.6887, -96.5239, -27.5881, 0.83 ) }
    dend_34 { pt3dadd( -10.6924, -98.1083, -28.181, 0.28 ) }
    dend_34 { pt3dadd( -10.6754, -99.6675, -28.7507, 1.11 ) }
    dend_34 { pt3dadd( -10.6483, -101.86, -29.3951, 0.28 ) }
    dend_34 { pt3dadd( -10.6359, -103.773, -29.8245, 1.11 ) }
    dend_34 { pt3dadd( -10.6337, -106.139, -30.4311, 0.28 ) }
    dend_34 { pt3dadd( -10.6293, -107.324, -30.794, 1.11 ) }
    dend_34 { pt3dadd( -10.6296, -108.855, -31.2911, 1.11 ) }
    dend_34 { pt3dadd( -10.6152, -112.002, -32.4093, 0.55 ) }
    dend_34 { pt3dadd( -10.5593, -114.607, -33.3535, 1.11 ) }
    dend_34 { pt3dadd( -10.2818, -119.248, -35.1993, 0.83 ) }
    dend_34 { pt3dadd( -10.0472, -121.158, -35.9986, 0.28 ) }
    dend_34 { pt3dadd( -9.78071, -122.493, -36.5287, 0.55 ) }
    dend_34 { pt3dadd( -9.13228, -124.888, -37.3505, 0.28 ) }
    dend_34 { pt3dadd( -8.65592, -126.387, -37.7358, 0.83 ) }
    dend_34 { pt3dadd( -7.76444, -129.059, -38.1505, 0.55 ) }
    dend_34 { pt3dadd( -6.87609, -131.643, -38.1511, 1.38 ) }
    dend_34 { pt3dadd( -5.16394, -136.831, -37.3905, 0.28 ) }
    dend_34 { pt3dadd( -4.57112, -138.785, -36.8664, 0.83 ) }
    dend_34 { pt3dadd( -4.06539, -140.662, -36.0514, 0.28 ) }
    dend_34 { pt3dadd( -3.679, -142.32, -35.0777, 0.83 ) }
    dend_34 { pt3dadd( -3.18984, -144.742, -33.2877, 0.83 ) }
    dend_34 { pt3dadd( -2.52554, -148.257, -30.2932, 0.28 ) }
    dend_34 { pt3dadd( -2.29396, -149.523, -29.1221, 0.55 ) }
    dend_34 { pt3dadd( -1.94115, -151.383, -27.4711, 0.28 ) }
    dend_34 { pt3dadd( -1.47111, -153.794, -25.4091, 0.83 ) }
    dend_34 { pt3dadd( -1.05544, -155.846, -23.7552, 0.28 ) }
    dend_34 { pt3dadd( -0.863136, -156.904, -23.0389, 0.55 ) }
    dend_34 { pt3dadd( -0.519375, -159.048, -21.9019, 0.28 ) }
    dend_34 { pt3dadd( -0.406463, -159.805, -21.58, 0.83 ) }
    dend_34 { pt3dadd( -0.206876, -161.372, -21.1989, 0.28 ) }
    dend_34 { pt3dadd( -0.0597526, -162.598, -21.0879, 0.83 ) }
    dend_34 { pt3dadd( 0.107854, -163.729, -21.0953, 0.83 ) }
    dend_34 { pt3dadd( 0.54247, -166.191, -21.2529, 0.83 ) }
    dend_34 { pt3dadd( 1.19078, -169.626, -21.6602, 0.28 ) }
    dend_34 { pt3dadd( 1.71244, -172.514, -22.2323, 0.28 ) }
    dend_34 { pt3dadd( 2.09786, -174.549, -22.6489, 0.83 ) }
    dend_34 { pt3dadd( 2.44641, -176.243, -23.0264, 0.55 ) }
    dend_34 { pt3dadd( 2.74547, -177.6, -23.312, 1.11 ) }
    dend_34 { pt3dadd( 3.8755, -182.41, -24.1875, 0.55 ) }
    dend_34 { pt3dadd( 4.8096, -186.27, -24.9241, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_34 { pt3dadd( 5.60734, -189.369, -25.413, 0.28 ) }
    dend_34 { pt3dadd( 6.08864, -190.979, -25.7337, 0.55 ) }
    dend_34 { pt3dadd( 6.83416, -192.913, -26.1604, 0.28 ) }
    dend_34 { pt3dadd( 7.43201, -194.128, -26.3824, 0.55 ) }
    dend_34 { pt3dadd( 9.11603, -196.893, -26.7562, 0.28 ) }
    dend_34 { pt3dadd( 10.4998, -199.24, -26.8431, 0.83 ) }
    dend_34 { pt3dadd( 12.0716, -202.089, -26.8973, 0.28 ) }
    dend_34 { pt3dadd( 13.7982, -205.389, -26.8492, 0.83 ) }
    dend_34 { pt3dadd( 15.509, -208.667, -26.869, 0.55 ) }
    dend_34 { pt3dadd( 16.3946, -210.456, -26.8714, 0.83 ) }
    dend_34 { pt3dadd( 19.0, -215.999, -26.7195, 0.55 ) }
    dend_34 { pt3dadd( 20.0008, -218.141, -26.7417, 0.83 ) }
    dend_34 { pt3dadd( 21.2765, -220.962, -26.8908, 0.55 ) }
    dend_34 { pt3dadd( 22.3886, -223.445, -27.1866, 0.83 ) }
    dend_34 { pt3dadd( 23.966, -226.732, -27.8094, 0.55 ) }
    dend_34 { pt3dadd( 24.9475, -228.553, -28.2253, 0.55 ) }
    dend_34 { pt3dadd( 26.799, -231.359, -28.8471, 1.11 ) }
    dend_34 { pt3dadd( 28.4005, -233.499, -29.1724, 0.28 ) }
    dend_34 { pt3dadd( 29.169, -234.471, -29.2803, 0.55 ) }
    dend_34 { pt3dadd( 30.5667, -236.143, -29.3365, 0.28 ) }
    dend_34 { pt3dadd( 32.1318, -237.79, -29.3047, 1.11 ) }
    dend_34 { pt3dadd( 35.8039, -241.412, -28.8489, 0.28 ) }
    dend_34 { pt3dadd( 36.8625, -242.419, -28.53, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 32.7497, 105.393, 42.8252, 0.55 ) }
    dend_23 { pt3dadd( 36.5624, 114.273, 45.3922, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 25/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 32.7497, 105.393, 42.8252, 0.55 ) }
    dend_22 { pt3dadd( 36.403, 113.495, 47.4071, 0.55 ) }
    dend_22 { pt3dadd( 40.7271, 121.929, 50.5981, 0.55 ) }
    dend_22 { pt3dadd( 43.1705, 131.066, 53.8451, 0.55 ) }
    dend_22 { pt3dadd( 46.0785, 139.876, 57.5758, 0.55 ) }
    dend_22 { pt3dadd( 47.1192, 149.342, 60.6307, 0.55 ) }
    dend_22 { pt3dadd( 48.1131, 158.756, 63.8544, 0.55 ) }
    dend_22 { pt3dadd( 48.8452, 167.583, 68.4935, 0.55 ) }
    dend_22 { pt3dadd( 50.7591, 176.426, 72.7542, 0.55 ) }
    dend_22 { pt3dadd( 55.373, 184.693, 75.9746, 0.55 ) }
    dend_22 { pt3dadd( 60.9417, 192.637, 78.4, 0.55 ) }
    dend_22 { pt3dadd( 67.1086, 200.273, 80.3104, 0.55 ) }
    dend_22 { pt3dadd( 72.969, 207.717, 83.5113, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -3.40365, 49.2702, 35.6792, 0.83 ) }
    dend_16 { pt3dadd( -2.58014, 47.4557, 35.7241, 0.83 ) }
    dend_16 { pt3dadd( -1.4402, 45.1246, 36.0112, 0.83 ) }
    dend_16 { pt3dadd( -0.707607, 43.5571, 36.2653, 0.83 ) }
    dend_16 { pt3dadd( 0.873513, 40.0845, 36.6396, 0.83 ) }
    dend_16 { pt3dadd( 2.33274, 36.731, 36.8898, 0.83 ) }
    dend_16 { pt3dadd( 4.21006, 32.4166, 37.2116, 0.55 ) }
    dend_16 { pt3dadd( 4.86585, 30.7655, 37.3002, 0.55 ) }
    dend_16 { pt3dadd( 5.40732, 29.3821, 37.4059, 0.55 ) }
    dend_16 { pt3dadd( 6.72722, 26.1911, 37.7813, 0.28 ) }
    dend_16 { pt3dadd( 7.30045, 24.9693, 38.0693, 0.83 ) }
    dend_16 { pt3dadd( 11.4484, 15.8922, 37.4357, 0.83 ) }
    dend_16 { pt3dadd( 16.0386, 7.11757, 38.8268, 0.83 ) }
    dend_16 { pt3dadd( 21.4612, -0.900338, 41.3384, 0.83 ) }
    dend_16 { pt3dadd( 26.3516, -9.07797, 44.3732, 0.83 ) }
    dend_16 { pt3dadd( 32.7837, -15.4645, 48.5971, 0.83 ) }
    dend_16 { pt3dadd( 39.7238, -19.8376, 54.3164, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 55/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -3.40365, 49.2702, 35.6792, 1.11 ) }
    dend_11 { pt3dadd( -4.76681, 51.7404, 37.1804, 1.11 ) }
    dend_11 { pt3dadd( -5.77375, 53.565, 38.2892, 1.11 ) }
    dend_11 { pt3dadd( -7.42162, 56.5511, 40.104, 0.83 ) }
    dend_11 { pt3dadd( -9.17654, 59.7312, 42.0366, 1.11 ) }
    dend_11 { pt3dadd( -11.2873, 63.5561, 44.361, 0.83 ) }
    dend_11 { pt3dadd( -12.1148, 65.0556, 45.2723, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 62/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -54.5887, 79.0658, 70.7898, 0.55 ) }
    dend_8 { pt3dadd( -59.7705, 83.9439, 77.815, 0.55 ) }
    dend_8 { pt3dadd( -66.2294, 86.6401, 84.9574, 0.55 ) }
    dend_8 { pt3dadd( -72.1304, 90.0658, 92.2678, 0.55 ) }
    dend_8 { pt3dadd( -79.7216, 92.5199, 98.297, 0.55 ) }
    dend_8 { pt3dadd( -87.1032, 94.0907, 104.858, 0.55 ) }
    dend_8 { pt3dadd( -93.9439, 96.562, 111.721, 0.55 ) }
    dend_8 { pt3dadd( -101.533, 97.4778, 118.168, 0.55 ) }
    dend_8 { pt3dadd( -109.189, 100.199, 123.997, 0.55 ) }
    dend_8 { pt3dadd( -116.03, 104.311, 130.021, 0.55 ) }
    dend_8 { pt3dadd( -121.358, 107.606, 137.815, 0.55 ) }
    dend_8 { pt3dadd( -125.202, 111.108, 146.357, 0.55 ) }
    dend_8 { pt3dadd( -127.739, 115.623, 154.912, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 75/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -54.5887, 79.0658, 70.7898, 0.55 ) }
    dend_7 { pt3dadd( -58.2402, 84.3858, 78.4295, 0.55 ) }
    dend_7 { pt3dadd( -61.6484, 88.1441, 87.0468, 0.55 ) }
    dend_7 { pt3dadd( -64.5422, 92.4048, 95.6185, 0.55 ) }
    dend_7 { pt3dadd( -67.5029, 96.8317, 104.082, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 80/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -12.5826, 101.406, -2.13588, 0.55 ) }
    dend_5 { pt3dadd( -12.82, 103.977, -2.4789, 0.55 ) }
    dend_5 { pt3dadd( -12.9523, 105.101, -2.65674, 0.28 ) }
    dend_5 { pt3dadd( -13.1087, 106.471, -2.91816, 0.83 ) }
    dend_5 { pt3dadd( -13.3281, 108.389, -3.2984, 0.28 ) }
    dend_5 { pt3dadd( -13.4502, 109.498, -3.50704, 0.83 ) }
    dend_5 { pt3dadd( -13.8567, 113.577, -4.2322, 0.28 ) }
    dend_5 { pt3dadd( -14.0449, 115.22, -4.53724, 0.83 ) }
    dend_5 { pt3dadd( -14.4028, 118.361, -5.16113, 0.28 ) }
    dend_5 { pt3dadd( -14.5919, 120.267, -5.56836, 0.83 ) }
    dend_5 { pt3dadd( -14.7625, 121.908, -5.93586, 0.28 ) }
    dend_5 { pt3dadd( -14.8771, 123.282, -6.22078, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 92/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -12.5826, 101.406, -2.13588, 0.55 ) }
    dend_4 { pt3dadd( -13.485, 103.516, -5.77989, 0.55 ) }
    dend_4 { pt3dadd( -13.9443, 104.775, -7.96035, 0.55 ) }
    dend_4 { pt3dadd( -14.2481, 105.876, -9.85901, 0.83 ) }
    dend_4 { pt3dadd( -14.7348, 108.091, -13.5635, 0.55 ) }
    dend_4 { pt3dadd( -15.064, 110.338, -17.1089, 0.83 ) }
    dend_4 { pt3dadd( -15.2813, 112.483, -20.2465, 0.83 ) }
    dend_4 { pt3dadd( -15.2767, 113.561, -21.6287, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( -14.8662, 116.723, -25.2923, 0.55 ) }
    dend_4 { pt3dadd( -14.7053, 117.586, -26.1027, 0.55 ) }
    dend_4 { pt3dadd( -14.3122, 119.228, -27.461, 0.83 ) }
    dend_4 { pt3dadd( -13.8045, 121.077, -28.8524, 0.55 ) }
    dend_4 { pt3dadd( -13.1443, 123.703, -30.8644, 0.83 ) }
    dend_4 { pt3dadd( -12.7601, 125.677, -32.4136, 0.83 ) }
    dend_4 { pt3dadd( -12.3947, 127.811, -34.2798, 0.83 ) }
    dend_4 { pt3dadd( -11.5513, 133.693, -40.2017, 0.28 ) }
    dend_4 { pt3dadd( -11.5147, 134.177, -40.8091, 0.55 ) }
    dend_4 { pt3dadd( -11.491, 136.557, -44.262, 0.28 ) }
    dend_4 { pt3dadd( -11.5853, 137.465, -45.7573, 1.11 ) }
    dend_4 { pt3dadd( -12.0285, 139.831, -49.9151, 0.55 ) }
    dend_4 { pt3dadd( -12.2404, 140.707, -51.5172, 0.83 ) }
    dend_4 { pt3dadd( -13.2511, 144.001, -57.3375, 0.28 ) }
    dend_4 { pt3dadd( -13.4387, 144.68, -58.5444, 0.83 ) }
    dend_4 { pt3dadd( -14.3167, 147.824, -63.9019, 0.28 ) }
    dend_4 { pt3dadd( -14.4717, 148.395, -64.8058, 0.55 ) }
    dend_4 { pt3dadd( -14.825, 149.783, -66.7309, 0.28 ) }
    dend_4 { pt3dadd( -14.9208, 150.299, -67.3735, 0.83 ) }
    dend_4 { pt3dadd( -15.3133, 154.776, -72.3752, 0.28 ) }
    dend_4 { pt3dadd( -15.4189, 156.417, -74.2091, 0.28 ) }
    dend_4 { pt3dadd( -15.46, 157.406, -75.3164, 0.55 ) }
    dend_4 { pt3dadd( -15.5354, 159.042, -77.1662, 0.28 ) }
    dend_4 { pt3dadd( -15.6223, 160.319, -78.6489, 0.55 ) }
    dend_4 { pt3dadd( -15.8412, 162.857, -81.7519, 0.28 ) }
    dend_4 { pt3dadd( -15.813, 164.874, -84.0828, 1.38 ) }
    dend_4 { pt3dadd( -15.4382, 167.637, -87.3203, 0.28 ) }
    dend_4 { pt3dadd( -15.2541, 168.142, -87.9526, 0.83 ) }
    dend_4 { pt3dadd( -14.3787, 169.835, -90.0599, 0.28 ) }
    dend_4 { pt3dadd( -12.6043, 172.482, -93.3413, 0.55 ) }
    dend_4 { pt3dadd( -10.1533, 175.533, -97.0314, 0.55 ) }
    dend_4 { pt3dadd( -8.4711, 177.424, -99.3056, 1.66 ) }
    dend_4 { pt3dadd( -2.41927, 183.909, -106.783, 0.55 ) }
    dend_4 { pt3dadd( -1.79965, 184.585, -107.562, 1.11 ) }
    dend_4 { pt3dadd( -0.215093, 186.344, -109.588, 0.28 ) }
    dend_4 { pt3dadd( 0.416818, 187.094, -110.417, 0.55 ) }
    dend_4 { pt3dadd( 2.92777, 190.4, -114.201, 0.28 ) }
    dend_4 { pt3dadd( 3.60732, 191.316, -115.197, 1.11 ) }
    dend_4 { pt3dadd( 5.69475, 193.866, -118.218, 0.55 ) }
    dend_4 { pt3dadd( 6.85462, 195.062, -119.797, 0.83 ) }
    dend_4 { pt3dadd( 8.32721, 196.292, -121.601, 0.55 ) }
    dend_4 { pt3dadd( 11.7625, 198.542, -125.17, 0.28 ) }
    dend_4 { pt3dadd( 13.1602, 199.142, -126.406, 0.83 ) }
    dend_4 { pt3dadd( 18.4362, 200.764, -130.616, 0.28 ) }
    dend_4 { pt3dadd( 20.445, 201.146, -132.012, 1.11 ) }
    dend_4 { pt3dadd( 21.8994, 201.301, -132.991, 0.28 ) }
    dend_4 { pt3dadd( 23.3355, 201.333, -134.012, 0.55 ) }
    dend_4 { pt3dadd( 26.6538, 201.108, -136.193, 0.28 ) }
    dend_4 { pt3dadd( 27.625, 200.969, -136.802, 0.83 ) }
    dend_4 { pt3dadd( 29.6268, 200.435, -137.817, 0.28 ) }
    dend_4 { pt3dadd( 30.4393, 200.099, -138.297, 0.55 ) }
    dend_4 { pt3dadd( 31.4088, 199.538, -138.954, 0.28 ) }
    dend_4 { pt3dadd( 31.8065, 199.215, -139.313, 0.55 ) }
    dend_4 { pt3dadd( 32.8078, 198.247, -140.275, 0.28 ) }
    dend_4 { pt3dadd( 33.2943, 197.733, -140.786, 0.83 ) }
    dend_4 { pt3dadd( 36.1845, 194.46, -143.928, 0.28 ) }
    dend_4 { pt3dadd( 37.896, 192.436, -145.838, 0.83 ) }
    dend_4 { pt3dadd( 40.9425, 188.719, -149.15, 0.28 ) }
    dend_4 { pt3dadd( 41.5488, 187.971, -149.882, 0.55 ) }
    dend_4 { pt3dadd( 42.6346, 186.632, -151.216, 0.28 ) }
    dend_4 { pt3dadd( 43.6147, 185.362, -152.257, 0.83 ) }
    dend_4 { pt3dadd( 45.439, 182.87, -153.947, 0.28 ) }
    dend_4 { pt3dadd( 46.4358, 181.603, -154.71, 0.55 ) }
    dend_4 { pt3dadd( 51.2748, 175.72, -157.687, 0.28 ) }
    dend_4 { pt3dadd( 52.5378, 174.165, -158.532, 0.83 ) }
    dend_4 { pt3dadd( 56.8822, 168.513, -161.308, 0.28 ) }
    dend_4 { pt3dadd( 59.6985, 164.814, -163.308, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 67/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -14.6773, 3.53776, -58.507, 0.83 ) }
    dend_40 { pt3dadd( -15.3904, 3.40617, -60.3677, 0.83 ) }
    dend_40 { pt3dadd( -18.1445, 2.64684, -67.3732, 0.28 ) }
    dend_40 { pt3dadd( -18.7123, 2.47529, -68.7416, 0.55 ) }
    dend_40 { pt3dadd( -21.2048, 1.81148, -74.4708, 0.28 ) }
    dend_40 { pt3dadd( -22.0222, 1.60947, -76.2816, 0.83 ) }
    dend_40 { pt3dadd( -26.1895, 0.596086, -85.7525, 0.28 ) }
    dend_40 { pt3dadd( -26.706, 0.43707, -86.9294, 0.28 ) }
    dend_40 { pt3dadd( -27.1435, 0.276818, -87.9688, 0.55 ) }
    dend_40 { pt3dadd( -29.0536, -0.408151, -92.7193, 0.28 ) }
    dend_40 { pt3dadd( -29.7684, -0.681638, -94.5611, 0.83 ) }
    dend_40 { pt3dadd( -32.5269, -1.76476, -102.71, 0.28 ) }
    dend_40 { pt3dadd( -33.1619, -2.01096, -104.613, 0.55 ) }
    dend_40 { pt3dadd( -36.8691, -3.55742, -116.269, 0.28 ) }
    dend_40 { pt3dadd( -37.211, -3.7149, -117.398, 0.83 ) }
    dend_40 { pt3dadd( -39.9742, -5.18897, -126.981, 0.28 ) }
    dend_40 { pt3dadd( -43.4293, -7.09218, -139.395, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 84/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -14.6773, 3.53776, -58.507, 0.55 ) }
    dend_39 { pt3dadd( -15.037, 10.4791, -59.2966, 0.55 ) }
    dend_39 { pt3dadd( -15.2286, 12.4155, -59.4432, 0.83 ) }
    dend_39 { pt3dadd( -15.6027, 15.4398, -59.6039, 0.28 ) }
    dend_39 { pt3dadd( -15.757, 16.6088, -59.7674, 0.55 ) }
    dend_39 { pt3dadd( -16.2324, 20.123, -60.4095, 0.28 ) }
    dend_39 { pt3dadd( -16.4481, 21.716, -60.9175, 0.55 ) }
    dend_39 { pt3dadd( -16.9335, 24.9215, -62.2629, 0.28 ) }
    dend_39 { pt3dadd( -17.1427, 26.4376, -62.9686, 0.83 ) }
    dend_39 { pt3dadd( -17.6474, 30.9708, -65.1734, 0.28 ) }
    dend_39 { pt3dadd( -17.855, 33.439, -66.4458, 0.83 ) }
    dend_39 { pt3dadd( -18.2071, 40.5782, -70.6073, 0.28 ) }
    dend_39 { pt3dadd( -18.2476, 42.8559, -71.929, 0.83 ) }
    dend_39 { pt3dadd( -18.1944, 44.9152, -73.0812, 0.28 ) }
    dend_39 { pt3dadd( -18.0801, 46.5667, -73.9398, 0.83 ) }
    dend_39 { pt3dadd( -17.9165, 47.9733, -74.5209, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_39 { pt3dadd( -17.4926, 50.3949, -75.7535, 0.55 ) }
    dend_39 { pt3dadd( -16.9968, 52.5752, -76.9075, 0.28 ) }
    dend_39 { pt3dadd( -16.7649, 53.7877, -77.7407, 0.83 ) }
    dend_39 { pt3dadd( -16.2164, 57.4249, -80.2419, 0.28 ) }
    dend_39 { pt3dadd( -16.0344, 59.3099, -81.4472, 0.83 ) }
    dend_39 { pt3dadd( -15.6832, 65.0825, -84.8996, 0.28 ) }
    dend_39 { pt3dadd( -15.65, 66.5555, -85.7189, 0.55 ) }
    dend_39 { pt3dadd( -15.6646, 71.344, -88.28, 0.28 ) }
    dend_39 { pt3dadd( -15.7461, 74.3206, -89.7392, 1.11 ) }
    dend_39 { pt3dadd( -15.9043, 77.2566, -90.9434, 0.28 ) }
    dend_39 { pt3dadd( -16.0056, 78.9831, -91.554, 0.55 ) }
    dend_39 { pt3dadd( -16.2874, 83.9674, -92.8356, 0.28 ) }
    dend_39 { pt3dadd( -16.4056, 86.6588, -93.5383, 1.11 ) }
    dend_39 { pt3dadd( -16.4743, 89.3954, -94.1849, 1.11 ) }
    dend_39 { pt3dadd( -16.4968, 92.1259, -94.9056, 0.28 ) }
    dend_39 { pt3dadd( -16.4723, 93.8309, -95.3341, 0.55 ) }
    dend_39 { pt3dadd( -16.3798, 97.6243, -96.0949, 0.28 ) }
    dend_39 { pt3dadd( -16.286, 99.66, -96.3634, 0.55 ) }
    dend_39 { pt3dadd( -16.0878, 101.949, -96.8197, 0.28 ) }
    dend_39 { pt3dadd( -15.9144, 103.145, -97.1117, 0.55 ) }
    dend_39 { pt3dadd( -15.6017, 104.511, -97.6049, 0.28 ) }
    dend_39 { pt3dadd( -15.2558, 105.751, -98.1974, 1.11 ) }
    dend_39 { pt3dadd( -14.7568, 107.239, -98.9777, 1.11 ) }
    dend_39 { pt3dadd( -13.0006, 112.07, -101.551, 0.28 ) }
    dend_39 { pt3dadd( -12.6404, 112.997, -102.187, 0.55 ) }
    dend_39 { pt3dadd( -11.5928, 115.678, -104.231, 0.28 ) }
    dend_39 { pt3dadd( -11.0669, 117.007, -105.276, 0.55 ) }
    dend_39 { pt3dadd( -10.1527, 119.276, -107.088, 0.28 ) }
    dend_39 { pt3dadd( -9.65649, 120.556, -108.118, 1.11 ) }
    dend_39 { pt3dadd( -7.92566, 125.283, -111.707, 0.28 ) }
    dend_39 { pt3dadd( -7.70171, 125.938, -112.238, 0.83 ) }
    dend_39 { pt3dadd( -6.88935, 128.422, -114.233, 0.28 ) }
    dend_39 { pt3dadd( -6.42932, 129.872, -115.398, 0.83 ) }
    dend_39 { pt3dadd( -5.9142, 131.501, -116.744, 0.28 ) }
    dend_39 { pt3dadd( -5.71728, 132.191, -117.247, 0.55 ) }
    dend_39 { pt3dadd( -5.08768, 134.568, -118.64, 0.28 ) }
    dend_39 { pt3dadd( -4.73942, 136.113, -119.717, 0.55 ) }
    dend_39 { pt3dadd( -4.36111, 138.374, -121.467, 0.28 ) }
    dend_39 { pt3dadd( -4.26862, 139.051, -122.01, 0.55 ) }
    dend_39 { pt3dadd( -4.08773, 140.454, -123.163, 0.28 ) }
    dend_39 { pt3dadd( -4.0254, 141.057, -123.661, 0.55 ) }
    dend_39 { pt3dadd( -3.65271, 144.652, -126.471, 0.28 ) }
    dend_39 { pt3dadd( -3.56573, 145.566, -127.16, 0.55 ) }
    dend_39 { pt3dadd( -3.4275, 147.285, -128.366, 0.55 ) }
    dend_39 { pt3dadd( -3.17047, 151.367, -131.033, 0.28 ) }
    dend_39 { pt3dadd( -3.09723, 152.355, -131.777, 0.55 ) }
    dend_39 { pt3dadd( -2.99226, 153.624, -132.781, 0.28 ) }
    dend_39 { pt3dadd( -2.88253, 154.794, -133.926, 0.55 ) }
    dend_39 { pt3dadd( -2.63973, 157.38, -137.119, 0.28 ) }
    dend_39 { pt3dadd( -2.58159, 158.049, -138.031, 0.83 ) }
    dend_39 { pt3dadd( -2.14281, 162.103, -144.482, 0.28 ) }
    dend_39 { pt3dadd( -2.06035, 162.605, -145.382, 0.83 ) }
    dend_39 { pt3dadd( -1.39204, 165.743, -151.442, 0.28 ) }
    dend_39 { pt3dadd( -1.02263, 167.023, -153.993, 0.83 ) }
    dend_39 { pt3dadd( -0.646705, 167.978, -155.901, 0.28 ) }
    dend_39 { pt3dadd( 0.215301, 169.697, -159.295, 0.55 ) }
    dend_39 { pt3dadd( 1.47662, 171.712, -162.859, 0.28 ) }
    dend_39 { pt3dadd( 1.90796, 172.297, -163.857, 0.83 ) }
    dend_39 { pt3dadd( 3.21615, 173.756, -166.038, 0.28 ) }
    dend_39 { pt3dadd( 3.65345, 174.172, -166.763, 0.55 ) }
    dend_39 { pt3dadd( 5.24095, 175.499, -169.408, 0.28 ) }
    dend_39 { pt3dadd( 5.75545, 175.844, -170.207, 0.55 ) }
    dend_39 { pt3dadd( 7.50084, 176.872, -172.764, 0.28 ) }
    dend_39 { pt3dadd( 8.01933, 177.154, -173.566, 0.55 ) }
    dend_39 { pt3dadd( 10.4078, 178.258, -176.993, 0.28 ) }
    dend_39 { pt3dadd( 10.9257, 178.478, -177.664, 0.83 ) }
    dend_39 { pt3dadd( 14.6484, 179.857, -181.632, 0.28 ) }
    dend_39 { pt3dadd( 16.2252, 180.338, -183.051, 0.55 ) }
    dend_39 { pt3dadd( 18.2825, 180.766, -184.301, 0.55 ) }
    dend_39 { pt3dadd( 20.7814, 181.051, -185.189, 0.28 ) }
    dend_39 { pt3dadd( 22.7188, 181.107, -185.392, 0.55 ) }
    dend_39 { pt3dadd( 24.9935, 180.984, -185.348, 0.28 ) }
    dend_39 { pt3dadd( 26.7556, 180.783, -185.101, 0.55 ) }
    dend_39 { pt3dadd( 30.3201, 180.165, -184.374, 0.28 ) }
    dend_39 { pt3dadd( 33.2627, 179.561, -183.613, 0.55 ) }
    dend_39 { pt3dadd( 35.277, 179.06, -183.008, 0.28 ) }
    dend_39 { pt3dadd( 36.7532, 178.628, -182.524, 0.55 ) }
    dend_39 { pt3dadd( 37.8732, 178.251, -182.152, 0.55 ) }
    dend_39 { pt3dadd( 40.3459, 177.404, -181.4, 0.28 ) }
    dend_39 { pt3dadd( 41.4923, 177.02, -181.131, 0.55 ) }
    dend_39 { pt3dadd( 45.3789, 175.801, -180.358, 0.28 ) }
    dend_39 { pt3dadd( 47.9336, 175.128, -179.956, 0.55 ) }
    dend_39 { pt3dadd( 49.9166, 174.697, -179.795, 0.28 ) }
    dend_39 { pt3dadd( 51.3453, 174.458, -179.755, 0.55 ) }
    dend_39 { pt3dadd( 52.7292, 174.34, -179.806, 0.28 ) }
    dend_39 { pt3dadd( 54.2163, 174.344, -179.887, 0.55 ) }
    dend_39 { pt3dadd( 56.8563, 174.661, -180.115, 0.28 ) }
    dend_39 { pt3dadd( 59.4323, 175.133, -180.214, 0.55 ) }
    dend_39 { pt3dadd( 60.8528, 175.473, -180.251, 0.28 ) }
    dend_39 { pt3dadd( 62.0558, 175.786, -180.274, 0.55 ) }
    dend_39 { pt3dadd( 64.0802, 176.385, -180.331, 0.28 ) }
    dend_39 { pt3dadd( 65.2778, 176.792, -180.387, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 92/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 39.7238, -19.8376, 54.3164, 0.55 ) }
    dend_20 { pt3dadd( 45.6263, -27.7093, 56.1043, 0.55 ) }
    dend_20 { pt3dadd( 50.5684, -36.2835, 57.5393, 0.55 ) }
    dend_20 { pt3dadd( 57.064, -43.5633, 59.7327, 0.55 ) }
    dend_20 { pt3dadd( 63.5599, -50.5338, 62.7685, 0.55 ) }
    dend_20 { pt3dadd( 71.7782, -55.9271, 64.6048, 0.55 ) }
    dend_20 { pt3dadd( 79.3915, -61.555, 67.824, 0.55 ) }
    dend_20 { pt3dadd( 87.4614, -66.548, 70.9779, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 95.7705, -70.7677, 74.6048, 0.55 ) }
    dend_20 { pt3dadd( 104.653, -74.6461, 77.0679, 0.55 ) }
    dend_20 { pt3dadd( 114.181, -77.5267, 78.0281, 0.55 ) }
    dend_20 { pt3dadd( 123.536, -80.2675, 80.256, 0.55 ) }
    dend_20 { pt3dadd( 132.346, -84.3297, 82.6827, 0.55 ) }
    dend_20 { pt3dadd( 140.675, -89.4776, 84.7153, 0.55 ) }
    dend_20 { pt3dadd( 149.319, -93.4613, 87.783, 0.55 ) }
    dend_20 { pt3dadd( 157.823, -98.0373, 90.3789, 0.55 ) }
    dend_20 { pt3dadd( 166.263, -103.302, 91.4004, 0.55 ) }
    dend_20 { pt3dadd( 174.47, -108.977, 92.0719, 0.55 ) }
    dend_20 { pt3dadd( 181.684, -115.893, 92.424, 0.55 ) }
    dend_20 { pt3dadd( 188.571, -123.079, 93.3777, 0.55 ) }
    dend_20 { pt3dadd( 194.641, -130.673, 95.7196, 0.55 ) }
    dend_20 { pt3dadd( 200.217, -138.634, 98.0749, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 14/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 39.7238, -19.8376, 54.3164, 0.55 ) }
    dend_17 { pt3dadd( 43.8879, -28.5014, 57.0732, 0.55 ) }
    dend_17 { pt3dadd( 48.4858, -36.9267, 59.8791, 0.55 ) }
    dend_17 { pt3dadd( 52.9588, -45.264, 63.1168, 0.55 ) }
    dend_17 { pt3dadd( 56.6664, -54.4454, 64.5148, 0.55 ) }
    dend_17 { pt3dadd( 59.5266, -63.8966, 66.0941, 0.55 ) }
    dend_17 { pt3dadd( 63.6308, -72.8829, 67.6438, 0.55 ) }
    dend_17 { pt3dadd( 66.2844, -82.3198, 69.6195, 0.55 ) }
    dend_17 { pt3dadd( 68.5306, -91.5413, 72.7691, 0.55 ) }
    dend_17 { pt3dadd( 68.7784, -100.941, 76.1712, 0.55 ) }
    dend_17 { pt3dadd( 67.9052, -110.242, 79.7412, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 25/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -12.1148, 65.0556, 45.2723, 0.55 ) }
    dend_15 { pt3dadd( -13.3447, 65.8989, 46.718, 0.55 ) }
    dend_15 { pt3dadd( -14.4537, 66.4679, 48.0712, 0.55 ) }
    dend_15 { pt3dadd( -15.3741, 66.7712, 49.0509, 0.55 ) }
    dend_15 { pt3dadd( -17.1307, 67.0775, 50.606, 0.55 ) }
    dend_15 { pt3dadd( -19.4937, 67.1808, 52.3582, 0.28 ) }
    dend_15 { pt3dadd( -20.2379, 67.1525, 52.8193, 0.28 ) }
    dend_15 { pt3dadd( -21.9934, 66.8965, 53.7314, 0.55 ) }
    dend_15 { pt3dadd( -24.3617, 66.2135, 54.7405, 0.28 ) }
    dend_15 { pt3dadd( -25.8432, 65.5879, 55.2384, 0.55 ) }
    dend_15 { pt3dadd( -27.0476, 64.925, 55.4141, 0.28 ) }
    dend_15 { pt3dadd( -28.2364, 64.2283, 55.3377, 0.55 ) }
    dend_15 { pt3dadd( -35.4935, 63.3882, 62.1662, 0.55 ) }
    dend_15 { pt3dadd( -41.8532, 61.6674, 69.6891, 0.55 ) }
    dend_15 { pt3dadd( -48.7605, 61.6215, 76.9201, 0.55 ) }
    dend_15 { pt3dadd( -56.2494, 62.082, 83.531, 0.55 ) }
    dend_15 { pt3dadd( -64.5928, 62.3207, 89.0383, 0.55 ) }
    dend_15 { pt3dadd( -73.3192, 62.7755, 93.9007, 0.55 ) }
    dend_15 { pt3dadd( -82.1957, 61.634, 98.3622, 0.55 ) }
    dend_15 { pt3dadd( -90.1028, 62.2604, 104.452, 0.55 ) }
    dend_15 { pt3dadd( -98.3314, 63.8943, 109.894, 0.55 ) }
    dend_15 { pt3dadd( -107.231, 65.8106, 114.031, 0.55 ) }
    dend_15 { pt3dadd( -116.606, 68.5082, 116.232, 0.55 ) }
    dend_15 { pt3dadd( -126.028, 71.851, 116.435, 0.55 ) }
    dend_15 { pt3dadd( -135.528, 74.7687, 115.319, 0.55 ) }
    dend_15 { pt3dadd( -144.629, 78.8696, 114.726, 0.55 ) }
    dend_15 { pt3dadd( -153.016, 83.8639, 112.555, 0.55 ) }
    dend_15 { pt3dadd( -161.355, 88.1702, 109.102, 0.55 ) }
    dend_15 { pt3dadd( -170.352, 92.0794, 107.161, 0.55 ) }
    dend_15 { pt3dadd( -179.356, 94.6534, 103.653, 0.55 ) }
    dend_15 { pt3dadd( -188.655, 96.7763, 100.652, 0.55 ) }
    dend_15 { pt3dadd( -198.32, 97.6539, 98.2364, 0.55 ) }
    dend_15 { pt3dadd( -207.898, 100.035, 96.6282, 0.55 ) }
    dend_15 { pt3dadd( -217.688, 100.819, 94.7479, 0.55 ) }
    dend_15 { pt3dadd( -227.49, 101.152, 92.7936, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 60/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.1148, 65.0556, 45.2723, 0.83 ) }
    dend_12 { pt3dadd( -13.2279, 67.9184, 45.6847, 0.83 ) }
    dend_12 { pt3dadd( -13.9757, 69.8844, 46.3176, 0.83 ) }
    dend_12 { pt3dadd( -14.6598, 71.6731, 46.9574, 0.83 ) }
    dend_12 { pt3dadd( -15.6776, 74.3223, 47.1827, 0.83 ) }
    dend_12 { pt3dadd( -16.6342, 76.9219, 46.8552, 1.11 ) }
    dend_12 { pt3dadd( -17.9328, 80.5348, 46.1146, 0.83 ) }
    dend_12 { pt3dadd( -19.338, 84.3931, 45.0294, 1.11 ) }
    dend_12 { pt3dadd( -20.4159, 87.4053, 43.8702, 0.83 ) }
    dend_12 { pt3dadd( -24.0781, 97.8468, 38.3638, 1.11 ) }
    dend_12 { pt3dadd( -25.0152, 100.656, 36.2254, 1.11 ) }
    dend_12 { pt3dadd( -25.5637, 102.333, 34.4312, 0.55 ) }
    dend_12 { pt3dadd( -27.6852, 111.945, 32.6673, 0.55 ) }
    dend_12 { pt3dadd( -28.2274, 121.568, 30.0042, 0.55 ) }
    dend_12 { pt3dadd( -29.6143, 131.105, 27.3335, 0.55 ) }
    dend_12 { pt3dadd( -31.5777, 140.872, 26.4815, 0.55 ) }
    dend_12 { pt3dadd( -32.8705, 150.547, 24.3026, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 77/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -43.4293, -7.09218, -139.395, 0.55 ) }
    dend_42 { pt3dadd( -43.6655, -6.88632, -140.346, 0.55 ) }
    dend_42 { pt3dadd( -44.068, -6.62752, -141.681, 1.11 ) }
    dend_42 { pt3dadd( -47.546, -5.04893, -151.075, 0.28 ) }
    dend_42 { pt3dadd( -47.665, -5.01507, -151.342, 0.55 ) }
    dend_42 { pt3dadd( -48.8205, -4.79962, -153.548, 0.28 ) }
    dend_42 { pt3dadd( -49.5831, -4.74527, -154.758, 0.55 ) }
    dend_42 { pt3dadd( -50.5883, -4.80742, -156.018, 0.28 ) }
    dend_42 { pt3dadd( -51.9395, -5.19541, -157.074, 0.55 ) }
    dend_42 { pt3dadd( -53.4938, -5.91502, -157.594, 0.28 ) }
    dend_42 { pt3dadd( -55.0374, -6.76524, -158.199, 0.55 ) }
    dend_42 { pt3dadd( -56.7729, -7.87078, -158.901, 0.28 ) }
    dend_42 { pt3dadd( -57.8501, -8.58586, -159.378, 0.55 ) }
    dend_42 { pt3dadd( -60.7226, -10.5641, -160.904, 0.28 ) }
    dend_42 { pt3dadd( -61.7916, -11.3408, -161.603, 0.55 ) }
    dend_42 { pt3dadd( -63.509, -12.6221, -162.976, 0.28 ) }
    dend_42 { pt3dadd( -64.5289, -13.427, -163.985, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -43.4293, -7.09218, -139.395, 0.28 ) }
    dend_41 { pt3dadd( -42.6768, -8.66144, -144.353, 0.28 ) }
    dend_41 { pt3dadd( -42.5097, -9.2232, -145.887, 1.11 ) }
    dend_41 { pt3dadd( -41.6076, -14.1504, -157.67, 0.28 ) }
    dend_41 { pt3dadd( -41.5517, -14.8363, -159.178, 0.55 ) }
    dend_41 { pt3dadd( -41.5544, -16.681, -162.8, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -41.6012, -17.398, -163.979, 0.55 ) }
    dend_41 { pt3dadd( -42.0553, -19.2884, -166.195, 0.28 ) }
    dend_41 { pt3dadd( -42.4895, -20.5544, -167.221, 0.55 ) }
    dend_41 { pt3dadd( -44.0402, -24.1796, -168.557, 0.28 ) }
    dend_41 { pt3dadd( -44.9718, -26.2712, -169.137, 0.55 ) }
    dend_41 { pt3dadd( -46.6954, -30.0065, -169.965, 0.28 ) }
    dend_41 { pt3dadd( -48.0204, -32.7943, -170.662, 0.83 ) }
    dend_41 { pt3dadd( -49.2183, -35.2761, -171.312, 0.28 ) }
    dend_41 { pt3dadd( -50.2866, -37.4283, -171.897, 0.55 ) }
    dend_41 { pt3dadd( -51.8102, -40.404, -172.626, 0.28 ) }
    dend_41 { pt3dadd( -52.6001, -41.8123, -173.091, 0.55 ) }
    dend_41 { pt3dadd( -54.3035, -44.4237, -174.301, 0.28 ) }
    dend_41 { pt3dadd( -55.089, -45.5483, -175.05, 0.55 ) }
    dend_41 { pt3dadd( -55.9055, -46.5139, -175.937, 0.28 ) }
    dend_41 { pt3dadd( -56.5288, -47.1455, -176.789, 0.55 ) }
    dend_41 { pt3dadd( -57.7201, -48.2304, -178.652, 0.28 ) }
    dend_41 { pt3dadd( -58.681, -48.9512, -180.223, 0.83 ) }
    dend_41 { pt3dadd( -60.7522, -50.213, -183.557, 0.28 ) }
    dend_41 { pt3dadd( -61.5863, -50.7127, -185.012, 0.55 ) }
    dend_41 { pt3dadd( -63.3044, -51.9149, -188.357, 0.28 ) }
    dend_41 { pt3dadd( -63.6644, -52.2201, -189.095, 0.55 ) }
    dend_41 { pt3dadd( -64.4877, -53.1329, -191.111, 0.28 ) }
    dend_41 { pt3dadd( -64.9686, -53.7708, -192.512, 0.83 ) }
    dend_41 { pt3dadd( -66.3469, -55.7006, -196.726, 0.28 ) }
    dend_41 { pt3dadd( -67.1999, -57.0544, -199.572, 0.28 ) }
    dend_41 { pt3dadd( -67.9462, -58.3699, -202.21, 0.55 ) }
    dend_41 { pt3dadd( -69.4777, -61.3321, -208.186, 0.28 ) }
    dend_41 { pt3dadd( -70.2883, -63.2487, -211.897, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 28/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 67.9052, -110.242, 79.7412, 0.55 ) }
    dend_19 { pt3dadd( 66.8345, -119.621, 83.0381, 0.55 ) }
    dend_19 { pt3dadd( 66.3243, -129.421, 84.9688, 0.55 ) }
    dend_19 { pt3dadd( 66.2482, -138.992, 87.8605, 0.55 ) }
    dend_19 { pt3dadd( 66.998, -148.109, 91.9027, 0.55 ) }
    dend_19 { pt3dadd( 68.2353, -157.275, 95.7029, 0.55 ) }
    dend_19 { pt3dadd( 68.5504, -165.925, 100.709, 0.55 ) }
    dend_19 { pt3dadd( 67.3929, -174.522, 105.685, 0.55 ) }
    dend_19 { pt3dadd( 66.9573, -182.891, 111.143, 0.55 ) }
    dend_19 { pt3dadd( 66.0502, -190.699, 117.323, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 38/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 67.9052, -110.242, 79.7412, 0.55 ) }
    dend_18 { pt3dadd( 73.3679, -118.417, 81.5601, 0.55 ) }
    dend_18 { pt3dadd( 78.4207, -126.964, 82.759, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -32.8705, 150.547, 24.3026, 0.55 ) }
    dend_14 { pt3dadd( -39.7733, 155.669, 19.1931, 0.55 ) }
    dend_14 { pt3dadd( -46.7499, 158.741, 12.7206, 0.55 ) }
    dend_14 { pt3dadd( -53.5982, 159.99, 5.54141, 0.55 ) }
    dend_14 { pt3dadd( -59.6848, 163.26, -1.6878, 0.55 ) }
    dend_14 { pt3dadd( -66.2526, 166.335, -8.57304, 0.55 ) }
    dend_14 { pt3dadd( -72.7015, 170.04, -15.2581, 0.55 ) }
    dend_14 { pt3dadd( -79.4768, 175.562, -20.1156, 0.55 ) }
    dend_14 { pt3dadd( -86.4801, 181.553, -23.9963, 0.55 ) }
    dend_14 { pt3dadd( -93.5533, 186.896, -28.6237, 0.55 ) }
    dend_14 { pt3dadd( -99.7398, 191.975, -34.6185, 0.55 ) }
    dend_14 { pt3dadd( -105.241, 197.382, -40.9829, 0.55 ) }
    dend_14 { pt3dadd( -110.764, 203.844, -46.2477, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 54/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -32.8705, 150.547, 24.3026, 0.55 ) }
    dend_13 { pt3dadd( -31.4405, 160.441, 24.4846, 0.55 ) }
    dend_13 { pt3dadd( -28.4644, 169.986, 24.2931, 0.55 ) }
    dend_13 { pt3dadd( -27.2533, 179.829, 23.0109, 0.55 ) }
    dend_13 { pt3dadd( -24.884, 189.34, 21.0224, 0.55 ) }
    dend_13 { pt3dadd( -22.3672, 199.018, 20.9228, 0.55 ) }
    dend_13 { pt3dadd( -18.93, 208.357, 21.9022, 0.55 ) }
    dend_13 { pt3dadd( -16.2417, 217.988, 21.8989, 0.55 ) }
    dend_13 { pt3dadd( -13.0315, 227.305, 20.2002, 0.55 ) }
    dend_13 { pt3dadd( -9.25804, 236.023, 17.0727, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_29, dend_0, dend_44, dend_31, dend_24, dend_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_29, dend_0, dend_44, dend_31, dend_24, dend_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_29 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_24 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_46 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_45 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_43 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_25 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_26 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_6 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_35 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_34 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_22 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_16 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_4 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_40 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_39 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_20 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_15 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_19 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_14 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_13 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_30 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_31 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_32 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_9 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_33 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_11 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_38 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_5 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_42 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_18 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_27 OneSecGrp_SectionRef_21.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, axon_0, axon_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 9
    dend_24 nseg = 3
    dend_46 nseg = 15
    dend_45 nseg = 15
    dend_43 nseg = 15
    dend_28 nseg = 15
    dend_25 nseg = 11
    dend_26 nseg = 3
    dend_21 nseg = 5
    dend_6 nseg = 5
    dend_3 nseg = 3
    dend_37 nseg = 5
    dend_35 nseg = 7
    dend_34 nseg = 11
    dend_22 nseg = 7
    dend_16 nseg = 5
    dend_8 nseg = 7
    dend_4 nseg = 13
    dend_40 nseg = 5
    dend_39 nseg = 15
    dend_20 nseg = 11
    dend_17 nseg = 5
    dend_15 nseg = 13
    dend_12 nseg = 5
    dend_41 nseg = 5
    dend_19 nseg = 5
    dend_14 nseg = 5
    dend_13 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_NBC_327fc63584_0_0


