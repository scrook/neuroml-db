// Cell: Cell_480051220
/*
{
  "id" : "Cell_480051220",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "337.94, 566.166, 30.8, 12.5794", "344.23, 566.166, 30.8, 12.5794", "350.519, 566.166, 30.8, 12.5794" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "344.229, 566.166, 30.8, 1.0", "350.071, 579.982, 30.8, 1.0", "355.912, 593.798, 30.8, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000397487876633
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "340.711, 570.122, 32.1314, 0.2288", "339.973, 570.901, 32.9045, 0.2846", "339.063, 571.462, 33.2623, 0.2928", "338.001, 571.842, 33.5922, 0.3096", "336.94, 572.229, 33.8962, 0.3342", "335.849, 572.424, 34.0704, 0.4118", "334.784, 572.691, 34.0777, 0.3996", "333.752, 573.137, 34.0122, 0.448", "332.738, 573.659, 33.9962, 0.4218", "331.781, 574.225, 34.127, 0.478", "330.947, 574.966, 34.3689, 0.5318", "330.625, 575.833, 34.6959, 0.4192", "330.724, 576.862, 35.054, 0.3264", "330.074, 577.592, 35.5062, 0.2762", "329.027, 577.786, 35.814, 0.2776", "328.232, 578.086, 36.2704, 0.2802", "327.521, 578.877, 36.7777, 0.2852", "327.069, 579.915, 37.1428, 0.2944", "326.803, 581.023, 37.4654, 0.3108", "326.15, 581.932, 37.7289, 0.3438", "325.659, 582.878, 38.108, 0.3934", "325.16, 583.81, 38.5476, 0.5404", "325.111, 584.899, 39.0597, 0.5472", "325.482, 585.928, 39.6438, 0.4762", "325.922, 586.964, 40.2578, 0.5218", "325.978, 588.068, 40.8727, 0.4328", "326.216, 588.852, 41.6366, 0.4242", "326.768, 589.79, 42.4088, 0.3338", "326.7, 590.823, 43.2309, 0.2998", "327.141, 591.327, 44.1652, 0.2742", "327.755, 591.525, 45.036, 0.274", "327.858, 592.661, 45.6697, 0.2736", "328.175, 593.752, 46.1269, 0.2728", "328.499, 594.842, 46.4881, 0.2712", "328.922, 595.898, 46.7547, 0.2684", "329.302, 596.929, 47.0322, 0.2626", "330.131, 597.639, 47.2486, 0.2542", "330.998, 598.283, 47.5373, 0.2288", "331.417, 599.306, 47.7859, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000397487876633,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "338.234, 567.462, 29.4308, 0.2288", "337.43, 566.908, 29.223, 0.2928", "336.621, 566.643, 29.367, 0.3094", "335.671, 566.557, 29.2659, 0.3338", "334.826, 566.723, 28.8764, 0.4108", "333.747, 566.633, 28.443, 0.3988", "332.703, 566.186, 28.0204, 0.4408", "331.621, 565.881, 27.6634, 0.4372", "330.498, 565.747, 27.3244, 0.3676", "329.364, 565.708, 27.0477, 0.3154", "328.221, 565.708, 26.8321, 0.303", "327.077, 565.708, 26.6465, 0.3282", "325.993, 565.71, 26.369, 0.3698", "324.937, 565.723, 25.9792, 0.4722", "323.821, 565.818, 25.6463, 0.5394", "322.731, 566.138, 25.4302, 0.5718", "321.728, 566.68, 25.2932, 0.6232", "320.778, 567.315, 25.2185, 0.5302", "319.82, 567.942, 25.1992, 0.5856", "318.757, 568.345, 25.2109, 0.4984", "317.625, 568.456, 25.2288, 0.5726", "316.484, 568.536, 25.2512, 0.4794", "315.363, 568.751, 25.258, 0.5126", "314.264, 569.062, 25.2426, 0.4892", "313.186, 569.444, 25.2224, 0.6294", "312.107, 569.824, 25.2036, 0.6842", "311.021, 570.182, 25.1871, 0.638", "309.909, 570.446, 25.1698, 0.5822", "308.798, 570.685, 25.116, 0.5642", "307.68, 570.546, 25.086, 0.572", "306.58, 570.594, 25.1689, 0.616", "305.446, 570.493, 25.2064, 0.5544", "304.321, 570.69, 25.226, 0.449", "303.315, 571.211, 25.2076, 0.4396" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000397487876633
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "349.8, 566.129, 29.1318, 0.2288", "350.618, 565.468, 27.7194, 0.3202", "351.673, 565.755, 27.1258, 0.3846", "352.703, 566.137, 26.4485, 0.3544", "353.788, 566.317, 25.7211, 0.3394", "354.746, 566.41, 24.8744, 0.3418", "355.631, 565.848, 24.0204, 0.4268", "356.625, 565.308, 23.3178, 0.4224", "357.761, 565.205, 22.7528, 0.5152", "358.838, 565.079, 22.211, 0.4266", "359.771, 565.641, 21.6826, 0.3818", "360.884, 565.475, 21.2352, 0.4058", "361.937, 565.026, 20.9014, 0.3884", "363.059, 564.808, 20.6394, 0.4278", "364.188, 564.85, 20.3829, 0.3822", "365.278, 565.155, 20.1527, 0.415" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000397487876633
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "346.363, 571.49, 27.1401, 0.2288", "347.336, 571.934, 26.4485, 0.287", "348.467, 571.901, 26.2122, 0.2976", "349.492, 571.931, 25.7866, 0.318", "350.438, 572.281, 25.1787, 0.3508", "351.529, 572.344, 24.54, 0.4374", "352.65, 572.503, 23.9313, 0.4728", "353.728, 572.812, 23.3369, 0.459", "354.852, 572.972, 22.7959, 0.361", "355.932, 572.909, 22.232, 0.3032", "357.014, 572.724, 21.6588, 0.2804", "358.043, 573.151, 21.203, 0.2854", "358.674, 574.029, 20.6889, 0.2946", "359.514, 574.711, 20.1242, 0.3124", "360.375, 575.461, 19.6336, 0.3406", "361.183, 576.269, 19.2144, 0.4174", "361.998, 577.044, 18.772, 0.441", "363.073, 577.348, 18.2916, 0.3744", "364.045, 577.882, 17.7859, 0.329", "365.102, 578.075, 17.22, 0.3232" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000397487876633
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "340.127, 563.732, 23.3764, 0.2288", "339.952, 562.625, 22.836, 0.34", "340.31, 561.569, 22.6318, 0.4162", "340.417, 560.448, 22.3922, 0.4386", "340.004, 559.422, 22.0634, 0.3702", "339.452, 558.441, 21.6521, 0.3202", "338.904, 557.44, 21.219, 0.3128", "338.278, 556.511, 20.718, 0.3414", "337.835, 555.593, 20.0637, 0.4188", "337.675, 554.551, 19.3348, 0.4434", "337.343, 553.484, 18.6382, 0.3788", "336.702, 552.594, 17.955, 0.3372", "335.914, 551.767, 17.3936, 0.3394", "335.443, 550.729, 16.938, 0.415", "334.643, 550.044, 16.4368, 0.4364", "333.67, 549.564, 15.927, 0.3662", "332.918, 548.702, 15.524, 0.3124", "332.387, 547.69, 15.218, 0.2988", "331.435, 547.063, 14.9531, 0.3142" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000397487876633
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "339.777, 570.555, 30.4704, 0.2288", "338.751, 570.845, 29.7996, 0.5032", "337.651, 570.827, 29.4756, 0.4454", "336.535, 571.023, 29.1894, 0.4476", "335.426, 571.263, 28.9831, 0.3778", "334.32, 571.503, 28.7459, 0.3772", "333.196, 571.479, 28.4836, 0.439", "332.079, 571.55, 28.203, 0.4756", "331.189, 571.885, 27.7805, 0.4644", "330.28, 572.484, 27.3655, 0.371", "329.312, 572.597, 27.2992, 0.3216", "328.354, 572.82, 27.5089, 0.3154", "327.248, 573.111, 27.7057, 0.3462", "326.107, 573.185, 27.8583, 0.4274" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000397487876633
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "339.319, 565.247, 25.2216, 0.2288", "338.578, 564.376, 25.0351, 0.5784" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000397487876633
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "343.96, 570.925, 25.044, 0.2288", "343.913, 572.017, 25.2076, 0.2844", "343.844, 573.086, 25.3604, 0.2928", "344.112, 574.16, 25.452, 0.3094", "344.597, 575.192, 25.4836, 0.3336", "345.045, 576.186, 25.3229, 0.4106", "345.373, 577.196, 24.9696, 0.3986", "345.848, 578.221, 24.5703, 0.4402", "346.353, 579.236, 24.2362, 0.436", "346.51, 580.36, 23.8924, 0.3652", "346.569, 581.492, 23.5152, 0.311", "346.874, 582.54, 23.0563, 0.2952", "346.997, 583.657, 22.5764, 0.3124", "347.153, 584.669, 21.9632, 0.3468", "347.887, 585.487, 21.3436, 0.3988", "348.577, 586.395, 20.8258, 0.552", "348.689, 587.493, 20.33, 0.5608", "348.965, 588.598, 19.936, 0.5398", "349.623, 589.534, 19.6524, 0.4528", "350.276, 590.473, 19.4522, 0.5244", "351.054, 591.311, 19.2844, 0.4434", "351.788, 592.14, 19.0526, 0.4152", "352.349, 593.136, 18.8647, 0.4562" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000397487876633
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "346.669, 560.001, 33.5292, 1.9016", "347.282, 559.035, 33.9973, 0.633", "347.9, 558.073, 34.2507, 0.577", "348.385, 557.073, 34.239, 0.763" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000397487876633
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "355.912, 593.798, 30.8, 1.0", "361.753, 607.614, 30.8, 1.0", "367.595, 621.43, 30.8, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "303.315, 571.211, 25.2076, 0.4396", "302.739, 571.561, 25.258, 0.4348", "301.818, 572.236, 25.3168, 0.3632", "300.91, 572.755, 25.4195, 0.3074", "299.949, 572.969, 25.7298, 0.2882", "299.153, 573.63, 25.9846, 0.2996", "298.253, 574.224, 26.1083, 0.323", "297.15, 574.494, 26.1876, 0.3538", "296.03, 574.73, 26.2494, 0.4726", "295.08, 575.041, 26.4544, 0.394", "294.087, 575.519, 26.5835, 0.3268", "292.999, 575.828, 26.7084, 0.2772", "291.888, 575.94, 26.7193, 0.2792", "290.763, 576.11, 26.661, 0.2834", "289.627, 576.233, 26.5518, 0.2906", "288.513, 576.486, 26.4155, 0.3056", "287.408, 576.721, 26.3446, 0.3266", "286.616, 577.396, 26.1327, 0.3976", "285.492, 577.563, 25.944, 0.3734", "284.36, 577.654, 25.739, 0.3986", "283.239, 577.861, 25.536, 0.3336", "282.114, 578.069, 25.3758, 0.2994", "280.985, 578.243, 25.2739, 0.2736", "279.957, 578.72, 25.1532, 0.2728", "278.934, 579.208, 25.009, 0.2712", "277.845, 579.558, 24.9052, 0.2684", "276.703, 579.617, 24.831, 0.2626", "275.559, 579.642, 24.7786, 0.2542", "274.417, 579.725, 24.7464, 0.2288", "273.281, 579.856, 24.7363, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "303.315, 571.211, 25.2076, 0.4396", "302.738, 570.644, 23.5973, 0.4576", "301.937, 569.999, 22.7674, 0.3592", "300.93, 569.609, 22.4493, 0.2996", "299.81, 569.407, 22.181, 0.274", "298.698, 569.484, 21.9663, 0.2736", "297.74, 569.831, 21.6096, 0.2728", "296.663, 569.813, 21.2318, 0.2712", "295.977, 569.264, 20.6634, 0.2684", "294.925, 568.948, 20.0642, 0.2626", "293.895, 568.494, 19.4916, 0.2542", "293.07, 567.705, 19.0305, 0.2288", "292.507, 566.812, 17.99, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "365.278, 565.155, 20.1527, 0.415", "366.06, 565.512, 20.0329, 0.365", "367.107, 565.948, 19.9119, 0.3524", "368.216, 566.163, 19.7753, 0.3982", "369.338, 566.372, 19.7142, 0.3746", "370.41, 566.767, 19.7103, 0.401", "371.467, 567.18, 19.7856, 0.3378", "372.548, 567.537, 19.9021, 0.3074", "373.612, 567.956, 20.006, 0.288", "374.677, 568.375, 20.0928, 0.3004", "375.741, 568.793, 20.1561, 0.3172" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "365.278, 565.155, 20.1527, 0.415", "365.661, 565.384, 18.7709, 0.6864", "366.228, 566.116, 18.1325, 0.4446", "366.677, 567.146, 17.9038, 0.3266", "367.166, 568.146, 17.7276, 0.2766", "367.836, 569.054, 17.6428, 0.2784", "368.543, 569.938, 17.6221, 0.2818", "369.385, 570.702, 17.5916, 0.288", "370.017, 571.578, 17.4908, 0.3004", "370.369, 572.641, 17.4014, 0.3172", "370.828, 573.68, 17.337, 0.3792", "371.528, 574.573, 17.2726, 0.3446", "372.321, 575.37, 17.1503, 0.3208", "373.198, 576.097, 17.047, 0.3078", "373.695, 577.115, 16.9775, 0.3616", "374.347, 578.053, 16.9243, 0.3136", "374.486, 579.181, 16.8874, 0.2542", "375.067, 580.161, 16.8655, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "365.102, 578.075, 17.22, 0.3232", "365.608, 577.754, 15.9933, 0.4576", "366.535, 577.217, 15.5641, 0.3606", "367.292, 576.443, 15.4092, 0.3024", "367.904, 575.494, 15.2832, 0.2788", "368.894, 575.093, 15.1824, 0.2826", "370.014, 574.882, 15.1029, 0.2892", "370.94, 574.274, 15.0416, 0.3028", "371.944, 573.793, 14.9895, 0.3216", "373.022, 573.443, 14.8842, 0.3876", "374.037, 572.931, 14.7661, 0.3598", "375.121, 572.593, 14.6611, 0.349", "376.24, 572.352, 14.5673, 0.3612", "377.34, 572.042, 14.481, 0.4564", "378.403, 571.622, 14.4007, 0.5088", "379.473, 571.219, 14.3242, 0.5216", "379.737, 570.218, 14.1576, 0.4972", "380.426, 569.352, 13.9406, 0.4572", "381.397, 568.752, 13.7687, 0.3574", "382.402, 568.204, 13.6416, 0.2966", "383.536, 568.06, 13.5559, 0.2684", "384.645, 567.779, 13.5078, 0.2626", "385.745, 567.465, 13.4929, 0.2542", "386.836, 567.121, 13.4926, 0.2288", "387.883, 566.659, 13.4926, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "365.102, 578.075, 17.22, 0.3232", "365.427, 578.093, 16.7199, 0.3902", "366.509, 578.235, 16.2081, 0.366", "367.541, 578.654, 15.7522, 0.354", "368.542, 579.14, 15.358, 0.4014", "369.509, 579.746, 15.0875, 0.3806" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "331.435, 547.063, 14.9531, 0.3142", "330.615, 546.752, 14.7694, 0.3734", "329.518, 546.546, 14.5858, 0.3338", "328.4, 546.506, 14.462, 0.3", "327.374, 546.942, 14.3648, 0.2746", "326.45, 547.58, 14.1854, 0.2746", "325.469, 548.128, 13.9406, 0.2746", "324.472, 548.662, 13.6553, 0.2746", "323.526, 549.25, 13.3106, 0.2746", "322.574, 549.66, 12.847, 0.2746", "321.524, 549.999, 12.4194, 0.2746", "320.413, 550.132, 12.0739, 0.2746", "319.287, 550.121, 11.8098, 0.2746", "318.167, 549.94, 11.6838, 0.2746", "317.099, 549.549, 11.7211, 0.2746", "316.443, 548.974, 12.0854, 0.2746", "315.593, 548.777, 12.6493, 0.2746", "314.483, 548.707, 13.1373, 0.2746", "313.494, 548.177, 13.5187, 0.2748", "312.526, 547.945, 13.9726, 0.2748", "311.542, 548.211, 14.4393, 0.2752", "310.501, 548.659, 14.66, 0.2758", "309.562, 549.018, 14.5457, 0.2768", "308.517, 549.35, 14.3772, 0.2786", "307.388, 549.431, 14.2106, 0.282", "306.259, 549.42, 13.9871, 0.288", "305.257, 549.272, 13.6318, 0.3008", "304.175, 549.18, 13.3062, 0.3178", "303.164, 548.82, 13.2432, 0.3802", "302.88, 547.797, 13.2541, 0.3464", "302.982, 546.687, 13.3344, 0.3242", "303.152, 545.757, 13.694, 0.3142", "302.277, 545.258, 14.299, 0.3734", "301.508, 544.512, 15.0013, 0.334", "300.871, 543.672, 15.75, 0.3", "300.465, 542.725, 16.5281, 0.2746", "300.134, 541.647, 17.1651, 0.2748", "299.581, 540.654, 17.6176, 0.2748", "298.878, 539.753, 17.8601, 0.275", "298.257, 538.794, 17.9558, 0.2754", "297.312, 538.271, 18.0334, 0.2762", "296.708, 537.339, 17.8716, 0.2776", "296.173, 536.99, 17.5162, 0.2804", "295.299, 536.633, 16.9313, 0.2852", "294.37, 536.378, 16.1784, 0.2954", "293.305, 535.997, 15.5403, 0.3078", "292.403, 535.541, 15.2149, 0.3616", "291.384, 535.177, 15.1015, 0.3136", "290.36, 535.166, 14.8364, 0.2542", "289.739, 535.265, 13.391, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "331.435, 547.063, 14.9531, 0.3142", "330.704, 546.625, 14.1145, 0.2288", "329.994, 545.855, 13.291, 0.2746", "329.596, 544.828, 12.9346, 0.2746", "329.581, 543.847, 12.504, 0.2746", "330.002, 542.862, 12.1257, 0.2746", "330.525, 541.995, 12.0193, 0.2746", "331.061, 541.161, 12.0095, 0.2746", "331.416, 540.164, 11.9109, 0.2746", "331.467, 539.069, 11.8653, 0.2746", "331.164, 537.985, 11.9448, 0.2746", "331.012, 536.91, 12.1668, 0.2746", "331.174, 535.826, 12.4788, 0.2746", "331.591, 534.773, 12.8027, 0.2746", "332.045, 533.744, 13.0606, 0.2746", "332.471, 532.696, 13.2586, 0.2746", "332.815, 531.632, 13.524, 0.2746", "333.239, 530.742, 13.9723, 0.2746", "333.485, 530.144, 14.6756, 0.2748", "332.885, 529.473, 15.4283, 0.2748", "332.056, 528.753, 15.8455, 0.2752", "331.229, 528.182, 15.8984, 0.2756", "330.4, 527.562, 15.8337, 0.2766", "330.991, 526.683, 15.5803, 0.2782", "331.788, 526.031, 15.3012, 0.2814", "331.963, 524.938, 15.1172, 0.287", "332.253, 523.918, 15.0564, 0.2988", "332.603, 523.016, 14.8201, 0.3142", "332.421, 522.263, 14.2839, 0.3734", "331.933, 521.434, 13.6184, 0.3338", "331.494, 520.446, 13.0463, 0.3", "331.212, 519.351, 12.6787, 0.2746", "330.892, 518.268, 12.4334, 0.2746", "330.462, 517.216, 12.3399, 0.2746", "330.494, 516.143, 12.4183, 0.2744", "330.974, 515.117, 12.5516, 0.2744", "331.13, 514.012, 12.6591, 0.2742", "331.147, 512.869, 12.763, 0.274", "331.343, 511.756, 12.822, 0.2736", "331.695, 510.679, 12.9343, 0.2728", "332.346, 509.862, 13.2233, 0.2712", "332.993, 508.937, 13.5265, 0.2684", "333.772, 508.143, 13.7127, 0.2626", "334.872, 507.918, 13.914, 0.2542", "335.371, 508.842, 14.2257, 0.2288", "335.077, 509.881, 15.12, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "326.107, 573.185, 27.8583, 0.4274", "325.103, 573.811, 27.9398, 0.4608", "324.334, 574.645, 27.8891, 0.406", "323.523, 575.36, 27.6352, 0.4118", "322.508, 575.768, 27.2832, 0.3592", "321.543, 576.341, 27.0292, 0.3416", "320.454, 576.409, 26.7039, 0.3772", "319.356, 576.659, 26.4916, 0.341", "318.45, 577.082, 26.3309, 0.313", "317.809, 577.848, 26.0686, 0.2998", "316.835, 578.258, 25.8138, 0.316", "315.847, 578.752, 25.4912, 0.377", "314.925, 579.298, 25.1247, 0.3408", "314.273, 579.97, 24.6257, 0.3124", "313.39, 580.646, 24.2847, 0.2988", "312.639, 581.5, 23.956, 0.3142", "311.927, 582.293, 23.5175, 0.3734", "311.323, 583.108, 22.9835, 0.334", "310.474, 583.832, 22.5134, 0.3002", "309.419, 584.065, 22.1222, 0.2748", "308.344, 583.893, 21.8448, 0.2752", "307.451, 584.314, 21.6798, 0.2756", "306.824, 585.212, 21.5004, 0.2766", "306.137, 586.104, 21.394, 0.2784", "305.217, 586.756, 21.2943, 0.2818", "304.144, 587.08, 21.1638, 0.2876", "303.049, 587.343, 20.9807, 0.2998", "302.335, 588.112, 20.7682, 0.316", "301.676, 589.032, 20.5786, 0.377", "300.767, 589.671, 20.3426, 0.3408", "299.71, 590.049, 20.0651, 0.3124", "298.624, 590.384, 19.7845, 0.2988", "297.575, 590.81, 19.502, 0.3142", "296.47, 591.037, 19.2508, 0.3736", "295.348, 591.17, 19.0011, 0.334", "294.282, 591.536, 18.7956, 0.3002", "293.26, 592.051, 18.6519, 0.2752", "292.261, 592.608, 18.5545, 0.2756", "291.22, 593.043, 18.4433, 0.2766", "290.234, 593.577, 18.3985, 0.2782", "289.358, 594.297, 18.3795, 0.2814", "288.35, 594.783, 18.3338, 0.287", "287.238, 595.023, 18.3053, 0.2988", "286.191, 595.454, 18.3142, 0.3142", "285.178, 595.984, 18.3593, 0.3734", "284.222, 596.588, 18.482, 0.3338", "283.448, 597.388, 18.697, 0.3", "282.611, 598.153, 18.9288, 0.2746", "281.825, 598.98, 19.1408, 0.2746", "281.071, 599.839, 19.3309, 0.2746", "280.32, 600.685, 19.5336, 0.2746", "279.562, 601.516, 19.7548, 0.2746", "278.771, 602.335, 19.9447, 0.2746", "277.947, 603.127, 20.0813, 0.2746", "277.08, 603.872, 20.1631, 0.2746", "276.133, 604.507, 20.1888, 0.2746", "275.068, 604.889, 20.1639, 0.2746", "273.949, 605.126, 20.1006, 0.2746", "272.915, 605.542, 19.966, 0.2746", "271.953, 606.115, 19.7529, 0.2746", "271.006, 606.741, 19.5376, 0.2746", "270.102, 607.441, 19.3592, 0.2746", "269.455, 608.352, 19.2097, 0.2746", "268.957, 609.381, 19.0834, 0.2746", "268.237, 610.242, 18.9731, 0.2746", "267.36, 610.975, 18.8588, 0.2746", "266.439, 611.62, 18.6645, 0.2744", "265.747, 612.459, 18.3767, 0.2744", "265.105, 613.346, 18.1454, 0.2742", "264.8, 614.384, 17.8727, 0.274", "264.909, 615.463, 17.4602, 0.2736", "264.705, 616.436, 16.8809, 0.2728", "264.113, 617.3, 16.212, 0.2712", "263.043, 617.515, 15.5624, 0.2684", "261.903, 617.545, 15.0268, 0.2626", "260.762, 617.631, 14.6292, 0.2542", "259.662, 617.917, 14.3186, 0.2288", "258.723, 618.462, 13.5988, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "326.107, 573.185, 27.8583, 0.4274", "325.578, 573.11, 28.4007, 0.4576", "324.443, 572.99, 28.9556, 0.3762", "323.387, 573.167, 29.2463, 0.3324", "322.306, 573.461, 29.5996, 0.3294", "321.176, 573.516, 29.9664, 0.4012", "320.043, 573.46, 30.3467, 0.3876", "318.913, 573.298, 30.7034, 0.389", "317.886, 572.86, 31.0873, 0.4904", "316.769, 572.766, 31.472, 0.4278", "315.642, 572.901, 31.8545, 0.3842", "314.521, 573.011, 32.2622, 0.4102", "313.399, 573.103, 32.6903, 0.3964", "312.283, 573.244, 33.1335, 0.4424", "311.167, 573.351, 33.5812, 0.4104", "310.049, 573.216, 34.0133, 0.4622", "308.914, 573.091, 34.3644, 0.4776", "307.895, 572.788, 34.778, 0.4382", "306.823, 572.424, 35.1338, 0.4676", "305.696, 572.255, 35.4172, 0.4816", "304.568, 572.079, 35.5978, 0.475", "303.458, 571.809, 35.7308, 0.3918", "302.397, 571.388, 35.8632, 0.3548", "301.309, 571.044, 35.9503, 0.4026", "300.22, 570.723, 36.1043, 0.3828", "299.091, 570.562, 36.2516, 0.4162", "297.953, 570.476, 36.4697, 0.367", "296.823, 570.622, 36.7044, 0.3562", "295.725, 570.482, 37.0972, 0.404", "294.629, 570.762, 37.5738, 0.3928", "293.65, 570.731, 38.2578, 0.3984", "292.815, 570.04, 39.0326, 0.509", "291.938, 569.386, 39.8465, 0.457", "291.134, 568.692, 40.7109, 0.4638", "290.323, 567.914, 41.5148, 0.4328", "289.432, 567.267, 42.2761, 0.3594", "288.777, 566.606, 43.078, 0.3", "288.455, 565.637, 43.9034, 0.2746", "288.123, 564.666, 44.7182, 0.2746", "287.66, 563.691, 45.4082, 0.2746", "287.059, 562.718, 45.8937, 0.2746", "286.377, 561.805, 46.2048, 0.2746", "285.609, 560.957, 46.373, 0.2746", "284.878, 560.078, 46.445, 0.2746", "284.2, 559.157, 46.4624, 0.2746", "283.404, 558.357, 46.4624, 0.2746", "282.379, 557.907, 46.4624, 0.2746", "281.275, 557.614, 46.4624, 0.2748", "280.207, 557.209, 46.4626, 0.2748", "279.235, 556.623, 46.4626, 0.2752", "278.389, 555.858, 46.4626, 0.2756", "277.584, 555.045, 46.4629, 0.2766", "276.766, 554.245, 46.4632, 0.2782", "275.964, 553.429, 46.4635, 0.2814", "275.186, 552.591, 46.4638, 0.287", "274.306, 551.876, 46.4643, 0.2988", "273.298, 551.341, 46.4652, 0.3142", "272.241, 550.905, 46.4663, 0.3734", "271.158, 550.536, 46.468, 0.3338", "270.076, 550.167, 46.4699, 0.3", "269.023, 549.723, 46.473, 0.2746", "268.013, 549.189, 46.4772, 0.2746", "267.153, 548.454, 46.4836, 0.2746", "266.334, 547.658, 46.492, 0.2746", "265.444, 546.94, 46.5027, 0.2746", "264.614, 546.157, 46.5156, 0.2744", "263.873, 545.289, 46.5478, 0.2744", "263.433, 544.244, 46.585, 0.2742", "262.373, 544.005, 46.6147, 0.274", "261.273, 543.695, 46.6365, 0.2736", "261.079, 542.602, 46.6511, 0.2728", "260.576, 541.576, 46.6592, 0.2712", "259.862, 540.683, 46.6614, 0.2684", "258.911, 540.05, 46.6614, 0.2626", "257.823, 539.699, 46.6614, 0.2542", "256.699, 539.492, 46.6614, 0.2288", "255.842, 538.737, 46.6614, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "338.578, 564.376, 25.0351, 0.5784", "338.058, 563.817, 24.9726, 0.6418", "337.048, 563.307, 24.9346, 0.534", "336.126, 562.901, 24.6702, 0.5132", "335.065, 562.5, 24.3827, 0.5212", "334.111, 561.873, 24.1114, 0.5384", "333.196, 561.212, 23.8115, 0.559", "332.266, 560.577, 23.63, 0.4222", "331.395, 559.836, 23.4794, 0.3322", "330.45, 559.195, 23.3187, 0.287", "329.44, 558.734, 23.0518, 0.2988", "328.397, 558.392, 22.6856, 0.3142", "327.288, 558.274, 22.2757, 0.3736", "326.193, 558.008, 21.8674, 0.3342" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "338.578, 564.376, 25.0351, 0.5784", "338.146, 564.937, 22.9712, 0.2906", "337.208, 565.557, 22.4333, 0.3056", "336.115, 565.889, 21.9834, 0.3266", "335.001, 565.729, 21.5155, 0.3978", "333.939, 565.415, 21.0132, 0.3738", "332.822, 565.578, 20.5358, 0.3994", "331.828, 566.059, 20.0861, 0.335", "331.03, 566.651, 19.6759, 0.3022", "330.61, 567.023, 19.1173, 0.2786", "329.78, 567.414, 18.4649, 0.282", "328.642, 567.424, 17.9614, 0.2882", "327.498, 567.454, 17.5874, 0.301", "326.443, 567.891, 17.3233, 0.3184", "325.538, 568.37, 17.066, 0.3812", "324.405, 568.305, 16.889, 0.3484", "323.327, 568.577, 16.7563, 0.3268", "322.305, 568.964, 16.742, 0.325", "321.302, 569.36, 16.7199, 0.3648", "320.258, 569.804, 16.7297, 0.457", "319.212, 570.063, 16.8924, 0.5398", "318.468, 570.581, 17.2256, 0.4338", "317.509, 571.103, 17.3284, 0.3532", "316.443, 571.481, 17.3561, 0.3282", "315.42, 571.369, 17.2516, 0.3636", "314.696, 571.176, 16.9481, 0.4906", "313.913, 571.993, 16.6611, 0.4282", "313.017, 572.61, 16.3296, 0.3848", "311.938, 572.666, 15.958, 0.4112", "310.845, 572.475, 15.568, 0.3986", "309.762, 572.302, 15.3328, 0.4464", "308.871, 572.389, 15.0371, 0.418", "307.856, 572.127, 14.6759, 0.4746", "306.745, 572.2, 14.3377, 0.5084", "305.782, 572.762, 14.0546, 0.4576" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "352.349, 593.136, 18.8647, 0.4562", "352.37, 593.663, 18.6959, 0.5384", "352.332, 594.795, 18.5324, 0.431", "352.262, 595.928, 18.4489, 0.3496", "352.433, 597.036, 18.4498, 0.3142", "352.893, 598.072, 18.5172, 0.3734", "353.518, 599.003, 18.5433, 0.3338", "354.072, 599.981, 18.5077, 0.3", "354.52, 601.028, 18.4778, 0.2746", "354.716, 602.135, 18.5156, 0.2746", "354.769, 603.261, 18.6304, 0.2746", "354.91, 604.388, 18.779, 0.2746", "354.955, 605.526, 18.9176, 0.2746", "354.827, 606.661, 19.0282, 0.2746", "354.86, 607.787, 19.1506, 0.2748", "355.136, 608.886, 19.2198, 0.2748", "355.433, 609.985, 19.2226, 0.2752", "355.956, 610.935, 19.1195, 0.2756", "355.92, 612.021, 19.0795, 0.2766", "356.137, 613.117, 19.1596, 0.2782", "356.395, 614.23, 19.2609, 0.2814", "356.573, 615.331, 19.462, 0.287", "356.723, 616.323, 19.794, 0.2988", "357.567, 616.999, 19.9766, 0.3142", "357.705, 618.111, 20.0326, 0.3734", "357.524, 619.181, 20.0234, 0.334", "356.803, 619.952, 20.1174, 0.3002", "355.974, 620.58, 20.2448, 0.2748", "355.631, 621.614, 20.4845, 0.275", "355.43, 622.71, 20.7015, 0.2754", "355.174, 623.816, 20.8628, 0.2762", "355.019, 624.932, 21.0319, 0.2778", "354.957, 626.068, 21.1672, 0.2806", "354.819, 627.201, 21.2542, 0.2856", "354.606, 628.326, 21.3088, 0.295", "354.385, 629.448, 21.3559, 0.3132", "354.106, 630.552, 21.3618, 0.342", "353.763, 631.64, 21.3349, 0.42", "353.548, 632.738, 21.3662, 0.4454", "353.609, 633.799, 21.5183, 0.384", "353.639, 634.911, 21.6356, 0.3404", "353.288, 635.85, 21.5174, 0.3752", "352.984, 636.013, 21.0918, 0.337", "353.083, 636.886, 21.0011, 0.3058", "352.585, 637.853, 21.0328, 0.2854", "352.241, 638.684, 20.8309, 0.2946", "352.283, 639.781, 20.6282, 0.3114", "352.009, 640.685, 20.6427, 0.3446", "351.121, 641.158, 20.8253, 0.3952", "350.433, 642.026, 20.8942, 0.5436", "349.935, 643.01, 20.8331, 0.553", "349.389, 644.009, 20.7782, 0.488", "348.698, 644.904, 20.6766, 0.5374", "348.093, 645.77, 20.4459, 0.4924", "347.586, 646.69, 20.1653, 0.3854", "347.044, 647.565, 20.1275, 0.3014", "346.796, 648.512, 20.3776, 0.2772", "346.782, 649.62, 20.7276, 0.2792", "346.907, 650.753, 21.0792, 0.2834", "346.974, 651.892, 21.4043, 0.2906", "347.011, 653.026, 21.7232, 0.3056", "347.03, 654.164, 21.9929, 0.3266", "347.341, 655.231, 22.2617, 0.3976", "347.419, 656.349, 22.5187, 0.3736", "347.264, 657.481, 22.7536, 0.399", "347.093, 658.597, 23.0384, 0.3342", "346.744, 659.668, 23.3699, 0.3006", "346.146, 660.637, 23.6734, 0.2758", "345.478, 661.503, 24.0629, 0.2768", "344.659, 662.124, 24.5848, 0.2788", "343.707, 662.716, 25.0816, 0.2824", "342.848, 663.465, 25.4859, 0.2882", "342.357, 664.491, 25.7835, 0.305", "341.492, 665.236, 26.0039, 0.305", "340.8, 666.125, 26.4228, 0.4576" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "352.349, 593.136, 18.8647, 0.4562", "352.595, 593.866, 19.1181, 0.2288", "353.301, 594.691, 19.3225, 0.321", "354.339, 595.126, 19.3656, 0.386", "355.391, 595.563, 19.4146, 0.3582", "356.396, 595.838, 19.5709, 0.3396", "357.012, 596.5, 19.4365, 0.3738", "357.799, 596.888, 19.1713, 0.3344", "358.68, 597.115, 19.1173, 0.301", "359.74, 597.234, 19.2637, 0.2766", "360.479, 598.029, 19.4186, 0.2782", "361.1, 598.98, 19.6437, 0.2814", "361.37, 600.071, 19.9791, 0.287", "361.923, 600.922, 20.4392, 0.2988", "363.02, 601.174, 20.8359, 0.3142", "363.892, 601.885, 21.2038, 0.3736", "364.449, 602.854, 21.567, 0.3342", "364.87, 603.788, 21.938, 0.3006", "365.83, 604.244, 22.0898, 0.2756", "366.804, 604.661, 22.2295, 0.2766", "367.605, 604.432, 22.5834, 0.2784", "368.7, 604.319, 22.8981, 0.2816", "369.747, 604.292, 23.2618, 0.2876", "370.609, 604.991, 23.5222, 0.2986", "371.452, 605.674, 23.6079, 0.32", "372.31, 606.419, 23.6471, 0.3544", "373.191, 607.135, 23.7115, 0.444", "374.073, 607.849, 23.8112, 0.4848", "374.938, 608.594, 23.9, 0.4824", "375.753, 609.393, 24.026, 0.3988", "376.548, 610.181, 24.2276, 0.3988", "377.155, 611.145, 24.4261, 0.3338", "377.764, 612.109, 24.61, 0.3", "378.723, 612.714, 24.7467, 0.2746", "379.714, 613.284, 24.8416, 0.2746", "380.468, 614.137, 24.8976, 0.2746", "381.184, 615.029, 24.922, 0.2746", "382.094, 615.718, 24.9304, 0.2746", "383.03, 616.376, 24.9309, 0.2746", "383.965, 617.035, 24.9309, 0.2746", "384.901, 617.693, 24.9309, 0.2746", "385.925, 618.2, 24.9309, 0.2746", "386.962, 618.684, 24.9309, 0.2744", "387.894, 619.344, 24.9309, 0.2744", "388.79, 620.056, 24.9309, 0.2742", "389.745, 620.684, 24.9309, 0.274", "390.719, 621.285, 24.9309, 0.2736", "391.827, 621.554, 24.9309, 0.2728", "392.827, 622.103, 24.9309, 0.2712", "393.723, 622.814, 24.9309, 0.2684", "394.371, 623.756, 24.9309, 0.2626", "394.888, 624.775, 24.9309, 0.2542", "395.323, 625.833, 24.9309, 0.2288", "395.571, 626.95, 24.9309, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "348.385, 557.073, 34.239, 0.763", "348.461, 558.667, 34.44, 0.6864", "348.461, 559.811, 35.0627, 0.4442", "348.552, 560.877, 35.3447, 0.3256", "348.928, 561.878, 35.7711, 0.275", "349.208, 562.966, 36.2356, 0.2752", "349.282, 564.102, 36.6674, 0.2758", "349.394, 565.173, 37.1731, 0.2768", "349.832, 566.184, 37.6967, 0.2786", "350.368, 567.179, 38.1847, 0.2822", "350.913, 568.173, 38.6361, 0.2886", "351.386, 569.196, 39.0754, 0.3006", "352.071, 570.101, 39.4509, 0.3224", "352.887, 570.719, 39.9084, 0.3652", "353.406, 571.642, 40.3589, 0.4338", "354.449, 572.078, 40.6311, 0.6124", "355.408, 572.668, 40.7828, 0.6946", "356.188, 573.505, 40.8968, 0.682", "356.961, 574.322, 41.0298, 0.5442", "357.846, 574.945, 41.2392, 0.387", "358.83, 575.488, 41.3969, 0.3042", "359.633, 576.129, 41.6312, 0.2822", "359.919, 577.169, 41.9476, 0.2888", "360.391, 578.117, 42.2722, 0.3008", "361.176, 578.893, 42.4245, 0.3238", "362.146, 579.438, 42.4239, 0.3628", "363.083, 580.066, 42.3752, 0.453", "363.984, 580.755, 42.2752, 0.5326", "364.929, 581.386, 42.184, 0.4206", "365.867, 582.02, 42.1851, 0.329", "366.825, 582.624, 42.2694, 0.2814", "367.839, 583.127, 42.3338, 0.287", "368.811, 583.702, 42.3592, 0.2988", "369.692, 584.43, 42.3814, 0.3142", "370.567, 585.142, 42.4432, 0.3734", "371.338, 585.96, 42.5121, 0.334", "371.968, 586.905, 42.5866, 0.3002", "372.361, 587.958, 42.6611, 0.275", "372.961, 588.856, 42.646, 0.2752", "373.632, 589.742, 42.5194, 0.2758", "374.173, 590.741, 42.366, 0.2768", "374.722, 591.744, 42.2254, 0.2788", "375.007, 592.785, 42.0171, 0.2826", "375.482, 593.777, 41.8975, 0.289", "376.056, 594.755, 41.8914, 0.3026", "376.733, 595.673, 41.9286, 0.3212", "377.41, 596.591, 41.9975, 0.3864", "378.077, 597.51, 42.1019, 0.3592", "378.791, 598.38, 42.117, 0.3416", "379.558, 599.229, 42.1019, 0.377" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "348.385, 557.073, 34.239, 0.763", "348.754, 556.098, 33.9595, 0.6154" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "375.741, 568.793, 20.1561, 0.3172", "376.631, 569.238, 20.2734, 0.3792", "377.463, 569.977, 20.4207, 0.3446", "378.331, 570.699, 20.5377, 0.3196", "379.348, 571.214, 20.6217, 0.3116", "380.398, 571.667, 20.6735, 0.339", "381.436, 572.148, 20.7152, 0.4144", "382.414, 572.705, 20.8034, 0.4356", "383.2, 573.493, 20.8922, 0.3644", "383.999, 574.278, 20.9171, 0.3096", "384.87, 574.984, 20.886, 0.2922", "385.745, 575.655, 20.9437, 0.3082", "386.677, 576.15, 21.1719, 0.3316", "387.725, 576.502, 21.4404, 0.4068", "388.719, 577.026, 21.7333, 0.3904", "389.644, 577.688, 21.987, 0.4316", "390.573, 578.33, 22.0875, 0.389", "391.476, 579.018, 22.066, 0.4286", "392.421, 579.645, 22.0027, 0.384", "393.248, 580.308, 21.9562, 0.4182", "394.19, 580.882, 21.8515, 0.3708", "395.089, 581.581, 21.7857, 0.3642", "395.896, 582.38, 21.7031, 0.4138", "396.6, 583.267, 21.6308, 0.4344", "397.235, 584.16, 21.497, 0.3624", "397.872, 585.074, 21.3321, 0.3056", "398.61, 585.932, 21.2514, 0.285", "399.407, 586.748, 21.205, 0.2938", "400.315, 587.433, 21.1896, 0.3112", "401.013, 588.3, 21.1212, 0.3384", "401.452, 589.331, 20.9905, 0.4132", "401.847, 590.393, 20.8331, 0.4332", "402.243, 591.465, 20.7043, 0.36", "402.613, 592.547, 20.6293, 0.3014", "402.983, 593.63, 20.6083, 0.2772", "403.354, 594.712, 20.6399, 0.2792", "403.725, 595.793, 20.7116, 0.2834", "404.106, 596.872, 20.8074, 0.2906", "405.022, 597.555, 20.9266, 0.3056" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "375.741, 568.793, 20.1561, 0.3172", "376.031, 568.598, 20.1925, 0.2288", "376.931, 567.99, 20.5428, 0.374", "377.922, 567.431, 20.6531, 0.335", "378.926, 566.907, 20.6707, 0.302", "379.939, 566.375, 20.6805, 0.2782", "380.621, 565.485, 20.7432, 0.2814", "381.084, 564.446, 20.7351, 0.2872", "381.386, 563.405, 20.5811, 0.299", "381.766, 562.33, 20.4926, 0.3146", "382.282, 561.339, 20.5036, 0.3746", "382.811, 560.335, 20.5408, 0.336", "383.27, 559.291, 20.578, 0.3038", "383.682, 558.229, 20.5638, 0.2816", "384.076, 557.162, 20.4859, 0.2874", "384.471, 556.094, 20.3451, 0.2994", "384.865, 555.026, 20.167, 0.3152", "385.312, 554.007, 19.9329, 0.3754", "386.062, 553.316, 19.6008, 0.3376", "386.996, 553.244, 19.5678, 0.3068", "387.942, 552.869, 19.7257, 0.287", "388.736, 552.058, 19.84, 0.2988", "389.343, 551.154, 19.7576, 0.3142", "389.91, 550.281, 19.4723, 0.3734", "390.745, 549.613, 19.0557, 0.3338" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "369.509, 579.746, 15.0875, 0.3806", "370.385, 579.992, 15.0444, 0.412", "371.279, 580.57, 15.1948, 0.3594", "372.203, 581.109, 15.4703, 0.342", "373.252, 581.348, 15.531, 0.3782", "374.289, 581.67, 15.4112, 0.3428", "375.395, 581.954, 15.2396, 0.3162", "376.237, 582.663, 14.9464, 0.3056" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "369.509, 579.746, 15.0875, 0.3806", "369.291, 580.92, 14.1764, 0.2288", "369.767, 581.898, 14.1196, 0.3006", "370.488, 582.748, 14.0272, 0.325", "371.012, 583.75, 13.8961, 0.3576", "370.964, 584.879, 13.7214, 0.4798", "370.549, 585.932, 13.5232, 0.4068", "370.334, 587.052, 13.3916, 0.3518", "370.335, 588.193, 13.3048, 0.3184", "370.491, 589.313, 13.1998, 0.3814", "370.765, 590.423, 13.1382, 0.3484", "371.13, 591.495, 13.1446, 0.328", "371.523, 592.551, 13.0813, 0.3214", "371.745, 593.624, 12.9839, 0.3866", "371.572, 594.671, 13.0351, 0.3594", "371.453, 595.807, 13.0567, 0.342", "371.33, 596.938, 13.0382, 0.3778", "371.269, 598.004, 12.9433, 0.342", "371.44, 599.005, 12.7602, 0.315", "372.047, 599.935, 12.6708, 0.3034", "371.863, 600.899, 12.5885, 0.3228", "371.707, 602.019, 12.4992, 0.3892", "371.589, 603.153, 12.3808, 0.3644", "371.484, 604.278, 12.2038, 0.3502", "371.332, 605.373, 11.94, 0.3982", "371.031, 606.32, 11.5186, 0.356", "370.809, 607.34, 11.2437, 0.4576" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "326.193, 558.008, 21.8674, 0.3342", "325.962, 557.574, 21.5723, 0.3008", "325.412, 556.588, 21.3696, 0.276", "324.83, 555.707, 21.1294, 0.2772", "324.483, 554.773, 20.9392, 0.2794", "324.158, 554.239, 21.1126, 0.2836", "323.915, 553.359, 21.4326, 0.291", "323.229, 552.797, 21.9201, 0.3064", "322.826, 551.737, 22.2723, 0.328", "322.225, 550.767, 22.5459, 0.4002", "321.756, 549.729, 22.689, 0.3784", "321.315, 548.888, 22.6979, 0.408", "321.243, 548.538, 22.4941, 0.3506", "320.893, 547.769, 22.5285, 0.3322", "320.215, 547.032, 22.5106, 0.3288", "319.538, 546.114, 22.5184, 0.4016", "318.822, 545.224, 22.5562, 0.3808", "318.149, 544.302, 22.6114, 0.4124", "317.43, 543.431, 22.6985, 0.36", "316.817, 542.526, 22.6237, 0.3432", "316.211, 541.594, 22.5616, 0.3804", "316.021, 541.007, 22.4762, 0.3464", "315.568, 540.3, 22.3524, 0.3244", "315.836, 539.806, 22.0926, 0.3144", "315.467, 538.887, 22.0531, 0.3742", "315.165, 537.787, 22.0217, 0.3352", "314.642, 536.814, 22.0279, 0.3024", "314.208, 536.037, 22.2496, 0.2788", "313.766, 535.466, 22.3406, 0.2826", "313.21, 534.56, 22.3073, 0.2896", "312.559, 533.651, 22.2138, 0.3018", "311.698, 533.192, 22.3434, 0.3272", "311.264, 532.42, 22.7326, 0.3618", "310.479, 531.718, 22.9799, 0.4872", "309.545, 531.067, 23.2641, 0.422", "308.654, 530.368, 23.5738, 0.3736", "307.802, 529.669, 23.8655, 0.3894", "306.836, 529.219, 24.1559, 0.3646", "306.327, 528.6, 24.2802, 0.3516", "305.261, 528.26, 24.4208, 0.3958", "304.423, 527.841, 24.6347, 0.3752", "303.526, 527.175, 24.8674, 0.3782", "302.595, 526.519, 25.0202, 0.4114", "301.693, 525.821, 25.1454, 0.5686", "300.889, 525.017, 25.2538, 0.624", "300.064, 524.241, 25.3722, 0.4998", "299.118, 523.74, 25.529, 0.4554", "298.153, 523.549, 25.8944, 0.386", "297.302, 523.163, 26.1478, 0.4234", "296.281, 522.752, 26.348, 0.374", "295.296, 522.261, 26.6386, 0.4", "294.254, 521.83, 26.8646, 0.3358", "293.138, 521.884, 27.1074, 0.3036", "292.163, 521.579, 27.4725, 0.2814", "291.034, 521.718, 27.8118, 0.287", "289.908, 521.733, 28.1512, 0.2988", "288.772, 521.693, 28.4306, 0.3142", "287.657, 521.573, 28.6829, 0.3736", "286.521, 521.678, 28.8198, 0.334", "285.383, 521.643, 28.8714, 0.3002", "284.267, 521.411, 28.9058, 0.2752", "283.188, 521.037, 28.9568, 0.2756", "282.107, 520.672, 29.0032, 0.2766", "280.997, 520.479, 29.05, 0.2782", "279.866, 520.496, 29.1827, 0.2814", "278.739, 520.43, 29.3751, 0.287", "277.633, 520.203, 29.6086, 0.2988", "276.528, 519.945, 29.8404, 0.3142", "275.402, 519.802, 30.014, 0.3734", "274.262, 519.838, 30.1431, 0.334", "273.126, 519.778, 30.2641, 0.3", "272.006, 519.562, 30.3764, 0.2746", "270.886, 519.327, 30.4735, 0.2748", "269.752, 519.216, 30.571, 0.2748", "268.614, 519.14, 30.688, 0.2752", "267.486, 519.021, 30.8552, 0.2756", "266.357, 518.987, 31.0783, 0.2766", "265.218, 518.987, 31.316, 0.2782", "264.075, 518.987, 31.5459, 0.2814", "262.939, 518.987, 31.7926, 0.287", "261.803, 518.987, 32.0446, 0.2988", "260.662, 518.986, 32.2792, 0.3142", "259.542, 518.852, 32.5324, 0.3734", "258.439, 518.567, 32.7712, 0.3338", "257.362, 518.299, 33.0523, 0.3", "256.304, 518.047, 33.4071, 0.2746", "255.237, 517.749, 33.7742, 0.2746", "254.188, 517.326, 34.0474, 0.2746", "253.153, 516.846, 34.1925, 0.2746", "252.116, 516.365, 34.2317, 0.2746", "251.081, 515.885, 34.1782, 0.2746", "250.026, 515.453, 34.0564, 0.2746", "248.941, 515.107, 33.9447, 0.2746", "247.877, 514.699, 33.8422, 0.2746", "246.778, 514.475, 33.6991, 0.2746", "245.652, 514.382, 33.5115, 0.2746", "244.521, 514.312, 33.308, 0.2746", "243.379, 514.291, 33.1366, 0.2746", "242.235, 514.291, 33.0092, 0.2746", "241.091, 514.291, 32.9255, 0.2746", "239.947, 514.291, 32.8812, 0.2746", "238.803, 514.291, 32.8644, 0.2746", "237.659, 514.291, 32.8608, 0.2746", "236.515, 514.291, 32.8597, 0.2746", "235.371, 514.291, 32.8583, 0.2746", "234.256, 514.495, 32.856, 0.2746", "233.16, 514.825, 32.8532, 0.2746", "232.081, 515.204, 32.849, 0.2746", "231.015, 515.619, 32.8432, 0.2746", "230.004, 516.146, 32.835, 0.2746", "229.08, 516.818, 32.8236, 0.2746", "228.195, 517.542, 32.8076, 0.2746", "227.321, 518.28, 32.7852, 0.2746", "226.45, 519.023, 32.7538, 0.2746", "225.58, 519.765, 32.711, 0.2746", "224.67, 520.457, 32.6508, 0.2746", "223.711, 521.078, 32.5629, 0.2746", "222.695, 521.601, 32.4394, 0.2746", "221.626, 522.006, 32.2781, 0.2746", "220.535, 522.347, 32.0802, 0.2746", "219.523, 522.647, 31.7232, 0.2746", "218.712, 522.94, 31.1276, 0.2744", "217.865, 523.569, 30.5486, 0.2744", "216.787, 523.869, 30.0992, 0.2742", "215.646, 523.909, 29.78, 0.274", "214.51, 524.033, 29.5798, 0.2736", "213.843, 524.871, 29.4862, 0.2728", "213.658, 525.995, 29.4652, 0.2712", "212.693, 526.563, 29.4638, 0.2684", "211.614, 526.944, 29.4638, 0.2626", "210.805, 527.749, 29.4638, 0.2542", "210.063, 528.618, 29.4638, 0.2288", "209.231, 529.404, 29.4638, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "326.193, 558.008, 21.8674, 0.3342", "325.402, 558.104, 20.4257, 0.2288", "324.497, 557.431, 20.8076, 0.2912", "323.727, 556.75, 21.0745, 0.3052", "322.768, 556.144, 21.3486, 0.3322", "321.882, 555.421, 21.5718, 0.378", "320.999, 554.765, 21.7535, 0.4824", "319.861, 554.864, 21.8725, 0.5816", "318.725, 554.754, 21.9517, 0.5368", "317.605, 554.647, 22.0212, 0.4214", "316.495, 554.468, 21.9948, 0.3636", "315.363, 554.363, 21.9705, 0.413", "314.31, 553.949, 21.94, 0.4328", "313.343, 553.352, 21.8954, 0.3594", "312.384, 552.859, 21.7616, 0.3", "311.424, 552.44, 21.6644, 0.2746", "310.688, 551.985, 21.8896, 0.2746", "309.846, 551.655, 22.0931, 0.2746", "308.768, 551.353, 22.2748, 0.2748", "307.703, 551.226, 22.5935, 0.275", "306.64, 550.827, 22.8782, 0.2754", "305.524, 550.584, 23.0896, 0.276", "304.395, 550.6, 23.2686, 0.2772", "303.614, 550.384, 23.5701, 0.2794", "302.759, 550.275, 23.6726, 0.2836", "301.996, 551.002, 23.8406, 0.291", "301.013, 551.096, 23.9378, 0.3062", "300.098, 550.456, 23.9971, 0.3278", "299.107, 549.913, 23.9571, 0.4", "298.02, 549.62, 23.8328, 0.3778", "296.901, 549.421, 23.6964, 0.4068", "295.778, 549.373, 23.651, 0.3484", "294.668, 549.622, 23.6648, 0.328", "293.542, 549.477, 23.6468, 0.3214", "292.469, 549.08, 23.6482, 0.3868", "291.357, 548.813, 23.6692, 0.3598", "290.255, 548.508, 23.6928, 0.3426", "289.269, 547.929, 23.7154, 0.3792", "288.206, 547.507, 23.7502, 0.3444", "287.099, 547.212, 23.8011, 0.3194", "285.962, 547.087, 23.8622, 0.3116", "284.917, 546.674, 24.008, 0.339", "283.802, 546.529, 24.2211, 0.4144", "282.741, 546.167, 24.3256, 0.4354" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "379.558, 599.229, 42.1019, 0.377", "379.357, 599.577, 42.0848, 0.3408", "378.91, 600.599, 42.0479, 0.3124", "378.567, 601.674, 41.904, 0.2988", "378.248, 602.76, 41.727, 0.3142", "378.125, 603.882, 41.5444, 0.3734", "378.311, 604.99, 41.3462, 0.3338", "378.621, 605.69, 40.992, 0.3", "379.235, 605.994, 40.4533, 0.2746", "379.844, 606.938, 40.0397, 0.2746", "379.987, 608.073, 39.7323, 0.2746", "380.174, 609.201, 39.5209, 0.2746", "380.331, 610.332, 39.3977, 0.2746", "380.331, 611.476, 39.3532, 0.2746", "380.457, 612.571, 39.3532, 0.2746", "381.314, 613.304, 39.3532, 0.2746", "381.919, 614.088, 39.3529, 0.2746", "382.114, 615.195, 39.3529, 0.2746", "382.634, 616.21, 39.3529, 0.2746", "383.075, 617.249, 39.3529, 0.2746", "383.257, 618.374, 39.3526, 0.2746", "383.305, 619.516, 39.3523, 0.2746", "383.305, 620.66, 39.352, 0.2746", "383.305, 621.804, 39.3515, 0.2746", "383.305, 622.948, 39.3509, 0.2746", "383.305, 624.092, 39.3501, 0.2746", "383.305, 625.236, 39.349, 0.2746", "383.305, 626.38, 39.3473, 0.2746", "383.305, 627.524, 39.345, 0.2746", "383.305, 628.668, 39.3417, 0.2746", "383.305, 629.812, 39.3369, 0.2746", "383.305, 630.956, 39.3308, 0.2746", "383.305, 632.1, 39.3218, 0.2746", "383.305, 633.244, 39.3092, 0.2746", "383.305, 634.388, 39.2916, 0.2746", "383.305, 635.532, 39.2672, 0.2746", "383.305, 636.676, 39.2333, 0.2746", "383.305, 637.82, 39.1849, 0.2746", "383.305, 638.964, 39.1154, 0.2746", "383.305, 640.108, 39.0219, 0.2746", "383.305, 641.252, 38.9038, 0.2746", "383.334, 642.385, 38.7226, 0.2746", "383.422, 643.461, 38.4132, 0.2746", "383.508, 644.542, 38.024, 0.2746", "383.597, 645.671, 37.6788, 0.2746", "384.004, 646.706, 37.4226, 0.2746", "384.515, 647.722, 37.2492, 0.2746", "384.939, 648.785, 37.1504, 0.2746", "385.232, 649.885, 37.1118, 0.2746", "385.425, 651.013, 37.1045, 0.2746", "385.613, 652.141, 37.1045, 0.2746", "385.768, 653.274, 37.1045, 0.2744", "385.854, 654.414, 37.1045, 0.2744", "386.341, 655.375, 37.1045, 0.2742", "386.84, 656.376, 37.1045, 0.274", "387.066, 657.493, 37.1045, 0.2736", "387.448, 658.56, 37.1045, 0.2728", "387.972, 659.577, 37.1045, 0.2712", "388.281, 660.667, 37.1045, 0.2684", "388.688, 661.729, 37.1045, 0.2626", "389.474, 662.542, 37.1045, 0.2542", "390.382, 663.237, 37.1045, 0.2288", "390.399, 664.381, 37.1045, 0.2288" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "379.558, 599.229, 42.1019, 0.377", "380.335, 599.915, 41.883, 0.2288", "381.183, 600.506, 42.8218, 0.3858", "382.081, 601.19, 43.1925, 0.358", "383.102, 601.683, 43.5498, 0.3396", "384.068, 602.254, 43.9376, 0.3734", "384.929, 602.975, 44.3853, 0.3338", "385.865, 603.611, 44.8395, 0.3", "386.545, 604.348, 45.3729, 0.2746", "387.603, 604.749, 45.9133, 0.2746", "388.505, 605.289, 46.529, 0.2746", "389.222, 605.596, 47.3584, 0.2746", "389.957, 605.971, 48.2462, 0.2746", "390.851, 606.685, 48.9101, 0.2746", "391.797, 607.327, 49.3716, 0.2746", "392.844, 607.787, 49.6664, 0.2746", "393.908, 608.208, 49.8179, 0.2746", "395.02, 608.474, 49.8621, 0.2746", "396.133, 608.737, 49.8621, 0.2746", "397.176, 609.206, 49.8621, 0.2746", "398.2, 609.716, 49.8621, 0.2746", "399.146, 610.361, 49.8621, 0.2746", "400.061, 611.046, 49.8621, 0.2746", "401.092, 611.541, 49.8621, 0.2746", "402.154, 611.967, 49.8621, 0.2746", "403.235, 612.342, 49.8621, 0.2746", "404.326, 612.685, 49.8621, 0.2746", "405.427, 612.997, 49.8621, 0.2746", "406.54, 613.26, 49.8621, 0.2746", "407.652, 613.528, 49.8621, 0.2746", "408.703, 613.98, 49.8621, 0.2746", "409.753, 614.434, 49.8621, 0.2746", "410.824, 614.837, 49.8621, 0.2746", "411.896, 615.234, 49.8621, 0.2746", "413.0, 615.535, 49.8621, 0.2744", "414.114, 615.797, 49.8621, 0.2744", "415.21, 616.123, 49.8621, 0.2742", "416.273, 616.547, 49.8621, 0.274", "417.355, 616.918, 49.8621, 0.2736", "418.483, 617.107, 49.8621, 0.2728", "419.612, 617.295, 49.8621, 0.2712", "420.755, 617.332, 49.8621, 0.2684", "421.899, 617.332, 49.8621, 0.2626", "423.043, 617.332, 49.8621, 0.2542", "424.187, 617.332, 49.8621, 0.2288", "425.331, 617.332, 49.8621, 0.2288" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "348.754, 556.098, 33.9595, 0.6154", "349.473, 556.007, 32.6497, 0.6864", "350.568, 555.793, 32.1997, 0.5052", "351.7, 555.901, 32.0253, 0.4638", "352.798, 556.215, 31.8606, 0.4094", "353.879, 556.59, 31.7008, 0.4302", "354.89, 557.125, 31.5392, 0.5628", "355.903, 557.654, 31.3653, 0.5822", "356.983, 557.976, 31.1228, 0.5728", "357.894, 558.477, 30.7166, 0.5462", "358.834, 559.121, 30.3425, 0.5424", "359.759, 559.792, 30.0034, 0.5428", "360.813, 560.211, 29.6604, 0.5078", "361.9, 560.561, 29.3532, 0.6156", "362.877, 561.089, 29.0108, 0.6646", "363.886, 561.456, 28.6062, 0.5722", "364.945, 561.838, 28.3576, 0.6034", "365.856, 562.5, 28.0952, 0.5932" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "348.754, 556.098, 33.9595, 0.6154", "348.814, 554.504, 33.4916, 0.4444", "348.882, 553.371, 33.1262, 0.3162", "349.147, 552.26, 32.9174, 0.3048", "349.468, 551.191, 32.9322, 0.3304", "349.668, 550.15, 33.1904, 0.3796", "349.696, 549.027, 33.5317, 0.4614", "349.559, 547.893, 33.8464, 0.6584", "349.377, 546.763, 34.0995, 0.8054", "349.594, 545.647, 34.2955, 0.7636", "350.015, 544.584, 34.4478, 0.6106", "350.679, 543.655, 34.5822, 0.4648", "351.309, 542.701, 34.7376, 0.4402", "351.439, 541.605, 34.9989, 0.575", "351.242, 540.556, 35.3903, 0.6358", "351.474, 539.451, 35.784, 0.5228", "351.814, 538.362, 36.0906, 0.4926", "352.028, 537.273, 36.2578, 0.481", "352.261, 536.154, 36.4434, 0.474", "352.532, 535.161, 36.8026, 0.3896", "352.948, 534.134, 37.2221, 0.351", "353.64, 533.224, 37.6183, 0.3944", "354.037, 532.185, 38.0708, 0.3738", "354.506, 531.156, 38.5106, 0.3696", "354.906, 530.103, 38.925, 0.424", "355.491, 529.13, 39.2787, 0.4532" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "405.022, 597.555, 20.9266, 0.3056", "404.31, 597.663, 21.1025, 0.3266", "403.401, 598.263, 21.226, 0.3976", "402.725, 599.156, 21.4155, 0.3734", "402.178, 600.15, 21.6199, 0.3988", "401.45, 601.024, 21.8263, 0.334", "400.902, 601.982, 22.0161, 0.3002", "400.897, 603.092, 22.1777, 0.2748", "401.024, 604.191, 22.3714, 0.275", "400.724, 605.252, 22.4952, 0.2754", "400.258, 606.291, 22.5271, 0.2762", "399.82, 607.339, 22.5501, 0.2776", "399.352, 608.355, 22.4837, 0.2802", "398.692, 609.279, 22.407, 0.285", "398.336, 610.358, 22.318, 0.2938", "397.955, 611.417, 22.1603, 0.3112", "397.716, 612.516, 22.0203, 0.3384", "397.033, 613.429, 21.8859, 0.4132", "396.588, 614.481, 21.7658, 0.433", "396.108, 615.516, 21.6513, 0.3598", "395.8, 616.6, 21.5309, 0.301", "395.743, 617.739, 21.4897, 0.2766", "395.584, 618.791, 21.4329, 0.2782", "395.392, 619.558, 21.3623, 0.2814", "395.035, 620.549, 21.4878, 0.287", "394.109, 621.131, 21.6266, 0.2988", "393.44, 621.992, 21.7375, 0.3142", "393.003, 622.911, 22.0452, 0.3736", "392.755, 623.998, 22.4039, 0.3342", "392.688, 625.132, 22.7203, 0.3006", "392.688, 626.276, 22.9614, 0.2756", "392.688, 627.42, 23.161, 0.2766", "392.652, 628.563, 23.3338, 0.2782", "391.882, 629.097, 23.4872, 0.2814", "390.821, 629.509, 23.6662, 0.287", "390.005, 630.279, 23.889, 0.2988", "389.738, 631.347, 24.208, 0.3142", "389.255, 631.886, 24.8186, 0.3734", "389.255, 632.937, 25.5094, 0.3338", "389.477, 633.993, 26.1881, 0.3", "389.652, 635.108, 26.7411, 0.2746", "389.705, 636.25, 27.1281, 0.2746", "389.713, 637.393, 27.3591, 0.2746", "389.764, 638.536, 27.463, 0.2746", "390.243, 639.541, 27.5055, 0.2746", "390.958, 640.422, 27.4907, 0.2746", "391.638, 641.292, 27.4, 0.2746", "391.774, 642.377, 27.3843, 0.2746", "391.922, 643.456, 27.5492, 0.2746", "392.0, 644.588, 27.7623, 0.2746", "392.178, 645.694, 28.0706, 0.2746", "392.223, 646.821, 28.4332, 0.2746", "392.229, 647.955, 28.8103, 0.2746", "392.114, 649.068, 29.1964, 0.2746", "391.88, 650.139, 29.6008, 0.2746", "391.684, 651.259, 29.9118, 0.2746", "391.473, 652.383, 30.1227, 0.2746", "390.889, 653.327, 30.2551, 0.2746", "389.967, 653.982, 30.3274, 0.2746", "389.547, 654.985, 30.3554, 0.2746", "389.308, 656.103, 30.3582, 0.2746", "388.928, 657.181, 30.3582, 0.2746", "388.794, 658.311, 30.3582, 0.2744", "388.365, 659.363, 30.3582, 0.2744", "387.758, 660.331, 30.3582, 0.2742", "387.465, 661.427, 30.3582, 0.274", "386.434, 661.753, 30.3582, 0.2736", "386.052, 662.789, 30.3582, 0.2728", "386.027, 663.933, 30.3582, 0.2712", "385.907, 665.071, 30.3582, 0.2684", "385.846, 666.213, 30.3582, 0.2626", "385.823, 667.357, 30.3582, 0.2542", "385.823, 668.501, 30.3582, 0.2288", "385.823, 669.645, 30.3582, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "405.022, 597.555, 20.9266, 0.3056", "406.128, 597.99, 20.3641, 0.2288", "407.119, 598.542, 20.3353, 0.2748", "408.082, 599.155, 20.3454, 0.2752", "409.132, 599.575, 20.3252, 0.2756", "410.231, 599.892, 20.2784, 0.2766", "411.329, 600.211, 20.225, 0.2782", "412.427, 600.531, 20.1687, 0.2814", "413.548, 600.595, 20.069, 0.287", "414.683, 600.523, 19.9424, 0.2988", "415.825, 600.49, 19.8335, 0.3142", "416.969, 600.498, 19.754, 0.3736", "418.105, 600.522, 19.6986, 0.3342", "419.187, 600.184, 19.686, 0.3006", "420.183, 599.668, 19.7338, 0.2756", "421.125, 599.037, 19.759, 0.2766", "421.977, 598.294, 19.679, 0.2782", "422.991, 597.83, 19.4373, 0.2814", "424.075, 597.552, 19.061, 0.287", "425.153, 597.344, 18.5503, 0.2988", "426.285, 597.288, 18.0135, 0.3142", "427.361, 597.319, 17.4513, 0.3734", "428.093, 597.407, 16.7146, 0.3338", "428.584, 597.178, 15.8659, 0.3", "429.335, 596.781, 15.2972, 0.2746", "430.015, 596.927, 15.2888, 0.2746", "431.09, 596.951, 15.4568, 0.2746", "432.192, 597.147, 15.736, 0.2746", "433.231, 597.483, 15.8869, 0.2746", "434.318, 597.797, 16.0238, 0.2748", "435.396, 598.113, 16.121, 0.275", "436.514, 598.222, 16.0308, 0.2754", "437.628, 598.293, 15.8175, 0.276", "438.746, 598.449, 15.5534, 0.2772", "439.862, 598.655, 15.2883, 0.2796", "441.0, 598.746, 15.0405, 0.2838", "442.141, 598.696, 14.8467, 0.2914", "443.284, 598.639, 14.7146, 0.307", "444.424, 598.534, 14.6224, 0.3292", "445.561, 598.415, 14.544, 0.4024", "446.705, 598.389, 14.4598, 0.3822", "447.819, 598.637, 14.355, 0.415", "448.933, 598.899, 14.2215, 0.3648", "449.948, 599.372, 13.9793, 0.352", "450.963, 599.839, 13.6478, 0.3976", "452.079, 599.989, 13.277, 0.3734", "453.199, 600.126, 12.889, 0.3986", "454.312, 600.328, 12.5079, 0.3336", "455.424, 600.541, 12.147, 0.2994", "456.561, 600.606, 11.8476, 0.2736", "457.704, 600.608, 11.6138, 0.2728", "458.847, 600.608, 11.4352, 0.2712", "459.982, 600.608, 11.2734, 0.2684", "461.084, 600.608, 11.069, 0.2626", "462.129, 601.007, 11.0188, 0.2542", "462.944, 601.768, 11.0972, 0.2288", "463.87, 602.44, 11.3322, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "390.745, 549.613, 19.0557, 0.3338", "391.047, 549.54, 18.2675, 0.2288", "392.024, 549.029, 18.2787, 0.2746", "392.896, 548.37, 18.3277, 0.2746", "393.686, 547.723, 18.3128, 0.2744", "394.035, 546.977, 18.3688, 0.2744", "394.312, 546.26, 18.2608, 0.2742", "394.632, 545.352, 18.1216, 0.274", "394.689, 544.535, 18.2742, 0.2736", "394.492, 544.047, 18.1591, 0.2728", "394.633, 543.233, 17.8881, 0.2712", "394.605, 542.141, 17.6061, 0.2684", "394.626, 541.064, 17.5302, 0.2626", "395.098, 540.13, 17.6618, 0.2542", "395.681, 539.148, 17.7962, 0.2288", "396.284, 538.179, 18.0874, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "390.745, 549.613, 19.0557, 0.3338", "391.644, 549.463, 18.6659, 0.3", "392.772, 549.271, 18.3478, 0.2746", "393.899, 549.079, 18.1275, 0.2746", "395.027, 548.887, 17.9964, 0.2746", "396.155, 548.694, 17.9239, 0.2746", "397.283, 548.502, 17.8744, 0.2746", "398.406, 548.297, 17.8214, 0.2746", "399.473, 547.893, 17.7461, 0.2746", "400.423, 547.36, 17.6002, 0.2746", "401.045, 546.412, 17.505, 0.2746", "401.741, 545.547, 17.4541, 0.2746", "402.664, 544.957, 17.4135, 0.2746", "403.253, 544.377, 17.1136, 0.2746", "403.563, 543.89, 16.5556, 0.2746", "404.133, 543.328, 16.0608, 0.2746", "404.939, 542.812, 16.0107, 0.2746", "405.715, 542.347, 16.3612, 0.2746", "406.49, 541.883, 17.0164, 0.2746", "407.347, 541.25, 17.7484, 0.2746", "408.245, 540.559, 18.4044, 0.2746", "409.06, 539.818, 18.9532, 0.2746", "409.251, 538.728, 19.2195, 0.2746", "409.692, 537.696, 19.2296, 0.2748", "410.168, 536.677, 19.0596, 0.2748", "410.773, 535.711, 18.8768, 0.2752", "411.188, 534.695, 18.5923, 0.2758", "411.461, 533.591, 18.3719, 0.2768", "411.929, 532.638, 18.1138, 0.2786", "412.602, 532.326, 17.6778, 0.282", "413.054, 531.545, 17.6252, 0.2884", "413.11, 530.66, 17.8556, 0.2996", "412.857, 529.579, 18.0603, 0.3232", "412.813, 528.467, 18.193, 0.3544", "412.917, 527.357, 18.3946, 0.4736", "413.172, 526.242, 18.576, 0.3954", "413.482, 525.141, 18.6816, 0.3296", "413.692, 524.018, 18.7734, 0.2824", "414.002, 522.96, 18.9655, 0.2882", "414.163, 521.873, 19.2234, 0.305", "414.624, 520.836, 19.4345, 0.305", "414.271, 519.902, 19.1145, 0.4576" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "376.237, 582.663, 14.9464, 0.3056", "376.499, 582.32, 14.7843, 0.3266", "377.478, 581.856, 14.7129, 0.3978", "378.555, 581.878, 14.5606, 0.3738", "379.63, 582.255, 14.4544, 0.3994", "380.763, 582.294, 14.4253, 0.335", "381.774, 582.272, 14.4082, 0.302", "382.295, 582.589, 14.5631, 0.2782", "383.121, 582.224, 14.4682, 0.2812", "384.013, 581.915, 14.3158, 0.287", "385.104, 582.05, 14.1162, 0.2976", "385.859, 581.62, 14.03, 0.3168", "386.749, 581.747, 14.1246, 0.3548", "387.818, 581.778, 14.0087, 0.4146", "388.87, 581.839, 13.7323, 0.5758", "389.979, 581.839, 13.3717, 0.631", "391.093, 581.792, 12.9581, 0.544", "392.186, 581.618, 12.4992, 0.3866", "393.233, 581.708, 12.1061, 0.3034", "394.1, 582.388, 11.9344, 0.281", "395.062, 582.874, 11.8692, 0.2864", "396.115, 583.258, 11.7636, 0.2964", "397.188, 583.589, 11.6231, 0.316", "398.319, 583.692, 11.4929, 0.3472", "399.463, 583.71, 11.3725, 0.4296", "400.598, 583.832, 11.2546, 0.4634", "401.72, 584.05, 11.153, 0.4182", "402.843, 584.263, 11.0538, 0.3984", "403.96, 584.425, 10.913, 0.509", "405.086, 584.491, 10.7332, 0.4572", "406.18, 584.245, 10.5795, 0.4644", "407.256, 583.856, 10.481, 0.4336", "408.376, 583.696, 10.4359, 0.361", "409.519, 583.659, 10.4401, 0.3032", "410.661, 583.629, 10.5031, 0.2804", "411.783, 583.62, 10.6548, 0.2854", "412.903, 583.741, 10.843, 0.2942", "414.01, 584.013, 10.9987, 0.3122", "415.067, 584.441, 11.1031, 0.339", "416.092, 584.912, 11.1126, 0.4206", "417.184, 585.011, 11.163, 0.4168", "417.967, 585.729, 11.1314, 0.475", "418.901, 586.355, 11.0984, 0.4964", "419.903, 586.901, 11.1261, 0.4978", "421.005, 587.113, 11.2252, 0.4582", "422.141, 587.04, 11.3498, 0.3594", "423.248, 587.203, 11.5273, 0.3", "424.362, 587.439, 11.7116, 0.2746", "425.473, 587.688, 11.9106, 0.2746", "426.585, 587.934, 12.1176, 0.2746", "427.538, 588.427, 12.1811, 0.2746", "428.274, 589.248, 12.1738, 0.2746", "428.832, 590.2, 12.3094, 0.2748", "429.621, 590.509, 12.7338, 0.2748", "430.469, 590.021, 13.3067, 0.275", "431.587, 589.869, 13.7449, 0.2756", "432.501, 589.482, 13.909, 0.2764", "433.528, 588.993, 14.0868, 0.278", "434.613, 588.909, 14.3212, 0.2808", "435.513, 589.488, 14.6266, 0.2862", "436.383, 590.223, 14.9022, 0.2958", "437.377, 590.734, 15.2009, 0.3148", "438.478, 590.886, 15.4314, 0.3452", "439.395, 591.558, 15.5644, 0.4256", "440.378, 592.123, 15.6915, 0.4572", "441.354, 592.64, 15.8754, 0.3994", "442.442, 592.958, 16.074, 0.4", "443.496, 593.355, 16.2756, 0.3358", "444.537, 593.817, 16.385, 0.3036", "445.571, 594.281, 16.3993, 0.2814", "446.491, 594.896, 16.4021, 0.287", "447.226, 595.6, 16.413, 0.2988", "448.361, 595.589, 16.3394, 0.3142", "449.495, 595.579, 16.2109, 0.3734", "450.636, 595.602, 16.0801, 0.3338", "451.778, 595.656, 15.9698, 0.3", "452.921, 595.713, 15.8743, 0.2746", "454.053, 595.875, 15.7931, 0.2746", "455.181, 596.064, 15.7354, 0.2746", "456.294, 596.309, 15.6688, 0.2746", "457.383, 596.612, 15.5677, 0.2746", "458.506, 596.808, 15.5036, 0.2746", "459.635, 596.887, 15.5336, 0.2746", "460.763, 597.008, 15.6318, 0.2746", "461.851, 597.35, 15.7338, 0.2746", "462.935, 597.718, 15.8318, 0.2746", "463.934, 598.268, 15.9228, 0.2746", "465.064, 598.339, 16.0026, 0.2746", "466.208, 598.358, 16.0706, 0.2746", "467.349, 598.364, 16.1493, 0.2746", "468.482, 598.345, 16.2697, 0.2746", "469.613, 598.325, 16.4116, 0.2746", "470.749, 598.21, 16.5046, 0.2746", "471.885, 598.078, 16.536, 0.2746", "473.024, 598.097, 16.4704, 0.2746", "474.145, 598.226, 16.2966, 0.2746", "475.281, 598.253, 16.0594, 0.2746", "476.413, 598.097, 15.8183, 0.2746", "477.545, 597.93, 15.5859, 0.2746", "478.487, 597.343, 15.2855, 0.2746", "479.453, 596.772, 14.9453, 0.2746", "480.558, 596.489, 14.642, 0.2746", "481.67, 596.222, 14.3665, 0.2746", "482.722, 595.817, 14.0518, 0.2744", "483.762, 595.391, 13.7043, 0.2744", "484.778, 594.927, 13.3286, 0.2742", "485.784, 594.42, 12.9489, 0.274", "486.657, 593.702, 12.6874, 0.2736", "487.521, 592.953, 12.4678, 0.2728", "488.336, 592.205, 12.1632, 0.2712", "489.292, 591.61, 11.8303, 0.2684", "490.288, 591.072, 11.4929, 0.2626", "491.395, 590.875, 11.1395, 0.2542", "492.51, 590.735, 10.7797, 0.2288", "493.635, 590.537, 10.199, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "376.237, 582.663, 14.9464, 0.3056", "376.698, 583.283, 14.334, 0.2288", "377.28, 584.229, 13.9084, 0.2684", "378.11, 584.985, 13.7808, 0.2626", "379.028, 585.647, 13.5394, 0.2542", "379.79, 586.18, 13.0511, 0.2288", "380.397, 586.72, 11.2437, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "282.741, 546.167, 24.3256, 0.4354", "282.456, 545.686, 24.2679, 0.2288", "282.162, 544.594, 23.6485, 0.478", "282.152, 543.493, 23.4058, 0.4038", "282.196, 542.384, 23.0572, 0.3448", "282.089, 541.282, 22.6279, 0.3116", "281.869, 540.177, 22.1824, 0.3388", "281.655, 539.06, 21.7627, 0.4142", "281.357, 537.979, 21.3458, 0.4348", "281.036, 536.899, 20.9423, 0.3632", "280.861, 535.792, 20.552, 0.3074", "280.687, 534.67, 20.2196, 0.2882", "280.485, 533.551, 19.9934, 0.2996", "280.407, 532.427, 19.7663, 0.323", "280.411, 531.307, 19.4916, 0.3538", "280.618, 530.197, 19.2133, 0.4728", "281.185, 529.227, 19.0025, 0.394", "281.87, 528.314, 18.7908, 0.327", "282.189, 527.37, 18.3996, 0.2774", "283.027, 526.633, 18.0541, 0.2798", "282.901, 525.784, 17.7638, 0.2844", "282.033, 525.175, 17.4849, 0.293", "281.423, 524.263, 17.1707, 0.3082", "280.808, 523.342, 16.844, 0.339", "280.628, 522.294, 16.464, 0.3846", "280.91, 521.23, 16.0182, 0.5242", "281.243, 520.155, 15.5417, 0.5162", "281.759, 519.149, 15.0886, 0.4242", "282.211, 518.126, 14.616, 0.3986", "282.393, 517.019, 14.1313, 0.3334", "282.566, 515.91, 13.6506, 0.299", "282.813, 514.824, 13.1664, 0.2728", "283.449, 514.013, 12.619, 0.2712", "284.089, 513.158, 12.0739, 0.2684", "284.616, 512.148, 11.7438, 0.2626", "285.143, 511.139, 11.5872, 0.2542", "285.671, 510.129, 11.5646, 0.2288", "286.198, 509.12, 11.8264, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "282.741, 546.167, 24.3256, 0.4354", "282.423, 545.999, 24.3751, 0.364", "281.336, 545.76, 24.5392, 0.3088", "280.239, 545.729, 24.7954, 0.2908", "279.177, 545.307, 25.0015, 0.3056", "278.16, 544.8, 25.2274, 0.3266", "277.141, 544.3, 25.4803, 0.3978", "276.131, 543.8, 25.751, 0.3738", "275.116, 543.28, 25.9619, 0.3994", "274.128, 542.741, 26.056, 0.335", "273.112, 542.318, 26.0812, 0.3022", "272.126, 541.904, 26.2738, 0.2786", "271.146, 541.442, 26.5516, 0.2822", "270.155, 540.885, 26.77, 0.2886", "269.142, 540.379, 27.013, 0.3018", "268.165, 539.825, 27.2812, 0.3198", "267.248, 539.18, 27.5374, 0.3838", "266.391, 538.434, 27.6861, 0.3532", "265.573, 537.687, 27.6654, 0.3356", "264.742, 536.988, 27.5198, 0.3424", "263.868, 536.258, 27.4112, 0.3908", "262.937, 535.612, 27.3669, 0.5368", "261.961, 535.017, 27.3319, 0.5332", "260.944, 534.512, 27.3456, 0.4866", "259.87, 534.142, 27.4462, 0.365", "258.788, 533.772, 27.5671, 0.3104", "257.754, 533.3, 27.6906, 0.2938", "256.8, 532.674, 27.8382, 0.3112", "255.829, 532.082, 28.0431, 0.3382", "254.86, 531.489, 28.2901, 0.413", "253.936, 530.844, 28.576, 0.4328", "253.085, 530.114, 28.91, 0.3594", "252.233, 529.375, 29.2474, 0.3", "251.285, 528.801, 29.5305, 0.2746", "250.183, 528.518, 29.7559, 0.2746", "249.118, 528.104, 29.9272, 0.2746", "248.123, 527.627, 30.1445, 0.2746", "247.296, 526.88, 30.3946, 0.2746", "246.423, 526.154, 30.6496, 0.2746", "245.467, 525.532, 30.8806, 0.2746", "244.485, 524.943, 31.0828, 0.2746", "243.498, 524.372, 31.292, 0.2746", "242.546, 523.748, 31.5146, 0.2746", "241.572, 523.155, 31.7352, 0.2746", "240.623, 522.528, 31.9894, 0.2746", "239.686, 521.912, 32.314, 0.2746", "238.796, 521.209, 32.6497, 0.2746", "237.918, 520.495, 33.0042, 0.2746", "237.026, 519.821, 33.3964, 0.2746", "236.027, 519.281, 33.747, 0.2746", "235.086, 518.666, 34.1088, 0.2746", "234.331, 517.818, 34.4308, 0.2746", "233.222, 517.622, 34.718, 0.2746", "232.116, 517.614, 35.0871, 0.2746", "230.99, 517.724, 35.4824, 0.2746", "229.855, 517.846, 35.8649, 0.2746", "228.768, 517.88, 36.3325, 0.2746", "227.683, 517.912, 36.8561, 0.2744", "226.596, 517.944, 37.3979, 0.2744", "225.461, 517.955, 37.8456, 0.2742", "224.317, 517.955, 38.1612, 0.274", "223.173, 517.955, 38.3664, 0.2736", "222.03, 517.908, 38.4754, 0.2728", "220.887, 517.851, 38.5202, 0.2712", "219.745, 517.784, 38.5297, 0.2684", "218.608, 517.665, 38.5297, 0.2626", "217.47, 517.544, 38.5297, 0.2542", "216.327, 517.496, 38.5297, 0.2288", "215.183, 517.496, 38.5297, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "365.856, 562.5, 28.0952, 0.5932", "366.483, 562.641, 27.886, 0.4482", "367.588, 562.916, 27.7102, 0.3334", "368.669, 563.284, 27.5758, 0.289", "369.748, 563.658, 27.4722, 0.3024", "370.806, 564.078, 27.4106, 0.321", "371.831, 564.535, 27.442, 0.3862", "372.928, 564.858, 27.4674, 0.3572", "374.039, 565.125, 27.456, 0.3442", "375.144, 565.413, 27.4008, 0.3522", "376.211, 565.802, 27.281, 0.44", "377.261, 566.214, 27.1032, 0.4776", "378.37, 566.481, 26.92, 0.468", "379.449, 566.845, 26.7235, 0.3774", "380.528, 567.21, 26.5258, 0.3346", "381.609, 567.57, 26.3365, 0.3334", "382.699, 567.907, 26.1775, 0.4088", "383.802, 568.204, 26.0702, 0.4016", "384.905, 568.503, 25.9913, 0.4158", "386.017, 568.752, 25.9157, 0.5362", "387.151, 568.809, 25.7891, 0.5322", "388.227, 568.702, 25.5251, 0.4846", "389.293, 568.587, 25.1804, 0.361", "390.43, 568.481, 24.876, 0.3032", "391.563, 568.496, 24.5722, 0.2806", "392.545, 568.515, 24.1394, 0.2856", "393.152, 568.318, 23.4996, 0.295", "394.092, 568.224, 22.958, 0.3132", "395.013, 568.384, 22.8673, 0.342", "395.953, 568.527, 23.102, 0.42", "397.087, 568.526, 23.4161, 0.4454", "398.224, 568.61, 23.7118, 0.3838", "399.334, 568.786, 23.928, 0.3402", "400.412, 569.139, 24.1466, 0.3748", "401.472, 569.499, 24.3146, 0.3364", "402.477, 569.782, 24.3726, 0.3048", "403.372, 570.093, 24.6733, 0.2834", "404.357, 570.562, 25.0068, 0.2908", "405.367, 570.961, 25.2711, 0.3058", "406.466, 571.056, 25.4761, 0.3274", "407.574, 571.302, 25.5595, 0.3978", "408.678, 571.344, 25.5088, 0.3798", "409.801, 571.206, 25.4066, 0.3808", "410.885, 571.27, 25.429, 0.4458", "411.984, 571.327, 25.4061, 0.4884", "413.113, 571.243, 25.356, 0.488", "414.23, 571.179, 25.4092, 0.4152", "415.344, 571.091, 25.5436, 0.4004", "416.451, 570.866, 25.6007, 0.4768", "417.544, 570.539, 25.613, 0.5714", "418.673, 570.375, 25.6362, 0.5178", "419.68, 570.245, 25.4716, 0.3854", "420.806, 570.279, 25.3739, 0.3012", "421.82, 570.551, 25.4559, 0.2766", "422.942, 570.652, 25.522, 0.2786", "424.041, 570.464, 25.5074, 0.282", "425.012, 570.201, 25.5693, 0.288", "425.956, 569.825, 25.7029, 0.3006", "427.085, 569.76, 25.7488, 0.3174", "428.218, 569.815, 25.7138, 0.3796", "429.288, 569.933, 25.741, 0.3454", "430.361, 569.816, 25.8266, 0.3214", "431.473, 569.61, 25.8112, 0.315", "432.532, 569.289, 25.657, 0.3454", "433.481, 568.732, 25.3963, 0.426", "434.504, 568.297, 25.1913, 0.458", "435.59, 568.011, 25.0695, 0.4008", "436.628, 567.725, 24.8416, 0.4024", "437.56, 567.359, 24.4628, 0.3406", "438.653, 567.203, 24.1091, 0.3126", "439.552, 566.987, 24.0573, 0.2976", "440.493, 566.391, 23.9383, 0.3182", "441.545, 565.987, 23.7681, 0.3512", "442.653, 566.238, 23.6418, 0.4378", "443.672, 566.709, 23.4676, 0.4736", "444.73, 567.114, 23.2546, 0.4608", "445.802, 567.504, 23.0384, 0.3642", "446.847, 567.971, 22.8992, 0.309", "447.878, 568.459, 22.8248, 0.291", "448.982, 568.758, 22.7724, 0.3062", "450.109, 568.953, 22.7388, 0.3278", "451.227, 569.167, 22.657, 0.4", "452.265, 569.574, 22.484, 0.378", "453.316, 570.005, 22.2925, 0.4074", "454.366, 570.458, 22.1469, 0.3496", "455.383, 570.983, 22.0531, 0.3302", "456.352, 571.59, 22.0083, 0.3252", "457.225, 572.33, 22.0114, 0.3938", "458.02, 573.145, 22.0752, 0.3726", "458.71, 574.034, 22.2004, 0.3676", "459.273, 575.026, 22.3084, 0.4202", "459.784, 576.035, 22.309, 0.4458", "460.282, 577.047, 22.2258, 0.3846", "460.735, 578.096, 22.1309, 0.3416", "461.264, 579.111, 22.0486, 0.3772", "461.905, 580.058, 21.9884, 0.3408", "462.585, 580.976, 21.9733, 0.3126", "463.238, 581.881, 22.0592, 0.299", "463.841, 582.813, 22.0366, 0.3146", "464.488, 583.718, 22.0153, 0.3744", "465.237, 584.551, 22.0805, 0.3358", "465.883, 585.477, 22.1519, 0.3036", "466.505, 586.426, 22.1558, 0.2814", "467.419, 587.061, 22.1096, 0.2872", "467.815, 588.061, 22.0844, 0.299", "468.587, 588.837, 22.1138, 0.3144", "469.559, 589.419, 22.071, 0.3742", "470.634, 589.762, 21.9694, 0.3352", "471.747, 590.015, 21.8775, 0.3022", "472.871, 590.195, 21.8543, 0.2796", "474.003, 590.354, 21.8599, 0.2796", "475.093, 590.7, 21.8688, 0.305", "476.068, 591.297, 21.9254, 0.2288" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "365.856, 562.5, 28.0952, 0.5932", "366.188, 562.864, 27.7026, 0.2288", "366.963, 563.684, 27.1121, 0.2776", "367.839, 564.399, 26.8621, 0.28", "368.771, 565.032, 26.5633, 0.2848", "369.656, 565.727, 26.2489, 0.2936", "370.531, 566.425, 25.9305, 0.3096", "371.468, 567.08, 25.6782, 0.3402", "372.407, 567.734, 25.4873, 0.393", "373.295, 568.438, 25.3739, 0.5102", "374.098, 569.233, 25.3582, 0.6338", "374.912, 569.992, 25.3173, 0.6302", "375.775, 570.688, 25.1742, 0.611", "376.669, 571.394, 25.027, 0.6362", "377.637, 571.977, 24.8942, 0.6164", "378.694, 572.412, 24.7355, 0.444", "379.777, 572.71, 24.5252, 0.3254", "380.895, 572.834, 24.2469, 0.2746", "382.01, 572.96, 23.9168, 0.2746", "383.132, 573.111, 23.562, 0.2746", "384.258, 573.3, 23.2229, 0.2746", "385.376, 573.542, 22.9034, 0.2746", "386.472, 573.858, 22.5798, 0.2746", "387.506, 574.325, 22.2365, 0.2746", "388.497, 574.83, 21.8366, 0.2746", "389.003, 574.901, 21.184, 0.2746", "389.328, 574.82, 20.309, 0.2746", "390.182, 574.924, 19.7176, 0.2746", "391.111, 575.106, 19.6056, 0.2748", "392.035, 575.288, 19.8747, 0.2748", "393.058, 575.399, 20.3599, 0.2752", "394.18, 575.26, 20.7315, 0.2756", "395.318, 575.192, 20.9703, 0.2766", "396.427, 575.232, 21.128, 0.2782", "397.335, 575.417, 21.3251, 0.2814", "398.097, 575.257, 21.121, 0.287", "398.603, 574.908, 20.51, 0.2988", "399.484, 574.446, 19.8794, 0.3142", "400.568, 574.112, 19.3586, 0.3736", "401.652, 574.291, 18.8681, 0.3344", "402.733, 574.576, 18.3921, 0.3008", "403.853, 574.526, 18.0723, 0.2762", "404.985, 574.415, 17.8245, 0.2776", "406.063, 574.575, 17.5048, 0.2802", "407.111, 574.889, 17.1105, 0.2852", "408.185, 575.013, 16.8748, 0.294", "409.298, 575.043, 16.7546, 0.3114", "410.361, 574.855, 16.5063, 0.3386", "411.413, 574.632, 16.1344, 0.4136", "412.509, 574.447, 15.7226, 0.434", "413.631, 574.295, 15.3157, 0.3616", "414.764, 574.285, 14.9192, 0.3042", "415.893, 574.401, 14.5656, 0.2824", "417.029, 574.461, 14.2856, 0.289", "418.16, 574.314, 14.0815, 0.3024", "419.289, 574.142, 13.9294, 0.321", "420.393, 574.354, 13.8813, 0.3858", "421.53, 574.313, 13.8628, 0.358", "422.632, 574.013, 13.853, 0.3396", "423.754, 573.861, 13.8762, 0.3734", "424.74, 574.37, 13.8076, 0.334", "425.835, 574.68, 13.6979, 0.3", "426.963, 574.862, 13.5565, 0.2746", "428.056, 575.102, 13.3042, 0.2748", "429.144, 575.351, 12.9606, 0.275", "430.263, 575.458, 12.5698, 0.2752", "431.385, 575.547, 12.154, 0.2758", "432.456, 575.929, 11.7589, 0.2768", "433.502, 576.386, 11.4134, 0.2796", "434.628, 576.565, 11.1202, 0.2796", "435.754, 576.741, 10.8716, 0.305", "436.853, 576.804, 10.199, 0.2288" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "355.491, 529.13, 39.2787, 0.4532", "354.787, 528.855, 40.3998, 0.2288", "353.791, 528.392, 40.7784, 0.2746", "352.817, 527.868, 40.8436, 0.2748", "351.885, 527.846, 41.0337, 0.2748", "350.817, 527.72, 41.2871, 0.2752", "349.769, 527.482, 41.4042, 0.2756", "348.935, 527.017, 41.7155, 0.2766", "347.977, 526.448, 42.0386, 0.2782", "346.887, 526.289, 42.4273, 0.2814", "345.771, 526.089, 42.7669, 0.287", "344.685, 525.729, 43.0497, 0.2988", "343.605, 525.354, 43.2978, 0.3142", "342.506, 525.051, 43.4974, 0.3734", "341.397, 524.824, 43.7178, 0.3338", "340.281, 524.719, 43.9636, 0.3", "339.161, 524.847, 44.226, 0.2746", "338.041, 525.025, 44.4699, 0.2746", "336.899, 525.074, 44.6488, 0.2746", "335.756, 525.066, 44.7616, 0.2746", "334.614, 525.025, 44.8333, 0.2748", "333.474, 524.943, 44.8991, 0.275", "332.342, 524.831, 45.0078, 0.2752", "331.223, 524.695, 45.1923, 0.2758", "330.097, 524.617, 45.4294, 0.277", "328.965, 524.617, 45.6884, 0.279", "327.829, 524.617, 45.9306, 0.2828", "326.687, 524.617, 46.1084, 0.2898", "325.542, 524.617, 46.2067, 0.3038", "324.399, 524.617, 46.2336, 0.3234", "323.254, 524.617, 46.2034, 0.3906", "322.111, 524.617, 46.1283, 0.3668", "320.972, 524.626, 45.9922, 0.3556", "319.845, 524.648, 45.7716, 0.4032", "318.713, 524.657, 45.507, 0.3898", "317.57, 524.643, 45.2469, 0.4004", "316.429, 524.656, 44.9848, 0.477", "315.303, 524.756, 44.6785, 0.5716", "314.188, 524.943, 44.3503, 0.5182", "313.081, 525.228, 44.0574, 0.3862", "312.06, 525.213, 43.6705, 0.3026", "310.993, 525.15, 43.209, 0.2794", "310.009, 525.532, 42.6754, 0.2836" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "355.491, 529.13, 39.2787, 0.4532", "355.654, 528.801, 39.5301, 0.3974", "356.03, 527.752, 39.7415, 0.3702", "356.29, 526.677, 40.0098, 0.407", "356.703, 525.649, 40.2965, 0.5088", "357.354, 524.72, 40.5339, 0.764", "358.119, 523.869, 40.7145, 0.9144", "358.848, 522.99, 40.8503, 0.7008", "359.392, 521.995, 40.9441, 0.6368", "359.772, 520.917, 41.0063, 0.5066", "360.15, 519.837, 41.064, 0.5504", "360.647, 518.812, 41.1384, 0.6204", "361.279, 517.86, 41.2395, 0.5758", "361.924, 516.915, 41.375, 0.6522", "362.394, 515.901, 41.5864, 0.7092", "362.702, 514.826, 41.8863, 0.54", "363.219, 513.881, 42.2579, 0.4148", "364.051, 513.14, 42.6373, 0.4134", "364.941, 512.424, 42.9559, 0.4334", "365.752, 511.62, 43.2141, 0.3604", "366.382, 510.678, 43.4258, 0.3022", "366.677, 509.595, 43.6229, 0.2786", "366.908, 508.505, 43.8712, 0.282", "367.285, 507.456, 44.1795, 0.2882", "367.77, 506.444, 44.5183, 0.301", "368.341, 505.466, 44.8445, 0.3184", "368.9, 504.471, 45.108, 0.3814", "369.432, 503.457, 45.302, 0.3486", "369.978, 502.453, 45.439, 0.3282", "370.558, 501.467, 45.54, 0.3216", "371.137, 500.481, 45.6308, 0.3874", "371.726, 499.506, 45.7498, 0.3596", "372.301, 498.536, 45.9284, 0.3484", "372.869, 497.555, 46.1294, 0.36", "373.319, 496.513, 46.303, 0.4542", "373.512, 495.393, 46.4414, 0.5052", "373.639, 494.257, 46.5514, 0.5136", "374.029, 493.202, 46.6404, 0.4888", "374.642, 492.238, 46.7208, 0.411", "375.339, 491.332, 46.8138, 0.421", "375.984, 490.408, 46.9669, 0.3758", "376.48, 489.397, 47.1764, 0.3736", "376.938, 488.354, 47.3827, 0.4314", "377.37, 487.296, 47.5574, 0.4666", "377.597, 486.186, 47.7117, 0.4242", "377.673, 485.056, 47.8817, 0.4108", "377.883, 483.954, 47.9987, 0.5258", "378.256, 482.881, 48.0679, 0.519", "378.507, 481.796, 48.2012, 0.4296", "378.668, 480.677, 48.3655, 0.4086", "378.884, 479.57, 48.4576, 0.352", "378.996, 478.456, 48.5554, 0.333", "379.007, 477.348, 48.7505, 0.338", "379.016, 476.235, 49.0042, 0.382", "379.083, 475.108, 49.1924, 0.5242", "379.385, 474.037, 49.2708, 0.4922", "379.956, 473.063, 49.3209, 0.4954", "380.601, 472.132, 49.4166, 0.6558", "381.091, 471.13, 49.5737, 0.6604", "381.25, 470.03, 49.7714, 0.4882", "381.124, 468.908, 49.9951, 0.3612", "381.022, 467.8, 50.1264, 0.3354", "381.199, 466.696, 50.1883, 0.4136", "381.437, 465.585, 50.2622, 0.4044", "381.739, 464.503, 50.2832, 0.4508", "382.094, 463.424, 50.2897, 0.4556", "382.493, 462.353, 50.342, 0.403", "383.031, 461.359, 50.4829, 0.3752", "383.697, 460.459, 50.7161, 0.4416", "384.328, 459.52, 50.9779, 0.451", "384.871, 458.534, 51.2744, 0.5626", "385.318, 457.496, 51.5726, 0.54", "385.758, 456.443, 51.8101, 0.4696", "386.203, 455.389, 51.9747, 0.4774", "386.737, 454.381, 52.0839, 0.5066", "387.355, 453.419, 52.159, 0.488", "388.006, 452.477, 52.2169, 0.5792", "388.666, 451.544, 52.2763, 0.5954", "389.354, 450.63, 52.3527, 0.4524", "390.007, 449.691, 52.4563, 0.3408", "390.647, 448.749, 52.6109, 0.3042", "391.343, 447.875, 52.8531, 0.3242", "392.055, 446.996, 53.125, 0.3918", "392.672, 446.046, 53.4047, 0.3692", "393.296, 445.11, 53.7004, 0.3598", "394.002, 444.219, 53.9535, 0.4122", "394.662, 443.286, 54.1332, 0.4", "395.28, 442.324, 54.2483, 0.4504", "395.987, 441.427, 54.3197, 0.419", "396.739, 440.566, 54.3626, 0.509", "397.42, 439.648, 54.39, 0.4138", "398.024, 438.678, 54.4186, 0.3648", "398.545, 437.66, 54.4575, 0.3422", "399.133, 436.682, 54.5126, 0.426", "399.763, 435.727, 54.591, 0.4284", "400.354, 434.749, 54.6972, 0.4902", "400.817, 433.705, 54.8386, 0.5544", "400.965, 432.592, 55.0486, 0.4616", "400.996, 431.502, 55.3806, 0.401", "401.119, 430.414, 55.7959, 0.4348", "401.489, 429.35, 56.18, 0.474", "402.06, 428.363, 56.4956, 0.4318", "402.648, 427.384, 56.7624, 0.4546", "403.2, 426.403, 57.0276, 0.4626", "403.774, 425.426, 57.2681, 0.4156", "404.325, 424.426, 57.4552, 0.3998", "404.834, 423.401, 57.5971, 0.4822", "405.228, 422.329, 57.706, 0.5502", "405.601, 421.248, 57.7898, 0.6304", "406.134, 420.24, 57.8586, 0.5438", "406.826, 419.333, 57.9298, 0.6108", "407.486, 418.401, 58.0247, 0.5448", "407.962, 417.386, 58.1927, 0.6598", "408.335, 416.318, 58.3993, 0.635", "408.629, 415.215, 58.5878, 0.8302", "408.945, 414.115, 58.742, 0.9362", "409.35, 413.047, 58.8678, 0.773", "409.771, 411.983, 58.9725, 0.6162", "410.16, 410.906, 59.0663, 0.5322", "410.51, 409.819, 59.173, 0.5168", "411.138, 408.884, 59.3331, 0.4946", "411.996, 408.167, 59.5736, 0.4216", "412.882, 407.454, 59.8354, 0.4408", "413.24, 406.411, 60.0922, 0.4134", "413.399, 405.306, 60.3966, 0.4392", "413.896, 404.297, 60.6903, 0.573", "414.383, 403.266, 60.9409, 0.6322", "414.713, 402.173, 61.1467, 0.515", "414.988, 401.064, 61.2853, 0.4832", "415.365, 399.988, 61.3606, 0.4398", "415.922, 398.992, 61.4261, 0.5126", "416.49, 398.006, 61.5336, 0.5904", "416.969, 396.986, 61.7112, 0.5542", "417.361, 395.918, 61.9108, 0.4474", "417.6, 394.801, 62.0908, 0.4424", "417.678, 393.661, 62.2496, 0.4104", "417.739, 392.518, 62.3902, 0.4624", "417.974, 391.401, 62.5352, 0.4768", "418.365, 390.335, 62.7155, 0.4428", "418.828, 389.291, 62.9112, 0.4464", "419.338, 388.271, 63.1403, 0.5876", "419.903, 387.283, 63.3945, 0.6528", "420.34, 386.23, 63.6611, 0.584", "420.642, 385.151, 63.9772, 0.463", "421.168, 384.15, 64.3062, 0.4354", "421.673, 383.138, 64.6447, 0.5734", "421.963, 382.033, 64.906, 0.5968", "422.455, 381.001, 65.1252, 0.6246", "423.043, 380.053, 65.4007, 0.5224", "423.525, 379.064, 65.7317, 0.3938", "423.809, 377.974, 66.05, 0.3166", "423.642, 376.844, 66.3029, 0.3064", "423.526, 375.715, 66.4905, 0.3282", "423.888, 374.631, 66.6168, 0.4006", "424.384, 373.601, 66.6896, 0.379", "424.85, 372.556, 66.7338, 0.4092", "425.253, 371.485, 66.775, 0.3528", "425.664, 370.419, 66.8279, 0.336", "425.881, 369.298, 66.8982, 0.336", "425.949, 368.159, 67.0015, 0.4152", "426.105, 367.042, 67.1768, 0.4054", "426.393, 365.939, 67.3694, 0.4602", "426.744, 364.856, 67.571, 0.4382", "427.203, 363.808, 67.7494, 0.5394", "427.642, 362.757, 67.9146, 0.496", "427.977, 361.69, 68.1201, 0.392", "428.258, 360.585, 68.2646, 0.3132", "428.607, 359.527, 68.3133, 0.3002", "429.204, 358.555, 68.3648, 0.3168", "429.627, 357.495, 68.4597, 0.3784", "429.951, 356.412, 68.6364, 0.3432", "430.271, 355.37, 68.936, 0.3172", "430.549, 354.354, 69.3658, 0.306", "430.806, 353.296, 69.8048, 0.335", "431.102, 352.214, 70.0459, 0.376", "431.544, 351.171, 70.1588, 0.5148", "432.17, 350.214, 70.2162, 0.4678", "432.711, 349.224, 70.2492, 0.4838", "432.953, 348.129, 70.2786, 0.4708", "433.43, 347.15, 70.2447, 0.4244", "433.863, 346.154, 70.3805, 0.4472", "434.157, 345.084, 70.5844, 0.4192", "434.327, 343.957, 70.737, 0.4782", "434.706, 342.882, 70.8271, 0.5082", "435.158, 341.841, 70.8411, 0.491", "435.461, 340.756, 70.8392, 0.5848", "435.52, 339.638, 70.894, 0.6054", "435.524, 338.494, 70.9442, 0.472", "435.547, 337.351, 70.9923, 0.3722", "435.656, 336.216, 71.0296, 0.3864", "435.857, 335.102, 71.0262, 0.3592", "435.91, 333.985, 70.9974, 0.3416", "435.775, 332.875, 71.0805, 0.3774", "435.796, 331.822, 71.3126, 0.341", "436.158, 330.765, 71.587, 0.3134", "436.412, 329.652, 71.8217, 0.2992", "436.6, 328.528, 72.0224, 0.321", "436.825, 327.42, 72.1501, 0.3564", "437.025, 326.331, 72.1017, 0.4478", "437.323, 325.271, 71.9522, 0.4918", "437.745, 324.212, 71.8662, 0.4952", "438.154, 323.151, 71.8687, 0.4236", "438.594, 322.102, 71.8962, 0.4396", "439.135, 321.108, 71.9614, 0.435", "439.753, 320.167, 72.1526, 0.3636", "440.207, 319.173, 72.4542, 0.3078", "440.189, 318.08, 72.8064, 0.289", "439.907, 316.981, 73.1489, 0.3024", "439.707, 315.859, 73.4619, 0.321", "439.682, 314.732, 73.7702, 0.386", "439.852, 313.62, 74.0642, 0.3582", "440.185, 312.53, 74.3058, 0.34", "440.463, 311.427, 74.4974, 0.3742", "440.564, 310.293, 74.674, 0.3354", "440.656, 309.157, 74.821, 0.303", "440.861, 308.033, 74.9347, 0.28", "441.135, 306.926, 75.0506, 0.2848", "441.399, 305.815, 75.171, 0.2932", "441.693, 304.711, 75.2808, 0.3102", "442.075, 303.635, 75.3572, 0.3354", "442.563, 302.629, 75.465, 0.4138", "443.157, 301.686, 75.6263, 0.4044", "443.554, 300.655, 75.7131, 0.4508", "443.511, 299.546, 75.6974, 0.457", "443.63, 298.45, 75.6003, 0.3988", "444.098, 297.472, 75.4093, 0.3988", "444.252, 296.59, 75.4337, 0.3338", "444.559, 295.516, 75.4961, 0.3", "444.894, 294.422, 75.5871, 0.2746", "445.229, 293.328, 75.7072, 0.2746", "445.565, 292.235, 75.8484, 0.2746", "445.922, 291.158, 76.0539, 0.2746", "446.292, 290.101, 76.3213, 0.2746", "446.661, 289.047, 76.6525, 0.2746", "447.031, 287.991, 77.023, 0.2746", "447.234, 286.869, 77.3461, 0.2746", "447.38, 285.735, 77.6006, 0.2746", "447.521, 284.6, 77.7952, 0.2746", "447.663, 283.465, 77.9503, 0.2746", "447.805, 282.329, 78.0872, 0.2748", "448.269, 281.303, 78.2849, 0.275", "448.844, 280.342, 78.559, 0.2752", "449.424, 279.385, 78.8847, 0.2758", "449.919, 278.372, 79.2184, 0.2768", "450.132, 277.25, 79.487, 0.2788", "450.335, 276.124, 79.6897, 0.2822", "450.536, 274.998, 79.8308, 0.289", "450.837, 273.895, 79.9173, 0.3008", "451.177, 272.803, 79.9669, 0.3254", "451.517, 271.71, 79.9994, 0.3584", "451.86, 270.619, 80.0299, 0.481", "452.163, 269.516, 80.0643, 0.4096", "452.356, 268.388, 80.1091, 0.3554", "452.544, 267.26, 80.1713, 0.3322", "452.731, 266.132, 80.2564, 0.3712", "452.92, 265.003, 80.3673, 0.5044", "453.189, 263.896, 80.5356, 0.4546", "453.586, 262.85, 80.8013, 0.4296", "453.987, 261.808, 81.1348, 0.5136", "454.388, 260.764, 81.5077, 0.4954", "454.758, 259.688, 81.8474, 0.391", "455.099, 258.597, 82.1122, 0.3116", "455.441, 257.504, 82.3119, 0.2958", "455.782, 256.413, 82.4631, 0.315", "456.122, 255.32, 82.5938, 0.3454", "456.444, 254.232, 82.77, 0.426", "456.765, 253.144, 82.9923, 0.4568", "457.086, 252.057, 83.2504, 0.405", "457.408, 250.97, 83.5276, 0.3802", "457.822, 249.907, 83.7833, 0.4448", "458.242, 248.845, 84.0112, 0.4862", "458.662, 247.783, 84.2092, 0.4852", "459.082, 246.722, 84.3842, 0.4042", "459.37, 245.616, 84.5233, 0.4088", "459.633, 244.503, 84.6387, 0.3524", "459.895, 243.388, 84.7479, 0.3338", "460.157, 242.275, 84.8607, 0.3394", "460.462, 241.173, 84.9985, 0.3852", "460.953, 240.163, 85.2236, 0.5254", "461.444, 239.154, 85.5126, 0.5182", "461.935, 238.145, 85.839, 0.428", "462.351, 237.088, 86.147, 0.4058", "462.671, 235.99, 86.3856, 0.3464", "462.992, 234.893, 86.5584, 0.3242", "463.312, 233.795, 86.6715, 0.3144", "463.633, 232.697, 86.7423, 0.3738" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "310.009, 525.532, 42.6754, 0.2836", "309.158, 525.578, 42.2044, 0.2912", "308.027, 525.547, 41.8121, 0.3066", "306.898, 525.382, 41.5456, 0.3284", "305.784, 525.138, 41.4263, 0.401", "304.669, 524.94, 41.4322, 0.3796", "303.795, 524.261, 41.4884, 0.4104", "302.8, 523.771, 41.61, 0.355", "301.71, 523.664, 41.5968, 0.34", "300.839, 523.219, 41.363, 0.3446", "299.765, 522.875, 41.1558, 0.4246", "298.664, 522.693, 41.0374, 0.454", "297.533, 522.762, 40.9265, 0.4", "296.438, 522.974, 40.7484, 0.3698", "295.35, 523.22, 40.5658, 0.4318", "294.23, 523.373, 40.4135, 0.4314", "293.094, 523.364, 40.2606, 0.5328", "291.953, 523.275, 40.1472, 0.453", "290.831, 523.089, 40.1069, 0.4626", "289.716, 522.861, 40.14, 0.4006", "288.587, 522.708, 40.1758, 0.444", "287.454, 522.595, 40.1671, 0.4432", "286.35, 522.338, 40.1422, 0.3786", "285.245, 522.056, 40.14, 0.3366", "284.115, 521.961, 40.1744, 0.3384", "282.986, 522.056, 40.1965, 0.4132", "281.853, 522.157, 40.1934, 0.4334", "280.721, 522.071, 40.2223, 0.3604", "279.655, 521.706, 40.3063, 0.302", "278.586, 521.376, 40.3612, 0.2782", "277.473, 521.359, 40.4348, 0.2814", "276.357, 521.563, 40.5667, 0.287", "275.244, 521.801, 40.7344, 0.2988", "274.114, 521.934, 40.9139, 0.3142", "272.973, 522.01, 41.0763, 0.3736", "271.833, 522.1, 41.2222, 0.334", "270.695, 522.186, 41.3678, 0.3002", "269.595, 522.322, 41.5733, 0.2752", "268.479, 522.324, 41.7785, 0.2756", "267.362, 522.095, 41.9244, 0.2766", "266.414, 521.503, 42.0165, 0.2782", "265.425, 520.958, 42.0538, 0.2814", "264.403, 520.464, 42.089, 0.287", "263.42, 519.89, 42.0804, 0.2988", "262.352, 519.501, 42.0342, 0.3142", "261.258, 519.207, 41.9409, 0.3734", "260.156, 518.928, 41.8835, 0.3338", "259.066, 518.586, 41.8505, 0.3", "257.965, 518.274, 41.8216, 0.2746", "256.865, 517.964, 41.7925, 0.2746", "255.764, 517.653, 41.7533, 0.2746", "254.668, 517.328, 41.6858, 0.2746", "253.61, 516.922, 41.5388, 0.2746", "252.619, 516.417, 41.2782, 0.2746", "251.616, 515.927, 40.95, 0.2746", "250.571, 515.496, 40.616, 0.2746", "249.507, 515.092, 40.3091, 0.2746", "248.444, 514.683, 40.0526, 0.2746", "247.381, 514.26, 39.8824, 0.2746", "246.356, 513.769, 39.7891, 0.2746", "245.463, 513.057, 39.7499, 0.2746", "244.598, 512.31, 39.7471, 0.2746", "243.677, 511.631, 39.7701, 0.2746", "242.736, 510.979, 39.8118, 0.2746", "241.785, 510.344, 39.8672, 0.2746", "240.801, 509.774, 39.9459, 0.2746", "239.729, 509.399, 40.0767, 0.2746", "238.64, 509.088, 40.2536, 0.2746", "237.563, 508.733, 40.4466, 0.2746", "236.527, 508.25, 40.607, 0.2746", "235.496, 507.754, 40.728, 0.2746", "234.441, 507.311, 40.8153, 0.2746", "233.365, 506.932, 40.8769, 0.2746", "232.244, 506.711, 40.9262, 0.2746", "231.106, 506.592, 40.9755, 0.2746", "229.972, 506.466, 41.046, 0.2746", "228.846, 506.325, 41.1678, 0.2746", "227.719, 506.185, 41.3204, 0.2746", "226.585, 506.077, 41.4733, 0.2746", "225.444, 506.048, 41.5834, 0.2746", "224.3, 506.048, 41.6343, 0.2746", "223.174, 505.881, 41.6242, 0.2746", "222.097, 505.505, 41.5568, 0.2746", "220.998, 505.202, 41.4442, 0.2746", "219.901, 505.243, 41.2216, 0.2746", "218.812, 505.399, 40.8962, 0.2746", "217.719, 505.548, 40.5132, 0.2746", "216.589, 505.59, 40.1848, 0.2746", "215.454, 505.71, 39.9448, 0.2746", "214.84, 506.528, 39.7863, 0.2746", "214.355, 507.563, 39.7015, 0.2744", "213.338, 507.947, 39.6687, 0.2744", "212.403, 508.591, 39.6631, 0.2742", "211.465, 509.246, 39.6631, 0.274", "210.405, 509.667, 39.6631, 0.2736", "209.332, 510.064, 39.6631, 0.2728", "208.249, 510.436, 39.6631, 0.2712", "207.167, 510.804, 39.6631, 0.2684", "206.053, 511.063, 39.6631, 0.2626", "204.911, 511.085, 39.6631, 0.2542", "203.802, 510.823, 39.6631, 0.2288", "203.737, 509.711, 39.6631, 0.2288" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "310.009, 525.532, 42.6754, 0.2836", "309.269, 525.583, 41.0402, 0.2288", "308.332, 525.622, 38.871, 0.2912", "307.925, 525.745, 37.8535, 0.3066", "307.304, 525.827, 36.7237, 0.3286", "306.193, 525.7, 35.6902, 0.4012", "305.092, 525.806, 34.7917, 0.3802", "304.081, 526.106, 33.9573, 0.4114", "303.178, 526.521, 33.1559, 0.358", "302.287, 527.069, 32.4274, 0.3396", "301.315, 526.914, 31.9864, 0.3736", "300.286, 527.214, 31.743, 0.3342", "299.228, 527.225, 31.4283, 0.3006", "298.099, 527.225, 31.1615, 0.2758", "296.98, 527.225, 30.9084, 0.2768", "295.845, 527.232, 30.7023, 0.2786", "294.794, 527.473, 30.6824, 0.282", "293.77, 527.984, 30.6939, 0.288", "292.754, 528.506, 30.7381, 0.3008", "291.661, 528.827, 30.7877, 0.3178", "290.52, 528.823, 30.8227, 0.3804", "289.418, 528.765, 30.7476, 0.3466", "288.298, 528.563, 30.721, 0.3244", "287.179, 528.472, 30.779, 0.3148", "286.078, 528.369, 30.8862, 0.3746", "284.948, 528.307, 30.9347, 0.336", "283.832, 528.078, 30.9952, 0.304", "282.789, 527.649, 31.0456, 0.282", "281.745, 527.255, 31.0542, 0.2882", "280.823, 526.674, 31.0178, 0.3008", "280.034, 525.963, 30.8465, 0.318", "278.939, 525.853, 30.8218, 0.3808", "277.821, 525.851, 30.9075, 0.3474", "276.699, 525.687, 31.043, 0.3262", "275.681, 525.223, 31.236, 0.3178", "274.792, 524.529, 31.3132, 0.3804", "273.724, 524.12, 31.3443, 0.3466", "272.596, 523.998, 31.2696, 0.3248", "271.62, 523.414, 31.2091, 0.3152", "270.629, 522.878, 31.0593, 0.3756", "269.576, 522.443, 30.9285, 0.3378", "268.539, 521.979, 30.8182, 0.3072", "267.584, 521.357, 30.6888, 0.2878", "266.652, 520.704, 30.543, 0.3002", "265.718, 520.051, 30.3845, 0.3168", "264.773, 519.411, 30.242, 0.3786", "263.815, 518.788, 30.1218, 0.3434", "262.793, 518.315, 30.0569, 0.3176", "261.673, 518.227, 30.037, 0.3078", "260.548, 518.415, 30.0028, 0.3334", "259.423, 518.611, 29.969, 0.3982", "258.301, 518.828, 29.9678, 0.4322", "257.178, 519.047, 30.028, 0.2288" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "463.633, 232.697, 86.7423, 0.3738", "463.714, 232.365, 86.9246, 0.2288", "464.057, 231.283, 87.6548, 0.2748", "464.311, 230.249, 88.0121, 0.2748", "463.747, 229.374, 88.4307, 0.2752", "462.684, 229.208, 88.8476, 0.2756", "462.089, 228.271, 89.1646, 0.2766", "461.81, 227.171, 89.3908, 0.2782", "461.246, 226.184, 89.5362, 0.2814", "460.608, 225.243, 89.6174, 0.2872", "460.265, 224.17, 89.6692, 0.299", "460.206, 223.038, 89.7411, 0.3146", "460.206, 221.907, 89.8565, 0.3744", "460.206, 220.767, 89.9483, 0.3358", "460.206, 219.638, 89.9738, 0.3036", "460.038, 218.655, 89.8682, 0.2814", "459.788, 217.711, 89.7568, 0.287", "459.72, 216.86, 89.9794, 0.2988", "459.25, 216.176, 90.4548, 0.3142", "458.495, 215.361, 90.9644, 0.3734", "458.375, 214.266, 91.4376, 0.3338", "458.375, 213.122, 91.8392, 0.3", "458.375, 212.014, 92.0648, 0.2746", "458.323, 210.878, 92.2102, 0.2746", "457.876, 209.875, 92.47, 0.2746", "457.442, 208.877, 92.8928, 0.2746", "457.292, 207.777, 93.4217, 0.2746", "457.153, 206.675, 94.0327, 0.2746", "457.075, 205.627, 94.7517, 0.2746", "457.006, 204.578, 95.5128, 0.2746", "457.25, 203.486, 96.1898, 0.2746", "457.498, 202.392, 96.7868, 0.2746", "458.092, 201.417, 97.2524, 0.2746", "458.703, 200.449, 97.6189, 0.2746", "459.44, 199.574, 97.9208, 0.2746", "459.873, 198.516, 98.2139, 0.2746", "460.078, 197.393, 98.546, 0.2746", "459.863, 196.276, 98.9811, 0.2746", "459.766, 195.189, 99.598, 0.2746", "459.759, 194.482, 100.565, 0.2746", "459.934, 193.665, 101.733, 0.2746", "460.596, 192.771, 102.849, 0.2746", "461.417, 192.027, 103.908, 0.2746", "462.168, 191.266, 104.938, 0.2746", "462.707, 190.442, 105.987, 0.2746", "463.091, 189.447, 106.974, 0.2746", "463.335, 188.359, 107.877, 0.2746", "463.756, 187.361, 108.778, 0.2746", "464.37, 186.502, 109.706, 0.2746", "465.008, 185.605, 110.606, 0.2746", "465.589, 184.674, 111.477, 0.2746", "465.865, 183.649, 112.388, 0.2746", "466.075, 182.667, 113.376, 0.2746", "466.404, 181.683, 114.375, 0.2746", "466.916, 180.719, 115.328, 0.2746", "467.411, 179.785, 116.28, 0.2746", "467.926, 178.874, 117.218, 0.2746", "468.556, 177.924, 118.018, 0.2746", "469.233, 177.018, 118.713, 0.2746", "469.754, 176.214, 119.486, 0.2746", "469.823, 175.317, 120.379, 0.2746", "469.823, 174.271, 121.277, 0.2746", "469.823, 173.204, 122.137, 0.2746", "469.823, 172.072, 122.873, 0.2746", "469.823, 170.93, 123.46, 0.2746", "469.823, 169.81, 123.957, 0.2746", "469.823, 168.718, 124.451, 0.2746", "469.746, 167.611, 124.912, 0.2746", "469.549, 166.485, 125.279, 0.2746", "469.222, 165.398, 125.6, 0.2746", "468.734, 164.372, 125.933, 0.2746", "468.28, 163.425, 126.361, 0.2746", "467.815, 162.471, 126.868, 0.2746", "467.269, 161.484, 127.341, 0.2746", "466.836, 160.444, 127.772, 0.2746", "466.171, 159.583, 128.202, 0.2746", "465.285, 158.865, 128.476, 0.2746", "464.323, 158.391, 128.5, 0.2746", "463.507, 157.906, 128.323, 0.2746", "463.003, 156.95, 128.274, 0.2746", "462.127, 156.458, 128.458, 0.2746", "461.103, 156.007, 128.709, 0.2746", "460.17, 155.362, 128.965, 0.2746", "459.373, 154.546, 129.234, 0.2746", "458.595, 153.724, 129.516, 0.2746", "457.839, 152.87, 129.711, 0.2746", "457.129, 151.987, 129.824, 0.2746", "456.471, 151.063, 129.983, 0.2746", "455.806, 150.155, 130.213, 0.2746", "455.042, 149.305, 130.462, 0.2746", "454.336, 148.415, 130.727, 0.2746", "453.796, 147.407, 131.02, 0.2746", "453.246, 146.43, 131.39, 0.2746", "452.611, 145.564, 131.918, 0.2746", "451.907, 144.754, 132.562, 0.2746", "451.143, 143.967, 133.263, 0.2746", "450.485, 143.195, 134.055, 0.2746", "449.902, 142.419, 134.921, 0.2746", "449.382, 141.493, 135.708, 0.2746", "448.902, 140.528, 136.229, 0.2746", "448.032, 139.957, 136.508, 0.2744", "447.256, 139.42, 136.863, 0.2744", "446.408, 139.01, 137.367, 0.2742", "445.408, 138.542, 137.867, 0.274", "444.362, 138.096, 138.339, 0.2736", "443.321, 137.671, 138.842, 0.2728", "442.272, 137.251, 139.368, 0.2712", "441.17, 136.97, 139.829, 0.2684", "440.046, 136.838, 140.268, 0.2626", "439.083, 136.335, 140.74, 0.2542", "438.538, 135.388, 141.235, 0.2288", "438.227, 134.587, 142.787, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "463.633, 232.697, 86.7423, 0.3738", "463.828, 232.122, 86.7793, 0.3346", "464.196, 231.039, 86.7994, 0.3014", "464.565, 229.957, 86.8129, 0.2772", "464.934, 228.873, 86.8218, 0.2794", "465.233, 227.769, 86.8291, 0.2834", "465.111, 226.634, 86.8372, 0.2908", "464.978, 225.497, 86.8487, 0.3058", "464.844, 224.361, 86.8644, 0.3272", "464.71, 223.225, 86.8862, 0.3986", "464.746, 222.082, 86.917, 0.3754", "464.907, 220.95, 86.9607, 0.4024", "465.072, 219.817, 87.0223, 0.3406", "465.236, 218.686, 87.1052, 0.3124", "465.401, 217.553, 87.2122, 0.2974", "465.601, 216.437, 87.3908, 0.317", "465.821, 215.336, 87.6506, 0.3536", "466.041, 214.236, 87.9631, 0.4186", "466.261, 213.135, 88.3008, 0.5534", "466.417, 212.01, 88.6026, 0.7348", "466.494, 210.868, 88.8168, 0.7172", "466.571, 209.726, 88.949, 0.572", "466.648, 208.585, 89.0151, 0.3918", "466.726, 207.444, 89.0338, 0.3128", "466.854, 206.307, 89.0221, 0.2994", "467.18, 205.21, 88.9935, 0.3152", "467.506, 204.114, 88.9535, 0.3754", "467.833, 203.018, 88.8989, 0.3376", "468.16, 201.921, 88.8269, 0.3068", "468.237, 200.782, 88.7093, 0.287", "468.263, 199.641, 88.5458, 0.2988", "468.291, 198.5, 88.3434, 0.3142", "468.317, 197.359, 88.111, 0.3736" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "468.317, 197.359, 88.111, 0.3736", "468.395, 196.922, 88.1177, 0.4576", "468.593, 195.817, 87.8864, 0.3594", "468.826, 194.718, 87.7738, 0.3", "469.112, 193.63, 87.6882, 0.2746", "469.316, 192.517, 87.687, 0.2746", "469.365, 191.381, 87.8466, 0.2748", "469.365, 190.39, 88.3092, 0.2748", "469.427, 189.819, 89.1596, 0.2752", "469.684, 189.055, 90.1978, 0.2758", "470.071, 188.047, 91.1674, 0.2768", "470.575, 187.047, 91.8624, 0.2786", "471.203, 186.094, 92.363, 0.282", "471.843, 185.15, 92.7326, 0.2882", "472.478, 184.212, 93.0454, 0.3008", "473.322, 183.485, 93.3856, 0.318", "474.281, 182.932, 93.7924, 0.3808", "475.325, 182.529, 94.2309, 0.3476", "476.389, 182.163, 94.6576, 0.3248", "477.317, 181.523, 95.0407, 0.3228", "478.208, 180.829, 95.3694, 0.3536", "479.111, 180.127, 95.5948, 0.4722", "480.099, 179.629, 95.6301, 0.3932", "481.229, 179.47, 95.6234, 0.3254", "482.339, 179.45, 95.6956, 0.2746" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "468.317, 197.359, 88.111, 0.3736", "468.454, 196.738, 87.8301, 0.3342", "468.693, 195.655, 87.4793, 0.3006", "468.926, 194.565, 87.099, 0.2756", "469.113, 193.445, 86.7611, 0.2766", "469.287, 192.317, 86.4847, 0.2782", "469.39, 191.178, 86.2781, 0.2814", "469.453, 190.036, 86.1378, 0.287", "469.549, 188.896, 86.0451, 0.2988", "469.895, 187.815, 85.9748, 0.3142", "470.32, 186.752, 85.911, 0.3734", "470.727, 185.694, 85.806, 0.3338", "471.08, 184.614, 85.6775, 0.3", "471.275, 183.546, 85.4706, 0.2746", "471.476, 182.429, 85.3031, 0.2746", "471.654, 181.332, 85.3107, 0.2746" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "482.339, 179.45, 95.6956, 0.2746", "482.948, 178.589, 97.6206, 0.2288", "483.444, 178.006, 99.629, 0.2746", "483.847, 177.426, 100.553, 0.2748", "484.4, 176.476, 101.404, 0.2748", "485.276, 175.781, 102.171, 0.2752", "486.213, 175.224, 102.907, 0.2756", "487.205, 174.707, 103.559, 0.2766", "488.216, 174.208, 104.097, 0.2782", "489.24, 173.711, 104.536, 0.2814", "489.899, 172.886, 104.935, 0.287", "490.234, 171.846, 105.368, 0.2988", "490.817, 170.992, 105.942, 0.3142", "491.389, 170.195, 106.659, 0.3734", "491.827, 169.273, 107.433, 0.3338", "492.351, 168.302, 108.104, 0.3", "493.266, 167.747, 108.592, 0.2746", "494.2, 167.254, 109.002, 0.2746", "495.106, 166.645, 109.428, 0.2746", "496.137, 166.214, 109.873, 0.2746", "497.131, 165.708, 110.358, 0.2746", "498.069, 165.091, 110.889, 0.2746", "498.766, 164.226, 111.414, 0.2746", "499.596, 163.563, 111.97, 0.2746", "500.595, 163.107, 112.588, 0.2746", "501.593, 162.649, 113.249, 0.2746", "502.534, 162.263, 113.993, 0.2746", "503.445, 161.915, 114.811, 0.2746", "504.354, 161.567, 115.648, 0.2746", "505.427, 161.475, 116.244, 0.2746", "506.556, 161.469, 116.555, 0.2746", "507.683, 161.503, 116.675, 0.2746", "508.806, 161.623, 116.733, 0.2746", "509.922, 161.774, 116.727, 0.2746", "511.006, 162.106, 116.577, 0.2746", "512.089, 162.438, 116.34, 0.2746", "513.171, 162.76, 116.027, 0.2746", "514.252, 163.064, 115.633, 0.2746", "515.333, 163.368, 115.177, 0.2746", "516.427, 163.622, 114.69, 0.2746", "517.525, 163.859, 114.2, 0.2746", "518.62, 164.096, 113.711, 0.2746", "519.708, 164.417, 113.254, 0.2746", "520.792, 164.746, 112.825, 0.2746", "521.877, 165.076, 112.421, 0.2746", "522.919, 165.514, 112.03, 0.2746", "523.949, 165.982, 111.65, 0.2744", "524.98, 166.451, 111.278, 0.2744", "525.979, 166.983, 110.914, 0.2742", "526.976, 167.519, 110.561, 0.274", "527.97, 168.059, 110.223, 0.2736", "528.923, 168.689, 109.935, 0.2728", "529.876, 169.318, 109.687, 0.2712", "530.829, 169.943, 109.469, 0.2684", "531.782, 170.564, 109.263, 0.2626", "532.735, 171.182, 109.069, 0.2542", "533.754, 171.699, 108.933, 0.2288", "534.78, 172.205, 108.78, 0.2288" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "482.339, 179.45, 95.6956, 0.2746", "482.918, 179.45, 95.7398, 0.2746", "484.061, 179.45, 95.7729, 0.2746", "485.203, 179.45, 95.7835, 0.2746", "486.34, 179.45, 95.7284, 0.2746", "487.468, 179.45, 95.5738, 0.2746", "488.602, 179.45, 95.37, 0.2746", "489.746, 179.45, 95.1863, 0.2746", "490.891, 179.439, 95.0177, 0.2746", "492.023, 179.363, 94.836, 0.2746", "493.142, 179.217, 94.6198, 0.2746", "494.253, 178.996, 94.4157, 0.2746", "495.358, 178.705, 94.2584, 0.2746", "496.482, 178.522, 94.106, 0.2746", "497.617, 178.419, 93.9352, 0.2746", "498.746, 178.28, 93.7471, 0.2746", "499.873, 178.141, 93.5441, 0.2746", "501.005, 178.076, 93.3282, 0.2746", "502.141, 178.076, 93.1168, 0.2746", "503.281, 178.076, 92.9589, 0.2746", "504.424, 178.076, 92.8824, 0.2746", "505.557, 177.974, 92.8637, 0.2746", "506.655, 177.665, 92.8749, 0.2748", "507.75, 177.346, 92.8984, 0.2748", "508.882, 177.247, 92.9244, 0.2752", "510.025, 177.286, 92.9457, 0.2758", "511.168, 177.275, 92.9606, 0.2766", "512.309, 177.193, 92.9743, 0.2786", "513.411, 176.941, 92.995, 0.2818", "514.438, 176.441, 93.0325, 0.2882", "515.479, 175.994, 93.0776, 0.2996", "516.573, 175.752, 93.0899, 0.323", "517.651, 175.466, 93.1336, 0.3538", "518.615, 175.074, 93.3873, 0.4726", "519.614, 174.883, 93.826, 0.3938", "520.732, 174.872, 94.3191, 0.3264", "521.859, 174.907, 94.8254, 0.2766", "522.974, 175.057, 95.3252, 0.2782", "524.091, 175.216, 95.7869, 0.2814", "525.198, 175.065, 96.1635, 0.287", "526.286, 174.717, 96.4614, 0.2988", "527.367, 174.379, 96.7548, 0.3142", "528.443, 174.046, 97.0777, 0.3734", "529.526, 173.71, 97.4025, 0.3338", "530.615, 173.371, 97.7124, 0.3", "531.719, 173.291, 98.0364, 0.2746", "532.828, 173.428, 98.3805, 0.2746", "533.943, 173.376, 98.6969, 0.2746", "535.06, 173.166, 98.9629, 0.2746", "536.184, 173.189, 99.1642, 0.2746", "537.307, 173.406, 99.293, 0.2746", "538.371, 173.531, 99.2762, 0.2746", "539.401, 173.805, 99.1609, 0.2746", "540.452, 173.952, 99.2029, 0.2744", "541.516, 173.973, 99.4636, 0.2744", "542.585, 173.997, 99.8908, 0.2742", "543.677, 174.112, 100.402, 0.274", "544.776, 174.307, 100.926, 0.2736", "545.896, 174.5, 101.378, 0.2728", "547.023, 174.688, 101.679, 0.2712", "548.152, 174.874, 101.855, 0.2684", "549.291, 174.994, 101.945, 0.2626", "550.428, 175.114, 101.981, 0.2542", "551.567, 175.227, 101.991, 0.2288", "552.705, 175.329, 101.991, 0.2288" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "471.654, 181.332, 85.3107, 0.2746", "471.829, 180.572, 85.7027, 0.2288", "472.177, 179.511, 87.4412, 0.2746", "472.631, 178.745, 88.2008, 0.2746", "473.185, 178.167, 89.2522, 0.2746", "473.912, 177.431, 90.3624, 0.2746", "474.582, 176.648, 91.5116, 0.2746", "475.141, 175.882, 92.7203, 0.2746", "475.49, 175.001, 93.9207, 0.2746", "475.746, 174.063, 95.0664, 0.2746", "475.653, 172.968, 96.0254, 0.2746", "475.513, 171.853, 96.8321, 0.2746", "475.57, 170.716, 97.4616, 0.2746", "475.698, 169.579, 97.9443, 0.2746", "475.782, 168.452, 98.4015, 0.2746", "475.809, 167.36, 98.9262, 0.2746", "475.842, 166.269, 99.5243, 0.2746", "475.897, 165.173, 100.168, 0.2746", "475.83, 164.098, 100.856, 0.2746", "475.781, 163.065, 101.591, 0.2746", "475.435, 162.011, 102.248, 0.2746", "474.93, 161.007, 102.668, 0.2746", "475.32, 159.971, 103.029, 0.2746", "476.124, 159.167, 103.313, 0.2746", "476.71, 158.214, 103.605, 0.2746", "477.188, 157.204, 103.894, 0.2746", "477.434, 156.106, 104.123, 0.2746", "478.103, 155.199, 104.321, 0.2746", "478.169, 154.099, 104.517, 0.2746", "477.754, 153.059, 104.705, 0.2746", "477.465, 151.976, 104.796, 0.2746", "477.249, 150.875, 104.944, 0.2746", "476.972, 149.831, 105.188, 0.2746", "476.417, 148.83, 105.407, 0.2746", "475.872, 147.824, 105.608, 0.2746", "475.362, 146.8, 105.802, 0.2746", "474.419, 146.548, 106.101, 0.2746", "473.403, 146.233, 106.441, 0.2746", "472.564, 145.467, 106.754, 0.2746", "471.785, 144.628, 107.06, 0.2746", "471.595, 143.515, 107.358, 0.2746", "471.055, 143.427, 107.93, 0.2746", "470.286, 143.238, 108.589, 0.2746", "469.282, 142.691, 109.096, 0.2746", "468.252, 142.193, 109.468, 0.2746", "467.211, 141.72, 109.712, 0.2746", "466.225, 141.142, 109.838, 0.2746", "465.253, 140.538, 109.858, 0.2746", "464.274, 139.947, 109.83, 0.2746", "463.277, 139.387, 109.788, 0.2746", "462.278, 138.828, 109.727, 0.2746", "461.304, 138.23, 109.638, 0.2746", "460.342, 137.612, 109.513, 0.2746", "459.366, 137.016, 109.356, 0.2746", "458.413, 136.384, 109.179, 0.2746", "457.663, 135.651, 108.819, 0.2744", "457.646, 135.142, 108.162, 0.2744", "456.593, 134.693, 107.627, 0.2742", "455.541, 134.246, 107.21, 0.274", "454.49, 133.798, 106.907, 0.2736", "453.437, 133.349, 106.71, 0.2728", "452.443, 132.784, 106.625, 0.2712", "451.449, 132.218, 106.612, 0.2684", "450.454, 131.653, 106.609, 0.2626", "449.459, 131.086, 106.613, 0.2542", "448.465, 130.521, 106.621, 0.2288", "447.471, 129.955, 106.639, 0.2288" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "471.654, 181.332, 85.3107, 0.2746", "471.706, 180.721, 85.4487, 0.2746" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "471.706, 180.721, 85.4487, 0.2746", "472.231, 179.931, 85.6363, 0.2746", "473.243, 179.452, 85.806, 0.2746", "474.37, 179.319, 85.9398, 0.2748", "475.396, 178.837, 86.021, 0.2748", "476.277, 178.107, 86.0482, 0.2752", "477.04, 177.279, 86.0216, 0.2758", "477.579, 176.29, 85.9552, 0.2766", "478.019, 175.245, 85.9454, 0.2786", "478.428, 174.195, 85.9544, 0.2818", "479.166, 173.409, 86.0712, 0.2882", "479.953, 172.697, 86.3162, 0.2994", "480.624, 171.773, 86.5642, 0.3228", "481.377, 170.923, 86.8563, 0.3536", "482.256, 170.221, 87.2071, 0.4722", "483.209, 169.656, 87.6232, 0.3932", "483.866, 168.952, 88.1339, 0.3254", "484.211, 168.001, 88.7032, 0.2746", "484.937, 167.286, 89.1856, 0.2746", "486.039, 167.092, 89.4877, 0.2746", "486.977, 167.071, 89.458, 0.2746", "487.85, 166.772, 89.1444, 0.2746", "488.765, 166.169, 88.9325, 0.2746", "489.626, 165.517, 88.697, 0.2746", "490.679, 165.096, 88.5982, 0.2746", "491.752, 164.825, 88.7628, 0.2746", "492.767, 164.665, 89.231, 0.2746", "493.777, 164.505, 89.9074, 0.2746", "494.774, 163.977, 90.5593, 0.2746", "495.772, 163.427, 91.1772, 0.2746" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "471.706, 180.721, 85.4487, 0.2746", "471.857, 179.742, 85.8875, 0.2288", "472.031, 178.613, 85.769, 0.2746", "472.278, 177.507, 85.71, 0.2746", "472.575, 176.42, 85.5834, 0.2746", "472.892, 175.329, 85.4375, 0.2746", "473.022, 174.204, 85.3149, 0.2746", "473.2, 173.086, 85.2524, 0.2746", "473.774, 172.177, 85.2942, 0.2746", "474.487, 171.307, 85.3278, 0.2746", "475.026, 170.315, 85.2718, 0.2746", "475.447, 169.259, 85.1376, 0.2746", "475.819, 168.182, 84.9447, 0.2746", "476.148, 167.095, 84.6852, 0.2746", "476.436, 166.008, 84.3587, 0.2746", "476.538, 164.898, 84.0008, 0.2746", "476.419, 163.786, 83.6335, 0.2746", "476.299, 162.656, 83.314, 0.2746", "476.258, 161.526, 83.1088, 0.2746", "476.274, 160.397, 83.0015, 0.2746", "476.469, 159.283, 82.8884, 0.2746", "476.243, 158.572, 82.5252, 0.2746", "476.919, 157.976, 82.094, 0.2746", "477.509, 157.173, 81.793, 0.2746", "477.427, 156.074, 81.5164, 0.2746", "477.264, 154.965, 81.3602, 0.2746", "477.606, 153.98, 81.3719, 0.2746", "477.889, 152.97, 81.3778, 0.2746", "477.704, 151.871, 81.2918, 0.2746", "477.702, 150.756, 81.1096, 0.2746", "477.895, 149.645, 80.8419, 0.2746", "478.109, 148.535, 80.509, 0.2746", "478.319, 147.42, 80.1469, 0.2746", "478.601, 146.32, 79.7927, 0.2746", "479.054, 145.278, 79.4606, 0.2746", "479.532, 144.241, 79.1496, 0.2746", "479.976, 143.186, 78.86, 0.2746", "480.606, 142.264, 78.521, 0.2746", "481.494, 141.602, 78.1024, 0.2746", "481.89, 140.628, 77.6154, 0.2746", "482.103, 139.529, 77.0742, 0.2746", "482.304, 138.43, 76.4898, 0.2746", "482.499, 137.329, 75.8814, 0.2746", "482.729, 136.289, 75.2184, 0.2746", "482.975, 135.276, 74.5069, 0.2746", "483.019, 134.168, 73.8598, 0.2746", "483.019, 133.039, 73.2956, 0.2746", "483.097, 131.912, 72.8269, 0.2744", "483.294, 130.788, 72.469, 0.2744", "483.469, 129.663, 72.2005, 0.2742", "483.384, 128.529, 71.9751, 0.274", "483.298, 127.396, 71.7716, 0.2736", "483.052, 126.286, 71.6173, 0.2728", "482.738, 125.186, 71.5134, 0.2712", "482.561, 124.067, 71.447, 0.2684", "482.561, 122.923, 71.4104, 0.2626", "482.562, 121.779, 71.3958, 0.2542", "482.606, 120.636, 71.3933, 0.2288", "483.476, 119.986, 71.3933, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "495.772, 163.427, 91.1772, 0.2746", "496.366, 163.029, 91.8243, 0.2746", "497.346, 162.599, 92.4731, 0.2746", "498.427, 162.368, 93.0734, 0.2746", "499.536, 162.207, 93.6149, 0.2746", "500.64, 161.996, 94.1038, 0.2746", "501.733, 161.715, 94.5171, 0.2746", "502.8, 161.318, 94.8189, 0.2746", "503.857, 160.885, 95.0096, 0.2746", "504.969, 160.682, 95.1224, 0.2746", "506.113, 160.682, 95.1838, 0.2746", "507.257, 160.682, 95.2134, 0.2746", "508.401, 160.682, 95.2294, 0.2746", "509.545, 160.682, 95.2442, 0.2746", "510.686, 160.634, 95.265, 0.2746", "511.821, 160.5, 95.2952, 0.2746", "512.952, 160.318, 95.3375, 0.2746", "514.058, 160.042, 95.3943, 0.2746", "515.141, 159.673, 95.4663, 0.2746", "516.242, 159.435, 95.5836, 0.2746", "517.366, 159.366, 95.7743, 0.2746", "518.5, 159.32, 95.9958, 0.2748", "519.642, 159.308, 96.1985, 0.2748", "520.786, 159.308, 96.3726, 0.2752", "521.928, 159.335, 96.5261, 0.2756", "523.07, 159.4, 96.6664, 0.2766", "524.208, 159.428, 96.8279, 0.2784", "525.339, 159.382, 97.0553, 0.2818", "526.464, 159.328, 97.3459, 0.2878", "527.591, 159.308, 97.6783, 0.3002", "528.719, 159.308, 98.0319, 0.3166", "529.854, 159.308, 98.3615, 0.3782", "530.999, 159.308, 98.6258, 0.3426", "532.142, 159.302, 98.8436, 0.316", "533.28, 159.266, 99.0606, 0.3056", "534.407, 159.201, 99.314, 0.3266", "535.525, 159.029, 99.5893, 0.3976", "536.62, 158.704, 99.864, 0.3732", "537.716, 158.376, 100.138, 0.3986", "538.823, 158.086, 100.404, 0.3334", "539.663, 157.714, 100.798, 0.299", "540.182, 157.23, 101.442, 0.2728", "541.166, 156.714, 101.95, 0.2712", "542.086, 156.043, 102.311, 0.2684", "542.917, 155.274, 102.491, 0.2626", "543.724, 154.496, 102.482, 0.2542", "544.638, 153.834, 102.365, 0.2288", "545.604, 153.221, 102.054, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "495.772, 163.427, 91.1772, 0.2746", "496.299, 162.818, 91.9943, 0.2288", "497.236, 162.372, 91.6955, 0.2746", "498.348, 162.473, 91.5757, 0.2746", "498.839, 162.179, 91.2204, 0.2746", "498.436, 161.271, 90.6858, 0.2746", "498.633, 160.384, 90.0659, 0.2746", "499.437, 159.638, 89.5423, 0.2746", "500.287, 158.874, 89.1789, 0.2746", "501.064, 158.059, 89.0392, 0.2746", "501.795, 157.211, 89.1097, 0.2746", "502.471, 156.297, 89.2578, 0.2746", "503.12, 155.354, 89.4099, 0.2746", "503.669, 154.353, 89.5339, 0.2746", "504.18, 153.33, 89.6238, 0.2746", "504.827, 152.468, 89.7887, 0.2746", "505.459, 151.637, 89.8092, 0.2746", "506.197, 150.796, 89.8425, 0.2746", "506.955, 149.954, 89.9058, 0.2746", "507.73, 149.134, 89.9623, 0.2746", "508.687, 148.505, 89.9318, 0.2746", "509.646, 147.885, 89.8061, 0.2746", "510.571, 147.28, 89.5927, 0.2746", "510.973, 146.255, 89.2021, 0.2746", "511.317, 145.313, 88.5354, 0.2746", "511.404, 144.224, 87.7876, 0.2746", "511.38, 143.168, 86.8899, 0.2746", "511.356, 142.111, 85.8855, 0.2746", "510.969, 141.222, 84.7568, 0.2746", "510.557, 140.335, 83.5551, 0.2746", "510.176, 139.398, 82.3399, 0.2746", "509.629, 138.564, 81.128, 0.2746", "508.998, 137.648, 80.0811, 0.2746", "508.441, 137.345, 78.9096, 0.2746", "508.199, 136.795, 77.7286, 0.2744", "508.199, 135.663, 76.7841, 0.2744", "508.467, 134.563, 76.0754, 0.2742", "508.398, 133.548, 75.5, 0.274", "507.85, 132.614, 74.9571, 0.2736", "507.916, 131.513, 74.5259, 0.2728", "508.126, 130.427, 74.0894, 0.2712", "508.199, 129.327, 73.6215, 0.2684", "508.199, 128.195, 73.1884, 0.2626", "508.403, 127.466, 72.5612, 0.2542", "509.426, 126.982, 72.0751, 0.2288", "510.49, 127.313, 71.3933, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_710",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_711",
    "groups" : [ ],
    "sections" : [ "dend_35", "dend_32", "dend_23", "dend_16", "dend_13", "dend_10", "dend_3", "dend_0", "apic_0", "dend_34", "dend_33", "dend_25", "dend_24", "dend_22", "dend_17", "dend_15", "dend_14", "dend_12", "dend_11", "dend_5", "dend_4", "dend_2", "dend_1", "apic_22", "apic_1", "dend_29", "dend_26", "dend_19", "dend_18", "dend_9", "dend_6", "apic_24", "apic_23", "apic_19", "apic_2", "dend_31", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_8", "dend_7", "apic_21", "apic_20", "apic_16", "apic_3", "apic_18", "apic_17", "apic_15", "apic_4", "apic_12", "apic_5", "apic_14", "apic_13", "apic_11", "apic_6", "apic_8", "apic_7", "apic_10", "apic_9" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_35", "dend_32", "dend_23", "dend_16", "dend_13", "dend_10", "dend_3", "dend_0", "dend_34", "dend_33", "dend_25", "dend_24", "dend_22", "dend_17", "dend_15", "dend_14", "dend_12", "dend_11", "dend_5", "dend_4", "dend_2", "dend_1", "dend_29", "dend_26", "dend_19", "dend_18", "dend_9", "dend_6", "dend_31", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_8", "dend_7" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_22", "apic_1", "apic_24", "apic_23", "apic_19", "apic_2", "apic_21", "apic_20", "apic_16", "apic_3", "apic_18", "apic_17", "apic_15", "apic_4", "apic_12", "apic_5", "apic_14", "apic_13", "apic_11", "apic_6", "apic_8", "apic_7", "apic_10", "apic_9" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29233",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_1", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_6", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "5.844842"
  }, {
    "group" : "apic",
    "value" : "5.844842"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "152.87212"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "9.535982E-6",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "3.3665183E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.46390444",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.0014326418",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.08474503",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.006786282",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.4419895E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.018259887",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.6347578E-4",
    "erev" : "-85.89961"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "4.1470074E-4",
    "erev" : "-85.89961"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.0275591E-7",
    "erev" : "-85.89961"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "1.680976E-4",
    "erev" : "-85.89961"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "1.9222134E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0012072715",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_480051220",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_480051220

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_22, id: apic_22, parent: apic_0
create apic_22
public apic_22
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: apic_24, id: apic_24, parent: apic_22
create apic_24
public apic_24
// Section: apic_23, id: apic_23, parent: apic_22
create apic_23
public apic_23
// Section: apic_19, id: apic_19, parent: apic_1
create apic_19
public apic_19
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: apic_21, id: apic_21, parent: apic_19
create apic_21
public apic_21
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_16, id: apic_16, parent: apic_2
create apic_16
public apic_16
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: apic_18, id: apic_18, parent: apic_16
create apic_18
public apic_18
// Section: apic_17, id: apic_17, parent: apic_16
create apic_17
public apic_17
// Section: apic_15, id: apic_15, parent: apic_3
create apic_15
public apic_15
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_12, id: apic_12, parent: apic_4
create apic_12
public apic_12
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_14, id: apic_14, parent: apic_12
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_11, id: apic_11, parent: apic_5
create apic_11
public apic_11
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_8, id: apic_8, parent: apic_6
create apic_8
public apic_8
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_710, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_710
// Group: {name=ModelViewParmSubset_711, groups=[], sections=[dend_35, dend_32, dend_23, dend_16, dend_13, dend_10, dend_3, dend_0, apic_0, dend_34, dend_33, dend_25, dend_24, dend_22, dend_17, dend_15, dend_14, dend_12, dend_11, dend_5, dend_4, dend_2, dend_1, apic_22, apic_1, dend_29, dend_26, dend_19, dend_18, dend_9, dend_6, apic_24, apic_23, apic_19, apic_2, dend_31, dend_30, dend_28, dend_27, dend_21, dend_20, dend_8, dend_7, apic_21, apic_20, apic_16, apic_3, apic_18, apic_17, apic_15, apic_4, apic_12, apic_5, apic_14, apic_13, apic_11, apic_6, apic_8, apic_7, apic_10, apic_9]}
objref ModelViewParmSubset_711
// Group: {name=dend, groups=[], sections=[dend_35, dend_32, dend_23, dend_16, dend_13, dend_10, dend_3, dend_0, dend_34, dend_33, dend_25, dend_24, dend_22, dend_17, dend_15, dend_14, dend_12, dend_11, dend_5, dend_4, dend_2, dend_1, dend_29, dend_26, dend_19, dend_18, dend_9, dend_6, dend_31, dend_30, dend_28, dend_27, dend_21, dend_20, dend_8, dend_7]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_22, apic_1, apic_24, apic_23, apic_19, apic_2, apic_21, apic_20, apic_16, apic_3, apic_18, apic_17, apic_15, apic_4, apic_12, apic_5, apic_14, apic_13, apic_11, apic_6, apic_8, apic_7, apic_10, apic_9]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_29233, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_29233
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_1, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_6, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_480051220
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000397487876633)
    connect dend_35(0), soma_0(0.5000397487876633)
    connect dend_32(0), soma_0(0.5000397487876633)
    connect dend_23(0), soma_0(0.5000397487876633)
    connect dend_16(0), soma_0(0.5000397487876633)
    connect dend_13(0), soma_0(0.5000397487876633)
    connect dend_10(0), soma_0(0.5000397487876633)
    connect dend_3(0), soma_0(0.5000397487876633)
    connect dend_0(0), soma_0(0.5000397487876633)
    connect apic_0(0), soma_0(0.5000397487876633)
    connect axon_1(0), axon_0(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_22(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect apic_24(0), apic_22(1.0)
    connect apic_23(0), apic_22(1.0)
    connect apic_19(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect apic_21(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_16(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect apic_18(0), apic_16(1.0)
    connect apic_17(0), apic_16(1.0)
    connect apic_15(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_12(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_14(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_11(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_8(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 337.94, 566.166, 30.8, 12.5794 ) }
    soma_0 { pt3dadd( 344.23, 566.166, 30.8, 12.5794 ) }
    soma_0 { pt3dadd( 350.519, 566.166, 30.8, 12.5794 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 344.229, 566.166, 30.8, 1.0 ) }
    axon_0 { pt3dadd( 350.071, 579.982, 30.8, 1.0 ) }
    axon_0 { pt3dadd( 355.912, 593.798, 30.8, 1.0 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 340.711, 570.122, 32.1314, 0.2288 ) }
    dend_35 { pt3dadd( 339.973, 570.901, 32.9045, 0.2846 ) }
    dend_35 { pt3dadd( 339.063, 571.462, 33.2623, 0.2928 ) }
    dend_35 { pt3dadd( 338.001, 571.842, 33.5922, 0.3096 ) }
    dend_35 { pt3dadd( 336.94, 572.229, 33.8962, 0.3342 ) }
    dend_35 { pt3dadd( 335.849, 572.424, 34.0704, 0.4118 ) }
    dend_35 { pt3dadd( 334.784, 572.691, 34.0777, 0.3996 ) }
    dend_35 { pt3dadd( 333.752, 573.137, 34.0122, 0.448 ) }
    dend_35 { pt3dadd( 332.738, 573.659, 33.9962, 0.4218 ) }
    dend_35 { pt3dadd( 331.781, 574.225, 34.127, 0.478 ) }
    dend_35 { pt3dadd( 330.947, 574.966, 34.3689, 0.5318 ) }
    dend_35 { pt3dadd( 330.625, 575.833, 34.6959, 0.4192 ) }
    dend_35 { pt3dadd( 330.724, 576.862, 35.054, 0.3264 ) }
    dend_35 { pt3dadd( 330.074, 577.592, 35.5062, 0.2762 ) }
    dend_35 { pt3dadd( 329.027, 577.786, 35.814, 0.2776 ) }
    dend_35 { pt3dadd( 328.232, 578.086, 36.2704, 0.2802 ) }
    dend_35 { pt3dadd( 327.521, 578.877, 36.7777, 0.2852 ) }
    dend_35 { pt3dadd( 327.069, 579.915, 37.1428, 0.2944 ) }
    dend_35 { pt3dadd( 326.803, 581.023, 37.4654, 0.3108 ) }
    dend_35 { pt3dadd( 326.15, 581.932, 37.7289, 0.3438 ) }
    dend_35 { pt3dadd( 325.659, 582.878, 38.108, 0.3934 ) }
    dend_35 { pt3dadd( 325.16, 583.81, 38.5476, 0.5404 ) }
    dend_35 { pt3dadd( 325.111, 584.899, 39.0597, 0.5472 ) }
    dend_35 { pt3dadd( 325.482, 585.928, 39.6438, 0.4762 ) }
    dend_35 { pt3dadd( 325.922, 586.964, 40.2578, 0.5218 ) }
    dend_35 { pt3dadd( 325.978, 588.068, 40.8727, 0.4328 ) }
    dend_35 { pt3dadd( 326.216, 588.852, 41.6366, 0.4242 ) }
    dend_35 { pt3dadd( 326.768, 589.79, 42.4088, 0.3338 ) }
    dend_35 { pt3dadd( 326.7, 590.823, 43.2309, 0.2998 ) }
    dend_35 { pt3dadd( 327.141, 591.327, 44.1652, 0.2742 ) }
    dend_35 { pt3dadd( 327.755, 591.525, 45.036, 0.274 ) }
    dend_35 { pt3dadd( 327.858, 592.661, 45.6697, 0.2736 ) }
    dend_35 { pt3dadd( 328.175, 593.752, 46.1269, 0.2728 ) }
    dend_35 { pt3dadd( 328.499, 594.842, 46.4881, 0.2712 ) }
    dend_35 { pt3dadd( 328.922, 595.898, 46.7547, 0.2684 ) }
    dend_35 { pt3dadd( 329.302, 596.929, 47.0322, 0.2626 ) }
    dend_35 { pt3dadd( 330.131, 597.639, 47.2486, 0.2542 ) }
    dend_35 { pt3dadd( 330.998, 598.283, 47.5373, 0.2288 ) }
    dend_35 { pt3dadd( 331.417, 599.306, 47.7859, 0.2288 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 45/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 338.234, 567.462, 29.4308, 0.2288 ) }
    dend_32 { pt3dadd( 337.43, 566.908, 29.223, 0.2928 ) }
    dend_32 { pt3dadd( 336.621, 566.643, 29.367, 0.3094 ) }
    dend_32 { pt3dadd( 335.671, 566.557, 29.2659, 0.3338 ) }
    dend_32 { pt3dadd( 334.826, 566.723, 28.8764, 0.4108 ) }
    dend_32 { pt3dadd( 333.747, 566.633, 28.443, 0.3988 ) }
    dend_32 { pt3dadd( 332.703, 566.186, 28.0204, 0.4408 ) }
    dend_32 { pt3dadd( 331.621, 565.881, 27.6634, 0.4372 ) }
    dend_32 { pt3dadd( 330.498, 565.747, 27.3244, 0.3676 ) }
    dend_32 { pt3dadd( 329.364, 565.708, 27.0477, 0.3154 ) }
    dend_32 { pt3dadd( 328.221, 565.708, 26.8321, 0.303 ) }
    dend_32 { pt3dadd( 327.077, 565.708, 26.6465, 0.3282 ) }
    dend_32 { pt3dadd( 325.993, 565.71, 26.369, 0.3698 ) }
    dend_32 { pt3dadd( 324.937, 565.723, 25.9792, 0.4722 ) }
    dend_32 { pt3dadd( 323.821, 565.818, 25.6463, 0.5394 ) }
    dend_32 { pt3dadd( 322.731, 566.138, 25.4302, 0.5718 ) }
    dend_32 { pt3dadd( 321.728, 566.68, 25.2932, 0.6232 ) }
    dend_32 { pt3dadd( 320.778, 567.315, 25.2185, 0.5302 ) }
    dend_32 { pt3dadd( 319.82, 567.942, 25.1992, 0.5856 ) }
    dend_32 { pt3dadd( 318.757, 568.345, 25.2109, 0.4984 ) }
    dend_32 { pt3dadd( 317.625, 568.456, 25.2288, 0.5726 ) }
    dend_32 { pt3dadd( 316.484, 568.536, 25.2512, 0.4794 ) }
    dend_32 { pt3dadd( 315.363, 568.751, 25.258, 0.5126 ) }
    dend_32 { pt3dadd( 314.264, 569.062, 25.2426, 0.4892 ) }
    dend_32 { pt3dadd( 313.186, 569.444, 25.2224, 0.6294 ) }
    dend_32 { pt3dadd( 312.107, 569.824, 25.2036, 0.6842 ) }
    dend_32 { pt3dadd( 311.021, 570.182, 25.1871, 0.638 ) }
    dend_32 { pt3dadd( 309.909, 570.446, 25.1698, 0.5822 ) }
    dend_32 { pt3dadd( 308.798, 570.685, 25.116, 0.5642 ) }
    dend_32 { pt3dadd( 307.68, 570.546, 25.086, 0.572 ) }
    dend_32 { pt3dadd( 306.58, 570.594, 25.1689, 0.616 ) }
    dend_32 { pt3dadd( 305.446, 570.493, 25.2064, 0.5544 ) }
    dend_32 { pt3dadd( 304.321, 570.69, 25.226, 0.449 ) }
    dend_32 { pt3dadd( 303.315, 571.211, 25.2076, 0.4396 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 79/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 349.8, 566.129, 29.1318, 0.2288 ) }
    dend_23 { pt3dadd( 350.618, 565.468, 27.7194, 0.3202 ) }
    dend_23 { pt3dadd( 351.673, 565.755, 27.1258, 0.3846 ) }
    dend_23 { pt3dadd( 352.703, 566.137, 26.4485, 0.3544 ) }
    dend_23 { pt3dadd( 353.788, 566.317, 25.7211, 0.3394 ) }
    dend_23 { pt3dadd( 354.746, 566.41, 24.8744, 0.3418 ) }
    dend_23 { pt3dadd( 355.631, 565.848, 24.0204, 0.4268 ) }
    dend_23 { pt3dadd( 356.625, 565.308, 23.3178, 0.4224 ) }
    dend_23 { pt3dadd( 357.761, 565.205, 22.7528, 0.5152 ) }
    dend_23 { pt3dadd( 358.838, 565.079, 22.211, 0.4266 ) }
    dend_23 { pt3dadd( 359.771, 565.641, 21.6826, 0.3818 ) }
    dend_23 { pt3dadd( 360.884, 565.475, 21.2352, 0.4058 ) }
    dend_23 { pt3dadd( 361.937, 565.026, 20.9014, 0.3884 ) }
    dend_23 { pt3dadd( 363.059, 564.808, 20.6394, 0.4278 ) }
    dend_23 { pt3dadd( 364.188, 564.85, 20.3829, 0.3822 ) }
    dend_23 { pt3dadd( 365.278, 565.155, 20.1527, 0.415 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 95/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 346.363, 571.49, 27.1401, 0.2288 ) }
    dend_16 { pt3dadd( 347.336, 571.934, 26.4485, 0.287 ) }
    dend_16 { pt3dadd( 348.467, 571.901, 26.2122, 0.2976 ) }
    dend_16 { pt3dadd( 349.492, 571.931, 25.7866, 0.318 ) }
    dend_16 { pt3dadd( 350.438, 572.281, 25.1787, 0.3508 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_16 { pt3dadd( 351.529, 572.344, 24.54, 0.4374 ) }
    dend_16 { pt3dadd( 352.65, 572.503, 23.9313, 0.4728 ) }
    dend_16 { pt3dadd( 353.728, 572.812, 23.3369, 0.459 ) }
    dend_16 { pt3dadd( 354.852, 572.972, 22.7959, 0.361 ) }
    dend_16 { pt3dadd( 355.932, 572.909, 22.232, 0.3032 ) }
    dend_16 { pt3dadd( 357.014, 572.724, 21.6588, 0.2804 ) }
    dend_16 { pt3dadd( 358.043, 573.151, 21.203, 0.2854 ) }
    dend_16 { pt3dadd( 358.674, 574.029, 20.6889, 0.2946 ) }
    dend_16 { pt3dadd( 359.514, 574.711, 20.1242, 0.3124 ) }
    dend_16 { pt3dadd( 360.375, 575.461, 19.6336, 0.3406 ) }
    dend_16 { pt3dadd( 361.183, 576.269, 19.2144, 0.4174 ) }
    dend_16 { pt3dadd( 361.998, 577.044, 18.772, 0.441 ) }
    dend_16 { pt3dadd( 363.073, 577.348, 18.2916, 0.3744 ) }
    dend_16 { pt3dadd( 364.045, 577.882, 17.7859, 0.329 ) }
    dend_16 { pt3dadd( 365.102, 578.075, 17.22, 0.3232 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 15/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 340.127, 563.732, 23.3764, 0.2288 ) }
    dend_13 { pt3dadd( 339.952, 562.625, 22.836, 0.34 ) }
    dend_13 { pt3dadd( 340.31, 561.569, 22.6318, 0.4162 ) }
    dend_13 { pt3dadd( 340.417, 560.448, 22.3922, 0.4386 ) }
    dend_13 { pt3dadd( 340.004, 559.422, 22.0634, 0.3702 ) }
    dend_13 { pt3dadd( 339.452, 558.441, 21.6521, 0.3202 ) }
    dend_13 { pt3dadd( 338.904, 557.44, 21.219, 0.3128 ) }
    dend_13 { pt3dadd( 338.278, 556.511, 20.718, 0.3414 ) }
    dend_13 { pt3dadd( 337.835, 555.593, 20.0637, 0.4188 ) }
    dend_13 { pt3dadd( 337.675, 554.551, 19.3348, 0.4434 ) }
    dend_13 { pt3dadd( 337.343, 553.484, 18.6382, 0.3788 ) }
    dend_13 { pt3dadd( 336.702, 552.594, 17.955, 0.3372 ) }
    dend_13 { pt3dadd( 335.914, 551.767, 17.3936, 0.3394 ) }
    dend_13 { pt3dadd( 335.443, 550.729, 16.938, 0.415 ) }
    dend_13 { pt3dadd( 334.643, 550.044, 16.4368, 0.4364 ) }
    dend_13 { pt3dadd( 333.67, 549.564, 15.927, 0.3662 ) }
    dend_13 { pt3dadd( 332.918, 548.702, 15.524, 0.3124 ) }
    dend_13 { pt3dadd( 332.387, 547.69, 15.218, 0.2988 ) }
    dend_13 { pt3dadd( 331.435, 547.063, 14.9531, 0.3142 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 339.777, 570.555, 30.4704, 0.2288 ) }
    dend_10 { pt3dadd( 338.751, 570.845, 29.7996, 0.5032 ) }
    dend_10 { pt3dadd( 337.651, 570.827, 29.4756, 0.4454 ) }
    dend_10 { pt3dadd( 336.535, 571.023, 29.1894, 0.4476 ) }
    dend_10 { pt3dadd( 335.426, 571.263, 28.9831, 0.3778 ) }
    dend_10 { pt3dadd( 334.32, 571.503, 28.7459, 0.3772 ) }
    dend_10 { pt3dadd( 333.196, 571.479, 28.4836, 0.439 ) }
    dend_10 { pt3dadd( 332.079, 571.55, 28.203, 0.4756 ) }
    dend_10 { pt3dadd( 331.189, 571.885, 27.7805, 0.4644 ) }
    dend_10 { pt3dadd( 330.28, 572.484, 27.3655, 0.371 ) }
    dend_10 { pt3dadd( 329.312, 572.597, 27.2992, 0.3216 ) }
    dend_10 { pt3dadd( 328.354, 572.82, 27.5089, 0.3154 ) }
    dend_10 { pt3dadd( 327.248, 573.111, 27.7057, 0.3462 ) }
    dend_10 { pt3dadd( 326.107, 573.185, 27.8583, 0.4274 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 48/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 339.319, 565.247, 25.2216, 0.2288 ) }
    dend_3 { pt3dadd( 338.578, 564.376, 25.0351, 0.5784 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 50/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 343.96, 570.925, 25.044, 0.2288 ) }
    dend_0 { pt3dadd( 343.913, 572.017, 25.2076, 0.2844 ) }
    dend_0 { pt3dadd( 343.844, 573.086, 25.3604, 0.2928 ) }
    dend_0 { pt3dadd( 344.112, 574.16, 25.452, 0.3094 ) }
    dend_0 { pt3dadd( 344.597, 575.192, 25.4836, 0.3336 ) }
    dend_0 { pt3dadd( 345.045, 576.186, 25.3229, 0.4106 ) }
    dend_0 { pt3dadd( 345.373, 577.196, 24.9696, 0.3986 ) }
    dend_0 { pt3dadd( 345.848, 578.221, 24.5703, 0.4402 ) }
    dend_0 { pt3dadd( 346.353, 579.236, 24.2362, 0.436 ) }
    dend_0 { pt3dadd( 346.51, 580.36, 23.8924, 0.3652 ) }
    dend_0 { pt3dadd( 346.569, 581.492, 23.5152, 0.311 ) }
    dend_0 { pt3dadd( 346.874, 582.54, 23.0563, 0.2952 ) }
    dend_0 { pt3dadd( 346.997, 583.657, 22.5764, 0.3124 ) }
    dend_0 { pt3dadd( 347.153, 584.669, 21.9632, 0.3468 ) }
    dend_0 { pt3dadd( 347.887, 585.487, 21.3436, 0.3988 ) }
    dend_0 { pt3dadd( 348.577, 586.395, 20.8258, 0.552 ) }
    dend_0 { pt3dadd( 348.689, 587.493, 20.33, 0.5608 ) }
    dend_0 { pt3dadd( 348.965, 588.598, 19.936, 0.5398 ) }
    dend_0 { pt3dadd( 349.623, 589.534, 19.6524, 0.4528 ) }
    dend_0 { pt3dadd( 350.276, 590.473, 19.4522, 0.5244 ) }
    dend_0 { pt3dadd( 351.054, 591.311, 19.2844, 0.4434 ) }
    dend_0 { pt3dadd( 351.788, 592.14, 19.0526, 0.4152 ) }
    dend_0 { pt3dadd( 352.349, 593.136, 18.8647, 0.4562 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 73/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 346.669, 560.001, 33.5292, 1.9016 ) }
    apic_0 { pt3dadd( 347.282, 559.035, 33.9973, 0.633 ) }
    apic_0 { pt3dadd( 347.9, 558.073, 34.2507, 0.577 ) }
    apic_0 { pt3dadd( 348.385, 557.073, 34.239, 0.763 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 77/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 355.912, 593.798, 30.8, 1.0 ) }
    axon_1 { pt3dadd( 361.753, 607.614, 30.8, 1.0 ) }
    axon_1 { pt3dadd( 367.595, 621.43, 30.8, 1.0 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 80/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 303.315, 571.211, 25.2076, 0.4396 ) }
    dend_34 { pt3dadd( 302.739, 571.561, 25.258, 0.4348 ) }
    dend_34 { pt3dadd( 301.818, 572.236, 25.3168, 0.3632 ) }
    dend_34 { pt3dadd( 300.91, 572.755, 25.4195, 0.3074 ) }
    dend_34 { pt3dadd( 299.949, 572.969, 25.7298, 0.2882 ) }
    dend_34 { pt3dadd( 299.153, 573.63, 25.9846, 0.2996 ) }
    dend_34 { pt3dadd( 298.253, 574.224, 26.1083, 0.323 ) }
    dend_34 { pt3dadd( 297.15, 574.494, 26.1876, 0.3538 ) }
    dend_34 { pt3dadd( 296.03, 574.73, 26.2494, 0.4726 ) }
    dend_34 { pt3dadd( 295.08, 575.041, 26.4544, 0.394 ) }
    dend_34 { pt3dadd( 294.087, 575.519, 26.5835, 0.3268 ) }
    dend_34 { pt3dadd( 292.999, 575.828, 26.7084, 0.2772 ) }
    dend_34 { pt3dadd( 291.888, 575.94, 26.7193, 0.2792 ) }
    dend_34 { pt3dadd( 290.763, 576.11, 26.661, 0.2834 ) }
    dend_34 { pt3dadd( 289.627, 576.233, 26.5518, 0.2906 ) }
    dend_34 { pt3dadd( 288.513, 576.486, 26.4155, 0.3056 ) }
    dend_34 { pt3dadd( 287.408, 576.721, 26.3446, 0.3266 ) }
    dend_34 { pt3dadd( 286.616, 577.396, 26.1327, 0.3976 ) }
    dend_34 { pt3dadd( 285.492, 577.563, 25.944, 0.3734 ) }
    dend_34 { pt3dadd( 284.36, 577.654, 25.739, 0.3986 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_34 { pt3dadd( 283.239, 577.861, 25.536, 0.3336 ) }
    dend_34 { pt3dadd( 282.114, 578.069, 25.3758, 0.2994 ) }
    dend_34 { pt3dadd( 280.985, 578.243, 25.2739, 0.2736 ) }
    dend_34 { pt3dadd( 279.957, 578.72, 25.1532, 0.2728 ) }
    dend_34 { pt3dadd( 278.934, 579.208, 25.009, 0.2712 ) }
    dend_34 { pt3dadd( 277.845, 579.558, 24.9052, 0.2684 ) }
    dend_34 { pt3dadd( 276.703, 579.617, 24.831, 0.2626 ) }
    dend_34 { pt3dadd( 275.559, 579.642, 24.7786, 0.2542 ) }
    dend_34 { pt3dadd( 274.417, 579.725, 24.7464, 0.2288 ) }
    dend_34 { pt3dadd( 273.281, 579.856, 24.7363, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 303.315, 571.211, 25.2076, 0.4396 ) }
    dend_33 { pt3dadd( 302.738, 570.644, 23.5973, 0.4576 ) }
    dend_33 { pt3dadd( 301.937, 569.999, 22.7674, 0.3592 ) }
    dend_33 { pt3dadd( 300.93, 569.609, 22.4493, 0.2996 ) }
    dend_33 { pt3dadd( 299.81, 569.407, 22.181, 0.274 ) }
    dend_33 { pt3dadd( 298.698, 569.484, 21.9663, 0.2736 ) }
    dend_33 { pt3dadd( 297.74, 569.831, 21.6096, 0.2728 ) }
    dend_33 { pt3dadd( 296.663, 569.813, 21.2318, 0.2712 ) }
    dend_33 { pt3dadd( 295.977, 569.264, 20.6634, 0.2684 ) }
    dend_33 { pt3dadd( 294.925, 568.948, 20.0642, 0.2626 ) }
    dend_33 { pt3dadd( 293.895, 568.494, 19.4916, 0.2542 ) }
    dend_33 { pt3dadd( 293.07, 567.705, 19.0305, 0.2288 ) }
    dend_33 { pt3dadd( 292.507, 566.812, 17.99, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 365.278, 565.155, 20.1527, 0.415 ) }
    dend_25 { pt3dadd( 366.06, 565.512, 20.0329, 0.365 ) }
    dend_25 { pt3dadd( 367.107, 565.948, 19.9119, 0.3524 ) }
    dend_25 { pt3dadd( 368.216, 566.163, 19.7753, 0.3982 ) }
    dend_25 { pt3dadd( 369.338, 566.372, 19.7142, 0.3746 ) }
    dend_25 { pt3dadd( 370.41, 566.767, 19.7103, 0.401 ) }
    dend_25 { pt3dadd( 371.467, 567.18, 19.7856, 0.3378 ) }
    dend_25 { pt3dadd( 372.548, 567.537, 19.9021, 0.3074 ) }
    dend_25 { pt3dadd( 373.612, 567.956, 20.006, 0.288 ) }
    dend_25 { pt3dadd( 374.677, 568.375, 20.0928, 0.3004 ) }
    dend_25 { pt3dadd( 375.741, 568.793, 20.1561, 0.3172 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 34/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 365.278, 565.155, 20.1527, 0.415 ) }
    dend_24 { pt3dadd( 365.661, 565.384, 18.7709, 0.6864 ) }
    dend_24 { pt3dadd( 366.228, 566.116, 18.1325, 0.4446 ) }
    dend_24 { pt3dadd( 366.677, 567.146, 17.9038, 0.3266 ) }
    dend_24 { pt3dadd( 367.166, 568.146, 17.7276, 0.2766 ) }
    dend_24 { pt3dadd( 367.836, 569.054, 17.6428, 0.2784 ) }
    dend_24 { pt3dadd( 368.543, 569.938, 17.6221, 0.2818 ) }
    dend_24 { pt3dadd( 369.385, 570.702, 17.5916, 0.288 ) }
    dend_24 { pt3dadd( 370.017, 571.578, 17.4908, 0.3004 ) }
    dend_24 { pt3dadd( 370.369, 572.641, 17.4014, 0.3172 ) }
    dend_24 { pt3dadd( 370.828, 573.68, 17.337, 0.3792 ) }
    dend_24 { pt3dadd( 371.528, 574.573, 17.2726, 0.3446 ) }
    dend_24 { pt3dadd( 372.321, 575.37, 17.1503, 0.3208 ) }
    dend_24 { pt3dadd( 373.198, 576.097, 17.047, 0.3078 ) }
    dend_24 { pt3dadd( 373.695, 577.115, 16.9775, 0.3616 ) }
    dend_24 { pt3dadd( 374.347, 578.053, 16.9243, 0.3136 ) }
    dend_24 { pt3dadd( 374.486, 579.181, 16.8874, 0.2542 ) }
    dend_24 { pt3dadd( 375.067, 580.161, 16.8655, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 365.102, 578.075, 17.22, 0.3232 ) }
    dend_22 { pt3dadd( 365.608, 577.754, 15.9933, 0.4576 ) }
    dend_22 { pt3dadd( 366.535, 577.217, 15.5641, 0.3606 ) }
    dend_22 { pt3dadd( 367.292, 576.443, 15.4092, 0.3024 ) }
    dend_22 { pt3dadd( 367.904, 575.494, 15.2832, 0.2788 ) }
    dend_22 { pt3dadd( 368.894, 575.093, 15.1824, 0.2826 ) }
    dend_22 { pt3dadd( 370.014, 574.882, 15.1029, 0.2892 ) }
    dend_22 { pt3dadd( 370.94, 574.274, 15.0416, 0.3028 ) }
    dend_22 { pt3dadd( 371.944, 573.793, 14.9895, 0.3216 ) }
    dend_22 { pt3dadd( 373.022, 573.443, 14.8842, 0.3876 ) }
    dend_22 { pt3dadd( 374.037, 572.931, 14.7661, 0.3598 ) }
    dend_22 { pt3dadd( 375.121, 572.593, 14.6611, 0.349 ) }
    dend_22 { pt3dadd( 376.24, 572.352, 14.5673, 0.3612 ) }
    dend_22 { pt3dadd( 377.34, 572.042, 14.481, 0.4564 ) }
    dend_22 { pt3dadd( 378.403, 571.622, 14.4007, 0.5088 ) }
    dend_22 { pt3dadd( 379.473, 571.219, 14.3242, 0.5216 ) }
    dend_22 { pt3dadd( 379.737, 570.218, 14.1576, 0.4972 ) }
    dend_22 { pt3dadd( 380.426, 569.352, 13.9406, 0.4572 ) }
    dend_22 { pt3dadd( 381.397, 568.752, 13.7687, 0.3574 ) }
    dend_22 { pt3dadd( 382.402, 568.204, 13.6416, 0.2966 ) }
    dend_22 { pt3dadd( 383.536, 568.06, 13.5559, 0.2684 ) }
    dend_22 { pt3dadd( 384.645, 567.779, 13.5078, 0.2626 ) }
    dend_22 { pt3dadd( 385.745, 567.465, 13.4929, 0.2542 ) }
    dend_22 { pt3dadd( 386.836, 567.121, 13.4926, 0.2288 ) }
    dend_22 { pt3dadd( 387.883, 566.659, 13.4926, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 77/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 365.102, 578.075, 17.22, 0.3232 ) }
    dend_17 { pt3dadd( 365.427, 578.093, 16.7199, 0.3902 ) }
    dend_17 { pt3dadd( 366.509, 578.235, 16.2081, 0.366 ) }
    dend_17 { pt3dadd( 367.541, 578.654, 15.7522, 0.354 ) }
    dend_17 { pt3dadd( 368.542, 579.14, 15.358, 0.4014 ) }
    dend_17 { pt3dadd( 369.509, 579.746, 15.0875, 0.3806 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 83/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 331.435, 547.063, 14.9531, 0.3142 ) }
    dend_15 { pt3dadd( 330.615, 546.752, 14.7694, 0.3734 ) }
    dend_15 { pt3dadd( 329.518, 546.546, 14.5858, 0.3338 ) }
    dend_15 { pt3dadd( 328.4, 546.506, 14.462, 0.3 ) }
    dend_15 { pt3dadd( 327.374, 546.942, 14.3648, 0.2746 ) }
    dend_15 { pt3dadd( 326.45, 547.58, 14.1854, 0.2746 ) }
    dend_15 { pt3dadd( 325.469, 548.128, 13.9406, 0.2746 ) }
    dend_15 { pt3dadd( 324.472, 548.662, 13.6553, 0.2746 ) }
    dend_15 { pt3dadd( 323.526, 549.25, 13.3106, 0.2746 ) }
    dend_15 { pt3dadd( 322.574, 549.66, 12.847, 0.2746 ) }
    dend_15 { pt3dadd( 321.524, 549.999, 12.4194, 0.2746 ) }
    dend_15 { pt3dadd( 320.413, 550.132, 12.0739, 0.2746 ) }
    dend_15 { pt3dadd( 319.287, 550.121, 11.8098, 0.2746 ) }
    dend_15 { pt3dadd( 318.167, 549.94, 11.6838, 0.2746 ) }
    dend_15 { pt3dadd( 317.099, 549.549, 11.7211, 0.2746 ) }
    dend_15 { pt3dadd( 316.443, 548.974, 12.0854, 0.2746 ) }
    dend_15 { pt3dadd( 315.593, 548.777, 12.6493, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_15 { pt3dadd( 314.483, 548.707, 13.1373, 0.2746 ) }
    dend_15 { pt3dadd( 313.494, 548.177, 13.5187, 0.2748 ) }
    dend_15 { pt3dadd( 312.526, 547.945, 13.9726, 0.2748 ) }
    dend_15 { pt3dadd( 311.542, 548.211, 14.4393, 0.2752 ) }
    dend_15 { pt3dadd( 310.501, 548.659, 14.66, 0.2758 ) }
    dend_15 { pt3dadd( 309.562, 549.018, 14.5457, 0.2768 ) }
    dend_15 { pt3dadd( 308.517, 549.35, 14.3772, 0.2786 ) }
    dend_15 { pt3dadd( 307.388, 549.431, 14.2106, 0.282 ) }
    dend_15 { pt3dadd( 306.259, 549.42, 13.9871, 0.288 ) }
    dend_15 { pt3dadd( 305.257, 549.272, 13.6318, 0.3008 ) }
    dend_15 { pt3dadd( 304.175, 549.18, 13.3062, 0.3178 ) }
    dend_15 { pt3dadd( 303.164, 548.82, 13.2432, 0.3802 ) }
    dend_15 { pt3dadd( 302.88, 547.797, 13.2541, 0.3464 ) }
    dend_15 { pt3dadd( 302.982, 546.687, 13.3344, 0.3242 ) }
    dend_15 { pt3dadd( 303.152, 545.757, 13.694, 0.3142 ) }
    dend_15 { pt3dadd( 302.277, 545.258, 14.299, 0.3734 ) }
    dend_15 { pt3dadd( 301.508, 544.512, 15.0013, 0.334 ) }
    dend_15 { pt3dadd( 300.871, 543.672, 15.75, 0.3 ) }
    dend_15 { pt3dadd( 300.465, 542.725, 16.5281, 0.2746 ) }
    dend_15 { pt3dadd( 300.134, 541.647, 17.1651, 0.2748 ) }
    dend_15 { pt3dadd( 299.581, 540.654, 17.6176, 0.2748 ) }
    dend_15 { pt3dadd( 298.878, 539.753, 17.8601, 0.275 ) }
    dend_15 { pt3dadd( 298.257, 538.794, 17.9558, 0.2754 ) }
    dend_15 { pt3dadd( 297.312, 538.271, 18.0334, 0.2762 ) }
    dend_15 { pt3dadd( 296.708, 537.339, 17.8716, 0.2776 ) }
    dend_15 { pt3dadd( 296.173, 536.99, 17.5162, 0.2804 ) }
    dend_15 { pt3dadd( 295.299, 536.633, 16.9313, 0.2852 ) }
    dend_15 { pt3dadd( 294.37, 536.378, 16.1784, 0.2954 ) }
    dend_15 { pt3dadd( 293.305, 535.997, 15.5403, 0.3078 ) }
    dend_15 { pt3dadd( 292.403, 535.541, 15.2149, 0.3616 ) }
    dend_15 { pt3dadd( 291.384, 535.177, 15.1015, 0.3136 ) }
    dend_15 { pt3dadd( 290.36, 535.166, 14.8364, 0.2542 ) }
    dend_15 { pt3dadd( 289.739, 535.265, 13.391, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 331.435, 547.063, 14.9531, 0.3142 ) }
    dend_14 { pt3dadd( 330.704, 546.625, 14.1145, 0.2288 ) }
    dend_14 { pt3dadd( 329.994, 545.855, 13.291, 0.2746 ) }
    dend_14 { pt3dadd( 329.596, 544.828, 12.9346, 0.2746 ) }
    dend_14 { pt3dadd( 329.581, 543.847, 12.504, 0.2746 ) }
    dend_14 { pt3dadd( 330.002, 542.862, 12.1257, 0.2746 ) }
    dend_14 { pt3dadd( 330.525, 541.995, 12.0193, 0.2746 ) }
    dend_14 { pt3dadd( 331.061, 541.161, 12.0095, 0.2746 ) }
    dend_14 { pt3dadd( 331.416, 540.164, 11.9109, 0.2746 ) }
    dend_14 { pt3dadd( 331.467, 539.069, 11.8653, 0.2746 ) }
    dend_14 { pt3dadd( 331.164, 537.985, 11.9448, 0.2746 ) }
    dend_14 { pt3dadd( 331.012, 536.91, 12.1668, 0.2746 ) }
    dend_14 { pt3dadd( 331.174, 535.826, 12.4788, 0.2746 ) }
    dend_14 { pt3dadd( 331.591, 534.773, 12.8027, 0.2746 ) }
    dend_14 { pt3dadd( 332.045, 533.744, 13.0606, 0.2746 ) }
    dend_14 { pt3dadd( 332.471, 532.696, 13.2586, 0.2746 ) }
    dend_14 { pt3dadd( 332.815, 531.632, 13.524, 0.2746 ) }
    dend_14 { pt3dadd( 333.239, 530.742, 13.9723, 0.2746 ) }
    dend_14 { pt3dadd( 333.485, 530.144, 14.6756, 0.2748 ) }
    dend_14 { pt3dadd( 332.885, 529.473, 15.4283, 0.2748 ) }
    dend_14 { pt3dadd( 332.056, 528.753, 15.8455, 0.2752 ) }
    dend_14 { pt3dadd( 331.229, 528.182, 15.8984, 0.2756 ) }
    dend_14 { pt3dadd( 330.4, 527.562, 15.8337, 0.2766 ) }
    dend_14 { pt3dadd( 330.991, 526.683, 15.5803, 0.2782 ) }
    dend_14 { pt3dadd( 331.788, 526.031, 15.3012, 0.2814 ) }
    dend_14 { pt3dadd( 331.963, 524.938, 15.1172, 0.287 ) }
    dend_14 { pt3dadd( 332.253, 523.918, 15.0564, 0.2988 ) }
    dend_14 { pt3dadd( 332.603, 523.016, 14.8201, 0.3142 ) }
    dend_14 { pt3dadd( 332.421, 522.263, 14.2839, 0.3734 ) }
    dend_14 { pt3dadd( 331.933, 521.434, 13.6184, 0.3338 ) }
    dend_14 { pt3dadd( 331.494, 520.446, 13.0463, 0.3 ) }
    dend_14 { pt3dadd( 331.212, 519.351, 12.6787, 0.2746 ) }
    dend_14 { pt3dadd( 330.892, 518.268, 12.4334, 0.2746 ) }
    dend_14 { pt3dadd( 330.462, 517.216, 12.3399, 0.2746 ) }
    dend_14 { pt3dadd( 330.494, 516.143, 12.4183, 0.2744 ) }
    dend_14 { pt3dadd( 330.974, 515.117, 12.5516, 0.2744 ) }
    dend_14 { pt3dadd( 331.13, 514.012, 12.6591, 0.2742 ) }
    dend_14 { pt3dadd( 331.147, 512.869, 12.763, 0.274 ) }
    dend_14 { pt3dadd( 331.343, 511.756, 12.822, 0.2736 ) }
    dend_14 { pt3dadd( 331.695, 510.679, 12.9343, 0.2728 ) }
    dend_14 { pt3dadd( 332.346, 509.862, 13.2233, 0.2712 ) }
    dend_14 { pt3dadd( 332.993, 508.937, 13.5265, 0.2684 ) }
    dend_14 { pt3dadd( 333.772, 508.143, 13.7127, 0.2626 ) }
    dend_14 { pt3dadd( 334.872, 507.918, 13.914, 0.2542 ) }
    dend_14 { pt3dadd( 335.371, 508.842, 14.2257, 0.2288 ) }
    dend_14 { pt3dadd( 335.077, 509.881, 15.12, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 326.107, 573.185, 27.8583, 0.4274 ) }
    dend_12 { pt3dadd( 325.103, 573.811, 27.9398, 0.4608 ) }
    dend_12 { pt3dadd( 324.334, 574.645, 27.8891, 0.406 ) }
    dend_12 { pt3dadd( 323.523, 575.36, 27.6352, 0.4118 ) }
    dend_12 { pt3dadd( 322.508, 575.768, 27.2832, 0.3592 ) }
    dend_12 { pt3dadd( 321.543, 576.341, 27.0292, 0.3416 ) }
    dend_12 { pt3dadd( 320.454, 576.409, 26.7039, 0.3772 ) }
    dend_12 { pt3dadd( 319.356, 576.659, 26.4916, 0.341 ) }
    dend_12 { pt3dadd( 318.45, 577.082, 26.3309, 0.313 ) }
    dend_12 { pt3dadd( 317.809, 577.848, 26.0686, 0.2998 ) }
    dend_12 { pt3dadd( 316.835, 578.258, 25.8138, 0.316 ) }
    dend_12 { pt3dadd( 315.847, 578.752, 25.4912, 0.377 ) }
    dend_12 { pt3dadd( 314.925, 579.298, 25.1247, 0.3408 ) }
    dend_12 { pt3dadd( 314.273, 579.97, 24.6257, 0.3124 ) }
    dend_12 { pt3dadd( 313.39, 580.646, 24.2847, 0.2988 ) }
    dend_12 { pt3dadd( 312.639, 581.5, 23.956, 0.3142 ) }
    dend_12 { pt3dadd( 311.927, 582.293, 23.5175, 0.3734 ) }
    dend_12 { pt3dadd( 311.323, 583.108, 22.9835, 0.334 ) }
    dend_12 { pt3dadd( 310.474, 583.832, 22.5134, 0.3002 ) }
    dend_12 { pt3dadd( 309.419, 584.065, 22.1222, 0.2748 ) }
    dend_12 { pt3dadd( 308.344, 583.893, 21.8448, 0.2752 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_12 { pt3dadd( 307.451, 584.314, 21.6798, 0.2756 ) }
    dend_12 { pt3dadd( 306.824, 585.212, 21.5004, 0.2766 ) }
    dend_12 { pt3dadd( 306.137, 586.104, 21.394, 0.2784 ) }
    dend_12 { pt3dadd( 305.217, 586.756, 21.2943, 0.2818 ) }
    dend_12 { pt3dadd( 304.144, 587.08, 21.1638, 0.2876 ) }
    dend_12 { pt3dadd( 303.049, 587.343, 20.9807, 0.2998 ) }
    dend_12 { pt3dadd( 302.335, 588.112, 20.7682, 0.316 ) }
    dend_12 { pt3dadd( 301.676, 589.032, 20.5786, 0.377 ) }
    dend_12 { pt3dadd( 300.767, 589.671, 20.3426, 0.3408 ) }
    dend_12 { pt3dadd( 299.71, 590.049, 20.0651, 0.3124 ) }
    dend_12 { pt3dadd( 298.624, 590.384, 19.7845, 0.2988 ) }
    dend_12 { pt3dadd( 297.575, 590.81, 19.502, 0.3142 ) }
    dend_12 { pt3dadd( 296.47, 591.037, 19.2508, 0.3736 ) }
    dend_12 { pt3dadd( 295.348, 591.17, 19.0011, 0.334 ) }
    dend_12 { pt3dadd( 294.282, 591.536, 18.7956, 0.3002 ) }
    dend_12 { pt3dadd( 293.26, 592.051, 18.6519, 0.2752 ) }
    dend_12 { pt3dadd( 292.261, 592.608, 18.5545, 0.2756 ) }
    dend_12 { pt3dadd( 291.22, 593.043, 18.4433, 0.2766 ) }
    dend_12 { pt3dadd( 290.234, 593.577, 18.3985, 0.2782 ) }
    dend_12 { pt3dadd( 289.358, 594.297, 18.3795, 0.2814 ) }
    dend_12 { pt3dadd( 288.35, 594.783, 18.3338, 0.287 ) }
    dend_12 { pt3dadd( 287.238, 595.023, 18.3053, 0.2988 ) }
    dend_12 { pt3dadd( 286.191, 595.454, 18.3142, 0.3142 ) }
    dend_12 { pt3dadd( 285.178, 595.984, 18.3593, 0.3734 ) }
    dend_12 { pt3dadd( 284.222, 596.588, 18.482, 0.3338 ) }
    dend_12 { pt3dadd( 283.448, 597.388, 18.697, 0.3 ) }
    dend_12 { pt3dadd( 282.611, 598.153, 18.9288, 0.2746 ) }
    dend_12 { pt3dadd( 281.825, 598.98, 19.1408, 0.2746 ) }
    dend_12 { pt3dadd( 281.071, 599.839, 19.3309, 0.2746 ) }
    dend_12 { pt3dadd( 280.32, 600.685, 19.5336, 0.2746 ) }
    dend_12 { pt3dadd( 279.562, 601.516, 19.7548, 0.2746 ) }
    dend_12 { pt3dadd( 278.771, 602.335, 19.9447, 0.2746 ) }
    dend_12 { pt3dadd( 277.947, 603.127, 20.0813, 0.2746 ) }
    dend_12 { pt3dadd( 277.08, 603.872, 20.1631, 0.2746 ) }
    dend_12 { pt3dadd( 276.133, 604.507, 20.1888, 0.2746 ) }
    dend_12 { pt3dadd( 275.068, 604.889, 20.1639, 0.2746 ) }
    dend_12 { pt3dadd( 273.949, 605.126, 20.1006, 0.2746 ) }
    dend_12 { pt3dadd( 272.915, 605.542, 19.966, 0.2746 ) }
    dend_12 { pt3dadd( 271.953, 606.115, 19.7529, 0.2746 ) }
    dend_12 { pt3dadd( 271.006, 606.741, 19.5376, 0.2746 ) }
    dend_12 { pt3dadd( 270.102, 607.441, 19.3592, 0.2746 ) }
    dend_12 { pt3dadd( 269.455, 608.352, 19.2097, 0.2746 ) }
    dend_12 { pt3dadd( 268.957, 609.381, 19.0834, 0.2746 ) }
    dend_12 { pt3dadd( 268.237, 610.242, 18.9731, 0.2746 ) }
    dend_12 { pt3dadd( 267.36, 610.975, 18.8588, 0.2746 ) }
    dend_12 { pt3dadd( 266.439, 611.62, 18.6645, 0.2744 ) }
    dend_12 { pt3dadd( 265.747, 612.459, 18.3767, 0.2744 ) }
    dend_12 { pt3dadd( 265.105, 613.346, 18.1454, 0.2742 ) }
    dend_12 { pt3dadd( 264.8, 614.384, 17.8727, 0.274 ) }
    dend_12 { pt3dadd( 264.909, 615.463, 17.4602, 0.2736 ) }
    dend_12 { pt3dadd( 264.705, 616.436, 16.8809, 0.2728 ) }
    dend_12 { pt3dadd( 264.113, 617.3, 16.212, 0.2712 ) }
    dend_12 { pt3dadd( 263.043, 617.515, 15.5624, 0.2684 ) }
    dend_12 { pt3dadd( 261.903, 617.545, 15.0268, 0.2626 ) }
    dend_12 { pt3dadd( 260.762, 617.631, 14.6292, 0.2542 ) }
    dend_12 { pt3dadd( 259.662, 617.917, 14.3186, 0.2288 ) }
    dend_12 { pt3dadd( 258.723, 618.462, 13.5988, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 326.107, 573.185, 27.8583, 0.4274 ) }
    dend_11 { pt3dadd( 325.578, 573.11, 28.4007, 0.4576 ) }
    dend_11 { pt3dadd( 324.443, 572.99, 28.9556, 0.3762 ) }
    dend_11 { pt3dadd( 323.387, 573.167, 29.2463, 0.3324 ) }
    dend_11 { pt3dadd( 322.306, 573.461, 29.5996, 0.3294 ) }
    dend_11 { pt3dadd( 321.176, 573.516, 29.9664, 0.4012 ) }
    dend_11 { pt3dadd( 320.043, 573.46, 30.3467, 0.3876 ) }
    dend_11 { pt3dadd( 318.913, 573.298, 30.7034, 0.389 ) }
    dend_11 { pt3dadd( 317.886, 572.86, 31.0873, 0.4904 ) }
    dend_11 { pt3dadd( 316.769, 572.766, 31.472, 0.4278 ) }
    dend_11 { pt3dadd( 315.642, 572.901, 31.8545, 0.3842 ) }
    dend_11 { pt3dadd( 314.521, 573.011, 32.2622, 0.4102 ) }
    dend_11 { pt3dadd( 313.399, 573.103, 32.6903, 0.3964 ) }
    dend_11 { pt3dadd( 312.283, 573.244, 33.1335, 0.4424 ) }
    dend_11 { pt3dadd( 311.167, 573.351, 33.5812, 0.4104 ) }
    dend_11 { pt3dadd( 310.049, 573.216, 34.0133, 0.4622 ) }
    dend_11 { pt3dadd( 308.914, 573.091, 34.3644, 0.4776 ) }
    dend_11 { pt3dadd( 307.895, 572.788, 34.778, 0.4382 ) }
    dend_11 { pt3dadd( 306.823, 572.424, 35.1338, 0.4676 ) }
    dend_11 { pt3dadd( 305.696, 572.255, 35.4172, 0.4816 ) }
    dend_11 { pt3dadd( 304.568, 572.079, 35.5978, 0.475 ) }
    dend_11 { pt3dadd( 303.458, 571.809, 35.7308, 0.3918 ) }
    dend_11 { pt3dadd( 302.397, 571.388, 35.8632, 0.3548 ) }
    dend_11 { pt3dadd( 301.309, 571.044, 35.9503, 0.4026 ) }
    dend_11 { pt3dadd( 300.22, 570.723, 36.1043, 0.3828 ) }
    dend_11 { pt3dadd( 299.091, 570.562, 36.2516, 0.4162 ) }
    dend_11 { pt3dadd( 297.953, 570.476, 36.4697, 0.367 ) }
    dend_11 { pt3dadd( 296.823, 570.622, 36.7044, 0.3562 ) }
    dend_11 { pt3dadd( 295.725, 570.482, 37.0972, 0.404 ) }
    dend_11 { pt3dadd( 294.629, 570.762, 37.5738, 0.3928 ) }
    dend_11 { pt3dadd( 293.65, 570.731, 38.2578, 0.3984 ) }
    dend_11 { pt3dadd( 292.815, 570.04, 39.0326, 0.509 ) }
    dend_11 { pt3dadd( 291.938, 569.386, 39.8465, 0.457 ) }
    dend_11 { pt3dadd( 291.134, 568.692, 40.7109, 0.4638 ) }
    dend_11 { pt3dadd( 290.323, 567.914, 41.5148, 0.4328 ) }
    dend_11 { pt3dadd( 289.432, 567.267, 42.2761, 0.3594 ) }
    dend_11 { pt3dadd( 288.777, 566.606, 43.078, 0.3 ) }
    dend_11 { pt3dadd( 288.455, 565.637, 43.9034, 0.2746 ) }
    dend_11 { pt3dadd( 288.123, 564.666, 44.7182, 0.2746 ) }
    dend_11 { pt3dadd( 287.66, 563.691, 45.4082, 0.2746 ) }
    dend_11 { pt3dadd( 287.059, 562.718, 45.8937, 0.2746 ) }
    dend_11 { pt3dadd( 286.377, 561.805, 46.2048, 0.2746 ) }
    dend_11 { pt3dadd( 285.609, 560.957, 46.373, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_11 { pt3dadd( 284.878, 560.078, 46.445, 0.2746 ) }
    dend_11 { pt3dadd( 284.2, 559.157, 46.4624, 0.2746 ) }
    dend_11 { pt3dadd( 283.404, 558.357, 46.4624, 0.2746 ) }
    dend_11 { pt3dadd( 282.379, 557.907, 46.4624, 0.2746 ) }
    dend_11 { pt3dadd( 281.275, 557.614, 46.4624, 0.2748 ) }
    dend_11 { pt3dadd( 280.207, 557.209, 46.4626, 0.2748 ) }
    dend_11 { pt3dadd( 279.235, 556.623, 46.4626, 0.2752 ) }
    dend_11 { pt3dadd( 278.389, 555.858, 46.4626, 0.2756 ) }
    dend_11 { pt3dadd( 277.584, 555.045, 46.4629, 0.2766 ) }
    dend_11 { pt3dadd( 276.766, 554.245, 46.4632, 0.2782 ) }
    dend_11 { pt3dadd( 275.964, 553.429, 46.4635, 0.2814 ) }
    dend_11 { pt3dadd( 275.186, 552.591, 46.4638, 0.287 ) }
    dend_11 { pt3dadd( 274.306, 551.876, 46.4643, 0.2988 ) }
    dend_11 { pt3dadd( 273.298, 551.341, 46.4652, 0.3142 ) }
    dend_11 { pt3dadd( 272.241, 550.905, 46.4663, 0.3734 ) }
    dend_11 { pt3dadd( 271.158, 550.536, 46.468, 0.3338 ) }
    dend_11 { pt3dadd( 270.076, 550.167, 46.4699, 0.3 ) }
    dend_11 { pt3dadd( 269.023, 549.723, 46.473, 0.2746 ) }
    dend_11 { pt3dadd( 268.013, 549.189, 46.4772, 0.2746 ) }
    dend_11 { pt3dadd( 267.153, 548.454, 46.4836, 0.2746 ) }
    dend_11 { pt3dadd( 266.334, 547.658, 46.492, 0.2746 ) }
    dend_11 { pt3dadd( 265.444, 546.94, 46.5027, 0.2746 ) }
    dend_11 { pt3dadd( 264.614, 546.157, 46.5156, 0.2744 ) }
    dend_11 { pt3dadd( 263.873, 545.289, 46.5478, 0.2744 ) }
    dend_11 { pt3dadd( 263.433, 544.244, 46.585, 0.2742 ) }
    dend_11 { pt3dadd( 262.373, 544.005, 46.6147, 0.274 ) }
    dend_11 { pt3dadd( 261.273, 543.695, 46.6365, 0.2736 ) }
    dend_11 { pt3dadd( 261.079, 542.602, 46.6511, 0.2728 ) }
    dend_11 { pt3dadd( 260.576, 541.576, 46.6592, 0.2712 ) }
    dend_11 { pt3dadd( 259.862, 540.683, 46.6614, 0.2684 ) }
    dend_11 { pt3dadd( 258.911, 540.05, 46.6614, 0.2626 ) }
    dend_11 { pt3dadd( 257.823, 539.699, 46.6614, 0.2542 ) }
    dend_11 { pt3dadd( 256.699, 539.492, 46.6614, 0.2288 ) }
    dend_11 { pt3dadd( 255.842, 538.737, 46.6614, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 34/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 338.578, 564.376, 25.0351, 0.5784 ) }
    dend_5 { pt3dadd( 338.058, 563.817, 24.9726, 0.6418 ) }
    dend_5 { pt3dadd( 337.048, 563.307, 24.9346, 0.534 ) }
    dend_5 { pt3dadd( 336.126, 562.901, 24.6702, 0.5132 ) }
    dend_5 { pt3dadd( 335.065, 562.5, 24.3827, 0.5212 ) }
    dend_5 { pt3dadd( 334.111, 561.873, 24.1114, 0.5384 ) }
    dend_5 { pt3dadd( 333.196, 561.212, 23.8115, 0.559 ) }
    dend_5 { pt3dadd( 332.266, 560.577, 23.63, 0.4222 ) }
    dend_5 { pt3dadd( 331.395, 559.836, 23.4794, 0.3322 ) }
    dend_5 { pt3dadd( 330.45, 559.195, 23.3187, 0.287 ) }
    dend_5 { pt3dadd( 329.44, 558.734, 23.0518, 0.2988 ) }
    dend_5 { pt3dadd( 328.397, 558.392, 22.6856, 0.3142 ) }
    dend_5 { pt3dadd( 327.288, 558.274, 22.2757, 0.3736 ) }
    dend_5 { pt3dadd( 326.193, 558.008, 21.8674, 0.3342 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 48/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 338.578, 564.376, 25.0351, 0.5784 ) }
    dend_4 { pt3dadd( 338.146, 564.937, 22.9712, 0.2906 ) }
    dend_4 { pt3dadd( 337.208, 565.557, 22.4333, 0.3056 ) }
    dend_4 { pt3dadd( 336.115, 565.889, 21.9834, 0.3266 ) }
    dend_4 { pt3dadd( 335.001, 565.729, 21.5155, 0.3978 ) }
    dend_4 { pt3dadd( 333.939, 565.415, 21.0132, 0.3738 ) }
    dend_4 { pt3dadd( 332.822, 565.578, 20.5358, 0.3994 ) }
    dend_4 { pt3dadd( 331.828, 566.059, 20.0861, 0.335 ) }
    dend_4 { pt3dadd( 331.03, 566.651, 19.6759, 0.3022 ) }
    dend_4 { pt3dadd( 330.61, 567.023, 19.1173, 0.2786 ) }
    dend_4 { pt3dadd( 329.78, 567.414, 18.4649, 0.282 ) }
    dend_4 { pt3dadd( 328.642, 567.424, 17.9614, 0.2882 ) }
    dend_4 { pt3dadd( 327.498, 567.454, 17.5874, 0.301 ) }
    dend_4 { pt3dadd( 326.443, 567.891, 17.3233, 0.3184 ) }
    dend_4 { pt3dadd( 325.538, 568.37, 17.066, 0.3812 ) }
    dend_4 { pt3dadd( 324.405, 568.305, 16.889, 0.3484 ) }
    dend_4 { pt3dadd( 323.327, 568.577, 16.7563, 0.3268 ) }
    dend_4 { pt3dadd( 322.305, 568.964, 16.742, 0.325 ) }
    dend_4 { pt3dadd( 321.302, 569.36, 16.7199, 0.3648 ) }
    dend_4 { pt3dadd( 320.258, 569.804, 16.7297, 0.457 ) }
    dend_4 { pt3dadd( 319.212, 570.063, 16.8924, 0.5398 ) }
    dend_4 { pt3dadd( 318.468, 570.581, 17.2256, 0.4338 ) }
    dend_4 { pt3dadd( 317.509, 571.103, 17.3284, 0.3532 ) }
    dend_4 { pt3dadd( 316.443, 571.481, 17.3561, 0.3282 ) }
    dend_4 { pt3dadd( 315.42, 571.369, 17.2516, 0.3636 ) }
    dend_4 { pt3dadd( 314.696, 571.176, 16.9481, 0.4906 ) }
    dend_4 { pt3dadd( 313.913, 571.993, 16.6611, 0.4282 ) }
    dend_4 { pt3dadd( 313.017, 572.61, 16.3296, 0.3848 ) }
    dend_4 { pt3dadd( 311.938, 572.666, 15.958, 0.4112 ) }
    dend_4 { pt3dadd( 310.845, 572.475, 15.568, 0.3986 ) }
    dend_4 { pt3dadd( 309.762, 572.302, 15.3328, 0.4464 ) }
    dend_4 { pt3dadd( 308.871, 572.389, 15.0371, 0.418 ) }
    dend_4 { pt3dadd( 307.856, 572.127, 14.6759, 0.4746 ) }
    dend_4 { pt3dadd( 306.745, 572.2, 14.3377, 0.5084 ) }
    dend_4 { pt3dadd( 305.782, 572.762, 14.0546, 0.4576 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 83/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 352.349, 593.136, 18.8647, 0.4562 ) }
    dend_2 { pt3dadd( 352.37, 593.663, 18.6959, 0.5384 ) }
    dend_2 { pt3dadd( 352.332, 594.795, 18.5324, 0.431 ) }
    dend_2 { pt3dadd( 352.262, 595.928, 18.4489, 0.3496 ) }
    dend_2 { pt3dadd( 352.433, 597.036, 18.4498, 0.3142 ) }
    dend_2 { pt3dadd( 352.893, 598.072, 18.5172, 0.3734 ) }
    dend_2 { pt3dadd( 353.518, 599.003, 18.5433, 0.3338 ) }
    dend_2 { pt3dadd( 354.072, 599.981, 18.5077, 0.3 ) }
    dend_2 { pt3dadd( 354.52, 601.028, 18.4778, 0.2746 ) }
    dend_2 { pt3dadd( 354.716, 602.135, 18.5156, 0.2746 ) }
    dend_2 { pt3dadd( 354.769, 603.261, 18.6304, 0.2746 ) }
    dend_2 { pt3dadd( 354.91, 604.388, 18.779, 0.2746 ) }
    dend_2 { pt3dadd( 354.955, 605.526, 18.9176, 0.2746 ) }
    dend_2 { pt3dadd( 354.827, 606.661, 19.0282, 0.2746 ) }
    dend_2 { pt3dadd( 354.86, 607.787, 19.1506, 0.2748 ) }
    dend_2 { pt3dadd( 355.136, 608.886, 19.2198, 0.2748 ) }
    dend_2 { pt3dadd( 355.433, 609.985, 19.2226, 0.2752 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 355.956, 610.935, 19.1195, 0.2756 ) }
    dend_2 { pt3dadd( 355.92, 612.021, 19.0795, 0.2766 ) }
    dend_2 { pt3dadd( 356.137, 613.117, 19.1596, 0.2782 ) }
    dend_2 { pt3dadd( 356.395, 614.23, 19.2609, 0.2814 ) }
    dend_2 { pt3dadd( 356.573, 615.331, 19.462, 0.287 ) }
    dend_2 { pt3dadd( 356.723, 616.323, 19.794, 0.2988 ) }
    dend_2 { pt3dadd( 357.567, 616.999, 19.9766, 0.3142 ) }
    dend_2 { pt3dadd( 357.705, 618.111, 20.0326, 0.3734 ) }
    dend_2 { pt3dadd( 357.524, 619.181, 20.0234, 0.334 ) }
    dend_2 { pt3dadd( 356.803, 619.952, 20.1174, 0.3002 ) }
    dend_2 { pt3dadd( 355.974, 620.58, 20.2448, 0.2748 ) }
    dend_2 { pt3dadd( 355.631, 621.614, 20.4845, 0.275 ) }
    dend_2 { pt3dadd( 355.43, 622.71, 20.7015, 0.2754 ) }
    dend_2 { pt3dadd( 355.174, 623.816, 20.8628, 0.2762 ) }
    dend_2 { pt3dadd( 355.019, 624.932, 21.0319, 0.2778 ) }
    dend_2 { pt3dadd( 354.957, 626.068, 21.1672, 0.2806 ) }
    dend_2 { pt3dadd( 354.819, 627.201, 21.2542, 0.2856 ) }
    dend_2 { pt3dadd( 354.606, 628.326, 21.3088, 0.295 ) }
    dend_2 { pt3dadd( 354.385, 629.448, 21.3559, 0.3132 ) }
    dend_2 { pt3dadd( 354.106, 630.552, 21.3618, 0.342 ) }
    dend_2 { pt3dadd( 353.763, 631.64, 21.3349, 0.42 ) }
    dend_2 { pt3dadd( 353.548, 632.738, 21.3662, 0.4454 ) }
    dend_2 { pt3dadd( 353.609, 633.799, 21.5183, 0.384 ) }
    dend_2 { pt3dadd( 353.639, 634.911, 21.6356, 0.3404 ) }
    dend_2 { pt3dadd( 353.288, 635.85, 21.5174, 0.3752 ) }
    dend_2 { pt3dadd( 352.984, 636.013, 21.0918, 0.337 ) }
    dend_2 { pt3dadd( 353.083, 636.886, 21.0011, 0.3058 ) }
    dend_2 { pt3dadd( 352.585, 637.853, 21.0328, 0.2854 ) }
    dend_2 { pt3dadd( 352.241, 638.684, 20.8309, 0.2946 ) }
    dend_2 { pt3dadd( 352.283, 639.781, 20.6282, 0.3114 ) }
    dend_2 { pt3dadd( 352.009, 640.685, 20.6427, 0.3446 ) }
    dend_2 { pt3dadd( 351.121, 641.158, 20.8253, 0.3952 ) }
    dend_2 { pt3dadd( 350.433, 642.026, 20.8942, 0.5436 ) }
    dend_2 { pt3dadd( 349.935, 643.01, 20.8331, 0.553 ) }
    dend_2 { pt3dadd( 349.389, 644.009, 20.7782, 0.488 ) }
    dend_2 { pt3dadd( 348.698, 644.904, 20.6766, 0.5374 ) }
    dend_2 { pt3dadd( 348.093, 645.77, 20.4459, 0.4924 ) }
    dend_2 { pt3dadd( 347.586, 646.69, 20.1653, 0.3854 ) }
    dend_2 { pt3dadd( 347.044, 647.565, 20.1275, 0.3014 ) }
    dend_2 { pt3dadd( 346.796, 648.512, 20.3776, 0.2772 ) }
    dend_2 { pt3dadd( 346.782, 649.62, 20.7276, 0.2792 ) }
    dend_2 { pt3dadd( 346.907, 650.753, 21.0792, 0.2834 ) }
    dend_2 { pt3dadd( 346.974, 651.892, 21.4043, 0.2906 ) }
    dend_2 { pt3dadd( 347.011, 653.026, 21.7232, 0.3056 ) }
    dend_2 { pt3dadd( 347.03, 654.164, 21.9929, 0.3266 ) }
    dend_2 { pt3dadd( 347.341, 655.231, 22.2617, 0.3976 ) }
    dend_2 { pt3dadd( 347.419, 656.349, 22.5187, 0.3736 ) }
    dend_2 { pt3dadd( 347.264, 657.481, 22.7536, 0.399 ) }
    dend_2 { pt3dadd( 347.093, 658.597, 23.0384, 0.3342 ) }
    dend_2 { pt3dadd( 346.744, 659.668, 23.3699, 0.3006 ) }
    dend_2 { pt3dadd( 346.146, 660.637, 23.6734, 0.2758 ) }
    dend_2 { pt3dadd( 345.478, 661.503, 24.0629, 0.2768 ) }
    dend_2 { pt3dadd( 344.659, 662.124, 24.5848, 0.2788 ) }
    dend_2 { pt3dadd( 343.707, 662.716, 25.0816, 0.2824 ) }
    dend_2 { pt3dadd( 342.848, 663.465, 25.4859, 0.2882 ) }
    dend_2 { pt3dadd( 342.357, 664.491, 25.7835, 0.305 ) }
    dend_2 { pt3dadd( 341.492, 665.236, 26.0039, 0.305 ) }
    dend_2 { pt3dadd( 340.8, 666.125, 26.4228, 0.4576 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 58/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 352.349, 593.136, 18.8647, 0.4562 ) }
    dend_1 { pt3dadd( 352.595, 593.866, 19.1181, 0.2288 ) }
    dend_1 { pt3dadd( 353.301, 594.691, 19.3225, 0.321 ) }
    dend_1 { pt3dadd( 354.339, 595.126, 19.3656, 0.386 ) }
    dend_1 { pt3dadd( 355.391, 595.563, 19.4146, 0.3582 ) }
    dend_1 { pt3dadd( 356.396, 595.838, 19.5709, 0.3396 ) }
    dend_1 { pt3dadd( 357.012, 596.5, 19.4365, 0.3738 ) }
    dend_1 { pt3dadd( 357.799, 596.888, 19.1713, 0.3344 ) }
    dend_1 { pt3dadd( 358.68, 597.115, 19.1173, 0.301 ) }
    dend_1 { pt3dadd( 359.74, 597.234, 19.2637, 0.2766 ) }
    dend_1 { pt3dadd( 360.479, 598.029, 19.4186, 0.2782 ) }
    dend_1 { pt3dadd( 361.1, 598.98, 19.6437, 0.2814 ) }
    dend_1 { pt3dadd( 361.37, 600.071, 19.9791, 0.287 ) }
    dend_1 { pt3dadd( 361.923, 600.922, 20.4392, 0.2988 ) }
    dend_1 { pt3dadd( 363.02, 601.174, 20.8359, 0.3142 ) }
    dend_1 { pt3dadd( 363.892, 601.885, 21.2038, 0.3736 ) }
    dend_1 { pt3dadd( 364.449, 602.854, 21.567, 0.3342 ) }
    dend_1 { pt3dadd( 364.87, 603.788, 21.938, 0.3006 ) }
    dend_1 { pt3dadd( 365.83, 604.244, 22.0898, 0.2756 ) }
    dend_1 { pt3dadd( 366.804, 604.661, 22.2295, 0.2766 ) }
    dend_1 { pt3dadd( 367.605, 604.432, 22.5834, 0.2784 ) }
    dend_1 { pt3dadd( 368.7, 604.319, 22.8981, 0.2816 ) }
    dend_1 { pt3dadd( 369.747, 604.292, 23.2618, 0.2876 ) }
    dend_1 { pt3dadd( 370.609, 604.991, 23.5222, 0.2986 ) }
    dend_1 { pt3dadd( 371.452, 605.674, 23.6079, 0.32 ) }
    dend_1 { pt3dadd( 372.31, 606.419, 23.6471, 0.3544 ) }
    dend_1 { pt3dadd( 373.191, 607.135, 23.7115, 0.444 ) }
    dend_1 { pt3dadd( 374.073, 607.849, 23.8112, 0.4848 ) }
    dend_1 { pt3dadd( 374.938, 608.594, 23.9, 0.4824 ) }
    dend_1 { pt3dadd( 375.753, 609.393, 24.026, 0.3988 ) }
    dend_1 { pt3dadd( 376.548, 610.181, 24.2276, 0.3988 ) }
    dend_1 { pt3dadd( 377.155, 611.145, 24.4261, 0.3338 ) }
    dend_1 { pt3dadd( 377.764, 612.109, 24.61, 0.3 ) }
    dend_1 { pt3dadd( 378.723, 612.714, 24.7467, 0.2746 ) }
    dend_1 { pt3dadd( 379.714, 613.284, 24.8416, 0.2746 ) }
    dend_1 { pt3dadd( 380.468, 614.137, 24.8976, 0.2746 ) }
    dend_1 { pt3dadd( 381.184, 615.029, 24.922, 0.2746 ) }
    dend_1 { pt3dadd( 382.094, 615.718, 24.9304, 0.2746 ) }
    dend_1 { pt3dadd( 383.03, 616.376, 24.9309, 0.2746 ) }
    dend_1 { pt3dadd( 383.965, 617.035, 24.9309, 0.2746 ) }
    dend_1 { pt3dadd( 384.901, 617.693, 24.9309, 0.2746 ) }
    dend_1 { pt3dadd( 385.925, 618.2, 24.9309, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( 386.962, 618.684, 24.9309, 0.2744 ) }
    dend_1 { pt3dadd( 387.894, 619.344, 24.9309, 0.2744 ) }
    dend_1 { pt3dadd( 388.79, 620.056, 24.9309, 0.2742 ) }
    dend_1 { pt3dadd( 389.745, 620.684, 24.9309, 0.274 ) }
    dend_1 { pt3dadd( 390.719, 621.285, 24.9309, 0.2736 ) }
    dend_1 { pt3dadd( 391.827, 621.554, 24.9309, 0.2728 ) }
    dend_1 { pt3dadd( 392.827, 622.103, 24.9309, 0.2712 ) }
    dend_1 { pt3dadd( 393.723, 622.814, 24.9309, 0.2684 ) }
    dend_1 { pt3dadd( 394.371, 623.756, 24.9309, 0.2626 ) }
    dend_1 { pt3dadd( 394.888, 624.775, 24.9309, 0.2542 ) }
    dend_1 { pt3dadd( 395.323, 625.833, 24.9309, 0.2288 ) }
    dend_1 { pt3dadd( 395.571, 626.95, 24.9309, 0.2288 ) }
    // Section: apic_22, id: apic_22, parent: apic_0 (entry count 12/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 348.385, 557.073, 34.239, 0.763 ) }
    apic_22 { pt3dadd( 348.461, 558.667, 34.44, 0.6864 ) }
    apic_22 { pt3dadd( 348.461, 559.811, 35.0627, 0.4442 ) }
    apic_22 { pt3dadd( 348.552, 560.877, 35.3447, 0.3256 ) }
    apic_22 { pt3dadd( 348.928, 561.878, 35.7711, 0.275 ) }
    apic_22 { pt3dadd( 349.208, 562.966, 36.2356, 0.2752 ) }
    apic_22 { pt3dadd( 349.282, 564.102, 36.6674, 0.2758 ) }
    apic_22 { pt3dadd( 349.394, 565.173, 37.1731, 0.2768 ) }
    apic_22 { pt3dadd( 349.832, 566.184, 37.6967, 0.2786 ) }
    apic_22 { pt3dadd( 350.368, 567.179, 38.1847, 0.2822 ) }
    apic_22 { pt3dadd( 350.913, 568.173, 38.6361, 0.2886 ) }
    apic_22 { pt3dadd( 351.386, 569.196, 39.0754, 0.3006 ) }
    apic_22 { pt3dadd( 352.071, 570.101, 39.4509, 0.3224 ) }
    apic_22 { pt3dadd( 352.887, 570.719, 39.9084, 0.3652 ) }
    apic_22 { pt3dadd( 353.406, 571.642, 40.3589, 0.4338 ) }
    apic_22 { pt3dadd( 354.449, 572.078, 40.6311, 0.6124 ) }
    apic_22 { pt3dadd( 355.408, 572.668, 40.7828, 0.6946 ) }
    apic_22 { pt3dadd( 356.188, 573.505, 40.8968, 0.682 ) }
    apic_22 { pt3dadd( 356.961, 574.322, 41.0298, 0.5442 ) }
    apic_22 { pt3dadd( 357.846, 574.945, 41.2392, 0.387 ) }
    apic_22 { pt3dadd( 358.83, 575.488, 41.3969, 0.3042 ) }
    apic_22 { pt3dadd( 359.633, 576.129, 41.6312, 0.2822 ) }
    apic_22 { pt3dadd( 359.919, 577.169, 41.9476, 0.2888 ) }
    apic_22 { pt3dadd( 360.391, 578.117, 42.2722, 0.3008 ) }
    apic_22 { pt3dadd( 361.176, 578.893, 42.4245, 0.3238 ) }
    apic_22 { pt3dadd( 362.146, 579.438, 42.4239, 0.3628 ) }
    apic_22 { pt3dadd( 363.083, 580.066, 42.3752, 0.453 ) }
    apic_22 { pt3dadd( 363.984, 580.755, 42.2752, 0.5326 ) }
    apic_22 { pt3dadd( 364.929, 581.386, 42.184, 0.4206 ) }
    apic_22 { pt3dadd( 365.867, 582.02, 42.1851, 0.329 ) }
    apic_22 { pt3dadd( 366.825, 582.624, 42.2694, 0.2814 ) }
    apic_22 { pt3dadd( 367.839, 583.127, 42.3338, 0.287 ) }
    apic_22 { pt3dadd( 368.811, 583.702, 42.3592, 0.2988 ) }
    apic_22 { pt3dadd( 369.692, 584.43, 42.3814, 0.3142 ) }
    apic_22 { pt3dadd( 370.567, 585.142, 42.4432, 0.3734 ) }
    apic_22 { pt3dadd( 371.338, 585.96, 42.5121, 0.334 ) }
    apic_22 { pt3dadd( 371.968, 586.905, 42.5866, 0.3002 ) }
    apic_22 { pt3dadd( 372.361, 587.958, 42.6611, 0.275 ) }
    apic_22 { pt3dadd( 372.961, 588.856, 42.646, 0.2752 ) }
    apic_22 { pt3dadd( 373.632, 589.742, 42.5194, 0.2758 ) }
    apic_22 { pt3dadd( 374.173, 590.741, 42.366, 0.2768 ) }
    apic_22 { pt3dadd( 374.722, 591.744, 42.2254, 0.2788 ) }
    apic_22 { pt3dadd( 375.007, 592.785, 42.0171, 0.2826 ) }
    apic_22 { pt3dadd( 375.482, 593.777, 41.8975, 0.289 ) }
    apic_22 { pt3dadd( 376.056, 594.755, 41.8914, 0.3026 ) }
    apic_22 { pt3dadd( 376.733, 595.673, 41.9286, 0.3212 ) }
    apic_22 { pt3dadd( 377.41, 596.591, 41.9975, 0.3864 ) }
    apic_22 { pt3dadd( 378.077, 597.51, 42.1019, 0.3592 ) }
    apic_22 { pt3dadd( 378.791, 598.38, 42.117, 0.3416 ) }
    apic_22 { pt3dadd( 379.558, 599.229, 42.1019, 0.377 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 62/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 348.385, 557.073, 34.239, 0.763 ) }
    apic_1 { pt3dadd( 348.754, 556.098, 33.9595, 0.6154 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 64/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 375.741, 568.793, 20.1561, 0.3172 ) }
    dend_29 { pt3dadd( 376.631, 569.238, 20.2734, 0.3792 ) }
    dend_29 { pt3dadd( 377.463, 569.977, 20.4207, 0.3446 ) }
    dend_29 { pt3dadd( 378.331, 570.699, 20.5377, 0.3196 ) }
    dend_29 { pt3dadd( 379.348, 571.214, 20.6217, 0.3116 ) }
    dend_29 { pt3dadd( 380.398, 571.667, 20.6735, 0.339 ) }
    dend_29 { pt3dadd( 381.436, 572.148, 20.7152, 0.4144 ) }
    dend_29 { pt3dadd( 382.414, 572.705, 20.8034, 0.4356 ) }
    dend_29 { pt3dadd( 383.2, 573.493, 20.8922, 0.3644 ) }
    dend_29 { pt3dadd( 383.999, 574.278, 20.9171, 0.3096 ) }
    dend_29 { pt3dadd( 384.87, 574.984, 20.886, 0.2922 ) }
    dend_29 { pt3dadd( 385.745, 575.655, 20.9437, 0.3082 ) }
    dend_29 { pt3dadd( 386.677, 576.15, 21.1719, 0.3316 ) }
    dend_29 { pt3dadd( 387.725, 576.502, 21.4404, 0.4068 ) }
    dend_29 { pt3dadd( 388.719, 577.026, 21.7333, 0.3904 ) }
    dend_29 { pt3dadd( 389.644, 577.688, 21.987, 0.4316 ) }
    dend_29 { pt3dadd( 390.573, 578.33, 22.0875, 0.389 ) }
    dend_29 { pt3dadd( 391.476, 579.018, 22.066, 0.4286 ) }
    dend_29 { pt3dadd( 392.421, 579.645, 22.0027, 0.384 ) }
    dend_29 { pt3dadd( 393.248, 580.308, 21.9562, 0.4182 ) }
    dend_29 { pt3dadd( 394.19, 580.882, 21.8515, 0.3708 ) }
    dend_29 { pt3dadd( 395.089, 581.581, 21.7857, 0.3642 ) }
    dend_29 { pt3dadd( 395.896, 582.38, 21.7031, 0.4138 ) }
    dend_29 { pt3dadd( 396.6, 583.267, 21.6308, 0.4344 ) }
    dend_29 { pt3dadd( 397.235, 584.16, 21.497, 0.3624 ) }
    dend_29 { pt3dadd( 397.872, 585.074, 21.3321, 0.3056 ) }
    dend_29 { pt3dadd( 398.61, 585.932, 21.2514, 0.285 ) }
    dend_29 { pt3dadd( 399.407, 586.748, 21.205, 0.2938 ) }
    dend_29 { pt3dadd( 400.315, 587.433, 21.1896, 0.3112 ) }
    dend_29 { pt3dadd( 401.013, 588.3, 21.1212, 0.3384 ) }
    dend_29 { pt3dadd( 401.452, 589.331, 20.9905, 0.4132 ) }
    dend_29 { pt3dadd( 401.847, 590.393, 20.8331, 0.4332 ) }
    dend_29 { pt3dadd( 402.243, 591.465, 20.7043, 0.36 ) }
    dend_29 { pt3dadd( 402.613, 592.547, 20.6293, 0.3014 ) }
    dend_29 { pt3dadd( 402.983, 593.63, 20.6083, 0.2772 ) }
    dend_29 { pt3dadd( 403.354, 594.712, 20.6399, 0.2792 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_29 { pt3dadd( 403.725, 595.793, 20.7116, 0.2834 ) }
    dend_29 { pt3dadd( 404.106, 596.872, 20.8074, 0.2906 ) }
    dend_29 { pt3dadd( 405.022, 597.555, 20.9266, 0.3056 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 3/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 375.741, 568.793, 20.1561, 0.3172 ) }
    dend_26 { pt3dadd( 376.031, 568.598, 20.1925, 0.2288 ) }
    dend_26 { pt3dadd( 376.931, 567.99, 20.5428, 0.374 ) }
    dend_26 { pt3dadd( 377.922, 567.431, 20.6531, 0.335 ) }
    dend_26 { pt3dadd( 378.926, 566.907, 20.6707, 0.302 ) }
    dend_26 { pt3dadd( 379.939, 566.375, 20.6805, 0.2782 ) }
    dend_26 { pt3dadd( 380.621, 565.485, 20.7432, 0.2814 ) }
    dend_26 { pt3dadd( 381.084, 564.446, 20.7351, 0.2872 ) }
    dend_26 { pt3dadd( 381.386, 563.405, 20.5811, 0.299 ) }
    dend_26 { pt3dadd( 381.766, 562.33, 20.4926, 0.3146 ) }
    dend_26 { pt3dadd( 382.282, 561.339, 20.5036, 0.3746 ) }
    dend_26 { pt3dadd( 382.811, 560.335, 20.5408, 0.336 ) }
    dend_26 { pt3dadd( 383.27, 559.291, 20.578, 0.3038 ) }
    dend_26 { pt3dadd( 383.682, 558.229, 20.5638, 0.2816 ) }
    dend_26 { pt3dadd( 384.076, 557.162, 20.4859, 0.2874 ) }
    dend_26 { pt3dadd( 384.471, 556.094, 20.3451, 0.2994 ) }
    dend_26 { pt3dadd( 384.865, 555.026, 20.167, 0.3152 ) }
    dend_26 { pt3dadd( 385.312, 554.007, 19.9329, 0.3754 ) }
    dend_26 { pt3dadd( 386.062, 553.316, 19.6008, 0.3376 ) }
    dend_26 { pt3dadd( 386.996, 553.244, 19.5678, 0.3068 ) }
    dend_26 { pt3dadd( 387.942, 552.869, 19.7257, 0.287 ) }
    dend_26 { pt3dadd( 388.736, 552.058, 19.84, 0.2988 ) }
    dend_26 { pt3dadd( 389.343, 551.154, 19.7576, 0.3142 ) }
    dend_26 { pt3dadd( 389.91, 550.281, 19.4723, 0.3734 ) }
    dend_26 { pt3dadd( 390.745, 549.613, 19.0557, 0.3338 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 28/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 369.509, 579.746, 15.0875, 0.3806 ) }
    dend_19 { pt3dadd( 370.385, 579.992, 15.0444, 0.412 ) }
    dend_19 { pt3dadd( 371.279, 580.57, 15.1948, 0.3594 ) }
    dend_19 { pt3dadd( 372.203, 581.109, 15.4703, 0.342 ) }
    dend_19 { pt3dadd( 373.252, 581.348, 15.531, 0.3782 ) }
    dend_19 { pt3dadd( 374.289, 581.67, 15.4112, 0.3428 ) }
    dend_19 { pt3dadd( 375.395, 581.954, 15.2396, 0.3162 ) }
    dend_19 { pt3dadd( 376.237, 582.663, 14.9464, 0.3056 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 36/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 369.509, 579.746, 15.0875, 0.3806 ) }
    dend_18 { pt3dadd( 369.291, 580.92, 14.1764, 0.2288 ) }
    dend_18 { pt3dadd( 369.767, 581.898, 14.1196, 0.3006 ) }
    dend_18 { pt3dadd( 370.488, 582.748, 14.0272, 0.325 ) }
    dend_18 { pt3dadd( 371.012, 583.75, 13.8961, 0.3576 ) }
    dend_18 { pt3dadd( 370.964, 584.879, 13.7214, 0.4798 ) }
    dend_18 { pt3dadd( 370.549, 585.932, 13.5232, 0.4068 ) }
    dend_18 { pt3dadd( 370.334, 587.052, 13.3916, 0.3518 ) }
    dend_18 { pt3dadd( 370.335, 588.193, 13.3048, 0.3184 ) }
    dend_18 { pt3dadd( 370.491, 589.313, 13.1998, 0.3814 ) }
    dend_18 { pt3dadd( 370.765, 590.423, 13.1382, 0.3484 ) }
    dend_18 { pt3dadd( 371.13, 591.495, 13.1446, 0.328 ) }
    dend_18 { pt3dadd( 371.523, 592.551, 13.0813, 0.3214 ) }
    dend_18 { pt3dadd( 371.745, 593.624, 12.9839, 0.3866 ) }
    dend_18 { pt3dadd( 371.572, 594.671, 13.0351, 0.3594 ) }
    dend_18 { pt3dadd( 371.453, 595.807, 13.0567, 0.342 ) }
    dend_18 { pt3dadd( 371.33, 596.938, 13.0382, 0.3778 ) }
    dend_18 { pt3dadd( 371.269, 598.004, 12.9433, 0.342 ) }
    dend_18 { pt3dadd( 371.44, 599.005, 12.7602, 0.315 ) }
    dend_18 { pt3dadd( 372.047, 599.935, 12.6708, 0.3034 ) }
    dend_18 { pt3dadd( 371.863, 600.899, 12.5885, 0.3228 ) }
    dend_18 { pt3dadd( 371.707, 602.019, 12.4992, 0.3892 ) }
    dend_18 { pt3dadd( 371.589, 603.153, 12.3808, 0.3644 ) }
    dend_18 { pt3dadd( 371.484, 604.278, 12.2038, 0.3502 ) }
    dend_18 { pt3dadd( 371.332, 605.373, 11.94, 0.3982 ) }
    dend_18 { pt3dadd( 371.031, 606.32, 11.5186, 0.356 ) }
    dend_18 { pt3dadd( 370.809, 607.34, 11.2437, 0.4576 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 63/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 326.193, 558.008, 21.8674, 0.3342 ) }
    dend_9 { pt3dadd( 325.962, 557.574, 21.5723, 0.3008 ) }
    dend_9 { pt3dadd( 325.412, 556.588, 21.3696, 0.276 ) }
    dend_9 { pt3dadd( 324.83, 555.707, 21.1294, 0.2772 ) }
    dend_9 { pt3dadd( 324.483, 554.773, 20.9392, 0.2794 ) }
    dend_9 { pt3dadd( 324.158, 554.239, 21.1126, 0.2836 ) }
    dend_9 { pt3dadd( 323.915, 553.359, 21.4326, 0.291 ) }
    dend_9 { pt3dadd( 323.229, 552.797, 21.9201, 0.3064 ) }
    dend_9 { pt3dadd( 322.826, 551.737, 22.2723, 0.328 ) }
    dend_9 { pt3dadd( 322.225, 550.767, 22.5459, 0.4002 ) }
    dend_9 { pt3dadd( 321.756, 549.729, 22.689, 0.3784 ) }
    dend_9 { pt3dadd( 321.315, 548.888, 22.6979, 0.408 ) }
    dend_9 { pt3dadd( 321.243, 548.538, 22.4941, 0.3506 ) }
    dend_9 { pt3dadd( 320.893, 547.769, 22.5285, 0.3322 ) }
    dend_9 { pt3dadd( 320.215, 547.032, 22.5106, 0.3288 ) }
    dend_9 { pt3dadd( 319.538, 546.114, 22.5184, 0.4016 ) }
    dend_9 { pt3dadd( 318.822, 545.224, 22.5562, 0.3808 ) }
    dend_9 { pt3dadd( 318.149, 544.302, 22.6114, 0.4124 ) }
    dend_9 { pt3dadd( 317.43, 543.431, 22.6985, 0.36 ) }
    dend_9 { pt3dadd( 316.817, 542.526, 22.6237, 0.3432 ) }
    dend_9 { pt3dadd( 316.211, 541.594, 22.5616, 0.3804 ) }
    dend_9 { pt3dadd( 316.021, 541.007, 22.4762, 0.3464 ) }
    dend_9 { pt3dadd( 315.568, 540.3, 22.3524, 0.3244 ) }
    dend_9 { pt3dadd( 315.836, 539.806, 22.0926, 0.3144 ) }
    dend_9 { pt3dadd( 315.467, 538.887, 22.0531, 0.3742 ) }
    dend_9 { pt3dadd( 315.165, 537.787, 22.0217, 0.3352 ) }
    dend_9 { pt3dadd( 314.642, 536.814, 22.0279, 0.3024 ) }
    dend_9 { pt3dadd( 314.208, 536.037, 22.2496, 0.2788 ) }
    dend_9 { pt3dadd( 313.766, 535.466, 22.3406, 0.2826 ) }
    dend_9 { pt3dadd( 313.21, 534.56, 22.3073, 0.2896 ) }
    dend_9 { pt3dadd( 312.559, 533.651, 22.2138, 0.3018 ) }
    dend_9 { pt3dadd( 311.698, 533.192, 22.3434, 0.3272 ) }
    dend_9 { pt3dadd( 311.264, 532.42, 22.7326, 0.3618 ) }
    dend_9 { pt3dadd( 310.479, 531.718, 22.9799, 0.4872 ) }
    dend_9 { pt3dadd( 309.545, 531.067, 23.2641, 0.422 ) }
    dend_9 { pt3dadd( 308.654, 530.368, 23.5738, 0.3736 ) }
    dend_9 { pt3dadd( 307.802, 529.669, 23.8655, 0.3894 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_9 { pt3dadd( 306.836, 529.219, 24.1559, 0.3646 ) }
    dend_9 { pt3dadd( 306.327, 528.6, 24.2802, 0.3516 ) }
    dend_9 { pt3dadd( 305.261, 528.26, 24.4208, 0.3958 ) }
    dend_9 { pt3dadd( 304.423, 527.841, 24.6347, 0.3752 ) }
    dend_9 { pt3dadd( 303.526, 527.175, 24.8674, 0.3782 ) }
    dend_9 { pt3dadd( 302.595, 526.519, 25.0202, 0.4114 ) }
    dend_9 { pt3dadd( 301.693, 525.821, 25.1454, 0.5686 ) }
    dend_9 { pt3dadd( 300.889, 525.017, 25.2538, 0.624 ) }
    dend_9 { pt3dadd( 300.064, 524.241, 25.3722, 0.4998 ) }
    dend_9 { pt3dadd( 299.118, 523.74, 25.529, 0.4554 ) }
    dend_9 { pt3dadd( 298.153, 523.549, 25.8944, 0.386 ) }
    dend_9 { pt3dadd( 297.302, 523.163, 26.1478, 0.4234 ) }
    dend_9 { pt3dadd( 296.281, 522.752, 26.348, 0.374 ) }
    dend_9 { pt3dadd( 295.296, 522.261, 26.6386, 0.4 ) }
    dend_9 { pt3dadd( 294.254, 521.83, 26.8646, 0.3358 ) }
    dend_9 { pt3dadd( 293.138, 521.884, 27.1074, 0.3036 ) }
    dend_9 { pt3dadd( 292.163, 521.579, 27.4725, 0.2814 ) }
    dend_9 { pt3dadd( 291.034, 521.718, 27.8118, 0.287 ) }
    dend_9 { pt3dadd( 289.908, 521.733, 28.1512, 0.2988 ) }
    dend_9 { pt3dadd( 288.772, 521.693, 28.4306, 0.3142 ) }
    dend_9 { pt3dadd( 287.657, 521.573, 28.6829, 0.3736 ) }
    dend_9 { pt3dadd( 286.521, 521.678, 28.8198, 0.334 ) }
    dend_9 { pt3dadd( 285.383, 521.643, 28.8714, 0.3002 ) }
    dend_9 { pt3dadd( 284.267, 521.411, 28.9058, 0.2752 ) }
    dend_9 { pt3dadd( 283.188, 521.037, 28.9568, 0.2756 ) }
    dend_9 { pt3dadd( 282.107, 520.672, 29.0032, 0.2766 ) }
    dend_9 { pt3dadd( 280.997, 520.479, 29.05, 0.2782 ) }
    dend_9 { pt3dadd( 279.866, 520.496, 29.1827, 0.2814 ) }
    dend_9 { pt3dadd( 278.739, 520.43, 29.3751, 0.287 ) }
    dend_9 { pt3dadd( 277.633, 520.203, 29.6086, 0.2988 ) }
    dend_9 { pt3dadd( 276.528, 519.945, 29.8404, 0.3142 ) }
    dend_9 { pt3dadd( 275.402, 519.802, 30.014, 0.3734 ) }
    dend_9 { pt3dadd( 274.262, 519.838, 30.1431, 0.334 ) }
    dend_9 { pt3dadd( 273.126, 519.778, 30.2641, 0.3 ) }
    dend_9 { pt3dadd( 272.006, 519.562, 30.3764, 0.2746 ) }
    dend_9 { pt3dadd( 270.886, 519.327, 30.4735, 0.2748 ) }
    dend_9 { pt3dadd( 269.752, 519.216, 30.571, 0.2748 ) }
    dend_9 { pt3dadd( 268.614, 519.14, 30.688, 0.2752 ) }
    dend_9 { pt3dadd( 267.486, 519.021, 30.8552, 0.2756 ) }
    dend_9 { pt3dadd( 266.357, 518.987, 31.0783, 0.2766 ) }
    dend_9 { pt3dadd( 265.218, 518.987, 31.316, 0.2782 ) }
    dend_9 { pt3dadd( 264.075, 518.987, 31.5459, 0.2814 ) }
    dend_9 { pt3dadd( 262.939, 518.987, 31.7926, 0.287 ) }
    dend_9 { pt3dadd( 261.803, 518.987, 32.0446, 0.2988 ) }
    dend_9 { pt3dadd( 260.662, 518.986, 32.2792, 0.3142 ) }
    dend_9 { pt3dadd( 259.542, 518.852, 32.5324, 0.3734 ) }
    dend_9 { pt3dadd( 258.439, 518.567, 32.7712, 0.3338 ) }
    dend_9 { pt3dadd( 257.362, 518.299, 33.0523, 0.3 ) }
    dend_9 { pt3dadd( 256.304, 518.047, 33.4071, 0.2746 ) }
    dend_9 { pt3dadd( 255.237, 517.749, 33.7742, 0.2746 ) }
    dend_9 { pt3dadd( 254.188, 517.326, 34.0474, 0.2746 ) }
    dend_9 { pt3dadd( 253.153, 516.846, 34.1925, 0.2746 ) }
    dend_9 { pt3dadd( 252.116, 516.365, 34.2317, 0.2746 ) }
    dend_9 { pt3dadd( 251.081, 515.885, 34.1782, 0.2746 ) }
    dend_9 { pt3dadd( 250.026, 515.453, 34.0564, 0.2746 ) }
    dend_9 { pt3dadd( 248.941, 515.107, 33.9447, 0.2746 ) }
    dend_9 { pt3dadd( 247.877, 514.699, 33.8422, 0.2746 ) }
    dend_9 { pt3dadd( 246.778, 514.475, 33.6991, 0.2746 ) }
    dend_9 { pt3dadd( 245.652, 514.382, 33.5115, 0.2746 ) }
    dend_9 { pt3dadd( 244.521, 514.312, 33.308, 0.2746 ) }
    dend_9 { pt3dadd( 243.379, 514.291, 33.1366, 0.2746 ) }
    dend_9 { pt3dadd( 242.235, 514.291, 33.0092, 0.2746 ) }
    dend_9 { pt3dadd( 241.091, 514.291, 32.9255, 0.2746 ) }
    dend_9 { pt3dadd( 239.947, 514.291, 32.8812, 0.2746 ) }
    dend_9 { pt3dadd( 238.803, 514.291, 32.8644, 0.2746 ) }
    dend_9 { pt3dadd( 237.659, 514.291, 32.8608, 0.2746 ) }
    dend_9 { pt3dadd( 236.515, 514.291, 32.8597, 0.2746 ) }
    dend_9 { pt3dadd( 235.371, 514.291, 32.8583, 0.2746 ) }
    dend_9 { pt3dadd( 234.256, 514.495, 32.856, 0.2746 ) }
    dend_9 { pt3dadd( 233.16, 514.825, 32.8532, 0.2746 ) }
    dend_9 { pt3dadd( 232.081, 515.204, 32.849, 0.2746 ) }
    dend_9 { pt3dadd( 231.015, 515.619, 32.8432, 0.2746 ) }
    dend_9 { pt3dadd( 230.004, 516.146, 32.835, 0.2746 ) }
    dend_9 { pt3dadd( 229.08, 516.818, 32.8236, 0.2746 ) }
    dend_9 { pt3dadd( 228.195, 517.542, 32.8076, 0.2746 ) }
    dend_9 { pt3dadd( 227.321, 518.28, 32.7852, 0.2746 ) }
    dend_9 { pt3dadd( 226.45, 519.023, 32.7538, 0.2746 ) }
    dend_9 { pt3dadd( 225.58, 519.765, 32.711, 0.2746 ) }
    dend_9 { pt3dadd( 224.67, 520.457, 32.6508, 0.2746 ) }
    dend_9 { pt3dadd( 223.711, 521.078, 32.5629, 0.2746 ) }
    dend_9 { pt3dadd( 222.695, 521.601, 32.4394, 0.2746 ) }
    dend_9 { pt3dadd( 221.626, 522.006, 32.2781, 0.2746 ) }
    dend_9 { pt3dadd( 220.535, 522.347, 32.0802, 0.2746 ) }
    dend_9 { pt3dadd( 219.523, 522.647, 31.7232, 0.2746 ) }
    dend_9 { pt3dadd( 218.712, 522.94, 31.1276, 0.2744 ) }
    dend_9 { pt3dadd( 217.865, 523.569, 30.5486, 0.2744 ) }
    dend_9 { pt3dadd( 216.787, 523.869, 30.0992, 0.2742 ) }
    dend_9 { pt3dadd( 215.646, 523.909, 29.78, 0.274 ) }
    dend_9 { pt3dadd( 214.51, 524.033, 29.5798, 0.2736 ) }
    dend_9 { pt3dadd( 213.843, 524.871, 29.4862, 0.2728 ) }
    dend_9 { pt3dadd( 213.658, 525.995, 29.4652, 0.2712 ) }
    dend_9 { pt3dadd( 212.693, 526.563, 29.4638, 0.2684 ) }
    dend_9 { pt3dadd( 211.614, 526.944, 29.4638, 0.2626 ) }
    dend_9 { pt3dadd( 210.805, 527.749, 29.4638, 0.2542 ) }
    dend_9 { pt3dadd( 210.063, 528.618, 29.4638, 0.2288 ) }
    dend_9 { pt3dadd( 209.231, 529.404, 29.4638, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 96/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 326.193, 558.008, 21.8674, 0.3342 ) }
    dend_6 { pt3dadd( 325.402, 558.104, 20.4257, 0.2288 ) }
    dend_6 { pt3dadd( 324.497, 557.431, 20.8076, 0.2912 ) }
    dend_6 { pt3dadd( 323.727, 556.75, 21.0745, 0.3052 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_6 { pt3dadd( 322.768, 556.144, 21.3486, 0.3322 ) }
    dend_6 { pt3dadd( 321.882, 555.421, 21.5718, 0.378 ) }
    dend_6 { pt3dadd( 320.999, 554.765, 21.7535, 0.4824 ) }
    dend_6 { pt3dadd( 319.861, 554.864, 21.8725, 0.5816 ) }
    dend_6 { pt3dadd( 318.725, 554.754, 21.9517, 0.5368 ) }
    dend_6 { pt3dadd( 317.605, 554.647, 22.0212, 0.4214 ) }
    dend_6 { pt3dadd( 316.495, 554.468, 21.9948, 0.3636 ) }
    dend_6 { pt3dadd( 315.363, 554.363, 21.9705, 0.413 ) }
    dend_6 { pt3dadd( 314.31, 553.949, 21.94, 0.4328 ) }
    dend_6 { pt3dadd( 313.343, 553.352, 21.8954, 0.3594 ) }
    dend_6 { pt3dadd( 312.384, 552.859, 21.7616, 0.3 ) }
    dend_6 { pt3dadd( 311.424, 552.44, 21.6644, 0.2746 ) }
    dend_6 { pt3dadd( 310.688, 551.985, 21.8896, 0.2746 ) }
    dend_6 { pt3dadd( 309.846, 551.655, 22.0931, 0.2746 ) }
    dend_6 { pt3dadd( 308.768, 551.353, 22.2748, 0.2748 ) }
    dend_6 { pt3dadd( 307.703, 551.226, 22.5935, 0.275 ) }
    dend_6 { pt3dadd( 306.64, 550.827, 22.8782, 0.2754 ) }
    dend_6 { pt3dadd( 305.524, 550.584, 23.0896, 0.276 ) }
    dend_6 { pt3dadd( 304.395, 550.6, 23.2686, 0.2772 ) }
    dend_6 { pt3dadd( 303.614, 550.384, 23.5701, 0.2794 ) }
    dend_6 { pt3dadd( 302.759, 550.275, 23.6726, 0.2836 ) }
    dend_6 { pt3dadd( 301.996, 551.002, 23.8406, 0.291 ) }
    dend_6 { pt3dadd( 301.013, 551.096, 23.9378, 0.3062 ) }
    dend_6 { pt3dadd( 300.098, 550.456, 23.9971, 0.3278 ) }
    dend_6 { pt3dadd( 299.107, 549.913, 23.9571, 0.4 ) }
    dend_6 { pt3dadd( 298.02, 549.62, 23.8328, 0.3778 ) }
    dend_6 { pt3dadd( 296.901, 549.421, 23.6964, 0.4068 ) }
    dend_6 { pt3dadd( 295.778, 549.373, 23.651, 0.3484 ) }
    dend_6 { pt3dadd( 294.668, 549.622, 23.6648, 0.328 ) }
    dend_6 { pt3dadd( 293.542, 549.477, 23.6468, 0.3214 ) }
    dend_6 { pt3dadd( 292.469, 549.08, 23.6482, 0.3868 ) }
    dend_6 { pt3dadd( 291.357, 548.813, 23.6692, 0.3598 ) }
    dend_6 { pt3dadd( 290.255, 548.508, 23.6928, 0.3426 ) }
    dend_6 { pt3dadd( 289.269, 547.929, 23.7154, 0.3792 ) }
    dend_6 { pt3dadd( 288.206, 547.507, 23.7502, 0.3444 ) }
    dend_6 { pt3dadd( 287.099, 547.212, 23.8011, 0.3194 ) }
    dend_6 { pt3dadd( 285.962, 547.087, 23.8622, 0.3116 ) }
    dend_6 { pt3dadd( 284.917, 546.674, 24.008, 0.339 ) }
    dend_6 { pt3dadd( 283.802, 546.529, 24.2211, 0.4144 ) }
    dend_6 { pt3dadd( 282.741, 546.167, 24.3256, 0.4354 ) }
    // Section: apic_24, id: apic_24, parent: apic_22 (entry count 40/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 379.558, 599.229, 42.1019, 0.377 ) }
    apic_24 { pt3dadd( 379.357, 599.577, 42.0848, 0.3408 ) }
    apic_24 { pt3dadd( 378.91, 600.599, 42.0479, 0.3124 ) }
    apic_24 { pt3dadd( 378.567, 601.674, 41.904, 0.2988 ) }
    apic_24 { pt3dadd( 378.248, 602.76, 41.727, 0.3142 ) }
    apic_24 { pt3dadd( 378.125, 603.882, 41.5444, 0.3734 ) }
    apic_24 { pt3dadd( 378.311, 604.99, 41.3462, 0.3338 ) }
    apic_24 { pt3dadd( 378.621, 605.69, 40.992, 0.3 ) }
    apic_24 { pt3dadd( 379.235, 605.994, 40.4533, 0.2746 ) }
    apic_24 { pt3dadd( 379.844, 606.938, 40.0397, 0.2746 ) }
    apic_24 { pt3dadd( 379.987, 608.073, 39.7323, 0.2746 ) }
    apic_24 { pt3dadd( 380.174, 609.201, 39.5209, 0.2746 ) }
    apic_24 { pt3dadd( 380.331, 610.332, 39.3977, 0.2746 ) }
    apic_24 { pt3dadd( 380.331, 611.476, 39.3532, 0.2746 ) }
    apic_24 { pt3dadd( 380.457, 612.571, 39.3532, 0.2746 ) }
    apic_24 { pt3dadd( 381.314, 613.304, 39.3532, 0.2746 ) }
    apic_24 { pt3dadd( 381.919, 614.088, 39.3529, 0.2746 ) }
    apic_24 { pt3dadd( 382.114, 615.195, 39.3529, 0.2746 ) }
    apic_24 { pt3dadd( 382.634, 616.21, 39.3529, 0.2746 ) }
    apic_24 { pt3dadd( 383.075, 617.249, 39.3529, 0.2746 ) }
    apic_24 { pt3dadd( 383.257, 618.374, 39.3526, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 619.516, 39.3523, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 620.66, 39.352, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 621.804, 39.3515, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 622.948, 39.3509, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 624.092, 39.3501, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 625.236, 39.349, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 626.38, 39.3473, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 627.524, 39.345, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 628.668, 39.3417, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 629.812, 39.3369, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 630.956, 39.3308, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 632.1, 39.3218, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 633.244, 39.3092, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 634.388, 39.2916, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 635.532, 39.2672, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 636.676, 39.2333, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 637.82, 39.1849, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 638.964, 39.1154, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 640.108, 39.0219, 0.2746 ) }
    apic_24 { pt3dadd( 383.305, 641.252, 38.9038, 0.2746 ) }
    apic_24 { pt3dadd( 383.334, 642.385, 38.7226, 0.2746 ) }
    apic_24 { pt3dadd( 383.422, 643.461, 38.4132, 0.2746 ) }
    apic_24 { pt3dadd( 383.508, 644.542, 38.024, 0.2746 ) }
    apic_24 { pt3dadd( 383.597, 645.671, 37.6788, 0.2746 ) }
    apic_24 { pt3dadd( 384.004, 646.706, 37.4226, 0.2746 ) }
    apic_24 { pt3dadd( 384.515, 647.722, 37.2492, 0.2746 ) }
    apic_24 { pt3dadd( 384.939, 648.785, 37.1504, 0.2746 ) }
    apic_24 { pt3dadd( 385.232, 649.885, 37.1118, 0.2746 ) }
    apic_24 { pt3dadd( 385.425, 651.013, 37.1045, 0.2746 ) }
    apic_24 { pt3dadd( 385.613, 652.141, 37.1045, 0.2746 ) }
    apic_24 { pt3dadd( 385.768, 653.274, 37.1045, 0.2744 ) }
    apic_24 { pt3dadd( 385.854, 654.414, 37.1045, 0.2744 ) }
    apic_24 { pt3dadd( 386.341, 655.375, 37.1045, 0.2742 ) }
    apic_24 { pt3dadd( 386.84, 656.376, 37.1045, 0.274 ) }
    apic_24 { pt3dadd( 387.066, 657.493, 37.1045, 0.2736 ) }
    apic_24 { pt3dadd( 387.448, 658.56, 37.1045, 0.2728 ) }
    apic_24 { pt3dadd( 387.972, 659.577, 37.1045, 0.2712 ) }
    apic_24 { pt3dadd( 388.281, 660.667, 37.1045, 0.2684 ) }
    apic_24 { pt3dadd( 388.688, 661.729, 37.1045, 0.2626 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_24 { pt3dadd( 389.474, 662.542, 37.1045, 0.2542 ) }
    apic_24 { pt3dadd( 390.382, 663.237, 37.1045, 0.2288 ) }
    apic_24 { pt3dadd( 390.399, 664.381, 37.1045, 0.2288 ) }
    // Section: apic_23, id: apic_23, parent: apic_22 (entry count 3/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 379.558, 599.229, 42.1019, 0.377 ) }
    apic_23 { pt3dadd( 380.335, 599.915, 41.883, 0.2288 ) }
    apic_23 { pt3dadd( 381.183, 600.506, 42.8218, 0.3858 ) }
    apic_23 { pt3dadd( 382.081, 601.19, 43.1925, 0.358 ) }
    apic_23 { pt3dadd( 383.102, 601.683, 43.5498, 0.3396 ) }
    apic_23 { pt3dadd( 384.068, 602.254, 43.9376, 0.3734 ) }
    apic_23 { pt3dadd( 384.929, 602.975, 44.3853, 0.3338 ) }
    apic_23 { pt3dadd( 385.865, 603.611, 44.8395, 0.3 ) }
    apic_23 { pt3dadd( 386.545, 604.348, 45.3729, 0.2746 ) }
    apic_23 { pt3dadd( 387.603, 604.749, 45.9133, 0.2746 ) }
    apic_23 { pt3dadd( 388.505, 605.289, 46.529, 0.2746 ) }
    apic_23 { pt3dadd( 389.222, 605.596, 47.3584, 0.2746 ) }
    apic_23 { pt3dadd( 389.957, 605.971, 48.2462, 0.2746 ) }
    apic_23 { pt3dadd( 390.851, 606.685, 48.9101, 0.2746 ) }
    apic_23 { pt3dadd( 391.797, 607.327, 49.3716, 0.2746 ) }
    apic_23 { pt3dadd( 392.844, 607.787, 49.6664, 0.2746 ) }
    apic_23 { pt3dadd( 393.908, 608.208, 49.8179, 0.2746 ) }
    apic_23 { pt3dadd( 395.02, 608.474, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 396.133, 608.737, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 397.176, 609.206, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 398.2, 609.716, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 399.146, 610.361, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 400.061, 611.046, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 401.092, 611.541, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 402.154, 611.967, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 403.235, 612.342, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 404.326, 612.685, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 405.427, 612.997, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 406.54, 613.26, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 407.652, 613.528, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 408.703, 613.98, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 409.753, 614.434, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 410.824, 614.837, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 411.896, 615.234, 49.8621, 0.2746 ) }
    apic_23 { pt3dadd( 413.0, 615.535, 49.8621, 0.2744 ) }
    apic_23 { pt3dadd( 414.114, 615.797, 49.8621, 0.2744 ) }
    apic_23 { pt3dadd( 415.21, 616.123, 49.8621, 0.2742 ) }
    apic_23 { pt3dadd( 416.273, 616.547, 49.8621, 0.274 ) }
    apic_23 { pt3dadd( 417.355, 616.918, 49.8621, 0.2736 ) }
    apic_23 { pt3dadd( 418.483, 617.107, 49.8621, 0.2728 ) }
    apic_23 { pt3dadd( 419.612, 617.295, 49.8621, 0.2712 ) }
    apic_23 { pt3dadd( 420.755, 617.332, 49.8621, 0.2684 ) }
    apic_23 { pt3dadd( 421.899, 617.332, 49.8621, 0.2626 ) }
    apic_23 { pt3dadd( 423.043, 617.332, 49.8621, 0.2542 ) }
    apic_23 { pt3dadd( 424.187, 617.332, 49.8621, 0.2288 ) }
    apic_23 { pt3dadd( 425.331, 617.332, 49.8621, 0.2288 ) }
    // Section: apic_19, id: apic_19, parent: apic_1 (entry count 49/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 348.754, 556.098, 33.9595, 0.6154 ) }
    apic_19 { pt3dadd( 349.473, 556.007, 32.6497, 0.6864 ) }
    apic_19 { pt3dadd( 350.568, 555.793, 32.1997, 0.5052 ) }
    apic_19 { pt3dadd( 351.7, 555.901, 32.0253, 0.4638 ) }
    apic_19 { pt3dadd( 352.798, 556.215, 31.8606, 0.4094 ) }
    apic_19 { pt3dadd( 353.879, 556.59, 31.7008, 0.4302 ) }
    apic_19 { pt3dadd( 354.89, 557.125, 31.5392, 0.5628 ) }
    apic_19 { pt3dadd( 355.903, 557.654, 31.3653, 0.5822 ) }
    apic_19 { pt3dadd( 356.983, 557.976, 31.1228, 0.5728 ) }
    apic_19 { pt3dadd( 357.894, 558.477, 30.7166, 0.5462 ) }
    apic_19 { pt3dadd( 358.834, 559.121, 30.3425, 0.5424 ) }
    apic_19 { pt3dadd( 359.759, 559.792, 30.0034, 0.5428 ) }
    apic_19 { pt3dadd( 360.813, 560.211, 29.6604, 0.5078 ) }
    apic_19 { pt3dadd( 361.9, 560.561, 29.3532, 0.6156 ) }
    apic_19 { pt3dadd( 362.877, 561.089, 29.0108, 0.6646 ) }
    apic_19 { pt3dadd( 363.886, 561.456, 28.6062, 0.5722 ) }
    apic_19 { pt3dadd( 364.945, 561.838, 28.3576, 0.6034 ) }
    apic_19 { pt3dadd( 365.856, 562.5, 28.0952, 0.5932 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 67/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 348.754, 556.098, 33.9595, 0.6154 ) }
    apic_2 { pt3dadd( 348.814, 554.504, 33.4916, 0.4444 ) }
    apic_2 { pt3dadd( 348.882, 553.371, 33.1262, 0.3162 ) }
    apic_2 { pt3dadd( 349.147, 552.26, 32.9174, 0.3048 ) }
    apic_2 { pt3dadd( 349.468, 551.191, 32.9322, 0.3304 ) }
    apic_2 { pt3dadd( 349.668, 550.15, 33.1904, 0.3796 ) }
    apic_2 { pt3dadd( 349.696, 549.027, 33.5317, 0.4614 ) }
    apic_2 { pt3dadd( 349.559, 547.893, 33.8464, 0.6584 ) }
    apic_2 { pt3dadd( 349.377, 546.763, 34.0995, 0.8054 ) }
    apic_2 { pt3dadd( 349.594, 545.647, 34.2955, 0.7636 ) }
    apic_2 { pt3dadd( 350.015, 544.584, 34.4478, 0.6106 ) }
    apic_2 { pt3dadd( 350.679, 543.655, 34.5822, 0.4648 ) }
    apic_2 { pt3dadd( 351.309, 542.701, 34.7376, 0.4402 ) }
    apic_2 { pt3dadd( 351.439, 541.605, 34.9989, 0.575 ) }
    apic_2 { pt3dadd( 351.242, 540.556, 35.3903, 0.6358 ) }
    apic_2 { pt3dadd( 351.474, 539.451, 35.784, 0.5228 ) }
    apic_2 { pt3dadd( 351.814, 538.362, 36.0906, 0.4926 ) }
    apic_2 { pt3dadd( 352.028, 537.273, 36.2578, 0.481 ) }
    apic_2 { pt3dadd( 352.261, 536.154, 36.4434, 0.474 ) }
    apic_2 { pt3dadd( 352.532, 535.161, 36.8026, 0.3896 ) }
    apic_2 { pt3dadd( 352.948, 534.134, 37.2221, 0.351 ) }
    apic_2 { pt3dadd( 353.64, 533.224, 37.6183, 0.3944 ) }
    apic_2 { pt3dadd( 354.037, 532.185, 38.0708, 0.3738 ) }
    apic_2 { pt3dadd( 354.506, 531.156, 38.5106, 0.3696 ) }
    apic_2 { pt3dadd( 354.906, 530.103, 38.925, 0.424 ) }
    apic_2 { pt3dadd( 355.491, 529.13, 39.2787, 0.4532 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 93/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 405.022, 597.555, 20.9266, 0.3056 ) }
    dend_31 { pt3dadd( 404.31, 597.663, 21.1025, 0.3266 ) }
    dend_31 { pt3dadd( 403.401, 598.263, 21.226, 0.3976 ) }
    dend_31 { pt3dadd( 402.725, 599.156, 21.4155, 0.3734 ) }
    dend_31 { pt3dadd( 402.178, 600.15, 21.6199, 0.3988 ) }
    dend_31 { pt3dadd( 401.45, 601.024, 21.8263, 0.334 ) }
    dend_31 { pt3dadd( 400.902, 601.982, 22.0161, 0.3002 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( 400.897, 603.092, 22.1777, 0.2748 ) }
    dend_31 { pt3dadd( 401.024, 604.191, 22.3714, 0.275 ) }
    dend_31 { pt3dadd( 400.724, 605.252, 22.4952, 0.2754 ) }
    dend_31 { pt3dadd( 400.258, 606.291, 22.5271, 0.2762 ) }
    dend_31 { pt3dadd( 399.82, 607.339, 22.5501, 0.2776 ) }
    dend_31 { pt3dadd( 399.352, 608.355, 22.4837, 0.2802 ) }
    dend_31 { pt3dadd( 398.692, 609.279, 22.407, 0.285 ) }
    dend_31 { pt3dadd( 398.336, 610.358, 22.318, 0.2938 ) }
    dend_31 { pt3dadd( 397.955, 611.417, 22.1603, 0.3112 ) }
    dend_31 { pt3dadd( 397.716, 612.516, 22.0203, 0.3384 ) }
    dend_31 { pt3dadd( 397.033, 613.429, 21.8859, 0.4132 ) }
    dend_31 { pt3dadd( 396.588, 614.481, 21.7658, 0.433 ) }
    dend_31 { pt3dadd( 396.108, 615.516, 21.6513, 0.3598 ) }
    dend_31 { pt3dadd( 395.8, 616.6, 21.5309, 0.301 ) }
    dend_31 { pt3dadd( 395.743, 617.739, 21.4897, 0.2766 ) }
    dend_31 { pt3dadd( 395.584, 618.791, 21.4329, 0.2782 ) }
    dend_31 { pt3dadd( 395.392, 619.558, 21.3623, 0.2814 ) }
    dend_31 { pt3dadd( 395.035, 620.549, 21.4878, 0.287 ) }
    dend_31 { pt3dadd( 394.109, 621.131, 21.6266, 0.2988 ) }
    dend_31 { pt3dadd( 393.44, 621.992, 21.7375, 0.3142 ) }
    dend_31 { pt3dadd( 393.003, 622.911, 22.0452, 0.3736 ) }
    dend_31 { pt3dadd( 392.755, 623.998, 22.4039, 0.3342 ) }
    dend_31 { pt3dadd( 392.688, 625.132, 22.7203, 0.3006 ) }
    dend_31 { pt3dadd( 392.688, 626.276, 22.9614, 0.2756 ) }
    dend_31 { pt3dadd( 392.688, 627.42, 23.161, 0.2766 ) }
    dend_31 { pt3dadd( 392.652, 628.563, 23.3338, 0.2782 ) }
    dend_31 { pt3dadd( 391.882, 629.097, 23.4872, 0.2814 ) }
    dend_31 { pt3dadd( 390.821, 629.509, 23.6662, 0.287 ) }
    dend_31 { pt3dadd( 390.005, 630.279, 23.889, 0.2988 ) }
    dend_31 { pt3dadd( 389.738, 631.347, 24.208, 0.3142 ) }
    dend_31 { pt3dadd( 389.255, 631.886, 24.8186, 0.3734 ) }
    dend_31 { pt3dadd( 389.255, 632.937, 25.5094, 0.3338 ) }
    dend_31 { pt3dadd( 389.477, 633.993, 26.1881, 0.3 ) }
    dend_31 { pt3dadd( 389.652, 635.108, 26.7411, 0.2746 ) }
    dend_31 { pt3dadd( 389.705, 636.25, 27.1281, 0.2746 ) }
    dend_31 { pt3dadd( 389.713, 637.393, 27.3591, 0.2746 ) }
    dend_31 { pt3dadd( 389.764, 638.536, 27.463, 0.2746 ) }
    dend_31 { pt3dadd( 390.243, 639.541, 27.5055, 0.2746 ) }
    dend_31 { pt3dadd( 390.958, 640.422, 27.4907, 0.2746 ) }
    dend_31 { pt3dadd( 391.638, 641.292, 27.4, 0.2746 ) }
    dend_31 { pt3dadd( 391.774, 642.377, 27.3843, 0.2746 ) }
    dend_31 { pt3dadd( 391.922, 643.456, 27.5492, 0.2746 ) }
    dend_31 { pt3dadd( 392.0, 644.588, 27.7623, 0.2746 ) }
    dend_31 { pt3dadd( 392.178, 645.694, 28.0706, 0.2746 ) }
    dend_31 { pt3dadd( 392.223, 646.821, 28.4332, 0.2746 ) }
    dend_31 { pt3dadd( 392.229, 647.955, 28.8103, 0.2746 ) }
    dend_31 { pt3dadd( 392.114, 649.068, 29.1964, 0.2746 ) }
    dend_31 { pt3dadd( 391.88, 650.139, 29.6008, 0.2746 ) }
    dend_31 { pt3dadd( 391.684, 651.259, 29.9118, 0.2746 ) }
    dend_31 { pt3dadd( 391.473, 652.383, 30.1227, 0.2746 ) }
    dend_31 { pt3dadd( 390.889, 653.327, 30.2551, 0.2746 ) }
    dend_31 { pt3dadd( 389.967, 653.982, 30.3274, 0.2746 ) }
    dend_31 { pt3dadd( 389.547, 654.985, 30.3554, 0.2746 ) }
    dend_31 { pt3dadd( 389.308, 656.103, 30.3582, 0.2746 ) }
    dend_31 { pt3dadd( 388.928, 657.181, 30.3582, 0.2746 ) }
    dend_31 { pt3dadd( 388.794, 658.311, 30.3582, 0.2744 ) }
    dend_31 { pt3dadd( 388.365, 659.363, 30.3582, 0.2744 ) }
    dend_31 { pt3dadd( 387.758, 660.331, 30.3582, 0.2742 ) }
    dend_31 { pt3dadd( 387.465, 661.427, 30.3582, 0.274 ) }
    dend_31 { pt3dadd( 386.434, 661.753, 30.3582, 0.2736 ) }
    dend_31 { pt3dadd( 386.052, 662.789, 30.3582, 0.2728 ) }
    dend_31 { pt3dadd( 386.027, 663.933, 30.3582, 0.2712 ) }
    dend_31 { pt3dadd( 385.907, 665.071, 30.3582, 0.2684 ) }
    dend_31 { pt3dadd( 385.846, 666.213, 30.3582, 0.2626 ) }
    dend_31 { pt3dadd( 385.823, 667.357, 30.3582, 0.2542 ) }
    dend_31 { pt3dadd( 385.823, 668.501, 30.3582, 0.2288 ) }
    dend_31 { pt3dadd( 385.823, 669.645, 30.3582, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 67/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 405.022, 597.555, 20.9266, 0.3056 ) }
    dend_30 { pt3dadd( 406.128, 597.99, 20.3641, 0.2288 ) }
    dend_30 { pt3dadd( 407.119, 598.542, 20.3353, 0.2748 ) }
    dend_30 { pt3dadd( 408.082, 599.155, 20.3454, 0.2752 ) }
    dend_30 { pt3dadd( 409.132, 599.575, 20.3252, 0.2756 ) }
    dend_30 { pt3dadd( 410.231, 599.892, 20.2784, 0.2766 ) }
    dend_30 { pt3dadd( 411.329, 600.211, 20.225, 0.2782 ) }
    dend_30 { pt3dadd( 412.427, 600.531, 20.1687, 0.2814 ) }
    dend_30 { pt3dadd( 413.548, 600.595, 20.069, 0.287 ) }
    dend_30 { pt3dadd( 414.683, 600.523, 19.9424, 0.2988 ) }
    dend_30 { pt3dadd( 415.825, 600.49, 19.8335, 0.3142 ) }
    dend_30 { pt3dadd( 416.969, 600.498, 19.754, 0.3736 ) }
    dend_30 { pt3dadd( 418.105, 600.522, 19.6986, 0.3342 ) }
    dend_30 { pt3dadd( 419.187, 600.184, 19.686, 0.3006 ) }
    dend_30 { pt3dadd( 420.183, 599.668, 19.7338, 0.2756 ) }
    dend_30 { pt3dadd( 421.125, 599.037, 19.759, 0.2766 ) }
    dend_30 { pt3dadd( 421.977, 598.294, 19.679, 0.2782 ) }
    dend_30 { pt3dadd( 422.991, 597.83, 19.4373, 0.2814 ) }
    dend_30 { pt3dadd( 424.075, 597.552, 19.061, 0.287 ) }
    dend_30 { pt3dadd( 425.153, 597.344, 18.5503, 0.2988 ) }
    dend_30 { pt3dadd( 426.285, 597.288, 18.0135, 0.3142 ) }
    dend_30 { pt3dadd( 427.361, 597.319, 17.4513, 0.3734 ) }
    dend_30 { pt3dadd( 428.093, 597.407, 16.7146, 0.3338 ) }
    dend_30 { pt3dadd( 428.584, 597.178, 15.8659, 0.3 ) }
    dend_30 { pt3dadd( 429.335, 596.781, 15.2972, 0.2746 ) }
    dend_30 { pt3dadd( 430.015, 596.927, 15.2888, 0.2746 ) }
    dend_30 { pt3dadd( 431.09, 596.951, 15.4568, 0.2746 ) }
    dend_30 { pt3dadd( 432.192, 597.147, 15.736, 0.2746 ) }
    dend_30 { pt3dadd( 433.231, 597.483, 15.8869, 0.2746 ) }
    dend_30 { pt3dadd( 434.318, 597.797, 16.0238, 0.2748 ) }
    dend_30 { pt3dadd( 435.396, 598.113, 16.121, 0.275 ) }
    dend_30 { pt3dadd( 436.514, 598.222, 16.0308, 0.2754 ) }
    dend_30 { pt3dadd( 437.628, 598.293, 15.8175, 0.276 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_30 { pt3dadd( 438.746, 598.449, 15.5534, 0.2772 ) }
    dend_30 { pt3dadd( 439.862, 598.655, 15.2883, 0.2796 ) }
    dend_30 { pt3dadd( 441.0, 598.746, 15.0405, 0.2838 ) }
    dend_30 { pt3dadd( 442.141, 598.696, 14.8467, 0.2914 ) }
    dend_30 { pt3dadd( 443.284, 598.639, 14.7146, 0.307 ) }
    dend_30 { pt3dadd( 444.424, 598.534, 14.6224, 0.3292 ) }
    dend_30 { pt3dadd( 445.561, 598.415, 14.544, 0.4024 ) }
    dend_30 { pt3dadd( 446.705, 598.389, 14.4598, 0.3822 ) }
    dend_30 { pt3dadd( 447.819, 598.637, 14.355, 0.415 ) }
    dend_30 { pt3dadd( 448.933, 598.899, 14.2215, 0.3648 ) }
    dend_30 { pt3dadd( 449.948, 599.372, 13.9793, 0.352 ) }
    dend_30 { pt3dadd( 450.963, 599.839, 13.6478, 0.3976 ) }
    dend_30 { pt3dadd( 452.079, 599.989, 13.277, 0.3734 ) }
    dend_30 { pt3dadd( 453.199, 600.126, 12.889, 0.3986 ) }
    dend_30 { pt3dadd( 454.312, 600.328, 12.5079, 0.3336 ) }
    dend_30 { pt3dadd( 455.424, 600.541, 12.147, 0.2994 ) }
    dend_30 { pt3dadd( 456.561, 600.606, 11.8476, 0.2736 ) }
    dend_30 { pt3dadd( 457.704, 600.608, 11.6138, 0.2728 ) }
    dend_30 { pt3dadd( 458.847, 600.608, 11.4352, 0.2712 ) }
    dend_30 { pt3dadd( 459.982, 600.608, 11.2734, 0.2684 ) }
    dend_30 { pt3dadd( 461.084, 600.608, 11.069, 0.2626 ) }
    dend_30 { pt3dadd( 462.129, 601.007, 11.0188, 0.2542 ) }
    dend_30 { pt3dadd( 462.944, 601.768, 11.0972, 0.2288 ) }
    dend_30 { pt3dadd( 463.87, 602.44, 11.3322, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 24/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 390.745, 549.613, 19.0557, 0.3338 ) }
    dend_28 { pt3dadd( 391.047, 549.54, 18.2675, 0.2288 ) }
    dend_28 { pt3dadd( 392.024, 549.029, 18.2787, 0.2746 ) }
    dend_28 { pt3dadd( 392.896, 548.37, 18.3277, 0.2746 ) }
    dend_28 { pt3dadd( 393.686, 547.723, 18.3128, 0.2744 ) }
    dend_28 { pt3dadd( 394.035, 546.977, 18.3688, 0.2744 ) }
    dend_28 { pt3dadd( 394.312, 546.26, 18.2608, 0.2742 ) }
    dend_28 { pt3dadd( 394.632, 545.352, 18.1216, 0.274 ) }
    dend_28 { pt3dadd( 394.689, 544.535, 18.2742, 0.2736 ) }
    dend_28 { pt3dadd( 394.492, 544.047, 18.1591, 0.2728 ) }
    dend_28 { pt3dadd( 394.633, 543.233, 17.8881, 0.2712 ) }
    dend_28 { pt3dadd( 394.605, 542.141, 17.6061, 0.2684 ) }
    dend_28 { pt3dadd( 394.626, 541.064, 17.5302, 0.2626 ) }
    dend_28 { pt3dadd( 395.098, 540.13, 17.6618, 0.2542 ) }
    dend_28 { pt3dadd( 395.681, 539.148, 17.7962, 0.2288 ) }
    dend_28 { pt3dadd( 396.284, 538.179, 18.0874, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 390.745, 549.613, 19.0557, 0.3338 ) }
    dend_27 { pt3dadd( 391.644, 549.463, 18.6659, 0.3 ) }
    dend_27 { pt3dadd( 392.772, 549.271, 18.3478, 0.2746 ) }
    dend_27 { pt3dadd( 393.899, 549.079, 18.1275, 0.2746 ) }
    dend_27 { pt3dadd( 395.027, 548.887, 17.9964, 0.2746 ) }
    dend_27 { pt3dadd( 396.155, 548.694, 17.9239, 0.2746 ) }
    dend_27 { pt3dadd( 397.283, 548.502, 17.8744, 0.2746 ) }
    dend_27 { pt3dadd( 398.406, 548.297, 17.8214, 0.2746 ) }
    dend_27 { pt3dadd( 399.473, 547.893, 17.7461, 0.2746 ) }
    dend_27 { pt3dadd( 400.423, 547.36, 17.6002, 0.2746 ) }
    dend_27 { pt3dadd( 401.045, 546.412, 17.505, 0.2746 ) }
    dend_27 { pt3dadd( 401.741, 545.547, 17.4541, 0.2746 ) }
    dend_27 { pt3dadd( 402.664, 544.957, 17.4135, 0.2746 ) }
    dend_27 { pt3dadd( 403.253, 544.377, 17.1136, 0.2746 ) }
    dend_27 { pt3dadd( 403.563, 543.89, 16.5556, 0.2746 ) }
    dend_27 { pt3dadd( 404.133, 543.328, 16.0608, 0.2746 ) }
    dend_27 { pt3dadd( 404.939, 542.812, 16.0107, 0.2746 ) }
    dend_27 { pt3dadd( 405.715, 542.347, 16.3612, 0.2746 ) }
    dend_27 { pt3dadd( 406.49, 541.883, 17.0164, 0.2746 ) }
    dend_27 { pt3dadd( 407.347, 541.25, 17.7484, 0.2746 ) }
    dend_27 { pt3dadd( 408.245, 540.559, 18.4044, 0.2746 ) }
    dend_27 { pt3dadd( 409.06, 539.818, 18.9532, 0.2746 ) }
    dend_27 { pt3dadd( 409.251, 538.728, 19.2195, 0.2746 ) }
    dend_27 { pt3dadd( 409.692, 537.696, 19.2296, 0.2748 ) }
    dend_27 { pt3dadd( 410.168, 536.677, 19.0596, 0.2748 ) }
    dend_27 { pt3dadd( 410.773, 535.711, 18.8768, 0.2752 ) }
    dend_27 { pt3dadd( 411.188, 534.695, 18.5923, 0.2758 ) }
    dend_27 { pt3dadd( 411.461, 533.591, 18.3719, 0.2768 ) }
    dend_27 { pt3dadd( 411.929, 532.638, 18.1138, 0.2786 ) }
    dend_27 { pt3dadd( 412.602, 532.326, 17.6778, 0.282 ) }
    dend_27 { pt3dadd( 413.054, 531.545, 17.6252, 0.2884 ) }
    dend_27 { pt3dadd( 413.11, 530.66, 17.8556, 0.2996 ) }
    dend_27 { pt3dadd( 412.857, 529.579, 18.0603, 0.3232 ) }
    dend_27 { pt3dadd( 412.813, 528.467, 18.193, 0.3544 ) }
    dend_27 { pt3dadd( 412.917, 527.357, 18.3946, 0.4736 ) }
    dend_27 { pt3dadd( 413.172, 526.242, 18.576, 0.3954 ) }
    dend_27 { pt3dadd( 413.482, 525.141, 18.6816, 0.3296 ) }
    dend_27 { pt3dadd( 413.692, 524.018, 18.7734, 0.2824 ) }
    dend_27 { pt3dadd( 414.002, 522.96, 18.9655, 0.2882 ) }
    dend_27 { pt3dadd( 414.163, 521.873, 19.2234, 0.305 ) }
    dend_27 { pt3dadd( 414.624, 520.836, 19.4345, 0.305 ) }
    dend_27 { pt3dadd( 414.271, 519.902, 19.1145, 0.4576 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 82/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 376.237, 582.663, 14.9464, 0.3056 ) }
    dend_21 { pt3dadd( 376.499, 582.32, 14.7843, 0.3266 ) }
    dend_21 { pt3dadd( 377.478, 581.856, 14.7129, 0.3978 ) }
    dend_21 { pt3dadd( 378.555, 581.878, 14.5606, 0.3738 ) }
    dend_21 { pt3dadd( 379.63, 582.255, 14.4544, 0.3994 ) }
    dend_21 { pt3dadd( 380.763, 582.294, 14.4253, 0.335 ) }
    dend_21 { pt3dadd( 381.774, 582.272, 14.4082, 0.302 ) }
    dend_21 { pt3dadd( 382.295, 582.589, 14.5631, 0.2782 ) }
    dend_21 { pt3dadd( 383.121, 582.224, 14.4682, 0.2812 ) }
    dend_21 { pt3dadd( 384.013, 581.915, 14.3158, 0.287 ) }
    dend_21 { pt3dadd( 385.104, 582.05, 14.1162, 0.2976 ) }
    dend_21 { pt3dadd( 385.859, 581.62, 14.03, 0.3168 ) }
    dend_21 { pt3dadd( 386.749, 581.747, 14.1246, 0.3548 ) }
    dend_21 { pt3dadd( 387.818, 581.778, 14.0087, 0.4146 ) }
    dend_21 { pt3dadd( 388.87, 581.839, 13.7323, 0.5758 ) }
    dend_21 { pt3dadd( 389.979, 581.839, 13.3717, 0.631 ) }
    dend_21 { pt3dadd( 391.093, 581.792, 12.9581, 0.544 ) }
    dend_21 { pt3dadd( 392.186, 581.618, 12.4992, 0.3866 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_21 { pt3dadd( 393.233, 581.708, 12.1061, 0.3034 ) }
    dend_21 { pt3dadd( 394.1, 582.388, 11.9344, 0.281 ) }
    dend_21 { pt3dadd( 395.062, 582.874, 11.8692, 0.2864 ) }
    dend_21 { pt3dadd( 396.115, 583.258, 11.7636, 0.2964 ) }
    dend_21 { pt3dadd( 397.188, 583.589, 11.6231, 0.316 ) }
    dend_21 { pt3dadd( 398.319, 583.692, 11.4929, 0.3472 ) }
    dend_21 { pt3dadd( 399.463, 583.71, 11.3725, 0.4296 ) }
    dend_21 { pt3dadd( 400.598, 583.832, 11.2546, 0.4634 ) }
    dend_21 { pt3dadd( 401.72, 584.05, 11.153, 0.4182 ) }
    dend_21 { pt3dadd( 402.843, 584.263, 11.0538, 0.3984 ) }
    dend_21 { pt3dadd( 403.96, 584.425, 10.913, 0.509 ) }
    dend_21 { pt3dadd( 405.086, 584.491, 10.7332, 0.4572 ) }
    dend_21 { pt3dadd( 406.18, 584.245, 10.5795, 0.4644 ) }
    dend_21 { pt3dadd( 407.256, 583.856, 10.481, 0.4336 ) }
    dend_21 { pt3dadd( 408.376, 583.696, 10.4359, 0.361 ) }
    dend_21 { pt3dadd( 409.519, 583.659, 10.4401, 0.3032 ) }
    dend_21 { pt3dadd( 410.661, 583.629, 10.5031, 0.2804 ) }
    dend_21 { pt3dadd( 411.783, 583.62, 10.6548, 0.2854 ) }
    dend_21 { pt3dadd( 412.903, 583.741, 10.843, 0.2942 ) }
    dend_21 { pt3dadd( 414.01, 584.013, 10.9987, 0.3122 ) }
    dend_21 { pt3dadd( 415.067, 584.441, 11.1031, 0.339 ) }
    dend_21 { pt3dadd( 416.092, 584.912, 11.1126, 0.4206 ) }
    dend_21 { pt3dadd( 417.184, 585.011, 11.163, 0.4168 ) }
    dend_21 { pt3dadd( 417.967, 585.729, 11.1314, 0.475 ) }
    dend_21 { pt3dadd( 418.901, 586.355, 11.0984, 0.4964 ) }
    dend_21 { pt3dadd( 419.903, 586.901, 11.1261, 0.4978 ) }
    dend_21 { pt3dadd( 421.005, 587.113, 11.2252, 0.4582 ) }
    dend_21 { pt3dadd( 422.141, 587.04, 11.3498, 0.3594 ) }
    dend_21 { pt3dadd( 423.248, 587.203, 11.5273, 0.3 ) }
    dend_21 { pt3dadd( 424.362, 587.439, 11.7116, 0.2746 ) }
    dend_21 { pt3dadd( 425.473, 587.688, 11.9106, 0.2746 ) }
    dend_21 { pt3dadd( 426.585, 587.934, 12.1176, 0.2746 ) }
    dend_21 { pt3dadd( 427.538, 588.427, 12.1811, 0.2746 ) }
    dend_21 { pt3dadd( 428.274, 589.248, 12.1738, 0.2746 ) }
    dend_21 { pt3dadd( 428.832, 590.2, 12.3094, 0.2748 ) }
    dend_21 { pt3dadd( 429.621, 590.509, 12.7338, 0.2748 ) }
    dend_21 { pt3dadd( 430.469, 590.021, 13.3067, 0.275 ) }
    dend_21 { pt3dadd( 431.587, 589.869, 13.7449, 0.2756 ) }
    dend_21 { pt3dadd( 432.501, 589.482, 13.909, 0.2764 ) }
    dend_21 { pt3dadd( 433.528, 588.993, 14.0868, 0.278 ) }
    dend_21 { pt3dadd( 434.613, 588.909, 14.3212, 0.2808 ) }
    dend_21 { pt3dadd( 435.513, 589.488, 14.6266, 0.2862 ) }
    dend_21 { pt3dadd( 436.383, 590.223, 14.9022, 0.2958 ) }
    dend_21 { pt3dadd( 437.377, 590.734, 15.2009, 0.3148 ) }
    dend_21 { pt3dadd( 438.478, 590.886, 15.4314, 0.3452 ) }
    dend_21 { pt3dadd( 439.395, 591.558, 15.5644, 0.4256 ) }
    dend_21 { pt3dadd( 440.378, 592.123, 15.6915, 0.4572 ) }
    dend_21 { pt3dadd( 441.354, 592.64, 15.8754, 0.3994 ) }
    dend_21 { pt3dadd( 442.442, 592.958, 16.074, 0.4 ) }
    dend_21 { pt3dadd( 443.496, 593.355, 16.2756, 0.3358 ) }
    dend_21 { pt3dadd( 444.537, 593.817, 16.385, 0.3036 ) }
    dend_21 { pt3dadd( 445.571, 594.281, 16.3993, 0.2814 ) }
    dend_21 { pt3dadd( 446.491, 594.896, 16.4021, 0.287 ) }
    dend_21 { pt3dadd( 447.226, 595.6, 16.413, 0.2988 ) }
    dend_21 { pt3dadd( 448.361, 595.589, 16.3394, 0.3142 ) }
    dend_21 { pt3dadd( 449.495, 595.579, 16.2109, 0.3734 ) }
    dend_21 { pt3dadd( 450.636, 595.602, 16.0801, 0.3338 ) }
    dend_21 { pt3dadd( 451.778, 595.656, 15.9698, 0.3 ) }
    dend_21 { pt3dadd( 452.921, 595.713, 15.8743, 0.2746 ) }
    dend_21 { pt3dadd( 454.053, 595.875, 15.7931, 0.2746 ) }
    dend_21 { pt3dadd( 455.181, 596.064, 15.7354, 0.2746 ) }
    dend_21 { pt3dadd( 456.294, 596.309, 15.6688, 0.2746 ) }
    dend_21 { pt3dadd( 457.383, 596.612, 15.5677, 0.2746 ) }
    dend_21 { pt3dadd( 458.506, 596.808, 15.5036, 0.2746 ) }
    dend_21 { pt3dadd( 459.635, 596.887, 15.5336, 0.2746 ) }
    dend_21 { pt3dadd( 460.763, 597.008, 15.6318, 0.2746 ) }
    dend_21 { pt3dadd( 461.851, 597.35, 15.7338, 0.2746 ) }
    dend_21 { pt3dadd( 462.935, 597.718, 15.8318, 0.2746 ) }
    dend_21 { pt3dadd( 463.934, 598.268, 15.9228, 0.2746 ) }
    dend_21 { pt3dadd( 465.064, 598.339, 16.0026, 0.2746 ) }
    dend_21 { pt3dadd( 466.208, 598.358, 16.0706, 0.2746 ) }
    dend_21 { pt3dadd( 467.349, 598.364, 16.1493, 0.2746 ) }
    dend_21 { pt3dadd( 468.482, 598.345, 16.2697, 0.2746 ) }
    dend_21 { pt3dadd( 469.613, 598.325, 16.4116, 0.2746 ) }
    dend_21 { pt3dadd( 470.749, 598.21, 16.5046, 0.2746 ) }
    dend_21 { pt3dadd( 471.885, 598.078, 16.536, 0.2746 ) }
    dend_21 { pt3dadd( 473.024, 598.097, 16.4704, 0.2746 ) }
    dend_21 { pt3dadd( 474.145, 598.226, 16.2966, 0.2746 ) }
    dend_21 { pt3dadd( 475.281, 598.253, 16.0594, 0.2746 ) }
    dend_21 { pt3dadd( 476.413, 598.097, 15.8183, 0.2746 ) }
    dend_21 { pt3dadd( 477.545, 597.93, 15.5859, 0.2746 ) }
    dend_21 { pt3dadd( 478.487, 597.343, 15.2855, 0.2746 ) }
    dend_21 { pt3dadd( 479.453, 596.772, 14.9453, 0.2746 ) }
    dend_21 { pt3dadd( 480.558, 596.489, 14.642, 0.2746 ) }
    dend_21 { pt3dadd( 481.67, 596.222, 14.3665, 0.2746 ) }
    dend_21 { pt3dadd( 482.722, 595.817, 14.0518, 0.2744 ) }
    dend_21 { pt3dadd( 483.762, 595.391, 13.7043, 0.2744 ) }
    dend_21 { pt3dadd( 484.778, 594.927, 13.3286, 0.2742 ) }
    dend_21 { pt3dadd( 485.784, 594.42, 12.9489, 0.274 ) }
    dend_21 { pt3dadd( 486.657, 593.702, 12.6874, 0.2736 ) }
    dend_21 { pt3dadd( 487.521, 592.953, 12.4678, 0.2728 ) }
    dend_21 { pt3dadd( 488.336, 592.205, 12.1632, 0.2712 ) }
    dend_21 { pt3dadd( 489.292, 591.61, 11.8303, 0.2684 ) }
    dend_21 { pt3dadd( 490.288, 591.072, 11.4929, 0.2626 ) }
    dend_21 { pt3dadd( 491.395, 590.875, 11.1395, 0.2542 ) }
    dend_21 { pt3dadd( 492.51, 590.735, 10.7797, 0.2288 ) }
    dend_21 { pt3dadd( 493.635, 590.537, 10.199, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 97/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 376.237, 582.663, 14.9464, 0.3056 ) }
    dend_20 { pt3dadd( 376.698, 583.283, 14.334, 0.2288 ) }
    dend_20 { pt3dadd( 377.28, 584.229, 13.9084, 0.2684 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_20 { pt3dadd( 378.11, 584.985, 13.7808, 0.2626 ) }
    dend_20 { pt3dadd( 379.028, 585.647, 13.5394, 0.2542 ) }
    dend_20 { pt3dadd( 379.79, 586.18, 13.0511, 0.2288 ) }
    dend_20 { pt3dadd( 380.397, 586.72, 11.2437, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 4/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 282.741, 546.167, 24.3256, 0.4354 ) }
    dend_8 { pt3dadd( 282.456, 545.686, 24.2679, 0.2288 ) }
    dend_8 { pt3dadd( 282.162, 544.594, 23.6485, 0.478 ) }
    dend_8 { pt3dadd( 282.152, 543.493, 23.4058, 0.4038 ) }
    dend_8 { pt3dadd( 282.196, 542.384, 23.0572, 0.3448 ) }
    dend_8 { pt3dadd( 282.089, 541.282, 22.6279, 0.3116 ) }
    dend_8 { pt3dadd( 281.869, 540.177, 22.1824, 0.3388 ) }
    dend_8 { pt3dadd( 281.655, 539.06, 21.7627, 0.4142 ) }
    dend_8 { pt3dadd( 281.357, 537.979, 21.3458, 0.4348 ) }
    dend_8 { pt3dadd( 281.036, 536.899, 20.9423, 0.3632 ) }
    dend_8 { pt3dadd( 280.861, 535.792, 20.552, 0.3074 ) }
    dend_8 { pt3dadd( 280.687, 534.67, 20.2196, 0.2882 ) }
    dend_8 { pt3dadd( 280.485, 533.551, 19.9934, 0.2996 ) }
    dend_8 { pt3dadd( 280.407, 532.427, 19.7663, 0.323 ) }
    dend_8 { pt3dadd( 280.411, 531.307, 19.4916, 0.3538 ) }
    dend_8 { pt3dadd( 280.618, 530.197, 19.2133, 0.4728 ) }
    dend_8 { pt3dadd( 281.185, 529.227, 19.0025, 0.394 ) }
    dend_8 { pt3dadd( 281.87, 528.314, 18.7908, 0.327 ) }
    dend_8 { pt3dadd( 282.189, 527.37, 18.3996, 0.2774 ) }
    dend_8 { pt3dadd( 283.027, 526.633, 18.0541, 0.2798 ) }
    dend_8 { pt3dadd( 282.901, 525.784, 17.7638, 0.2844 ) }
    dend_8 { pt3dadd( 282.033, 525.175, 17.4849, 0.293 ) }
    dend_8 { pt3dadd( 281.423, 524.263, 17.1707, 0.3082 ) }
    dend_8 { pt3dadd( 280.808, 523.342, 16.844, 0.339 ) }
    dend_8 { pt3dadd( 280.628, 522.294, 16.464, 0.3846 ) }
    dend_8 { pt3dadd( 280.91, 521.23, 16.0182, 0.5242 ) }
    dend_8 { pt3dadd( 281.243, 520.155, 15.5417, 0.5162 ) }
    dend_8 { pt3dadd( 281.759, 519.149, 15.0886, 0.4242 ) }
    dend_8 { pt3dadd( 282.211, 518.126, 14.616, 0.3986 ) }
    dend_8 { pt3dadd( 282.393, 517.019, 14.1313, 0.3334 ) }
    dend_8 { pt3dadd( 282.566, 515.91, 13.6506, 0.299 ) }
    dend_8 { pt3dadd( 282.813, 514.824, 13.1664, 0.2728 ) }
    dend_8 { pt3dadd( 283.449, 514.013, 12.619, 0.2712 ) }
    dend_8 { pt3dadd( 284.089, 513.158, 12.0739, 0.2684 ) }
    dend_8 { pt3dadd( 284.616, 512.148, 11.7438, 0.2626 ) }
    dend_8 { pt3dadd( 285.143, 511.139, 11.5872, 0.2542 ) }
    dend_8 { pt3dadd( 285.671, 510.129, 11.5646, 0.2288 ) }
    dend_8 { pt3dadd( 286.198, 509.12, 11.8264, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 42/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 282.741, 546.167, 24.3256, 0.4354 ) }
    dend_7 { pt3dadd( 282.423, 545.999, 24.3751, 0.364 ) }
    dend_7 { pt3dadd( 281.336, 545.76, 24.5392, 0.3088 ) }
    dend_7 { pt3dadd( 280.239, 545.729, 24.7954, 0.2908 ) }
    dend_7 { pt3dadd( 279.177, 545.307, 25.0015, 0.3056 ) }
    dend_7 { pt3dadd( 278.16, 544.8, 25.2274, 0.3266 ) }
    dend_7 { pt3dadd( 277.141, 544.3, 25.4803, 0.3978 ) }
    dend_7 { pt3dadd( 276.131, 543.8, 25.751, 0.3738 ) }
    dend_7 { pt3dadd( 275.116, 543.28, 25.9619, 0.3994 ) }
    dend_7 { pt3dadd( 274.128, 542.741, 26.056, 0.335 ) }
    dend_7 { pt3dadd( 273.112, 542.318, 26.0812, 0.3022 ) }
    dend_7 { pt3dadd( 272.126, 541.904, 26.2738, 0.2786 ) }
    dend_7 { pt3dadd( 271.146, 541.442, 26.5516, 0.2822 ) }
    dend_7 { pt3dadd( 270.155, 540.885, 26.77, 0.2886 ) }
    dend_7 { pt3dadd( 269.142, 540.379, 27.013, 0.3018 ) }
    dend_7 { pt3dadd( 268.165, 539.825, 27.2812, 0.3198 ) }
    dend_7 { pt3dadd( 267.248, 539.18, 27.5374, 0.3838 ) }
    dend_7 { pt3dadd( 266.391, 538.434, 27.6861, 0.3532 ) }
    dend_7 { pt3dadd( 265.573, 537.687, 27.6654, 0.3356 ) }
    dend_7 { pt3dadd( 264.742, 536.988, 27.5198, 0.3424 ) }
    dend_7 { pt3dadd( 263.868, 536.258, 27.4112, 0.3908 ) }
    dend_7 { pt3dadd( 262.937, 535.612, 27.3669, 0.5368 ) }
    dend_7 { pt3dadd( 261.961, 535.017, 27.3319, 0.5332 ) }
    dend_7 { pt3dadd( 260.944, 534.512, 27.3456, 0.4866 ) }
    dend_7 { pt3dadd( 259.87, 534.142, 27.4462, 0.365 ) }
    dend_7 { pt3dadd( 258.788, 533.772, 27.5671, 0.3104 ) }
    dend_7 { pt3dadd( 257.754, 533.3, 27.6906, 0.2938 ) }
    dend_7 { pt3dadd( 256.8, 532.674, 27.8382, 0.3112 ) }
    dend_7 { pt3dadd( 255.829, 532.082, 28.0431, 0.3382 ) }
    dend_7 { pt3dadd( 254.86, 531.489, 28.2901, 0.413 ) }
    dend_7 { pt3dadd( 253.936, 530.844, 28.576, 0.4328 ) }
    dend_7 { pt3dadd( 253.085, 530.114, 28.91, 0.3594 ) }
    dend_7 { pt3dadd( 252.233, 529.375, 29.2474, 0.3 ) }
    dend_7 { pt3dadd( 251.285, 528.801, 29.5305, 0.2746 ) }
    dend_7 { pt3dadd( 250.183, 528.518, 29.7559, 0.2746 ) }
    dend_7 { pt3dadd( 249.118, 528.104, 29.9272, 0.2746 ) }
    dend_7 { pt3dadd( 248.123, 527.627, 30.1445, 0.2746 ) }
    dend_7 { pt3dadd( 247.296, 526.88, 30.3946, 0.2746 ) }
    dend_7 { pt3dadd( 246.423, 526.154, 30.6496, 0.2746 ) }
    dend_7 { pt3dadd( 245.467, 525.532, 30.8806, 0.2746 ) }
    dend_7 { pt3dadd( 244.485, 524.943, 31.0828, 0.2746 ) }
    dend_7 { pt3dadd( 243.498, 524.372, 31.292, 0.2746 ) }
    dend_7 { pt3dadd( 242.546, 523.748, 31.5146, 0.2746 ) }
    dend_7 { pt3dadd( 241.572, 523.155, 31.7352, 0.2746 ) }
    dend_7 { pt3dadd( 240.623, 522.528, 31.9894, 0.2746 ) }
    dend_7 { pt3dadd( 239.686, 521.912, 32.314, 0.2746 ) }
    dend_7 { pt3dadd( 238.796, 521.209, 32.6497, 0.2746 ) }
    dend_7 { pt3dadd( 237.918, 520.495, 33.0042, 0.2746 ) }
    dend_7 { pt3dadd( 237.026, 519.821, 33.3964, 0.2746 ) }
    dend_7 { pt3dadd( 236.027, 519.281, 33.747, 0.2746 ) }
    dend_7 { pt3dadd( 235.086, 518.666, 34.1088, 0.2746 ) }
    dend_7 { pt3dadd( 234.331, 517.818, 34.4308, 0.2746 ) }
    dend_7 { pt3dadd( 233.222, 517.622, 34.718, 0.2746 ) }
    dend_7 { pt3dadd( 232.116, 517.614, 35.0871, 0.2746 ) }
    dend_7 { pt3dadd( 230.99, 517.724, 35.4824, 0.2746 ) }
    dend_7 { pt3dadd( 229.855, 517.846, 35.8649, 0.2746 ) }
    dend_7 { pt3dadd( 228.768, 517.88, 36.3325, 0.2746 ) }
    dend_7 { pt3dadd( 227.683, 517.912, 36.8561, 0.2744 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_7 { pt3dadd( 226.596, 517.944, 37.3979, 0.2744 ) }
    dend_7 { pt3dadd( 225.461, 517.955, 37.8456, 0.2742 ) }
    dend_7 { pt3dadd( 224.317, 517.955, 38.1612, 0.274 ) }
    dend_7 { pt3dadd( 223.173, 517.955, 38.3664, 0.2736 ) }
    dend_7 { pt3dadd( 222.03, 517.908, 38.4754, 0.2728 ) }
    dend_7 { pt3dadd( 220.887, 517.851, 38.5202, 0.2712 ) }
    dend_7 { pt3dadd( 219.745, 517.784, 38.5297, 0.2684 ) }
    dend_7 { pt3dadd( 218.608, 517.665, 38.5297, 0.2626 ) }
    dend_7 { pt3dadd( 217.47, 517.544, 38.5297, 0.2542 ) }
    dend_7 { pt3dadd( 216.327, 517.496, 38.5297, 0.2288 ) }
    dend_7 { pt3dadd( 215.183, 517.496, 38.5297, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_19 (entry count 11/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 365.856, 562.5, 28.0952, 0.5932 ) }
    apic_21 { pt3dadd( 366.483, 562.641, 27.886, 0.4482 ) }
    apic_21 { pt3dadd( 367.588, 562.916, 27.7102, 0.3334 ) }
    apic_21 { pt3dadd( 368.669, 563.284, 27.5758, 0.289 ) }
    apic_21 { pt3dadd( 369.748, 563.658, 27.4722, 0.3024 ) }
    apic_21 { pt3dadd( 370.806, 564.078, 27.4106, 0.321 ) }
    apic_21 { pt3dadd( 371.831, 564.535, 27.442, 0.3862 ) }
    apic_21 { pt3dadd( 372.928, 564.858, 27.4674, 0.3572 ) }
    apic_21 { pt3dadd( 374.039, 565.125, 27.456, 0.3442 ) }
    apic_21 { pt3dadd( 375.144, 565.413, 27.4008, 0.3522 ) }
    apic_21 { pt3dadd( 376.211, 565.802, 27.281, 0.44 ) }
    apic_21 { pt3dadd( 377.261, 566.214, 27.1032, 0.4776 ) }
    apic_21 { pt3dadd( 378.37, 566.481, 26.92, 0.468 ) }
    apic_21 { pt3dadd( 379.449, 566.845, 26.7235, 0.3774 ) }
    apic_21 { pt3dadd( 380.528, 567.21, 26.5258, 0.3346 ) }
    apic_21 { pt3dadd( 381.609, 567.57, 26.3365, 0.3334 ) }
    apic_21 { pt3dadd( 382.699, 567.907, 26.1775, 0.4088 ) }
    apic_21 { pt3dadd( 383.802, 568.204, 26.0702, 0.4016 ) }
    apic_21 { pt3dadd( 384.905, 568.503, 25.9913, 0.4158 ) }
    apic_21 { pt3dadd( 386.017, 568.752, 25.9157, 0.5362 ) }
    apic_21 { pt3dadd( 387.151, 568.809, 25.7891, 0.5322 ) }
    apic_21 { pt3dadd( 388.227, 568.702, 25.5251, 0.4846 ) }
    apic_21 { pt3dadd( 389.293, 568.587, 25.1804, 0.361 ) }
    apic_21 { pt3dadd( 390.43, 568.481, 24.876, 0.3032 ) }
    apic_21 { pt3dadd( 391.563, 568.496, 24.5722, 0.2806 ) }
    apic_21 { pt3dadd( 392.545, 568.515, 24.1394, 0.2856 ) }
    apic_21 { pt3dadd( 393.152, 568.318, 23.4996, 0.295 ) }
    apic_21 { pt3dadd( 394.092, 568.224, 22.958, 0.3132 ) }
    apic_21 { pt3dadd( 395.013, 568.384, 22.8673, 0.342 ) }
    apic_21 { pt3dadd( 395.953, 568.527, 23.102, 0.42 ) }
    apic_21 { pt3dadd( 397.087, 568.526, 23.4161, 0.4454 ) }
    apic_21 { pt3dadd( 398.224, 568.61, 23.7118, 0.3838 ) }
    apic_21 { pt3dadd( 399.334, 568.786, 23.928, 0.3402 ) }
    apic_21 { pt3dadd( 400.412, 569.139, 24.1466, 0.3748 ) }
    apic_21 { pt3dadd( 401.472, 569.499, 24.3146, 0.3364 ) }
    apic_21 { pt3dadd( 402.477, 569.782, 24.3726, 0.3048 ) }
    apic_21 { pt3dadd( 403.372, 570.093, 24.6733, 0.2834 ) }
    apic_21 { pt3dadd( 404.357, 570.562, 25.0068, 0.2908 ) }
    apic_21 { pt3dadd( 405.367, 570.961, 25.2711, 0.3058 ) }
    apic_21 { pt3dadd( 406.466, 571.056, 25.4761, 0.3274 ) }
    apic_21 { pt3dadd( 407.574, 571.302, 25.5595, 0.3978 ) }
    apic_21 { pt3dadd( 408.678, 571.344, 25.5088, 0.3798 ) }
    apic_21 { pt3dadd( 409.801, 571.206, 25.4066, 0.3808 ) }
    apic_21 { pt3dadd( 410.885, 571.27, 25.429, 0.4458 ) }
    apic_21 { pt3dadd( 411.984, 571.327, 25.4061, 0.4884 ) }
    apic_21 { pt3dadd( 413.113, 571.243, 25.356, 0.488 ) }
    apic_21 { pt3dadd( 414.23, 571.179, 25.4092, 0.4152 ) }
    apic_21 { pt3dadd( 415.344, 571.091, 25.5436, 0.4004 ) }
    apic_21 { pt3dadd( 416.451, 570.866, 25.6007, 0.4768 ) }
    apic_21 { pt3dadd( 417.544, 570.539, 25.613, 0.5714 ) }
    apic_21 { pt3dadd( 418.673, 570.375, 25.6362, 0.5178 ) }
    apic_21 { pt3dadd( 419.68, 570.245, 25.4716, 0.3854 ) }
    apic_21 { pt3dadd( 420.806, 570.279, 25.3739, 0.3012 ) }
    apic_21 { pt3dadd( 421.82, 570.551, 25.4559, 0.2766 ) }
    apic_21 { pt3dadd( 422.942, 570.652, 25.522, 0.2786 ) }
    apic_21 { pt3dadd( 424.041, 570.464, 25.5074, 0.282 ) }
    apic_21 { pt3dadd( 425.012, 570.201, 25.5693, 0.288 ) }
    apic_21 { pt3dadd( 425.956, 569.825, 25.7029, 0.3006 ) }
    apic_21 { pt3dadd( 427.085, 569.76, 25.7488, 0.3174 ) }
    apic_21 { pt3dadd( 428.218, 569.815, 25.7138, 0.3796 ) }
    apic_21 { pt3dadd( 429.288, 569.933, 25.741, 0.3454 ) }
    apic_21 { pt3dadd( 430.361, 569.816, 25.8266, 0.3214 ) }
    apic_21 { pt3dadd( 431.473, 569.61, 25.8112, 0.315 ) }
    apic_21 { pt3dadd( 432.532, 569.289, 25.657, 0.3454 ) }
    apic_21 { pt3dadd( 433.481, 568.732, 25.3963, 0.426 ) }
    apic_21 { pt3dadd( 434.504, 568.297, 25.1913, 0.458 ) }
    apic_21 { pt3dadd( 435.59, 568.011, 25.0695, 0.4008 ) }
    apic_21 { pt3dadd( 436.628, 567.725, 24.8416, 0.4024 ) }
    apic_21 { pt3dadd( 437.56, 567.359, 24.4628, 0.3406 ) }
    apic_21 { pt3dadd( 438.653, 567.203, 24.1091, 0.3126 ) }
    apic_21 { pt3dadd( 439.552, 566.987, 24.0573, 0.2976 ) }
    apic_21 { pt3dadd( 440.493, 566.391, 23.9383, 0.3182 ) }
    apic_21 { pt3dadd( 441.545, 565.987, 23.7681, 0.3512 ) }
    apic_21 { pt3dadd( 442.653, 566.238, 23.6418, 0.4378 ) }
    apic_21 { pt3dadd( 443.672, 566.709, 23.4676, 0.4736 ) }
    apic_21 { pt3dadd( 444.73, 567.114, 23.2546, 0.4608 ) }
    apic_21 { pt3dadd( 445.802, 567.504, 23.0384, 0.3642 ) }
    apic_21 { pt3dadd( 446.847, 567.971, 22.8992, 0.309 ) }
    apic_21 { pt3dadd( 447.878, 568.459, 22.8248, 0.291 ) }
    apic_21 { pt3dadd( 448.982, 568.758, 22.7724, 0.3062 ) }
    apic_21 { pt3dadd( 450.109, 568.953, 22.7388, 0.3278 ) }
    apic_21 { pt3dadd( 451.227, 569.167, 22.657, 0.4 ) }
    apic_21 { pt3dadd( 452.265, 569.574, 22.484, 0.378 ) }
    apic_21 { pt3dadd( 453.316, 570.005, 22.2925, 0.4074 ) }
    apic_21 { pt3dadd( 454.366, 570.458, 22.1469, 0.3496 ) }
    apic_21 { pt3dadd( 455.383, 570.983, 22.0531, 0.3302 ) }
    apic_21 { pt3dadd( 456.352, 571.59, 22.0083, 0.3252 ) }
    apic_21 { pt3dadd( 457.225, 572.33, 22.0114, 0.3938 ) }
    apic_21 { pt3dadd( 458.02, 573.145, 22.0752, 0.3726 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_21 { pt3dadd( 458.71, 574.034, 22.2004, 0.3676 ) }
    apic_21 { pt3dadd( 459.273, 575.026, 22.3084, 0.4202 ) }
    apic_21 { pt3dadd( 459.784, 576.035, 22.309, 0.4458 ) }
    apic_21 { pt3dadd( 460.282, 577.047, 22.2258, 0.3846 ) }
    apic_21 { pt3dadd( 460.735, 578.096, 22.1309, 0.3416 ) }
    apic_21 { pt3dadd( 461.264, 579.111, 22.0486, 0.3772 ) }
    apic_21 { pt3dadd( 461.905, 580.058, 21.9884, 0.3408 ) }
    apic_21 { pt3dadd( 462.585, 580.976, 21.9733, 0.3126 ) }
    apic_21 { pt3dadd( 463.238, 581.881, 22.0592, 0.299 ) }
    apic_21 { pt3dadd( 463.841, 582.813, 22.0366, 0.3146 ) }
    apic_21 { pt3dadd( 464.488, 583.718, 22.0153, 0.3744 ) }
    apic_21 { pt3dadd( 465.237, 584.551, 22.0805, 0.3358 ) }
    apic_21 { pt3dadd( 465.883, 585.477, 22.1519, 0.3036 ) }
    apic_21 { pt3dadd( 466.505, 586.426, 22.1558, 0.2814 ) }
    apic_21 { pt3dadd( 467.419, 587.061, 22.1096, 0.2872 ) }
    apic_21 { pt3dadd( 467.815, 588.061, 22.0844, 0.299 ) }
    apic_21 { pt3dadd( 468.587, 588.837, 22.1138, 0.3144 ) }
    apic_21 { pt3dadd( 469.559, 589.419, 22.071, 0.3742 ) }
    apic_21 { pt3dadd( 470.634, 589.762, 21.9694, 0.3352 ) }
    apic_21 { pt3dadd( 471.747, 590.015, 21.8775, 0.3022 ) }
    apic_21 { pt3dadd( 472.871, 590.195, 21.8543, 0.2796 ) }
    apic_21 { pt3dadd( 474.003, 590.354, 21.8599, 0.2796 ) }
    apic_21 { pt3dadd( 475.093, 590.7, 21.8688, 0.305 ) }
    apic_21 { pt3dadd( 476.068, 591.297, 21.9254, 0.2288 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 24/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 365.856, 562.5, 28.0952, 0.5932 ) }
    apic_20 { pt3dadd( 366.188, 562.864, 27.7026, 0.2288 ) }
    apic_20 { pt3dadd( 366.963, 563.684, 27.1121, 0.2776 ) }
    apic_20 { pt3dadd( 367.839, 564.399, 26.8621, 0.28 ) }
    apic_20 { pt3dadd( 368.771, 565.032, 26.5633, 0.2848 ) }
    apic_20 { pt3dadd( 369.656, 565.727, 26.2489, 0.2936 ) }
    apic_20 { pt3dadd( 370.531, 566.425, 25.9305, 0.3096 ) }
    apic_20 { pt3dadd( 371.468, 567.08, 25.6782, 0.3402 ) }
    apic_20 { pt3dadd( 372.407, 567.734, 25.4873, 0.393 ) }
    apic_20 { pt3dadd( 373.295, 568.438, 25.3739, 0.5102 ) }
    apic_20 { pt3dadd( 374.098, 569.233, 25.3582, 0.6338 ) }
    apic_20 { pt3dadd( 374.912, 569.992, 25.3173, 0.6302 ) }
    apic_20 { pt3dadd( 375.775, 570.688, 25.1742, 0.611 ) }
    apic_20 { pt3dadd( 376.669, 571.394, 25.027, 0.6362 ) }
    apic_20 { pt3dadd( 377.637, 571.977, 24.8942, 0.6164 ) }
    apic_20 { pt3dadd( 378.694, 572.412, 24.7355, 0.444 ) }
    apic_20 { pt3dadd( 379.777, 572.71, 24.5252, 0.3254 ) }
    apic_20 { pt3dadd( 380.895, 572.834, 24.2469, 0.2746 ) }
    apic_20 { pt3dadd( 382.01, 572.96, 23.9168, 0.2746 ) }
    apic_20 { pt3dadd( 383.132, 573.111, 23.562, 0.2746 ) }
    apic_20 { pt3dadd( 384.258, 573.3, 23.2229, 0.2746 ) }
    apic_20 { pt3dadd( 385.376, 573.542, 22.9034, 0.2746 ) }
    apic_20 { pt3dadd( 386.472, 573.858, 22.5798, 0.2746 ) }
    apic_20 { pt3dadd( 387.506, 574.325, 22.2365, 0.2746 ) }
    apic_20 { pt3dadd( 388.497, 574.83, 21.8366, 0.2746 ) }
    apic_20 { pt3dadd( 389.003, 574.901, 21.184, 0.2746 ) }
    apic_20 { pt3dadd( 389.328, 574.82, 20.309, 0.2746 ) }
    apic_20 { pt3dadd( 390.182, 574.924, 19.7176, 0.2746 ) }
    apic_20 { pt3dadd( 391.111, 575.106, 19.6056, 0.2748 ) }
    apic_20 { pt3dadd( 392.035, 575.288, 19.8747, 0.2748 ) }
    apic_20 { pt3dadd( 393.058, 575.399, 20.3599, 0.2752 ) }
    apic_20 { pt3dadd( 394.18, 575.26, 20.7315, 0.2756 ) }
    apic_20 { pt3dadd( 395.318, 575.192, 20.9703, 0.2766 ) }
    apic_20 { pt3dadd( 396.427, 575.232, 21.128, 0.2782 ) }
    apic_20 { pt3dadd( 397.335, 575.417, 21.3251, 0.2814 ) }
    apic_20 { pt3dadd( 398.097, 575.257, 21.121, 0.287 ) }
    apic_20 { pt3dadd( 398.603, 574.908, 20.51, 0.2988 ) }
    apic_20 { pt3dadd( 399.484, 574.446, 19.8794, 0.3142 ) }
    apic_20 { pt3dadd( 400.568, 574.112, 19.3586, 0.3736 ) }
    apic_20 { pt3dadd( 401.652, 574.291, 18.8681, 0.3344 ) }
    apic_20 { pt3dadd( 402.733, 574.576, 18.3921, 0.3008 ) }
    apic_20 { pt3dadd( 403.853, 574.526, 18.0723, 0.2762 ) }
    apic_20 { pt3dadd( 404.985, 574.415, 17.8245, 0.2776 ) }
    apic_20 { pt3dadd( 406.063, 574.575, 17.5048, 0.2802 ) }
    apic_20 { pt3dadd( 407.111, 574.889, 17.1105, 0.2852 ) }
    apic_20 { pt3dadd( 408.185, 575.013, 16.8748, 0.294 ) }
    apic_20 { pt3dadd( 409.298, 575.043, 16.7546, 0.3114 ) }
    apic_20 { pt3dadd( 410.361, 574.855, 16.5063, 0.3386 ) }
    apic_20 { pt3dadd( 411.413, 574.632, 16.1344, 0.4136 ) }
    apic_20 { pt3dadd( 412.509, 574.447, 15.7226, 0.434 ) }
    apic_20 { pt3dadd( 413.631, 574.295, 15.3157, 0.3616 ) }
    apic_20 { pt3dadd( 414.764, 574.285, 14.9192, 0.3042 ) }
    apic_20 { pt3dadd( 415.893, 574.401, 14.5656, 0.2824 ) }
    apic_20 { pt3dadd( 417.029, 574.461, 14.2856, 0.289 ) }
    apic_20 { pt3dadd( 418.16, 574.314, 14.0815, 0.3024 ) }
    apic_20 { pt3dadd( 419.289, 574.142, 13.9294, 0.321 ) }
    apic_20 { pt3dadd( 420.393, 574.354, 13.8813, 0.3858 ) }
    apic_20 { pt3dadd( 421.53, 574.313, 13.8628, 0.358 ) }
    apic_20 { pt3dadd( 422.632, 574.013, 13.853, 0.3396 ) }
    apic_20 { pt3dadd( 423.754, 573.861, 13.8762, 0.3734 ) }
    apic_20 { pt3dadd( 424.74, 574.37, 13.8076, 0.334 ) }
    apic_20 { pt3dadd( 425.835, 574.68, 13.6979, 0.3 ) }
    apic_20 { pt3dadd( 426.963, 574.862, 13.5565, 0.2746 ) }
    apic_20 { pt3dadd( 428.056, 575.102, 13.3042, 0.2748 ) }
    apic_20 { pt3dadd( 429.144, 575.351, 12.9606, 0.275 ) }
    apic_20 { pt3dadd( 430.263, 575.458, 12.5698, 0.2752 ) }
    apic_20 { pt3dadd( 431.385, 575.547, 12.154, 0.2758 ) }
    apic_20 { pt3dadd( 432.456, 575.929, 11.7589, 0.2768 ) }
    apic_20 { pt3dadd( 433.502, 576.386, 11.4134, 0.2796 ) }
    apic_20 { pt3dadd( 434.628, 576.565, 11.1202, 0.2796 ) }
    apic_20 { pt3dadd( 435.754, 576.741, 10.8716, 0.305 ) }
    apic_20 { pt3dadd( 436.853, 576.804, 10.199, 0.2288 ) }
    // Section: apic_16, id: apic_16, parent: apic_2 (entry count 96/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 355.491, 529.13, 39.2787, 0.4532 ) }
    apic_16 { pt3dadd( 354.787, 528.855, 40.3998, 0.2288 ) }
    apic_16 { pt3dadd( 353.791, 528.392, 40.7784, 0.2746 ) }
    apic_16 { pt3dadd( 352.817, 527.868, 40.8436, 0.2748 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_16 { pt3dadd( 351.885, 527.846, 41.0337, 0.2748 ) }
    apic_16 { pt3dadd( 350.817, 527.72, 41.2871, 0.2752 ) }
    apic_16 { pt3dadd( 349.769, 527.482, 41.4042, 0.2756 ) }
    apic_16 { pt3dadd( 348.935, 527.017, 41.7155, 0.2766 ) }
    apic_16 { pt3dadd( 347.977, 526.448, 42.0386, 0.2782 ) }
    apic_16 { pt3dadd( 346.887, 526.289, 42.4273, 0.2814 ) }
    apic_16 { pt3dadd( 345.771, 526.089, 42.7669, 0.287 ) }
    apic_16 { pt3dadd( 344.685, 525.729, 43.0497, 0.2988 ) }
    apic_16 { pt3dadd( 343.605, 525.354, 43.2978, 0.3142 ) }
    apic_16 { pt3dadd( 342.506, 525.051, 43.4974, 0.3734 ) }
    apic_16 { pt3dadd( 341.397, 524.824, 43.7178, 0.3338 ) }
    apic_16 { pt3dadd( 340.281, 524.719, 43.9636, 0.3 ) }
    apic_16 { pt3dadd( 339.161, 524.847, 44.226, 0.2746 ) }
    apic_16 { pt3dadd( 338.041, 525.025, 44.4699, 0.2746 ) }
    apic_16 { pt3dadd( 336.899, 525.074, 44.6488, 0.2746 ) }
    apic_16 { pt3dadd( 335.756, 525.066, 44.7616, 0.2746 ) }
    apic_16 { pt3dadd( 334.614, 525.025, 44.8333, 0.2748 ) }
    apic_16 { pt3dadd( 333.474, 524.943, 44.8991, 0.275 ) }
    apic_16 { pt3dadd( 332.342, 524.831, 45.0078, 0.2752 ) }
    apic_16 { pt3dadd( 331.223, 524.695, 45.1923, 0.2758 ) }
    apic_16 { pt3dadd( 330.097, 524.617, 45.4294, 0.277 ) }
    apic_16 { pt3dadd( 328.965, 524.617, 45.6884, 0.279 ) }
    apic_16 { pt3dadd( 327.829, 524.617, 45.9306, 0.2828 ) }
    apic_16 { pt3dadd( 326.687, 524.617, 46.1084, 0.2898 ) }
    apic_16 { pt3dadd( 325.542, 524.617, 46.2067, 0.3038 ) }
    apic_16 { pt3dadd( 324.399, 524.617, 46.2336, 0.3234 ) }
    apic_16 { pt3dadd( 323.254, 524.617, 46.2034, 0.3906 ) }
    apic_16 { pt3dadd( 322.111, 524.617, 46.1283, 0.3668 ) }
    apic_16 { pt3dadd( 320.972, 524.626, 45.9922, 0.3556 ) }
    apic_16 { pt3dadd( 319.845, 524.648, 45.7716, 0.4032 ) }
    apic_16 { pt3dadd( 318.713, 524.657, 45.507, 0.3898 ) }
    apic_16 { pt3dadd( 317.57, 524.643, 45.2469, 0.4004 ) }
    apic_16 { pt3dadd( 316.429, 524.656, 44.9848, 0.477 ) }
    apic_16 { pt3dadd( 315.303, 524.756, 44.6785, 0.5716 ) }
    apic_16 { pt3dadd( 314.188, 524.943, 44.3503, 0.5182 ) }
    apic_16 { pt3dadd( 313.081, 525.228, 44.0574, 0.3862 ) }
    apic_16 { pt3dadd( 312.06, 525.213, 43.6705, 0.3026 ) }
    apic_16 { pt3dadd( 310.993, 525.15, 43.209, 0.2794 ) }
    apic_16 { pt3dadd( 310.009, 525.532, 42.6754, 0.2836 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 39/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 355.491, 529.13, 39.2787, 0.4532 ) }
    apic_3 { pt3dadd( 355.654, 528.801, 39.5301, 0.3974 ) }
    apic_3 { pt3dadd( 356.03, 527.752, 39.7415, 0.3702 ) }
    apic_3 { pt3dadd( 356.29, 526.677, 40.0098, 0.407 ) }
    apic_3 { pt3dadd( 356.703, 525.649, 40.2965, 0.5088 ) }
    apic_3 { pt3dadd( 357.354, 524.72, 40.5339, 0.764 ) }
    apic_3 { pt3dadd( 358.119, 523.869, 40.7145, 0.9144 ) }
    apic_3 { pt3dadd( 358.848, 522.99, 40.8503, 0.7008 ) }
    apic_3 { pt3dadd( 359.392, 521.995, 40.9441, 0.6368 ) }
    apic_3 { pt3dadd( 359.772, 520.917, 41.0063, 0.5066 ) }
    apic_3 { pt3dadd( 360.15, 519.837, 41.064, 0.5504 ) }
    apic_3 { pt3dadd( 360.647, 518.812, 41.1384, 0.6204 ) }
    apic_3 { pt3dadd( 361.279, 517.86, 41.2395, 0.5758 ) }
    apic_3 { pt3dadd( 361.924, 516.915, 41.375, 0.6522 ) }
    apic_3 { pt3dadd( 362.394, 515.901, 41.5864, 0.7092 ) }
    apic_3 { pt3dadd( 362.702, 514.826, 41.8863, 0.54 ) }
    apic_3 { pt3dadd( 363.219, 513.881, 42.2579, 0.4148 ) }
    apic_3 { pt3dadd( 364.051, 513.14, 42.6373, 0.4134 ) }
    apic_3 { pt3dadd( 364.941, 512.424, 42.9559, 0.4334 ) }
    apic_3 { pt3dadd( 365.752, 511.62, 43.2141, 0.3604 ) }
    apic_3 { pt3dadd( 366.382, 510.678, 43.4258, 0.3022 ) }
    apic_3 { pt3dadd( 366.677, 509.595, 43.6229, 0.2786 ) }
    apic_3 { pt3dadd( 366.908, 508.505, 43.8712, 0.282 ) }
    apic_3 { pt3dadd( 367.285, 507.456, 44.1795, 0.2882 ) }
    apic_3 { pt3dadd( 367.77, 506.444, 44.5183, 0.301 ) }
    apic_3 { pt3dadd( 368.341, 505.466, 44.8445, 0.3184 ) }
    apic_3 { pt3dadd( 368.9, 504.471, 45.108, 0.3814 ) }
    apic_3 { pt3dadd( 369.432, 503.457, 45.302, 0.3486 ) }
    apic_3 { pt3dadd( 369.978, 502.453, 45.439, 0.3282 ) }
    apic_3 { pt3dadd( 370.558, 501.467, 45.54, 0.3216 ) }
    apic_3 { pt3dadd( 371.137, 500.481, 45.6308, 0.3874 ) }
    apic_3 { pt3dadd( 371.726, 499.506, 45.7498, 0.3596 ) }
    apic_3 { pt3dadd( 372.301, 498.536, 45.9284, 0.3484 ) }
    apic_3 { pt3dadd( 372.869, 497.555, 46.1294, 0.36 ) }
    apic_3 { pt3dadd( 373.319, 496.513, 46.303, 0.4542 ) }
    apic_3 { pt3dadd( 373.512, 495.393, 46.4414, 0.5052 ) }
    apic_3 { pt3dadd( 373.639, 494.257, 46.5514, 0.5136 ) }
    apic_3 { pt3dadd( 374.029, 493.202, 46.6404, 0.4888 ) }
    apic_3 { pt3dadd( 374.642, 492.238, 46.7208, 0.411 ) }
    apic_3 { pt3dadd( 375.339, 491.332, 46.8138, 0.421 ) }
    apic_3 { pt3dadd( 375.984, 490.408, 46.9669, 0.3758 ) }
    apic_3 { pt3dadd( 376.48, 489.397, 47.1764, 0.3736 ) }
    apic_3 { pt3dadd( 376.938, 488.354, 47.3827, 0.4314 ) }
    apic_3 { pt3dadd( 377.37, 487.296, 47.5574, 0.4666 ) }
    apic_3 { pt3dadd( 377.597, 486.186, 47.7117, 0.4242 ) }
    apic_3 { pt3dadd( 377.673, 485.056, 47.8817, 0.4108 ) }
    apic_3 { pt3dadd( 377.883, 483.954, 47.9987, 0.5258 ) }
    apic_3 { pt3dadd( 378.256, 482.881, 48.0679, 0.519 ) }
    apic_3 { pt3dadd( 378.507, 481.796, 48.2012, 0.4296 ) }
    apic_3 { pt3dadd( 378.668, 480.677, 48.3655, 0.4086 ) }
    apic_3 { pt3dadd( 378.884, 479.57, 48.4576, 0.352 ) }
    apic_3 { pt3dadd( 378.996, 478.456, 48.5554, 0.333 ) }
    apic_3 { pt3dadd( 379.007, 477.348, 48.7505, 0.338 ) }
    apic_3 { pt3dadd( 379.016, 476.235, 49.0042, 0.382 ) }
    apic_3 { pt3dadd( 379.083, 475.108, 49.1924, 0.5242 ) }
    apic_3 { pt3dadd( 379.385, 474.037, 49.2708, 0.4922 ) }
    apic_3 { pt3dadd( 379.956, 473.063, 49.3209, 0.4954 ) }
    apic_3 { pt3dadd( 380.601, 472.132, 49.4166, 0.6558 ) }
    apic_3 { pt3dadd( 381.091, 471.13, 49.5737, 0.6604 ) }
    apic_3 { pt3dadd( 381.25, 470.03, 49.7714, 0.4882 ) }
    apic_3 { pt3dadd( 381.124, 468.908, 49.9951, 0.3612 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_3 { pt3dadd( 381.022, 467.8, 50.1264, 0.3354 ) }
    apic_3 { pt3dadd( 381.199, 466.696, 50.1883, 0.4136 ) }
    apic_3 { pt3dadd( 381.437, 465.585, 50.2622, 0.4044 ) }
    apic_3 { pt3dadd( 381.739, 464.503, 50.2832, 0.4508 ) }
    apic_3 { pt3dadd( 382.094, 463.424, 50.2897, 0.4556 ) }
    apic_3 { pt3dadd( 382.493, 462.353, 50.342, 0.403 ) }
    apic_3 { pt3dadd( 383.031, 461.359, 50.4829, 0.3752 ) }
    apic_3 { pt3dadd( 383.697, 460.459, 50.7161, 0.4416 ) }
    apic_3 { pt3dadd( 384.328, 459.52, 50.9779, 0.451 ) }
    apic_3 { pt3dadd( 384.871, 458.534, 51.2744, 0.5626 ) }
    apic_3 { pt3dadd( 385.318, 457.496, 51.5726, 0.54 ) }
    apic_3 { pt3dadd( 385.758, 456.443, 51.8101, 0.4696 ) }
    apic_3 { pt3dadd( 386.203, 455.389, 51.9747, 0.4774 ) }
    apic_3 { pt3dadd( 386.737, 454.381, 52.0839, 0.5066 ) }
    apic_3 { pt3dadd( 387.355, 453.419, 52.159, 0.488 ) }
    apic_3 { pt3dadd( 388.006, 452.477, 52.2169, 0.5792 ) }
    apic_3 { pt3dadd( 388.666, 451.544, 52.2763, 0.5954 ) }
    apic_3 { pt3dadd( 389.354, 450.63, 52.3527, 0.4524 ) }
    apic_3 { pt3dadd( 390.007, 449.691, 52.4563, 0.3408 ) }
    apic_3 { pt3dadd( 390.647, 448.749, 52.6109, 0.3042 ) }
    apic_3 { pt3dadd( 391.343, 447.875, 52.8531, 0.3242 ) }
    apic_3 { pt3dadd( 392.055, 446.996, 53.125, 0.3918 ) }
    apic_3 { pt3dadd( 392.672, 446.046, 53.4047, 0.3692 ) }
    apic_3 { pt3dadd( 393.296, 445.11, 53.7004, 0.3598 ) }
    apic_3 { pt3dadd( 394.002, 444.219, 53.9535, 0.4122 ) }
    apic_3 { pt3dadd( 394.662, 443.286, 54.1332, 0.4 ) }
    apic_3 { pt3dadd( 395.28, 442.324, 54.2483, 0.4504 ) }
    apic_3 { pt3dadd( 395.987, 441.427, 54.3197, 0.419 ) }
    apic_3 { pt3dadd( 396.739, 440.566, 54.3626, 0.509 ) }
    apic_3 { pt3dadd( 397.42, 439.648, 54.39, 0.4138 ) }
    apic_3 { pt3dadd( 398.024, 438.678, 54.4186, 0.3648 ) }
    apic_3 { pt3dadd( 398.545, 437.66, 54.4575, 0.3422 ) }
    apic_3 { pt3dadd( 399.133, 436.682, 54.5126, 0.426 ) }
    apic_3 { pt3dadd( 399.763, 435.727, 54.591, 0.4284 ) }
    apic_3 { pt3dadd( 400.354, 434.749, 54.6972, 0.4902 ) }
    apic_3 { pt3dadd( 400.817, 433.705, 54.8386, 0.5544 ) }
    apic_3 { pt3dadd( 400.965, 432.592, 55.0486, 0.4616 ) }
    apic_3 { pt3dadd( 400.996, 431.502, 55.3806, 0.401 ) }
    apic_3 { pt3dadd( 401.119, 430.414, 55.7959, 0.4348 ) }
    apic_3 { pt3dadd( 401.489, 429.35, 56.18, 0.474 ) }
    apic_3 { pt3dadd( 402.06, 428.363, 56.4956, 0.4318 ) }
    apic_3 { pt3dadd( 402.648, 427.384, 56.7624, 0.4546 ) }
    apic_3 { pt3dadd( 403.2, 426.403, 57.0276, 0.4626 ) }
    apic_3 { pt3dadd( 403.774, 425.426, 57.2681, 0.4156 ) }
    apic_3 { pt3dadd( 404.325, 424.426, 57.4552, 0.3998 ) }
    apic_3 { pt3dadd( 404.834, 423.401, 57.5971, 0.4822 ) }
    apic_3 { pt3dadd( 405.228, 422.329, 57.706, 0.5502 ) }
    apic_3 { pt3dadd( 405.601, 421.248, 57.7898, 0.6304 ) }
    apic_3 { pt3dadd( 406.134, 420.24, 57.8586, 0.5438 ) }
    apic_3 { pt3dadd( 406.826, 419.333, 57.9298, 0.6108 ) }
    apic_3 { pt3dadd( 407.486, 418.401, 58.0247, 0.5448 ) }
    apic_3 { pt3dadd( 407.962, 417.386, 58.1927, 0.6598 ) }
    apic_3 { pt3dadd( 408.335, 416.318, 58.3993, 0.635 ) }
    apic_3 { pt3dadd( 408.629, 415.215, 58.5878, 0.8302 ) }
    apic_3 { pt3dadd( 408.945, 414.115, 58.742, 0.9362 ) }
    apic_3 { pt3dadd( 409.35, 413.047, 58.8678, 0.773 ) }
    apic_3 { pt3dadd( 409.771, 411.983, 58.9725, 0.6162 ) }
    apic_3 { pt3dadd( 410.16, 410.906, 59.0663, 0.5322 ) }
    apic_3 { pt3dadd( 410.51, 409.819, 59.173, 0.5168 ) }
    apic_3 { pt3dadd( 411.138, 408.884, 59.3331, 0.4946 ) }
    apic_3 { pt3dadd( 411.996, 408.167, 59.5736, 0.4216 ) }
    apic_3 { pt3dadd( 412.882, 407.454, 59.8354, 0.4408 ) }
    apic_3 { pt3dadd( 413.24, 406.411, 60.0922, 0.4134 ) }
    apic_3 { pt3dadd( 413.399, 405.306, 60.3966, 0.4392 ) }
    apic_3 { pt3dadd( 413.896, 404.297, 60.6903, 0.573 ) }
    apic_3 { pt3dadd( 414.383, 403.266, 60.9409, 0.6322 ) }
    apic_3 { pt3dadd( 414.713, 402.173, 61.1467, 0.515 ) }
    apic_3 { pt3dadd( 414.988, 401.064, 61.2853, 0.4832 ) }
    apic_3 { pt3dadd( 415.365, 399.988, 61.3606, 0.4398 ) }
    apic_3 { pt3dadd( 415.922, 398.992, 61.4261, 0.5126 ) }
    apic_3 { pt3dadd( 416.49, 398.006, 61.5336, 0.5904 ) }
    apic_3 { pt3dadd( 416.969, 396.986, 61.7112, 0.5542 ) }
    apic_3 { pt3dadd( 417.361, 395.918, 61.9108, 0.4474 ) }
    apic_3 { pt3dadd( 417.6, 394.801, 62.0908, 0.4424 ) }
    apic_3 { pt3dadd( 417.678, 393.661, 62.2496, 0.4104 ) }
    apic_3 { pt3dadd( 417.739, 392.518, 62.3902, 0.4624 ) }
    apic_3 { pt3dadd( 417.974, 391.401, 62.5352, 0.4768 ) }
    apic_3 { pt3dadd( 418.365, 390.335, 62.7155, 0.4428 ) }
    apic_3 { pt3dadd( 418.828, 389.291, 62.9112, 0.4464 ) }
    apic_3 { pt3dadd( 419.338, 388.271, 63.1403, 0.5876 ) }
    apic_3 { pt3dadd( 419.903, 387.283, 63.3945, 0.6528 ) }
    apic_3 { pt3dadd( 420.34, 386.23, 63.6611, 0.584 ) }
    apic_3 { pt3dadd( 420.642, 385.151, 63.9772, 0.463 ) }
    apic_3 { pt3dadd( 421.168, 384.15, 64.3062, 0.4354 ) }
    apic_3 { pt3dadd( 421.673, 383.138, 64.6447, 0.5734 ) }
    apic_3 { pt3dadd( 421.963, 382.033, 64.906, 0.5968 ) }
    apic_3 { pt3dadd( 422.455, 381.001, 65.1252, 0.6246 ) }
    apic_3 { pt3dadd( 423.043, 380.053, 65.4007, 0.5224 ) }
    apic_3 { pt3dadd( 423.525, 379.064, 65.7317, 0.3938 ) }
    apic_3 { pt3dadd( 423.809, 377.974, 66.05, 0.3166 ) }
    apic_3 { pt3dadd( 423.642, 376.844, 66.3029, 0.3064 ) }
    apic_3 { pt3dadd( 423.526, 375.715, 66.4905, 0.3282 ) }
    apic_3 { pt3dadd( 423.888, 374.631, 66.6168, 0.4006 ) }
    apic_3 { pt3dadd( 424.384, 373.601, 66.6896, 0.379 ) }
    apic_3 { pt3dadd( 424.85, 372.556, 66.7338, 0.4092 ) }
    apic_3 { pt3dadd( 425.253, 371.485, 66.775, 0.3528 ) }
    apic_3 { pt3dadd( 425.664, 370.419, 66.8279, 0.336 ) }
    apic_3 { pt3dadd( 425.881, 369.298, 66.8982, 0.336 ) }
    apic_3 { pt3dadd( 425.949, 368.159, 67.0015, 0.4152 ) }
    apic_3 { pt3dadd( 426.105, 367.042, 67.1768, 0.4054 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_3 { pt3dadd( 426.393, 365.939, 67.3694, 0.4602 ) }
    apic_3 { pt3dadd( 426.744, 364.856, 67.571, 0.4382 ) }
    apic_3 { pt3dadd( 427.203, 363.808, 67.7494, 0.5394 ) }
    apic_3 { pt3dadd( 427.642, 362.757, 67.9146, 0.496 ) }
    apic_3 { pt3dadd( 427.977, 361.69, 68.1201, 0.392 ) }
    apic_3 { pt3dadd( 428.258, 360.585, 68.2646, 0.3132 ) }
    apic_3 { pt3dadd( 428.607, 359.527, 68.3133, 0.3002 ) }
    apic_3 { pt3dadd( 429.204, 358.555, 68.3648, 0.3168 ) }
    apic_3 { pt3dadd( 429.627, 357.495, 68.4597, 0.3784 ) }
    apic_3 { pt3dadd( 429.951, 356.412, 68.6364, 0.3432 ) }
    apic_3 { pt3dadd( 430.271, 355.37, 68.936, 0.3172 ) }
    apic_3 { pt3dadd( 430.549, 354.354, 69.3658, 0.306 ) }
    apic_3 { pt3dadd( 430.806, 353.296, 69.8048, 0.335 ) }
    apic_3 { pt3dadd( 431.102, 352.214, 70.0459, 0.376 ) }
    apic_3 { pt3dadd( 431.544, 351.171, 70.1588, 0.5148 ) }
    apic_3 { pt3dadd( 432.17, 350.214, 70.2162, 0.4678 ) }
    apic_3 { pt3dadd( 432.711, 349.224, 70.2492, 0.4838 ) }
    apic_3 { pt3dadd( 432.953, 348.129, 70.2786, 0.4708 ) }
    apic_3 { pt3dadd( 433.43, 347.15, 70.2447, 0.4244 ) }
    apic_3 { pt3dadd( 433.863, 346.154, 70.3805, 0.4472 ) }
    apic_3 { pt3dadd( 434.157, 345.084, 70.5844, 0.4192 ) }
    apic_3 { pt3dadd( 434.327, 343.957, 70.737, 0.4782 ) }
    apic_3 { pt3dadd( 434.706, 342.882, 70.8271, 0.5082 ) }
    apic_3 { pt3dadd( 435.158, 341.841, 70.8411, 0.491 ) }
    apic_3 { pt3dadd( 435.461, 340.756, 70.8392, 0.5848 ) }
    apic_3 { pt3dadd( 435.52, 339.638, 70.894, 0.6054 ) }
    apic_3 { pt3dadd( 435.524, 338.494, 70.9442, 0.472 ) }
    apic_3 { pt3dadd( 435.547, 337.351, 70.9923, 0.3722 ) }
    apic_3 { pt3dadd( 435.656, 336.216, 71.0296, 0.3864 ) }
    apic_3 { pt3dadd( 435.857, 335.102, 71.0262, 0.3592 ) }
    apic_3 { pt3dadd( 435.91, 333.985, 70.9974, 0.3416 ) }
    apic_3 { pt3dadd( 435.775, 332.875, 71.0805, 0.3774 ) }
    apic_3 { pt3dadd( 435.796, 331.822, 71.3126, 0.341 ) }
    apic_3 { pt3dadd( 436.158, 330.765, 71.587, 0.3134 ) }
    apic_3 { pt3dadd( 436.412, 329.652, 71.8217, 0.2992 ) }
    apic_3 { pt3dadd( 436.6, 328.528, 72.0224, 0.321 ) }
    apic_3 { pt3dadd( 436.825, 327.42, 72.1501, 0.3564 ) }
    apic_3 { pt3dadd( 437.025, 326.331, 72.1017, 0.4478 ) }
    apic_3 { pt3dadd( 437.323, 325.271, 71.9522, 0.4918 ) }
    apic_3 { pt3dadd( 437.745, 324.212, 71.8662, 0.4952 ) }
    apic_3 { pt3dadd( 438.154, 323.151, 71.8687, 0.4236 ) }
    apic_3 { pt3dadd( 438.594, 322.102, 71.8962, 0.4396 ) }
    apic_3 { pt3dadd( 439.135, 321.108, 71.9614, 0.435 ) }
    apic_3 { pt3dadd( 439.753, 320.167, 72.1526, 0.3636 ) }
    apic_3 { pt3dadd( 440.207, 319.173, 72.4542, 0.3078 ) }
    apic_3 { pt3dadd( 440.189, 318.08, 72.8064, 0.289 ) }
    apic_3 { pt3dadd( 439.907, 316.981, 73.1489, 0.3024 ) }
    apic_3 { pt3dadd( 439.707, 315.859, 73.4619, 0.321 ) }
    apic_3 { pt3dadd( 439.682, 314.732, 73.7702, 0.386 ) }
    apic_3 { pt3dadd( 439.852, 313.62, 74.0642, 0.3582 ) }
    apic_3 { pt3dadd( 440.185, 312.53, 74.3058, 0.34 ) }
    apic_3 { pt3dadd( 440.463, 311.427, 74.4974, 0.3742 ) }
    apic_3 { pt3dadd( 440.564, 310.293, 74.674, 0.3354 ) }
    apic_3 { pt3dadd( 440.656, 309.157, 74.821, 0.303 ) }
    apic_3 { pt3dadd( 440.861, 308.033, 74.9347, 0.28 ) }
    apic_3 { pt3dadd( 441.135, 306.926, 75.0506, 0.2848 ) }
    apic_3 { pt3dadd( 441.399, 305.815, 75.171, 0.2932 ) }
    apic_3 { pt3dadd( 441.693, 304.711, 75.2808, 0.3102 ) }
    apic_3 { pt3dadd( 442.075, 303.635, 75.3572, 0.3354 ) }
    apic_3 { pt3dadd( 442.563, 302.629, 75.465, 0.4138 ) }
    apic_3 { pt3dadd( 443.157, 301.686, 75.6263, 0.4044 ) }
    apic_3 { pt3dadd( 443.554, 300.655, 75.7131, 0.4508 ) }
    apic_3 { pt3dadd( 443.511, 299.546, 75.6974, 0.457 ) }
    apic_3 { pt3dadd( 443.63, 298.45, 75.6003, 0.3988 ) }
    apic_3 { pt3dadd( 444.098, 297.472, 75.4093, 0.3988 ) }
    apic_3 { pt3dadd( 444.252, 296.59, 75.4337, 0.3338 ) }
    apic_3 { pt3dadd( 444.559, 295.516, 75.4961, 0.3 ) }
    apic_3 { pt3dadd( 444.894, 294.422, 75.5871, 0.2746 ) }
    apic_3 { pt3dadd( 445.229, 293.328, 75.7072, 0.2746 ) }
    apic_3 { pt3dadd( 445.565, 292.235, 75.8484, 0.2746 ) }
    apic_3 { pt3dadd( 445.922, 291.158, 76.0539, 0.2746 ) }
    apic_3 { pt3dadd( 446.292, 290.101, 76.3213, 0.2746 ) }
    apic_3 { pt3dadd( 446.661, 289.047, 76.6525, 0.2746 ) }
    apic_3 { pt3dadd( 447.031, 287.991, 77.023, 0.2746 ) }
    apic_3 { pt3dadd( 447.234, 286.869, 77.3461, 0.2746 ) }
    apic_3 { pt3dadd( 447.38, 285.735, 77.6006, 0.2746 ) }
    apic_3 { pt3dadd( 447.521, 284.6, 77.7952, 0.2746 ) }
    apic_3 { pt3dadd( 447.663, 283.465, 77.9503, 0.2746 ) }
    apic_3 { pt3dadd( 447.805, 282.329, 78.0872, 0.2748 ) }
    apic_3 { pt3dadd( 448.269, 281.303, 78.2849, 0.275 ) }
    apic_3 { pt3dadd( 448.844, 280.342, 78.559, 0.2752 ) }
    apic_3 { pt3dadd( 449.424, 279.385, 78.8847, 0.2758 ) }
    apic_3 { pt3dadd( 449.919, 278.372, 79.2184, 0.2768 ) }
    apic_3 { pt3dadd( 450.132, 277.25, 79.487, 0.2788 ) }
    apic_3 { pt3dadd( 450.335, 276.124, 79.6897, 0.2822 ) }
    apic_3 { pt3dadd( 450.536, 274.998, 79.8308, 0.289 ) }
    apic_3 { pt3dadd( 450.837, 273.895, 79.9173, 0.3008 ) }
    apic_3 { pt3dadd( 451.177, 272.803, 79.9669, 0.3254 ) }
    apic_3 { pt3dadd( 451.517, 271.71, 79.9994, 0.3584 ) }
    apic_3 { pt3dadd( 451.86, 270.619, 80.0299, 0.481 ) }
    apic_3 { pt3dadd( 452.163, 269.516, 80.0643, 0.4096 ) }
    apic_3 { pt3dadd( 452.356, 268.388, 80.1091, 0.3554 ) }
    apic_3 { pt3dadd( 452.544, 267.26, 80.1713, 0.3322 ) }
    apic_3 { pt3dadd( 452.731, 266.132, 80.2564, 0.3712 ) }
    apic_3 { pt3dadd( 452.92, 265.003, 80.3673, 0.5044 ) }
    apic_3 { pt3dadd( 453.189, 263.896, 80.5356, 0.4546 ) }
    apic_3 { pt3dadd( 453.586, 262.85, 80.8013, 0.4296 ) }
    apic_3 { pt3dadd( 453.987, 261.808, 81.1348, 0.5136 ) }
    apic_3 { pt3dadd( 454.388, 260.764, 81.5077, 0.4954 ) }
    apic_3 { pt3dadd( 454.758, 259.688, 81.8474, 0.391 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_3 { pt3dadd( 455.099, 258.597, 82.1122, 0.3116 ) }
    apic_3 { pt3dadd( 455.441, 257.504, 82.3119, 0.2958 ) }
    apic_3 { pt3dadd( 455.782, 256.413, 82.4631, 0.315 ) }
    apic_3 { pt3dadd( 456.122, 255.32, 82.5938, 0.3454 ) }
    apic_3 { pt3dadd( 456.444, 254.232, 82.77, 0.426 ) }
    apic_3 { pt3dadd( 456.765, 253.144, 82.9923, 0.4568 ) }
    apic_3 { pt3dadd( 457.086, 252.057, 83.2504, 0.405 ) }
    apic_3 { pt3dadd( 457.408, 250.97, 83.5276, 0.3802 ) }
    apic_3 { pt3dadd( 457.822, 249.907, 83.7833, 0.4448 ) }
    apic_3 { pt3dadd( 458.242, 248.845, 84.0112, 0.4862 ) }
    apic_3 { pt3dadd( 458.662, 247.783, 84.2092, 0.4852 ) }
    apic_3 { pt3dadd( 459.082, 246.722, 84.3842, 0.4042 ) }
    apic_3 { pt3dadd( 459.37, 245.616, 84.5233, 0.4088 ) }
    apic_3 { pt3dadd( 459.633, 244.503, 84.6387, 0.3524 ) }
    apic_3 { pt3dadd( 459.895, 243.388, 84.7479, 0.3338 ) }
    apic_3 { pt3dadd( 460.157, 242.275, 84.8607, 0.3394 ) }
    apic_3 { pt3dadd( 460.462, 241.173, 84.9985, 0.3852 ) }
    apic_3 { pt3dadd( 460.953, 240.163, 85.2236, 0.5254 ) }
    apic_3 { pt3dadd( 461.444, 239.154, 85.5126, 0.5182 ) }
    apic_3 { pt3dadd( 461.935, 238.145, 85.839, 0.428 ) }
    apic_3 { pt3dadd( 462.351, 237.088, 86.147, 0.4058 ) }
    apic_3 { pt3dadd( 462.671, 235.99, 86.3856, 0.3464 ) }
    apic_3 { pt3dadd( 462.992, 234.893, 86.5584, 0.3242 ) }
    apic_3 { pt3dadd( 463.312, 233.795, 86.6715, 0.3144 ) }
    apic_3 { pt3dadd( 463.633, 232.697, 86.7423, 0.3738 ) }
    // Section: apic_18, id: apic_18, parent: apic_16 (entry count 25/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 310.009, 525.532, 42.6754, 0.2836 ) }
    apic_18 { pt3dadd( 309.158, 525.578, 42.2044, 0.2912 ) }
    apic_18 { pt3dadd( 308.027, 525.547, 41.8121, 0.3066 ) }
    apic_18 { pt3dadd( 306.898, 525.382, 41.5456, 0.3284 ) }
    apic_18 { pt3dadd( 305.784, 525.138, 41.4263, 0.401 ) }
    apic_18 { pt3dadd( 304.669, 524.94, 41.4322, 0.3796 ) }
    apic_18 { pt3dadd( 303.795, 524.261, 41.4884, 0.4104 ) }
    apic_18 { pt3dadd( 302.8, 523.771, 41.61, 0.355 ) }
    apic_18 { pt3dadd( 301.71, 523.664, 41.5968, 0.34 ) }
    apic_18 { pt3dadd( 300.839, 523.219, 41.363, 0.3446 ) }
    apic_18 { pt3dadd( 299.765, 522.875, 41.1558, 0.4246 ) }
    apic_18 { pt3dadd( 298.664, 522.693, 41.0374, 0.454 ) }
    apic_18 { pt3dadd( 297.533, 522.762, 40.9265, 0.4 ) }
    apic_18 { pt3dadd( 296.438, 522.974, 40.7484, 0.3698 ) }
    apic_18 { pt3dadd( 295.35, 523.22, 40.5658, 0.4318 ) }
    apic_18 { pt3dadd( 294.23, 523.373, 40.4135, 0.4314 ) }
    apic_18 { pt3dadd( 293.094, 523.364, 40.2606, 0.5328 ) }
    apic_18 { pt3dadd( 291.953, 523.275, 40.1472, 0.453 ) }
    apic_18 { pt3dadd( 290.831, 523.089, 40.1069, 0.4626 ) }
    apic_18 { pt3dadd( 289.716, 522.861, 40.14, 0.4006 ) }
    apic_18 { pt3dadd( 288.587, 522.708, 40.1758, 0.444 ) }
    apic_18 { pt3dadd( 287.454, 522.595, 40.1671, 0.4432 ) }
    apic_18 { pt3dadd( 286.35, 522.338, 40.1422, 0.3786 ) }
    apic_18 { pt3dadd( 285.245, 522.056, 40.14, 0.3366 ) }
    apic_18 { pt3dadd( 284.115, 521.961, 40.1744, 0.3384 ) }
    apic_18 { pt3dadd( 282.986, 522.056, 40.1965, 0.4132 ) }
    apic_18 { pt3dadd( 281.853, 522.157, 40.1934, 0.4334 ) }
    apic_18 { pt3dadd( 280.721, 522.071, 40.2223, 0.3604 ) }
    apic_18 { pt3dadd( 279.655, 521.706, 40.3063, 0.302 ) }
    apic_18 { pt3dadd( 278.586, 521.376, 40.3612, 0.2782 ) }
    apic_18 { pt3dadd( 277.473, 521.359, 40.4348, 0.2814 ) }
    apic_18 { pt3dadd( 276.357, 521.563, 40.5667, 0.287 ) }
    apic_18 { pt3dadd( 275.244, 521.801, 40.7344, 0.2988 ) }
    apic_18 { pt3dadd( 274.114, 521.934, 40.9139, 0.3142 ) }
    apic_18 { pt3dadd( 272.973, 522.01, 41.0763, 0.3736 ) }
    apic_18 { pt3dadd( 271.833, 522.1, 41.2222, 0.334 ) }
    apic_18 { pt3dadd( 270.695, 522.186, 41.3678, 0.3002 ) }
    apic_18 { pt3dadd( 269.595, 522.322, 41.5733, 0.2752 ) }
    apic_18 { pt3dadd( 268.479, 522.324, 41.7785, 0.2756 ) }
    apic_18 { pt3dadd( 267.362, 522.095, 41.9244, 0.2766 ) }
    apic_18 { pt3dadd( 266.414, 521.503, 42.0165, 0.2782 ) }
    apic_18 { pt3dadd( 265.425, 520.958, 42.0538, 0.2814 ) }
    apic_18 { pt3dadd( 264.403, 520.464, 42.089, 0.287 ) }
    apic_18 { pt3dadd( 263.42, 519.89, 42.0804, 0.2988 ) }
    apic_18 { pt3dadd( 262.352, 519.501, 42.0342, 0.3142 ) }
    apic_18 { pt3dadd( 261.258, 519.207, 41.9409, 0.3734 ) }
    apic_18 { pt3dadd( 260.156, 518.928, 41.8835, 0.3338 ) }
    apic_18 { pt3dadd( 259.066, 518.586, 41.8505, 0.3 ) }
    apic_18 { pt3dadd( 257.965, 518.274, 41.8216, 0.2746 ) }
    apic_18 { pt3dadd( 256.865, 517.964, 41.7925, 0.2746 ) }
    apic_18 { pt3dadd( 255.764, 517.653, 41.7533, 0.2746 ) }
    apic_18 { pt3dadd( 254.668, 517.328, 41.6858, 0.2746 ) }
    apic_18 { pt3dadd( 253.61, 516.922, 41.5388, 0.2746 ) }
    apic_18 { pt3dadd( 252.619, 516.417, 41.2782, 0.2746 ) }
    apic_18 { pt3dadd( 251.616, 515.927, 40.95, 0.2746 ) }
    apic_18 { pt3dadd( 250.571, 515.496, 40.616, 0.2746 ) }
    apic_18 { pt3dadd( 249.507, 515.092, 40.3091, 0.2746 ) }
    apic_18 { pt3dadd( 248.444, 514.683, 40.0526, 0.2746 ) }
    apic_18 { pt3dadd( 247.381, 514.26, 39.8824, 0.2746 ) }
    apic_18 { pt3dadd( 246.356, 513.769, 39.7891, 0.2746 ) }
    apic_18 { pt3dadd( 245.463, 513.057, 39.7499, 0.2746 ) }
    apic_18 { pt3dadd( 244.598, 512.31, 39.7471, 0.2746 ) }
    apic_18 { pt3dadd( 243.677, 511.631, 39.7701, 0.2746 ) }
    apic_18 { pt3dadd( 242.736, 510.979, 39.8118, 0.2746 ) }
    apic_18 { pt3dadd( 241.785, 510.344, 39.8672, 0.2746 ) }
    apic_18 { pt3dadd( 240.801, 509.774, 39.9459, 0.2746 ) }
    apic_18 { pt3dadd( 239.729, 509.399, 40.0767, 0.2746 ) }
    apic_18 { pt3dadd( 238.64, 509.088, 40.2536, 0.2746 ) }
    apic_18 { pt3dadd( 237.563, 508.733, 40.4466, 0.2746 ) }
    apic_18 { pt3dadd( 236.527, 508.25, 40.607, 0.2746 ) }
    apic_18 { pt3dadd( 235.496, 507.754, 40.728, 0.2746 ) }
    apic_18 { pt3dadd( 234.441, 507.311, 40.8153, 0.2746 ) }
    apic_18 { pt3dadd( 233.365, 506.932, 40.8769, 0.2746 ) }
    apic_18 { pt3dadd( 232.244, 506.711, 40.9262, 0.2746 ) }
    apic_18 { pt3dadd( 231.106, 506.592, 40.9755, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_18 { pt3dadd( 229.972, 506.466, 41.046, 0.2746 ) }
    apic_18 { pt3dadd( 228.846, 506.325, 41.1678, 0.2746 ) }
    apic_18 { pt3dadd( 227.719, 506.185, 41.3204, 0.2746 ) }
    apic_18 { pt3dadd( 226.585, 506.077, 41.4733, 0.2746 ) }
    apic_18 { pt3dadd( 225.444, 506.048, 41.5834, 0.2746 ) }
    apic_18 { pt3dadd( 224.3, 506.048, 41.6343, 0.2746 ) }
    apic_18 { pt3dadd( 223.174, 505.881, 41.6242, 0.2746 ) }
    apic_18 { pt3dadd( 222.097, 505.505, 41.5568, 0.2746 ) }
    apic_18 { pt3dadd( 220.998, 505.202, 41.4442, 0.2746 ) }
    apic_18 { pt3dadd( 219.901, 505.243, 41.2216, 0.2746 ) }
    apic_18 { pt3dadd( 218.812, 505.399, 40.8962, 0.2746 ) }
    apic_18 { pt3dadd( 217.719, 505.548, 40.5132, 0.2746 ) }
    apic_18 { pt3dadd( 216.589, 505.59, 40.1848, 0.2746 ) }
    apic_18 { pt3dadd( 215.454, 505.71, 39.9448, 0.2746 ) }
    apic_18 { pt3dadd( 214.84, 506.528, 39.7863, 0.2746 ) }
    apic_18 { pt3dadd( 214.355, 507.563, 39.7015, 0.2744 ) }
    apic_18 { pt3dadd( 213.338, 507.947, 39.6687, 0.2744 ) }
    apic_18 { pt3dadd( 212.403, 508.591, 39.6631, 0.2742 ) }
    apic_18 { pt3dadd( 211.465, 509.246, 39.6631, 0.274 ) }
    apic_18 { pt3dadd( 210.405, 509.667, 39.6631, 0.2736 ) }
    apic_18 { pt3dadd( 209.332, 510.064, 39.6631, 0.2728 ) }
    apic_18 { pt3dadd( 208.249, 510.436, 39.6631, 0.2712 ) }
    apic_18 { pt3dadd( 207.167, 510.804, 39.6631, 0.2684 ) }
    apic_18 { pt3dadd( 206.053, 511.063, 39.6631, 0.2626 ) }
    apic_18 { pt3dadd( 204.911, 511.085, 39.6631, 0.2542 ) }
    apic_18 { pt3dadd( 203.802, 510.823, 39.6631, 0.2288 ) }
    apic_18 { pt3dadd( 203.737, 509.711, 39.6631, 0.2288 ) }
    // Section: apic_17, id: apic_17, parent: apic_16 (entry count 27/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 310.009, 525.532, 42.6754, 0.2836 ) }
    apic_17 { pt3dadd( 309.269, 525.583, 41.0402, 0.2288 ) }
    apic_17 { pt3dadd( 308.332, 525.622, 38.871, 0.2912 ) }
    apic_17 { pt3dadd( 307.925, 525.745, 37.8535, 0.3066 ) }
    apic_17 { pt3dadd( 307.304, 525.827, 36.7237, 0.3286 ) }
    apic_17 { pt3dadd( 306.193, 525.7, 35.6902, 0.4012 ) }
    apic_17 { pt3dadd( 305.092, 525.806, 34.7917, 0.3802 ) }
    apic_17 { pt3dadd( 304.081, 526.106, 33.9573, 0.4114 ) }
    apic_17 { pt3dadd( 303.178, 526.521, 33.1559, 0.358 ) }
    apic_17 { pt3dadd( 302.287, 527.069, 32.4274, 0.3396 ) }
    apic_17 { pt3dadd( 301.315, 526.914, 31.9864, 0.3736 ) }
    apic_17 { pt3dadd( 300.286, 527.214, 31.743, 0.3342 ) }
    apic_17 { pt3dadd( 299.228, 527.225, 31.4283, 0.3006 ) }
    apic_17 { pt3dadd( 298.099, 527.225, 31.1615, 0.2758 ) }
    apic_17 { pt3dadd( 296.98, 527.225, 30.9084, 0.2768 ) }
    apic_17 { pt3dadd( 295.845, 527.232, 30.7023, 0.2786 ) }
    apic_17 { pt3dadd( 294.794, 527.473, 30.6824, 0.282 ) }
    apic_17 { pt3dadd( 293.77, 527.984, 30.6939, 0.288 ) }
    apic_17 { pt3dadd( 292.754, 528.506, 30.7381, 0.3008 ) }
    apic_17 { pt3dadd( 291.661, 528.827, 30.7877, 0.3178 ) }
    apic_17 { pt3dadd( 290.52, 528.823, 30.8227, 0.3804 ) }
    apic_17 { pt3dadd( 289.418, 528.765, 30.7476, 0.3466 ) }
    apic_17 { pt3dadd( 288.298, 528.563, 30.721, 0.3244 ) }
    apic_17 { pt3dadd( 287.179, 528.472, 30.779, 0.3148 ) }
    apic_17 { pt3dadd( 286.078, 528.369, 30.8862, 0.3746 ) }
    apic_17 { pt3dadd( 284.948, 528.307, 30.9347, 0.336 ) }
    apic_17 { pt3dadd( 283.832, 528.078, 30.9952, 0.304 ) }
    apic_17 { pt3dadd( 282.789, 527.649, 31.0456, 0.282 ) }
    apic_17 { pt3dadd( 281.745, 527.255, 31.0542, 0.2882 ) }
    apic_17 { pt3dadd( 280.823, 526.674, 31.0178, 0.3008 ) }
    apic_17 { pt3dadd( 280.034, 525.963, 30.8465, 0.318 ) }
    apic_17 { pt3dadd( 278.939, 525.853, 30.8218, 0.3808 ) }
    apic_17 { pt3dadd( 277.821, 525.851, 30.9075, 0.3474 ) }
    apic_17 { pt3dadd( 276.699, 525.687, 31.043, 0.3262 ) }
    apic_17 { pt3dadd( 275.681, 525.223, 31.236, 0.3178 ) }
    apic_17 { pt3dadd( 274.792, 524.529, 31.3132, 0.3804 ) }
    apic_17 { pt3dadd( 273.724, 524.12, 31.3443, 0.3466 ) }
    apic_17 { pt3dadd( 272.596, 523.998, 31.2696, 0.3248 ) }
    apic_17 { pt3dadd( 271.62, 523.414, 31.2091, 0.3152 ) }
    apic_17 { pt3dadd( 270.629, 522.878, 31.0593, 0.3756 ) }
    apic_17 { pt3dadd( 269.576, 522.443, 30.9285, 0.3378 ) }
    apic_17 { pt3dadd( 268.539, 521.979, 30.8182, 0.3072 ) }
    apic_17 { pt3dadd( 267.584, 521.357, 30.6888, 0.2878 ) }
    apic_17 { pt3dadd( 266.652, 520.704, 30.543, 0.3002 ) }
    apic_17 { pt3dadd( 265.718, 520.051, 30.3845, 0.3168 ) }
    apic_17 { pt3dadd( 264.773, 519.411, 30.242, 0.3786 ) }
    apic_17 { pt3dadd( 263.815, 518.788, 30.1218, 0.3434 ) }
    apic_17 { pt3dadd( 262.793, 518.315, 30.0569, 0.3176 ) }
    apic_17 { pt3dadd( 261.673, 518.227, 30.037, 0.3078 ) }
    apic_17 { pt3dadd( 260.548, 518.415, 30.0028, 0.3334 ) }
    apic_17 { pt3dadd( 259.423, 518.611, 29.969, 0.3982 ) }
    apic_17 { pt3dadd( 258.301, 518.828, 29.9678, 0.4322 ) }
    apic_17 { pt3dadd( 257.178, 519.047, 30.028, 0.2288 ) }
    // Section: apic_15, id: apic_15, parent: apic_3 (entry count 80/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 463.633, 232.697, 86.7423, 0.3738 ) }
    apic_15 { pt3dadd( 463.714, 232.365, 86.9246, 0.2288 ) }
    apic_15 { pt3dadd( 464.057, 231.283, 87.6548, 0.2748 ) }
    apic_15 { pt3dadd( 464.311, 230.249, 88.0121, 0.2748 ) }
    apic_15 { pt3dadd( 463.747, 229.374, 88.4307, 0.2752 ) }
    apic_15 { pt3dadd( 462.684, 229.208, 88.8476, 0.2756 ) }
    apic_15 { pt3dadd( 462.089, 228.271, 89.1646, 0.2766 ) }
    apic_15 { pt3dadd( 461.81, 227.171, 89.3908, 0.2782 ) }
    apic_15 { pt3dadd( 461.246, 226.184, 89.5362, 0.2814 ) }
    apic_15 { pt3dadd( 460.608, 225.243, 89.6174, 0.2872 ) }
    apic_15 { pt3dadd( 460.265, 224.17, 89.6692, 0.299 ) }
    apic_15 { pt3dadd( 460.206, 223.038, 89.7411, 0.3146 ) }
    apic_15 { pt3dadd( 460.206, 221.907, 89.8565, 0.3744 ) }
    apic_15 { pt3dadd( 460.206, 220.767, 89.9483, 0.3358 ) }
    apic_15 { pt3dadd( 460.206, 219.638, 89.9738, 0.3036 ) }
    apic_15 { pt3dadd( 460.038, 218.655, 89.8682, 0.2814 ) }
    apic_15 { pt3dadd( 459.788, 217.711, 89.7568, 0.287 ) }
    apic_15 { pt3dadd( 459.72, 216.86, 89.9794, 0.2988 ) }
    apic_15 { pt3dadd( 459.25, 216.176, 90.4548, 0.3142 ) }
    apic_15 { pt3dadd( 458.495, 215.361, 90.9644, 0.3734 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_15 { pt3dadd( 458.375, 214.266, 91.4376, 0.3338 ) }
    apic_15 { pt3dadd( 458.375, 213.122, 91.8392, 0.3 ) }
    apic_15 { pt3dadd( 458.375, 212.014, 92.0648, 0.2746 ) }
    apic_15 { pt3dadd( 458.323, 210.878, 92.2102, 0.2746 ) }
    apic_15 { pt3dadd( 457.876, 209.875, 92.47, 0.2746 ) }
    apic_15 { pt3dadd( 457.442, 208.877, 92.8928, 0.2746 ) }
    apic_15 { pt3dadd( 457.292, 207.777, 93.4217, 0.2746 ) }
    apic_15 { pt3dadd( 457.153, 206.675, 94.0327, 0.2746 ) }
    apic_15 { pt3dadd( 457.075, 205.627, 94.7517, 0.2746 ) }
    apic_15 { pt3dadd( 457.006, 204.578, 95.5128, 0.2746 ) }
    apic_15 { pt3dadd( 457.25, 203.486, 96.1898, 0.2746 ) }
    apic_15 { pt3dadd( 457.498, 202.392, 96.7868, 0.2746 ) }
    apic_15 { pt3dadd( 458.092, 201.417, 97.2524, 0.2746 ) }
    apic_15 { pt3dadd( 458.703, 200.449, 97.6189, 0.2746 ) }
    apic_15 { pt3dadd( 459.44, 199.574, 97.9208, 0.2746 ) }
    apic_15 { pt3dadd( 459.873, 198.516, 98.2139, 0.2746 ) }
    apic_15 { pt3dadd( 460.078, 197.393, 98.546, 0.2746 ) }
    apic_15 { pt3dadd( 459.863, 196.276, 98.9811, 0.2746 ) }
    apic_15 { pt3dadd( 459.766, 195.189, 99.598, 0.2746 ) }
    apic_15 { pt3dadd( 459.759, 194.482, 100.565, 0.2746 ) }
    apic_15 { pt3dadd( 459.934, 193.665, 101.733, 0.2746 ) }
    apic_15 { pt3dadd( 460.596, 192.771, 102.849, 0.2746 ) }
    apic_15 { pt3dadd( 461.417, 192.027, 103.908, 0.2746 ) }
    apic_15 { pt3dadd( 462.168, 191.266, 104.938, 0.2746 ) }
    apic_15 { pt3dadd( 462.707, 190.442, 105.987, 0.2746 ) }
    apic_15 { pt3dadd( 463.091, 189.447, 106.974, 0.2746 ) }
    apic_15 { pt3dadd( 463.335, 188.359, 107.877, 0.2746 ) }
    apic_15 { pt3dadd( 463.756, 187.361, 108.778, 0.2746 ) }
    apic_15 { pt3dadd( 464.37, 186.502, 109.706, 0.2746 ) }
    apic_15 { pt3dadd( 465.008, 185.605, 110.606, 0.2746 ) }
    apic_15 { pt3dadd( 465.589, 184.674, 111.477, 0.2746 ) }
    apic_15 { pt3dadd( 465.865, 183.649, 112.388, 0.2746 ) }
    apic_15 { pt3dadd( 466.075, 182.667, 113.376, 0.2746 ) }
    apic_15 { pt3dadd( 466.404, 181.683, 114.375, 0.2746 ) }
    apic_15 { pt3dadd( 466.916, 180.719, 115.328, 0.2746 ) }
    apic_15 { pt3dadd( 467.411, 179.785, 116.28, 0.2746 ) }
    apic_15 { pt3dadd( 467.926, 178.874, 117.218, 0.2746 ) }
    apic_15 { pt3dadd( 468.556, 177.924, 118.018, 0.2746 ) }
    apic_15 { pt3dadd( 469.233, 177.018, 118.713, 0.2746 ) }
    apic_15 { pt3dadd( 469.754, 176.214, 119.486, 0.2746 ) }
    apic_15 { pt3dadd( 469.823, 175.317, 120.379, 0.2746 ) }
    apic_15 { pt3dadd( 469.823, 174.271, 121.277, 0.2746 ) }
    apic_15 { pt3dadd( 469.823, 173.204, 122.137, 0.2746 ) }
    apic_15 { pt3dadd( 469.823, 172.072, 122.873, 0.2746 ) }
    apic_15 { pt3dadd( 469.823, 170.93, 123.46, 0.2746 ) }
    apic_15 { pt3dadd( 469.823, 169.81, 123.957, 0.2746 ) }
    apic_15 { pt3dadd( 469.823, 168.718, 124.451, 0.2746 ) }
    apic_15 { pt3dadd( 469.746, 167.611, 124.912, 0.2746 ) }
    apic_15 { pt3dadd( 469.549, 166.485, 125.279, 0.2746 ) }
    apic_15 { pt3dadd( 469.222, 165.398, 125.6, 0.2746 ) }
    apic_15 { pt3dadd( 468.734, 164.372, 125.933, 0.2746 ) }
    apic_15 { pt3dadd( 468.28, 163.425, 126.361, 0.2746 ) }
    apic_15 { pt3dadd( 467.815, 162.471, 126.868, 0.2746 ) }
    apic_15 { pt3dadd( 467.269, 161.484, 127.341, 0.2746 ) }
    apic_15 { pt3dadd( 466.836, 160.444, 127.772, 0.2746 ) }
    apic_15 { pt3dadd( 466.171, 159.583, 128.202, 0.2746 ) }
    apic_15 { pt3dadd( 465.285, 158.865, 128.476, 0.2746 ) }
    apic_15 { pt3dadd( 464.323, 158.391, 128.5, 0.2746 ) }
    apic_15 { pt3dadd( 463.507, 157.906, 128.323, 0.2746 ) }
    apic_15 { pt3dadd( 463.003, 156.95, 128.274, 0.2746 ) }
    apic_15 { pt3dadd( 462.127, 156.458, 128.458, 0.2746 ) }
    apic_15 { pt3dadd( 461.103, 156.007, 128.709, 0.2746 ) }
    apic_15 { pt3dadd( 460.17, 155.362, 128.965, 0.2746 ) }
    apic_15 { pt3dadd( 459.373, 154.546, 129.234, 0.2746 ) }
    apic_15 { pt3dadd( 458.595, 153.724, 129.516, 0.2746 ) }
    apic_15 { pt3dadd( 457.839, 152.87, 129.711, 0.2746 ) }
    apic_15 { pt3dadd( 457.129, 151.987, 129.824, 0.2746 ) }
    apic_15 { pt3dadd( 456.471, 151.063, 129.983, 0.2746 ) }
    apic_15 { pt3dadd( 455.806, 150.155, 130.213, 0.2746 ) }
    apic_15 { pt3dadd( 455.042, 149.305, 130.462, 0.2746 ) }
    apic_15 { pt3dadd( 454.336, 148.415, 130.727, 0.2746 ) }
    apic_15 { pt3dadd( 453.796, 147.407, 131.02, 0.2746 ) }
    apic_15 { pt3dadd( 453.246, 146.43, 131.39, 0.2746 ) }
    apic_15 { pt3dadd( 452.611, 145.564, 131.918, 0.2746 ) }
    apic_15 { pt3dadd( 451.907, 144.754, 132.562, 0.2746 ) }
    apic_15 { pt3dadd( 451.143, 143.967, 133.263, 0.2746 ) }
    apic_15 { pt3dadd( 450.485, 143.195, 134.055, 0.2746 ) }
    apic_15 { pt3dadd( 449.902, 142.419, 134.921, 0.2746 ) }
    apic_15 { pt3dadd( 449.382, 141.493, 135.708, 0.2746 ) }
    apic_15 { pt3dadd( 448.902, 140.528, 136.229, 0.2746 ) }
    apic_15 { pt3dadd( 448.032, 139.957, 136.508, 0.2744 ) }
    apic_15 { pt3dadd( 447.256, 139.42, 136.863, 0.2744 ) }
    apic_15 { pt3dadd( 446.408, 139.01, 137.367, 0.2742 ) }
    apic_15 { pt3dadd( 445.408, 138.542, 137.867, 0.274 ) }
    apic_15 { pt3dadd( 444.362, 138.096, 138.339, 0.2736 ) }
    apic_15 { pt3dadd( 443.321, 137.671, 138.842, 0.2728 ) }
    apic_15 { pt3dadd( 442.272, 137.251, 139.368, 0.2712 ) }
    apic_15 { pt3dadd( 441.17, 136.97, 139.829, 0.2684 ) }
    apic_15 { pt3dadd( 440.046, 136.838, 140.268, 0.2626 ) }
    apic_15 { pt3dadd( 439.083, 136.335, 140.74, 0.2542 ) }
    apic_15 { pt3dadd( 438.538, 135.388, 141.235, 0.2288 ) }
    apic_15 { pt3dadd( 438.227, 134.587, 142.787, 0.2288 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 92/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 463.633, 232.697, 86.7423, 0.3738 ) }
    apic_4 { pt3dadd( 463.828, 232.122, 86.7793, 0.3346 ) }
    apic_4 { pt3dadd( 464.196, 231.039, 86.7994, 0.3014 ) }
    apic_4 { pt3dadd( 464.565, 229.957, 86.8129, 0.2772 ) }
    apic_4 { pt3dadd( 464.934, 228.873, 86.8218, 0.2794 ) }
    apic_4 { pt3dadd( 465.233, 227.769, 86.8291, 0.2834 ) }
    apic_4 { pt3dadd( 465.111, 226.634, 86.8372, 0.2908 ) }
    apic_4 { pt3dadd( 464.978, 225.497, 86.8487, 0.3058 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_4 { pt3dadd( 464.844, 224.361, 86.8644, 0.3272 ) }
    apic_4 { pt3dadd( 464.71, 223.225, 86.8862, 0.3986 ) }
    apic_4 { pt3dadd( 464.746, 222.082, 86.917, 0.3754 ) }
    apic_4 { pt3dadd( 464.907, 220.95, 86.9607, 0.4024 ) }
    apic_4 { pt3dadd( 465.072, 219.817, 87.0223, 0.3406 ) }
    apic_4 { pt3dadd( 465.236, 218.686, 87.1052, 0.3124 ) }
    apic_4 { pt3dadd( 465.401, 217.553, 87.2122, 0.2974 ) }
    apic_4 { pt3dadd( 465.601, 216.437, 87.3908, 0.317 ) }
    apic_4 { pt3dadd( 465.821, 215.336, 87.6506, 0.3536 ) }
    apic_4 { pt3dadd( 466.041, 214.236, 87.9631, 0.4186 ) }
    apic_4 { pt3dadd( 466.261, 213.135, 88.3008, 0.5534 ) }
    apic_4 { pt3dadd( 466.417, 212.01, 88.6026, 0.7348 ) }
    apic_4 { pt3dadd( 466.494, 210.868, 88.8168, 0.7172 ) }
    apic_4 { pt3dadd( 466.571, 209.726, 88.949, 0.572 ) }
    apic_4 { pt3dadd( 466.648, 208.585, 89.0151, 0.3918 ) }
    apic_4 { pt3dadd( 466.726, 207.444, 89.0338, 0.3128 ) }
    apic_4 { pt3dadd( 466.854, 206.307, 89.0221, 0.2994 ) }
    apic_4 { pt3dadd( 467.18, 205.21, 88.9935, 0.3152 ) }
    apic_4 { pt3dadd( 467.506, 204.114, 88.9535, 0.3754 ) }
    apic_4 { pt3dadd( 467.833, 203.018, 88.8989, 0.3376 ) }
    apic_4 { pt3dadd( 468.16, 201.921, 88.8269, 0.3068 ) }
    apic_4 { pt3dadd( 468.237, 200.782, 88.7093, 0.287 ) }
    apic_4 { pt3dadd( 468.263, 199.641, 88.5458, 0.2988 ) }
    apic_4 { pt3dadd( 468.291, 198.5, 88.3434, 0.3142 ) }
    apic_4 { pt3dadd( 468.317, 197.359, 88.111, 0.3736 ) }
    // Section: apic_12, id: apic_12, parent: apic_4 (entry count 25/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 468.317, 197.359, 88.111, 0.3736 ) }
    apic_12 { pt3dadd( 468.395, 196.922, 88.1177, 0.4576 ) }
    apic_12 { pt3dadd( 468.593, 195.817, 87.8864, 0.3594 ) }
    apic_12 { pt3dadd( 468.826, 194.718, 87.7738, 0.3 ) }
    apic_12 { pt3dadd( 469.112, 193.63, 87.6882, 0.2746 ) }
    apic_12 { pt3dadd( 469.316, 192.517, 87.687, 0.2746 ) }
    apic_12 { pt3dadd( 469.365, 191.381, 87.8466, 0.2748 ) }
    apic_12 { pt3dadd( 469.365, 190.39, 88.3092, 0.2748 ) }
    apic_12 { pt3dadd( 469.427, 189.819, 89.1596, 0.2752 ) }
    apic_12 { pt3dadd( 469.684, 189.055, 90.1978, 0.2758 ) }
    apic_12 { pt3dadd( 470.071, 188.047, 91.1674, 0.2768 ) }
    apic_12 { pt3dadd( 470.575, 187.047, 91.8624, 0.2786 ) }
    apic_12 { pt3dadd( 471.203, 186.094, 92.363, 0.282 ) }
    apic_12 { pt3dadd( 471.843, 185.15, 92.7326, 0.2882 ) }
    apic_12 { pt3dadd( 472.478, 184.212, 93.0454, 0.3008 ) }
    apic_12 { pt3dadd( 473.322, 183.485, 93.3856, 0.318 ) }
    apic_12 { pt3dadd( 474.281, 182.932, 93.7924, 0.3808 ) }
    apic_12 { pt3dadd( 475.325, 182.529, 94.2309, 0.3476 ) }
    apic_12 { pt3dadd( 476.389, 182.163, 94.6576, 0.3248 ) }
    apic_12 { pt3dadd( 477.317, 181.523, 95.0407, 0.3228 ) }
    apic_12 { pt3dadd( 478.208, 180.829, 95.3694, 0.3536 ) }
    apic_12 { pt3dadd( 479.111, 180.127, 95.5948, 0.4722 ) }
    apic_12 { pt3dadd( 480.099, 179.629, 95.6301, 0.3932 ) }
    apic_12 { pt3dadd( 481.229, 179.47, 95.6234, 0.3254 ) }
    apic_12 { pt3dadd( 482.339, 179.45, 95.6956, 0.2746 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 50/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 468.317, 197.359, 88.111, 0.3736 ) }
    apic_5 { pt3dadd( 468.454, 196.738, 87.8301, 0.3342 ) }
    apic_5 { pt3dadd( 468.693, 195.655, 87.4793, 0.3006 ) }
    apic_5 { pt3dadd( 468.926, 194.565, 87.099, 0.2756 ) }
    apic_5 { pt3dadd( 469.113, 193.445, 86.7611, 0.2766 ) }
    apic_5 { pt3dadd( 469.287, 192.317, 86.4847, 0.2782 ) }
    apic_5 { pt3dadd( 469.39, 191.178, 86.2781, 0.2814 ) }
    apic_5 { pt3dadd( 469.453, 190.036, 86.1378, 0.287 ) }
    apic_5 { pt3dadd( 469.549, 188.896, 86.0451, 0.2988 ) }
    apic_5 { pt3dadd( 469.895, 187.815, 85.9748, 0.3142 ) }
    apic_5 { pt3dadd( 470.32, 186.752, 85.911, 0.3734 ) }
    apic_5 { pt3dadd( 470.727, 185.694, 85.806, 0.3338 ) }
    apic_5 { pt3dadd( 471.08, 184.614, 85.6775, 0.3 ) }
    apic_5 { pt3dadd( 471.275, 183.546, 85.4706, 0.2746 ) }
    apic_5 { pt3dadd( 471.476, 182.429, 85.3031, 0.2746 ) }
    apic_5 { pt3dadd( 471.654, 181.332, 85.3107, 0.2746 ) }
    // Section: apic_14, id: apic_14, parent: apic_12 (entry count 66/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 482.339, 179.45, 95.6956, 0.2746 ) }
    apic_14 { pt3dadd( 482.948, 178.589, 97.6206, 0.2288 ) }
    apic_14 { pt3dadd( 483.444, 178.006, 99.629, 0.2746 ) }
    apic_14 { pt3dadd( 483.847, 177.426, 100.553, 0.2748 ) }
    apic_14 { pt3dadd( 484.4, 176.476, 101.404, 0.2748 ) }
    apic_14 { pt3dadd( 485.276, 175.781, 102.171, 0.2752 ) }
    apic_14 { pt3dadd( 486.213, 175.224, 102.907, 0.2756 ) }
    apic_14 { pt3dadd( 487.205, 174.707, 103.559, 0.2766 ) }
    apic_14 { pt3dadd( 488.216, 174.208, 104.097, 0.2782 ) }
    apic_14 { pt3dadd( 489.24, 173.711, 104.536, 0.2814 ) }
    apic_14 { pt3dadd( 489.899, 172.886, 104.935, 0.287 ) }
    apic_14 { pt3dadd( 490.234, 171.846, 105.368, 0.2988 ) }
    apic_14 { pt3dadd( 490.817, 170.992, 105.942, 0.3142 ) }
    apic_14 { pt3dadd( 491.389, 170.195, 106.659, 0.3734 ) }
    apic_14 { pt3dadd( 491.827, 169.273, 107.433, 0.3338 ) }
    apic_14 { pt3dadd( 492.351, 168.302, 108.104, 0.3 ) }
    apic_14 { pt3dadd( 493.266, 167.747, 108.592, 0.2746 ) }
    apic_14 { pt3dadd( 494.2, 167.254, 109.002, 0.2746 ) }
    apic_14 { pt3dadd( 495.106, 166.645, 109.428, 0.2746 ) }
    apic_14 { pt3dadd( 496.137, 166.214, 109.873, 0.2746 ) }
    apic_14 { pt3dadd( 497.131, 165.708, 110.358, 0.2746 ) }
    apic_14 { pt3dadd( 498.069, 165.091, 110.889, 0.2746 ) }
    apic_14 { pt3dadd( 498.766, 164.226, 111.414, 0.2746 ) }
    apic_14 { pt3dadd( 499.596, 163.563, 111.97, 0.2746 ) }
    apic_14 { pt3dadd( 500.595, 163.107, 112.588, 0.2746 ) }
    apic_14 { pt3dadd( 501.593, 162.649, 113.249, 0.2746 ) }
    apic_14 { pt3dadd( 502.534, 162.263, 113.993, 0.2746 ) }
    apic_14 { pt3dadd( 503.445, 161.915, 114.811, 0.2746 ) }
    apic_14 { pt3dadd( 504.354, 161.567, 115.648, 0.2746 ) }
    apic_14 { pt3dadd( 505.427, 161.475, 116.244, 0.2746 ) }
    apic_14 { pt3dadd( 506.556, 161.469, 116.555, 0.2746 ) }
    apic_14 { pt3dadd( 507.683, 161.503, 116.675, 0.2746 ) }
    apic_14 { pt3dadd( 508.806, 161.623, 116.733, 0.2746 ) }
    apic_14 { pt3dadd( 509.922, 161.774, 116.727, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_14 { pt3dadd( 511.006, 162.106, 116.577, 0.2746 ) }
    apic_14 { pt3dadd( 512.089, 162.438, 116.34, 0.2746 ) }
    apic_14 { pt3dadd( 513.171, 162.76, 116.027, 0.2746 ) }
    apic_14 { pt3dadd( 514.252, 163.064, 115.633, 0.2746 ) }
    apic_14 { pt3dadd( 515.333, 163.368, 115.177, 0.2746 ) }
    apic_14 { pt3dadd( 516.427, 163.622, 114.69, 0.2746 ) }
    apic_14 { pt3dadd( 517.525, 163.859, 114.2, 0.2746 ) }
    apic_14 { pt3dadd( 518.62, 164.096, 113.711, 0.2746 ) }
    apic_14 { pt3dadd( 519.708, 164.417, 113.254, 0.2746 ) }
    apic_14 { pt3dadd( 520.792, 164.746, 112.825, 0.2746 ) }
    apic_14 { pt3dadd( 521.877, 165.076, 112.421, 0.2746 ) }
    apic_14 { pt3dadd( 522.919, 165.514, 112.03, 0.2746 ) }
    apic_14 { pt3dadd( 523.949, 165.982, 111.65, 0.2744 ) }
    apic_14 { pt3dadd( 524.98, 166.451, 111.278, 0.2744 ) }
    apic_14 { pt3dadd( 525.979, 166.983, 110.914, 0.2742 ) }
    apic_14 { pt3dadd( 526.976, 167.519, 110.561, 0.274 ) }
    apic_14 { pt3dadd( 527.97, 168.059, 110.223, 0.2736 ) }
    apic_14 { pt3dadd( 528.923, 168.689, 109.935, 0.2728 ) }
    apic_14 { pt3dadd( 529.876, 169.318, 109.687, 0.2712 ) }
    apic_14 { pt3dadd( 530.829, 169.943, 109.469, 0.2684 ) }
    apic_14 { pt3dadd( 531.782, 170.564, 109.263, 0.2626 ) }
    apic_14 { pt3dadd( 532.735, 171.182, 109.069, 0.2542 ) }
    apic_14 { pt3dadd( 533.754, 171.699, 108.933, 0.2288 ) }
    apic_14 { pt3dadd( 534.78, 172.205, 108.78, 0.2288 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 24/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 482.339, 179.45, 95.6956, 0.2746 ) }
    apic_13 { pt3dadd( 482.918, 179.45, 95.7398, 0.2746 ) }
    apic_13 { pt3dadd( 484.061, 179.45, 95.7729, 0.2746 ) }
    apic_13 { pt3dadd( 485.203, 179.45, 95.7835, 0.2746 ) }
    apic_13 { pt3dadd( 486.34, 179.45, 95.7284, 0.2746 ) }
    apic_13 { pt3dadd( 487.468, 179.45, 95.5738, 0.2746 ) }
    apic_13 { pt3dadd( 488.602, 179.45, 95.37, 0.2746 ) }
    apic_13 { pt3dadd( 489.746, 179.45, 95.1863, 0.2746 ) }
    apic_13 { pt3dadd( 490.891, 179.439, 95.0177, 0.2746 ) }
    apic_13 { pt3dadd( 492.023, 179.363, 94.836, 0.2746 ) }
    apic_13 { pt3dadd( 493.142, 179.217, 94.6198, 0.2746 ) }
    apic_13 { pt3dadd( 494.253, 178.996, 94.4157, 0.2746 ) }
    apic_13 { pt3dadd( 495.358, 178.705, 94.2584, 0.2746 ) }
    apic_13 { pt3dadd( 496.482, 178.522, 94.106, 0.2746 ) }
    apic_13 { pt3dadd( 497.617, 178.419, 93.9352, 0.2746 ) }
    apic_13 { pt3dadd( 498.746, 178.28, 93.7471, 0.2746 ) }
    apic_13 { pt3dadd( 499.873, 178.141, 93.5441, 0.2746 ) }
    apic_13 { pt3dadd( 501.005, 178.076, 93.3282, 0.2746 ) }
    apic_13 { pt3dadd( 502.141, 178.076, 93.1168, 0.2746 ) }
    apic_13 { pt3dadd( 503.281, 178.076, 92.9589, 0.2746 ) }
    apic_13 { pt3dadd( 504.424, 178.076, 92.8824, 0.2746 ) }
    apic_13 { pt3dadd( 505.557, 177.974, 92.8637, 0.2746 ) }
    apic_13 { pt3dadd( 506.655, 177.665, 92.8749, 0.2748 ) }
    apic_13 { pt3dadd( 507.75, 177.346, 92.8984, 0.2748 ) }
    apic_13 { pt3dadd( 508.882, 177.247, 92.9244, 0.2752 ) }
    apic_13 { pt3dadd( 510.025, 177.286, 92.9457, 0.2758 ) }
    apic_13 { pt3dadd( 511.168, 177.275, 92.9606, 0.2766 ) }
    apic_13 { pt3dadd( 512.309, 177.193, 92.9743, 0.2786 ) }
    apic_13 { pt3dadd( 513.411, 176.941, 92.995, 0.2818 ) }
    apic_13 { pt3dadd( 514.438, 176.441, 93.0325, 0.2882 ) }
    apic_13 { pt3dadd( 515.479, 175.994, 93.0776, 0.2996 ) }
    apic_13 { pt3dadd( 516.573, 175.752, 93.0899, 0.323 ) }
    apic_13 { pt3dadd( 517.651, 175.466, 93.1336, 0.3538 ) }
    apic_13 { pt3dadd( 518.615, 175.074, 93.3873, 0.4726 ) }
    apic_13 { pt3dadd( 519.614, 174.883, 93.826, 0.3938 ) }
    apic_13 { pt3dadd( 520.732, 174.872, 94.3191, 0.3264 ) }
    apic_13 { pt3dadd( 521.859, 174.907, 94.8254, 0.2766 ) }
    apic_13 { pt3dadd( 522.974, 175.057, 95.3252, 0.2782 ) }
    apic_13 { pt3dadd( 524.091, 175.216, 95.7869, 0.2814 ) }
    apic_13 { pt3dadd( 525.198, 175.065, 96.1635, 0.287 ) }
    apic_13 { pt3dadd( 526.286, 174.717, 96.4614, 0.2988 ) }
    apic_13 { pt3dadd( 527.367, 174.379, 96.7548, 0.3142 ) }
    apic_13 { pt3dadd( 528.443, 174.046, 97.0777, 0.3734 ) }
    apic_13 { pt3dadd( 529.526, 173.71, 97.4025, 0.3338 ) }
    apic_13 { pt3dadd( 530.615, 173.371, 97.7124, 0.3 ) }
    apic_13 { pt3dadd( 531.719, 173.291, 98.0364, 0.2746 ) }
    apic_13 { pt3dadd( 532.828, 173.428, 98.3805, 0.2746 ) }
    apic_13 { pt3dadd( 533.943, 173.376, 98.6969, 0.2746 ) }
    apic_13 { pt3dadd( 535.06, 173.166, 98.9629, 0.2746 ) }
    apic_13 { pt3dadd( 536.184, 173.189, 99.1642, 0.2746 ) }
    apic_13 { pt3dadd( 537.307, 173.406, 99.293, 0.2746 ) }
    apic_13 { pt3dadd( 538.371, 173.531, 99.2762, 0.2746 ) }
    apic_13 { pt3dadd( 539.401, 173.805, 99.1609, 0.2746 ) }
    apic_13 { pt3dadd( 540.452, 173.952, 99.2029, 0.2744 ) }
    apic_13 { pt3dadd( 541.516, 173.973, 99.4636, 0.2744 ) }
    apic_13 { pt3dadd( 542.585, 173.997, 99.8908, 0.2742 ) }
    apic_13 { pt3dadd( 543.677, 174.112, 100.402, 0.274 ) }
    apic_13 { pt3dadd( 544.776, 174.307, 100.926, 0.2736 ) }
    apic_13 { pt3dadd( 545.896, 174.5, 101.378, 0.2728 ) }
    apic_13 { pt3dadd( 547.023, 174.688, 101.679, 0.2712 ) }
    apic_13 { pt3dadd( 548.152, 174.874, 101.855, 0.2684 ) }
    apic_13 { pt3dadd( 549.291, 174.994, 101.945, 0.2626 ) }
    apic_13 { pt3dadd( 550.428, 175.114, 101.981, 0.2542 ) }
    apic_13 { pt3dadd( 551.567, 175.227, 101.991, 0.2288 ) }
    apic_13 { pt3dadd( 552.705, 175.329, 101.991, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_5 (entry count 89/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 471.654, 181.332, 85.3107, 0.2746 ) }
    apic_11 { pt3dadd( 471.829, 180.572, 85.7027, 0.2288 ) }
    apic_11 { pt3dadd( 472.177, 179.511, 87.4412, 0.2746 ) }
    apic_11 { pt3dadd( 472.631, 178.745, 88.2008, 0.2746 ) }
    apic_11 { pt3dadd( 473.185, 178.167, 89.2522, 0.2746 ) }
    apic_11 { pt3dadd( 473.912, 177.431, 90.3624, 0.2746 ) }
    apic_11 { pt3dadd( 474.582, 176.648, 91.5116, 0.2746 ) }
    apic_11 { pt3dadd( 475.141, 175.882, 92.7203, 0.2746 ) }
    apic_11 { pt3dadd( 475.49, 175.001, 93.9207, 0.2746 ) }
    apic_11 { pt3dadd( 475.746, 174.063, 95.0664, 0.2746 ) }
    apic_11 { pt3dadd( 475.653, 172.968, 96.0254, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_11 { pt3dadd( 475.513, 171.853, 96.8321, 0.2746 ) }
    apic_11 { pt3dadd( 475.57, 170.716, 97.4616, 0.2746 ) }
    apic_11 { pt3dadd( 475.698, 169.579, 97.9443, 0.2746 ) }
    apic_11 { pt3dadd( 475.782, 168.452, 98.4015, 0.2746 ) }
    apic_11 { pt3dadd( 475.809, 167.36, 98.9262, 0.2746 ) }
    apic_11 { pt3dadd( 475.842, 166.269, 99.5243, 0.2746 ) }
    apic_11 { pt3dadd( 475.897, 165.173, 100.168, 0.2746 ) }
    apic_11 { pt3dadd( 475.83, 164.098, 100.856, 0.2746 ) }
    apic_11 { pt3dadd( 475.781, 163.065, 101.591, 0.2746 ) }
    apic_11 { pt3dadd( 475.435, 162.011, 102.248, 0.2746 ) }
    apic_11 { pt3dadd( 474.93, 161.007, 102.668, 0.2746 ) }
    apic_11 { pt3dadd( 475.32, 159.971, 103.029, 0.2746 ) }
    apic_11 { pt3dadd( 476.124, 159.167, 103.313, 0.2746 ) }
    apic_11 { pt3dadd( 476.71, 158.214, 103.605, 0.2746 ) }
    apic_11 { pt3dadd( 477.188, 157.204, 103.894, 0.2746 ) }
    apic_11 { pt3dadd( 477.434, 156.106, 104.123, 0.2746 ) }
    apic_11 { pt3dadd( 478.103, 155.199, 104.321, 0.2746 ) }
    apic_11 { pt3dadd( 478.169, 154.099, 104.517, 0.2746 ) }
    apic_11 { pt3dadd( 477.754, 153.059, 104.705, 0.2746 ) }
    apic_11 { pt3dadd( 477.465, 151.976, 104.796, 0.2746 ) }
    apic_11 { pt3dadd( 477.249, 150.875, 104.944, 0.2746 ) }
    apic_11 { pt3dadd( 476.972, 149.831, 105.188, 0.2746 ) }
    apic_11 { pt3dadd( 476.417, 148.83, 105.407, 0.2746 ) }
    apic_11 { pt3dadd( 475.872, 147.824, 105.608, 0.2746 ) }
    apic_11 { pt3dadd( 475.362, 146.8, 105.802, 0.2746 ) }
    apic_11 { pt3dadd( 474.419, 146.548, 106.101, 0.2746 ) }
    apic_11 { pt3dadd( 473.403, 146.233, 106.441, 0.2746 ) }
    apic_11 { pt3dadd( 472.564, 145.467, 106.754, 0.2746 ) }
    apic_11 { pt3dadd( 471.785, 144.628, 107.06, 0.2746 ) }
    apic_11 { pt3dadd( 471.595, 143.515, 107.358, 0.2746 ) }
    apic_11 { pt3dadd( 471.055, 143.427, 107.93, 0.2746 ) }
    apic_11 { pt3dadd( 470.286, 143.238, 108.589, 0.2746 ) }
    apic_11 { pt3dadd( 469.282, 142.691, 109.096, 0.2746 ) }
    apic_11 { pt3dadd( 468.252, 142.193, 109.468, 0.2746 ) }
    apic_11 { pt3dadd( 467.211, 141.72, 109.712, 0.2746 ) }
    apic_11 { pt3dadd( 466.225, 141.142, 109.838, 0.2746 ) }
    apic_11 { pt3dadd( 465.253, 140.538, 109.858, 0.2746 ) }
    apic_11 { pt3dadd( 464.274, 139.947, 109.83, 0.2746 ) }
    apic_11 { pt3dadd( 463.277, 139.387, 109.788, 0.2746 ) }
    apic_11 { pt3dadd( 462.278, 138.828, 109.727, 0.2746 ) }
    apic_11 { pt3dadd( 461.304, 138.23, 109.638, 0.2746 ) }
    apic_11 { pt3dadd( 460.342, 137.612, 109.513, 0.2746 ) }
    apic_11 { pt3dadd( 459.366, 137.016, 109.356, 0.2746 ) }
    apic_11 { pt3dadd( 458.413, 136.384, 109.179, 0.2746 ) }
    apic_11 { pt3dadd( 457.663, 135.651, 108.819, 0.2744 ) }
    apic_11 { pt3dadd( 457.646, 135.142, 108.162, 0.2744 ) }
    apic_11 { pt3dadd( 456.593, 134.693, 107.627, 0.2742 ) }
    apic_11 { pt3dadd( 455.541, 134.246, 107.21, 0.274 ) }
    apic_11 { pt3dadd( 454.49, 133.798, 106.907, 0.2736 ) }
    apic_11 { pt3dadd( 453.437, 133.349, 106.71, 0.2728 ) }
    apic_11 { pt3dadd( 452.443, 132.784, 106.625, 0.2712 ) }
    apic_11 { pt3dadd( 451.449, 132.218, 106.612, 0.2684 ) }
    apic_11 { pt3dadd( 450.454, 131.653, 106.609, 0.2626 ) }
    apic_11 { pt3dadd( 449.459, 131.086, 106.613, 0.2542 ) }
    apic_11 { pt3dadd( 448.465, 130.521, 106.621, 0.2288 ) }
    apic_11 { pt3dadd( 447.471, 129.955, 106.639, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 56/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 471.654, 181.332, 85.3107, 0.2746 ) }
    apic_6 { pt3dadd( 471.706, 180.721, 85.4487, 0.2746 ) }
    // Section: apic_8, id: apic_8, parent: apic_6 (entry count 58/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 471.706, 180.721, 85.4487, 0.2746 ) }
    apic_8 { pt3dadd( 472.231, 179.931, 85.6363, 0.2746 ) }
    apic_8 { pt3dadd( 473.243, 179.452, 85.806, 0.2746 ) }
    apic_8 { pt3dadd( 474.37, 179.319, 85.9398, 0.2748 ) }
    apic_8 { pt3dadd( 475.396, 178.837, 86.021, 0.2748 ) }
    apic_8 { pt3dadd( 476.277, 178.107, 86.0482, 0.2752 ) }
    apic_8 { pt3dadd( 477.04, 177.279, 86.0216, 0.2758 ) }
    apic_8 { pt3dadd( 477.579, 176.29, 85.9552, 0.2766 ) }
    apic_8 { pt3dadd( 478.019, 175.245, 85.9454, 0.2786 ) }
    apic_8 { pt3dadd( 478.428, 174.195, 85.9544, 0.2818 ) }
    apic_8 { pt3dadd( 479.166, 173.409, 86.0712, 0.2882 ) }
    apic_8 { pt3dadd( 479.953, 172.697, 86.3162, 0.2994 ) }
    apic_8 { pt3dadd( 480.624, 171.773, 86.5642, 0.3228 ) }
    apic_8 { pt3dadd( 481.377, 170.923, 86.8563, 0.3536 ) }
    apic_8 { pt3dadd( 482.256, 170.221, 87.2071, 0.4722 ) }
    apic_8 { pt3dadd( 483.209, 169.656, 87.6232, 0.3932 ) }
    apic_8 { pt3dadd( 483.866, 168.952, 88.1339, 0.3254 ) }
    apic_8 { pt3dadd( 484.211, 168.001, 88.7032, 0.2746 ) }
    apic_8 { pt3dadd( 484.937, 167.286, 89.1856, 0.2746 ) }
    apic_8 { pt3dadd( 486.039, 167.092, 89.4877, 0.2746 ) }
    apic_8 { pt3dadd( 486.977, 167.071, 89.458, 0.2746 ) }
    apic_8 { pt3dadd( 487.85, 166.772, 89.1444, 0.2746 ) }
    apic_8 { pt3dadd( 488.765, 166.169, 88.9325, 0.2746 ) }
    apic_8 { pt3dadd( 489.626, 165.517, 88.697, 0.2746 ) }
    apic_8 { pt3dadd( 490.679, 165.096, 88.5982, 0.2746 ) }
    apic_8 { pt3dadd( 491.752, 164.825, 88.7628, 0.2746 ) }
    apic_8 { pt3dadd( 492.767, 164.665, 89.231, 0.2746 ) }
    apic_8 { pt3dadd( 493.777, 164.505, 89.9074, 0.2746 ) }
    apic_8 { pt3dadd( 494.774, 163.977, 90.5593, 0.2746 ) }
    apic_8 { pt3dadd( 495.772, 163.427, 91.1772, 0.2746 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 88/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 471.706, 180.721, 85.4487, 0.2746 ) }
    apic_7 { pt3dadd( 471.857, 179.742, 85.8875, 0.2288 ) }
    apic_7 { pt3dadd( 472.031, 178.613, 85.769, 0.2746 ) }
    apic_7 { pt3dadd( 472.278, 177.507, 85.71, 0.2746 ) }
    apic_7 { pt3dadd( 472.575, 176.42, 85.5834, 0.2746 ) }
    apic_7 { pt3dadd( 472.892, 175.329, 85.4375, 0.2746 ) }
    apic_7 { pt3dadd( 473.022, 174.204, 85.3149, 0.2746 ) }
    apic_7 { pt3dadd( 473.2, 173.086, 85.2524, 0.2746 ) }
    apic_7 { pt3dadd( 473.774, 172.177, 85.2942, 0.2746 ) }
    apic_7 { pt3dadd( 474.487, 171.307, 85.3278, 0.2746 ) }
    apic_7 { pt3dadd( 475.026, 170.315, 85.2718, 0.2746 ) }
    apic_7 { pt3dadd( 475.447, 169.259, 85.1376, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_7 { pt3dadd( 475.819, 168.182, 84.9447, 0.2746 ) }
    apic_7 { pt3dadd( 476.148, 167.095, 84.6852, 0.2746 ) }
    apic_7 { pt3dadd( 476.436, 166.008, 84.3587, 0.2746 ) }
    apic_7 { pt3dadd( 476.538, 164.898, 84.0008, 0.2746 ) }
    apic_7 { pt3dadd( 476.419, 163.786, 83.6335, 0.2746 ) }
    apic_7 { pt3dadd( 476.299, 162.656, 83.314, 0.2746 ) }
    apic_7 { pt3dadd( 476.258, 161.526, 83.1088, 0.2746 ) }
    apic_7 { pt3dadd( 476.274, 160.397, 83.0015, 0.2746 ) }
    apic_7 { pt3dadd( 476.469, 159.283, 82.8884, 0.2746 ) }
    apic_7 { pt3dadd( 476.243, 158.572, 82.5252, 0.2746 ) }
    apic_7 { pt3dadd( 476.919, 157.976, 82.094, 0.2746 ) }
    apic_7 { pt3dadd( 477.509, 157.173, 81.793, 0.2746 ) }
    apic_7 { pt3dadd( 477.427, 156.074, 81.5164, 0.2746 ) }
    apic_7 { pt3dadd( 477.264, 154.965, 81.3602, 0.2746 ) }
    apic_7 { pt3dadd( 477.606, 153.98, 81.3719, 0.2746 ) }
    apic_7 { pt3dadd( 477.889, 152.97, 81.3778, 0.2746 ) }
    apic_7 { pt3dadd( 477.704, 151.871, 81.2918, 0.2746 ) }
    apic_7 { pt3dadd( 477.702, 150.756, 81.1096, 0.2746 ) }
    apic_7 { pt3dadd( 477.895, 149.645, 80.8419, 0.2746 ) }
    apic_7 { pt3dadd( 478.109, 148.535, 80.509, 0.2746 ) }
    apic_7 { pt3dadd( 478.319, 147.42, 80.1469, 0.2746 ) }
    apic_7 { pt3dadd( 478.601, 146.32, 79.7927, 0.2746 ) }
    apic_7 { pt3dadd( 479.054, 145.278, 79.4606, 0.2746 ) }
    apic_7 { pt3dadd( 479.532, 144.241, 79.1496, 0.2746 ) }
    apic_7 { pt3dadd( 479.976, 143.186, 78.86, 0.2746 ) }
    apic_7 { pt3dadd( 480.606, 142.264, 78.521, 0.2746 ) }
    apic_7 { pt3dadd( 481.494, 141.602, 78.1024, 0.2746 ) }
    apic_7 { pt3dadd( 481.89, 140.628, 77.6154, 0.2746 ) }
    apic_7 { pt3dadd( 482.103, 139.529, 77.0742, 0.2746 ) }
    apic_7 { pt3dadd( 482.304, 138.43, 76.4898, 0.2746 ) }
    apic_7 { pt3dadd( 482.499, 137.329, 75.8814, 0.2746 ) }
    apic_7 { pt3dadd( 482.729, 136.289, 75.2184, 0.2746 ) }
    apic_7 { pt3dadd( 482.975, 135.276, 74.5069, 0.2746 ) }
    apic_7 { pt3dadd( 483.019, 134.168, 73.8598, 0.2746 ) }
    apic_7 { pt3dadd( 483.019, 133.039, 73.2956, 0.2746 ) }
    apic_7 { pt3dadd( 483.097, 131.912, 72.8269, 0.2744 ) }
    apic_7 { pt3dadd( 483.294, 130.788, 72.469, 0.2744 ) }
    apic_7 { pt3dadd( 483.469, 129.663, 72.2005, 0.2742 ) }
    apic_7 { pt3dadd( 483.384, 128.529, 71.9751, 0.274 ) }
    apic_7 { pt3dadd( 483.298, 127.396, 71.7716, 0.2736 ) }
    apic_7 { pt3dadd( 483.052, 126.286, 71.6173, 0.2728 ) }
    apic_7 { pt3dadd( 482.738, 125.186, 71.5134, 0.2712 ) }
    apic_7 { pt3dadd( 482.561, 124.067, 71.447, 0.2684 ) }
    apic_7 { pt3dadd( 482.561, 122.923, 71.4104, 0.2626 ) }
    apic_7 { pt3dadd( 482.562, 121.779, 71.3958, 0.2542 ) }
    apic_7 { pt3dadd( 482.606, 120.636, 71.3933, 0.2288 ) }
    apic_7 { pt3dadd( 483.476, 119.986, 71.3933, 0.2288 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 47/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 495.772, 163.427, 91.1772, 0.2746 ) }
    apic_10 { pt3dadd( 496.366, 163.029, 91.8243, 0.2746 ) }
    apic_10 { pt3dadd( 497.346, 162.599, 92.4731, 0.2746 ) }
    apic_10 { pt3dadd( 498.427, 162.368, 93.0734, 0.2746 ) }
    apic_10 { pt3dadd( 499.536, 162.207, 93.6149, 0.2746 ) }
    apic_10 { pt3dadd( 500.64, 161.996, 94.1038, 0.2746 ) }
    apic_10 { pt3dadd( 501.733, 161.715, 94.5171, 0.2746 ) }
    apic_10 { pt3dadd( 502.8, 161.318, 94.8189, 0.2746 ) }
    apic_10 { pt3dadd( 503.857, 160.885, 95.0096, 0.2746 ) }
    apic_10 { pt3dadd( 504.969, 160.682, 95.1224, 0.2746 ) }
    apic_10 { pt3dadd( 506.113, 160.682, 95.1838, 0.2746 ) }
    apic_10 { pt3dadd( 507.257, 160.682, 95.2134, 0.2746 ) }
    apic_10 { pt3dadd( 508.401, 160.682, 95.2294, 0.2746 ) }
    apic_10 { pt3dadd( 509.545, 160.682, 95.2442, 0.2746 ) }
    apic_10 { pt3dadd( 510.686, 160.634, 95.265, 0.2746 ) }
    apic_10 { pt3dadd( 511.821, 160.5, 95.2952, 0.2746 ) }
    apic_10 { pt3dadd( 512.952, 160.318, 95.3375, 0.2746 ) }
    apic_10 { pt3dadd( 514.058, 160.042, 95.3943, 0.2746 ) }
    apic_10 { pt3dadd( 515.141, 159.673, 95.4663, 0.2746 ) }
    apic_10 { pt3dadd( 516.242, 159.435, 95.5836, 0.2746 ) }
    apic_10 { pt3dadd( 517.366, 159.366, 95.7743, 0.2746 ) }
    apic_10 { pt3dadd( 518.5, 159.32, 95.9958, 0.2748 ) }
    apic_10 { pt3dadd( 519.642, 159.308, 96.1985, 0.2748 ) }
    apic_10 { pt3dadd( 520.786, 159.308, 96.3726, 0.2752 ) }
    apic_10 { pt3dadd( 521.928, 159.335, 96.5261, 0.2756 ) }
    apic_10 { pt3dadd( 523.07, 159.4, 96.6664, 0.2766 ) }
    apic_10 { pt3dadd( 524.208, 159.428, 96.8279, 0.2784 ) }
    apic_10 { pt3dadd( 525.339, 159.382, 97.0553, 0.2818 ) }
    apic_10 { pt3dadd( 526.464, 159.328, 97.3459, 0.2878 ) }
    apic_10 { pt3dadd( 527.591, 159.308, 97.6783, 0.3002 ) }
    apic_10 { pt3dadd( 528.719, 159.308, 98.0319, 0.3166 ) }
    apic_10 { pt3dadd( 529.854, 159.308, 98.3615, 0.3782 ) }
    apic_10 { pt3dadd( 530.999, 159.308, 98.6258, 0.3426 ) }
    apic_10 { pt3dadd( 532.142, 159.302, 98.8436, 0.316 ) }
    apic_10 { pt3dadd( 533.28, 159.266, 99.0606, 0.3056 ) }
    apic_10 { pt3dadd( 534.407, 159.201, 99.314, 0.3266 ) }
    apic_10 { pt3dadd( 535.525, 159.029, 99.5893, 0.3976 ) }
    apic_10 { pt3dadd( 536.62, 158.704, 99.864, 0.3732 ) }
    apic_10 { pt3dadd( 537.716, 158.376, 100.138, 0.3986 ) }
    apic_10 { pt3dadd( 538.823, 158.086, 100.404, 0.3334 ) }
    apic_10 { pt3dadd( 539.663, 157.714, 100.798, 0.299 ) }
    apic_10 { pt3dadd( 540.182, 157.23, 101.442, 0.2728 ) }
    apic_10 { pt3dadd( 541.166, 156.714, 101.95, 0.2712 ) }
    apic_10 { pt3dadd( 542.086, 156.043, 102.311, 0.2684 ) }
    apic_10 { pt3dadd( 542.917, 155.274, 102.491, 0.2626 ) }
    apic_10 { pt3dadd( 543.724, 154.496, 102.482, 0.2542 ) }
    apic_10 { pt3dadd( 544.638, 153.834, 102.365, 0.2288 ) }
    apic_10 { pt3dadd( 545.604, 153.221, 102.054, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 95/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 495.772, 163.427, 91.1772, 0.2746 ) }
    apic_9 { pt3dadd( 496.299, 162.818, 91.9943, 0.2288 ) }
    apic_9 { pt3dadd( 497.236, 162.372, 91.6955, 0.2746 ) }
    apic_9 { pt3dadd( 498.348, 162.473, 91.5757, 0.2746 ) }
    apic_9 { pt3dadd( 498.839, 162.179, 91.2204, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_9 { pt3dadd( 498.436, 161.271, 90.6858, 0.2746 ) }
    apic_9 { pt3dadd( 498.633, 160.384, 90.0659, 0.2746 ) }
    apic_9 { pt3dadd( 499.437, 159.638, 89.5423, 0.2746 ) }
    apic_9 { pt3dadd( 500.287, 158.874, 89.1789, 0.2746 ) }
    apic_9 { pt3dadd( 501.064, 158.059, 89.0392, 0.2746 ) }
    apic_9 { pt3dadd( 501.795, 157.211, 89.1097, 0.2746 ) }
    apic_9 { pt3dadd( 502.471, 156.297, 89.2578, 0.2746 ) }
    apic_9 { pt3dadd( 503.12, 155.354, 89.4099, 0.2746 ) }
    apic_9 { pt3dadd( 503.669, 154.353, 89.5339, 0.2746 ) }
    apic_9 { pt3dadd( 504.18, 153.33, 89.6238, 0.2746 ) }
    apic_9 { pt3dadd( 504.827, 152.468, 89.7887, 0.2746 ) }
    apic_9 { pt3dadd( 505.459, 151.637, 89.8092, 0.2746 ) }
    apic_9 { pt3dadd( 506.197, 150.796, 89.8425, 0.2746 ) }
    apic_9 { pt3dadd( 506.955, 149.954, 89.9058, 0.2746 ) }
    apic_9 { pt3dadd( 507.73, 149.134, 89.9623, 0.2746 ) }
    apic_9 { pt3dadd( 508.687, 148.505, 89.9318, 0.2746 ) }
    apic_9 { pt3dadd( 509.646, 147.885, 89.8061, 0.2746 ) }
    apic_9 { pt3dadd( 510.571, 147.28, 89.5927, 0.2746 ) }
    apic_9 { pt3dadd( 510.973, 146.255, 89.2021, 0.2746 ) }
    apic_9 { pt3dadd( 511.317, 145.313, 88.5354, 0.2746 ) }
    apic_9 { pt3dadd( 511.404, 144.224, 87.7876, 0.2746 ) }
    apic_9 { pt3dadd( 511.38, 143.168, 86.8899, 0.2746 ) }
    apic_9 { pt3dadd( 511.356, 142.111, 85.8855, 0.2746 ) }
    apic_9 { pt3dadd( 510.969, 141.222, 84.7568, 0.2746 ) }
    apic_9 { pt3dadd( 510.557, 140.335, 83.5551, 0.2746 ) }
    apic_9 { pt3dadd( 510.176, 139.398, 82.3399, 0.2746 ) }
    apic_9 { pt3dadd( 509.629, 138.564, 81.128, 0.2746 ) }
    apic_9 { pt3dadd( 508.998, 137.648, 80.0811, 0.2746 ) }
    apic_9 { pt3dadd( 508.441, 137.345, 78.9096, 0.2746 ) }
    apic_9 { pt3dadd( 508.199, 136.795, 77.7286, 0.2744 ) }
    apic_9 { pt3dadd( 508.199, 135.663, 76.7841, 0.2744 ) }
    apic_9 { pt3dadd( 508.467, 134.563, 76.0754, 0.2742 ) }
    apic_9 { pt3dadd( 508.398, 133.548, 75.5, 0.274 ) }
    apic_9 { pt3dadd( 507.85, 132.614, 74.9571, 0.2736 ) }
    apic_9 { pt3dadd( 507.916, 131.513, 74.5259, 0.2728 ) }
    apic_9 { pt3dadd( 508.126, 130.427, 74.0894, 0.2712 ) }
    apic_9 { pt3dadd( 508.199, 129.327, 73.6215, 0.2684 ) }
    apic_9 { pt3dadd( 508.199, 128.195, 73.1884, 0.2626 ) }
    apic_9 { pt3dadd( 508.403, 127.466, 72.5612, 0.2542 ) }
    apic_9 { pt3dadd( 509.426, 126.982, 72.0751, 0.2288 ) }
    apic_9 { pt3dadd( 510.49, 127.313, 71.3933, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_710, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_710 = new SectionList()
    soma_0 ModelViewParmSubset_710.append()
    axon_0 ModelViewParmSubset_710.append()
    axon_1 ModelViewParmSubset_710.append()

    // Group: {name=ModelViewParmSubset_711, groups=[], sections=[dend_35, dend_32, dend_23, dend_16, dend_13, dend_10, dend_3, dend_0, apic_0, dend_34, dend_33, dend_25, dend_24, dend_22, dend_17, dend_15, dend_14, dend_12, dend_11, dend_5, dend_4, dend_2, dend_1, apic_22, apic_1, dend_29, dend_26, dend_19, dend_18, dend_9, dend_6, apic_24, apic_23, apic_19, apic_2, dend_31, dend_30, dend_28, dend_27, dend_21, dend_20, dend_8, dend_7, apic_21, apic_20, apic_16, apic_3, apic_18, apic_17, apic_15, apic_4, apic_12, apic_5, apic_14, apic_13, apic_11, apic_6, apic_8, apic_7, apic_10, apic_9]}
    ModelViewParmSubset_711 = new SectionList()
    dend_35 ModelViewParmSubset_711.append()
    dend_32 ModelViewParmSubset_711.append()
    dend_23 ModelViewParmSubset_711.append()
    dend_16 ModelViewParmSubset_711.append()
    dend_13 ModelViewParmSubset_711.append()
    dend_10 ModelViewParmSubset_711.append()
    dend_3 ModelViewParmSubset_711.append()
    dend_0 ModelViewParmSubset_711.append()
    apic_0 ModelViewParmSubset_711.append()
    dend_34 ModelViewParmSubset_711.append()
    dend_33 ModelViewParmSubset_711.append()
    dend_25 ModelViewParmSubset_711.append()
    dend_24 ModelViewParmSubset_711.append()
    dend_22 ModelViewParmSubset_711.append()
    dend_17 ModelViewParmSubset_711.append()
    dend_15 ModelViewParmSubset_711.append()
    dend_14 ModelViewParmSubset_711.append()
    dend_12 ModelViewParmSubset_711.append()
    dend_11 ModelViewParmSubset_711.append()
    dend_5 ModelViewParmSubset_711.append()
    dend_4 ModelViewParmSubset_711.append()
    dend_2 ModelViewParmSubset_711.append()
    dend_1 ModelViewParmSubset_711.append()
    apic_22 ModelViewParmSubset_711.append()
    apic_1 ModelViewParmSubset_711.append()
    dend_29 ModelViewParmSubset_711.append()
    dend_26 ModelViewParmSubset_711.append()
    dend_19 ModelViewParmSubset_711.append()
    dend_18 ModelViewParmSubset_711.append()
    dend_9 ModelViewParmSubset_711.append()
    dend_6 ModelViewParmSubset_711.append()
    apic_24 ModelViewParmSubset_711.append()
    apic_23 ModelViewParmSubset_711.append()
    apic_19 ModelViewParmSubset_711.append()
    apic_2 ModelViewParmSubset_711.append()
    dend_31 ModelViewParmSubset_711.append()
    dend_30 ModelViewParmSubset_711.append()
    dend_28 ModelViewParmSubset_711.append()
    dend_27 ModelViewParmSubset_711.append()
    dend_21 ModelViewParmSubset_711.append()
    dend_20 ModelViewParmSubset_711.append()
    dend_8 ModelViewParmSubset_711.append()
    dend_7 ModelViewParmSubset_711.append()
    apic_21 ModelViewParmSubset_711.append()
    apic_20 ModelViewParmSubset_711.append()
    apic_16 ModelViewParmSubset_711.append()
    apic_3 ModelViewParmSubset_711.append()
    apic_18 ModelViewParmSubset_711.append()
    apic_17 ModelViewParmSubset_711.append()
    apic_15 ModelViewParmSubset_711.append()
    apic_4 ModelViewParmSubset_711.append()
    apic_12 ModelViewParmSubset_711.append()
    apic_5 ModelViewParmSubset_711.append()
    apic_14 ModelViewParmSubset_711.append()
    apic_13 ModelViewParmSubset_711.append()
    apic_11 ModelViewParmSubset_711.append()
    apic_6 ModelViewParmSubset_711.append()
    apic_8 ModelViewParmSubset_711.append()
    apic_7 ModelViewParmSubset_711.append()
    apic_10 ModelViewParmSubset_711.append()
    apic_9 ModelViewParmSubset_711.append()

    // Group: {name=dend, groups=[], sections=[dend_35, dend_32, dend_23, dend_16, dend_13, dend_10, dend_3, dend_0, dend_34, dend_33, dend_25, dend_24, dend_22, dend_17, dend_15, dend_14, dend_12, dend_11, dend_5, dend_4, dend_2, dend_1, dend_29, dend_26, dend_19, dend_18, dend_9, dend_6, dend_31, dend_30, dend_28, dend_27, dend_21, dend_20, dend_8, dend_7]}
    dend = new SectionList()
    dend_35 dend.append()
    dend_32 dend.append()
    dend_23 dend.append()
    dend_16 dend.append()
    dend_13 dend.append()
    dend_10 dend.append()
    dend_3 dend.append()
    dend_0 dend.append()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_22 dend.append()
    dend_17 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_29 dend.append()
    dend_26 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_9 dend.append()
    dend_6 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_8 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_22, apic_1, apic_24, apic_23, apic_19, apic_2, apic_21, apic_20, apic_16, apic_3, apic_18, apic_17, apic_15, apic_4, apic_12, apic_5, apic_14, apic_13, apic_11, apic_6, apic_8, apic_7, apic_10, apic_9]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_22 apic.append()
    apic_1 apic.append()
    apic_24 apic.append()
    apic_23 apic.append()
    apic_19 apic.append()
    apic_2 apic.append()
    apic_21 apic.append()
    apic_20 apic.append()
    apic_16 apic.append()
    apic_3 apic.append()
    apic_18 apic.append()
    apic_17 apic.append()
    apic_15 apic.append()
    apic_4 apic.append()
    apic_12 apic.append()
    apic_5 apic.append()
    apic_14 apic.append()
    apic_13 apic.append()
    apic_11 apic.append()
    apic_6 apic.append()
    apic_8 apic.append()
    apic_7 apic.append()
    apic_10 apic.append()
    apic_9 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_29233, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_29233 = new SectionList()
    soma_0 OneSecGrp_SectionRef_29233.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_1, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_6, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_1 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_6 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 5.844842  // units: uF/cm2
    forsec apic cm = 5.844842  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 152.87212  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 9.535982E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 3.3665183E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.46390444  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 0.0014326418  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.08474503  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.006786282  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 2.4419895E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.018259887  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.6347578E-4  // units: S cm-2
        e_pas_nml2 = -85.89961  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 4.1470074E-4  // units: S cm-2
        e_pas_nml2 = -85.89961  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.0275591E-7  // units: S cm-2
        e_pas_nml2 = -85.89961  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 1.680976E-4  // units: S cm-2
        e_pas_nml2 = -85.89961  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 1.9222134E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0012072715  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_480051220
    forsec soma {
        insert CaDynamics_480051220
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_35 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 3
    dend_12 nseg = 5
    dend_11 nseg = 5
    dend_2 nseg = 5
    dend_1 nseg = 3
    apic_22 nseg = 3
    dend_29 nseg = 3
    dend_9 nseg = 7
    dend_6 nseg = 3
    apic_24 nseg = 3
    apic_23 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 3
    dend_27 nseg = 3
    dend_21 nseg = 7
    dend_8 nseg = 3
    dend_7 nseg = 3
    apic_21 nseg = 7
    apic_20 nseg = 5
    apic_16 nseg = 3
    apic_3 nseg = 17
    apic_18 nseg = 5
    apic_17 nseg = 3
    apic_15 nseg = 7
    apic_14 nseg = 3
    apic_13 nseg = 3
    apic_11 nseg = 3
    apic_7 nseg = 3
    apic_10 nseg = 3
    apic_9 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_480051220


