// Cell: bNAC219_L6_BP_b4ffa23859_0_0
/*
{
  "id" : "bNAC219_L6_BP_b4ffa23859_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.01411, 8.21121, 2.82634, 0.83", "-5.75673, 10.337, 3.23996, 1.11", "-7.37379, 11.5895, 3.45512, 0.83", "-8.94483, 12.7958, 3.6479, 0.83", "-9.875, 13.4837, 3.75354, 1.11", "-12.7879, 15.6332, 4.09211, 1.11", "-17.9979, 19.3132, 4.69061, 0.83", "-19.8748, 20.5884, 4.88825, 0.83", "-21.3612, 21.5682, 5.01101, 0.83", "-22.8106, 22.5393, 5.11727, 0.83", "-23.9905, 23.3397, 5.1746, 0.55", "-24.8773, 23.8816, 5.23279, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.81703, 6.33331, -6.28762, 0.55", "7.80102, 6.97881, -6.954, 0.55", "9.53253, 7.14176, -7.83576, 0.83", "12.2729, 7.31517, -9.4737, 0.55", "13.5958, 7.39888, -10.2643, 1.38", "16.8484, 7.60469, -12.2084, 0.55", "18.2337, 7.535, -13.136, 0.83", "25.3997, 6.25681, -18.3478, 0.55", "26.093, 6.08493, -18.9211, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.686532, -10.6997, 3.30877, 1.11", "-0.739444, -15.3682, 4.98241, 1.11", "-0.760993, -17.2695, 5.66402, 0.83", "-0.789623, -19.7955, 6.56958, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.986821, 10.3527, -1.41678, 1.11", "1.17652, 12.7805, -1.4068, 1.11", "1.49383, 16.741, -1.24538, 1.38", "1.51579, 16.9614, -1.23294, 1.38", "1.95445, 19.6826, -1.07226, 0.83", "2.55407, 22.5549, -0.763744, 0.83", "3.55734, 25.7854, -0.0584817, 0.83", "4.10906, 27.0042, 0.340979, 0.83", "4.63935, 27.8819, 0.70483, 1.11", "6.15735, 30.0116, 1.62356, 0.55", "7.91911, 32.2278, 2.72604, 0.83", "10.1765, 34.4909, 3.94158, 0.55", "11.3097, 35.4238, 4.47714, 0.83", "12.9068, 36.6847, 5.33482, 0.55", "14.9028, 38.2896, 6.51841, 0.55", "17.7214, 40.7114, 8.3584, 0.55", "20.8316, 43.4838, 10.391, 0.55", "22.832, 45.2832, 11.9525, 0.55", "25.3301, 47.559, 14.2006, 0.55", "25.8551, 48.0144, 14.7161, 0.83", "27.255, 49.2171, 16.1808, 0.55", "28.4185, 50.1521, 17.3217, 0.83", "31.123, 52.7247, 20.037, 0.55", "32.1069, 53.6648, 20.8047, 0.83", "32.9916, 54.3521, 21.2956, 0.55", "33.8484, 54.9404, 21.648, 0.83", "35.7164, 56.0245, 22.2432, 0.83", "38.1609, 57.5044, 22.8242, 0.83", "39.6426, 58.488, 23.0273, 0.55", "40.7769, 59.3445, 23.1885, 0.55", "43.7434, 61.5563, 23.5684, 0.83", "45.6491, 62.9747, 23.7399, 0.55", "48.5243, 65.0498, 23.8872, 0.55", "51.139, 66.7823, 23.92, 0.55", "53.4665, 68.246, 23.888, 0.55", "56.3849, 69.9542, 23.7171, 0.55", "58.1533, 70.7791, 23.5552, 0.55", "59.3365, 71.2362, 23.302, 0.55", "60.8796, 71.5546, 22.8319, 0.55", "63.1426, 71.6464, 21.9369, 0.55", "64.5394, 71.5171, 21.3219, 0.55", "66.5995, 71.2686, 20.573, 0.55", "70.5792, 70.9231, 19.5102, 0.55", "73.739, 70.799, 18.9041, 0.55", "77.1218, 70.8285, 18.464, 0.55", "79.3175, 70.921, 18.3534, 0.55", "85.0914, 71.6731, 18.4384, 0.55", "88.5517, 72.3752, 18.7406, 0.55", "91.1849, 73.0653, 19.2021, 0.55", "92.8019, 73.7388, 19.5424, 0.55", "94.6831, 74.7595, 19.9289, 0.55", "97.84, 76.7926, 20.3174, 0.55", "98.5517, 77.2841, 20.3117, 0.55", "100.572, 78.5944, 20.1655, 0.55", "102.434, 80.0006, 20.0249, 0.83", "103.449, 80.7813, 19.9326, 0.55", "104.966, 82.1293, 19.7362, 0.83", "113.245, 89.3179, 20.7521, 0.83", "120.44, 97.647, 21.1062, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-24.8773, 23.8816, 5.23279, 0.55", "-26.5501, 24.7721, 4.3698, 0.55", "-28.3692, 25.7403, 3.43137, 0.55", "-30.5643, 26.9088, 2.2989, 0.55", "-32.377, 27.8737, 1.36379, 0.83", "-33.8959, 28.6822, 0.580169, 0.55", "-36.7153, 30.183, -0.87435, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-24.8773, 23.8816, 5.23279, 0.55", "-27.4034, 24.2848, 5.08758, 0.55", "-30.07, 24.6511, 5.20365, 0.55", "-33.0882, 25.0672, 5.40906, 0.55", "-37.4285, 25.6534, 6.1104, 0.55", "-41.039, 26.0576, 6.96505, 0.55", "-44.8123, 26.4351, 8.02972, 0.55", "-48.4246, 26.5795, 9.47804, 0.55", "-51.5046, 26.4164, 11.0584, 0.55", "-55.3048, 25.9668, 13.4767, 0.55", "-56.9363, 25.6627, 14.78, 0.55", "-58.6921, 25.3205, 16.2702, 0.55", "-61.7954, 24.4547, 18.768, 0.55", "-63.4678, 23.978, 19.8196, 0.55", "-65.2192, 23.4213, 20.9146, 0.55", "-67.3192, 22.77, 21.9924, 0.55", "-69.6074, 22.1067, 23.0946, 0.55", "-72.8784, 21.146, 24.5942, 0.55", "-77.2842, 20.135, 26.1662, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "26.093, 6.08493, -18.9211, 0.55", "30.8019, 7.60686, -19.9647, 0.55", "33.5393, 8.28955, -20.941, 0.55", "36.2516, 8.83783, -21.9338, 0.55", "38.1105, 9.13823, -22.6053, 0.55", "40.8315, 9.51599, -23.5605, 0.55", "46.4896, 10.1758, -25.7093, 0.55", "52.9234, 10.848, -28.5709, 0.55", "56.0642, 10.962, -30.1575, 0.55", "57.7525, 10.973, -31.1132, 0.55", "59.605, 10.9877, -32.2359, 0.55", "62.9175, 10.9242, -34.219, 0.55", "64.1269, 10.8284, -34.9728, 0.55", "69.248, 10.5153, -38.5616, 0.55", "72.8758, 10.3283, -41.3695, 0.55", "74.9629, 10.2557, -43.0457, 0.55", "77.0459, 10.1653, -44.7144, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "26.093, 6.08493, -18.9211, 0.83", "27.973, 7.58451, -19.1078, 0.83", "29.0506, 8.43175, -19.2674, 0.55", "30.6398, 9.69205, -19.6548, 0.83", "31.7064, 10.5629, -19.9551, 0.55", "33.1708, 11.81, -20.3533, 0.83", "34.9233, 13.3585, -20.768, 0.55", "35.8119, 14.0737, -20.9245, 0.55", "37.8865, 15.4474, -21.0769, 0.83", "39.7865, 16.498, -20.9121, 0.55", "40.8442, 17.0916, -20.7103, 0.83", "42.417, 18.0488, -20.2365, 0.55", "44.6536, 19.5184, -19.2532, 0.55", "47.7721, 21.4162, -17.6849, 0.55", "50.748, 23.1486, -15.9474, 0.55", "53.1067, 24.5019, -14.5205, 0.55", "56.9914, 26.7559, -12.1495, 0.55", "59.8186, 28.5038, -10.3624, 0.55", "61.5019, 29.7244, -9.24193, 0.55", "64.555, 32.3242, -7.20689, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.789623, -19.7955, 6.56958, 0.83", "-0.922226, -22.4075, 6.45792, 0.83", "-1.05142, -24.9524, 6.34913, 0.83", "-1.19567, -27.7938, 6.22767, 0.83", "-1.27099, -29.2776, 6.16425, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.789623, -19.7955, 6.56958, 0.55", "-0.331523, -21.0646, 7.45539, 0.55", "0.0732933, -22.619, 8.60741, 0.55", "0.290949, -24.6571, 10.1978, 0.55", "0.319699, -25.4494, 10.8373, 0.83", "0.20578, -27.4722, 12.7008, 0.55", "0.060782, -28.517, 13.6828, 0.55", "-0.264762, -30.5488, 15.6791, 0.83", "-0.594366, -32.0579, 17.2574, 0.55", "-0.977423, -33.303, 18.5397, 0.55", "-1.75611, -35.6613, 20.925, 0.55", "-2.37473, -37.5409, 22.804, 0.55", "-2.84001, -39.0476, 24.3317, 0.55", "-3.2452, -40.6471, 25.9032, 0.28", "-3.35757, -41.3132, 26.5323, 0.55", "-3.53271, -42.5434, 27.6241, 0.28", "-3.54225, -44.4631, 29.0295, 0.55", "-5.12172, -50.854, 34.0474, 0.55", "-6.87016, -56.7599, 39.5774, 0.55", "-8.25418, -61.6138, 46.138, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-36.7153, 30.183, -0.87435, 0.55", "-39.6811, 30.2881, 0.557997, 0.55", "-40.9321, 30.2547, 1.30682, 0.83", "-42.3996, 30.1302, 2.36805, 0.55", "-43.5257, 30.027, 3.27972, 0.83", "-46.4787, 29.8605, 5.65065, 0.55", "-47.5976, 29.815, 6.5583, 0.28", "-49.4687, 29.7476, 8.2268, 0.55", "-51.9794, 29.6724, 10.4552, 0.55", "-53.883, 29.6222, 12.062, 0.55", "-56.4234, 29.5606, 14.1293, 0.28", "-57.0813, 29.5552, 14.589, 0.55", "-58.4415, 29.5635, 15.4913, 0.28", "-59.3632, 29.599, 16.0208, 0.55", "-61.2393, 29.6706, 16.9403, 0.28", "-62.3374, 29.6572, 17.4192, 0.55", "-64.2715, 29.4931, 18.2699, 0.28", "-65.5689, 29.3778, 18.7955, 0.55", "-73.5663, 27.7922, 25.4352, 0.55", "-80.883, 25.1968, 32.5266, 0.55", "-87.8964, 21.6294, 39.5011, 0.55", "-94.8164, 16.9096, 45.8569, 0.55", "-100.642, 12.5455, 53.4442, 0.55", "-107.232, 8.57857, 60.6134, 0.55", "-114.006, 6.27016, 68.3166, 0.55", "-120.718, 3.15244, 75.7853, 0.55", "-127.269, 0.703593, 83.6368, 0.55", "-133.35, -1.9121, 91.8064, 0.55", "-138.392, -5.70591, 100.217, 0.55", "-143.564, -8.55635, 108.916, 0.55", "-148.829, -12.4138, 117.16, 0.55", "-152.891, -16.7231, 125.849, 0.55", "-155.269, -20.3582, 135.424, 0.55", "-157.499, -25.8307, 144.121, 0.55", "-158.235, -31.4759, 152.961, 0.55", "-159.545, -36.7147, 161.983, 0.55", "-161.997, -41.2381, 171.153, 0.55", "-166.639, -44.1581, 180.124, 0.55", "-170.354, -48.2187, 189.083, 0.55", "-172.206, -50.5972, 199.157, 0.55", "-175.729, -52.2122, 208.931, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-36.7153, 30.183, -0.87435, 0.55", "-38.4776, 30.8433, -2.91715, 0.55", "-39.8469, 31.5783, -5.20411, 0.55", "-41.1327, 32.5111, -7.63442, 0.55", "-41.9379, 33.0952, -9.15626, 0.55", "-43.4066, 34.1606, -11.9322, 0.83", "-44.4811, 34.9401, -13.9632, 0.55", "-45.7226, 35.9967, -16.9495, 0.83", "-46.1895, 36.7326, -18.6377, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-77.2842, 20.135, 26.1662, 0.28", "-78.1069, 18.2443, 26.5687, 0.28", "-78.5179, 17.4068, 26.6883, 0.28", "-79.0518, 16.2131, 26.8105, 0.55", "-79.4865, 15.1686, 26.9203, 0.28", "-80.1219, 13.5852, 27.1009, 0.55", "-81.8619, 8.96258, 27.6785, 0.28", "-82.4397, 7.30547, 27.7594, 0.55", "-83.3244, 4.72886, 27.8076, 0.28", "-83.8389, 3.1688, 27.7735, 0.55", "-84.1978, 2.08604, 27.7284, 0.28", "-84.6052, 0.846486, 27.6847, 0.55", "-85.805, -3.25052, 27.5989, 0.28", "-86.1907, -4.50391, 27.539, 0.55", "-86.9041, -6.48486, 27.2986, 0.28", "-87.5165, -7.79424, 27.0788, 0.28", "-88.0759, -8.68784, 26.9299, 0.55", "-90.0251, -11.2036, 26.6268, 0.28", "-90.9313, -12.2246, 26.5393, 0.55", "-93.1692, -14.5991, 26.2541, 0.28", "-95.4178, -16.7321, 26.0041, 0.28", "-97.8785, -18.8151, 25.7351, 0.28", "-99.0073, -19.6157, 25.6592, 0.55", "-104.142, -27.3814, 25.5349, 0.55", "-109.624, -34.7337, 27.1393, 0.55", "-115.226, -42.1676, 27.3389, 0.55", "-121.161, -49.3101, 26.6658, 0.55", "-127.363, -56.0701, 25.0787, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-77.2842, 20.135, 26.1662, 0.55", "-78.0998, 20.0893, 26.2858, 0.55", "-80.3949, 19.932, 26.9208, 0.55", "-81.2575, 19.8459, 27.2031, 0.55", "-83.2883, 19.5788, 27.8917, 0.55", "-86.4129, 19.2157, 28.8031, 0.55", "-88.0349, 19.0799, 29.2532, 0.28", "-90.5624, 18.8188, 29.8986, 0.55", "-92.4425, 18.5936, 30.3065, 0.55", "-93.2366, 18.4931, 30.4799, 0.28", "-98.0002, 17.8884, 31.5135, 0.55", "-100.233, 17.518, 31.8505, 0.28", "-103.25, 17.0254, 32.1285, 0.28", "-105.851, 16.6543, 32.2212, 0.55", "-115.896, 16.4476, 34.9206, 0.55", "-125.586, 15.8545, 38.658, 0.55", "-134.742, 14.084, 43.2685, 0.55", "-143.532, 13.9542, 48.8309, 0.55", "-151.007, 13.2474, 56.0318, 0.55", "-156.927, 12.9067, 64.5791, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "77.0459, 10.1653, -44.7144, 0.55", "81.6896, 11.6494, -48.5007, 0.55", "83.1595, 12.0516, -49.7895, 0.55", "85.0006, 12.4941, -51.3793, 0.55", "88.3431, 13.2637, -54.4613, 0.55", "91.8359, 13.9197, -57.7623, 0.55", "93.5467, 14.1028, -59.3301, 0.83", "94.9579, 14.1531, -60.726, 0.55", "96.0161, 14.1003, -61.8756, 0.83", "98.5761, 13.6086, -64.8173, 0.55", "100.689, 13.0046, -67.2506, 0.55", "103.119, 12.2956, -69.9286, 0.55", "105.823, 11.5834, -72.9672, 0.55", "107.638, 11.0615, -75.0497, 0.55", "109.686, 10.4651, -77.4645, 0.55", "111.455, 10.0104, -79.6766, 0.55", "112.566, 9.82442, -81.219, 0.55", "113.981, 9.49267, -84.3301, 0.55", "114.756, 9.22205, -86.2753, 0.55", "115.432, 8.74236, -88.8593, 0.55", "116.369, 7.79479, -93.2252, 0.55", "116.562, 7.54348, -94.2088, 0.28", "119.053, 4.35657, -106.163, 0.28", "119.889, 3.44758, -109.672, 0.83", "123.171, 0.00634566, -122.107, 0.83", "124.857, -1.82195, -127.876, 0.83", "125.664, -2.65595, -130.208, 0.55", "126.586, -3.47653, -132.479, 0.55", "129.115, -5.0831, -136.677, 0.55", "131.812, -6.52485, -140.358, 0.28", "132.619, -6.77772, -140.562, 0.55", "134.389, -7.19528, -140.379, 0.28", "135.482, -7.37189, -140.109, 0.55", "136.62, -7.56906, -139.73, 0.28", "137.985, -7.73553, -139.213, 0.55", "140.027, -7.88083, -138.662, 0.28", "141.667, -8.04951, -138.272, 0.55", "143.482, -8.11816, -137.989, 0.28", "145.95, -8.20816, -137.823, 0.55", "148.718, -8.24842, -137.806, 0.55", "151.152, -8.25847, -137.955, 0.28", "154.522, -8.24563, -138.347, 0.55", "160.35, -8.07579, -139.652, 0.55", "162.924, -7.87378, -140.544, 0.55", "164.03, -7.74338, -141.047, 0.83", "166.139, -7.48429, -142.201, 0.55", "167.602, -7.24687, -143.095, 0.83", "171.535, -6.50467, -145.549, 0.55", "173.941, -6.2198, -147.105, 0.28", "174.955, -6.16067, -147.645, 0.55", "177.734, -6.25, -148.808, 0.28", "178.709, -6.36966, -149.149, 0.55", "180.718, -6.7352, -149.538, 0.28", "182.765, -7.29783, -149.576, 0.55", "186.899, -8.63915, -148.922, 0.28", "188.805, -9.33689, -148.416, 0.55", "191.642, -10.5337, -147.508, 0.28", "195.225, -12.0286, -146.233, 0.55", "197.816, -13.0732, -145.271, 0.55", "202.299, -14.7404, -143.533, 0.28", "204.138, -15.3431, -142.973, 0.55", "207.308, -16.2092, -142.361, 0.28", "210.464, -16.8355, -141.978, 0.55", "212.192, -16.9884, -142.013, 0.28", "213.75, -16.9188, -142.173, 0.55", "218.147, -16.4685, -143.049, 0.28", "221.283, -15.9294, -143.731, 0.28", "224.005, -15.2614, -144.368, 0.55", "227.01, -14.4428, -145.229, 0.28", "227.766, -14.188, -145.421, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "77.0459, 10.1653, -44.7144, 0.55", "77.7037, 8.24906, -45.9776, 0.55", "78.1129, 6.61447, -46.9319, 0.28", "78.4844, 5.11557, -47.6774, 0.55", "79.4356, 1.95159, -49.2868, 0.28", "79.4904, 1.75231, -49.4165, 0.55", "79.8075, 0.711543, -50.1825, 0.28", "79.9922, -0.154205, -50.9552, 0.55", "80.1348, -1.06091, -51.8663, 0.28", "80.2939, -2.29988, -53.1669, 0.55", "80.6905, -5.41177, -56.3737, 0.55", "81.0203, -8.25009, -59.3475, 0.55", "81.2614, -10.5204, -61.7276, 0.55", "81.4571, -12.7557, -64.0276, 0.55", "81.5055, -13.3336, -64.5972, 0.28", "81.574, -13.9501, -65.154, 0.55", "81.7471, -14.7989, -65.8455, 0.28", "82.2101, -16.31, -66.9436, 0.55", "83.3386, -19.1898, -68.5811, 0.55", "83.9572, -20.7388, -69.3206, 0.28", "84.4951, -22.3197, -70.1429, 0.55", "85.0873, -24.5452, -71.3796, 0.28", "85.4513, -26.3495, -72.4208, 0.55", "85.8815, -29.0557, -73.9836, 0.28", "86.3456, -31.8551, -75.5142, 0.55", "86.9667, -35.9232, -77.7725, 0.28", "87.2511, -38.0952, -78.9836, 0.55", "87.5072, -40.3191, -80.2748, 0.28", "87.7142, -42.2778, -81.5326, 0.28", "88.0588, -44.7204, -83.3147, 0.55", "88.5321, -46.9737, -84.9094, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "64.555, 32.3242, -7.20689, 0.55", "66.7859, 32.2716, -6.81806, 0.55", "68.4112, 32.1724, -6.68852, 0.55", "71.965, 31.9156, -6.58966, 0.55", "73.5597, 31.7681, -6.68684, 0.55", "75.2925, 31.6444, -6.88036, 0.55", "77.6076, 31.5198, -7.30424, 0.55", "80.0449, 31.3247, -7.9847, 0.55", "81.3187, 31.2063, -8.48901, 0.55", "83.8902, 30.9665, -9.871, 0.55", "85.0717, 30.8663, -10.5457, 0.55", "87.8416, 30.5776, -12.2005, 0.55", "89.7255, 30.3049, -13.3066, 0.55", "91.1161, 30.0949, -14.0565, 0.83", "93.3469, 29.6753, -15.2301, 0.55", "95.546, 29.1559, -16.2951, 0.83", "97.4233, 28.6283, -17.1329, 0.55", "99.0963, 28.1828, -17.7906, 0.55", "100.047, 27.9708, -18.1116, 0.83", "102.271, 27.4824, -18.7435, 0.28", "103.376, 27.2849, -18.987, 0.28", "104.449, 27.0261, -19.2789, 0.28", "105.606, 26.7774, -19.5991, 0.28", "107.452, 26.4143, -20.1492, 0.28", "108.195, 26.2774, -20.3482, 0.55", "109.979, 25.9671, -20.65, 0.55", "113.202, 25.3768, -21.0323, 0.55", "114.098, 25.1898, -21.0996, 0.55", "114.903, 24.9968, -21.1262, 0.83", "116.653, 24.6299, -21.0443, 0.55", "118.175, 24.3138, -20.9491, 0.55", "119.613, 24.0211, -20.8526, 0.55", "120.727, 23.7755, -20.809, 0.55", "122.499, 23.2652, -20.827, 0.55", "124.597, 22.4838, -20.9647, 0.55", "127.876, 20.9119, -21.4087, 0.55", "129.692, 19.7912, -21.7686, 0.55", "131.283, 18.56, -22.1622, 0.28", "131.765, 18.0931, -22.308, 0.55", "132.851, 16.7567, -22.6888, 0.28", "133.812, 15.2297, -23.0696, 0.55", "134.76, 13.2955, -23.3714, 0.55", "135.401, 12.0255, -23.5076, 0.28", "135.636, 11.5776, -23.5333, 0.55", "136.241, 10.4672, -23.5823, 0.28", "137.063, 9.02607, -23.6114, 0.55", "139.187, 5.56893, -23.598, 0.55", "140.291, 3.83011, -23.5544, 0.55", "141.315, 2.23782, -23.5, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "64.555, 32.3242, -7.20689, 0.55", "66.7263, 33.5832, -5.27274, 0.55", "67.4294, 33.9719, -4.69374, 0.55", "70.0879, 35.2472, -2.61874, 0.55", "73.0396, 36.7474, -0.273656, 0.55", "76.8077, 38.6927, 2.84359, 0.55", "77.8495, 39.2291, 3.69666, 0.55", "79.7333, 40.1079, 5.23042, 0.55", "81.8033, 41.0981, 6.81236, 0.55", "84.2162, 42.2877, 8.5137, 0.55", "86.4834, 43.4457, 10.1154, 0.55", "87.7272, 44.1238, 10.914, 0.55", "89.1809, 44.9642, 11.8355, 0.55", "90.9758, 46.0498, 12.9238, 0.83", "93.966, 47.7248, 14.3755, 0.55", "95.9737, 48.7219, 15.2602, 0.83", "98.7963, 49.9435, 16.4277, 0.55", "99.6725, 50.2662, 16.7878, 0.55", "102.421, 51.1127, 17.8877, 0.55", "107.414, 52.27, 19.7452, 0.55", "111.112, 52.8912, 21.0816, 0.55", "114.051, 53.2687, 22.247, 0.55", "117.056, 53.5281, 23.5818, 0.55", "117.69, 53.5669, 23.8706, 0.28", "118.984, 53.5947, 24.4681, 0.83", "124.305, 53.6419, 26.9739, 0.55", "128.036, 53.6591, 28.6553, 0.55", "131.077, 53.7695, 30.0881, 0.55", "132.892, 53.8351, 30.9628, 0.83", "134.317, 53.9077, 31.648, 0.28", "135.611, 53.9721, 32.2569, 0.55", "145.125, 57.2824, 37.723, 0.55", "155.758, 58.5005, 41.8222, 0.55", "166.074, 61.1716, 46.041, 0.55", "175.154, 62.7618, 52.8507, 0.55", "183.713, 62.9126, 60.4712, 0.55", "193.749, 60.7997, 65.5857, 0.55", "204.015, 57.1441, 69.136, 0.55", "215.071, 55.3755, 71.5842, 0.55", "225.932, 53.6272, 74.7952, 0.55", "237.153, 52.9293, 77.0211, 0.55", "248.069, 53.0935, 80.5102, 0.55", "258.479, 51.4672, 85.0185, 0.55", "268.741, 52.0889, 90.0842, 0.55", "278.111, 54.6539, 96.1646, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.27099, -29.2776, 6.16425, 1.38", "1.84136, -32.9595, 4.60824, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.27099, -29.2776, 6.16425, 0.55", "-2.06638, -30.422, 5.95226, 0.55", "-2.93364, -31.8796, 5.7226, 0.55", "-3.62183, -32.8516, 5.54872, 0.55", "-4.17222, -33.6648, 5.30204, 0.55", "-5.33901, -35.3541, 4.63004, 0.55", "-6.15265, -36.4853, 4.13042, 0.55", "-6.86569, -37.4991, 3.6534, 0.55", "-8.70664, -39.9742, 2.42722, 0.55", "-10.9318, -42.8461, 0.97304, 0.55", "-12.6471, -45.0243, -0.1902, 0.55", "-13.7337, -46.4522, -0.951027, 0.55", "-14.9772, -48.1611, -1.81785, 0.55", "-16.5449, -50.5959, -2.88644, 0.55", "-17.4507, -52.3082, -3.48169, 0.55", "-18.5829, -54.7563, -4.08662, 0.55", "-19.4778, -57.038, -4.51813, 0.55", "-20.3543, -59.8692, -4.92409, 0.55", "-21.1538, -63.177, -5.24819, 0.55", "-21.5497, -65.6905, -5.36842, 0.55", "-21.6898, -66.9359, -5.32665, 0.55", "-21.8984, -69.8512, -5.02666, 0.55", "-22.0679, -72.5757, -4.66397, 0.55", "-22.1628, -75.3109, -4.06414, 0.55", "-22.2577, -76.8807, -3.64281, 0.55", "-22.5741, -81.7319, -2.16094, 0.55", "-22.6015, -82.0892, -2.04652, 0.55", "-22.7453, -84.2748, -1.28251, 0.55", "-23.2033, -88.1938, 0.118885, 0.55", "-23.3413, -89.5052, 0.51092, 0.55", "-23.504, -91.5596, 0.773599, 0.55", "-23.4956, -92.3224, 0.710484, 0.55", "-23.2188, -94.8995, 0.067625, 0.55", "-22.8494, -96.5647, -0.657953, 0.55", "-22.0361, -99.2153, -2.30869, 0.55", "-20.8429, -102.451, -4.53046, 0.28", "-20.5046, -103.251, -5.1799, 0.55", "-19.9569, -104.463, -6.26602, 0.28", "-19.8732, -104.646, -6.4395, 0.55", "-19.4456, -105.647, -7.30896, 0.28", "-19.3454, -105.988, -7.53575, 0.55", "-18.9615, -107.763, -8.39856, 0.28", "-18.8554, -108.368, -8.69159, 0.55", "-18.598, -110.118, -9.45034, 0.28", "-18.5153, -110.669, -9.68657, 0.55", "-18.2534, -112.571, -10.4766, 0.28", "-18.1273, -113.446, -10.843, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-8.25418, -61.6138, 46.138, 0.55", "-11.8667, -68.5628, 53.0156, 0.55", "-16.4484, -74.5711, 60.1954, 0.55", "-20.7936, -81.2664, 66.8986, 0.55", "-25.324, -87.9907, 73.4484, 0.55", "-28.8427, -95.9142, 79.2342, 0.55", "-32.2295, -103.51, 85.5165, 0.55", "-34.5865, -112.752, 89.7203, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.25418, -61.6138, 46.138, 0.55", "-7.57447, -67.9485, 51.9961, 0.55", "-6.71417, -75.2359, 56.5852, 0.55", "-7.2436, -82.4969, 61.2655, 0.55", "-8.3618, -90.1276, 65.1933, 0.55", "-9.12008, -97.7498, 69.2225, 0.55", "-9.74703, -105.076, 73.7867, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-46.1895, 36.7326, -18.6377, 0.83", "-45.9519, 37.9607, -19.9508, 0.83", "-45.462, 40.9235, -22.8873, 0.55", "-45.2521, 42.203, -24.0461, 0.83", "-45.0251, 43.5733, -25.191, 0.55", "-44.7977, 44.9858, -26.167, 0.55", "-44.6804, 45.697, -26.5652, 0.28", "-44.6353, 46.1679, -26.7105, 0.55", "-44.4461, 47.7475, -26.8587, 0.28", "-44.3494, 48.4247, -26.888, 0.55", "-44.0439, 50.7782, -26.895, 0.28", "-43.8506, 52.6408, -26.8385, 0.55", "-43.688, 55.5412, -26.6621, 0.28", "-43.6344, 58.0852, -26.4592, 0.28", "-43.6864, 59.5036, -26.3189, 0.55", "-43.8507, 61.178, -26.1529, 0.28", "-43.9817, 61.9732, -26.0629, 0.55", "-44.3904, 63.8351, -25.9378, 0.28", "-44.7445, 65.0691, -25.9211, 0.28", "-45.1176, 66.2786, -25.9427, 0.28", "-45.2899, 66.9196, -25.9563, 0.55", "-45.8463, 69.5236, -26.0721, 0.28", "-46.4015, 72.616, -26.2655, 0.55", "-46.5775, 73.6853, -26.3363, 0.55", "-46.7716, 74.7561, -26.3842, 0.55", "-47.3034, 77.0206, -26.5249, 0.55", "-47.7478, 78.4985, -26.651, 0.28", "-47.9812, 79.0521, -26.7072, 0.55", "-48.7213, 80.5418, -26.8281, 0.28", "-49.5745, 82.121, -27.0229, 0.55", "-51.017, 84.3708, -27.3979, 0.28", "-51.7242, 85.2997, -27.5879, 0.28", "-52.8793, 86.574, -27.992, 0.55", "-54.1756, 87.8919, -28.49, 0.28", "-54.4122, 88.0955, -28.5799, 0.55", "-55.2659, 88.7349, -28.8974, 0.28", "-58.2119, 90.7635, -29.9347, 0.55", "-62.3092, 93.2214, -31.5256, 0.28", "-63.066, 93.6269, -31.8639, 0.55", "-65.1439, 94.66, -32.8264, 0.28", "-66.0162, 95.0815, -33.2539, 0.28", "-66.7744, 95.4279, -33.6614, 0.55", "-68.993, 96.1749, -35.0204, 0.28", "-70.5604, 96.5433, -35.9159, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-46.1895, 36.7326, -18.6377, 0.55", "-46.5409, 38.5291, -18.7875, 0.55", "-46.7802, 39.5824, -18.7779, 0.28", "-47.1115, 40.3145, -18.5928, 0.55", "-47.8723, 41.9959, -18.1678, 0.28", "-48.4067, 43.1769, -17.8693, 0.55", "-49.3918, 45.354, -17.3189, 0.28", "-50.0522, 46.5006, -16.8191, 0.55", "-52.5328, 49.1105, -14.648, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-127.363, -56.0701, 25.0787, 0.55", "-133.227, -65.8686, 26.9396, 0.55", "-137.214, -76.6255, 28.4387, 0.55", "-140.412, -87.7028, 27.4806, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-127.363, -56.0701, 25.0787, 0.55", "-133.731, -65.5495, 24.6034, 0.55", "-139.042, -75.5291, 22.9178, 0.55", "-143.895, -85.7075, 21.0496, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-156.927, 12.9067, 64.5791, 0.55", "-164.71, 11.9701, 69.4629, 0.55", "-172.7, 12.5096, 74.0625, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-156.927, 12.9067, 64.5791, 0.55", "-167.375, 11.8628, 67.5548, 0.55", "-177.579, 12.3895, 71.3872, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "88.5321, -46.9737, -84.9094, 0.28", "94.7093, -51.3735, -94.4321, 0.28", "95.3361, -51.8314, -95.2642, 0.55", "96.3943, -52.6045, -96.6688, 0.28", "97.2852, -53.2554, -97.8516, 0.28", "98.4647, -54.1171, -99.4172, 0.55", "100.02, -55.2532, -101.482, 0.55", "102.237, -56.6713, -102.373, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "88.5321, -46.9737, -84.9094, 0.55", "89.3061, -48.1736, -86.1464, 0.55", "89.549, -48.7157, -86.7009, 0.28", "89.9144, -49.6465, -87.6742, 0.55", "90.7195, -51.6969, -89.8181, 0.28", "91.2774, -53.1178, -91.3039, 0.55", "92.2227, -55.5253, -93.8212, 0.28", "93.2991, -58.4674, -97.1459, 0.28", "93.7343, -59.8221, -98.706, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "141.315, 2.23782, -23.5, 0.28", "142.773, 1.17684, -22.5142, 0.28", "144.63, -0.153905, -21.0394, 0.28", "145.811, -0.995449, -20.0274, 0.55", "146.512, -1.43237, -19.4366, 0.28", "146.886, -1.66644, -19.1144, 0.28", "148.737, -2.83617, -17.5542, 0.55", "149.161, -3.06516, -17.1519, 0.28", "150.183, -3.64802, -16.008, 0.55", "151.058, -4.1785, -15.0535, 0.28", "151.812, -4.60955, -14.2961, 0.55", "152.699, -5.15893, -13.4491, 0.55", "154.11, -6.12996, -12.2956, 0.55", "154.452, -6.3762, -12.0257, 0.55", "155.683, -7.3121, -11.0302, 0.28", "156.164, -7.70648, -10.637, 0.55", "156.825, -8.20252, -10.1406, 0.28", "157.76, -8.93201, -9.48273, 0.55", "159.296, -10.1915, -8.68577, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "141.315, 2.23782, -23.5, 0.55", "138.13, 1.88062, -23.448, 0.55", "135.544, 1.59054, -23.4058, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.84136, -32.9595, 4.60824, 0.83", "1.89812, -33.1876, 4.53654, 0.83", "2.70695, -35.2305, 3.82533, 0.83", "3.34702, -37.0173, 3.1097, 0.55", "3.85766, -38.4427, 2.53878, 0.55", "4.94304, -41.4724, 1.32528, 0.83", "6.25953, -45.1473, -0.146621, 0.55", "7.00998, -47.0753, -0.916771, 0.83", "8.45786, -50.1618, -2.1665, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.84136, -32.9595, 4.60824, 0.55", "0.986051, -33.5728, 2.86892, 0.55", "0.067975, -34.231, 1.00197, 0.55", "-1.01582, -35.0082, -1.20198, 0.55", "-2.3319, -35.9518, -3.87829, 0.55", "-3.07873, -36.4873, -5.397, 0.55", "-3.22876, -36.5949, -5.70209, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.74703, -105.076, 73.7867, 0.55", "-9.63412, -113.105, 79.2531, 0.55", "-8.46048, -121.753, 83.5176, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-9.74703, -105.076, 73.7867, 0.55", "-10.9008, -114.956, 79.4173, 0.55", "-12.3701, -124.509, 85.5182, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-52.5328, 49.1105, -14.648, 0.28", "-53.8332, 49.9859, -13.44, 0.28", "-54.3314, 50.3071, -12.9255, 0.55", "-55.7633, 51.2339, -11.4027, 0.28", "-56.4656, 51.7065, -10.7203, 0.55", "-58.3726, 52.9969, -8.94284, 0.28", "-60.3107, 54.3084, -7.1363, 0.55", "-63.5059, 56.3123, -4.14532, 0.28", "-64.1867, 56.7441, -3.50686, 0.55", "-65.6863, 57.7922, -2.13924, 0.28", "-66.2746, 58.2358, -1.5962, 0.55", "-72.4846, 60.7639, 2.65975, 0.55", "-79.0688, 64.3927, 5.21884, 0.55", "-85.0126, 68.1255, 8.93462, 0.55", "-90.0178, 72.9258, 12.8043, 0.55", "-95.724, 77.4421, 15.9842, 0.55", "-102.051, 80.5802, 19.6142, 0.55", "-107.969, 82.9764, 24.3371, 0.55", "-113.235, 84.4805, 30.0882, 0.55", "-118.529, 86.4693, 35.6645, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-52.5328, 49.1105, -14.648, 0.55", "-56.8567, 47.1828, -13.2699, 0.55", "-59.0973, 46.1053, -12.5634, 0.28", "-60.7647, 45.3034, -12.0375, 0.55", "-62.1544, 44.6351, -11.5993, 0.28", "-63.1277, 44.167, -11.2923, 0.55", "-65.8118, 42.8762, -10.4459, 0.28", "-67.5697, 41.8803, -10.124, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-140.412, -87.7028, 27.4806, 0.55", "-144.664, -100.581, 30.0763, 0.55", "-148.31, -113.274, 34.1053, 0.55", "-151.441, -126.636, 35.6278, 0.55", "-155.578, -139.343, 39.0998, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-140.412, -87.7028, 27.4806, 0.55", "-144.966, -95.8317, 23.6796, 0.55", "-149.27, -103.223, 18.378, 0.55", "-154.185, -111.163, 14.6294, 0.55", "-161.16, -117.484, 11.072, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-143.895, -85.7075, 21.0496, 0.55", "-149.355, -91.4298, 16.0503, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-143.895, -85.7075, 21.0496, 0.55", "-148.111, -94.2191, 28.1522, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "102.237, -56.6713, -102.373, 0.28", "104.582, -57.837, -103.483, 0.28", "105.672, -58.3784, -103.998, 0.55", "107.749, -59.4109, -104.981, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "102.237, -56.6713, -102.373, 0.55", "101.93, -57.8405, -103.568, 0.55", "101.316, -60.1792, -105.958, 0.28", "101.116, -60.941, -106.737, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "93.7343, -59.8221, -98.706, 0.28", "95.1074, -63.1925, -101.913, 0.28", "95.7873, -64.8614, -103.501, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "93.7343, -59.8221, -98.706, 0.55", "91.565, -60.5516, -98.0468, 0.55", "85.5161, -62.5861, -96.2086, 0.28", "84.0791, -63.0694, -95.7719, 0.55", "80.1481, -64.3914, -94.5773, 0.28", "77.6143, -65.2436, -93.8073, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "8.45786, -50.1618, -2.1665, 0.83", "8.44558, -50.4065, -2.20021, 0.83", "8.37701, -53.6124, -2.60012, 0.83", "8.25445, -56.0023, -2.65234, 0.83", "8.15336, -58.3011, -2.41472, 0.83", "8.07423, -61.355, -1.84808, 0.83", "7.98537, -64.8679, -1.03181, 0.83", "8.02605, -68.7929, 0.0340769, 0.83", "8.17468, -72.6069, 1.2097, 0.83", "8.04672, -77.2678, 2.75345, 0.83", "7.81821, -79.4002, 3.4374, 0.83", "7.57848, -81.0028, 3.87381, 0.83", "7.02525, -84.0724, 4.69892, 0.83", "6.48731, -86.8253, 5.27458, 0.83", "5.18971, -92.7139, 5.77319, 0.83", "4.24938, -95.9343, 5.68334, 0.83", "3.24677, -98.9002, 5.42664, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "8.45786, -50.1618, -2.1665, 0.55", "7.51356, -52.6816, -1.16021, 0.55", "6.89973, -54.506, -0.302545, 0.55", "6.6113, -55.6727, 0.318835, 0.55", "6.34933, -57.5018, 1.37502, 0.55", "6.0631, -61.1264, 3.58937, 0.55", "6.03212, -63.862, 5.52168, 0.55", "6.16746, -66.0502, 7.25647, 0.55", "6.36743, -68.253, 9.17066, 0.55", "6.58607, -70.0767, 10.8454, 0.28", "6.89635, -71.5606, 12.4042, 0.55", "7.67086, -74.2479, 15.5907, 0.55", "8.19516, -75.8841, 17.7509, 0.55", "8.47418, -76.8001, 18.9605, 0.55", "8.71899, -77.8773, 20.3785, 0.83", "9.27187, -81.0738, 24.4269, 0.28", "9.43548, -82.1324, 25.7421, 0.55", "9.73637, -84.0498, 28.0237, 0.28", "9.85961, -84.6399, 28.7621, 0.55", "10.1935, -86.0327, 30.4197, 0.28", "10.3473, -86.8264, 31.3109, 0.55", "10.2339, -89.4115, 33.7524, 0.55", "13.2451, -96.4624, 41.3557, 0.55", "16.9462, -103.197, 48.9412, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-3.22876, -36.5949, -5.70209, 0.55", "-5.42994, -37.5815, -8.55424, 0.55", "-6.0861, -37.8128, -9.35864, 0.55", "-7.74342, -38.3973, -11.3077, 0.55", "-11.3974, -39.5606, -15.398, 0.28", "-11.9466, -39.7214, -15.9684, 0.55", "-14.2476, -40.4672, -18.2527, 0.55", "-17.4385, -41.5059, -21.0521, 0.55", "-18.6647, -41.8638, -22.0903, 0.28", "-19.7495, -42.1028, -22.9327, 0.28", "-21.6322, -42.4849, -24.1112, 0.55", "-23.9247, -42.837, -25.6324, 0.28", "-26.0454, -42.9752, -27.08, 0.55", "-27.694, -42.9456, -28.1625, 0.55", "-28.8299, -42.8275, -28.941, 0.55", "-32.1641, -42.3235, -31.3245, 0.55", "-35.6906, -41.555, -33.7581, 0.55", "-37.1546, -41.1583, -34.7244, 0.28", "-38.5423, -40.8023, -35.669, 0.55", "-41.3538, -40.2643, -37.5624, 0.28", "-42.2998, -40.111, -38.1909, 0.83", "-44.0799, -39.8097, -39.2433, 0.28", "-45.3749, -39.6969, -39.8381, 0.55", "-47.2565, -39.5999, -40.6666, 0.28", "-48.0085, -39.5529, -40.9718, 0.55", "-49.4078, -39.4952, -41.4646, 0.55", "-51.5361, -39.2045, -42.123, 0.55", "-52.9355, -38.9348, -42.474, 0.28", "-54.0747, -38.5868, -42.6655, 0.55", "-55.4222, -38.0191, -42.8916, 0.28", "-55.6441, -37.9086, -42.9354, 0.55", "-57.6738, -36.8293, -43.6774, 0.28", "-59.1389, -36.0106, -44.3662, 0.55", "-61.06, -34.7956, -45.5292, 0.83", "-62.6327, -33.7514, -46.6595, 0.28", "-63.0362, -33.4827, -46.9911, 0.55", "-66.1182, -31.4585, -49.7071, 0.28", "-66.6536, -31.1107, -50.2358, 0.55", "-68.2292, -29.9724, -51.8926, 0.28", "-68.6356, -29.6795, -52.3233, 0.55", "-69.6848, -28.9206, -53.3557, 0.28", "-70.4321, -28.3767, -54.0391, 0.55", "-72.1214, -27.1744, -55.312, 0.28", "-73.1264, -26.5329, -56.0316, 0.55", "-75.2781, -25.3031, -57.4574, 0.28", "-75.9193, -24.9722, -57.8733, 0.55", "-76.9265, -24.5323, -58.4913, 0.28", "-77.7827, -24.164, -58.9736, 0.55", "-79.5685, -23.4278, -59.8697, 0.28", "-80.1074, -23.2189, -60.1226, 0.55", "-84.1254, -21.5986, -61.8143, 0.28", "-85.5435, -20.9385, -62.2829, 0.55", "-88.0833, -19.6501, -62.9556, 0.28", "-89.2303, -19.0271, -63.2228, 0.55", "-91.8662, -17.6239, -63.6888, 0.28", "-92.8348, -17.1524, -63.8201, 0.55", "-96.34, -15.7597, -64.1216, 0.28", "-97.7994, -15.3571, -64.24, 0.55", "-99.878, -15.1157, -64.3962, 0.55", "-101.156, -15.0477, -64.4648, 0.55", "-103.762, -14.984, -64.4093, 0.28", "-106.325, -14.9537, -64.1961, 0.28", "-108.459, -14.9236, -63.9566, 0.55", "-111.063, -14.6777, -63.3736, 0.28", "-112.344, -14.4052, -62.9078, 0.55", "-115.373, -13.2816, -61.4778, 0.28", "-116.895, -12.4096, -60.356, 0.55", "-117.847, -11.6953, -59.4024, 0.28", "-118.867, -10.8996, -58.0518, 0.55", "-120.108, -9.85712, -56.1836, 0.28", "-120.582, -9.49362, -55.4829, 0.55", "-123.126, -7.88887, -52.2102, 0.28", "-123.988, -7.3886, -51.1183, 0.55", "-126.025, -6.29696, -48.4651, 0.28", "-127.133, -5.72025, -47.0248, 0.55", "-128.045, -5.24812, -45.843, 0.55", "-129.145, -4.69315, -44.4648, 0.28", "-129.749, -4.40879, -43.8581, 0.55", "-131.811, -3.3748, -41.959, 0.28", "-132.882, -2.69332, -40.9356, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-3.22876, -36.5949, -5.70209, 0.55", "-2.78883, -36.6844, -6.57735, 0.55", "-2.31921, -36.6683, -7.44155, 0.55", "-1.67897, -36.5662, -8.4847, 0.55", "-1.12077, -36.4065, -9.3083, 0.55", "2.92453, -34.7214, -14.3923, 0.55", "3.8304, -34.1868, -15.5455, 0.55", "5.14588, -33.2511, -17.2737, 0.55", "6.07232, -32.5409, -18.5015, 0.55", "6.99438, -31.7688, -19.6697, 0.28", "8.47687, -30.4629, -21.3794, 0.55", "10.7879, -28.4259, -23.7802, 0.28", "10.9521, -28.3015, -24.049, 0.55", "11.5941, -27.8731, -26.1105, 0.28", "11.7931, -27.677, -27.5766, 0.55", "11.8614, -27.5797, -29.1907, 0.55", "11.9453, -27.5517, -32.0998, 0.55", "12.1262, -27.5362, -37.8096, 0.55", "12.316, -27.564, -41.6425, 0.55", "12.4169, -27.5845, -42.9635, 0.55", "13.2837, -27.6463, -51.6236, 0.55", "13.6166, -27.6268, -53.9556, 0.55", "13.9017, -27.6138, -55.2494, 0.55", "14.8308, -27.6528, -58.2094, 0.55", "17.4832, -28.1063, -65.1941, 0.55", "18.2799, -28.3063, -67.0477, 0.28", "18.8147, -28.4677, -68.0702, 0.55", "19.6374, -28.7733, -69.5732, 0.28", "20.0232, -28.9653, -70.1674, 0.55", "21.5841, -29.8292, -71.6112, 0.28", "23.04, -31.0199, -71.8934, 0.55", "23.9194, -31.8694, -72.0045, 0.28", "24.7346, -32.8086, -72.0046, 0.55", "25.4536, -33.8327, -71.9402, 0.28", "25.7634, -34.3601, -71.9252, 0.55", "26.485, -35.7429, -71.8281, 0.28", "26.6663, -36.1543, -71.8647, 0.55", "27.6887, -38.5092, -72.2098, 0.28", "28.1861, -39.5941, -72.5154, 0.55", "29.3221, -41.9022, -73.4419, 0.28", "29.7724, -42.7487, -73.8836, 0.55", "31.3569, -45.5207, -75.518, 0.28", "31.7452, -46.1936, -75.9458, 0.55", "32.9078, -48.3236, -77.3781, 0.28", "33.1517, -48.8245, -77.6717, 0.55", "33.7507, -50.1498, -78.4327, 0.28", "34.1015, -50.9163, -78.9527, 0.55", "34.4702, -51.6665, -79.528, 0.55", "35.2073, -53.1636, -80.664, 0.28", "35.7484, -54.0843, -81.4855, 0.55", "37.5509, -56.3557, -84.1259, 0.28", "38.2646, -57.0832, -85.1917, 0.55", "38.771, -57.5423, -85.9145, 0.28", "39.2983, -57.9577, -86.6359, 0.55", "40.9688, -59.1116, -88.8191, 0.28", "42.2508, -60.0096, -90.4309, 0.55", "44.502, -61.7383, -92.9811, 0.28", "45.2135, -62.2758, -93.7797, 0.55", "46.6311, -63.2641, -95.1719, 0.28", "47.1179, -63.5892, -95.5921, 0.55", "47.9543, -64.1129, -96.1164, 0.28", "48.7106, -64.5553, -96.5115, 0.55", "50.8171, -65.6523, -97.3607, 0.28", "53.2486, -66.8123, -98.2923, 0.28", "54.5002, -67.3462, -98.6746, 0.28", "55.7503, -67.8429, -99.1349, 0.55", "57.5807, -68.4837, -99.8129, 0.28", "58.399, -68.7571, -100.097, 0.83", "60.4995, -69.4842, -100.742, 0.28", "61.4001, -69.8185, -101.073, 0.55", "65.3142, -71.4326, -102.715, 0.28", "67.2373, -72.2581, -103.695, 0.28", "68.6152, -72.8551, -104.502, 0.55", "69.3949, -73.2177, -105.066, 0.55", "71.4178, -74.2051, -106.738, 0.28", "73.2801, -75.2207, -108.387, 0.55", "74.9717, -76.2052, -109.89, 0.28", "76.4752, -77.1179, -111.339, 0.55", "77.7218, -77.8553, -112.528, 0.28", "78.766, -78.3764, -113.438, 0.55", "81.3335, -79.4766, -115.504, 0.28", "82.6516, -80.0339, -116.493, 0.55", "84.6525, -80.8792, -117.901, 0.28", "86.3048, -81.521, -119.012, 0.55", "90.183, -82.8403, -121.614, 0.28", "91.7385, -83.278, -122.783, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-8.46048, -121.753, 83.5176, 0.55", "-8.87639, -130.631, 87.4226, 0.55", "-9.19895, -140.211, 88.9675, 0.55", "-9.59924, -149.445, 91.9348, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-8.46048, -121.753, 83.5176, 0.55", "-7.8421, -126.501, 86.6835, 0.55", "-7.77049, -130.534, 90.7681, 0.55", "-7.45517, -133.657, 95.5744, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-12.3701, -124.509, 85.5182, 0.55", "-12.8279, -134.142, 90.4736, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-12.3701, -124.509, 85.5182, 0.55", "-14.278, -133.301, 91.2938, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "3.24677, -98.9002, 5.42664, 0.83", "3.99238, -102.343, 5.51873, 0.83", "4.84334, -105.252, 5.70583, 0.83", "5.6892, -108.143, 5.89181, 0.83", "6.4925, -110.889, 6.06843, 0.83", "7.73044, -115.12, 6.34061, 0.83", "8.95944, -119.321, 6.61082, 0.83", "10.1447, -122.112, 6.97236, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "3.24677, -98.9002, 5.42664, 0.55", "3.97644, -100.286, 4.94561, 0.55", "4.43675, -101.367, 4.42676, 0.55", "4.70586, -102.164, 3.99916, 0.55", "4.84462, -103.091, 3.47857, 0.83", "4.87694, -104.139, 2.82077, 0.55", "4.90855, -105.165, 2.17735, 0.83", "4.83578, -106.273, 1.42941, 0.55", "4.75991, -106.916, 0.947135, 0.83", "4.35443, -108.991, -0.699066, 0.55", "3.86984, -110.612, -2.00209, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "16.9462, -103.197, 48.9412, 0.55", "17.3419, -110.468, 55.7246, 0.55", "16.9388, -116.677, 63.4919, 0.55", "16.3547, -121.902, 71.9422, 0.55", "15.329, -125.908, 80.9947, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "16.9462, -103.197, 48.9412, 0.55", "19.3755, -110.489, 56.1158, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "10.1447, -122.112, 6.97236, 0.55", "10.5661, -124.291, 7.38747, 0.55", "11.2066, -127.076, 7.90356, 0.55", "11.8007, -129.707, 8.38085, 0.55", "12.1872, -131.575, 8.71859, 0.55", "12.8134, -134.907, 9.31708, 0.55", "14.4792, -144.289, 10.7371, 0.55", "14.9875, -147.482, 11.0726, 0.55", "15.264, -149.736, 11.2306, 0.55", "15.434, -152.315, 11.2639, 0.55", "15.4079, -154.308, 11.2036, 0.55", "15.2857, -158.979, 10.8345, 0.55", "15.1117, -162.516, 10.6465, 0.55", "15.0896, -164.842, 10.518, 0.55", "15.2572, -170.869, 10.3961, 0.55", "15.4925, -174.918, 10.4472, 0.55", "16.0386, -180.136, 10.6787, 0.55", "17.0595, -186.058, 11.1691, 0.55", "18.0421, -190.023, 11.5128, 0.55", "18.7066, -192.37, 11.7115, 0.55", "19.2893, -194.531, 11.9217, 0.55", "19.9565, -197.272, 12.0713, 0.55", "21.1705, -203.878, 12.2125, 0.55", "21.6209, -206.442, 12.141, 0.55", "22.0651, -209.293, 12.1018, 0.55", "22.6932, -213.571, 12.0562, 0.55", "23.1051, -216.848, 12.1589, 0.55", "23.3528, -219.947, 12.3706, 0.55", "23.507, -222.892, 12.6751, 0.55", "23.6591, -225.762, 13.037, 0.55", "23.7593, -227.806, 13.272, 0.55", "23.846, -231.152, 13.5668, 0.55", "23.6756, -235.168, 13.77, 0.55", "23.5101, -237.125, 13.7356, 0.55", "23.275, -238.845, 13.6079, 0.55", "22.7751, -242.105, 13.128, 0.55", "22.4003, -244.17, 12.8036, 0.55", "22.0312, -246.717, 12.4426, 0.55", "21.8136, -248.501, 12.3103, 0.55", "21.3367, -253.131, 12.1472, 0.55", "21.1196, -256.589, 12.2503, 0.55", "21.0697, -261.93, 12.7603, 0.55", "21.3392, -265.379, 13.2398, 0.55", "21.6964, -268.997, 13.8404, 0.28", "21.864, -270.447, 14.1485, 0.28", "22.5106, -273.964, 15.115, 0.28", "23.2912, -277.207, 16.1979, 0.28", "24.9234, -281.521, 17.6047, 0.28", "27.4645, -291.348, 18.1876, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "10.1447, -122.112, 6.97236, 0.55", "11.6754, -122.717, 6.94225, 0.55", "14.8541, -124.213, 7.10523, 0.55", "17.6122, -125.661, 7.35973, 0.28", "20.5836, -127.295, 7.71833, 0.55", "22.4188, -128.323, 8.162, 0.28", "25.6484, -130.161, 9.20283, 0.55", "27.0479, -131.105, 9.99481, 0.28", "27.5669, -131.443, 10.3641, 0.28", "28.4714, -131.93, 11.0082, 0.55", "31.9943, -133.547, 13.2501, 0.28", "33.4936, -134.183, 14.1449, 0.55", "37.9976, -136.055, 16.3536, 0.28", "40.4375, -136.992, 17.3808, 0.28", "43.4632, -138.199, 18.4908, 0.55", "47.9283, -140.082, 19.7703, 0.28", "48.5264, -140.334, 19.8811, 0.55", "51.4486, -141.575, 20.2353, 0.28", "51.7097, -141.692, 20.2396, 0.55", "54.0073, -143.019, 20.3592, 0.28", "55.1058, -143.733, 20.4849, 0.55", "64.1838, -149.055, 21.573, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "15.329, -125.908, 80.9947, 0.55", "19.2681, -131.071, 92.873, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "15.329, -125.908, 80.9947, 0.55", "12.9136, -134.284, 89.6259, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_BP_b4ffa23859_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.01411, 8.21121, 2.82634, 0.83 ) }
    dend_43 { pt3dadd( -5.75673, 10.337, 3.23996, 1.11 ) }
    dend_43 { pt3dadd( -7.37379, 11.5895, 3.45512, 0.83 ) }
    dend_43 { pt3dadd( -8.94483, 12.7958, 3.6479, 0.83 ) }
    dend_43 { pt3dadd( -9.875, 13.4837, 3.75354, 1.11 ) }
    dend_43 { pt3dadd( -12.7879, 15.6332, 4.09211, 1.11 ) }
    dend_43 { pt3dadd( -17.9979, 19.3132, 4.69061, 0.83 ) }
    dend_43 { pt3dadd( -19.8748, 20.5884, 4.88825, 0.83 ) }
    dend_43 { pt3dadd( -21.3612, 21.5682, 5.01101, 0.83 ) }
    dend_43 { pt3dadd( -22.8106, 22.5393, 5.11727, 0.83 ) }
    dend_43 { pt3dadd( -23.9905, 23.3397, 5.1746, 0.55 ) }
    dend_43 { pt3dadd( -24.8773, 23.8816, 5.23279, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.81703, 6.33331, -6.28762, 0.55 ) }
    dend_28 { pt3dadd( 7.80102, 6.97881, -6.954, 0.55 ) }
    dend_28 { pt3dadd( 9.53253, 7.14176, -7.83576, 0.83 ) }
    dend_28 { pt3dadd( 12.2729, 7.31517, -9.4737, 0.55 ) }
    dend_28 { pt3dadd( 13.5958, 7.39888, -10.2643, 1.38 ) }
    dend_28 { pt3dadd( 16.8484, 7.60469, -12.2084, 0.55 ) }
    dend_28 { pt3dadd( 18.2337, 7.535, -13.136, 0.83 ) }
    dend_28 { pt3dadd( 25.3997, 6.25681, -18.3478, 0.55 ) }
    dend_28 { pt3dadd( 26.093, 6.08493, -18.9211, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.686532, -10.6997, 3.30877, 1.11 ) }
    dend_1 { pt3dadd( -0.739444, -15.3682, 4.98241, 1.11 ) }
    dend_1 { pt3dadd( -0.760993, -17.2695, 5.66402, 0.83 ) }
    dend_1 { pt3dadd( -0.789623, -19.7955, 6.56958, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.986821, 10.3527, -1.41678, 1.11 ) }
    dend_0 { pt3dadd( 1.17652, 12.7805, -1.4068, 1.11 ) }
    dend_0 { pt3dadd( 1.49383, 16.741, -1.24538, 1.38 ) }
    dend_0 { pt3dadd( 1.51579, 16.9614, -1.23294, 1.38 ) }
    dend_0 { pt3dadd( 1.95445, 19.6826, -1.07226, 0.83 ) }
    dend_0 { pt3dadd( 2.55407, 22.5549, -0.763744, 0.83 ) }
    dend_0 { pt3dadd( 3.55734, 25.7854, -0.0584817, 0.83 ) }
    dend_0 { pt3dadd( 4.10906, 27.0042, 0.340979, 0.83 ) }
    dend_0 { pt3dadd( 4.63935, 27.8819, 0.70483, 1.11 ) }
    dend_0 { pt3dadd( 6.15735, 30.0116, 1.62356, 0.55 ) }
    dend_0 { pt3dadd( 7.91911, 32.2278, 2.72604, 0.83 ) }
    dend_0 { pt3dadd( 10.1765, 34.4909, 3.94158, 0.55 ) }
    dend_0 { pt3dadd( 11.3097, 35.4238, 4.47714, 0.83 ) }
    dend_0 { pt3dadd( 12.9068, 36.6847, 5.33482, 0.55 ) }
    dend_0 { pt3dadd( 14.9028, 38.2896, 6.51841, 0.55 ) }
    dend_0 { pt3dadd( 17.7214, 40.7114, 8.3584, 0.55 ) }
    dend_0 { pt3dadd( 20.8316, 43.4838, 10.391, 0.55 ) }
    dend_0 { pt3dadd( 22.832, 45.2832, 11.9525, 0.55 ) }
    dend_0 { pt3dadd( 25.3301, 47.559, 14.2006, 0.55 ) }
    dend_0 { pt3dadd( 25.8551, 48.0144, 14.7161, 0.83 ) }
    dend_0 { pt3dadd( 27.255, 49.2171, 16.1808, 0.55 ) }
    dend_0 { pt3dadd( 28.4185, 50.1521, 17.3217, 0.83 ) }
    dend_0 { pt3dadd( 31.123, 52.7247, 20.037, 0.55 ) }
    dend_0 { pt3dadd( 32.1069, 53.6648, 20.8047, 0.83 ) }
    dend_0 { pt3dadd( 32.9916, 54.3521, 21.2956, 0.55 ) }
    dend_0 { pt3dadd( 33.8484, 54.9404, 21.648, 0.83 ) }
    dend_0 { pt3dadd( 35.7164, 56.0245, 22.2432, 0.83 ) }
    dend_0 { pt3dadd( 38.1609, 57.5044, 22.8242, 0.83 ) }
    dend_0 { pt3dadd( 39.6426, 58.488, 23.0273, 0.55 ) }
    dend_0 { pt3dadd( 40.7769, 59.3445, 23.1885, 0.55 ) }
    dend_0 { pt3dadd( 43.7434, 61.5563, 23.5684, 0.83 ) }
    dend_0 { pt3dadd( 45.6491, 62.9747, 23.7399, 0.55 ) }
    dend_0 { pt3dadd( 48.5243, 65.0498, 23.8872, 0.55 ) }
    dend_0 { pt3dadd( 51.139, 66.7823, 23.92, 0.55 ) }
    dend_0 { pt3dadd( 53.4665, 68.246, 23.888, 0.55 ) }
    dend_0 { pt3dadd( 56.3849, 69.9542, 23.7171, 0.55 ) }
    dend_0 { pt3dadd( 58.1533, 70.7791, 23.5552, 0.55 ) }
    dend_0 { pt3dadd( 59.3365, 71.2362, 23.302, 0.55 ) }
    dend_0 { pt3dadd( 60.8796, 71.5546, 22.8319, 0.55 ) }
    dend_0 { pt3dadd( 63.1426, 71.6464, 21.9369, 0.55 ) }
    dend_0 { pt3dadd( 64.5394, 71.5171, 21.3219, 0.55 ) }
    dend_0 { pt3dadd( 66.5995, 71.2686, 20.573, 0.55 ) }
    dend_0 { pt3dadd( 70.5792, 70.9231, 19.5102, 0.55 ) }
    dend_0 { pt3dadd( 73.739, 70.799, 18.9041, 0.55 ) }
    dend_0 { pt3dadd( 77.1218, 70.8285, 18.464, 0.55 ) }
    dend_0 { pt3dadd( 79.3175, 70.921, 18.3534, 0.55 ) }
    dend_0 { pt3dadd( 85.0914, 71.6731, 18.4384, 0.55 ) }
    dend_0 { pt3dadd( 88.5517, 72.3752, 18.7406, 0.55 ) }
    dend_0 { pt3dadd( 91.1849, 73.0653, 19.2021, 0.55 ) }
    dend_0 { pt3dadd( 92.8019, 73.7388, 19.5424, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 94.6831, 74.7595, 19.9289, 0.55 ) }
    dend_0 { pt3dadd( 97.84, 76.7926, 20.3174, 0.55 ) }
    dend_0 { pt3dadd( 98.5517, 77.2841, 20.3117, 0.55 ) }
    dend_0 { pt3dadd( 100.572, 78.5944, 20.1655, 0.55 ) }
    dend_0 { pt3dadd( 102.434, 80.0006, 20.0249, 0.83 ) }
    dend_0 { pt3dadd( 103.449, 80.7813, 19.9326, 0.55 ) }
    dend_0 { pt3dadd( 104.966, 82.1293, 19.7362, 0.83 ) }
    dend_0 { pt3dadd( 113.245, 89.3179, 20.7521, 0.83 ) }
    dend_0 { pt3dadd( 120.44, 97.647, 21.1062, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -24.8773, 23.8816, 5.23279, 0.55 ) }
    dend_55 { pt3dadd( -26.5501, 24.7721, 4.3698, 0.55 ) }
    dend_55 { pt3dadd( -28.3692, 25.7403, 3.43137, 0.55 ) }
    dend_55 { pt3dadd( -30.5643, 26.9088, 2.2989, 0.55 ) }
    dend_55 { pt3dadd( -32.377, 27.8737, 1.36379, 0.83 ) }
    dend_55 { pt3dadd( -33.8959, 28.6822, 0.580169, 0.55 ) }
    dend_55 { pt3dadd( -36.7153, 30.183, -0.87435, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -24.8773, 23.8816, 5.23279, 0.55 ) }
    dend_44 { pt3dadd( -27.4034, 24.2848, 5.08758, 0.55 ) }
    dend_44 { pt3dadd( -30.07, 24.6511, 5.20365, 0.55 ) }
    dend_44 { pt3dadd( -33.0882, 25.0672, 5.40906, 0.55 ) }
    dend_44 { pt3dadd( -37.4285, 25.6534, 6.1104, 0.55 ) }
    dend_44 { pt3dadd( -41.039, 26.0576, 6.96505, 0.55 ) }
    dend_44 { pt3dadd( -44.8123, 26.4351, 8.02972, 0.55 ) }
    dend_44 { pt3dadd( -48.4246, 26.5795, 9.47804, 0.55 ) }
    dend_44 { pt3dadd( -51.5046, 26.4164, 11.0584, 0.55 ) }
    dend_44 { pt3dadd( -55.3048, 25.9668, 13.4767, 0.55 ) }
    dend_44 { pt3dadd( -56.9363, 25.6627, 14.78, 0.55 ) }
    dend_44 { pt3dadd( -58.6921, 25.3205, 16.2702, 0.55 ) }
    dend_44 { pt3dadd( -61.7954, 24.4547, 18.768, 0.55 ) }
    dend_44 { pt3dadd( -63.4678, 23.978, 19.8196, 0.55 ) }
    dend_44 { pt3dadd( -65.2192, 23.4213, 20.9146, 0.55 ) }
    dend_44 { pt3dadd( -67.3192, 22.77, 21.9924, 0.55 ) }
    dend_44 { pt3dadd( -69.6074, 22.1067, 23.0946, 0.55 ) }
    dend_44 { pt3dadd( -72.8784, 21.146, 24.5942, 0.55 ) }
    dend_44 { pt3dadd( -77.2842, 20.135, 26.1662, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 26.093, 6.08493, -18.9211, 0.55 ) }
    dend_34 { pt3dadd( 30.8019, 7.60686, -19.9647, 0.55 ) }
    dend_34 { pt3dadd( 33.5393, 8.28955, -20.941, 0.55 ) }
    dend_34 { pt3dadd( 36.2516, 8.83783, -21.9338, 0.55 ) }
    dend_34 { pt3dadd( 38.1105, 9.13823, -22.6053, 0.55 ) }
    dend_34 { pt3dadd( 40.8315, 9.51599, -23.5605, 0.55 ) }
    dend_34 { pt3dadd( 46.4896, 10.1758, -25.7093, 0.55 ) }
    dend_34 { pt3dadd( 52.9234, 10.848, -28.5709, 0.55 ) }
    dend_34 { pt3dadd( 56.0642, 10.962, -30.1575, 0.55 ) }
    dend_34 { pt3dadd( 57.7525, 10.973, -31.1132, 0.55 ) }
    dend_34 { pt3dadd( 59.605, 10.9877, -32.2359, 0.55 ) }
    dend_34 { pt3dadd( 62.9175, 10.9242, -34.219, 0.55 ) }
    dend_34 { pt3dadd( 64.1269, 10.8284, -34.9728, 0.55 ) }
    dend_34 { pt3dadd( 69.248, 10.5153, -38.5616, 0.55 ) }
    dend_34 { pt3dadd( 72.8758, 10.3283, -41.3695, 0.55 ) }
    dend_34 { pt3dadd( 74.9629, 10.2557, -43.0457, 0.55 ) }
    dend_34 { pt3dadd( 77.0459, 10.1653, -44.7144, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 26.093, 6.08493, -18.9211, 0.83 ) }
    dend_29 { pt3dadd( 27.973, 7.58451, -19.1078, 0.83 ) }
    dend_29 { pt3dadd( 29.0506, 8.43175, -19.2674, 0.55 ) }
    dend_29 { pt3dadd( 30.6398, 9.69205, -19.6548, 0.83 ) }
    dend_29 { pt3dadd( 31.7064, 10.5629, -19.9551, 0.55 ) }
    dend_29 { pt3dadd( 33.1708, 11.81, -20.3533, 0.83 ) }
    dend_29 { pt3dadd( 34.9233, 13.3585, -20.768, 0.55 ) }
    dend_29 { pt3dadd( 35.8119, 14.0737, -20.9245, 0.55 ) }
    dend_29 { pt3dadd( 37.8865, 15.4474, -21.0769, 0.83 ) }
    dend_29 { pt3dadd( 39.7865, 16.498, -20.9121, 0.55 ) }
    dend_29 { pt3dadd( 40.8442, 17.0916, -20.7103, 0.83 ) }
    dend_29 { pt3dadd( 42.417, 18.0488, -20.2365, 0.55 ) }
    dend_29 { pt3dadd( 44.6536, 19.5184, -19.2532, 0.55 ) }
    dend_29 { pt3dadd( 47.7721, 21.4162, -17.6849, 0.55 ) }
    dend_29 { pt3dadd( 50.748, 23.1486, -15.9474, 0.55 ) }
    dend_29 { pt3dadd( 53.1067, 24.5019, -14.5205, 0.55 ) }
    dend_29 { pt3dadd( 56.9914, 26.7559, -12.1495, 0.55 ) }
    dend_29 { pt3dadd( 59.8186, 28.5038, -10.3624, 0.55 ) }
    dend_29 { pt3dadd( 61.5019, 29.7244, -9.24193, 0.55 ) }
    dend_29 { pt3dadd( 64.555, 32.3242, -7.20689, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.789623, -19.7955, 6.56958, 0.83 ) }
    dend_11 { pt3dadd( -0.922226, -22.4075, 6.45792, 0.83 ) }
    dend_11 { pt3dadd( -1.05142, -24.9524, 6.34913, 0.83 ) }
    dend_11 { pt3dadd( -1.19567, -27.7938, 6.22767, 0.83 ) }
    dend_11 { pt3dadd( -1.27099, -29.2776, 6.16425, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.789623, -19.7955, 6.56958, 0.55 ) }
    dend_2 { pt3dadd( -0.331523, -21.0646, 7.45539, 0.55 ) }
    dend_2 { pt3dadd( 0.0732933, -22.619, 8.60741, 0.55 ) }
    dend_2 { pt3dadd( 0.290949, -24.6571, 10.1978, 0.55 ) }
    dend_2 { pt3dadd( 0.319699, -25.4494, 10.8373, 0.83 ) }
    dend_2 { pt3dadd( 0.20578, -27.4722, 12.7008, 0.55 ) }
    dend_2 { pt3dadd( 0.060782, -28.517, 13.6828, 0.55 ) }
    dend_2 { pt3dadd( -0.264762, -30.5488, 15.6791, 0.83 ) }
    dend_2 { pt3dadd( -0.594366, -32.0579, 17.2574, 0.55 ) }
    dend_2 { pt3dadd( -0.977423, -33.303, 18.5397, 0.55 ) }
    dend_2 { pt3dadd( -1.75611, -35.6613, 20.925, 0.55 ) }
    dend_2 { pt3dadd( -2.37473, -37.5409, 22.804, 0.55 ) }
    dend_2 { pt3dadd( -2.84001, -39.0476, 24.3317, 0.55 ) }
    dend_2 { pt3dadd( -3.2452, -40.6471, 25.9032, 0.28 ) }
    dend_2 { pt3dadd( -3.35757, -41.3132, 26.5323, 0.55 ) }
    dend_2 { pt3dadd( -3.53271, -42.5434, 27.6241, 0.28 ) }
    dend_2 { pt3dadd( -3.54225, -44.4631, 29.0295, 0.55 ) }
    dend_2 { pt3dadd( -5.12172, -50.854, 34.0474, 0.55 ) }
    dend_2 { pt3dadd( -6.87016, -56.7599, 39.5774, 0.55 ) }
    dend_2 { pt3dadd( -8.25418, -61.6138, 46.138, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -36.7153, 30.183, -0.87435, 0.55 ) }
    dend_61 { pt3dadd( -39.6811, 30.2881, 0.557997, 0.55 ) }
    dend_61 { pt3dadd( -40.9321, 30.2547, 1.30682, 0.83 ) }
    dend_61 { pt3dadd( -42.3996, 30.1302, 2.36805, 0.55 ) }
    dend_61 { pt3dadd( -43.5257, 30.027, 3.27972, 0.83 ) }
    dend_61 { pt3dadd( -46.4787, 29.8605, 5.65065, 0.55 ) }
    dend_61 { pt3dadd( -47.5976, 29.815, 6.5583, 0.28 ) }
    dend_61 { pt3dadd( -49.4687, 29.7476, 8.2268, 0.55 ) }
    dend_61 { pt3dadd( -51.9794, 29.6724, 10.4552, 0.55 ) }
    dend_61 { pt3dadd( -53.883, 29.6222, 12.062, 0.55 ) }
    dend_61 { pt3dadd( -56.4234, 29.5606, 14.1293, 0.28 ) }
    dend_61 { pt3dadd( -57.0813, 29.5552, 14.589, 0.55 ) }
    dend_61 { pt3dadd( -58.4415, 29.5635, 15.4913, 0.28 ) }
    dend_61 { pt3dadd( -59.3632, 29.599, 16.0208, 0.55 ) }
    dend_61 { pt3dadd( -61.2393, 29.6706, 16.9403, 0.28 ) }
    dend_61 { pt3dadd( -62.3374, 29.6572, 17.4192, 0.55 ) }
    dend_61 { pt3dadd( -64.2715, 29.4931, 18.2699, 0.28 ) }
    dend_61 { pt3dadd( -65.5689, 29.3778, 18.7955, 0.55 ) }
    dend_61 { pt3dadd( -73.5663, 27.7922, 25.4352, 0.55 ) }
    dend_61 { pt3dadd( -80.883, 25.1968, 32.5266, 0.55 ) }
    dend_61 { pt3dadd( -87.8964, 21.6294, 39.5011, 0.55 ) }
    dend_61 { pt3dadd( -94.8164, 16.9096, 45.8569, 0.55 ) }
    dend_61 { pt3dadd( -100.642, 12.5455, 53.4442, 0.55 ) }
    dend_61 { pt3dadd( -107.232, 8.57857, 60.6134, 0.55 ) }
    dend_61 { pt3dadd( -114.006, 6.27016, 68.3166, 0.55 ) }
    dend_61 { pt3dadd( -120.718, 3.15244, 75.7853, 0.55 ) }
    dend_61 { pt3dadd( -127.269, 0.703593, 83.6368, 0.55 ) }
    dend_61 { pt3dadd( -133.35, -1.9121, 91.8064, 0.55 ) }
    dend_61 { pt3dadd( -138.392, -5.70591, 100.217, 0.55 ) }
    dend_61 { pt3dadd( -143.564, -8.55635, 108.916, 0.55 ) }
    dend_61 { pt3dadd( -148.829, -12.4138, 117.16, 0.55 ) }
    dend_61 { pt3dadd( -152.891, -16.7231, 125.849, 0.55 ) }
    dend_61 { pt3dadd( -155.269, -20.3582, 135.424, 0.55 ) }
    dend_61 { pt3dadd( -157.499, -25.8307, 144.121, 0.55 ) }
    dend_61 { pt3dadd( -158.235, -31.4759, 152.961, 0.55 ) }
    dend_61 { pt3dadd( -159.545, -36.7147, 161.983, 0.55 ) }
    dend_61 { pt3dadd( -161.997, -41.2381, 171.153, 0.55 ) }
    dend_61 { pt3dadd( -166.639, -44.1581, 180.124, 0.55 ) }
    dend_61 { pt3dadd( -170.354, -48.2187, 189.083, 0.55 ) }
    dend_61 { pt3dadd( -172.206, -50.5972, 199.157, 0.55 ) }
    dend_61 { pt3dadd( -175.729, -52.2122, 208.931, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -36.7153, 30.183, -0.87435, 0.55 ) }
    dend_56 { pt3dadd( -38.4776, 30.8433, -2.91715, 0.55 ) }
    dend_56 { pt3dadd( -39.8469, 31.5783, -5.20411, 0.55 ) }
    dend_56 { pt3dadd( -41.1327, 32.5111, -7.63442, 0.55 ) }
    dend_56 { pt3dadd( -41.9379, 33.0952, -9.15626, 0.55 ) }
    dend_56 { pt3dadd( -43.4066, 34.1606, -11.9322, 0.83 ) }
    dend_56 { pt3dadd( -44.4811, 34.9401, -13.9632, 0.55 ) }
    dend_56 { pt3dadd( -45.7226, 35.9967, -16.9495, 0.83 ) }
    dend_56 { pt3dadd( -46.1895, 36.7326, -18.6377, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -77.2842, 20.135, 26.1662, 0.28 ) }
    dend_48 { pt3dadd( -78.1069, 18.2443, 26.5687, 0.28 ) }
    dend_48 { pt3dadd( -78.5179, 17.4068, 26.6883, 0.28 ) }
    dend_48 { pt3dadd( -79.0518, 16.2131, 26.8105, 0.55 ) }
    dend_48 { pt3dadd( -79.4865, 15.1686, 26.9203, 0.28 ) }
    dend_48 { pt3dadd( -80.1219, 13.5852, 27.1009, 0.55 ) }
    dend_48 { pt3dadd( -81.8619, 8.96258, 27.6785, 0.28 ) }
    dend_48 { pt3dadd( -82.4397, 7.30547, 27.7594, 0.55 ) }
    dend_48 { pt3dadd( -83.3244, 4.72886, 27.8076, 0.28 ) }
    dend_48 { pt3dadd( -83.8389, 3.1688, 27.7735, 0.55 ) }
    dend_48 { pt3dadd( -84.1978, 2.08604, 27.7284, 0.28 ) }
    dend_48 { pt3dadd( -84.6052, 0.846486, 27.6847, 0.55 ) }
    dend_48 { pt3dadd( -85.805, -3.25052, 27.5989, 0.28 ) }
    dend_48 { pt3dadd( -86.1907, -4.50391, 27.539, 0.55 ) }
    dend_48 { pt3dadd( -86.9041, -6.48486, 27.2986, 0.28 ) }
    dend_48 { pt3dadd( -87.5165, -7.79424, 27.0788, 0.28 ) }
    dend_48 { pt3dadd( -88.0759, -8.68784, 26.9299, 0.55 ) }
    dend_48 { pt3dadd( -90.0251, -11.2036, 26.6268, 0.28 ) }
    dend_48 { pt3dadd( -90.9313, -12.2246, 26.5393, 0.55 ) }
    dend_48 { pt3dadd( -93.1692, -14.5991, 26.2541, 0.28 ) }
    dend_48 { pt3dadd( -95.4178, -16.7321, 26.0041, 0.28 ) }
    dend_48 { pt3dadd( -97.8785, -18.8151, 25.7351, 0.28 ) }
    dend_48 { pt3dadd( -99.0073, -19.6157, 25.6592, 0.55 ) }
    dend_48 { pt3dadd( -104.142, -27.3814, 25.5349, 0.55 ) }
    dend_48 { pt3dadd( -109.624, -34.7337, 27.1393, 0.55 ) }
    dend_48 { pt3dadd( -115.226, -42.1676, 27.3389, 0.55 ) }
    dend_48 { pt3dadd( -121.161, -49.3101, 26.6658, 0.55 ) }
    dend_48 { pt3dadd( -127.363, -56.0701, 25.0787, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -77.2842, 20.135, 26.1662, 0.55 ) }
    dend_45 { pt3dadd( -78.0998, 20.0893, 26.2858, 0.55 ) }
    dend_45 { pt3dadd( -80.3949, 19.932, 26.9208, 0.55 ) }
    dend_45 { pt3dadd( -81.2575, 19.8459, 27.2031, 0.55 ) }
    dend_45 { pt3dadd( -83.2883, 19.5788, 27.8917, 0.55 ) }
    dend_45 { pt3dadd( -86.4129, 19.2157, 28.8031, 0.55 ) }
    dend_45 { pt3dadd( -88.0349, 19.0799, 29.2532, 0.28 ) }
    dend_45 { pt3dadd( -90.5624, 18.8188, 29.8986, 0.55 ) }
    dend_45 { pt3dadd( -92.4425, 18.5936, 30.3065, 0.55 ) }
    dend_45 { pt3dadd( -93.2366, 18.4931, 30.4799, 0.28 ) }
    dend_45 { pt3dadd( -98.0002, 17.8884, 31.5135, 0.55 ) }
    dend_45 { pt3dadd( -100.233, 17.518, 31.8505, 0.28 ) }
    dend_45 { pt3dadd( -103.25, 17.0254, 32.1285, 0.28 ) }
    dend_45 { pt3dadd( -105.851, 16.6543, 32.2212, 0.55 ) }
    dend_45 { pt3dadd( -115.896, 16.4476, 34.9206, 0.55 ) }
    dend_45 { pt3dadd( -125.586, 15.8545, 38.658, 0.55 ) }
    dend_45 { pt3dadd( -134.742, 14.084, 43.2685, 0.55 ) }
    dend_45 { pt3dadd( -143.532, 13.9542, 48.8309, 0.55 ) }
    dend_45 { pt3dadd( -151.007, 13.2474, 56.0318, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -156.927, 12.9067, 64.5791, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 77.0459, 10.1653, -44.7144, 0.55 ) }
    dend_42 { pt3dadd( 81.6896, 11.6494, -48.5007, 0.55 ) }
    dend_42 { pt3dadd( 83.1595, 12.0516, -49.7895, 0.55 ) }
    dend_42 { pt3dadd( 85.0006, 12.4941, -51.3793, 0.55 ) }
    dend_42 { pt3dadd( 88.3431, 13.2637, -54.4613, 0.55 ) }
    dend_42 { pt3dadd( 91.8359, 13.9197, -57.7623, 0.55 ) }
    dend_42 { pt3dadd( 93.5467, 14.1028, -59.3301, 0.83 ) }
    dend_42 { pt3dadd( 94.9579, 14.1531, -60.726, 0.55 ) }
    dend_42 { pt3dadd( 96.0161, 14.1003, -61.8756, 0.83 ) }
    dend_42 { pt3dadd( 98.5761, 13.6086, -64.8173, 0.55 ) }
    dend_42 { pt3dadd( 100.689, 13.0046, -67.2506, 0.55 ) }
    dend_42 { pt3dadd( 103.119, 12.2956, -69.9286, 0.55 ) }
    dend_42 { pt3dadd( 105.823, 11.5834, -72.9672, 0.55 ) }
    dend_42 { pt3dadd( 107.638, 11.0615, -75.0497, 0.55 ) }
    dend_42 { pt3dadd( 109.686, 10.4651, -77.4645, 0.55 ) }
    dend_42 { pt3dadd( 111.455, 10.0104, -79.6766, 0.55 ) }
    dend_42 { pt3dadd( 112.566, 9.82442, -81.219, 0.55 ) }
    dend_42 { pt3dadd( 113.981, 9.49267, -84.3301, 0.55 ) }
    dend_42 { pt3dadd( 114.756, 9.22205, -86.2753, 0.55 ) }
    dend_42 { pt3dadd( 115.432, 8.74236, -88.8593, 0.55 ) }
    dend_42 { pt3dadd( 116.369, 7.79479, -93.2252, 0.55 ) }
    dend_42 { pt3dadd( 116.562, 7.54348, -94.2088, 0.28 ) }
    dend_42 { pt3dadd( 119.053, 4.35657, -106.163, 0.28 ) }
    dend_42 { pt3dadd( 119.889, 3.44758, -109.672, 0.83 ) }
    dend_42 { pt3dadd( 123.171, 0.00634566, -122.107, 0.83 ) }
    dend_42 { pt3dadd( 124.857, -1.82195, -127.876, 0.83 ) }
    dend_42 { pt3dadd( 125.664, -2.65595, -130.208, 0.55 ) }
    dend_42 { pt3dadd( 126.586, -3.47653, -132.479, 0.55 ) }
    dend_42 { pt3dadd( 129.115, -5.0831, -136.677, 0.55 ) }
    dend_42 { pt3dadd( 131.812, -6.52485, -140.358, 0.28 ) }
    dend_42 { pt3dadd( 132.619, -6.77772, -140.562, 0.55 ) }
    dend_42 { pt3dadd( 134.389, -7.19528, -140.379, 0.28 ) }
    dend_42 { pt3dadd( 135.482, -7.37189, -140.109, 0.55 ) }
    dend_42 { pt3dadd( 136.62, -7.56906, -139.73, 0.28 ) }
    dend_42 { pt3dadd( 137.985, -7.73553, -139.213, 0.55 ) }
    dend_42 { pt3dadd( 140.027, -7.88083, -138.662, 0.28 ) }
    dend_42 { pt3dadd( 141.667, -8.04951, -138.272, 0.55 ) }
    dend_42 { pt3dadd( 143.482, -8.11816, -137.989, 0.28 ) }
    dend_42 { pt3dadd( 145.95, -8.20816, -137.823, 0.55 ) }
    dend_42 { pt3dadd( 148.718, -8.24842, -137.806, 0.55 ) }
    dend_42 { pt3dadd( 151.152, -8.25847, -137.955, 0.28 ) }
    dend_42 { pt3dadd( 154.522, -8.24563, -138.347, 0.55 ) }
    dend_42 { pt3dadd( 160.35, -8.07579, -139.652, 0.55 ) }
    dend_42 { pt3dadd( 162.924, -7.87378, -140.544, 0.55 ) }
    dend_42 { pt3dadd( 164.03, -7.74338, -141.047, 0.83 ) }
    dend_42 { pt3dadd( 166.139, -7.48429, -142.201, 0.55 ) }
    dend_42 { pt3dadd( 167.602, -7.24687, -143.095, 0.83 ) }
    dend_42 { pt3dadd( 171.535, -6.50467, -145.549, 0.55 ) }
    dend_42 { pt3dadd( 173.941, -6.2198, -147.105, 0.28 ) }
    dend_42 { pt3dadd( 174.955, -6.16067, -147.645, 0.55 ) }
    dend_42 { pt3dadd( 177.734, -6.25, -148.808, 0.28 ) }
    dend_42 { pt3dadd( 178.709, -6.36966, -149.149, 0.55 ) }
    dend_42 { pt3dadd( 180.718, -6.7352, -149.538, 0.28 ) }
    dend_42 { pt3dadd( 182.765, -7.29783, -149.576, 0.55 ) }
    dend_42 { pt3dadd( 186.899, -8.63915, -148.922, 0.28 ) }
    dend_42 { pt3dadd( 188.805, -9.33689, -148.416, 0.55 ) }
    dend_42 { pt3dadd( 191.642, -10.5337, -147.508, 0.28 ) }
    dend_42 { pt3dadd( 195.225, -12.0286, -146.233, 0.55 ) }
    dend_42 { pt3dadd( 197.816, -13.0732, -145.271, 0.55 ) }
    dend_42 { pt3dadd( 202.299, -14.7404, -143.533, 0.28 ) }
    dend_42 { pt3dadd( 204.138, -15.3431, -142.973, 0.55 ) }
    dend_42 { pt3dadd( 207.308, -16.2092, -142.361, 0.28 ) }
    dend_42 { pt3dadd( 210.464, -16.8355, -141.978, 0.55 ) }
    dend_42 { pt3dadd( 212.192, -16.9884, -142.013, 0.28 ) }
    dend_42 { pt3dadd( 213.75, -16.9188, -142.173, 0.55 ) }
    dend_42 { pt3dadd( 218.147, -16.4685, -143.049, 0.28 ) }
    dend_42 { pt3dadd( 221.283, -15.9294, -143.731, 0.28 ) }
    dend_42 { pt3dadd( 224.005, -15.2614, -144.368, 0.55 ) }
    dend_42 { pt3dadd( 227.01, -14.4428, -145.229, 0.28 ) }
    dend_42 { pt3dadd( 227.766, -14.188, -145.421, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 77.0459, 10.1653, -44.7144, 0.55 ) }
    dend_35 { pt3dadd( 77.7037, 8.24906, -45.9776, 0.55 ) }
    dend_35 { pt3dadd( 78.1129, 6.61447, -46.9319, 0.28 ) }
    dend_35 { pt3dadd( 78.4844, 5.11557, -47.6774, 0.55 ) }
    dend_35 { pt3dadd( 79.4356, 1.95159, -49.2868, 0.28 ) }
    dend_35 { pt3dadd( 79.4904, 1.75231, -49.4165, 0.55 ) }
    dend_35 { pt3dadd( 79.8075, 0.711543, -50.1825, 0.28 ) }
    dend_35 { pt3dadd( 79.9922, -0.154205, -50.9552, 0.55 ) }
    dend_35 { pt3dadd( 80.1348, -1.06091, -51.8663, 0.28 ) }
    dend_35 { pt3dadd( 80.2939, -2.29988, -53.1669, 0.55 ) }
    dend_35 { pt3dadd( 80.6905, -5.41177, -56.3737, 0.55 ) }
    dend_35 { pt3dadd( 81.0203, -8.25009, -59.3475, 0.55 ) }
    dend_35 { pt3dadd( 81.2614, -10.5204, -61.7276, 0.55 ) }
    dend_35 { pt3dadd( 81.4571, -12.7557, -64.0276, 0.55 ) }
    dend_35 { pt3dadd( 81.5055, -13.3336, -64.5972, 0.28 ) }
    dend_35 { pt3dadd( 81.574, -13.9501, -65.154, 0.55 ) }
    dend_35 { pt3dadd( 81.7471, -14.7989, -65.8455, 0.28 ) }
    dend_35 { pt3dadd( 82.2101, -16.31, -66.9436, 0.55 ) }
    dend_35 { pt3dadd( 83.3386, -19.1898, -68.5811, 0.55 ) }
    dend_35 { pt3dadd( 83.9572, -20.7388, -69.3206, 0.28 ) }
    dend_35 { pt3dadd( 84.4951, -22.3197, -70.1429, 0.55 ) }
    dend_35 { pt3dadd( 85.0873, -24.5452, -71.3796, 0.28 ) }
    dend_35 { pt3dadd( 85.4513, -26.3495, -72.4208, 0.55 ) }
    dend_35 { pt3dadd( 85.8815, -29.0557, -73.9836, 0.28 ) }
    dend_35 { pt3dadd( 86.3456, -31.8551, -75.5142, 0.55 ) }
    dend_35 { pt3dadd( 86.9667, -35.9232, -77.7725, 0.28 ) }
    dend_35 { pt3dadd( 87.2511, -38.0952, -78.9836, 0.55 ) }
    dend_35 { pt3dadd( 87.5072, -40.3191, -80.2748, 0.28 ) }
    dend_35 { pt3dadd( 87.7142, -42.2778, -81.5326, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 88.0588, -44.7204, -83.3147, 0.55 ) }
    dend_35 { pt3dadd( 88.5321, -46.9737, -84.9094, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 64.555, 32.3242, -7.20689, 0.55 ) }
    dend_31 { pt3dadd( 66.7859, 32.2716, -6.81806, 0.55 ) }
    dend_31 { pt3dadd( 68.4112, 32.1724, -6.68852, 0.55 ) }
    dend_31 { pt3dadd( 71.965, 31.9156, -6.58966, 0.55 ) }
    dend_31 { pt3dadd( 73.5597, 31.7681, -6.68684, 0.55 ) }
    dend_31 { pt3dadd( 75.2925, 31.6444, -6.88036, 0.55 ) }
    dend_31 { pt3dadd( 77.6076, 31.5198, -7.30424, 0.55 ) }
    dend_31 { pt3dadd( 80.0449, 31.3247, -7.9847, 0.55 ) }
    dend_31 { pt3dadd( 81.3187, 31.2063, -8.48901, 0.55 ) }
    dend_31 { pt3dadd( 83.8902, 30.9665, -9.871, 0.55 ) }
    dend_31 { pt3dadd( 85.0717, 30.8663, -10.5457, 0.55 ) }
    dend_31 { pt3dadd( 87.8416, 30.5776, -12.2005, 0.55 ) }
    dend_31 { pt3dadd( 89.7255, 30.3049, -13.3066, 0.55 ) }
    dend_31 { pt3dadd( 91.1161, 30.0949, -14.0565, 0.83 ) }
    dend_31 { pt3dadd( 93.3469, 29.6753, -15.2301, 0.55 ) }
    dend_31 { pt3dadd( 95.546, 29.1559, -16.2951, 0.83 ) }
    dend_31 { pt3dadd( 97.4233, 28.6283, -17.1329, 0.55 ) }
    dend_31 { pt3dadd( 99.0963, 28.1828, -17.7906, 0.55 ) }
    dend_31 { pt3dadd( 100.047, 27.9708, -18.1116, 0.83 ) }
    dend_31 { pt3dadd( 102.271, 27.4824, -18.7435, 0.28 ) }
    dend_31 { pt3dadd( 103.376, 27.2849, -18.987, 0.28 ) }
    dend_31 { pt3dadd( 104.449, 27.0261, -19.2789, 0.28 ) }
    dend_31 { pt3dadd( 105.606, 26.7774, -19.5991, 0.28 ) }
    dend_31 { pt3dadd( 107.452, 26.4143, -20.1492, 0.28 ) }
    dend_31 { pt3dadd( 108.195, 26.2774, -20.3482, 0.55 ) }
    dend_31 { pt3dadd( 109.979, 25.9671, -20.65, 0.55 ) }
    dend_31 { pt3dadd( 113.202, 25.3768, -21.0323, 0.55 ) }
    dend_31 { pt3dadd( 114.098, 25.1898, -21.0996, 0.55 ) }
    dend_31 { pt3dadd( 114.903, 24.9968, -21.1262, 0.83 ) }
    dend_31 { pt3dadd( 116.653, 24.6299, -21.0443, 0.55 ) }
    dend_31 { pt3dadd( 118.175, 24.3138, -20.9491, 0.55 ) }
    dend_31 { pt3dadd( 119.613, 24.0211, -20.8526, 0.55 ) }
    dend_31 { pt3dadd( 120.727, 23.7755, -20.809, 0.55 ) }
    dend_31 { pt3dadd( 122.499, 23.2652, -20.827, 0.55 ) }
    dend_31 { pt3dadd( 124.597, 22.4838, -20.9647, 0.55 ) }
    dend_31 { pt3dadd( 127.876, 20.9119, -21.4087, 0.55 ) }
    dend_31 { pt3dadd( 129.692, 19.7912, -21.7686, 0.55 ) }
    dend_31 { pt3dadd( 131.283, 18.56, -22.1622, 0.28 ) }
    dend_31 { pt3dadd( 131.765, 18.0931, -22.308, 0.55 ) }
    dend_31 { pt3dadd( 132.851, 16.7567, -22.6888, 0.28 ) }
    dend_31 { pt3dadd( 133.812, 15.2297, -23.0696, 0.55 ) }
    dend_31 { pt3dadd( 134.76, 13.2955, -23.3714, 0.55 ) }
    dend_31 { pt3dadd( 135.401, 12.0255, -23.5076, 0.28 ) }
    dend_31 { pt3dadd( 135.636, 11.5776, -23.5333, 0.55 ) }
    dend_31 { pt3dadd( 136.241, 10.4672, -23.5823, 0.28 ) }
    dend_31 { pt3dadd( 137.063, 9.02607, -23.6114, 0.55 ) }
    dend_31 { pt3dadd( 139.187, 5.56893, -23.598, 0.55 ) }
    dend_31 { pt3dadd( 140.291, 3.83011, -23.5544, 0.55 ) }
    dend_31 { pt3dadd( 141.315, 2.23782, -23.5, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 64.555, 32.3242, -7.20689, 0.55 ) }
    dend_30 { pt3dadd( 66.7263, 33.5832, -5.27274, 0.55 ) }
    dend_30 { pt3dadd( 67.4294, 33.9719, -4.69374, 0.55 ) }
    dend_30 { pt3dadd( 70.0879, 35.2472, -2.61874, 0.55 ) }
    dend_30 { pt3dadd( 73.0396, 36.7474, -0.273656, 0.55 ) }
    dend_30 { pt3dadd( 76.8077, 38.6927, 2.84359, 0.55 ) }
    dend_30 { pt3dadd( 77.8495, 39.2291, 3.69666, 0.55 ) }
    dend_30 { pt3dadd( 79.7333, 40.1079, 5.23042, 0.55 ) }
    dend_30 { pt3dadd( 81.8033, 41.0981, 6.81236, 0.55 ) }
    dend_30 { pt3dadd( 84.2162, 42.2877, 8.5137, 0.55 ) }
    dend_30 { pt3dadd( 86.4834, 43.4457, 10.1154, 0.55 ) }
    dend_30 { pt3dadd( 87.7272, 44.1238, 10.914, 0.55 ) }
    dend_30 { pt3dadd( 89.1809, 44.9642, 11.8355, 0.55 ) }
    dend_30 { pt3dadd( 90.9758, 46.0498, 12.9238, 0.83 ) }
    dend_30 { pt3dadd( 93.966, 47.7248, 14.3755, 0.55 ) }
    dend_30 { pt3dadd( 95.9737, 48.7219, 15.2602, 0.83 ) }
    dend_30 { pt3dadd( 98.7963, 49.9435, 16.4277, 0.55 ) }
    dend_30 { pt3dadd( 99.6725, 50.2662, 16.7878, 0.55 ) }
    dend_30 { pt3dadd( 102.421, 51.1127, 17.8877, 0.55 ) }
    dend_30 { pt3dadd( 107.414, 52.27, 19.7452, 0.55 ) }
    dend_30 { pt3dadd( 111.112, 52.8912, 21.0816, 0.55 ) }
    dend_30 { pt3dadd( 114.051, 53.2687, 22.247, 0.55 ) }
    dend_30 { pt3dadd( 117.056, 53.5281, 23.5818, 0.55 ) }
    dend_30 { pt3dadd( 117.69, 53.5669, 23.8706, 0.28 ) }
    dend_30 { pt3dadd( 118.984, 53.5947, 24.4681, 0.83 ) }
    dend_30 { pt3dadd( 124.305, 53.6419, 26.9739, 0.55 ) }
    dend_30 { pt3dadd( 128.036, 53.6591, 28.6553, 0.55 ) }
    dend_30 { pt3dadd( 131.077, 53.7695, 30.0881, 0.55 ) }
    dend_30 { pt3dadd( 132.892, 53.8351, 30.9628, 0.83 ) }
    dend_30 { pt3dadd( 134.317, 53.9077, 31.648, 0.28 ) }
    dend_30 { pt3dadd( 135.611, 53.9721, 32.2569, 0.55 ) }
    dend_30 { pt3dadd( 145.125, 57.2824, 37.723, 0.55 ) }
    dend_30 { pt3dadd( 155.758, 58.5005, 41.8222, 0.55 ) }
    dend_30 { pt3dadd( 166.074, 61.1716, 46.041, 0.55 ) }
    dend_30 { pt3dadd( 175.154, 62.7618, 52.8507, 0.55 ) }
    dend_30 { pt3dadd( 183.713, 62.9126, 60.4712, 0.55 ) }
    dend_30 { pt3dadd( 193.749, 60.7997, 65.5857, 0.55 ) }
    dend_30 { pt3dadd( 204.015, 57.1441, 69.136, 0.55 ) }
    dend_30 { pt3dadd( 215.071, 55.3755, 71.5842, 0.55 ) }
    dend_30 { pt3dadd( 225.932, 53.6272, 74.7952, 0.55 ) }
    dend_30 { pt3dadd( 237.153, 52.9293, 77.0211, 0.55 ) }
    dend_30 { pt3dadd( 248.069, 53.0935, 80.5102, 0.55 ) }
    dend_30 { pt3dadd( 258.479, 51.4672, 85.0185, 0.55 ) }
    dend_30 { pt3dadd( 268.741, 52.0889, 90.0842, 0.55 ) }
    dend_30 { pt3dadd( 278.111, 54.6539, 96.1646, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.27099, -29.2776, 6.16425, 1.38 ) }
    dend_13 { pt3dadd( 1.84136, -32.9595, 4.60824, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.27099, -29.2776, 6.16425, 0.55 ) }
    dend_12 { pt3dadd( -2.06638, -30.422, 5.95226, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -2.93364, -31.8796, 5.7226, 0.55 ) }
    dend_12 { pt3dadd( -3.62183, -32.8516, 5.54872, 0.55 ) }
    dend_12 { pt3dadd( -4.17222, -33.6648, 5.30204, 0.55 ) }
    dend_12 { pt3dadd( -5.33901, -35.3541, 4.63004, 0.55 ) }
    dend_12 { pt3dadd( -6.15265, -36.4853, 4.13042, 0.55 ) }
    dend_12 { pt3dadd( -6.86569, -37.4991, 3.6534, 0.55 ) }
    dend_12 { pt3dadd( -8.70664, -39.9742, 2.42722, 0.55 ) }
    dend_12 { pt3dadd( -10.9318, -42.8461, 0.97304, 0.55 ) }
    dend_12 { pt3dadd( -12.6471, -45.0243, -0.1902, 0.55 ) }
    dend_12 { pt3dadd( -13.7337, -46.4522, -0.951027, 0.55 ) }
    dend_12 { pt3dadd( -14.9772, -48.1611, -1.81785, 0.55 ) }
    dend_12 { pt3dadd( -16.5449, -50.5959, -2.88644, 0.55 ) }
    dend_12 { pt3dadd( -17.4507, -52.3082, -3.48169, 0.55 ) }
    dend_12 { pt3dadd( -18.5829, -54.7563, -4.08662, 0.55 ) }
    dend_12 { pt3dadd( -19.4778, -57.038, -4.51813, 0.55 ) }
    dend_12 { pt3dadd( -20.3543, -59.8692, -4.92409, 0.55 ) }
    dend_12 { pt3dadd( -21.1538, -63.177, -5.24819, 0.55 ) }
    dend_12 { pt3dadd( -21.5497, -65.6905, -5.36842, 0.55 ) }
    dend_12 { pt3dadd( -21.6898, -66.9359, -5.32665, 0.55 ) }
    dend_12 { pt3dadd( -21.8984, -69.8512, -5.02666, 0.55 ) }
    dend_12 { pt3dadd( -22.0679, -72.5757, -4.66397, 0.55 ) }
    dend_12 { pt3dadd( -22.1628, -75.3109, -4.06414, 0.55 ) }
    dend_12 { pt3dadd( -22.2577, -76.8807, -3.64281, 0.55 ) }
    dend_12 { pt3dadd( -22.5741, -81.7319, -2.16094, 0.55 ) }
    dend_12 { pt3dadd( -22.6015, -82.0892, -2.04652, 0.55 ) }
    dend_12 { pt3dadd( -22.7453, -84.2748, -1.28251, 0.55 ) }
    dend_12 { pt3dadd( -23.2033, -88.1938, 0.118885, 0.55 ) }
    dend_12 { pt3dadd( -23.3413, -89.5052, 0.51092, 0.55 ) }
    dend_12 { pt3dadd( -23.504, -91.5596, 0.773599, 0.55 ) }
    dend_12 { pt3dadd( -23.4956, -92.3224, 0.710484, 0.55 ) }
    dend_12 { pt3dadd( -23.2188, -94.8995, 0.067625, 0.55 ) }
    dend_12 { pt3dadd( -22.8494, -96.5647, -0.657953, 0.55 ) }
    dend_12 { pt3dadd( -22.0361, -99.2153, -2.30869, 0.55 ) }
    dend_12 { pt3dadd( -20.8429, -102.451, -4.53046, 0.28 ) }
    dend_12 { pt3dadd( -20.5046, -103.251, -5.1799, 0.55 ) }
    dend_12 { pt3dadd( -19.9569, -104.463, -6.26602, 0.28 ) }
    dend_12 { pt3dadd( -19.8732, -104.646, -6.4395, 0.55 ) }
    dend_12 { pt3dadd( -19.4456, -105.647, -7.30896, 0.28 ) }
    dend_12 { pt3dadd( -19.3454, -105.988, -7.53575, 0.55 ) }
    dend_12 { pt3dadd( -18.9615, -107.763, -8.39856, 0.28 ) }
    dend_12 { pt3dadd( -18.8554, -108.368, -8.69159, 0.55 ) }
    dend_12 { pt3dadd( -18.598, -110.118, -9.45034, 0.28 ) }
    dend_12 { pt3dadd( -18.5153, -110.669, -9.68657, 0.55 ) }
    dend_12 { pt3dadd( -18.2534, -112.571, -10.4766, 0.28 ) }
    dend_12 { pt3dadd( -18.1273, -113.446, -10.843, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -8.25418, -61.6138, 46.138, 0.55 ) }
    dend_10 { pt3dadd( -11.8667, -68.5628, 53.0156, 0.55 ) }
    dend_10 { pt3dadd( -16.4484, -74.5711, 60.1954, 0.55 ) }
    dend_10 { pt3dadd( -20.7936, -81.2664, 66.8986, 0.55 ) }
    dend_10 { pt3dadd( -25.324, -87.9907, 73.4484, 0.55 ) }
    dend_10 { pt3dadd( -28.8427, -95.9142, 79.2342, 0.55 ) }
    dend_10 { pt3dadd( -32.2295, -103.51, 85.5165, 0.55 ) }
    dend_10 { pt3dadd( -34.5865, -112.752, 89.7203, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.25418, -61.6138, 46.138, 0.55 ) }
    dend_3 { pt3dadd( -7.57447, -67.9485, 51.9961, 0.55 ) }
    dend_3 { pt3dadd( -6.71417, -75.2359, 56.5852, 0.55 ) }
    dend_3 { pt3dadd( -7.2436, -82.4969, 61.2655, 0.55 ) }
    dend_3 { pt3dadd( -8.3618, -90.1276, 65.1933, 0.55 ) }
    dend_3 { pt3dadd( -9.12008, -97.7498, 69.2225, 0.55 ) }
    dend_3 { pt3dadd( -9.74703, -105.076, 73.7867, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -46.1895, 36.7326, -18.6377, 0.83 ) }
    dend_60 { pt3dadd( -45.9519, 37.9607, -19.9508, 0.83 ) }
    dend_60 { pt3dadd( -45.462, 40.9235, -22.8873, 0.55 ) }
    dend_60 { pt3dadd( -45.2521, 42.203, -24.0461, 0.83 ) }
    dend_60 { pt3dadd( -45.0251, 43.5733, -25.191, 0.55 ) }
    dend_60 { pt3dadd( -44.7977, 44.9858, -26.167, 0.55 ) }
    dend_60 { pt3dadd( -44.6804, 45.697, -26.5652, 0.28 ) }
    dend_60 { pt3dadd( -44.6353, 46.1679, -26.7105, 0.55 ) }
    dend_60 { pt3dadd( -44.4461, 47.7475, -26.8587, 0.28 ) }
    dend_60 { pt3dadd( -44.3494, 48.4247, -26.888, 0.55 ) }
    dend_60 { pt3dadd( -44.0439, 50.7782, -26.895, 0.28 ) }
    dend_60 { pt3dadd( -43.8506, 52.6408, -26.8385, 0.55 ) }
    dend_60 { pt3dadd( -43.688, 55.5412, -26.6621, 0.28 ) }
    dend_60 { pt3dadd( -43.6344, 58.0852, -26.4592, 0.28 ) }
    dend_60 { pt3dadd( -43.6864, 59.5036, -26.3189, 0.55 ) }
    dend_60 { pt3dadd( -43.8507, 61.178, -26.1529, 0.28 ) }
    dend_60 { pt3dadd( -43.9817, 61.9732, -26.0629, 0.55 ) }
    dend_60 { pt3dadd( -44.3904, 63.8351, -25.9378, 0.28 ) }
    dend_60 { pt3dadd( -44.7445, 65.0691, -25.9211, 0.28 ) }
    dend_60 { pt3dadd( -45.1176, 66.2786, -25.9427, 0.28 ) }
    dend_60 { pt3dadd( -45.2899, 66.9196, -25.9563, 0.55 ) }
    dend_60 { pt3dadd( -45.8463, 69.5236, -26.0721, 0.28 ) }
    dend_60 { pt3dadd( -46.4015, 72.616, -26.2655, 0.55 ) }
    dend_60 { pt3dadd( -46.5775, 73.6853, -26.3363, 0.55 ) }
    dend_60 { pt3dadd( -46.7716, 74.7561, -26.3842, 0.55 ) }
    dend_60 { pt3dadd( -47.3034, 77.0206, -26.5249, 0.55 ) }
    dend_60 { pt3dadd( -47.7478, 78.4985, -26.651, 0.28 ) }
    dend_60 { pt3dadd( -47.9812, 79.0521, -26.7072, 0.55 ) }
    dend_60 { pt3dadd( -48.7213, 80.5418, -26.8281, 0.28 ) }
    dend_60 { pt3dadd( -49.5745, 82.121, -27.0229, 0.55 ) }
    dend_60 { pt3dadd( -51.017, 84.3708, -27.3979, 0.28 ) }
    dend_60 { pt3dadd( -51.7242, 85.2997, -27.5879, 0.28 ) }
    dend_60 { pt3dadd( -52.8793, 86.574, -27.992, 0.55 ) }
    dend_60 { pt3dadd( -54.1756, 87.8919, -28.49, 0.28 ) }
    dend_60 { pt3dadd( -54.4122, 88.0955, -28.5799, 0.55 ) }
    dend_60 { pt3dadd( -55.2659, 88.7349, -28.8974, 0.28 ) }
    dend_60 { pt3dadd( -58.2119, 90.7635, -29.9347, 0.55 ) }
    dend_60 { pt3dadd( -62.3092, 93.2214, -31.5256, 0.28 ) }
    dend_60 { pt3dadd( -63.066, 93.6269, -31.8639, 0.55 ) }
    dend_60 { pt3dadd( -65.1439, 94.66, -32.8264, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -66.0162, 95.0815, -33.2539, 0.28 ) }
    dend_60 { pt3dadd( -66.7744, 95.4279, -33.6614, 0.55 ) }
    dend_60 { pt3dadd( -68.993, 96.1749, -35.0204, 0.28 ) }
    dend_60 { pt3dadd( -70.5604, 96.5433, -35.9159, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -46.1895, 36.7326, -18.6377, 0.55 ) }
    dend_57 { pt3dadd( -46.5409, 38.5291, -18.7875, 0.55 ) }
    dend_57 { pt3dadd( -46.7802, 39.5824, -18.7779, 0.28 ) }
    dend_57 { pt3dadd( -47.1115, 40.3145, -18.5928, 0.55 ) }
    dend_57 { pt3dadd( -47.8723, 41.9959, -18.1678, 0.28 ) }
    dend_57 { pt3dadd( -48.4067, 43.1769, -17.8693, 0.55 ) }
    dend_57 { pt3dadd( -49.3918, 45.354, -17.3189, 0.28 ) }
    dend_57 { pt3dadd( -50.0522, 46.5006, -16.8191, 0.55 ) }
    dend_57 { pt3dadd( -52.5328, 49.1105, -14.648, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -127.363, -56.0701, 25.0787, 0.55 ) }
    dend_52 { pt3dadd( -133.227, -65.8686, 26.9396, 0.55 ) }
    dend_52 { pt3dadd( -137.214, -76.6255, 28.4387, 0.55 ) }
    dend_52 { pt3dadd( -140.412, -87.7028, 27.4806, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -127.363, -56.0701, 25.0787, 0.55 ) }
    dend_49 { pt3dadd( -133.731, -65.5495, 24.6034, 0.55 ) }
    dend_49 { pt3dadd( -139.042, -75.5291, 22.9178, 0.55 ) }
    dend_49 { pt3dadd( -143.895, -85.7075, 21.0496, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -156.927, 12.9067, 64.5791, 0.55 ) }
    dend_47 { pt3dadd( -164.71, 11.9701, 69.4629, 0.55 ) }
    dend_47 { pt3dadd( -172.7, 12.5096, 74.0625, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -156.927, 12.9067, 64.5791, 0.55 ) }
    dend_46 { pt3dadd( -167.375, 11.8628, 67.5548, 0.55 ) }
    dend_46 { pt3dadd( -177.579, 12.3895, 71.3872, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 88.5321, -46.9737, -84.9094, 0.28 ) }
    dend_39 { pt3dadd( 94.7093, -51.3735, -94.4321, 0.28 ) }
    dend_39 { pt3dadd( 95.3361, -51.8314, -95.2642, 0.55 ) }
    dend_39 { pt3dadd( 96.3943, -52.6045, -96.6688, 0.28 ) }
    dend_39 { pt3dadd( 97.2852, -53.2554, -97.8516, 0.28 ) }
    dend_39 { pt3dadd( 98.4647, -54.1171, -99.4172, 0.55 ) }
    dend_39 { pt3dadd( 100.02, -55.2532, -101.482, 0.55 ) }
    dend_39 { pt3dadd( 102.237, -56.6713, -102.373, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 88.5321, -46.9737, -84.9094, 0.55 ) }
    dend_36 { pt3dadd( 89.3061, -48.1736, -86.1464, 0.55 ) }
    dend_36 { pt3dadd( 89.549, -48.7157, -86.7009, 0.28 ) }
    dend_36 { pt3dadd( 89.9144, -49.6465, -87.6742, 0.55 ) }
    dend_36 { pt3dadd( 90.7195, -51.6969, -89.8181, 0.28 ) }
    dend_36 { pt3dadd( 91.2774, -53.1178, -91.3039, 0.55 ) }
    dend_36 { pt3dadd( 92.2227, -55.5253, -93.8212, 0.28 ) }
    dend_36 { pt3dadd( 93.2991, -58.4674, -97.1459, 0.28 ) }
    dend_36 { pt3dadd( 93.7343, -59.8221, -98.706, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 141.315, 2.23782, -23.5, 0.28 ) }
    dend_33 { pt3dadd( 142.773, 1.17684, -22.5142, 0.28 ) }
    dend_33 { pt3dadd( 144.63, -0.153905, -21.0394, 0.28 ) }
    dend_33 { pt3dadd( 145.811, -0.995449, -20.0274, 0.55 ) }
    dend_33 { pt3dadd( 146.512, -1.43237, -19.4366, 0.28 ) }
    dend_33 { pt3dadd( 146.886, -1.66644, -19.1144, 0.28 ) }
    dend_33 { pt3dadd( 148.737, -2.83617, -17.5542, 0.55 ) }
    dend_33 { pt3dadd( 149.161, -3.06516, -17.1519, 0.28 ) }
    dend_33 { pt3dadd( 150.183, -3.64802, -16.008, 0.55 ) }
    dend_33 { pt3dadd( 151.058, -4.1785, -15.0535, 0.28 ) }
    dend_33 { pt3dadd( 151.812, -4.60955, -14.2961, 0.55 ) }
    dend_33 { pt3dadd( 152.699, -5.15893, -13.4491, 0.55 ) }
    dend_33 { pt3dadd( 154.11, -6.12996, -12.2956, 0.55 ) }
    dend_33 { pt3dadd( 154.452, -6.3762, -12.0257, 0.55 ) }
    dend_33 { pt3dadd( 155.683, -7.3121, -11.0302, 0.28 ) }
    dend_33 { pt3dadd( 156.164, -7.70648, -10.637, 0.55 ) }
    dend_33 { pt3dadd( 156.825, -8.20252, -10.1406, 0.28 ) }
    dend_33 { pt3dadd( 157.76, -8.93201, -9.48273, 0.55 ) }
    dend_33 { pt3dadd( 159.296, -10.1915, -8.68577, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 141.315, 2.23782, -23.5, 0.55 ) }
    dend_32 { pt3dadd( 138.13, 1.88062, -23.448, 0.55 ) }
    dend_32 { pt3dadd( 135.544, 1.59054, -23.4058, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.84136, -32.9595, 4.60824, 0.83 ) }
    dend_17 { pt3dadd( 1.89812, -33.1876, 4.53654, 0.83 ) }
    dend_17 { pt3dadd( 2.70695, -35.2305, 3.82533, 0.83 ) }
    dend_17 { pt3dadd( 3.34702, -37.0173, 3.1097, 0.55 ) }
    dend_17 { pt3dadd( 3.85766, -38.4427, 2.53878, 0.55 ) }
    dend_17 { pt3dadd( 4.94304, -41.4724, 1.32528, 0.83 ) }
    dend_17 { pt3dadd( 6.25953, -45.1473, -0.146621, 0.55 ) }
    dend_17 { pt3dadd( 7.00998, -47.0753, -0.916771, 0.83 ) }
    dend_17 { pt3dadd( 8.45786, -50.1618, -2.1665, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.84136, -32.9595, 4.60824, 0.55 ) }
    dend_14 { pt3dadd( 0.986051, -33.5728, 2.86892, 0.55 ) }
    dend_14 { pt3dadd( 0.067975, -34.231, 1.00197, 0.55 ) }
    dend_14 { pt3dadd( -1.01582, -35.0082, -1.20198, 0.55 ) }
    dend_14 { pt3dadd( -2.3319, -35.9518, -3.87829, 0.55 ) }
    dend_14 { pt3dadd( -3.07873, -36.4873, -5.397, 0.55 ) }
    dend_14 { pt3dadd( -3.22876, -36.5949, -5.70209, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.74703, -105.076, 73.7867, 0.55 ) }
    dend_7 { pt3dadd( -9.63412, -113.105, 79.2531, 0.55 ) }
    dend_7 { pt3dadd( -8.46048, -121.753, 83.5176, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -9.74703, -105.076, 73.7867, 0.55 ) }
    dend_4 { pt3dadd( -10.9008, -114.956, 79.4173, 0.55 ) }
    dend_4 { pt3dadd( -12.3701, -124.509, 85.5182, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -52.5328, 49.1105, -14.648, 0.28 ) }
    dend_59 { pt3dadd( -53.8332, 49.9859, -13.44, 0.28 ) }
    dend_59 { pt3dadd( -54.3314, 50.3071, -12.9255, 0.55 ) }
    dend_59 { pt3dadd( -55.7633, 51.2339, -11.4027, 0.28 ) }
    dend_59 { pt3dadd( -56.4656, 51.7065, -10.7203, 0.55 ) }
    dend_59 { pt3dadd( -58.3726, 52.9969, -8.94284, 0.28 ) }
    dend_59 { pt3dadd( -60.3107, 54.3084, -7.1363, 0.55 ) }
    dend_59 { pt3dadd( -63.5059, 56.3123, -4.14532, 0.28 ) }
    dend_59 { pt3dadd( -64.1867, 56.7441, -3.50686, 0.55 ) }
    dend_59 { pt3dadd( -65.6863, 57.7922, -2.13924, 0.28 ) }
    dend_59 { pt3dadd( -66.2746, 58.2358, -1.5962, 0.55 ) }
    dend_59 { pt3dadd( -72.4846, 60.7639, 2.65975, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -79.0688, 64.3927, 5.21884, 0.55 ) }
    dend_59 { pt3dadd( -85.0126, 68.1255, 8.93462, 0.55 ) }
    dend_59 { pt3dadd( -90.0178, 72.9258, 12.8043, 0.55 ) }
    dend_59 { pt3dadd( -95.724, 77.4421, 15.9842, 0.55 ) }
    dend_59 { pt3dadd( -102.051, 80.5802, 19.6142, 0.55 ) }
    dend_59 { pt3dadd( -107.969, 82.9764, 24.3371, 0.55 ) }
    dend_59 { pt3dadd( -113.235, 84.4805, 30.0882, 0.55 ) }
    dend_59 { pt3dadd( -118.529, 86.4693, 35.6645, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -52.5328, 49.1105, -14.648, 0.55 ) }
    dend_58 { pt3dadd( -56.8567, 47.1828, -13.2699, 0.55 ) }
    dend_58 { pt3dadd( -59.0973, 46.1053, -12.5634, 0.28 ) }
    dend_58 { pt3dadd( -60.7647, 45.3034, -12.0375, 0.55 ) }
    dend_58 { pt3dadd( -62.1544, 44.6351, -11.5993, 0.28 ) }
    dend_58 { pt3dadd( -63.1277, 44.167, -11.2923, 0.55 ) }
    dend_58 { pt3dadd( -65.8118, 42.8762, -10.4459, 0.28 ) }
    dend_58 { pt3dadd( -67.5697, 41.8803, -10.124, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -140.412, -87.7028, 27.4806, 0.55 ) }
    dend_54 { pt3dadd( -144.664, -100.581, 30.0763, 0.55 ) }
    dend_54 { pt3dadd( -148.31, -113.274, 34.1053, 0.55 ) }
    dend_54 { pt3dadd( -151.441, -126.636, 35.6278, 0.55 ) }
    dend_54 { pt3dadd( -155.578, -139.343, 39.0998, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -140.412, -87.7028, 27.4806, 0.55 ) }
    dend_53 { pt3dadd( -144.966, -95.8317, 23.6796, 0.55 ) }
    dend_53 { pt3dadd( -149.27, -103.223, 18.378, 0.55 ) }
    dend_53 { pt3dadd( -154.185, -111.163, 14.6294, 0.55 ) }
    dend_53 { pt3dadd( -161.16, -117.484, 11.072, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -143.895, -85.7075, 21.0496, 0.55 ) }
    dend_51 { pt3dadd( -149.355, -91.4298, 16.0503, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -143.895, -85.7075, 21.0496, 0.55 ) }
    dend_50 { pt3dadd( -148.111, -94.2191, 28.1522, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 102.237, -56.6713, -102.373, 0.28 ) }
    dend_41 { pt3dadd( 104.582, -57.837, -103.483, 0.28 ) }
    dend_41 { pt3dadd( 105.672, -58.3784, -103.998, 0.55 ) }
    dend_41 { pt3dadd( 107.749, -59.4109, -104.981, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 102.237, -56.6713, -102.373, 0.55 ) }
    dend_40 { pt3dadd( 101.93, -57.8405, -103.568, 0.55 ) }
    dend_40 { pt3dadd( 101.316, -60.1792, -105.958, 0.28 ) }
    dend_40 { pt3dadd( 101.116, -60.941, -106.737, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 93.7343, -59.8221, -98.706, 0.28 ) }
    dend_38 { pt3dadd( 95.1074, -63.1925, -101.913, 0.28 ) }
    dend_38 { pt3dadd( 95.7873, -64.8614, -103.501, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 93.7343, -59.8221, -98.706, 0.55 ) }
    dend_37 { pt3dadd( 91.565, -60.5516, -98.0468, 0.55 ) }
    dend_37 { pt3dadd( 85.5161, -62.5861, -96.2086, 0.28 ) }
    dend_37 { pt3dadd( 84.0791, -63.0694, -95.7719, 0.55 ) }
    dend_37 { pt3dadd( 80.1481, -64.3914, -94.5773, 0.28 ) }
    dend_37 { pt3dadd( 77.6143, -65.2436, -93.8073, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 8.45786, -50.1618, -2.1665, 0.83 ) }
    dend_23 { pt3dadd( 8.44558, -50.4065, -2.20021, 0.83 ) }
    dend_23 { pt3dadd( 8.37701, -53.6124, -2.60012, 0.83 ) }
    dend_23 { pt3dadd( 8.25445, -56.0023, -2.65234, 0.83 ) }
    dend_23 { pt3dadd( 8.15336, -58.3011, -2.41472, 0.83 ) }
    dend_23 { pt3dadd( 8.07423, -61.355, -1.84808, 0.83 ) }
    dend_23 { pt3dadd( 7.98537, -64.8679, -1.03181, 0.83 ) }
    dend_23 { pt3dadd( 8.02605, -68.7929, 0.0340769, 0.83 ) }
    dend_23 { pt3dadd( 8.17468, -72.6069, 1.2097, 0.83 ) }
    dend_23 { pt3dadd( 8.04672, -77.2678, 2.75345, 0.83 ) }
    dend_23 { pt3dadd( 7.81821, -79.4002, 3.4374, 0.83 ) }
    dend_23 { pt3dadd( 7.57848, -81.0028, 3.87381, 0.83 ) }
    dend_23 { pt3dadd( 7.02525, -84.0724, 4.69892, 0.83 ) }
    dend_23 { pt3dadd( 6.48731, -86.8253, 5.27458, 0.83 ) }
    dend_23 { pt3dadd( 5.18971, -92.7139, 5.77319, 0.83 ) }
    dend_23 { pt3dadd( 4.24938, -95.9343, 5.68334, 0.83 ) }
    dend_23 { pt3dadd( 3.24677, -98.9002, 5.42664, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 8.45786, -50.1618, -2.1665, 0.55 ) }
    dend_18 { pt3dadd( 7.51356, -52.6816, -1.16021, 0.55 ) }
    dend_18 { pt3dadd( 6.89973, -54.506, -0.302545, 0.55 ) }
    dend_18 { pt3dadd( 6.6113, -55.6727, 0.318835, 0.55 ) }
    dend_18 { pt3dadd( 6.34933, -57.5018, 1.37502, 0.55 ) }
    dend_18 { pt3dadd( 6.0631, -61.1264, 3.58937, 0.55 ) }
    dend_18 { pt3dadd( 6.03212, -63.862, 5.52168, 0.55 ) }
    dend_18 { pt3dadd( 6.16746, -66.0502, 7.25647, 0.55 ) }
    dend_18 { pt3dadd( 6.36743, -68.253, 9.17066, 0.55 ) }
    dend_18 { pt3dadd( 6.58607, -70.0767, 10.8454, 0.28 ) }
    dend_18 { pt3dadd( 6.89635, -71.5606, 12.4042, 0.55 ) }
    dend_18 { pt3dadd( 7.67086, -74.2479, 15.5907, 0.55 ) }
    dend_18 { pt3dadd( 8.19516, -75.8841, 17.7509, 0.55 ) }
    dend_18 { pt3dadd( 8.47418, -76.8001, 18.9605, 0.55 ) }
    dend_18 { pt3dadd( 8.71899, -77.8773, 20.3785, 0.83 ) }
    dend_18 { pt3dadd( 9.27187, -81.0738, 24.4269, 0.28 ) }
    dend_18 { pt3dadd( 9.43548, -82.1324, 25.7421, 0.55 ) }
    dend_18 { pt3dadd( 9.73637, -84.0498, 28.0237, 0.28 ) }
    dend_18 { pt3dadd( 9.85961, -84.6399, 28.7621, 0.55 ) }
    dend_18 { pt3dadd( 10.1935, -86.0327, 30.4197, 0.28 ) }
    dend_18 { pt3dadd( 10.3473, -86.8264, 31.3109, 0.55 ) }
    dend_18 { pt3dadd( 10.2339, -89.4115, 33.7524, 0.55 ) }
    dend_18 { pt3dadd( 13.2451, -96.4624, 41.3557, 0.55 ) }
    dend_18 { pt3dadd( 16.9462, -103.197, 48.9412, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -3.22876, -36.5949, -5.70209, 0.55 ) }
    dend_16 { pt3dadd( -5.42994, -37.5815, -8.55424, 0.55 ) }
    dend_16 { pt3dadd( -6.0861, -37.8128, -9.35864, 0.55 ) }
    dend_16 { pt3dadd( -7.74342, -38.3973, -11.3077, 0.55 ) }
    dend_16 { pt3dadd( -11.3974, -39.5606, -15.398, 0.28 ) }
    dend_16 { pt3dadd( -11.9466, -39.7214, -15.9684, 0.55 ) }
    dend_16 { pt3dadd( -14.2476, -40.4672, -18.2527, 0.55 ) }
    dend_16 { pt3dadd( -17.4385, -41.5059, -21.0521, 0.55 ) }
    dend_16 { pt3dadd( -18.6647, -41.8638, -22.0903, 0.28 ) }
    dend_16 { pt3dadd( -19.7495, -42.1028, -22.9327, 0.28 ) }
    dend_16 { pt3dadd( -21.6322, -42.4849, -24.1112, 0.55 ) }
    dend_16 { pt3dadd( -23.9247, -42.837, -25.6324, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -26.0454, -42.9752, -27.08, 0.55 ) }
    dend_16 { pt3dadd( -27.694, -42.9456, -28.1625, 0.55 ) }
    dend_16 { pt3dadd( -28.8299, -42.8275, -28.941, 0.55 ) }
    dend_16 { pt3dadd( -32.1641, -42.3235, -31.3245, 0.55 ) }
    dend_16 { pt3dadd( -35.6906, -41.555, -33.7581, 0.55 ) }
    dend_16 { pt3dadd( -37.1546, -41.1583, -34.7244, 0.28 ) }
    dend_16 { pt3dadd( -38.5423, -40.8023, -35.669, 0.55 ) }
    dend_16 { pt3dadd( -41.3538, -40.2643, -37.5624, 0.28 ) }
    dend_16 { pt3dadd( -42.2998, -40.111, -38.1909, 0.83 ) }
    dend_16 { pt3dadd( -44.0799, -39.8097, -39.2433, 0.28 ) }
    dend_16 { pt3dadd( -45.3749, -39.6969, -39.8381, 0.55 ) }
    dend_16 { pt3dadd( -47.2565, -39.5999, -40.6666, 0.28 ) }
    dend_16 { pt3dadd( -48.0085, -39.5529, -40.9718, 0.55 ) }
    dend_16 { pt3dadd( -49.4078, -39.4952, -41.4646, 0.55 ) }
    dend_16 { pt3dadd( -51.5361, -39.2045, -42.123, 0.55 ) }
    dend_16 { pt3dadd( -52.9355, -38.9348, -42.474, 0.28 ) }
    dend_16 { pt3dadd( -54.0747, -38.5868, -42.6655, 0.55 ) }
    dend_16 { pt3dadd( -55.4222, -38.0191, -42.8916, 0.28 ) }
    dend_16 { pt3dadd( -55.6441, -37.9086, -42.9354, 0.55 ) }
    dend_16 { pt3dadd( -57.6738, -36.8293, -43.6774, 0.28 ) }
    dend_16 { pt3dadd( -59.1389, -36.0106, -44.3662, 0.55 ) }
    dend_16 { pt3dadd( -61.06, -34.7956, -45.5292, 0.83 ) }
    dend_16 { pt3dadd( -62.6327, -33.7514, -46.6595, 0.28 ) }
    dend_16 { pt3dadd( -63.0362, -33.4827, -46.9911, 0.55 ) }
    dend_16 { pt3dadd( -66.1182, -31.4585, -49.7071, 0.28 ) }
    dend_16 { pt3dadd( -66.6536, -31.1107, -50.2358, 0.55 ) }
    dend_16 { pt3dadd( -68.2292, -29.9724, -51.8926, 0.28 ) }
    dend_16 { pt3dadd( -68.6356, -29.6795, -52.3233, 0.55 ) }
    dend_16 { pt3dadd( -69.6848, -28.9206, -53.3557, 0.28 ) }
    dend_16 { pt3dadd( -70.4321, -28.3767, -54.0391, 0.55 ) }
    dend_16 { pt3dadd( -72.1214, -27.1744, -55.312, 0.28 ) }
    dend_16 { pt3dadd( -73.1264, -26.5329, -56.0316, 0.55 ) }
    dend_16 { pt3dadd( -75.2781, -25.3031, -57.4574, 0.28 ) }
    dend_16 { pt3dadd( -75.9193, -24.9722, -57.8733, 0.55 ) }
    dend_16 { pt3dadd( -76.9265, -24.5323, -58.4913, 0.28 ) }
    dend_16 { pt3dadd( -77.7827, -24.164, -58.9736, 0.55 ) }
    dend_16 { pt3dadd( -79.5685, -23.4278, -59.8697, 0.28 ) }
    dend_16 { pt3dadd( -80.1074, -23.2189, -60.1226, 0.55 ) }
    dend_16 { pt3dadd( -84.1254, -21.5986, -61.8143, 0.28 ) }
    dend_16 { pt3dadd( -85.5435, -20.9385, -62.2829, 0.55 ) }
    dend_16 { pt3dadd( -88.0833, -19.6501, -62.9556, 0.28 ) }
    dend_16 { pt3dadd( -89.2303, -19.0271, -63.2228, 0.55 ) }
    dend_16 { pt3dadd( -91.8662, -17.6239, -63.6888, 0.28 ) }
    dend_16 { pt3dadd( -92.8348, -17.1524, -63.8201, 0.55 ) }
    dend_16 { pt3dadd( -96.34, -15.7597, -64.1216, 0.28 ) }
    dend_16 { pt3dadd( -97.7994, -15.3571, -64.24, 0.55 ) }
    dend_16 { pt3dadd( -99.878, -15.1157, -64.3962, 0.55 ) }
    dend_16 { pt3dadd( -101.156, -15.0477, -64.4648, 0.55 ) }
    dend_16 { pt3dadd( -103.762, -14.984, -64.4093, 0.28 ) }
    dend_16 { pt3dadd( -106.325, -14.9537, -64.1961, 0.28 ) }
    dend_16 { pt3dadd( -108.459, -14.9236, -63.9566, 0.55 ) }
    dend_16 { pt3dadd( -111.063, -14.6777, -63.3736, 0.28 ) }
    dend_16 { pt3dadd( -112.344, -14.4052, -62.9078, 0.55 ) }
    dend_16 { pt3dadd( -115.373, -13.2816, -61.4778, 0.28 ) }
    dend_16 { pt3dadd( -116.895, -12.4096, -60.356, 0.55 ) }
    dend_16 { pt3dadd( -117.847, -11.6953, -59.4024, 0.28 ) }
    dend_16 { pt3dadd( -118.867, -10.8996, -58.0518, 0.55 ) }
    dend_16 { pt3dadd( -120.108, -9.85712, -56.1836, 0.28 ) }
    dend_16 { pt3dadd( -120.582, -9.49362, -55.4829, 0.55 ) }
    dend_16 { pt3dadd( -123.126, -7.88887, -52.2102, 0.28 ) }
    dend_16 { pt3dadd( -123.988, -7.3886, -51.1183, 0.55 ) }
    dend_16 { pt3dadd( -126.025, -6.29696, -48.4651, 0.28 ) }
    dend_16 { pt3dadd( -127.133, -5.72025, -47.0248, 0.55 ) }
    dend_16 { pt3dadd( -128.045, -5.24812, -45.843, 0.55 ) }
    dend_16 { pt3dadd( -129.145, -4.69315, -44.4648, 0.28 ) }
    dend_16 { pt3dadd( -129.749, -4.40879, -43.8581, 0.55 ) }
    dend_16 { pt3dadd( -131.811, -3.3748, -41.959, 0.28 ) }
    dend_16 { pt3dadd( -132.882, -2.69332, -40.9356, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -3.22876, -36.5949, -5.70209, 0.55 ) }
    dend_15 { pt3dadd( -2.78883, -36.6844, -6.57735, 0.55 ) }
    dend_15 { pt3dadd( -2.31921, -36.6683, -7.44155, 0.55 ) }
    dend_15 { pt3dadd( -1.67897, -36.5662, -8.4847, 0.55 ) }
    dend_15 { pt3dadd( -1.12077, -36.4065, -9.3083, 0.55 ) }
    dend_15 { pt3dadd( 2.92453, -34.7214, -14.3923, 0.55 ) }
    dend_15 { pt3dadd( 3.8304, -34.1868, -15.5455, 0.55 ) }
    dend_15 { pt3dadd( 5.14588, -33.2511, -17.2737, 0.55 ) }
    dend_15 { pt3dadd( 6.07232, -32.5409, -18.5015, 0.55 ) }
    dend_15 { pt3dadd( 6.99438, -31.7688, -19.6697, 0.28 ) }
    dend_15 { pt3dadd( 8.47687, -30.4629, -21.3794, 0.55 ) }
    dend_15 { pt3dadd( 10.7879, -28.4259, -23.7802, 0.28 ) }
    dend_15 { pt3dadd( 10.9521, -28.3015, -24.049, 0.55 ) }
    dend_15 { pt3dadd( 11.5941, -27.8731, -26.1105, 0.28 ) }
    dend_15 { pt3dadd( 11.7931, -27.677, -27.5766, 0.55 ) }
    dend_15 { pt3dadd( 11.8614, -27.5797, -29.1907, 0.55 ) }
    dend_15 { pt3dadd( 11.9453, -27.5517, -32.0998, 0.55 ) }
    dend_15 { pt3dadd( 12.1262, -27.5362, -37.8096, 0.55 ) }
    dend_15 { pt3dadd( 12.316, -27.564, -41.6425, 0.55 ) }
    dend_15 { pt3dadd( 12.4169, -27.5845, -42.9635, 0.55 ) }
    dend_15 { pt3dadd( 13.2837, -27.6463, -51.6236, 0.55 ) }
    dend_15 { pt3dadd( 13.6166, -27.6268, -53.9556, 0.55 ) }
    dend_15 { pt3dadd( 13.9017, -27.6138, -55.2494, 0.55 ) }
    dend_15 { pt3dadd( 14.8308, -27.6528, -58.2094, 0.55 ) }
    dend_15 { pt3dadd( 17.4832, -28.1063, -65.1941, 0.55 ) }
    dend_15 { pt3dadd( 18.2799, -28.3063, -67.0477, 0.28 ) }
    dend_15 { pt3dadd( 18.8147, -28.4677, -68.0702, 0.55 ) }
    dend_15 { pt3dadd( 19.6374, -28.7733, -69.5732, 0.28 ) }
    dend_15 { pt3dadd( 20.0232, -28.9653, -70.1674, 0.55 ) }
    dend_15 { pt3dadd( 21.5841, -29.8292, -71.6112, 0.28 ) }
    dend_15 { pt3dadd( 23.04, -31.0199, -71.8934, 0.55 ) }
    dend_15 { pt3dadd( 23.9194, -31.8694, -72.0045, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 24.7346, -32.8086, -72.0046, 0.55 ) }
    dend_15 { pt3dadd( 25.4536, -33.8327, -71.9402, 0.28 ) }
    dend_15 { pt3dadd( 25.7634, -34.3601, -71.9252, 0.55 ) }
    dend_15 { pt3dadd( 26.485, -35.7429, -71.8281, 0.28 ) }
    dend_15 { pt3dadd( 26.6663, -36.1543, -71.8647, 0.55 ) }
    dend_15 { pt3dadd( 27.6887, -38.5092, -72.2098, 0.28 ) }
    dend_15 { pt3dadd( 28.1861, -39.5941, -72.5154, 0.55 ) }
    dend_15 { pt3dadd( 29.3221, -41.9022, -73.4419, 0.28 ) }
    dend_15 { pt3dadd( 29.7724, -42.7487, -73.8836, 0.55 ) }
    dend_15 { pt3dadd( 31.3569, -45.5207, -75.518, 0.28 ) }
    dend_15 { pt3dadd( 31.7452, -46.1936, -75.9458, 0.55 ) }
    dend_15 { pt3dadd( 32.9078, -48.3236, -77.3781, 0.28 ) }
    dend_15 { pt3dadd( 33.1517, -48.8245, -77.6717, 0.55 ) }
    dend_15 { pt3dadd( 33.7507, -50.1498, -78.4327, 0.28 ) }
    dend_15 { pt3dadd( 34.1015, -50.9163, -78.9527, 0.55 ) }
    dend_15 { pt3dadd( 34.4702, -51.6665, -79.528, 0.55 ) }
    dend_15 { pt3dadd( 35.2073, -53.1636, -80.664, 0.28 ) }
    dend_15 { pt3dadd( 35.7484, -54.0843, -81.4855, 0.55 ) }
    dend_15 { pt3dadd( 37.5509, -56.3557, -84.1259, 0.28 ) }
    dend_15 { pt3dadd( 38.2646, -57.0832, -85.1917, 0.55 ) }
    dend_15 { pt3dadd( 38.771, -57.5423, -85.9145, 0.28 ) }
    dend_15 { pt3dadd( 39.2983, -57.9577, -86.6359, 0.55 ) }
    dend_15 { pt3dadd( 40.9688, -59.1116, -88.8191, 0.28 ) }
    dend_15 { pt3dadd( 42.2508, -60.0096, -90.4309, 0.55 ) }
    dend_15 { pt3dadd( 44.502, -61.7383, -92.9811, 0.28 ) }
    dend_15 { pt3dadd( 45.2135, -62.2758, -93.7797, 0.55 ) }
    dend_15 { pt3dadd( 46.6311, -63.2641, -95.1719, 0.28 ) }
    dend_15 { pt3dadd( 47.1179, -63.5892, -95.5921, 0.55 ) }
    dend_15 { pt3dadd( 47.9543, -64.1129, -96.1164, 0.28 ) }
    dend_15 { pt3dadd( 48.7106, -64.5553, -96.5115, 0.55 ) }
    dend_15 { pt3dadd( 50.8171, -65.6523, -97.3607, 0.28 ) }
    dend_15 { pt3dadd( 53.2486, -66.8123, -98.2923, 0.28 ) }
    dend_15 { pt3dadd( 54.5002, -67.3462, -98.6746, 0.28 ) }
    dend_15 { pt3dadd( 55.7503, -67.8429, -99.1349, 0.55 ) }
    dend_15 { pt3dadd( 57.5807, -68.4837, -99.8129, 0.28 ) }
    dend_15 { pt3dadd( 58.399, -68.7571, -100.097, 0.83 ) }
    dend_15 { pt3dadd( 60.4995, -69.4842, -100.742, 0.28 ) }
    dend_15 { pt3dadd( 61.4001, -69.8185, -101.073, 0.55 ) }
    dend_15 { pt3dadd( 65.3142, -71.4326, -102.715, 0.28 ) }
    dend_15 { pt3dadd( 67.2373, -72.2581, -103.695, 0.28 ) }
    dend_15 { pt3dadd( 68.6152, -72.8551, -104.502, 0.55 ) }
    dend_15 { pt3dadd( 69.3949, -73.2177, -105.066, 0.55 ) }
    dend_15 { pt3dadd( 71.4178, -74.2051, -106.738, 0.28 ) }
    dend_15 { pt3dadd( 73.2801, -75.2207, -108.387, 0.55 ) }
    dend_15 { pt3dadd( 74.9717, -76.2052, -109.89, 0.28 ) }
    dend_15 { pt3dadd( 76.4752, -77.1179, -111.339, 0.55 ) }
    dend_15 { pt3dadd( 77.7218, -77.8553, -112.528, 0.28 ) }
    dend_15 { pt3dadd( 78.766, -78.3764, -113.438, 0.55 ) }
    dend_15 { pt3dadd( 81.3335, -79.4766, -115.504, 0.28 ) }
    dend_15 { pt3dadd( 82.6516, -80.0339, -116.493, 0.55 ) }
    dend_15 { pt3dadd( 84.6525, -80.8792, -117.901, 0.28 ) }
    dend_15 { pt3dadd( 86.3048, -81.521, -119.012, 0.55 ) }
    dend_15 { pt3dadd( 90.183, -82.8403, -121.614, 0.28 ) }
    dend_15 { pt3dadd( 91.7385, -83.278, -122.783, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -8.46048, -121.753, 83.5176, 0.55 ) }
    dend_9 { pt3dadd( -8.87639, -130.631, 87.4226, 0.55 ) }
    dend_9 { pt3dadd( -9.19895, -140.211, 88.9675, 0.55 ) }
    dend_9 { pt3dadd( -9.59924, -149.445, 91.9348, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -8.46048, -121.753, 83.5176, 0.55 ) }
    dend_8 { pt3dadd( -7.8421, -126.501, 86.6835, 0.55 ) }
    dend_8 { pt3dadd( -7.77049, -130.534, 90.7681, 0.55 ) }
    dend_8 { pt3dadd( -7.45517, -133.657, 95.5744, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -12.3701, -124.509, 85.5182, 0.55 ) }
    dend_6 { pt3dadd( -12.8279, -134.142, 90.4736, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -12.3701, -124.509, 85.5182, 0.55 ) }
    dend_5 { pt3dadd( -14.278, -133.301, 91.2938, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 3.24677, -98.9002, 5.42664, 0.83 ) }
    dend_25 { pt3dadd( 3.99238, -102.343, 5.51873, 0.83 ) }
    dend_25 { pt3dadd( 4.84334, -105.252, 5.70583, 0.83 ) }
    dend_25 { pt3dadd( 5.6892, -108.143, 5.89181, 0.83 ) }
    dend_25 { pt3dadd( 6.4925, -110.889, 6.06843, 0.83 ) }
    dend_25 { pt3dadd( 7.73044, -115.12, 6.34061, 0.83 ) }
    dend_25 { pt3dadd( 8.95944, -119.321, 6.61082, 0.83 ) }
    dend_25 { pt3dadd( 10.1447, -122.112, 6.97236, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 3.24677, -98.9002, 5.42664, 0.55 ) }
    dend_24 { pt3dadd( 3.97644, -100.286, 4.94561, 0.55 ) }
    dend_24 { pt3dadd( 4.43675, -101.367, 4.42676, 0.55 ) }
    dend_24 { pt3dadd( 4.70586, -102.164, 3.99916, 0.55 ) }
    dend_24 { pt3dadd( 4.84462, -103.091, 3.47857, 0.83 ) }
    dend_24 { pt3dadd( 4.87694, -104.139, 2.82077, 0.55 ) }
    dend_24 { pt3dadd( 4.90855, -105.165, 2.17735, 0.83 ) }
    dend_24 { pt3dadd( 4.83578, -106.273, 1.42941, 0.55 ) }
    dend_24 { pt3dadd( 4.75991, -106.916, 0.947135, 0.83 ) }
    dend_24 { pt3dadd( 4.35443, -108.991, -0.699066, 0.55 ) }
    dend_24 { pt3dadd( 3.86984, -110.612, -2.00209, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 16.9462, -103.197, 48.9412, 0.55 ) }
    dend_20 { pt3dadd( 17.3419, -110.468, 55.7246, 0.55 ) }
    dend_20 { pt3dadd( 16.9388, -116.677, 63.4919, 0.55 ) }
    dend_20 { pt3dadd( 16.3547, -121.902, 71.9422, 0.55 ) }
    dend_20 { pt3dadd( 15.329, -125.908, 80.9947, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 16.9462, -103.197, 48.9412, 0.55 ) }
    dend_19 { pt3dadd( 19.3755, -110.489, 56.1158, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 10.1447, -122.112, 6.97236, 0.55 ) }
    dend_27 { pt3dadd( 10.5661, -124.291, 7.38747, 0.55 ) }
    dend_27 { pt3dadd( 11.2066, -127.076, 7.90356, 0.55 ) }
    dend_27 { pt3dadd( 11.8007, -129.707, 8.38085, 0.55 ) }
    dend_27 { pt3dadd( 12.1872, -131.575, 8.71859, 0.55 ) }
    dend_27 { pt3dadd( 12.8134, -134.907, 9.31708, 0.55 ) }
    dend_27 { pt3dadd( 14.4792, -144.289, 10.7371, 0.55 ) }
    dend_27 { pt3dadd( 14.9875, -147.482, 11.0726, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 15.264, -149.736, 11.2306, 0.55 ) }
    dend_27 { pt3dadd( 15.434, -152.315, 11.2639, 0.55 ) }
    dend_27 { pt3dadd( 15.4079, -154.308, 11.2036, 0.55 ) }
    dend_27 { pt3dadd( 15.2857, -158.979, 10.8345, 0.55 ) }
    dend_27 { pt3dadd( 15.1117, -162.516, 10.6465, 0.55 ) }
    dend_27 { pt3dadd( 15.0896, -164.842, 10.518, 0.55 ) }
    dend_27 { pt3dadd( 15.2572, -170.869, 10.3961, 0.55 ) }
    dend_27 { pt3dadd( 15.4925, -174.918, 10.4472, 0.55 ) }
    dend_27 { pt3dadd( 16.0386, -180.136, 10.6787, 0.55 ) }
    dend_27 { pt3dadd( 17.0595, -186.058, 11.1691, 0.55 ) }
    dend_27 { pt3dadd( 18.0421, -190.023, 11.5128, 0.55 ) }
    dend_27 { pt3dadd( 18.7066, -192.37, 11.7115, 0.55 ) }
    dend_27 { pt3dadd( 19.2893, -194.531, 11.9217, 0.55 ) }
    dend_27 { pt3dadd( 19.9565, -197.272, 12.0713, 0.55 ) }
    dend_27 { pt3dadd( 21.1705, -203.878, 12.2125, 0.55 ) }
    dend_27 { pt3dadd( 21.6209, -206.442, 12.141, 0.55 ) }
    dend_27 { pt3dadd( 22.0651, -209.293, 12.1018, 0.55 ) }
    dend_27 { pt3dadd( 22.6932, -213.571, 12.0562, 0.55 ) }
    dend_27 { pt3dadd( 23.1051, -216.848, 12.1589, 0.55 ) }
    dend_27 { pt3dadd( 23.3528, -219.947, 12.3706, 0.55 ) }
    dend_27 { pt3dadd( 23.507, -222.892, 12.6751, 0.55 ) }
    dend_27 { pt3dadd( 23.6591, -225.762, 13.037, 0.55 ) }
    dend_27 { pt3dadd( 23.7593, -227.806, 13.272, 0.55 ) }
    dend_27 { pt3dadd( 23.846, -231.152, 13.5668, 0.55 ) }
    dend_27 { pt3dadd( 23.6756, -235.168, 13.77, 0.55 ) }
    dend_27 { pt3dadd( 23.5101, -237.125, 13.7356, 0.55 ) }
    dend_27 { pt3dadd( 23.275, -238.845, 13.6079, 0.55 ) }
    dend_27 { pt3dadd( 22.7751, -242.105, 13.128, 0.55 ) }
    dend_27 { pt3dadd( 22.4003, -244.17, 12.8036, 0.55 ) }
    dend_27 { pt3dadd( 22.0312, -246.717, 12.4426, 0.55 ) }
    dend_27 { pt3dadd( 21.8136, -248.501, 12.3103, 0.55 ) }
    dend_27 { pt3dadd( 21.3367, -253.131, 12.1472, 0.55 ) }
    dend_27 { pt3dadd( 21.1196, -256.589, 12.2503, 0.55 ) }
    dend_27 { pt3dadd( 21.0697, -261.93, 12.7603, 0.55 ) }
    dend_27 { pt3dadd( 21.3392, -265.379, 13.2398, 0.55 ) }
    dend_27 { pt3dadd( 21.6964, -268.997, 13.8404, 0.28 ) }
    dend_27 { pt3dadd( 21.864, -270.447, 14.1485, 0.28 ) }
    dend_27 { pt3dadd( 22.5106, -273.964, 15.115, 0.28 ) }
    dend_27 { pt3dadd( 23.2912, -277.207, 16.1979, 0.28 ) }
    dend_27 { pt3dadd( 24.9234, -281.521, 17.6047, 0.28 ) }
    dend_27 { pt3dadd( 27.4645, -291.348, 18.1876, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 10.1447, -122.112, 6.97236, 0.55 ) }
    dend_26 { pt3dadd( 11.6754, -122.717, 6.94225, 0.55 ) }
    dend_26 { pt3dadd( 14.8541, -124.213, 7.10523, 0.55 ) }
    dend_26 { pt3dadd( 17.6122, -125.661, 7.35973, 0.28 ) }
    dend_26 { pt3dadd( 20.5836, -127.295, 7.71833, 0.55 ) }
    dend_26 { pt3dadd( 22.4188, -128.323, 8.162, 0.28 ) }
    dend_26 { pt3dadd( 25.6484, -130.161, 9.20283, 0.55 ) }
    dend_26 { pt3dadd( 27.0479, -131.105, 9.99481, 0.28 ) }
    dend_26 { pt3dadd( 27.5669, -131.443, 10.3641, 0.28 ) }
    dend_26 { pt3dadd( 28.4714, -131.93, 11.0082, 0.55 ) }
    dend_26 { pt3dadd( 31.9943, -133.547, 13.2501, 0.28 ) }
    dend_26 { pt3dadd( 33.4936, -134.183, 14.1449, 0.55 ) }
    dend_26 { pt3dadd( 37.9976, -136.055, 16.3536, 0.28 ) }
    dend_26 { pt3dadd( 40.4375, -136.992, 17.3808, 0.28 ) }
    dend_26 { pt3dadd( 43.4632, -138.199, 18.4908, 0.55 ) }
    dend_26 { pt3dadd( 47.9283, -140.082, 19.7703, 0.28 ) }
    dend_26 { pt3dadd( 48.5264, -140.334, 19.8811, 0.55 ) }
    dend_26 { pt3dadd( 51.4486, -141.575, 20.2353, 0.28 ) }
    dend_26 { pt3dadd( 51.7097, -141.692, 20.2396, 0.55 ) }
    dend_26 { pt3dadd( 54.0073, -143.019, 20.3592, 0.28 ) }
    dend_26 { pt3dadd( 55.1058, -143.733, 20.4849, 0.55 ) }
    dend_26 { pt3dadd( 64.1838, -149.055, 21.573, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 15.329, -125.908, 80.9947, 0.55 ) }
    dend_22 { pt3dadd( 19.2681, -131.071, 92.873, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 15.329, -125.908, 80.9947, 0.55 ) }
    dend_21 { pt3dadd( 12.9136, -134.284, 89.6259, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 13
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 11
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 13
    dend_12 nseg = 5
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 3
    dend_59 nseg = 5
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 9
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_BP_b4ffa23859_0_0


