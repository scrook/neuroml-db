// Cell: bNAC219_L6_LBC_9f176c343a_0_0
/*
{
  "id" : "bNAC219_L6_LBC_9f176c343a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.56354, -2.32023, 0.0, 4.89867", "-7.66852, -2.09843, 0.0, 8.85912", "-6.77349, -1.87663, 0.0, 12.5371", "-5.87847, -1.65483, 0.0, 13.9982", "-4.98344, -1.43303, 0.0, 14.8266", "-4.08842, -1.21123, 0.0, 15.6937", "-3.1934, -0.989429, 0.0, 16.4025", "-2.29837, -0.767629, 0.0, 16.5748", "-1.40335, -0.545828, 0.0, 16.6806", "-0.508322, -0.324028, 0.0, 16.6604", "0.386703, -0.102228, 0.0, 16.5142", "1.28173, 0.119572, 0.0, 16.311", "2.17675, 0.341372, 0.0, 16.1002", "3.07178, 0.563173, 0.0, 15.6503", "3.9668, 0.784973, 0.0, 14.9085", "4.86183, 1.00677, 0.0, 14.1259", "5.75685, 1.22857, 0.0, 12.5788", "6.65188, 1.45037, 0.0, 10.8169", "7.5469, 1.67217, 0.0, 8.79928", "8.44192, 1.89397, 0.0, 6.39095", "9.33695, 2.11577, 0.0, 3.65543" ]
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-6.88458, 2.01569, -2.55, 2.95", "-8.18596, 2.87085, -2.55, 2.95", "-10.5251, 4.40795, -2.55, 2.04", "-13.5319, 6.38375, -2.55, 2.04", "-13.843, 6.58818, -2.55, 2.04" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992082157346
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "7.40542, -0.346809, -5.45, 1.81", "9.18788, 0.623034, -6.33041, 1.81", "11.2762, 2.17157, -7.33807, 2.04", "12.9673, 3.59999, -8.08588, 2.04", "14.4212, 4.91577, -8.68307, 1.59", "15.3707, 5.78962, -9.05325, 1.59", "17.2444, 7.58374, -9.74867, 1.59", "18.9529, 9.45897, -10.376, 2.04", "20.118, 10.9083, -10.789, 1.13", "21.1369, 12.2514, -11.0943, 1.81", "22.2439, 13.6395, -11.336, 2.27", "23.2872, 14.9137, -11.5199, 2.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992082157346
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.59542, 0.556191, 5.69, 1.81", "7.73034, 1.11438, 6.67408, 1.81", "9.22932, 1.50631, 7.36503, 1.81", "10.9641, 1.95987, 8.16465, 2.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992082157346
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-3.93458, 2.05769, 5.69, 1.81", "-5.46081, 3.40718, 6.17583, 1.81", "-7.25922, 4.99734, 6.7483, 1.81", "-8.70875, 6.27901, 7.20971, 1.81", "-10.4561, 7.824, 7.76592, 2.04" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992082157346
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.69542, -4.31581, -3.89, 2.72", "7.42317, -6.28239, -4.13575, 2.04", "8.59897, -9.45973, -4.53281, 2.04", "9.5189, -11.9456, -4.84346, 2.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992082157346
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.08458, -9.11431, -0.13, 3.18", "-3.15957, -10.4254, -0.04635, 2.5", "-3.37132, -14.1273, 0.189839, 2.27", "-3.5368, -17.0205, 0.374426, 2.72", "-3.65097, -19.0165, 0.501774, 3.18", "-3.71147, -20.0742, 0.569258, 3.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992082157346
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.33695, 2.11577, 0.0, 1.23063", "23.8965, 5.72385, 0.0, 1.23063", "38.4561, 9.33193, 0.0, 1.23063" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-13.843, 6.58818, -2.55, 0.91", "-15.3574, 6.5339, -1.4884, 0.91", "-16.8667, 6.56593, -0.4307, 0.91", "-18.3207, 6.59992, 0.575945, 0.91", "-19.3237, 6.60326, 1.25267, 0.45", "-20.5127, 6.5844, 2.02917, 1.36", "-22.137, 6.55232, 3.0491, 0.68", "-23.2522, 6.55319, 3.69535, 0.68", "-24.6301, 6.5264, 4.54865, 1.36", "-25.584, 6.50802, 5.14034, 0.45", "-26.1211, 6.49093, 5.47051, 1.13", "-27.1751, 6.41265, 6.11838, 0.23", "-28.1328, 6.26626, 6.72271, 0.91", "-30.4473, 5.88002, 8.22842, 0.23" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-13.843, 6.58818, -2.55, 2.04", "-15.9568, 8.03616, -2.9343, 2.04", "-17.7287, 9.24999, -3.25645, 2.04" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "23.2872, 14.9137, -11.5199, 0.68", "24.9149, 14.4032, -13.0272, 0.68", "27.7042, 13.6573, -15.2868, 2.27", "29.7271, 13.2278, -16.6705, 1.59", "31.8205, 12.8633, -17.8828, 0.68", "32.8352, 12.7369, -18.3988, 1.59", "33.5225, 12.6612, -18.7385, 1.81", "36.4145, 12.3502, -20.1602, 0.91", "38.2588, 12.1638, -21.0366, 0.45", "40.2522, 11.9579, -21.9776, 2.04", "42.0022, 11.7435, -22.8938, 0.91", "43.896, 11.5874, -24.0511, 2.5", "47.7576, 11.4271, -26.8821, 0.23", "48.7409, 11.4022, -27.6999, 2.27", "50.5659, 11.3381, -29.3018, 0.68", "52.9379, 11.2881, -31.3858, 0.68", "55.1463, 11.2663, -33.274, 1.59", "57.4958, 11.3686, -35.0348, 0.45", "59.1278, 11.4817, -36.0953, 1.36", "61.4507, 11.6352, -37.4923, 0.23", "62.4069, 11.6917, -37.9956, 0.91", "63.0367, 11.7161, -38.2381, 0.23", "65.2588, 11.8296, -38.8899, 1.81", "67.8535, 12.1746, -39.7032, 0.68", "68.5964, 12.3386, -40.0196, 1.13", "69.9487, 12.7044, -40.8198, 0.23", "71.2347, 13.029, -41.7315, 2.04", "74.0193, 13.6718, -43.8703, 0.23", "76.6326, 14.1042, -46.0977, 2.04", "78.2283, 14.2496, -47.5487, 2.5", "80.7881, 14.2753, -50.035, 0.23", "82.2414, 14.2042, -51.4972, 0.68", "83.0841, 14.1298, -52.3579, 0.23", "84.5806, 13.8981, -53.7949, 1.81", "86.4982, 13.6107, -55.2876, 0.23", "87.9001, 13.4237, -56.2229, 0.23", "89.2509, 13.3039, -57.0238, 1.59", "90.7474, 13.2521, -57.8938, 0.45", "91.6705, 13.2667, -58.4579, 1.81", "93.1231, 13.3786, -59.3508, 0.23", "95.8909, 13.6203, -61.0765, 2.04", "98.5227, 13.8504, -62.8906, 0.23", "98.9249, 13.8979, -63.2012, 0.91", "100.02, 14.0714, -64.0599, 0.23", "100.538, 14.1388, -64.4719, 1.13", "101.763, 14.2252, -65.3521, 1.59", "103.642, 14.289, -66.3924, 0.23", "104.769, 14.2353, -66.8358, 0.91", "106.047, 14.1708, -67.2101, 0.23", "107.83, 14.0285, -67.5512, 1.59", "109.887, 13.7353, -67.8714, 0.68", "112.006, 13.3494, -68.106, 1.13", "114.784, 12.7929, -68.4259, 0.23", "116.188, 12.5397, -68.6215, 1.13", "117.569, 12.298, -68.8587, 0.23", "120.378, 11.8378, -69.5025, 1.59", "121.883, 11.5581, -69.9493, 0.23", "124.414, 11.048, -70.8489, 1.81", "126.793, 10.5606, -71.7653, 0.23", "128.725, 10.2094, -72.6357, 1.59", "131.228, 9.91798, -73.8926, 0.23", "132.788, 9.90627, -74.7627, 0.91", "133.482, 10.0122, -75.2218, 0.23", "134.12, 10.2284, -75.7256, 1.36", "136.076, 11.2778, -77.429, 0.23", "136.476, 11.5783, -77.7826, 0.23", "137.8, 12.7627, -79.0163, 1.81", "139.675, 14.5299, -80.9551, 0.23", "140.433, 15.2357, -81.7716, 0.23", "141.299, 15.9447, -82.641, 0.68", "142.795, 16.8675, -84.0112, 0.23", "144.23, 17.504, -85.2825, 1.81", "145.875, 17.9043, -86.6642, 2.27", "146.836, 17.9422, -87.5092, 2.27", "149.003, 17.7432, -89.5142, 0.23", "150.863, 17.2761, -91.4332, 0.23", "151.491, 17.0142, -92.1308, 1.13", "152.444, 16.49, -93.2965, 1.13", "154.234, 15.42, -95.7731, 0.23", "154.809, 15.1862, -96.7256, 0.23", "155.293, 15.4043, -97.6124, 0.23", "156.003, 16.2702, -98.6648, 0.23", "156.759, 17.2863, -99.4978, 0.23", "158.17, 19.116, -100.613, 0.23", "159.754, 21.0622, -101.53, 0.91", "161.602, 22.9943, -102.384, 0.23", "162.615, 23.8413, -102.757, 0.23", "164.484, 25.0472, -103.316, 1.36", "166.326, 26.0796, -103.785, 0.23", "167.772, 26.7322, -104.1, 0.23", "169.706, 27.2834, -104.421, 0.23", "171.768, 27.5023, -104.71, 0.23", "172.736, 27.49, -104.826, 0.68" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "23.2872, 14.9137, -11.5199, 1.36", "24.9622, 17.4483, -11.9675, 1.36", "25.8354, 18.6648, -12.2428, 1.36", "26.5672, 19.6754, -12.4897, 1.36", "28.0554, 21.6623, -13.0425, 0.68", "28.9133, 22.7937, -13.3728, 1.59", "29.6083, 23.6814, -13.6113, 1.59", "31.0596, 25.355, -14.0274, 0.68", "32.4264, 26.9007, -14.3729, 1.59", "33.6926, 28.3918, -14.6757, 0.91", "34.1443, 28.9684, -14.7826, 1.36", "35.4008, 30.7118, -15.1153, 1.81", "36.4411, 32.2406, -15.3943, 2.04", "36.8551, 32.8574, -15.5034, 2.04", "38.6412, 35.5826, -16.0266, 1.13", "39.4363, 36.8646, -16.3181, 0.23", "40.672, 38.8946, -16.8659, 1.59", "41.9468, 41.0276, -17.5183, 1.36", "42.9202, 42.6318, -18.026, 1.36", "43.4912, 43.5529, -18.324, 2.04", "45.3243, 46.4049, -19.2614, 0.23", "46.8596, 48.5988, -20.0092, 0.45", "47.4203, 49.3347, -20.2363, 1.36", "48.205, 50.3003, -20.5183, 1.81", "48.8078, 50.965, -20.6856, 1.36", "49.8198, 51.9739, -20.8728, 0.68", "51.136, 53.1262, -20.9984, 0.68", "52.8855, 54.5341, -21.0957, 2.04", "53.5931, 55.0785, -21.1208, 2.04", "54.5178, 55.7558, -21.1223, 1.59", "55.3827, 56.3721, -21.0747, 2.04" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "10.9641, 1.95987, 8.16465, 0.91", "12.275, 2.17037, 8.39208, 0.91", "14.8863, 2.68377, 8.8119, 0.91", "16.0362, 2.93383, 9.00192, 1.81", "18.6591, 3.53898, 9.42205, 1.36", "20.8232, 4.00397, 9.75104, 1.81", "24.0836, 4.67544, 10.2443, 0.68", "25.9379, 5.07192, 10.5182, 1.81", "27.7741, 5.51947, 10.7438, 1.81", "29.0601, 5.85003, 10.9011, 2.27", "31.5971, 6.52227, 11.2017, 1.13", "34.3385, 7.2688, 11.6038, 0.23", "36.4648, 7.83067, 11.9851, 0.23", "38.8427, 8.4191, 12.3259, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "10.9641, 1.95987, 8.16465, 0.45", "12.3546, 0.367828, 9.30288, 0.45", "13.8992, -1.38668, 10.5373, 0.45", "14.6354, -2.14336, 11.0955, 0.45", "15.7186, -3.27936, 11.9652, 0.91", "16.3402, -3.95281, 12.4561, 0.91", "17.5322, -5.24443, 13.3975, 1.59", "18.8204, -6.64035, 14.4654, 0.68", "20.207, -8.19283, 15.6325, 1.36", "21.2652, -9.39235, 16.4817, 1.36", "22.7222, -10.9648, 17.547, 0.45" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-10.4561, 7.824, 7.76592, 2.72", "-12.0785, 8.72542, 9.65686, 2.72" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.4561, 7.824, 7.76592, 1.13", "-12.0054, 9.11043, 9.27286, 1.13", "-12.893, 9.84673, 10.0637, 0.68", "-14.1309, 10.9273, 11.078, 1.13", "-15.041, 11.8265, 11.7893, 0.23", "-15.858, 12.6338, 12.4278, 0.23", "-16.568, 13.3353, 12.9826, 0.23", "-16.9618, 13.6805, 13.2098, 0.23", "-17.7174, 14.4617, 13.5607, 0.23", "-18.4486, 15.3912, 13.8035, 0.68" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "9.5189, -11.9456, -4.84346, 1.13", "12.1994, -10.8763, -5.66042, 1.13", "14.1167, -10.1081, -6.24061, 0.68", "16.3958, -9.32301, -6.85061, 1.36", "18.2242, -8.76097, -7.30734, 1.81", "20.8295, -8.00905, -7.91665, 1.36", "22.1071, -7.6403, -8.21546, 1.13", "23.4826, -7.23485, -8.52934, 1.59", "26.5078, -6.37435, -9.15365, 0.91", "28.5648, -5.9062, -9.5142, 1.59", "29.7506, -5.71197, -9.69564, 2.5" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "9.5189, -11.9456, -4.84346, 1.36", "8.75336, -15.8471, -4.85536, 1.36", "8.24999, -18.4124, -4.86319, 1.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-3.71147, -20.0742, 0.569258, 2.04", "-4.75632, -21.5515, -0.178197, 2.04" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.71147, -20.0742, 0.569258, 0.68", "-3.04359, -24.4277, 1.37534, 0.68", "-2.6443, -27.0305, 1.85727, 1.13", "-2.0993, -30.5831, 2.51504, 1.13" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "38.4561, 9.33193, 0.0, 0.847747", "53.0157, 12.94, 0.0, 0.847747", "67.5753, 16.5481, 0.0, 0.847747" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-17.7287, 9.24999, -3.25645, 0.45", "-17.2498, 11.1119, -3.82755, 0.45", "-17.0587, 12.1558, -4.13602, 1.13", "-16.827, 14.4285, -4.8175, 0.23", "-16.7513, 15.7975, -5.25412, 0.68", "-16.6128, 18.094, -6.06489, 0.23", "-16.5321, 19.1642, -6.43937, 0.91", "-16.4756, 20.0517, -6.76157, 0.91", "-16.3591, 21.7126, -7.38988, 0.23", "-16.2022, 23.1812, -7.96434, 1.13", "-15.918, 24.5058, -8.52046, 0.23", "-15.2755, 26.1997, -9.34699, 1.36", "-14.4869, 27.6538, -10.1256, 0.45", "-14.2282, 28.011, -10.3501, 0.45", "-13.2189, 29.1045, -11.1943, 0.45", "-12.7637, 29.5586, -11.6265, 0.45", "-12.1603, 30.227, -12.409, 0.45", "-11.7759, 30.6629, -13.1177, 0.45", "-11.4487, 31.1741, -13.9434, 0.45", "-11.0636, 31.9252, -15.0338, 0.45", "-10.7946, 32.8306, -16.1684, 0.45", "-10.6366, 33.6101, -16.9954, 0.45", "-10.5404, 34.3528, -17.6648, 1.13", "-10.2555, 36.3921, -19.2059, 0.23", "-10.0471, 37.3386, -19.8476, 1.13", "-9.56928, 38.8197, -20.8239, 0.23", "-9.30196, 39.4384, -21.2268, 1.13", "-8.65122, 40.6514, -21.9842, 0.23", "-8.08472, 41.5286, -22.4491, 1.13", "-6.89293, 42.8669, -23.0867, 0.23", "-6.43943, 43.3061, -23.3011, 0.91", "-5.27737, 44.3324, -23.8352, 0.23", "-4.70331, 44.833, -24.1497, 0.23", "-3.5979, 45.8224, -24.7827, 0.91", "-2.65221, 46.8679, -25.443, 0.23", "-1.80492, 47.9732, -26.0981, 1.13", "-1.0573, 49.052, -26.6968, 0.23", "-0.121637, 50.5175, -27.4811, 0.23", "0.309831, 51.2961, -27.939, 1.13", "1.23548, 53.3138, -29.1796, 0.23", "1.47699, 53.9705, -29.5654, 0.91", "1.72944, 54.7579, -29.9921, 0.23", "1.79957, 55.0495, -30.1374, 0.91", "2.10384, 57.5579, -31.3554, 0.23", "2.20553, 58.4236, -31.859, 1.13", "2.36242, 59.7445, -32.7311, 0.23", "2.46421, 60.6659, -33.3624, 1.13", "2.67885, 62.8296, -34.9641, 0.23", "2.82958, 64.7017, -36.3684, 1.13", "2.94993, 66.8273, -37.9318, 0.23", "2.94395, 67.6708, -38.5929, 0.23", "2.88475, 68.3083, -39.0936, 0.91", "2.67744, 69.8265, -40.2441, 0.23", "2.5631, 70.6228, -40.8164, 0.91", "2.28659, 72.8318, -42.2457, 0.23", "2.09396, 74.3011, -43.0524, 0.23", "2.0243, 75.2274, -43.5416, 1.59", "1.95734, 77.1608, -44.5498, 0.23", "1.94644, 78.9802, -45.4753, 1.13", "1.98261, 80.1072, -46.0804, 0.23", "2.0415, 81.0281, -46.5787, 0.68", "2.3927, 83.4518, -47.9418, 0.23", "2.49018, 83.8702, -48.1944, 0.68", "2.80457, 85.2382, -49.0358, 0.23", "3.11983, 86.4743, -49.7756, 0.23", "3.31049, 87.0202, -50.1271, 1.13", "4.25562, 88.9941, -51.5004, 0.23", "5.18546, 90.2471, -52.3284, 0.91" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-17.7287, 9.24999, -3.25645, 2.04", "-19.5742, 10.4993, -3.27625, 2.04" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "55.3827, 56.3721, -21.0747, 0.23", "56.6607, 56.7564, -21.9412, 0.23", "58.0383, 57.1851, -22.8904, 0.23", "58.6425, 57.3802, -23.3116, 1.81", "60.1383, 57.8864, -24.3299, 0.23", "61.2223, 58.2083, -25.0372, 0.91", "62.2213, 58.4696, -25.6447, 0.23", "63.0583, 58.6512, -26.063, 1.36", "64.0458, 58.8096, -26.442, 0.23", "64.604, 58.8713, -26.6026, 0.91", "65.847, 58.9849, -26.8113, 0.23", "66.59, 59.0375, -26.8278, 0.23", "67.1174, 59.0905, -26.8058, 1.13", "68.3609, 59.2625, -26.7049, 0.23", "69.4005, 59.4481, -26.6031, 1.59", "70.8581, 59.7599, -26.4854, 0.23", "71.8935, 60.02, -26.4265, 1.13", "73.3053, 60.4159, -26.3982, 0.23", "74.5641, 60.8115, -26.4027, 1.13", "75.2467, 61.0468, -26.4218, 0.23", "76.8562, 61.6017, -26.5083, 0.23", "77.5268, 61.8289, -26.5448, 1.13", "78.4602, 62.1174, -26.597, 1.13", "80.0456, 62.581, -26.6968, 0.23", "81.626, 63.0628, -26.8217, 1.13", "82.8917, 63.4769, -26.9586, 0.23", "84.0531, 63.8994, -27.1018, 1.81", "85.4495, 64.4221, -27.2634, 0.23", "86.4589, 64.7828, -27.3743, 1.13", "87.7886, 65.268, -27.5118, 0.23", "88.8809, 65.6978, -27.6177, 1.13", "90.3219, 66.309, -27.729, 0.23", "91.7861, 66.9578, -27.8504, 1.13", "93.437, 67.7447, -27.975, 0.23", "94.2604, 68.1526, -28.0305, 0.23", "95.457, 68.7639, -28.1296, 1.36", "96.7672, 69.457, -28.282, 0.23", "97.3711, 69.7823, -28.3822, 0.91", "98.4377, 70.3595, -28.614, 0.23", "99.6911, 71.0062, -28.9448, 0.91", "101.314, 71.6959, -29.375, 0.23", "102.484, 72.086, -29.7091, 0.91", "103.145, 72.2543, -29.9122, 0.91", "104.039, 72.4153, -30.1916, 0.23", "104.856, 72.5066, -30.4432, 0.23", "106.036, 72.6471, -30.8581, 1.13", "107.154, 72.8785, -31.2887, 0.23", "107.672, 73.0396, -31.4929, 0.91", "108.529, 73.4058, -31.8317, 0.23", "109.562, 74.0047, -32.2761, 1.13", "111.134, 75.0963, -32.9834, 0.23", "112.446, 76.1309, -33.6056, 1.36", "113.525, 77.0413, -34.1016, 0.45", "114.616, 78.0245, -34.6086, 1.13", "115.759, 79.0765, -35.1577, 0.23", "116.382, 79.633, -35.4434, 0.23", "117.718, 80.69, -35.9594, 1.13", "118.169, 81.0083, -36.1174, 0.23", "118.885, 81.407, -36.3415, 1.13", "120.655, 82.1468, -36.8165, 0.23", "122.353, 82.6883, -37.203, 1.13", "123.605, 83.0481, -37.4716, 0.23", "124.787, 83.3742, -37.7389, 0.91", "126.306, 83.796, -38.0979, 0.23", "126.696, 83.9027, -38.1899, 0.91", "128.032, 84.2991, -38.4923, 0.23", "129.192, 84.6671, -38.8158, 1.13", "130.693, 85.2412, -39.2728, 0.23", "132.238, 85.8576, -39.7726, 0.91" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "55.3827, 56.3721, -21.0747, 0.23", "55.725, 58.1764, -21.634, 0.23", "55.9972, 59.1227, -21.9619, 0.23", "56.4347, 60.3529, -22.4245, 1.13", "56.7795, 61.1398, -22.7219, 1.81", "57.6074, 62.8295, -23.3359, 0.68", "57.983, 63.549, -23.5945, 0.23", "58.757, 64.8544, -24.0657, 1.81", "59.2468, 65.6176, -24.3229, 1.81", "60.0782, 66.8564, -24.758, 0.91", "60.8297, 67.9022, -25.1302, 0.23", "61.6521, 68.9843, -25.5003, 0.23", "62.2329, 69.727, -25.7593, 1.81", "62.7515, 70.3764, -25.9766, 1.81", "64.0255, 71.8762, -26.4883, 0.23", "64.6762, 72.5871, -26.738, 1.81", "65.366, 73.2754, -26.9802, 1.81", "66.5435, 74.3716, -27.3419, 0.23", "67.3732, 75.1191, -27.583, 0.23", "68.1987, 75.8498, -27.8019, 1.36", "69.1365, 76.6707, -28.025, 1.36", "70.8946, 78.26, -28.4893, 0.68", "71.7934, 79.1181, -28.7447, 0.23", "72.5119, 79.8385, -28.9561, 2.27", "73.9267, 81.3522, -29.3936, 0.23", "74.7491, 82.3074, -29.6729, 0.68", "75.4474, 83.2373, -29.941, 2.04", "75.9394, 83.9967, -30.1489, 2.04", "76.1891, 84.5083, -30.2789, 2.04", "76.8963, 86.4596, -30.7664, 0.23", "77.1429, 87.4131, -30.9966, 0.23", "77.4322, 88.7413, -31.309, 0.45", "77.5269, 89.2132, -31.4219, 2.27", "78.1215, 92.32, -32.1976, 0.23", "78.3453, 93.5668, -32.5178, 1.59", "78.6207, 95.1961, -32.9276, 0.45", "78.8194, 96.2465, -33.1715, 1.36", "79.2419, 98.1367, -33.6279, 0.23", "79.3625, 98.5988, -33.7399, 0.91", "79.6694, 99.5199, -33.96, 0.23", "80.0978, 100.645, -34.2135, 1.81", "80.6631, 101.955, -34.5319, 0.91", "81.514, 103.805, -34.9925, 0.23", "81.9039, 104.555, -35.1825, 0.23", "82.471, 105.504, -35.425, 1.81", "83.2158, 106.592, -35.7044, 1.81", "84.465, 108.277, -36.0614, 0.23", "85.5968, 109.687, -36.2883, 1.13", "86.3174, 110.515, -36.3801, 1.13", "87.8285, 112.189, -36.5213, 0.23", "88.8771, 113.327, -36.5705, 0.91", "90.2339, 114.74, -36.5871, 0.23", "90.7263, 115.247, -36.5906, 2.04", "91.0607, 115.62, -36.6043, 2.5", "91.667, 116.399, -36.6673, 2.04", "93.3843, 118.998, -37.0311, 0.23", "93.949, 119.985, -37.2163, 0.23", "94.6172, 121.372, -37.5566, 2.04", "95.3958, 123.292, -38.0595, 0.23", "95.631, 123.961, -38.252, 1.13", "96.1068, 125.533, -38.7498, 0.23", "96.3724, 126.601, -39.1221, 1.59", "96.7346, 128.175, -39.6909, 0.45", "97.0956, 129.717, -40.2722, 1.81", "97.487, 131.261, -40.8947, 0.23", "97.6309, 131.784, -41.1053, 0.68", "97.9652, 132.896, -41.5817, 0.23", "98.2483, 133.833, -41.9981, 1.59", "98.5783, 135.012, -42.5071, 0.68", "98.8201, 136.091, -42.9407, 1.81", "98.9252, 136.625, -43.15, 1.81", "99.2074, 138.126, -43.7249, 0.68", "99.3636, 138.994, -44.0336, 1.13", "99.5741, 140.064, -44.3931, 0.23", "99.8513, 141.397, -44.8246, 0.91", "100.177, 142.846, -45.2776, 0.23", "100.406, 143.769, -45.5654, 1.36", "100.718, 144.838, -45.8919, 1.36", "101.199, 146.225, -46.3399, 0.23", "101.614, 147.307, -46.7075, 0.91", "101.789, 147.742, -46.8527, 1.36", "102.632, 149.643, -47.4392, 0.23", "103.051, 150.534, -47.7368, 1.13", "103.693, 151.896, -48.1889, 0.23", "104.286, 153.258, -48.61, 0.91", "104.847, 154.629, -49.0433, 0.91", "105.43, 156.159, -49.573, 0.23", "105.769, 157.131, -49.9454, 0.23", "106.061, 158.04, -50.3213, 1.59", "106.379, 159.06, -50.7867, 2.5", "107.255, 161.993, -52.1846, 0.23", "107.59, 163.242, -52.806, 0.68", "107.954, 164.721, -53.5453, 0.23", "108.061, 165.151, -53.7509, 0.91", "108.284, 166.088, -54.1606, 0.23", "108.568, 167.385, -54.6631, 2.04", "109.07, 170.224, -55.5801, 0.23", "109.104, 170.447, -55.6417, 1.13", "109.241, 171.567, -55.9364, 1.81", "109.505, 174.284, -56.6372, 0.23", "109.602, 175.611, -56.9809, 0.23", "109.673, 176.836, -57.3287, 0.91", "109.709, 177.938, -57.664, 1.81", "109.691, 180.471, -58.4815, 0.23", "109.651, 181.557, -58.8644, 0.23", "109.553, 183.184, -59.5262, 1.81", "109.397, 185.062, -60.3186, 0.23", "109.262, 186.445, -60.9191, 1.81", "109.041, 188.633, -61.9039, 0.23", "108.896, 190.07, -62.5692, 1.59", "108.731, 191.763, -63.3765, 0.23", "108.678, 192.202, -63.5943, 1.36", "108.588, 192.834, -63.9156, 1.36", "108.429, 194.137, -64.5503, 0.45", "108.285, 195.516, -65.1976, 2.04", "108.109, 197.366, -65.9677, 0.23", "108.023, 198.44, -66.3695, 1.13", "107.977, 199.173, -66.6371, 1.81", "107.82, 201.872, -67.5651, 0.23", "107.762, 203.063, -67.9295, 1.13", "107.754, 203.907, -68.1736, 1.13", "107.801, 205.549, -68.6443, 0.23", "107.912, 207.118, -69.1339, 0.23", "108.016, 208.436, -69.5859, 0.23", "108.123, 209.969, -70.1809, 1.81", "108.312, 212.86, -71.3409, 0.23", "108.361, 213.782, -71.7428, 1.13", "108.44, 215.059, -72.3592, 0.23", "108.497, 216.113, -72.9366, 1.59", "108.533, 217.112, -73.5322, 0.45", "108.517, 218.077, -74.1444, 1.13", "108.422, 219.532, -75.0823, 0.23", "108.302, 221.179, -76.1598, 1.13", "108.243, 222.062, -76.7196, 0.23", "108.205, 222.832, -77.2051, 0.91", "108.168, 224.188, -78.0295, 0.23", "108.165, 225.349, -78.6985, 1.36", "108.19, 226.471, -79.264, 0.23", "108.209, 227.565, -79.7671, 0.91", "108.219, 228.287, -80.0639, 0.91", "108.204, 229.687, -80.5926, 0.23", "108.166, 230.795, -80.9575, 1.59", "108.022, 232.871, -81.5704, 0.23", "107.869, 234.162, -81.9106, 1.59", "107.555, 236.145, -82.4252, 0.23", "107.341, 237.368, -82.7253, 0.23", "107.109, 238.47, -82.9756, 1.81", "107.042, 238.749, -83.0378, 1.81", "106.152, 242.082, -83.7338, 0.23", "105.88, 243.095, -83.9471, 0.91", "105.568, 244.193, -84.19, 0.23", "105.251, 245.343, -84.4458, 0.91", "104.769, 247.023, -84.814, 0.23", "104.449, 248.123, -85.0729, 1.59", "103.925, 249.898, -85.5026, 0.45", "103.528, 251.287, -85.836, 1.36", "103.284, 252.174, -86.0512, 1.36", "103.033, 253.186, -86.2898, 0.23", "102.819, 254.358, -86.5473, 0.91", "102.561, 256.255, -86.94, 0.23", "102.485, 257.157, -87.1077, 1.13", "102.464, 258.527, -87.3384, 0.23", "102.531, 259.68, -87.5171, 2.5", "102.812, 261.913, -87.8228, 0.23", "102.907, 262.394, -87.8828, 1.13", "103.224, 263.502, -88.0373, 1.13", "103.898, 265.33, -88.3547, 0.23", "104.364, 266.408, -88.5736, 1.81", "104.636, 267.021, -88.7218, 1.81", "105.271, 268.53, -89.1666, 0.68", "105.7, 269.539, -89.4818, 0.23", "106.317, 270.982, -89.9713, 1.59", "106.56, 271.584, -90.1935, 1.59", "107.369, 273.897, -91.0623, 0.23", "107.771, 275.107, -91.5353, 1.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-12.0785, 8.72542, 9.65686, 0.91", "-13.8036, 10.3403, 10.0044, 0.91", "-15.3519, 11.7897, 10.3162, 0.91", "-17.2375, 13.5548, 10.6961, 0.91", "-19.0034, 15.2079, 11.0518, 1.36", "-20.567, 16.6716, 11.3667, 2.04" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-12.0785, 8.72542, 9.65686, 1.13", "-14.8986, 9.14015, 9.89727, 1.13", "-16.8531, 9.44053, 10.0395, 0.68", "-19.4268, 9.69937, 10.2793, 1.59", "-23.1759, 9.87884, 10.7141, 0.68", "-25.906, 9.87857, 11.0404, 0.68", "-27.1102, 9.8405, 11.1776, 0.68", "-30.5028, 9.59161, 11.6185, 0.23", "-33.4483, 9.16587, 12.052, 0.23", "-35.2813, 8.74892, 12.3254, 0.23", "-37.2122, 8.12539, 12.5734, 0.68", "-39.1014, 7.41569, 12.8038, 1.36", "-42.4527, 6.06144, 13.1946, 0.23", "-44.1027, 5.33762, 13.3814, 0.23", "-45.7724, 4.67575, 13.4929, 0.91", "-47.9259, 3.84858, 13.5936, 0.23" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "29.7506, -5.71197, -9.69564, 0.23", "31.6838, -6.5191, -9.96131, 0.23", "33.6371, -7.39922, -10.1779, 0.23", "34.5092, -7.79305, -10.2535, 1.13", "35.5879, -8.29575, -10.3268, 0.23", "36.8831, -8.92871, -10.3997, 1.81", "38.537, -9.80321, -10.4496, 0.23", "39.7597, -10.5203, -10.3967, 0.91", "41.3968, -11.5453, -10.2331, 0.91", "42.621, -12.3252, -10.0816, 0.23", "43.1373, -12.6674, -9.99912, 0.23", "44.7267, -13.7208, -9.70515, 0.45", "46.2071, -14.7054, -9.39935, 0.23", "47.6941, -15.7871, -9.07076, 1.13", "48.4252, -16.3451, -8.91025, 1.13", "50.3948, -17.7718, -8.63088, 0.23", "51.4619, -18.5023, -8.56096, 0.68", "51.9234, -18.7956, -8.56614, 0.23", "53.3131, -19.6119, -8.66063, 0.91", "54.7872, -20.3296, -8.78081, 0.91", "56.9645, -21.2672, -8.97281, 0.23", "58.4985, -21.7943, -9.11721, 0.23", "59.6008, -22.1184, -9.20334, 0.91", "61.6647, -22.6696, -9.32363, 0.23", "63.0687, -23.0061, -9.37139, 0.23", "64.1172, -23.2711, -9.37029, 0.91", "65.9001, -23.8016, -9.28794, 0.23", "67.0213, -24.166, -9.22669, 0.91", "68.2016, -24.6218, -9.12445, 0.91", "69.5671, -25.2249, -9.00507, 0.23", "70.5495, -25.6943, -8.92599, 0.68", "73.0422, -26.9307, -8.72178, 0.23", "73.7969, -27.3232, -8.67029, 0.91", "76.1674, -28.5629, -8.54772, 0.23", "77.9103, -29.443, -8.50892, 1.13", "79.4553, -30.2008, -8.51884, 1.13", "80.7684, -30.8004, -8.56107, 0.23", "82.0599, -31.369, -8.63364, 0.23", "83.9319, -32.1738, -8.77188, 0.91", "85.9609, -32.9964, -8.93295, 0.23", "88.2455, -33.9136, -9.0358, 0.91", "89.7294, -34.5169, -9.07182, 0.91", "90.908, -34.9886, -9.07748, 0.23", "92.417, -35.5951, -9.07773, 1.13", "95.1, -36.6758, -9.10829, 0.23", "97.1626, -37.501, -9.15263, 0.23", "98.8652, -38.1732, -9.23363, 1.13", "99.5079, -38.4174, -9.27862, 1.13", "101.986, -39.2215, -9.50269, 0.23", "103.371, -39.6309, -9.60244, 0.23", "104.951, -40.0762, -9.64359, 0.68", "106.441, -40.4677, -9.60814, 0.23", "108.717, -41.0816, -9.41562, 1.13", "112.016, -41.9948, -8.96024, 0.23", "113.927, -42.5932, -8.57591, 0.68", "116.659, -43.5742, -7.91522, 0.23", "118.207, -44.2368, -7.47815, 1.13", "119.305, -44.7815, -7.13339, 0.23", "120.071, -45.2377, -6.87415, 0.91", "121.796, -46.5777, -6.31641, 0.91", "122.478, -47.1618, -6.15001, 0.23", "123.305, -48.0004, -5.99772, 0.91", "124.252, -49.0749, -5.86662, 0.23", "124.407, -49.2546, -5.85211, 0.91", "126.244, -51.4809, -5.67016, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "29.7506, -5.71197, -9.69564, 0.23", "31.7718, -5.57566, -10.6473, 0.23", "33.8746, -5.53133, -11.5853, 0.91", "35.8964, -5.49664, -12.4839, 0.23", "37.6922, -5.41132, -13.3092, 0.91", "38.3357, -5.35664, -13.6177, 0.91", "39.4199, -5.20446, -14.1756, 0.23", "40.405, -5.0392, -14.6751, 0.91", "41.7214, -4.76359, -15.3577, 0.23", "42.9703, -4.48436, -16.0877, 2.04", "44.6173, -4.14957, -17.1251, 0.45", "45.8897, -3.88613, -17.9262, 0.23", "46.7288, -3.69921, -18.4509, 0.23", "48.4407, -3.31013, -19.4698, 1.81", "50.0977, -3.00084, -20.4291, 0.23", "52.0443, -2.75793, -21.498, 1.59", "53.2166, -2.66748, -22.1242, 0.45", "54.4951, -2.61026, -22.8377, 1.36", "55.1775, -2.56418, -23.2519, 1.81", "56.8882, -2.41023, -24.4855, 0.23", "57.7936, -2.31814, -25.1958, 0.23", "59.1265, -2.16376, -26.2912, 1.59", "60.7346, -1.97014, -27.6296, 0.23", "61.8827, -1.84532, -28.5541, 1.36", "64.4766, -1.56648, -30.552, 0.23", "65.9301, -1.37531, -31.5598, 2.04", "67.7426, -1.14212, -32.66, 0.23", "69.0959, -1.00311, -33.4033, 1.36", "71.0517, -0.87373, -34.3382, 0.23", "72.7349, -0.83029, -35.0501, 1.59", "75.0455, -0.855426, -35.9019, 0.23", "76.9301, -0.932968, -36.5876, 0.23", "79.7915, -1.11955, -37.6395, 1.81", "81.379, -1.23487, -38.2453, 0.23", "82.4926, -1.30769, -38.7571, 0.91", "83.8494, -1.37357, -39.5866, 0.23", "85.3267, -1.37575, -40.8432, 1.13", "86.4307, -1.26313, -42.0168, 0.23", "87.4487, -1.05016, -43.2285, 1.13", "89.0345, -0.52528, -45.3725, 0.23", "90.5224, 0.134831, -47.5202, 2.04", "91.8057, 0.839087, -49.3905, 0.23", "92.4684, 1.23608, -50.3304, 1.36", "93.8679, 2.12858, -52.129, 0.45", "94.6713, 2.61329, -53.032, 1.13", "96.3431, 3.52383, -54.536, 0.23", "97.6769, 4.21718, -55.5526, 1.59", "99.1421, 4.99824, -56.5581, 0.23", "100.048, 5.46036, -57.1368, 0.91", "101.543, 6.21083, -58.1177, 0.68", "102.518, 6.67856, -58.7385, 0.23", "104.347, 7.5967, -59.8823, 1.13", "105.866, 8.3491, -60.8147, 0.23", "106.765, 8.77969, -61.412, 1.13", "108.988, 9.67595, -62.9185, 0.23", "110.068, 10.0067, -63.6415, 1.59", "112.151, 10.3995, -64.9906, 0.23", "113.604, 10.4693, -65.852, 1.59", "116.559, 10.3765, -67.4635, 0.68", "118.243, 10.2822, -68.3433, 1.36", "120.156, 10.1061, -69.3239, 0.23", "121.125, 9.98335, -69.887, 1.13", "123.319, 9.62945, -71.2567, 0.23", "125.331, 9.33192, -72.5676, 1.13", "126.306, 9.23296, -73.212, 1.13", "127.828, 9.21802, -74.3903, 0.23", "128.956, 9.3204, -75.4818, 0.23", "129.643, 9.44766, -76.2061, 1.13", "130.245, 9.65757, -76.9841, 1.13", "131.657, 10.3558, -78.989, 0.23", "132.446, 10.9313, -80.2909, 0.23", "133.909, 12.4161, -83.0761, 0.23", "134.58, 13.4247, -84.6864, 2.27", "135.408, 15.4882, -87.6698, 0.23", "135.535, 16.191, -88.61, 0.91", "135.577, 18.3929, -91.3802, 0.23", "135.531, 19.2104, -92.3931, 0.91", "135.438, 20.0783, -93.4279, 0.23", "135.246, 21.2818, -94.9765, 0.91", "134.943, 22.8012, -96.9046, 0.23", "134.844, 23.2898, -97.5529, 1.13", "134.726, 24.3633, -99.1026, 0.23", "134.773, 24.9938, -100.174, 0.91", "135.14, 26.1139, -102.235, 0.91", "135.618, 26.9365, -103.879, 0.23", "136.244, 27.6806, -105.443, 0.91", "137.172, 28.5608, -107.354, 0.91", "138.847, 29.9085, -110.471, 0.23", "139.678, 30.4492, -111.859, 0.68", "140.446, 30.844, -112.922, 0.68", "141.337, 31.2322, -114.026, 0.23", "142.53, 31.7225, -115.381, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "8.24999, -18.4124, -4.86319, 0.45", "6.52188, -18.7392, -6.28535, 0.45", "5.48888, -18.9573, -7.12206, 1.36", "4.34076, -19.1966, -8.05554, 0.45", "3.30919, -19.3438, -8.8605, 0.68", "1.78246, -19.5097, -10.0962, 0.23", "0.575826, -19.6423, -11.0619, 0.91", "-1.36507, -19.8764, -12.6252, 0.23", "-1.87777, -19.929, -13.0477, 1.36", "-3.21568, -20.0041, -14.1561, 1.36", "-4.35485, -20.0223, -15.0792, 0.23", "-6.09111, -19.994, -16.432, 0.91", "-7.85767, -19.96, -17.8824, 0.23", "-9.43389, -19.9755, -19.1752, 0.91", "-10.2976, -20.0162, -19.8782, 0.91", "-11.4033, -20.1323, -20.7911, 0.23", "-12.3129, -20.2257, -21.5353, 0.91", "-13.7638, -20.3613, -22.7661, 0.23", "-14.6618, -20.5058, -23.5046, 0.68", "-15.3492, -20.6418, -24.0736, 0.23", "-16.3293, -20.8353, -24.8367, 1.36", "-17.4923, -21.07, -25.6798, 1.36", "-18.4112, -21.2761, -26.2818, 0.23", "-19.5281, -21.5117, -26.9771, 0.91", "-21.4635, -21.9073, -28.1943, 0.23", "-23.074, -22.2302, -29.2489, 0.23", "-23.4502, -22.3006, -29.4935, 1.36", "-26.3348, -22.8411, -31.3785, 0.23", "-27.7029, -23.1048, -32.3324, 1.59", "-28.4292, -23.2418, -32.8587, 1.36", "-30.3581, -23.6237, -34.3223, 0.23", "-31.4533, -23.8403, -35.166, 1.13", "-31.6787, -23.8821, -35.3307, 1.13", "-33.4641, -24.2295, -36.5979, 0.23", "-34.1994, -24.3946, -37.1043, 0.91", "-35.669, -24.7725, -38.122, 0.23", "-36.8353, -25.056, -38.9002, 0.91", "-38.2995, -25.4345, -39.8994, 0.23", "-39.3822, -25.719, -40.669, 1.81", "-41.308, -26.2526, -42.0824, 0.23", "-43.5807, -26.9528, -43.9024, 1.13", "-45.4362, -27.5862, -45.563, 0.23", "-46.4363, -27.9457, -46.543, 0.68", "-47.9732, -28.4973, -48.1233, 1.36", "-50.0212, -29.1576, -50.23, 0.23", "-51.7768, -29.6737, -52.0633, 1.59", "-53.432, -30.0991, -53.8089, 0.23", "-54.5928, -30.3723, -54.9757, 0.23", "-55.3976, -30.5136, -55.7184, 1.13", "-56.9567, -30.7361, -57.0173, 0.23", "-57.6191, -30.8077, -57.5179, 0.68", "-58.7337, -30.936, -58.2645, 0.23", "-60.7105, -31.1676, -59.4679, 1.13", "-63.4064, -31.3999, -61.0585, 0.23", "-64.1863, -31.439, -61.5163, 0.23", "-65.6721, -31.4982, -62.4767, 0.23", "-66.5725, -31.5047, -63.0838, 1.13", "-67.9196, -31.4554, -64.1217, 1.13", "-70.3079, -31.2924, -66.2107, 0.23", "-72.2186, -31.1137, -68.0068, 0.91", "-74.4321, -30.9123, -70.2337, 0.23", "-75.002, -30.8743, -70.8385, 0.91", "-77.3608, -30.8282, -73.4108, 0.23", "-78.6286, -30.9242, -74.8602, 0.68", "-79.7906, -31.123, -76.1961, 0.23", "-80.2353, -31.2292, -76.6685, 0.91", "-81.3978, -31.547, -77.7195, 0.23", "-82.5655, -31.8878, -78.6907, 0.68", "-84.1176, -32.3843, -79.8268, 0.23", "-84.7752, -32.5926, -80.3008, 1.13", "-87.7269, -33.5675, -82.385, 0.23", "-89.289, -34.0585, -83.499, 0.68", "-91.4253, -34.69, -85.0402, 0.23", "-92.7985, -35.0927, -86.0589, 1.13", "-96.1261, -36.0655, -88.5094, 0.23", "-97.5009, -36.4732, -89.5243, 0.91", "-98.8801, -36.8749, -90.5441, 0.23", "-99.6596, -37.0957, -91.1347, 0.91", "-101.082, -37.6041, -92.2045, 0.23", "-101.959, -38.0036, -92.8791, 0.23", "-103.285, -38.8147, -93.8535, 0.91", "-104.717, -39.8642, -94.8551, 0.23", "-105.301, -40.3436, -95.2414, 0.91", "-107.523, -42.3824, -96.6733, 0.23", "-109.543, -44.3882, -97.9433, 1.13", "-112.341, -47.406, -99.7106, 0.23", "-114.117, -49.4136, -100.81, 0.91", "-114.536, -49.9005, -101.051, 0.23", "-115.627, -51.2047, -101.65, 0.23", "-116.304, -52.0282, -101.99, 0.45", "-117.127, -53.0911, -102.356, 0.23", "-117.91, -54.2569, -102.816, 0.91", "-118.658, -55.4202, -103.351, 0.23", "-119.379, -56.5689, -103.926, 0.68", "-120.802, -58.8068, -105.129, 0.23", "-121.168, -59.4162, -105.474, 0.91", "-122.988, -62.4945, -107.306, 0.23", "-123.401, -63.1925, -107.738, 1.13", "-124.258, -64.5534, -108.64, 1.13", "-125.007, -65.6971, -109.416, 1.13", "-126.004, -67.3158, -110.46, 0.68", "-126.408, -68.0605, -110.887, 0.23", "-126.872, -68.9652, -111.372, 0.91", "-127.914, -71.1474, -112.556, 0.23", "-128.605, -72.6973, -113.424, 2.04", "-129.782, -75.4573, -114.984, 0.23", "-130.347, -76.833, -115.781, 0.68", "-131.367, -79.4875, -117.327, 0.23", "-131.784, -80.6235, -118.018, 0.91", "-132.6, -82.7779, -119.381, 0.23", "-132.757, -83.1345, -119.642, 0.68", "-133.258, -84.2412, -120.502, 0.23", "-133.8, -85.6323, -121.564, 0.91", "-134.311, -87.1545, -122.692, 0.23", "-134.649, -88.2336, -123.5, 1.13", "-135.646, -91.5504, -125.978, 0.23", "-136.155, -93.2617, -127.261, 0.91", "-136.899, -95.715, -129.096, 0.23" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "8.24999, -18.4124, -4.86319, 0.68", "7.81271, -20.5564, -5.42319, 0.68", "7.41393, -22.252, -5.86416, 1.36", "7.27753, -22.7937, -6.001, 1.36", "6.57225, -25.3167, -6.63397, 0.68", "5.95535, -27.2277, -7.1076, 1.13", "5.081, -29.6782, -7.77655, 0.45", "4.53381, -30.9705, -8.15625, 1.13", "3.71785, -32.7605, -8.7654, 1.81", "3.12946, -34.0068, -9.23562, 1.81", "1.44724, -37.5366, -10.6537, 0.68", "0.675479, -39.1931, -11.335, 1.36", "-0.134166, -40.9865, -12.1162, 1.81", "-1.41706, -44.0202, -13.4798, 0.91", "-2.54739, -46.8778, -14.7648, 0.68", "-2.8132, -47.6301, -15.0955, 2.27", "-3.21466, -48.9193, -15.6404, 1.59", "-3.88947, -51.4218, -16.5735, 0.45", "-4.41813, -53.6585, -17.3364, 1.36", "-4.9295, -56.0825, -18.0461, 0.68", "-5.28494, -57.8594, -18.5311, 1.81", "-5.44564, -58.6804, -18.7633, 2.27", "-5.95331, -61.4205, -19.556, 0.23", "-6.1025, -62.2329, -19.7887, 0.23", "-6.35524, -63.7583, -20.23, 1.59", "-6.48819, -64.683, -20.5122, 1.59", "-6.91462, -67.7219, -21.4706, 0.23", "-7.07183, -68.851, -21.8387, 1.13", "-7.15048, -69.535, -22.0891, 1.13", "-7.29099, -71.1512, -22.7037, 1.13", "-7.40784, -72.8252, -23.3439, 0.23", "-7.43689, -73.1761, -23.4687, 1.13", "-7.58347, -74.5638, -23.9064, 1.13", "-7.86828, -76.9606, -24.642, 0.23", "-7.90239, -77.2392, -24.7255, 1.81", "-8.1541, -78.7563, -25.1631, 1.81", "-8.68742, -81.532, -25.9093, 0.23", "-9.03066, -82.8883, -26.2615, 0.23", "-9.75628, -85.1159, -26.778, 2.5", "-10.0467, -85.9168, -26.9343, 2.5", "-11.1213, -88.8702, -27.4778, 0.45", "-11.4938, -89.9521, -27.6607, 1.13", "-12.3436, -92.6738, -28.0737, 0.23", "-13.0158, -95.102, -28.4441, 2.04", "-13.6398, -97.9121, -28.8607, 0.23", "-13.8994, -99.6025, -29.1142, 1.59", "-13.9841, -101.446, -29.422, 0.68", "-13.9171, -103.539, -29.8404, 0.23", "-13.7429, -105.014, -30.1804, 0.23", "-13.5564, -106.152, -30.487, 0.68", "-13.3645, -107.328, -30.8477, 1.59", "-12.9905, -109.995, -31.692, 0.23", "-12.878, -111.269, -32.1313, 0.91", "-12.8298, -112.646, -32.6166, 0.23", "-12.8335, -113.759, -32.9921, 0.68", "-12.9135, -114.951, -33.3972, 0.23", "-13.1306, -116.606, -33.941, 2.04", "-13.6812, -119.37, -34.8007, 0.23", "-13.9465, -120.54, -35.1476, 0.45", "-14.222, -121.616, -35.4637, 0.23", "-14.6815, -123.189, -35.9248, 1.81", "-15.4264, -125.388, -36.5544, 0.23", "-16.2244, -127.402, -37.1311, 1.59", "-16.9086, -128.922, -37.5442, 1.59", "-17.8068, -130.782, -38.0888, 0.23", "-18.4157, -131.929, -38.4496, 1.59", "-19.4603, -133.758, -39.0632, 0.23", "-20.5511, -135.53, -39.7647, 0.23", "-21.0011, -136.227, -40.0732, 0.91", "-21.8935, -137.531, -40.7123, 0.23", "-22.4314, -138.348, -41.1255, 1.36", "-22.6034, -138.64, -41.2711, 1.36", "-23.698, -140.794, -42.2733, 0.23", "-24.179, -141.842, -42.7315, 1.13", "-24.2839, -142.106, -42.8292, 0.23", "-24.8811, -143.656, -43.3303, 0.23", "-25.1864, -144.431, -43.5633, 1.81", "-26.1767, -146.821, -44.2511, 0.23", "-26.7172, -148.084, -44.584, 1.59", "-27.9991, -150.852, -45.4464, 0.23", "-28.5116, -151.929, -45.8146, 2.04", "-28.9761, -152.838, -46.153, 2.04", "-29.7653, -154.463, -46.7529, 0.23", "-30.3197, -155.731, -47.2, 0.91", "-31.3571, -158.316, -48.0547, 0.23", "-31.815, -159.623, -48.4469, 1.36", "-32.0216, -160.316, -48.6266, 1.36", "-32.9629, -163.865, -49.4078, 0.45", "-33.4651, -165.803, -49.8109, 1.36", "-33.6808, -166.617, -49.9755, 1.36", "-34.7191, -170.518, -50.7191, 0.23", "-35.245, -172.209, -51.0675, 2.04", "-36.7397, -176.621, -52.0223, 0.23", "-37.2827, -177.988, -52.3555, 0.23", "-37.7634, -179.106, -52.6461, 1.59", "-38.2739, -180.203, -52.9334, 1.59", "-39.9095, -183.481, -53.8018, 0.23", "-40.5491, -184.722, -54.1268, 1.81", "-42.3926, -188.078, -54.9837, 0.23", "-43.4186, -189.875, -55.4209, 1.81", "-45.1164, -192.655, -56.1117, 0.23", "-45.7888, -193.649, -56.3687, 1.81", "-46.2323, -194.197, -56.5231, 1.81", "-47.4518, -195.448, -56.9125, 0.23", "-48.3749, -196.25, -57.1833, 0.91", "-49.9782, -197.513, -57.6932, 0.23", "-51.4839, -198.617, -58.2116, 1.13", "-53.2708, -199.917, -58.8432, 0.23", "-54.1972, -200.642, -59.2073, 1.36", "-54.828, -201.184, -59.4778, 1.36", "-57.3286, -203.463, -60.6189, 0.23", "-57.6344, -203.755, -60.7707, 1.81", "-58.2138, -204.355, -61.0645, 1.36", "-60.7327, -207.189, -62.5291, 0.23", "-61.7415, -208.369, -63.1733, 1.13", "-61.8687, -208.524, -63.2592, 1.13", "-63.4987, -210.641, -64.4125, 0.23", "-64.7489, -212.297, -65.3073, 1.13", "-66.5673, -214.811, -66.6201, 0.23", "-67.4377, -216.049, -67.2616, 1.36", "-68.4466, -217.522, -68.0121, 0.68", "-69.1372, -218.533, -68.5109, 1.36", "-69.6381, -219.256, -68.8469, 1.36", "-70.9494, -221.071, -69.6491, 0.45", "-71.906, -222.454, -70.1538, 0.91", "-72.7322, -223.739, -70.5634, 0.23", "-73.3385, -224.815, -70.8649, 1.59", "-74.3803, -227.099, -71.3981, 0.68", "-74.8184, -228.341, -71.6339, 1.36", "-75.4698, -230.869, -72.0042, 0.45", "-75.727, -232.442, -72.1266, 0.91", "-75.867, -233.95, -72.1881, 0.91", "-75.9798, -236.273, -72.183, 0.23", "-76.0118, -237.253, -72.1511, 1.13", "-76.095, -238.422, -72.0761, 1.13", "-76.3903, -240.723, -71.8871, 0.23", "-76.7957, -242.705, -71.7257, 0.91", "-77.1478, -243.95, -71.6043, 0.23", "-77.7576, -245.696, -71.4156, 1.59", "-78.9789, -248.582, -71.0766, 0.23", "-79.2937, -249.24, -70.9976, 0.91", "-80.1487, -250.837, -70.829, 0.23", "-81.0151, -252.249, -70.6776, 1.36", "-81.2168, -252.55, -70.6504, 1.36", "-82.6893, -254.522, -70.4834, 0.45", "-83.0466, -254.961, -70.4741, 1.36", "-83.7348, -255.806, -70.4864, 1.36", "-84.9027, -257.24, -70.5664, 0.45", "-85.5347, -258.018, -70.6524, 0.45", "-86.1273, -258.772, -70.7657, 1.13", "-88.1782, -261.428, -71.2829, 0.23", "-88.6098, -261.997, -71.3972, 1.36", "-88.7738, -262.218, -71.4435, 1.36", "-90.6901, -264.809, -72.0359, 0.45", "-91.6424, -266.033, -72.3166, 1.13", "-92.1879, -266.709, -72.4689, 1.13", "-93.6267, -268.483, -72.8664, 0.23", "-94.3952, -269.432, -73.0704, 0.68", "-95.6859, -271.134, -73.3991, 0.91", "-96.8546, -272.803, -73.6859, 0.23", "-97.5933, -273.901, -73.8531, 1.59", "-99.335, -276.643, -74.2348, 0.23", "-99.9126, -277.592, -74.363, 0.91", "-101.463, -280.376, -74.7256, 0.23", "-101.849, -281.131, -74.8148, 1.13", "-103.084, -283.631, -75.096, 0.23", "-104.068, -285.596, -75.303, 0.23", "-105.019, -287.42, -75.4671, 0.91", "-106.454, -289.928, -75.6965, 0.23", "-107.189, -290.981, -75.7979, 1.59", "-108.351, -292.411, -75.9463, 0.23", "-109.228, -293.277, -76.0662, 0.91", "-110.361, -294.145, -76.2146, 0.23", "-111.512, -294.849, -76.3709, 1.36", "-114.603, -296.495, -76.837, 0.23", "-115.596, -297.025, -76.9916, 0.91", "-118.53, -298.691, -77.4638, 0.23", "-120.363, -299.879, -77.7389, 1.81", "-121.677, -300.875, -77.9369, 0.23", "-123.08, -302.176, -78.1052, 0.68", "-124.22, -303.419, -78.194, 0.23", "-125.456, -304.905, -78.2246, 1.13", "-127.086, -307.096, -78.1236, 0.23", "-127.943, -308.312, -78.0032, 1.36", "-129.29, -310.242, -77.7454, 0.23", "-130.61, -312.003, -77.4689, 0.91", "-132.103, -313.886, -77.1559, 0.23", "-133.479, -315.569, -76.8478, 0.23", "-134.881, -317.233, -76.5536, 0.91", "-135.495, -317.952, -76.4347, 0.23", "-136.225, -318.851, -76.3094, 0.91", "-137.374, -320.396, -76.1035, 0.23", "-138.106, -321.355, -75.9481, 0.91", "-141.029, -324.867, -75.1906, 0.23", "-142.278, -326.205, -74.782, 1.13", "-144.039, -327.802, -74.1357, 0.45", "-145.597, -328.964, -73.5177, 1.13", "-147.645, -329.991, -72.6225, 0.23", "-149.208, -330.37, -71.8347, 0.23", "-150.988, -330.239, -70.9342, 0.91", "-153.167, -329.697, -69.9127, 0.23", "-154.318, -329.276, -69.4827, 0.23", "-156.167, -328.491, -69.0145, 0.91", "-157.993, -327.707, -68.8402, 0.23", "-160.304, -326.702, -68.8178, 0.23", "-160.778, -326.488, -68.8494, 0.68", "-162.573, -325.71, -69.1002, 0.23", "-163.559, -325.345, -69.3961, 0.23", "-165.143, -324.913, -70.2303, 0.68" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-4.75632, -21.5515, -0.178197, 0.45", "-6.99414, -24.4514, 0.449969, 0.45", "-7.49758, -25.0708, 0.543693, 1.59", "-8.48337, -26.2564, 0.675502, 1.59", "-9.85588, -27.8797, 0.797877, 1.36", "-10.894, -29.1133, 0.870372, 0.91", "-12.1886, -30.6378, 0.949059, 0.91", "-13.8733, -32.5343, 0.952618, 1.13", "-16.616, -35.6535, 0.900737, 1.59", "-18.0927, -37.318, 0.852552, 0.91", "-18.8133, -38.0951, 0.826204, 0.23", "-19.6141, -38.9505, 0.787812, 0.91", "-20.8289, -40.1984, 0.734052, 2.04", "-22.8809, -42.1065, 0.746505, 0.23", "-23.8383, -42.9353, 0.791131, 1.36", "-24.9821, -43.9114, 0.896616, 1.36", "-26.5277, -45.2426, 1.10123, 0.45", "-28.2461, -46.778, 1.39009, 1.13", "-30.3115, -48.6584, 1.81085, 0.45", "-31.0051, -49.3105, 1.96745, 1.81", "-33.1048, -51.3169, 2.43958, 0.45", "-34.3161, -52.438, 2.71049, 0.45", "-35.7594, -53.7526, 3.04217, 1.81", "-36.8964, -54.7803, 3.28315, 1.13", "-40.0326, -57.5954, 3.82418, 0.23", "-40.8116, -58.2665, 3.95672, 0.23", "-42.8684, -59.8811, 4.28945, 0.91" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-4.75632, -21.5515, -0.178197, 0.91", "-5.95751, -22.4582, -1.7582, 0.91", "-7.61936, -23.7127, -3.94413, 0.68", "-8.82048, -24.6195, -5.52404, 1.59", "-10.1477, -25.6213, -7.26974, 0.45", "-10.8952, -26.1856, -8.253, 0.45", "-12.0459, -27.0542, -9.76654, 1.81" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.0993, -30.5831, 2.51504, 0.23", "-2.57182, -32.6415, 3.10618, 0.23", "-2.89839, -34.0441, 3.46121, 1.36", "-3.27243, -35.6373, 3.80957, 1.36", "-3.52413, -36.6993, 4.02033, 0.68", "-3.77855, -37.7029, 4.22809, 1.36", "-4.03839, -38.7363, 4.44087, 1.36", "-4.39047, -40.1099, 4.69395, 1.36", "-4.84162, -41.8978, 4.98578, 0.45", "-5.37228, -43.9727, 5.29303, 1.81", "-6.03865, -46.5571, 5.63228, 0.45", "-6.36161, -47.7879, 5.8467, 0.45", "-6.61833, -48.766, 6.02194, 1.81", "-6.9324, -49.9937, 6.26295, 2.27", "-7.39894, -51.8293, 6.64117, 1.36", "-7.70981, -53.0866, 6.90469, 2.27", "-8.32477, -55.7495, 7.47094, 2.27" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.0993, -30.5831, 2.51504, 0.45", "-1.04685, -32.3378, 2.81328, 0.45", "-0.122475, -33.9759, 3.10547, 0.45", "0.841297, -35.6204, 3.46143, 1.13", "2.12375, -37.8376, 3.98334, 0.23", "2.69598, -38.8236, 4.22031, 1.36", "3.45298, -40.1479, 4.52829, 1.36", "4.74818, -42.5154, 5.12859, 0.23", "5.8384, -44.605, 5.64344, 0.68", "6.9035, -46.7687, 6.11947, 0.23", "7.51128, -48.0644, 6.33143, 1.36", "8.66761, -50.5726, 6.64987, 0.45", "9.60513, -52.7309, 6.88498, 0.45", "9.91004, -53.5115, 6.95514, 1.36", "10.1057, -54.0971, 6.98996, 1.36", "10.6462, -56.0017, 7.09622, 0.23", "10.9604, -57.2003, 7.19479, 0.91", "11.34, -58.6599, 7.36076, 0.23", "11.5412, -59.3873, 7.47345, 0.91", "11.9577, -60.7868, 7.76084, 1.59", "12.9469, -63.9772, 8.52318, 0.23", "13.7001, -66.2369, 9.13197, 0.23", "14.0274, -67.1468, 9.37543, 1.81", "15.1665, -69.968, 10.0977, 0.68", "15.9152, -71.7068, 10.5078, 0.68", "16.4142, -72.7824, 10.7421, 1.36", "16.954, -73.873, 10.947, 1.81", "17.7933, -75.578, 11.2101, 0.23", "18.3834, -76.7564, 11.3471, 0.91", "19.0673, -78.0745, 11.4092, 0.23", "19.8921, -79.6842, 11.3814, 0.91", "20.4064, -80.7064, 11.3477, 0.91" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-19.5742, 10.4993, -3.27625, 0.23", "-20.2501, 11.4985, -3.96779, 0.23", "-20.9222, 12.5276, -4.64154, 1.13", "-21.381, 13.2262, -5.07125, 0.68", "-22.1577, 14.4021, -5.75198, 1.36", "-22.5936, 15.0872, -6.1174, 1.36", "-23.2529, 16.1788, -6.64243, 1.13", "-23.8124, 17.1555, -7.05664, 0.91", "-24.216, 17.9089, -7.31654, 0.91", "-24.545, 18.5959, -7.49884, 0.91", "-25.1458, 19.952, -7.78288, 0.23", "-25.6251, 21.1878, -8.02744, 1.13", "-25.8625, 21.8307, -8.14511, 1.59", "-26.3712, 23.1993, -8.3727, 0.23", "-26.9689, 24.7814, -8.63627, 1.36", "-27.2157, 25.4251, -8.74671, 1.59", "-27.891, 27.1393, -9.05176, 0.45", "-28.2585, 28.068, -9.24176, 0.45", "-28.7457, 29.3701, -9.53843, 1.59", "-29.0522, 30.2503, -9.76089, 0.68", "-29.4729, 31.6035, -10.1598, 0.23", "-29.6172, 32.1942, -10.3604, 0.68", "-29.8968, 33.787, -11.0269, 0.23", "-30.0055, 35.0816, -11.6503, 2.04", "-30.0013, 35.8039, -12.0553, 2.04", "-29.8861, 37.0911, -12.8572, 0.23", "-29.6876, 38.2054, -13.6256, 0.23", "-29.4311, 39.2559, -14.4134, 0.68", "-29.1004, 40.3728, -15.3052, 0.23", "-28.8371, 41.2112, -15.9855, 1.59", "-28.637, 41.8982, -16.5252, 1.59", "-28.3917, 42.8316, -17.2177, 0.45", "-28.1709, 43.9789, -17.9666, 0.45", "-28.0832, 44.5746, -18.3202, 1.36", "-27.9546, 45.6895, -18.9358, 1.59", "-27.8089, 47.0479, -19.5882, 0.23", "-27.6711, 48.2744, -20.1299, 1.59", "-27.2781, 51.1413, -21.3045, 0.23", "-27.2059, 51.5489, -21.4625, 1.13", "-26.7659, 53.6892, -22.249, 0.23", "-26.4403, 55.1621, -22.7584, 1.81", "-26.0552, 56.7376, -23.2564, 0.23", "-25.8334, 57.6359, -23.5262, 0.91", "-25.1828, 60.2128, -24.2854, 0.23", "-24.8581, 61.621, -24.7066, 2.04", "-24.7399, 62.1986, -24.8979, 2.72", "-24.4183, 64.1707, -25.6372, 0.23", "-24.1387, 66.4788, -26.5405, 0.23", "-24.0932, 67.0505, -26.7769, 0.91", "-24.0735, 67.6297, -27.0321, 1.36", "-24.0785, 69.5356, -27.9325, 0.45", "-24.1174, 71.1201, -28.6663, 1.13", "-24.1604, 71.7618, -28.9503, 1.13", "-24.2878, 73.1037, -29.4966, 0.23", "-24.3402, 73.5964, -29.6825, 0.91", "-24.5159, 75.1767, -30.2271, 0.23", "-24.6561, 76.3434, -30.5754, 1.36", "-24.8602, 78.1711, -31.1158, 0.45", "-24.8998, 78.5443, -31.2295, 1.13", "-25.1415, 80.5262, -31.8738, 0.23", "-25.2131, 81.1084, -32.0754, 2.04", "-25.4758, 83.2407, -32.8817, 0.23", "-25.5745, 84.0235, -33.2064, 0.91", "-25.6366, 84.5848, -33.4615, 0.91", "-25.7657, 85.7355, -34.0212, 0.23", "-25.9325, 87.1879, -34.8003, 2.04", "-26.0687, 88.3017, -35.4466, 0.23", "-26.136, 88.844, -35.7795, 0.91", "-26.3898, 91.0751, -37.1702, 0.23", "-26.4848, 92.0545, -37.7847, 1.81", "-26.6505, 94.4718, -39.2943, 0.23", "-26.7266, 95.8024, -40.1191, 1.59", "-26.7409, 96.1544, -40.3291, 1.59", "-26.802, 97.997, -41.3745, 0.68", "-26.8185, 98.746, -41.7623, 1.36", "-26.8436, 100.647, -42.6748, 0.45", "-26.8686, 101.604, -43.0921, 2.04", "-26.9008, 102.955, -43.6693, 0.23", "-26.9363, 103.923, -44.0789, 0.91", "-26.9493, 105.071, -44.5509, 0.23", "-26.9343, 105.843, -44.8666, 1.13", "-26.908, 106.437, -45.1167, 1.13", "-26.7727, 108.493, -46.0363, 0.23", "-26.6748, 109.624, -46.5594, 2.04", "-26.4362, 111.844, -47.6229, 0.23", "-26.3452, 112.779, -48.0743, 0.91", "-26.1727, 114.74, -49.0121, 0.23", "-26.096, 115.732, -49.4849, 1.81", "-26.0689, 116.497, -49.841, 1.81", "-26.1254, 118.97, -50.9773, 0.23", "-26.2157, 119.839, -51.3677, 0.91", "-26.3252, 120.593, -51.6912, 0.23", "-26.5021, 121.746, -52.1472, 0.91", "-26.5986, 122.475, -52.4345, 0.91", "-26.711, 124.171, -53.1562, 0.23", "-26.7078, 125.37, -53.7041, 1.81", "-26.6503, 126.131, -54.0687, 1.81", "-26.4531, 127.662, -54.8344, 0.23", "-26.2248, 128.847, -55.4583, 1.59", "-25.6519, 131.198, -56.7386, 0.23", "-25.5029, 131.78, -57.0438, 0.91", "-25.1831, 133.22, -57.7935, 0.23", "-25.0299, 134.175, -58.2838, 1.59", "-24.8515, 136.23, -59.3087, 0.23", "-24.8486, 136.974, -59.6562, 0.91", "-24.9985, 138.847, -60.4839, 0.23", "-25.2134, 140.447, -61.1664, 1.59", "-25.4739, 141.799, -61.7421, 0.45", "-25.5705, 142.198, -61.9173, 0.91", "-25.872, 143.196, -62.3712, 0.23", "-26.1987, 144.204, -62.8705, 0.91", "-26.6634, 145.622, -63.6311, 0.23", "-26.8302, 146.091, -63.9008, 1.13", "-27.1837, 147.014, -64.4756, 0.23", "-27.35, 147.427, -64.7504, 0.91", "-27.6351, 148.119, -65.2557, 0.23", "-28.0222, 149.062, -65.9628, 2.04", "-28.7069, 150.582, -67.1159, 0.23", "-29.175, 151.577, -67.8435, 1.13", "-29.7015, 152.671, -68.6177, 0.23", "-30.2927, 153.861, -69.4324, 1.13", "-30.7111, 154.651, -69.9485, 1.13", "-31.5724, 156.245, -70.9104, 0.23", "-31.7834, 156.667, -71.1345, 0.23", "-32.3167, 157.759, -71.6846, 1.59", "-32.9375, 159.062, -72.2798, 0.23", "-33.407, 160.07, -72.6931, 0.23", "-33.8884, 161.13, -73.1195, 1.59", "-34.7429, 163.142, -73.8786, 0.23", "-34.8408, 163.368, -73.9618, 0.91", "-35.1861, 164.209, -74.2669, 0.23", "-35.653, 165.437, -74.7143, 0.23", "-36.0772, 166.62, -75.1725, 0.91", "-36.6543, 168.235, -75.8246, 0.23", "-37.0979, 169.542, -76.3626, 2.04", "-37.8408, 171.957, -77.3719, 0.23", "-38.2054, 173.257, -77.9589, 1.13", "-38.5489, 174.641, -78.6202, 0.23", "-38.7231, 175.415, -79.0035, 0.91", "-38.9015, 176.314, -79.4692, 0.23", "-39.1278, 177.607, -80.1589, 2.04", "-39.3853, 179.092, -80.919, 0.23", "-39.5094, 179.815, -81.2852, 0.91", "-39.5691, 180.165, -81.4494, 0.23", "-39.7475, 181.263, -81.9777, 0.91", "-39.9394, 182.414, -82.5345, 0.23", "-40.037, 183.14, -82.8607, 1.59" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-19.5742, 10.4993, -3.27625, 0.45", "-20.9777, 10.0792, -3.48802, 0.45", "-21.9713, 9.72115, -3.60067, 0.45", "-23.48, 9.11488, -3.67952, 0.91", "-25.074, 8.39049, -3.74297, 0.68", "-26.1693, 7.90011, -3.79568, 0.91", "-27.0056, 7.5365, -3.83827, 1.81", "-28.9223, 6.72506, -3.93721, 0.45", "-30.0635, 6.25887, -3.97154, 1.13", "-31.6802, 5.65573, -3.98819, 0.45", "-32.9212, 5.22845, -4.00035, 1.13", "-33.5581, 5.0376, -4.015, 1.59", "-34.5236, 4.80852, -4.05538, 0.45", "-35.6767, 4.57986, -4.13895, 0.45", "-36.6659, 4.38202, -4.22411, 0.91", "-37.5584, 4.14913, -4.28085, 1.81", "-37.7074, 4.08833, -4.29097, 1.81", "-38.9982, 3.36474, -4.41205, 0.23", "-39.9391, 2.73833, -4.51701, 0.91", "-40.3749, 2.41654, -4.56791, 0.91", "-41.2979, 1.70473, -4.67287, 0.23", "-42.2729, 0.94765, -4.76805, 1.81", "-44.2775, -0.606857, -4.94615, 0.23", "-44.8433, -1.04199, -4.98932, 1.13", "-45.4797, -1.50652, -5.01931, 2.04", "-46.9152, -2.53551, -5.07314, 0.23", "-47.6927, -3.06744, -5.0896, 0.23", "-48.3628, -3.52312, -5.09287, 0.91", "-49.5577, -4.34926, -5.08042, 0.23", "-50.5757, -5.07871, -5.08623, 1.81", "-52.2222, -6.31717, -5.11401, 0.23", "-52.6498, -6.66012, -5.12522, 0.23", "-53.5651, -7.42052, -5.15978, 1.13", "-54.3621, -8.1201, -5.19999, 1.59", "-55.2102, -8.91143, -5.24613, 0.23", "-55.9337, -9.59324, -5.27685, 0.91", "-57.0451, -10.5853, -5.31833, 0.23", "-57.6419, -11.105, -5.33886, 1.59", "-59.3371, -12.5193, -5.38906, 0.23", "-60.3678, -13.3522, -5.41008, 0.23", "-61.851, -14.5126, -5.42361, 1.81", "-64.8614, -16.7743, -5.45599, 0.23", "-65.702, -17.4068, -5.45625, 1.59", "-66.2434, -17.8079, -5.45291, 1.59", "-67.6635, -18.8228, -5.42991, 0.23", "-68.2095, -19.2194, -5.41856, 0.23", "-68.9694, -19.779, -5.40674, 1.36", "-70.9624, -21.1734, -5.36071, 0.23", "-71.9312, -21.8097, -5.34819, 1.59", "-72.2156, -21.9806, -5.34398, 1.59", "-73.8498, -22.8605, -5.32406, 0.23", "-74.691, -23.2952, -5.31339, 0.23", "-75.9064, -23.8924, -5.30092, 1.81", "-76.3573, -24.1072, -5.30078, 1.81", "-79.2062, -25.5427, -5.3122, 0.23", "-80.4082, -26.1508, -5.31986, 1.13", "-81.2296, -26.5659, -5.33097, 0.45", "-82.3234, -27.1585, -5.3471, 1.81", "-83.8293, -28.062, -5.40306, 0.23", "-84.4176, -28.44, -5.44604, 0.91", "-85.1148, -28.9052, -5.52548, 0.91", "-85.808, -29.4011, -5.62183, 0.23", "-86.752, -30.1242, -5.72855, 0.91", "-88.1982, -31.3646, -5.84351, 0.23", "-89.1623, -32.2935, -5.84933, 0.91", "-89.5021, -32.6716, -5.84248, 0.91", "-90.4129, -33.797, -5.74426, 0.23", "-91.2117, -34.8504, -5.58837, 1.81", "-91.601, -35.3466, -5.49296, 1.81", "-93.0242, -37.1124, -5.11031, 0.23", "-94.3815, -38.6475, -4.76636, 1.13", "-95.8645, -40.1568, -4.43674, 0.23", "-96.8002, -40.9999, -4.27137, 2.04", "-99.262, -42.9981, -3.95727, 0.23", "-100.052, -43.5647, -3.87249, 1.59", "-102.428, -45.061, -3.70391, 0.23", "-103.292, -45.5686, -3.67684, 0.91", "-104.519, -46.297, -3.736, 0.45", "-105.248, -46.745, -3.80175, 0.23", "-106.1, -47.3132, -3.91191, 1.59", "-107.669, -48.48, -4.13029, 0.23", "-108.942, -49.5776, -4.35778, 1.59", "-110.037, -50.5924, -4.54697, 0.68", "-110.691, -51.2335, -4.64909, 1.36", "-111.157, -51.7049, -4.7161, 1.36", "-112.115, -52.6688, -4.82828, 0.23", "-112.912, -53.4322, -4.89671, 0.23", "-114.049, -54.389, -4.96972, 1.59", "-114.406, -54.672, -4.98635, 1.59", "-115.044, -55.1492, -5.02039, 0.23", "-115.447, -55.4496, -5.04598, 0.91", "-116.403, -56.1705, -5.11683, 0.23", "-117.074, -56.7226, -5.17004, 0.23", "-117.682, -57.2625, -5.22681, 1.13", "-118.05, -57.6082, -5.25677, 1.13", "-119.727, -59.2453, -5.37157, 0.23", "-120.616, -60.1063, -5.41371, 1.59", "-122.326, -61.7009, -5.45029, 0.23", "-122.935, -62.243, -5.45567, 0.68", "-124.186, -63.2839, -5.44413, 0.23", "-124.619, -63.6203, -5.42977, 0.23", "-125.786, -64.3937, -5.35124, 0.91", "-126.741, -64.9061, -5.28672, 0.23", "-127.699, -65.2668, -5.23255, 1.13", "-128.697, -65.5477, -5.19623, 0.23", "-129.222, -65.6616, -5.19505, 0.91", "-130.032, -65.8121, -5.21105, 0.23", "-131.422, -66.0122, -5.2671, 1.13", "-133.568, -66.2093, -5.38787, 0.23", "-134.387, -66.2547, -5.44771, 0.91", "-135.721, -66.2341, -5.56224, 0.23", "-136.105, -66.2215, -5.59743, 0.68", "-136.796, -66.1866, -5.66352, 0.23", "-137.436, -66.126, -5.72032, 0.91", "-137.86, -66.0382, -5.77813, 0.23", "-139.085, -65.6513, -5.94813, 1.13" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "107.771, 275.107, -91.5353, 0.23", "108.409, 277.645, -92.2662, 0.23", "108.775, 279.305, -92.7505, 0.23", "109.234, 281.734, -93.4367, 1.13", "109.509, 283.676, -94.0181, 0.23", "109.698, 285.29, -94.5037, 0.91", "110.021, 287.683, -95.2269, 0.23", "110.283, 289.506, -95.7831, 0.23", "110.697, 292.036, -96.565, 1.59", "111.129, 294.537, -97.3438, 0.68", "111.413, 295.985, -97.7946, 1.13", "111.958, 298.448, -98.543, 0.23", "112.422, 300.394, -99.177, 0.91", "112.962, 302.664, -99.9907, 0.23", "113.343, 304.404, -100.635, 0.91", "113.466, 305.06, -100.87, 0.23", "113.618, 306.5, -101.407, 1.13", "113.677, 309.886, -102.712, 0.23", "113.668, 310.445, -102.925, 0.91", "113.641, 312.601, -103.69, 0.23", "113.63, 314.073, -104.196, 1.81", "113.575, 317.568, -105.323, 0.23", "113.524, 320.763, -106.306, 0.91", "113.48, 322.62, -106.828, 0.23", "113.405, 325.782, -107.762, 0.68", "113.399, 326.468, -107.956, 0.23", "113.441, 327.72, -108.276, 0.91", "113.702, 330.408, -108.857, 0.23", "114.065, 333.459, -109.472, 1.13", "114.513, 336.783, -110.148, 0.23", "114.853, 338.903, -110.568, 0.23", "115.432, 341.624, -111.09, 0.23", "116.049, 343.753, -111.467, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "107.771, 275.107, -91.5353, 0.23", "107.56, 276.104, -92.0595, 0.23", "107.461, 276.672, -92.3394, 1.13", "107.081, 278.61, -93.3048, 0.23", "106.757, 280.262, -94.1279, 0.91", "106.579, 281.17, -94.58, 0.23", "106.436, 281.899, -94.9432, 1.13", "106.061, 283.738, -95.8489, 0.23", "105.831, 284.929, -96.4221, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-20.567, 16.6716, 11.3667, 0.68", "-22.1247, 17.1458, 11.8171, 0.68", "-23.5291, 17.5344, 12.2567, 0.68", "-25.2128, 18.021, 12.7596, 0.68", "-25.7651, 18.1624, 12.9352, 0.68", "-26.8013, 18.4276, 13.2647, 1.13", "-28.1885, 18.7827, 13.7058, 0.91", "-29.2843, 19.0744, 14.0852, 0.23", "-30.8801, 19.4836, 14.6546, 0.23", "-32.3354, 19.7905, 15.1809, 0.23" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-20.567, 16.6716, 11.3667, 0.45", "-20.2176, 18.1122, 11.6927, 0.45", "-19.8692, 19.5492, 12.0178, 0.68", "-19.5555, 20.8428, 12.3104, 0.23", "-19.4201, 21.401, 12.4367, 0.23", "-19.1708, 22.4291, 12.6693, 0.91", "-18.8109, 23.9132, 13.0051, 0.23" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-12.0459, -27.0542, -9.76654, 0.23", "-15.1658, -28.4675, -9.22699, 0.23", "-16.8353, -29.3048, -8.98077, 0.23", "-18.4073, -30.1634, -8.83594, 0.91", "-21.1371, -31.7397, -8.66359, 0.45", "-23.2807, -33.0207, -8.56473, 1.13", "-24.5739, -33.8193, -8.51892, 0.23", "-25.6114, -34.5207, -8.54456, 0.68", "-28.1889, -36.3051, -8.68208, 0.23", "-30.0433, -37.6083, -8.86088, 1.13", "-32.7677, -39.4878, -9.12724, 0.23", "-33.6242, -40.053, -9.22596, 0.91", "-35.0794, -40.9925, -9.43026, 0.23", "-36.9937, -42.1616, -9.78726, 0.91", "-39.3395, -43.5119, -10.2796, 0.23", "-40.4453, -44.1017, -10.5348, 0.68", "-41.9911, -44.9022, -10.8966, 0.23", "-43.3293, -45.5539, -11.1991, 1.59", "-48.6743, -48.0537, -12.3387, 0.23", "-50.1611, -48.7161, -12.6046, 1.13", "-53.6075, -50.2508, -13.0405, 0.23", "-55.1882, -51.0059, -13.1787, 0.91", "-58.8763, -52.8016, -13.336, 0.23", "-60.0838, -53.3835, -13.3298, 1.13", "-62.9571, -54.7813, -13.2337, 0.23", "-67.0841, -56.8276, -13.0835, 1.59", "-71.5722, -58.999, -12.8714, 0.23", "-73.6158, -59.9384, -12.7706, 0.45", "-74.8352, -60.4905, -12.7268, 0.23", "-76.719, -61.2902, -12.7261, 0.23", "-79.0505, -62.2197, -12.9417, 0.68", "-81.7224, -63.1481, -13.4084, 0.23", "-82.3937, -63.3719, -13.6277, 0.91", "-84.2221, -64.0204, -14.3244, 0.23", "-84.7701, -64.2289, -14.5539, 1.13", "-88.0485, -65.4951, -16.0567, 0.23", "-89.5947, -66.1417, -16.9594, 0.91", "-92.7173, -67.736, -19.1959, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.0459, -27.0542, -9.76654, 0.91", "-12.6046, -28.2352, -10.1689, 0.91", "-13.7462, -30.9262, -11.0103, 0.23", "-14.1907, -32.1454, -11.3998, 0.91", "-15.0568, -34.8629, -12.3429, 0.23", "-15.3856, -36.0152, -12.7999, 1.81", "-16.0205, -38.3764, -13.7798, 0.91", "-16.6263, -40.9562, -14.8917, 2.27", "-17.1391, -43.1546, -15.8252, 0.23", "-17.5993, -44.9243, -16.6745, 0.91", "-18.3271, -47.2721, -17.878, 0.23", "-18.7771, -48.4002, -18.4701, 1.81", "-19.883, -50.5204, -19.5403, 0.23", "-20.623, -51.7085, -20.0389, 0.23", "-21.6806, -53.2455, -20.5179, 1.81", "-23.1262, -55.3083, -20.9185, 0.23", "-23.9218, -56.4421, -21.0579, 2.04", "-25.1596, -58.2105, -21.2032, 1.59", "-26.635, -60.3369, -21.3157, 0.23", "-28.0, -62.3099, -21.3966, 1.81", "-30.2807, -65.3885, -21.4478, 0.23", "-31.4252, -66.7939, -21.4773, 1.81", "-34.119, -69.8363, -21.5626, 0.23", "-35.3986, -71.1074, -21.603, 1.13", "-36.3272, -71.9138, -21.6423, 1.81", "-37.8593, -73.1561, -21.7524, 0.23", "-39.1411, -74.2238, -21.9119, 0.91", "-41.4034, -76.2277, -22.2687, 0.23", "-42.5703, -77.3212, -22.526, 1.81", "-44.7288, -79.451, -23.0582, 0.23", "-46.0174, -80.768, -23.4373, 1.59", "-48.519, -83.3762, -24.2406, 0.45", "-49.2977, -84.2123, -24.4944, 1.13", "-50.9678, -85.9959, -25.0249, 0.23", "-51.8476, -87.0112, -25.3177, 1.81", "-54.1371, -89.8739, -26.1292, 0.23", "-54.7976, -90.8127, -26.3671, 0.91", "-56.2287, -93.3081, -26.8984, 0.23", "-56.9227, -94.6785, -27.1728, 0.91", "-58.0661, -97.4299, -27.6403, 0.23", "-58.523, -98.8283, -27.8624, 1.81", "-58.9955, -101.116, -28.1425, 0.23", "-59.3355, -103.315, -28.4396, 1.81" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-8.32477, -55.7495, 7.47094, 1.36", "-8.97179, -57.1183, 7.54285, 1.36", "-9.56668, -58.4559, 7.67068, 1.36", "-10.4625, -60.7037, 7.92132, 0.68", "-10.8398, -61.6505, 8.02689, 0.91", "-11.5133, -63.3406, 8.21534, 0.45", "-11.8347, -64.147, 8.30526, 0.91", "-12.5562, -66.1795, 8.61385, 0.23", "-13.0297, -67.4331, 8.83767, 0.23" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-8.32477, -55.7495, 7.47094, 0.68", "-7.15227, -58.7068, 7.82369, 0.68", "-6.15752, -61.2232, 7.98627, 0.68", "-5.2004, -63.5765, 8.08169, 0.23", "-4.49766, -65.3314, 8.19268, 0.91", "-4.21556, -66.0799, 8.24547, 0.91", "-3.08422, -69.2411, 8.50383, 0.23", "-2.32812, -71.4469, 8.75924, 0.68", "-1.45317, -74.213, 9.09499, 0.23", "-0.268715, -77.8956, 9.55332, 0.23", "0.119181, -79.175, 9.72317, 0.23", "0.667207, -81.0951, 10.0218, 0.91", "1.09219, -82.7348, 10.3644, 0.23", "1.5773, -84.908, 10.9932, 1.13" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-40.037, 183.14, -82.8607, 0.23", "-40.3412, 184.297, -83.3603, 0.23", "-40.5233, 185.014, -83.6501, 0.23", "-40.7096, 185.778, -83.9317, 1.59", "-41.0509, 187.201, -84.4007, 0.23", "-41.2342, 187.929, -84.6253, 1.59", "-41.568, 189.263, -85.0185, 0.45", "-41.7474, 189.966, -85.1977, 0.45", "-41.9319, 190.716, -85.3685, 1.59", "-42.2461, 192.062, -85.6494, 0.23", "-42.4073, 192.793, -85.7982, 0.23", "-42.5788, 193.659, -85.9747, 0.91", "-42.6754, 194.278, -86.1209, 0.91", "-42.7755, 195.009, -86.3202, 0.23", "-42.8418, 195.593, -86.5002, 1.13", "-42.9054, 196.308, -86.745, 0.45", "-42.9412, 196.745, -86.9007, 1.13", "-43.222, 199.002, -87.7473, 0.23", "-43.282, 199.375, -87.8914, 1.13", "-43.421, 200.065, -88.1704, 1.13", "-43.6271, 200.894, -88.5238, 0.23", "-43.9205, 201.82, -88.9857, 0.91", "-44.2793, 202.751, -89.5021, 0.23", "-44.559, 203.37, -89.8813, 0.91", "-45.0564, 204.46, -90.5878, 0.23", "-45.3619, 205.153, -91.0757, 0.91", "-45.917, 206.575, -92.1322, 0.23", "-46.0218, 206.965, -92.4345, 1.13", "-46.0525, 207.213, -92.6277, 0.23", "-46.0539, 207.715, -93.0086, 1.13", "-45.982, 208.308, -93.4368, 0.23", "-45.8546, 208.887, -93.7933, 1.13", "-45.56, 209.982, -94.4071, 0.23", "-45.5222, 210.143, -94.5065, 0.91", "-45.4462, 210.639, -94.8257, 0.23", "-45.4264, 211.077, -95.1351, 0.91", "-45.484, 212.157, -95.9406, 0.23", "-45.5615, 212.703, -96.3983, 1.13", "-45.6922, 213.284, -96.9088, 0.23", "-45.8223, 213.779, -97.3678, 0.91", "-45.9603, 214.235, -97.8122, 0.23", "-46.1002, 214.681, -98.2406, 0.68", "-46.419, 215.594, -99.1129, 0.23", "-46.6027, 216.087, -99.5544, 1.13", "-46.9419, 217.008, -100.28, 0.23", "-47.2146, 217.745, -100.798, 1.36", "-47.402, 218.229, -101.094, 0.45", "-47.5805, 218.639, -101.317, 0.91", "-48.3017, 220.117, -101.991, 0.23", "-48.7491, 220.94, -102.317, 1.81", "-49.2515, 221.709, -102.563, 0.23", "-49.583, 222.149, -102.689, 0.23", "-50.081, 222.685, -102.848, 0.68", "-50.6289, 223.179, -102.997, 0.23", "-51.2772, 223.658, -103.145, 0.91", "-52.0426, 224.148, -103.337, 0.23", "-52.3577, 224.329, -103.411, 1.13", "-53.4339, 224.929, -103.617, 0.23", "-53.9009, 225.186, -103.69, 0.91", "-54.9928, 225.831, -103.793, 0.23", "-55.6772, 226.271, -103.819, 0.91", "-55.9555, 226.485, -103.809, 0.23", "-56.523, 227.015, -103.736, 0.91", "-57.0269, 227.769, -103.55, 0.23", "-57.387, 228.557, -103.304, 0.23", "-57.4086, 228.91, -103.17, 0.23", "-57.233, 229.616, -102.903, 0.23", "-56.8378, 230.412, -102.636, 0.91", "-55.9465, 231.485, -102.337, 0.23" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-40.037, 183.14, -82.8607, 0.23", "-39.1677, 184.179, -83.0467, 0.23", "-38.4197, 184.93, -83.2824, 0.23", "-37.4387, 185.857, -83.6753, 0.23", "-37.0486, 186.216, -83.849, 0.91", "-35.8003, 187.362, -84.437, 0.23", "-34.5277, 188.48, -85.0367, 0.23", "-33.3745, 189.383, -85.6214, 0.68", "-32.3423, 190.11, -86.0908, 0.23", "-31.1544, 190.899, -86.5729, 0.23", "-30.0099, 191.586, -86.9483, 0.23", "-28.5574, 192.369, -87.299, 0.68", "-27.3789, 192.922, -87.4913, 0.23", "-25.2016, 193.796, -87.6933, 0.23", "-24.1888, 194.156, -87.747, 0.91", "-22.4972, 194.679, -87.7823, 0.23", "-21.205, 195.026, -87.7696, 1.13", "-19.8618, 195.356, -87.7198, 1.13", "-17.8416, 195.792, -87.6209, 0.23" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-139.085, -65.6513, -5.94813, 0.23", "-140.391, -67.3937, -6.0246, 0.23", "-141.244, -68.5485, -6.07513, 0.68", "-141.766, -69.2415, -6.14486, 0.23", "-142.436, -70.0981, -6.25315, 0.91", "-144.017, -72.037, -6.5239, 0.23", "-144.232, -72.2764, -6.55835, 1.13", "-144.708, -72.7163, -6.63338, 1.13", "-145.929, -73.6311, -6.8351, 0.23", "-146.723, -74.0967, -6.98853, 0.45", "-147.084, -74.2564, -7.06104, 0.23", "-148.355, -74.7354, -7.32311, 0.91", "-149.836, -75.3202, -7.62222, 0.23", "-150.959, -75.8459, -7.82635, 0.68", "-151.704, -76.2831, -7.95799, 0.23", "-152.358, -76.7978, -8.08317, 0.68", "-153.446, -77.8731, -8.2983, 0.23", "-153.858, -78.3645, -8.37926, 0.68", "-154.906, -79.7365, -8.55613, 0.23", "-155.719, -80.8057, -8.65859, 0.23", "-157.039, -82.52, -8.74692, 1.36", "-157.864, -83.5573, -8.78425, 0.45", "-158.291, -84.0412, -8.79156, 0.91", "-158.708, -84.4779, -8.79127, 0.23", "-159.403, -85.1339, -8.7873, 0.91", "-160.847, -86.4153, -8.75074, 0.45", "-161.347, -86.8354, -8.74194, 1.13", "-162.355, -87.68, -8.71994, 0.23", "-163.248, -88.4514, -8.70231, 0.68", "-163.844, -88.9655, -8.68921, 0.23", "-165.195, -90.0636, -8.65366, 0.91", "-165.589, -90.3344, -8.63757, 0.23", "-166.937, -91.1051, -8.59004, 0.91", "-167.815, -91.4818, -8.55736, 0.23", "-168.966, -91.8527, -8.52558, 0.68", "-169.734, -92.0342, -8.50549, 0.23", "-171.882, -92.3515, -8.47054, 0.91", "-173.118, -92.4034, -8.44744, 0.23", "-174.21, -92.32, -8.42414, 0.91", "-175.192, -92.1638, -8.39898, 0.23", "-176.328, -91.8466, -8.3589, 0.23", "-178.008, -91.1994, -8.27323, 0.68", "-179.847, -90.315, -8.18826, 0.23", "-180.814, -89.8057, -8.13909, 0.91", "-181.095, -89.6457, -8.13267, 0.23", "-183.121, -88.43, -8.12345, 0.91", "-184.403, -87.6944, -8.14798, 0.23", "-185.511, -87.1631, -8.22338, 0.23", "-186.747, -86.8432, -8.30549, 0.91", "-187.749, -86.7468, -8.36146, 0.23", "-189.142, -86.8451, -8.41438, 0.23", "-190.21, -87.1331, -8.4471, 0.23", "-192.408, -88.0864, -8.40311, 1.59", "-195.114, -89.4612, -8.27971, 0.45", "-196.037, -90.0086, -8.22304, 0.45", "-197.588, -91.0601, -8.08282, 1.13", "-198.902, -92.1003, -7.94093, 0.23", "-200.331, -93.4028, -7.72996, 0.91" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-139.085, -65.6513, -5.94813, 0.23", "-139.496, -64.8407, -6.05454, 0.23", "-140.54, -62.7324, -6.36678, 0.91", "-141.17, -61.4253, -6.58426, 0.23", "-141.892, -59.9198, -6.85566, 1.13", "-142.791, -58.0458, -7.19346, 0.23", "-143.74, -56.0687, -7.54986, 0.23", "-144.12, -55.2971, -7.6866, 0.23", "-144.651, -54.1978, -7.91435, 0.91", "-144.978, -53.5466, -8.05312, 0.91" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-59.3355, -103.315, -28.4396, 0.23", "-60.8103, -104.724, -28.3686, 0.23", "-61.53, -105.366, -28.1336, 0.91", "-62.4122, -105.96, -28.0748, 0.23", "-63.7439, -106.674, -28.249, 0.23", "-65.2661, -107.476, -28.5957, 0.68", "-68.1271, -108.906, -29.4125, 0.23", "-68.8246, -109.235, -29.66, 0.91", "-72.5263, -111.133, -31.3319, 0.23", "-74.3238, -112.163, -32.3948, 0.23", "-75.0906, -112.666, -32.9688, 0.23", "-75.6248, -113.024, -33.44, 1.13", "-77.2991, -114.208, -35.1424, 0.45", "-78.0863, -114.865, -35.9762, 1.13", "-79.7497, -116.784, -37.6767, 0.23", "-80.6551, -117.931, -38.5849, 1.13" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-59.3355, -103.315, -28.4396, 0.23", "-59.554, -107.241, -28.2816, 0.23", "-59.6717, -109.051, -28.1973, 1.13", "-59.8121, -110.847, -28.1104, 0.23", "-60.0559, -113.431, -28.0008, 1.59", "-60.4008, -116.753, -27.8785, 0.23", "-60.7484, -120.077, -27.7942, 0.91", "-61.0087, -122.298, -27.7467, 0.23", "-61.1971, -123.823, -27.7792, 0.91", "-61.6335, -127.131, -27.9946, 0.23", "-61.8363, -128.564, -28.1616, 0.91", "-62.3851, -132.437, -28.7632, 0.23", "-62.5331, -133.485, -28.9616, 1.36", "-62.9312, -136.017, -29.4997, 0.23", "-63.1364, -137.438, -29.8107, 0.91", "-63.552, -140.333, -30.439, 0.23", "-63.785, -142.055, -30.7867, 1.59", "-64.0308, -143.821, -31.1106, 0.45", "-64.2135, -145.235, -31.3242, 0.45", "-64.6269, -148.409, -31.6768, 1.13", "-64.8273, -149.94, -31.8402, 0.23", "-65.0542, -151.731, -32.0351, 1.13", "-65.4028, -154.395, -32.3387, 0.23", "-65.9613, -158.315, -32.8115, 1.81", "-66.3568, -160.701, -33.1249, 0.23", "-66.6093, -162.121, -33.3232, 0.91", "-67.4029, -166.727, -34.0145, 0.23", "-67.5376, -167.523, -34.1237, 1.36", "-68.0801, -171.081, -34.5719, 0.23", "-68.4203, -173.586, -34.8249, 0.91", "-68.6435, -175.712, -34.9907, 0.23", "-68.881, -178.254, -35.1157, 0.23", "-69.1283, -180.782, -35.1387, 1.59", "-69.24, -181.854, -35.1215, 1.59", "-69.6318, -185.271, -34.9801, 0.23", "-69.9326, -187.418, -34.8568, 1.36", "-70.0966, -188.311, -34.8197, 1.36", "-70.5821, -190.546, -34.8326, 0.45", "-70.9961, -192.371, -34.9533, 1.13", "-71.1563, -193.134, -35.0467, 1.13", "-71.8547, -196.871, -35.7179, 0.23", "-72.1231, -198.757, -36.1099, 1.36", "-72.2967, -201.414, -36.7303, 0.23", "-72.2735, -202.839, -37.0947, 0.91", "-72.1196, -205.229, -37.7276, 0.23", "-71.9623, -206.613, -38.099, 0.23", "-71.7092, -208.071, -38.5065, 0.91", "-71.3535, -209.962, -38.9896, 0.23", "-71.0062, -211.71, -39.39, 0.68", "-70.7794, -212.875, -39.6028, 0.23", "-70.615, -213.631, -39.6789, 0.68", "-70.1464, -215.573, -39.7736, 0.23", "-69.8103, -216.961, -39.7666, 0.68", "-69.1092, -219.863, -39.6107, 0.23", "-68.3876, -222.914, -39.4123, 0.23", "-67.5971, -226.299, -39.1423, 0.23", "-67.3262, -227.549, -39.0051, 0.23", "-66.851, -229.75, -38.6619, 0.23", "-66.3816, -231.909, -38.2686, 1.13", "-65.9847, -233.916, -37.825, 0.23", "-65.8168, -234.8, -37.6588, 0.91", "-65.0798, -237.142, -37.4374, 0.23", "-65.5363, -236.611, -37.4765, 0.68" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_37", "dend_30", "dend_27", "dend_20", "dend_13", "dend_0", "dend_47", "dend_38", "dend_36", "dend_31", "dend_29", "dend_28", "dend_22", "dend_21", "dend_17", "dend_14", "dend_6", "dend_1", "dend_46", "dend_39", "dend_35", "dend_32", "dend_24", "dend_23", "dend_19", "dend_18", "dend_16", "dend_15", "dend_12", "dend_7", "dend_3", "dend_2", "dend_43", "dend_40", "dend_34", "dend_33", "dend_26", "dend_25", "dend_11", "dend_8", "dend_5", "dend_4", "dend_45", "dend_44", "dend_42", "dend_41", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_37", "dend_30", "dend_27", "dend_20", "dend_13", "dend_0", "dend_47", "dend_38", "dend_36", "dend_31", "dend_29", "dend_28", "dend_22", "dend_21", "dend_17", "dend_14", "dend_6", "dend_1", "dend_46", "dend_39", "dend_35", "dend_32", "dend_24", "dend_23", "dend_19", "dend_18", "dend_16", "dend_15", "dend_12", "dend_7", "dend_3", "dend_2", "dend_43", "dend_40", "dend_34", "dend_33", "dend_26", "dend_25", "dend_11", "dend_8", "dend_5", "dend_4", "dend_45", "dend_44", "dend_42", "dend_41", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_6", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_LBC_9f176c343a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_47, id: dend_47, parent: dend_37
create dend_47
public dend_47
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_30, dend_27, dend_20, dend_13, dend_0, dend_47, dend_38, dend_36, dend_31, dend_29, dend_28, dend_22, dend_21, dend_17, dend_14, dend_6, dend_1, dend_46, dend_39, dend_35, dend_32, dend_24, dend_23, dend_19, dend_18, dend_16, dend_15, dend_12, dend_7, dend_3, dend_2, dend_43, dend_40, dend_34, dend_33, dend_26, dend_25, dend_11, dend_8, dend_5, dend_4, dend_45, dend_44, dend_42, dend_41, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_30, dend_27, dend_20, dend_13, dend_0, dend_47, dend_38, dend_36, dend_31, dend_29, dend_28, dend_22, dend_21, dend_17, dend_14, dend_6, dend_1, dend_46, dend_39, dend_35, dend_32, dend_24, dend_23, dend_19, dend_18, dend_16, dend_15, dend_12, dend_7, dend_3, dend_2, dend_43, dend_40, dend_34, dend_33, dend_26, dend_25, dend_11, dend_8, dend_5, dend_4, dend_45, dend_44, dend_42, dend_41, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_39
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_37(0), soma_0(0.49999992082157346)
    connect dend_30(0), soma_0(0.49999992082157346)
    connect dend_27(0), soma_0(0.49999992082157346)
    connect dend_20(0), soma_0(0.49999992082157346)
    connect dend_13(0), soma_0(0.49999992082157346)
    connect dend_0(0), soma_0(0.49999992082157346)
    connect axon_0(0), soma_0(1.0)
    connect dend_47(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.56354, -2.32023, 0.0, 4.89867 ) }
    soma_0 { pt3dadd( -7.66852, -2.09843, 0.0, 8.85912 ) }
    soma_0 { pt3dadd( -6.77349, -1.87663, 0.0, 12.5371 ) }
    soma_0 { pt3dadd( -5.87847, -1.65483, 0.0, 13.9982 ) }
    soma_0 { pt3dadd( -4.98344, -1.43303, 0.0, 14.8266 ) }
    soma_0 { pt3dadd( -4.08842, -1.21123, 0.0, 15.6937 ) }
    soma_0 { pt3dadd( -3.1934, -0.989429, 0.0, 16.4025 ) }
    soma_0 { pt3dadd( -2.29837, -0.767629, 0.0, 16.5748 ) }
    soma_0 { pt3dadd( -1.40335, -0.545828, 0.0, 16.6806 ) }
    soma_0 { pt3dadd( -0.508322, -0.324028, 0.0, 16.6604 ) }
    soma_0 { pt3dadd( 0.386703, -0.102228, 0.0, 16.5142 ) }
    soma_0 { pt3dadd( 1.28173, 0.119572, 0.0, 16.311 ) }
    soma_0 { pt3dadd( 2.17675, 0.341372, 0.0, 16.1002 ) }
    soma_0 { pt3dadd( 3.07178, 0.563173, 0.0, 15.6503 ) }
    soma_0 { pt3dadd( 3.9668, 0.784973, 0.0, 14.9085 ) }
    soma_0 { pt3dadd( 4.86183, 1.00677, 0.0, 14.1259 ) }
    soma_0 { pt3dadd( 5.75685, 1.22857, 0.0, 12.5788 ) }
    soma_0 { pt3dadd( 6.65188, 1.45037, 0.0, 10.8169 ) }
    soma_0 { pt3dadd( 7.5469, 1.67217, 0.0, 8.79928 ) }
    soma_0 { pt3dadd( 8.44192, 1.89397, 0.0, 6.39095 ) }
    soma_0 { pt3dadd( 9.33695, 2.11577, 0.0, 3.65543 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 21/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -6.88458, 2.01569, -2.55, 2.95 ) }
    dend_37 { pt3dadd( -8.18596, 2.87085, -2.55, 2.95 ) }
    dend_37 { pt3dadd( -10.5251, 4.40795, -2.55, 2.04 ) }
    dend_37 { pt3dadd( -13.5319, 6.38375, -2.55, 2.04 ) }
    dend_37 { pt3dadd( -13.843, 6.58818, -2.55, 2.04 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 26/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 7.40542, -0.346809, -5.45, 1.81 ) }
    dend_30 { pt3dadd( 9.18788, 0.623034, -6.33041, 1.81 ) }
    dend_30 { pt3dadd( 11.2762, 2.17157, -7.33807, 2.04 ) }
    dend_30 { pt3dadd( 12.9673, 3.59999, -8.08588, 2.04 ) }
    dend_30 { pt3dadd( 14.4212, 4.91577, -8.68307, 1.59 ) }
    dend_30 { pt3dadd( 15.3707, 5.78962, -9.05325, 1.59 ) }
    dend_30 { pt3dadd( 17.2444, 7.58374, -9.74867, 1.59 ) }
    dend_30 { pt3dadd( 18.9529, 9.45897, -10.376, 2.04 ) }
    dend_30 { pt3dadd( 20.118, 10.9083, -10.789, 1.13 ) }
    dend_30 { pt3dadd( 21.1369, 12.2514, -11.0943, 1.81 ) }
    dend_30 { pt3dadd( 22.2439, 13.6395, -11.336, 2.27 ) }
    dend_30 { pt3dadd( 23.2872, 14.9137, -11.5199, 2.72 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.59542, 0.556191, 5.69, 1.81 ) }
    dend_27 { pt3dadd( 7.73034, 1.11438, 6.67408, 1.81 ) }
    dend_27 { pt3dadd( 9.22932, 1.50631, 7.36503, 1.81 ) }
    dend_27 { pt3dadd( 10.9641, 1.95987, 8.16465, 2.27 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 42/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -3.93458, 2.05769, 5.69, 1.81 ) }
    dend_20 { pt3dadd( -5.46081, 3.40718, 6.17583, 1.81 ) }
    dend_20 { pt3dadd( -7.25922, 4.99734, 6.7483, 1.81 ) }
    dend_20 { pt3dadd( -8.70875, 6.27901, 7.20971, 1.81 ) }
    dend_20 { pt3dadd( -10.4561, 7.824, 7.76592, 2.04 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 47/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.69542, -4.31581, -3.89, 2.72 ) }
    dend_13 { pt3dadd( 7.42317, -6.28239, -4.13575, 2.04 ) }
    dend_13 { pt3dadd( 8.59897, -9.45973, -4.53281, 2.04 ) }
    dend_13 { pt3dadd( 9.5189, -11.9456, -4.84346, 2.72 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 51/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.08458, -9.11431, -0.13, 3.18 ) }
    dend_0 { pt3dadd( -3.15957, -10.4254, -0.04635, 2.5 ) }
    dend_0 { pt3dadd( -3.37132, -14.1273, 0.189839, 2.27 ) }
    dend_0 { pt3dadd( -3.5368, -17.0205, 0.374426, 2.72 ) }
    dend_0 { pt3dadd( -3.65097, -19.0165, 0.501774, 3.18 ) }
    dend_0 { pt3dadd( -3.71147, -20.0742, 0.569258, 3.4 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 57/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.33695, 2.11577, 0.0, 1.23063 ) }
    axon_0 { pt3dadd( 23.8965, 5.72385, 0.0, 1.23063 ) }
    axon_0 { pt3dadd( 38.4561, 9.33193, 0.0, 1.23063 ) }
    // Section: dend_47, id: dend_47, parent: dend_37 (entry count 60/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -13.843, 6.58818, -2.55, 0.91 ) }
    dend_47 { pt3dadd( -15.3574, 6.5339, -1.4884, 0.91 ) }
    dend_47 { pt3dadd( -16.8667, 6.56593, -0.4307, 0.91 ) }
    dend_47 { pt3dadd( -18.3207, 6.59992, 0.575945, 0.91 ) }
    dend_47 { pt3dadd( -19.3237, 6.60326, 1.25267, 0.45 ) }
    dend_47 { pt3dadd( -20.5127, 6.5844, 2.02917, 1.36 ) }
    dend_47 { pt3dadd( -22.137, 6.55232, 3.0491, 0.68 ) }
    dend_47 { pt3dadd( -23.2522, 6.55319, 3.69535, 0.68 ) }
    dend_47 { pt3dadd( -24.6301, 6.5264, 4.54865, 1.36 ) }
    dend_47 { pt3dadd( -25.584, 6.50802, 5.14034, 0.45 ) }
    dend_47 { pt3dadd( -26.1211, 6.49093, 5.47051, 1.13 ) }
    dend_47 { pt3dadd( -27.1751, 6.41265, 6.11838, 0.23 ) }
    dend_47 { pt3dadd( -28.1328, 6.26626, 6.72271, 0.91 ) }
    dend_47 { pt3dadd( -30.4473, 5.88002, 8.22842, 0.23 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 74/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -13.843, 6.58818, -2.55, 2.04 ) }
    dend_38 { pt3dadd( -15.9568, 8.03616, -2.9343, 2.04 ) }
    dend_38 { pt3dadd( -17.7287, 9.24999, -3.25645, 2.04 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 77/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 23.2872, 14.9137, -11.5199, 0.68 ) }
    dend_36 { pt3dadd( 24.9149, 14.4032, -13.0272, 0.68 ) }
    dend_36 { pt3dadd( 27.7042, 13.6573, -15.2868, 2.27 ) }
    dend_36 { pt3dadd( 29.7271, 13.2278, -16.6705, 1.59 ) }
    dend_36 { pt3dadd( 31.8205, 12.8633, -17.8828, 0.68 ) }
    dend_36 { pt3dadd( 32.8352, 12.7369, -18.3988, 1.59 ) }
    dend_36 { pt3dadd( 33.5225, 12.6612, -18.7385, 1.81 ) }
    dend_36 { pt3dadd( 36.4145, 12.3502, -20.1602, 0.91 ) }
    dend_36 { pt3dadd( 38.2588, 12.1638, -21.0366, 0.45 ) }
    dend_36 { pt3dadd( 40.2522, 11.9579, -21.9776, 2.04 ) }
    dend_36 { pt3dadd( 42.0022, 11.7435, -22.8938, 0.91 ) }
    dend_36 { pt3dadd( 43.896, 11.5874, -24.0511, 2.5 ) }
    dend_36 { pt3dadd( 47.7576, 11.4271, -26.8821, 0.23 ) }
    dend_36 { pt3dadd( 48.7409, 11.4022, -27.6999, 2.27 ) }
    dend_36 { pt3dadd( 50.5659, 11.3381, -29.3018, 0.68 ) }
    dend_36 { pt3dadd( 52.9379, 11.2881, -31.3858, 0.68 ) }
    dend_36 { pt3dadd( 55.1463, 11.2663, -33.274, 1.59 ) }
    dend_36 { pt3dadd( 57.4958, 11.3686, -35.0348, 0.45 ) }
    dend_36 { pt3dadd( 59.1278, 11.4817, -36.0953, 1.36 ) }
    dend_36 { pt3dadd( 61.4507, 11.6352, -37.4923, 0.23 ) }
    dend_36 { pt3dadd( 62.4069, 11.6917, -37.9956, 0.91 ) }
    dend_36 { pt3dadd( 63.0367, 11.7161, -38.2381, 0.23 ) }
    dend_36 { pt3dadd( 65.2588, 11.8296, -38.8899, 1.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_36 { pt3dadd( 67.8535, 12.1746, -39.7032, 0.68 ) }
    dend_36 { pt3dadd( 68.5964, 12.3386, -40.0196, 1.13 ) }
    dend_36 { pt3dadd( 69.9487, 12.7044, -40.8198, 0.23 ) }
    dend_36 { pt3dadd( 71.2347, 13.029, -41.7315, 2.04 ) }
    dend_36 { pt3dadd( 74.0193, 13.6718, -43.8703, 0.23 ) }
    dend_36 { pt3dadd( 76.6326, 14.1042, -46.0977, 2.04 ) }
    dend_36 { pt3dadd( 78.2283, 14.2496, -47.5487, 2.5 ) }
    dend_36 { pt3dadd( 80.7881, 14.2753, -50.035, 0.23 ) }
    dend_36 { pt3dadd( 82.2414, 14.2042, -51.4972, 0.68 ) }
    dend_36 { pt3dadd( 83.0841, 14.1298, -52.3579, 0.23 ) }
    dend_36 { pt3dadd( 84.5806, 13.8981, -53.7949, 1.81 ) }
    dend_36 { pt3dadd( 86.4982, 13.6107, -55.2876, 0.23 ) }
    dend_36 { pt3dadd( 87.9001, 13.4237, -56.2229, 0.23 ) }
    dend_36 { pt3dadd( 89.2509, 13.3039, -57.0238, 1.59 ) }
    dend_36 { pt3dadd( 90.7474, 13.2521, -57.8938, 0.45 ) }
    dend_36 { pt3dadd( 91.6705, 13.2667, -58.4579, 1.81 ) }
    dend_36 { pt3dadd( 93.1231, 13.3786, -59.3508, 0.23 ) }
    dend_36 { pt3dadd( 95.8909, 13.6203, -61.0765, 2.04 ) }
    dend_36 { pt3dadd( 98.5227, 13.8504, -62.8906, 0.23 ) }
    dend_36 { pt3dadd( 98.9249, 13.8979, -63.2012, 0.91 ) }
    dend_36 { pt3dadd( 100.02, 14.0714, -64.0599, 0.23 ) }
    dend_36 { pt3dadd( 100.538, 14.1388, -64.4719, 1.13 ) }
    dend_36 { pt3dadd( 101.763, 14.2252, -65.3521, 1.59 ) }
    dend_36 { pt3dadd( 103.642, 14.289, -66.3924, 0.23 ) }
    dend_36 { pt3dadd( 104.769, 14.2353, -66.8358, 0.91 ) }
    dend_36 { pt3dadd( 106.047, 14.1708, -67.2101, 0.23 ) }
    dend_36 { pt3dadd( 107.83, 14.0285, -67.5512, 1.59 ) }
    dend_36 { pt3dadd( 109.887, 13.7353, -67.8714, 0.68 ) }
    dend_36 { pt3dadd( 112.006, 13.3494, -68.106, 1.13 ) }
    dend_36 { pt3dadd( 114.784, 12.7929, -68.4259, 0.23 ) }
    dend_36 { pt3dadd( 116.188, 12.5397, -68.6215, 1.13 ) }
    dend_36 { pt3dadd( 117.569, 12.298, -68.8587, 0.23 ) }
    dend_36 { pt3dadd( 120.378, 11.8378, -69.5025, 1.59 ) }
    dend_36 { pt3dadd( 121.883, 11.5581, -69.9493, 0.23 ) }
    dend_36 { pt3dadd( 124.414, 11.048, -70.8489, 1.81 ) }
    dend_36 { pt3dadd( 126.793, 10.5606, -71.7653, 0.23 ) }
    dend_36 { pt3dadd( 128.725, 10.2094, -72.6357, 1.59 ) }
    dend_36 { pt3dadd( 131.228, 9.91798, -73.8926, 0.23 ) }
    dend_36 { pt3dadd( 132.788, 9.90627, -74.7627, 0.91 ) }
    dend_36 { pt3dadd( 133.482, 10.0122, -75.2218, 0.23 ) }
    dend_36 { pt3dadd( 134.12, 10.2284, -75.7256, 1.36 ) }
    dend_36 { pt3dadd( 136.076, 11.2778, -77.429, 0.23 ) }
    dend_36 { pt3dadd( 136.476, 11.5783, -77.7826, 0.23 ) }
    dend_36 { pt3dadd( 137.8, 12.7627, -79.0163, 1.81 ) }
    dend_36 { pt3dadd( 139.675, 14.5299, -80.9551, 0.23 ) }
    dend_36 { pt3dadd( 140.433, 15.2357, -81.7716, 0.23 ) }
    dend_36 { pt3dadd( 141.299, 15.9447, -82.641, 0.68 ) }
    dend_36 { pt3dadd( 142.795, 16.8675, -84.0112, 0.23 ) }
    dend_36 { pt3dadd( 144.23, 17.504, -85.2825, 1.81 ) }
    dend_36 { pt3dadd( 145.875, 17.9043, -86.6642, 2.27 ) }
    dend_36 { pt3dadd( 146.836, 17.9422, -87.5092, 2.27 ) }
    dend_36 { pt3dadd( 149.003, 17.7432, -89.5142, 0.23 ) }
    dend_36 { pt3dadd( 150.863, 17.2761, -91.4332, 0.23 ) }
    dend_36 { pt3dadd( 151.491, 17.0142, -92.1308, 1.13 ) }
    dend_36 { pt3dadd( 152.444, 16.49, -93.2965, 1.13 ) }
    dend_36 { pt3dadd( 154.234, 15.42, -95.7731, 0.23 ) }
    dend_36 { pt3dadd( 154.809, 15.1862, -96.7256, 0.23 ) }
    dend_36 { pt3dadd( 155.293, 15.4043, -97.6124, 0.23 ) }
    dend_36 { pt3dadd( 156.003, 16.2702, -98.6648, 0.23 ) }
    dend_36 { pt3dadd( 156.759, 17.2863, -99.4978, 0.23 ) }
    dend_36 { pt3dadd( 158.17, 19.116, -100.613, 0.23 ) }
    dend_36 { pt3dadd( 159.754, 21.0622, -101.53, 0.91 ) }
    dend_36 { pt3dadd( 161.602, 22.9943, -102.384, 0.23 ) }
    dend_36 { pt3dadd( 162.615, 23.8413, -102.757, 0.23 ) }
    dend_36 { pt3dadd( 164.484, 25.0472, -103.316, 1.36 ) }
    dend_36 { pt3dadd( 166.326, 26.0796, -103.785, 0.23 ) }
    dend_36 { pt3dadd( 167.772, 26.7322, -104.1, 0.23 ) }
    dend_36 { pt3dadd( 169.706, 27.2834, -104.421, 0.23 ) }
    dend_36 { pt3dadd( 171.768, 27.5023, -104.71, 0.23 ) }
    dend_36 { pt3dadd( 172.736, 27.49, -104.826, 0.68 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 70/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 23.2872, 14.9137, -11.5199, 1.36 ) }
    dend_31 { pt3dadd( 24.9622, 17.4483, -11.9675, 1.36 ) }
    dend_31 { pt3dadd( 25.8354, 18.6648, -12.2428, 1.36 ) }
    dend_31 { pt3dadd( 26.5672, 19.6754, -12.4897, 1.36 ) }
    dend_31 { pt3dadd( 28.0554, 21.6623, -13.0425, 0.68 ) }
    dend_31 { pt3dadd( 28.9133, 22.7937, -13.3728, 1.59 ) }
    dend_31 { pt3dadd( 29.6083, 23.6814, -13.6113, 1.59 ) }
    dend_31 { pt3dadd( 31.0596, 25.355, -14.0274, 0.68 ) }
    dend_31 { pt3dadd( 32.4264, 26.9007, -14.3729, 1.59 ) }
    dend_31 { pt3dadd( 33.6926, 28.3918, -14.6757, 0.91 ) }
    dend_31 { pt3dadd( 34.1443, 28.9684, -14.7826, 1.36 ) }
    dend_31 { pt3dadd( 35.4008, 30.7118, -15.1153, 1.81 ) }
    dend_31 { pt3dadd( 36.4411, 32.2406, -15.3943, 2.04 ) }
    dend_31 { pt3dadd( 36.8551, 32.8574, -15.5034, 2.04 ) }
    dend_31 { pt3dadd( 38.6412, 35.5826, -16.0266, 1.13 ) }
    dend_31 { pt3dadd( 39.4363, 36.8646, -16.3181, 0.23 ) }
    dend_31 { pt3dadd( 40.672, 38.8946, -16.8659, 1.59 ) }
    dend_31 { pt3dadd( 41.9468, 41.0276, -17.5183, 1.36 ) }
    dend_31 { pt3dadd( 42.9202, 42.6318, -18.026, 1.36 ) }
    dend_31 { pt3dadd( 43.4912, 43.5529, -18.324, 2.04 ) }
    dend_31 { pt3dadd( 45.3243, 46.4049, -19.2614, 0.23 ) }
    dend_31 { pt3dadd( 46.8596, 48.5988, -20.0092, 0.45 ) }
    dend_31 { pt3dadd( 47.4203, 49.3347, -20.2363, 1.36 ) }
    dend_31 { pt3dadd( 48.205, 50.3003, -20.5183, 1.81 ) }
    dend_31 { pt3dadd( 48.8078, 50.965, -20.6856, 1.36 ) }
    dend_31 { pt3dadd( 49.8198, 51.9739, -20.8728, 0.68 ) }
    dend_31 { pt3dadd( 51.136, 53.1262, -20.9984, 0.68 ) }
    dend_31 { pt3dadd( 52.8855, 54.5341, -21.0957, 2.04 ) }
    dend_31 { pt3dadd( 53.5931, 55.0785, -21.1208, 2.04 ) }
    dend_31 { pt3dadd( 54.5178, 55.7558, -21.1223, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_31 { pt3dadd( 55.3827, 56.3721, -21.0747, 2.04 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 10.9641, 1.95987, 8.16465, 0.91 ) }
    dend_29 { pt3dadd( 12.275, 2.17037, 8.39208, 0.91 ) }
    dend_29 { pt3dadd( 14.8863, 2.68377, 8.8119, 0.91 ) }
    dend_29 { pt3dadd( 16.0362, 2.93383, 9.00192, 1.81 ) }
    dend_29 { pt3dadd( 18.6591, 3.53898, 9.42205, 1.36 ) }
    dend_29 { pt3dadd( 20.8232, 4.00397, 9.75104, 1.81 ) }
    dend_29 { pt3dadd( 24.0836, 4.67544, 10.2443, 0.68 ) }
    dend_29 { pt3dadd( 25.9379, 5.07192, 10.5182, 1.81 ) }
    dend_29 { pt3dadd( 27.7741, 5.51947, 10.7438, 1.81 ) }
    dend_29 { pt3dadd( 29.0601, 5.85003, 10.9011, 2.27 ) }
    dend_29 { pt3dadd( 31.5971, 6.52227, 11.2017, 1.13 ) }
    dend_29 { pt3dadd( 34.3385, 7.2688, 11.6038, 0.23 ) }
    dend_29 { pt3dadd( 36.4648, 7.83067, 11.9851, 0.23 ) }
    dend_29 { pt3dadd( 38.8427, 8.4191, 12.3259, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 15/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 10.9641, 1.95987, 8.16465, 0.45 ) }
    dend_28 { pt3dadd( 12.3546, 0.367828, 9.30288, 0.45 ) }
    dend_28 { pt3dadd( 13.8992, -1.38668, 10.5373, 0.45 ) }
    dend_28 { pt3dadd( 14.6354, -2.14336, 11.0955, 0.45 ) }
    dend_28 { pt3dadd( 15.7186, -3.27936, 11.9652, 0.91 ) }
    dend_28 { pt3dadd( 16.3402, -3.95281, 12.4561, 0.91 ) }
    dend_28 { pt3dadd( 17.5322, -5.24443, 13.3975, 1.59 ) }
    dend_28 { pt3dadd( 18.8204, -6.64035, 14.4654, 0.68 ) }
    dend_28 { pt3dadd( 20.207, -8.19283, 15.6325, 1.36 ) }
    dend_28 { pt3dadd( 21.2652, -9.39235, 16.4817, 1.36 ) }
    dend_28 { pt3dadd( 22.7222, -10.9648, 17.547, 0.45 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 26/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -10.4561, 7.824, 7.76592, 2.72 ) }
    dend_22 { pt3dadd( -12.0785, 8.72542, 9.65686, 2.72 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 28/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.4561, 7.824, 7.76592, 1.13 ) }
    dend_21 { pt3dadd( -12.0054, 9.11043, 9.27286, 1.13 ) }
    dend_21 { pt3dadd( -12.893, 9.84673, 10.0637, 0.68 ) }
    dend_21 { pt3dadd( -14.1309, 10.9273, 11.078, 1.13 ) }
    dend_21 { pt3dadd( -15.041, 11.8265, 11.7893, 0.23 ) }
    dend_21 { pt3dadd( -15.858, 12.6338, 12.4278, 0.23 ) }
    dend_21 { pt3dadd( -16.568, 13.3353, 12.9826, 0.23 ) }
    dend_21 { pt3dadd( -16.9618, 13.6805, 13.2098, 0.23 ) }
    dend_21 { pt3dadd( -17.7174, 14.4617, 13.5607, 0.23 ) }
    dend_21 { pt3dadd( -18.4486, 15.3912, 13.8035, 0.68 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 9.5189, -11.9456, -4.84346, 1.13 ) }
    dend_17 { pt3dadd( 12.1994, -10.8763, -5.66042, 1.13 ) }
    dend_17 { pt3dadd( 14.1167, -10.1081, -6.24061, 0.68 ) }
    dend_17 { pt3dadd( 16.3958, -9.32301, -6.85061, 1.36 ) }
    dend_17 { pt3dadd( 18.2242, -8.76097, -7.30734, 1.81 ) }
    dend_17 { pt3dadd( 20.8295, -8.00905, -7.91665, 1.36 ) }
    dend_17 { pt3dadd( 22.1071, -7.6403, -8.21546, 1.13 ) }
    dend_17 { pt3dadd( 23.4826, -7.23485, -8.52934, 1.59 ) }
    dend_17 { pt3dadd( 26.5078, -6.37435, -9.15365, 0.91 ) }
    dend_17 { pt3dadd( 28.5648, -5.9062, -9.5142, 1.59 ) }
    dend_17 { pt3dadd( 29.7506, -5.71197, -9.69564, 2.5 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 49/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 9.5189, -11.9456, -4.84346, 1.36 ) }
    dend_14 { pt3dadd( 8.75336, -15.8471, -4.85536, 1.36 ) }
    dend_14 { pt3dadd( 8.24999, -18.4124, -4.86319, 1.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 52/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -3.71147, -20.0742, 0.569258, 2.04 ) }
    dend_6 { pt3dadd( -4.75632, -21.5515, -0.178197, 2.04 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 54/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.71147, -20.0742, 0.569258, 0.68 ) }
    dend_1 { pt3dadd( -3.04359, -24.4277, 1.37534, 0.68 ) }
    dend_1 { pt3dadd( -2.6443, -27.0305, 1.85727, 1.13 ) }
    dend_1 { pt3dadd( -2.0993, -30.5831, 2.51504, 1.13 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 58/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 38.4561, 9.33193, 0.0, 0.847747 ) }
    axon_1 { pt3dadd( 53.0157, 12.94, 0.0, 0.847747 ) }
    axon_1 { pt3dadd( 67.5753, 16.5481, 0.0, 0.847747 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 61/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -17.7287, 9.24999, -3.25645, 0.45 ) }
    dend_46 { pt3dadd( -17.2498, 11.1119, -3.82755, 0.45 ) }
    dend_46 { pt3dadd( -17.0587, 12.1558, -4.13602, 1.13 ) }
    dend_46 { pt3dadd( -16.827, 14.4285, -4.8175, 0.23 ) }
    dend_46 { pt3dadd( -16.7513, 15.7975, -5.25412, 0.68 ) }
    dend_46 { pt3dadd( -16.6128, 18.094, -6.06489, 0.23 ) }
    dend_46 { pt3dadd( -16.5321, 19.1642, -6.43937, 0.91 ) }
    dend_46 { pt3dadd( -16.4756, 20.0517, -6.76157, 0.91 ) }
    dend_46 { pt3dadd( -16.3591, 21.7126, -7.38988, 0.23 ) }
    dend_46 { pt3dadd( -16.2022, 23.1812, -7.96434, 1.13 ) }
    dend_46 { pt3dadd( -15.918, 24.5058, -8.52046, 0.23 ) }
    dend_46 { pt3dadd( -15.2755, 26.1997, -9.34699, 1.36 ) }
    dend_46 { pt3dadd( -14.4869, 27.6538, -10.1256, 0.45 ) }
    dend_46 { pt3dadd( -14.2282, 28.011, -10.3501, 0.45 ) }
    dend_46 { pt3dadd( -13.2189, 29.1045, -11.1943, 0.45 ) }
    dend_46 { pt3dadd( -12.7637, 29.5586, -11.6265, 0.45 ) }
    dend_46 { pt3dadd( -12.1603, 30.227, -12.409, 0.45 ) }
    dend_46 { pt3dadd( -11.7759, 30.6629, -13.1177, 0.45 ) }
    dend_46 { pt3dadd( -11.4487, 31.1741, -13.9434, 0.45 ) }
    dend_46 { pt3dadd( -11.0636, 31.9252, -15.0338, 0.45 ) }
    dend_46 { pt3dadd( -10.7946, 32.8306, -16.1684, 0.45 ) }
    dend_46 { pt3dadd( -10.6366, 33.6101, -16.9954, 0.45 ) }
    dend_46 { pt3dadd( -10.5404, 34.3528, -17.6648, 1.13 ) }
    dend_46 { pt3dadd( -10.2555, 36.3921, -19.2059, 0.23 ) }
    dend_46 { pt3dadd( -10.0471, 37.3386, -19.8476, 1.13 ) }
    dend_46 { pt3dadd( -9.56928, 38.8197, -20.8239, 0.23 ) }
    dend_46 { pt3dadd( -9.30196, 39.4384, -21.2268, 1.13 ) }
    dend_46 { pt3dadd( -8.65122, 40.6514, -21.9842, 0.23 ) }
    dend_46 { pt3dadd( -8.08472, 41.5286, -22.4491, 1.13 ) }
    dend_46 { pt3dadd( -6.89293, 42.8669, -23.0867, 0.23 ) }
    dend_46 { pt3dadd( -6.43943, 43.3061, -23.3011, 0.91 ) }
    dend_46 { pt3dadd( -5.27737, 44.3324, -23.8352, 0.23 ) }
    dend_46 { pt3dadd( -4.70331, 44.833, -24.1497, 0.23 ) }
    dend_46 { pt3dadd( -3.5979, 45.8224, -24.7827, 0.91 ) }
    dend_46 { pt3dadd( -2.65221, 46.8679, -25.443, 0.23 ) }
    dend_46 { pt3dadd( -1.80492, 47.9732, -26.0981, 1.13 ) }
    dend_46 { pt3dadd( -1.0573, 49.052, -26.6968, 0.23 ) }
    dend_46 { pt3dadd( -0.121637, 50.5175, -27.4811, 0.23 ) }
    dend_46 { pt3dadd( 0.309831, 51.2961, -27.939, 1.13 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_46 { pt3dadd( 1.23548, 53.3138, -29.1796, 0.23 ) }
    dend_46 { pt3dadd( 1.47699, 53.9705, -29.5654, 0.91 ) }
    dend_46 { pt3dadd( 1.72944, 54.7579, -29.9921, 0.23 ) }
    dend_46 { pt3dadd( 1.79957, 55.0495, -30.1374, 0.91 ) }
    dend_46 { pt3dadd( 2.10384, 57.5579, -31.3554, 0.23 ) }
    dend_46 { pt3dadd( 2.20553, 58.4236, -31.859, 1.13 ) }
    dend_46 { pt3dadd( 2.36242, 59.7445, -32.7311, 0.23 ) }
    dend_46 { pt3dadd( 2.46421, 60.6659, -33.3624, 1.13 ) }
    dend_46 { pt3dadd( 2.67885, 62.8296, -34.9641, 0.23 ) }
    dend_46 { pt3dadd( 2.82958, 64.7017, -36.3684, 1.13 ) }
    dend_46 { pt3dadd( 2.94993, 66.8273, -37.9318, 0.23 ) }
    dend_46 { pt3dadd( 2.94395, 67.6708, -38.5929, 0.23 ) }
    dend_46 { pt3dadd( 2.88475, 68.3083, -39.0936, 0.91 ) }
    dend_46 { pt3dadd( 2.67744, 69.8265, -40.2441, 0.23 ) }
    dend_46 { pt3dadd( 2.5631, 70.6228, -40.8164, 0.91 ) }
    dend_46 { pt3dadd( 2.28659, 72.8318, -42.2457, 0.23 ) }
    dend_46 { pt3dadd( 2.09396, 74.3011, -43.0524, 0.23 ) }
    dend_46 { pt3dadd( 2.0243, 75.2274, -43.5416, 1.59 ) }
    dend_46 { pt3dadd( 1.95734, 77.1608, -44.5498, 0.23 ) }
    dend_46 { pt3dadd( 1.94644, 78.9802, -45.4753, 1.13 ) }
    dend_46 { pt3dadd( 1.98261, 80.1072, -46.0804, 0.23 ) }
    dend_46 { pt3dadd( 2.0415, 81.0281, -46.5787, 0.68 ) }
    dend_46 { pt3dadd( 2.3927, 83.4518, -47.9418, 0.23 ) }
    dend_46 { pt3dadd( 2.49018, 83.8702, -48.1944, 0.68 ) }
    dend_46 { pt3dadd( 2.80457, 85.2382, -49.0358, 0.23 ) }
    dend_46 { pt3dadd( 3.11983, 86.4743, -49.7756, 0.23 ) }
    dend_46 { pt3dadd( 3.31049, 87.0202, -50.1271, 1.13 ) }
    dend_46 { pt3dadd( 4.25562, 88.9941, -51.5004, 0.23 ) }
    dend_46 { pt3dadd( 5.18546, 90.2471, -52.3284, 0.91 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 29/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -17.7287, 9.24999, -3.25645, 2.04 ) }
    dend_39 { pt3dadd( -19.5742, 10.4993, -3.27625, 2.04 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 31/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 55.3827, 56.3721, -21.0747, 0.23 ) }
    dend_35 { pt3dadd( 56.6607, 56.7564, -21.9412, 0.23 ) }
    dend_35 { pt3dadd( 58.0383, 57.1851, -22.8904, 0.23 ) }
    dend_35 { pt3dadd( 58.6425, 57.3802, -23.3116, 1.81 ) }
    dend_35 { pt3dadd( 60.1383, 57.8864, -24.3299, 0.23 ) }
    dend_35 { pt3dadd( 61.2223, 58.2083, -25.0372, 0.91 ) }
    dend_35 { pt3dadd( 62.2213, 58.4696, -25.6447, 0.23 ) }
    dend_35 { pt3dadd( 63.0583, 58.6512, -26.063, 1.36 ) }
    dend_35 { pt3dadd( 64.0458, 58.8096, -26.442, 0.23 ) }
    dend_35 { pt3dadd( 64.604, 58.8713, -26.6026, 0.91 ) }
    dend_35 { pt3dadd( 65.847, 58.9849, -26.8113, 0.23 ) }
    dend_35 { pt3dadd( 66.59, 59.0375, -26.8278, 0.23 ) }
    dend_35 { pt3dadd( 67.1174, 59.0905, -26.8058, 1.13 ) }
    dend_35 { pt3dadd( 68.3609, 59.2625, -26.7049, 0.23 ) }
    dend_35 { pt3dadd( 69.4005, 59.4481, -26.6031, 1.59 ) }
    dend_35 { pt3dadd( 70.8581, 59.7599, -26.4854, 0.23 ) }
    dend_35 { pt3dadd( 71.8935, 60.02, -26.4265, 1.13 ) }
    dend_35 { pt3dadd( 73.3053, 60.4159, -26.3982, 0.23 ) }
    dend_35 { pt3dadd( 74.5641, 60.8115, -26.4027, 1.13 ) }
    dend_35 { pt3dadd( 75.2467, 61.0468, -26.4218, 0.23 ) }
    dend_35 { pt3dadd( 76.8562, 61.6017, -26.5083, 0.23 ) }
    dend_35 { pt3dadd( 77.5268, 61.8289, -26.5448, 1.13 ) }
    dend_35 { pt3dadd( 78.4602, 62.1174, -26.597, 1.13 ) }
    dend_35 { pt3dadd( 80.0456, 62.581, -26.6968, 0.23 ) }
    dend_35 { pt3dadd( 81.626, 63.0628, -26.8217, 1.13 ) }
    dend_35 { pt3dadd( 82.8917, 63.4769, -26.9586, 0.23 ) }
    dend_35 { pt3dadd( 84.0531, 63.8994, -27.1018, 1.81 ) }
    dend_35 { pt3dadd( 85.4495, 64.4221, -27.2634, 0.23 ) }
    dend_35 { pt3dadd( 86.4589, 64.7828, -27.3743, 1.13 ) }
    dend_35 { pt3dadd( 87.7886, 65.268, -27.5118, 0.23 ) }
    dend_35 { pt3dadd( 88.8809, 65.6978, -27.6177, 1.13 ) }
    dend_35 { pt3dadd( 90.3219, 66.309, -27.729, 0.23 ) }
    dend_35 { pt3dadd( 91.7861, 66.9578, -27.8504, 1.13 ) }
    dend_35 { pt3dadd( 93.437, 67.7447, -27.975, 0.23 ) }
    dend_35 { pt3dadd( 94.2604, 68.1526, -28.0305, 0.23 ) }
    dend_35 { pt3dadd( 95.457, 68.7639, -28.1296, 1.36 ) }
    dend_35 { pt3dadd( 96.7672, 69.457, -28.282, 0.23 ) }
    dend_35 { pt3dadd( 97.3711, 69.7823, -28.3822, 0.91 ) }
    dend_35 { pt3dadd( 98.4377, 70.3595, -28.614, 0.23 ) }
    dend_35 { pt3dadd( 99.6911, 71.0062, -28.9448, 0.91 ) }
    dend_35 { pt3dadd( 101.314, 71.6959, -29.375, 0.23 ) }
    dend_35 { pt3dadd( 102.484, 72.086, -29.7091, 0.91 ) }
    dend_35 { pt3dadd( 103.145, 72.2543, -29.9122, 0.91 ) }
    dend_35 { pt3dadd( 104.039, 72.4153, -30.1916, 0.23 ) }
    dend_35 { pt3dadd( 104.856, 72.5066, -30.4432, 0.23 ) }
    dend_35 { pt3dadd( 106.036, 72.6471, -30.8581, 1.13 ) }
    dend_35 { pt3dadd( 107.154, 72.8785, -31.2887, 0.23 ) }
    dend_35 { pt3dadd( 107.672, 73.0396, -31.4929, 0.91 ) }
    dend_35 { pt3dadd( 108.529, 73.4058, -31.8317, 0.23 ) }
    dend_35 { pt3dadd( 109.562, 74.0047, -32.2761, 1.13 ) }
    dend_35 { pt3dadd( 111.134, 75.0963, -32.9834, 0.23 ) }
    dend_35 { pt3dadd( 112.446, 76.1309, -33.6056, 1.36 ) }
    dend_35 { pt3dadd( 113.525, 77.0413, -34.1016, 0.45 ) }
    dend_35 { pt3dadd( 114.616, 78.0245, -34.6086, 1.13 ) }
    dend_35 { pt3dadd( 115.759, 79.0765, -35.1577, 0.23 ) }
    dend_35 { pt3dadd( 116.382, 79.633, -35.4434, 0.23 ) }
    dend_35 { pt3dadd( 117.718, 80.69, -35.9594, 1.13 ) }
    dend_35 { pt3dadd( 118.169, 81.0083, -36.1174, 0.23 ) }
    dend_35 { pt3dadd( 118.885, 81.407, -36.3415, 1.13 ) }
    dend_35 { pt3dadd( 120.655, 82.1468, -36.8165, 0.23 ) }
    dend_35 { pt3dadd( 122.353, 82.6883, -37.203, 1.13 ) }
    dend_35 { pt3dadd( 123.605, 83.0481, -37.4716, 0.23 ) }
    dend_35 { pt3dadd( 124.787, 83.3742, -37.7389, 0.91 ) }
    dend_35 { pt3dadd( 126.306, 83.796, -38.0979, 0.23 ) }
    dend_35 { pt3dadd( 126.696, 83.9027, -38.1899, 0.91 ) }
    dend_35 { pt3dadd( 128.032, 84.2991, -38.4923, 0.23 ) }
    dend_35 { pt3dadd( 129.192, 84.6671, -38.8158, 1.13 ) }
    dend_35 { pt3dadd( 130.693, 85.2412, -39.2728, 0.23 ) }
    dend_35 { pt3dadd( 132.238, 85.8576, -39.7726, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 0/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 55.3827, 56.3721, -21.0747, 0.23 ) }
    dend_32 { pt3dadd( 55.725, 58.1764, -21.634, 0.23 ) }
    dend_32 { pt3dadd( 55.9972, 59.1227, -21.9619, 0.23 ) }
    dend_32 { pt3dadd( 56.4347, 60.3529, -22.4245, 1.13 ) }
    dend_32 { pt3dadd( 56.7795, 61.1398, -22.7219, 1.81 ) }
    dend_32 { pt3dadd( 57.6074, 62.8295, -23.3359, 0.68 ) }
    dend_32 { pt3dadd( 57.983, 63.549, -23.5945, 0.23 ) }
    dend_32 { pt3dadd( 58.757, 64.8544, -24.0657, 1.81 ) }
    dend_32 { pt3dadd( 59.2468, 65.6176, -24.3229, 1.81 ) }
    dend_32 { pt3dadd( 60.0782, 66.8564, -24.758, 0.91 ) }
    dend_32 { pt3dadd( 60.8297, 67.9022, -25.1302, 0.23 ) }
    dend_32 { pt3dadd( 61.6521, 68.9843, -25.5003, 0.23 ) }
    dend_32 { pt3dadd( 62.2329, 69.727, -25.7593, 1.81 ) }
    dend_32 { pt3dadd( 62.7515, 70.3764, -25.9766, 1.81 ) }
    dend_32 { pt3dadd( 64.0255, 71.8762, -26.4883, 0.23 ) }
    dend_32 { pt3dadd( 64.6762, 72.5871, -26.738, 1.81 ) }
    dend_32 { pt3dadd( 65.366, 73.2754, -26.9802, 1.81 ) }
    dend_32 { pt3dadd( 66.5435, 74.3716, -27.3419, 0.23 ) }
    dend_32 { pt3dadd( 67.3732, 75.1191, -27.583, 0.23 ) }
    dend_32 { pt3dadd( 68.1987, 75.8498, -27.8019, 1.36 ) }
    dend_32 { pt3dadd( 69.1365, 76.6707, -28.025, 1.36 ) }
    dend_32 { pt3dadd( 70.8946, 78.26, -28.4893, 0.68 ) }
    dend_32 { pt3dadd( 71.7934, 79.1181, -28.7447, 0.23 ) }
    dend_32 { pt3dadd( 72.5119, 79.8385, -28.9561, 2.27 ) }
    dend_32 { pt3dadd( 73.9267, 81.3522, -29.3936, 0.23 ) }
    dend_32 { pt3dadd( 74.7491, 82.3074, -29.6729, 0.68 ) }
    dend_32 { pt3dadd( 75.4474, 83.2373, -29.941, 2.04 ) }
    dend_32 { pt3dadd( 75.9394, 83.9967, -30.1489, 2.04 ) }
    dend_32 { pt3dadd( 76.1891, 84.5083, -30.2789, 2.04 ) }
    dend_32 { pt3dadd( 76.8963, 86.4596, -30.7664, 0.23 ) }
    dend_32 { pt3dadd( 77.1429, 87.4131, -30.9966, 0.23 ) }
    dend_32 { pt3dadd( 77.4322, 88.7413, -31.309, 0.45 ) }
    dend_32 { pt3dadd( 77.5269, 89.2132, -31.4219, 2.27 ) }
    dend_32 { pt3dadd( 78.1215, 92.32, -32.1976, 0.23 ) }
    dend_32 { pt3dadd( 78.3453, 93.5668, -32.5178, 1.59 ) }
    dend_32 { pt3dadd( 78.6207, 95.1961, -32.9276, 0.45 ) }
    dend_32 { pt3dadd( 78.8194, 96.2465, -33.1715, 1.36 ) }
    dend_32 { pt3dadd( 79.2419, 98.1367, -33.6279, 0.23 ) }
    dend_32 { pt3dadd( 79.3625, 98.5988, -33.7399, 0.91 ) }
    dend_32 { pt3dadd( 79.6694, 99.5199, -33.96, 0.23 ) }
    dend_32 { pt3dadd( 80.0978, 100.645, -34.2135, 1.81 ) }
    dend_32 { pt3dadd( 80.6631, 101.955, -34.5319, 0.91 ) }
    dend_32 { pt3dadd( 81.514, 103.805, -34.9925, 0.23 ) }
    dend_32 { pt3dadd( 81.9039, 104.555, -35.1825, 0.23 ) }
    dend_32 { pt3dadd( 82.471, 105.504, -35.425, 1.81 ) }
    dend_32 { pt3dadd( 83.2158, 106.592, -35.7044, 1.81 ) }
    dend_32 { pt3dadd( 84.465, 108.277, -36.0614, 0.23 ) }
    dend_32 { pt3dadd( 85.5968, 109.687, -36.2883, 1.13 ) }
    dend_32 { pt3dadd( 86.3174, 110.515, -36.3801, 1.13 ) }
    dend_32 { pt3dadd( 87.8285, 112.189, -36.5213, 0.23 ) }
    dend_32 { pt3dadd( 88.8771, 113.327, -36.5705, 0.91 ) }
    dend_32 { pt3dadd( 90.2339, 114.74, -36.5871, 0.23 ) }
    dend_32 { pt3dadd( 90.7263, 115.247, -36.5906, 2.04 ) }
    dend_32 { pt3dadd( 91.0607, 115.62, -36.6043, 2.5 ) }
    dend_32 { pt3dadd( 91.667, 116.399, -36.6673, 2.04 ) }
    dend_32 { pt3dadd( 93.3843, 118.998, -37.0311, 0.23 ) }
    dend_32 { pt3dadd( 93.949, 119.985, -37.2163, 0.23 ) }
    dend_32 { pt3dadd( 94.6172, 121.372, -37.5566, 2.04 ) }
    dend_32 { pt3dadd( 95.3958, 123.292, -38.0595, 0.23 ) }
    dend_32 { pt3dadd( 95.631, 123.961, -38.252, 1.13 ) }
    dend_32 { pt3dadd( 96.1068, 125.533, -38.7498, 0.23 ) }
    dend_32 { pt3dadd( 96.3724, 126.601, -39.1221, 1.59 ) }
    dend_32 { pt3dadd( 96.7346, 128.175, -39.6909, 0.45 ) }
    dend_32 { pt3dadd( 97.0956, 129.717, -40.2722, 1.81 ) }
    dend_32 { pt3dadd( 97.487, 131.261, -40.8947, 0.23 ) }
    dend_32 { pt3dadd( 97.6309, 131.784, -41.1053, 0.68 ) }
    dend_32 { pt3dadd( 97.9652, 132.896, -41.5817, 0.23 ) }
    dend_32 { pt3dadd( 98.2483, 133.833, -41.9981, 1.59 ) }
    dend_32 { pt3dadd( 98.5783, 135.012, -42.5071, 0.68 ) }
    dend_32 { pt3dadd( 98.8201, 136.091, -42.9407, 1.81 ) }
    dend_32 { pt3dadd( 98.9252, 136.625, -43.15, 1.81 ) }
    dend_32 { pt3dadd( 99.2074, 138.126, -43.7249, 0.68 ) }
    dend_32 { pt3dadd( 99.3636, 138.994, -44.0336, 1.13 ) }
    dend_32 { pt3dadd( 99.5741, 140.064, -44.3931, 0.23 ) }
    dend_32 { pt3dadd( 99.8513, 141.397, -44.8246, 0.91 ) }
    dend_32 { pt3dadd( 100.177, 142.846, -45.2776, 0.23 ) }
    dend_32 { pt3dadd( 100.406, 143.769, -45.5654, 1.36 ) }
    dend_32 { pt3dadd( 100.718, 144.838, -45.8919, 1.36 ) }
    dend_32 { pt3dadd( 101.199, 146.225, -46.3399, 0.23 ) }
    dend_32 { pt3dadd( 101.614, 147.307, -46.7075, 0.91 ) }
    dend_32 { pt3dadd( 101.789, 147.742, -46.8527, 1.36 ) }
    dend_32 { pt3dadd( 102.632, 149.643, -47.4392, 0.23 ) }
    dend_32 { pt3dadd( 103.051, 150.534, -47.7368, 1.13 ) }
    dend_32 { pt3dadd( 103.693, 151.896, -48.1889, 0.23 ) }
    dend_32 { pt3dadd( 104.286, 153.258, -48.61, 0.91 ) }
    dend_32 { pt3dadd( 104.847, 154.629, -49.0433, 0.91 ) }
    dend_32 { pt3dadd( 105.43, 156.159, -49.573, 0.23 ) }
    dend_32 { pt3dadd( 105.769, 157.131, -49.9454, 0.23 ) }
    dend_32 { pt3dadd( 106.061, 158.04, -50.3213, 1.59 ) }
    dend_32 { pt3dadd( 106.379, 159.06, -50.7867, 2.5 ) }
    dend_32 { pt3dadd( 107.255, 161.993, -52.1846, 0.23 ) }
    dend_32 { pt3dadd( 107.59, 163.242, -52.806, 0.68 ) }
    dend_32 { pt3dadd( 107.954, 164.721, -53.5453, 0.23 ) }
    dend_32 { pt3dadd( 108.061, 165.151, -53.7509, 0.91 ) }
    dend_32 { pt3dadd( 108.284, 166.088, -54.1606, 0.23 ) }
    dend_32 { pt3dadd( 108.568, 167.385, -54.6631, 2.04 ) }
    dend_32 { pt3dadd( 109.07, 170.224, -55.5801, 0.23 ) }
    dend_32 { pt3dadd( 109.104, 170.447, -55.6417, 1.13 ) }
    dend_32 { pt3dadd( 109.241, 171.567, -55.9364, 1.81 ) }
    dend_32 { pt3dadd( 109.505, 174.284, -56.6372, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_32 { pt3dadd( 109.602, 175.611, -56.9809, 0.23 ) }
    dend_32 { pt3dadd( 109.673, 176.836, -57.3287, 0.91 ) }
    dend_32 { pt3dadd( 109.709, 177.938, -57.664, 1.81 ) }
    dend_32 { pt3dadd( 109.691, 180.471, -58.4815, 0.23 ) }
    dend_32 { pt3dadd( 109.651, 181.557, -58.8644, 0.23 ) }
    dend_32 { pt3dadd( 109.553, 183.184, -59.5262, 1.81 ) }
    dend_32 { pt3dadd( 109.397, 185.062, -60.3186, 0.23 ) }
    dend_32 { pt3dadd( 109.262, 186.445, -60.9191, 1.81 ) }
    dend_32 { pt3dadd( 109.041, 188.633, -61.9039, 0.23 ) }
    dend_32 { pt3dadd( 108.896, 190.07, -62.5692, 1.59 ) }
    dend_32 { pt3dadd( 108.731, 191.763, -63.3765, 0.23 ) }
    dend_32 { pt3dadd( 108.678, 192.202, -63.5943, 1.36 ) }
    dend_32 { pt3dadd( 108.588, 192.834, -63.9156, 1.36 ) }
    dend_32 { pt3dadd( 108.429, 194.137, -64.5503, 0.45 ) }
    dend_32 { pt3dadd( 108.285, 195.516, -65.1976, 2.04 ) }
    dend_32 { pt3dadd( 108.109, 197.366, -65.9677, 0.23 ) }
    dend_32 { pt3dadd( 108.023, 198.44, -66.3695, 1.13 ) }
    dend_32 { pt3dadd( 107.977, 199.173, -66.6371, 1.81 ) }
    dend_32 { pt3dadd( 107.82, 201.872, -67.5651, 0.23 ) }
    dend_32 { pt3dadd( 107.762, 203.063, -67.9295, 1.13 ) }
    dend_32 { pt3dadd( 107.754, 203.907, -68.1736, 1.13 ) }
    dend_32 { pt3dadd( 107.801, 205.549, -68.6443, 0.23 ) }
    dend_32 { pt3dadd( 107.912, 207.118, -69.1339, 0.23 ) }
    dend_32 { pt3dadd( 108.016, 208.436, -69.5859, 0.23 ) }
    dend_32 { pt3dadd( 108.123, 209.969, -70.1809, 1.81 ) }
    dend_32 { pt3dadd( 108.312, 212.86, -71.3409, 0.23 ) }
    dend_32 { pt3dadd( 108.361, 213.782, -71.7428, 1.13 ) }
    dend_32 { pt3dadd( 108.44, 215.059, -72.3592, 0.23 ) }
    dend_32 { pt3dadd( 108.497, 216.113, -72.9366, 1.59 ) }
    dend_32 { pt3dadd( 108.533, 217.112, -73.5322, 0.45 ) }
    dend_32 { pt3dadd( 108.517, 218.077, -74.1444, 1.13 ) }
    dend_32 { pt3dadd( 108.422, 219.532, -75.0823, 0.23 ) }
    dend_32 { pt3dadd( 108.302, 221.179, -76.1598, 1.13 ) }
    dend_32 { pt3dadd( 108.243, 222.062, -76.7196, 0.23 ) }
    dend_32 { pt3dadd( 108.205, 222.832, -77.2051, 0.91 ) }
    dend_32 { pt3dadd( 108.168, 224.188, -78.0295, 0.23 ) }
    dend_32 { pt3dadd( 108.165, 225.349, -78.6985, 1.36 ) }
    dend_32 { pt3dadd( 108.19, 226.471, -79.264, 0.23 ) }
    dend_32 { pt3dadd( 108.209, 227.565, -79.7671, 0.91 ) }
    dend_32 { pt3dadd( 108.219, 228.287, -80.0639, 0.91 ) }
    dend_32 { pt3dadd( 108.204, 229.687, -80.5926, 0.23 ) }
    dend_32 { pt3dadd( 108.166, 230.795, -80.9575, 1.59 ) }
    dend_32 { pt3dadd( 108.022, 232.871, -81.5704, 0.23 ) }
    dend_32 { pt3dadd( 107.869, 234.162, -81.9106, 1.59 ) }
    dend_32 { pt3dadd( 107.555, 236.145, -82.4252, 0.23 ) }
    dend_32 { pt3dadd( 107.341, 237.368, -82.7253, 0.23 ) }
    dend_32 { pt3dadd( 107.109, 238.47, -82.9756, 1.81 ) }
    dend_32 { pt3dadd( 107.042, 238.749, -83.0378, 1.81 ) }
    dend_32 { pt3dadd( 106.152, 242.082, -83.7338, 0.23 ) }
    dend_32 { pt3dadd( 105.88, 243.095, -83.9471, 0.91 ) }
    dend_32 { pt3dadd( 105.568, 244.193, -84.19, 0.23 ) }
    dend_32 { pt3dadd( 105.251, 245.343, -84.4458, 0.91 ) }
    dend_32 { pt3dadd( 104.769, 247.023, -84.814, 0.23 ) }
    dend_32 { pt3dadd( 104.449, 248.123, -85.0729, 1.59 ) }
    dend_32 { pt3dadd( 103.925, 249.898, -85.5026, 0.45 ) }
    dend_32 { pt3dadd( 103.528, 251.287, -85.836, 1.36 ) }
    dend_32 { pt3dadd( 103.284, 252.174, -86.0512, 1.36 ) }
    dend_32 { pt3dadd( 103.033, 253.186, -86.2898, 0.23 ) }
    dend_32 { pt3dadd( 102.819, 254.358, -86.5473, 0.91 ) }
    dend_32 { pt3dadd( 102.561, 256.255, -86.94, 0.23 ) }
    dend_32 { pt3dadd( 102.485, 257.157, -87.1077, 1.13 ) }
    dend_32 { pt3dadd( 102.464, 258.527, -87.3384, 0.23 ) }
    dend_32 { pt3dadd( 102.531, 259.68, -87.5171, 2.5 ) }
    dend_32 { pt3dadd( 102.812, 261.913, -87.8228, 0.23 ) }
    dend_32 { pt3dadd( 102.907, 262.394, -87.8828, 1.13 ) }
    dend_32 { pt3dadd( 103.224, 263.502, -88.0373, 1.13 ) }
    dend_32 { pt3dadd( 103.898, 265.33, -88.3547, 0.23 ) }
    dend_32 { pt3dadd( 104.364, 266.408, -88.5736, 1.81 ) }
    dend_32 { pt3dadd( 104.636, 267.021, -88.7218, 1.81 ) }
    dend_32 { pt3dadd( 105.271, 268.53, -89.1666, 0.68 ) }
    dend_32 { pt3dadd( 105.7, 269.539, -89.4818, 0.23 ) }
    dend_32 { pt3dadd( 106.317, 270.982, -89.9713, 1.59 ) }
    dend_32 { pt3dadd( 106.56, 271.584, -90.1935, 1.59 ) }
    dend_32 { pt3dadd( 107.369, 273.897, -91.0623, 0.23 ) }
    dend_32 { pt3dadd( 107.771, 275.107, -91.5353, 1.81 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 75/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -12.0785, 8.72542, 9.65686, 0.91 ) }
    dend_24 { pt3dadd( -13.8036, 10.3403, 10.0044, 0.91 ) }
    dend_24 { pt3dadd( -15.3519, 11.7897, 10.3162, 0.91 ) }
    dend_24 { pt3dadd( -17.2375, 13.5548, 10.6961, 0.91 ) }
    dend_24 { pt3dadd( -19.0034, 15.2079, 11.0518, 1.36 ) }
    dend_24 { pt3dadd( -20.567, 16.6716, 11.3667, 2.04 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 81/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -12.0785, 8.72542, 9.65686, 1.13 ) }
    dend_23 { pt3dadd( -14.8986, 9.14015, 9.89727, 1.13 ) }
    dend_23 { pt3dadd( -16.8531, 9.44053, 10.0395, 0.68 ) }
    dend_23 { pt3dadd( -19.4268, 9.69937, 10.2793, 1.59 ) }
    dend_23 { pt3dadd( -23.1759, 9.87884, 10.7141, 0.68 ) }
    dend_23 { pt3dadd( -25.906, 9.87857, 11.0404, 0.68 ) }
    dend_23 { pt3dadd( -27.1102, 9.8405, 11.1776, 0.68 ) }
    dend_23 { pt3dadd( -30.5028, 9.59161, 11.6185, 0.23 ) }
    dend_23 { pt3dadd( -33.4483, 9.16587, 12.052, 0.23 ) }
    dend_23 { pt3dadd( -35.2813, 8.74892, 12.3254, 0.23 ) }
    dend_23 { pt3dadd( -37.2122, 8.12539, 12.5734, 0.68 ) }
    dend_23 { pt3dadd( -39.1014, 7.41569, 12.8038, 1.36 ) }
    dend_23 { pt3dadd( -42.4527, 6.06144, 13.1946, 0.23 ) }
    dend_23 { pt3dadd( -44.1027, 5.33762, 13.3814, 0.23 ) }
    dend_23 { pt3dadd( -45.7724, 4.67575, 13.4929, 0.91 ) }
    dend_23 { pt3dadd( -47.9259, 3.84858, 13.5936, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 29.7506, -5.71197, -9.69564, 0.23 ) }
    dend_19 { pt3dadd( 31.6838, -6.5191, -9.96131, 0.23 ) }
    dend_19 { pt3dadd( 33.6371, -7.39922, -10.1779, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_19 { pt3dadd( 34.5092, -7.79305, -10.2535, 1.13 ) }
    dend_19 { pt3dadd( 35.5879, -8.29575, -10.3268, 0.23 ) }
    dend_19 { pt3dadd( 36.8831, -8.92871, -10.3997, 1.81 ) }
    dend_19 { pt3dadd( 38.537, -9.80321, -10.4496, 0.23 ) }
    dend_19 { pt3dadd( 39.7597, -10.5203, -10.3967, 0.91 ) }
    dend_19 { pt3dadd( 41.3968, -11.5453, -10.2331, 0.91 ) }
    dend_19 { pt3dadd( 42.621, -12.3252, -10.0816, 0.23 ) }
    dend_19 { pt3dadd( 43.1373, -12.6674, -9.99912, 0.23 ) }
    dend_19 { pt3dadd( 44.7267, -13.7208, -9.70515, 0.45 ) }
    dend_19 { pt3dadd( 46.2071, -14.7054, -9.39935, 0.23 ) }
    dend_19 { pt3dadd( 47.6941, -15.7871, -9.07076, 1.13 ) }
    dend_19 { pt3dadd( 48.4252, -16.3451, -8.91025, 1.13 ) }
    dend_19 { pt3dadd( 50.3948, -17.7718, -8.63088, 0.23 ) }
    dend_19 { pt3dadd( 51.4619, -18.5023, -8.56096, 0.68 ) }
    dend_19 { pt3dadd( 51.9234, -18.7956, -8.56614, 0.23 ) }
    dend_19 { pt3dadd( 53.3131, -19.6119, -8.66063, 0.91 ) }
    dend_19 { pt3dadd( 54.7872, -20.3296, -8.78081, 0.91 ) }
    dend_19 { pt3dadd( 56.9645, -21.2672, -8.97281, 0.23 ) }
    dend_19 { pt3dadd( 58.4985, -21.7943, -9.11721, 0.23 ) }
    dend_19 { pt3dadd( 59.6008, -22.1184, -9.20334, 0.91 ) }
    dend_19 { pt3dadd( 61.6647, -22.6696, -9.32363, 0.23 ) }
    dend_19 { pt3dadd( 63.0687, -23.0061, -9.37139, 0.23 ) }
    dend_19 { pt3dadd( 64.1172, -23.2711, -9.37029, 0.91 ) }
    dend_19 { pt3dadd( 65.9001, -23.8016, -9.28794, 0.23 ) }
    dend_19 { pt3dadd( 67.0213, -24.166, -9.22669, 0.91 ) }
    dend_19 { pt3dadd( 68.2016, -24.6218, -9.12445, 0.91 ) }
    dend_19 { pt3dadd( 69.5671, -25.2249, -9.00507, 0.23 ) }
    dend_19 { pt3dadd( 70.5495, -25.6943, -8.92599, 0.68 ) }
    dend_19 { pt3dadd( 73.0422, -26.9307, -8.72178, 0.23 ) }
    dend_19 { pt3dadd( 73.7969, -27.3232, -8.67029, 0.91 ) }
    dend_19 { pt3dadd( 76.1674, -28.5629, -8.54772, 0.23 ) }
    dend_19 { pt3dadd( 77.9103, -29.443, -8.50892, 1.13 ) }
    dend_19 { pt3dadd( 79.4553, -30.2008, -8.51884, 1.13 ) }
    dend_19 { pt3dadd( 80.7684, -30.8004, -8.56107, 0.23 ) }
    dend_19 { pt3dadd( 82.0599, -31.369, -8.63364, 0.23 ) }
    dend_19 { pt3dadd( 83.9319, -32.1738, -8.77188, 0.91 ) }
    dend_19 { pt3dadd( 85.9609, -32.9964, -8.93295, 0.23 ) }
    dend_19 { pt3dadd( 88.2455, -33.9136, -9.0358, 0.91 ) }
    dend_19 { pt3dadd( 89.7294, -34.5169, -9.07182, 0.91 ) }
    dend_19 { pt3dadd( 90.908, -34.9886, -9.07748, 0.23 ) }
    dend_19 { pt3dadd( 92.417, -35.5951, -9.07773, 1.13 ) }
    dend_19 { pt3dadd( 95.1, -36.6758, -9.10829, 0.23 ) }
    dend_19 { pt3dadd( 97.1626, -37.501, -9.15263, 0.23 ) }
    dend_19 { pt3dadd( 98.8652, -38.1732, -9.23363, 1.13 ) }
    dend_19 { pt3dadd( 99.5079, -38.4174, -9.27862, 1.13 ) }
    dend_19 { pt3dadd( 101.986, -39.2215, -9.50269, 0.23 ) }
    dend_19 { pt3dadd( 103.371, -39.6309, -9.60244, 0.23 ) }
    dend_19 { pt3dadd( 104.951, -40.0762, -9.64359, 0.68 ) }
    dend_19 { pt3dadd( 106.441, -40.4677, -9.60814, 0.23 ) }
    dend_19 { pt3dadd( 108.717, -41.0816, -9.41562, 1.13 ) }
    dend_19 { pt3dadd( 112.016, -41.9948, -8.96024, 0.23 ) }
    dend_19 { pt3dadd( 113.927, -42.5932, -8.57591, 0.68 ) }
    dend_19 { pt3dadd( 116.659, -43.5742, -7.91522, 0.23 ) }
    dend_19 { pt3dadd( 118.207, -44.2368, -7.47815, 1.13 ) }
    dend_19 { pt3dadd( 119.305, -44.7815, -7.13339, 0.23 ) }
    dend_19 { pt3dadd( 120.071, -45.2377, -6.87415, 0.91 ) }
    dend_19 { pt3dadd( 121.796, -46.5777, -6.31641, 0.91 ) }
    dend_19 { pt3dadd( 122.478, -47.1618, -6.15001, 0.23 ) }
    dend_19 { pt3dadd( 123.305, -48.0004, -5.99772, 0.91 ) }
    dend_19 { pt3dadd( 124.252, -49.0749, -5.86662, 0.23 ) }
    dend_19 { pt3dadd( 124.407, -49.2546, -5.85211, 0.91 ) }
    dend_19 { pt3dadd( 126.244, -51.4809, -5.67016, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 62/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 29.7506, -5.71197, -9.69564, 0.23 ) }
    dend_18 { pt3dadd( 31.7718, -5.57566, -10.6473, 0.23 ) }
    dend_18 { pt3dadd( 33.8746, -5.53133, -11.5853, 0.91 ) }
    dend_18 { pt3dadd( 35.8964, -5.49664, -12.4839, 0.23 ) }
    dend_18 { pt3dadd( 37.6922, -5.41132, -13.3092, 0.91 ) }
    dend_18 { pt3dadd( 38.3357, -5.35664, -13.6177, 0.91 ) }
    dend_18 { pt3dadd( 39.4199, -5.20446, -14.1756, 0.23 ) }
    dend_18 { pt3dadd( 40.405, -5.0392, -14.6751, 0.91 ) }
    dend_18 { pt3dadd( 41.7214, -4.76359, -15.3577, 0.23 ) }
    dend_18 { pt3dadd( 42.9703, -4.48436, -16.0877, 2.04 ) }
    dend_18 { pt3dadd( 44.6173, -4.14957, -17.1251, 0.45 ) }
    dend_18 { pt3dadd( 45.8897, -3.88613, -17.9262, 0.23 ) }
    dend_18 { pt3dadd( 46.7288, -3.69921, -18.4509, 0.23 ) }
    dend_18 { pt3dadd( 48.4407, -3.31013, -19.4698, 1.81 ) }
    dend_18 { pt3dadd( 50.0977, -3.00084, -20.4291, 0.23 ) }
    dend_18 { pt3dadd( 52.0443, -2.75793, -21.498, 1.59 ) }
    dend_18 { pt3dadd( 53.2166, -2.66748, -22.1242, 0.45 ) }
    dend_18 { pt3dadd( 54.4951, -2.61026, -22.8377, 1.36 ) }
    dend_18 { pt3dadd( 55.1775, -2.56418, -23.2519, 1.81 ) }
    dend_18 { pt3dadd( 56.8882, -2.41023, -24.4855, 0.23 ) }
    dend_18 { pt3dadd( 57.7936, -2.31814, -25.1958, 0.23 ) }
    dend_18 { pt3dadd( 59.1265, -2.16376, -26.2912, 1.59 ) }
    dend_18 { pt3dadd( 60.7346, -1.97014, -27.6296, 0.23 ) }
    dend_18 { pt3dadd( 61.8827, -1.84532, -28.5541, 1.36 ) }
    dend_18 { pt3dadd( 64.4766, -1.56648, -30.552, 0.23 ) }
    dend_18 { pt3dadd( 65.9301, -1.37531, -31.5598, 2.04 ) }
    dend_18 { pt3dadd( 67.7426, -1.14212, -32.66, 0.23 ) }
    dend_18 { pt3dadd( 69.0959, -1.00311, -33.4033, 1.36 ) }
    dend_18 { pt3dadd( 71.0517, -0.87373, -34.3382, 0.23 ) }
    dend_18 { pt3dadd( 72.7349, -0.83029, -35.0501, 1.59 ) }
    dend_18 { pt3dadd( 75.0455, -0.855426, -35.9019, 0.23 ) }
    dend_18 { pt3dadd( 76.9301, -0.932968, -36.5876, 0.23 ) }
    dend_18 { pt3dadd( 79.7915, -1.11955, -37.6395, 1.81 ) }
    dend_18 { pt3dadd( 81.379, -1.23487, -38.2453, 0.23 ) }
    dend_18 { pt3dadd( 82.4926, -1.30769, -38.7571, 0.91 ) }
    dend_18 { pt3dadd( 83.8494, -1.37357, -39.5866, 0.23 ) }
    dend_18 { pt3dadd( 85.3267, -1.37575, -40.8432, 1.13 ) }
    dend_18 { pt3dadd( 86.4307, -1.26313, -42.0168, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( 87.4487, -1.05016, -43.2285, 1.13 ) }
    dend_18 { pt3dadd( 89.0345, -0.52528, -45.3725, 0.23 ) }
    dend_18 { pt3dadd( 90.5224, 0.134831, -47.5202, 2.04 ) }
    dend_18 { pt3dadd( 91.8057, 0.839087, -49.3905, 0.23 ) }
    dend_18 { pt3dadd( 92.4684, 1.23608, -50.3304, 1.36 ) }
    dend_18 { pt3dadd( 93.8679, 2.12858, -52.129, 0.45 ) }
    dend_18 { pt3dadd( 94.6713, 2.61329, -53.032, 1.13 ) }
    dend_18 { pt3dadd( 96.3431, 3.52383, -54.536, 0.23 ) }
    dend_18 { pt3dadd( 97.6769, 4.21718, -55.5526, 1.59 ) }
    dend_18 { pt3dadd( 99.1421, 4.99824, -56.5581, 0.23 ) }
    dend_18 { pt3dadd( 100.048, 5.46036, -57.1368, 0.91 ) }
    dend_18 { pt3dadd( 101.543, 6.21083, -58.1177, 0.68 ) }
    dend_18 { pt3dadd( 102.518, 6.67856, -58.7385, 0.23 ) }
    dend_18 { pt3dadd( 104.347, 7.5967, -59.8823, 1.13 ) }
    dend_18 { pt3dadd( 105.866, 8.3491, -60.8147, 0.23 ) }
    dend_18 { pt3dadd( 106.765, 8.77969, -61.412, 1.13 ) }
    dend_18 { pt3dadd( 108.988, 9.67595, -62.9185, 0.23 ) }
    dend_18 { pt3dadd( 110.068, 10.0067, -63.6415, 1.59 ) }
    dend_18 { pt3dadd( 112.151, 10.3995, -64.9906, 0.23 ) }
    dend_18 { pt3dadd( 113.604, 10.4693, -65.852, 1.59 ) }
    dend_18 { pt3dadd( 116.559, 10.3765, -67.4635, 0.68 ) }
    dend_18 { pt3dadd( 118.243, 10.2822, -68.3433, 1.36 ) }
    dend_18 { pt3dadd( 120.156, 10.1061, -69.3239, 0.23 ) }
    dend_18 { pt3dadd( 121.125, 9.98335, -69.887, 1.13 ) }
    dend_18 { pt3dadd( 123.319, 9.62945, -71.2567, 0.23 ) }
    dend_18 { pt3dadd( 125.331, 9.33192, -72.5676, 1.13 ) }
    dend_18 { pt3dadd( 126.306, 9.23296, -73.212, 1.13 ) }
    dend_18 { pt3dadd( 127.828, 9.21802, -74.3903, 0.23 ) }
    dend_18 { pt3dadd( 128.956, 9.3204, -75.4818, 0.23 ) }
    dend_18 { pt3dadd( 129.643, 9.44766, -76.2061, 1.13 ) }
    dend_18 { pt3dadd( 130.245, 9.65757, -76.9841, 1.13 ) }
    dend_18 { pt3dadd( 131.657, 10.3558, -78.989, 0.23 ) }
    dend_18 { pt3dadd( 132.446, 10.9313, -80.2909, 0.23 ) }
    dend_18 { pt3dadd( 133.909, 12.4161, -83.0761, 0.23 ) }
    dend_18 { pt3dadd( 134.58, 13.4247, -84.6864, 2.27 ) }
    dend_18 { pt3dadd( 135.408, 15.4882, -87.6698, 0.23 ) }
    dend_18 { pt3dadd( 135.535, 16.191, -88.61, 0.91 ) }
    dend_18 { pt3dadd( 135.577, 18.3929, -91.3802, 0.23 ) }
    dend_18 { pt3dadd( 135.531, 19.2104, -92.3931, 0.91 ) }
    dend_18 { pt3dadd( 135.438, 20.0783, -93.4279, 0.23 ) }
    dend_18 { pt3dadd( 135.246, 21.2818, -94.9765, 0.91 ) }
    dend_18 { pt3dadd( 134.943, 22.8012, -96.9046, 0.23 ) }
    dend_18 { pt3dadd( 134.844, 23.2898, -97.5529, 1.13 ) }
    dend_18 { pt3dadd( 134.726, 24.3633, -99.1026, 0.23 ) }
    dend_18 { pt3dadd( 134.773, 24.9938, -100.174, 0.91 ) }
    dend_18 { pt3dadd( 135.14, 26.1139, -102.235, 0.91 ) }
    dend_18 { pt3dadd( 135.618, 26.9365, -103.879, 0.23 ) }
    dend_18 { pt3dadd( 136.244, 27.6806, -105.443, 0.91 ) }
    dend_18 { pt3dadd( 137.172, 28.5608, -107.354, 0.91 ) }
    dend_18 { pt3dadd( 138.847, 29.9085, -110.471, 0.23 ) }
    dend_18 { pt3dadd( 139.678, 30.4492, -111.859, 0.68 ) }
    dend_18 { pt3dadd( 140.446, 30.844, -112.922, 0.68 ) }
    dend_18 { pt3dadd( 141.337, 31.2322, -114.026, 0.23 ) }
    dend_18 { pt3dadd( 142.53, 31.7225, -115.381, 0.23 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 54/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 8.24999, -18.4124, -4.86319, 0.45 ) }
    dend_16 { pt3dadd( 6.52188, -18.7392, -6.28535, 0.45 ) }
    dend_16 { pt3dadd( 5.48888, -18.9573, -7.12206, 1.36 ) }
    dend_16 { pt3dadd( 4.34076, -19.1966, -8.05554, 0.45 ) }
    dend_16 { pt3dadd( 3.30919, -19.3438, -8.8605, 0.68 ) }
    dend_16 { pt3dadd( 1.78246, -19.5097, -10.0962, 0.23 ) }
    dend_16 { pt3dadd( 0.575826, -19.6423, -11.0619, 0.91 ) }
    dend_16 { pt3dadd( -1.36507, -19.8764, -12.6252, 0.23 ) }
    dend_16 { pt3dadd( -1.87777, -19.929, -13.0477, 1.36 ) }
    dend_16 { pt3dadd( -3.21568, -20.0041, -14.1561, 1.36 ) }
    dend_16 { pt3dadd( -4.35485, -20.0223, -15.0792, 0.23 ) }
    dend_16 { pt3dadd( -6.09111, -19.994, -16.432, 0.91 ) }
    dend_16 { pt3dadd( -7.85767, -19.96, -17.8824, 0.23 ) }
    dend_16 { pt3dadd( -9.43389, -19.9755, -19.1752, 0.91 ) }
    dend_16 { pt3dadd( -10.2976, -20.0162, -19.8782, 0.91 ) }
    dend_16 { pt3dadd( -11.4033, -20.1323, -20.7911, 0.23 ) }
    dend_16 { pt3dadd( -12.3129, -20.2257, -21.5353, 0.91 ) }
    dend_16 { pt3dadd( -13.7638, -20.3613, -22.7661, 0.23 ) }
    dend_16 { pt3dadd( -14.6618, -20.5058, -23.5046, 0.68 ) }
    dend_16 { pt3dadd( -15.3492, -20.6418, -24.0736, 0.23 ) }
    dend_16 { pt3dadd( -16.3293, -20.8353, -24.8367, 1.36 ) }
    dend_16 { pt3dadd( -17.4923, -21.07, -25.6798, 1.36 ) }
    dend_16 { pt3dadd( -18.4112, -21.2761, -26.2818, 0.23 ) }
    dend_16 { pt3dadd( -19.5281, -21.5117, -26.9771, 0.91 ) }
    dend_16 { pt3dadd( -21.4635, -21.9073, -28.1943, 0.23 ) }
    dend_16 { pt3dadd( -23.074, -22.2302, -29.2489, 0.23 ) }
    dend_16 { pt3dadd( -23.4502, -22.3006, -29.4935, 1.36 ) }
    dend_16 { pt3dadd( -26.3348, -22.8411, -31.3785, 0.23 ) }
    dend_16 { pt3dadd( -27.7029, -23.1048, -32.3324, 1.59 ) }
    dend_16 { pt3dadd( -28.4292, -23.2418, -32.8587, 1.36 ) }
    dend_16 { pt3dadd( -30.3581, -23.6237, -34.3223, 0.23 ) }
    dend_16 { pt3dadd( -31.4533, -23.8403, -35.166, 1.13 ) }
    dend_16 { pt3dadd( -31.6787, -23.8821, -35.3307, 1.13 ) }
    dend_16 { pt3dadd( -33.4641, -24.2295, -36.5979, 0.23 ) }
    dend_16 { pt3dadd( -34.1994, -24.3946, -37.1043, 0.91 ) }
    dend_16 { pt3dadd( -35.669, -24.7725, -38.122, 0.23 ) }
    dend_16 { pt3dadd( -36.8353, -25.056, -38.9002, 0.91 ) }
    dend_16 { pt3dadd( -38.2995, -25.4345, -39.8994, 0.23 ) }
    dend_16 { pt3dadd( -39.3822, -25.719, -40.669, 1.81 ) }
    dend_16 { pt3dadd( -41.308, -26.2526, -42.0824, 0.23 ) }
    dend_16 { pt3dadd( -43.5807, -26.9528, -43.9024, 1.13 ) }
    dend_16 { pt3dadd( -45.4362, -27.5862, -45.563, 0.23 ) }
    dend_16 { pt3dadd( -46.4363, -27.9457, -46.543, 0.68 ) }
    dend_16 { pt3dadd( -47.9732, -28.4973, -48.1233, 1.36 ) }
    dend_16 { pt3dadd( -50.0212, -29.1576, -50.23, 0.23 ) }
    dend_16 { pt3dadd( -51.7768, -29.6737, -52.0633, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -53.432, -30.0991, -53.8089, 0.23 ) }
    dend_16 { pt3dadd( -54.5928, -30.3723, -54.9757, 0.23 ) }
    dend_16 { pt3dadd( -55.3976, -30.5136, -55.7184, 1.13 ) }
    dend_16 { pt3dadd( -56.9567, -30.7361, -57.0173, 0.23 ) }
    dend_16 { pt3dadd( -57.6191, -30.8077, -57.5179, 0.68 ) }
    dend_16 { pt3dadd( -58.7337, -30.936, -58.2645, 0.23 ) }
    dend_16 { pt3dadd( -60.7105, -31.1676, -59.4679, 1.13 ) }
    dend_16 { pt3dadd( -63.4064, -31.3999, -61.0585, 0.23 ) }
    dend_16 { pt3dadd( -64.1863, -31.439, -61.5163, 0.23 ) }
    dend_16 { pt3dadd( -65.6721, -31.4982, -62.4767, 0.23 ) }
    dend_16 { pt3dadd( -66.5725, -31.5047, -63.0838, 1.13 ) }
    dend_16 { pt3dadd( -67.9196, -31.4554, -64.1217, 1.13 ) }
    dend_16 { pt3dadd( -70.3079, -31.2924, -66.2107, 0.23 ) }
    dend_16 { pt3dadd( -72.2186, -31.1137, -68.0068, 0.91 ) }
    dend_16 { pt3dadd( -74.4321, -30.9123, -70.2337, 0.23 ) }
    dend_16 { pt3dadd( -75.002, -30.8743, -70.8385, 0.91 ) }
    dend_16 { pt3dadd( -77.3608, -30.8282, -73.4108, 0.23 ) }
    dend_16 { pt3dadd( -78.6286, -30.9242, -74.8602, 0.68 ) }
    dend_16 { pt3dadd( -79.7906, -31.123, -76.1961, 0.23 ) }
    dend_16 { pt3dadd( -80.2353, -31.2292, -76.6685, 0.91 ) }
    dend_16 { pt3dadd( -81.3978, -31.547, -77.7195, 0.23 ) }
    dend_16 { pt3dadd( -82.5655, -31.8878, -78.6907, 0.68 ) }
    dend_16 { pt3dadd( -84.1176, -32.3843, -79.8268, 0.23 ) }
    dend_16 { pt3dadd( -84.7752, -32.5926, -80.3008, 1.13 ) }
    dend_16 { pt3dadd( -87.7269, -33.5675, -82.385, 0.23 ) }
    dend_16 { pt3dadd( -89.289, -34.0585, -83.499, 0.68 ) }
    dend_16 { pt3dadd( -91.4253, -34.69, -85.0402, 0.23 ) }
    dend_16 { pt3dadd( -92.7985, -35.0927, -86.0589, 1.13 ) }
    dend_16 { pt3dadd( -96.1261, -36.0655, -88.5094, 0.23 ) }
    dend_16 { pt3dadd( -97.5009, -36.4732, -89.5243, 0.91 ) }
    dend_16 { pt3dadd( -98.8801, -36.8749, -90.5441, 0.23 ) }
    dend_16 { pt3dadd( -99.6596, -37.0957, -91.1347, 0.91 ) }
    dend_16 { pt3dadd( -101.082, -37.6041, -92.2045, 0.23 ) }
    dend_16 { pt3dadd( -101.959, -38.0036, -92.8791, 0.23 ) }
    dend_16 { pt3dadd( -103.285, -38.8147, -93.8535, 0.91 ) }
    dend_16 { pt3dadd( -104.717, -39.8642, -94.8551, 0.23 ) }
    dend_16 { pt3dadd( -105.301, -40.3436, -95.2414, 0.91 ) }
    dend_16 { pt3dadd( -107.523, -42.3824, -96.6733, 0.23 ) }
    dend_16 { pt3dadd( -109.543, -44.3882, -97.9433, 1.13 ) }
    dend_16 { pt3dadd( -112.341, -47.406, -99.7106, 0.23 ) }
    dend_16 { pt3dadd( -114.117, -49.4136, -100.81, 0.91 ) }
    dend_16 { pt3dadd( -114.536, -49.9005, -101.051, 0.23 ) }
    dend_16 { pt3dadd( -115.627, -51.2047, -101.65, 0.23 ) }
    dend_16 { pt3dadd( -116.304, -52.0282, -101.99, 0.45 ) }
    dend_16 { pt3dadd( -117.127, -53.0911, -102.356, 0.23 ) }
    dend_16 { pt3dadd( -117.91, -54.2569, -102.816, 0.91 ) }
    dend_16 { pt3dadd( -118.658, -55.4202, -103.351, 0.23 ) }
    dend_16 { pt3dadd( -119.379, -56.5689, -103.926, 0.68 ) }
    dend_16 { pt3dadd( -120.802, -58.8068, -105.129, 0.23 ) }
    dend_16 { pt3dadd( -121.168, -59.4162, -105.474, 0.91 ) }
    dend_16 { pt3dadd( -122.988, -62.4945, -107.306, 0.23 ) }
    dend_16 { pt3dadd( -123.401, -63.1925, -107.738, 1.13 ) }
    dend_16 { pt3dadd( -124.258, -64.5534, -108.64, 1.13 ) }
    dend_16 { pt3dadd( -125.007, -65.6971, -109.416, 1.13 ) }
    dend_16 { pt3dadd( -126.004, -67.3158, -110.46, 0.68 ) }
    dend_16 { pt3dadd( -126.408, -68.0605, -110.887, 0.23 ) }
    dend_16 { pt3dadd( -126.872, -68.9652, -111.372, 0.91 ) }
    dend_16 { pt3dadd( -127.914, -71.1474, -112.556, 0.23 ) }
    dend_16 { pt3dadd( -128.605, -72.6973, -113.424, 2.04 ) }
    dend_16 { pt3dadd( -129.782, -75.4573, -114.984, 0.23 ) }
    dend_16 { pt3dadd( -130.347, -76.833, -115.781, 0.68 ) }
    dend_16 { pt3dadd( -131.367, -79.4875, -117.327, 0.23 ) }
    dend_16 { pt3dadd( -131.784, -80.6235, -118.018, 0.91 ) }
    dend_16 { pt3dadd( -132.6, -82.7779, -119.381, 0.23 ) }
    dend_16 { pt3dadd( -132.757, -83.1345, -119.642, 0.68 ) }
    dend_16 { pt3dadd( -133.258, -84.2412, -120.502, 0.23 ) }
    dend_16 { pt3dadd( -133.8, -85.6323, -121.564, 0.91 ) }
    dend_16 { pt3dadd( -134.311, -87.1545, -122.692, 0.23 ) }
    dend_16 { pt3dadd( -134.649, -88.2336, -123.5, 1.13 ) }
    dend_16 { pt3dadd( -135.646, -91.5504, -125.978, 0.23 ) }
    dend_16 { pt3dadd( -136.155, -93.2617, -127.261, 0.91 ) }
    dend_16 { pt3dadd( -136.899, -95.715, -129.096, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 72/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 8.24999, -18.4124, -4.86319, 0.68 ) }
    dend_15 { pt3dadd( 7.81271, -20.5564, -5.42319, 0.68 ) }
    dend_15 { pt3dadd( 7.41393, -22.252, -5.86416, 1.36 ) }
    dend_15 { pt3dadd( 7.27753, -22.7937, -6.001, 1.36 ) }
    dend_15 { pt3dadd( 6.57225, -25.3167, -6.63397, 0.68 ) }
    dend_15 { pt3dadd( 5.95535, -27.2277, -7.1076, 1.13 ) }
    dend_15 { pt3dadd( 5.081, -29.6782, -7.77655, 0.45 ) }
    dend_15 { pt3dadd( 4.53381, -30.9705, -8.15625, 1.13 ) }
    dend_15 { pt3dadd( 3.71785, -32.7605, -8.7654, 1.81 ) }
    dend_15 { pt3dadd( 3.12946, -34.0068, -9.23562, 1.81 ) }
    dend_15 { pt3dadd( 1.44724, -37.5366, -10.6537, 0.68 ) }
    dend_15 { pt3dadd( 0.675479, -39.1931, -11.335, 1.36 ) }
    dend_15 { pt3dadd( -0.134166, -40.9865, -12.1162, 1.81 ) }
    dend_15 { pt3dadd( -1.41706, -44.0202, -13.4798, 0.91 ) }
    dend_15 { pt3dadd( -2.54739, -46.8778, -14.7648, 0.68 ) }
    dend_15 { pt3dadd( -2.8132, -47.6301, -15.0955, 2.27 ) }
    dend_15 { pt3dadd( -3.21466, -48.9193, -15.6404, 1.59 ) }
    dend_15 { pt3dadd( -3.88947, -51.4218, -16.5735, 0.45 ) }
    dend_15 { pt3dadd( -4.41813, -53.6585, -17.3364, 1.36 ) }
    dend_15 { pt3dadd( -4.9295, -56.0825, -18.0461, 0.68 ) }
    dend_15 { pt3dadd( -5.28494, -57.8594, -18.5311, 1.81 ) }
    dend_15 { pt3dadd( -5.44564, -58.6804, -18.7633, 2.27 ) }
    dend_15 { pt3dadd( -5.95331, -61.4205, -19.556, 0.23 ) }
    dend_15 { pt3dadd( -6.1025, -62.2329, -19.7887, 0.23 ) }
    dend_15 { pt3dadd( -6.35524, -63.7583, -20.23, 1.59 ) }
    dend_15 { pt3dadd( -6.48819, -64.683, -20.5122, 1.59 ) }
    dend_15 { pt3dadd( -6.91462, -67.7219, -21.4706, 0.23 ) }
    dend_15 { pt3dadd( -7.07183, -68.851, -21.8387, 1.13 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( -7.15048, -69.535, -22.0891, 1.13 ) }
    dend_15 { pt3dadd( -7.29099, -71.1512, -22.7037, 1.13 ) }
    dend_15 { pt3dadd( -7.40784, -72.8252, -23.3439, 0.23 ) }
    dend_15 { pt3dadd( -7.43689, -73.1761, -23.4687, 1.13 ) }
    dend_15 { pt3dadd( -7.58347, -74.5638, -23.9064, 1.13 ) }
    dend_15 { pt3dadd( -7.86828, -76.9606, -24.642, 0.23 ) }
    dend_15 { pt3dadd( -7.90239, -77.2392, -24.7255, 1.81 ) }
    dend_15 { pt3dadd( -8.1541, -78.7563, -25.1631, 1.81 ) }
    dend_15 { pt3dadd( -8.68742, -81.532, -25.9093, 0.23 ) }
    dend_15 { pt3dadd( -9.03066, -82.8883, -26.2615, 0.23 ) }
    dend_15 { pt3dadd( -9.75628, -85.1159, -26.778, 2.5 ) }
    dend_15 { pt3dadd( -10.0467, -85.9168, -26.9343, 2.5 ) }
    dend_15 { pt3dadd( -11.1213, -88.8702, -27.4778, 0.45 ) }
    dend_15 { pt3dadd( -11.4938, -89.9521, -27.6607, 1.13 ) }
    dend_15 { pt3dadd( -12.3436, -92.6738, -28.0737, 0.23 ) }
    dend_15 { pt3dadd( -13.0158, -95.102, -28.4441, 2.04 ) }
    dend_15 { pt3dadd( -13.6398, -97.9121, -28.8607, 0.23 ) }
    dend_15 { pt3dadd( -13.8994, -99.6025, -29.1142, 1.59 ) }
    dend_15 { pt3dadd( -13.9841, -101.446, -29.422, 0.68 ) }
    dend_15 { pt3dadd( -13.9171, -103.539, -29.8404, 0.23 ) }
    dend_15 { pt3dadd( -13.7429, -105.014, -30.1804, 0.23 ) }
    dend_15 { pt3dadd( -13.5564, -106.152, -30.487, 0.68 ) }
    dend_15 { pt3dadd( -13.3645, -107.328, -30.8477, 1.59 ) }
    dend_15 { pt3dadd( -12.9905, -109.995, -31.692, 0.23 ) }
    dend_15 { pt3dadd( -12.878, -111.269, -32.1313, 0.91 ) }
    dend_15 { pt3dadd( -12.8298, -112.646, -32.6166, 0.23 ) }
    dend_15 { pt3dadd( -12.8335, -113.759, -32.9921, 0.68 ) }
    dend_15 { pt3dadd( -12.9135, -114.951, -33.3972, 0.23 ) }
    dend_15 { pt3dadd( -13.1306, -116.606, -33.941, 2.04 ) }
    dend_15 { pt3dadd( -13.6812, -119.37, -34.8007, 0.23 ) }
    dend_15 { pt3dadd( -13.9465, -120.54, -35.1476, 0.45 ) }
    dend_15 { pt3dadd( -14.222, -121.616, -35.4637, 0.23 ) }
    dend_15 { pt3dadd( -14.6815, -123.189, -35.9248, 1.81 ) }
    dend_15 { pt3dadd( -15.4264, -125.388, -36.5544, 0.23 ) }
    dend_15 { pt3dadd( -16.2244, -127.402, -37.1311, 1.59 ) }
    dend_15 { pt3dadd( -16.9086, -128.922, -37.5442, 1.59 ) }
    dend_15 { pt3dadd( -17.8068, -130.782, -38.0888, 0.23 ) }
    dend_15 { pt3dadd( -18.4157, -131.929, -38.4496, 1.59 ) }
    dend_15 { pt3dadd( -19.4603, -133.758, -39.0632, 0.23 ) }
    dend_15 { pt3dadd( -20.5511, -135.53, -39.7647, 0.23 ) }
    dend_15 { pt3dadd( -21.0011, -136.227, -40.0732, 0.91 ) }
    dend_15 { pt3dadd( -21.8935, -137.531, -40.7123, 0.23 ) }
    dend_15 { pt3dadd( -22.4314, -138.348, -41.1255, 1.36 ) }
    dend_15 { pt3dadd( -22.6034, -138.64, -41.2711, 1.36 ) }
    dend_15 { pt3dadd( -23.698, -140.794, -42.2733, 0.23 ) }
    dend_15 { pt3dadd( -24.179, -141.842, -42.7315, 1.13 ) }
    dend_15 { pt3dadd( -24.2839, -142.106, -42.8292, 0.23 ) }
    dend_15 { pt3dadd( -24.8811, -143.656, -43.3303, 0.23 ) }
    dend_15 { pt3dadd( -25.1864, -144.431, -43.5633, 1.81 ) }
    dend_15 { pt3dadd( -26.1767, -146.821, -44.2511, 0.23 ) }
    dend_15 { pt3dadd( -26.7172, -148.084, -44.584, 1.59 ) }
    dend_15 { pt3dadd( -27.9991, -150.852, -45.4464, 0.23 ) }
    dend_15 { pt3dadd( -28.5116, -151.929, -45.8146, 2.04 ) }
    dend_15 { pt3dadd( -28.9761, -152.838, -46.153, 2.04 ) }
    dend_15 { pt3dadd( -29.7653, -154.463, -46.7529, 0.23 ) }
    dend_15 { pt3dadd( -30.3197, -155.731, -47.2, 0.91 ) }
    dend_15 { pt3dadd( -31.3571, -158.316, -48.0547, 0.23 ) }
    dend_15 { pt3dadd( -31.815, -159.623, -48.4469, 1.36 ) }
    dend_15 { pt3dadd( -32.0216, -160.316, -48.6266, 1.36 ) }
    dend_15 { pt3dadd( -32.9629, -163.865, -49.4078, 0.45 ) }
    dend_15 { pt3dadd( -33.4651, -165.803, -49.8109, 1.36 ) }
    dend_15 { pt3dadd( -33.6808, -166.617, -49.9755, 1.36 ) }
    dend_15 { pt3dadd( -34.7191, -170.518, -50.7191, 0.23 ) }
    dend_15 { pt3dadd( -35.245, -172.209, -51.0675, 2.04 ) }
    dend_15 { pt3dadd( -36.7397, -176.621, -52.0223, 0.23 ) }
    dend_15 { pt3dadd( -37.2827, -177.988, -52.3555, 0.23 ) }
    dend_15 { pt3dadd( -37.7634, -179.106, -52.6461, 1.59 ) }
    dend_15 { pt3dadd( -38.2739, -180.203, -52.9334, 1.59 ) }
    dend_15 { pt3dadd( -39.9095, -183.481, -53.8018, 0.23 ) }
    dend_15 { pt3dadd( -40.5491, -184.722, -54.1268, 1.81 ) }
    dend_15 { pt3dadd( -42.3926, -188.078, -54.9837, 0.23 ) }
    dend_15 { pt3dadd( -43.4186, -189.875, -55.4209, 1.81 ) }
    dend_15 { pt3dadd( -45.1164, -192.655, -56.1117, 0.23 ) }
    dend_15 { pt3dadd( -45.7888, -193.649, -56.3687, 1.81 ) }
    dend_15 { pt3dadd( -46.2323, -194.197, -56.5231, 1.81 ) }
    dend_15 { pt3dadd( -47.4518, -195.448, -56.9125, 0.23 ) }
    dend_15 { pt3dadd( -48.3749, -196.25, -57.1833, 0.91 ) }
    dend_15 { pt3dadd( -49.9782, -197.513, -57.6932, 0.23 ) }
    dend_15 { pt3dadd( -51.4839, -198.617, -58.2116, 1.13 ) }
    dend_15 { pt3dadd( -53.2708, -199.917, -58.8432, 0.23 ) }
    dend_15 { pt3dadd( -54.1972, -200.642, -59.2073, 1.36 ) }
    dend_15 { pt3dadd( -54.828, -201.184, -59.4778, 1.36 ) }
    dend_15 { pt3dadd( -57.3286, -203.463, -60.6189, 0.23 ) }
    dend_15 { pt3dadd( -57.6344, -203.755, -60.7707, 1.81 ) }
    dend_15 { pt3dadd( -58.2138, -204.355, -61.0645, 1.36 ) }
    dend_15 { pt3dadd( -60.7327, -207.189, -62.5291, 0.23 ) }
    dend_15 { pt3dadd( -61.7415, -208.369, -63.1733, 1.13 ) }
    dend_15 { pt3dadd( -61.8687, -208.524, -63.2592, 1.13 ) }
    dend_15 { pt3dadd( -63.4987, -210.641, -64.4125, 0.23 ) }
    dend_15 { pt3dadd( -64.7489, -212.297, -65.3073, 1.13 ) }
    dend_15 { pt3dadd( -66.5673, -214.811, -66.6201, 0.23 ) }
    dend_15 { pt3dadd( -67.4377, -216.049, -67.2616, 1.36 ) }
    dend_15 { pt3dadd( -68.4466, -217.522, -68.0121, 0.68 ) }
    dend_15 { pt3dadd( -69.1372, -218.533, -68.5109, 1.36 ) }
    dend_15 { pt3dadd( -69.6381, -219.256, -68.8469, 1.36 ) }
    dend_15 { pt3dadd( -70.9494, -221.071, -69.6491, 0.45 ) }
    dend_15 { pt3dadd( -71.906, -222.454, -70.1538, 0.91 ) }
    dend_15 { pt3dadd( -72.7322, -223.739, -70.5634, 0.23 ) }
    dend_15 { pt3dadd( -73.3385, -224.815, -70.8649, 1.59 ) }
    dend_15 { pt3dadd( -74.3803, -227.099, -71.3981, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_15 { pt3dadd( -74.8184, -228.341, -71.6339, 1.36 ) }
    dend_15 { pt3dadd( -75.4698, -230.869, -72.0042, 0.45 ) }
    dend_15 { pt3dadd( -75.727, -232.442, -72.1266, 0.91 ) }
    dend_15 { pt3dadd( -75.867, -233.95, -72.1881, 0.91 ) }
    dend_15 { pt3dadd( -75.9798, -236.273, -72.183, 0.23 ) }
    dend_15 { pt3dadd( -76.0118, -237.253, -72.1511, 1.13 ) }
    dend_15 { pt3dadd( -76.095, -238.422, -72.0761, 1.13 ) }
    dend_15 { pt3dadd( -76.3903, -240.723, -71.8871, 0.23 ) }
    dend_15 { pt3dadd( -76.7957, -242.705, -71.7257, 0.91 ) }
    dend_15 { pt3dadd( -77.1478, -243.95, -71.6043, 0.23 ) }
    dend_15 { pt3dadd( -77.7576, -245.696, -71.4156, 1.59 ) }
    dend_15 { pt3dadd( -78.9789, -248.582, -71.0766, 0.23 ) }
    dend_15 { pt3dadd( -79.2937, -249.24, -70.9976, 0.91 ) }
    dend_15 { pt3dadd( -80.1487, -250.837, -70.829, 0.23 ) }
    dend_15 { pt3dadd( -81.0151, -252.249, -70.6776, 1.36 ) }
    dend_15 { pt3dadd( -81.2168, -252.55, -70.6504, 1.36 ) }
    dend_15 { pt3dadd( -82.6893, -254.522, -70.4834, 0.45 ) }
    dend_15 { pt3dadd( -83.0466, -254.961, -70.4741, 1.36 ) }
    dend_15 { pt3dadd( -83.7348, -255.806, -70.4864, 1.36 ) }
    dend_15 { pt3dadd( -84.9027, -257.24, -70.5664, 0.45 ) }
    dend_15 { pt3dadd( -85.5347, -258.018, -70.6524, 0.45 ) }
    dend_15 { pt3dadd( -86.1273, -258.772, -70.7657, 1.13 ) }
    dend_15 { pt3dadd( -88.1782, -261.428, -71.2829, 0.23 ) }
    dend_15 { pt3dadd( -88.6098, -261.997, -71.3972, 1.36 ) }
    dend_15 { pt3dadd( -88.7738, -262.218, -71.4435, 1.36 ) }
    dend_15 { pt3dadd( -90.6901, -264.809, -72.0359, 0.45 ) }
    dend_15 { pt3dadd( -91.6424, -266.033, -72.3166, 1.13 ) }
    dend_15 { pt3dadd( -92.1879, -266.709, -72.4689, 1.13 ) }
    dend_15 { pt3dadd( -93.6267, -268.483, -72.8664, 0.23 ) }
    dend_15 { pt3dadd( -94.3952, -269.432, -73.0704, 0.68 ) }
    dend_15 { pt3dadd( -95.6859, -271.134, -73.3991, 0.91 ) }
    dend_15 { pt3dadd( -96.8546, -272.803, -73.6859, 0.23 ) }
    dend_15 { pt3dadd( -97.5933, -273.901, -73.8531, 1.59 ) }
    dend_15 { pt3dadd( -99.335, -276.643, -74.2348, 0.23 ) }
    dend_15 { pt3dadd( -99.9126, -277.592, -74.363, 0.91 ) }
    dend_15 { pt3dadd( -101.463, -280.376, -74.7256, 0.23 ) }
    dend_15 { pt3dadd( -101.849, -281.131, -74.8148, 1.13 ) }
    dend_15 { pt3dadd( -103.084, -283.631, -75.096, 0.23 ) }
    dend_15 { pt3dadd( -104.068, -285.596, -75.303, 0.23 ) }
    dend_15 { pt3dadd( -105.019, -287.42, -75.4671, 0.91 ) }
    dend_15 { pt3dadd( -106.454, -289.928, -75.6965, 0.23 ) }
    dend_15 { pt3dadd( -107.189, -290.981, -75.7979, 1.59 ) }
    dend_15 { pt3dadd( -108.351, -292.411, -75.9463, 0.23 ) }
    dend_15 { pt3dadd( -109.228, -293.277, -76.0662, 0.91 ) }
    dend_15 { pt3dadd( -110.361, -294.145, -76.2146, 0.23 ) }
    dend_15 { pt3dadd( -111.512, -294.849, -76.3709, 1.36 ) }
    dend_15 { pt3dadd( -114.603, -296.495, -76.837, 0.23 ) }
    dend_15 { pt3dadd( -115.596, -297.025, -76.9916, 0.91 ) }
    dend_15 { pt3dadd( -118.53, -298.691, -77.4638, 0.23 ) }
    dend_15 { pt3dadd( -120.363, -299.879, -77.7389, 1.81 ) }
    dend_15 { pt3dadd( -121.677, -300.875, -77.9369, 0.23 ) }
    dend_15 { pt3dadd( -123.08, -302.176, -78.1052, 0.68 ) }
    dend_15 { pt3dadd( -124.22, -303.419, -78.194, 0.23 ) }
    dend_15 { pt3dadd( -125.456, -304.905, -78.2246, 1.13 ) }
    dend_15 { pt3dadd( -127.086, -307.096, -78.1236, 0.23 ) }
    dend_15 { pt3dadd( -127.943, -308.312, -78.0032, 1.36 ) }
    dend_15 { pt3dadd( -129.29, -310.242, -77.7454, 0.23 ) }
    dend_15 { pt3dadd( -130.61, -312.003, -77.4689, 0.91 ) }
    dend_15 { pt3dadd( -132.103, -313.886, -77.1559, 0.23 ) }
    dend_15 { pt3dadd( -133.479, -315.569, -76.8478, 0.23 ) }
    dend_15 { pt3dadd( -134.881, -317.233, -76.5536, 0.91 ) }
    dend_15 { pt3dadd( -135.495, -317.952, -76.4347, 0.23 ) }
    dend_15 { pt3dadd( -136.225, -318.851, -76.3094, 0.91 ) }
    dend_15 { pt3dadd( -137.374, -320.396, -76.1035, 0.23 ) }
    dend_15 { pt3dadd( -138.106, -321.355, -75.9481, 0.91 ) }
    dend_15 { pt3dadd( -141.029, -324.867, -75.1906, 0.23 ) }
    dend_15 { pt3dadd( -142.278, -326.205, -74.782, 1.13 ) }
    dend_15 { pt3dadd( -144.039, -327.802, -74.1357, 0.45 ) }
    dend_15 { pt3dadd( -145.597, -328.964, -73.5177, 1.13 ) }
    dend_15 { pt3dadd( -147.645, -329.991, -72.6225, 0.23 ) }
    dend_15 { pt3dadd( -149.208, -330.37, -71.8347, 0.23 ) }
    dend_15 { pt3dadd( -150.988, -330.239, -70.9342, 0.91 ) }
    dend_15 { pt3dadd( -153.167, -329.697, -69.9127, 0.23 ) }
    dend_15 { pt3dadd( -154.318, -329.276, -69.4827, 0.23 ) }
    dend_15 { pt3dadd( -156.167, -328.491, -69.0145, 0.91 ) }
    dend_15 { pt3dadd( -157.993, -327.707, -68.8402, 0.23 ) }
    dend_15 { pt3dadd( -160.304, -326.702, -68.8178, 0.23 ) }
    dend_15 { pt3dadd( -160.778, -326.488, -68.8494, 0.68 ) }
    dend_15 { pt3dadd( -162.573, -325.71, -69.1002, 0.23 ) }
    dend_15 { pt3dadd( -163.559, -325.345, -69.3961, 0.23 ) }
    dend_15 { pt3dadd( -165.143, -324.913, -70.2303, 0.68 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -4.75632, -21.5515, -0.178197, 0.45 ) }
    dend_12 { pt3dadd( -6.99414, -24.4514, 0.449969, 0.45 ) }
    dend_12 { pt3dadd( -7.49758, -25.0708, 0.543693, 1.59 ) }
    dend_12 { pt3dadd( -8.48337, -26.2564, 0.675502, 1.59 ) }
    dend_12 { pt3dadd( -9.85588, -27.8797, 0.797877, 1.36 ) }
    dend_12 { pt3dadd( -10.894, -29.1133, 0.870372, 0.91 ) }
    dend_12 { pt3dadd( -12.1886, -30.6378, 0.949059, 0.91 ) }
    dend_12 { pt3dadd( -13.8733, -32.5343, 0.952618, 1.13 ) }
    dend_12 { pt3dadd( -16.616, -35.6535, 0.900737, 1.59 ) }
    dend_12 { pt3dadd( -18.0927, -37.318, 0.852552, 0.91 ) }
    dend_12 { pt3dadd( -18.8133, -38.0951, 0.826204, 0.23 ) }
    dend_12 { pt3dadd( -19.6141, -38.9505, 0.787812, 0.91 ) }
    dend_12 { pt3dadd( -20.8289, -40.1984, 0.734052, 2.04 ) }
    dend_12 { pt3dadd( -22.8809, -42.1065, 0.746505, 0.23 ) }
    dend_12 { pt3dadd( -23.8383, -42.9353, 0.791131, 1.36 ) }
    dend_12 { pt3dadd( -24.9821, -43.9114, 0.896616, 1.36 ) }
    dend_12 { pt3dadd( -26.5277, -45.2426, 1.10123, 0.45 ) }
    dend_12 { pt3dadd( -28.2461, -46.778, 1.39009, 1.13 ) }
    dend_12 { pt3dadd( -30.3115, -48.6584, 1.81085, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -31.0051, -49.3105, 1.96745, 1.81 ) }
    dend_12 { pt3dadd( -33.1048, -51.3169, 2.43958, 0.45 ) }
    dend_12 { pt3dadd( -34.3161, -52.438, 2.71049, 0.45 ) }
    dend_12 { pt3dadd( -35.7594, -53.7526, 3.04217, 1.81 ) }
    dend_12 { pt3dadd( -36.8964, -54.7803, 3.28315, 1.13 ) }
    dend_12 { pt3dadd( -40.0326, -57.5954, 3.82418, 0.23 ) }
    dend_12 { pt3dadd( -40.8116, -58.2665, 3.95672, 0.23 ) }
    dend_12 { pt3dadd( -42.8684, -59.8811, 4.28945, 0.91 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 8/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -4.75632, -21.5515, -0.178197, 0.91 ) }
    dend_7 { pt3dadd( -5.95751, -22.4582, -1.7582, 0.91 ) }
    dend_7 { pt3dadd( -7.61936, -23.7127, -3.94413, 0.68 ) }
    dend_7 { pt3dadd( -8.82048, -24.6195, -5.52404, 1.59 ) }
    dend_7 { pt3dadd( -10.1477, -25.6213, -7.26974, 0.45 ) }
    dend_7 { pt3dadd( -10.8952, -26.1856, -8.253, 0.45 ) }
    dend_7 { pt3dadd( -12.0459, -27.0542, -9.76654, 1.81 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 15/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.0993, -30.5831, 2.51504, 0.23 ) }
    dend_3 { pt3dadd( -2.57182, -32.6415, 3.10618, 0.23 ) }
    dend_3 { pt3dadd( -2.89839, -34.0441, 3.46121, 1.36 ) }
    dend_3 { pt3dadd( -3.27243, -35.6373, 3.80957, 1.36 ) }
    dend_3 { pt3dadd( -3.52413, -36.6993, 4.02033, 0.68 ) }
    dend_3 { pt3dadd( -3.77855, -37.7029, 4.22809, 1.36 ) }
    dend_3 { pt3dadd( -4.03839, -38.7363, 4.44087, 1.36 ) }
    dend_3 { pt3dadd( -4.39047, -40.1099, 4.69395, 1.36 ) }
    dend_3 { pt3dadd( -4.84162, -41.8978, 4.98578, 0.45 ) }
    dend_3 { pt3dadd( -5.37228, -43.9727, 5.29303, 1.81 ) }
    dend_3 { pt3dadd( -6.03865, -46.5571, 5.63228, 0.45 ) }
    dend_3 { pt3dadd( -6.36161, -47.7879, 5.8467, 0.45 ) }
    dend_3 { pt3dadd( -6.61833, -48.766, 6.02194, 1.81 ) }
    dend_3 { pt3dadd( -6.9324, -49.9937, 6.26295, 2.27 ) }
    dend_3 { pt3dadd( -7.39894, -51.8293, 6.64117, 1.36 ) }
    dend_3 { pt3dadd( -7.70981, -53.0866, 6.90469, 2.27 ) }
    dend_3 { pt3dadd( -8.32477, -55.7495, 7.47094, 2.27 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 32/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.0993, -30.5831, 2.51504, 0.45 ) }
    dend_2 { pt3dadd( -1.04685, -32.3378, 2.81328, 0.45 ) }
    dend_2 { pt3dadd( -0.122475, -33.9759, 3.10547, 0.45 ) }
    dend_2 { pt3dadd( 0.841297, -35.6204, 3.46143, 1.13 ) }
    dend_2 { pt3dadd( 2.12375, -37.8376, 3.98334, 0.23 ) }
    dend_2 { pt3dadd( 2.69598, -38.8236, 4.22031, 1.36 ) }
    dend_2 { pt3dadd( 3.45298, -40.1479, 4.52829, 1.36 ) }
    dend_2 { pt3dadd( 4.74818, -42.5154, 5.12859, 0.23 ) }
    dend_2 { pt3dadd( 5.8384, -44.605, 5.64344, 0.68 ) }
    dend_2 { pt3dadd( 6.9035, -46.7687, 6.11947, 0.23 ) }
    dend_2 { pt3dadd( 7.51128, -48.0644, 6.33143, 1.36 ) }
    dend_2 { pt3dadd( 8.66761, -50.5726, 6.64987, 0.45 ) }
    dend_2 { pt3dadd( 9.60513, -52.7309, 6.88498, 0.45 ) }
    dend_2 { pt3dadd( 9.91004, -53.5115, 6.95514, 1.36 ) }
    dend_2 { pt3dadd( 10.1057, -54.0971, 6.98996, 1.36 ) }
    dend_2 { pt3dadd( 10.6462, -56.0017, 7.09622, 0.23 ) }
    dend_2 { pt3dadd( 10.9604, -57.2003, 7.19479, 0.91 ) }
    dend_2 { pt3dadd( 11.34, -58.6599, 7.36076, 0.23 ) }
    dend_2 { pt3dadd( 11.5412, -59.3873, 7.47345, 0.91 ) }
    dend_2 { pt3dadd( 11.9577, -60.7868, 7.76084, 1.59 ) }
    dend_2 { pt3dadd( 12.9469, -63.9772, 8.52318, 0.23 ) }
    dend_2 { pt3dadd( 13.7001, -66.2369, 9.13197, 0.23 ) }
    dend_2 { pt3dadd( 14.0274, -67.1468, 9.37543, 1.81 ) }
    dend_2 { pt3dadd( 15.1665, -69.968, 10.0977, 0.68 ) }
    dend_2 { pt3dadd( 15.9152, -71.7068, 10.5078, 0.68 ) }
    dend_2 { pt3dadd( 16.4142, -72.7824, 10.7421, 1.36 ) }
    dend_2 { pt3dadd( 16.954, -73.873, 10.947, 1.81 ) }
    dend_2 { pt3dadd( 17.7933, -75.578, 11.2101, 0.23 ) }
    dend_2 { pt3dadd( 18.3834, -76.7564, 11.3471, 0.91 ) }
    dend_2 { pt3dadd( 19.0673, -78.0745, 11.4092, 0.23 ) }
    dend_2 { pt3dadd( 19.8921, -79.6842, 11.3814, 0.91 ) }
    dend_2 { pt3dadd( 20.4064, -80.7064, 11.3477, 0.91 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 64/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -19.5742, 10.4993, -3.27625, 0.23 ) }
    dend_43 { pt3dadd( -20.2501, 11.4985, -3.96779, 0.23 ) }
    dend_43 { pt3dadd( -20.9222, 12.5276, -4.64154, 1.13 ) }
    dend_43 { pt3dadd( -21.381, 13.2262, -5.07125, 0.68 ) }
    dend_43 { pt3dadd( -22.1577, 14.4021, -5.75198, 1.36 ) }
    dend_43 { pt3dadd( -22.5936, 15.0872, -6.1174, 1.36 ) }
    dend_43 { pt3dadd( -23.2529, 16.1788, -6.64243, 1.13 ) }
    dend_43 { pt3dadd( -23.8124, 17.1555, -7.05664, 0.91 ) }
    dend_43 { pt3dadd( -24.216, 17.9089, -7.31654, 0.91 ) }
    dend_43 { pt3dadd( -24.545, 18.5959, -7.49884, 0.91 ) }
    dend_43 { pt3dadd( -25.1458, 19.952, -7.78288, 0.23 ) }
    dend_43 { pt3dadd( -25.6251, 21.1878, -8.02744, 1.13 ) }
    dend_43 { pt3dadd( -25.8625, 21.8307, -8.14511, 1.59 ) }
    dend_43 { pt3dadd( -26.3712, 23.1993, -8.3727, 0.23 ) }
    dend_43 { pt3dadd( -26.9689, 24.7814, -8.63627, 1.36 ) }
    dend_43 { pt3dadd( -27.2157, 25.4251, -8.74671, 1.59 ) }
    dend_43 { pt3dadd( -27.891, 27.1393, -9.05176, 0.45 ) }
    dend_43 { pt3dadd( -28.2585, 28.068, -9.24176, 0.45 ) }
    dend_43 { pt3dadd( -28.7457, 29.3701, -9.53843, 1.59 ) }
    dend_43 { pt3dadd( -29.0522, 30.2503, -9.76089, 0.68 ) }
    dend_43 { pt3dadd( -29.4729, 31.6035, -10.1598, 0.23 ) }
    dend_43 { pt3dadd( -29.6172, 32.1942, -10.3604, 0.68 ) }
    dend_43 { pt3dadd( -29.8968, 33.787, -11.0269, 0.23 ) }
    dend_43 { pt3dadd( -30.0055, 35.0816, -11.6503, 2.04 ) }
    dend_43 { pt3dadd( -30.0013, 35.8039, -12.0553, 2.04 ) }
    dend_43 { pt3dadd( -29.8861, 37.0911, -12.8572, 0.23 ) }
    dend_43 { pt3dadd( -29.6876, 38.2054, -13.6256, 0.23 ) }
    dend_43 { pt3dadd( -29.4311, 39.2559, -14.4134, 0.68 ) }
    dend_43 { pt3dadd( -29.1004, 40.3728, -15.3052, 0.23 ) }
    dend_43 { pt3dadd( -28.8371, 41.2112, -15.9855, 1.59 ) }
    dend_43 { pt3dadd( -28.637, 41.8982, -16.5252, 1.59 ) }
    dend_43 { pt3dadd( -28.3917, 42.8316, -17.2177, 0.45 ) }
    dend_43 { pt3dadd( -28.1709, 43.9789, -17.9666, 0.45 ) }
    dend_43 { pt3dadd( -28.0832, 44.5746, -18.3202, 1.36 ) }
    dend_43 { pt3dadd( -27.9546, 45.6895, -18.9358, 1.59 ) }
    dend_43 { pt3dadd( -27.8089, 47.0479, -19.5882, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_43 { pt3dadd( -27.6711, 48.2744, -20.1299, 1.59 ) }
    dend_43 { pt3dadd( -27.2781, 51.1413, -21.3045, 0.23 ) }
    dend_43 { pt3dadd( -27.2059, 51.5489, -21.4625, 1.13 ) }
    dend_43 { pt3dadd( -26.7659, 53.6892, -22.249, 0.23 ) }
    dend_43 { pt3dadd( -26.4403, 55.1621, -22.7584, 1.81 ) }
    dend_43 { pt3dadd( -26.0552, 56.7376, -23.2564, 0.23 ) }
    dend_43 { pt3dadd( -25.8334, 57.6359, -23.5262, 0.91 ) }
    dend_43 { pt3dadd( -25.1828, 60.2128, -24.2854, 0.23 ) }
    dend_43 { pt3dadd( -24.8581, 61.621, -24.7066, 2.04 ) }
    dend_43 { pt3dadd( -24.7399, 62.1986, -24.8979, 2.72 ) }
    dend_43 { pt3dadd( -24.4183, 64.1707, -25.6372, 0.23 ) }
    dend_43 { pt3dadd( -24.1387, 66.4788, -26.5405, 0.23 ) }
    dend_43 { pt3dadd( -24.0932, 67.0505, -26.7769, 0.91 ) }
    dend_43 { pt3dadd( -24.0735, 67.6297, -27.0321, 1.36 ) }
    dend_43 { pt3dadd( -24.0785, 69.5356, -27.9325, 0.45 ) }
    dend_43 { pt3dadd( -24.1174, 71.1201, -28.6663, 1.13 ) }
    dend_43 { pt3dadd( -24.1604, 71.7618, -28.9503, 1.13 ) }
    dend_43 { pt3dadd( -24.2878, 73.1037, -29.4966, 0.23 ) }
    dend_43 { pt3dadd( -24.3402, 73.5964, -29.6825, 0.91 ) }
    dend_43 { pt3dadd( -24.5159, 75.1767, -30.2271, 0.23 ) }
    dend_43 { pt3dadd( -24.6561, 76.3434, -30.5754, 1.36 ) }
    dend_43 { pt3dadd( -24.8602, 78.1711, -31.1158, 0.45 ) }
    dend_43 { pt3dadd( -24.8998, 78.5443, -31.2295, 1.13 ) }
    dend_43 { pt3dadd( -25.1415, 80.5262, -31.8738, 0.23 ) }
    dend_43 { pt3dadd( -25.2131, 81.1084, -32.0754, 2.04 ) }
    dend_43 { pt3dadd( -25.4758, 83.2407, -32.8817, 0.23 ) }
    dend_43 { pt3dadd( -25.5745, 84.0235, -33.2064, 0.91 ) }
    dend_43 { pt3dadd( -25.6366, 84.5848, -33.4615, 0.91 ) }
    dend_43 { pt3dadd( -25.7657, 85.7355, -34.0212, 0.23 ) }
    dend_43 { pt3dadd( -25.9325, 87.1879, -34.8003, 2.04 ) }
    dend_43 { pt3dadd( -26.0687, 88.3017, -35.4466, 0.23 ) }
    dend_43 { pt3dadd( -26.136, 88.844, -35.7795, 0.91 ) }
    dend_43 { pt3dadd( -26.3898, 91.0751, -37.1702, 0.23 ) }
    dend_43 { pt3dadd( -26.4848, 92.0545, -37.7847, 1.81 ) }
    dend_43 { pt3dadd( -26.6505, 94.4718, -39.2943, 0.23 ) }
    dend_43 { pt3dadd( -26.7266, 95.8024, -40.1191, 1.59 ) }
    dend_43 { pt3dadd( -26.7409, 96.1544, -40.3291, 1.59 ) }
    dend_43 { pt3dadd( -26.802, 97.997, -41.3745, 0.68 ) }
    dend_43 { pt3dadd( -26.8185, 98.746, -41.7623, 1.36 ) }
    dend_43 { pt3dadd( -26.8436, 100.647, -42.6748, 0.45 ) }
    dend_43 { pt3dadd( -26.8686, 101.604, -43.0921, 2.04 ) }
    dend_43 { pt3dadd( -26.9008, 102.955, -43.6693, 0.23 ) }
    dend_43 { pt3dadd( -26.9363, 103.923, -44.0789, 0.91 ) }
    dend_43 { pt3dadd( -26.9493, 105.071, -44.5509, 0.23 ) }
    dend_43 { pt3dadd( -26.9343, 105.843, -44.8666, 1.13 ) }
    dend_43 { pt3dadd( -26.908, 106.437, -45.1167, 1.13 ) }
    dend_43 { pt3dadd( -26.7727, 108.493, -46.0363, 0.23 ) }
    dend_43 { pt3dadd( -26.6748, 109.624, -46.5594, 2.04 ) }
    dend_43 { pt3dadd( -26.4362, 111.844, -47.6229, 0.23 ) }
    dend_43 { pt3dadd( -26.3452, 112.779, -48.0743, 0.91 ) }
    dend_43 { pt3dadd( -26.1727, 114.74, -49.0121, 0.23 ) }
    dend_43 { pt3dadd( -26.096, 115.732, -49.4849, 1.81 ) }
    dend_43 { pt3dadd( -26.0689, 116.497, -49.841, 1.81 ) }
    dend_43 { pt3dadd( -26.1254, 118.97, -50.9773, 0.23 ) }
    dend_43 { pt3dadd( -26.2157, 119.839, -51.3677, 0.91 ) }
    dend_43 { pt3dadd( -26.3252, 120.593, -51.6912, 0.23 ) }
    dend_43 { pt3dadd( -26.5021, 121.746, -52.1472, 0.91 ) }
    dend_43 { pt3dadd( -26.5986, 122.475, -52.4345, 0.91 ) }
    dend_43 { pt3dadd( -26.711, 124.171, -53.1562, 0.23 ) }
    dend_43 { pt3dadd( -26.7078, 125.37, -53.7041, 1.81 ) }
    dend_43 { pt3dadd( -26.6503, 126.131, -54.0687, 1.81 ) }
    dend_43 { pt3dadd( -26.4531, 127.662, -54.8344, 0.23 ) }
    dend_43 { pt3dadd( -26.2248, 128.847, -55.4583, 1.59 ) }
    dend_43 { pt3dadd( -25.6519, 131.198, -56.7386, 0.23 ) }
    dend_43 { pt3dadd( -25.5029, 131.78, -57.0438, 0.91 ) }
    dend_43 { pt3dadd( -25.1831, 133.22, -57.7935, 0.23 ) }
    dend_43 { pt3dadd( -25.0299, 134.175, -58.2838, 1.59 ) }
    dend_43 { pt3dadd( -24.8515, 136.23, -59.3087, 0.23 ) }
    dend_43 { pt3dadd( -24.8486, 136.974, -59.6562, 0.91 ) }
    dend_43 { pt3dadd( -24.9985, 138.847, -60.4839, 0.23 ) }
    dend_43 { pt3dadd( -25.2134, 140.447, -61.1664, 1.59 ) }
    dend_43 { pt3dadd( -25.4739, 141.799, -61.7421, 0.45 ) }
    dend_43 { pt3dadd( -25.5705, 142.198, -61.9173, 0.91 ) }
    dend_43 { pt3dadd( -25.872, 143.196, -62.3712, 0.23 ) }
    dend_43 { pt3dadd( -26.1987, 144.204, -62.8705, 0.91 ) }
    dend_43 { pt3dadd( -26.6634, 145.622, -63.6311, 0.23 ) }
    dend_43 { pt3dadd( -26.8302, 146.091, -63.9008, 1.13 ) }
    dend_43 { pt3dadd( -27.1837, 147.014, -64.4756, 0.23 ) }
    dend_43 { pt3dadd( -27.35, 147.427, -64.7504, 0.91 ) }
    dend_43 { pt3dadd( -27.6351, 148.119, -65.2557, 0.23 ) }
    dend_43 { pt3dadd( -28.0222, 149.062, -65.9628, 2.04 ) }
    dend_43 { pt3dadd( -28.7069, 150.582, -67.1159, 0.23 ) }
    dend_43 { pt3dadd( -29.175, 151.577, -67.8435, 1.13 ) }
    dend_43 { pt3dadd( -29.7015, 152.671, -68.6177, 0.23 ) }
    dend_43 { pt3dadd( -30.2927, 153.861, -69.4324, 1.13 ) }
    dend_43 { pt3dadd( -30.7111, 154.651, -69.9485, 1.13 ) }
    dend_43 { pt3dadd( -31.5724, 156.245, -70.9104, 0.23 ) }
    dend_43 { pt3dadd( -31.7834, 156.667, -71.1345, 0.23 ) }
    dend_43 { pt3dadd( -32.3167, 157.759, -71.6846, 1.59 ) }
    dend_43 { pt3dadd( -32.9375, 159.062, -72.2798, 0.23 ) }
    dend_43 { pt3dadd( -33.407, 160.07, -72.6931, 0.23 ) }
    dend_43 { pt3dadd( -33.8884, 161.13, -73.1195, 1.59 ) }
    dend_43 { pt3dadd( -34.7429, 163.142, -73.8786, 0.23 ) }
    dend_43 { pt3dadd( -34.8408, 163.368, -73.9618, 0.91 ) }
    dend_43 { pt3dadd( -35.1861, 164.209, -74.2669, 0.23 ) }
    dend_43 { pt3dadd( -35.653, 165.437, -74.7143, 0.23 ) }
    dend_43 { pt3dadd( -36.0772, 166.62, -75.1725, 0.91 ) }
    dend_43 { pt3dadd( -36.6543, 168.235, -75.8246, 0.23 ) }
    dend_43 { pt3dadd( -37.0979, 169.542, -76.3626, 2.04 ) }
    dend_43 { pt3dadd( -37.8408, 171.957, -77.3719, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_43 { pt3dadd( -38.2054, 173.257, -77.9589, 1.13 ) }
    dend_43 { pt3dadd( -38.5489, 174.641, -78.6202, 0.23 ) }
    dend_43 { pt3dadd( -38.7231, 175.415, -79.0035, 0.91 ) }
    dend_43 { pt3dadd( -38.9015, 176.314, -79.4692, 0.23 ) }
    dend_43 { pt3dadd( -39.1278, 177.607, -80.1589, 2.04 ) }
    dend_43 { pt3dadd( -39.3853, 179.092, -80.919, 0.23 ) }
    dend_43 { pt3dadd( -39.5094, 179.815, -81.2852, 0.91 ) }
    dend_43 { pt3dadd( -39.5691, 180.165, -81.4494, 0.23 ) }
    dend_43 { pt3dadd( -39.7475, 181.263, -81.9777, 0.91 ) }
    dend_43 { pt3dadd( -39.9394, 182.414, -82.5345, 0.23 ) }
    dend_43 { pt3dadd( -40.037, 183.14, -82.8607, 1.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 11/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -19.5742, 10.4993, -3.27625, 0.45 ) }
    dend_40 { pt3dadd( -20.9777, 10.0792, -3.48802, 0.45 ) }
    dend_40 { pt3dadd( -21.9713, 9.72115, -3.60067, 0.45 ) }
    dend_40 { pt3dadd( -23.48, 9.11488, -3.67952, 0.91 ) }
    dend_40 { pt3dadd( -25.074, 8.39049, -3.74297, 0.68 ) }
    dend_40 { pt3dadd( -26.1693, 7.90011, -3.79568, 0.91 ) }
    dend_40 { pt3dadd( -27.0056, 7.5365, -3.83827, 1.81 ) }
    dend_40 { pt3dadd( -28.9223, 6.72506, -3.93721, 0.45 ) }
    dend_40 { pt3dadd( -30.0635, 6.25887, -3.97154, 1.13 ) }
    dend_40 { pt3dadd( -31.6802, 5.65573, -3.98819, 0.45 ) }
    dend_40 { pt3dadd( -32.9212, 5.22845, -4.00035, 1.13 ) }
    dend_40 { pt3dadd( -33.5581, 5.0376, -4.015, 1.59 ) }
    dend_40 { pt3dadd( -34.5236, 4.80852, -4.05538, 0.45 ) }
    dend_40 { pt3dadd( -35.6767, 4.57986, -4.13895, 0.45 ) }
    dend_40 { pt3dadd( -36.6659, 4.38202, -4.22411, 0.91 ) }
    dend_40 { pt3dadd( -37.5584, 4.14913, -4.28085, 1.81 ) }
    dend_40 { pt3dadd( -37.7074, 4.08833, -4.29097, 1.81 ) }
    dend_40 { pt3dadd( -38.9982, 3.36474, -4.41205, 0.23 ) }
    dend_40 { pt3dadd( -39.9391, 2.73833, -4.51701, 0.91 ) }
    dend_40 { pt3dadd( -40.3749, 2.41654, -4.56791, 0.91 ) }
    dend_40 { pt3dadd( -41.2979, 1.70473, -4.67287, 0.23 ) }
    dend_40 { pt3dadd( -42.2729, 0.94765, -4.76805, 1.81 ) }
    dend_40 { pt3dadd( -44.2775, -0.606857, -4.94615, 0.23 ) }
    dend_40 { pt3dadd( -44.8433, -1.04199, -4.98932, 1.13 ) }
    dend_40 { pt3dadd( -45.4797, -1.50652, -5.01931, 2.04 ) }
    dend_40 { pt3dadd( -46.9152, -2.53551, -5.07314, 0.23 ) }
    dend_40 { pt3dadd( -47.6927, -3.06744, -5.0896, 0.23 ) }
    dend_40 { pt3dadd( -48.3628, -3.52312, -5.09287, 0.91 ) }
    dend_40 { pt3dadd( -49.5577, -4.34926, -5.08042, 0.23 ) }
    dend_40 { pt3dadd( -50.5757, -5.07871, -5.08623, 1.81 ) }
    dend_40 { pt3dadd( -52.2222, -6.31717, -5.11401, 0.23 ) }
    dend_40 { pt3dadd( -52.6498, -6.66012, -5.12522, 0.23 ) }
    dend_40 { pt3dadd( -53.5651, -7.42052, -5.15978, 1.13 ) }
    dend_40 { pt3dadd( -54.3621, -8.1201, -5.19999, 1.59 ) }
    dend_40 { pt3dadd( -55.2102, -8.91143, -5.24613, 0.23 ) }
    dend_40 { pt3dadd( -55.9337, -9.59324, -5.27685, 0.91 ) }
    dend_40 { pt3dadd( -57.0451, -10.5853, -5.31833, 0.23 ) }
    dend_40 { pt3dadd( -57.6419, -11.105, -5.33886, 1.59 ) }
    dend_40 { pt3dadd( -59.3371, -12.5193, -5.38906, 0.23 ) }
    dend_40 { pt3dadd( -60.3678, -13.3522, -5.41008, 0.23 ) }
    dend_40 { pt3dadd( -61.851, -14.5126, -5.42361, 1.81 ) }
    dend_40 { pt3dadd( -64.8614, -16.7743, -5.45599, 0.23 ) }
    dend_40 { pt3dadd( -65.702, -17.4068, -5.45625, 1.59 ) }
    dend_40 { pt3dadd( -66.2434, -17.8079, -5.45291, 1.59 ) }
    dend_40 { pt3dadd( -67.6635, -18.8228, -5.42991, 0.23 ) }
    dend_40 { pt3dadd( -68.2095, -19.2194, -5.41856, 0.23 ) }
    dend_40 { pt3dadd( -68.9694, -19.779, -5.40674, 1.36 ) }
    dend_40 { pt3dadd( -70.9624, -21.1734, -5.36071, 0.23 ) }
    dend_40 { pt3dadd( -71.9312, -21.8097, -5.34819, 1.59 ) }
    dend_40 { pt3dadd( -72.2156, -21.9806, -5.34398, 1.59 ) }
    dend_40 { pt3dadd( -73.8498, -22.8605, -5.32406, 0.23 ) }
    dend_40 { pt3dadd( -74.691, -23.2952, -5.31339, 0.23 ) }
    dend_40 { pt3dadd( -75.9064, -23.8924, -5.30092, 1.81 ) }
    dend_40 { pt3dadd( -76.3573, -24.1072, -5.30078, 1.81 ) }
    dend_40 { pt3dadd( -79.2062, -25.5427, -5.3122, 0.23 ) }
    dend_40 { pt3dadd( -80.4082, -26.1508, -5.31986, 1.13 ) }
    dend_40 { pt3dadd( -81.2296, -26.5659, -5.33097, 0.45 ) }
    dend_40 { pt3dadd( -82.3234, -27.1585, -5.3471, 1.81 ) }
    dend_40 { pt3dadd( -83.8293, -28.062, -5.40306, 0.23 ) }
    dend_40 { pt3dadd( -84.4176, -28.44, -5.44604, 0.91 ) }
    dend_40 { pt3dadd( -85.1148, -28.9052, -5.52548, 0.91 ) }
    dend_40 { pt3dadd( -85.808, -29.4011, -5.62183, 0.23 ) }
    dend_40 { pt3dadd( -86.752, -30.1242, -5.72855, 0.91 ) }
    dend_40 { pt3dadd( -88.1982, -31.3646, -5.84351, 0.23 ) }
    dend_40 { pt3dadd( -89.1623, -32.2935, -5.84933, 0.91 ) }
    dend_40 { pt3dadd( -89.5021, -32.6716, -5.84248, 0.91 ) }
    dend_40 { pt3dadd( -90.4129, -33.797, -5.74426, 0.23 ) }
    dend_40 { pt3dadd( -91.2117, -34.8504, -5.58837, 1.81 ) }
    dend_40 { pt3dadd( -91.601, -35.3466, -5.49296, 1.81 ) }
    dend_40 { pt3dadd( -93.0242, -37.1124, -5.11031, 0.23 ) }
    dend_40 { pt3dadd( -94.3815, -38.6475, -4.76636, 1.13 ) }
    dend_40 { pt3dadd( -95.8645, -40.1568, -4.43674, 0.23 ) }
    dend_40 { pt3dadd( -96.8002, -40.9999, -4.27137, 2.04 ) }
    dend_40 { pt3dadd( -99.262, -42.9981, -3.95727, 0.23 ) }
    dend_40 { pt3dadd( -100.052, -43.5647, -3.87249, 1.59 ) }
    dend_40 { pt3dadd( -102.428, -45.061, -3.70391, 0.23 ) }
    dend_40 { pt3dadd( -103.292, -45.5686, -3.67684, 0.91 ) }
    dend_40 { pt3dadd( -104.519, -46.297, -3.736, 0.45 ) }
    dend_40 { pt3dadd( -105.248, -46.745, -3.80175, 0.23 ) }
    dend_40 { pt3dadd( -106.1, -47.3132, -3.91191, 1.59 ) }
    dend_40 { pt3dadd( -107.669, -48.48, -4.13029, 0.23 ) }
    dend_40 { pt3dadd( -108.942, -49.5776, -4.35778, 1.59 ) }
    dend_40 { pt3dadd( -110.037, -50.5924, -4.54697, 0.68 ) }
    dend_40 { pt3dadd( -110.691, -51.2335, -4.64909, 1.36 ) }
    dend_40 { pt3dadd( -111.157, -51.7049, -4.7161, 1.36 ) }
    dend_40 { pt3dadd( -112.115, -52.6688, -4.82828, 0.23 ) }
    dend_40 { pt3dadd( -112.912, -53.4322, -4.89671, 0.23 ) }
    dend_40 { pt3dadd( -114.049, -54.389, -4.96972, 1.59 ) }
    dend_40 { pt3dadd( -114.406, -54.672, -4.98635, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_40 { pt3dadd( -115.044, -55.1492, -5.02039, 0.23 ) }
    dend_40 { pt3dadd( -115.447, -55.4496, -5.04598, 0.91 ) }
    dend_40 { pt3dadd( -116.403, -56.1705, -5.11683, 0.23 ) }
    dend_40 { pt3dadd( -117.074, -56.7226, -5.17004, 0.23 ) }
    dend_40 { pt3dadd( -117.682, -57.2625, -5.22681, 1.13 ) }
    dend_40 { pt3dadd( -118.05, -57.6082, -5.25677, 1.13 ) }
    dend_40 { pt3dadd( -119.727, -59.2453, -5.37157, 0.23 ) }
    dend_40 { pt3dadd( -120.616, -60.1063, -5.41371, 1.59 ) }
    dend_40 { pt3dadd( -122.326, -61.7009, -5.45029, 0.23 ) }
    dend_40 { pt3dadd( -122.935, -62.243, -5.45567, 0.68 ) }
    dend_40 { pt3dadd( -124.186, -63.2839, -5.44413, 0.23 ) }
    dend_40 { pt3dadd( -124.619, -63.6203, -5.42977, 0.23 ) }
    dend_40 { pt3dadd( -125.786, -64.3937, -5.35124, 0.91 ) }
    dend_40 { pt3dadd( -126.741, -64.9061, -5.28672, 0.23 ) }
    dend_40 { pt3dadd( -127.699, -65.2668, -5.23255, 1.13 ) }
    dend_40 { pt3dadd( -128.697, -65.5477, -5.19623, 0.23 ) }
    dend_40 { pt3dadd( -129.222, -65.6616, -5.19505, 0.91 ) }
    dend_40 { pt3dadd( -130.032, -65.8121, -5.21105, 0.23 ) }
    dend_40 { pt3dadd( -131.422, -66.0122, -5.2671, 1.13 ) }
    dend_40 { pt3dadd( -133.568, -66.2093, -5.38787, 0.23 ) }
    dend_40 { pt3dadd( -134.387, -66.2547, -5.44771, 0.91 ) }
    dend_40 { pt3dadd( -135.721, -66.2341, -5.56224, 0.23 ) }
    dend_40 { pt3dadd( -136.105, -66.2215, -5.59743, 0.68 ) }
    dend_40 { pt3dadd( -136.796, -66.1866, -5.66352, 0.23 ) }
    dend_40 { pt3dadd( -137.436, -66.126, -5.72032, 0.91 ) }
    dend_40 { pt3dadd( -137.86, -66.0382, -5.77813, 0.23 ) }
    dend_40 { pt3dadd( -139.085, -65.6513, -5.94813, 1.13 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 27/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 107.771, 275.107, -91.5353, 0.23 ) }
    dend_34 { pt3dadd( 108.409, 277.645, -92.2662, 0.23 ) }
    dend_34 { pt3dadd( 108.775, 279.305, -92.7505, 0.23 ) }
    dend_34 { pt3dadd( 109.234, 281.734, -93.4367, 1.13 ) }
    dend_34 { pt3dadd( 109.509, 283.676, -94.0181, 0.23 ) }
    dend_34 { pt3dadd( 109.698, 285.29, -94.5037, 0.91 ) }
    dend_34 { pt3dadd( 110.021, 287.683, -95.2269, 0.23 ) }
    dend_34 { pt3dadd( 110.283, 289.506, -95.7831, 0.23 ) }
    dend_34 { pt3dadd( 110.697, 292.036, -96.565, 1.59 ) }
    dend_34 { pt3dadd( 111.129, 294.537, -97.3438, 0.68 ) }
    dend_34 { pt3dadd( 111.413, 295.985, -97.7946, 1.13 ) }
    dend_34 { pt3dadd( 111.958, 298.448, -98.543, 0.23 ) }
    dend_34 { pt3dadd( 112.422, 300.394, -99.177, 0.91 ) }
    dend_34 { pt3dadd( 112.962, 302.664, -99.9907, 0.23 ) }
    dend_34 { pt3dadd( 113.343, 304.404, -100.635, 0.91 ) }
    dend_34 { pt3dadd( 113.466, 305.06, -100.87, 0.23 ) }
    dend_34 { pt3dadd( 113.618, 306.5, -101.407, 1.13 ) }
    dend_34 { pt3dadd( 113.677, 309.886, -102.712, 0.23 ) }
    dend_34 { pt3dadd( 113.668, 310.445, -102.925, 0.91 ) }
    dend_34 { pt3dadd( 113.641, 312.601, -103.69, 0.23 ) }
    dend_34 { pt3dadd( 113.63, 314.073, -104.196, 1.81 ) }
    dend_34 { pt3dadd( 113.575, 317.568, -105.323, 0.23 ) }
    dend_34 { pt3dadd( 113.524, 320.763, -106.306, 0.91 ) }
    dend_34 { pt3dadd( 113.48, 322.62, -106.828, 0.23 ) }
    dend_34 { pt3dadd( 113.405, 325.782, -107.762, 0.68 ) }
    dend_34 { pt3dadd( 113.399, 326.468, -107.956, 0.23 ) }
    dend_34 { pt3dadd( 113.441, 327.72, -108.276, 0.91 ) }
    dend_34 { pt3dadd( 113.702, 330.408, -108.857, 0.23 ) }
    dend_34 { pt3dadd( 114.065, 333.459, -109.472, 1.13 ) }
    dend_34 { pt3dadd( 114.513, 336.783, -110.148, 0.23 ) }
    dend_34 { pt3dadd( 114.853, 338.903, -110.568, 0.23 ) }
    dend_34 { pt3dadd( 115.432, 341.624, -111.09, 0.23 ) }
    dend_34 { pt3dadd( 116.049, 343.753, -111.467, 0.23 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 60/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 107.771, 275.107, -91.5353, 0.23 ) }
    dend_33 { pt3dadd( 107.56, 276.104, -92.0595, 0.23 ) }
    dend_33 { pt3dadd( 107.461, 276.672, -92.3394, 1.13 ) }
    dend_33 { pt3dadd( 107.081, 278.61, -93.3048, 0.23 ) }
    dend_33 { pt3dadd( 106.757, 280.262, -94.1279, 0.91 ) }
    dend_33 { pt3dadd( 106.579, 281.17, -94.58, 0.23 ) }
    dend_33 { pt3dadd( 106.436, 281.899, -94.9432, 1.13 ) }
    dend_33 { pt3dadd( 106.061, 283.738, -95.8489, 0.23 ) }
    dend_33 { pt3dadd( 105.831, 284.929, -96.4221, 0.23 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 69/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -20.567, 16.6716, 11.3667, 0.68 ) }
    dend_26 { pt3dadd( -22.1247, 17.1458, 11.8171, 0.68 ) }
    dend_26 { pt3dadd( -23.5291, 17.5344, 12.2567, 0.68 ) }
    dend_26 { pt3dadd( -25.2128, 18.021, 12.7596, 0.68 ) }
    dend_26 { pt3dadd( -25.7651, 18.1624, 12.9352, 0.68 ) }
    dend_26 { pt3dadd( -26.8013, 18.4276, 13.2647, 1.13 ) }
    dend_26 { pt3dadd( -28.1885, 18.7827, 13.7058, 0.91 ) }
    dend_26 { pt3dadd( -29.2843, 19.0744, 14.0852, 0.23 ) }
    dend_26 { pt3dadd( -30.8801, 19.4836, 14.6546, 0.23 ) }
    dend_26 { pt3dadd( -32.3354, 19.7905, 15.1809, 0.23 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 79/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -20.567, 16.6716, 11.3667, 0.45 ) }
    dend_25 { pt3dadd( -20.2176, 18.1122, 11.6927, 0.45 ) }
    dend_25 { pt3dadd( -19.8692, 19.5492, 12.0178, 0.68 ) }
    dend_25 { pt3dadd( -19.5555, 20.8428, 12.3104, 0.23 ) }
    dend_25 { pt3dadd( -19.4201, 21.401, 12.4367, 0.23 ) }
    dend_25 { pt3dadd( -19.1708, 22.4291, 12.6693, 0.91 ) }
    dend_25 { pt3dadd( -18.8109, 23.9132, 13.0051, 0.23 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 86/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -12.0459, -27.0542, -9.76654, 0.23 ) }
    dend_11 { pt3dadd( -15.1658, -28.4675, -9.22699, 0.23 ) }
    dend_11 { pt3dadd( -16.8353, -29.3048, -8.98077, 0.23 ) }
    dend_11 { pt3dadd( -18.4073, -30.1634, -8.83594, 0.91 ) }
    dend_11 { pt3dadd( -21.1371, -31.7397, -8.66359, 0.45 ) }
    dend_11 { pt3dadd( -23.2807, -33.0207, -8.56473, 1.13 ) }
    dend_11 { pt3dadd( -24.5739, -33.8193, -8.51892, 0.23 ) }
    dend_11 { pt3dadd( -25.6114, -34.5207, -8.54456, 0.68 ) }
    dend_11 { pt3dadd( -28.1889, -36.3051, -8.68208, 0.23 ) }
    dend_11 { pt3dadd( -30.0433, -37.6083, -8.86088, 1.13 ) }
    dend_11 { pt3dadd( -32.7677, -39.4878, -9.12724, 0.23 ) }
    dend_11 { pt3dadd( -33.6242, -40.053, -9.22596, 0.91 ) }
    dend_11 { pt3dadd( -35.0794, -40.9925, -9.43026, 0.23 ) }
    dend_11 { pt3dadd( -36.9937, -42.1616, -9.78726, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_11 { pt3dadd( -39.3395, -43.5119, -10.2796, 0.23 ) }
    dend_11 { pt3dadd( -40.4453, -44.1017, -10.5348, 0.68 ) }
    dend_11 { pt3dadd( -41.9911, -44.9022, -10.8966, 0.23 ) }
    dend_11 { pt3dadd( -43.3293, -45.5539, -11.1991, 1.59 ) }
    dend_11 { pt3dadd( -48.6743, -48.0537, -12.3387, 0.23 ) }
    dend_11 { pt3dadd( -50.1611, -48.7161, -12.6046, 1.13 ) }
    dend_11 { pt3dadd( -53.6075, -50.2508, -13.0405, 0.23 ) }
    dend_11 { pt3dadd( -55.1882, -51.0059, -13.1787, 0.91 ) }
    dend_11 { pt3dadd( -58.8763, -52.8016, -13.336, 0.23 ) }
    dend_11 { pt3dadd( -60.0838, -53.3835, -13.3298, 1.13 ) }
    dend_11 { pt3dadd( -62.9571, -54.7813, -13.2337, 0.23 ) }
    dend_11 { pt3dadd( -67.0841, -56.8276, -13.0835, 1.59 ) }
    dend_11 { pt3dadd( -71.5722, -58.999, -12.8714, 0.23 ) }
    dend_11 { pt3dadd( -73.6158, -59.9384, -12.7706, 0.45 ) }
    dend_11 { pt3dadd( -74.8352, -60.4905, -12.7268, 0.23 ) }
    dend_11 { pt3dadd( -76.719, -61.2902, -12.7261, 0.23 ) }
    dend_11 { pt3dadd( -79.0505, -62.2197, -12.9417, 0.68 ) }
    dend_11 { pt3dadd( -81.7224, -63.1481, -13.4084, 0.23 ) }
    dend_11 { pt3dadd( -82.3937, -63.3719, -13.6277, 0.91 ) }
    dend_11 { pt3dadd( -84.2221, -64.0204, -14.3244, 0.23 ) }
    dend_11 { pt3dadd( -84.7701, -64.2289, -14.5539, 1.13 ) }
    dend_11 { pt3dadd( -88.0485, -65.4951, -16.0567, 0.23 ) }
    dend_11 { pt3dadd( -89.5947, -66.1417, -16.9594, 0.91 ) }
    dend_11 { pt3dadd( -92.7173, -67.736, -19.1959, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 24/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.0459, -27.0542, -9.76654, 0.91 ) }
    dend_8 { pt3dadd( -12.6046, -28.2352, -10.1689, 0.91 ) }
    dend_8 { pt3dadd( -13.7462, -30.9262, -11.0103, 0.23 ) }
    dend_8 { pt3dadd( -14.1907, -32.1454, -11.3998, 0.91 ) }
    dend_8 { pt3dadd( -15.0568, -34.8629, -12.3429, 0.23 ) }
    dend_8 { pt3dadd( -15.3856, -36.0152, -12.7999, 1.81 ) }
    dend_8 { pt3dadd( -16.0205, -38.3764, -13.7798, 0.91 ) }
    dend_8 { pt3dadd( -16.6263, -40.9562, -14.8917, 2.27 ) }
    dend_8 { pt3dadd( -17.1391, -43.1546, -15.8252, 0.23 ) }
    dend_8 { pt3dadd( -17.5993, -44.9243, -16.6745, 0.91 ) }
    dend_8 { pt3dadd( -18.3271, -47.2721, -17.878, 0.23 ) }
    dend_8 { pt3dadd( -18.7771, -48.4002, -18.4701, 1.81 ) }
    dend_8 { pt3dadd( -19.883, -50.5204, -19.5403, 0.23 ) }
    dend_8 { pt3dadd( -20.623, -51.7085, -20.0389, 0.23 ) }
    dend_8 { pt3dadd( -21.6806, -53.2455, -20.5179, 1.81 ) }
    dend_8 { pt3dadd( -23.1262, -55.3083, -20.9185, 0.23 ) }
    dend_8 { pt3dadd( -23.9218, -56.4421, -21.0579, 2.04 ) }
    dend_8 { pt3dadd( -25.1596, -58.2105, -21.2032, 1.59 ) }
    dend_8 { pt3dadd( -26.635, -60.3369, -21.3157, 0.23 ) }
    dend_8 { pt3dadd( -28.0, -62.3099, -21.3966, 1.81 ) }
    dend_8 { pt3dadd( -30.2807, -65.3885, -21.4478, 0.23 ) }
    dend_8 { pt3dadd( -31.4252, -66.7939, -21.4773, 1.81 ) }
    dend_8 { pt3dadd( -34.119, -69.8363, -21.5626, 0.23 ) }
    dend_8 { pt3dadd( -35.3986, -71.1074, -21.603, 1.13 ) }
    dend_8 { pt3dadd( -36.3272, -71.9138, -21.6423, 1.81 ) }
    dend_8 { pt3dadd( -37.8593, -73.1561, -21.7524, 0.23 ) }
    dend_8 { pt3dadd( -39.1411, -74.2238, -21.9119, 0.91 ) }
    dend_8 { pt3dadd( -41.4034, -76.2277, -22.2687, 0.23 ) }
    dend_8 { pt3dadd( -42.5703, -77.3212, -22.526, 1.81 ) }
    dend_8 { pt3dadd( -44.7288, -79.451, -23.0582, 0.23 ) }
    dend_8 { pt3dadd( -46.0174, -80.768, -23.4373, 1.59 ) }
    dend_8 { pt3dadd( -48.519, -83.3762, -24.2406, 0.45 ) }
    dend_8 { pt3dadd( -49.2977, -84.2123, -24.4944, 1.13 ) }
    dend_8 { pt3dadd( -50.9678, -85.9959, -25.0249, 0.23 ) }
    dend_8 { pt3dadd( -51.8476, -87.0112, -25.3177, 1.81 ) }
    dend_8 { pt3dadd( -54.1371, -89.8739, -26.1292, 0.23 ) }
    dend_8 { pt3dadd( -54.7976, -90.8127, -26.3671, 0.91 ) }
    dend_8 { pt3dadd( -56.2287, -93.3081, -26.8984, 0.23 ) }
    dend_8 { pt3dadd( -56.9227, -94.6785, -27.1728, 0.91 ) }
    dend_8 { pt3dadd( -58.0661, -97.4299, -27.6403, 0.23 ) }
    dend_8 { pt3dadd( -58.523, -98.8283, -27.8624, 1.81 ) }
    dend_8 { pt3dadd( -58.9955, -101.116, -28.1425, 0.23 ) }
    dend_8 { pt3dadd( -59.3355, -103.315, -28.4396, 1.81 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 67/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -8.32477, -55.7495, 7.47094, 1.36 ) }
    dend_5 { pt3dadd( -8.97179, -57.1183, 7.54285, 1.36 ) }
    dend_5 { pt3dadd( -9.56668, -58.4559, 7.67068, 1.36 ) }
    dend_5 { pt3dadd( -10.4625, -60.7037, 7.92132, 0.68 ) }
    dend_5 { pt3dadd( -10.8398, -61.6505, 8.02689, 0.91 ) }
    dend_5 { pt3dadd( -11.5133, -63.3406, 8.21534, 0.45 ) }
    dend_5 { pt3dadd( -11.8347, -64.147, 8.30526, 0.91 ) }
    dend_5 { pt3dadd( -12.5562, -66.1795, 8.61385, 0.23 ) }
    dend_5 { pt3dadd( -13.0297, -67.4331, 8.83767, 0.23 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 76/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -8.32477, -55.7495, 7.47094, 0.68 ) }
    dend_4 { pt3dadd( -7.15227, -58.7068, 7.82369, 0.68 ) }
    dend_4 { pt3dadd( -6.15752, -61.2232, 7.98627, 0.68 ) }
    dend_4 { pt3dadd( -5.2004, -63.5765, 8.08169, 0.23 ) }
    dend_4 { pt3dadd( -4.49766, -65.3314, 8.19268, 0.91 ) }
    dend_4 { pt3dadd( -4.21556, -66.0799, 8.24547, 0.91 ) }
    dend_4 { pt3dadd( -3.08422, -69.2411, 8.50383, 0.23 ) }
    dend_4 { pt3dadd( -2.32812, -71.4469, 8.75924, 0.68 ) }
    dend_4 { pt3dadd( -1.45317, -74.213, 9.09499, 0.23 ) }
    dend_4 { pt3dadd( -0.268715, -77.8956, 9.55332, 0.23 ) }
    dend_4 { pt3dadd( 0.119181, -79.175, 9.72317, 0.23 ) }
    dend_4 { pt3dadd( 0.667207, -81.0951, 10.0218, 0.91 ) }
    dend_4 { pt3dadd( 1.09219, -82.7348, 10.3644, 0.23 ) }
    dend_4 { pt3dadd( 1.5773, -84.908, 10.9932, 1.13 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 90/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -40.037, 183.14, -82.8607, 0.23 ) }
    dend_45 { pt3dadd( -40.3412, 184.297, -83.3603, 0.23 ) }
    dend_45 { pt3dadd( -40.5233, 185.014, -83.6501, 0.23 ) }
    dend_45 { pt3dadd( -40.7096, 185.778, -83.9317, 1.59 ) }
    dend_45 { pt3dadd( -41.0509, 187.201, -84.4007, 0.23 ) }
    dend_45 { pt3dadd( -41.2342, 187.929, -84.6253, 1.59 ) }
    dend_45 { pt3dadd( -41.568, 189.263, -85.0185, 0.45 ) }
    dend_45 { pt3dadd( -41.7474, 189.966, -85.1977, 0.45 ) }
    dend_45 { pt3dadd( -41.9319, 190.716, -85.3685, 1.59 ) }
    dend_45 { pt3dadd( -42.2461, 192.062, -85.6494, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_45 { pt3dadd( -42.4073, 192.793, -85.7982, 0.23 ) }
    dend_45 { pt3dadd( -42.5788, 193.659, -85.9747, 0.91 ) }
    dend_45 { pt3dadd( -42.6754, 194.278, -86.1209, 0.91 ) }
    dend_45 { pt3dadd( -42.7755, 195.009, -86.3202, 0.23 ) }
    dend_45 { pt3dadd( -42.8418, 195.593, -86.5002, 1.13 ) }
    dend_45 { pt3dadd( -42.9054, 196.308, -86.745, 0.45 ) }
    dend_45 { pt3dadd( -42.9412, 196.745, -86.9007, 1.13 ) }
    dend_45 { pt3dadd( -43.222, 199.002, -87.7473, 0.23 ) }
    dend_45 { pt3dadd( -43.282, 199.375, -87.8914, 1.13 ) }
    dend_45 { pt3dadd( -43.421, 200.065, -88.1704, 1.13 ) }
    dend_45 { pt3dadd( -43.6271, 200.894, -88.5238, 0.23 ) }
    dend_45 { pt3dadd( -43.9205, 201.82, -88.9857, 0.91 ) }
    dend_45 { pt3dadd( -44.2793, 202.751, -89.5021, 0.23 ) }
    dend_45 { pt3dadd( -44.559, 203.37, -89.8813, 0.91 ) }
    dend_45 { pt3dadd( -45.0564, 204.46, -90.5878, 0.23 ) }
    dend_45 { pt3dadd( -45.3619, 205.153, -91.0757, 0.91 ) }
    dend_45 { pt3dadd( -45.917, 206.575, -92.1322, 0.23 ) }
    dend_45 { pt3dadd( -46.0218, 206.965, -92.4345, 1.13 ) }
    dend_45 { pt3dadd( -46.0525, 207.213, -92.6277, 0.23 ) }
    dend_45 { pt3dadd( -46.0539, 207.715, -93.0086, 1.13 ) }
    dend_45 { pt3dadd( -45.982, 208.308, -93.4368, 0.23 ) }
    dend_45 { pt3dadd( -45.8546, 208.887, -93.7933, 1.13 ) }
    dend_45 { pt3dadd( -45.56, 209.982, -94.4071, 0.23 ) }
    dend_45 { pt3dadd( -45.5222, 210.143, -94.5065, 0.91 ) }
    dend_45 { pt3dadd( -45.4462, 210.639, -94.8257, 0.23 ) }
    dend_45 { pt3dadd( -45.4264, 211.077, -95.1351, 0.91 ) }
    dend_45 { pt3dadd( -45.484, 212.157, -95.9406, 0.23 ) }
    dend_45 { pt3dadd( -45.5615, 212.703, -96.3983, 1.13 ) }
    dend_45 { pt3dadd( -45.6922, 213.284, -96.9088, 0.23 ) }
    dend_45 { pt3dadd( -45.8223, 213.779, -97.3678, 0.91 ) }
    dend_45 { pt3dadd( -45.9603, 214.235, -97.8122, 0.23 ) }
    dend_45 { pt3dadd( -46.1002, 214.681, -98.2406, 0.68 ) }
    dend_45 { pt3dadd( -46.419, 215.594, -99.1129, 0.23 ) }
    dend_45 { pt3dadd( -46.6027, 216.087, -99.5544, 1.13 ) }
    dend_45 { pt3dadd( -46.9419, 217.008, -100.28, 0.23 ) }
    dend_45 { pt3dadd( -47.2146, 217.745, -100.798, 1.36 ) }
    dend_45 { pt3dadd( -47.402, 218.229, -101.094, 0.45 ) }
    dend_45 { pt3dadd( -47.5805, 218.639, -101.317, 0.91 ) }
    dend_45 { pt3dadd( -48.3017, 220.117, -101.991, 0.23 ) }
    dend_45 { pt3dadd( -48.7491, 220.94, -102.317, 1.81 ) }
    dend_45 { pt3dadd( -49.2515, 221.709, -102.563, 0.23 ) }
    dend_45 { pt3dadd( -49.583, 222.149, -102.689, 0.23 ) }
    dend_45 { pt3dadd( -50.081, 222.685, -102.848, 0.68 ) }
    dend_45 { pt3dadd( -50.6289, 223.179, -102.997, 0.23 ) }
    dend_45 { pt3dadd( -51.2772, 223.658, -103.145, 0.91 ) }
    dend_45 { pt3dadd( -52.0426, 224.148, -103.337, 0.23 ) }
    dend_45 { pt3dadd( -52.3577, 224.329, -103.411, 1.13 ) }
    dend_45 { pt3dadd( -53.4339, 224.929, -103.617, 0.23 ) }
    dend_45 { pt3dadd( -53.9009, 225.186, -103.69, 0.91 ) }
    dend_45 { pt3dadd( -54.9928, 225.831, -103.793, 0.23 ) }
    dend_45 { pt3dadd( -55.6772, 226.271, -103.819, 0.91 ) }
    dend_45 { pt3dadd( -55.9555, 226.485, -103.809, 0.23 ) }
    dend_45 { pt3dadd( -56.523, 227.015, -103.736, 0.91 ) }
    dend_45 { pt3dadd( -57.0269, 227.769, -103.55, 0.23 ) }
    dend_45 { pt3dadd( -57.387, 228.557, -103.304, 0.23 ) }
    dend_45 { pt3dadd( -57.4086, 228.91, -103.17, 0.23 ) }
    dend_45 { pt3dadd( -57.233, 229.616, -102.903, 0.23 ) }
    dend_45 { pt3dadd( -56.8378, 230.412, -102.636, 0.91 ) }
    dend_45 { pt3dadd( -55.9465, 231.485, -102.337, 0.23 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 59/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -40.037, 183.14, -82.8607, 0.23 ) }
    dend_44 { pt3dadd( -39.1677, 184.179, -83.0467, 0.23 ) }
    dend_44 { pt3dadd( -38.4197, 184.93, -83.2824, 0.23 ) }
    dend_44 { pt3dadd( -37.4387, 185.857, -83.6753, 0.23 ) }
    dend_44 { pt3dadd( -37.0486, 186.216, -83.849, 0.91 ) }
    dend_44 { pt3dadd( -35.8003, 187.362, -84.437, 0.23 ) }
    dend_44 { pt3dadd( -34.5277, 188.48, -85.0367, 0.23 ) }
    dend_44 { pt3dadd( -33.3745, 189.383, -85.6214, 0.68 ) }
    dend_44 { pt3dadd( -32.3423, 190.11, -86.0908, 0.23 ) }
    dend_44 { pt3dadd( -31.1544, 190.899, -86.5729, 0.23 ) }
    dend_44 { pt3dadd( -30.0099, 191.586, -86.9483, 0.23 ) }
    dend_44 { pt3dadd( -28.5574, 192.369, -87.299, 0.68 ) }
    dend_44 { pt3dadd( -27.3789, 192.922, -87.4913, 0.23 ) }
    dend_44 { pt3dadd( -25.2016, 193.796, -87.6933, 0.23 ) }
    dend_44 { pt3dadd( -24.1888, 194.156, -87.747, 0.91 ) }
    dend_44 { pt3dadd( -22.4972, 194.679, -87.7823, 0.23 ) }
    dend_44 { pt3dadd( -21.205, 195.026, -87.7696, 1.13 ) }
    dend_44 { pt3dadd( -19.8618, 195.356, -87.7198, 1.13 ) }
    dend_44 { pt3dadd( -17.8416, 195.792, -87.6209, 0.23 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 78/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -139.085, -65.6513, -5.94813, 0.23 ) }
    dend_42 { pt3dadd( -140.391, -67.3937, -6.0246, 0.23 ) }
    dend_42 { pt3dadd( -141.244, -68.5485, -6.07513, 0.68 ) }
    dend_42 { pt3dadd( -141.766, -69.2415, -6.14486, 0.23 ) }
    dend_42 { pt3dadd( -142.436, -70.0981, -6.25315, 0.91 ) }
    dend_42 { pt3dadd( -144.017, -72.037, -6.5239, 0.23 ) }
    dend_42 { pt3dadd( -144.232, -72.2764, -6.55835, 1.13 ) }
    dend_42 { pt3dadd( -144.708, -72.7163, -6.63338, 1.13 ) }
    dend_42 { pt3dadd( -145.929, -73.6311, -6.8351, 0.23 ) }
    dend_42 { pt3dadd( -146.723, -74.0967, -6.98853, 0.45 ) }
    dend_42 { pt3dadd( -147.084, -74.2564, -7.06104, 0.23 ) }
    dend_42 { pt3dadd( -148.355, -74.7354, -7.32311, 0.91 ) }
    dend_42 { pt3dadd( -149.836, -75.3202, -7.62222, 0.23 ) }
    dend_42 { pt3dadd( -150.959, -75.8459, -7.82635, 0.68 ) }
    dend_42 { pt3dadd( -151.704, -76.2831, -7.95799, 0.23 ) }
    dend_42 { pt3dadd( -152.358, -76.7978, -8.08317, 0.68 ) }
    dend_42 { pt3dadd( -153.446, -77.8731, -8.2983, 0.23 ) }
    dend_42 { pt3dadd( -153.858, -78.3645, -8.37926, 0.68 ) }
    dend_42 { pt3dadd( -154.906, -79.7365, -8.55613, 0.23 ) }
    dend_42 { pt3dadd( -155.719, -80.8057, -8.65859, 0.23 ) }
    dend_42 { pt3dadd( -157.039, -82.52, -8.74692, 1.36 ) }
    dend_42 { pt3dadd( -157.864, -83.5573, -8.78425, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_42 { pt3dadd( -158.291, -84.0412, -8.79156, 0.91 ) }
    dend_42 { pt3dadd( -158.708, -84.4779, -8.79127, 0.23 ) }
    dend_42 { pt3dadd( -159.403, -85.1339, -8.7873, 0.91 ) }
    dend_42 { pt3dadd( -160.847, -86.4153, -8.75074, 0.45 ) }
    dend_42 { pt3dadd( -161.347, -86.8354, -8.74194, 1.13 ) }
    dend_42 { pt3dadd( -162.355, -87.68, -8.71994, 0.23 ) }
    dend_42 { pt3dadd( -163.248, -88.4514, -8.70231, 0.68 ) }
    dend_42 { pt3dadd( -163.844, -88.9655, -8.68921, 0.23 ) }
    dend_42 { pt3dadd( -165.195, -90.0636, -8.65366, 0.91 ) }
    dend_42 { pt3dadd( -165.589, -90.3344, -8.63757, 0.23 ) }
    dend_42 { pt3dadd( -166.937, -91.1051, -8.59004, 0.91 ) }
    dend_42 { pt3dadd( -167.815, -91.4818, -8.55736, 0.23 ) }
    dend_42 { pt3dadd( -168.966, -91.8527, -8.52558, 0.68 ) }
    dend_42 { pt3dadd( -169.734, -92.0342, -8.50549, 0.23 ) }
    dend_42 { pt3dadd( -171.882, -92.3515, -8.47054, 0.91 ) }
    dend_42 { pt3dadd( -173.118, -92.4034, -8.44744, 0.23 ) }
    dend_42 { pt3dadd( -174.21, -92.32, -8.42414, 0.91 ) }
    dend_42 { pt3dadd( -175.192, -92.1638, -8.39898, 0.23 ) }
    dend_42 { pt3dadd( -176.328, -91.8466, -8.3589, 0.23 ) }
    dend_42 { pt3dadd( -178.008, -91.1994, -8.27323, 0.68 ) }
    dend_42 { pt3dadd( -179.847, -90.315, -8.18826, 0.23 ) }
    dend_42 { pt3dadd( -180.814, -89.8057, -8.13909, 0.91 ) }
    dend_42 { pt3dadd( -181.095, -89.6457, -8.13267, 0.23 ) }
    dend_42 { pt3dadd( -183.121, -88.43, -8.12345, 0.91 ) }
    dend_42 { pt3dadd( -184.403, -87.6944, -8.14798, 0.23 ) }
    dend_42 { pt3dadd( -185.511, -87.1631, -8.22338, 0.23 ) }
    dend_42 { pt3dadd( -186.747, -86.8432, -8.30549, 0.91 ) }
    dend_42 { pt3dadd( -187.749, -86.7468, -8.36146, 0.23 ) }
    dend_42 { pt3dadd( -189.142, -86.8451, -8.41438, 0.23 ) }
    dend_42 { pt3dadd( -190.21, -87.1331, -8.4471, 0.23 ) }
    dend_42 { pt3dadd( -192.408, -88.0864, -8.40311, 1.59 ) }
    dend_42 { pt3dadd( -195.114, -89.4612, -8.27971, 0.45 ) }
    dend_42 { pt3dadd( -196.037, -90.0086, -8.22304, 0.45 ) }
    dend_42 { pt3dadd( -197.588, -91.0601, -8.08282, 1.13 ) }
    dend_42 { pt3dadd( -198.902, -92.1003, -7.94093, 0.23 ) }
    dend_42 { pt3dadd( -200.331, -93.4028, -7.72996, 0.91 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 36/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -139.085, -65.6513, -5.94813, 0.23 ) }
    dend_41 { pt3dadd( -139.496, -64.8407, -6.05454, 0.23 ) }
    dend_41 { pt3dadd( -140.54, -62.7324, -6.36678, 0.91 ) }
    dend_41 { pt3dadd( -141.17, -61.4253, -6.58426, 0.23 ) }
    dend_41 { pt3dadd( -141.892, -59.9198, -6.85566, 1.13 ) }
    dend_41 { pt3dadd( -142.791, -58.0458, -7.19346, 0.23 ) }
    dend_41 { pt3dadd( -143.74, -56.0687, -7.54986, 0.23 ) }
    dend_41 { pt3dadd( -144.12, -55.2971, -7.6866, 0.23 ) }
    dend_41 { pt3dadd( -144.651, -54.1978, -7.91435, 0.91 ) }
    dend_41 { pt3dadd( -144.978, -53.5466, -8.05312, 0.91 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 46/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -59.3355, -103.315, -28.4396, 0.23 ) }
    dend_10 { pt3dadd( -60.8103, -104.724, -28.3686, 0.23 ) }
    dend_10 { pt3dadd( -61.53, -105.366, -28.1336, 0.91 ) }
    dend_10 { pt3dadd( -62.4122, -105.96, -28.0748, 0.23 ) }
    dend_10 { pt3dadd( -63.7439, -106.674, -28.249, 0.23 ) }
    dend_10 { pt3dadd( -65.2661, -107.476, -28.5957, 0.68 ) }
    dend_10 { pt3dadd( -68.1271, -108.906, -29.4125, 0.23 ) }
    dend_10 { pt3dadd( -68.8246, -109.235, -29.66, 0.91 ) }
    dend_10 { pt3dadd( -72.5263, -111.133, -31.3319, 0.23 ) }
    dend_10 { pt3dadd( -74.3238, -112.163, -32.3948, 0.23 ) }
    dend_10 { pt3dadd( -75.0906, -112.666, -32.9688, 0.23 ) }
    dend_10 { pt3dadd( -75.6248, -113.024, -33.44, 1.13 ) }
    dend_10 { pt3dadd( -77.2991, -114.208, -35.1424, 0.45 ) }
    dend_10 { pt3dadd( -78.0863, -114.865, -35.9762, 1.13 ) }
    dend_10 { pt3dadd( -79.7497, -116.784, -37.6767, 0.23 ) }
    dend_10 { pt3dadd( -80.6551, -117.931, -38.5849, 1.13 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 62/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -59.3355, -103.315, -28.4396, 0.23 ) }
    dend_9 { pt3dadd( -59.554, -107.241, -28.2816, 0.23 ) }
    dend_9 { pt3dadd( -59.6717, -109.051, -28.1973, 1.13 ) }
    dend_9 { pt3dadd( -59.8121, -110.847, -28.1104, 0.23 ) }
    dend_9 { pt3dadd( -60.0559, -113.431, -28.0008, 1.59 ) }
    dend_9 { pt3dadd( -60.4008, -116.753, -27.8785, 0.23 ) }
    dend_9 { pt3dadd( -60.7484, -120.077, -27.7942, 0.91 ) }
    dend_9 { pt3dadd( -61.0087, -122.298, -27.7467, 0.23 ) }
    dend_9 { pt3dadd( -61.1971, -123.823, -27.7792, 0.91 ) }
    dend_9 { pt3dadd( -61.6335, -127.131, -27.9946, 0.23 ) }
    dend_9 { pt3dadd( -61.8363, -128.564, -28.1616, 0.91 ) }
    dend_9 { pt3dadd( -62.3851, -132.437, -28.7632, 0.23 ) }
    dend_9 { pt3dadd( -62.5331, -133.485, -28.9616, 1.36 ) }
    dend_9 { pt3dadd( -62.9312, -136.017, -29.4997, 0.23 ) }
    dend_9 { pt3dadd( -63.1364, -137.438, -29.8107, 0.91 ) }
    dend_9 { pt3dadd( -63.552, -140.333, -30.439, 0.23 ) }
    dend_9 { pt3dadd( -63.785, -142.055, -30.7867, 1.59 ) }
    dend_9 { pt3dadd( -64.0308, -143.821, -31.1106, 0.45 ) }
    dend_9 { pt3dadd( -64.2135, -145.235, -31.3242, 0.45 ) }
    dend_9 { pt3dadd( -64.6269, -148.409, -31.6768, 1.13 ) }
    dend_9 { pt3dadd( -64.8273, -149.94, -31.8402, 0.23 ) }
    dend_9 { pt3dadd( -65.0542, -151.731, -32.0351, 1.13 ) }
    dend_9 { pt3dadd( -65.4028, -154.395, -32.3387, 0.23 ) }
    dend_9 { pt3dadd( -65.9613, -158.315, -32.8115, 1.81 ) }
    dend_9 { pt3dadd( -66.3568, -160.701, -33.1249, 0.23 ) }
    dend_9 { pt3dadd( -66.6093, -162.121, -33.3232, 0.91 ) }
    dend_9 { pt3dadd( -67.4029, -166.727, -34.0145, 0.23 ) }
    dend_9 { pt3dadd( -67.5376, -167.523, -34.1237, 1.36 ) }
    dend_9 { pt3dadd( -68.0801, -171.081, -34.5719, 0.23 ) }
    dend_9 { pt3dadd( -68.4203, -173.586, -34.8249, 0.91 ) }
    dend_9 { pt3dadd( -68.6435, -175.712, -34.9907, 0.23 ) }
    dend_9 { pt3dadd( -68.881, -178.254, -35.1157, 0.23 ) }
    dend_9 { pt3dadd( -69.1283, -180.782, -35.1387, 1.59 ) }
    dend_9 { pt3dadd( -69.24, -181.854, -35.1215, 1.59 ) }
    dend_9 { pt3dadd( -69.6318, -185.271, -34.9801, 0.23 ) }
    dend_9 { pt3dadd( -69.9326, -187.418, -34.8568, 1.36 ) }
    dend_9 { pt3dadd( -70.0966, -188.311, -34.8197, 1.36 ) }
    dend_9 { pt3dadd( -70.5821, -190.546, -34.8326, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_9 { pt3dadd( -70.9961, -192.371, -34.9533, 1.13 ) }
    dend_9 { pt3dadd( -71.1563, -193.134, -35.0467, 1.13 ) }
    dend_9 { pt3dadd( -71.8547, -196.871, -35.7179, 0.23 ) }
    dend_9 { pt3dadd( -72.1231, -198.757, -36.1099, 1.36 ) }
    dend_9 { pt3dadd( -72.2967, -201.414, -36.7303, 0.23 ) }
    dend_9 { pt3dadd( -72.2735, -202.839, -37.0947, 0.91 ) }
    dend_9 { pt3dadd( -72.1196, -205.229, -37.7276, 0.23 ) }
    dend_9 { pt3dadd( -71.9623, -206.613, -38.099, 0.23 ) }
    dend_9 { pt3dadd( -71.7092, -208.071, -38.5065, 0.91 ) }
    dend_9 { pt3dadd( -71.3535, -209.962, -38.9896, 0.23 ) }
    dend_9 { pt3dadd( -71.0062, -211.71, -39.39, 0.68 ) }
    dend_9 { pt3dadd( -70.7794, -212.875, -39.6028, 0.23 ) }
    dend_9 { pt3dadd( -70.615, -213.631, -39.6789, 0.68 ) }
    dend_9 { pt3dadd( -70.1464, -215.573, -39.7736, 0.23 ) }
    dend_9 { pt3dadd( -69.8103, -216.961, -39.7666, 0.68 ) }
    dend_9 { pt3dadd( -69.1092, -219.863, -39.6107, 0.23 ) }
    dend_9 { pt3dadd( -68.3876, -222.914, -39.4123, 0.23 ) }
    dend_9 { pt3dadd( -67.5971, -226.299, -39.1423, 0.23 ) }
    dend_9 { pt3dadd( -67.3262, -227.549, -39.0051, 0.23 ) }
    dend_9 { pt3dadd( -66.851, -229.75, -38.6619, 0.23 ) }
    dend_9 { pt3dadd( -66.3816, -231.909, -38.2686, 1.13 ) }
    dend_9 { pt3dadd( -65.9847, -233.916, -37.825, 0.23 ) }
    dend_9 { pt3dadd( -65.8168, -234.8, -37.6588, 0.91 ) }
    dend_9 { pt3dadd( -65.0798, -237.142, -37.4374, 0.23 ) }
    dend_9 { pt3dadd( -65.5363, -236.611, -37.4765, 0.68 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_30, dend_27, dend_20, dend_13, dend_0, dend_47, dend_38, dend_36, dend_31, dend_29, dend_28, dend_22, dend_21, dend_17, dend_14, dend_6, dend_1, dend_46, dend_39, dend_35, dend_32, dend_24, dend_23, dend_19, dend_18, dend_16, dend_15, dend_12, dend_7, dend_3, dend_2, dend_43, dend_40, dend_34, dend_33, dend_26, dend_25, dend_11, dend_8, dend_5, dend_4, dend_45, dend_44, dend_42, dend_41, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_30, dend_27, dend_20, dend_13, dend_0, dend_47, dend_38, dend_36, dend_31, dend_29, dend_28, dend_22, dend_21, dend_17, dend_14, dend_6, dend_1, dend_46, dend_39, dend_35, dend_32, dend_24, dend_23, dend_19, dend_18, dend_16, dend_15, dend_12, dend_7, dend_3, dend_2, dend_43, dend_40, dend_34, dend_33, dend_26, dend_25, dend_11, dend_8, dend_5, dend_4, dend_45, dend_44, dend_42, dend_41, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_36 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_46 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_35 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_32 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_15 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_12 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_2 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_43 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_40 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_34 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_11 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_8 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_9 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_13 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_37 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_6 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_38 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_14 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_39 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_30 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_24 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_47 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_17 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_29 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_23 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_5 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_4 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_10 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_41 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_44 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_33 OneSecGrp_SectionRef_39.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_36 nseg = 9
    dend_31 nseg = 3
    dend_46 nseg = 5
    dend_35 nseg = 5
    dend_32 nseg = 13
    dend_19 nseg = 5
    dend_18 nseg = 9
    dend_16 nseg = 11
    dend_15 nseg = 19
    dend_12 nseg = 3
    dend_2 nseg = 3
    dend_43 nseg = 9
    dend_40 nseg = 7
    dend_34 nseg = 3
    dend_11 nseg = 5
    dend_8 nseg = 5
    dend_45 nseg = 3
    dend_42 nseg = 3
    dend_9 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_LBC_9f176c343a_0_0


