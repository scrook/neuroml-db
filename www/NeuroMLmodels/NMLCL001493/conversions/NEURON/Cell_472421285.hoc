// Cell: Cell_472421285
/*
{
  "id" : "Cell_472421285",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "270.579, 304.19, 24.36, 11.6224", "276.39, 304.19, 24.36, 11.6224", "282.202, 304.19, 24.36, 11.6224" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "276.391, 304.19, 24.36, 1.0", "282.232, 318.006, 24.36, 1.0", "288.073, 331.822, 24.36, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995698184633774
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "274.102, 302.118, 35.033, 0.4576", "273.22, 301.672, 35.1957, 0.5338", "272.349, 301.336, 35.8784, 0.5084", "271.547, 301.02, 35.3284, 0.4068", "270.621, 300.682, 35.8728, 0.356", "269.505, 300.464, 35.84, 0.3814", "268.477, 300.644, 35.7997, 0.4068", "267.668, 299.949, 35.3604, 0.4068", "266.958, 299.119, 36.0472, 0.3814", "266.671, 298.03, 36.3972, 0.3814", "266.152, 297.024, 36.6842, 0.3814", "265.371, 296.199, 36.96, 0.356", "264.722, 295.495, 37.1048, 0.3304", "263.763, 295.27, 37.8498, 0.3304", "262.737, 294.853, 38.3558, 0.356", "261.785, 294.376, 37.8932, 0.3814" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995698184633774
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "280.863, 302.186, 26.6507, 0.483", "281.342, 302.384, 25.76, 0.5592", "282.332, 302.245, 24.8377, 0.5084", "283.193, 302.13, 23.3632, 0.4576", "284.001, 301.929, 24.0285, 0.4322", "284.505, 302.041, 24.6417, 0.4576", "285.475, 301.504, 24.472, 0.5084", "286.27, 300.687, 24.6546, 0.483" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995698184633774
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "274.155, 299.331, 26.1128, 0.2542", "273.432, 298.452, 25.8986, 0.2796", "272.822, 297.488, 25.8012, 0.3814", "272.313, 296.47, 25.9302, 0.4576", "271.916, 295.401, 26.1601, 0.5848", "271.503, 294.337, 26.3547, 0.5848", "270.93, 293.354, 26.6227, 0.6102", "270.531, 292.334, 27.4386, 0.5338", "270.206, 291.254, 27.7945, 0.483", "269.88, 290.185, 28.3352, 0.356", "269.332, 289.201, 28.8179, 0.356", "268.447, 288.488, 29.0676, 0.3814", "267.576, 287.75, 28.8887, 0.4576", "266.919, 286.823, 28.5779, 0.3814" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995698184633774
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "271.154, 302.272, 24.3908, 0.4576", "270.343, 301.475, 24.1892, 0.5848", "269.359, 300.928, 24.2511, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995698184633774
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "288.073, 331.822, 24.36, 1.0", "293.914, 345.638, 24.36, 1.0", "299.756, 359.454, 24.36, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "261.785, 294.376, 37.8932, 0.3814", "261.442, 294.301, 36.0889, 0.305", "260.62, 293.665, 36.6747, 0.4068", "259.706, 293.318, 35.8571, 0.4068", "258.885, 292.691, 36.1917, 0.4068", "257.822, 292.358, 36.3163, 0.356", "257.021, 291.924, 36.6139, 0.3814", "256.053, 291.944, 36.4, 0.4322", "255.095, 291.598, 36.12, 0.483", "254.856, 290.844, 35.1912, 0.483", "254.699, 290.616, 32.76, 0.483", "254.592, 289.89, 33.3385, 0.5084", "254.654, 289.477, 35.541, 0.5084", "254.704, 288.625, 36.9418, 0.4576", "254.108, 288.055, 36.402, 0.4322", "254.025, 287.023, 35.9103, 0.4322", "254.205, 286.19, 34.7934, 0.483", "254.082, 285.351, 34.3227, 0.5338", "254.193, 284.394, 35.4432, 0.5848", "253.968, 283.483, 34.5022, 0.6102" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "261.785, 294.376, 37.8932, 0.3814", "260.772, 294.533, 39.0538, 0.5338", "259.656, 294.596, 39.3938, 0.4576", "259.085, 294.244, 38.4174, 0.4322", "257.987, 294.333, 38.7747, 0.4322", "256.978, 294.113, 39.0314, 0.483", "256.701, 293.361, 38.4182, 0.5084", "255.874, 292.753, 38.92, 0.5592", "254.844, 292.428, 38.36, 0.5338", "253.977, 292.158, 39.2465, 0.4576", "253.187, 291.606, 40.4359, 0.3814", "252.393, 291.569, 39.2795, 0.3814", "251.873, 291.567, 36.9628, 0.4322", "250.806, 291.377, 36.4, 0.4068", "250.417, 291.72, 37.6662, 0.356", "249.335, 291.603, 37.4469, 0.3304", "248.537, 291.262, 35.9682, 0.356", "247.473, 291.461, 35.28, 0.3814", "246.344, 291.404, 35.2542, 0.3814", "245.43, 291.568, 34.2286, 0.4322", "244.658, 291.746, 34.5262, 0.4576", "243.813, 291.841, 35.7372, 0.483", "243.098, 292.178, 36.1536, 0.4322", "242.019, 292.003, 36.2074, 0.4322", "240.945, 292.063, 35.8543, 0.4068", "239.898, 292.163, 35.5477, 0.4068", "239.553, 292.063, 33.994, 0.3814", "238.959, 292.406, 34.7889, 0.3814", "238.539, 292.404, 36.4, 0.356", "237.755, 292.603, 37.8988, 0.305", "237.145, 292.635, 39.9011, 0.2796", "236.276, 292.635, 38.7075, 0.2796", "235.674, 293.171, 39.8154, 0.305", "235.039, 293.543, 39.48, 0.2796", "234.622, 293.322, 41.676, 0.2542", "234.148, 293.848, 43.4806, 0.2288", "233.101, 293.894, 44.4094, 0.2288", "232.339, 293.894, 46.2182, 0.2796", "231.351, 293.894, 47.3264, 0.356", "230.622, 293.823, 48.9782, 0.4576", "229.653, 294.109, 48.7099, 0.483", "228.533, 294.237, 48.7105, 0.4576", "227.656, 294.694, 48.44, 0.3814" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "286.27, 300.687, 24.6546, 0.483", "286.331, 300.745, 25.48, 0.356", "286.522, 300.684, 25.424, 0.3304", "286.813, 301.101, 26.6381, 0.305", "287.435, 301.635, 27.1751, 0.2796", "288.299, 301.115, 26.4746, 0.2796", "289.24, 300.872, 26.32, 0.3304", "289.891, 301.213, 27.711, 0.4322", "290.69, 301.33, 27.2065, 0.483", "290.802, 301.851, 25.1446, 0.4576", "291.688, 301.647, 25.4649, 0.4322", "292.417, 301.34, 27.2191, 0.4576", "293.3, 301.414, 28.5244, 0.483", "294.27, 301.522, 29.6038, 0.4576", "295.274, 301.898, 29.6859, 0.3814", "296.215, 302.032, 29.4, 0.356", "297.233, 301.558, 29.118, 0.3304", "298.145, 301.656, 27.7329, 0.3814", "299.202, 301.561, 26.7694, 0.3814", "300.293, 301.785, 27.1572, 0.4576", "301.292, 301.783, 26.32, 0.4576", "302.152, 302.009, 26.1302, 0.5084", "303.171, 302.245, 26.8943, 0.483", "304.047, 302.781, 27.2947, 0.483", "304.866, 302.931, 27.193, 0.4576", "305.902, 302.931, 27.3115, 0.4322", "306.536, 303.379, 28.84, 0.3814", "307.428, 303.819, 29.3656, 0.356", "308.174, 304.418, 28.0235, 0.3814", "308.815, 304.54, 26.8699, 0.4576", "309.312, 305.25, 27.9468, 0.4576", "310.291, 305.504, 27.7119, 0.4068", "310.961, 305.885, 29.4, 0.305", "311.817, 306.376, 29.1838, 0.2542", "312.628, 306.821, 29.68, 0.2542", "313.352, 307.393, 29.4, 0.305", "314.257, 307.714, 29.4143, 0.3814", "314.732, 308.308, 28.6278, 0.4322", "315.576, 308.334, 29.5282, 0.4322", "316.189, 308.969, 31.1377, 0.3814", "316.77, 309.82, 30.9134, 0.356", "317.764, 310.216, 30.2907, 0.4322", "318.432, 310.669, 28.9895, 0.5592", "319.19, 311.238, 29.6772, 0.661", "319.776, 311.901, 28.597, 0.6356", "320.393, 312.623, 28.8966, 0.5848", "320.891, 312.901, 26.9497, 0.5084", "321.445, 313.549, 27.9199, 0.483", "321.693, 313.954, 29.8914, 0.4576", "322.059, 314.845, 29.8648, 0.483", "322.835, 315.008, 28.6446, 0.5084", "323.743, 315.345, 27.7287, 0.5084", "324.77, 315.535, 28.0, 0.4322", "324.858, 315.957, 25.9076, 0.3304", "325.503, 316.649, 25.76, 0.2796", "326.383, 316.992, 25.9064, 0.305", "326.854, 317.171, 27.9544, 0.356", "326.968, 317.601, 30.24, 0.356", "327.63, 317.969, 28.4623, 0.305", "328.238, 318.401, 27.8466, 0.2542", "328.852, 319.126, 27.44, 0.2542", "329.793, 319.634, 27.5713, 0.2796", "330.529, 320.282, 28.56, 0.3304", "331.191, 320.851, 29.6265, 0.356", "331.993, 320.978, 29.5159, 0.4068", "332.733, 321.528, 29.7545, 0.4068", "333.247, 322.377, 29.54, 0.3814", "334.072, 322.876, 29.1497, 0.356", "334.733, 323.282, 30.8274, 0.356", "335.23, 323.398, 32.76, 0.3814", "335.46, 324.438, 32.3868, 0.3304", "336.488, 324.896, 32.3868, 0.2542", "337.633, 324.648, 32.2, 0.4322", "337.708, 324.497, 34.4358, 0.483", "338.442, 324.254, 36.022, 0.4322", "339.31, 324.3, 36.7452, 0.3304", "339.985, 324.698, 36.8096, 0.2796", "340.111, 325.424, 37.3226, 0.2796", "340.228, 325.015, 38.7842, 0.3304", "340.788, 324.996, 40.8764, 0.3304", "340.981, 325.686, 41.4831, 0.356", "341.916, 326.078, 41.72, 0.356", "342.804, 325.897, 42.9153, 0.3814", "343.391, 326.006, 43.7268, 0.356", "344.23, 325.926, 45.08, 0.305" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "286.27, 300.687, 24.6546, 0.483", "286.58, 300.119, 24.7764, 0.5848", "286.874, 299.143, 25.7373, 0.6102", "286.968, 298.148, 27.09, 0.6102", "287.253, 297.138, 28.1207, 0.5592", "287.374, 296.074, 27.7788, 0.5338", "287.408, 294.991, 26.8834, 0.5848", "287.643, 293.897, 26.4776, 0.661", "287.576, 292.779, 26.3306, 0.7372", "287.35, 291.663, 26.1932, 0.7118", "287.272, 290.542, 25.6693, 0.6356", "286.956, 289.442, 25.6161, 0.5338", "286.922, 288.309, 25.9787, 0.4576" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "266.919, 286.823, 28.5779, 0.3814", "266.542, 285.895, 29.3734, 0.5084", "266.408, 284.826, 30.1851, 0.5084", "266.88, 283.864, 30.6676, 0.483", "267.432, 282.872, 30.6488, 0.356", "267.628, 281.793, 30.0675, 0.2796", "267.404, 280.702, 29.7018, 0.2288", "267.421, 279.7, 30.7132, 0.2542", "267.583, 278.69, 31.9623, 0.305", "267.082, 277.676, 32.3632, 0.4322", "266.176, 276.741, 32.3548, 0.6356" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "266.919, 286.823, 28.5779, 0.3814", "266.362, 285.534, 28.0871, 0.5338", "265.679, 284.793, 26.8341, 0.5084", "264.802, 284.206, 25.956, 0.4576", "263.772, 283.734, 25.5833, 0.483", "262.722, 283.293, 25.3039, 0.5084", "261.817, 282.634, 25.1782, 0.483", "261.056, 281.783, 25.0709, 0.4322", "260.356, 280.885, 24.8262, 0.3814", "259.658, 279.983, 24.6828, 0.4322", "258.928, 279.102, 24.7316, 0.5084", "257.99, 278.529, 24.4885, 0.6102", "256.956, 278.072, 24.3558, 0.6102", "256.06, 277.487, 25.1406, 0.5848", "255.438, 276.659, 25.9188, 0.5338", "255.04, 275.601, 25.7071, 0.5848", "254.866, 274.839, 24.176, 0.6102", "254.511, 274.041, 22.617, 0.6356", "254.029, 273.04, 22.036, 0.6102", "253.43, 272.069, 22.0251, 0.6102", "252.795, 271.123, 21.8394, 0.5848", "251.961, 270.363, 21.4802, 0.5338", "251.06, 269.665, 21.2766, 0.483", "250.227, 268.887, 21.0706, 0.4576", "249.352, 268.155, 20.8597, 0.4576", "248.419, 267.496, 20.8698, 0.483", "247.472, 267.126, 19.7151, 0.483", "246.624, 266.634, 18.2812, 0.4576" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "269.359, 300.928, 24.2511, 0.6864", "269.721, 300.517, 23.959, 0.4322", "268.691, 300.513, 23.8697, 0.5338", "267.925, 300.148, 24.3485, 0.5592", "267.242, 299.511, 23.8392, 0.5592", "266.61, 298.805, 23.4293, 0.5084", "265.824, 298.154, 24.5694, 0.483", "265.676, 297.206, 25.5352, 0.483", "265.27, 296.525, 25.9196, 0.5338", "264.526, 295.992, 26.8582, 0.5592", "263.891, 295.154, 26.88, 0.5592", "263.13, 294.543, 26.7834, 0.5592", "262.138, 294.756, 26.6658, 0.6102", "261.184, 294.728, 25.6628, 0.6102", "260.565, 294.605, 23.5511, 0.5592" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "269.359, 300.928, 24.2511, 0.6864", "268.71, 300.673, 24.1525, 0.5084", "267.688, 300.858, 24.2197, 0.5084", "266.695, 301.414, 24.4768, 0.5338", "265.764, 302.046, 24.8724, 0.5848", "264.969, 302.849, 25.2473, 0.6102", "264.175, 303.667, 25.3789, 0.6356", "263.258, 304.345, 25.4789, 0.5592", "262.229, 304.82, 25.4724, 0.5592", "261.118, 304.906, 25.4344, 0.6356", "260.004, 304.755, 25.268, 0.788", "258.875, 304.878, 24.9376, 0.8644", "257.87, 305.418, 24.8567, 0.839", "257.047, 306.205, 24.6215, 0.788", "256.383, 307.132, 24.4073, 0.7118", "256.24, 308.206, 23.5234, 0.5848" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "253.968, 283.483, 34.5022, 0.6102", "254.219, 282.838, 34.6909, 0.4068", "254.785, 282.615, 33.4953, 0.3304", "255.23, 282.566, 31.6075, 0.2796", "255.455, 281.511, 31.1363, 0.2796", "256.191, 281.195, 31.022, 0.356", "256.672, 280.509, 30.8619, 0.3814", "257.219, 279.594, 30.0723, 0.4322", "257.886, 279.008, 28.8988, 0.4322", "258.658, 278.655, 27.44, 0.4576", "259.283, 278.016, 26.8013, 0.4322", "260.072, 277.368, 25.8367, 0.3814", "261.06, 277.073, 25.4327, 0.3814", "261.645, 276.162, 25.1689, 0.4322", "262.128, 275.627, 25.48, 0.5338", "262.293, 275.107, 25.2381, 0.5592", "262.59, 274.219, 24.2122, 0.5338", "263.391, 273.837, 23.5872, 0.4322", "264.047, 273.328, 24.36, 0.3304", "264.985, 272.741, 24.078, 0.2796", "265.789, 272.615, 22.5562, 0.2796", "266.323, 271.83, 21.56, 0.305", "266.427, 271.014, 20.7234, 0.305", "267.132, 270.209, 20.72, 0.3304", "267.365, 269.262, 20.6979, 0.356", "267.868, 268.611, 19.3189, 0.3814", "268.245, 267.927, 18.6959, 0.3814", "268.835, 267.34, 18.4072, 0.4068", "269.572, 266.672, 18.387, 0.4068", "270.003, 265.669, 18.4691, 0.4068", "270.643, 264.766, 18.2129, 0.3814", "270.605, 263.939, 19.5905, 0.4068", "271.031, 263.23, 18.4246, 0.4576", "271.128, 262.777, 17.36, 0.4576", "271.001, 262.51, 17.7957, 0.3304", "270.671, 262.319, 17.64, 0.2542", "269.984, 262.09, 17.64, 0.2542", "269.654, 261.963, 17.92, 0.5338", "269.526, 261.417, 18.1689, 0.5338", "269.387, 261.086, 17.08, 0.4068", "269.298, 260.819, 17.3289, 0.3304", "269.197, 260.298, 17.5157, 0.5338", "269.081, 259.929, 16.8, 0.356", "269.208, 259.917, 16.3022, 0.3304", "269.539, 259.586, 15.96, 0.4576", "269.641, 259.548, 17.08, 0.6356", "269.387, 259.268, 17.8889, 0.4576", "269.285, 259.193, 16.6443, 0.2542", "268.954, 259.218, 15.9911, 0.356", "268.649, 258.951, 15.4311, 0.3304", "268.727, 258.621, 15.5868, 0.356", "268.675, 258.239, 15.9289, 0.4068", "268.345, 258.086, 16.1468, 0.305", "268.268, 257.934, 16.4268, 0.2796", "268.573, 257.514, 16.4268, 0.3814", "268.268, 257.286, 16.52, 0.4068", "268.268, 257.057, 16.24, 0.356", "268.191, 257.019, 15.68, 0.356", "268.001, 256.714, 14.9332, 0.4576", "268.039, 256.142, 14.84, 0.4322", "268.243, 255.773, 14.84, 0.6102", "268.293, 255.353, 14.4668, 0.3814", "268.154, 255.264, 13.5332, 0.2288", "268.027, 254.934, 13.0668, 0.2542", "267.658, 254.807, 12.32, 0.3814", "267.302, 254.578, 12.3511, 0.305", "266.972, 254.349, 12.6, 0.2288", "266.895, 253.955, 13.1289, 0.2288", "266.806, 253.485, 12.04, 0.4068", "266.132, 253.015, 11.76, 0.4322", "265.789, 252.672, 12.04, 0.4576", "265.395, 252.265, 12.04, 0.4576", "264.977, 251.871, 12.0711, 0.4322", "264.874, 251.667, 11.6043, 0.305", "264.811, 251.362, 11.2, 0.2288", "264.455, 251.133, 11.4489, 0.305", "264.035, 250.867, 11.5111, 0.356", "263.921, 250.523, 12.0089, 0.2796", "263.921, 250.459, 12.4132, 0.2542", "263.883, 250.409, 13.0357, 0.2288", "263.615, 250.078, 13.2532, 0.2288", "263.324, 249.659, 13.1289, 0.2288", "263.043, 249.392, 12.5068, 0.305", "262.789, 249.621, 11.7289, 0.4322", "262.535, 249.392, 11.7289, 0.6102", "262.078, 249.024, 11.2932, 0.483", "261.824, 248.629, 10.92, 0.305", "261.518, 248.591, 10.92, 0.2542", "261.253, 248.515, 10.92, 0.2288", "260.845, 248.35, 10.92, 0.2288", "260.832, 248.019, 10.92, 0.2288", "260.755, 247.638, 10.92, 0.2288", "260.718, 247.333, 10.92, 0.2288", "260.641, 247.066, 10.92, 0.2288", "260.26, 246.875, 11.2, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "253.968, 283.483, 34.5022, 0.6102", "253.656, 282.555, 32.7824, 0.4068", "253.398, 281.773, 32.1742, 0.3814", "253.427, 281.191, 34.2275, 0.356", "253.18, 280.344, 33.9732, 0.3814", "252.671, 279.75, 33.6501, 0.3814", "252.697, 278.996, 34.8132, 0.3814" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "286.922, 288.309, 25.9787, 0.4576", "286.812, 287.761, 25.2518, 0.5084", "286.559, 286.674, 25.2358, 0.483", "286.158, 285.676, 24.9463, 0.4322", "285.099, 285.453, 25.7057, 0.3814", "284.628, 285.147, 27.0771, 0.4068", "283.953, 284.615, 26.88, 0.4068" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "286.922, 288.309, 25.9787, 0.4576", "286.951, 287.566, 26.0148, 0.3304", "287.169, 286.451, 26.0114, 0.356", "287.783, 285.521, 25.8152, 0.3814", "288.454, 284.669, 25.0172, 0.3304", "288.477, 283.637, 24.1732, 0.3304", "288.378, 282.555, 23.2929, 0.3304", "288.79, 281.623, 22.1211, 0.4322", "289.21, 280.81, 20.4506, 0.483" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "266.176, 276.741, 32.3548, 0.6356", "265.63, 276.253, 32.2227, 0.4068", "265.303, 275.316, 31.3704, 0.3304", "264.852, 274.327, 30.8361, 0.3304", "264.275, 273.342, 30.6561, 0.3304", "263.732, 272.337, 30.751, 0.356", "263.096, 271.39, 30.8633, 0.3304", "262.188, 270.77, 31.3967, 0.3304", "261.128, 270.38, 31.7475, 0.3304", "260.037, 270.048, 32.0012, 0.3814", "259.076, 269.441, 31.9071, 0.4322", "258.125, 268.884, 32.6312, 0.4576", "257.762, 268.385, 32.48, 0.4576", "256.892, 267.997, 32.3982, 0.483", "256.013, 267.703, 33.0915, 0.5084", "255.106, 267.514, 33.5098, 0.5338", "254.101, 267.076, 33.6, 0.5084", "253.069, 266.655, 33.88, 0.4322", "252.315, 266.302, 32.4624, 0.3814", "251.362, 266.102, 31.6616, 0.3814", "250.936, 265.529, 33.32, 0.4322", "249.89, 265.221, 33.5773, 0.4322", "249.416, 264.55, 34.5825, 0.3814", "248.809, 263.618, 34.5671, 0.356", "248.239, 262.738, 34.6385, 0.3304", "247.565, 262.032, 35.0168, 0.356", "247.085, 262.336, 35.1417, 0.356", "246.273, 262.813, 34.4758, 0.4322", "245.242, 262.437, 34.9003, 0.4576", "244.317, 262.042, 34.2695, 0.4576", "243.415, 261.848, 33.4572, 0.356", "242.393, 262.287, 33.04, 0.2796", "241.436, 262.761, 32.76, 0.2288", "240.556, 263.276, 32.8406, 0.2542", "239.443, 263.428, 32.48, 0.305", "239.096, 264.124, 31.4087, 0.356", "238.295, 264.378, 31.64, 0.3814", "238.054, 264.366, 29.96, 0.2796", "237.621, 264.226, 29.4622, 0.2288", "237.38, 264.302, 28.6532, 0.2288", "236.922, 264.378, 29.12, 0.2796", "236.656, 264.378, 29.3068, 0.305", "236.274, 264.416, 29.4, 0.2796", "236.02, 264.493, 28.8089, 0.2288", "236.007, 264.543, 27.8443, 0.2288", "236.007, 264.963, 27.4711, 0.2288", "236.007, 265.294, 27.44, 0.2288", "235.995, 265.548, 27.2532, 0.2288", "235.664, 265.637, 27.16, 0.2288", "234.749, 265.637, 27.16, 0.2288", "233.948, 265.637, 27.16, 0.2288", "233.147, 265.637, 27.16, 0.2288", "232.854, 265.649, 27.2532, 0.2288", "232.55, 265.751, 26.9422, 0.2288", "232.13, 265.764, 26.6, 0.2288", "231.431, 265.866, 26.6, 0.2288", "231.088, 265.866, 26.6, 0.2288", "230.745, 265.866, 26.6, 0.2288", "230.402, 265.866, 26.6, 0.2288", "230.185, 265.993, 26.6, 0.2288", "230.173, 266.209, 26.6, 0.2288", "230.084, 266.463, 26.6, 0.2288", "229.601, 266.552, 26.32, 0.2288", "229.334, 266.629, 26.32, 0.2288", "229.029, 266.793, 26.5689, 0.2288", "228.991, 267.074, 26.5689, 0.2288", "228.609, 267.238, 25.9468, 0.2288", "228.241, 267.251, 25.76, 0.2288", "227.86, 267.365, 25.6668, 0.2288", "227.77, 267.505, 25.9468, 0.2288", "227.465, 267.734, 26.04, 0.2288", "227.198, 267.81, 26.04, 0.2288", "226.652, 268.064, 25.76, 0.2288", "226.258, 268.459, 25.7289, 0.2288", "225.89, 268.79, 25.48, 0.2288", "225.355, 269.056, 25.48, 0.2288", "225.025, 269.069, 25.48, 0.2288", "224.719, 269.107, 25.48, 0.2288", "224.567, 269.298, 25.48, 0.2288", "224.415, 269.489, 25.48, 0.2288", "223.69, 269.679, 25.2, 0.2796", "223.22, 269.857, 25.0132, 0.305", "222.851, 270.213, 25.2, 0.2796", "222.279, 270.442, 25.2, 0.2542", "221.707, 270.633, 25.1068, 0.2288", "221.224, 270.861, 24.8889, 0.2288", "220.792, 270.937, 24.4532, 0.2288", "220.563, 271.014, 24.36, 0.2288", "220.27, 271.014, 24.4843, 0.2288", "219.457, 271.014, 24.8268, 0.2288", "218.924, 271.014, 24.1732, 0.2288", "218.237, 271.09, 24.08, 0.2288", "217.97, 271.166, 24.08, 0.2288", "217.716, 271.242, 24.0489, 0.2542", "217.462, 271.242, 23.8311, 0.305", "217.119, 270.949, 23.9868, 0.305", "216.711, 270.937, 23.8, 0.3304", "216.521, 271.192, 23.5511, 0.5084", "216.203, 271.573, 24.08, 0.6356", "215.758, 271.814, 24.08, 0.5592", "215.313, 271.979, 23.8932, 0.4576", "214.97, 272.272, 23.2089, 0.305", "214.577, 272.463, 22.96, 0.2288", "214.08, 272.501, 23.3332, 0.2542", "213.458, 272.615, 24.0489, 0.305", "213.14, 272.603, 24.08, 0.305", "212.784, 272.577, 24.2668, 0.305", "212.605, 272.653, 24.0489, 0.305", "211.983, 272.958, 23.8, 0.356", "211.488, 272.984, 23.6132, 0.356", "211.004, 273.085, 23.4268, 0.2796", "210.827, 273.403, 23.52, 0.356", "210.432, 273.314, 23.4268, 0.356", "210.153, 273.416, 23.24, 0.2542", "209.352, 273.416, 23.24, 0.2288", "209.021, 273.429, 23.24, 0.2288", "208.703, 273.632, 22.8357, 0.305", "208.513, 273.95, 22.4, 0.4068", "208.221, 273.988, 22.7111, 0.2288", "208.094, 274.102, 23.52, 0.2288", "207.903, 274.115, 23.8622, 0.2288", "207.865, 274.331, 24.08, 0.2288", "207.865, 274.624, 24.2043, 0.2288", "207.7, 274.98, 25.4489, 0.2288", "207.509, 275.055, 25.9157, 0.4322", "207.445, 275.209, 26.32, 0.356", "207.559, 275.336, 26.5689, 0.2796", "207.636, 275.437, 26.5068, 0.356" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "266.176, 276.741, 32.3548, 0.6356", "265.386, 276.223, 32.7852, 0.4068", "265.389, 275.28, 33.4687, 0.4576", "265.88, 274.367, 33.88, 0.483", "266.621, 273.617, 34.2975, 0.4576", "266.987, 272.563, 34.1012, 0.4068", "267.635, 271.647, 33.7134, 0.3814", "267.967, 270.572, 33.5782, 0.4068", "268.244, 269.673, 34.2124, 0.4068", "268.613, 268.988, 34.9205, 0.4068", "269.181, 268.141, 34.7334, 0.3304", "268.896, 267.321, 35.28, 0.305", "268.737, 266.603, 33.8582, 0.305", "268.947, 265.858, 33.1708, 0.3814", "269.115, 264.873, 33.32, 0.4322", "268.731, 264.127, 32.2, 0.4322", "268.892, 263.16, 31.6929, 0.4068", "268.954, 262.128, 30.8232, 0.4068", "268.553, 261.264, 30.8258, 0.4322", "268.427, 260.171, 31.3314, 0.4322", "268.154, 259.097, 31.64, 0.356", "268.262, 258.136, 30.5869, 0.305", "267.944, 257.274, 30.24, 0.305", "267.365, 256.317, 30.553, 0.4068", "266.904, 255.42, 30.3495, 0.4576", "266.792, 254.744, 30.8, 0.483", "266.507, 253.685, 30.2949, 0.4322", "266.066, 252.656, 30.263, 0.4322", "265.637, 251.788, 30.798, 0.4322", "265.283, 250.928, 30.3055, 0.4322", "264.875, 250.014, 30.2198, 0.4068", "264.597, 248.932, 30.728, 0.356", "264.122, 247.973, 30.52, 0.3814", "264.378, 247.218, 30.24, 0.4068" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "246.624, 266.634, 18.2812, 0.4576", "246.293, 265.44, 17.6968, 0.4322", "245.627, 264.836, 18.0001, 0.356", "245.227, 264.319, 19.1898, 0.356", "244.476, 263.699, 18.5503, 0.3814", "243.871, 262.792, 18.7645, 0.3814", "242.982, 262.357, 18.5707, 0.3814", "242.093, 261.786, 18.1798, 0.4068", "241.27, 261.022, 18.4702, 0.4322", "240.426, 260.297, 18.1513, 0.483", "240.056, 259.25, 17.6588, 0.483", "239.329, 258.398, 17.36, 0.483", "238.47, 257.735, 17.096, 0.4322", "237.482, 257.4, 16.7104, 0.3814", "236.493, 257.298, 16.4287, 0.305", "235.435, 257.387, 16.2089, 0.2796", "234.456, 257.199, 15.5344, 0.305", "233.501, 257.155, 15.8645, 0.4068", "232.539, 256.867, 16.658, 0.483", "231.619, 256.524, 15.9704, 0.5084", "230.734, 256.256, 16.4881, 0.4322", "229.667, 256.142, 15.6652, 0.356", "228.56, 256.027, 15.7735, 0.3304", "227.532, 255.662, 15.6878, 0.3814", "226.7, 255.118, 16.52, 0.4322", "225.985, 254.5, 16.9117, 0.4322", "225.334, 253.932, 15.4, 0.3814", "224.638, 253.396, 15.1953, 0.3304", "223.723, 253.091, 15.3913, 0.3304", "222.763, 252.537, 15.68, 0.356", "221.852, 252.262, 16.4226, 0.356", "220.791, 252.243, 15.6898, 0.3304", "219.94, 252.023, 15.743, 0.305", "219.082, 251.559, 16.4889, 0.3304", "218.41, 251.081, 16.8759, 0.356", "217.448, 250.788, 16.2711, 0.3814", "216.704, 250.22, 16.2792, 0.4068", "215.738, 250.104, 16.9224, 0.4576", "214.895, 250.329, 16.24, 0.5592", "213.806, 250.434, 15.6817, 0.6102", "212.732, 250.401, 14.8711, 0.6102", "211.802, 250.465, 15.5672, 0.5592", "210.899, 250.289, 16.7776, 0.5084", "210.229, 249.89, 15.1418, 0.5084", "209.255, 249.826, 14.315, 0.4576", "208.34, 249.536, 15.0074, 0.4322", "207.212, 249.481, 15.0301, 0.3304", "206.092, 249.304, 14.8187, 0.2796", "204.964, 249.163, 14.6541, 0.2288", "203.824, 249.163, 14.84, 0.2288", "202.938, 249.163, 16.0983, 0.2542", "202.123, 249.355, 17.8489, 0.305", "201.411, 249.956, 17.3368, 0.3814", "200.345, 250.096, 16.5018, 0.4068", "199.511, 250.385, 15.4689, 0.4068", "198.593, 250.193, 16.779, 0.356", "197.683, 249.988, 16.3649, 0.356", "196.826, 250.205, 16.6032, 0.356", "196.186, 250.666, 16.6359, 0.4068", "195.492, 251.037, 17.0531, 0.4322", "195.033, 250.549, 15.8567, 0.4576", "194.131, 250.728, 16.4548, 0.483", "193.163, 250.981, 15.68, 0.5084", "192.477, 251.108, 16.2574, 0.5084", "191.754, 251.005, 17.7481, 0.483", "190.998, 251.566, 17.64, 0.4322", "189.975, 251.493, 16.8932, 0.4068", "189.219, 251.435, 16.52, 0.356", "188.172, 251.246, 16.777, 0.3304", "187.038, 251.117, 16.9131, 0.3304", "186.07, 251.201, 16.8762, 0.3304", "185.082, 251.23, 16.6387, 0.3304", "184.067, 251.526, 16.6645, 0.2796", "183.136, 252.003, 16.6664, 0.2796", "182.279, 252.353, 16.24, 0.2796", "181.271, 252.441, 16.8095, 0.305", "180.435, 253.008, 17.612, 0.305", "179.6, 253.548, 16.8207, 0.305", "178.653, 253.867, 17.626, 0.305", "177.59, 254.164, 18.2039, 0.305", "176.857, 254.534, 19.497, 0.3304", "175.983, 254.863, 19.3883, 0.3814", "175.492, 255.138, 17.432, 0.4322", "174.382, 255.335, 17.4107, 0.4576", "173.863, 255.557, 17.5468, 0.305", "173.583, 255.607, 17.36, 0.3304", "173.303, 255.913, 17.6089, 0.4322", "173.075, 255.836, 18.2622, 0.305", "172.744, 256.065, 18.6668, 0.2542", "172.401, 256.142, 18.76, 0.305", "171.918, 256.269, 18.6668, 0.4322", "171.396, 256.637, 18.4489, 0.356", "171.066, 256.93, 18.8843, 0.3304", "170.951, 256.955, 19.3822, 0.2796", "170.647, 257.248, 19.6, 0.2288", "170.456, 257.4, 19.6, 0.2542", "169.973, 257.705, 19.0089, 0.3814", "169.77, 257.781, 18.2932, 0.3304", "169.541, 258.036, 18.3243, 0.356", "169.528, 258.086, 18.7289, 0.3304", "169.21, 258.392, 18.6357, 0.4576", "168.778, 258.684, 18.1689, 0.3814", "168.346, 258.951, 17.92, 0.305", "168.054, 259.002, 17.92, 0.2542", "167.71, 259.002, 17.92, 0.2288", "167.494, 259.129, 17.92, 0.2288", "167.431, 259.409, 17.92, 0.2288", "166.77, 259.777, 17.92, 0.2288", "166.109, 259.917, 17.92, 0.2288", "165.308, 259.917, 17.92, 0.2288", "164.965, 259.917, 17.92, 0.2288", "164.634, 259.929, 17.92, 0.2288", "164.431, 260.069, 17.92, 0.2288", "164.38, 260.362, 17.92, 0.2542", "164.062, 260.464, 17.4532, 0.3814", "163.706, 260.68, 17.4532, 0.4068", "163.579, 260.896, 17.5468, 0.356", "163.478, 261.061, 17.36, 0.3304", "163.236, 261.175, 17.1111, 0.2796", "162.689, 261.417, 17.08, 0.2288", "162.626, 261.62, 16.8932, 0.2288", "162.27, 261.683, 16.8, 0.2288", "162.13, 261.887, 16.8, 0.2288", "161.749, 261.976, 17.3289, 0.2288", "161.368, 262.155, 17.36, 0.2288", "161.177, 262.281, 17.0178, 0.2288", "160.911, 262.612, 16.8, 0.2288", "160.694, 262.752, 17.6089, 0.305", "160.63, 263.006, 17.1111, 0.4576", "160.465, 263.413, 16.5511, 0.4576", "159.995, 263.654, 17.0489, 0.305", "159.817, 263.871, 17.2043, 0.4322", "159.69, 263.819, 17.64, 0.305", "159.257, 263.806, 17.3289, 0.4322", "159.13, 264.023, 16.7689, 0.2542", "158.927, 264.073, 16.5511, 0.2542", "158.711, 264.187, 16.8, 0.2796", "158.101, 264.264, 17.08, 0.2796", "157.758, 264.264, 17.08, 0.2542", "157.148, 264.493, 17.2668, 0.2288", "156.512, 264.62, 17.36, 0.2288", "156.449, 264.9, 17.36, 0.2288", "156.156, 264.95, 17.36, 0.2288", "155.813, 264.95, 17.36, 0.2288", "155.47, 264.95, 17.36, 0.2288", "155.241, 264.95, 17.36, 0.2542", "154.91, 264.95, 17.3911, 0.305", "154.478, 265.065, 17.5468, 0.4068", "154.288, 265.179, 16.8932, 0.3304", "153.868, 265.294, 16.52, 0.305", "153.614, 265.306, 16.7068, 0.2796", "153.219, 265.141, 17.08, 0.2288", "153.055, 265.167, 17.64, 0.2288", "152.724, 265.179, 17.64, 0.2288", "152.495, 265.179, 17.64, 0.2288", "152.038, 265.179, 17.64, 0.2288", "151.745, 265.217, 17.6711, 0.2288", "151.466, 265.383, 17.5778, 0.2796", "151.237, 265.522, 17.36, 0.356" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "246.624, 266.634, 18.2812, 0.4576", "246.293, 265.885, 17.876, 0.4322", "245.982, 264.813, 18.24, 0.4068", "246.412, 263.811, 18.412, 0.356", "246.997, 262.829, 18.3123, 0.305", "247.435, 261.784, 18.0508, 0.3304", "247.633, 260.67, 17.7677, 0.3304", "247.922, 259.61, 17.0937, 0.356", "247.975, 258.6, 15.8858, 0.356", "247.741, 257.509, 15.5285, 0.4068", "247.675, 256.37, 15.5672, 0.4068", "247.96, 255.272, 15.4924, 0.3814", "248.271, 254.205, 14.8669, 0.3304", "248.83, 253.259, 14.1372, 0.305", "249.714, 252.552, 13.9768, 0.305", "250.577, 251.805, 13.8242, 0.2796", "251.435, 251.05, 13.7917, 0.2542", "251.571, 250.029, 12.7884, 0.2288", "251.251, 248.939, 12.5983, 0.2796", "251.297, 247.797, 12.5628, 0.356", "251.626, 246.708, 12.3012, 0.483", "251.68, 245.617, 11.48, 0.5338" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "260.565, 294.605, 23.5511, 0.5592", "260.182, 294.873, 22.6019, 0.5592", "259.917, 295.713, 22.085, 0.4576", "259.988, 296.296, 20.5097, 0.4322", "260.603, 296.296, 19.04, 0.4576", "259.447, 296.283, 18.48, 0.4322", "259.332, 296.83, 17.7957, 0.3304", "259.193, 296.741, 16.6443, 0.2542", "258.76, 296.423, 16.52, 0.3814", "258.43, 296.283, 16.7689, 0.3304", "258.456, 295.368, 16.8507, 0.483", "258.315, 294.601, 16.3192, 0.5084", "258.885, 293.894, 16.0045, 0.483", "259.402, 293.884, 15.3269, 0.483" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "260.565, 294.605, 23.5511, 0.5592", "260.159, 294.351, 23.5505, 0.305", "259.479, 293.888, 24.7436, 0.305", "258.773, 293.494, 26.04, 0.305", "258.171, 292.87, 25.2, 0.305", "257.791, 291.92, 24.3617, 0.2796", "256.986, 291.179, 24.08, 0.2542", "256.074, 290.805, 24.08, 0.2542", "255.388, 290.233, 24.64, 0.2796", "254.477, 289.988, 24.6218, 0.305", "253.788, 289.89, 26.2909, 0.2796", "252.968, 289.375, 26.8954, 0.305", "251.964, 289.137, 26.6, 0.3304", "251.455, 288.33, 27.8015, 0.4068", "250.76, 287.484, 27.72, 0.4322", "249.91, 287.027, 26.9511, 0.5084", "249.296, 286.292, 26.7999, 0.5592", "248.543, 285.76, 26.9609, 0.6102", "247.634, 285.301, 27.1547, 0.5848", "246.656, 285.101, 27.1261, 0.5592", "246.3, 284.754, 26.1864, 0.5338", "245.373, 284.538, 26.5849, 0.5338" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "256.24, 308.206, 23.5234, 0.5848", "255.46, 308.44, 23.5211, 0.305", "254.347, 308.683, 23.518, 0.2796", "253.396, 309.147, 23.5088, 0.2542", "252.618, 309.98, 23.4702, 0.2288", "251.61, 310.474, 23.2459, 0.2796", "250.488, 310.526, 23.2436, 0.3814", "249.497, 310.142, 24.0481, 0.5084", "248.852, 309.543, 25.751, 0.5338", "248.272, 308.649, 26.6616, 0.5084", "247.371, 307.968, 26.7386, 0.483", "246.322, 307.523, 26.6008, 0.5084", "245.326, 306.963, 26.5146, 0.483", "244.454, 306.225, 26.3696, 0.3814", "243.508, 305.596, 26.6417, 0.3304", "242.838, 304.672, 26.8531, 0.3304", "242.098, 303.801, 26.8069, 0.4322", "241.153, 303.225, 26.1433, 0.4322", "240.155, 302.718, 25.5646, 0.4576", "239.604, 302.347, 26.9732, 0.4068", "239.554, 301.648, 26.9422, 0.4322", "239.414, 301.673, 25.8222, 0.3814", "238.791, 301.292, 25.2, 0.3304", "238.384, 300.783, 25.76, 0.4576" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "256.24, 308.206, 23.5234, 0.5848", "255.859, 309.22, 21.406, 0.5084" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "252.697, 278.996, 34.8132, 0.3814", "252.392, 278.653, 34.16, 0.4322", "251.896, 278.335, 34.4089, 0.3814", "251.222, 278.233, 34.4711, 0.4068", "250.841, 278.132, 34.4711, 0.4068", "250.663, 277.649, 34.4711, 0.4068", "250.536, 277.534, 35.28, 0.4576", "250.523, 277.216, 35.7468, 0.4322", "250.536, 276.861, 35.5911, 0.3814", "250.574, 276.505, 36.3068, 0.4068", "250.65, 276.162, 36.4, 0.3814", "250.688, 275.856, 36.4, 0.305", "250.765, 275.018, 36.4, 0.2542", "250.765, 274.674, 36.4, 0.305", "250.917, 274.255, 36.6178, 0.4068", "250.765, 273.975, 36.3689, 0.3304", "250.765, 273.645, 36.4, 0.305", "250.676, 273.416, 36.7422, 0.305", "250.536, 272.958, 37.24, 0.2542", "250.536, 272.615, 37.24, 0.2288", "250.714, 272.386, 37.1157, 0.2288", "250.777, 272.17, 36.4, 0.305", "250.879, 271.929, 36.68, 0.305", "251.031, 271.738, 37.24, 0.2288", "251.108, 271.7, 37.8, 0.2288", "251.108, 271.7, 38.36, 0.2288", "251.108, 271.7, 38.92, 0.2288", "251.108, 271.65, 39.6357, 0.2288", "251.197, 271.433, 40.0089, 0.2288", "251.337, 271.242, 40.04, 0.2542", "251.553, 271.039, 39.9468, 0.305", "251.566, 270.772, 39.5111, 0.2796", "251.82, 270.352, 39.2, 0.305", "252.112, 269.882, 39.2932, 0.356", "252.29, 269.526, 39.6668, 0.356", "252.379, 269.425, 40.04, 0.3304", "252.557, 269.412, 40.4132, 0.2796", "252.71, 269.412, 40.6, 0.2542", "252.913, 269.412, 40.9422, 0.305", "253.053, 269.335, 41.2532, 0.2288", "253.167, 269.107, 41.3468, 0.2288", "253.167, 268.827, 40.9111, 0.2542", "253.282, 268.268, 40.88, 0.4322", "253.371, 267.887, 40.3511, 0.5592", "253.777, 267.391, 40.32, 0.483", "254.299, 267.226, 40.88, 0.5084", "254.769, 267.047, 41.2532, 0.4068", "255.162, 266.831, 41.72, 0.305", "255.646, 266.514, 41.72, 0.2796", "256.016, 266.082, 41.72, 0.305", "256.497, 265.866, 41.4711, 0.3814", "256.905, 265.866, 41.3468, 0.3814", "257.057, 265.853, 41.1911, 0.2542", "257.273, 265.637, 41.1289, 0.3304", "257.286, 265.408, 40.9422, 0.2542", "257.286, 265.294, 41.44, 0.2288", "257.286, 265.179, 42.0, 0.2288", "257.425, 264.95, 42.4978, 0.2288", "257.629, 264.95, 42.84, 0.2288", "257.793, 264.95, 43.5557, 0.2288", "258.01, 264.95, 43.8668, 0.2542", "258.315, 264.95, 43.96, 0.305", "259.066, 265.027, 43.9289, 0.4322", "259.003, 264.988, 42.6532, 0.4322", "259.345, 265.065, 41.72, 0.305", "259.574, 265.065, 41.5022, 0.2542", "259.815, 265.065, 41.6889, 0.305", "260.031, 265.052, 42.2489, 0.4068", "260.031, 264.645, 42.4668, 0.4068", "260.044, 264.162, 42.0, 0.305", "260.26, 264.15, 41.72, 0.2542", "260.718, 264.15, 41.72, 0.2288", "261.061, 264.15, 41.72, 0.2288", "261.964, 264.15, 41.6889, 0.2288", "262.217, 264.15, 41.4711, 0.2542", "262.548, 264.15, 41.44, 0.2796", "262.841, 264.112, 41.4711, 0.3304", "262.968, 264.023, 41.7822, 0.356", "263.043, 263.921, 42.1868, 0.356", "263.171, 263.806, 42.7157, 0.4322", "263.349, 263.844, 43.0268, 0.3304", "263.603, 264.01, 43.12, 0.4068", "263.921, 264.035, 43.12, 0.4576", "264.645, 263.844, 42.28, 0.3814", "264.951, 263.921, 42.28, 0.3814" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "252.697, 278.996, 34.8132, 0.3814", "252.527, 277.91, 34.1866, 0.3814", "253.047, 277.314, 33.7764, 0.4068", "253.34, 276.284, 33.8184, 0.4322", "253.325, 275.198, 33.9083, 0.4576", "253.45, 274.303, 33.1262, 0.4576", "253.736, 273.236, 32.9353, 0.4576", "254.412, 272.573, 33.3976, 0.4576", "254.197, 271.781, 34.3991, 0.4322", "254.4, 270.956, 32.7429, 0.4068", "254.766, 270.27, 31.2998, 0.3814", "255.305, 269.33, 30.7955, 0.3814", "255.505, 268.564, 30.24, 0.3814", "255.913, 267.821, 29.4468, 0.3814", "256.02, 266.92, 29.1169, 0.4068", "256.36, 266.136, 29.3334, 0.4322", "256.828, 265.216, 29.3947, 0.4322", "256.718, 264.127, 29.3605, 0.3814", "256.942, 263.208, 28.8229, 0.356", "257.046, 262.177, 28.0252, 0.3814", "257.699, 261.26, 28.0, 0.4322", "257.858, 260.162, 28.0255, 0.4322", "258.123, 259.087, 27.5531, 0.3814", "258.77, 258.161, 27.44, 0.3304", "259.052, 257.248, 27.6889, 0.356", "259.268, 255.989, 26.88, 0.4576", "259.029, 255.614, 25.7796, 0.4322", "258.887, 254.624, 25.6589, 0.4322", "258.887, 253.528, 26.2534, 0.4068", "258.626, 252.549, 25.3473, 0.4068", "258.062, 251.753, 25.1689, 0.3814", "258.052, 250.71, 24.3911, 0.4068", "257.567, 249.969, 25.1658, 0.4068", "257.025, 249.239, 24.36, 0.3814", "256.677, 248.177, 24.269, 0.305", "256.573, 247.05, 24.0562, 0.2542", "256.485, 245.922, 24.3289, 0.2288", "256.027, 244.93, 23.7997, 0.2542", "255.493, 244.454, 22.7119, 0.2796", "255.215, 243.584, 22.1477, 0.305", "254.535, 242.663, 22.12, 0.305", "253.942, 241.697, 22.0682, 0.305", "253.689, 240.858, 22.0567, 0.305", "253.751, 239.872, 21.56, 0.2796", "253.968, 238.809, 21.56, 0.2542", "253.968, 237.665, 21.56, 0.2288", "253.968, 236.521, 21.56, 0.2288", "253.968, 235.377, 21.56, 0.2288", "254.122, 234.257, 21.56, 0.2288", "254.408, 233.15, 21.56, 0.2288", "254.576, 232.024, 21.56, 0.2288", "255.57, 231.66, 21.56, 0.2542" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "283.953, 284.615, 26.88, 0.4068", "283.747, 284.139, 26.2833, 0.3304", "284.145, 283.598, 25.4568, 0.3304", "284.242, 282.978, 23.5847, 0.305", "284.514, 281.936, 24.0873, 0.356", "284.311, 281.316, 25.9678, 0.4068", "284.398, 280.392, 25.0163, 0.4576", "284.171, 279.32, 24.6168, 0.4322", "284.251, 278.372, 23.2778, 0.4068", "284.177, 277.328, 23.9778, 0.3814", "284.19, 276.394, 23.24, 0.356", "284.055, 275.425, 22.4602, 0.3304", "284.044, 274.399, 21.8949, 0.305", "284.284, 273.327, 22.239, 0.305", "284.177, 272.653, 21.0804, 0.305", "284.556, 271.91, 22.3138, 0.305", "285.428, 272.272, 22.96, 0.3304" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "283.953, 284.615, 26.88, 0.4068", "283.103, 283.968, 26.88, 0.4322", "282.272, 283.247, 26.88, 0.4576", "281.654, 282.856, 28.2618, 0.4322", "280.843, 282.288, 28.8431, 0.4322", "279.865, 282.188, 30.1689, 0.4576", "279.07, 281.967, 28.9265, 0.5592", "278.628, 281.445, 27.2569, 0.5848", "277.807, 281.429, 28.2254, 0.5338", "277.132, 281.318, 29.9592, 0.4068", "276.276, 281.108, 30.4142, 0.356", "275.52, 280.391, 29.8696, 0.356", "274.763, 279.707, 29.0178, 0.356", "273.736, 279.555, 29.4288, 0.356", "273.077, 279.136, 29.9236, 0.356", "272.138, 279.022, 29.12, 0.3814", "271.454, 278.617, 27.6489, 0.3304", "270.5, 278.221, 26.9861, 0.2796", "269.793, 278.068, 25.48, 0.2542", "269.184, 277.306, 25.48, 0.3304" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "289.21, 280.81, 20.4506, 0.483", "288.78, 279.726, 20.7959, 0.356", "288.747, 278.597, 20.5436, 0.3304", "288.757, 277.478, 19.959, 0.3304", "289.073, 276.465, 18.9773, 0.3814", "289.704, 275.566, 18.244, 0.4068", "290.479, 274.729, 18.0975, 0.4068", "291.174, 273.822, 17.9726, 0.3814", "291.595, 272.763, 18.1409, 0.4322", "292.086, 271.731, 18.1591, 0.483", "292.824, 270.861, 17.9724, 0.5084", "293.686, 270.111, 17.9309, 0.4576", "294.727, 269.636, 17.9866, 0.4068", "295.46, 268.776, 18.3677, 0.4068", "296.151, 268.172, 17.6638, 0.3814", "296.855, 267.455, 17.64, 0.305", "297.135, 267.099, 16.2711, 0.2542" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "289.21, 280.81, 20.4506, 0.483", "290.169, 281.33, 19.502, 0.3304", "291.056, 282.043, 19.7456, 0.4576", "292.033, 282.635, 19.7641, 0.5592", "292.97, 283.283, 19.9536, 0.5592", "293.831, 283.974, 20.6662, 0.483", "294.772, 284.605, 20.9762, 0.4068", "295.751, 284.978, 19.9276, 0.4068", "295.61, 285.2, 19.0316, 0.4322", "296.218, 285.457, 17.3799, 0.4576", "296.639, 286.271, 18.1471, 0.4322", "297.286, 287.063, 18.2, 0.4068", "297.832, 287.801, 18.7312, 0.356", "298.621, 287.613, 20.4607, 0.3304", "299.504, 287.653, 21.4973, 0.2796", "300.284, 288.191, 21.6395, 0.2542", "300.438, 289.284, 21.8238, 0.2288", "301.076, 289.89, 21.079, 0.2288", "301.214, 290.243, 18.8947, 0.2796", "301.287, 290.863, 17.1704, 0.356", "301.968, 291.487, 16.1168, 0.4576", "303.02, 291.72, 16.6936, 0.483", "303.503, 291.773, 17.379, 0.483", "303.961, 292.235, 18.4811, 0.483", "304.352, 292.933, 19.32, 0.5084", "304.952, 293.674, 18.76, 0.5084", "305.766, 294.423, 19.0876, 0.4576", "306.4, 295.18, 17.8805, 0.3814", "306.754, 296.161, 18.1392, 0.356", "307.421, 296.518, 19.973, 0.3814", "308.194, 296.738, 20.47, 0.4576", "309.16, 296.688, 20.0452, 0.5084", "310.024, 297.18, 19.8229, 0.5338", "310.832, 297.116, 20.72, 0.5592", "311.916, 297.286, 20.2135, 0.5848", "312.541, 297.567, 18.3042, 0.5592", "313.038, 298.2, 17.5941, 0.4576", "313.775, 299.039, 17.1391, 0.356", "314.646, 299.385, 17.7358, 0.356", "315.755, 299.543, 18.0452, 0.4322", "316.605, 300.028, 19.2928, 0.483", "317.53, 299.988, 20.148, 0.4322", "318.287, 300.3, 21.5334, 0.356", "318.831, 300.919, 20.3851, 0.3304", "319.329, 301.637, 19.0795, 0.356", "320.197, 301.82, 18.6497, 0.356", "320.913, 302.297, 19.8229, 0.305", "321.428, 302.908, 20.9132, 0.2796", "321.734, 303.596, 21.7669, 0.2796", "322.52, 304.152, 20.3521, 0.3304", "322.939, 304.345, 18.2294, 0.3304", "323.981, 304.304, 17.36, 0.3304" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "259.402, 293.884, 15.3269, 0.483", "259.003, 293.474, 13.5332, 0.5338", "258.582, 293.093, 13.9068, 0.5338", "257.743, 292.826, 12.9732, 0.4068", "257.438, 292.521, 12.7868, 0.4068", "257.21, 292.444, 12.04, 0.305", "256.828, 292.521, 11.76, 0.2542", "256.574, 292.597, 11.7289, 0.2288", "256.116, 292.635, 10.9822, 0.2288", "256.167, 292.762, 10.4532, 0.2288", "256.333, 292.889, 10.3289, 0.2288", "256.333, 293.093, 9.3332, 0.2288", "256.218, 293.004, 8.7111, 0.2542", "256.104, 292.75, 8.4932, 0.2542", "255.836, 292.369, 8.4, 0.2288", "255.798, 292.063, 8.4, 0.2288", "255.761, 291.758, 8.4, 0.2288", "255.455, 291.606, 8.4, 0.2288", "255.15, 291.568, 8.4, 0.2288", "254.731, 291.364, 9.1157, 0.483", "254.527, 291.339, 10.1422, 0.4576", "254.197, 291.034, 10.64, 0.4068", "254.082, 290.462, 10.64, 0.5338", "253.866, 290.068, 11.1068, 0.3814", "253.701, 289.813, 11.2, 0.356", "253.473, 289.368, 10.8889, 0.356", "253.053, 289.241, 10.7332, 0.4068", "252.633, 288.822, 10.92, 0.305", "252.595, 288.517, 10.92, 0.2542", "252.366, 288.288, 10.92, 0.2288", "252.1, 288.211, 10.92, 0.2288", "251.794, 287.843, 10.6711, 0.2288", "251.782, 287.538, 11.0132, 0.2288", "251.553, 287.157, 11.48, 0.356", "251.299, 286.724, 11.48, 0.3814", "250.994, 286.686, 10.64, 0.3814", "250.904, 286.649, 10.1111, 0.2542", "250.536, 286.458, 9.8622, 0.4576", "250.422, 286.102, 9.5511, 0.2288", "250.18, 285.898, 9.24, 0.2288", "249.85, 286.0, 9.24, 0.2288", "249.646, 286.077, 9.4889, 0.305", "249.456, 285.707, 9.52, 0.4322", "248.972, 285.644, 9.8622, 0.3814", "248.756, 285.542, 10.2043, 0.3304", "248.706, 285.542, 10.92, 0.3304", "248.502, 285.326, 11.3868, 0.4322", "248.273, 285.276, 10.9511, 0.2542", "248.057, 285.06, 10.9511, 0.2796", "248.019, 284.843, 11.4489, 0.305", "248.096, 284.513, 11.5732, 0.2288", "248.134, 284.373, 11.9778, 0.2288", "248.096, 284.195, 12.2889, 0.2288", "248.019, 284.017, 12.5068, 0.2288", "247.599, 283.674, 12.32, 0.2288", "247.383, 283.483, 11.9157, 0.2288", "247.154, 283.483, 11.3557, 0.305", "246.799, 283.369, 11.5732, 0.356", "246.57, 283.217, 11.76, 0.2542", "246.189, 282.911, 11.48, 0.2288", "245.973, 282.797, 11.4489, 0.2288", "245.744, 282.835, 10.7957, 0.2288", "245.54, 282.797, 10.2668, 0.2288", "245.311, 282.708, 9.8311, 0.2288", "245.388, 282.428, 9.5822, 0.2288", "245.236, 282.034, 9.24, 0.305", "245.159, 281.755, 9.4889, 0.305", "245.286, 281.17, 9.7068, 0.305", "245.426, 280.763, 10.0489, 0.2796", "245.54, 280.559, 10.0489, 0.305", "245.769, 280.242, 9.52, 0.4576", "245.719, 279.644, 9.6132, 0.5338", "245.629, 279.556, 10.5157, 0.3814", "245.795, 279.479, 10.7643, 0.356", "245.922, 279.467, 11.2622, 0.3304", "246.062, 279.238, 11.48, 0.2796", "245.998, 278.907, 11.6668, 0.2288", "245.871, 278.641, 10.9511, 0.3814", "245.617, 278.335, 10.64, 0.3304", "245.604, 277.89, 10.64, 0.4322", "245.286, 277.445, 10.2668, 0.4322", "245.274, 276.861, 9.8311, 0.483", "245.49, 276.492, 10.36, 0.4576", "245.35, 275.856, 10.36, 0.305", "245.286, 275.234, 10.36, 0.2288", "245.274, 274.903, 10.36, 0.2288", "245.197, 274.687, 10.2357, 0.2288", "245.07, 274.56, 9.1778, 0.305", "244.93, 274.293, 8.7732, 0.3304", "244.854, 273.975, 9.5822, 0.3814", "244.93, 273.429, 9.8311, 0.3814", "244.816, 273.048, 10.5778, 0.305", "244.778, 272.946, 11.0757, 0.2542", "244.689, 272.73, 11.4489, 0.2288", "244.6, 272.488, 11.48, 0.2288", "244.498, 272.132, 11.48, 0.2288", "244.257, 271.814, 11.7289, 0.2542", "244.117, 271.471, 10.6711, 0.356", "244.015, 271.128, 10.08, 0.5592", "244.015, 270.606, 10.2357, 0.5848", "244.117, 270.263, 11.0132, 0.4322", "243.876, 270.009, 11.48, 0.2796", "243.913, 269.526, 11.2311, 0.2796", "244.13, 269.171, 11.1689, 0.305", "244.015, 268.713, 10.6711, 0.4322", "243.824, 268.382, 11.0132, 0.305", "243.749, 268.37, 11.6357, 0.2288", "243.672, 268.179, 12.1022, 0.2288", "243.672, 267.925, 12.32, 0.356", "243.761, 267.709, 12.2268, 0.305", "243.99, 267.696, 11.4178, 0.3304", "244.015, 267.353, 10.92, 0.4576", "244.015, 267.01, 10.64, 0.2542", "244.015, 266.781, 10.36, 0.2542", "244.028, 266.45, 10.36, 0.305", "244.206, 266.196, 10.9822, 0.356", "244.423, 265.93, 11.2, 0.3304", "244.473, 265.294, 11.48, 0.3814", "244.473, 264.938, 11.2311, 0.483", "244.816, 263.959, 11.6668, 0.356", "244.816, 263.234, 11.48, 0.305", "244.816, 262.941, 11.3557, 0.305", "244.816, 262.548, 10.64, 0.4068", "244.854, 261.963, 11.3557, 0.305", "245.007, 261.862, 11.5732, 0.2796", "244.968, 261.697, 12.0089, 0.2796", "244.829, 261.29, 12.0089, 0.3304", "244.816, 261.163, 11.2311, 0.2796", "244.854, 260.972, 10.6711, 0.2288", "245.02, 260.692, 10.92, 0.356", "245.299, 260.298, 10.6711, 0.3304", "245.465, 259.879, 10.92, 0.2542", "245.579, 259.561, 10.2978, 0.305", "245.795, 259.294, 10.08, 0.356", "245.96, 259.103, 10.3289, 0.305", "246.164, 258.976, 10.36, 0.2288", "246.303, 258.887, 10.36, 0.305", "246.38, 258.569, 10.8889, 0.3814", "246.303, 258.315, 10.92, 0.356", "246.291, 258.061, 11.1068, 0.305", "246.074, 257.756, 11.4489, 0.2288", "246.074, 257.4, 10.92, 0.2288", "246.074, 257.235, 10.4843, 0.2288", "246.074, 256.942, 10.36, 0.2288", "246.125, 256.726, 10.1732, 0.2288", "246.367, 256.663, 10.08, 0.2288", "246.418, 256.142, 10.08, 0.2288", "246.418, 255.849, 10.2043, 0.2288", "246.455, 255.316, 10.6711, 0.2288", "246.57, 255.035, 11.2, 0.2288", "246.939, 254.833, 11.48, 0.2288", "247.562, 254.426, 11.48, 0.2288", "247.892, 254.413, 11.48, 0.2288", "248.134, 254.311, 11.48, 0.2288", "248.325, 254.159, 11.48, 0.2288", "248.477, 253.968, 11.48, 0.2288", "248.82, 253.282, 11.48, 0.2288", "248.922, 253.053, 11.4489, 0.2288", "249.024, 252.938, 11.1378, 0.2542", "249.188, 252.938, 10.7022, 0.305", "249.43, 253.028, 10.1111, 0.483", "249.748, 253.129, 9.3643, 0.4322", "250.002, 252.938, 9.7068, 0.4576", "250.422, 252.938, 9.8, 0.4322", "250.79, 252.71, 9.7378, 0.3304", "250.956, 252.697, 10.1422, 0.305", "251.095, 252.506, 10.2668, 0.3304", "251.121, 252.404, 9.6443, 0.356", "251.528, 252.443, 9.24, 0.2796", "251.667, 252.366, 9.5511, 0.2288", "251.68, 252.138, 10.08, 0.4322", "252.023, 251.794, 10.36, 0.305", "252.557, 251.413, 10.36, 0.2288", "252.774, 251.286, 10.36, 0.2288", "252.926, 250.981, 10.64, 0.4322", "253.358, 250.498, 10.92, 0.4322", "253.446, 250.116, 11.4489, 0.2796", "253.612, 249.951, 11.48, 0.305", "253.918, 249.506, 11.0757, 0.4576", "253.968, 249.049, 10.64, 0.5592", "253.968, 248.579, 10.8889, 0.5084", "254.082, 247.981, 10.7332, 0.483", "254.375, 247.524, 10.6711, 0.6356", "254.54, 247.562, 11.2, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "259.402, 293.884, 15.3269, 0.483", "259.949, 293.339, 16.1574, 0.5084", "260.56, 293.649, 15.2936, 0.5084", "261.151, 293.661, 13.4084, 0.5084", "261.018, 293.007, 12.0498, 0.5084", "261.061, 292.093, 12.2889, 0.5084", "260.855, 291.715, 10.2612, 0.4322", "260.378, 290.927, 9.3929, 0.3304", "260.553, 289.879, 9.7247, 0.2542", "260.402, 288.811, 10.2564, 0.2288", "260.602, 288.278, 12.04, 0.2796", "260.641, 287.284, 12.7854, 0.356", "260.814, 286.596, 12.175, 0.4322", "260.554, 285.769, 13.0376, 0.4068", "260.478, 284.849, 12.5409, 0.3304", "260.958, 283.969, 11.8801, 0.305", "261.444, 282.999, 11.6318, 0.3814", "261.669, 282.093, 12.0935, 0.483", "261.977, 281.061, 12.6, 0.5084", "262.161, 280.019, 12.0938, 0.4322", "262.986, 279.433, 13.0592, 0.3814", "263.724, 278.795, 13.2563, 0.356", "264.483, 278.156, 13.1124, 0.3814", "264.448, 277.152, 12.04, 0.3814", "264.822, 276.167, 12.0949, 0.4068", "264.639, 275.341, 11.76, 0.4322", "264.578, 274.789, 13.3871, 0.4576", "265.115, 274.368, 15.1354, 0.4068", "265.751, 273.875, 16.5197, 0.356", "266.11, 272.845, 15.834, 0.305", "266.288, 271.83, 15.1948, 0.3304", "266.296, 271.293, 14.1868, 0.3814", "266.879, 270.41, 14.8098, 0.4322", "267.386, 269.436, 14.56, 0.4576", "267.66, 268.462, 13.8068, 0.4322", "267.329, 267.569, 13.5352, 0.3814", "267.06, 266.562, 14.2055, 0.305", "266.788, 265.589, 14.4264, 0.2796", "266.523, 264.652, 13.673, 0.305", "266.883, 263.828, 12.8246, 0.3814", "266.983, 263.114, 14.2139, 0.4322", "267.01, 262.046, 14.4161, 0.4322", "266.684, 261.436, 13.09, 0.3814", "266.799, 260.923, 13.4179, 0.3304", "266.771, 260.035, 14.5519, 0.305", "266.819, 259.33, 15.4644, 0.305", "266.781, 258.264, 16.4363, 0.2796", "266.655, 257.54, 14.9596, 0.2796", "266.438, 256.578, 14.6031, 0.305", "265.764, 256.37, 15.3628, 0.356", "265.776, 255.547, 16.0776, 0.356", "265.648, 254.719, 16.5984, 0.305", "265.866, 253.745, 15.9583, 0.2796", "265.065, 253.739, 15.68, 0.2796" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "245.373, 284.538, 26.5849, 0.5338", "244.918, 284.411, 26.32, 0.4322", "244.346, 284.182, 26.32, 0.5338", "243.749, 283.979, 25.76, 0.6102", "243.177, 283.826, 26.2268, 0.4576", "242.68, 283.369, 26.9732, 0.305", "242.388, 283.051, 27.16, 0.4322", "242.197, 282.873, 27.9378, 0.5084", "242.108, 282.416, 29.12, 0.483", "242.07, 282.009, 29.4311, 0.4322", "242.058, 281.665, 29.96, 0.4068", "242.058, 281.208, 30.24, 0.4576", "241.854, 280.738, 30.5511, 0.4322", "241.549, 280.573, 30.8, 0.4068", "241.193, 280.382, 31.1422, 0.3814", "240.964, 280.293, 31.9822, 0.305", "240.914, 280.458, 32.2932, 0.2796", "240.723, 280.471, 32.7289, 0.2288", "240.558, 280.382, 32.9468, 0.2288", "240.24, 280.28, 32.48, 0.2542", "240.278, 280.293, 31.7643, 0.2796", "240.342, 280.293, 30.8, 0.4576", "239.782, 280.28, 30.8, 0.5848", "239.668, 280.064, 31.3911, 0.3814", "239.782, 279.822, 32.2, 0.2542", "239.732, 279.746, 32.7289, 0.2288", "239.452, 279.581, 32.76, 0.2288", "239.363, 279.365, 32.1068, 0.305", "239.146, 279.315, 31.08, 0.3304", "238.994, 279.022, 30.7689, 0.2796", "239.058, 278.984, 29.96, 0.2288", "239.096, 278.691, 29.7111, 0.2288", "239.109, 278.45, 29.9289, 0.305", "239.325, 278.233, 29.3689, 0.305", "239.325, 277.878, 28.56, 0.3814", "239.121, 277.547, 28.6532, 0.3814", "238.969, 277.433, 29.12, 0.2288", "238.689, 277.42, 29.8043, 0.2288", "238.638, 277.306, 30.24, 0.2288", "238.638, 277.179, 30.7689, 0.2288", "238.638, 276.517, 30.7689, 0.2796", "238.41, 275.818, 29.96, 0.3304", "238.41, 275.259, 29.3689, 0.3814", "238.257, 274.827, 28.84, 0.4068", "238.181, 274.293, 28.3732, 0.4068", "237.977, 273.734, 28.28, 0.4068", "237.825, 273.2, 28.0, 0.4576", "237.494, 272.717, 28.0311, 0.4322", "237.418, 272.056, 28.1557, 0.3304", "237.24, 271.725, 27.44, 0.2542", "236.808, 271.357, 27.44, 0.2288", "236.592, 271.23, 27.44, 0.2288", "236.579, 270.899, 27.44, 0.2288", "236.579, 270.67, 27.44, 0.2288", "236.579, 270.442, 27.44, 0.2288", "236.541, 269.564, 27.44, 0.2542", "236.427, 268.89, 27.4711, 0.305", "236.35, 268.535, 27.9068, 0.4068", "236.198, 268.154, 27.5332, 0.305", "236.122, 267.696, 27.44, 0.2542", "236.122, 267.353, 27.44, 0.2288", "236.35, 266.781, 27.44, 0.2796" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "245.373, 284.538, 26.5849, 0.5338", "244.339, 284.214, 26.2189, 0.5084", "243.473, 284.127, 25.48, 0.4322", "243.01, 283.609, 26.6412, 0.3814", "241.995, 283.369, 27.4128, 0.4068", "241.281, 282.976, 26.1184, 0.5084", "240.314, 282.986, 25.76, 0.5848", "239.432, 282.473, 25.2526, 0.5592", "238.609, 281.823, 25.1698, 0.483", "238.165, 281.107, 24.2962, 0.3814", "237.357, 280.479, 24.568, 0.356", "236.767, 279.615, 23.9512, 0.4068", "236.139, 279.18, 23.2669, 0.483", "235.226, 278.893, 23.9417, 0.5338", "234.657, 278.033, 25.0356, 0.5084", "233.972, 277.31, 24.4275, 0.5084", "233.183, 276.723, 23.5376, 0.5338", "232.831, 275.958, 24.0612, 0.5848", "232.568, 275.247, 23.6401, 0.5848", "232.194, 274.408, 23.52, 0.5338", "231.855, 273.441, 22.78, 0.483", "231.59, 272.501, 22.7394, 0.4322", "231.447, 271.482, 22.5305, 0.4068", "230.617, 270.75, 22.68, 0.356", "229.817, 270.111, 22.12, 0.356", "228.943, 269.402, 22.1001, 0.3304", "227.998, 269.032, 22.3672, 0.3304", "227.29, 268.321, 22.7716, 0.3304", "226.934, 267.381, 22.7648, 0.3814", "226.531, 266.543, 22.6254, 0.4576", "225.839, 265.851, 22.5613, 0.4576", "225.39, 264.837, 22.2222, 0.4068", "224.682, 264.15, 21.56, 0.305", "223.925, 263.536, 21.28, 0.2542", "223.758, 262.529, 20.8272, 0.2288", "223.003, 261.761, 20.44, 0.2542", "222.021, 261.213, 20.3468, 0.2796", "221.042, 260.659, 20.4532, 0.3304", "220.255, 259.857, 20.8068, 0.356", "219.34, 259.243, 20.3008, 0.3814", "218.599, 258.481, 20.463, 0.356", "217.98, 257.586, 20.2059, 0.3304", "217.399, 256.639, 20.1398, 0.3304", "216.606, 255.86, 20.1908, 0.3814", "215.868, 255.055, 20.6648, 0.4576", "215.208, 254.364, 20.3829, 0.5338", "214.843, 253.669, 20.2468, 0.6102", "214.611, 252.818, 20.7208, 0.6864", "214.373, 251.919, 20.8894, 0.7372", "213.79, 251.003, 20.2994, 0.7372", "213.149, 250.115, 19.6742, 0.6864", "212.441, 249.478, 19.6893, 0.6356", "211.838, 248.827, 19.8069, 0.6356", "211.373, 247.828, 19.32, 0.661", "211.016, 247.199, 19.0809, 0.661", "210.448, 246.305, 18.2157, 0.5848", "209.858, 245.587, 17.4216, 0.483", "209.338, 244.711, 18.2, 0.4068", "209.06, 243.654, 17.6946, 0.3814", "208.444, 242.888, 16.6166, 0.3814", "208.437, 241.75, 16.52, 0.356", "208.391, 241.033, 17.4471, 0.356", "207.905, 240.058, 17.9071, 0.356", "207.287, 239.21, 17.4135, 0.3814", "206.76, 238.606, 18.723, 0.3814", "205.947, 237.936, 18.4005, 0.356", "205.088, 237.317, 17.6879, 0.3304", "204.061, 236.85, 17.92, 0.2796", "203.374, 236.269, 16.7768, 0.2542", "202.407, 235.893, 16.079, 0.2542", "201.268, 235.88, 15.8987, 0.2796", "200.414, 235.55, 16.6732, 0.3304", "199.501, 235.099, 16.0983, 0.3304", "198.66, 234.769, 16.6499, 0.3304", "198.141, 234.062, 16.24, 0.2796", "197.531, 233.301, 16.8, 0.2796", "196.755, 232.646, 16.24, 0.2796", "196.023, 231.848, 15.96, 0.305", "195.611, 231.102, 15.2093, 0.2796", "194.938, 230.615, 14.28, 0.2796", "194.584, 229.605, 14.5334, 0.2796", "193.749, 229.193, 16.0152, 0.356", "192.866, 229.029, 15.7105, 0.3814", "192.035, 228.564, 15.3804, 0.4068", "191.248, 228.07, 14.28, 0.3304", "190.149, 227.872, 14.28, 0.2796", "189.246, 227.306, 13.8222, 0.2542", "188.133, 227.306, 13.72, 0.305", "187.49, 227.447, 12.7019, 0.3814", "186.639, 227.11, 12.32, 0.4068", "185.587, 227.201, 13.0018, 0.4068", "184.556, 227.148, 13.9793, 0.356", "183.559, 226.97, 14.8302, 0.3304", "182.921, 226.741, 14.6406, 0.2796", "182.085, 226.879, 14.5793, 0.2542", "181.083, 226.97, 14.0126, 0.2288", "180.225, 227.224, 12.8766, 0.2288", "179.798, 226.971, 13.3479, 0.2288", "179.179, 226.512, 11.9409, 0.2542", "178.049, 226.474, 11.76, 0.2796", "177.033, 226.04, 12.04, 0.3304", "176.285, 225.352, 12.04, 0.3304", "175.684, 224.434, 11.6827, 0.356", "174.988, 223.697, 10.4983, 0.356", "174.0, 223.229, 11.0177, 0.3814", "173.555, 222.422, 11.1129, 0.356", "172.858, 222.508, 10.08, 0.3814" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "238.384, 300.783, 25.76, 0.4576", "237.005, 300.847, 24.64, 0.483", "236.29, 300.828, 23.8263, 0.483", "235.316, 300.861, 24.3964, 0.4322", "234.247, 301.064, 24.3684, 0.356", "233.351, 301.33, 24.9502, 0.356", "232.429, 301.483, 24.3608, 0.4068", "231.4, 301.582, 24.0416, 0.4322", "230.603, 301.812, 22.96, 0.3814", "229.486, 301.887, 22.7738, 0.356", "228.466, 301.531, 22.0892, 0.356", "227.387, 301.438, 21.8694, 0.3814", "226.479, 301.786, 23.14, 0.3814", "225.852, 301.27, 22.321, 0.3814", "224.898, 301.139, 21.28, 0.3814", "224.033, 301.487, 21.7014, 0.3814", "223.61, 302.101, 21.4099, 0.3814", "222.563, 302.13, 21.0104, 0.356", "221.504, 302.032, 20.16, 0.305", "220.538, 302.56, 19.8192, 0.2542", "219.738, 303.02, 19.2772, 0.2288", "218.914, 303.596, 19.0288, 0.2542", "217.955, 303.888, 17.9077, 0.2796", "216.882, 304.164, 17.3496, 0.305", "216.02, 304.241, 15.836, 0.2796", "215.012, 303.788, 15.3297, 0.2796", "214.108, 303.837, 16.0048, 0.2796", "214.024, 304.576, 17.7596, 0.356", "213.259, 304.497, 18.4635, 0.4068", "212.721, 303.853, 17.36, 0.4576", "211.873, 303.618, 16.8882, 0.4322", "211.64, 303.745, 15.1239, 0.3814", "211.869, 304.309, 14.1994, 0.3814", "211.209, 304.645, 12.88, 0.3814", "210.066, 304.637, 12.88, 0.4068", "209.306, 304.19, 14.0006, 0.3304", "208.577, 304.67, 15.066, 0.2796", "207.92, 305.341, 14.56, 0.2542", "206.908, 305.805, 14.2954, 0.305", "206.006, 306.361, 13.8272, 0.356", "205.71, 305.649, 14.9999, 0.3814", "205.355, 305.334, 16.0588, 0.3814", "204.544, 305.334, 15.6111, 0.4068", "203.714, 305.172, 15.6038, 0.4068", "202.742, 305.105, 14.4488, 0.4322", "201.623, 305.107, 14.84, 0.4576", "200.48, 305.106, 14.84, 0.5084", "199.41, 304.878, 15.4227, 0.483", "198.363, 304.907, 16.24, 0.4068", "197.512, 304.839, 15.0567, 0.356", "196.518, 304.464, 14.84, 0.356", "195.519, 304.398, 14.1498, 0.356", "194.442, 304.399, 14.432, 0.305", "193.469, 304.239, 14.2708, 0.2542", "192.414, 304.494, 13.6942, 0.2288", "191.321, 304.533, 12.9914, 0.2288", "190.181, 304.533, 12.88, 0.2542", "189.074, 304.477, 13.2684, 0.305", "188.126, 304.592, 14.0504, 0.356", "187.498, 304.768, 15.1668, 0.4068", "186.7, 305.029, 16.3414, 0.4322", "185.918, 305.334, 16.0972, 0.4576", "184.845, 305.334, 15.7914, 0.4576", "183.827, 305.334, 15.7718, 0.4322", "182.824, 304.931, 15.68, 0.4576", "182.244, 304.876, 17.855, 0.483", "181.255, 304.982, 17.3222, 0.5592", "180.339, 305.105, 16.52, 0.5338", "179.576, 305.391, 17.563, 0.4576", "178.511, 305.447, 16.994, 0.356", "177.572, 305.496, 17.3382, 0.3304", "176.591, 305.219, 17.589, 0.3814", "175.709, 305.448, 17.6599, 0.4322", "174.724, 305.767, 16.8, 0.4576", "174.046, 305.808, 16.6956, 0.4322", "173.882, 305.455, 14.6866, 0.3814", "173.118, 305.739, 13.7897, 0.305", "172.299, 305.22, 13.7088, 0.2542", "172.058, 305.219, 15.4, 0.2542" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "238.384, 300.783, 25.76, 0.4576", "238.042, 300.77, 25.0152, 0.4068", "237.349, 300.612, 25.2151, 0.483", "237.041, 299.985, 27.1365, 0.5338", "236.214, 299.428, 27.16, 0.5338", "235.152, 299.267, 27.4238, 0.5338", "234.374, 299.016, 26.32, 0.5084", "233.353, 298.631, 26.5854, 0.4322", "232.35, 298.241, 26.3626, 0.356", "231.508, 297.796, 26.5378, 0.305" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "255.859, 309.22, 21.406, 0.5084", "254.788, 309.396, 22.01, 0.5338", "254.279, 310.253, 22.68, 0.483", "253.217, 310.173, 23.4063, 0.4576", "252.303, 310.596, 24.1503, 0.4068", "252.075, 311.488, 24.3267, 0.4322", "251.409, 312.331, 23.989, 0.4322", "250.761, 313.241, 24.08, 0.5084", "249.957, 313.795, 23.2509, 0.5592", "249.147, 314.408, 22.68, 0.5848", "248.828, 315.456, 22.097, 0.5338", "248.664, 316.334, 20.4184, 0.483", "248.742, 317.286, 19.9153, 0.483", "248.479, 318.062, 21.2607, 0.483", "248.545, 319.184, 21.6146, 0.4576", "248.313, 320.26, 22.1315, 0.3814", "248.272, 320.991, 23.788, 0.3814", "247.827, 321.751, 24.0867, 0.4068", "248.11, 322.447, 22.4773, 0.4576", "248.718, 323.219, 21.8445, 0.4576", "248.954, 324.278, 22.2989, 0.4576", "249.403, 325.246, 22.0598, 0.483", "249.727, 326.317, 21.7678, 0.483", "249.862, 327.306, 21.6712, 0.483", "250.276, 328.257, 22.1427, 0.4322", "250.329, 328.847, 23.0846, 0.4068", "251.087, 329.358, 22.6181, 0.4068", "251.553, 330.019, 23.4251, 0.4576", "251.777, 330.744, 22.9342, 0.5338", "252.066, 331.601, 22.3563, 0.5592", "252.581, 332.396, 21.6163, 0.5338", "252.919, 333.151, 23.0922, 0.4576", "253.053, 334.083, 23.6009, 0.4068", "253.33, 334.988, 22.6117, 0.3814", "253.665, 335.96, 23.5192, 0.4068", "254.195, 336.926, 23.24, 0.4068", "254.288, 336.794, 21.2128, 0.4068", "254.999, 337.547, 21.0, 0.356", "255.578, 338.355, 21.3125, 0.356", "256.326, 338.526, 20.0561, 0.3814", "256.988, 339.375, 20.3706, 0.4068", "257.352, 340.219, 20.3546, 0.4068", "258.016, 340.999, 21.28, 0.3814", "258.43, 341.859, 20.697, 0.3814", "258.701, 342.358, 22.0951, 0.356", "258.773, 343.345, 23.2215, 0.3304", "259.228, 344.208, 22.5319, 0.356", "259.671, 345.065, 21.1621, 0.4322", "259.766, 346.137, 20.44, 0.483", "260.316, 346.86, 20.7183, 0.4322", "260.484, 347.655, 21.84, 0.3304", "261.248, 348.081, 22.6862, 0.2542", "261.438, 348.766, 22.9757, 0.2288", "261.928, 349.491, 21.84, 0.2288", "262.41, 350.267, 21.1212, 0.2288", "262.404, 350.815, 19.36, 0.2542", "262.662, 351.735, 19.1937, 0.2796", "262.891, 352.365, 20.1281, 0.305", "262.809, 353.316, 19.32, 0.2796", "263.12, 354.284, 19.6, 0.2796", "263.072, 355.297, 20.683, 0.2796", "262.892, 356.347, 20.6178, 0.305", "263.054, 356.814, 21.985, 0.2796", "263.576, 357.573, 21.53, 0.2796", "263.366, 358.585, 20.9717, 0.2796", "263.578, 359.216, 20.44, 0.3304" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "255.859, 309.22, 21.406, 0.5084", "255.571, 308.474, 19.9458, 0.356", "254.881, 307.568, 20.0049, 0.3814", "254.329, 306.568, 20.0861, 0.483", "253.826, 305.553, 19.8808, 0.5338", "253.347, 304.597, 18.9014, 0.5592", "253.35, 303.643, 17.9766, 0.5084", "253.725, 302.578, 17.9995, 0.5338", "253.915, 301.471, 18.4744, 0.5592", "253.395, 300.482, 18.9969, 0.6102", "252.472, 299.809, 18.9249, 0.5848", "251.734, 298.982, 18.2613, 0.5338", "251.32, 297.977, 17.6526, 0.4576", "251.671, 296.9, 17.2542, 0.3814", "251.96, 295.802, 16.9604, 0.356", "251.873, 294.773, 16.5096, 0.4068", "251.003, 294.654, 15.6789, 0.5084", "249.975, 294.769, 14.9131, 0.5592", "248.907, 294.629, 14.0266, 0.5084", "247.967, 294.999, 12.9055, 0.4576", "246.884, 295.294, 12.4536, 0.4576", "245.834, 294.968, 11.8423, 0.5592", "246.576, 294.183, 11.181, 0.5848", "246.405, 293.983, 9.8932, 0.4576", "246.024, 293.817, 9.2711, 0.305", "245.642, 293.919, 8.96, 0.4068", "245.095, 294.224, 9.0532, 0.4068", "244.575, 294.224, 8.96, 0.5084", "243.901, 294.237, 9.24, 0.3814", "243.71, 294.326, 9.6132, 0.2542", "243.341, 294.313, 9.9243, 0.4576", "243.329, 294.618, 10.5468, 0.4322", "242.998, 294.821, 10.92, 0.305", "242.821, 295.025, 11.1068, 0.2288", "242.528, 295.038, 11.2, 0.2288", "242.197, 295.05, 11.2, 0.2542", "242.058, 295.152, 10.3911, 0.305", "241.651, 295.304, 10.08, 0.2542", "241.282, 295.343, 9.5822, 0.2542", "241.041, 295.266, 8.96, 0.356", "240.571, 295.165, 8.68, 0.356", "240.075, 294.974, 9.24, 0.5338", "239.566, 294.923, 9.5511, 0.5338", "239.046, 295.114, 9.5511, 0.5338", "238.181, 295.266, 8.96, 0.3814", "237.494, 295.152, 8.96, 0.2796", "237.151, 295.152, 8.96, 0.2288", "236.808, 295.152, 8.96, 0.2288", "236.503, 295.114, 8.96, 0.2288", "236.109, 295.025, 9.52, 0.2288", "235.778, 295.038, 9.52, 0.2288", "235.423, 295.038, 9.7689, 0.2288", "235.219, 295.038, 10.1111, 0.2288", "235.206, 294.961, 10.7332, 0.2288", "235.206, 294.873, 11.3557, 0.2288", "235.015, 294.694, 11.5732, 0.2288", "234.774, 294.796, 11.8532, 0.2288", "234.597, 294.694, 12.2268, 0.305", "234.152, 294.657, 12.2889, 0.4576", "233.732, 294.809, 11.4489, 0.4322", "233.274, 294.707, 10.92, 0.5084", "232.804, 294.987, 10.7957, 0.4322", "232.575, 294.923, 10.08, 0.3304" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "285.428, 272.272, 22.96, 0.3304", "285.516, 272.604, 23.5012, 0.2542", "286.146, 272.124, 23.5052, 0.2288", "286.125, 271.446, 24.9155, 0.2288", "286.115, 270.329, 24.4479, 0.2288", "286.115, 269.26, 23.6869, 0.2288", "285.771, 268.562, 23.2512, 0.2288", "285.57, 267.894, 24.8861, 0.2288", "285.771, 266.869, 25.3918, 0.2288", "285.594, 266.168, 27.4579, 0.2288", "285.314, 265.558, 27.8894, 0.2542", "284.645, 265.179, 26.9108, 0.2796", "284.083, 264.894, 28.8372, 0.3304", "284.184, 264.338, 28.28, 0.3304", "283.572, 263.832, 27.862, 0.3814", "283.104, 263.082, 28.4659, 0.4068", "282.603, 262.193, 29.3762, 0.483", "281.661, 261.75, 29.248, 0.4576", "281.05, 261.192, 29.7657, 0.4322", "280.224, 260.718, 28.8562, 0.356", "279.125, 260.497, 29.003, 0.3304", "278.106, 260.489, 29.68, 0.305" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "285.428, 272.272, 22.96, 0.3304", "286.138, 272.129, 23.4455, 0.305", "286.491, 271.419, 25.1502, 0.305", "286.913, 270.625, 25.7936, 0.2796", "287.024, 269.764, 26.4029, 0.2542", "287.642, 269.247, 24.92, 0.2288", "287.602, 268.421, 26.1327, 0.2288", "288.336, 267.762, 26.6, 0.2288", "288.632, 266.711, 26.8587, 0.2288", "289.236, 266.17, 26.0761, 0.2542", "288.873, 265.751, 25.1098, 0.2796", "289.544, 265.405, 23.8445, 0.3304", "289.775, 265.2, 22.4, 0.3304", "289.382, 264.185, 22.7195, 0.3304", "289.93, 264.471, 23.6928, 0.2796", "290.339, 264.051, 24.8979, 0.2796", "290.146, 263.499, 25.9106, 0.305", "290.951, 262.906, 26.1682, 0.3814", "291.484, 262.033, 27.0746, 0.4068", "291.274, 261.037, 26.2934, 0.3814", "291.878, 260.123, 26.32, 0.305", "292.78, 259.447, 26.32, 0.2542", "293.733, 258.928, 26.32, 0.2288", "293.779, 257.834, 26.7616, 0.2288", "293.783, 256.838, 27.8076, 0.2542", "294.174, 256.359, 29.3737, 0.2796", "294.901, 255.556, 29.2631, 0.305", "295.513, 254.645, 28.7151, 0.2796", "296.182, 254.025, 28.56, 0.2542", "296.635, 253.154, 28.5687, 0.2542", "297.211, 252.824, 29.96, 0.2796" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "297.135, 267.099, 16.2711, 0.2542", "297.483, 266.94, 15.4454, 0.3814", "298.001, 267.313, 14.7857, 0.305", "298.832, 267.115, 14.56, 0.2796", "299.754, 266.732, 13.596, 0.305", "300.684, 266.328, 13.624, 0.3814", "301.609, 266.247, 14.3111, 0.4322", "302.716, 266.061, 14.28, 0.4322", "303.638, 265.86, 14.5354, 0.3814", "304.667, 265.759, 13.8267, 0.305", "305.623, 265.997, 13.9493, 0.2796", "306.676, 266.093, 13.5439, 0.2796", "307.274, 266.093, 14.8224, 0.356", "308.324, 266.271, 15.12, 0.3814", "309.332, 266.494, 14.6269, 0.483", "310.135, 266.625, 12.9514, 0.5084", "311.077, 266.894, 13.4565, 0.5592", "312.105, 266.641, 14.2626, 0.4576", "313.243, 266.554, 14.2783, 0.3814", "314.05, 266.655, 12.8299, 0.356", "314.854, 266.552, 12.1657, 0.4322", "315.563, 266.93, 13.4585, 0.5084", "316.483, 266.981, 14.6964, 0.5084", "317.398, 266.895, 13.7315, 0.483", "318.337, 267.226, 12.6521, 0.483", "319.003, 267.558, 13.2286, 0.483", "319.846, 267.124, 12.0523, 0.483", "320.509, 266.646, 12.85, 0.4322", "321.113, 266.323, 11.6292, 0.4068", "322.036, 266.209, 12.32, 0.3814" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "297.135, 267.099, 16.2711, 0.2542", "297.224, 267.158, 15.7864, 0.356", "297.99, 266.745, 16.1473, 0.3304", "298.355, 266.346, 17.36, 0.2796", "298.632, 265.38, 17.08, 0.2542", "298.813, 264.285, 17.0996, 0.2288", "299.479, 263.56, 17.5006, 0.2542", "300.068, 262.638, 17.1167, 0.2796", "299.777, 261.624, 17.2738, 0.3304", "300.06, 260.825, 17.0657, 0.3304", "300.555, 259.848, 17.6019, 0.3304", "301.063, 258.887, 16.9868, 0.2796", "301.266, 258.43, 17.2357, 0.305", "301.559, 257.859, 17.1324, 0.3304", "301.102, 257.211, 16.9977, 0.3814", "300.822, 256.394, 16.581, 0.3304", "300.534, 255.382, 16.1899, 0.305", "300.565, 254.287, 15.6282, 0.2796", "300.632, 253.196, 14.8313, 0.3304", "300.414, 252.112, 14.56, 0.3304", "300.543, 251.11, 14.3242, 0.3304", "301.467, 250.53, 14.814, 0.2796", "301.975, 249.632, 14.5712, 0.2542", "301.994, 248.496, 14.4763, 0.2288", "301.787, 247.424, 13.746, 0.2542", "301.632, 246.305, 13.72, 0.2796", "301.057, 245.41, 13.8488, 0.305", "300.833, 244.418, 13.1692, 0.2796", "301.367, 243.469, 12.9626, 0.2542", "301.667, 242.385, 12.5902, 0.2542", "302.359, 241.727, 12.32, 0.305" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "231.508, 297.796, 26.5378, 0.305", "230.609, 297.494, 27.5416, 0.356", "230.143, 297.004, 28.56, 0.356", "230.032, 296.145, 28.0722, 0.305", "229.863, 295.036, 28.0, 0.2542", "229.236, 294.102, 28.0, 0.2542", "228.249, 293.779, 28.28, 0.305", "227.38, 293.108, 28.84, 0.356", "226.642, 292.284, 28.5698, 0.356", "225.664, 291.968, 28.28, 0.305", "225.326, 291.035, 28.0, 0.2542", "224.525, 290.536, 28.8128, 0.2288", "223.572, 290.062, 28.2621, 0.2542", "222.791, 289.517, 28.0, 0.305", "222.143, 288.784, 27.9692, 0.356", "221.223, 288.155, 27.7654, 0.356", "220.258, 287.83, 28.28, 0.305", "219.129, 287.716, 28.28, 0.2542", "218.567, 286.926, 28.28, 0.2288", "217.861, 286.088, 28.4676, 0.2288", "216.859, 285.771, 28.0, 0.2542", "215.885, 285.447, 28.7095, 0.2796", "215.245, 284.723, 28.7918, 0.305", "214.477, 284.325, 29.0136, 0.2796", "213.411, 284.057, 28.84, 0.2796", "212.392, 283.834, 29.1908, 0.3304", "211.511, 284.108, 28.3466, 0.4068", "211.526, 283.061, 27.6203, 0.4576", "211.06, 282.26, 26.7798, 0.4068", "210.01, 281.944, 26.6, 0.356", "209.119, 281.876, 27.3431, 0.2796", "208.485, 281.882, 29.3272, 0.2796", "207.766, 281.22, 29.9424, 0.2796", "207.699, 280.771, 28.28, 0.305", "207.182, 279.877, 28.0269, 0.2796", "206.208, 279.479, 27.2409, 0.2542", "205.683, 278.892, 26.4886, 0.2288", "204.996, 278.342, 27.4756, 0.2288", "204.602, 277.884, 29.188, 0.2288", "204.893, 277.195, 30.6057, 0.2288", "204.433, 276.994, 31.4451, 0.2542", "204.433, 275.879, 31.2953, 0.2796", "204.381, 274.923, 31.7702, 0.305", "204.547, 274.25, 32.97, 0.2796", "204.576, 273.243, 32.48, 0.305", "205.356, 272.839, 33.4068, 0.356", "205.462, 271.965, 32.48, 0.4322", "205.728, 271.23, 33.1876, 0.4068", "205.793, 270.35, 34.7108, 0.3304", "205.577, 269.288, 34.72, 0.2796", "205.7, 268.858, 33.178, 0.305", "205.768, 267.83, 33.7859, 0.356", "205.652, 266.788, 33.7011, 0.356", "205.801, 266.229, 35.0255, 0.305", "205.658, 265.382, 36.3731, 0.2542", "205.055, 264.479, 36.1984, 0.2288", "204.776, 263.468, 36.9527, 0.2542", "205.346, 262.642, 36.68, 0.305", "205.348, 261.862, 35.8963, 0.3814", "204.909, 261.626, 36.027, 0.4068", "204.589, 261.173, 37.6281, 0.3814", "204.069, 260.489, 38.2908, 0.3304", "203.528, 259.625, 38.7397, 0.305", "203.172, 258.643, 38.36, 0.305", "202.717, 257.759, 38.918, 0.2796", "202.519, 257.184, 40.1568, 0.2542", "202.96, 257.04, 37.9128, 0.2542", "202.792, 256.293, 36.6825, 0.2796", "202.073, 256.082, 35.9526, 0.3304", "201.916, 255.341, 34.16, 0.3304" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "231.508, 297.796, 26.5378, 0.305", "231.317, 297.741, 28.954, 0.356", "230.531, 297.421, 30.0712, 0.3814", "229.752, 298.003, 30.0546, 0.4322", "228.846, 298.283, 30.2711, 0.4322", "228.22, 299.021, 30.872, 0.4068", "227.528, 299.903, 30.9358, 0.4068", "226.869, 300.529, 29.7822, 0.4576", "226.176, 301.034, 30.7835, 0.4576", "225.75, 301.708, 31.92, 0.4576", "225.319, 302.644, 31.36, 0.4068", "224.642, 303.356, 31.922, 0.4068", "224.154, 304.075, 32.3842, 0.3304", "224.224, 304.747, 31.08, 0.2796", "223.468, 305.271, 31.3508, 0.2288", "222.485, 305.79, 31.64, 0.2288", "221.749, 306.452, 32.2, 0.2288", "220.626, 306.592, 32.2263, 0.2288", "219.911, 307.181, 32.76, 0.2542", "219.648, 307.85, 33.6, 0.305" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_37", "dend_24", "dend_17", "dend_0", "dend_39", "dend_38", "dend_36", "dend_25", "dend_21", "dend_18", "dend_10", "dend_1", "dend_43", "dend_40", "dend_31", "dend_26", "dend_23", "dend_22", "dend_20", "dend_19", "dend_14", "dend_11", "dend_5", "dend_2", "dend_42", "dend_41", "dend_33", "dend_32", "dend_28", "dend_27", "dend_16", "dend_15", "dend_13", "dend_12", "dend_9", "dend_6", "dend_4", "dend_3", "dend_35", "dend_34", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12569",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "axon_1", "axon_1", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "2.45"
  }, {
    "group" : "axon",
    "value" : "2.45"
  }, {
    "group" : "dend",
    "value" : "2.45"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "83.11"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0012797033",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "1.338307E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.559007",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "4.4545525E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.06191245",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.017232854",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.039659165",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.205513",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "8.181138E-4",
    "erev" : "-91.87816"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "8.8555017E-4",
    "erev" : "-91.87816"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "2.5457348E-5",
    "erev" : "-91.87816"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "6.7139865E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0036171298",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472421285

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_37, dend_24, dend_17, dend_0, dend_39, dend_38, dend_36, dend_25, dend_21, dend_18, dend_10, dend_1, dend_43, dend_40, dend_31, dend_26, dend_23, dend_22, dend_20, dend_19, dend_14, dend_11, dend_5, dend_2, dend_42, dend_41, dend_33, dend_32, dend_28, dend_27, dend_16, dend_15, dend_13, dend_12, dend_9, dend_6, dend_4, dend_3, dend_35, dend_34, dend_30, dend_29, dend_8, dend_7]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_12569, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_12569
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, axon_1, axon_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.49995698184633774)
    connect dend_37(0), soma_0(0.49995698184633774)
    connect dend_24(0), soma_0(0.49995698184633774)
    connect dend_17(0), soma_0(0.49995698184633774)
    connect dend_0(0), soma_0(0.49995698184633774)
    connect axon_1(0), axon_0(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 270.579, 304.19, 24.36, 11.6224 ) }
    soma_0 { pt3dadd( 276.39, 304.19, 24.36, 11.6224 ) }
    soma_0 { pt3dadd( 282.202, 304.19, 24.36, 11.6224 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 276.391, 304.19, 24.36, 1.0 ) }
    axon_0 { pt3dadd( 282.232, 318.006, 24.36, 1.0 ) }
    axon_0 { pt3dadd( 288.073, 331.822, 24.36, 1.0 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 274.102, 302.118, 35.033, 0.4576 ) }
    dend_37 { pt3dadd( 273.22, 301.672, 35.1957, 0.5338 ) }
    dend_37 { pt3dadd( 272.349, 301.336, 35.8784, 0.5084 ) }
    dend_37 { pt3dadd( 271.547, 301.02, 35.3284, 0.4068 ) }
    dend_37 { pt3dadd( 270.621, 300.682, 35.8728, 0.356 ) }
    dend_37 { pt3dadd( 269.505, 300.464, 35.84, 0.3814 ) }
    dend_37 { pt3dadd( 268.477, 300.644, 35.7997, 0.4068 ) }
    dend_37 { pt3dadd( 267.668, 299.949, 35.3604, 0.4068 ) }
    dend_37 { pt3dadd( 266.958, 299.119, 36.0472, 0.3814 ) }
    dend_37 { pt3dadd( 266.671, 298.03, 36.3972, 0.3814 ) }
    dend_37 { pt3dadd( 266.152, 297.024, 36.6842, 0.3814 ) }
    dend_37 { pt3dadd( 265.371, 296.199, 36.96, 0.356 ) }
    dend_37 { pt3dadd( 264.722, 295.495, 37.1048, 0.3304 ) }
    dend_37 { pt3dadd( 263.763, 295.27, 37.8498, 0.3304 ) }
    dend_37 { pt3dadd( 262.737, 294.853, 38.3558, 0.356 ) }
    dend_37 { pt3dadd( 261.785, 294.376, 37.8932, 0.3814 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 22/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 280.863, 302.186, 26.6507, 0.483 ) }
    dend_24 { pt3dadd( 281.342, 302.384, 25.76, 0.5592 ) }
    dend_24 { pt3dadd( 282.332, 302.245, 24.8377, 0.5084 ) }
    dend_24 { pt3dadd( 283.193, 302.13, 23.3632, 0.4576 ) }
    dend_24 { pt3dadd( 284.001, 301.929, 24.0285, 0.4322 ) }
    dend_24 { pt3dadd( 284.505, 302.041, 24.6417, 0.4576 ) }
    dend_24 { pt3dadd( 285.475, 301.504, 24.472, 0.5084 ) }
    dend_24 { pt3dadd( 286.27, 300.687, 24.6546, 0.483 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 30/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 274.155, 299.331, 26.1128, 0.2542 ) }
    dend_17 { pt3dadd( 273.432, 298.452, 25.8986, 0.2796 ) }
    dend_17 { pt3dadd( 272.822, 297.488, 25.8012, 0.3814 ) }
    dend_17 { pt3dadd( 272.313, 296.47, 25.9302, 0.4576 ) }
    dend_17 { pt3dadd( 271.916, 295.401, 26.1601, 0.5848 ) }
    dend_17 { pt3dadd( 271.503, 294.337, 26.3547, 0.5848 ) }
    dend_17 { pt3dadd( 270.93, 293.354, 26.6227, 0.6102 ) }
    dend_17 { pt3dadd( 270.531, 292.334, 27.4386, 0.5338 ) }
    dend_17 { pt3dadd( 270.206, 291.254, 27.7945, 0.483 ) }
    dend_17 { pt3dadd( 269.88, 290.185, 28.3352, 0.356 ) }
    dend_17 { pt3dadd( 269.332, 289.201, 28.8179, 0.356 ) }
    dend_17 { pt3dadd( 268.447, 288.488, 29.0676, 0.3814 ) }
    dend_17 { pt3dadd( 267.576, 287.75, 28.8887, 0.4576 ) }
    dend_17 { pt3dadd( 266.919, 286.823, 28.5779, 0.3814 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 44/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 271.154, 302.272, 24.3908, 0.4576 ) }
    dend_0 { pt3dadd( 270.343, 301.475, 24.1892, 0.5848 ) }
    dend_0 { pt3dadd( 269.359, 300.928, 24.2511, 0.6864 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 47/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 288.073, 331.822, 24.36, 1.0 ) }
    axon_1 { pt3dadd( 293.914, 345.638, 24.36, 1.0 ) }
    axon_1 { pt3dadd( 299.756, 359.454, 24.36, 1.0 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 50/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 261.785, 294.376, 37.8932, 0.3814 ) }
    dend_39 { pt3dadd( 261.442, 294.301, 36.0889, 0.305 ) }
    dend_39 { pt3dadd( 260.62, 293.665, 36.6747, 0.4068 ) }
    dend_39 { pt3dadd( 259.706, 293.318, 35.8571, 0.4068 ) }
    dend_39 { pt3dadd( 258.885, 292.691, 36.1917, 0.4068 ) }
    dend_39 { pt3dadd( 257.822, 292.358, 36.3163, 0.356 ) }
    dend_39 { pt3dadd( 257.021, 291.924, 36.6139, 0.3814 ) }
    dend_39 { pt3dadd( 256.053, 291.944, 36.4, 0.4322 ) }
    dend_39 { pt3dadd( 255.095, 291.598, 36.12, 0.483 ) }
    dend_39 { pt3dadd( 254.856, 290.844, 35.1912, 0.483 ) }
    dend_39 { pt3dadd( 254.699, 290.616, 32.76, 0.483 ) }
    dend_39 { pt3dadd( 254.592, 289.89, 33.3385, 0.5084 ) }
    dend_39 { pt3dadd( 254.654, 289.477, 35.541, 0.5084 ) }
    dend_39 { pt3dadd( 254.704, 288.625, 36.9418, 0.4576 ) }
    dend_39 { pt3dadd( 254.108, 288.055, 36.402, 0.4322 ) }
    dend_39 { pt3dadd( 254.025, 287.023, 35.9103, 0.4322 ) }
    dend_39 { pt3dadd( 254.205, 286.19, 34.7934, 0.483 ) }
    dend_39 { pt3dadd( 254.082, 285.351, 34.3227, 0.5338 ) }
    dend_39 { pt3dadd( 254.193, 284.394, 35.4432, 0.5848 ) }
    dend_39 { pt3dadd( 253.968, 283.483, 34.5022, 0.6102 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 70/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 261.785, 294.376, 37.8932, 0.3814 ) }
    dend_38 { pt3dadd( 260.772, 294.533, 39.0538, 0.5338 ) }
    dend_38 { pt3dadd( 259.656, 294.596, 39.3938, 0.4576 ) }
    dend_38 { pt3dadd( 259.085, 294.244, 38.4174, 0.4322 ) }
    dend_38 { pt3dadd( 257.987, 294.333, 38.7747, 0.4322 ) }
    dend_38 { pt3dadd( 256.978, 294.113, 39.0314, 0.483 ) }
    dend_38 { pt3dadd( 256.701, 293.361, 38.4182, 0.5084 ) }
    dend_38 { pt3dadd( 255.874, 292.753, 38.92, 0.5592 ) }
    dend_38 { pt3dadd( 254.844, 292.428, 38.36, 0.5338 ) }
    dend_38 { pt3dadd( 253.977, 292.158, 39.2465, 0.4576 ) }
    dend_38 { pt3dadd( 253.187, 291.606, 40.4359, 0.3814 ) }
    dend_38 { pt3dadd( 252.393, 291.569, 39.2795, 0.3814 ) }
    dend_38 { pt3dadd( 251.873, 291.567, 36.9628, 0.4322 ) }
    dend_38 { pt3dadd( 250.806, 291.377, 36.4, 0.4068 ) }
    dend_38 { pt3dadd( 250.417, 291.72, 37.6662, 0.356 ) }
    dend_38 { pt3dadd( 249.335, 291.603, 37.4469, 0.3304 ) }
    dend_38 { pt3dadd( 248.537, 291.262, 35.9682, 0.356 ) }
    dend_38 { pt3dadd( 247.473, 291.461, 35.28, 0.3814 ) }
    dend_38 { pt3dadd( 246.344, 291.404, 35.2542, 0.3814 ) }
    dend_38 { pt3dadd( 245.43, 291.568, 34.2286, 0.4322 ) }
    dend_38 { pt3dadd( 244.658, 291.746, 34.5262, 0.4576 ) }
    dend_38 { pt3dadd( 243.813, 291.841, 35.7372, 0.483 ) }
    dend_38 { pt3dadd( 243.098, 292.178, 36.1536, 0.4322 ) }
    dend_38 { pt3dadd( 242.019, 292.003, 36.2074, 0.4322 ) }
    dend_38 { pt3dadd( 240.945, 292.063, 35.8543, 0.4068 ) }
    dend_38 { pt3dadd( 239.898, 292.163, 35.5477, 0.4068 ) }
    dend_38 { pt3dadd( 239.553, 292.063, 33.994, 0.3814 ) }
    dend_38 { pt3dadd( 238.959, 292.406, 34.7889, 0.3814 ) }
    dend_38 { pt3dadd( 238.539, 292.404, 36.4, 0.356 ) }
    dend_38 { pt3dadd( 237.755, 292.603, 37.8988, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_38 { pt3dadd( 237.145, 292.635, 39.9011, 0.2796 ) }
    dend_38 { pt3dadd( 236.276, 292.635, 38.7075, 0.2796 ) }
    dend_38 { pt3dadd( 235.674, 293.171, 39.8154, 0.305 ) }
    dend_38 { pt3dadd( 235.039, 293.543, 39.48, 0.2796 ) }
    dend_38 { pt3dadd( 234.622, 293.322, 41.676, 0.2542 ) }
    dend_38 { pt3dadd( 234.148, 293.848, 43.4806, 0.2288 ) }
    dend_38 { pt3dadd( 233.101, 293.894, 44.4094, 0.2288 ) }
    dend_38 { pt3dadd( 232.339, 293.894, 46.2182, 0.2796 ) }
    dend_38 { pt3dadd( 231.351, 293.894, 47.3264, 0.356 ) }
    dend_38 { pt3dadd( 230.622, 293.823, 48.9782, 0.4576 ) }
    dend_38 { pt3dadd( 229.653, 294.109, 48.7099, 0.483 ) }
    dend_38 { pt3dadd( 228.533, 294.237, 48.7105, 0.4576 ) }
    dend_38 { pt3dadd( 227.656, 294.694, 48.44, 0.3814 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 13/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 286.27, 300.687, 24.6546, 0.483 ) }
    dend_36 { pt3dadd( 286.331, 300.745, 25.48, 0.356 ) }
    dend_36 { pt3dadd( 286.522, 300.684, 25.424, 0.3304 ) }
    dend_36 { pt3dadd( 286.813, 301.101, 26.6381, 0.305 ) }
    dend_36 { pt3dadd( 287.435, 301.635, 27.1751, 0.2796 ) }
    dend_36 { pt3dadd( 288.299, 301.115, 26.4746, 0.2796 ) }
    dend_36 { pt3dadd( 289.24, 300.872, 26.32, 0.3304 ) }
    dend_36 { pt3dadd( 289.891, 301.213, 27.711, 0.4322 ) }
    dend_36 { pt3dadd( 290.69, 301.33, 27.2065, 0.483 ) }
    dend_36 { pt3dadd( 290.802, 301.851, 25.1446, 0.4576 ) }
    dend_36 { pt3dadd( 291.688, 301.647, 25.4649, 0.4322 ) }
    dend_36 { pt3dadd( 292.417, 301.34, 27.2191, 0.4576 ) }
    dend_36 { pt3dadd( 293.3, 301.414, 28.5244, 0.483 ) }
    dend_36 { pt3dadd( 294.27, 301.522, 29.6038, 0.4576 ) }
    dend_36 { pt3dadd( 295.274, 301.898, 29.6859, 0.3814 ) }
    dend_36 { pt3dadd( 296.215, 302.032, 29.4, 0.356 ) }
    dend_36 { pt3dadd( 297.233, 301.558, 29.118, 0.3304 ) }
    dend_36 { pt3dadd( 298.145, 301.656, 27.7329, 0.3814 ) }
    dend_36 { pt3dadd( 299.202, 301.561, 26.7694, 0.3814 ) }
    dend_36 { pt3dadd( 300.293, 301.785, 27.1572, 0.4576 ) }
    dend_36 { pt3dadd( 301.292, 301.783, 26.32, 0.4576 ) }
    dend_36 { pt3dadd( 302.152, 302.009, 26.1302, 0.5084 ) }
    dend_36 { pt3dadd( 303.171, 302.245, 26.8943, 0.483 ) }
    dend_36 { pt3dadd( 304.047, 302.781, 27.2947, 0.483 ) }
    dend_36 { pt3dadd( 304.866, 302.931, 27.193, 0.4576 ) }
    dend_36 { pt3dadd( 305.902, 302.931, 27.3115, 0.4322 ) }
    dend_36 { pt3dadd( 306.536, 303.379, 28.84, 0.3814 ) }
    dend_36 { pt3dadd( 307.428, 303.819, 29.3656, 0.356 ) }
    dend_36 { pt3dadd( 308.174, 304.418, 28.0235, 0.3814 ) }
    dend_36 { pt3dadd( 308.815, 304.54, 26.8699, 0.4576 ) }
    dend_36 { pt3dadd( 309.312, 305.25, 27.9468, 0.4576 ) }
    dend_36 { pt3dadd( 310.291, 305.504, 27.7119, 0.4068 ) }
    dend_36 { pt3dadd( 310.961, 305.885, 29.4, 0.305 ) }
    dend_36 { pt3dadd( 311.817, 306.376, 29.1838, 0.2542 ) }
    dend_36 { pt3dadd( 312.628, 306.821, 29.68, 0.2542 ) }
    dend_36 { pt3dadd( 313.352, 307.393, 29.4, 0.305 ) }
    dend_36 { pt3dadd( 314.257, 307.714, 29.4143, 0.3814 ) }
    dend_36 { pt3dadd( 314.732, 308.308, 28.6278, 0.4322 ) }
    dend_36 { pt3dadd( 315.576, 308.334, 29.5282, 0.4322 ) }
    dend_36 { pt3dadd( 316.189, 308.969, 31.1377, 0.3814 ) }
    dend_36 { pt3dadd( 316.77, 309.82, 30.9134, 0.356 ) }
    dend_36 { pt3dadd( 317.764, 310.216, 30.2907, 0.4322 ) }
    dend_36 { pt3dadd( 318.432, 310.669, 28.9895, 0.5592 ) }
    dend_36 { pt3dadd( 319.19, 311.238, 29.6772, 0.661 ) }
    dend_36 { pt3dadd( 319.776, 311.901, 28.597, 0.6356 ) }
    dend_36 { pt3dadd( 320.393, 312.623, 28.8966, 0.5848 ) }
    dend_36 { pt3dadd( 320.891, 312.901, 26.9497, 0.5084 ) }
    dend_36 { pt3dadd( 321.445, 313.549, 27.9199, 0.483 ) }
    dend_36 { pt3dadd( 321.693, 313.954, 29.8914, 0.4576 ) }
    dend_36 { pt3dadd( 322.059, 314.845, 29.8648, 0.483 ) }
    dend_36 { pt3dadd( 322.835, 315.008, 28.6446, 0.5084 ) }
    dend_36 { pt3dadd( 323.743, 315.345, 27.7287, 0.5084 ) }
    dend_36 { pt3dadd( 324.77, 315.535, 28.0, 0.4322 ) }
    dend_36 { pt3dadd( 324.858, 315.957, 25.9076, 0.3304 ) }
    dend_36 { pt3dadd( 325.503, 316.649, 25.76, 0.2796 ) }
    dend_36 { pt3dadd( 326.383, 316.992, 25.9064, 0.305 ) }
    dend_36 { pt3dadd( 326.854, 317.171, 27.9544, 0.356 ) }
    dend_36 { pt3dadd( 326.968, 317.601, 30.24, 0.356 ) }
    dend_36 { pt3dadd( 327.63, 317.969, 28.4623, 0.305 ) }
    dend_36 { pt3dadd( 328.238, 318.401, 27.8466, 0.2542 ) }
    dend_36 { pt3dadd( 328.852, 319.126, 27.44, 0.2542 ) }
    dend_36 { pt3dadd( 329.793, 319.634, 27.5713, 0.2796 ) }
    dend_36 { pt3dadd( 330.529, 320.282, 28.56, 0.3304 ) }
    dend_36 { pt3dadd( 331.191, 320.851, 29.6265, 0.356 ) }
    dend_36 { pt3dadd( 331.993, 320.978, 29.5159, 0.4068 ) }
    dend_36 { pt3dadd( 332.733, 321.528, 29.7545, 0.4068 ) }
    dend_36 { pt3dadd( 333.247, 322.377, 29.54, 0.3814 ) }
    dend_36 { pt3dadd( 334.072, 322.876, 29.1497, 0.356 ) }
    dend_36 { pt3dadd( 334.733, 323.282, 30.8274, 0.356 ) }
    dend_36 { pt3dadd( 335.23, 323.398, 32.76, 0.3814 ) }
    dend_36 { pt3dadd( 335.46, 324.438, 32.3868, 0.3304 ) }
    dend_36 { pt3dadd( 336.488, 324.896, 32.3868, 0.2542 ) }
    dend_36 { pt3dadd( 337.633, 324.648, 32.2, 0.4322 ) }
    dend_36 { pt3dadd( 337.708, 324.497, 34.4358, 0.483 ) }
    dend_36 { pt3dadd( 338.442, 324.254, 36.022, 0.4322 ) }
    dend_36 { pt3dadd( 339.31, 324.3, 36.7452, 0.3304 ) }
    dend_36 { pt3dadd( 339.985, 324.698, 36.8096, 0.2796 ) }
    dend_36 { pt3dadd( 340.111, 325.424, 37.3226, 0.2796 ) }
    dend_36 { pt3dadd( 340.228, 325.015, 38.7842, 0.3304 ) }
    dend_36 { pt3dadd( 340.788, 324.996, 40.8764, 0.3304 ) }
    dend_36 { pt3dadd( 340.981, 325.686, 41.4831, 0.356 ) }
    dend_36 { pt3dadd( 341.916, 326.078, 41.72, 0.356 ) }
    dend_36 { pt3dadd( 342.804, 325.897, 42.9153, 0.3814 ) }
    dend_36 { pt3dadd( 343.391, 326.006, 43.7268, 0.356 ) }
    dend_36 { pt3dadd( 344.23, 325.926, 45.08, 0.305 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 98/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 286.27, 300.687, 24.6546, 0.483 ) }
    dend_25 { pt3dadd( 286.58, 300.119, 24.7764, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_25 { pt3dadd( 286.874, 299.143, 25.7373, 0.6102 ) }
    dend_25 { pt3dadd( 286.968, 298.148, 27.09, 0.6102 ) }
    dend_25 { pt3dadd( 287.253, 297.138, 28.1207, 0.5592 ) }
    dend_25 { pt3dadd( 287.374, 296.074, 27.7788, 0.5338 ) }
    dend_25 { pt3dadd( 287.408, 294.991, 26.8834, 0.5848 ) }
    dend_25 { pt3dadd( 287.643, 293.897, 26.4776, 0.661 ) }
    dend_25 { pt3dadd( 287.576, 292.779, 26.3306, 0.7372 ) }
    dend_25 { pt3dadd( 287.35, 291.663, 26.1932, 0.7118 ) }
    dend_25 { pt3dadd( 287.272, 290.542, 25.6693, 0.6356 ) }
    dend_25 { pt3dadd( 286.956, 289.442, 25.6161, 0.5338 ) }
    dend_25 { pt3dadd( 286.922, 288.309, 25.9787, 0.4576 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 11/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 266.919, 286.823, 28.5779, 0.3814 ) }
    dend_21 { pt3dadd( 266.542, 285.895, 29.3734, 0.5084 ) }
    dend_21 { pt3dadd( 266.408, 284.826, 30.1851, 0.5084 ) }
    dend_21 { pt3dadd( 266.88, 283.864, 30.6676, 0.483 ) }
    dend_21 { pt3dadd( 267.432, 282.872, 30.6488, 0.356 ) }
    dend_21 { pt3dadd( 267.628, 281.793, 30.0675, 0.2796 ) }
    dend_21 { pt3dadd( 267.404, 280.702, 29.7018, 0.2288 ) }
    dend_21 { pt3dadd( 267.421, 279.7, 30.7132, 0.2542 ) }
    dend_21 { pt3dadd( 267.583, 278.69, 31.9623, 0.305 ) }
    dend_21 { pt3dadd( 267.082, 277.676, 32.3632, 0.4322 ) }
    dend_21 { pt3dadd( 266.176, 276.741, 32.3548, 0.6356 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 266.919, 286.823, 28.5779, 0.3814 ) }
    dend_18 { pt3dadd( 266.362, 285.534, 28.0871, 0.5338 ) }
    dend_18 { pt3dadd( 265.679, 284.793, 26.8341, 0.5084 ) }
    dend_18 { pt3dadd( 264.802, 284.206, 25.956, 0.4576 ) }
    dend_18 { pt3dadd( 263.772, 283.734, 25.5833, 0.483 ) }
    dend_18 { pt3dadd( 262.722, 283.293, 25.3039, 0.5084 ) }
    dend_18 { pt3dadd( 261.817, 282.634, 25.1782, 0.483 ) }
    dend_18 { pt3dadd( 261.056, 281.783, 25.0709, 0.4322 ) }
    dend_18 { pt3dadd( 260.356, 280.885, 24.8262, 0.3814 ) }
    dend_18 { pt3dadd( 259.658, 279.983, 24.6828, 0.4322 ) }
    dend_18 { pt3dadd( 258.928, 279.102, 24.7316, 0.5084 ) }
    dend_18 { pt3dadd( 257.99, 278.529, 24.4885, 0.6102 ) }
    dend_18 { pt3dadd( 256.956, 278.072, 24.3558, 0.6102 ) }
    dend_18 { pt3dadd( 256.06, 277.487, 25.1406, 0.5848 ) }
    dend_18 { pt3dadd( 255.438, 276.659, 25.9188, 0.5338 ) }
    dend_18 { pt3dadd( 255.04, 275.601, 25.7071, 0.5848 ) }
    dend_18 { pt3dadd( 254.866, 274.839, 24.176, 0.6102 ) }
    dend_18 { pt3dadd( 254.511, 274.041, 22.617, 0.6356 ) }
    dend_18 { pt3dadd( 254.029, 273.04, 22.036, 0.6102 ) }
    dend_18 { pt3dadd( 253.43, 272.069, 22.0251, 0.6102 ) }
    dend_18 { pt3dadd( 252.795, 271.123, 21.8394, 0.5848 ) }
    dend_18 { pt3dadd( 251.961, 270.363, 21.4802, 0.5338 ) }
    dend_18 { pt3dadd( 251.06, 269.665, 21.2766, 0.483 ) }
    dend_18 { pt3dadd( 250.227, 268.887, 21.0706, 0.4576 ) }
    dend_18 { pt3dadd( 249.352, 268.155, 20.8597, 0.4576 ) }
    dend_18 { pt3dadd( 248.419, 267.496, 20.8698, 0.483 ) }
    dend_18 { pt3dadd( 247.472, 267.126, 19.7151, 0.483 ) }
    dend_18 { pt3dadd( 246.624, 266.634, 18.2812, 0.4576 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 50/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 269.359, 300.928, 24.2511, 0.6864 ) }
    dend_10 { pt3dadd( 269.721, 300.517, 23.959, 0.4322 ) }
    dend_10 { pt3dadd( 268.691, 300.513, 23.8697, 0.5338 ) }
    dend_10 { pt3dadd( 267.925, 300.148, 24.3485, 0.5592 ) }
    dend_10 { pt3dadd( 267.242, 299.511, 23.8392, 0.5592 ) }
    dend_10 { pt3dadd( 266.61, 298.805, 23.4293, 0.5084 ) }
    dend_10 { pt3dadd( 265.824, 298.154, 24.5694, 0.483 ) }
    dend_10 { pt3dadd( 265.676, 297.206, 25.5352, 0.483 ) }
    dend_10 { pt3dadd( 265.27, 296.525, 25.9196, 0.5338 ) }
    dend_10 { pt3dadd( 264.526, 295.992, 26.8582, 0.5592 ) }
    dend_10 { pt3dadd( 263.891, 295.154, 26.88, 0.5592 ) }
    dend_10 { pt3dadd( 263.13, 294.543, 26.7834, 0.5592 ) }
    dend_10 { pt3dadd( 262.138, 294.756, 26.6658, 0.6102 ) }
    dend_10 { pt3dadd( 261.184, 294.728, 25.6628, 0.6102 ) }
    dend_10 { pt3dadd( 260.565, 294.605, 23.5511, 0.5592 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 65/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 269.359, 300.928, 24.2511, 0.6864 ) }
    dend_1 { pt3dadd( 268.71, 300.673, 24.1525, 0.5084 ) }
    dend_1 { pt3dadd( 267.688, 300.858, 24.2197, 0.5084 ) }
    dend_1 { pt3dadd( 266.695, 301.414, 24.4768, 0.5338 ) }
    dend_1 { pt3dadd( 265.764, 302.046, 24.8724, 0.5848 ) }
    dend_1 { pt3dadd( 264.969, 302.849, 25.2473, 0.6102 ) }
    dend_1 { pt3dadd( 264.175, 303.667, 25.3789, 0.6356 ) }
    dend_1 { pt3dadd( 263.258, 304.345, 25.4789, 0.5592 ) }
    dend_1 { pt3dadd( 262.229, 304.82, 25.4724, 0.5592 ) }
    dend_1 { pt3dadd( 261.118, 304.906, 25.4344, 0.6356 ) }
    dend_1 { pt3dadd( 260.004, 304.755, 25.268, 0.788 ) }
    dend_1 { pt3dadd( 258.875, 304.878, 24.9376, 0.8644 ) }
    dend_1 { pt3dadd( 257.87, 305.418, 24.8567, 0.839 ) }
    dend_1 { pt3dadd( 257.047, 306.205, 24.6215, 0.788 ) }
    dend_1 { pt3dadd( 256.383, 307.132, 24.4073, 0.7118 ) }
    dend_1 { pt3dadd( 256.24, 308.206, 23.5234, 0.5848 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 81/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 253.968, 283.483, 34.5022, 0.6102 ) }
    dend_43 { pt3dadd( 254.219, 282.838, 34.6909, 0.4068 ) }
    dend_43 { pt3dadd( 254.785, 282.615, 33.4953, 0.3304 ) }
    dend_43 { pt3dadd( 255.23, 282.566, 31.6075, 0.2796 ) }
    dend_43 { pt3dadd( 255.455, 281.511, 31.1363, 0.2796 ) }
    dend_43 { pt3dadd( 256.191, 281.195, 31.022, 0.356 ) }
    dend_43 { pt3dadd( 256.672, 280.509, 30.8619, 0.3814 ) }
    dend_43 { pt3dadd( 257.219, 279.594, 30.0723, 0.4322 ) }
    dend_43 { pt3dadd( 257.886, 279.008, 28.8988, 0.4322 ) }
    dend_43 { pt3dadd( 258.658, 278.655, 27.44, 0.4576 ) }
    dend_43 { pt3dadd( 259.283, 278.016, 26.8013, 0.4322 ) }
    dend_43 { pt3dadd( 260.072, 277.368, 25.8367, 0.3814 ) }
    dend_43 { pt3dadd( 261.06, 277.073, 25.4327, 0.3814 ) }
    dend_43 { pt3dadd( 261.645, 276.162, 25.1689, 0.4322 ) }
    dend_43 { pt3dadd( 262.128, 275.627, 25.48, 0.5338 ) }
    dend_43 { pt3dadd( 262.293, 275.107, 25.2381, 0.5592 ) }
    dend_43 { pt3dadd( 262.59, 274.219, 24.2122, 0.5338 ) }
    dend_43 { pt3dadd( 263.391, 273.837, 23.5872, 0.4322 ) }
    dend_43 { pt3dadd( 264.047, 273.328, 24.36, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_43 { pt3dadd( 264.985, 272.741, 24.078, 0.2796 ) }
    dend_43 { pt3dadd( 265.789, 272.615, 22.5562, 0.2796 ) }
    dend_43 { pt3dadd( 266.323, 271.83, 21.56, 0.305 ) }
    dend_43 { pt3dadd( 266.427, 271.014, 20.7234, 0.305 ) }
    dend_43 { pt3dadd( 267.132, 270.209, 20.72, 0.3304 ) }
    dend_43 { pt3dadd( 267.365, 269.262, 20.6979, 0.356 ) }
    dend_43 { pt3dadd( 267.868, 268.611, 19.3189, 0.3814 ) }
    dend_43 { pt3dadd( 268.245, 267.927, 18.6959, 0.3814 ) }
    dend_43 { pt3dadd( 268.835, 267.34, 18.4072, 0.4068 ) }
    dend_43 { pt3dadd( 269.572, 266.672, 18.387, 0.4068 ) }
    dend_43 { pt3dadd( 270.003, 265.669, 18.4691, 0.4068 ) }
    dend_43 { pt3dadd( 270.643, 264.766, 18.2129, 0.3814 ) }
    dend_43 { pt3dadd( 270.605, 263.939, 19.5905, 0.4068 ) }
    dend_43 { pt3dadd( 271.031, 263.23, 18.4246, 0.4576 ) }
    dend_43 { pt3dadd( 271.128, 262.777, 17.36, 0.4576 ) }
    dend_43 { pt3dadd( 271.001, 262.51, 17.7957, 0.3304 ) }
    dend_43 { pt3dadd( 270.671, 262.319, 17.64, 0.2542 ) }
    dend_43 { pt3dadd( 269.984, 262.09, 17.64, 0.2542 ) }
    dend_43 { pt3dadd( 269.654, 261.963, 17.92, 0.5338 ) }
    dend_43 { pt3dadd( 269.526, 261.417, 18.1689, 0.5338 ) }
    dend_43 { pt3dadd( 269.387, 261.086, 17.08, 0.4068 ) }
    dend_43 { pt3dadd( 269.298, 260.819, 17.3289, 0.3304 ) }
    dend_43 { pt3dadd( 269.197, 260.298, 17.5157, 0.5338 ) }
    dend_43 { pt3dadd( 269.081, 259.929, 16.8, 0.356 ) }
    dend_43 { pt3dadd( 269.208, 259.917, 16.3022, 0.3304 ) }
    dend_43 { pt3dadd( 269.539, 259.586, 15.96, 0.4576 ) }
    dend_43 { pt3dadd( 269.641, 259.548, 17.08, 0.6356 ) }
    dend_43 { pt3dadd( 269.387, 259.268, 17.8889, 0.4576 ) }
    dend_43 { pt3dadd( 269.285, 259.193, 16.6443, 0.2542 ) }
    dend_43 { pt3dadd( 268.954, 259.218, 15.9911, 0.356 ) }
    dend_43 { pt3dadd( 268.649, 258.951, 15.4311, 0.3304 ) }
    dend_43 { pt3dadd( 268.727, 258.621, 15.5868, 0.356 ) }
    dend_43 { pt3dadd( 268.675, 258.239, 15.9289, 0.4068 ) }
    dend_43 { pt3dadd( 268.345, 258.086, 16.1468, 0.305 ) }
    dend_43 { pt3dadd( 268.268, 257.934, 16.4268, 0.2796 ) }
    dend_43 { pt3dadd( 268.573, 257.514, 16.4268, 0.3814 ) }
    dend_43 { pt3dadd( 268.268, 257.286, 16.52, 0.4068 ) }
    dend_43 { pt3dadd( 268.268, 257.057, 16.24, 0.356 ) }
    dend_43 { pt3dadd( 268.191, 257.019, 15.68, 0.356 ) }
    dend_43 { pt3dadd( 268.001, 256.714, 14.9332, 0.4576 ) }
    dend_43 { pt3dadd( 268.039, 256.142, 14.84, 0.4322 ) }
    dend_43 { pt3dadd( 268.243, 255.773, 14.84, 0.6102 ) }
    dend_43 { pt3dadd( 268.293, 255.353, 14.4668, 0.3814 ) }
    dend_43 { pt3dadd( 268.154, 255.264, 13.5332, 0.2288 ) }
    dend_43 { pt3dadd( 268.027, 254.934, 13.0668, 0.2542 ) }
    dend_43 { pt3dadd( 267.658, 254.807, 12.32, 0.3814 ) }
    dend_43 { pt3dadd( 267.302, 254.578, 12.3511, 0.305 ) }
    dend_43 { pt3dadd( 266.972, 254.349, 12.6, 0.2288 ) }
    dend_43 { pt3dadd( 266.895, 253.955, 13.1289, 0.2288 ) }
    dend_43 { pt3dadd( 266.806, 253.485, 12.04, 0.4068 ) }
    dend_43 { pt3dadd( 266.132, 253.015, 11.76, 0.4322 ) }
    dend_43 { pt3dadd( 265.789, 252.672, 12.04, 0.4576 ) }
    dend_43 { pt3dadd( 265.395, 252.265, 12.04, 0.4576 ) }
    dend_43 { pt3dadd( 264.977, 251.871, 12.0711, 0.4322 ) }
    dend_43 { pt3dadd( 264.874, 251.667, 11.6043, 0.305 ) }
    dend_43 { pt3dadd( 264.811, 251.362, 11.2, 0.2288 ) }
    dend_43 { pt3dadd( 264.455, 251.133, 11.4489, 0.305 ) }
    dend_43 { pt3dadd( 264.035, 250.867, 11.5111, 0.356 ) }
    dend_43 { pt3dadd( 263.921, 250.523, 12.0089, 0.2796 ) }
    dend_43 { pt3dadd( 263.921, 250.459, 12.4132, 0.2542 ) }
    dend_43 { pt3dadd( 263.883, 250.409, 13.0357, 0.2288 ) }
    dend_43 { pt3dadd( 263.615, 250.078, 13.2532, 0.2288 ) }
    dend_43 { pt3dadd( 263.324, 249.659, 13.1289, 0.2288 ) }
    dend_43 { pt3dadd( 263.043, 249.392, 12.5068, 0.305 ) }
    dend_43 { pt3dadd( 262.789, 249.621, 11.7289, 0.4322 ) }
    dend_43 { pt3dadd( 262.535, 249.392, 11.7289, 0.6102 ) }
    dend_43 { pt3dadd( 262.078, 249.024, 11.2932, 0.483 ) }
    dend_43 { pt3dadd( 261.824, 248.629, 10.92, 0.305 ) }
    dend_43 { pt3dadd( 261.518, 248.591, 10.92, 0.2542 ) }
    dend_43 { pt3dadd( 261.253, 248.515, 10.92, 0.2288 ) }
    dend_43 { pt3dadd( 260.845, 248.35, 10.92, 0.2288 ) }
    dend_43 { pt3dadd( 260.832, 248.019, 10.92, 0.2288 ) }
    dend_43 { pt3dadd( 260.755, 247.638, 10.92, 0.2288 ) }
    dend_43 { pt3dadd( 260.718, 247.333, 10.92, 0.2288 ) }
    dend_43 { pt3dadd( 260.641, 247.066, 10.92, 0.2288 ) }
    dend_43 { pt3dadd( 260.26, 246.875, 11.2, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 76/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 253.968, 283.483, 34.5022, 0.6102 ) }
    dend_40 { pt3dadd( 253.656, 282.555, 32.7824, 0.4068 ) }
    dend_40 { pt3dadd( 253.398, 281.773, 32.1742, 0.3814 ) }
    dend_40 { pt3dadd( 253.427, 281.191, 34.2275, 0.356 ) }
    dend_40 { pt3dadd( 253.18, 280.344, 33.9732, 0.3814 ) }
    dend_40 { pt3dadd( 252.671, 279.75, 33.6501, 0.3814 ) }
    dend_40 { pt3dadd( 252.697, 278.996, 34.8132, 0.3814 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 83/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 286.922, 288.309, 25.9787, 0.4576 ) }
    dend_31 { pt3dadd( 286.812, 287.761, 25.2518, 0.5084 ) }
    dend_31 { pt3dadd( 286.559, 286.674, 25.2358, 0.483 ) }
    dend_31 { pt3dadd( 286.158, 285.676, 24.9463, 0.4322 ) }
    dend_31 { pt3dadd( 285.099, 285.453, 25.7057, 0.3814 ) }
    dend_31 { pt3dadd( 284.628, 285.147, 27.0771, 0.4068 ) }
    dend_31 { pt3dadd( 283.953, 284.615, 26.88, 0.4068 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 90/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 286.922, 288.309, 25.9787, 0.4576 ) }
    dend_26 { pt3dadd( 286.951, 287.566, 26.0148, 0.3304 ) }
    dend_26 { pt3dadd( 287.169, 286.451, 26.0114, 0.356 ) }
    dend_26 { pt3dadd( 287.783, 285.521, 25.8152, 0.3814 ) }
    dend_26 { pt3dadd( 288.454, 284.669, 25.0172, 0.3304 ) }
    dend_26 { pt3dadd( 288.477, 283.637, 24.1732, 0.3304 ) }
    dend_26 { pt3dadd( 288.378, 282.555, 23.2929, 0.3304 ) }
    dend_26 { pt3dadd( 288.79, 281.623, 22.1211, 0.4322 ) }
    dend_26 { pt3dadd( 289.21, 280.81, 20.4506, 0.483 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 99/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 266.176, 276.741, 32.3548, 0.6356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_23 { pt3dadd( 265.63, 276.253, 32.2227, 0.4068 ) }
    dend_23 { pt3dadd( 265.303, 275.316, 31.3704, 0.3304 ) }
    dend_23 { pt3dadd( 264.852, 274.327, 30.8361, 0.3304 ) }
    dend_23 { pt3dadd( 264.275, 273.342, 30.6561, 0.3304 ) }
    dend_23 { pt3dadd( 263.732, 272.337, 30.751, 0.356 ) }
    dend_23 { pt3dadd( 263.096, 271.39, 30.8633, 0.3304 ) }
    dend_23 { pt3dadd( 262.188, 270.77, 31.3967, 0.3304 ) }
    dend_23 { pt3dadd( 261.128, 270.38, 31.7475, 0.3304 ) }
    dend_23 { pt3dadd( 260.037, 270.048, 32.0012, 0.3814 ) }
    dend_23 { pt3dadd( 259.076, 269.441, 31.9071, 0.4322 ) }
    dend_23 { pt3dadd( 258.125, 268.884, 32.6312, 0.4576 ) }
    dend_23 { pt3dadd( 257.762, 268.385, 32.48, 0.4576 ) }
    dend_23 { pt3dadd( 256.892, 267.997, 32.3982, 0.483 ) }
    dend_23 { pt3dadd( 256.013, 267.703, 33.0915, 0.5084 ) }
    dend_23 { pt3dadd( 255.106, 267.514, 33.5098, 0.5338 ) }
    dend_23 { pt3dadd( 254.101, 267.076, 33.6, 0.5084 ) }
    dend_23 { pt3dadd( 253.069, 266.655, 33.88, 0.4322 ) }
    dend_23 { pt3dadd( 252.315, 266.302, 32.4624, 0.3814 ) }
    dend_23 { pt3dadd( 251.362, 266.102, 31.6616, 0.3814 ) }
    dend_23 { pt3dadd( 250.936, 265.529, 33.32, 0.4322 ) }
    dend_23 { pt3dadd( 249.89, 265.221, 33.5773, 0.4322 ) }
    dend_23 { pt3dadd( 249.416, 264.55, 34.5825, 0.3814 ) }
    dend_23 { pt3dadd( 248.809, 263.618, 34.5671, 0.356 ) }
    dend_23 { pt3dadd( 248.239, 262.738, 34.6385, 0.3304 ) }
    dend_23 { pt3dadd( 247.565, 262.032, 35.0168, 0.356 ) }
    dend_23 { pt3dadd( 247.085, 262.336, 35.1417, 0.356 ) }
    dend_23 { pt3dadd( 246.273, 262.813, 34.4758, 0.4322 ) }
    dend_23 { pt3dadd( 245.242, 262.437, 34.9003, 0.4576 ) }
    dend_23 { pt3dadd( 244.317, 262.042, 34.2695, 0.4576 ) }
    dend_23 { pt3dadd( 243.415, 261.848, 33.4572, 0.356 ) }
    dend_23 { pt3dadd( 242.393, 262.287, 33.04, 0.2796 ) }
    dend_23 { pt3dadd( 241.436, 262.761, 32.76, 0.2288 ) }
    dend_23 { pt3dadd( 240.556, 263.276, 32.8406, 0.2542 ) }
    dend_23 { pt3dadd( 239.443, 263.428, 32.48, 0.305 ) }
    dend_23 { pt3dadd( 239.096, 264.124, 31.4087, 0.356 ) }
    dend_23 { pt3dadd( 238.295, 264.378, 31.64, 0.3814 ) }
    dend_23 { pt3dadd( 238.054, 264.366, 29.96, 0.2796 ) }
    dend_23 { pt3dadd( 237.621, 264.226, 29.4622, 0.2288 ) }
    dend_23 { pt3dadd( 237.38, 264.302, 28.6532, 0.2288 ) }
    dend_23 { pt3dadd( 236.922, 264.378, 29.12, 0.2796 ) }
    dend_23 { pt3dadd( 236.656, 264.378, 29.3068, 0.305 ) }
    dend_23 { pt3dadd( 236.274, 264.416, 29.4, 0.2796 ) }
    dend_23 { pt3dadd( 236.02, 264.493, 28.8089, 0.2288 ) }
    dend_23 { pt3dadd( 236.007, 264.543, 27.8443, 0.2288 ) }
    dend_23 { pt3dadd( 236.007, 264.963, 27.4711, 0.2288 ) }
    dend_23 { pt3dadd( 236.007, 265.294, 27.44, 0.2288 ) }
    dend_23 { pt3dadd( 235.995, 265.548, 27.2532, 0.2288 ) }
    dend_23 { pt3dadd( 235.664, 265.637, 27.16, 0.2288 ) }
    dend_23 { pt3dadd( 234.749, 265.637, 27.16, 0.2288 ) }
    dend_23 { pt3dadd( 233.948, 265.637, 27.16, 0.2288 ) }
    dend_23 { pt3dadd( 233.147, 265.637, 27.16, 0.2288 ) }
    dend_23 { pt3dadd( 232.854, 265.649, 27.2532, 0.2288 ) }
    dend_23 { pt3dadd( 232.55, 265.751, 26.9422, 0.2288 ) }
    dend_23 { pt3dadd( 232.13, 265.764, 26.6, 0.2288 ) }
    dend_23 { pt3dadd( 231.431, 265.866, 26.6, 0.2288 ) }
    dend_23 { pt3dadd( 231.088, 265.866, 26.6, 0.2288 ) }
    dend_23 { pt3dadd( 230.745, 265.866, 26.6, 0.2288 ) }
    dend_23 { pt3dadd( 230.402, 265.866, 26.6, 0.2288 ) }
    dend_23 { pt3dadd( 230.185, 265.993, 26.6, 0.2288 ) }
    dend_23 { pt3dadd( 230.173, 266.209, 26.6, 0.2288 ) }
    dend_23 { pt3dadd( 230.084, 266.463, 26.6, 0.2288 ) }
    dend_23 { pt3dadd( 229.601, 266.552, 26.32, 0.2288 ) }
    dend_23 { pt3dadd( 229.334, 266.629, 26.32, 0.2288 ) }
    dend_23 { pt3dadd( 229.029, 266.793, 26.5689, 0.2288 ) }
    dend_23 { pt3dadd( 228.991, 267.074, 26.5689, 0.2288 ) }
    dend_23 { pt3dadd( 228.609, 267.238, 25.9468, 0.2288 ) }
    dend_23 { pt3dadd( 228.241, 267.251, 25.76, 0.2288 ) }
    dend_23 { pt3dadd( 227.86, 267.365, 25.6668, 0.2288 ) }
    dend_23 { pt3dadd( 227.77, 267.505, 25.9468, 0.2288 ) }
    dend_23 { pt3dadd( 227.465, 267.734, 26.04, 0.2288 ) }
    dend_23 { pt3dadd( 227.198, 267.81, 26.04, 0.2288 ) }
    dend_23 { pt3dadd( 226.652, 268.064, 25.76, 0.2288 ) }
    dend_23 { pt3dadd( 226.258, 268.459, 25.7289, 0.2288 ) }
    dend_23 { pt3dadd( 225.89, 268.79, 25.48, 0.2288 ) }
    dend_23 { pt3dadd( 225.355, 269.056, 25.48, 0.2288 ) }
    dend_23 { pt3dadd( 225.025, 269.069, 25.48, 0.2288 ) }
    dend_23 { pt3dadd( 224.719, 269.107, 25.48, 0.2288 ) }
    dend_23 { pt3dadd( 224.567, 269.298, 25.48, 0.2288 ) }
    dend_23 { pt3dadd( 224.415, 269.489, 25.48, 0.2288 ) }
    dend_23 { pt3dadd( 223.69, 269.679, 25.2, 0.2796 ) }
    dend_23 { pt3dadd( 223.22, 269.857, 25.0132, 0.305 ) }
    dend_23 { pt3dadd( 222.851, 270.213, 25.2, 0.2796 ) }
    dend_23 { pt3dadd( 222.279, 270.442, 25.2, 0.2542 ) }
    dend_23 { pt3dadd( 221.707, 270.633, 25.1068, 0.2288 ) }
    dend_23 { pt3dadd( 221.224, 270.861, 24.8889, 0.2288 ) }
    dend_23 { pt3dadd( 220.792, 270.937, 24.4532, 0.2288 ) }
    dend_23 { pt3dadd( 220.563, 271.014, 24.36, 0.2288 ) }
    dend_23 { pt3dadd( 220.27, 271.014, 24.4843, 0.2288 ) }
    dend_23 { pt3dadd( 219.457, 271.014, 24.8268, 0.2288 ) }
    dend_23 { pt3dadd( 218.924, 271.014, 24.1732, 0.2288 ) }
    dend_23 { pt3dadd( 218.237, 271.09, 24.08, 0.2288 ) }
    dend_23 { pt3dadd( 217.97, 271.166, 24.08, 0.2288 ) }
    dend_23 { pt3dadd( 217.716, 271.242, 24.0489, 0.2542 ) }
    dend_23 { pt3dadd( 217.462, 271.242, 23.8311, 0.305 ) }
    dend_23 { pt3dadd( 217.119, 270.949, 23.9868, 0.305 ) }
    dend_23 { pt3dadd( 216.711, 270.937, 23.8, 0.3304 ) }
    dend_23 { pt3dadd( 216.521, 271.192, 23.5511, 0.5084 ) }
    dend_23 { pt3dadd( 216.203, 271.573, 24.08, 0.6356 ) }
    dend_23 { pt3dadd( 215.758, 271.814, 24.08, 0.5592 ) }
    dend_23 { pt3dadd( 215.313, 271.979, 23.8932, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_23 { pt3dadd( 214.97, 272.272, 23.2089, 0.305 ) }
    dend_23 { pt3dadd( 214.577, 272.463, 22.96, 0.2288 ) }
    dend_23 { pt3dadd( 214.08, 272.501, 23.3332, 0.2542 ) }
    dend_23 { pt3dadd( 213.458, 272.615, 24.0489, 0.305 ) }
    dend_23 { pt3dadd( 213.14, 272.603, 24.08, 0.305 ) }
    dend_23 { pt3dadd( 212.784, 272.577, 24.2668, 0.305 ) }
    dend_23 { pt3dadd( 212.605, 272.653, 24.0489, 0.305 ) }
    dend_23 { pt3dadd( 211.983, 272.958, 23.8, 0.356 ) }
    dend_23 { pt3dadd( 211.488, 272.984, 23.6132, 0.356 ) }
    dend_23 { pt3dadd( 211.004, 273.085, 23.4268, 0.2796 ) }
    dend_23 { pt3dadd( 210.827, 273.403, 23.52, 0.356 ) }
    dend_23 { pt3dadd( 210.432, 273.314, 23.4268, 0.356 ) }
    dend_23 { pt3dadd( 210.153, 273.416, 23.24, 0.2542 ) }
    dend_23 { pt3dadd( 209.352, 273.416, 23.24, 0.2288 ) }
    dend_23 { pt3dadd( 209.021, 273.429, 23.24, 0.2288 ) }
    dend_23 { pt3dadd( 208.703, 273.632, 22.8357, 0.305 ) }
    dend_23 { pt3dadd( 208.513, 273.95, 22.4, 0.4068 ) }
    dend_23 { pt3dadd( 208.221, 273.988, 22.7111, 0.2288 ) }
    dend_23 { pt3dadd( 208.094, 274.102, 23.52, 0.2288 ) }
    dend_23 { pt3dadd( 207.903, 274.115, 23.8622, 0.2288 ) }
    dend_23 { pt3dadd( 207.865, 274.331, 24.08, 0.2288 ) }
    dend_23 { pt3dadd( 207.865, 274.624, 24.2043, 0.2288 ) }
    dend_23 { pt3dadd( 207.7, 274.98, 25.4489, 0.2288 ) }
    dend_23 { pt3dadd( 207.509, 275.055, 25.9157, 0.4322 ) }
    dend_23 { pt3dadd( 207.445, 275.209, 26.32, 0.356 ) }
    dend_23 { pt3dadd( 207.559, 275.336, 26.5689, 0.2796 ) }
    dend_23 { pt3dadd( 207.636, 275.437, 26.5068, 0.356 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 27/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 266.176, 276.741, 32.3548, 0.6356 ) }
    dend_22 { pt3dadd( 265.386, 276.223, 32.7852, 0.4068 ) }
    dend_22 { pt3dadd( 265.389, 275.28, 33.4687, 0.4576 ) }
    dend_22 { pt3dadd( 265.88, 274.367, 33.88, 0.483 ) }
    dend_22 { pt3dadd( 266.621, 273.617, 34.2975, 0.4576 ) }
    dend_22 { pt3dadd( 266.987, 272.563, 34.1012, 0.4068 ) }
    dend_22 { pt3dadd( 267.635, 271.647, 33.7134, 0.3814 ) }
    dend_22 { pt3dadd( 267.967, 270.572, 33.5782, 0.4068 ) }
    dend_22 { pt3dadd( 268.244, 269.673, 34.2124, 0.4068 ) }
    dend_22 { pt3dadd( 268.613, 268.988, 34.9205, 0.4068 ) }
    dend_22 { pt3dadd( 269.181, 268.141, 34.7334, 0.3304 ) }
    dend_22 { pt3dadd( 268.896, 267.321, 35.28, 0.305 ) }
    dend_22 { pt3dadd( 268.737, 266.603, 33.8582, 0.305 ) }
    dend_22 { pt3dadd( 268.947, 265.858, 33.1708, 0.3814 ) }
    dend_22 { pt3dadd( 269.115, 264.873, 33.32, 0.4322 ) }
    dend_22 { pt3dadd( 268.731, 264.127, 32.2, 0.4322 ) }
    dend_22 { pt3dadd( 268.892, 263.16, 31.6929, 0.4068 ) }
    dend_22 { pt3dadd( 268.954, 262.128, 30.8232, 0.4068 ) }
    dend_22 { pt3dadd( 268.553, 261.264, 30.8258, 0.4322 ) }
    dend_22 { pt3dadd( 268.427, 260.171, 31.3314, 0.4322 ) }
    dend_22 { pt3dadd( 268.154, 259.097, 31.64, 0.356 ) }
    dend_22 { pt3dadd( 268.262, 258.136, 30.5869, 0.305 ) }
    dend_22 { pt3dadd( 267.944, 257.274, 30.24, 0.305 ) }
    dend_22 { pt3dadd( 267.365, 256.317, 30.553, 0.4068 ) }
    dend_22 { pt3dadd( 266.904, 255.42, 30.3495, 0.4576 ) }
    dend_22 { pt3dadd( 266.792, 254.744, 30.8, 0.483 ) }
    dend_22 { pt3dadd( 266.507, 253.685, 30.2949, 0.4322 ) }
    dend_22 { pt3dadd( 266.066, 252.656, 30.263, 0.4322 ) }
    dend_22 { pt3dadd( 265.637, 251.788, 30.798, 0.4322 ) }
    dend_22 { pt3dadd( 265.283, 250.928, 30.3055, 0.4322 ) }
    dend_22 { pt3dadd( 264.875, 250.014, 30.2198, 0.4068 ) }
    dend_22 { pt3dadd( 264.597, 248.932, 30.728, 0.356 ) }
    dend_22 { pt3dadd( 264.122, 247.973, 30.52, 0.3814 ) }
    dend_22 { pt3dadd( 264.378, 247.218, 30.24, 0.4068 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 61/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 246.624, 266.634, 18.2812, 0.4576 ) }
    dend_20 { pt3dadd( 246.293, 265.44, 17.6968, 0.4322 ) }
    dend_20 { pt3dadd( 245.627, 264.836, 18.0001, 0.356 ) }
    dend_20 { pt3dadd( 245.227, 264.319, 19.1898, 0.356 ) }
    dend_20 { pt3dadd( 244.476, 263.699, 18.5503, 0.3814 ) }
    dend_20 { pt3dadd( 243.871, 262.792, 18.7645, 0.3814 ) }
    dend_20 { pt3dadd( 242.982, 262.357, 18.5707, 0.3814 ) }
    dend_20 { pt3dadd( 242.093, 261.786, 18.1798, 0.4068 ) }
    dend_20 { pt3dadd( 241.27, 261.022, 18.4702, 0.4322 ) }
    dend_20 { pt3dadd( 240.426, 260.297, 18.1513, 0.483 ) }
    dend_20 { pt3dadd( 240.056, 259.25, 17.6588, 0.483 ) }
    dend_20 { pt3dadd( 239.329, 258.398, 17.36, 0.483 ) }
    dend_20 { pt3dadd( 238.47, 257.735, 17.096, 0.4322 ) }
    dend_20 { pt3dadd( 237.482, 257.4, 16.7104, 0.3814 ) }
    dend_20 { pt3dadd( 236.493, 257.298, 16.4287, 0.305 ) }
    dend_20 { pt3dadd( 235.435, 257.387, 16.2089, 0.2796 ) }
    dend_20 { pt3dadd( 234.456, 257.199, 15.5344, 0.305 ) }
    dend_20 { pt3dadd( 233.501, 257.155, 15.8645, 0.4068 ) }
    dend_20 { pt3dadd( 232.539, 256.867, 16.658, 0.483 ) }
    dend_20 { pt3dadd( 231.619, 256.524, 15.9704, 0.5084 ) }
    dend_20 { pt3dadd( 230.734, 256.256, 16.4881, 0.4322 ) }
    dend_20 { pt3dadd( 229.667, 256.142, 15.6652, 0.356 ) }
    dend_20 { pt3dadd( 228.56, 256.027, 15.7735, 0.3304 ) }
    dend_20 { pt3dadd( 227.532, 255.662, 15.6878, 0.3814 ) }
    dend_20 { pt3dadd( 226.7, 255.118, 16.52, 0.4322 ) }
    dend_20 { pt3dadd( 225.985, 254.5, 16.9117, 0.4322 ) }
    dend_20 { pt3dadd( 225.334, 253.932, 15.4, 0.3814 ) }
    dend_20 { pt3dadd( 224.638, 253.396, 15.1953, 0.3304 ) }
    dend_20 { pt3dadd( 223.723, 253.091, 15.3913, 0.3304 ) }
    dend_20 { pt3dadd( 222.763, 252.537, 15.68, 0.356 ) }
    dend_20 { pt3dadd( 221.852, 252.262, 16.4226, 0.356 ) }
    dend_20 { pt3dadd( 220.791, 252.243, 15.6898, 0.3304 ) }
    dend_20 { pt3dadd( 219.94, 252.023, 15.743, 0.305 ) }
    dend_20 { pt3dadd( 219.082, 251.559, 16.4889, 0.3304 ) }
    dend_20 { pt3dadd( 218.41, 251.081, 16.8759, 0.356 ) }
    dend_20 { pt3dadd( 217.448, 250.788, 16.2711, 0.3814 ) }
    dend_20 { pt3dadd( 216.704, 250.22, 16.2792, 0.4068 ) }
    dend_20 { pt3dadd( 215.738, 250.104, 16.9224, 0.4576 ) }
    dend_20 { pt3dadd( 214.895, 250.329, 16.24, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_20 { pt3dadd( 213.806, 250.434, 15.6817, 0.6102 ) }
    dend_20 { pt3dadd( 212.732, 250.401, 14.8711, 0.6102 ) }
    dend_20 { pt3dadd( 211.802, 250.465, 15.5672, 0.5592 ) }
    dend_20 { pt3dadd( 210.899, 250.289, 16.7776, 0.5084 ) }
    dend_20 { pt3dadd( 210.229, 249.89, 15.1418, 0.5084 ) }
    dend_20 { pt3dadd( 209.255, 249.826, 14.315, 0.4576 ) }
    dend_20 { pt3dadd( 208.34, 249.536, 15.0074, 0.4322 ) }
    dend_20 { pt3dadd( 207.212, 249.481, 15.0301, 0.3304 ) }
    dend_20 { pt3dadd( 206.092, 249.304, 14.8187, 0.2796 ) }
    dend_20 { pt3dadd( 204.964, 249.163, 14.6541, 0.2288 ) }
    dend_20 { pt3dadd( 203.824, 249.163, 14.84, 0.2288 ) }
    dend_20 { pt3dadd( 202.938, 249.163, 16.0983, 0.2542 ) }
    dend_20 { pt3dadd( 202.123, 249.355, 17.8489, 0.305 ) }
    dend_20 { pt3dadd( 201.411, 249.956, 17.3368, 0.3814 ) }
    dend_20 { pt3dadd( 200.345, 250.096, 16.5018, 0.4068 ) }
    dend_20 { pt3dadd( 199.511, 250.385, 15.4689, 0.4068 ) }
    dend_20 { pt3dadd( 198.593, 250.193, 16.779, 0.356 ) }
    dend_20 { pt3dadd( 197.683, 249.988, 16.3649, 0.356 ) }
    dend_20 { pt3dadd( 196.826, 250.205, 16.6032, 0.356 ) }
    dend_20 { pt3dadd( 196.186, 250.666, 16.6359, 0.4068 ) }
    dend_20 { pt3dadd( 195.492, 251.037, 17.0531, 0.4322 ) }
    dend_20 { pt3dadd( 195.033, 250.549, 15.8567, 0.4576 ) }
    dend_20 { pt3dadd( 194.131, 250.728, 16.4548, 0.483 ) }
    dend_20 { pt3dadd( 193.163, 250.981, 15.68, 0.5084 ) }
    dend_20 { pt3dadd( 192.477, 251.108, 16.2574, 0.5084 ) }
    dend_20 { pt3dadd( 191.754, 251.005, 17.7481, 0.483 ) }
    dend_20 { pt3dadd( 190.998, 251.566, 17.64, 0.4322 ) }
    dend_20 { pt3dadd( 189.975, 251.493, 16.8932, 0.4068 ) }
    dend_20 { pt3dadd( 189.219, 251.435, 16.52, 0.356 ) }
    dend_20 { pt3dadd( 188.172, 251.246, 16.777, 0.3304 ) }
    dend_20 { pt3dadd( 187.038, 251.117, 16.9131, 0.3304 ) }
    dend_20 { pt3dadd( 186.07, 251.201, 16.8762, 0.3304 ) }
    dend_20 { pt3dadd( 185.082, 251.23, 16.6387, 0.3304 ) }
    dend_20 { pt3dadd( 184.067, 251.526, 16.6645, 0.2796 ) }
    dend_20 { pt3dadd( 183.136, 252.003, 16.6664, 0.2796 ) }
    dend_20 { pt3dadd( 182.279, 252.353, 16.24, 0.2796 ) }
    dend_20 { pt3dadd( 181.271, 252.441, 16.8095, 0.305 ) }
    dend_20 { pt3dadd( 180.435, 253.008, 17.612, 0.305 ) }
    dend_20 { pt3dadd( 179.6, 253.548, 16.8207, 0.305 ) }
    dend_20 { pt3dadd( 178.653, 253.867, 17.626, 0.305 ) }
    dend_20 { pt3dadd( 177.59, 254.164, 18.2039, 0.305 ) }
    dend_20 { pt3dadd( 176.857, 254.534, 19.497, 0.3304 ) }
    dend_20 { pt3dadd( 175.983, 254.863, 19.3883, 0.3814 ) }
    dend_20 { pt3dadd( 175.492, 255.138, 17.432, 0.4322 ) }
    dend_20 { pt3dadd( 174.382, 255.335, 17.4107, 0.4576 ) }
    dend_20 { pt3dadd( 173.863, 255.557, 17.5468, 0.305 ) }
    dend_20 { pt3dadd( 173.583, 255.607, 17.36, 0.3304 ) }
    dend_20 { pt3dadd( 173.303, 255.913, 17.6089, 0.4322 ) }
    dend_20 { pt3dadd( 173.075, 255.836, 18.2622, 0.305 ) }
    dend_20 { pt3dadd( 172.744, 256.065, 18.6668, 0.2542 ) }
    dend_20 { pt3dadd( 172.401, 256.142, 18.76, 0.305 ) }
    dend_20 { pt3dadd( 171.918, 256.269, 18.6668, 0.4322 ) }
    dend_20 { pt3dadd( 171.396, 256.637, 18.4489, 0.356 ) }
    dend_20 { pt3dadd( 171.066, 256.93, 18.8843, 0.3304 ) }
    dend_20 { pt3dadd( 170.951, 256.955, 19.3822, 0.2796 ) }
    dend_20 { pt3dadd( 170.647, 257.248, 19.6, 0.2288 ) }
    dend_20 { pt3dadd( 170.456, 257.4, 19.6, 0.2542 ) }
    dend_20 { pt3dadd( 169.973, 257.705, 19.0089, 0.3814 ) }
    dend_20 { pt3dadd( 169.77, 257.781, 18.2932, 0.3304 ) }
    dend_20 { pt3dadd( 169.541, 258.036, 18.3243, 0.356 ) }
    dend_20 { pt3dadd( 169.528, 258.086, 18.7289, 0.3304 ) }
    dend_20 { pt3dadd( 169.21, 258.392, 18.6357, 0.4576 ) }
    dend_20 { pt3dadd( 168.778, 258.684, 18.1689, 0.3814 ) }
    dend_20 { pt3dadd( 168.346, 258.951, 17.92, 0.305 ) }
    dend_20 { pt3dadd( 168.054, 259.002, 17.92, 0.2542 ) }
    dend_20 { pt3dadd( 167.71, 259.002, 17.92, 0.2288 ) }
    dend_20 { pt3dadd( 167.494, 259.129, 17.92, 0.2288 ) }
    dend_20 { pt3dadd( 167.431, 259.409, 17.92, 0.2288 ) }
    dend_20 { pt3dadd( 166.77, 259.777, 17.92, 0.2288 ) }
    dend_20 { pt3dadd( 166.109, 259.917, 17.92, 0.2288 ) }
    dend_20 { pt3dadd( 165.308, 259.917, 17.92, 0.2288 ) }
    dend_20 { pt3dadd( 164.965, 259.917, 17.92, 0.2288 ) }
    dend_20 { pt3dadd( 164.634, 259.929, 17.92, 0.2288 ) }
    dend_20 { pt3dadd( 164.431, 260.069, 17.92, 0.2288 ) }
    dend_20 { pt3dadd( 164.38, 260.362, 17.92, 0.2542 ) }
    dend_20 { pt3dadd( 164.062, 260.464, 17.4532, 0.3814 ) }
    dend_20 { pt3dadd( 163.706, 260.68, 17.4532, 0.4068 ) }
    dend_20 { pt3dadd( 163.579, 260.896, 17.5468, 0.356 ) }
    dend_20 { pt3dadd( 163.478, 261.061, 17.36, 0.3304 ) }
    dend_20 { pt3dadd( 163.236, 261.175, 17.1111, 0.2796 ) }
    dend_20 { pt3dadd( 162.689, 261.417, 17.08, 0.2288 ) }
    dend_20 { pt3dadd( 162.626, 261.62, 16.8932, 0.2288 ) }
    dend_20 { pt3dadd( 162.27, 261.683, 16.8, 0.2288 ) }
    dend_20 { pt3dadd( 162.13, 261.887, 16.8, 0.2288 ) }
    dend_20 { pt3dadd( 161.749, 261.976, 17.3289, 0.2288 ) }
    dend_20 { pt3dadd( 161.368, 262.155, 17.36, 0.2288 ) }
    dend_20 { pt3dadd( 161.177, 262.281, 17.0178, 0.2288 ) }
    dend_20 { pt3dadd( 160.911, 262.612, 16.8, 0.2288 ) }
    dend_20 { pt3dadd( 160.694, 262.752, 17.6089, 0.305 ) }
    dend_20 { pt3dadd( 160.63, 263.006, 17.1111, 0.4576 ) }
    dend_20 { pt3dadd( 160.465, 263.413, 16.5511, 0.4576 ) }
    dend_20 { pt3dadd( 159.995, 263.654, 17.0489, 0.305 ) }
    dend_20 { pt3dadd( 159.817, 263.871, 17.2043, 0.4322 ) }
    dend_20 { pt3dadd( 159.69, 263.819, 17.64, 0.305 ) }
    dend_20 { pt3dadd( 159.257, 263.806, 17.3289, 0.4322 ) }
    dend_20 { pt3dadd( 159.13, 264.023, 16.7689, 0.2542 ) }
    dend_20 { pt3dadd( 158.927, 264.073, 16.5511, 0.2542 ) }
    dend_20 { pt3dadd( 158.711, 264.187, 16.8, 0.2796 ) }
    dend_20 { pt3dadd( 158.101, 264.264, 17.08, 0.2796 ) }
    dend_20 { pt3dadd( 157.758, 264.264, 17.08, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_20 { pt3dadd( 157.148, 264.493, 17.2668, 0.2288 ) }
    dend_20 { pt3dadd( 156.512, 264.62, 17.36, 0.2288 ) }
    dend_20 { pt3dadd( 156.449, 264.9, 17.36, 0.2288 ) }
    dend_20 { pt3dadd( 156.156, 264.95, 17.36, 0.2288 ) }
    dend_20 { pt3dadd( 155.813, 264.95, 17.36, 0.2288 ) }
    dend_20 { pt3dadd( 155.47, 264.95, 17.36, 0.2288 ) }
    dend_20 { pt3dadd( 155.241, 264.95, 17.36, 0.2542 ) }
    dend_20 { pt3dadd( 154.91, 264.95, 17.3911, 0.305 ) }
    dend_20 { pt3dadd( 154.478, 265.065, 17.5468, 0.4068 ) }
    dend_20 { pt3dadd( 154.288, 265.179, 16.8932, 0.3304 ) }
    dend_20 { pt3dadd( 153.868, 265.294, 16.52, 0.305 ) }
    dend_20 { pt3dadd( 153.614, 265.306, 16.7068, 0.2796 ) }
    dend_20 { pt3dadd( 153.219, 265.141, 17.08, 0.2288 ) }
    dend_20 { pt3dadd( 153.055, 265.167, 17.64, 0.2288 ) }
    dend_20 { pt3dadd( 152.724, 265.179, 17.64, 0.2288 ) }
    dend_20 { pt3dadd( 152.495, 265.179, 17.64, 0.2288 ) }
    dend_20 { pt3dadd( 152.038, 265.179, 17.64, 0.2288 ) }
    dend_20 { pt3dadd( 151.745, 265.217, 17.6711, 0.2288 ) }
    dend_20 { pt3dadd( 151.466, 265.383, 17.5778, 0.2796 ) }
    dend_20 { pt3dadd( 151.237, 265.522, 17.36, 0.356 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 20/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 246.624, 266.634, 18.2812, 0.4576 ) }
    dend_19 { pt3dadd( 246.293, 265.885, 17.876, 0.4322 ) }
    dend_19 { pt3dadd( 245.982, 264.813, 18.24, 0.4068 ) }
    dend_19 { pt3dadd( 246.412, 263.811, 18.412, 0.356 ) }
    dend_19 { pt3dadd( 246.997, 262.829, 18.3123, 0.305 ) }
    dend_19 { pt3dadd( 247.435, 261.784, 18.0508, 0.3304 ) }
    dend_19 { pt3dadd( 247.633, 260.67, 17.7677, 0.3304 ) }
    dend_19 { pt3dadd( 247.922, 259.61, 17.0937, 0.356 ) }
    dend_19 { pt3dadd( 247.975, 258.6, 15.8858, 0.356 ) }
    dend_19 { pt3dadd( 247.741, 257.509, 15.5285, 0.4068 ) }
    dend_19 { pt3dadd( 247.675, 256.37, 15.5672, 0.4068 ) }
    dend_19 { pt3dadd( 247.96, 255.272, 15.4924, 0.3814 ) }
    dend_19 { pt3dadd( 248.271, 254.205, 14.8669, 0.3304 ) }
    dend_19 { pt3dadd( 248.83, 253.259, 14.1372, 0.305 ) }
    dend_19 { pt3dadd( 249.714, 252.552, 13.9768, 0.305 ) }
    dend_19 { pt3dadd( 250.577, 251.805, 13.8242, 0.2796 ) }
    dend_19 { pt3dadd( 251.435, 251.05, 13.7917, 0.2542 ) }
    dend_19 { pt3dadd( 251.571, 250.029, 12.7884, 0.2288 ) }
    dend_19 { pt3dadd( 251.251, 248.939, 12.5983, 0.2796 ) }
    dend_19 { pt3dadd( 251.297, 247.797, 12.5628, 0.356 ) }
    dend_19 { pt3dadd( 251.626, 246.708, 12.3012, 0.483 ) }
    dend_19 { pt3dadd( 251.68, 245.617, 11.48, 0.5338 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 42/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 260.565, 294.605, 23.5511, 0.5592 ) }
    dend_14 { pt3dadd( 260.182, 294.873, 22.6019, 0.5592 ) }
    dend_14 { pt3dadd( 259.917, 295.713, 22.085, 0.4576 ) }
    dend_14 { pt3dadd( 259.988, 296.296, 20.5097, 0.4322 ) }
    dend_14 { pt3dadd( 260.603, 296.296, 19.04, 0.4576 ) }
    dend_14 { pt3dadd( 259.447, 296.283, 18.48, 0.4322 ) }
    dend_14 { pt3dadd( 259.332, 296.83, 17.7957, 0.3304 ) }
    dend_14 { pt3dadd( 259.193, 296.741, 16.6443, 0.2542 ) }
    dend_14 { pt3dadd( 258.76, 296.423, 16.52, 0.3814 ) }
    dend_14 { pt3dadd( 258.43, 296.283, 16.7689, 0.3304 ) }
    dend_14 { pt3dadd( 258.456, 295.368, 16.8507, 0.483 ) }
    dend_14 { pt3dadd( 258.315, 294.601, 16.3192, 0.5084 ) }
    dend_14 { pt3dadd( 258.885, 293.894, 16.0045, 0.483 ) }
    dend_14 { pt3dadd( 259.402, 293.884, 15.3269, 0.483 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 56/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 260.565, 294.605, 23.5511, 0.5592 ) }
    dend_11 { pt3dadd( 260.159, 294.351, 23.5505, 0.305 ) }
    dend_11 { pt3dadd( 259.479, 293.888, 24.7436, 0.305 ) }
    dend_11 { pt3dadd( 258.773, 293.494, 26.04, 0.305 ) }
    dend_11 { pt3dadd( 258.171, 292.87, 25.2, 0.305 ) }
    dend_11 { pt3dadd( 257.791, 291.92, 24.3617, 0.2796 ) }
    dend_11 { pt3dadd( 256.986, 291.179, 24.08, 0.2542 ) }
    dend_11 { pt3dadd( 256.074, 290.805, 24.08, 0.2542 ) }
    dend_11 { pt3dadd( 255.388, 290.233, 24.64, 0.2796 ) }
    dend_11 { pt3dadd( 254.477, 289.988, 24.6218, 0.305 ) }
    dend_11 { pt3dadd( 253.788, 289.89, 26.2909, 0.2796 ) }
    dend_11 { pt3dadd( 252.968, 289.375, 26.8954, 0.305 ) }
    dend_11 { pt3dadd( 251.964, 289.137, 26.6, 0.3304 ) }
    dend_11 { pt3dadd( 251.455, 288.33, 27.8015, 0.4068 ) }
    dend_11 { pt3dadd( 250.76, 287.484, 27.72, 0.4322 ) }
    dend_11 { pt3dadd( 249.91, 287.027, 26.9511, 0.5084 ) }
    dend_11 { pt3dadd( 249.296, 286.292, 26.7999, 0.5592 ) }
    dend_11 { pt3dadd( 248.543, 285.76, 26.9609, 0.6102 ) }
    dend_11 { pt3dadd( 247.634, 285.301, 27.1547, 0.5848 ) }
    dend_11 { pt3dadd( 246.656, 285.101, 27.1261, 0.5592 ) }
    dend_11 { pt3dadd( 246.3, 284.754, 26.1864, 0.5338 ) }
    dend_11 { pt3dadd( 245.373, 284.538, 26.5849, 0.5338 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 78/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 256.24, 308.206, 23.5234, 0.5848 ) }
    dend_5 { pt3dadd( 255.46, 308.44, 23.5211, 0.305 ) }
    dend_5 { pt3dadd( 254.347, 308.683, 23.518, 0.2796 ) }
    dend_5 { pt3dadd( 253.396, 309.147, 23.5088, 0.2542 ) }
    dend_5 { pt3dadd( 252.618, 309.98, 23.4702, 0.2288 ) }
    dend_5 { pt3dadd( 251.61, 310.474, 23.2459, 0.2796 ) }
    dend_5 { pt3dadd( 250.488, 310.526, 23.2436, 0.3814 ) }
    dend_5 { pt3dadd( 249.497, 310.142, 24.0481, 0.5084 ) }
    dend_5 { pt3dadd( 248.852, 309.543, 25.751, 0.5338 ) }
    dend_5 { pt3dadd( 248.272, 308.649, 26.6616, 0.5084 ) }
    dend_5 { pt3dadd( 247.371, 307.968, 26.7386, 0.483 ) }
    dend_5 { pt3dadd( 246.322, 307.523, 26.6008, 0.5084 ) }
    dend_5 { pt3dadd( 245.326, 306.963, 26.5146, 0.483 ) }
    dend_5 { pt3dadd( 244.454, 306.225, 26.3696, 0.3814 ) }
    dend_5 { pt3dadd( 243.508, 305.596, 26.6417, 0.3304 ) }
    dend_5 { pt3dadd( 242.838, 304.672, 26.8531, 0.3304 ) }
    dend_5 { pt3dadd( 242.098, 303.801, 26.8069, 0.4322 ) }
    dend_5 { pt3dadd( 241.153, 303.225, 26.1433, 0.4322 ) }
    dend_5 { pt3dadd( 240.155, 302.718, 25.5646, 0.4576 ) }
    dend_5 { pt3dadd( 239.604, 302.347, 26.9732, 0.4068 ) }
    dend_5 { pt3dadd( 239.554, 301.648, 26.9422, 0.4322 ) }
    dend_5 { pt3dadd( 239.414, 301.673, 25.8222, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_5 { pt3dadd( 238.791, 301.292, 25.2, 0.3304 ) }
    dend_5 { pt3dadd( 238.384, 300.783, 25.76, 0.4576 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 2/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 256.24, 308.206, 23.5234, 0.5848 ) }
    dend_2 { pt3dadd( 255.859, 309.22, 21.406, 0.5084 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 4/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 252.697, 278.996, 34.8132, 0.3814 ) }
    dend_42 { pt3dadd( 252.392, 278.653, 34.16, 0.4322 ) }
    dend_42 { pt3dadd( 251.896, 278.335, 34.4089, 0.3814 ) }
    dend_42 { pt3dadd( 251.222, 278.233, 34.4711, 0.4068 ) }
    dend_42 { pt3dadd( 250.841, 278.132, 34.4711, 0.4068 ) }
    dend_42 { pt3dadd( 250.663, 277.649, 34.4711, 0.4068 ) }
    dend_42 { pt3dadd( 250.536, 277.534, 35.28, 0.4576 ) }
    dend_42 { pt3dadd( 250.523, 277.216, 35.7468, 0.4322 ) }
    dend_42 { pt3dadd( 250.536, 276.861, 35.5911, 0.3814 ) }
    dend_42 { pt3dadd( 250.574, 276.505, 36.3068, 0.4068 ) }
    dend_42 { pt3dadd( 250.65, 276.162, 36.4, 0.3814 ) }
    dend_42 { pt3dadd( 250.688, 275.856, 36.4, 0.305 ) }
    dend_42 { pt3dadd( 250.765, 275.018, 36.4, 0.2542 ) }
    dend_42 { pt3dadd( 250.765, 274.674, 36.4, 0.305 ) }
    dend_42 { pt3dadd( 250.917, 274.255, 36.6178, 0.4068 ) }
    dend_42 { pt3dadd( 250.765, 273.975, 36.3689, 0.3304 ) }
    dend_42 { pt3dadd( 250.765, 273.645, 36.4, 0.305 ) }
    dend_42 { pt3dadd( 250.676, 273.416, 36.7422, 0.305 ) }
    dend_42 { pt3dadd( 250.536, 272.958, 37.24, 0.2542 ) }
    dend_42 { pt3dadd( 250.536, 272.615, 37.24, 0.2288 ) }
    dend_42 { pt3dadd( 250.714, 272.386, 37.1157, 0.2288 ) }
    dend_42 { pt3dadd( 250.777, 272.17, 36.4, 0.305 ) }
    dend_42 { pt3dadd( 250.879, 271.929, 36.68, 0.305 ) }
    dend_42 { pt3dadd( 251.031, 271.738, 37.24, 0.2288 ) }
    dend_42 { pt3dadd( 251.108, 271.7, 37.8, 0.2288 ) }
    dend_42 { pt3dadd( 251.108, 271.7, 38.36, 0.2288 ) }
    dend_42 { pt3dadd( 251.108, 271.7, 38.92, 0.2288 ) }
    dend_42 { pt3dadd( 251.108, 271.65, 39.6357, 0.2288 ) }
    dend_42 { pt3dadd( 251.197, 271.433, 40.0089, 0.2288 ) }
    dend_42 { pt3dadd( 251.337, 271.242, 40.04, 0.2542 ) }
    dend_42 { pt3dadd( 251.553, 271.039, 39.9468, 0.305 ) }
    dend_42 { pt3dadd( 251.566, 270.772, 39.5111, 0.2796 ) }
    dend_42 { pt3dadd( 251.82, 270.352, 39.2, 0.305 ) }
    dend_42 { pt3dadd( 252.112, 269.882, 39.2932, 0.356 ) }
    dend_42 { pt3dadd( 252.29, 269.526, 39.6668, 0.356 ) }
    dend_42 { pt3dadd( 252.379, 269.425, 40.04, 0.3304 ) }
    dend_42 { pt3dadd( 252.557, 269.412, 40.4132, 0.2796 ) }
    dend_42 { pt3dadd( 252.71, 269.412, 40.6, 0.2542 ) }
    dend_42 { pt3dadd( 252.913, 269.412, 40.9422, 0.305 ) }
    dend_42 { pt3dadd( 253.053, 269.335, 41.2532, 0.2288 ) }
    dend_42 { pt3dadd( 253.167, 269.107, 41.3468, 0.2288 ) }
    dend_42 { pt3dadd( 253.167, 268.827, 40.9111, 0.2542 ) }
    dend_42 { pt3dadd( 253.282, 268.268, 40.88, 0.4322 ) }
    dend_42 { pt3dadd( 253.371, 267.887, 40.3511, 0.5592 ) }
    dend_42 { pt3dadd( 253.777, 267.391, 40.32, 0.483 ) }
    dend_42 { pt3dadd( 254.299, 267.226, 40.88, 0.5084 ) }
    dend_42 { pt3dadd( 254.769, 267.047, 41.2532, 0.4068 ) }
    dend_42 { pt3dadd( 255.162, 266.831, 41.72, 0.305 ) }
    dend_42 { pt3dadd( 255.646, 266.514, 41.72, 0.2796 ) }
    dend_42 { pt3dadd( 256.016, 266.082, 41.72, 0.305 ) }
    dend_42 { pt3dadd( 256.497, 265.866, 41.4711, 0.3814 ) }
    dend_42 { pt3dadd( 256.905, 265.866, 41.3468, 0.3814 ) }
    dend_42 { pt3dadd( 257.057, 265.853, 41.1911, 0.2542 ) }
    dend_42 { pt3dadd( 257.273, 265.637, 41.1289, 0.3304 ) }
    dend_42 { pt3dadd( 257.286, 265.408, 40.9422, 0.2542 ) }
    dend_42 { pt3dadd( 257.286, 265.294, 41.44, 0.2288 ) }
    dend_42 { pt3dadd( 257.286, 265.179, 42.0, 0.2288 ) }
    dend_42 { pt3dadd( 257.425, 264.95, 42.4978, 0.2288 ) }
    dend_42 { pt3dadd( 257.629, 264.95, 42.84, 0.2288 ) }
    dend_42 { pt3dadd( 257.793, 264.95, 43.5557, 0.2288 ) }
    dend_42 { pt3dadd( 258.01, 264.95, 43.8668, 0.2542 ) }
    dend_42 { pt3dadd( 258.315, 264.95, 43.96, 0.305 ) }
    dend_42 { pt3dadd( 259.066, 265.027, 43.9289, 0.4322 ) }
    dend_42 { pt3dadd( 259.003, 264.988, 42.6532, 0.4322 ) }
    dend_42 { pt3dadd( 259.345, 265.065, 41.72, 0.305 ) }
    dend_42 { pt3dadd( 259.574, 265.065, 41.5022, 0.2542 ) }
    dend_42 { pt3dadd( 259.815, 265.065, 41.6889, 0.305 ) }
    dend_42 { pt3dadd( 260.031, 265.052, 42.2489, 0.4068 ) }
    dend_42 { pt3dadd( 260.031, 264.645, 42.4668, 0.4068 ) }
    dend_42 { pt3dadd( 260.044, 264.162, 42.0, 0.305 ) }
    dend_42 { pt3dadd( 260.26, 264.15, 41.72, 0.2542 ) }
    dend_42 { pt3dadd( 260.718, 264.15, 41.72, 0.2288 ) }
    dend_42 { pt3dadd( 261.061, 264.15, 41.72, 0.2288 ) }
    dend_42 { pt3dadd( 261.964, 264.15, 41.6889, 0.2288 ) }
    dend_42 { pt3dadd( 262.217, 264.15, 41.4711, 0.2542 ) }
    dend_42 { pt3dadd( 262.548, 264.15, 41.44, 0.2796 ) }
    dend_42 { pt3dadd( 262.841, 264.112, 41.4711, 0.3304 ) }
    dend_42 { pt3dadd( 262.968, 264.023, 41.7822, 0.356 ) }
    dend_42 { pt3dadd( 263.043, 263.921, 42.1868, 0.356 ) }
    dend_42 { pt3dadd( 263.171, 263.806, 42.7157, 0.4322 ) }
    dend_42 { pt3dadd( 263.349, 263.844, 43.0268, 0.3304 ) }
    dend_42 { pt3dadd( 263.603, 264.01, 43.12, 0.4068 ) }
    dend_42 { pt3dadd( 263.921, 264.035, 43.12, 0.4576 ) }
    dend_42 { pt3dadd( 264.645, 263.844, 42.28, 0.3814 ) }
    dend_42 { pt3dadd( 264.951, 263.921, 42.28, 0.3814 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 89/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 252.697, 278.996, 34.8132, 0.3814 ) }
    dend_41 { pt3dadd( 252.527, 277.91, 34.1866, 0.3814 ) }
    dend_41 { pt3dadd( 253.047, 277.314, 33.7764, 0.4068 ) }
    dend_41 { pt3dadd( 253.34, 276.284, 33.8184, 0.4322 ) }
    dend_41 { pt3dadd( 253.325, 275.198, 33.9083, 0.4576 ) }
    dend_41 { pt3dadd( 253.45, 274.303, 33.1262, 0.4576 ) }
    dend_41 { pt3dadd( 253.736, 273.236, 32.9353, 0.4576 ) }
    dend_41 { pt3dadd( 254.412, 272.573, 33.3976, 0.4576 ) }
    dend_41 { pt3dadd( 254.197, 271.781, 34.3991, 0.4322 ) }
    dend_41 { pt3dadd( 254.4, 270.956, 32.7429, 0.4068 ) }
    dend_41 { pt3dadd( 254.766, 270.27, 31.2998, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_41 { pt3dadd( 255.305, 269.33, 30.7955, 0.3814 ) }
    dend_41 { pt3dadd( 255.505, 268.564, 30.24, 0.3814 ) }
    dend_41 { pt3dadd( 255.913, 267.821, 29.4468, 0.3814 ) }
    dend_41 { pt3dadd( 256.02, 266.92, 29.1169, 0.4068 ) }
    dend_41 { pt3dadd( 256.36, 266.136, 29.3334, 0.4322 ) }
    dend_41 { pt3dadd( 256.828, 265.216, 29.3947, 0.4322 ) }
    dend_41 { pt3dadd( 256.718, 264.127, 29.3605, 0.3814 ) }
    dend_41 { pt3dadd( 256.942, 263.208, 28.8229, 0.356 ) }
    dend_41 { pt3dadd( 257.046, 262.177, 28.0252, 0.3814 ) }
    dend_41 { pt3dadd( 257.699, 261.26, 28.0, 0.4322 ) }
    dend_41 { pt3dadd( 257.858, 260.162, 28.0255, 0.4322 ) }
    dend_41 { pt3dadd( 258.123, 259.087, 27.5531, 0.3814 ) }
    dend_41 { pt3dadd( 258.77, 258.161, 27.44, 0.3304 ) }
    dend_41 { pt3dadd( 259.052, 257.248, 27.6889, 0.356 ) }
    dend_41 { pt3dadd( 259.268, 255.989, 26.88, 0.4576 ) }
    dend_41 { pt3dadd( 259.029, 255.614, 25.7796, 0.4322 ) }
    dend_41 { pt3dadd( 258.887, 254.624, 25.6589, 0.4322 ) }
    dend_41 { pt3dadd( 258.887, 253.528, 26.2534, 0.4068 ) }
    dend_41 { pt3dadd( 258.626, 252.549, 25.3473, 0.4068 ) }
    dend_41 { pt3dadd( 258.062, 251.753, 25.1689, 0.3814 ) }
    dend_41 { pt3dadd( 258.052, 250.71, 24.3911, 0.4068 ) }
    dend_41 { pt3dadd( 257.567, 249.969, 25.1658, 0.4068 ) }
    dend_41 { pt3dadd( 257.025, 249.239, 24.36, 0.3814 ) }
    dend_41 { pt3dadd( 256.677, 248.177, 24.269, 0.305 ) }
    dend_41 { pt3dadd( 256.573, 247.05, 24.0562, 0.2542 ) }
    dend_41 { pt3dadd( 256.485, 245.922, 24.3289, 0.2288 ) }
    dend_41 { pt3dadd( 256.027, 244.93, 23.7997, 0.2542 ) }
    dend_41 { pt3dadd( 255.493, 244.454, 22.7119, 0.2796 ) }
    dend_41 { pt3dadd( 255.215, 243.584, 22.1477, 0.305 ) }
    dend_41 { pt3dadd( 254.535, 242.663, 22.12, 0.305 ) }
    dend_41 { pt3dadd( 253.942, 241.697, 22.0682, 0.305 ) }
    dend_41 { pt3dadd( 253.689, 240.858, 22.0567, 0.305 ) }
    dend_41 { pt3dadd( 253.751, 239.872, 21.56, 0.2796 ) }
    dend_41 { pt3dadd( 253.968, 238.809, 21.56, 0.2542 ) }
    dend_41 { pt3dadd( 253.968, 237.665, 21.56, 0.2288 ) }
    dend_41 { pt3dadd( 253.968, 236.521, 21.56, 0.2288 ) }
    dend_41 { pt3dadd( 253.968, 235.377, 21.56, 0.2288 ) }
    dend_41 { pt3dadd( 254.122, 234.257, 21.56, 0.2288 ) }
    dend_41 { pt3dadd( 254.408, 233.15, 21.56, 0.2288 ) }
    dend_41 { pt3dadd( 254.576, 232.024, 21.56, 0.2288 ) }
    dend_41 { pt3dadd( 255.57, 231.66, 21.56, 0.2542 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 41/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 283.953, 284.615, 26.88, 0.4068 ) }
    dend_33 { pt3dadd( 283.747, 284.139, 26.2833, 0.3304 ) }
    dend_33 { pt3dadd( 284.145, 283.598, 25.4568, 0.3304 ) }
    dend_33 { pt3dadd( 284.242, 282.978, 23.5847, 0.305 ) }
    dend_33 { pt3dadd( 284.514, 281.936, 24.0873, 0.356 ) }
    dend_33 { pt3dadd( 284.311, 281.316, 25.9678, 0.4068 ) }
    dend_33 { pt3dadd( 284.398, 280.392, 25.0163, 0.4576 ) }
    dend_33 { pt3dadd( 284.171, 279.32, 24.6168, 0.4322 ) }
    dend_33 { pt3dadd( 284.251, 278.372, 23.2778, 0.4068 ) }
    dend_33 { pt3dadd( 284.177, 277.328, 23.9778, 0.3814 ) }
    dend_33 { pt3dadd( 284.19, 276.394, 23.24, 0.356 ) }
    dend_33 { pt3dadd( 284.055, 275.425, 22.4602, 0.3304 ) }
    dend_33 { pt3dadd( 284.044, 274.399, 21.8949, 0.305 ) }
    dend_33 { pt3dadd( 284.284, 273.327, 22.239, 0.305 ) }
    dend_33 { pt3dadd( 284.177, 272.653, 21.0804, 0.305 ) }
    dend_33 { pt3dadd( 284.556, 271.91, 22.3138, 0.305 ) }
    dend_33 { pt3dadd( 285.428, 272.272, 22.96, 0.3304 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 58/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 283.953, 284.615, 26.88, 0.4068 ) }
    dend_32 { pt3dadd( 283.103, 283.968, 26.88, 0.4322 ) }
    dend_32 { pt3dadd( 282.272, 283.247, 26.88, 0.4576 ) }
    dend_32 { pt3dadd( 281.654, 282.856, 28.2618, 0.4322 ) }
    dend_32 { pt3dadd( 280.843, 282.288, 28.8431, 0.4322 ) }
    dend_32 { pt3dadd( 279.865, 282.188, 30.1689, 0.4576 ) }
    dend_32 { pt3dadd( 279.07, 281.967, 28.9265, 0.5592 ) }
    dend_32 { pt3dadd( 278.628, 281.445, 27.2569, 0.5848 ) }
    dend_32 { pt3dadd( 277.807, 281.429, 28.2254, 0.5338 ) }
    dend_32 { pt3dadd( 277.132, 281.318, 29.9592, 0.4068 ) }
    dend_32 { pt3dadd( 276.276, 281.108, 30.4142, 0.356 ) }
    dend_32 { pt3dadd( 275.52, 280.391, 29.8696, 0.356 ) }
    dend_32 { pt3dadd( 274.763, 279.707, 29.0178, 0.356 ) }
    dend_32 { pt3dadd( 273.736, 279.555, 29.4288, 0.356 ) }
    dend_32 { pt3dadd( 273.077, 279.136, 29.9236, 0.356 ) }
    dend_32 { pt3dadd( 272.138, 279.022, 29.12, 0.3814 ) }
    dend_32 { pt3dadd( 271.454, 278.617, 27.6489, 0.3304 ) }
    dend_32 { pt3dadd( 270.5, 278.221, 26.9861, 0.2796 ) }
    dend_32 { pt3dadd( 269.793, 278.068, 25.48, 0.2542 ) }
    dend_32 { pt3dadd( 269.184, 277.306, 25.48, 0.3304 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 78/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 289.21, 280.81, 20.4506, 0.483 ) }
    dend_28 { pt3dadd( 288.78, 279.726, 20.7959, 0.356 ) }
    dend_28 { pt3dadd( 288.747, 278.597, 20.5436, 0.3304 ) }
    dend_28 { pt3dadd( 288.757, 277.478, 19.959, 0.3304 ) }
    dend_28 { pt3dadd( 289.073, 276.465, 18.9773, 0.3814 ) }
    dend_28 { pt3dadd( 289.704, 275.566, 18.244, 0.4068 ) }
    dend_28 { pt3dadd( 290.479, 274.729, 18.0975, 0.4068 ) }
    dend_28 { pt3dadd( 291.174, 273.822, 17.9726, 0.3814 ) }
    dend_28 { pt3dadd( 291.595, 272.763, 18.1409, 0.4322 ) }
    dend_28 { pt3dadd( 292.086, 271.731, 18.1591, 0.483 ) }
    dend_28 { pt3dadd( 292.824, 270.861, 17.9724, 0.5084 ) }
    dend_28 { pt3dadd( 293.686, 270.111, 17.9309, 0.4576 ) }
    dend_28 { pt3dadd( 294.727, 269.636, 17.9866, 0.4068 ) }
    dend_28 { pt3dadd( 295.46, 268.776, 18.3677, 0.4068 ) }
    dend_28 { pt3dadd( 296.151, 268.172, 17.6638, 0.3814 ) }
    dend_28 { pt3dadd( 296.855, 267.455, 17.64, 0.305 ) }
    dend_28 { pt3dadd( 297.135, 267.099, 16.2711, 0.2542 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 95/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 289.21, 280.81, 20.4506, 0.483 ) }
    dend_27 { pt3dadd( 290.169, 281.33, 19.502, 0.3304 ) }
    dend_27 { pt3dadd( 291.056, 282.043, 19.7456, 0.4576 ) }
    dend_27 { pt3dadd( 292.033, 282.635, 19.7641, 0.5592 ) }
    dend_27 { pt3dadd( 292.97, 283.283, 19.9536, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 293.831, 283.974, 20.6662, 0.483 ) }
    dend_27 { pt3dadd( 294.772, 284.605, 20.9762, 0.4068 ) }
    dend_27 { pt3dadd( 295.751, 284.978, 19.9276, 0.4068 ) }
    dend_27 { pt3dadd( 295.61, 285.2, 19.0316, 0.4322 ) }
    dend_27 { pt3dadd( 296.218, 285.457, 17.3799, 0.4576 ) }
    dend_27 { pt3dadd( 296.639, 286.271, 18.1471, 0.4322 ) }
    dend_27 { pt3dadd( 297.286, 287.063, 18.2, 0.4068 ) }
    dend_27 { pt3dadd( 297.832, 287.801, 18.7312, 0.356 ) }
    dend_27 { pt3dadd( 298.621, 287.613, 20.4607, 0.3304 ) }
    dend_27 { pt3dadd( 299.504, 287.653, 21.4973, 0.2796 ) }
    dend_27 { pt3dadd( 300.284, 288.191, 21.6395, 0.2542 ) }
    dend_27 { pt3dadd( 300.438, 289.284, 21.8238, 0.2288 ) }
    dend_27 { pt3dadd( 301.076, 289.89, 21.079, 0.2288 ) }
    dend_27 { pt3dadd( 301.214, 290.243, 18.8947, 0.2796 ) }
    dend_27 { pt3dadd( 301.287, 290.863, 17.1704, 0.356 ) }
    dend_27 { pt3dadd( 301.968, 291.487, 16.1168, 0.4576 ) }
    dend_27 { pt3dadd( 303.02, 291.72, 16.6936, 0.483 ) }
    dend_27 { pt3dadd( 303.503, 291.773, 17.379, 0.483 ) }
    dend_27 { pt3dadd( 303.961, 292.235, 18.4811, 0.483 ) }
    dend_27 { pt3dadd( 304.352, 292.933, 19.32, 0.5084 ) }
    dend_27 { pt3dadd( 304.952, 293.674, 18.76, 0.5084 ) }
    dend_27 { pt3dadd( 305.766, 294.423, 19.0876, 0.4576 ) }
    dend_27 { pt3dadd( 306.4, 295.18, 17.8805, 0.3814 ) }
    dend_27 { pt3dadd( 306.754, 296.161, 18.1392, 0.356 ) }
    dend_27 { pt3dadd( 307.421, 296.518, 19.973, 0.3814 ) }
    dend_27 { pt3dadd( 308.194, 296.738, 20.47, 0.4576 ) }
    dend_27 { pt3dadd( 309.16, 296.688, 20.0452, 0.5084 ) }
    dend_27 { pt3dadd( 310.024, 297.18, 19.8229, 0.5338 ) }
    dend_27 { pt3dadd( 310.832, 297.116, 20.72, 0.5592 ) }
    dend_27 { pt3dadd( 311.916, 297.286, 20.2135, 0.5848 ) }
    dend_27 { pt3dadd( 312.541, 297.567, 18.3042, 0.5592 ) }
    dend_27 { pt3dadd( 313.038, 298.2, 17.5941, 0.4576 ) }
    dend_27 { pt3dadd( 313.775, 299.039, 17.1391, 0.356 ) }
    dend_27 { pt3dadd( 314.646, 299.385, 17.7358, 0.356 ) }
    dend_27 { pt3dadd( 315.755, 299.543, 18.0452, 0.4322 ) }
    dend_27 { pt3dadd( 316.605, 300.028, 19.2928, 0.483 ) }
    dend_27 { pt3dadd( 317.53, 299.988, 20.148, 0.4322 ) }
    dend_27 { pt3dadd( 318.287, 300.3, 21.5334, 0.356 ) }
    dend_27 { pt3dadd( 318.831, 300.919, 20.3851, 0.3304 ) }
    dend_27 { pt3dadd( 319.329, 301.637, 19.0795, 0.356 ) }
    dend_27 { pt3dadd( 320.197, 301.82, 18.6497, 0.356 ) }
    dend_27 { pt3dadd( 320.913, 302.297, 19.8229, 0.305 ) }
    dend_27 { pt3dadd( 321.428, 302.908, 20.9132, 0.2796 ) }
    dend_27 { pt3dadd( 321.734, 303.596, 21.7669, 0.2796 ) }
    dend_27 { pt3dadd( 322.52, 304.152, 20.3521, 0.3304 ) }
    dend_27 { pt3dadd( 322.939, 304.345, 18.2294, 0.3304 ) }
    dend_27 { pt3dadd( 323.981, 304.304, 17.36, 0.3304 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 47/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 259.402, 293.884, 15.3269, 0.483 ) }
    dend_16 { pt3dadd( 259.003, 293.474, 13.5332, 0.5338 ) }
    dend_16 { pt3dadd( 258.582, 293.093, 13.9068, 0.5338 ) }
    dend_16 { pt3dadd( 257.743, 292.826, 12.9732, 0.4068 ) }
    dend_16 { pt3dadd( 257.438, 292.521, 12.7868, 0.4068 ) }
    dend_16 { pt3dadd( 257.21, 292.444, 12.04, 0.305 ) }
    dend_16 { pt3dadd( 256.828, 292.521, 11.76, 0.2542 ) }
    dend_16 { pt3dadd( 256.574, 292.597, 11.7289, 0.2288 ) }
    dend_16 { pt3dadd( 256.116, 292.635, 10.9822, 0.2288 ) }
    dend_16 { pt3dadd( 256.167, 292.762, 10.4532, 0.2288 ) }
    dend_16 { pt3dadd( 256.333, 292.889, 10.3289, 0.2288 ) }
    dend_16 { pt3dadd( 256.333, 293.093, 9.3332, 0.2288 ) }
    dend_16 { pt3dadd( 256.218, 293.004, 8.7111, 0.2542 ) }
    dend_16 { pt3dadd( 256.104, 292.75, 8.4932, 0.2542 ) }
    dend_16 { pt3dadd( 255.836, 292.369, 8.4, 0.2288 ) }
    dend_16 { pt3dadd( 255.798, 292.063, 8.4, 0.2288 ) }
    dend_16 { pt3dadd( 255.761, 291.758, 8.4, 0.2288 ) }
    dend_16 { pt3dadd( 255.455, 291.606, 8.4, 0.2288 ) }
    dend_16 { pt3dadd( 255.15, 291.568, 8.4, 0.2288 ) }
    dend_16 { pt3dadd( 254.731, 291.364, 9.1157, 0.483 ) }
    dend_16 { pt3dadd( 254.527, 291.339, 10.1422, 0.4576 ) }
    dend_16 { pt3dadd( 254.197, 291.034, 10.64, 0.4068 ) }
    dend_16 { pt3dadd( 254.082, 290.462, 10.64, 0.5338 ) }
    dend_16 { pt3dadd( 253.866, 290.068, 11.1068, 0.3814 ) }
    dend_16 { pt3dadd( 253.701, 289.813, 11.2, 0.356 ) }
    dend_16 { pt3dadd( 253.473, 289.368, 10.8889, 0.356 ) }
    dend_16 { pt3dadd( 253.053, 289.241, 10.7332, 0.4068 ) }
    dend_16 { pt3dadd( 252.633, 288.822, 10.92, 0.305 ) }
    dend_16 { pt3dadd( 252.595, 288.517, 10.92, 0.2542 ) }
    dend_16 { pt3dadd( 252.366, 288.288, 10.92, 0.2288 ) }
    dend_16 { pt3dadd( 252.1, 288.211, 10.92, 0.2288 ) }
    dend_16 { pt3dadd( 251.794, 287.843, 10.6711, 0.2288 ) }
    dend_16 { pt3dadd( 251.782, 287.538, 11.0132, 0.2288 ) }
    dend_16 { pt3dadd( 251.553, 287.157, 11.48, 0.356 ) }
    dend_16 { pt3dadd( 251.299, 286.724, 11.48, 0.3814 ) }
    dend_16 { pt3dadd( 250.994, 286.686, 10.64, 0.3814 ) }
    dend_16 { pt3dadd( 250.904, 286.649, 10.1111, 0.2542 ) }
    dend_16 { pt3dadd( 250.536, 286.458, 9.8622, 0.4576 ) }
    dend_16 { pt3dadd( 250.422, 286.102, 9.5511, 0.2288 ) }
    dend_16 { pt3dadd( 250.18, 285.898, 9.24, 0.2288 ) }
    dend_16 { pt3dadd( 249.85, 286.0, 9.24, 0.2288 ) }
    dend_16 { pt3dadd( 249.646, 286.077, 9.4889, 0.305 ) }
    dend_16 { pt3dadd( 249.456, 285.707, 9.52, 0.4322 ) }
    dend_16 { pt3dadd( 248.972, 285.644, 9.8622, 0.3814 ) }
    dend_16 { pt3dadd( 248.756, 285.542, 10.2043, 0.3304 ) }
    dend_16 { pt3dadd( 248.706, 285.542, 10.92, 0.3304 ) }
    dend_16 { pt3dadd( 248.502, 285.326, 11.3868, 0.4322 ) }
    dend_16 { pt3dadd( 248.273, 285.276, 10.9511, 0.2542 ) }
    dend_16 { pt3dadd( 248.057, 285.06, 10.9511, 0.2796 ) }
    dend_16 { pt3dadd( 248.019, 284.843, 11.4489, 0.305 ) }
    dend_16 { pt3dadd( 248.096, 284.513, 11.5732, 0.2288 ) }
    dend_16 { pt3dadd( 248.134, 284.373, 11.9778, 0.2288 ) }
    dend_16 { pt3dadd( 248.096, 284.195, 12.2889, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_16 { pt3dadd( 248.019, 284.017, 12.5068, 0.2288 ) }
    dend_16 { pt3dadd( 247.599, 283.674, 12.32, 0.2288 ) }
    dend_16 { pt3dadd( 247.383, 283.483, 11.9157, 0.2288 ) }
    dend_16 { pt3dadd( 247.154, 283.483, 11.3557, 0.305 ) }
    dend_16 { pt3dadd( 246.799, 283.369, 11.5732, 0.356 ) }
    dend_16 { pt3dadd( 246.57, 283.217, 11.76, 0.2542 ) }
    dend_16 { pt3dadd( 246.189, 282.911, 11.48, 0.2288 ) }
    dend_16 { pt3dadd( 245.973, 282.797, 11.4489, 0.2288 ) }
    dend_16 { pt3dadd( 245.744, 282.835, 10.7957, 0.2288 ) }
    dend_16 { pt3dadd( 245.54, 282.797, 10.2668, 0.2288 ) }
    dend_16 { pt3dadd( 245.311, 282.708, 9.8311, 0.2288 ) }
    dend_16 { pt3dadd( 245.388, 282.428, 9.5822, 0.2288 ) }
    dend_16 { pt3dadd( 245.236, 282.034, 9.24, 0.305 ) }
    dend_16 { pt3dadd( 245.159, 281.755, 9.4889, 0.305 ) }
    dend_16 { pt3dadd( 245.286, 281.17, 9.7068, 0.305 ) }
    dend_16 { pt3dadd( 245.426, 280.763, 10.0489, 0.2796 ) }
    dend_16 { pt3dadd( 245.54, 280.559, 10.0489, 0.305 ) }
    dend_16 { pt3dadd( 245.769, 280.242, 9.52, 0.4576 ) }
    dend_16 { pt3dadd( 245.719, 279.644, 9.6132, 0.5338 ) }
    dend_16 { pt3dadd( 245.629, 279.556, 10.5157, 0.3814 ) }
    dend_16 { pt3dadd( 245.795, 279.479, 10.7643, 0.356 ) }
    dend_16 { pt3dadd( 245.922, 279.467, 11.2622, 0.3304 ) }
    dend_16 { pt3dadd( 246.062, 279.238, 11.48, 0.2796 ) }
    dend_16 { pt3dadd( 245.998, 278.907, 11.6668, 0.2288 ) }
    dend_16 { pt3dadd( 245.871, 278.641, 10.9511, 0.3814 ) }
    dend_16 { pt3dadd( 245.617, 278.335, 10.64, 0.3304 ) }
    dend_16 { pt3dadd( 245.604, 277.89, 10.64, 0.4322 ) }
    dend_16 { pt3dadd( 245.286, 277.445, 10.2668, 0.4322 ) }
    dend_16 { pt3dadd( 245.274, 276.861, 9.8311, 0.483 ) }
    dend_16 { pt3dadd( 245.49, 276.492, 10.36, 0.4576 ) }
    dend_16 { pt3dadd( 245.35, 275.856, 10.36, 0.305 ) }
    dend_16 { pt3dadd( 245.286, 275.234, 10.36, 0.2288 ) }
    dend_16 { pt3dadd( 245.274, 274.903, 10.36, 0.2288 ) }
    dend_16 { pt3dadd( 245.197, 274.687, 10.2357, 0.2288 ) }
    dend_16 { pt3dadd( 245.07, 274.56, 9.1778, 0.305 ) }
    dend_16 { pt3dadd( 244.93, 274.293, 8.7732, 0.3304 ) }
    dend_16 { pt3dadd( 244.854, 273.975, 9.5822, 0.3814 ) }
    dend_16 { pt3dadd( 244.93, 273.429, 9.8311, 0.3814 ) }
    dend_16 { pt3dadd( 244.816, 273.048, 10.5778, 0.305 ) }
    dend_16 { pt3dadd( 244.778, 272.946, 11.0757, 0.2542 ) }
    dend_16 { pt3dadd( 244.689, 272.73, 11.4489, 0.2288 ) }
    dend_16 { pt3dadd( 244.6, 272.488, 11.48, 0.2288 ) }
    dend_16 { pt3dadd( 244.498, 272.132, 11.48, 0.2288 ) }
    dend_16 { pt3dadd( 244.257, 271.814, 11.7289, 0.2542 ) }
    dend_16 { pt3dadd( 244.117, 271.471, 10.6711, 0.356 ) }
    dend_16 { pt3dadd( 244.015, 271.128, 10.08, 0.5592 ) }
    dend_16 { pt3dadd( 244.015, 270.606, 10.2357, 0.5848 ) }
    dend_16 { pt3dadd( 244.117, 270.263, 11.0132, 0.4322 ) }
    dend_16 { pt3dadd( 243.876, 270.009, 11.48, 0.2796 ) }
    dend_16 { pt3dadd( 243.913, 269.526, 11.2311, 0.2796 ) }
    dend_16 { pt3dadd( 244.13, 269.171, 11.1689, 0.305 ) }
    dend_16 { pt3dadd( 244.015, 268.713, 10.6711, 0.4322 ) }
    dend_16 { pt3dadd( 243.824, 268.382, 11.0132, 0.305 ) }
    dend_16 { pt3dadd( 243.749, 268.37, 11.6357, 0.2288 ) }
    dend_16 { pt3dadd( 243.672, 268.179, 12.1022, 0.2288 ) }
    dend_16 { pt3dadd( 243.672, 267.925, 12.32, 0.356 ) }
    dend_16 { pt3dadd( 243.761, 267.709, 12.2268, 0.305 ) }
    dend_16 { pt3dadd( 243.99, 267.696, 11.4178, 0.3304 ) }
    dend_16 { pt3dadd( 244.015, 267.353, 10.92, 0.4576 ) }
    dend_16 { pt3dadd( 244.015, 267.01, 10.64, 0.2542 ) }
    dend_16 { pt3dadd( 244.015, 266.781, 10.36, 0.2542 ) }
    dend_16 { pt3dadd( 244.028, 266.45, 10.36, 0.305 ) }
    dend_16 { pt3dadd( 244.206, 266.196, 10.9822, 0.356 ) }
    dend_16 { pt3dadd( 244.423, 265.93, 11.2, 0.3304 ) }
    dend_16 { pt3dadd( 244.473, 265.294, 11.48, 0.3814 ) }
    dend_16 { pt3dadd( 244.473, 264.938, 11.2311, 0.483 ) }
    dend_16 { pt3dadd( 244.816, 263.959, 11.6668, 0.356 ) }
    dend_16 { pt3dadd( 244.816, 263.234, 11.48, 0.305 ) }
    dend_16 { pt3dadd( 244.816, 262.941, 11.3557, 0.305 ) }
    dend_16 { pt3dadd( 244.816, 262.548, 10.64, 0.4068 ) }
    dend_16 { pt3dadd( 244.854, 261.963, 11.3557, 0.305 ) }
    dend_16 { pt3dadd( 245.007, 261.862, 11.5732, 0.2796 ) }
    dend_16 { pt3dadd( 244.968, 261.697, 12.0089, 0.2796 ) }
    dend_16 { pt3dadd( 244.829, 261.29, 12.0089, 0.3304 ) }
    dend_16 { pt3dadd( 244.816, 261.163, 11.2311, 0.2796 ) }
    dend_16 { pt3dadd( 244.854, 260.972, 10.6711, 0.2288 ) }
    dend_16 { pt3dadd( 245.02, 260.692, 10.92, 0.356 ) }
    dend_16 { pt3dadd( 245.299, 260.298, 10.6711, 0.3304 ) }
    dend_16 { pt3dadd( 245.465, 259.879, 10.92, 0.2542 ) }
    dend_16 { pt3dadd( 245.579, 259.561, 10.2978, 0.305 ) }
    dend_16 { pt3dadd( 245.795, 259.294, 10.08, 0.356 ) }
    dend_16 { pt3dadd( 245.96, 259.103, 10.3289, 0.305 ) }
    dend_16 { pt3dadd( 246.164, 258.976, 10.36, 0.2288 ) }
    dend_16 { pt3dadd( 246.303, 258.887, 10.36, 0.305 ) }
    dend_16 { pt3dadd( 246.38, 258.569, 10.8889, 0.3814 ) }
    dend_16 { pt3dadd( 246.303, 258.315, 10.92, 0.356 ) }
    dend_16 { pt3dadd( 246.291, 258.061, 11.1068, 0.305 ) }
    dend_16 { pt3dadd( 246.074, 257.756, 11.4489, 0.2288 ) }
    dend_16 { pt3dadd( 246.074, 257.4, 10.92, 0.2288 ) }
    dend_16 { pt3dadd( 246.074, 257.235, 10.4843, 0.2288 ) }
    dend_16 { pt3dadd( 246.074, 256.942, 10.36, 0.2288 ) }
    dend_16 { pt3dadd( 246.125, 256.726, 10.1732, 0.2288 ) }
    dend_16 { pt3dadd( 246.367, 256.663, 10.08, 0.2288 ) }
    dend_16 { pt3dadd( 246.418, 256.142, 10.08, 0.2288 ) }
    dend_16 { pt3dadd( 246.418, 255.849, 10.2043, 0.2288 ) }
    dend_16 { pt3dadd( 246.455, 255.316, 10.6711, 0.2288 ) }
    dend_16 { pt3dadd( 246.57, 255.035, 11.2, 0.2288 ) }
    dend_16 { pt3dadd( 246.939, 254.833, 11.48, 0.2288 ) }
    dend_16 { pt3dadd( 247.562, 254.426, 11.48, 0.2288 ) }
    dend_16 { pt3dadd( 247.892, 254.413, 11.48, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_16 { pt3dadd( 248.134, 254.311, 11.48, 0.2288 ) }
    dend_16 { pt3dadd( 248.325, 254.159, 11.48, 0.2288 ) }
    dend_16 { pt3dadd( 248.477, 253.968, 11.48, 0.2288 ) }
    dend_16 { pt3dadd( 248.82, 253.282, 11.48, 0.2288 ) }
    dend_16 { pt3dadd( 248.922, 253.053, 11.4489, 0.2288 ) }
    dend_16 { pt3dadd( 249.024, 252.938, 11.1378, 0.2542 ) }
    dend_16 { pt3dadd( 249.188, 252.938, 10.7022, 0.305 ) }
    dend_16 { pt3dadd( 249.43, 253.028, 10.1111, 0.483 ) }
    dend_16 { pt3dadd( 249.748, 253.129, 9.3643, 0.4322 ) }
    dend_16 { pt3dadd( 250.002, 252.938, 9.7068, 0.4576 ) }
    dend_16 { pt3dadd( 250.422, 252.938, 9.8, 0.4322 ) }
    dend_16 { pt3dadd( 250.79, 252.71, 9.7378, 0.3304 ) }
    dend_16 { pt3dadd( 250.956, 252.697, 10.1422, 0.305 ) }
    dend_16 { pt3dadd( 251.095, 252.506, 10.2668, 0.3304 ) }
    dend_16 { pt3dadd( 251.121, 252.404, 9.6443, 0.356 ) }
    dend_16 { pt3dadd( 251.528, 252.443, 9.24, 0.2796 ) }
    dend_16 { pt3dadd( 251.667, 252.366, 9.5511, 0.2288 ) }
    dend_16 { pt3dadd( 251.68, 252.138, 10.08, 0.4322 ) }
    dend_16 { pt3dadd( 252.023, 251.794, 10.36, 0.305 ) }
    dend_16 { pt3dadd( 252.557, 251.413, 10.36, 0.2288 ) }
    dend_16 { pt3dadd( 252.774, 251.286, 10.36, 0.2288 ) }
    dend_16 { pt3dadd( 252.926, 250.981, 10.64, 0.4322 ) }
    dend_16 { pt3dadd( 253.358, 250.498, 10.92, 0.4322 ) }
    dend_16 { pt3dadd( 253.446, 250.116, 11.4489, 0.2796 ) }
    dend_16 { pt3dadd( 253.612, 249.951, 11.48, 0.305 ) }
    dend_16 { pt3dadd( 253.918, 249.506, 11.0757, 0.4576 ) }
    dend_16 { pt3dadd( 253.968, 249.049, 10.64, 0.5592 ) }
    dend_16 { pt3dadd( 253.968, 248.579, 10.8889, 0.5084 ) }
    dend_16 { pt3dadd( 254.082, 247.981, 10.7332, 0.483 ) }
    dend_16 { pt3dadd( 254.375, 247.524, 10.6711, 0.6356 ) }
    dend_16 { pt3dadd( 254.54, 247.562, 11.2, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 31/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 259.402, 293.884, 15.3269, 0.483 ) }
    dend_15 { pt3dadd( 259.949, 293.339, 16.1574, 0.5084 ) }
    dend_15 { pt3dadd( 260.56, 293.649, 15.2936, 0.5084 ) }
    dend_15 { pt3dadd( 261.151, 293.661, 13.4084, 0.5084 ) }
    dend_15 { pt3dadd( 261.018, 293.007, 12.0498, 0.5084 ) }
    dend_15 { pt3dadd( 261.061, 292.093, 12.2889, 0.5084 ) }
    dend_15 { pt3dadd( 260.855, 291.715, 10.2612, 0.4322 ) }
    dend_15 { pt3dadd( 260.378, 290.927, 9.3929, 0.3304 ) }
    dend_15 { pt3dadd( 260.553, 289.879, 9.7247, 0.2542 ) }
    dend_15 { pt3dadd( 260.402, 288.811, 10.2564, 0.2288 ) }
    dend_15 { pt3dadd( 260.602, 288.278, 12.04, 0.2796 ) }
    dend_15 { pt3dadd( 260.641, 287.284, 12.7854, 0.356 ) }
    dend_15 { pt3dadd( 260.814, 286.596, 12.175, 0.4322 ) }
    dend_15 { pt3dadd( 260.554, 285.769, 13.0376, 0.4068 ) }
    dend_15 { pt3dadd( 260.478, 284.849, 12.5409, 0.3304 ) }
    dend_15 { pt3dadd( 260.958, 283.969, 11.8801, 0.305 ) }
    dend_15 { pt3dadd( 261.444, 282.999, 11.6318, 0.3814 ) }
    dend_15 { pt3dadd( 261.669, 282.093, 12.0935, 0.483 ) }
    dend_15 { pt3dadd( 261.977, 281.061, 12.6, 0.5084 ) }
    dend_15 { pt3dadd( 262.161, 280.019, 12.0938, 0.4322 ) }
    dend_15 { pt3dadd( 262.986, 279.433, 13.0592, 0.3814 ) }
    dend_15 { pt3dadd( 263.724, 278.795, 13.2563, 0.356 ) }
    dend_15 { pt3dadd( 264.483, 278.156, 13.1124, 0.3814 ) }
    dend_15 { pt3dadd( 264.448, 277.152, 12.04, 0.3814 ) }
    dend_15 { pt3dadd( 264.822, 276.167, 12.0949, 0.4068 ) }
    dend_15 { pt3dadd( 264.639, 275.341, 11.76, 0.4322 ) }
    dend_15 { pt3dadd( 264.578, 274.789, 13.3871, 0.4576 ) }
    dend_15 { pt3dadd( 265.115, 274.368, 15.1354, 0.4068 ) }
    dend_15 { pt3dadd( 265.751, 273.875, 16.5197, 0.356 ) }
    dend_15 { pt3dadd( 266.11, 272.845, 15.834, 0.305 ) }
    dend_15 { pt3dadd( 266.288, 271.83, 15.1948, 0.3304 ) }
    dend_15 { pt3dadd( 266.296, 271.293, 14.1868, 0.3814 ) }
    dend_15 { pt3dadd( 266.879, 270.41, 14.8098, 0.4322 ) }
    dend_15 { pt3dadd( 267.386, 269.436, 14.56, 0.4576 ) }
    dend_15 { pt3dadd( 267.66, 268.462, 13.8068, 0.4322 ) }
    dend_15 { pt3dadd( 267.329, 267.569, 13.5352, 0.3814 ) }
    dend_15 { pt3dadd( 267.06, 266.562, 14.2055, 0.305 ) }
    dend_15 { pt3dadd( 266.788, 265.589, 14.4264, 0.2796 ) }
    dend_15 { pt3dadd( 266.523, 264.652, 13.673, 0.305 ) }
    dend_15 { pt3dadd( 266.883, 263.828, 12.8246, 0.3814 ) }
    dend_15 { pt3dadd( 266.983, 263.114, 14.2139, 0.4322 ) }
    dend_15 { pt3dadd( 267.01, 262.046, 14.4161, 0.4322 ) }
    dend_15 { pt3dadd( 266.684, 261.436, 13.09, 0.3814 ) }
    dend_15 { pt3dadd( 266.799, 260.923, 13.4179, 0.3304 ) }
    dend_15 { pt3dadd( 266.771, 260.035, 14.5519, 0.305 ) }
    dend_15 { pt3dadd( 266.819, 259.33, 15.4644, 0.305 ) }
    dend_15 { pt3dadd( 266.781, 258.264, 16.4363, 0.2796 ) }
    dend_15 { pt3dadd( 266.655, 257.54, 14.9596, 0.2796 ) }
    dend_15 { pt3dadd( 266.438, 256.578, 14.6031, 0.305 ) }
    dend_15 { pt3dadd( 265.764, 256.37, 15.3628, 0.356 ) }
    dend_15 { pt3dadd( 265.776, 255.547, 16.0776, 0.356 ) }
    dend_15 { pt3dadd( 265.648, 254.719, 16.5984, 0.305 ) }
    dend_15 { pt3dadd( 265.866, 253.745, 15.9583, 0.2796 ) }
    dend_15 { pt3dadd( 265.065, 253.739, 15.68, 0.2796 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 85/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 245.373, 284.538, 26.5849, 0.5338 ) }
    dend_13 { pt3dadd( 244.918, 284.411, 26.32, 0.4322 ) }
    dend_13 { pt3dadd( 244.346, 284.182, 26.32, 0.5338 ) }
    dend_13 { pt3dadd( 243.749, 283.979, 25.76, 0.6102 ) }
    dend_13 { pt3dadd( 243.177, 283.826, 26.2268, 0.4576 ) }
    dend_13 { pt3dadd( 242.68, 283.369, 26.9732, 0.305 ) }
    dend_13 { pt3dadd( 242.388, 283.051, 27.16, 0.4322 ) }
    dend_13 { pt3dadd( 242.197, 282.873, 27.9378, 0.5084 ) }
    dend_13 { pt3dadd( 242.108, 282.416, 29.12, 0.483 ) }
    dend_13 { pt3dadd( 242.07, 282.009, 29.4311, 0.4322 ) }
    dend_13 { pt3dadd( 242.058, 281.665, 29.96, 0.4068 ) }
    dend_13 { pt3dadd( 242.058, 281.208, 30.24, 0.4576 ) }
    dend_13 { pt3dadd( 241.854, 280.738, 30.5511, 0.4322 ) }
    dend_13 { pt3dadd( 241.549, 280.573, 30.8, 0.4068 ) }
    dend_13 { pt3dadd( 241.193, 280.382, 31.1422, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_13 { pt3dadd( 240.964, 280.293, 31.9822, 0.305 ) }
    dend_13 { pt3dadd( 240.914, 280.458, 32.2932, 0.2796 ) }
    dend_13 { pt3dadd( 240.723, 280.471, 32.7289, 0.2288 ) }
    dend_13 { pt3dadd( 240.558, 280.382, 32.9468, 0.2288 ) }
    dend_13 { pt3dadd( 240.24, 280.28, 32.48, 0.2542 ) }
    dend_13 { pt3dadd( 240.278, 280.293, 31.7643, 0.2796 ) }
    dend_13 { pt3dadd( 240.342, 280.293, 30.8, 0.4576 ) }
    dend_13 { pt3dadd( 239.782, 280.28, 30.8, 0.5848 ) }
    dend_13 { pt3dadd( 239.668, 280.064, 31.3911, 0.3814 ) }
    dend_13 { pt3dadd( 239.782, 279.822, 32.2, 0.2542 ) }
    dend_13 { pt3dadd( 239.732, 279.746, 32.7289, 0.2288 ) }
    dend_13 { pt3dadd( 239.452, 279.581, 32.76, 0.2288 ) }
    dend_13 { pt3dadd( 239.363, 279.365, 32.1068, 0.305 ) }
    dend_13 { pt3dadd( 239.146, 279.315, 31.08, 0.3304 ) }
    dend_13 { pt3dadd( 238.994, 279.022, 30.7689, 0.2796 ) }
    dend_13 { pt3dadd( 239.058, 278.984, 29.96, 0.2288 ) }
    dend_13 { pt3dadd( 239.096, 278.691, 29.7111, 0.2288 ) }
    dend_13 { pt3dadd( 239.109, 278.45, 29.9289, 0.305 ) }
    dend_13 { pt3dadd( 239.325, 278.233, 29.3689, 0.305 ) }
    dend_13 { pt3dadd( 239.325, 277.878, 28.56, 0.3814 ) }
    dend_13 { pt3dadd( 239.121, 277.547, 28.6532, 0.3814 ) }
    dend_13 { pt3dadd( 238.969, 277.433, 29.12, 0.2288 ) }
    dend_13 { pt3dadd( 238.689, 277.42, 29.8043, 0.2288 ) }
    dend_13 { pt3dadd( 238.638, 277.306, 30.24, 0.2288 ) }
    dend_13 { pt3dadd( 238.638, 277.179, 30.7689, 0.2288 ) }
    dend_13 { pt3dadd( 238.638, 276.517, 30.7689, 0.2796 ) }
    dend_13 { pt3dadd( 238.41, 275.818, 29.96, 0.3304 ) }
    dend_13 { pt3dadd( 238.41, 275.259, 29.3689, 0.3814 ) }
    dend_13 { pt3dadd( 238.257, 274.827, 28.84, 0.4068 ) }
    dend_13 { pt3dadd( 238.181, 274.293, 28.3732, 0.4068 ) }
    dend_13 { pt3dadd( 237.977, 273.734, 28.28, 0.4068 ) }
    dend_13 { pt3dadd( 237.825, 273.2, 28.0, 0.4576 ) }
    dend_13 { pt3dadd( 237.494, 272.717, 28.0311, 0.4322 ) }
    dend_13 { pt3dadd( 237.418, 272.056, 28.1557, 0.3304 ) }
    dend_13 { pt3dadd( 237.24, 271.725, 27.44, 0.2542 ) }
    dend_13 { pt3dadd( 236.808, 271.357, 27.44, 0.2288 ) }
    dend_13 { pt3dadd( 236.592, 271.23, 27.44, 0.2288 ) }
    dend_13 { pt3dadd( 236.579, 270.899, 27.44, 0.2288 ) }
    dend_13 { pt3dadd( 236.579, 270.67, 27.44, 0.2288 ) }
    dend_13 { pt3dadd( 236.579, 270.442, 27.44, 0.2288 ) }
    dend_13 { pt3dadd( 236.541, 269.564, 27.44, 0.2542 ) }
    dend_13 { pt3dadd( 236.427, 268.89, 27.4711, 0.305 ) }
    dend_13 { pt3dadd( 236.35, 268.535, 27.9068, 0.4068 ) }
    dend_13 { pt3dadd( 236.198, 268.154, 27.5332, 0.305 ) }
    dend_13 { pt3dadd( 236.122, 267.696, 27.44, 0.2542 ) }
    dend_13 { pt3dadd( 236.122, 267.353, 27.44, 0.2288 ) }
    dend_13 { pt3dadd( 236.35, 266.781, 27.44, 0.2796 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 47/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 245.373, 284.538, 26.5849, 0.5338 ) }
    dend_12 { pt3dadd( 244.339, 284.214, 26.2189, 0.5084 ) }
    dend_12 { pt3dadd( 243.473, 284.127, 25.48, 0.4322 ) }
    dend_12 { pt3dadd( 243.01, 283.609, 26.6412, 0.3814 ) }
    dend_12 { pt3dadd( 241.995, 283.369, 27.4128, 0.4068 ) }
    dend_12 { pt3dadd( 241.281, 282.976, 26.1184, 0.5084 ) }
    dend_12 { pt3dadd( 240.314, 282.986, 25.76, 0.5848 ) }
    dend_12 { pt3dadd( 239.432, 282.473, 25.2526, 0.5592 ) }
    dend_12 { pt3dadd( 238.609, 281.823, 25.1698, 0.483 ) }
    dend_12 { pt3dadd( 238.165, 281.107, 24.2962, 0.3814 ) }
    dend_12 { pt3dadd( 237.357, 280.479, 24.568, 0.356 ) }
    dend_12 { pt3dadd( 236.767, 279.615, 23.9512, 0.4068 ) }
    dend_12 { pt3dadd( 236.139, 279.18, 23.2669, 0.483 ) }
    dend_12 { pt3dadd( 235.226, 278.893, 23.9417, 0.5338 ) }
    dend_12 { pt3dadd( 234.657, 278.033, 25.0356, 0.5084 ) }
    dend_12 { pt3dadd( 233.972, 277.31, 24.4275, 0.5084 ) }
    dend_12 { pt3dadd( 233.183, 276.723, 23.5376, 0.5338 ) }
    dend_12 { pt3dadd( 232.831, 275.958, 24.0612, 0.5848 ) }
    dend_12 { pt3dadd( 232.568, 275.247, 23.6401, 0.5848 ) }
    dend_12 { pt3dadd( 232.194, 274.408, 23.52, 0.5338 ) }
    dend_12 { pt3dadd( 231.855, 273.441, 22.78, 0.483 ) }
    dend_12 { pt3dadd( 231.59, 272.501, 22.7394, 0.4322 ) }
    dend_12 { pt3dadd( 231.447, 271.482, 22.5305, 0.4068 ) }
    dend_12 { pt3dadd( 230.617, 270.75, 22.68, 0.356 ) }
    dend_12 { pt3dadd( 229.817, 270.111, 22.12, 0.356 ) }
    dend_12 { pt3dadd( 228.943, 269.402, 22.1001, 0.3304 ) }
    dend_12 { pt3dadd( 227.998, 269.032, 22.3672, 0.3304 ) }
    dend_12 { pt3dadd( 227.29, 268.321, 22.7716, 0.3304 ) }
    dend_12 { pt3dadd( 226.934, 267.381, 22.7648, 0.3814 ) }
    dend_12 { pt3dadd( 226.531, 266.543, 22.6254, 0.4576 ) }
    dend_12 { pt3dadd( 225.839, 265.851, 22.5613, 0.4576 ) }
    dend_12 { pt3dadd( 225.39, 264.837, 22.2222, 0.4068 ) }
    dend_12 { pt3dadd( 224.682, 264.15, 21.56, 0.305 ) }
    dend_12 { pt3dadd( 223.925, 263.536, 21.28, 0.2542 ) }
    dend_12 { pt3dadd( 223.758, 262.529, 20.8272, 0.2288 ) }
    dend_12 { pt3dadd( 223.003, 261.761, 20.44, 0.2542 ) }
    dend_12 { pt3dadd( 222.021, 261.213, 20.3468, 0.2796 ) }
    dend_12 { pt3dadd( 221.042, 260.659, 20.4532, 0.3304 ) }
    dend_12 { pt3dadd( 220.255, 259.857, 20.8068, 0.356 ) }
    dend_12 { pt3dadd( 219.34, 259.243, 20.3008, 0.3814 ) }
    dend_12 { pt3dadd( 218.599, 258.481, 20.463, 0.356 ) }
    dend_12 { pt3dadd( 217.98, 257.586, 20.2059, 0.3304 ) }
    dend_12 { pt3dadd( 217.399, 256.639, 20.1398, 0.3304 ) }
    dend_12 { pt3dadd( 216.606, 255.86, 20.1908, 0.3814 ) }
    dend_12 { pt3dadd( 215.868, 255.055, 20.6648, 0.4576 ) }
    dend_12 { pt3dadd( 215.208, 254.364, 20.3829, 0.5338 ) }
    dend_12 { pt3dadd( 214.843, 253.669, 20.2468, 0.6102 ) }
    dend_12 { pt3dadd( 214.611, 252.818, 20.7208, 0.6864 ) }
    dend_12 { pt3dadd( 214.373, 251.919, 20.8894, 0.7372 ) }
    dend_12 { pt3dadd( 213.79, 251.003, 20.2994, 0.7372 ) }
    dend_12 { pt3dadd( 213.149, 250.115, 19.6742, 0.6864 ) }
    dend_12 { pt3dadd( 212.441, 249.478, 19.6893, 0.6356 ) }
    dend_12 { pt3dadd( 211.838, 248.827, 19.8069, 0.6356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_12 { pt3dadd( 211.373, 247.828, 19.32, 0.661 ) }
    dend_12 { pt3dadd( 211.016, 247.199, 19.0809, 0.661 ) }
    dend_12 { pt3dadd( 210.448, 246.305, 18.2157, 0.5848 ) }
    dend_12 { pt3dadd( 209.858, 245.587, 17.4216, 0.483 ) }
    dend_12 { pt3dadd( 209.338, 244.711, 18.2, 0.4068 ) }
    dend_12 { pt3dadd( 209.06, 243.654, 17.6946, 0.3814 ) }
    dend_12 { pt3dadd( 208.444, 242.888, 16.6166, 0.3814 ) }
    dend_12 { pt3dadd( 208.437, 241.75, 16.52, 0.356 ) }
    dend_12 { pt3dadd( 208.391, 241.033, 17.4471, 0.356 ) }
    dend_12 { pt3dadd( 207.905, 240.058, 17.9071, 0.356 ) }
    dend_12 { pt3dadd( 207.287, 239.21, 17.4135, 0.3814 ) }
    dend_12 { pt3dadd( 206.76, 238.606, 18.723, 0.3814 ) }
    dend_12 { pt3dadd( 205.947, 237.936, 18.4005, 0.356 ) }
    dend_12 { pt3dadd( 205.088, 237.317, 17.6879, 0.3304 ) }
    dend_12 { pt3dadd( 204.061, 236.85, 17.92, 0.2796 ) }
    dend_12 { pt3dadd( 203.374, 236.269, 16.7768, 0.2542 ) }
    dend_12 { pt3dadd( 202.407, 235.893, 16.079, 0.2542 ) }
    dend_12 { pt3dadd( 201.268, 235.88, 15.8987, 0.2796 ) }
    dend_12 { pt3dadd( 200.414, 235.55, 16.6732, 0.3304 ) }
    dend_12 { pt3dadd( 199.501, 235.099, 16.0983, 0.3304 ) }
    dend_12 { pt3dadd( 198.66, 234.769, 16.6499, 0.3304 ) }
    dend_12 { pt3dadd( 198.141, 234.062, 16.24, 0.2796 ) }
    dend_12 { pt3dadd( 197.531, 233.301, 16.8, 0.2796 ) }
    dend_12 { pt3dadd( 196.755, 232.646, 16.24, 0.2796 ) }
    dend_12 { pt3dadd( 196.023, 231.848, 15.96, 0.305 ) }
    dend_12 { pt3dadd( 195.611, 231.102, 15.2093, 0.2796 ) }
    dend_12 { pt3dadd( 194.938, 230.615, 14.28, 0.2796 ) }
    dend_12 { pt3dadd( 194.584, 229.605, 14.5334, 0.2796 ) }
    dend_12 { pt3dadd( 193.749, 229.193, 16.0152, 0.356 ) }
    dend_12 { pt3dadd( 192.866, 229.029, 15.7105, 0.3814 ) }
    dend_12 { pt3dadd( 192.035, 228.564, 15.3804, 0.4068 ) }
    dend_12 { pt3dadd( 191.248, 228.07, 14.28, 0.3304 ) }
    dend_12 { pt3dadd( 190.149, 227.872, 14.28, 0.2796 ) }
    dend_12 { pt3dadd( 189.246, 227.306, 13.8222, 0.2542 ) }
    dend_12 { pt3dadd( 188.133, 227.306, 13.72, 0.305 ) }
    dend_12 { pt3dadd( 187.49, 227.447, 12.7019, 0.3814 ) }
    dend_12 { pt3dadd( 186.639, 227.11, 12.32, 0.4068 ) }
    dend_12 { pt3dadd( 185.587, 227.201, 13.0018, 0.4068 ) }
    dend_12 { pt3dadd( 184.556, 227.148, 13.9793, 0.356 ) }
    dend_12 { pt3dadd( 183.559, 226.97, 14.8302, 0.3304 ) }
    dend_12 { pt3dadd( 182.921, 226.741, 14.6406, 0.2796 ) }
    dend_12 { pt3dadd( 182.085, 226.879, 14.5793, 0.2542 ) }
    dend_12 { pt3dadd( 181.083, 226.97, 14.0126, 0.2288 ) }
    dend_12 { pt3dadd( 180.225, 227.224, 12.8766, 0.2288 ) }
    dend_12 { pt3dadd( 179.798, 226.971, 13.3479, 0.2288 ) }
    dend_12 { pt3dadd( 179.179, 226.512, 11.9409, 0.2542 ) }
    dend_12 { pt3dadd( 178.049, 226.474, 11.76, 0.2796 ) }
    dend_12 { pt3dadd( 177.033, 226.04, 12.04, 0.3304 ) }
    dend_12 { pt3dadd( 176.285, 225.352, 12.04, 0.3304 ) }
    dend_12 { pt3dadd( 175.684, 224.434, 11.6827, 0.356 ) }
    dend_12 { pt3dadd( 174.988, 223.697, 10.4983, 0.356 ) }
    dend_12 { pt3dadd( 174.0, 223.229, 11.0177, 0.3814 ) }
    dend_12 { pt3dadd( 173.555, 222.422, 11.1129, 0.356 ) }
    dend_12 { pt3dadd( 172.858, 222.508, 10.08, 0.3814 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 238.384, 300.783, 25.76, 0.4576 ) }
    dend_9 { pt3dadd( 237.005, 300.847, 24.64, 0.483 ) }
    dend_9 { pt3dadd( 236.29, 300.828, 23.8263, 0.483 ) }
    dend_9 { pt3dadd( 235.316, 300.861, 24.3964, 0.4322 ) }
    dend_9 { pt3dadd( 234.247, 301.064, 24.3684, 0.356 ) }
    dend_9 { pt3dadd( 233.351, 301.33, 24.9502, 0.356 ) }
    dend_9 { pt3dadd( 232.429, 301.483, 24.3608, 0.4068 ) }
    dend_9 { pt3dadd( 231.4, 301.582, 24.0416, 0.4322 ) }
    dend_9 { pt3dadd( 230.603, 301.812, 22.96, 0.3814 ) }
    dend_9 { pt3dadd( 229.486, 301.887, 22.7738, 0.356 ) }
    dend_9 { pt3dadd( 228.466, 301.531, 22.0892, 0.356 ) }
    dend_9 { pt3dadd( 227.387, 301.438, 21.8694, 0.3814 ) }
    dend_9 { pt3dadd( 226.479, 301.786, 23.14, 0.3814 ) }
    dend_9 { pt3dadd( 225.852, 301.27, 22.321, 0.3814 ) }
    dend_9 { pt3dadd( 224.898, 301.139, 21.28, 0.3814 ) }
    dend_9 { pt3dadd( 224.033, 301.487, 21.7014, 0.3814 ) }
    dend_9 { pt3dadd( 223.61, 302.101, 21.4099, 0.3814 ) }
    dend_9 { pt3dadd( 222.563, 302.13, 21.0104, 0.356 ) }
    dend_9 { pt3dadd( 221.504, 302.032, 20.16, 0.305 ) }
    dend_9 { pt3dadd( 220.538, 302.56, 19.8192, 0.2542 ) }
    dend_9 { pt3dadd( 219.738, 303.02, 19.2772, 0.2288 ) }
    dend_9 { pt3dadd( 218.914, 303.596, 19.0288, 0.2542 ) }
    dend_9 { pt3dadd( 217.955, 303.888, 17.9077, 0.2796 ) }
    dend_9 { pt3dadd( 216.882, 304.164, 17.3496, 0.305 ) }
    dend_9 { pt3dadd( 216.02, 304.241, 15.836, 0.2796 ) }
    dend_9 { pt3dadd( 215.012, 303.788, 15.3297, 0.2796 ) }
    dend_9 { pt3dadd( 214.108, 303.837, 16.0048, 0.2796 ) }
    dend_9 { pt3dadd( 214.024, 304.576, 17.7596, 0.356 ) }
    dend_9 { pt3dadd( 213.259, 304.497, 18.4635, 0.4068 ) }
    dend_9 { pt3dadd( 212.721, 303.853, 17.36, 0.4576 ) }
    dend_9 { pt3dadd( 211.873, 303.618, 16.8882, 0.4322 ) }
    dend_9 { pt3dadd( 211.64, 303.745, 15.1239, 0.3814 ) }
    dend_9 { pt3dadd( 211.869, 304.309, 14.1994, 0.3814 ) }
    dend_9 { pt3dadd( 211.209, 304.645, 12.88, 0.3814 ) }
    dend_9 { pt3dadd( 210.066, 304.637, 12.88, 0.4068 ) }
    dend_9 { pt3dadd( 209.306, 304.19, 14.0006, 0.3304 ) }
    dend_9 { pt3dadd( 208.577, 304.67, 15.066, 0.2796 ) }
    dend_9 { pt3dadd( 207.92, 305.341, 14.56, 0.2542 ) }
    dend_9 { pt3dadd( 206.908, 305.805, 14.2954, 0.305 ) }
    dend_9 { pt3dadd( 206.006, 306.361, 13.8272, 0.356 ) }
    dend_9 { pt3dadd( 205.71, 305.649, 14.9999, 0.3814 ) }
    dend_9 { pt3dadd( 205.355, 305.334, 16.0588, 0.3814 ) }
    dend_9 { pt3dadd( 204.544, 305.334, 15.6111, 0.4068 ) }
    dend_9 { pt3dadd( 203.714, 305.172, 15.6038, 0.4068 ) }
    dend_9 { pt3dadd( 202.742, 305.105, 14.4488, 0.4322 ) }
    dend_9 { pt3dadd( 201.623, 305.107, 14.84, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( 200.48, 305.106, 14.84, 0.5084 ) }
    dend_9 { pt3dadd( 199.41, 304.878, 15.4227, 0.483 ) }
    dend_9 { pt3dadd( 198.363, 304.907, 16.24, 0.4068 ) }
    dend_9 { pt3dadd( 197.512, 304.839, 15.0567, 0.356 ) }
    dend_9 { pt3dadd( 196.518, 304.464, 14.84, 0.356 ) }
    dend_9 { pt3dadd( 195.519, 304.398, 14.1498, 0.356 ) }
    dend_9 { pt3dadd( 194.442, 304.399, 14.432, 0.305 ) }
    dend_9 { pt3dadd( 193.469, 304.239, 14.2708, 0.2542 ) }
    dend_9 { pt3dadd( 192.414, 304.494, 13.6942, 0.2288 ) }
    dend_9 { pt3dadd( 191.321, 304.533, 12.9914, 0.2288 ) }
    dend_9 { pt3dadd( 190.181, 304.533, 12.88, 0.2542 ) }
    dend_9 { pt3dadd( 189.074, 304.477, 13.2684, 0.305 ) }
    dend_9 { pt3dadd( 188.126, 304.592, 14.0504, 0.356 ) }
    dend_9 { pt3dadd( 187.498, 304.768, 15.1668, 0.4068 ) }
    dend_9 { pt3dadd( 186.7, 305.029, 16.3414, 0.4322 ) }
    dend_9 { pt3dadd( 185.918, 305.334, 16.0972, 0.4576 ) }
    dend_9 { pt3dadd( 184.845, 305.334, 15.7914, 0.4576 ) }
    dend_9 { pt3dadd( 183.827, 305.334, 15.7718, 0.4322 ) }
    dend_9 { pt3dadd( 182.824, 304.931, 15.68, 0.4576 ) }
    dend_9 { pt3dadd( 182.244, 304.876, 17.855, 0.483 ) }
    dend_9 { pt3dadd( 181.255, 304.982, 17.3222, 0.5592 ) }
    dend_9 { pt3dadd( 180.339, 305.105, 16.52, 0.5338 ) }
    dend_9 { pt3dadd( 179.576, 305.391, 17.563, 0.4576 ) }
    dend_9 { pt3dadd( 178.511, 305.447, 16.994, 0.356 ) }
    dend_9 { pt3dadd( 177.572, 305.496, 17.3382, 0.3304 ) }
    dend_9 { pt3dadd( 176.591, 305.219, 17.589, 0.3814 ) }
    dend_9 { pt3dadd( 175.709, 305.448, 17.6599, 0.4322 ) }
    dend_9 { pt3dadd( 174.724, 305.767, 16.8, 0.4576 ) }
    dend_9 { pt3dadd( 174.046, 305.808, 16.6956, 0.4322 ) }
    dend_9 { pt3dadd( 173.882, 305.455, 14.6866, 0.3814 ) }
    dend_9 { pt3dadd( 173.118, 305.739, 13.7897, 0.305 ) }
    dend_9 { pt3dadd( 172.299, 305.22, 13.7088, 0.2542 ) }
    dend_9 { pt3dadd( 172.058, 305.219, 15.4, 0.2542 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 33/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 238.384, 300.783, 25.76, 0.4576 ) }
    dend_6 { pt3dadd( 238.042, 300.77, 25.0152, 0.4068 ) }
    dend_6 { pt3dadd( 237.349, 300.612, 25.2151, 0.483 ) }
    dend_6 { pt3dadd( 237.041, 299.985, 27.1365, 0.5338 ) }
    dend_6 { pt3dadd( 236.214, 299.428, 27.16, 0.5338 ) }
    dend_6 { pt3dadd( 235.152, 299.267, 27.4238, 0.5338 ) }
    dend_6 { pt3dadd( 234.374, 299.016, 26.32, 0.5084 ) }
    dend_6 { pt3dadd( 233.353, 298.631, 26.5854, 0.4322 ) }
    dend_6 { pt3dadd( 232.35, 298.241, 26.3626, 0.356 ) }
    dend_6 { pt3dadd( 231.508, 297.796, 26.5378, 0.305 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 255.859, 309.22, 21.406, 0.5084 ) }
    dend_4 { pt3dadd( 254.788, 309.396, 22.01, 0.5338 ) }
    dend_4 { pt3dadd( 254.279, 310.253, 22.68, 0.483 ) }
    dend_4 { pt3dadd( 253.217, 310.173, 23.4063, 0.4576 ) }
    dend_4 { pt3dadd( 252.303, 310.596, 24.1503, 0.4068 ) }
    dend_4 { pt3dadd( 252.075, 311.488, 24.3267, 0.4322 ) }
    dend_4 { pt3dadd( 251.409, 312.331, 23.989, 0.4322 ) }
    dend_4 { pt3dadd( 250.761, 313.241, 24.08, 0.5084 ) }
    dend_4 { pt3dadd( 249.957, 313.795, 23.2509, 0.5592 ) }
    dend_4 { pt3dadd( 249.147, 314.408, 22.68, 0.5848 ) }
    dend_4 { pt3dadd( 248.828, 315.456, 22.097, 0.5338 ) }
    dend_4 { pt3dadd( 248.664, 316.334, 20.4184, 0.483 ) }
    dend_4 { pt3dadd( 248.742, 317.286, 19.9153, 0.483 ) }
    dend_4 { pt3dadd( 248.479, 318.062, 21.2607, 0.483 ) }
    dend_4 { pt3dadd( 248.545, 319.184, 21.6146, 0.4576 ) }
    dend_4 { pt3dadd( 248.313, 320.26, 22.1315, 0.3814 ) }
    dend_4 { pt3dadd( 248.272, 320.991, 23.788, 0.3814 ) }
    dend_4 { pt3dadd( 247.827, 321.751, 24.0867, 0.4068 ) }
    dend_4 { pt3dadd( 248.11, 322.447, 22.4773, 0.4576 ) }
    dend_4 { pt3dadd( 248.718, 323.219, 21.8445, 0.4576 ) }
    dend_4 { pt3dadd( 248.954, 324.278, 22.2989, 0.4576 ) }
    dend_4 { pt3dadd( 249.403, 325.246, 22.0598, 0.483 ) }
    dend_4 { pt3dadd( 249.727, 326.317, 21.7678, 0.483 ) }
    dend_4 { pt3dadd( 249.862, 327.306, 21.6712, 0.483 ) }
    dend_4 { pt3dadd( 250.276, 328.257, 22.1427, 0.4322 ) }
    dend_4 { pt3dadd( 250.329, 328.847, 23.0846, 0.4068 ) }
    dend_4 { pt3dadd( 251.087, 329.358, 22.6181, 0.4068 ) }
    dend_4 { pt3dadd( 251.553, 330.019, 23.4251, 0.4576 ) }
    dend_4 { pt3dadd( 251.777, 330.744, 22.9342, 0.5338 ) }
    dend_4 { pt3dadd( 252.066, 331.601, 22.3563, 0.5592 ) }
    dend_4 { pt3dadd( 252.581, 332.396, 21.6163, 0.5338 ) }
    dend_4 { pt3dadd( 252.919, 333.151, 23.0922, 0.4576 ) }
    dend_4 { pt3dadd( 253.053, 334.083, 23.6009, 0.4068 ) }
    dend_4 { pt3dadd( 253.33, 334.988, 22.6117, 0.3814 ) }
    dend_4 { pt3dadd( 253.665, 335.96, 23.5192, 0.4068 ) }
    dend_4 { pt3dadd( 254.195, 336.926, 23.24, 0.4068 ) }
    dend_4 { pt3dadd( 254.288, 336.794, 21.2128, 0.4068 ) }
    dend_4 { pt3dadd( 254.999, 337.547, 21.0, 0.356 ) }
    dend_4 { pt3dadd( 255.578, 338.355, 21.3125, 0.356 ) }
    dend_4 { pt3dadd( 256.326, 338.526, 20.0561, 0.3814 ) }
    dend_4 { pt3dadd( 256.988, 339.375, 20.3706, 0.4068 ) }
    dend_4 { pt3dadd( 257.352, 340.219, 20.3546, 0.4068 ) }
    dend_4 { pt3dadd( 258.016, 340.999, 21.28, 0.3814 ) }
    dend_4 { pt3dadd( 258.43, 341.859, 20.697, 0.3814 ) }
    dend_4 { pt3dadd( 258.701, 342.358, 22.0951, 0.356 ) }
    dend_4 { pt3dadd( 258.773, 343.345, 23.2215, 0.3304 ) }
    dend_4 { pt3dadd( 259.228, 344.208, 22.5319, 0.356 ) }
    dend_4 { pt3dadd( 259.671, 345.065, 21.1621, 0.4322 ) }
    dend_4 { pt3dadd( 259.766, 346.137, 20.44, 0.483 ) }
    dend_4 { pt3dadd( 260.316, 346.86, 20.7183, 0.4322 ) }
    dend_4 { pt3dadd( 260.484, 347.655, 21.84, 0.3304 ) }
    dend_4 { pt3dadd( 261.248, 348.081, 22.6862, 0.2542 ) }
    dend_4 { pt3dadd( 261.438, 348.766, 22.9757, 0.2288 ) }
    dend_4 { pt3dadd( 261.928, 349.491, 21.84, 0.2288 ) }
    dend_4 { pt3dadd( 262.41, 350.267, 21.1212, 0.2288 ) }
    dend_4 { pt3dadd( 262.404, 350.815, 19.36, 0.2542 ) }
    dend_4 { pt3dadd( 262.662, 351.735, 19.1937, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_4 { pt3dadd( 262.891, 352.365, 20.1281, 0.305 ) }
    dend_4 { pt3dadd( 262.809, 353.316, 19.32, 0.2796 ) }
    dend_4 { pt3dadd( 263.12, 354.284, 19.6, 0.2796 ) }
    dend_4 { pt3dadd( 263.072, 355.297, 20.683, 0.2796 ) }
    dend_4 { pt3dadd( 262.892, 356.347, 20.6178, 0.305 ) }
    dend_4 { pt3dadd( 263.054, 356.814, 21.985, 0.2796 ) }
    dend_4 { pt3dadd( 263.576, 357.573, 21.53, 0.2796 ) }
    dend_4 { pt3dadd( 263.366, 358.585, 20.9717, 0.2796 ) }
    dend_4 { pt3dadd( 263.578, 359.216, 20.44, 0.3304 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 9/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 255.859, 309.22, 21.406, 0.5084 ) }
    dend_3 { pt3dadd( 255.571, 308.474, 19.9458, 0.356 ) }
    dend_3 { pt3dadd( 254.881, 307.568, 20.0049, 0.3814 ) }
    dend_3 { pt3dadd( 254.329, 306.568, 20.0861, 0.483 ) }
    dend_3 { pt3dadd( 253.826, 305.553, 19.8808, 0.5338 ) }
    dend_3 { pt3dadd( 253.347, 304.597, 18.9014, 0.5592 ) }
    dend_3 { pt3dadd( 253.35, 303.643, 17.9766, 0.5084 ) }
    dend_3 { pt3dadd( 253.725, 302.578, 17.9995, 0.5338 ) }
    dend_3 { pt3dadd( 253.915, 301.471, 18.4744, 0.5592 ) }
    dend_3 { pt3dadd( 253.395, 300.482, 18.9969, 0.6102 ) }
    dend_3 { pt3dadd( 252.472, 299.809, 18.9249, 0.5848 ) }
    dend_3 { pt3dadd( 251.734, 298.982, 18.2613, 0.5338 ) }
    dend_3 { pt3dadd( 251.32, 297.977, 17.6526, 0.4576 ) }
    dend_3 { pt3dadd( 251.671, 296.9, 17.2542, 0.3814 ) }
    dend_3 { pt3dadd( 251.96, 295.802, 16.9604, 0.356 ) }
    dend_3 { pt3dadd( 251.873, 294.773, 16.5096, 0.4068 ) }
    dend_3 { pt3dadd( 251.003, 294.654, 15.6789, 0.5084 ) }
    dend_3 { pt3dadd( 249.975, 294.769, 14.9131, 0.5592 ) }
    dend_3 { pt3dadd( 248.907, 294.629, 14.0266, 0.5084 ) }
    dend_3 { pt3dadd( 247.967, 294.999, 12.9055, 0.4576 ) }
    dend_3 { pt3dadd( 246.884, 295.294, 12.4536, 0.4576 ) }
    dend_3 { pt3dadd( 245.834, 294.968, 11.8423, 0.5592 ) }
    dend_3 { pt3dadd( 246.576, 294.183, 11.181, 0.5848 ) }
    dend_3 { pt3dadd( 246.405, 293.983, 9.8932, 0.4576 ) }
    dend_3 { pt3dadd( 246.024, 293.817, 9.2711, 0.305 ) }
    dend_3 { pt3dadd( 245.642, 293.919, 8.96, 0.4068 ) }
    dend_3 { pt3dadd( 245.095, 294.224, 9.0532, 0.4068 ) }
    dend_3 { pt3dadd( 244.575, 294.224, 8.96, 0.5084 ) }
    dend_3 { pt3dadd( 243.901, 294.237, 9.24, 0.3814 ) }
    dend_3 { pt3dadd( 243.71, 294.326, 9.6132, 0.2542 ) }
    dend_3 { pt3dadd( 243.341, 294.313, 9.9243, 0.4576 ) }
    dend_3 { pt3dadd( 243.329, 294.618, 10.5468, 0.4322 ) }
    dend_3 { pt3dadd( 242.998, 294.821, 10.92, 0.305 ) }
    dend_3 { pt3dadd( 242.821, 295.025, 11.1068, 0.2288 ) }
    dend_3 { pt3dadd( 242.528, 295.038, 11.2, 0.2288 ) }
    dend_3 { pt3dadd( 242.197, 295.05, 11.2, 0.2542 ) }
    dend_3 { pt3dadd( 242.058, 295.152, 10.3911, 0.305 ) }
    dend_3 { pt3dadd( 241.651, 295.304, 10.08, 0.2542 ) }
    dend_3 { pt3dadd( 241.282, 295.343, 9.5822, 0.2542 ) }
    dend_3 { pt3dadd( 241.041, 295.266, 8.96, 0.356 ) }
    dend_3 { pt3dadd( 240.571, 295.165, 8.68, 0.356 ) }
    dend_3 { pt3dadd( 240.075, 294.974, 9.24, 0.5338 ) }
    dend_3 { pt3dadd( 239.566, 294.923, 9.5511, 0.5338 ) }
    dend_3 { pt3dadd( 239.046, 295.114, 9.5511, 0.5338 ) }
    dend_3 { pt3dadd( 238.181, 295.266, 8.96, 0.3814 ) }
    dend_3 { pt3dadd( 237.494, 295.152, 8.96, 0.2796 ) }
    dend_3 { pt3dadd( 237.151, 295.152, 8.96, 0.2288 ) }
    dend_3 { pt3dadd( 236.808, 295.152, 8.96, 0.2288 ) }
    dend_3 { pt3dadd( 236.503, 295.114, 8.96, 0.2288 ) }
    dend_3 { pt3dadd( 236.109, 295.025, 9.52, 0.2288 ) }
    dend_3 { pt3dadd( 235.778, 295.038, 9.52, 0.2288 ) }
    dend_3 { pt3dadd( 235.423, 295.038, 9.7689, 0.2288 ) }
    dend_3 { pt3dadd( 235.219, 295.038, 10.1111, 0.2288 ) }
    dend_3 { pt3dadd( 235.206, 294.961, 10.7332, 0.2288 ) }
    dend_3 { pt3dadd( 235.206, 294.873, 11.3557, 0.2288 ) }
    dend_3 { pt3dadd( 235.015, 294.694, 11.5732, 0.2288 ) }
    dend_3 { pt3dadd( 234.774, 294.796, 11.8532, 0.2288 ) }
    dend_3 { pt3dadd( 234.597, 294.694, 12.2268, 0.305 ) }
    dend_3 { pt3dadd( 234.152, 294.657, 12.2889, 0.4576 ) }
    dend_3 { pt3dadd( 233.732, 294.809, 11.4489, 0.4322 ) }
    dend_3 { pt3dadd( 233.274, 294.707, 10.92, 0.5084 ) }
    dend_3 { pt3dadd( 232.804, 294.987, 10.7957, 0.4322 ) }
    dend_3 { pt3dadd( 232.575, 294.923, 10.08, 0.3304 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 72/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 285.428, 272.272, 22.96, 0.3304 ) }
    dend_35 { pt3dadd( 285.516, 272.604, 23.5012, 0.2542 ) }
    dend_35 { pt3dadd( 286.146, 272.124, 23.5052, 0.2288 ) }
    dend_35 { pt3dadd( 286.125, 271.446, 24.9155, 0.2288 ) }
    dend_35 { pt3dadd( 286.115, 270.329, 24.4479, 0.2288 ) }
    dend_35 { pt3dadd( 286.115, 269.26, 23.6869, 0.2288 ) }
    dend_35 { pt3dadd( 285.771, 268.562, 23.2512, 0.2288 ) }
    dend_35 { pt3dadd( 285.57, 267.894, 24.8861, 0.2288 ) }
    dend_35 { pt3dadd( 285.771, 266.869, 25.3918, 0.2288 ) }
    dend_35 { pt3dadd( 285.594, 266.168, 27.4579, 0.2288 ) }
    dend_35 { pt3dadd( 285.314, 265.558, 27.8894, 0.2542 ) }
    dend_35 { pt3dadd( 284.645, 265.179, 26.9108, 0.2796 ) }
    dend_35 { pt3dadd( 284.083, 264.894, 28.8372, 0.3304 ) }
    dend_35 { pt3dadd( 284.184, 264.338, 28.28, 0.3304 ) }
    dend_35 { pt3dadd( 283.572, 263.832, 27.862, 0.3814 ) }
    dend_35 { pt3dadd( 283.104, 263.082, 28.4659, 0.4068 ) }
    dend_35 { pt3dadd( 282.603, 262.193, 29.3762, 0.483 ) }
    dend_35 { pt3dadd( 281.661, 261.75, 29.248, 0.4576 ) }
    dend_35 { pt3dadd( 281.05, 261.192, 29.7657, 0.4322 ) }
    dend_35 { pt3dadd( 280.224, 260.718, 28.8562, 0.356 ) }
    dend_35 { pt3dadd( 279.125, 260.497, 29.003, 0.3304 ) }
    dend_35 { pt3dadd( 278.106, 260.489, 29.68, 0.305 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 94/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 285.428, 272.272, 22.96, 0.3304 ) }
    dend_34 { pt3dadd( 286.138, 272.129, 23.4455, 0.305 ) }
    dend_34 { pt3dadd( 286.491, 271.419, 25.1502, 0.305 ) }
    dend_34 { pt3dadd( 286.913, 270.625, 25.7936, 0.2796 ) }
    dend_34 { pt3dadd( 287.024, 269.764, 26.4029, 0.2542 ) }
    dend_34 { pt3dadd( 287.642, 269.247, 24.92, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_34 { pt3dadd( 287.602, 268.421, 26.1327, 0.2288 ) }
    dend_34 { pt3dadd( 288.336, 267.762, 26.6, 0.2288 ) }
    dend_34 { pt3dadd( 288.632, 266.711, 26.8587, 0.2288 ) }
    dend_34 { pt3dadd( 289.236, 266.17, 26.0761, 0.2542 ) }
    dend_34 { pt3dadd( 288.873, 265.751, 25.1098, 0.2796 ) }
    dend_34 { pt3dadd( 289.544, 265.405, 23.8445, 0.3304 ) }
    dend_34 { pt3dadd( 289.775, 265.2, 22.4, 0.3304 ) }
    dend_34 { pt3dadd( 289.382, 264.185, 22.7195, 0.3304 ) }
    dend_34 { pt3dadd( 289.93, 264.471, 23.6928, 0.2796 ) }
    dend_34 { pt3dadd( 290.339, 264.051, 24.8979, 0.2796 ) }
    dend_34 { pt3dadd( 290.146, 263.499, 25.9106, 0.305 ) }
    dend_34 { pt3dadd( 290.951, 262.906, 26.1682, 0.3814 ) }
    dend_34 { pt3dadd( 291.484, 262.033, 27.0746, 0.4068 ) }
    dend_34 { pt3dadd( 291.274, 261.037, 26.2934, 0.3814 ) }
    dend_34 { pt3dadd( 291.878, 260.123, 26.32, 0.305 ) }
    dend_34 { pt3dadd( 292.78, 259.447, 26.32, 0.2542 ) }
    dend_34 { pt3dadd( 293.733, 258.928, 26.32, 0.2288 ) }
    dend_34 { pt3dadd( 293.779, 257.834, 26.7616, 0.2288 ) }
    dend_34 { pt3dadd( 293.783, 256.838, 27.8076, 0.2542 ) }
    dend_34 { pt3dadd( 294.174, 256.359, 29.3737, 0.2796 ) }
    dend_34 { pt3dadd( 294.901, 255.556, 29.2631, 0.305 ) }
    dend_34 { pt3dadd( 295.513, 254.645, 28.7151, 0.2796 ) }
    dend_34 { pt3dadd( 296.182, 254.025, 28.56, 0.2542 ) }
    dend_34 { pt3dadd( 296.635, 253.154, 28.5687, 0.2542 ) }
    dend_34 { pt3dadd( 297.211, 252.824, 29.96, 0.2796 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 25/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 297.135, 267.099, 16.2711, 0.2542 ) }
    dend_30 { pt3dadd( 297.483, 266.94, 15.4454, 0.3814 ) }
    dend_30 { pt3dadd( 298.001, 267.313, 14.7857, 0.305 ) }
    dend_30 { pt3dadd( 298.832, 267.115, 14.56, 0.2796 ) }
    dend_30 { pt3dadd( 299.754, 266.732, 13.596, 0.305 ) }
    dend_30 { pt3dadd( 300.684, 266.328, 13.624, 0.3814 ) }
    dend_30 { pt3dadd( 301.609, 266.247, 14.3111, 0.4322 ) }
    dend_30 { pt3dadd( 302.716, 266.061, 14.28, 0.4322 ) }
    dend_30 { pt3dadd( 303.638, 265.86, 14.5354, 0.3814 ) }
    dend_30 { pt3dadd( 304.667, 265.759, 13.8267, 0.305 ) }
    dend_30 { pt3dadd( 305.623, 265.997, 13.9493, 0.2796 ) }
    dend_30 { pt3dadd( 306.676, 266.093, 13.5439, 0.2796 ) }
    dend_30 { pt3dadd( 307.274, 266.093, 14.8224, 0.356 ) }
    dend_30 { pt3dadd( 308.324, 266.271, 15.12, 0.3814 ) }
    dend_30 { pt3dadd( 309.332, 266.494, 14.6269, 0.483 ) }
    dend_30 { pt3dadd( 310.135, 266.625, 12.9514, 0.5084 ) }
    dend_30 { pt3dadd( 311.077, 266.894, 13.4565, 0.5592 ) }
    dend_30 { pt3dadd( 312.105, 266.641, 14.2626, 0.4576 ) }
    dend_30 { pt3dadd( 313.243, 266.554, 14.2783, 0.3814 ) }
    dend_30 { pt3dadd( 314.05, 266.655, 12.8299, 0.356 ) }
    dend_30 { pt3dadd( 314.854, 266.552, 12.1657, 0.4322 ) }
    dend_30 { pt3dadd( 315.563, 266.93, 13.4585, 0.5084 ) }
    dend_30 { pt3dadd( 316.483, 266.981, 14.6964, 0.5084 ) }
    dend_30 { pt3dadd( 317.398, 266.895, 13.7315, 0.483 ) }
    dend_30 { pt3dadd( 318.337, 267.226, 12.6521, 0.483 ) }
    dend_30 { pt3dadd( 319.003, 267.558, 13.2286, 0.483 ) }
    dend_30 { pt3dadd( 319.846, 267.124, 12.0523, 0.483 ) }
    dend_30 { pt3dadd( 320.509, 266.646, 12.85, 0.4322 ) }
    dend_30 { pt3dadd( 321.113, 266.323, 11.6292, 0.4068 ) }
    dend_30 { pt3dadd( 322.036, 266.209, 12.32, 0.3814 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 297.135, 267.099, 16.2711, 0.2542 ) }
    dend_29 { pt3dadd( 297.224, 267.158, 15.7864, 0.356 ) }
    dend_29 { pt3dadd( 297.99, 266.745, 16.1473, 0.3304 ) }
    dend_29 { pt3dadd( 298.355, 266.346, 17.36, 0.2796 ) }
    dend_29 { pt3dadd( 298.632, 265.38, 17.08, 0.2542 ) }
    dend_29 { pt3dadd( 298.813, 264.285, 17.0996, 0.2288 ) }
    dend_29 { pt3dadd( 299.479, 263.56, 17.5006, 0.2542 ) }
    dend_29 { pt3dadd( 300.068, 262.638, 17.1167, 0.2796 ) }
    dend_29 { pt3dadd( 299.777, 261.624, 17.2738, 0.3304 ) }
    dend_29 { pt3dadd( 300.06, 260.825, 17.0657, 0.3304 ) }
    dend_29 { pt3dadd( 300.555, 259.848, 17.6019, 0.3304 ) }
    dend_29 { pt3dadd( 301.063, 258.887, 16.9868, 0.2796 ) }
    dend_29 { pt3dadd( 301.266, 258.43, 17.2357, 0.305 ) }
    dend_29 { pt3dadd( 301.559, 257.859, 17.1324, 0.3304 ) }
    dend_29 { pt3dadd( 301.102, 257.211, 16.9977, 0.3814 ) }
    dend_29 { pt3dadd( 300.822, 256.394, 16.581, 0.3304 ) }
    dend_29 { pt3dadd( 300.534, 255.382, 16.1899, 0.305 ) }
    dend_29 { pt3dadd( 300.565, 254.287, 15.6282, 0.2796 ) }
    dend_29 { pt3dadd( 300.632, 253.196, 14.8313, 0.3304 ) }
    dend_29 { pt3dadd( 300.414, 252.112, 14.56, 0.3304 ) }
    dend_29 { pt3dadd( 300.543, 251.11, 14.3242, 0.3304 ) }
    dend_29 { pt3dadd( 301.467, 250.53, 14.814, 0.2796 ) }
    dend_29 { pt3dadd( 301.975, 249.632, 14.5712, 0.2542 ) }
    dend_29 { pt3dadd( 301.994, 248.496, 14.4763, 0.2288 ) }
    dend_29 { pt3dadd( 301.787, 247.424, 13.746, 0.2542 ) }
    dend_29 { pt3dadd( 301.632, 246.305, 13.72, 0.2796 ) }
    dend_29 { pt3dadd( 301.057, 245.41, 13.8488, 0.305 ) }
    dend_29 { pt3dadd( 300.833, 244.418, 13.1692, 0.2796 ) }
    dend_29 { pt3dadd( 301.367, 243.469, 12.9626, 0.2542 ) }
    dend_29 { pt3dadd( 301.667, 242.385, 12.5902, 0.2542 ) }
    dend_29 { pt3dadd( 302.359, 241.727, 12.32, 0.305 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 86/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 231.508, 297.796, 26.5378, 0.305 ) }
    dend_8 { pt3dadd( 230.609, 297.494, 27.5416, 0.356 ) }
    dend_8 { pt3dadd( 230.143, 297.004, 28.56, 0.356 ) }
    dend_8 { pt3dadd( 230.032, 296.145, 28.0722, 0.305 ) }
    dend_8 { pt3dadd( 229.863, 295.036, 28.0, 0.2542 ) }
    dend_8 { pt3dadd( 229.236, 294.102, 28.0, 0.2542 ) }
    dend_8 { pt3dadd( 228.249, 293.779, 28.28, 0.305 ) }
    dend_8 { pt3dadd( 227.38, 293.108, 28.84, 0.356 ) }
    dend_8 { pt3dadd( 226.642, 292.284, 28.5698, 0.356 ) }
    dend_8 { pt3dadd( 225.664, 291.968, 28.28, 0.305 ) }
    dend_8 { pt3dadd( 225.326, 291.035, 28.0, 0.2542 ) }
    dend_8 { pt3dadd( 224.525, 290.536, 28.8128, 0.2288 ) }
    dend_8 { pt3dadd( 223.572, 290.062, 28.2621, 0.2542 ) }
    dend_8 { pt3dadd( 222.791, 289.517, 28.0, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_8 { pt3dadd( 222.143, 288.784, 27.9692, 0.356 ) }
    dend_8 { pt3dadd( 221.223, 288.155, 27.7654, 0.356 ) }
    dend_8 { pt3dadd( 220.258, 287.83, 28.28, 0.305 ) }
    dend_8 { pt3dadd( 219.129, 287.716, 28.28, 0.2542 ) }
    dend_8 { pt3dadd( 218.567, 286.926, 28.28, 0.2288 ) }
    dend_8 { pt3dadd( 217.861, 286.088, 28.4676, 0.2288 ) }
    dend_8 { pt3dadd( 216.859, 285.771, 28.0, 0.2542 ) }
    dend_8 { pt3dadd( 215.885, 285.447, 28.7095, 0.2796 ) }
    dend_8 { pt3dadd( 215.245, 284.723, 28.7918, 0.305 ) }
    dend_8 { pt3dadd( 214.477, 284.325, 29.0136, 0.2796 ) }
    dend_8 { pt3dadd( 213.411, 284.057, 28.84, 0.2796 ) }
    dend_8 { pt3dadd( 212.392, 283.834, 29.1908, 0.3304 ) }
    dend_8 { pt3dadd( 211.511, 284.108, 28.3466, 0.4068 ) }
    dend_8 { pt3dadd( 211.526, 283.061, 27.6203, 0.4576 ) }
    dend_8 { pt3dadd( 211.06, 282.26, 26.7798, 0.4068 ) }
    dend_8 { pt3dadd( 210.01, 281.944, 26.6, 0.356 ) }
    dend_8 { pt3dadd( 209.119, 281.876, 27.3431, 0.2796 ) }
    dend_8 { pt3dadd( 208.485, 281.882, 29.3272, 0.2796 ) }
    dend_8 { pt3dadd( 207.766, 281.22, 29.9424, 0.2796 ) }
    dend_8 { pt3dadd( 207.699, 280.771, 28.28, 0.305 ) }
    dend_8 { pt3dadd( 207.182, 279.877, 28.0269, 0.2796 ) }
    dend_8 { pt3dadd( 206.208, 279.479, 27.2409, 0.2542 ) }
    dend_8 { pt3dadd( 205.683, 278.892, 26.4886, 0.2288 ) }
    dend_8 { pt3dadd( 204.996, 278.342, 27.4756, 0.2288 ) }
    dend_8 { pt3dadd( 204.602, 277.884, 29.188, 0.2288 ) }
    dend_8 { pt3dadd( 204.893, 277.195, 30.6057, 0.2288 ) }
    dend_8 { pt3dadd( 204.433, 276.994, 31.4451, 0.2542 ) }
    dend_8 { pt3dadd( 204.433, 275.879, 31.2953, 0.2796 ) }
    dend_8 { pt3dadd( 204.381, 274.923, 31.7702, 0.305 ) }
    dend_8 { pt3dadd( 204.547, 274.25, 32.97, 0.2796 ) }
    dend_8 { pt3dadd( 204.576, 273.243, 32.48, 0.305 ) }
    dend_8 { pt3dadd( 205.356, 272.839, 33.4068, 0.356 ) }
    dend_8 { pt3dadd( 205.462, 271.965, 32.48, 0.4322 ) }
    dend_8 { pt3dadd( 205.728, 271.23, 33.1876, 0.4068 ) }
    dend_8 { pt3dadd( 205.793, 270.35, 34.7108, 0.3304 ) }
    dend_8 { pt3dadd( 205.577, 269.288, 34.72, 0.2796 ) }
    dend_8 { pt3dadd( 205.7, 268.858, 33.178, 0.305 ) }
    dend_8 { pt3dadd( 205.768, 267.83, 33.7859, 0.356 ) }
    dend_8 { pt3dadd( 205.652, 266.788, 33.7011, 0.356 ) }
    dend_8 { pt3dadd( 205.801, 266.229, 35.0255, 0.305 ) }
    dend_8 { pt3dadd( 205.658, 265.382, 36.3731, 0.2542 ) }
    dend_8 { pt3dadd( 205.055, 264.479, 36.1984, 0.2288 ) }
    dend_8 { pt3dadd( 204.776, 263.468, 36.9527, 0.2542 ) }
    dend_8 { pt3dadd( 205.346, 262.642, 36.68, 0.305 ) }
    dend_8 { pt3dadd( 205.348, 261.862, 35.8963, 0.3814 ) }
    dend_8 { pt3dadd( 204.909, 261.626, 36.027, 0.4068 ) }
    dend_8 { pt3dadd( 204.589, 261.173, 37.6281, 0.3814 ) }
    dend_8 { pt3dadd( 204.069, 260.489, 38.2908, 0.3304 ) }
    dend_8 { pt3dadd( 203.528, 259.625, 38.7397, 0.305 ) }
    dend_8 { pt3dadd( 203.172, 258.643, 38.36, 0.305 ) }
    dend_8 { pt3dadd( 202.717, 257.759, 38.918, 0.2796 ) }
    dend_8 { pt3dadd( 202.519, 257.184, 40.1568, 0.2542 ) }
    dend_8 { pt3dadd( 202.96, 257.04, 37.9128, 0.2542 ) }
    dend_8 { pt3dadd( 202.792, 256.293, 36.6825, 0.2796 ) }
    dend_8 { pt3dadd( 202.073, 256.082, 35.9526, 0.3304 ) }
    dend_8 { pt3dadd( 201.916, 255.341, 34.16, 0.3304 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 56/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 231.508, 297.796, 26.5378, 0.305 ) }
    dend_7 { pt3dadd( 231.317, 297.741, 28.954, 0.356 ) }
    dend_7 { pt3dadd( 230.531, 297.421, 30.0712, 0.3814 ) }
    dend_7 { pt3dadd( 229.752, 298.003, 30.0546, 0.4322 ) }
    dend_7 { pt3dadd( 228.846, 298.283, 30.2711, 0.4322 ) }
    dend_7 { pt3dadd( 228.22, 299.021, 30.872, 0.4068 ) }
    dend_7 { pt3dadd( 227.528, 299.903, 30.9358, 0.4068 ) }
    dend_7 { pt3dadd( 226.869, 300.529, 29.7822, 0.4576 ) }
    dend_7 { pt3dadd( 226.176, 301.034, 30.7835, 0.4576 ) }
    dend_7 { pt3dadd( 225.75, 301.708, 31.92, 0.4576 ) }
    dend_7 { pt3dadd( 225.319, 302.644, 31.36, 0.4068 ) }
    dend_7 { pt3dadd( 224.642, 303.356, 31.922, 0.4068 ) }
    dend_7 { pt3dadd( 224.154, 304.075, 32.3842, 0.3304 ) }
    dend_7 { pt3dadd( 224.224, 304.747, 31.08, 0.2796 ) }
    dend_7 { pt3dadd( 223.468, 305.271, 31.3508, 0.2288 ) }
    dend_7 { pt3dadd( 222.485, 305.79, 31.64, 0.2288 ) }
    dend_7 { pt3dadd( 221.749, 306.452, 32.2, 0.2288 ) }
    dend_7 { pt3dadd( 220.626, 306.592, 32.2263, 0.2288 ) }
    dend_7 { pt3dadd( 219.911, 307.181, 32.76, 0.2542 ) }
    dend_7 { pt3dadd( 219.648, 307.85, 33.6, 0.305 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_37, dend_24, dend_17, dend_0, dend_39, dend_38, dend_36, dend_25, dend_21, dend_18, dend_10, dend_1, dend_43, dend_40, dend_31, dend_26, dend_23, dend_22, dend_20, dend_19, dend_14, dend_11, dend_5, dend_2, dend_42, dend_41, dend_33, dend_32, dend_28, dend_27, dend_16, dend_15, dend_13, dend_12, dend_9, dend_6, dend_4, dend_3, dend_35, dend_34, dend_30, dend_29, dend_8, dend_7]}
    dend = new SectionList()
    dend_37 dend.append()
    dend_24 dend.append()
    dend_17 dend.append()
    dend_0 dend.append()
    dend_39 dend.append()
    dend_38 dend.append()
    dend_36 dend.append()
    dend_25 dend.append()
    dend_21 dend.append()
    dend_18 dend.append()
    dend_10 dend.append()
    dend_1 dend.append()
    dend_43 dend.append()
    dend_40 dend.append()
    dend_31 dend.append()
    dend_26 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_14 dend.append()
    dend_11 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_42 dend.append()
    dend_41 dend.append()
    dend_33 dend.append()
    dend_32 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_9 dend.append()
    dend_6 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_35 dend.append()
    dend_34 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_12569, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_12569 = new SectionList()
    soma_0 OneSecGrp_SectionRef_12569.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, axon_1, axon_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 2.45  // units: uF/cm2
    forsec axon cm = 2.45  // units: uF/cm2
    forsec dend cm = 2.45  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 83.11  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.0012797033  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 1.338307E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.559007  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 4.4545525E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.06191245  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.017232854  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.039659165  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.205513  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 8.181138E-4  // units: S cm-2
        e_pas_nml2 = -91.87816  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 8.8555017E-4  // units: S cm-2
        e_pas_nml2 = -91.87816  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 2.5457348E-5  // units: S cm-2
        e_pas_nml2 = -91.87816  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 6.7139865E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0036171298  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_38 nseg = 3
    dend_36 nseg = 5
    dend_43 nseg = 3
    dend_23 nseg = 5
    dend_20 nseg = 7
    dend_42 nseg = 3
    dend_41 nseg = 3
    dend_27 nseg = 3
    dend_16 nseg = 5
    dend_15 nseg = 3
    dend_12 nseg = 7
    dend_9 nseg = 5
    dend_4 nseg = 5
    dend_3 nseg = 3
    dend_8 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472421285


