// Cell: bIR215_L23_BTC_e02ed2d076_0_0
/*
{
  "id" : "bIR215_L23_BTC_e02ed2d076_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.414762, -11.6197, -1.62187, 2.64004", "0.384603, -10.5465, -1.46411, 4.71198", "0.354444, -9.47334, -1.30636, 5.74801", "0.324285, -8.40018, -1.1486, 7.28344", "0.294125, -7.32702, -0.990848, 9.16307", "0.263966, -6.25385, -0.833093, 10.6182", "0.233807, -5.18069, -0.675338, 11.6398", "0.203648, -4.10753, -0.517583, 12.315", "0.173489, -3.03436, -0.359828, 12.8408", "0.14333, -1.9612, -0.202073, 12.9638", "0.113171, -0.888035, -0.0443183, 12.9997", "0.083012, 0.185129, 0.113437, 12.9186", "0.052853, 1.25829, 0.271192, 12.6149", "0.0226939, 2.33146, 0.428947, 11.9889", "-0.00746517, 3.40462, 0.586702, 11.363", "-0.0376242, 4.47778, 0.744457, 10.7371", "-0.0677833, 5.55095, 0.902211, 10.104", "-0.0979424, 6.62411, 1.05997, 9.17803", "-0.128101, 7.69727, 1.21772, 8.07035", "-0.15826, 8.77044, 1.37548, 6.54703", "-0.18842, 9.8436, 1.53323, 5.23645" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.765137, 9.68391, 2.31562, 3.33", "-0.825135, 11.8594, 2.31562, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "2.87486, 4.06941, -11.9444, 1.11", "4.13674, 6.16614, -12.4741, 1.11", "5.708, 8.47934, -13.2616, 0.83", "7.4345, 10.4772, -14.4177, 1.11", "9.03623, 11.9258, -15.8775, 0.56", "9.72901, 12.5523, -16.509, 0.56", "10.4187, 13.1761, -17.1376, 0.83", "11.4424, 13.9502, -18.1416, 0.83", "13.54, 15.2076, -20.4815, 0.56", "16.2419, 16.445, -23.7494, 0.28", "22.0217, 21.7911, -29.6592, 0.28", "28.5522, 25.4912, -36.1541, 0.28", "35.0595, 29.3162, -42.5917, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.09513, -2.68509, -11.7344, 1.11", "-3.17989, -5.15834, -13.5453, 0.83", "-4.35463, -7.83676, -15.5065, 0.83", "-5.27315, -9.93102, -17.04, 0.83", "-6.55321, -12.8495, -19.177, 1.39", "-11.0996, -20.5973, -22.7572, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.62514, -11.3111, 1.00562, 2.78", "-2.05514, -12.7931, -1.52438, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "0.604862, -11.0071, 2.12562, 1.39", "1.29696, -12.4328, 2.96861, 1.39", "3.86558, -18.5537, 5.43145, 1.39", "5.27143, -21.9393, 6.44557, 1.39", "6.23703, -24.0791, 6.94658, 1.39", "7.8639, -27.5538, 7.69335, 1.11", "9.28444, -30.5878, 8.34541, 1.39", "11.9571, -36.4148, 9.35533, 1.11", "13.3952, -39.5604, 9.60731, 1.11", "15.5363, -44.2212, 9.63993, 1.11", "16.7448, -46.6862, 9.56707, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.80514, 6.71991, 5.69562, 1.39", "-5.40067, 7.90799, 5.61491, 1.39", "-7.80592, 12.7065, 5.28894, 1.39", "-9.35534, 15.7976, 5.07895, 1.39", "-10.2683, 17.6187, 4.95523, 1.11", "-12.4429, 21.9571, 4.66051, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.18842, 9.8436, 1.53323, 0.83", "-0.609797, 24.8377, 1.53323, 0.83", "-1.03117, 39.8318, 1.53323, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-0.825135, 11.8594, 2.31562, 1.39", "-1.76426, 13.5311, 2.80415, 1.39", "-3.67593, 16.9338, 3.79857, 1.39", "-5.83781, 20.782, 4.92316, 1.39" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.825135, 11.8594, 2.31562, 1.39", "0.318916, 14.5215, 5.69298, 1.39", "1.2646, 16.8891, 8.94313, 1.11", "1.81663, 18.2711, 10.8404, 1.11", "2.47982, 19.9315, 13.1196, 1.39", "3.42845, 22.3065, 16.3799, 1.11", "4.03331, 23.8208, 18.4587, 0.83", "4.5173, 25.3204, 21.0803, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "35.0595, 29.3162, -42.5917, 0.28", "41.2339, 34.2091, -48.5373, 0.28", "47.9143, 40.361, -52.203, 0.28", "53.4244, 47.5654, -55.6856, 0.28", "59.4168, 55.0566, -57.0677, 0.28", "66.1704, 61.6908, -59.4388, 0.28", "73.6008, 67.6648, -61.729, 0.28", "81.1296, 72.9257, -65.2858, 0.28", "89.696, 76.7759, -68.478, 0.28", "97.9084, 80.7527, -72.3553, 0.28", "106.034, 83.2657, -77.5498, 0.28", "114.037, 87.6446, -81.3844, 0.28", "121.981, 92.5055, -84.6578, 0.28", "129.599, 98.0203, -87.5321, 0.28", "136.829, 102.732, -92.3426, 0.28", "143.821, 106.852, -98.0259, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "35.0595, 29.3162, -42.5917, 0.28", "41.3048, 34.1791, -48.4904, 0.28", "46.4255, 39.4656, -55.0335, 0.28", "51.5578, 44.6257, -61.6785, 0.28", "56.0137, 50.1489, -68.4861, 0.28", "59.1788, 54.7737, -76.6276, 0.28", "62.347, 59.4889, -84.71, 0.28", "64.5657, 63.3908, -93.5536, 0.28", "64.7783, 68.0586, -102.261, 0.28", "64.7353, 74.7198, -109.391, 0.28", "65.5992, 81.0272, -116.819, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-11.0996, -20.5973, -22.7572, 0.83", "-14.7878, -28.2109, -27.4655, 0.83", "-18.208, -36.611, -30.6463, 0.83", "-21.5251, -44.3734, -35.3615, 0.83", "-24.9587, -51.4734, -41.0496, 0.83", "-26.8068, -58.113, -47.9587, 0.83", "-28.2896, -63.6003, -55.9861, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-11.0996, -20.5973, -22.7572, 0.83", "-15.0192, -28.1508, -27.3852, 0.83", "-17.9052, -36.3751, -31.4746, 0.83", "-22.2244, -43.7996, -35.9765, 0.83", "-25.4992, -50.6421, -42.0918, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.05514, -12.7931, -1.52438, 1.94", "-3.13345, -22.8523, 2.62212, 1.94", "-3.77841, -28.869, 5.10223, 1.94", "-4.22297, -33.0162, 6.81172, 1.94" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "16.7448, -46.6862, 9.56707, 0.83", "17.6221, -47.995, 12.2777, 0.83", "19.5514, -50.3366, 16.9824, 0.83", "20.4264, -51.3417, 19.1642, 0.83", "21.8745, -53.205, 23.5343, 0.83", "22.5225, -54.1346, 25.7698, 0.83", "22.983, -54.8137, 27.4417, 0.28", "23.7657, -55.8665, 30.0467, 1.39", "25.3042, -58.0495, 35.1039, 1.11", "27.4669, -61.3507, 42.6177, 0.56", "28.3499, -62.8328, 45.994, 2.5", "28.8967, -63.8635, 48.2365, 2.5", "29.5531, -65.2965, 51.2493, 0.28", "29.9504, -66.2713, 53.2317, 1.11", "30.1943, -66.8283, 54.2184, 1.11", "31.7692, -70.2374, 59.8124, 0.28", "31.9169, -70.5587, 60.3241, 0.56", "32.6034, -72.1055, 62.7698, 0.28", "33.5148, -74.1195, 66.06, 3.33", "34.5725, -76.1393, 69.2381, 0.28", "34.7121, -76.3525, 69.5297, 0.56", "36.8621, -79.2356, 72.8496, 0.28", "37.0456, -79.4707, 73.0968, 0.83", "38.7185, -81.5007, 75.0368, 0.28", "39.7408, -82.6558, 76.0656, 1.39", "45.603, -88.8775, 81.5001, 0.28", "46.878, -90.1739, 82.6068, 2.5", "49.3746, -92.5643, 84.5502, 0.28", "49.8816, -93.0317, 84.8999, 0.83", "52.682, -95.4516, 86.4887, 0.28", "53.4157, -96.0179, 86.8239, 1.11", "56.3029, -97.8814, 87.7857, 0.28", "57.4386, -98.579, 88.134, 1.11", "59.8531, -99.9461, 88.7342, 0.28", "61.2091, -100.715, 89.0407, 1.39", "67.0816, -104.042, 90.0351, 0.28", "67.6105, -104.339, 90.1188, 1.39" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "16.7448, -46.6862, 9.56707, 0.83", "18.5836, -51.249, 11.2484, 0.83", "19.7859, -54.4006, 12.4127, 0.83", "20.4863, -56.25, 13.0685, 0.83", "21.3529, -58.455, 13.808, 0.83", "22.3554, -61.0113, 14.6093, 0.83", "23.757, -64.1991, 15.5634, 0.83", "25.9657, -68.4599, 17.0068, 0.83", "26.724, -69.831, 17.4393, 1.11", "27.6683, -71.5467, 17.9484, 0.83", "28.5783, -73.1475, 18.3928, 1.11", "32.1249, -78.9736, 20.0642, 0.83", "33.3691, -80.7806, 20.663, 0.28", "33.5292, -80.9853, 20.7389, 0.83", "34.2164, -81.8444, 21.0653, 0.28", "36.9522, -85.2351, 22.403, 0.83", "38.8621, -87.5985, 23.3273, 0.56", "39.8329, -88.9241, 23.8431, 0.83", "40.6108, -90.0722, 24.2725, 0.56", "42.3063, -92.7587, 25.249, 1.11", "43.3519, -94.5647, 25.9244, 0.56", "43.937, -95.706, 26.3325, 0.83", "45.0402, -98.2042, 27.1819, 0.28", "45.2517, -98.7339, 27.3576, 0.83", "46.7493, -102.658, 28.6356, 1.94", "47.4491, -104.466, 29.2218, 1.11", "48.3165, -106.617, 29.8698, 0.56", "49.1583, -108.499, 30.4701, 0.83", "50.0623, -110.37, 31.0643, 0.56", "51.9524, -114.006, 32.2391, 1.39", "52.9583, -115.885, 32.8159, 0.56", "53.6085, -117.036, 33.164, 0.83", "55.5309, -120.305, 34.2677, 0.28", "55.7941, -120.747, 34.4349, 0.83", "57.3084, -123.286, 35.4443, 2.22", "61.5692, -130.386, 38.4601, 0.28", "62.9621, -132.832, 39.5009, 1.39", "64.1825, -135.154, 40.5112, 0.56", "65.2334, -137.347, 41.458, 0.28", "65.6793, -138.356, 41.9153, 0.83", "66.5693, -140.593, 42.9919, 0.28", "68.0641, -144.712, 45.0324, 1.39", "69.2133, -148.152, 46.5627, 0.28", "69.3724, -148.684, 46.7824, 0.83", "69.8706, -150.573, 47.513, 0.28", "70.0212, -151.268, 47.7507, 0.83", "70.3677, -153.337, 48.3242, 0.28", "70.5725, -154.863, 48.688, 1.94", "70.8837, -158.163, 49.3087, 0.28", "70.9594, -159.488, 49.5326, 0.83", "71.2362, -162.038, 49.9925, 0.28", "71.4149, -163.188, 50.2145, 0.83", "71.6703, -164.739, 50.5088, 0.56", "72.3655, -168.438, 51.2004, 0.28", "72.5855, -169.367, 51.3595, 1.67", "74.1391, -174.806, 52.6006, 0.28", "74.4504, -175.662, 52.8726, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-12.4429, 21.9571, 4.66051, 0.83", "-13.0272, 22.8339, 6.03005, 0.83", "-13.8857, 24.0811, 8.12632, 0.83", "-15.6495, 27.4495, 13.5482, 0.83", "-15.8594, 27.9601, 14.4175, 0.83", "-16.4409, 29.5329, 17.0872, 0.83", "-17.2503, 31.9356, 21.2148, 0.83", "-17.7635, 33.4281, 23.9539, 0.83", "-18.373, 35.3498, 27.6106, 0.83", "-19.3432, 38.3809, 33.1496, 0.56", "-19.4919, 38.9587, 34.1017, 0.83", "-19.815, 40.6794, 36.5007, 0.83", "-20.2781, 42.7026, 39.0288, 1.11", "-21.0167, 44.8679, 41.4521, 0.28", "-21.5243, 45.8077, 42.3897, 1.11", "-23.0496, 47.7771, 44.1045, 0.56", "-24.636, 49.2281, 45.4419, 0.28", "-27.7728, 50.9382, 47.4714, 0.56", "-28.6895, 51.2669, 47.9901, 0.56", "-31.9624, 52.1356, 49.7162, 2.22", "-35.8505, 52.8974, 51.9433, 0.28", "-38.4975, 53.2384, 53.452, 0.83", "-43.2321, 53.6659, 56.1406, 0.28", "-44.2631, 53.7503, 56.6936, 0.56", "-45.5065, 53.8055, 57.3634, 0.83", "-48.5268, 53.82, 58.979, 0.83", "-50.0108, 53.8211, 59.851, 1.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-12.4429, 21.9571, 4.66051, 0.83", "-16.0024, 22.5928, 5.82573, 0.83", "-18.4538, 22.9567, 6.51605, 0.56", "-20.3764, 23.2045, 7.00944, 0.56", "-23.5279, 23.7425, 7.93522, 0.56", "-24.6097, 23.9386, 8.28352, 0.56", "-27.7103, 24.6133, 9.30426, 0.56", "-29.1926, 25.0234, 9.90822, 0.56", "-29.6751, 25.1903, 10.1263, 0.56", "-33.3415, 26.8847, 11.9082, 0.56", "-35.5384, 28.128, 12.9806, 0.56", "-38.2892, 29.8309, 14.4029, 0.56", "-40.4758, 31.3632, 15.6459, 0.56", "-43.2536, 33.4113, 17.2996, 0.83", "-45.9765, 35.5218, 18.9064, 1.11", "-46.9461, 36.3308, 19.4418, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.03117, 39.8318, 1.53323, 0.83", "-1.45255, 54.8258, 1.53323, 0.83", "-1.87393, 69.8199, 1.53323, 0.83" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-5.83781, 20.782, 4.92316, 0.83", "-6.25968, 21.7354, 6.20445, 0.83", "-6.52685, 22.2988, 6.96273, 1.11", "-7.36027, 24.2747, 10.1234, 0.56", "-7.75782, 25.2553, 11.6201, 0.83", "-8.06843, 26.106, 12.8389, 0.83", "-8.5283, 27.4212, 14.6856, 0.83", "-8.90712, 28.6062, 16.2936, 1.39", "-9.99232, 32.3123, 21.0612, 0.83", "-10.3122, 33.6686, 22.7716, 1.11", "-11.6666, 40.6793, 31.2057, 0.28", "-12.0703, 42.9361, 33.8654, 1.67", "-12.5853, 45.9467, 37.3056, 0.28", "-12.7276, 46.7421, 38.2031, 0.83", "-13.2972, 50.234, 41.8316, 0.28", "-13.6074, 52.2638, 43.8992, 0.28", "-13.8119, 53.6608, 45.2378, 0.83", "-13.9878, 54.6357, 46.2086, 0.28", "-14.256, 55.4182, 47.2778, 0.56", "-15.9919, 59.2844, 53.5076, 0.28", "-16.4104, 60.1505, 55.2443, 0.83", "-17.2439, 61.8282, 59.0812, 0.56", "-17.4816, 62.4095, 60.4177, 1.39", "-18.6389, 65.5236, 67.8155, 0.28", "-18.7766, 65.9854, 68.8686, 1.39", "-19.5696, 68.6494, 74.95, 0.28", "-19.6876, 69.1772, 75.9767, 1.11", "-20.1438, 71.5434, 79.867, 0.28", "-20.1994, 71.8624, 80.314, 0.83", "-21.37, 79.3784, 88.932, 0.28", "-21.6183, 80.8691, 90.5174, 1.67", "-22.3305, 84.6576, 94.051, 0.28", "-22.4121, 85.099, 94.4595, 0.83", "-22.6787, 86.2646, 95.4827, 0.28", "-22.8434, 86.9056, 96.0259, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-5.83781, 20.782, 4.92316, 1.11", "-8.6805, 25.1768, 2.87234, 1.11", "-10.735, 28.3531, 1.39016, 1.11", "-12.017, 30.3351, 0.465278, 1.11", "-14.1265, 33.5964, -1.05657, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "4.5173, 25.3204, 21.0803, 0.56", "4.33043, 27.4757, 24.0949, 0.56", "4.61277, 29.5231, 27.3445, 0.83", "4.89341, 30.6177, 29.1923, 0.56", "5.64683, 32.7884, 32.7556, 1.11", "6.54543, 35.2312, 36.6476, 0.56", "7.14312, 36.815, 39.0799, 1.39", "8.56007, 39.8818, 43.5244, 0.28", "9.38299, 41.5186, 45.894, 1.67", "10.582, 43.7714, 49.1327, 0.28", "10.8119, 44.2985, 49.7767, 0.56", "11.2162, 45.5767, 50.9978, 0.28", "11.2951, 45.8857, 51.2608, 0.83", "11.6828, 47.7996, 52.74, 0.28", "12.0054, 49.334, 53.9, 1.67", "13.9104, 58.314, 60.5353, 0.28", "14.3674, 60.5049, 62.1908, 2.22", "15.1198, 64.4374, 65.143, 0.28", "15.2412, 65.122, 65.6545, 0.83", "15.7427, 68.215, 67.9201, 0.28", "15.8767, 69.372, 68.725, 0.56", "16.1581, 73.5975, 71.3949, 0.28", "16.1445, 74.9714, 72.2139, 1.11", "15.9717, 77.301, 73.4012, 0.28", "15.8773, 78.2611, 73.8469, 0.83", "15.489, 80.5171, 74.7302, 0.28", "14.914, 83.3802, 75.7303, 1.11", "13.3874, 89.8923, 77.6345, 0.28", "13.1271, 90.7964, 77.9069, 0.28", "12.7179, 92.0185, 78.281, 1.11", "11.1177, 96.4669, 79.6656, 0.28", "10.9798, 96.8042, 79.7704, 0.28", "10.0121, 98.8282, 80.3122, 1.39", "8.75453, 100.787, 80.9722, 0.28", "7.85296, 102.155, 81.5593, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "4.5173, 25.3204, 21.0803, 0.28", "5.40652, 28.5814, 23.089, 0.28", "5.68823, 29.4248, 23.6854, 0.83", "6.31004, 30.9013, 24.7831, 1.11", "7.02955, 32.4974, 25.9408, 0.83", "7.34493, 33.1621, 26.3947, 0.28", "7.57544, 33.6218, 26.7136, 0.28", "8.90283, 35.817, 28.2711, 1.39", "10.1635, 37.5496, 29.6424, 0.83", "11.595, 39.3992, 31.1054, 0.28", "12.1891, 40.1231, 31.6415, 0.83", "13.7111, 41.9387, 32.9018, 0.28", "15.3622, 43.7861, 34.0961, 1.39", "17.237, 45.7822, 35.2476, 0.28", "18.8369, 47.3922, 36.092, 0.28", "20.0326, 48.5114, 36.6159, 0.56", "21.029, 49.3264, 37.0673, 0.83", "23.1254, 50.8861, 37.955, 0.28", "23.4323, 51.0964, 38.0792, 0.83", "25.645, 52.4443, 39.2165, 0.28", "26.7354, 53.048, 39.8525, 0.83", "31.4337, 55.5046, 42.8394, 0.28", "32.03, 55.8054, 43.2343, 1.39", "34.4664, 57.0545, 44.9504, 1.94", "39.1205, 59.502, 48.3226, 0.28", "39.7434, 59.859, 48.8069, 0.56", "41.6943, 61.1489, 50.3267, 0.28", "42.3698, 61.6752, 50.8267, 1.11", "44.4216, 63.4287, 52.3896, 0.28", "45.164, 64.1661, 52.998, 1.39", "47.1317, 66.5132, 54.5695, 0.28", "49.0534, 69.3018, 56.2617, 0.56", "49.7377, 70.4958, 56.9022, 0.56", "50.6466, 72.3544, 57.7997, 0.83", "51.5168, 74.583, 58.6977, 0.28", "52.0988, 76.4154, 59.3575, 1.39", "52.93, 79.9761, 60.4154, 0.28", "53.0994, 81.2382, 60.7824, 0.56", "53.2508, 82.7613, 61.214, 0.28", "53.4635, 84.8453, 61.8377, 1.39", "53.6464, 86.4073, 62.3844, 0.28", "53.754, 87.1773, 62.7225, 0.56", "54.5722, 92.1506, 65.1917, 0.28", "54.7304, 92.9798, 65.6434, 1.39", "55.6121, 96.8375, 67.8753, 0.28", "56.0378, 98.5443, 68.8811, 0.83", "57.1513, 103.273, 71.5282, 0.28", "57.2695, 103.787, 71.798, 0.56", "57.6694, 106.321, 72.8575, 0.28", "57.7447, 107.107, 73.1222, 0.28", "57.8461, 108.96, 73.6391, 1.39", "58.0089, 115.234, 75.0872, 0.28", "57.9868, 117.127, 75.431, 1.11", "57.7201, 123.642, 76.4928, 0.28", "57.653, 124.481, 76.5992, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-25.4992, -50.6421, -42.0918, 0.28", "-29.2491, -58.1544, -46.9299, 0.28", "-32.3769, -66.4025, -50.7817, 0.28", "-35.5612, -74.1637, -55.5897, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-25.4992, -50.6421, -42.0918, 0.28", "-28.1203, -58.4764, -47.1041, 0.28", "-29.7932, -66.293, -52.5356, 0.28", "-29.5127, -74.0036, -58.3704, 0.28", "-27.9063, -80.241, -65.7401, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-4.22297, -33.0162, 6.81172, 0.83", "-5.0682, -35.6362, 5.8546, 0.83", "-5.41805, -37.4222, 5.23606, 1.11", "-5.93601, -40.8985, 3.74421, 1.11", "-6.33951, -43.9937, 2.3917, 1.11", "-6.63014, -46.2231, 1.41751, 1.11", "-7.40422, -52.1611, -1.1772, 1.11", "-7.6295, -54.7681, -2.37017, 0.83", "-7.78973, -59.41, -4.43833, 0.83", "-7.67455, -62.3822, -5.63652, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-4.22297, -33.0162, 6.81172, 1.11", "-4.26001, -34.7652, 9.45555, 1.11", "-4.22201, -35.5549, 10.8353, 1.11", "-4.20377, -37.0301, 13.4823, 1.11", "-4.31493, -38.6435, 16.3484, 1.11", "-4.65264, -42.0695, 22.4587, 1.11", "-4.90419, -43.9941, 25.9417, 1.11", "-5.19481, -45.6397, 29.0841, 0.83", "-5.32573, -46.3998, 30.5769, 0.83", "-5.51334, -48.0666, 33.8514, 0.83", "-5.50988, -49.0307, 35.5758, 0.83", "-5.43403, -51.3414, 39.3395, 0.56", "-5.3007, -52.6026, 41.3344, 0.56", "-5.1397, -53.3215, 42.4675, 0.28", "-4.52912, -55.0068, 45.1844, 1.67", "-3.04117, -58.4418, 51.1893, 0.28", "-2.6398, -59.3272, 52.9752, 1.94", "-2.34007, -59.95, 54.4068, 3.33", "-1.88201, -60.9791, 57.1919, 0.83", "-1.44332, -62.121, 60.5869, 0.28", "-0.783493, -64.373, 67.3805, 2.22", "-0.141694, -66.8316, 74.907, 0.28", "0.0474619, -67.6438, 77.4681, 1.94", "0.465022, -70.0172, 85.2483, 0.28", "0.503892, -70.3971, 86.5201, 1.94", "0.594339, -71.6269, 90.7474, 0.28", "0.611566, -71.8064, 91.3074, 0.56" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-46.9461, 36.3308, 19.4418, 0.28", "-49.8188, 39.7804, 20.1543, 0.28", "-51.9306, 42.2662, 20.8299, 0.56", "-53.3401, 43.8761, 21.3028, 0.83", "-55.1462, 45.4729, 22.0551, 1.67", "-57.5484, 47.4233, 22.9132, 0.56", "-58.8567, 48.4485, 23.3319, 0.56", "-61.8338, 50.5905, 24.3698, 0.28", "-62.7472, 51.2211, 24.689, 0.83", "-73.5223, 58.5558, 28.3449, 0.28", "-76.6913, 60.6958, 29.3488, 1.11", "-79.1219, 62.2828, 29.9973, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-46.9461, 36.3308, 19.4418, 0.28", "-52.7592, 35.1394, 21.0223, 0.28", "-54.5823, 34.7787, 21.5599, 0.56", "-56.5978, 34.3783, 22.2982, 0.28", "-57.6367, 34.1554, 22.7057, 0.56", "-60.7718, 33.4375, 24.1832, 0.28", "-62.9698, 32.975, 25.2976, 0.56", "-63.6531, 32.8728, 25.7512, 0.28", "-66.6009, 32.9377, 28.0285, 0.56", "-67.5515, 33.1127, 28.8015, 0.56", "-71.4522, 34.6735, 30.8131, 0.28", "-72.8452, 35.4661, 31.1393, 0.56", "-74.8006, 36.7421, 31.1726, 1.67", "-80.5977, 40.7575, 30.574, 0.28", "-82.3494, 42.0617, 30.2407, 1.39", "-92.6711, 50.0856, 27.4987, 0.28", "-93.5144, 50.7622, 27.1747, 0.83", "-99.0024, 54.9967, 24.5973, 0.28", "-99.721, 55.5157, 24.1687, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-14.1265, 33.5964, -1.05657, 0.56", "-15.1828, 36.1982, -1.70251, 0.56", "-15.6721, 37.4035, -2.00173, 0.83", "-16.1988, 38.7007, -2.32379, 0.28", "-16.6955, 39.9243, -2.62758, 0.56", "-18.1817, 43.585, -3.5364, 0.56", "-19.3654, 46.5007, -4.26027, 0.56", "-22.8713, 55.3273, -5.43674, 0.56" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-14.1265, 33.5964, -1.05657, 0.83", "-15.6665, 38.9449, -6.03657, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-7.67455, -62.3822, -5.63652, 0.83", "-9.32414, -64.9818, -6.50288, 0.83", "-11.3071, -69.2861, -7.95243, 0.83", "-12.1925, -71.3519, -8.64639, 0.83", "-13.1238, -73.5244, -9.37621, 0.83", "-14.9612, -77.8111, -10.8162, 0.83", "-16.4072, -81.1844, -11.9494, 0.83", "-18.1253, -86.3432, -13.7075, 0.83", "-18.8177, -89.2542, -14.7721, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-7.67455, -62.3822, -5.63652, 0.83", "-8.4595, -69.0246, -4.09353, 0.83", "-8.70498, -72.0289, -3.36697, 0.83", "-8.75904, -73.1694, -3.03604, 0.56", "-8.93359, -77.9714, -1.45097, 0.56", "-8.95087, -79.396, -0.964944, 0.56", "-8.94755, -83.4036, 0.395546, 0.56", "-8.91655, -86.4698, 1.35692, 0.56", "-8.8795, -89.2289, 2.38618, 0.56", "-8.95948, -91.9855, 3.51848, 0.28", "-9.11484, -93.7612, 4.30096, 0.83", "-9.29573, -95.2942, 4.96111, 0.83", "-10.0143, -99.7561, 6.75457, 0.28", "-10.3861, -101.691, 7.40945, 0.83", "-11.8001, -108.543, 9.41327, 0.28", "-12.0624, -109.803, 9.73395, 1.11", "-12.757, -113.629, 10.6367, 0.28", "-13.0713, -115.918, 11.1165, 1.39", "-13.4139, -123.141, 12.425, 0.28", "-13.3827, -123.927, 12.5629, 1.39", "-13.0976, -125.484, 12.847, 1.94", "-11.7944, -130.051, 13.8262, 0.28", "-11.3045, -131.282, 14.1277, 1.11", "-9.50868, -134.804, 15.0656, 0.28", "-9.19598, -135.298, 15.2085, 0.83", "-5.65655, -140.55, 16.4914, 0.28", "-4.86269, -141.646, 16.714, 0.28", "-4.11589, -142.594, 16.7754, 0.56", "-3.21218, -143.717, 16.6747, 0.28", "-2.67046, -144.334, 16.4262, 0.83", "-0.462661, -146.428, 14.9904, 0.28", "-0.284354, -146.56, 14.8273, 0.56", "0.894009, -147.372, 13.6967, 0.28", "1.71596, -147.918, 12.9132, 0.56", "4.73453, -149.778, 10.3682, 0.28", "4.92964, -149.893, 10.2055, 0.56", "6.4414, -150.815, 8.9829, 0.28", "7.47054, -151.438, 8.15306, 0.83", "10.7838, -153.388, 5.52053, 0.28", "14.784, -155.668, 2.35881, 0.28", "15.9957, -156.313, 1.30193, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-22.8713, 55.3273, -5.43674, 0.56", "-27.3406, 63.6279, -7.35557, 0.56", "-32.9714, 71.4458, -8.11097, 0.56", "-36.9451, 80.0841, -9.34752, 0.56", "-41.6004, 88.1953, -11.6774, 0.56", "-47.7791, 95.5108, -13.2665, 0.56", "-53.8832, 102.982, -14.2103, 0.56", "-59.5164, 110.755, -15.3593, 0.56", "-65.2856, 118.515, -15.4176, 0.56", "-69.3671, 127.138, -14.4445, 0.56", "-74.5262, 135.242, -15.2275, 0.56", "-80.5576, 142.802, -14.6918, 0.56", "-86.7837, 150.206, -15.3945, 0.56", "-92.814, 157.532, -17.4355, 0.56", "-98.8775, 164.437, -20.661, 0.56", "-105.307, 171.407, -22.8592, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-22.8713, 55.3273, -5.43674, 0.28", "-25.7645, 64.2847, -7.08743, 0.56", "-29.3867, 73.1051, -7.90924, 0.56", "-32.8825, 82.003, -7.67459, 0.56", "-36.9567, 90.628, -8.66093, 0.56", "-40.8757, 99.0911, -10.9584, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-15.6665, 38.9449, -6.03657, 0.56", "-18.0437, 40.1739, -8.6234, 0.56", "-19.3619, 40.9348, -10.0328, 0.56", "-20.6671, 41.683, -11.3428, 0.28", "-22.9276, 42.9265, -13.4252, 0.83", "-27.8149, 45.5944, -17.9104, 0.56", "-29.1152, 46.3572, -19.1026, 0.56", "-30.1237, 46.9752, -19.9993, 0.56", "-31.0497, 47.5889, -20.8331, 0.56", "-31.9582, 48.3503, -21.719, 0.56", "-34.6591, 51.0873, -24.2745, 0.56", "-35.7035, 52.1858, -25.0773, 0.56", "-36.5144, 53.0414, -25.7583, 0.56", "-37.2901, 53.928, -26.4834, 0.83", "-39.6493, 57.0532, -28.9561, 0.28", "-40.5669, 58.4478, -29.9971, 0.56", "-45.4238, 63.7146, -36.7554, 0.56", "-49.5767, 69.7244, -43.2925, 0.56", "-53.2759, 76.1526, -49.6588, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-15.6665, 38.9449, -6.03657, 0.56", "-15.631, 40.3602, -7.00313, 0.56", "-15.7021, 42.3351, -8.38772, 0.56", "-15.8334, 44.1325, -9.66671, 0.56", "-16.0721, 46.153, -11.0817, 0.56", "-16.6663, 50.4659, -14.0341, 0.56", "-17.1302, 53.4358, -15.9854, 0.56", "-17.4971, 55.3944, -17.298, 0.56", "-17.9057, 57.5609, -18.7244, 0.56", "-18.1353, 58.6864, -19.4024, 0.56", "-18.4743, 60.2777, -20.2942, 0.56", "-18.9572, 62.1336, -21.3609, 0.56", "-19.6744, 65.0298, -22.8926, 0.56", "-19.8719, 65.9796, -23.4261, 0.28", "-20.056, 66.9226, -23.9687, 0.56", "-20.5702, 69.9447, -25.8249, 0.56", "-21.0961, 72.7723, -27.6992, 0.56", "-23.4745, 81.0132, -32.0687, 0.56", "-24.0205, 88.8457, -37.7014, 0.56", "-23.9287, 96.8314, -43.1172, 0.56", "-25.5804, 103.899, -49.5927, 0.56", "-25.3558, 112.239, -54.3744, 0.56", "-24.9349, 120.872, -58.5285, 0.56", "-23.948, 128.783, -63.9763, 0.56", "-21.5573, 137.239, -67.8566, 0.56", "-18.5204, 145.412, -71.9506, 0.56", "-14.418, 152.853, -76.6209, 0.56", "-9.32425, 159.205, -82.0388, 0.56", "-4.52532, 166.721, -85.8303, 0.56", "0.159847, 174.422, -89.3427, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-18.8177, -89.2542, -14.7721, 0.83", "-19.9742, -93.1154, -13.0031, 0.83", "-20.7624, -95.3705, -12.5121, 0.83", "-21.312, -96.9738, -12.3039, 0.83", "-21.7482, -98.2175, -12.2234, 0.83", "-22.188, -99.4793, -12.1999, 0.83", "-23.0671, -101.982, -12.2092, 0.83", "-25.2128, -107.678, -12.5538, 0.83", "-26.4476, -111.006, -12.7721, 0.83", "-28.2557, -116.015, -13.0918, 0.83", "-29.2052, -118.734, -13.2922, 1.11", "-30.1321, -121.601, -13.5299, 0.83", "-31.1074, -124.839, -13.8109, 0.83", "-32.2464, -128.954, -14.1165, 0.83", "-32.7215, -130.776, -14.2399, 0.83", "-33.982, -136.208, -14.5129, 0.83", "-34.2084, -137.269, -14.5584, 0.83", "-35.36, -141.832, -14.8425, 0.83", "-35.7431, -143.297, -14.974, 0.83", "-37.36, -148.91, -15.635, 0.83", "-39.5526, -156.116, -16.5317, 0.83", "-40.3144, -158.529, -16.8337, 0.83", "-42.5256, -165.283, -17.7571, 0.83", "-43.4434, -167.969, -18.1781, 0.83", "-44.6244, -171.067, -18.7159, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-18.8177, -89.2542, -14.7721, 0.83", "-20.5571, -90.1194, -16.1649, 0.83", "-21.9438, -90.9136, -17.136, 0.83", "-25.6913, -92.9587, -19.9559, 0.56", "-26.7259, -93.4909, -20.7549, 0.56", "-28.0049, -94.1057, -21.7901, 0.56", "-29.881, -95.0075, -23.3086, 0.56", "-31.8109, -95.9381, -25.0539, 0.56", "-33.6179, -96.836, -26.7376, 0.56", "-35.821, -97.8477, -28.4672, 0.56", "-37.2715, -98.4602, -29.7334, 0.83", "-44.8733, -101.63, -35.3085, 0.83", "-53.5736, -103.31, -39.91, 0.83", "-61.6176, -104.191, -45.7781, 0.83", "-69.4704, -105.778, -51.7401, 0.83", "-77.0642, -107.428, -58.0105, 0.83", "-84.7846, -107.023, -64.3519, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-44.6244, -171.067, -18.7159, 0.56", "-45.3785, -174.892, -19.4174, 0.56", "-45.9411, -177.746, -19.9407, 0.56", "-46.148, -178.795, -20.1332, 0.56", "-46.8324, -182.267, -20.7698, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-44.6244, -171.067, -18.7159, 0.56", "-44.3642, -172.229, -16.893, 0.56", "-44.1565, -173.43, -15.1434, 0.56", "-43.5436, -177.443, -9.51581, 0.56", "-43.3754, -179.021, -7.44004, 0.28", "-43.3279, -179.388, -6.95207, 0.83", "-43.0565, -181.495, -4.16265, 0.28", "-42.9699, -182.271, -3.03318, 0.56", "-42.8787, -183.551, -1.04738, 0.28", "-42.8673, -184.447, 0.229576, 0.56", "-42.917, -186.23, 2.60374, 0.28", "-42.8931, -186.616, 3.06652, 0.56", "-42.6106, -188.384, 5.0061, 0.28", "-42.1243, -190.262, 6.90987, 1.11", "-41.8547, -191.198, 7.74952, 1.11", "-41.1985, -193.442, 9.58004, 0.56", "-39.5753, -199.404, 14.0918, 0.28", "-39.2216, -200.601, 14.9621, 1.39", "-38.3054, -203.461, 16.8814, 0.28", "-37.7397, -205.112, 17.9331, 1.11", "-36.7131, -208.163, 19.9261, 0.28", "-36.3347, -209.365, 20.7688, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-46.8324, -182.267, -20.7698, 0.56", "-47.9947, -185.255, -20.83, 0.56", "-48.8334, -187.609, -20.9601, 0.56", "-49.6956, -190.106, -21.1386, 0.56", "-51.1696, -194.376, -21.4437, 0.56", "-51.6354, -195.725, -21.5401, 0.56", "-53.0705, -199.882, -21.8372, 0.56", "-53.4869, -201.238, -21.9571, 0.56", "-53.792, -202.309, -22.0739, 0.56", "-55.5481, -211.647, -21.5239, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-46.8324, -182.267, -20.7698, 0.28", "-47.181, -184.615, -19.223, 0.28", "-47.37, -185.478, -18.5598, 0.56", "-47.7027, -187.008, -17.3679, 0.28", "-47.9157, -188.017, -16.5101, 0.28", "-48.2031, -189.379, -15.3526, 0.28", "-48.5818, -191.175, -13.8272, 0.56", "-49.1438, -193.175, -12.1808, 0.28", "-49.5066, -194.473, -11.0555, 0.28", "-49.8006, -195.682, -10.0118, 0.56", "-49.8031, -203.891, -4.98006, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_25", "dend_20", "dend_8", "dend_5", "dend_0", "dend_32", "dend_29", "dend_27", "dend_26", "dend_24", "dend_21", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_40", "dend_33", "dend_31", "dend_30", "dend_23", "dend_22", "dend_11", "dend_10", "dend_3", "dend_2", "dend_37", "dend_34", "dend_13", "dend_12", "dend_39", "dend_38", "dend_36", "dend_35", "dend_15", "dend_14", "dend_17", "dend_16", "dend_19", "dend_18" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_25", "dend_20", "dend_8", "dend_5", "dend_0", "dend_32", "dend_29", "dend_27", "dend_26", "dend_24", "dend_21", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_40", "dend_33", "dend_31", "dend_30", "dend_23", "dend_22", "dend_11", "dend_10", "dend_3", "dend_2", "dend_37", "dend_34", "dend_13", "dend_12", "dend_39", "dend_38", "dend_36", "dend_35", "dend_15", "dend_14", "dend_17", "dend_16", "dend_19", "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L23_BTC_e02ed2d076_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.450000697082259)
    connect dend_25(0), soma_0(0.450000697082259)
    connect dend_20(0), soma_0(0.450000697082259)
    connect dend_8(0), soma_0(0.450000697082259)
    connect dend_5(0), soma_0(0.450000697082259)
    connect dend_0(0), soma_0(0.450000697082259)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.414762, -11.6197, -1.62187, 2.64004 ) }
    soma_0 { pt3dadd( 0.384603, -10.5465, -1.46411, 4.71198 ) }
    soma_0 { pt3dadd( 0.354444, -9.47334, -1.30636, 5.74801 ) }
    soma_0 { pt3dadd( 0.324285, -8.40018, -1.1486, 7.28344 ) }
    soma_0 { pt3dadd( 0.294125, -7.32702, -0.990848, 9.16307 ) }
    soma_0 { pt3dadd( 0.263966, -6.25385, -0.833093, 10.6182 ) }
    soma_0 { pt3dadd( 0.233807, -5.18069, -0.675338, 11.6398 ) }
    soma_0 { pt3dadd( 0.203648, -4.10753, -0.517583, 12.315 ) }
    soma_0 { pt3dadd( 0.173489, -3.03436, -0.359828, 12.8408 ) }
    soma_0 { pt3dadd( 0.14333, -1.9612, -0.202073, 12.9638 ) }
    soma_0 { pt3dadd( 0.113171, -0.888035, -0.0443183, 12.9997 ) }
    soma_0 { pt3dadd( 0.083012, 0.185129, 0.113437, 12.9186 ) }
    soma_0 { pt3dadd( 0.052853, 1.25829, 0.271192, 12.6149 ) }
    soma_0 { pt3dadd( 0.0226939, 2.33146, 0.428947, 11.9889 ) }
    soma_0 { pt3dadd( -0.00746517, 3.40462, 0.586702, 11.363 ) }
    soma_0 { pt3dadd( -0.0376242, 4.47778, 0.744457, 10.7371 ) }
    soma_0 { pt3dadd( -0.0677833, 5.55095, 0.902211, 10.104 ) }
    soma_0 { pt3dadd( -0.0979424, 6.62411, 1.05997, 9.17803 ) }
    soma_0 { pt3dadd( -0.128101, 7.69727, 1.21772, 8.07035 ) }
    soma_0 { pt3dadd( -0.15826, 8.77044, 1.37548, 6.54703 ) }
    soma_0 { pt3dadd( -0.18842, 9.8436, 1.53323, 5.23645 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.765137, 9.68391, 2.31562, 3.33 ) }
    dend_28 { pt3dadd( -0.825135, 11.8594, 2.31562, 3.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 2.87486, 4.06941, -11.9444, 1.11 ) }
    dend_25 { pt3dadd( 4.13674, 6.16614, -12.4741, 1.11 ) }
    dend_25 { pt3dadd( 5.708, 8.47934, -13.2616, 0.83 ) }
    dend_25 { pt3dadd( 7.4345, 10.4772, -14.4177, 1.11 ) }
    dend_25 { pt3dadd( 9.03623, 11.9258, -15.8775, 0.56 ) }
    dend_25 { pt3dadd( 9.72901, 12.5523, -16.509, 0.56 ) }
    dend_25 { pt3dadd( 10.4187, 13.1761, -17.1376, 0.83 ) }
    dend_25 { pt3dadd( 11.4424, 13.9502, -18.1416, 0.83 ) }
    dend_25 { pt3dadd( 13.54, 15.2076, -20.4815, 0.56 ) }
    dend_25 { pt3dadd( 16.2419, 16.445, -23.7494, 0.28 ) }
    dend_25 { pt3dadd( 22.0217, 21.7911, -29.6592, 0.28 ) }
    dend_25 { pt3dadd( 28.5522, 25.4912, -36.1541, 0.28 ) }
    dend_25 { pt3dadd( 35.0595, 29.3162, -42.5917, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 36/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.09513, -2.68509, -11.7344, 1.11 ) }
    dend_20 { pt3dadd( -3.17989, -5.15834, -13.5453, 0.83 ) }
    dend_20 { pt3dadd( -4.35463, -7.83676, -15.5065, 0.83 ) }
    dend_20 { pt3dadd( -5.27315, -9.93102, -17.04, 0.83 ) }
    dend_20 { pt3dadd( -6.55321, -12.8495, -19.177, 1.39 ) }
    dend_20 { pt3dadd( -11.0996, -20.5973, -22.7572, 1.39 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 42/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.62514, -11.3111, 1.00562, 2.78 ) }
    dend_8 { pt3dadd( -2.05514, -12.7931, -1.52438, 2.22 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 0.604862, -11.0071, 2.12562, 1.39 ) }
    dend_5 { pt3dadd( 1.29696, -12.4328, 2.96861, 1.39 ) }
    dend_5 { pt3dadd( 3.86558, -18.5537, 5.43145, 1.39 ) }
    dend_5 { pt3dadd( 5.27143, -21.9393, 6.44557, 1.39 ) }
    dend_5 { pt3dadd( 6.23703, -24.0791, 6.94658, 1.39 ) }
    dend_5 { pt3dadd( 7.8639, -27.5538, 7.69335, 1.11 ) }
    dend_5 { pt3dadd( 9.28444, -30.5878, 8.34541, 1.39 ) }
    dend_5 { pt3dadd( 11.9571, -36.4148, 9.35533, 1.11 ) }
    dend_5 { pt3dadd( 13.3952, -39.5604, 9.60731, 1.11 ) }
    dend_5 { pt3dadd( 15.5363, -44.2212, 9.63993, 1.11 ) }
    dend_5 { pt3dadd( 16.7448, -46.6862, 9.56707, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 55/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.80514, 6.71991, 5.69562, 1.39 ) }
    dend_0 { pt3dadd( -5.40067, 7.90799, 5.61491, 1.39 ) }
    dend_0 { pt3dadd( -7.80592, 12.7065, 5.28894, 1.39 ) }
    dend_0 { pt3dadd( -9.35534, 15.7976, 5.07895, 1.39 ) }
    dend_0 { pt3dadd( -10.2683, 17.6187, 4.95523, 1.11 ) }
    dend_0 { pt3dadd( -12.4429, 21.9571, 4.66051, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 61/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.18842, 9.8436, 1.53323, 0.83 ) }
    axon_0 { pt3dadd( -0.609797, 24.8377, 1.53323, 0.83 ) }
    axon_0 { pt3dadd( -1.03117, 39.8318, 1.53323, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 64/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -0.825135, 11.8594, 2.31562, 1.39 ) }
    dend_32 { pt3dadd( -1.76426, 13.5311, 2.80415, 1.39 ) }
    dend_32 { pt3dadd( -3.67593, 16.9338, 3.79857, 1.39 ) }
    dend_32 { pt3dadd( -5.83781, 20.782, 4.92316, 1.39 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 68/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.825135, 11.8594, 2.31562, 1.39 ) }
    dend_29 { pt3dadd( 0.318916, 14.5215, 5.69298, 1.39 ) }
    dend_29 { pt3dadd( 1.2646, 16.8891, 8.94313, 1.11 ) }
    dend_29 { pt3dadd( 1.81663, 18.2711, 10.8404, 1.11 ) }
    dend_29 { pt3dadd( 2.47982, 19.9315, 13.1196, 1.39 ) }
    dend_29 { pt3dadd( 3.42845, 22.3065, 16.3799, 1.11 ) }
    dend_29 { pt3dadd( 4.03331, 23.8208, 18.4587, 0.83 ) }
    dend_29 { pt3dadd( 4.5173, 25.3204, 21.0803, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 35.0595, 29.3162, -42.5917, 0.28 ) }
    dend_27 { pt3dadd( 41.2339, 34.2091, -48.5373, 0.28 ) }
    dend_27 { pt3dadd( 47.9143, 40.361, -52.203, 0.28 ) }
    dend_27 { pt3dadd( 53.4244, 47.5654, -55.6856, 0.28 ) }
    dend_27 { pt3dadd( 59.4168, 55.0566, -57.0677, 0.28 ) }
    dend_27 { pt3dadd( 66.1704, 61.6908, -59.4388, 0.28 ) }
    dend_27 { pt3dadd( 73.6008, 67.6648, -61.729, 0.28 ) }
    dend_27 { pt3dadd( 81.1296, 72.9257, -65.2858, 0.28 ) }
    dend_27 { pt3dadd( 89.696, 76.7759, -68.478, 0.28 ) }
    dend_27 { pt3dadd( 97.9084, 80.7527, -72.3553, 0.28 ) }
    dend_27 { pt3dadd( 106.034, 83.2657, -77.5498, 0.28 ) }
    dend_27 { pt3dadd( 114.037, 87.6446, -81.3844, 0.28 ) }
    dend_27 { pt3dadd( 121.981, 92.5055, -84.6578, 0.28 ) }
    dend_27 { pt3dadd( 129.599, 98.0203, -87.5321, 0.28 ) }
    dend_27 { pt3dadd( 136.829, 102.732, -92.3426, 0.28 ) }
    dend_27 { pt3dadd( 143.821, 106.852, -98.0259, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 92/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 35.0595, 29.3162, -42.5917, 0.28 ) }
    dend_26 { pt3dadd( 41.3048, 34.1791, -48.4904, 0.28 ) }
    dend_26 { pt3dadd( 46.4255, 39.4656, -55.0335, 0.28 ) }
    dend_26 { pt3dadd( 51.5578, 44.6257, -61.6785, 0.28 ) }
    dend_26 { pt3dadd( 56.0137, 50.1489, -68.4861, 0.28 ) }
    dend_26 { pt3dadd( 59.1788, 54.7737, -76.6276, 0.28 ) }
    dend_26 { pt3dadd( 62.347, 59.4889, -84.71, 0.28 ) }
    dend_26 { pt3dadd( 64.5657, 63.3908, -93.5536, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_26 { pt3dadd( 64.7783, 68.0586, -102.261, 0.28 ) }
    dend_26 { pt3dadd( 64.7353, 74.7198, -109.391, 0.28 ) }
    dend_26 { pt3dadd( 65.5992, 81.0272, -116.819, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 3/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -11.0996, -20.5973, -22.7572, 0.83 ) }
    dend_24 { pt3dadd( -14.7878, -28.2109, -27.4655, 0.83 ) }
    dend_24 { pt3dadd( -18.208, -36.611, -30.6463, 0.83 ) }
    dend_24 { pt3dadd( -21.5251, -44.3734, -35.3615, 0.83 ) }
    dend_24 { pt3dadd( -24.9587, -51.4734, -41.0496, 0.83 ) }
    dend_24 { pt3dadd( -26.8068, -58.113, -47.9587, 0.83 ) }
    dend_24 { pt3dadd( -28.2896, -63.6003, -55.9861, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 10/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -11.0996, -20.5973, -22.7572, 0.83 ) }
    dend_21 { pt3dadd( -15.0192, -28.1508, -27.3852, 0.83 ) }
    dend_21 { pt3dadd( -17.9052, -36.3751, -31.4746, 0.83 ) }
    dend_21 { pt3dadd( -22.2244, -43.7996, -35.9765, 0.83 ) }
    dend_21 { pt3dadd( -25.4992, -50.6421, -42.0918, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 15/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.05514, -12.7931, -1.52438, 1.94 ) }
    dend_9 { pt3dadd( -3.13345, -22.8523, 2.62212, 1.94 ) }
    dend_9 { pt3dadd( -3.77841, -28.869, 5.10223, 1.94 ) }
    dend_9 { pt3dadd( -4.22297, -33.0162, 6.81172, 1.94 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 19/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 16.7448, -46.6862, 9.56707, 0.83 ) }
    dend_7 { pt3dadd( 17.6221, -47.995, 12.2777, 0.83 ) }
    dend_7 { pt3dadd( 19.5514, -50.3366, 16.9824, 0.83 ) }
    dend_7 { pt3dadd( 20.4264, -51.3417, 19.1642, 0.83 ) }
    dend_7 { pt3dadd( 21.8745, -53.205, 23.5343, 0.83 ) }
    dend_7 { pt3dadd( 22.5225, -54.1346, 25.7698, 0.83 ) }
    dend_7 { pt3dadd( 22.983, -54.8137, 27.4417, 0.28 ) }
    dend_7 { pt3dadd( 23.7657, -55.8665, 30.0467, 1.39 ) }
    dend_7 { pt3dadd( 25.3042, -58.0495, 35.1039, 1.11 ) }
    dend_7 { pt3dadd( 27.4669, -61.3507, 42.6177, 0.56 ) }
    dend_7 { pt3dadd( 28.3499, -62.8328, 45.994, 2.5 ) }
    dend_7 { pt3dadd( 28.8967, -63.8635, 48.2365, 2.5 ) }
    dend_7 { pt3dadd( 29.5531, -65.2965, 51.2493, 0.28 ) }
    dend_7 { pt3dadd( 29.9504, -66.2713, 53.2317, 1.11 ) }
    dend_7 { pt3dadd( 30.1943, -66.8283, 54.2184, 1.11 ) }
    dend_7 { pt3dadd( 31.7692, -70.2374, 59.8124, 0.28 ) }
    dend_7 { pt3dadd( 31.9169, -70.5587, 60.3241, 0.56 ) }
    dend_7 { pt3dadd( 32.6034, -72.1055, 62.7698, 0.28 ) }
    dend_7 { pt3dadd( 33.5148, -74.1195, 66.06, 3.33 ) }
    dend_7 { pt3dadd( 34.5725, -76.1393, 69.2381, 0.28 ) }
    dend_7 { pt3dadd( 34.7121, -76.3525, 69.5297, 0.56 ) }
    dend_7 { pt3dadd( 36.8621, -79.2356, 72.8496, 0.28 ) }
    dend_7 { pt3dadd( 37.0456, -79.4707, 73.0968, 0.83 ) }
    dend_7 { pt3dadd( 38.7185, -81.5007, 75.0368, 0.28 ) }
    dend_7 { pt3dadd( 39.7408, -82.6558, 76.0656, 1.39 ) }
    dend_7 { pt3dadd( 45.603, -88.8775, 81.5001, 0.28 ) }
    dend_7 { pt3dadd( 46.878, -90.1739, 82.6068, 2.5 ) }
    dend_7 { pt3dadd( 49.3746, -92.5643, 84.5502, 0.28 ) }
    dend_7 { pt3dadd( 49.8816, -93.0317, 84.8999, 0.83 ) }
    dend_7 { pt3dadd( 52.682, -95.4516, 86.4887, 0.28 ) }
    dend_7 { pt3dadd( 53.4157, -96.0179, 86.8239, 1.11 ) }
    dend_7 { pt3dadd( 56.3029, -97.8814, 87.7857, 0.28 ) }
    dend_7 { pt3dadd( 57.4386, -98.579, 88.134, 1.11 ) }
    dend_7 { pt3dadd( 59.8531, -99.9461, 88.7342, 0.28 ) }
    dend_7 { pt3dadd( 61.2091, -100.715, 89.0407, 1.39 ) }
    dend_7 { pt3dadd( 67.0816, -104.042, 90.0351, 0.28 ) }
    dend_7 { pt3dadd( 67.6105, -104.339, 90.1188, 1.39 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 56/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 16.7448, -46.6862, 9.56707, 0.83 ) }
    dend_6 { pt3dadd( 18.5836, -51.249, 11.2484, 0.83 ) }
    dend_6 { pt3dadd( 19.7859, -54.4006, 12.4127, 0.83 ) }
    dend_6 { pt3dadd( 20.4863, -56.25, 13.0685, 0.83 ) }
    dend_6 { pt3dadd( 21.3529, -58.455, 13.808, 0.83 ) }
    dend_6 { pt3dadd( 22.3554, -61.0113, 14.6093, 0.83 ) }
    dend_6 { pt3dadd( 23.757, -64.1991, 15.5634, 0.83 ) }
    dend_6 { pt3dadd( 25.9657, -68.4599, 17.0068, 0.83 ) }
    dend_6 { pt3dadd( 26.724, -69.831, 17.4393, 1.11 ) }
    dend_6 { pt3dadd( 27.6683, -71.5467, 17.9484, 0.83 ) }
    dend_6 { pt3dadd( 28.5783, -73.1475, 18.3928, 1.11 ) }
    dend_6 { pt3dadd( 32.1249, -78.9736, 20.0642, 0.83 ) }
    dend_6 { pt3dadd( 33.3691, -80.7806, 20.663, 0.28 ) }
    dend_6 { pt3dadd( 33.5292, -80.9853, 20.7389, 0.83 ) }
    dend_6 { pt3dadd( 34.2164, -81.8444, 21.0653, 0.28 ) }
    dend_6 { pt3dadd( 36.9522, -85.2351, 22.403, 0.83 ) }
    dend_6 { pt3dadd( 38.8621, -87.5985, 23.3273, 0.56 ) }
    dend_6 { pt3dadd( 39.8329, -88.9241, 23.8431, 0.83 ) }
    dend_6 { pt3dadd( 40.6108, -90.0722, 24.2725, 0.56 ) }
    dend_6 { pt3dadd( 42.3063, -92.7587, 25.249, 1.11 ) }
    dend_6 { pt3dadd( 43.3519, -94.5647, 25.9244, 0.56 ) }
    dend_6 { pt3dadd( 43.937, -95.706, 26.3325, 0.83 ) }
    dend_6 { pt3dadd( 45.0402, -98.2042, 27.1819, 0.28 ) }
    dend_6 { pt3dadd( 45.2517, -98.7339, 27.3576, 0.83 ) }
    dend_6 { pt3dadd( 46.7493, -102.658, 28.6356, 1.94 ) }
    dend_6 { pt3dadd( 47.4491, -104.466, 29.2218, 1.11 ) }
    dend_6 { pt3dadd( 48.3165, -106.617, 29.8698, 0.56 ) }
    dend_6 { pt3dadd( 49.1583, -108.499, 30.4701, 0.83 ) }
    dend_6 { pt3dadd( 50.0623, -110.37, 31.0643, 0.56 ) }
    dend_6 { pt3dadd( 51.9524, -114.006, 32.2391, 1.39 ) }
    dend_6 { pt3dadd( 52.9583, -115.885, 32.8159, 0.56 ) }
    dend_6 { pt3dadd( 53.6085, -117.036, 33.164, 0.83 ) }
    dend_6 { pt3dadd( 55.5309, -120.305, 34.2677, 0.28 ) }
    dend_6 { pt3dadd( 55.7941, -120.747, 34.4349, 0.83 ) }
    dend_6 { pt3dadd( 57.3084, -123.286, 35.4443, 2.22 ) }
    dend_6 { pt3dadd( 61.5692, -130.386, 38.4601, 0.28 ) }
    dend_6 { pt3dadd( 62.9621, -132.832, 39.5009, 1.39 ) }
    dend_6 { pt3dadd( 64.1825, -135.154, 40.5112, 0.56 ) }
    dend_6 { pt3dadd( 65.2334, -137.347, 41.458, 0.28 ) }
    dend_6 { pt3dadd( 65.6793, -138.356, 41.9153, 0.83 ) }
    dend_6 { pt3dadd( 66.5693, -140.593, 42.9919, 0.28 ) }
    dend_6 { pt3dadd( 68.0641, -144.712, 45.0324, 1.39 ) }
    dend_6 { pt3dadd( 69.2133, -148.152, 46.5627, 0.28 ) }
    dend_6 { pt3dadd( 69.3724, -148.684, 46.7824, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 69.8706, -150.573, 47.513, 0.28 ) }
    dend_6 { pt3dadd( 70.0212, -151.268, 47.7507, 0.83 ) }
    dend_6 { pt3dadd( 70.3677, -153.337, 48.3242, 0.28 ) }
    dend_6 { pt3dadd( 70.5725, -154.863, 48.688, 1.94 ) }
    dend_6 { pt3dadd( 70.8837, -158.163, 49.3087, 0.28 ) }
    dend_6 { pt3dadd( 70.9594, -159.488, 49.5326, 0.83 ) }
    dend_6 { pt3dadd( 71.2362, -162.038, 49.9925, 0.28 ) }
    dend_6 { pt3dadd( 71.4149, -163.188, 50.2145, 0.83 ) }
    dend_6 { pt3dadd( 71.6703, -164.739, 50.5088, 0.56 ) }
    dend_6 { pt3dadd( 72.3655, -168.438, 51.2004, 0.28 ) }
    dend_6 { pt3dadd( 72.5855, -169.367, 51.3595, 1.67 ) }
    dend_6 { pt3dadd( 74.1391, -174.806, 52.6006, 0.28 ) }
    dend_6 { pt3dadd( 74.4504, -175.662, 52.8726, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 13/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -12.4429, 21.9571, 4.66051, 0.83 ) }
    dend_4 { pt3dadd( -13.0272, 22.8339, 6.03005, 0.83 ) }
    dend_4 { pt3dadd( -13.8857, 24.0811, 8.12632, 0.83 ) }
    dend_4 { pt3dadd( -15.6495, 27.4495, 13.5482, 0.83 ) }
    dend_4 { pt3dadd( -15.8594, 27.9601, 14.4175, 0.83 ) }
    dend_4 { pt3dadd( -16.4409, 29.5329, 17.0872, 0.83 ) }
    dend_4 { pt3dadd( -17.2503, 31.9356, 21.2148, 0.83 ) }
    dend_4 { pt3dadd( -17.7635, 33.4281, 23.9539, 0.83 ) }
    dend_4 { pt3dadd( -18.373, 35.3498, 27.6106, 0.83 ) }
    dend_4 { pt3dadd( -19.3432, 38.3809, 33.1496, 0.56 ) }
    dend_4 { pt3dadd( -19.4919, 38.9587, 34.1017, 0.83 ) }
    dend_4 { pt3dadd( -19.815, 40.6794, 36.5007, 0.83 ) }
    dend_4 { pt3dadd( -20.2781, 42.7026, 39.0288, 1.11 ) }
    dend_4 { pt3dadd( -21.0167, 44.8679, 41.4521, 0.28 ) }
    dend_4 { pt3dadd( -21.5243, 45.8077, 42.3897, 1.11 ) }
    dend_4 { pt3dadd( -23.0496, 47.7771, 44.1045, 0.56 ) }
    dend_4 { pt3dadd( -24.636, 49.2281, 45.4419, 0.28 ) }
    dend_4 { pt3dadd( -27.7728, 50.9382, 47.4714, 0.56 ) }
    dend_4 { pt3dadd( -28.6895, 51.2669, 47.9901, 0.56 ) }
    dend_4 { pt3dadd( -31.9624, 52.1356, 49.7162, 2.22 ) }
    dend_4 { pt3dadd( -35.8505, 52.8974, 51.9433, 0.28 ) }
    dend_4 { pt3dadd( -38.4975, 53.2384, 53.452, 0.83 ) }
    dend_4 { pt3dadd( -43.2321, 53.6659, 56.1406, 0.28 ) }
    dend_4 { pt3dadd( -44.2631, 53.7503, 56.6936, 0.56 ) }
    dend_4 { pt3dadd( -45.5065, 53.8055, 57.3634, 0.83 ) }
    dend_4 { pt3dadd( -48.5268, 53.82, 58.979, 0.83 ) }
    dend_4 { pt3dadd( -50.0108, 53.8211, 59.851, 1.39 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -12.4429, 21.9571, 4.66051, 0.83 ) }
    dend_1 { pt3dadd( -16.0024, 22.5928, 5.82573, 0.83 ) }
    dend_1 { pt3dadd( -18.4538, 22.9567, 6.51605, 0.56 ) }
    dend_1 { pt3dadd( -20.3764, 23.2045, 7.00944, 0.56 ) }
    dend_1 { pt3dadd( -23.5279, 23.7425, 7.93522, 0.56 ) }
    dend_1 { pt3dadd( -24.6097, 23.9386, 8.28352, 0.56 ) }
    dend_1 { pt3dadd( -27.7103, 24.6133, 9.30426, 0.56 ) }
    dend_1 { pt3dadd( -29.1926, 25.0234, 9.90822, 0.56 ) }
    dend_1 { pt3dadd( -29.6751, 25.1903, 10.1263, 0.56 ) }
    dend_1 { pt3dadd( -33.3415, 26.8847, 11.9082, 0.56 ) }
    dend_1 { pt3dadd( -35.5384, 28.128, 12.9806, 0.56 ) }
    dend_1 { pt3dadd( -38.2892, 29.8309, 14.4029, 0.56 ) }
    dend_1 { pt3dadd( -40.4758, 31.3632, 15.6459, 0.56 ) }
    dend_1 { pt3dadd( -43.2536, 33.4113, 17.2996, 0.83 ) }
    dend_1 { pt3dadd( -45.9765, 35.5218, 18.9064, 1.11 ) }
    dend_1 { pt3dadd( -46.9461, 36.3308, 19.4418, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.03117, 39.8318, 1.53323, 0.83 ) }
    axon_1 { pt3dadd( -1.45255, 54.8258, 1.53323, 0.83 ) }
    axon_1 { pt3dadd( -1.87393, 69.8199, 1.53323, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 59/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -5.83781, 20.782, 4.92316, 0.83 ) }
    dend_40 { pt3dadd( -6.25968, 21.7354, 6.20445, 0.83 ) }
    dend_40 { pt3dadd( -6.52685, 22.2988, 6.96273, 1.11 ) }
    dend_40 { pt3dadd( -7.36027, 24.2747, 10.1234, 0.56 ) }
    dend_40 { pt3dadd( -7.75782, 25.2553, 11.6201, 0.83 ) }
    dend_40 { pt3dadd( -8.06843, 26.106, 12.8389, 0.83 ) }
    dend_40 { pt3dadd( -8.5283, 27.4212, 14.6856, 0.83 ) }
    dend_40 { pt3dadd( -8.90712, 28.6062, 16.2936, 1.39 ) }
    dend_40 { pt3dadd( -9.99232, 32.3123, 21.0612, 0.83 ) }
    dend_40 { pt3dadd( -10.3122, 33.6686, 22.7716, 1.11 ) }
    dend_40 { pt3dadd( -11.6666, 40.6793, 31.2057, 0.28 ) }
    dend_40 { pt3dadd( -12.0703, 42.9361, 33.8654, 1.67 ) }
    dend_40 { pt3dadd( -12.5853, 45.9467, 37.3056, 0.28 ) }
    dend_40 { pt3dadd( -12.7276, 46.7421, 38.2031, 0.83 ) }
    dend_40 { pt3dadd( -13.2972, 50.234, 41.8316, 0.28 ) }
    dend_40 { pt3dadd( -13.6074, 52.2638, 43.8992, 0.28 ) }
    dend_40 { pt3dadd( -13.8119, 53.6608, 45.2378, 0.83 ) }
    dend_40 { pt3dadd( -13.9878, 54.6357, 46.2086, 0.28 ) }
    dend_40 { pt3dadd( -14.256, 55.4182, 47.2778, 0.56 ) }
    dend_40 { pt3dadd( -15.9919, 59.2844, 53.5076, 0.28 ) }
    dend_40 { pt3dadd( -16.4104, 60.1505, 55.2443, 0.83 ) }
    dend_40 { pt3dadd( -17.2439, 61.8282, 59.0812, 0.56 ) }
    dend_40 { pt3dadd( -17.4816, 62.4095, 60.4177, 1.39 ) }
    dend_40 { pt3dadd( -18.6389, 65.5236, 67.8155, 0.28 ) }
    dend_40 { pt3dadd( -18.7766, 65.9854, 68.8686, 1.39 ) }
    dend_40 { pt3dadd( -19.5696, 68.6494, 74.95, 0.28 ) }
    dend_40 { pt3dadd( -19.6876, 69.1772, 75.9767, 1.11 ) }
    dend_40 { pt3dadd( -20.1438, 71.5434, 79.867, 0.28 ) }
    dend_40 { pt3dadd( -20.1994, 71.8624, 80.314, 0.83 ) }
    dend_40 { pt3dadd( -21.37, 79.3784, 88.932, 0.28 ) }
    dend_40 { pt3dadd( -21.6183, 80.8691, 90.5174, 1.67 ) }
    dend_40 { pt3dadd( -22.3305, 84.6576, 94.051, 0.28 ) }
    dend_40 { pt3dadd( -22.4121, 85.099, 94.4595, 0.83 ) }
    dend_40 { pt3dadd( -22.6787, 86.2646, 95.4827, 0.28 ) }
    dend_40 { pt3dadd( -22.8434, 86.9056, 96.0259, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -5.83781, 20.782, 4.92316, 1.11 ) }
    dend_33 { pt3dadd( -8.6805, 25.1768, 2.87234, 1.11 ) }
    dend_33 { pt3dadd( -10.735, 28.3531, 1.39016, 1.11 ) }
    dend_33 { pt3dadd( -12.017, 30.3351, 0.465278, 1.11 ) }
    dend_33 { pt3dadd( -14.1265, 33.5964, -1.05657, 1.11 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 99/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 4.5173, 25.3204, 21.0803, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_31 { pt3dadd( 4.33043, 27.4757, 24.0949, 0.56 ) }
    dend_31 { pt3dadd( 4.61277, 29.5231, 27.3445, 0.83 ) }
    dend_31 { pt3dadd( 4.89341, 30.6177, 29.1923, 0.56 ) }
    dend_31 { pt3dadd( 5.64683, 32.7884, 32.7556, 1.11 ) }
    dend_31 { pt3dadd( 6.54543, 35.2312, 36.6476, 0.56 ) }
    dend_31 { pt3dadd( 7.14312, 36.815, 39.0799, 1.39 ) }
    dend_31 { pt3dadd( 8.56007, 39.8818, 43.5244, 0.28 ) }
    dend_31 { pt3dadd( 9.38299, 41.5186, 45.894, 1.67 ) }
    dend_31 { pt3dadd( 10.582, 43.7714, 49.1327, 0.28 ) }
    dend_31 { pt3dadd( 10.8119, 44.2985, 49.7767, 0.56 ) }
    dend_31 { pt3dadd( 11.2162, 45.5767, 50.9978, 0.28 ) }
    dend_31 { pt3dadd( 11.2951, 45.8857, 51.2608, 0.83 ) }
    dend_31 { pt3dadd( 11.6828, 47.7996, 52.74, 0.28 ) }
    dend_31 { pt3dadd( 12.0054, 49.334, 53.9, 1.67 ) }
    dend_31 { pt3dadd( 13.9104, 58.314, 60.5353, 0.28 ) }
    dend_31 { pt3dadd( 14.3674, 60.5049, 62.1908, 2.22 ) }
    dend_31 { pt3dadd( 15.1198, 64.4374, 65.143, 0.28 ) }
    dend_31 { pt3dadd( 15.2412, 65.122, 65.6545, 0.83 ) }
    dend_31 { pt3dadd( 15.7427, 68.215, 67.9201, 0.28 ) }
    dend_31 { pt3dadd( 15.8767, 69.372, 68.725, 0.56 ) }
    dend_31 { pt3dadd( 16.1581, 73.5975, 71.3949, 0.28 ) }
    dend_31 { pt3dadd( 16.1445, 74.9714, 72.2139, 1.11 ) }
    dend_31 { pt3dadd( 15.9717, 77.301, 73.4012, 0.28 ) }
    dend_31 { pt3dadd( 15.8773, 78.2611, 73.8469, 0.83 ) }
    dend_31 { pt3dadd( 15.489, 80.5171, 74.7302, 0.28 ) }
    dend_31 { pt3dadd( 14.914, 83.3802, 75.7303, 1.11 ) }
    dend_31 { pt3dadd( 13.3874, 89.8923, 77.6345, 0.28 ) }
    dend_31 { pt3dadd( 13.1271, 90.7964, 77.9069, 0.28 ) }
    dend_31 { pt3dadd( 12.7179, 92.0185, 78.281, 1.11 ) }
    dend_31 { pt3dadd( 11.1177, 96.4669, 79.6656, 0.28 ) }
    dend_31 { pt3dadd( 10.9798, 96.8042, 79.7704, 0.28 ) }
    dend_31 { pt3dadd( 10.0121, 98.8282, 80.3122, 1.39 ) }
    dend_31 { pt3dadd( 8.75453, 100.787, 80.9722, 0.28 ) }
    dend_31 { pt3dadd( 7.85296, 102.155, 81.5593, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 34/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 4.5173, 25.3204, 21.0803, 0.28 ) }
    dend_30 { pt3dadd( 5.40652, 28.5814, 23.089, 0.28 ) }
    dend_30 { pt3dadd( 5.68823, 29.4248, 23.6854, 0.83 ) }
    dend_30 { pt3dadd( 6.31004, 30.9013, 24.7831, 1.11 ) }
    dend_30 { pt3dadd( 7.02955, 32.4974, 25.9408, 0.83 ) }
    dend_30 { pt3dadd( 7.34493, 33.1621, 26.3947, 0.28 ) }
    dend_30 { pt3dadd( 7.57544, 33.6218, 26.7136, 0.28 ) }
    dend_30 { pt3dadd( 8.90283, 35.817, 28.2711, 1.39 ) }
    dend_30 { pt3dadd( 10.1635, 37.5496, 29.6424, 0.83 ) }
    dend_30 { pt3dadd( 11.595, 39.3992, 31.1054, 0.28 ) }
    dend_30 { pt3dadd( 12.1891, 40.1231, 31.6415, 0.83 ) }
    dend_30 { pt3dadd( 13.7111, 41.9387, 32.9018, 0.28 ) }
    dend_30 { pt3dadd( 15.3622, 43.7861, 34.0961, 1.39 ) }
    dend_30 { pt3dadd( 17.237, 45.7822, 35.2476, 0.28 ) }
    dend_30 { pt3dadd( 18.8369, 47.3922, 36.092, 0.28 ) }
    dend_30 { pt3dadd( 20.0326, 48.5114, 36.6159, 0.56 ) }
    dend_30 { pt3dadd( 21.029, 49.3264, 37.0673, 0.83 ) }
    dend_30 { pt3dadd( 23.1254, 50.8861, 37.955, 0.28 ) }
    dend_30 { pt3dadd( 23.4323, 51.0964, 38.0792, 0.83 ) }
    dend_30 { pt3dadd( 25.645, 52.4443, 39.2165, 0.28 ) }
    dend_30 { pt3dadd( 26.7354, 53.048, 39.8525, 0.83 ) }
    dend_30 { pt3dadd( 31.4337, 55.5046, 42.8394, 0.28 ) }
    dend_30 { pt3dadd( 32.03, 55.8054, 43.2343, 1.39 ) }
    dend_30 { pt3dadd( 34.4664, 57.0545, 44.9504, 1.94 ) }
    dend_30 { pt3dadd( 39.1205, 59.502, 48.3226, 0.28 ) }
    dend_30 { pt3dadd( 39.7434, 59.859, 48.8069, 0.56 ) }
    dend_30 { pt3dadd( 41.6943, 61.1489, 50.3267, 0.28 ) }
    dend_30 { pt3dadd( 42.3698, 61.6752, 50.8267, 1.11 ) }
    dend_30 { pt3dadd( 44.4216, 63.4287, 52.3896, 0.28 ) }
    dend_30 { pt3dadd( 45.164, 64.1661, 52.998, 1.39 ) }
    dend_30 { pt3dadd( 47.1317, 66.5132, 54.5695, 0.28 ) }
    dend_30 { pt3dadd( 49.0534, 69.3018, 56.2617, 0.56 ) }
    dend_30 { pt3dadd( 49.7377, 70.4958, 56.9022, 0.56 ) }
    dend_30 { pt3dadd( 50.6466, 72.3544, 57.7997, 0.83 ) }
    dend_30 { pt3dadd( 51.5168, 74.583, 58.6977, 0.28 ) }
    dend_30 { pt3dadd( 52.0988, 76.4154, 59.3575, 1.39 ) }
    dend_30 { pt3dadd( 52.93, 79.9761, 60.4154, 0.28 ) }
    dend_30 { pt3dadd( 53.0994, 81.2382, 60.7824, 0.56 ) }
    dend_30 { pt3dadd( 53.2508, 82.7613, 61.214, 0.28 ) }
    dend_30 { pt3dadd( 53.4635, 84.8453, 61.8377, 1.39 ) }
    dend_30 { pt3dadd( 53.6464, 86.4073, 62.3844, 0.28 ) }
    dend_30 { pt3dadd( 53.754, 87.1773, 62.7225, 0.56 ) }
    dend_30 { pt3dadd( 54.5722, 92.1506, 65.1917, 0.28 ) }
    dend_30 { pt3dadd( 54.7304, 92.9798, 65.6434, 1.39 ) }
    dend_30 { pt3dadd( 55.6121, 96.8375, 67.8753, 0.28 ) }
    dend_30 { pt3dadd( 56.0378, 98.5443, 68.8811, 0.83 ) }
    dend_30 { pt3dadd( 57.1513, 103.273, 71.5282, 0.28 ) }
    dend_30 { pt3dadd( 57.2695, 103.787, 71.798, 0.56 ) }
    dend_30 { pt3dadd( 57.6694, 106.321, 72.8575, 0.28 ) }
    dend_30 { pt3dadd( 57.7447, 107.107, 73.1222, 0.28 ) }
    dend_30 { pt3dadd( 57.8461, 108.96, 73.6391, 1.39 ) }
    dend_30 { pt3dadd( 58.0089, 115.234, 75.0872, 0.28 ) }
    dend_30 { pt3dadd( 57.9868, 117.127, 75.431, 1.11 ) }
    dend_30 { pt3dadd( 57.7201, 123.642, 76.4928, 0.28 ) }
    dend_30 { pt3dadd( 57.653, 124.481, 76.5992, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 89/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -25.4992, -50.6421, -42.0918, 0.28 ) }
    dend_23 { pt3dadd( -29.2491, -58.1544, -46.9299, 0.28 ) }
    dend_23 { pt3dadd( -32.3769, -66.4025, -50.7817, 0.28 ) }
    dend_23 { pt3dadd( -35.5612, -74.1637, -55.5897, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 93/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -25.4992, -50.6421, -42.0918, 0.28 ) }
    dend_22 { pt3dadd( -28.1203, -58.4764, -47.1041, 0.28 ) }
    dend_22 { pt3dadd( -29.7932, -66.293, -52.5356, 0.28 ) }
    dend_22 { pt3dadd( -29.5127, -74.0036, -58.3704, 0.28 ) }
    dend_22 { pt3dadd( -27.9063, -80.241, -65.7401, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 98/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -4.22297, -33.0162, 6.81172, 0.83 ) }
    dend_11 { pt3dadd( -5.0682, -35.6362, 5.8546, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_11 { pt3dadd( -5.41805, -37.4222, 5.23606, 1.11 ) }
    dend_11 { pt3dadd( -5.93601, -40.8985, 3.74421, 1.11 ) }
    dend_11 { pt3dadd( -6.33951, -43.9937, 2.3917, 1.11 ) }
    dend_11 { pt3dadd( -6.63014, -46.2231, 1.41751, 1.11 ) }
    dend_11 { pt3dadd( -7.40422, -52.1611, -1.1772, 1.11 ) }
    dend_11 { pt3dadd( -7.6295, -54.7681, -2.37017, 0.83 ) }
    dend_11 { pt3dadd( -7.78973, -59.41, -4.43833, 0.83 ) }
    dend_11 { pt3dadd( -7.67455, -62.3822, -5.63652, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 8/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -4.22297, -33.0162, 6.81172, 1.11 ) }
    dend_10 { pt3dadd( -4.26001, -34.7652, 9.45555, 1.11 ) }
    dend_10 { pt3dadd( -4.22201, -35.5549, 10.8353, 1.11 ) }
    dend_10 { pt3dadd( -4.20377, -37.0301, 13.4823, 1.11 ) }
    dend_10 { pt3dadd( -4.31493, -38.6435, 16.3484, 1.11 ) }
    dend_10 { pt3dadd( -4.65264, -42.0695, 22.4587, 1.11 ) }
    dend_10 { pt3dadd( -4.90419, -43.9941, 25.9417, 1.11 ) }
    dend_10 { pt3dadd( -5.19481, -45.6397, 29.0841, 0.83 ) }
    dend_10 { pt3dadd( -5.32573, -46.3998, 30.5769, 0.83 ) }
    dend_10 { pt3dadd( -5.51334, -48.0666, 33.8514, 0.83 ) }
    dend_10 { pt3dadd( -5.50988, -49.0307, 35.5758, 0.83 ) }
    dend_10 { pt3dadd( -5.43403, -51.3414, 39.3395, 0.56 ) }
    dend_10 { pt3dadd( -5.3007, -52.6026, 41.3344, 0.56 ) }
    dend_10 { pt3dadd( -5.1397, -53.3215, 42.4675, 0.28 ) }
    dend_10 { pt3dadd( -4.52912, -55.0068, 45.1844, 1.67 ) }
    dend_10 { pt3dadd( -3.04117, -58.4418, 51.1893, 0.28 ) }
    dend_10 { pt3dadd( -2.6398, -59.3272, 52.9752, 1.94 ) }
    dend_10 { pt3dadd( -2.34007, -59.95, 54.4068, 3.33 ) }
    dend_10 { pt3dadd( -1.88201, -60.9791, 57.1919, 0.83 ) }
    dend_10 { pt3dadd( -1.44332, -62.121, 60.5869, 0.28 ) }
    dend_10 { pt3dadd( -0.783493, -64.373, 67.3805, 2.22 ) }
    dend_10 { pt3dadd( -0.141694, -66.8316, 74.907, 0.28 ) }
    dend_10 { pt3dadd( 0.0474619, -67.6438, 77.4681, 1.94 ) }
    dend_10 { pt3dadd( 0.465022, -70.0172, 85.2483, 0.28 ) }
    dend_10 { pt3dadd( 0.503892, -70.3971, 86.5201, 1.94 ) }
    dend_10 { pt3dadd( 0.594339, -71.6269, 90.7474, 0.28 ) }
    dend_10 { pt3dadd( 0.611566, -71.8064, 91.3074, 0.56 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 35/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -46.9461, 36.3308, 19.4418, 0.28 ) }
    dend_3 { pt3dadd( -49.8188, 39.7804, 20.1543, 0.28 ) }
    dend_3 { pt3dadd( -51.9306, 42.2662, 20.8299, 0.56 ) }
    dend_3 { pt3dadd( -53.3401, 43.8761, 21.3028, 0.83 ) }
    dend_3 { pt3dadd( -55.1462, 45.4729, 22.0551, 1.67 ) }
    dend_3 { pt3dadd( -57.5484, 47.4233, 22.9132, 0.56 ) }
    dend_3 { pt3dadd( -58.8567, 48.4485, 23.3319, 0.56 ) }
    dend_3 { pt3dadd( -61.8338, 50.5905, 24.3698, 0.28 ) }
    dend_3 { pt3dadd( -62.7472, 51.2211, 24.689, 0.83 ) }
    dend_3 { pt3dadd( -73.5223, 58.5558, 28.3449, 0.28 ) }
    dend_3 { pt3dadd( -76.6913, 60.6958, 29.3488, 1.11 ) }
    dend_3 { pt3dadd( -79.1219, 62.2828, 29.9973, 0.56 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 47/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -46.9461, 36.3308, 19.4418, 0.28 ) }
    dend_2 { pt3dadd( -52.7592, 35.1394, 21.0223, 0.28 ) }
    dend_2 { pt3dadd( -54.5823, 34.7787, 21.5599, 0.56 ) }
    dend_2 { pt3dadd( -56.5978, 34.3783, 22.2982, 0.28 ) }
    dend_2 { pt3dadd( -57.6367, 34.1554, 22.7057, 0.56 ) }
    dend_2 { pt3dadd( -60.7718, 33.4375, 24.1832, 0.28 ) }
    dend_2 { pt3dadd( -62.9698, 32.975, 25.2976, 0.56 ) }
    dend_2 { pt3dadd( -63.6531, 32.8728, 25.7512, 0.28 ) }
    dend_2 { pt3dadd( -66.6009, 32.9377, 28.0285, 0.56 ) }
    dend_2 { pt3dadd( -67.5515, 33.1127, 28.8015, 0.56 ) }
    dend_2 { pt3dadd( -71.4522, 34.6735, 30.8131, 0.28 ) }
    dend_2 { pt3dadd( -72.8452, 35.4661, 31.1393, 0.56 ) }
    dend_2 { pt3dadd( -74.8006, 36.7421, 31.1726, 1.67 ) }
    dend_2 { pt3dadd( -80.5977, 40.7575, 30.574, 0.28 ) }
    dend_2 { pt3dadd( -82.3494, 42.0617, 30.2407, 1.39 ) }
    dend_2 { pt3dadd( -92.6711, 50.0856, 27.4987, 0.28 ) }
    dend_2 { pt3dadd( -93.5144, 50.7622, 27.1747, 0.83 ) }
    dend_2 { pt3dadd( -99.0024, 54.9967, 24.5973, 0.28 ) }
    dend_2 { pt3dadd( -99.721, 55.5157, 24.1687, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 66/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -14.1265, 33.5964, -1.05657, 0.56 ) }
    dend_37 { pt3dadd( -15.1828, 36.1982, -1.70251, 0.56 ) }
    dend_37 { pt3dadd( -15.6721, 37.4035, -2.00173, 0.83 ) }
    dend_37 { pt3dadd( -16.1988, 38.7007, -2.32379, 0.28 ) }
    dend_37 { pt3dadd( -16.6955, 39.9243, -2.62758, 0.56 ) }
    dend_37 { pt3dadd( -18.1817, 43.585, -3.5364, 0.56 ) }
    dend_37 { pt3dadd( -19.3654, 46.5007, -4.26027, 0.56 ) }
    dend_37 { pt3dadd( -22.8713, 55.3273, -5.43674, 0.56 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 74/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -14.1265, 33.5964, -1.05657, 0.83 ) }
    dend_34 { pt3dadd( -15.6665, 38.9449, -6.03657, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 76/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -7.67455, -62.3822, -5.63652, 0.83 ) }
    dend_13 { pt3dadd( -9.32414, -64.9818, -6.50288, 0.83 ) }
    dend_13 { pt3dadd( -11.3071, -69.2861, -7.95243, 0.83 ) }
    dend_13 { pt3dadd( -12.1925, -71.3519, -8.64639, 0.83 ) }
    dend_13 { pt3dadd( -13.1238, -73.5244, -9.37621, 0.83 ) }
    dend_13 { pt3dadd( -14.9612, -77.8111, -10.8162, 0.83 ) }
    dend_13 { pt3dadd( -16.4072, -81.1844, -11.9494, 0.83 ) }
    dend_13 { pt3dadd( -18.1253, -86.3432, -13.7075, 0.83 ) }
    dend_13 { pt3dadd( -18.8177, -89.2542, -14.7721, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -7.67455, -62.3822, -5.63652, 0.83 ) }
    dend_12 { pt3dadd( -8.4595, -69.0246, -4.09353, 0.83 ) }
    dend_12 { pt3dadd( -8.70498, -72.0289, -3.36697, 0.83 ) }
    dend_12 { pt3dadd( -8.75904, -73.1694, -3.03604, 0.56 ) }
    dend_12 { pt3dadd( -8.93359, -77.9714, -1.45097, 0.56 ) }
    dend_12 { pt3dadd( -8.95087, -79.396, -0.964944, 0.56 ) }
    dend_12 { pt3dadd( -8.94755, -83.4036, 0.395546, 0.56 ) }
    dend_12 { pt3dadd( -8.91655, -86.4698, 1.35692, 0.56 ) }
    dend_12 { pt3dadd( -8.8795, -89.2289, 2.38618, 0.56 ) }
    dend_12 { pt3dadd( -8.95948, -91.9855, 3.51848, 0.28 ) }
    dend_12 { pt3dadd( -9.11484, -93.7612, 4.30096, 0.83 ) }
    dend_12 { pt3dadd( -9.29573, -95.2942, 4.96111, 0.83 ) }
    dend_12 { pt3dadd( -10.0143, -99.7561, 6.75457, 0.28 ) }
    dend_12 { pt3dadd( -10.3861, -101.691, 7.40945, 0.83 ) }
    dend_12 { pt3dadd( -11.8001, -108.543, 9.41327, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -12.0624, -109.803, 9.73395, 1.11 ) }
    dend_12 { pt3dadd( -12.757, -113.629, 10.6367, 0.28 ) }
    dend_12 { pt3dadd( -13.0713, -115.918, 11.1165, 1.39 ) }
    dend_12 { pt3dadd( -13.4139, -123.141, 12.425, 0.28 ) }
    dend_12 { pt3dadd( -13.3827, -123.927, 12.5629, 1.39 ) }
    dend_12 { pt3dadd( -13.0976, -125.484, 12.847, 1.94 ) }
    dend_12 { pt3dadd( -11.7944, -130.051, 13.8262, 0.28 ) }
    dend_12 { pt3dadd( -11.3045, -131.282, 14.1277, 1.11 ) }
    dend_12 { pt3dadd( -9.50868, -134.804, 15.0656, 0.28 ) }
    dend_12 { pt3dadd( -9.19598, -135.298, 15.2085, 0.83 ) }
    dend_12 { pt3dadd( -5.65655, -140.55, 16.4914, 0.28 ) }
    dend_12 { pt3dadd( -4.86269, -141.646, 16.714, 0.28 ) }
    dend_12 { pt3dadd( -4.11589, -142.594, 16.7754, 0.56 ) }
    dend_12 { pt3dadd( -3.21218, -143.717, 16.6747, 0.28 ) }
    dend_12 { pt3dadd( -2.67046, -144.334, 16.4262, 0.83 ) }
    dend_12 { pt3dadd( -0.462661, -146.428, 14.9904, 0.28 ) }
    dend_12 { pt3dadd( -0.284354, -146.56, 14.8273, 0.56 ) }
    dend_12 { pt3dadd( 0.894009, -147.372, 13.6967, 0.28 ) }
    dend_12 { pt3dadd( 1.71596, -147.918, 12.9132, 0.56 ) }
    dend_12 { pt3dadd( 4.73453, -149.778, 10.3682, 0.28 ) }
    dend_12 { pt3dadd( 4.92964, -149.893, 10.2055, 0.56 ) }
    dend_12 { pt3dadd( 6.4414, -150.815, 8.9829, 0.28 ) }
    dend_12 { pt3dadd( 7.47054, -151.438, 8.15306, 0.83 ) }
    dend_12 { pt3dadd( 10.7838, -153.388, 5.52053, 0.28 ) }
    dend_12 { pt3dadd( 14.784, -155.668, 2.35881, 0.28 ) }
    dend_12 { pt3dadd( 15.9957, -156.313, 1.30193, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 26/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -22.8713, 55.3273, -5.43674, 0.56 ) }
    dend_39 { pt3dadd( -27.3406, 63.6279, -7.35557, 0.56 ) }
    dend_39 { pt3dadd( -32.9714, 71.4458, -8.11097, 0.56 ) }
    dend_39 { pt3dadd( -36.9451, 80.0841, -9.34752, 0.56 ) }
    dend_39 { pt3dadd( -41.6004, 88.1953, -11.6774, 0.56 ) }
    dend_39 { pt3dadd( -47.7791, 95.5108, -13.2665, 0.56 ) }
    dend_39 { pt3dadd( -53.8832, 102.982, -14.2103, 0.56 ) }
    dend_39 { pt3dadd( -59.5164, 110.755, -15.3593, 0.56 ) }
    dend_39 { pt3dadd( -65.2856, 118.515, -15.4176, 0.56 ) }
    dend_39 { pt3dadd( -69.3671, 127.138, -14.4445, 0.56 ) }
    dend_39 { pt3dadd( -74.5262, 135.242, -15.2275, 0.56 ) }
    dend_39 { pt3dadd( -80.5576, 142.802, -14.6918, 0.56 ) }
    dend_39 { pt3dadd( -86.7837, 150.206, -15.3945, 0.56 ) }
    dend_39 { pt3dadd( -92.814, 157.532, -17.4355, 0.56 ) }
    dend_39 { pt3dadd( -98.8775, 164.437, -20.661, 0.56 ) }
    dend_39 { pt3dadd( -105.307, 171.407, -22.8592, 0.56 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 42/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -22.8713, 55.3273, -5.43674, 0.28 ) }
    dend_38 { pt3dadd( -25.7645, 64.2847, -7.08743, 0.56 ) }
    dend_38 { pt3dadd( -29.3867, 73.1051, -7.90924, 0.56 ) }
    dend_38 { pt3dadd( -32.8825, 82.003, -7.67459, 0.56 ) }
    dend_38 { pt3dadd( -36.9567, 90.628, -8.66093, 0.56 ) }
    dend_38 { pt3dadd( -40.8757, 99.0911, -10.9584, 0.56 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 48/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -15.6665, 38.9449, -6.03657, 0.56 ) }
    dend_36 { pt3dadd( -18.0437, 40.1739, -8.6234, 0.56 ) }
    dend_36 { pt3dadd( -19.3619, 40.9348, -10.0328, 0.56 ) }
    dend_36 { pt3dadd( -20.6671, 41.683, -11.3428, 0.28 ) }
    dend_36 { pt3dadd( -22.9276, 42.9265, -13.4252, 0.83 ) }
    dend_36 { pt3dadd( -27.8149, 45.5944, -17.9104, 0.56 ) }
    dend_36 { pt3dadd( -29.1152, 46.3572, -19.1026, 0.56 ) }
    dend_36 { pt3dadd( -30.1237, 46.9752, -19.9993, 0.56 ) }
    dend_36 { pt3dadd( -31.0497, 47.5889, -20.8331, 0.56 ) }
    dend_36 { pt3dadd( -31.9582, 48.3503, -21.719, 0.56 ) }
    dend_36 { pt3dadd( -34.6591, 51.0873, -24.2745, 0.56 ) }
    dend_36 { pt3dadd( -35.7035, 52.1858, -25.0773, 0.56 ) }
    dend_36 { pt3dadd( -36.5144, 53.0414, -25.7583, 0.56 ) }
    dend_36 { pt3dadd( -37.2901, 53.928, -26.4834, 0.83 ) }
    dend_36 { pt3dadd( -39.6493, 57.0532, -28.9561, 0.28 ) }
    dend_36 { pt3dadd( -40.5669, 58.4478, -29.9971, 0.56 ) }
    dend_36 { pt3dadd( -45.4238, 63.7146, -36.7554, 0.56 ) }
    dend_36 { pt3dadd( -49.5767, 69.7244, -43.2925, 0.56 ) }
    dend_36 { pt3dadd( -53.2759, 76.1526, -49.6588, 0.56 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 67/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -15.6665, 38.9449, -6.03657, 0.56 ) }
    dend_35 { pt3dadd( -15.631, 40.3602, -7.00313, 0.56 ) }
    dend_35 { pt3dadd( -15.7021, 42.3351, -8.38772, 0.56 ) }
    dend_35 { pt3dadd( -15.8334, 44.1325, -9.66671, 0.56 ) }
    dend_35 { pt3dadd( -16.0721, 46.153, -11.0817, 0.56 ) }
    dend_35 { pt3dadd( -16.6663, 50.4659, -14.0341, 0.56 ) }
    dend_35 { pt3dadd( -17.1302, 53.4358, -15.9854, 0.56 ) }
    dend_35 { pt3dadd( -17.4971, 55.3944, -17.298, 0.56 ) }
    dend_35 { pt3dadd( -17.9057, 57.5609, -18.7244, 0.56 ) }
    dend_35 { pt3dadd( -18.1353, 58.6864, -19.4024, 0.56 ) }
    dend_35 { pt3dadd( -18.4743, 60.2777, -20.2942, 0.56 ) }
    dend_35 { pt3dadd( -18.9572, 62.1336, -21.3609, 0.56 ) }
    dend_35 { pt3dadd( -19.6744, 65.0298, -22.8926, 0.56 ) }
    dend_35 { pt3dadd( -19.8719, 65.9796, -23.4261, 0.28 ) }
    dend_35 { pt3dadd( -20.056, 66.9226, -23.9687, 0.56 ) }
    dend_35 { pt3dadd( -20.5702, 69.9447, -25.8249, 0.56 ) }
    dend_35 { pt3dadd( -21.0961, 72.7723, -27.6992, 0.56 ) }
    dend_35 { pt3dadd( -23.4745, 81.0132, -32.0687, 0.56 ) }
    dend_35 { pt3dadd( -24.0205, 88.8457, -37.7014, 0.56 ) }
    dend_35 { pt3dadd( -23.9287, 96.8314, -43.1172, 0.56 ) }
    dend_35 { pt3dadd( -25.5804, 103.899, -49.5927, 0.56 ) }
    dend_35 { pt3dadd( -25.3558, 112.239, -54.3744, 0.56 ) }
    dend_35 { pt3dadd( -24.9349, 120.872, -58.5285, 0.56 ) }
    dend_35 { pt3dadd( -23.948, 128.783, -63.9763, 0.56 ) }
    dend_35 { pt3dadd( -21.5573, 137.239, -67.8566, 0.56 ) }
    dend_35 { pt3dadd( -18.5204, 145.412, -71.9506, 0.56 ) }
    dend_35 { pt3dadd( -14.418, 152.853, -76.6209, 0.56 ) }
    dend_35 { pt3dadd( -9.32425, 159.205, -82.0388, 0.56 ) }
    dend_35 { pt3dadd( -4.52532, 166.721, -85.8303, 0.56 ) }
    dend_35 { pt3dadd( 0.159847, 174.422, -89.3427, 0.56 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 97/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -18.8177, -89.2542, -14.7721, 0.83 ) }
    dend_15 { pt3dadd( -19.9742, -93.1154, -13.0031, 0.83 ) }
    dend_15 { pt3dadd( -20.7624, -95.3705, -12.5121, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( -21.312, -96.9738, -12.3039, 0.83 ) }
    dend_15 { pt3dadd( -21.7482, -98.2175, -12.2234, 0.83 ) }
    dend_15 { pt3dadd( -22.188, -99.4793, -12.1999, 0.83 ) }
    dend_15 { pt3dadd( -23.0671, -101.982, -12.2092, 0.83 ) }
    dend_15 { pt3dadd( -25.2128, -107.678, -12.5538, 0.83 ) }
    dend_15 { pt3dadd( -26.4476, -111.006, -12.7721, 0.83 ) }
    dend_15 { pt3dadd( -28.2557, -116.015, -13.0918, 0.83 ) }
    dend_15 { pt3dadd( -29.2052, -118.734, -13.2922, 1.11 ) }
    dend_15 { pt3dadd( -30.1321, -121.601, -13.5299, 0.83 ) }
    dend_15 { pt3dadd( -31.1074, -124.839, -13.8109, 0.83 ) }
    dend_15 { pt3dadd( -32.2464, -128.954, -14.1165, 0.83 ) }
    dend_15 { pt3dadd( -32.7215, -130.776, -14.2399, 0.83 ) }
    dend_15 { pt3dadd( -33.982, -136.208, -14.5129, 0.83 ) }
    dend_15 { pt3dadd( -34.2084, -137.269, -14.5584, 0.83 ) }
    dend_15 { pt3dadd( -35.36, -141.832, -14.8425, 0.83 ) }
    dend_15 { pt3dadd( -35.7431, -143.297, -14.974, 0.83 ) }
    dend_15 { pt3dadd( -37.36, -148.91, -15.635, 0.83 ) }
    dend_15 { pt3dadd( -39.5526, -156.116, -16.5317, 0.83 ) }
    dend_15 { pt3dadd( -40.3144, -158.529, -16.8337, 0.83 ) }
    dend_15 { pt3dadd( -42.5256, -165.283, -17.7571, 0.83 ) }
    dend_15 { pt3dadd( -43.4434, -167.969, -18.1781, 0.83 ) }
    dend_15 { pt3dadd( -44.6244, -171.067, -18.7159, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 22/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -18.8177, -89.2542, -14.7721, 0.83 ) }
    dend_14 { pt3dadd( -20.5571, -90.1194, -16.1649, 0.83 ) }
    dend_14 { pt3dadd( -21.9438, -90.9136, -17.136, 0.83 ) }
    dend_14 { pt3dadd( -25.6913, -92.9587, -19.9559, 0.56 ) }
    dend_14 { pt3dadd( -26.7259, -93.4909, -20.7549, 0.56 ) }
    dend_14 { pt3dadd( -28.0049, -94.1057, -21.7901, 0.56 ) }
    dend_14 { pt3dadd( -29.881, -95.0075, -23.3086, 0.56 ) }
    dend_14 { pt3dadd( -31.8109, -95.9381, -25.0539, 0.56 ) }
    dend_14 { pt3dadd( -33.6179, -96.836, -26.7376, 0.56 ) }
    dend_14 { pt3dadd( -35.821, -97.8477, -28.4672, 0.56 ) }
    dend_14 { pt3dadd( -37.2715, -98.4602, -29.7334, 0.83 ) }
    dend_14 { pt3dadd( -44.8733, -101.63, -35.3085, 0.83 ) }
    dend_14 { pt3dadd( -53.5736, -103.31, -39.91, 0.83 ) }
    dend_14 { pt3dadd( -61.6176, -104.191, -45.7781, 0.83 ) }
    dend_14 { pt3dadd( -69.4704, -105.778, -51.7401, 0.83 ) }
    dend_14 { pt3dadd( -77.0642, -107.428, -58.0105, 0.83 ) }
    dend_14 { pt3dadd( -84.7846, -107.023, -64.3519, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 39/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -44.6244, -171.067, -18.7159, 0.56 ) }
    dend_17 { pt3dadd( -45.3785, -174.892, -19.4174, 0.56 ) }
    dend_17 { pt3dadd( -45.9411, -177.746, -19.9407, 0.56 ) }
    dend_17 { pt3dadd( -46.148, -178.795, -20.1332, 0.56 ) }
    dend_17 { pt3dadd( -46.8324, -182.267, -20.7698, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 44/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -44.6244, -171.067, -18.7159, 0.56 ) }
    dend_16 { pt3dadd( -44.3642, -172.229, -16.893, 0.56 ) }
    dend_16 { pt3dadd( -44.1565, -173.43, -15.1434, 0.56 ) }
    dend_16 { pt3dadd( -43.5436, -177.443, -9.51581, 0.56 ) }
    dend_16 { pt3dadd( -43.3754, -179.021, -7.44004, 0.28 ) }
    dend_16 { pt3dadd( -43.3279, -179.388, -6.95207, 0.83 ) }
    dend_16 { pt3dadd( -43.0565, -181.495, -4.16265, 0.28 ) }
    dend_16 { pt3dadd( -42.9699, -182.271, -3.03318, 0.56 ) }
    dend_16 { pt3dadd( -42.8787, -183.551, -1.04738, 0.28 ) }
    dend_16 { pt3dadd( -42.8673, -184.447, 0.229576, 0.56 ) }
    dend_16 { pt3dadd( -42.917, -186.23, 2.60374, 0.28 ) }
    dend_16 { pt3dadd( -42.8931, -186.616, 3.06652, 0.56 ) }
    dend_16 { pt3dadd( -42.6106, -188.384, 5.0061, 0.28 ) }
    dend_16 { pt3dadd( -42.1243, -190.262, 6.90987, 1.11 ) }
    dend_16 { pt3dadd( -41.8547, -191.198, 7.74952, 1.11 ) }
    dend_16 { pt3dadd( -41.1985, -193.442, 9.58004, 0.56 ) }
    dend_16 { pt3dadd( -39.5753, -199.404, 14.0918, 0.28 ) }
    dend_16 { pt3dadd( -39.2216, -200.601, 14.9621, 1.39 ) }
    dend_16 { pt3dadd( -38.3054, -203.461, 16.8814, 0.28 ) }
    dend_16 { pt3dadd( -37.7397, -205.112, 17.9331, 1.11 ) }
    dend_16 { pt3dadd( -36.7131, -208.163, 19.9261, 0.28 ) }
    dend_16 { pt3dadd( -36.3347, -209.365, 20.7688, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 66/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -46.8324, -182.267, -20.7698, 0.56 ) }
    dend_19 { pt3dadd( -47.9947, -185.255, -20.83, 0.56 ) }
    dend_19 { pt3dadd( -48.8334, -187.609, -20.9601, 0.56 ) }
    dend_19 { pt3dadd( -49.6956, -190.106, -21.1386, 0.56 ) }
    dend_19 { pt3dadd( -51.1696, -194.376, -21.4437, 0.56 ) }
    dend_19 { pt3dadd( -51.6354, -195.725, -21.5401, 0.56 ) }
    dend_19 { pt3dadd( -53.0705, -199.882, -21.8372, 0.56 ) }
    dend_19 { pt3dadd( -53.4869, -201.238, -21.9571, 0.56 ) }
    dend_19 { pt3dadd( -53.792, -202.309, -22.0739, 0.56 ) }
    dend_19 { pt3dadd( -55.5481, -211.647, -21.5239, 0.56 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 76/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -46.8324, -182.267, -20.7698, 0.28 ) }
    dend_18 { pt3dadd( -47.181, -184.615, -19.223, 0.28 ) }
    dend_18 { pt3dadd( -47.37, -185.478, -18.5598, 0.56 ) }
    dend_18 { pt3dadd( -47.7027, -187.008, -17.3679, 0.28 ) }
    dend_18 { pt3dadd( -47.9157, -188.017, -16.5101, 0.28 ) }
    dend_18 { pt3dadd( -48.2031, -189.379, -15.3526, 0.28 ) }
    dend_18 { pt3dadd( -48.5818, -191.175, -13.8272, 0.56 ) }
    dend_18 { pt3dadd( -49.1438, -193.175, -12.1808, 0.28 ) }
    dend_18 { pt3dadd( -49.5066, -194.473, -11.0555, 0.28 ) }
    dend_18 { pt3dadd( -49.8006, -195.682, -10.0118, 0.56 ) }
    dend_18 { pt3dadd( -49.8031, -203.891, -4.98006, 0.56 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_27 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_26 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_24 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_6 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_1 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_40 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_10 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_36 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_14 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_8 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_32 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_20 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_9 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_11 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_13 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_22 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_18 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_19 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 3
    dend_5 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 5
    dend_24 nseg = 3
    dend_7 nseg = 5
    dend_6 nseg = 7
    dend_4 nseg = 5
    dend_1 nseg = 3
    dend_40 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 7
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_2 nseg = 3
    dend_12 nseg = 5
    dend_39 nseg = 7
    dend_38 nseg = 3
    dend_36 nseg = 3
    dend_35 nseg = 9
    dend_15 nseg = 5
    dend_14 nseg = 5
    dend_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L23_BTC_e02ed2d076_0_0


