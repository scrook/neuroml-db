// Cell: bAC217_L4_BP_d04c4872bd_0_0
/*
{
  "id" : "bAC217_L4_BP_d04c4872bd_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.08452, 6.27464, 0.312461, 1.46623", "-2.79927, 5.64032, 0.287115, 2.64844", "-2.51401, 5.00599, 0.26177, 4.10361", "-2.22875, 4.37167, 0.236425, 4.91598", "-1.94349, 3.73735, 0.21108, 5.72835", "-1.65823, 3.10303, 0.185734, 6.53421", "-1.37297, 2.46871, 0.160389, 7.31212", "-1.08771, 1.83438, 0.135044, 8.08989", "-0.802456, 1.20006, 0.109699, 8.85679", "-0.517198, 0.56574, 0.0843534, 8.93483", "-0.23194, -0.0685822, 0.0590082, 8.92633", "0.0533189, -0.702904, 0.033663, 8.91784", "0.338577, -1.33723, 0.00831775, 8.90934", "0.623836, -1.97155, -0.0170275, 8.90084", "0.909094, -2.60587, -0.0423727, 8.82493", "1.19435, -3.24019, -0.067718, 7.82232", "1.47961, -3.87451, -0.0930632, 6.5965", "1.76487, -4.50884, -0.118408, 5.37067", "2.05013, -5.14316, -0.143754, 4.14485", "2.33539, -5.77748, -0.169099, 2.91903", "2.62064, -6.4118, -0.194444, 1.76337" ]
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.61629, -5.87753, -1.26548, 1.33", "2.57476, -10.0429, -2.03399, 1.33", "4.16389, -16.9491, -3.30816, 0.66", "5.39423, -22.2961, -4.29465, 0.66", "6.70528, -27.9938, -5.34586, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001318721313
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.62064, -6.4118, -0.194444, 0.33", "8.77276, -20.0921, -0.194444, 0.33", "14.9249, -33.7725, -0.194444, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.70528, -27.9938, -5.34586, 0.66", "7.79612, -42.5339, -1.61177, 0.66", "9.39739, -64.1307, 3.96382, 0.66", "11.3592, -90.4901, 10.9753, 0.66", "12.9614, -110.831, 16.4054, 0.66", "13.9054, -122.634, 19.5456, 0.66", "14.2039, -126.551, 20.5811, 0.66", "14.63, -131.864, 22.0227, 0.66", "14.9467, -136.834, 23.4127, 0.66", "15.3016, -142.571, 24.9127, 0.66", "15.4771, -145.677, 25.3396, 0.66", "15.6247, -149.562, 25.5272, 0.66", "15.844, -155.433, 25.1432, 0.66", "16.0573, -163.159, 24.279, 0.66", "16.2125, -166.523, 23.8693, 0.66", "17.0523, -182.32, 21.7937, 0.66", "17.3342, -186.048, 21.2373, 0.66", "18.3912, -197.564, 19.2228, 0.66", "18.8872, -202.425, 18.3282, 0.66", "19.9603, -211.349, 16.7876, 0.66", "20.6094, -216.456, 16.2349, 0.66", "21.288, -221.416, 16.1904, 0.66", "21.9586, -226.199, 16.3152, 0.66", "22.431, -230.814, 16.4598, 0.66", "22.8426, -235.707, 16.4299, 0.66", "23.2071, -243.274, 16.2947, 0.66", "23.4907, -247.869, 16.421, 0.66", "23.7635, -253.442, 16.6581, 0.66", "24.1056, -260.988, 16.9451, 0.66", "24.2627, -265.81, 16.9112, 0.66", "24.4937, -272.301, 16.582, 0.66", "24.8977, -278.413, 16.2042, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.70528, -27.9938, -5.34586, 0.66", "9.41428, -30.7025, -4.60306, 0.66", "15.6421, -36.9297, -2.89543, 0.33", "29.8977, -51.184, 1.0134, 0.33", "30.4356, -51.7218, 1.16089, 0.66", "36.1884, -57.474, 2.73828, 0.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.9249, -33.7725, -0.194444, 0.33", "21.077, -47.4528, -0.194444, 0.33", "27.2291, -61.1331, -0.194444, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "24.8977, -278.413, 16.2042, 0.66", "27.2206, -280.893, 17.2632, 0.66", "28.4771, -282.304, 18.0813, 0.66", "30.3467, -284.475, 20.0106, 0.66", "31.4953, -285.768, 21.3813, 0.66", "33.6395, -288.139, 24.1956, 0.66", "35.2861, -289.861, 26.3485, 0.66", "36.8387, -291.425, 28.5975, 0.66", "40.2051, -294.43, 33.4019, 0.66", "42.1368, -295.99, 36.1152, 0.66", "44.3815, -297.793, 39.3343, 0.33", "45.3025, -298.5, 40.5706, 0.33", "45.638, -298.721, 40.9766, 0.66", "47.7188, -299.877, 43.2293, 0.33", "48.2094, -300.092, 43.5555, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "24.8977, -278.413, 16.2042, 0.66", "25.5487, -282.133, 17.4176, 0.66", "26.3835, -286.939, 19.0104, 0.66", "28.1891, -296.551, 22.0492, 0.66", "28.9327, -300.741, 23.3284, 0.66", "29.9207, -305.839, 24.9205, 0.66", "30.8682, -311.023, 26.3915, 0.66", "31.3887, -313.94, 27.126, 0.66", "31.9596, -317.984, 27.9858, 0.66", "32.9691, -325.771, 29.3537, 0.66", "33.525, -330.202, 29.9299, 0.66", "34.1257, -335.402, 30.5263, 0.66", "34.4992, -339.814, 30.7666, 0.66", "34.6371, -342.208, 30.8759, 0.66", "34.9537, -350.259, 31.1359, 0.66", "35.089, -354.43, 31.1466, 0.66", "35.1737, -360.214, 31.1211, 0.66", "35.37, -364.839, 31.2727, 0.66", "35.4558, -366.892, 31.3175, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "35.4558, -366.892, 31.3175, 0.66", "36.0156, -370.18, 31.5821, 0.66", "36.8, -375.503, 32.597, 0.66", "37.5982, -381.178, 33.8713, 0.66", "38.0342, -384.901, 34.7549, 0.66", "38.5789, -390.053, 35.8734, 0.66", "39.3396, -399.179, 37.6102, 0.66", "39.675, -405.428, 38.7284, 0.66", "39.8435, -409.715, 39.5573, 0.66", "40.0312, -414.203, 40.3048, 0.66", "40.2717, -419.239, 41.0809, 0.66", "40.4658, -422.685, 41.5673, 0.66", "40.8224, -427.419, 42.0827, 0.66", "41.2368, -431.772, 42.51, 0.66", "42.2826, -442.0, 43.7384, 0.66", "42.7849, -446.061, 44.2762, 0.66", "43.9272, -456.263, 45.5765, 0.66", "44.3158, -460.382, 45.9715, 0.66", "44.5992, -464.357, 46.2264, 0.66", "44.7895, -467.938, 46.3225, 0.66", "45.007, -473.808, 46.428, 0.66", "45.1119, -478.833, 46.4829, 0.66", "45.1796, -488.506, 46.2793, 0.66", "45.3214, -493.39, 46.1625, 0.66", "45.4599, -497.19, 46.0861, 0.66", "45.7035, -502.3, 46.0049, 0.66", "46.6401, -521.531, 45.6518, 0.66", "47.0511, -528.598, 45.3849, 0.66", "48.1515, -547.16, 44.4234, 0.66", "48.5721, -554.177, 43.9696, 0.66", "49.0292, -561.078, 43.565, 0.66", "49.395, -565.877, 43.3046, 0.66", "49.9621, -572.444, 42.8975, 0.66", "50.462, -579.751, 42.5007, 0.66", "50.8756, -587.728, 41.804, 0.66", "51.08, -592.186, 41.4294, 0.66", "51.2473, -595.29, 41.2553, 0.66", "52.0093, -607.308, 41.2298, 0.66", "52.2457, -611.054, 41.2329, 0.66", "52.5052, -617.212, 40.9945, 0.66", "52.7565, -623.372, 40.6598, 0.66", "53.0405, -628.142, 40.425, 0.66", "53.9459, -639.802, 40.2787, 0.66", "55.2238, -653.177, 40.4054, 0.66", "56.1436, -662.282, 40.4359, 0.66", "56.5759, -666.862, 40.3703, 0.66", "58.1244, -683.629, 39.8131, 0.66", "58.886, -694.402, 39.0946, 0.66", "59.0961, -697.551, 38.8226, 0.66", "59.4333, -702.66, 38.2634, 0.66", "59.878, -710.156, 37.2266, 0.66", "59.9773, -713.4, 36.679, 0.66", "60.0272, -722.097, 34.8925, 0.66", "60.1518, -740.242, 30.8702, 0.66", "60.3414, -749.594, 29.0677, 0.66", "60.4818, -753.082, 28.5036, 0.33", "60.629, -755.408, 28.2021, 1.33", "61.2148, -760.913, 27.7703, 0.66", "62.2849, -767.538, 27.5846, 0.66", "63.1887, -772.235, 27.5723, 0.66", "64.2062, -776.984, 27.6895, 0.66", "65.1281, -780.868, 27.7458, 0.66", "69.0765, -796.815, 28.3697, 0.66", "69.6321, -799.063, 28.5171, 0.33", "70.3633, -802.276, 28.7345, 1.33", "71.0583, -805.467, 28.8843, 0.66", "71.5694, -807.975, 28.9996, 0.33", "72.912, -814.902, 29.3712, 0.66", "73.4113, -818.475, 29.9677, 0.66", "74.0113, -823.191, 31.0017, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "35.4558, -366.892, 31.3175, 0.66", "33.3772, -376.205, 29.4836, 0.66", "31.7373, -384.101, 27.8848, 0.66", "30.4778, -390.038, 27.1044, 0.33", "28.6198, -398.4, 26.312, 0.33", "28.283, -399.769, 26.2408, 0.66", "27.2079, -404.212, 26.1428, 0.33", "26.3974, -407.457, 26.2664, 0.66", "24.7879, -415.121, 26.4932, 0.33", "24.5364, -416.334, 26.5704, 0.66", "22.8348, -424.542, 27.0668, 0.33", "22.0481, -428.79, 27.5448, 0.33", "21.3124, -433.401, 28.2606, 0.66", "20.4776, -438.921, 29.3089, 0.33", "20.1343, -441.894, 29.8755, 0.33", "19.9929, -443.558, 30.3182, 0.66", "19.4156, -450.564, 33.3317, 0.33", "19.2751, -451.59, 33.8949, 0.66", "18.8925, -454.18, 35.5865, 0.33", "18.6616, -455.514, 36.4681, 0.33", "18.4455, -456.924, 37.2532, 0.66", "17.6853, -462.202, 39.5934, 0.33", "17.2526, -465.426, 40.4493, 0.33", "17.1416, -466.64, 40.7094, 0.66", "17.074, -468.985, 41.0671, 0.33", "17.0662, -470.225, 41.1768, 0.66", "17.0901, -471.799, 41.2298, 0.33", "17.1595, -473.423, 41.1765, 0.66", "17.2068, -475.81, 41.118, 0.33", "17.2006, -476.682, 41.1044, 0.66", "16.968, -483.919, 41.0829, 0.33", "16.9433, -484.383, 41.0786, 0.66", "16.8008, -486.053, 41.0461, 0.33", "16.7039, -486.925, 41.0215, 0.66", "16.3968, -489.305, 41.1928, 0.33", "16.2523, -490.396, 41.3501, 0.66", "16.0163, -492.346, 41.746, 0.33", "15.8604, -493.726, 42.053, 0.66", "15.7044, -495.305, 42.4629, 0.33", "14.9782, -502.656, 44.6376, 0.33", "14.7571, -504.803, 45.3864, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "74.0113, -823.191, 31.0017, 0.66", "74.5384, -827.827, 29.9935, 0.66", "75.0305, -830.213, 29.9826, 1.33", "75.4898, -832.258, 30.147, 0.66", "75.9913, -834.833, 30.3079, 0.66", "77.1537, -840.374, 30.9047, 0.33", "78.6726, -847.069, 31.7652, 0.66", "80.8159, -855.7, 33.3882, 0.66", "82.0035, -859.991, 34.3238, 0.66", "83.3834, -864.775, 35.2241, 0.33", "85.1057, -870.902, 36.1293, 0.33", "85.5276, -872.638, 36.2764, 0.66", "85.8451, -874.083, 36.1255, 0.33", "86.045, -875.339, 35.8149, 0.66", "87.1427, -882.675, 33.6728, 0.33", "87.634, -885.738, 32.7631, 0.66", "88.0325, -888.645, 31.8141, 0.33", "89.1232, -896.896, 29.5144, 0.33", "89.8458, -901.724, 28.3465, 0.66", "91.2773, -910.459, 26.5477, 0.33", "91.9911, -914.575, 25.912, 0.66", "92.7361, -918.634, 25.3741, 1.33", "94.5542, -927.891, 24.4986, 0.33", "95.4888, -932.468, 24.3598, 0.33", "95.8632, -934.267, 24.3507, 0.66", "96.7761, -938.799, 24.5155, 0.33", "97.9581, -944.879, 24.8621, 0.33", "98.4264, -947.097, 25.0501, 1.33", "99.7381, -953.469, 25.5986, 0.33", "100.11, -955.677, 25.8434, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "74.0113, -823.191, 31.0017, 0.66", "72.45, -824.793, 30.1301, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "100.11, -955.677, 25.8434, 0.66", "98.0772, -955.348, 26.7714, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "100.11, -955.677, 25.8434, 0.66", "100.407, -957.631, 25.6024, 0.66", "101.731, -966.333, 24.5294, 0.33", "102.152, -969.101, 24.1881, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "102.152, -969.101, 24.1881, 0.33", "109.673, -979.563, 29.5913, 0.33", "110.378, -980.583, 30.0423, 1.33", "112.347, -983.443, 31.1309, 0.33", "112.745, -984.039, 31.2793, 0.66", "114.623, -986.892, 31.6899, 0.33", "115.193, -987.758, 31.8145, 0.66", "115.586, -988.56, 31.5717, 0.33", "116.128, -989.561, 31.2043, 0.66", "118.103, -992.689, 29.6699, 0.33", "118.878, -993.822, 29.0116, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "102.152, -969.101, 24.1881, 0.33", "103.897, -986.183, 29.7194, 0.33", "104.849, -995.499, 32.7361, 0.33", "104.998, -996.963, 33.2102, 0.66", "105.98, -1006.58, 36.3238, 0.33", "106.111, -1007.86, 36.7388, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_11", "dend_8", "dend_8", "dend_8", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L4_BP_d04c4872bd_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_0(0), soma_0(0.4500001318721313)
    connect axon_0(0), soma_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.08452, 6.27464, 0.312461, 1.46623 ) }
    soma_0 { pt3dadd( -2.79927, 5.64032, 0.287115, 2.64844 ) }
    soma_0 { pt3dadd( -2.51401, 5.00599, 0.26177, 4.10361 ) }
    soma_0 { pt3dadd( -2.22875, 4.37167, 0.236425, 4.91598 ) }
    soma_0 { pt3dadd( -1.94349, 3.73735, 0.21108, 5.72835 ) }
    soma_0 { pt3dadd( -1.65823, 3.10303, 0.185734, 6.53421 ) }
    soma_0 { pt3dadd( -1.37297, 2.46871, 0.160389, 7.31212 ) }
    soma_0 { pt3dadd( -1.08771, 1.83438, 0.135044, 8.08989 ) }
    soma_0 { pt3dadd( -0.802456, 1.20006, 0.109699, 8.85679 ) }
    soma_0 { pt3dadd( -0.517198, 0.56574, 0.0843534, 8.93483 ) }
    soma_0 { pt3dadd( -0.23194, -0.0685822, 0.0590082, 8.92633 ) }
    soma_0 { pt3dadd( 0.0533189, -0.702904, 0.033663, 8.91784 ) }
    soma_0 { pt3dadd( 0.338577, -1.33723, 0.00831775, 8.90934 ) }
    soma_0 { pt3dadd( 0.623836, -1.97155, -0.0170275, 8.90084 ) }
    soma_0 { pt3dadd( 0.909094, -2.60587, -0.0423727, 8.82493 ) }
    soma_0 { pt3dadd( 1.19435, -3.24019, -0.067718, 7.82232 ) }
    soma_0 { pt3dadd( 1.47961, -3.87451, -0.0930632, 6.5965 ) }
    soma_0 { pt3dadd( 1.76487, -4.50884, -0.118408, 5.37067 ) }
    soma_0 { pt3dadd( 2.05013, -5.14316, -0.143754, 4.14485 ) }
    soma_0 { pt3dadd( 2.33539, -5.77748, -0.169099, 2.91903 ) }
    soma_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 1.76337 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 21/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.61629, -5.87753, -1.26548, 1.33 ) }
    dend_0 { pt3dadd( 2.57476, -10.0429, -2.03399, 1.33 ) }
    dend_0 { pt3dadd( 4.16389, -16.9491, -3.30816, 0.66 ) }
    dend_0 { pt3dadd( 5.39423, -22.2961, -4.29465, 0.66 ) }
    dend_0 { pt3dadd( 6.70528, -27.9938, -5.34586, 1.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 26/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 8.77276, -20.0921, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 29/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.70528, -27.9938, -5.34586, 0.66 ) }
    dend_2 { pt3dadd( 7.79612, -42.5339, -1.61177, 0.66 ) }
    dend_2 { pt3dadd( 9.39739, -64.1307, 3.96382, 0.66 ) }
    dend_2 { pt3dadd( 11.3592, -90.4901, 10.9753, 0.66 ) }
    dend_2 { pt3dadd( 12.9614, -110.831, 16.4054, 0.66 ) }
    dend_2 { pt3dadd( 13.9054, -122.634, 19.5456, 0.66 ) }
    dend_2 { pt3dadd( 14.2039, -126.551, 20.5811, 0.66 ) }
    dend_2 { pt3dadd( 14.63, -131.864, 22.0227, 0.66 ) }
    dend_2 { pt3dadd( 14.9467, -136.834, 23.4127, 0.66 ) }
    dend_2 { pt3dadd( 15.3016, -142.571, 24.9127, 0.66 ) }
    dend_2 { pt3dadd( 15.4771, -145.677, 25.3396, 0.66 ) }
    dend_2 { pt3dadd( 15.6247, -149.562, 25.5272, 0.66 ) }
    dend_2 { pt3dadd( 15.844, -155.433, 25.1432, 0.66 ) }
    dend_2 { pt3dadd( 16.0573, -163.159, 24.279, 0.66 ) }
    dend_2 { pt3dadd( 16.2125, -166.523, 23.8693, 0.66 ) }
    dend_2 { pt3dadd( 17.0523, -182.32, 21.7937, 0.66 ) }
    dend_2 { pt3dadd( 17.3342, -186.048, 21.2373, 0.66 ) }
    dend_2 { pt3dadd( 18.3912, -197.564, 19.2228, 0.66 ) }
    dend_2 { pt3dadd( 18.8872, -202.425, 18.3282, 0.66 ) }
    dend_2 { pt3dadd( 19.9603, -211.349, 16.7876, 0.66 ) }
    dend_2 { pt3dadd( 20.6094, -216.456, 16.2349, 0.66 ) }
    dend_2 { pt3dadd( 21.288, -221.416, 16.1904, 0.66 ) }
    dend_2 { pt3dadd( 21.9586, -226.199, 16.3152, 0.66 ) }
    dend_2 { pt3dadd( 22.431, -230.814, 16.4598, 0.66 ) }
    dend_2 { pt3dadd( 22.8426, -235.707, 16.4299, 0.66 ) }
    dend_2 { pt3dadd( 23.2071, -243.274, 16.2947, 0.66 ) }
    dend_2 { pt3dadd( 23.4907, -247.869, 16.421, 0.66 ) }
    dend_2 { pt3dadd( 23.7635, -253.442, 16.6581, 0.66 ) }
    dend_2 { pt3dadd( 24.1056, -260.988, 16.9451, 0.66 ) }
    dend_2 { pt3dadd( 24.2627, -265.81, 16.9112, 0.66 ) }
    dend_2 { pt3dadd( 24.4937, -272.301, 16.582, 0.66 ) }
    dend_2 { pt3dadd( 24.8977, -278.413, 16.2042, 0.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.70528, -27.9938, -5.34586, 0.66 ) }
    dend_1 { pt3dadd( 9.41428, -30.7025, -4.60306, 0.66 ) }
    dend_1 { pt3dadd( 15.6421, -36.9297, -2.89543, 0.33 ) }
    dend_1 { pt3dadd( 29.8977, -51.184, 1.0134, 0.33 ) }
    dend_1 { pt3dadd( 30.4356, -51.7218, 1.16089, 0.66 ) }
    dend_1 { pt3dadd( 36.1884, -57.474, 2.73828, 0.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 21.077, -47.4528, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 27.2291, -61.1331, -0.194444, 0.33 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 70/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 24.8977, -278.413, 16.2042, 0.66 ) }
    dend_12 { pt3dadd( 27.2206, -280.893, 17.2632, 0.66 ) }
    dend_12 { pt3dadd( 28.4771, -282.304, 18.0813, 0.66 ) }
    dend_12 { pt3dadd( 30.3467, -284.475, 20.0106, 0.66 ) }
    dend_12 { pt3dadd( 31.4953, -285.768, 21.3813, 0.66 ) }
    dend_12 { pt3dadd( 33.6395, -288.139, 24.1956, 0.66 ) }
    dend_12 { pt3dadd( 35.2861, -289.861, 26.3485, 0.66 ) }
    dend_12 { pt3dadd( 36.8387, -291.425, 28.5975, 0.66 ) }
    dend_12 { pt3dadd( 40.2051, -294.43, 33.4019, 0.66 ) }
    dend_12 { pt3dadd( 42.1368, -295.99, 36.1152, 0.66 ) }
    dend_12 { pt3dadd( 44.3815, -297.793, 39.3343, 0.33 ) }
    dend_12 { pt3dadd( 45.3025, -298.5, 40.5706, 0.33 ) }
    dend_12 { pt3dadd( 45.638, -298.721, 40.9766, 0.66 ) }
    dend_12 { pt3dadd( 47.7188, -299.877, 43.2293, 0.33 ) }
    dend_12 { pt3dadd( 48.2094, -300.092, 43.5555, 0.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 85/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 24.8977, -278.413, 16.2042, 0.66 ) }
    dend_3 { pt3dadd( 25.5487, -282.133, 17.4176, 0.66 ) }
    dend_3 { pt3dadd( 26.3835, -286.939, 19.0104, 0.66 ) }
    dend_3 { pt3dadd( 28.1891, -296.551, 22.0492, 0.66 ) }
    dend_3 { pt3dadd( 28.9327, -300.741, 23.3284, 0.66 ) }
    dend_3 { pt3dadd( 29.9207, -305.839, 24.9205, 0.66 ) }
    dend_3 { pt3dadd( 30.8682, -311.023, 26.3915, 0.66 ) }
    dend_3 { pt3dadd( 31.3887, -313.94, 27.126, 0.66 ) }
    dend_3 { pt3dadd( 31.9596, -317.984, 27.9858, 0.66 ) }
    dend_3 { pt3dadd( 32.9691, -325.771, 29.3537, 0.66 ) }
    dend_3 { pt3dadd( 33.525, -330.202, 29.9299, 0.66 ) }
    dend_3 { pt3dadd( 34.1257, -335.402, 30.5263, 0.66 ) }
    dend_3 { pt3dadd( 34.4992, -339.814, 30.7666, 0.66 ) }
    dend_3 { pt3dadd( 34.6371, -342.208, 30.8759, 0.66 ) }
    dend_3 { pt3dadd( 34.9537, -350.259, 31.1359, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_3 { pt3dadd( 35.089, -354.43, 31.1466, 0.66 ) }
    dend_3 { pt3dadd( 35.1737, -360.214, 31.1211, 0.66 ) }
    dend_3 { pt3dadd( 35.37, -364.839, 31.2727, 0.66 ) }
    dend_3 { pt3dadd( 35.4558, -366.892, 31.3175, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 4/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 35.4558, -366.892, 31.3175, 0.66 ) }
    dend_5 { pt3dadd( 36.0156, -370.18, 31.5821, 0.66 ) }
    dend_5 { pt3dadd( 36.8, -375.503, 32.597, 0.66 ) }
    dend_5 { pt3dadd( 37.5982, -381.178, 33.8713, 0.66 ) }
    dend_5 { pt3dadd( 38.0342, -384.901, 34.7549, 0.66 ) }
    dend_5 { pt3dadd( 38.5789, -390.053, 35.8734, 0.66 ) }
    dend_5 { pt3dadd( 39.3396, -399.179, 37.6102, 0.66 ) }
    dend_5 { pt3dadd( 39.675, -405.428, 38.7284, 0.66 ) }
    dend_5 { pt3dadd( 39.8435, -409.715, 39.5573, 0.66 ) }
    dend_5 { pt3dadd( 40.0312, -414.203, 40.3048, 0.66 ) }
    dend_5 { pt3dadd( 40.2717, -419.239, 41.0809, 0.66 ) }
    dend_5 { pt3dadd( 40.4658, -422.685, 41.5673, 0.66 ) }
    dend_5 { pt3dadd( 40.8224, -427.419, 42.0827, 0.66 ) }
    dend_5 { pt3dadd( 41.2368, -431.772, 42.51, 0.66 ) }
    dend_5 { pt3dadd( 42.2826, -442.0, 43.7384, 0.66 ) }
    dend_5 { pt3dadd( 42.7849, -446.061, 44.2762, 0.66 ) }
    dend_5 { pt3dadd( 43.9272, -456.263, 45.5765, 0.66 ) }
    dend_5 { pt3dadd( 44.3158, -460.382, 45.9715, 0.66 ) }
    dend_5 { pt3dadd( 44.5992, -464.357, 46.2264, 0.66 ) }
    dend_5 { pt3dadd( 44.7895, -467.938, 46.3225, 0.66 ) }
    dend_5 { pt3dadd( 45.007, -473.808, 46.428, 0.66 ) }
    dend_5 { pt3dadd( 45.1119, -478.833, 46.4829, 0.66 ) }
    dend_5 { pt3dadd( 45.1796, -488.506, 46.2793, 0.66 ) }
    dend_5 { pt3dadd( 45.3214, -493.39, 46.1625, 0.66 ) }
    dend_5 { pt3dadd( 45.4599, -497.19, 46.0861, 0.66 ) }
    dend_5 { pt3dadd( 45.7035, -502.3, 46.0049, 0.66 ) }
    dend_5 { pt3dadd( 46.6401, -521.531, 45.6518, 0.66 ) }
    dend_5 { pt3dadd( 47.0511, -528.598, 45.3849, 0.66 ) }
    dend_5 { pt3dadd( 48.1515, -547.16, 44.4234, 0.66 ) }
    dend_5 { pt3dadd( 48.5721, -554.177, 43.9696, 0.66 ) }
    dend_5 { pt3dadd( 49.0292, -561.078, 43.565, 0.66 ) }
    dend_5 { pt3dadd( 49.395, -565.877, 43.3046, 0.66 ) }
    dend_5 { pt3dadd( 49.9621, -572.444, 42.8975, 0.66 ) }
    dend_5 { pt3dadd( 50.462, -579.751, 42.5007, 0.66 ) }
    dend_5 { pt3dadd( 50.8756, -587.728, 41.804, 0.66 ) }
    dend_5 { pt3dadd( 51.08, -592.186, 41.4294, 0.66 ) }
    dend_5 { pt3dadd( 51.2473, -595.29, 41.2553, 0.66 ) }
    dend_5 { pt3dadd( 52.0093, -607.308, 41.2298, 0.66 ) }
    dend_5 { pt3dadd( 52.2457, -611.054, 41.2329, 0.66 ) }
    dend_5 { pt3dadd( 52.5052, -617.212, 40.9945, 0.66 ) }
    dend_5 { pt3dadd( 52.7565, -623.372, 40.6598, 0.66 ) }
    dend_5 { pt3dadd( 53.0405, -628.142, 40.425, 0.66 ) }
    dend_5 { pt3dadd( 53.9459, -639.802, 40.2787, 0.66 ) }
    dend_5 { pt3dadd( 55.2238, -653.177, 40.4054, 0.66 ) }
    dend_5 { pt3dadd( 56.1436, -662.282, 40.4359, 0.66 ) }
    dend_5 { pt3dadd( 56.5759, -666.862, 40.3703, 0.66 ) }
    dend_5 { pt3dadd( 58.1244, -683.629, 39.8131, 0.66 ) }
    dend_5 { pt3dadd( 58.886, -694.402, 39.0946, 0.66 ) }
    dend_5 { pt3dadd( 59.0961, -697.551, 38.8226, 0.66 ) }
    dend_5 { pt3dadd( 59.4333, -702.66, 38.2634, 0.66 ) }
    dend_5 { pt3dadd( 59.878, -710.156, 37.2266, 0.66 ) }
    dend_5 { pt3dadd( 59.9773, -713.4, 36.679, 0.66 ) }
    dend_5 { pt3dadd( 60.0272, -722.097, 34.8925, 0.66 ) }
    dend_5 { pt3dadd( 60.1518, -740.242, 30.8702, 0.66 ) }
    dend_5 { pt3dadd( 60.3414, -749.594, 29.0677, 0.66 ) }
    dend_5 { pt3dadd( 60.4818, -753.082, 28.5036, 0.33 ) }
    dend_5 { pt3dadd( 60.629, -755.408, 28.2021, 1.33 ) }
    dend_5 { pt3dadd( 61.2148, -760.913, 27.7703, 0.66 ) }
    dend_5 { pt3dadd( 62.2849, -767.538, 27.5846, 0.66 ) }
    dend_5 { pt3dadd( 63.1887, -772.235, 27.5723, 0.66 ) }
    dend_5 { pt3dadd( 64.2062, -776.984, 27.6895, 0.66 ) }
    dend_5 { pt3dadd( 65.1281, -780.868, 27.7458, 0.66 ) }
    dend_5 { pt3dadd( 69.0765, -796.815, 28.3697, 0.66 ) }
    dend_5 { pt3dadd( 69.6321, -799.063, 28.5171, 0.33 ) }
    dend_5 { pt3dadd( 70.3633, -802.276, 28.7345, 1.33 ) }
    dend_5 { pt3dadd( 71.0583, -805.467, 28.8843, 0.66 ) }
    dend_5 { pt3dadd( 71.5694, -807.975, 28.9996, 0.33 ) }
    dend_5 { pt3dadd( 72.912, -814.902, 29.3712, 0.66 ) }
    dend_5 { pt3dadd( 73.4113, -818.475, 29.9677, 0.66 ) }
    dend_5 { pt3dadd( 74.0113, -823.191, 31.0017, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 35.4558, -366.892, 31.3175, 0.66 ) }
    dend_4 { pt3dadd( 33.3772, -376.205, 29.4836, 0.66 ) }
    dend_4 { pt3dadd( 31.7373, -384.101, 27.8848, 0.66 ) }
    dend_4 { pt3dadd( 30.4778, -390.038, 27.1044, 0.33 ) }
    dend_4 { pt3dadd( 28.6198, -398.4, 26.312, 0.33 ) }
    dend_4 { pt3dadd( 28.283, -399.769, 26.2408, 0.66 ) }
    dend_4 { pt3dadd( 27.2079, -404.212, 26.1428, 0.33 ) }
    dend_4 { pt3dadd( 26.3974, -407.457, 26.2664, 0.66 ) }
    dend_4 { pt3dadd( 24.7879, -415.121, 26.4932, 0.33 ) }
    dend_4 { pt3dadd( 24.5364, -416.334, 26.5704, 0.66 ) }
    dend_4 { pt3dadd( 22.8348, -424.542, 27.0668, 0.33 ) }
    dend_4 { pt3dadd( 22.0481, -428.79, 27.5448, 0.33 ) }
    dend_4 { pt3dadd( 21.3124, -433.401, 28.2606, 0.66 ) }
    dend_4 { pt3dadd( 20.4776, -438.921, 29.3089, 0.33 ) }
    dend_4 { pt3dadd( 20.1343, -441.894, 29.8755, 0.33 ) }
    dend_4 { pt3dadd( 19.9929, -443.558, 30.3182, 0.66 ) }
    dend_4 { pt3dadd( 19.4156, -450.564, 33.3317, 0.33 ) }
    dend_4 { pt3dadd( 19.2751, -451.59, 33.8949, 0.66 ) }
    dend_4 { pt3dadd( 18.8925, -454.18, 35.5865, 0.33 ) }
    dend_4 { pt3dadd( 18.6616, -455.514, 36.4681, 0.33 ) }
    dend_4 { pt3dadd( 18.4455, -456.924, 37.2532, 0.66 ) }
    dend_4 { pt3dadd( 17.6853, -462.202, 39.5934, 0.33 ) }
    dend_4 { pt3dadd( 17.2526, -465.426, 40.4493, 0.33 ) }
    dend_4 { pt3dadd( 17.1416, -466.64, 40.7094, 0.66 ) }
    dend_4 { pt3dadd( 17.074, -468.985, 41.0671, 0.33 ) }
    dend_4 { pt3dadd( 17.0662, -470.225, 41.1768, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_4 { pt3dadd( 17.0901, -471.799, 41.2298, 0.33 ) }
    dend_4 { pt3dadd( 17.1595, -473.423, 41.1765, 0.66 ) }
    dend_4 { pt3dadd( 17.2068, -475.81, 41.118, 0.33 ) }
    dend_4 { pt3dadd( 17.2006, -476.682, 41.1044, 0.66 ) }
    dend_4 { pt3dadd( 16.968, -483.919, 41.0829, 0.33 ) }
    dend_4 { pt3dadd( 16.9433, -484.383, 41.0786, 0.66 ) }
    dend_4 { pt3dadd( 16.8008, -486.053, 41.0461, 0.33 ) }
    dend_4 { pt3dadd( 16.7039, -486.925, 41.0215, 0.66 ) }
    dend_4 { pt3dadd( 16.3968, -489.305, 41.1928, 0.33 ) }
    dend_4 { pt3dadd( 16.2523, -490.396, 41.3501, 0.66 ) }
    dend_4 { pt3dadd( 16.0163, -492.346, 41.746, 0.33 ) }
    dend_4 { pt3dadd( 15.8604, -493.726, 42.053, 0.66 ) }
    dend_4 { pt3dadd( 15.7044, -495.305, 42.4629, 0.33 ) }
    dend_4 { pt3dadd( 14.9782, -502.656, 44.6376, 0.33 ) }
    dend_4 { pt3dadd( 14.7571, -504.803, 45.3864, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 74.0113, -823.191, 31.0017, 0.66 ) }
    dend_7 { pt3dadd( 74.5384, -827.827, 29.9935, 0.66 ) }
    dend_7 { pt3dadd( 75.0305, -830.213, 29.9826, 1.33 ) }
    dend_7 { pt3dadd( 75.4898, -832.258, 30.147, 0.66 ) }
    dend_7 { pt3dadd( 75.9913, -834.833, 30.3079, 0.66 ) }
    dend_7 { pt3dadd( 77.1537, -840.374, 30.9047, 0.33 ) }
    dend_7 { pt3dadd( 78.6726, -847.069, 31.7652, 0.66 ) }
    dend_7 { pt3dadd( 80.8159, -855.7, 33.3882, 0.66 ) }
    dend_7 { pt3dadd( 82.0035, -859.991, 34.3238, 0.66 ) }
    dend_7 { pt3dadd( 83.3834, -864.775, 35.2241, 0.33 ) }
    dend_7 { pt3dadd( 85.1057, -870.902, 36.1293, 0.33 ) }
    dend_7 { pt3dadd( 85.5276, -872.638, 36.2764, 0.66 ) }
    dend_7 { pt3dadd( 85.8451, -874.083, 36.1255, 0.33 ) }
    dend_7 { pt3dadd( 86.045, -875.339, 35.8149, 0.66 ) }
    dend_7 { pt3dadd( 87.1427, -882.675, 33.6728, 0.33 ) }
    dend_7 { pt3dadd( 87.634, -885.738, 32.7631, 0.66 ) }
    dend_7 { pt3dadd( 88.0325, -888.645, 31.8141, 0.33 ) }
    dend_7 { pt3dadd( 89.1232, -896.896, 29.5144, 0.33 ) }
    dend_7 { pt3dadd( 89.8458, -901.724, 28.3465, 0.66 ) }
    dend_7 { pt3dadd( 91.2773, -910.459, 26.5477, 0.33 ) }
    dend_7 { pt3dadd( 91.9911, -914.575, 25.912, 0.66 ) }
    dend_7 { pt3dadd( 92.7361, -918.634, 25.3741, 1.33 ) }
    dend_7 { pt3dadd( 94.5542, -927.891, 24.4986, 0.33 ) }
    dend_7 { pt3dadd( 95.4888, -932.468, 24.3598, 0.33 ) }
    dend_7 { pt3dadd( 95.8632, -934.267, 24.3507, 0.66 ) }
    dend_7 { pt3dadd( 96.7761, -938.799, 24.5155, 0.33 ) }
    dend_7 { pt3dadd( 97.9581, -944.879, 24.8621, 0.33 ) }
    dend_7 { pt3dadd( 98.4264, -947.097, 25.0501, 1.33 ) }
    dend_7 { pt3dadd( 99.7381, -953.469, 25.5986, 0.33 ) }
    dend_7 { pt3dadd( 100.11, -955.677, 25.8434, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 74.0113, -823.191, 31.0017, 0.66 ) }
    dend_6 { pt3dadd( 72.45, -824.793, 30.1301, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 100.11, -955.677, 25.8434, 0.66 ) }
    dend_11 { pt3dadd( 98.0772, -955.348, 26.7714, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 49/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 100.11, -955.677, 25.8434, 0.66 ) }
    dend_8 { pt3dadd( 100.407, -957.631, 25.6024, 0.66 ) }
    dend_8 { pt3dadd( 101.731, -966.333, 24.5294, 0.33 ) }
    dend_8 { pt3dadd( 102.152, -969.101, 24.1881, 1.33 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 53/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 102.152, -969.101, 24.1881, 0.33 ) }
    dend_10 { pt3dadd( 109.673, -979.563, 29.5913, 0.33 ) }
    dend_10 { pt3dadd( 110.378, -980.583, 30.0423, 1.33 ) }
    dend_10 { pt3dadd( 112.347, -983.443, 31.1309, 0.33 ) }
    dend_10 { pt3dadd( 112.745, -984.039, 31.2793, 0.66 ) }
    dend_10 { pt3dadd( 114.623, -986.892, 31.6899, 0.33 ) }
    dend_10 { pt3dadd( 115.193, -987.758, 31.8145, 0.66 ) }
    dend_10 { pt3dadd( 115.586, -988.56, 31.5717, 0.33 ) }
    dend_10 { pt3dadd( 116.128, -989.561, 31.2043, 0.66 ) }
    dend_10 { pt3dadd( 118.103, -992.689, 29.6699, 0.33 ) }
    dend_10 { pt3dadd( 118.878, -993.822, 29.0116, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 64/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 102.152, -969.101, 24.1881, 0.33 ) }
    dend_9 { pt3dadd( 103.897, -986.183, 29.7194, 0.33 ) }
    dend_9 { pt3dadd( 104.849, -995.499, 32.7361, 0.33 ) }
    dend_9 { pt3dadd( 104.998, -996.963, 33.2102, 0.66 ) }
    dend_9 { pt3dadd( 105.98, -1006.58, 36.3238, 0.33 ) }
    dend_9 { pt3dadd( 106.111, -1007.86, 36.7388, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_0 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_2 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_3 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_5 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_7 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_6 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_8 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_2 nseg = 13
    dend_1 nseg = 3
    dend_12 nseg = 3
    dend_3 nseg = 5
    dend_5 nseg = 23
    dend_4 nseg = 7
    dend_7 nseg = 7
    dend_9 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L4_BP_d04c4872bd_0_0


