// Cell: cSTUT189_L5_NBC_adc0ce53be_0_0
/*
{
  "id" : "cSTUT189_L5_NBC_adc0ce53be_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.02864, -8.95645, 0.0, 3.19243", "0.862269, -8.03576, 0.0, 5.44292", "0.695902, -7.11508, 0.0, 7.15224", "0.529535, -6.1944, 0.0, 9.22848", "0.363167, -5.27371, 0.0, 10.1568", "0.1968, -4.35303, 0.0, 10.228", "0.0304325, -3.43235, 0.0, 10.4278", "-0.135935, -2.51166, 0.0, 10.5372", "-0.302302, -1.59098, 0.0, 10.6261", "-0.468669, -0.670298, 0.0, 10.9078", "-0.635037, 0.250385, 0.0, 11.3454", "-0.801404, 1.17107, 0.0, 11.7831", "-0.967771, 2.09175, 0.0, 12.1088", "-1.13414, 3.01243, 0.0, 11.7546", "-1.30051, 3.93312, 0.0, 11.2789", "-1.46687, 4.8538, 0.0, 10.5376", "-1.63324, 5.77448, 0.0, 9.41766", "-1.79961, 6.69517, 0.0, 7.67825", "-1.96598, 7.61585, 0.0, 5.72147", "-2.13234, 8.53653, 0.0, 3.87406", "-2.29871, 9.45721, 0.0, 2.1959" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.55142, -9.21367, -8.14, 3.62", "-1.55142, -9.21367, -8.14, 3.62", "-1.39251, -11.4736, -8.14, 3.62", "-1.25612, -13.4132, -8.14, 3.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.23859, 3.90583, -3.81, 1.24", "6.61614, 4.0499, -3.47128, 1.24", "10.3186, 4.35309, -2.47372, 1.24", "13.8131, 4.63924, -1.5322, 1.24", "17.2987, 4.92465, -0.593086, 1.24", "24.4617, 5.51122, 1.33685, 1.24", "29.9802, 5.96311, 2.82372, 1.24", "32.2935, 6.07972, 3.52715, 1.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.49141, 4.58984, -1.31, 0.68", "-8.69973, 4.51745, -1.43757, 0.68", "-10.8568, 4.48845, -1.61258, 0.68", "-14.3167, 4.76912, -1.97671, 0.68", "-16.7773, 5.19965, -2.25387, 0.68", "-18.2906, 5.60699, -2.41902, 0.68", "-20.8643, 6.403, -2.66027, 0.68", "-23.5059, 7.39283, -2.94115, 0.68", "-26.8939, 8.9409, -3.31125, 0.68", "-29.2393, 10.2457, -3.60922, 0.68", "-32.5928, 12.3241, -4.20735, 0.68", "-35.6002, 14.3503, -4.96549, 0.68", "-37.5872, 15.8204, -5.63581, 0.68", "-39.4385, 17.3474, -6.39834, 0.68", "-40.7439, 18.4886, -6.98493, 0.68", "-43.2184, 20.5992, -8.09397, 0.68", "-45.0363, 22.1587, -8.99552, 0.68", "-45.8751, 22.8921, -9.40147, 0.68", "-48.864, 25.4351, -10.8749, 0.68", "-51.235, 27.4244, -12.0997, 0.68", "-54.6045, 30.1375, -13.7259, 0.68", "-56.8997, 31.9378, -14.6682, 0.57", "-58.8628, 33.3933, -15.3971, 0.57", "-61.2186, 35.0576, -16.3201, 0.57", "-61.7499, 35.3848, -16.5943, 0.57" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.06859, -4.60616, -2.56, 1.47", "6.38025, -5.41363, -2.38226, 1.47", "9.79429, -7.51534, -1.91963, 1.47", "13.9328, -10.063, -1.35883, 1.47", "16.5495, -11.6739, -1.00424, 2.6", "16.9501, -11.9205, -0.94995, 2.26" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.29871, 9.45721, 0.0, 2.31666", "-4.96601, 24.2182, 0.0, 2.31666", "-7.63332, 38.9791, 0.0, 2.31666" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.25612, -13.4132, -8.14, 0.12", "-0.28041, -13.537, -8.14092, 0.12", "1.05656, -13.7802, -8.14192, 0.12", "1.75403, -13.9095, -8.14231, 0.45", "2.39264, -14.0192, -8.06392, 0.45", "4.82275, -14.4009, -7.78057, 0.45", "5.16658, -14.458, -7.74206, 1.36", "6.37037, -14.6713, -7.60472, 1.02", "8.01935, -14.9649, -7.39248, 0.45", "10.5438, -15.4105, -6.75825, 0.45", "12.7574, -15.7635, -5.81784, 0.45", "13.4008, -15.8403, -5.50496, 1.7", "14.5927, -15.9583, -4.47343, 0.68", "16.1896, -16.1169, -2.69391, 0.57", "18.6349, -16.368, 0.354844, 0.57", "20.3904, -16.5438, 2.78932, 0.57", "21.7479, -16.6669, 4.9558, 0.57", "26.6261, -17.0201, 13.5622, 0.45", "27.01, -17.0469, 14.3594, 0.45" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.25612, -13.4132, -8.14, 2.26", "-1.53307, -15.4905, -8.0884, 2.26", "-1.80579, -17.536, -8.03759, 2.26", "-2.2034, -20.5182, -7.96351, 2.94" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "32.2935, 6.07972, 3.52715, 0.45", "35.8819, 5.99407, 2.6291, 0.45", "37.5982, 5.98396, 2.77937, 0.45", "38.4935, 6.05248, 3.05441, 0.45", "39.6527, 6.26577, 3.56955, 0.45", "41.9173, 6.96289, 4.90124, 0.79", "44.5163, 8.00719, 6.61598, 0.79", "46.9732, 9.25053, 8.47883, 0.79", "48.7603, 10.3478, 9.94667, 0.79", "50.1445, 11.3971, 11.1667, 0.79", "52.1001, 13.3743, 13.1541, 0.79", "53.8254, 15.6419, 15.054, 0.79", "54.5962, 16.8073, 15.8402, 0.68", "55.2618, 17.87, 16.4243, 0.68", "56.681, 20.0825, 17.5, 0.68", "59.6625, 24.6893, 19.7609, 0.68", "60.6192, 26.2053, 20.4804, 0.68", "62.2273, 28.6887, 21.6484, 0.68", "63.1498, 29.9602, 22.2569, 0.68", "64.0358, 30.976, 22.7933, 0.57", "66.418, 33.1057, 24.0296, 0.57", "67.669, 33.8365, 24.7422, 0.57", "69.695, 34.3145, 27.1857, 0.57", "70.3371, 34.09, 28.9343, 0.57", "71.1204, 33.4874, 31.9314, 0.57", "71.3554, 33.2244, 33.0248, 0.57", "72.1894, 31.7736, 37.9634, 0.57", "72.9971, 29.8322, 44.1353, 0.57", "73.4217, 28.1963, 49.1463, 0.57", "73.5707, 27.3261, 51.9548, 0.57", "73.6014, 27.1208, 52.7475, 0.57", "73.6547, 26.7812, 54.1564, 0.57" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "32.2935, 6.07972, 3.52715, 0.79", "33.3905, 8.89365, 2.48593, 0.79", "34.0562, 10.9773, 1.83161, 0.79", "34.3991, 12.0993, 1.52885, 0.79", "35.4878, 14.7083, 0.90027, 0.79", "36.7188, 17.0336, 0.398615, 0.79", "37.8194, 18.912, 0.0454612, 0.79", "39.5482, 21.5496, -0.310343, 0.79", "40.8533, 23.434, -0.568342, 0.79", "43.4606, 27.0348, -1.26071, 0.79", "45.1787, 29.2102, -2.02698, 0.79", "47.0686, 31.1371, -3.44699, 1.02", "48.2911, 32.2394, -4.50338, 1.02", "49.4523, 33.1687, -5.73568, 1.02", "50.9706, 34.356, -7.9179, 1.02", "53.078, 36.0964, -12.4805, 1.02", "55.2836, 37.5639, -18.4221, 1.02" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "16.9501, -11.9205, -0.94995, 0.68", "17.9607, -13.5127, -1.27537, 0.68", "18.3219, -14.01, -1.31212, 0.68", "20.3218, -16.6321, -1.3579, 0.68", "23.4589, -20.6906, -1.32695, 0.68", "25.487, -23.328, -1.4251, 0.68", "26.7442, -24.958, -1.541, 0.68", "30.5931, -29.6954, -1.4305, 0.68", "32.3678, -31.789, -1.21283, 0.68", "32.9197, -32.4038, -1.10076, 0.68", "35.9159, -35.5866, -0.301364, 0.68", "38.0542, -37.6149, 0.278266, 0.68", "43.5938, -42.6599, 1.73237, 0.68", "46.2199, -44.9922, 2.37097, 0.68", "47.7886, -46.3169, 2.74974, 0.68", "49.9598, -48.0917, 3.26467, 0.68", "54.9922, -52.2326, 4.36605, 0.68", "56.9769, -53.9796, 4.58928, 0.68", "57.8736, -54.8444, 4.58125, 0.68", "60.2132, -57.2128, 4.48588, 0.68", "61.6368, -58.7474, 4.39149, 0.68", "64.4787, -62.1276, 4.05312, 0.68", "66.2698, -64.7262, 3.7824, 0.68", "67.4962, -66.6116, 3.55569, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "16.9501, -11.9205, -0.94995, 1.24", "21.9695, -13.1674, -0.867113, 1.24", "24.537, -13.8052, -0.824741, 1.24", "28.6506, -14.8271, -0.756853, 1.24", "32.8137, -15.8613, -0.688147, 1.24", "43.8517, -18.6032, -0.505984, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.63332, 38.9791, 0.0, 0.57", "-10.3006, 53.74, 0.0, 0.57", "-12.9679, 68.501, 0.0, 0.57" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "27.01, -17.0469, 14.3594, 0.45", "27.82, -19.4124, 18.1894, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "27.01, -17.0469, 14.3594, 0.45", "31.2173, -15.6888, 14.2111, 0.45", "33.1975, -15.1431, 14.3669, 0.45", "35.9113, -14.4716, 14.7334, 0.45", "38.8732, -13.9998, 15.2414, 0.45", "40.4232, -14.002, 15.5638, 0.45", "44.6157, -14.4692, 16.4949, 0.45", "44.9577, -14.5553, 16.608, 0.45", "45.1058, -14.6144, 16.6627, 2.6", "47.9413, -16.1471, 17.7497, 0.57", "51.3955, -18.445, 19.0828, 0.57", "52.4034, -19.1389, 19.4289, 0.57", "52.4924, -19.1965, 19.4533, 2.38", "55.4952, -20.8608, 20.2378, 0.34", "56.6501, -21.3431, 20.5162, 0.34", "59.2619, -21.9806, 21.0681, 0.45", "61.7337, -22.1067, 21.7175, 0.45", "64.317, -21.9605, 22.6874, 0.45", "66.6576, -21.64, 23.8836, 0.45", "69.1537, -21.1135, 25.5443, 0.45", "71.3582, -20.5695, 27.2208, 0.45", "76.1528, -19.268, 31.1867, 0.45", "79.7746, -18.34, 34.5017, 0.45", "83.2793, -17.5765, 37.9165, 0.45", "86.6265, -17.0411, 41.2083, 0.45", "87.6237, -16.9519, 42.1733, 2.38", "89.4054, -16.8907, 43.7555, 0.45", "93.0684, -16.8616, 46.4339, 0.45", "94.6603, -16.855, 47.4246, 0.45", "97.0639, -16.7942, 48.7373, 0.45", "102.046, -16.5359, 51.4592, 0.45", "105.6, -16.2749, 53.4066, 0.45", "109.287, -16.0679, 55.4119, 0.45", "111.578, -16.0483, 56.6158, 0.45", "113.802, -16.129, 57.7468, 0.45", "118.09, -16.5067, 59.813, 0.45", "121.602, -17.0066, 61.3093, 0.45", "126.082, -17.8378, 63.1585, 0.45", "130.584, -18.9033, 64.9706, 0.45", "133.252, -19.6261, 66.0109, 0.45", "134.602, -20.076, 66.5172, 0.45", "135.332, -20.3619, 66.7321, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-2.2034, -20.5182, -7.96351, 0.12", "-3.34225, -19.7007, -7.45501, 0.12", "-3.55469, -19.5873, -7.29649, 0.12", "-4.16122, -19.3279, -6.7819, 0.45", "-5.08772, -19.3224, -5.39408, 0.79", "-6.22286, -19.5867, -3.12975, 0.45", "-6.86443, -19.8667, -1.66077, 0.45", "-8.00165, -20.6657, 1.44686, 0.45", "-8.16115, -20.8488, 1.94825, 0.45", "-9.50328, -23.1179, 7.34262, 0.45", "-10.0369, -24.3329, 9.93333, 0.45", "-10.4077, -25.3167, 11.8987, 0.45", "-10.4977, -25.5573, 12.3982, 0.45", "-11.0365, -26.8485, 15.1303, 0.45", "-12.2528, -29.3295, 20.4456, 0.45", "-12.6884, -29.9991, 21.8224, 0.45", "-13.0495, -30.4766, 22.7721, 0.45", "-13.8182, -31.3899, 24.6245, 0.45", "-14.079, -31.7112, 25.3038, 0.45", "-15.659, -33.6646, 29.472, 0.45", "-16.2759, -34.7044, 31.3034, 0.45", "-16.8803, -35.9915, 33.4693, 0.45", "-17.0304, -36.4331, 34.2441, 0.45", "-17.6122, -38.5878, 37.8255, 0.45", "-17.6692, -38.8708, 38.2896, 0.45", "-17.8825, -40.5287, 41.2004, 0.45", "-17.9158, -40.9225, 41.8863, 0.45", "-18.1058, -42.8384, 45.0006, 2.38", "-18.3123, -44.4121, 47.562, 0.68", "-18.3922, -45.0595, 48.5887, 0.68", "-18.7331, -47.782, 53.3768, 0.68", "-18.8808, -48.8955, 55.5085, 0.45", "-18.9725, -49.4174, 56.4942, 0.45", "-19.3167, -50.6319, 59.0571, 0.45", "-19.5303, -51.2213, 60.4691, 0.45", "-20.5126, -53.1452, 65.2236, 0.45", "-21.1816, -54.1539, 67.9541, 0.45", "-21.9024, -55.0425, 70.653, 0.45", "-24.1042, -57.5025, 78.2299, 0.91", "-24.157, -57.5632, 78.4058, 3.05", "-24.7965, -58.3421, 80.5239, 0.45", "-26.1531, -60.4651, 85.5984, 0.45", "-26.5293, -61.1961, 87.2853, 0.45", "-26.9783, -62.2755, 89.7241, 2.15", "-28.3125, -66.3481, 97.4428, 0.57", "-28.464, -66.8582, 98.4271, 0.57", "-29.1828, -69.551, 103.662, 0.57", "-29.6707, -71.3449, 106.923, 0.57", "-29.7363, -71.5613, 107.33, 1.7", "-30.0418, -72.4456, 109.029, 0.45", "-31.6376, -76.657, 116.668, 0.45", "-32.3784, -78.4327, 119.904, 0.45", "-32.9471, -79.6815, 122.091, 0.45", "-34.0716, -82.1225, 126.229, 0.45", "-34.7243, -83.5643, 128.668, 0.45", "-35.2192, -84.6244, 130.469, 0.45", "-36.4079, -87.224, 134.039, 0.45", "-36.5864, -87.6211, 134.599, 0.45" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.2034, -20.5182, -7.96351, 1.7", "-1.52485, -23.2436, -6.26968, 1.7", "-1.32694, -24.1473, -5.81495, 1.58", "-0.757088, -26.9218, -4.71781, 1.36", "-0.286942, -29.2109, -3.81264, 1.24", "0.390291, -32.5082, -2.50877, 1.24", "0.792942, -34.4686, -1.73354, 2.83", "1.34732, -37.2324, -0.90744, 3.62", "1.76309, -39.3354, -0.39173, 2.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "55.2836, 37.5639, -18.4221, 0.57", "55.2882, 35.766, -19.3347, 0.57", "55.2943, 33.4012, -20.535, 0.57", "55.2977, 32.0539, -21.2189, 0.57", "55.3025, 30.1985, -22.1607, 0.57", "55.3087, 27.78, -23.3882, 0.57", "55.3193, 23.6435, -25.4879, 0.57" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "55.2836, 37.5639, -18.4221, 1.02", "55.9417, 38.9936, -19.7956, 1.02", "57.4175, 42.1996, -22.8756, 1.02", "58.2517, 44.0116, -24.6164, 0.79" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "67.4962, -66.6116, 3.55569, 0.45", "70.5948, -70.9552, 2.62739, 0.45", "71.2316, -71.8559, 2.46143, 0.45", "72.1797, -73.2381, 2.28289, 0.45", "74.4861, -76.5753, 1.95075, 0.45", "75.4084, -77.865, 1.75489, 0.45", "76.2691, -78.9978, 1.55505, 0.45", "77.8978, -80.9493, 1.22055, 0.45", "80.8767, -84.2645, 0.590847, 0.45", "82.5626, -85.8591, 0.286873, 0.45", "85.8382, -88.3983, -0.367669, 0.45", "88.2782, -89.9041, -0.740571, 0.45", "89.3752, -90.4874, -0.730388, 0.45", "91.3672, -91.4825, -0.509419, 0.45", "95.4893, -93.5792, 0.216298, 0.45", "98.2276, -95.099, 0.643654, 0.45", "102.361, -97.5591, 1.26354, 0.45", "111.111, -103.249, 2.30412, 0.45", "114.999, -106.029, 2.65778, 0.45", "117.817, -108.321, 2.80196, 0.45", "123.122, -113.433, 2.72929, 0.45", "124.133, -114.578, 2.64339, 0.45", "126.067, -117.328, 2.08576, 0.45", "127.046, -119.201, 1.51774, 0.45", "128.522, -122.815, 0.526089, 0.45", "129.472, -125.712, -0.111082, 0.45", "130.612, -129.629, -0.795471, 0.45", "131.653, -133.57, -1.4895, 0.45", "132.634, -137.724, -2.24524, 0.45", "133.041, -139.511, -2.5686, 0.45", "133.697, -142.384, -3.04558, 0.45", "135.046, -147.735, -3.81899, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "67.4962, -66.6116, 3.55569, 0.57", "67.3671, -67.1059, 3.71907, 0.57", "66.5799, -69.6308, 5.37808, 0.57", "65.5031, -72.7501, 7.63115, 0.57", "64.7578, -74.5099, 9.15106, 0.57", "64.6107, -74.8197, 9.42473, 0.57", "63.7543, -76.3846, 10.8779, 0.57", "62.4295, -78.39, 12.9266, 0.57", "61.7423, -79.2345, 13.8845, 0.57", "60.3457, -80.7699, 16.02, 0.45", "59.6319, -81.5229, 17.0396, 0.45", "58.6516, -82.5556, 18.3816, 0.45", "57.7045, -83.6067, 19.6836, 0.45", "56.6156, -84.7975, 21.1397, 0.45", "54.4616, -87.378, 24.3594, 0.45", "54.0192, -87.9936, 25.1003, 0.45", "53.4209, -88.9295, 26.2224, 0.45", "52.0607, -91.341, 28.9697, 0.45", "51.5963, -92.2406, 29.9104, 0.45", "49.9333, -95.6006, 32.8984, 0.45", "49.4256, -96.7108, 33.7699, 0.45", "49.3231, -96.963, 33.9562, 0.45", "49.1038, -97.6259, 34.4549, 0.45", "48.5547, -99.4439, 35.8372, 0.45", "48.1472, -100.943, 37.0123, 0.45", "47.3836, -103.963, 39.5522, 0.45", "46.8735, -106.052, 41.6037, 0.45", "45.9374, -109.859, 45.6102, 0.45", "45.3838, -111.968, 47.9311, 0.45", "45.1265, -112.852, 48.9809, 0.45", "44.1851, -115.794, 52.4683, 0.45", "43.1538, -118.43, 55.4081, 0.45", "42.5181, -119.817, 56.929, 0.45", "41.8607, -121.12, 58.2438, 0.45", "40.6908, -123.558, 60.4252, 0.45", "39.7063, -125.652, 62.1249, 0.45", "38.8227, -127.423, 63.4471, 0.45", "38.0456, -128.837, 64.6868, 0.45", "36.0795, -131.849, 67.9276, 0.45", "34.6277, -133.557, 70.0851, 0.45", "33.188, -134.78, 71.8601, 0.45", "31.4129, -135.787, 73.5844, 0.45", "26.8137, -137.56, 77.1719, 0.45", "24.5866, -138.139, 78.6572, 0.45", "21.7052, -138.655, 80.1878, 0.45", "19.7661, -138.959, 81.1287, 0.45", "16.0521, -139.622, 82.7987, 0.45", "13.1577, -140.276, 83.9965, 0.45", "8.64521, -141.528, 86.2306, 0.45", "5.42796, -142.576, 88.2424, 0.45", "3.32059, -143.348, 89.6571, 0.45", "-1.49311, -145.27, 92.9977, 0.45", "-3.17029, -145.987, 94.2048, 0.45", "-10.364, -149.173, 99.2841, 0.45", "-12.3247, -150.071, 100.655, 0.45", "-17.5013, -152.516, 104.566, 0.45", "-18.9703, -153.225, 105.666, 0.45", "-21.4983, -154.541, 107.531, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "43.8517, -18.6032, -0.505984, 0.45", "46.2894, -21.9212, 1.01724, 0.45", "46.6716, -22.4505, 1.23145, 1.02", "50.651, -27.8599, 3.19851, 0.79", "53.0817, -31.224, 4.23158, 0.79", "54.4666, -33.1259, 4.71656, 0.68", "54.7634, -33.5222, 4.80106, 0.68", "56.5412, -35.8462, 5.09956, 0.68", "57.7415, -37.4127, 5.20895, 0.68", "60.2248, -40.5663, 5.21588, 0.68", "62.7193, -43.8169, 5.18215, 0.68", "65.1003, -46.9734, 5.11435, 0.68", "67.355, -49.9343, 5.0263, 0.68", "70.1741, -53.6531, 4.88938, 0.68", "73.6609, -58.2833, 4.47711, 0.68", "75.8142, -61.1795, 3.99858, 0.68", "77.0676, -62.8851, 3.60482, 0.68", "78.6482, -65.0006, 3.03215, 0.68", "81.3004, -68.3884, 2.00039, 0.68", "84.7695, -72.6448, 0.584057, 0.68", "88.7956, -77.3187, -1.03293, 0.68", "90.9635, -79.6604, -1.81485, 0.68", "93.1275, -81.8996, -2.494, 0.68", "94.5371, -83.3066, -2.85844, 0.68", "95.8348, -84.5065, -3.0972, 0.68", "97.6686, -86.2362, -3.16683, 0.68", "99.1317, -87.7095, -3.18998, 0.68", "101.033, -90.0583, -3.30393, 0.68", "101.542, -90.8737, -3.39967, 0.68", "102.732, -93.2183, -3.72355, 0.68", "104.045, -96.3084, -4.2946, 0.68", "104.989, -98.9861, -4.86727, 0.68", "105.828, -101.696, -5.48275, 0.68", "107.045, -106.073, -6.48049, 0.68", "107.608, -108.149, -6.91899, 0.68", "108.409, -110.952, -7.42339, 0.68", "109.125, -113.087, -7.75373, 0.68", "110.141, -115.653, -7.98582, 0.68", "110.955, -117.529, -8.12213, 0.68", "111.357, -118.378, -8.15497, 0.68", "112.606, -120.835, -8.21255, 0.45", "114.396, -124.341, -8.22284, 0.45", "116.464, -128.403, -8.2579, 0.45", "118.062, -131.676, -8.42057, 0.45", "119.159, -134.009, -8.60396, 0.45", "120.425, -136.756, -8.87242, 0.45", "122.549, -141.371, -9.46914, 0.45", "123.656, -143.83, -9.82337, 0.45", "125.512, -148.087, -10.4996, 0.45", "127.223, -151.945, -11.1549, 0.45", "128.26, -154.306, -11.6118, 0.45", "129.114, -156.207, -12.0444, 0.45" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "43.8517, -18.6032, -0.505984, 0.68", "46.0932, -17.2608, 1.63285, 0.68", "48.7965, -15.4615, 3.92703, 0.68", "50.7689, -14.1245, 5.16938, 0.68", "52.1142, -13.2165, 5.78183, 0.68", "53.0024, -12.6064, 6.00255, 0.68", "55.126, -11.1666, 6.02612, 0.68", "56.5331, -10.2181, 5.66935, 0.68", "58.9995, -8.61727, 4.64179, 0.57", "60.9555, -7.39277, 3.65551, 0.57", "63.7948, -5.53887, 2.12126, 0.57", "67.0608, -3.34962, 0.313918, 0.57", "68.8792, -2.08543, -0.707233, 0.57", "69.7279, -1.43819, -1.21516, 0.57", "72.3544, 0.77579, -2.73434, 0.57", "75.8088, 3.84884, -4.63694, 0.57", "78.4924, 6.34227, -5.96374, 0.57", "79.4778, 7.33628, -6.44947, 0.57", "81.6873, 9.72254, -7.64023, 0.57", "83.7332, 11.995, -8.7843, 0.57", "84.6176, 13.0312, -9.28185, 0.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "27.82, -19.4124, 18.1894, 0.45", "25.8314, -25.1951, 19.7277, 0.45", "25.201, -27.0466, 20.1349, 0.45", "24.3776, -29.4379, 20.8758, 0.45", "23.5258, -31.8553, 21.8393, 0.45", "22.8708, -33.6519, 22.6529, 0.45", "21.6484, -37.0782, 24.2913, 0.45", "21.2273, -38.3832, 24.9447, 0.45", "20.0242, -42.3173, 27.1209, 0.45", "19.4178, -44.3099, 28.4772, 0.45", "18.9125, -45.8577, 29.7635, 0.45", "18.6008, -46.6297, 30.4786, 0.45", "18.1519, -47.53, 31.3634, 0.45", "17.4972, -48.6139, 32.2762, 0.45", "15.6938, -51.6609, 34.1627, 0.45", "15.3151, -52.3399, 34.4895, 0.45", "14.2564, -54.5021, 35.2938, 0.45", "13.6706, -55.7894, 35.3755, 0.45", "13.0163, -57.5625, 35.017, 0.45", "12.226, -60.8242, 33.6926, 0.45", "11.9684, -63.0173, 32.4857, 0.45", "11.8574, -64.9594, 31.2914, 0.45", "12.0195, -70.645, 27.2883, 0.45", "12.1067, -71.7256, 26.4279, 1.02", "12.2237, -72.8167, 25.392, 0.57", "12.2468, -74.0896, 23.8266, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "27.82, -19.4124, 18.1894, 0.45", "29.2103, -19.7438, 18.2945, 0.45", "30.6417, -20.085, 18.4028, 0.45", "32.6314, -20.5593, 18.5532, 0.45", "34.315, -20.9606, 18.6805, 0.45", "35.1884, -21.1688, 18.7465, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "1.76309, -39.3354, -0.39173, 0.45", "1.28256, -40.8701, 1.0871, 0.45", "1.09162, -41.5787, 1.71192, 0.79", "-0.766618, -48.4754, 7.79263, 1.24", "-1.56865, -51.4521, 10.4171, 1.24", "-2.24615, -53.9666, 12.6341, 1.24", "-3.0253, -56.8584, 15.1837, 1.24", "-3.30897, -57.9081, 16.1263, 2.38" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.76309, -39.3354, -0.39173, 0.91", "3.79267, -40.9667, 0.264386, 0.91", "4.91069, -41.8653, 0.625817, 0.91", "6.84482, -43.4198, 1.25108, 0.91", "8.18104, -44.4938, 1.68305, 0.91", "10.2695, -46.1723, 2.35819, 0.79", "10.6956, -46.5148, 2.49594, 0.79" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "55.3193, 23.6435, -25.4879, 0.57", "55.9261, 21.8478, -25.4118, 0.57", "57.1761, 18.186, -24.6446, 0.57", "58.5014, 14.2049, -23.9462, 0.45", "60.3996, 8.47058, -23.095, 0.45", "62.4566, 2.1487, -22.0886, 0.45", "63.0193, 0.419299, -21.8133, 0.45", "65.6804, -7.87271, -20.392, 0.45", "67.6998, -14.4764, -19.143, 0.45", "68.6535, -17.5714, -18.5044, 0.45", "69.7575, -21.0182, -17.8144, 0.45" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "55.3193, 23.6435, -25.4879, 0.57", "52.9117, 23.4517, -27.3156, 0.57", "51.33, 22.8161, -27.8751, 0.68", "49.983, 22.0891, -28.3702, 0.68", "48.6351, 21.3617, -28.8657, 0.68", "46.4995, 20.2091, -29.6507, 0.68", "44.456, 19.1062, -30.4018, 0.68", "42.0224, 18.0071, -31.3178, 0.68", "39.5291, 17.0477, -32.1508, 0.57" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "58.2517, 44.0116, -24.6164, 0.68", "58.779, 45.107, -23.3481, 0.68", "59.2282, 46.04, -22.2677, 0.68", "59.9792, 47.5999, -20.4613, 0.68", "61.4961, 50.7508, -16.8126, 0.68", "62.345, 52.5142, -14.7707, 0.68", "63.4844, 54.8808, -12.0301, 0.68" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "58.2517, 44.0116, -24.6164, 0.79", "59.8581, 44.8976, -24.4907, 0.79", "62.4139, 46.3071, -24.2906, 0.79", "64.0693, 47.2201, -24.161, 0.79", "65.9158, 48.2384, -24.0165, 0.79", "66.9641, 48.8166, -23.9344, 0.79" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "129.114, -156.207, -12.0444, 0.57", "130.559, -159.114, -11.581, 0.57", "132.792, -163.437, -10.7757, 0.57", "133.907, -165.516, -10.3856, 0.57", "136.845, -170.834, -9.40952, 0.57", "139.725, -175.936, -8.43804, 0.57", "142.047, -180.049, -7.65477, 0.57", "143.433, -182.378, -7.10923, 0.57", "144.702, -184.451, -6.56795, 0.57", "145.919, -186.377, -6.07151, 0.57", "147.424, -188.58, -5.61392, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "129.114, -156.207, -12.0444, 0.34", "131.176, -157.875, -11.3327, 0.34", "132.653, -159.154, -10.6248, 0.34", "133.286, -159.725, -10.3057, 0.34", "136.118, -162.458, -9.136, 0.34", "138.375, -164.75, -8.35396, 0.57", "141.402, -167.905, -7.37332, 0.57", "143.4, -170.12, -6.73378, 0.57", "145.167, -172.133, -6.31142, 0.57", "148.664, -176.212, -5.73266, 0.57", "150.655, -178.551, -5.56084, 0.57", "152.637, -180.848, -5.60978, 0.57", "155.286, -183.793, -5.94451, 0.57", "159.13, -187.956, -6.60616, 0.57", "162.363, -191.396, -7.1777, 0.57", "164.481, -193.567, -7.44782, 0.57", "168.183, -197.224, -7.85477, 0.57", "169.264, -198.245, -7.95643, 0.57", "171.665, -200.394, -8.0628, 0.57", "173.476, -201.91, -7.95003, 0.57", "176.981, -204.557, -7.48311, 0.57", "178.089, -205.328, -7.23719, 0.57", "179.941, -206.513, -6.41401, 0.57", "181.249, -207.286, -5.7349, 0.57", "182.578, -208.004, -4.93202, 0.57", "183.491, -208.481, -4.35587, 0.57", "185.684, -209.619, -2.92179, 0.57", "190.292, -212.07, 0.382058, 0.57", "191.532, -212.742, 1.36088, 0.57", "193.906, -214.055, 3.36176, 0.57", "196.303, -215.492, 5.48181, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "84.6176, 13.0312, -9.28185, 0.45", "86.831, 14.8584, -13.3499, 0.45", "87.954, 15.7948, -15.407, 0.45", "89.4841, 17.3394, -18.4778, 0.45", "89.8893, 17.7675, -19.2249, 0.45", "90.0916, 17.9792, -19.5601, 0.45", "92.0289, 20.0199, -22.3981, 0.45", "92.2828, 20.2597, -22.671, 0.45", "93.8322, 21.7497, -24.3534, 0.45", "95.0093, 23.0273, -25.4713, 0.45", "95.6526, 23.7632, -26.0617, 0.45", "97.2035, 25.5067, -27.2939, 0.45", "98.6329, 26.9372, -27.966, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "84.6176, 13.0312, -9.28185, 0.45", "86.1471, 13.3875, -9.28185, 0.45", "87.1312, 13.6167, -9.28185, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "35.1884, -21.1688, 18.7465, 0.45", "33.4882, -25.2108, 20.4824, 0.45", "31.5755, -29.9098, 22.4434, 0.45", "30.4947, -32.5192, 23.5662, 0.45", "29.298, -35.3431, 24.7282, 0.45", "27.9035, -38.654, 25.9942, 0.45", "27.3933, -39.9248, 26.4255, 0.45", "26.7806, -41.528, 26.8371, 0.45", "25.4911, -45.5195, 27.7447, 0.45", "24.7404, -48.5856, 28.2047, 0.45", "24.2484, -51.2733, 28.411, 0.45", "23.9296, -53.4843, 28.5143, 0.45", "23.722, -55.5167, 28.7113, 0.45", "23.5832, -58.7387, 29.205, 0.45", "23.6292, -60.8067, 29.8976, 0.45", "23.7539, -62.6793, 30.8449, 0.45", "24.0094, -65.358, 32.3507, 0.45", "24.3563, -68.0878, 34.0182, 0.45", "24.6164, -69.5761, 34.9511, 0.45", "25.723, -74.7384, 37.6219, 0.45", "26.6112, -78.1638, 39.0787, 0.45", "27.5402, -81.2303, 40.0204, 0.45", "28.4286, -84.0937, 40.4071, 0.45", "29.2932, -86.7957, 40.6019, 0.45", "30.8638, -92.0462, 40.7922, 0.45", "31.4935, -94.4089, 40.7883, 0.45", "31.8738, -96.2375, 41.1433, 0.45", "32.5947, -100.404, 42.2156, 0.45", "33.0494, -103.881, 43.2264, 0.45", "33.4004, -107.724, 44.7041, 0.45", "33.506, -109.683, 45.7822, 0.45", "33.6398, -117.094, 50.0532, 0.79" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "35.1884, -21.1688, 18.7465, 0.45", "37.2411, -22.5018, 19.1897, 0.45", "38.4161, -23.5103, 19.4115, 0.45", "40.3041, -25.3556, 19.7181, 0.45", "41.9691, -27.1237, 19.9648, 0.45", "44.3968, -29.8772, 20.2845, 0.45", "47.4398, -33.5511, 20.6508, 0.45", "50.8874, -38.331, 21.0675, 0.45", "53.4402, -42.2526, 21.0806, 0.45", "54.7876, -44.4599, 21.0478, 0.45", "57.217, -48.6694, 20.9099, 0.45", "58.7925, -51.4883, 20.7172, 0.45", "60.3918, -54.519, 20.4009, 0.45", "63.4542, -61.1201, 19.3021, 0.45" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-3.30897, -57.9081, 16.1263, 0.12", "-3.7188, -58.452, 15.7458, 0.12", "-4.33786, -59.8057, 14.9294, 0.57", "-4.7478, -61.01, 14.355, 0.57", "-5.06666, -62.0851, 14.0144, 0.57", "-6.1335, -65.4989, 12.7971, 0.57", "-6.86112, -67.535, 11.8606, 0.57", "-7.28095, -68.6831, 11.256, 0.91", "-7.70458, -69.7331, 10.4211, 0.91", "-8.32262, -71.0321, 9.05371, 0.91", "-9.50891, -72.6666, 6.36827, 0.68", "-10.5532, -73.396, 3.9529, 0.68", "-11.0855, -73.6531, 2.7173, 0.68", "-12.8328, -74.3362, -1.60313, 0.68", "-13.2421, -74.4556, -2.67487, 0.68", "-14.1698, -74.6376, -5.29096, 0.68", "-15.6978, -74.8138, -9.85685, 0.68", "-16.2609, -74.8657, -11.6875, 0.68", "-17.3009, -75.0565, -15.3438, 0.68" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-3.30897, -57.9081, 16.1263, 0.79", "-2.62575, -61.4955, 16.3044, 0.79", "-1.70506, -66.3296, 16.5443, 0.79", "-1.27994, -68.5618, 16.655, 0.79", "-0.952006, -70.2836, 16.7405, 0.79", "-0.79855, -71.0894, 16.7805, 0.79" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.30897, -57.9081, 16.1263, 0.57", "-2.38897, -58.4687, 19.6263, 0.57" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "10.6956, -46.5148, 2.49594, 1.13", "11.2924, -48.1635, 3.59645, 1.13", "12.2738, -50.7155, 5.09731, 0.91", "12.8682, -52.2642, 5.86159, 0.91", "13.8546, -54.8695, 6.99476, 0.91", "14.8784, -57.733, 8.10594, 0.91", "15.7292, -60.3039, 9.08801, 0.91", "16.2429, -62.0782, 9.68442, 0.91", "16.9607, -64.9946, 10.6459, 0.91", "17.2154, -66.2144, 11.0537, 1.92", "17.5164, -67.8498, 11.5733, 1.36", "17.9207, -70.2598, 12.3918, 1.02", "18.3496, -73.1036, 13.5022, 1.02", "18.7278, -75.5316, 14.5275, 1.02", "18.8972, -76.526, 14.9619, 1.02", "19.113, -77.6433, 15.451, 0.68", "19.5328, -79.4341, 16.1268, 0.68", "19.8112, -80.3966, 16.3867, 1.02", "20.1132, -81.2206, 16.5155, 2.15", "20.7324, -82.601, 16.5803, 1.47", "21.8382, -84.7766, 16.5905, 1.13", "22.6054, -86.2662, 16.5777, 0.79", "23.1301, -87.2461, 16.5485, 0.57", "24.1863, -89.0465, 16.4953, 0.57", "25.1456, -90.5531, 16.4501, 0.57", "25.9792, -91.7911, 16.4039, 0.57", "26.7388, -92.9642, 16.3532, 0.57", "27.2145, -93.83, 16.2965, 0.57", "27.9643, -95.4251, 16.1201, 0.57", "28.3752, -96.3602, 16.1045, 0.57", "28.9581, -97.7929, 16.1574, 2.83", "29.7233, -99.6597, 16.3535, 1.92", "30.8494, -102.295, 16.6817, 1.02", "31.459, -103.781, 16.9149, 0.68", "32.9838, -107.462, 17.5496, 0.68", "33.5597, -108.739, 17.7685, 0.68", "34.624, -110.865, 18.2041, 0.68", "35.2684, -112.038, 18.4621, 0.68", "36.1332, -113.451, 18.7366, 0.68", "37.3571, -115.328, 18.981, 0.68", "38.8181, -117.371, 19.0946, 0.68", "40.9245, -120.062, 19.2558, 0.68", "42.2637, -121.71, 19.3554, 0.68", "43.8957, -123.689, 19.4272, 0.57", "45.0523, -125.105, 19.4261, 0.57", "46.1037, -126.519, 19.2909, 0.57", "47.1262, -128.029, 18.939, 0.57", "48.1251, -129.634, 18.2827, 0.57", "49.3852, -131.743, 17.2747, 0.57", "49.918, -132.683, 16.7542, 1.47", "51.2922, -135.113, 15.2797, 0.68", "52.1295, -136.564, 14.3695, 0.68", "53.3122, -138.452, 13.1689, 0.68", "55.0737, -141.021, 11.5748, 0.68", "56.8014, -143.34, 10.2843, 0.68", "57.6207, -144.358, 9.75165, 0.68", "58.1597, -145.011, 9.60663, 0.68", "59.0348, -146.271, 9.81038, 0.57", "59.4136, -146.923, 10.0817, 0.57", "59.9203, -147.908, 10.6231, 0.57", "60.7591, -149.684, 11.5793, 0.57", "63.4529, -155.915, 14.6035, 0.68", "64.9663, -159.652, 16.1244, 0.68", "65.6357, -161.432, 16.6806, 0.68", "66.0614, -162.668, 16.9025, 0.68", "67.1441, -166.045, 16.678, 0.68", "67.4722, -167.066, 16.3217, 0.68", "68.094, -168.886, 15.1291, 2.04", "68.6792, -170.466, 13.8624, 0.79", "69.3346, -172.099, 12.5281, 0.79", "70.6253, -175.157, 10.2733, 0.79", "71.3876, -176.841, 9.29335, 0.79", "72.1248, -178.413, 8.61096, 0.79", "72.9744, -180.225, 8.16351, 0.79", "73.8085, -181.889, 8.00408, 0.68", "74.9787, -184.108, 8.11987, 0.68", "76.0676, -186.108, 8.49148, 0.68", "77.0938, -187.9, 9.22337, 0.68", "77.8664, -189.197, 9.92416, 0.68", "78.688, -190.518, 10.8352, 0.68", "79.1802, -191.267, 11.3946, 1.58", "79.9362, -192.337, 12.1554, 1.58", "83.1297, -196.748, 15.1111, 0.68", "84.2965, -198.291, 16.107, 0.68", "86.4682, -201.047, 17.7925, 0.68", "88.4424, -203.535, 19.3178, 0.68", "90.1782, -205.674, 20.5769, 0.68", "91.5595, -207.346, 21.5489, 0.68", "93.1419, -209.19, 22.4878, 0.68", "94.2566, -210.394, 23.2747, 0.68", "96.3757, -212.507, 24.7916, 0.68", "97.1254, -213.184, 25.2665, 0.68", "99.1895, -214.892, 26.3147, 2.38", "100.247, -215.738, 26.6765, 1.92", "103.382, -218.152, 27.3682, 0.57", "104.591, -219.08, 27.4492, 0.57", "108.785, -222.287, 27.2088, 0.57", "111.701, -224.532, 26.9364, 0.57", "113.546, -225.948, 26.6743, 0.57", "115.876, -227.732, 26.3554, 0.57", "118.092, -229.396, 26.0568, 0.57", "119.593, -230.531, 26.0194, 0.57", "120.787, -231.433, 26.1873, 2.15", "121.78, -232.159, 26.3726, 1.13", "123.305, -233.273, 26.7203, 0.57", "124.727, -234.392, 26.8432, 0.57", "125.337, -234.89, 26.8357, 0.57", "126.081, -235.58, 26.793, 0.57", "127.024, -236.53, 26.7011, 0.57", "127.254, -236.798, 26.6815, 2.38", "129.459, -239.626, 26.5147, 0.45", "130.87, -241.556, 26.4375, 0.45", "132.424, -243.735, 26.3912, 0.45", "133.499, -245.275, 26.4438, 0.45", "135.403, -248.095, 26.7956, 0.45", "135.904, -248.868, 26.9489, 0.45", "138.001, -252.374, 28.0084, 0.45", "139.437, -255.061, 28.9007, 0.45", "140.589, -257.576, 29.6876, 0.45", "141.461, -259.932, 30.4755, 0.45", "141.782, -261.049, 30.8671, 0.45", "142.178, -262.857, 31.4333, 0.45", "142.536, -265.245, 32.0226, 0.45", "142.9, -267.722, 32.2031, 0.45", "143.025, -268.355, 32.1405, 1.24", "143.487, -269.927, 31.8248, 0.57", "144.276, -271.844, 31.3763, 0.57", "145.606, -274.315, 30.7534, 0.57", "147.04, -276.575, 30.2343, 1.36", "148.319, -278.37, 30.0303, 0.57", "149.851, -280.33, 29.9502, 0.57", "151.946, -282.826, 30.0251, 0.57", "153.594, -284.677, 30.3326, 0.57", "154.831, -285.996, 30.7051, 0.57", "157.485, -288.861, 31.6374, 0.57", "159.913, -291.651, 32.4779, 0.57", "160.894, -292.924, 32.8518, 0.57", "162.527, -295.383, 33.4213, 2.38", "162.982, -296.173, 33.5441, 1.58", "164.834, -299.82, 34.0436, 0.68", "165.814, -302.076, 34.2697, 0.68", "166.879, -304.874, 34.7493, 0.79", "167.833, -307.499, 35.2478, 0.57", "168.694, -310.026, 35.7344, 0.57", "169.921, -313.798, 36.5939, 0.57", "170.808, -316.64, 37.3551, 0.57", "171.637, -319.359, 38.0347, 0.57", "172.042, -320.675, 38.3216, 0.57", "172.689, -322.804, 38.7644, 0.57", "173.618, -325.985, 39.2449, 0.57", "174.225, -327.994, 39.3222, 0.57", "174.967, -330.364, 39.154, 0.57", "175.498, -332.016, 38.8469, 0.57", "175.846, -333.036, 38.5988, 0.57", "176.553, -334.926, 38.1211, 0.57", "177.85, -338.079, 37.3283, 0.57", "178.98, -340.545, 36.8508, 1.13", "179.695, -341.965, 36.6729, 2.38", "179.958, -342.457, 36.6354, 2.38", "181.797, -345.686, 36.5892, 0.79", "182.834, -347.506, 36.5117, 0.79", "184.007, -349.698, 36.4341, 0.57", "184.912, -351.496, 36.3106, 0.57", "185.673, -353.181, 36.1336, 0.57", "186.29, -354.67, 35.9024, 0.57", "187.79, -358.415, 35.0798, 0.57", "188.024, -359.043, 34.9583, 2.94", "189.09, -361.907, 34.399, 0.68", "190.143, -364.648, 33.9677, 0.68", "191.048, -366.796, 33.726, 0.68", "191.846, -368.535, 33.5979, 0.68", "193.206, -371.265, 33.5207, 0.68", "194.499, -373.838, 33.4035, 0.68", "195.451, -375.71, 33.2866, 0.68", "196.355, -377.484, 33.1319, 0.68", "198.062, -380.855, 32.8764, 0.68", "198.88, -382.443, 32.7771, 0.68", "199.751, -384.068, 32.7041, 0.68", "201.996, -388.393, 32.8649, 0.68", "202.495, -389.379, 32.9474, 0.68", "204.106, -392.871, 33.4635, 0.57", "204.495, -393.799, 33.6491, 0.57", "204.742, -394.467, 33.8024, 2.49", "206.262, -398.892, 35.002, 0.68", "206.649, -400.151, 35.4083, 0.68", "208.038, -404.577, 36.8977, 0.68", "208.501, -405.972, 37.3554, 0.68", "209.544, -408.775, 38.2149, 0.68", "210.739, -411.603, 39.0079, 0.68", "212.004, -414.152, 39.6083, 0.68", "213.24, -416.307, 40.1686, 0.68", "215.314, -419.389, 41.0037, 0.68", "216.161, -420.548, 41.3731, 0.68", "216.797, -421.397, 41.703, 2.72", "217.735, -422.708, 42.2488, 1.92", "219.381, -425.319, 43.445, 0.91", "220.248, -427.023, 44.3639, 0.91", "220.943, -428.773, 45.4593, 0.68", "221.6, -430.707, 46.82, 0.68", "222.218, -432.689, 48.3899, 0.68", "222.971, -435.229, 50.5508, 0.68", "223.486, -436.998, 52.2777, 0.68", "224.223, -439.415, 54.9522, 0.68", "224.865, -441.207, 57.3163, 0.68", "225.834, -443.527, 60.6987, 0.68", "226.319, -444.527, 62.3861, 0.68", "227.529, -446.703, 66.1006, 0.68", "228.334, -448.014, 68.2501, 0.68", "230.458, -451.305, 73.3253, 0.68", "231.288, -452.599, 75.1679, 0.68", "233.31, -455.745, 79.2243, 0.68", "234.741, -457.994, 81.8339, 0.68", "235.229, -458.761, 82.5689, 0.68", "235.654, -459.44, 83.1514, 0.68", "236.852, -461.568, 84.6908, 0.68", "237.326, -462.441, 85.3758, 0.68", "238.531, -464.809, 87.139, 0.45", "239.151, -466.049, 88.3711, 0.45", "239.407, -466.597, 88.9496, 0.45", "239.798, -467.439, 89.8656, 0.45" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 27
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "10.6956, -46.5148, 2.49594, 0.79", "12.0877, -45.201, 1.70501, 0.79", "13.3032, -44.0537, 1.01437, 0.57", "13.8592, -43.5289, 0.698453, 0.34", "14.4917, -42.9319, 0.339055, 0.34", "14.7602, -42.6785, 0.186509, 0.34" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "69.7575, -21.0182, -17.8144, 0.45", "70.4343, -22.7789, -17.7713, 0.45", "71.3007, -25.0181, -17.8678, 0.45", "73.1053, -29.7079, -18.2261, 0.45", "74.3487, -32.96, -18.9097, 0.45", "75.4645, -36.2226, -19.778, 0.45", "75.742, -37.1689, -20.0405, 0.45", "76.5863, -40.4976, -21.0097, 0.45", "77.5644, -44.8323, -22.2995, 0.45", "78.7578, -51.0249, -24.0633, 0.45", "79.347, -54.625, -25.0741, 0.45", "79.9543, -59.7243, -26.4352, 0.45", "80.289, -64.5598, -27.5761, 0.45", "80.2986, -67.8998, -28.2271, 0.45", "79.8959, -72.5032, -28.9649, 0.45", "79.3567, -75.1932, -29.2408, 0.45", "78.7426, -77.6259, -29.5383, 0.45", "77.656, -80.5026, -29.976, 0.45", "76.4971, -82.5482, -30.3491, 0.45", "74.5902, -85.0512, -30.85, 0.45", "71.9093, -87.8078, -31.3999, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "69.7575, -21.0182, -17.8144, 0.45", "73.0264, -26.484, -16.3659, 0.45", "74.4978, -28.9444, -15.7139, 0.45", "76.5197, -32.3252, -14.8179, 0.45", "77.5772, -34.0934, -14.3493, 0.45", "79.8531, -37.8988, -13.3409, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "33.6398, -117.094, 50.0532, 0.57", "31.5945, -118.871, 50.9472, 0.57", "30.0212, -120.343, 51.7001, 0.57", "28.7539, -121.58, 52.3019, 0.57", "28.0038, -122.409, 52.6551, 0.57", "26.8491, -123.872, 53.231, 0.57", "25.3945, -126.058, 54.1888, 0.57", "24.6198, -127.479, 54.8636, 0.57", "24.1348, -128.54, 55.2987, 0.57", "23.3285, -130.393, 56.3582, 0.57", "22.2101, -132.956, 57.9515, 0.57", "20.7657, -135.904, 60.1196, 0.57", "20.2095, -136.822, 60.8917, 0.57", "18.5572, -138.786, 63.0852, 0.57", "13.904, -142.307, 68.738, 0.57", "12.3413, -142.907, 70.2992, 0.57", "10.0075, -143.193, 72.0933, 0.57", "7.65502, -143.177, 73.5143, 0.57", "4.67089, -143.089, 75.3148, 0.57", "2.18379, -142.997, 76.6252, 0.57", "-0.725325, -143.012, 77.9659, 0.57", "-3.22898, -143.221, 79.2667, 0.57", "-6.35311, -143.797, 80.9714, 0.57", "-11.0781, -145.313, 83.7684, 0.57", "-13.343, -146.482, 85.47, 0.57", "-15.5577, -147.987, 87.554, 0.57", "-16.7755, -148.966, 88.9971, 0.57", "-17.4395, -149.526, 89.9296, 0.57", "-18.369, -150.314, 91.2658, 0.57", "-21.8283, -152.922, 96.0627, 0.57", "-22.5617, -153.44, 97.0581, 0.57", "-23.5935, -154.122, 98.3887, 0.57", "-26.9049, -156.191, 102.569, 0.57", "-28.3109, -157.073, 104.213, 0.57", "-32.4465, -159.653, 108.61, 0.57", "-33.3319, -160.219, 109.473, 0.57", "-36.7685, -162.457, 112.671, 0.57", "-37.7335, -163.096, 113.523, 0.57", "-39.9075, -164.522, 115.251, 0.57", "-41.0157, -165.256, 116.06, 0.57", "-45.8041, -168.566, 119.157, 0.57", "-48.0313, -170.142, 120.48, 0.57", "-50.8341, -172.168, 121.77, 0.57", "-54.5246, -174.912, 123.143, 0.57", "-58.8257, -178.172, 124.415, 0.57", "-60.0206, -179.12, 124.598, 0.57", "-62.0628, -180.828, 124.537, 0.57", "-65.6984, -183.941, 123.196, 0.57", "-67.6502, -185.644, 121.807, 0.57", "-69.7749, -187.563, 119.834, 0.57", "-72.0541, -189.644, 117.431, 0.57", "-73.8657, -191.302, 115.366, 0.57", "-80.7335, -197.748, 106.66, 0.57", "-80.8486, -197.86, 106.499, 2.26", "-82.7547, -199.72, 103.12, 0.68", "-83.4304, -200.41, 101.505, 0.68" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "33.6398, -117.094, 50.0532, 0.57", "34.6928, -119.639, 55.9075, 0.57", "35.4629, -121.472, 59.9032, 0.57", "35.6509, -121.881, 60.6755, 0.57", "36.1932, -123.044, 62.6519, 0.57", "37.2514, -125.291, 66.4805, 0.57", "39.9048, -130.563, 75.3415, 0.57", "40.4977, -131.618, 76.944, 0.57", "41.7928, -133.811, 79.9727, 0.57", "42.3279, -134.66, 81.0377, 0.57", "44.5615, -138.03, 85.1136, 0.57", "45.3574, -139.269, 86.2861, 0.57", "46.6032, -141.263, 87.4903, 0.57", "47.8713, -143.113, 88.7382, 0.57", "49.6355, -145.663, 90.5841, 0.57" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "63.4542, -61.1201, 19.3021, 0.34", "62.8064, -62.9875, 17.9956, 0.34", "62.4635, -64.4674, 16.9164, 0.34", "62.1136, -66.0805, 15.7791, 0.45", "61.5198, -68.8532, 13.909, 0.45", "60.98, -71.4419, 12.1087, 0.45", "60.5011, -73.7952, 10.4973, 0.45", "60.0257, -76.8234, 8.16411, 0.45", "59.8943, -78.0744, 7.19497, 0.45", "59.824, -78.9732, 6.50478, 0.45", "59.6606, -81.3696, 4.75113, 0.45", "59.5489, -83.0146, 3.66252, 0.45", "59.2263, -87.5016, 0.861972, 0.45", "59.0797, -89.3623, -0.308302, 0.45", "59.0115, -90.546, -1.03678, 0.45", "58.8484, -92.982, -2.41431, 0.45", "58.7043, -95.576, -3.94054, 0.45", "58.6063, -97.1107, -5.00394, 0.45", "58.3808, -99.7307, -7.03579, 0.45", "58.261, -100.97, -8.10672, 0.45", "58.0993, -102.635, -9.79635, 0.45", "57.6732, -106.467, -14.1182, 0.45", "57.5174, -108.145, -16.3091, 0.45", "57.4247, -109.425, -18.0302, 0.45", "57.345, -110.997, -20.1129, 0.45", "57.2158, -114.142, -24.2445, 0.23", "57.1974, -114.913, -25.252, 0.23", "57.0933, -117.746, -28.5172, 0.23", "57.0998, -118.865, -29.7437, 0.23", "57.1918, -121.443, -32.6614, 0.45", "57.2443, -122.279, -33.6408, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "63.4542, -61.1201, 19.3021, 0.45", "65.1999, -63.6402, 19.4895, 0.45", "66.8898, -66.1339, 19.6346, 0.45", "68.2244, -68.1869, 19.728, 0.45", "69.8994, -70.8814, 19.9765, 0.45", "72.6417, -75.3108, 20.4839, 0.45", "74.4806, -78.281, 20.8241, 0.45", "75.5168, -80.0515, 20.9848, 0.45", "77.1717, -83.0747, 21.254, 0.45", "78.8308, -86.2571, 21.5258, 0.45", "80.3007, -89.0731, 21.9459, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-17.3009, -75.0565, -15.3438, 0.57", "-18.6316, -75.3279, -19.1477, 0.57", "-18.8218, -75.3667, -19.6912, 0.57", "-19.2344, -75.4509, -20.8705, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-17.3009, -75.0565, -15.3438, 0.68", "-17.7589, -76.2441, -15.956, 0.68", "-18.6137, -77.9033, -17.1928, 0.68", "-19.0942, -78.7017, -17.824, 0.68", "-19.5248, -79.3056, -18.3075, 0.68", "-20.6013, -80.5884, -19.5362, 0.68", "-21.1146, -81.1589, -20.105, 0.68", "-22.8012, -82.878, -21.9394, 0.68", "-23.382, -83.4922, -22.5358, 0.68", "-24.1267, -84.2694, -23.2094, 0.68", "-25.6695, -85.8782, -24.4849, 0.68", "-26.878, -87.1059, -25.3188, 0.68", "-28.8568, -89.1394, -26.5549, 0.68", "-30.5497, -90.8962, -27.4938, 0.68", "-32.3833, -92.8026, -28.444, 0.68", "-33.8408, -94.3421, -29.1551, 0.68", "-35.5593, -96.13, -29.8623, 0.68", "-37.1303, -97.6461, -30.476, 0.57", "-38.5436, -98.8689, -30.9669, 0.57", "-40.2906, -100.329, -31.6204, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-0.79855, -71.0894, 16.7805, 0.45", "-4.30292, -71.9946, 18.8589, 0.45", "-5.9233, -72.2389, 19.8778, 0.45", "-9.63575, -72.5721, 21.9329, 0.45", "-10.64, -72.6137, 22.514, 0.45", "-12.0372, -72.5828, 23.3114, 0.45", "-12.9606, -72.552, 24.1855, 0.45", "-13.9138, -72.4827, 25.4619, 0.45", "-14.7768, -72.3346, 26.8594, 0.45", "-15.7163, -72.0414, 28.2552, 0.45", "-16.3817, -71.7719, 29.2122, 0.45", "-20.499, -70.0298, 35.1606, 0.45", "-21.3949, -69.7007, 36.3847, 0.45", "-23.2046, -69.144, 38.648, 0.45", "-26.0308, -68.3752, 41.8973, 0.45", "-27.1184, -68.1902, 42.9619, 0.45", "-30.2833, -68.201, 45.5918, 0.45", "-31.723, -68.471, 46.4146, 0.45", "-32.5591, -68.7925, 46.8799, 0.34", "-33.4738, -69.3362, 47.3547, 0.34", "-35.9518, -71.0882, 48.3213, 0.34", "-38.1655, -72.7001, 48.8587, 0.34", "-39.7758, -73.8445, 49.0287, 0.34", "-41.6972, -75.111, 49.2483, 0.34", "-44.9444, -77.1372, 49.6729, 0.34", "-49.1817, -79.5784, 50.2724, 0.34", "-50.6528, -80.2915, 50.4561, 0.34", "-51.7034, -80.6984, 50.6828, 0.34", "-54.6884, -81.6951, 51.6126, 0.34", "-56.6949, -82.3451, 52.5316, 0.34", "-58.2324, -82.8433, 53.5392, 0.34", "-59.9148, -83.423, 54.9377, 0.34", "-62.0255, -84.2353, 56.6167, 0.34", "-64.6222, -85.3475, 58.6427, 0.34", "-67.4979, -86.7025, 60.7452, 0.34", "-70.3497, -88.1388, 62.7294, 0.34", "-72.1436, -89.1401, 63.8821, 0.34", "-74.7887, -90.8226, 65.4546, 0.34", "-76.2723, -91.8191, 66.1892, 0.34", "-77.2963, -92.5131, 66.6081, 0.34", "-80.3344, -94.5406, 67.4413, 0.34", "-82.1221, -95.7967, 67.8518, 0.34", "-84.4863, -97.4599, 68.421, 0.34", "-85.3963, -98.0732, 68.6823, 0.34", "-87.6221, -99.4737, 69.2108, 0.34", "-88.8124, -100.201, 69.4577, 0.34", "-91.1102, -101.573, 69.8385, 0.34", "-92.4571, -102.362, 70.0001, 0.34", "-93.9444, -103.201, 70.1027, 0.34", "-96.6076, -104.671, 70.2309, 0.34", "-98.8137, -105.818, 70.2932, 0.34", "-101.113, -106.883, 70.305, 0.34", "-103.29, -107.741, 70.2956, 0.34", "-104.961, -108.332, 70.3569, 0.34", "-106.601, -108.858, 70.4349, 0.34", "-108.186, -109.285, 70.5412, 0.34", "-109.506, -109.531, 70.6662, 0.34", "-111.955, -109.737, 71.0016, 0.34", "-113.69, -109.728, 71.3498, 0.34" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-0.79855, -71.0894, 16.7805, 2.72", "-0.0938304, -74.5668, 21.9357, 2.72", "0.293175, -76.0767, 24.1231, 1.47", "0.656058, -77.4237, 25.8433, 1.13", "1.86665, -81.858, 31.1096, 1.13", "2.08058, -82.7637, 32.027, 3.39", "2.42248, -84.6187, 33.5962, 1.81", "2.9481, -88.5653, 35.6466, 0.68", "3.11826, -90.777, 36.445, 0.68", "3.0928, -91.9768, 36.6362, 0.68", "2.75578, -95.5498, 36.6056, 0.68", "2.39058, -97.9822, 36.5393, 0.68", "1.94746, -100.109, 36.3898, 0.68", "1.40735, -102.495, 36.0849, 0.68", "0.764112, -105.253, 35.8374, 0.68", "0.378033, -106.968, 35.6754, 0.68", "-0.079566, -109.186, 35.5224, 0.68", "-0.450015, -111.16, 35.3616, 0.68", "-1.20211, -115.422, 35.0812, 0.68", "-1.34965, -116.407, 35.0966, 3.51", "-1.62036, -118.712, 35.2888, 1.7", "-1.85685, -120.484, 35.631, 0.79", "-2.18554, -122.539, 36.2347, 0.79", "-2.83547, -126.332, 37.6539, 0.68", "-3.44605, -129.888, 39.1717, 0.79", "-3.61237, -130.956, 39.6163, 0.45", "-4.00473, -133.983, 41.5935, 0.45", "-4.09585, -135.089, 42.4967, 0.45", "-4.11231, -135.898, 43.2655, 0.68", "-4.04659, -137.792, 45.3293, 0.68", "-3.96612, -138.771, 46.4282, 0.68", "-3.30781, -145.033, 53.597, 2.38", "-3.17752, -146.074, 54.854, 1.47", "-3.1135, -146.642, 55.54, 0.79", "-2.85818, -148.824, 58.1269, 0.79", "-2.66281, -150.45, 59.9419, 0.79", "-2.52443, -151.653, 61.0691, 2.15", "-2.06666, -155.421, 63.4385, 0.79", "-1.73377, -157.685, 64.7294, 0.68", "-1.4532, -159.322, 65.4535, 0.68", "-1.14617, -160.829, 65.91, 0.68", "-1.02769, -161.432, 66.0338, 0.68", "-0.70506, -163.276, 66.1272, 0.68", "-0.428684, -165.265, 65.9404, 0.68", "-0.236441, -168.79, 65.4987, 0.68", "-0.272355, -169.468, 65.3978, 2.6", "-0.430681, -170.625, 65.2197, 2.26", "-1.31856, -174.432, 64.6533, 0.45", "-1.72279, -175.627, 64.4903, 0.45", "-2.4551, -177.408, 64.2264, 0.45", "-3.62745, -179.973, 63.8466, 0.45", "-4.79614, -182.396, 63.5525, 0.45", "-6.14998, -185.091, 63.3202, 0.45", "-7.64011, -187.946, 63.172, 0.45", "-9.08047, -190.73, 62.9924, 2.38", "-9.41658, -191.402, 62.943, 3.51", "-11.0553, -194.666, 62.7116, 0.57", "-11.7819, -196.115, 62.6017, 1.24" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-2.38897, -58.4687, 19.6263, 0.45", "-1.3844, -57.9574, 18.296, 0.45", "-0.713943, -57.6722, 17.5868, 0.45", "0.308644, -57.3503, 16.6186, 0.45", "3.15161, -56.7271, 14.2855, 0.45", "5.7489, -56.2402, 12.2715, 0.45", "8.2579, -55.7698, 10.3591, 0.45", "10.8531, -55.2412, 7.98458, 0.45", "13.1409, -54.7525, 5.85405, 0.45", "14.9268, -54.3822, 4.22187, 0.45", "18.3015, -53.7246, 1.23276, 0.45", "20.6278, -53.2499, -0.830723, 0.45", "25.0497, -52.1341, -5.08026, 0.45", "26.5426, -51.6826, -6.93372, 0.45", "26.6955, -51.6213, -7.14947, 0.45", "26.9318, -51.5073, -7.56297, 0.45", "27.9004, -51.1015, -9.29847, 0.45", "30.0411, -50.5897, -13.286, 0.45", "31.2414, -50.4749, -15.2948, 0.45", "31.8724, -50.4577, -16.3405, 0.45", "33.375, -50.5279, -18.8229, 0.45", "34.3293, -50.6541, -20.3557, 0.45", "36.655, -51.0506, -23.9802, 0.45", "38.2169, -51.2524, -26.0141, 0.45", "38.8422, -51.3298, -26.7617, 0.45", "39.5575, -51.3803, -27.5455, 0.45", "40.3773, -51.3405, -28.3045, 0.45", "41.5696, -51.0807, -29.2545, 0.45", "43.6982, -50.2904, -30.3739, 0.45", "44.6624, -49.9128, -30.9515, 0.45", "47.4592, -48.7969, -32.7284, 0.45", "48.7585, -48.2731, -33.6277, 0.45", "49.8863, -47.855, -34.4319, 0.45", "52.0292, -47.1733, -35.9532, 0.45", "57.1192, -45.8965, -39.4097, 0.45", "57.7353, -45.7611, -39.8322, 0.45", "59.6398, -45.4583, -41.2011, 0.45", "60.9518, -45.3151, -42.1994, 0.45", "61.5526, -45.2778, -42.6722, 0.45", "63.7085, -45.2037, -44.3437, 0.45", "65.4884, -45.1279, -44.8585, 0.45" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-83.4304, -200.41, 101.505, 0.57", "-84.5704, -201.43, 101.591, 0.57", "-87.8396, -204.004, 101.755, 0.57", "-90.5976, -205.967, 101.85, 0.45", "-93.1023, -207.579, 102.192, 0.45", "-95.0513, -208.763, 102.538, 0.45", "-96.7838, -209.781, 102.932, 0.45", "-98.7671, -210.861, 103.416, 0.45", "-100.89, -211.835, 104.018, 0.45", "-106.581, -214.175, 105.901, 0.45", "-107.64, -214.607, 106.314, 0.45", "-109.552, -215.467, 107.186, 0.45" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-83.4304, -200.41, 101.505, 0.57", "-84.3697, -205.378, 102.611, 0.57", "-84.7047, -207.073, 103.013, 0.57", "-85.1098, -209.204, 103.491, 0.57", "-85.6546, -212.076, 104.099, 0.57", "-86.0109, -214.054, 104.578, 0.57", "-86.1694, -215.053, 104.819, 0.57", "-86.1974, -215.236, 104.877, 2.04", "-86.702, -217.744, 105.31, 0.57", "-86.9549, -218.599, 105.367, 0.57", "-87.4801, -219.818, 105.308, 1.92", "-89.0916, -222.896, 105.471, 0.68", "-89.8733, -224.246, 105.62, 0.68", "-92.0854, -227.774, 106.013, 0.57", "-93.5991, -230.193, 106.679, 0.57", "-95.6686, -233.706, 108.058, 0.57", "-98.3787, -239.089, 110.546, 0.57", "-98.7173, -239.92, 110.997, 0.57", "-99.2433, -241.722, 111.988, 0.45", "-100.5, -248.853, 116.342, 0.45", "-100.641, -250.024, 117.048, 0.45", "-101.025, -253.589, 119.075, 0.45", "-101.353, -256.28, 120.279, 0.45", "-101.723, -258.491, 121.412, 0.45", "-102.819, -262.856, 123.697, 0.45", "-103.486, -264.592, 124.571, 0.45", "-104.177, -266.068, 125.472, 0.45", "-104.464, -266.587, 125.851, 0.45", "-106.799, -270.471, 129.074, 0.11", "-108.165, -272.624, 131.026, 0.23", "-110.171, -275.817, 133.744, 0.23", "-110.993, -277.193, 135.024, 0.23" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "80.3007, -89.0731, 21.9459, 0.34", "81.7808, -91.3514, 22.0249, 0.34", "83.5624, -94.0939, 22.12, 0.34", "85.3112, -96.7859, 22.2133, 0.34", "86.5681, -98.7206, 22.2803, 0.34", "87.2463, -99.7647, 22.3165, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "80.3007, -89.0731, 21.9459, 0.45", "82.8243, -87.8384, 21.4388, 0.45", "84.713, -86.8964, 20.9594, 0.45", "87.5784, -85.4994, 20.2121, 0.45", "89.5589, -84.5036, 19.7339, 0.45", "93.5126, -82.5018, 18.8239, 0.45", "96.1821, -81.2177, 18.2606, 0.45", "98.2418, -80.309, 17.9103, 0.45", "101.054, -79.1416, 17.4135, 0.45", "104.307, -77.8, 16.7524, 0.45", "104.706, -77.6284, 16.6483, 1.58", "107.696, -76.2935, 15.8355, 0.34", "110.109, -75.2598, 15.0288, 0.34", "114.129, -73.5399, 13.3327, 0.34", "116.379, -72.5985, 12.172, 0.34", "118.749, -71.932, 10.8337, 0.34", "120.254, -71.6359, 9.88349, 0.34", "121.96, -71.5102, 8.81129, 0.34", "124.617, -71.7647, 7.21389, 0.34", "126.688, -72.237, 6.18272, 0.34", "132.418, -73.966, 3.7018, 0.34", "135.467, -74.9984, 2.36782, 0.34", "138.645, -76.1445, 0.958931, 0.34", "143.531, -78.05, -1.13182, 0.34", "146.474, -79.3372, -2.36737, 0.34", "149.628, -80.7963, -3.72839, 0.34", "152.753, -82.2614, -4.91882, 0.34", "155.876, -83.6774, -5.90839, 0.34", "157.326, -84.2434, -6.26203, 0.34", "159.08, -84.8774, -6.46821, 0.34", "161.113, -85.6167, -6.56891, 0.34", "162.7, -86.1611, -6.54381, 0.34", "164.549, -86.74, -6.42598, 0.34", "171.003, -88.6407, -6.02058, 0.34", "174.052, -89.4527, -5.83785, 0.34", "177.123, -90.2399, -5.66361, 0.34", "179.963, -90.9816, -5.51926, 0.34", "184.669, -92.2355, -5.39681, 0.34", "188.366, -93.2083, -5.33316, 0.34", "190.686, -93.7717, -5.33316, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-113.69, -109.728, 71.3498, 0.34", "-114.841, -110.213, 72.0017, 0.34", "-117.257, -111.441, 72.9718, 0.34", "-118.229, -111.988, 73.2403, 2.04", "-119.194, -112.56, 73.4565, 1.13", "-120.732, -113.59, 73.7847, 0.79", "-121.796, -114.336, 73.8288, 0.57", "-123.696, -115.673, 73.6441, 0.57", "-127.72, -118.474, 72.8857, 0.57", "-129.562, -119.676, 72.6548, 0.57", "-132.506, -121.493, 72.4431, 0.57", "-137.823, -124.59, 72.3197, 0.57", "-140.828, -126.166, 72.3069, 0.57", "-142.254, -126.839, 72.3287, 0.57", "-148.114, -129.382, 72.591, 0.57", "-149.83, -130.094, 72.7262, 0.57", "-151.417, -130.777, 72.9677, 0.57", "-153.884, -131.971, 73.5194, 0.57", "-156.371, -133.331, 74.1556, 0.57", "-158.015, -134.318, 74.6262, 0.57", "-160.005, -135.703, 75.2122, 0.57", "-164.904, -139.339, 76.8836, 0.57", "-167.449, -141.272, 77.8275, 0.57", "-170.81, -143.885, 79.1344, 0.57", "-173.43, -145.927, 80.153, 0.57", "-176.128, -147.958, 81.155, 0.57", "-177.957, -149.354, 81.8416, 0.57", "-179.769, -150.728, 82.4409, 0.57", "-182.019, -152.434, 83.1974, 0.57", "-183.311, -153.392, 83.548, 0.57", "-184.779, -154.434, 83.9342, 0.57", "-187.733, -156.469, 84.7461, 0.57", "-190.527, -158.436, 85.3671, 0.57", "-192.52, -159.853, 85.6945, 0.57", "-195.019, -161.618, 85.9603, 0.57", "-197.076, -163.096, 86.058, 0.57", "-198.474, -164.106, 86.0393, 0.57", "-201.154, -165.976, 85.556, 0.57", "-203.181, -167.377, 84.99, 0.57", "-205.517, -168.915, 83.9272, 0.57", "-207.529, -170.2, 82.6141, 0.57", "-209.675, -171.504, 80.9309, 0.57", "-213.096, -173.387, 77.8405, 0.57", "-214.396, -174.044, 76.6775, 0.57", "-218.955, -176.157, 72.6716, 0.57", "-222.262, -177.597, 69.7754, 0.57", "-223.358, -178.092, 68.8632, 0.57", "-226.381, -179.635, 66.6853, 0.57", "-229.737, -181.887, 65.3175, 0.57", "-231.803, -183.63, 65.0176, 0.57", "-232.522, -184.356, 65.1446, 0.57", "-234.128, -186.088, 65.6348, 0.57", "-235.054, -187.101, 65.9125, 0.57", "-237.934, -190.52, 66.6076, 0.57", "-239.805, -192.847, 66.5965, 0.57", "-240.72, -194.0, 66.3336, 0.45", "-241.543, -195.078, 65.925, 0.45", "-242.742, -196.839, 64.8693, 0.45", "-244.029, -199.222, 62.8243, 0.45", "-244.809, -201.119, 60.768, 0.45", "-245.8, -204.101, 57.3031, 0.45", "-246.259, -205.673, 55.4626, 0.45", "-246.835, -208.042, 52.9345, 0.45", "-247.399, -210.734, 50.4056, 0.45", "-247.92, -212.773, 48.8329, 0.45", "-248.154, -213.595, 48.3541, 0.45", "-248.669, -215.063, 47.784, 0.45", "-249.961, -218.029, 46.9205, 0.45", "-251.004, -220.051, 46.6037, 0.45", "-252.61, -222.747, 46.429, 0.45", "-254.213, -225.146, 46.6087, 0.45", "-255.902, -227.444, 47.0072, 0.45", "-257.073, -228.852, 47.4675, 0.45", "-257.918, -229.767, 47.9913, 0.45", "-258.816, -230.725, 48.8176, 0.45", "-261.736, -234.141, 52.0312, 0.45", "-262.319, -234.853, 52.6991, 0.45", "-263.249, -236.168, 54.1514, 0.45", "-264.817, -238.744, 56.9798, 0.45", "-266.057, -241.177, 59.5252, 0.45", "-267.41, -244.423, 62.5714, 0.45", "-268.038, -246.191, 63.9114, 0.45", "-271.269, -254.882, 69.5913, 0.45", "-272.139, -257.18, 70.8077, 0.45", "-273.313, -260.181, 71.6519, 0.45", "-275.0, -264.393, 72.0233, 0.45", "-277.517, -270.783, 71.7634, 0.45", "-279.518, -276.037, 70.9398, 0.45", "-281.271, -280.706, 69.5566, 0.45", "-285.084, -291.384, 65.9622, 0.45", "-285.62, -292.967, 65.3429, 0.45", "-286.771, -296.895, 63.6661, 0.45", "-287.33, -299.442, 62.2953, 0.45", "-287.891, -303.019, 60.2606, 0.45", "-288.253, -305.767, 58.7192, 0.45", "-288.497, -307.25, 58.0992, 0.45", "-288.954, -309.33, 57.2331, 0.45", "-291.14, -317.011, 54.4768, 0.45", "-292.502, -321.114, 53.7519, 0.45", "-293.11, -322.754, 53.7727, 0.45", "-295.478, -328.585, 54.4714, 0.45", "-296.696, -331.408, 55.0722, 0.45", "-298.837, -335.772, 56.2766, 0.45", "-301.487, -340.768, 58.3997, 0.45", "-302.662, -342.976, 59.1543, 0.45", "-304.038, -346.091, 59.8185, 0.45", "-304.376, -347.491, 59.8516, 0.45", "-304.713, -352.435, 59.1607, 0.45", "-304.474, -358.201, 57.4605, 0.45", "-303.166, -367.104, 53.6908, 0.45", "-301.518, -373.023, 50.9444, 0.45", "-300.031, -376.457, 49.2961, 0.45", "-299.672, -377.085, 48.9671, 0.45" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-113.69, -109.728, 71.3498, 0.34", "-112.059, -108.829, 72.8431, 0.34", "-110.89, -108.184, 73.9132, 0.34", "-106.36, -105.686, 78.06, 0.34", "-105.11, -104.998, 79.2036, 0.34" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-11.7819, -196.115, 62.6017, 0.57", "-13.2742, -197.033, 63.3499, 0.57", "-15.7106, -198.751, 63.9997, 0.57", "-17.0216, -199.81, 64.2018, 0.57", "-18.7586, -201.378, 64.0819, 0.57", "-20.371, -202.971, 63.8481, 0.57", "-23.2447, -205.895, 63.3493, 0.57", "-24.8115, -207.587, 62.9507, 0.57", "-26.5736, -209.554, 62.3976, 0.57", "-29.7514, -213.119, 61.424, 0.57", "-33.3257, -217.036, 60.3577, 0.57", "-35.7372, -219.637, 59.7896, 0.57", "-36.5823, -220.525, 59.6641, 2.15", "-37.3514, -221.293, 59.6041, 1.36", "-38.9919, -222.831, 59.7262, 0.68", "-39.8971, -223.624, 60.0002, 0.68", "-40.9576, -224.488, 60.4949, 0.57", "-41.554, -224.961, 60.8684, 0.57", "-43.1154, -226.205, 61.9496, 0.57", "-44.8514, -227.556, 63.1961, 0.57", "-45.9983, -228.46, 64.0151, 0.57", "-47.41, -229.654, 64.8889, 0.57", "-48.7786, -230.843, 65.4753, 0.57", "-49.3156, -231.332, 65.6326, 0.57", "-50.1126, -232.102, 65.748, 0.57", "-51.1913, -233.171, 65.8028, 0.57", "-54.3838, -236.315, 65.8456, 0.57", "-56.397, -238.306, 65.7216, 0.57", "-58.0962, -239.994, 65.5624, 0.57", "-60.2384, -242.039, 65.3469, 0.57", "-63.0229, -244.613, 65.1607, 0.57", "-66.6753, -247.735, 65.0416, 0.57", "-68.1919, -248.94, 64.9753, 1.7", "-69.5666, -249.987, 64.9147, 1.7", "-70.921, -250.966, 64.763, 0.68", "-73.4127, -252.653, 64.3879, 0.68", "-74.9615, -253.715, 64.0976, 0.68", "-77.387, -255.453, 63.6364, 0.68", "-78.0479, -255.963, 63.4948, 1.7", "-79.0814, -256.881, 63.2076, 1.7", "-79.7578, -257.569, 62.9861, 1.7", "-80.5304, -258.474, 62.7032, 0.68", "-82.3073, -260.835, 62.0877, 0.68", "-84.0013, -263.255, 61.5921, 0.68", "-85.3335, -265.292, 61.3039, 0.68", "-85.9434, -266.299, 61.212, 0.68", "-87.3119, -268.723, 61.1052, 0.68", "-88.5472, -271.024, 61.125, 0.68", "-89.1298, -272.196, 61.2259, 0.68", "-90.4853, -275.037, 61.7075, 0.68", "-90.8671, -275.872, 61.8768, 0.68", "-91.3187, -276.888, 62.1015, 1.02", "-91.7701, -277.941, 62.3268, 0.45", "-92.3828, -279.595, 62.6095, 0.45", "-92.5502, -280.101, 62.6522, 0.45", "-93.0408, -281.623, 62.7038, 0.45", "-93.6233, -283.42, 62.7763, 0.45", "-94.267, -285.473, 62.8615, 0.45", "-94.9863, -287.842, 62.9543, 0.45", "-95.6124, -289.974, 63.0654, 0.45", "-96.6004, -293.296, 63.2408, 0.45", "-96.8804, -294.309, 63.2964, 0.45", "-97.1932, -295.567, 63.3666, 1.47", "-97.2982, -296.0, 63.3918, 1.47", "-97.8165, -298.096, 63.4253, 0.68", "-98.4308, -300.606, 63.4068, 0.57", "-98.9574, -302.869, 63.4257, 0.57", "-99.4713, -304.994, 63.5608, 0.57", "-99.6249, -305.598, 63.6227, 0.57", "-100.109, -307.465, 63.9689, 0.57", "-100.656, -309.535, 64.6781, 0.57", "-101.061, -311.332, 65.5079, 1.7", "-101.624, -314.199, 66.957, 0.68", "-101.848, -315.633, 67.7129, 0.68", "-102.191, -318.296, 69.0925, 0.68", "-102.673, -322.201, 70.9758, 0.68", "-103.057, -324.911, 72.0729, 0.68", "-103.236, -325.937, 72.3988, 2.15", "-103.364, -326.567, 72.5507, 2.15", "-103.857, -328.673, 72.836, 0.68", "-104.552, -331.095, 72.9971, 0.68", "-105.049, -332.644, 73.0995, 0.68", "-105.803, -334.751, 73.3607, 0.68", "-106.6, -337.003, 73.6311, 0.68", "-107.328, -339.213, 73.8837, 0.68", "-108.312, -342.665, 74.2572, 0.68", "-108.834, -344.932, 74.4835, 0.68", "-109.184, -346.665, 74.5923, 0.68", "-109.649, -349.284, 74.6323, 0.68", "-109.808, -350.329, 74.5993, 0.68", "-110.143, -352.991, 74.3846, 0.68", "-110.317, -354.699, 74.1352, 0.68", "-110.541, -356.839, 73.8072, 0.68", "-110.807, -358.894, 73.5751, 0.68", "-111.093, -360.551, 73.4882, 0.68", "-111.318, -361.611, 73.4345, 0.68", "-111.612, -362.775, 73.4482, 0.68", "-111.727, -363.197, 73.4812, 0.68", "-112.286, -365.167, 73.7344, 0.68", "-112.911, -367.437, 74.1227, 0.68", "-113.314, -369.085, 74.4366, 0.68", "-113.822, -371.389, 74.8759, 0.68", "-114.246, -373.594, 75.351, 0.68", "-114.342, -374.184, 75.5189, 0.68", "-114.545, -375.658, 75.9923, 0.57", "-114.717, -376.983, 76.421, 0.57", "-115.028, -379.452, 77.2211, 0.57", "-115.271, -381.767, 78.0565, 0.57", "-115.561, -384.301, 79.1077, 0.57", "-115.868, -386.84, 80.1738, 0.57", "-116.195, -389.17, 81.0399, 0.57", "-116.431, -390.802, 81.5146, 1.47", "-116.922, -394.117, 82.2584, 0.45", "-117.186, -395.729, 82.4759, 0.45", "-117.701, -399.129, 82.6825, 0.45", "-118.024, -401.921, 82.8579, 0.45", "-118.286, -405.154, 83.0089, 0.45", "-118.177, -407.771, 83.1469, 0.45", "-118.962, -407.009, 81.7989, 0.45", "-120.331, -404.637, 79.6704, 0.45" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-11.7819, -196.115, 62.6017, 0.57", "-12.5319, -197.621, 62.7839, 0.57", "-13.0319, -198.623, 62.9033, 0.57", "-13.7112, -200.033, 63.0623, 0.57", "-14.7376, -202.163, 63.3025, 0.57", "-15.9641, -204.708, 63.5895, 0.57", "-16.7244, -206.286, 63.7674, 2.15", "-17.4157, -207.671, 63.9141, 2.72", "-17.929, -208.757, 64.0431, 2.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "87.2463, -99.7647, 22.3165, 0.45", "91.9178, -100.204, 22.0298, 0.45", "93.0309, -100.302, 22.0503, 0.45", "95.083, -100.367, 22.1811, 0.45", "97.7938, -100.408, 22.4015, 0.45", "100.271, -100.454, 22.6162, 0.45", "103.512, -100.453, 22.8933, 0.45", "104.642, -100.415, 23.0555, 0.45", "107.843, -100.15, 23.4187, 0.45", "110.336, -99.7967, 23.6223, 0.45", "112.3, -99.3756, 23.6956, 0.45", "115.043, -98.5199, 23.5261, 0.45", "116.84, -97.798, 23.2494, 0.45", "118.792, -96.9088, 22.8597, 0.45", "120.786, -95.9353, 22.2698, 0.45", "122.997, -94.7584, 21.3886, 0.45", "126.101, -92.9923, 20.0014, 0.45", "127.362, -92.2675, 19.3623, 0.45", "128.698, -91.51, 18.6225, 0.45", "131.959, -89.7805, 16.7076, 0.45", "133.35, -89.1279, 15.7572, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "87.2463, -99.7647, 22.3165, 0.34", "87.1844, -103.156, 21.1498, 0.34", "87.0689, -104.462, 20.6444, 0.34", "86.7879, -106.645, 19.7662, 0.34", "86.2154, -110.629, 18.1362, 0.34", "85.5455, -114.229, 16.4684, 0.34", "84.692, -117.944, 14.6955, 0.34", "83.3307, -121.691, 12.8455, 0.34", "83.0977, -122.168, 12.603, 0.34", "82.9278, -122.428, 12.455, 1.58", "80.5996, -125.291, 10.8758, 0.45", "79.5053, -126.557, 10.0969, 0.45", "76.7581, -129.746, 7.9442, 0.45", "75.8613, -130.868, 7.18239, 0.45", "73.6835, -133.914, 5.13674, 0.45", "72.97, -135.028, 4.44012, 0.45", "71.2221, -138.254, 2.61762, 0.45", "70.5031, -139.825, 1.68838, 0.45", "69.3549, -142.956, -0.0239414, 0.45", "68.6799, -144.96, -1.0448, 0.45", "67.8421, -147.666, -2.2462, 0.45", "66.6371, -151.782, -4.11681, 0.45", "65.7859, -154.724, -5.36544, 0.45", "64.7347, -158.52, -6.95573, 0.45", "63.8366, -161.615, -8.16022, 0.45", "63.0595, -164.297, -9.22827, 0.45", "62.1372, -167.375, -10.4777, 0.45", "61.2245, -170.175, -11.5447, 0.45", "60.564, -171.877, -12.1325, 0.45", "59.3837, -174.556, -13.2846, 0.45", "58.9427, -175.52, -13.713, 0.45", "57.6392, -178.215, -14.9535, 0.45", "56.846, -179.807, -15.6524, 0.45", "55.7184, -182.066, -16.6983, 0.45", "53.6797, -186.265, -19.0676, 0.45", "52.5595, -188.761, -20.6236, 0.45", "51.9625, -190.207, -21.5395, 0.45", "51.54, -191.46, -22.2934, 0.45", "51.2413, -192.494, -22.9426, 0.45", "50.0751, -196.901, -25.6057, 0.45", "49.5287, -198.963, -26.7541, 0.45", "49.2216, -200.186, -27.4757, 0.45", "48.6994, -202.353, -28.7108, 0.45", "47.8983, -205.793, -31.1263, 0.45", "47.5325, -207.406, -32.3083, 0.45", "47.2734, -208.59, -33.1143, 0.45", "46.9725, -209.936, -34.0204, 0.45", "46.3587, -212.654, -35.8779, 0.45", "44.9923, -219.21, -39.3993, 0.45", "44.4718, -221.971, -40.2112, 0.45", "43.9164, -225.027, -40.5483, 0.45", "43.1685, -228.466, -40.1212, 0.45", "42.7632, -229.957, -39.6266, 0.45", "39.7975, -238.788, -34.9526, 0.45", "38.7939, -241.332, -33.2337, 0.45", "38.5901, -241.774, -32.9144, 0.45", "37.2304, -244.348, -31.1177, 0.45", "36.119, -246.349, -29.9269, 0.45", "34.8307, -248.609, -29.1016, 0.45", "34.5641, -249.071, -29.0911, 0.45", "33.7411, -250.596, -29.3008, 0.45", "32.53, -253.067, -29.8815, 0.45", "31.6869, -254.987, -30.4804, 0.45", "30.5058, -257.901, -31.4794, 0.45", "29.3403, -261.018, -32.5852, 0.45", "27.5859, -266.467, -34.3363, 0.45", "27.1135, -268.113, -34.8253, 0.45", "26.6651, -269.77, -35.2984, 0.45", "26.1626, -271.702, -35.8011, 0.45", "25.6675, -273.868, -36.2071, 0.45", "24.8911, -278.379, -36.8083, 0.45", "24.7742, -279.526, -36.7754, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-17.929, -208.757, 64.0431, 0.45", "-19.2533, -210.65, 63.8978, 0.45", "-20.2863, -212.167, 63.8004, 0.45", "-21.2319, -213.57, 63.7189, 0.45", "-22.6254, -215.76, 63.621, 0.45", "-23.4548, -217.033, 63.5799, 0.45", "-24.7252, -218.966, 63.5915, 0.45", "-26.0081, -221.038, 63.6992, 0.45", "-26.3475, -221.581, 63.7386, 1.47", "-27.6226, -223.518, 63.9554, 0.45", "-28.4347, -224.753, 64.14, 0.45", "-29.2374, -226.011, 64.4357, 0.45", "-29.7877, -226.952, 64.7125, 0.45", "-30.8804, -229.023, 65.4261, 0.45", "-31.6212, -230.509, 65.9605, 0.79", "-32.2796, -231.929, 66.4761, 0.79", "-33.4147, -234.644, 67.5009, 0.45", "-34.2535, -236.708, 68.2714, 0.45", "-35.2251, -239.316, 69.2768, 0.45", "-35.5186, -240.193, 69.6735, 0.45", "-35.7837, -241.038, 70.0739, 1.92", "-36.2338, -242.601, 70.9827, 1.47", "-36.5734, -243.943, 71.8264, 0.57", "-36.8535, -245.223, 72.6917, 0.57", "-37.2634, -247.392, 74.3461, 0.57", "-37.5326, -249.086, 75.6322, 0.57", "-38.1217, -252.801, 78.3359, 0.57", "-38.2422, -253.614, 78.8636, 0.57", "-38.51, -255.291, 79.7911, 0.57", "-39.0644, -258.27, 80.9968, 0.57", "-39.4017, -259.964, 81.4063, 0.57", "-39.733, -261.607, 81.4872, 0.57", "-40.1826, -263.718, 81.4156, 0.57", "-40.8567, -266.677, 81.4477, 0.57", "-41.6102, -269.744, 81.5746, 0.57", "-42.2931, -272.502, 81.6836, 0.57", "-43.4584, -277.08, 81.9666, 0.57", "-44.4467, -280.486, 82.0721, 0.57", "-45.5169, -283.606, 82.0833, 0.23", "-46.1964, -285.395, 82.1059, 0.23", "-47.0052, -287.302, 82.1484, 0.23", "-48.0706, -289.68, 82.1906, 0.23", "-49.5531, -292.81, 82.2474, 0.23", "-50.1784, -294.011, 82.0059, 0.23", "-51.084, -295.541, 81.5693, 1.7", "-52.2313, -297.194, 81.1888, 0.68", "-53.403, -298.6, 80.9607, 0.45", "-54.1166, -299.329, 80.9741, 0.45", "-57.3073, -301.844, 81.7093, 0.45", "-59.9325, -303.36, 82.4391, 0.45", "-61.7981, -304.2, 82.9715, 0.45", "-63.0403, -304.69, 83.4168, 0.45", "-64.2578, -305.214, 83.8174, 0.45", "-66.2472, -306.442, 84.4099, 0.45", "-66.514, -306.663, 84.4815, 0.45", "-67.1131, -307.261, 84.513, 1.92", "-68.523, -308.948, 84.4505, 0.57", "-70.0699, -311.094, 84.3334, 0.57", "-71.3774, -313.157, 84.0654, 0.45", "-72.0435, -314.322, 83.8824, 0.45", "-73.3614, -316.658, 83.5351, 0.45", "-74.3023, -318.393, 83.312, 0.57", "-74.8494, -319.442, 83.182, 0.57", "-76.1654, -322.049, 82.895, 0.57", "-77.9606, -325.518, 82.4484, 0.57", "-78.765, -327.092, 82.237, 0.57", "-80.5314, -330.586, 81.7589, 0.57" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-17.929, -208.757, 64.0431, 0.45", "-17.274, -211.081, 64.339, 0.45", "-16.9704, -212.093, 64.4563, 0.45", "-15.9006, -215.6, 65.1492, 0.45", "-14.9473, -218.896, 65.9295, 0.45", "-14.2139, -221.594, 66.5187, 0.45", "-14.1858, -221.694, 66.5365, 1.81", "-13.8138, -222.974, 66.7387, 1.7", "-12.8948, -226.251, 67.2367, 0.68", "-12.3348, -228.124, 67.4803, 0.68", "-11.5628, -230.503, 67.8694, 0.68", "-10.5877, -233.337, 68.3495, 0.68", "-9.94823, -235.021, 68.5872, 0.68", "-8.98507, -237.281, 68.8389, 0.68", "-7.90792, -239.509, 69.0081, 0.68", "-6.54388, -242.091, 69.2427, 0.68", "-4.99721, -244.835, 69.5336, 0.68", "-3.07614, -248.116, 69.8289, 0.68", "-1.83456, -250.239, 69.8116, 0.68", "-0.5575, -252.439, 69.6095, 0.68", "0.317268, -253.993, 69.3542, 0.68", "1.32977, -255.948, 68.917, 0.68", "3.21713, -259.844, 67.9642, 0.68", "5.06871, -263.845, 66.9945, 0.57", "5.81978, -265.521, 66.6036, 0.57", "6.80693, -267.77, 66.1134, 0.57", "8.0031, -270.425, 65.4878, 0.57", "9.37763, -273.396, 64.7821, 0.57", "11.0237, -276.837, 64.0286, 0.57", "12.0094, -278.714, 63.728, 0.57", "12.771, -280.119, 63.5007, 0.57", "14.5289, -283.216, 63.1837, 0.57", "14.982, -283.945, 63.14, 0.57", "15.9305, -285.43, 63.1405, 0.57", "17.3529, -287.664, 63.4654, 0.57", "17.7786, -288.319, 63.6057, 2.6", "19.2584, -290.611, 64.1977, 2.04", "21.1802, -293.656, 64.7743, 0.57", "21.9872, -294.928, 64.8499, 0.57", "23.6855, -297.699, 65.4142, 0.57", "24.8549, -299.705, 65.9663, 0.57", "26.2165, -302.091, 66.8182, 0.57", "28.3001, -305.882, 68.3058, 0.57", "29.8461, -308.918, 69.669, 0.57", "34.0162, -317.439, 72.9121, 0.57", "36.295, -322.41, 74.4408, 0.57", "37.5127, -325.261, 75.252, 0.57", "38.5092, -327.723, 75.8098, 0.57", "39.0643, -329.213, 76.0537, 0.57", "41.2745, -335.665, 75.7528, 0.57", "42.2596, -338.466, 74.9481, 0.57", "42.6755, -339.69, 74.5217, 0.57", "43.4214, -341.862, 73.7124, 0.45", "43.7933, -342.88, 73.3847, 0.45", "44.6305, -344.913, 73.0286, 0.45", "45.5375, -347.04, 73.1349, 0.45", "45.9809, -348.031, 73.2208, 0.45", "46.4769, -349.153, 73.3473, 0.45", "46.923, -350.192, 73.4646, 0.45", "47.9972, -352.686, 73.7107, 0.45", "48.722, -354.429, 73.9073, 0.45", "49.5622, -356.548, 74.1401, 0.45", "50.6369, -359.178, 74.4071, 0.45", "51.5369, -361.431, 74.595, 0.45", "51.8592, -362.296, 74.6611, 0.45", "52.6733, -364.546, 74.783, 0.45", "54.0481, -368.395, 75.011, 0.45", "55.14, -371.492, 75.2122, 0.45", "56.2468, -374.725, 75.4583, 0.45", "57.2232, -377.64, 75.7327, 0.45" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "133.35, -89.1279, 15.7572, 0.45", "133.912, -90.0195, 13.6472, 0.45", "134.433, -90.8688, 12.0348, 0.45", "135.108, -91.8991, 10.327, 0.45", "135.67, -92.8495, 8.78638, 0.45", "137.885, -97.324, 1.58827, 0.45", "139.126, -100.131, -2.84784, 0.45", "139.725, -101.835, -5.76109, 0.45", "139.914, -102.564, -6.99823, 0.45", "140.431, -105.117, -11.0029, 0.45", "140.787, -106.927, -13.5701, 0.45", "140.847, -107.224, -13.889, 0.45", "141.413, -109.735, -16.3411, 0.45", "141.862, -111.501, -18.087, 0.45", "142.393, -113.23, -19.4519, 0.45", "143.117, -114.918, -20.5212, 0.34", "144.011, -116.67, -21.4967, 0.34", "144.604, -117.756, -22.0447, 0.34", "145.091, -118.577, -22.3962, 0.34", "146.78, -121.191, -23.4894, 0.34", "148.847, -124.551, -24.9127, 0.34", "149.438, -125.574, -25.2572, 0.34", "149.854, -126.343, -25.6181, 0.34", "150.636, -127.873, -26.4583, 0.34", "151.055, -128.72, -26.9658, 0.34", "151.873, -130.42, -28.0841, 0.34", "152.573, -131.966, -28.9622, 0.34", "154.414, -136.056, -31.6229, 0.34", "155.214, -137.802, -32.9023, 0.34", "155.415, -138.241, -33.263, 0.34" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "133.35, -89.1279, 15.7572, 0.45", "135.402, -89.7339, 15.7036, 0.45", "137.032, -90.4106, 15.4925, 0.45", "138.979, -91.3528, 15.1877, 0.45", "141.517, -92.889, 14.3608, 0.45", "143.236, -94.1422, 13.6581, 0.45", "145.705, -96.1384, 12.5806, 0.45", "148.103, -98.4874, 11.3836, 0.34", "149.094, -99.5933, 10.8724, 0.34", "152.52, -103.75, 8.88926, 0.34", "154.569, -106.303, 7.62698, 0.34", "156.035, -108.123, 6.7883, 0.34", "157.404, -109.849, 6.09567, 0.34", "159.267, -112.132, 5.40322, 0.34", "161.319, -114.663, 4.81574, 0.34", "162.921, -116.603, 4.61103, 0.34", "164.451, -118.449, 4.44698, 0.34", "165.817, -120.177, 4.40547, 0.34", "166.879, -121.544, 4.5366, 0.34", "167.936, -122.967, 4.90172, 0.34", "169.062, -124.505, 5.35858, 0.34", "170.479, -126.381, 5.88449, 0.34", "173.153, -129.748, 6.72535, 0.45", "175.423, -132.39, 7.3803, 0.45", "177.584, -134.741, 8.05489, 0.45", "180.218, -137.493, 8.87604, 0.45", "181.53, -138.758, 9.20114, 0.45", "183.077, -140.181, 9.48547, 0.45", "183.951, -140.961, 9.55135, 0.45", "187.733, -144.332, 9.56203, 0.45", "190.289, -146.639, 9.5124, 0.45", "192.733, -148.955, 9.56553, 0.45", "193.766, -149.955, 9.56924, 0.45", "197.226, -153.256, 9.61952, 0.45", "198.827, -154.821, 9.69493, 0.45", "200.974, -156.974, 9.93222, 0.45", "202.276, -158.285, 10.238, 0.45", "203.181, -159.216, 10.5076, 0.45", "205.482, -161.583, 11.2195, 0.45", "207.815, -164.043, 12.0223, 0.45", "209.843, -166.268, 12.5125, 0.45", "212.0, -168.725, 12.7844, 0.45", "213.597, -170.576, 12.7003, 0.45", "215.249, -172.572, 12.3527, 0.45", "216.481, -174.107, 11.9036, 0.45", "218.907, -177.167, 10.8051, 0.45", "220.235, -178.889, 10.1708, 0.45", "222.499, -181.883, 9.16352, 0.45", "224.623, -184.636, 8.36896, 0.45", "225.974, -186.327, 7.92153, 0.45", "227.207, -187.837, 7.44846, 0.45", "228.882, -189.893, 6.8277, 0.45", "229.864, -191.042, 6.40872, 0.45", "230.378, -191.647, 6.1643, 0.45", "231.639, -193.102, 5.49013, 0.45", "234.942, -196.756, 3.57727, 0.45", "236.247, -198.158, 2.76103, 0.45", "238.067, -200.087, 1.5383, 0.45", "239.562, -201.662, 0.53583, 0.45", "240.126, -202.28, 0.155143, 0.79" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "240.126, -202.28, 0.155143, 0.45", "239.334, -204.713, -0.359022, 0.45", "238.941, -206.273, -0.621299, 0.45", "238.688, -207.619, -0.97044, 0.45", "238.612, -208.301, -1.29273, 0.45", "238.614, -209.409, -1.90275, 0.45", "238.698, -210.36, -2.41963, 0.45", "239.04, -211.753, -3.1883, 0.45", "239.773, -214.072, -4.48219, 0.45", "240.793, -217.09, -6.16774, 0.45", "241.307, -218.758, -6.98076, 0.45", "241.958, -221.068, -7.93561, 0.45", "242.262, -222.471, -8.39948, 0.45", "242.582, -224.378, -8.71098, 0.45", "242.864, -227.004, -8.38541, 0.45", "243.013, -229.916, -7.59447, 0.45", "242.994, -231.633, -6.92816, 0.45", "242.899, -233.337, -5.86729, 0.45", "242.671, -236.534, -3.37561, 0.45", "242.358, -240.747, 0.415199, 0.45", "242.265, -242.037, 1.62975, 0.45", "242.171, -243.959, 3.42636, 0.45", "241.937, -248.307, 7.70993, 0.45", "241.871, -249.558, 8.97095, 0.45", "241.756, -251.041, 10.3259, 0.45", "241.551, -253.426, 12.2156, 0.45", "241.481, -254.578, 13.1528, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "240.126, -202.28, 0.155143, 0.45", "241.369, -203.348, 0.413307, 0.45", "243.698, -205.191, 0.795655, 0.45", "246.22, -206.913, 1.11372, 0.45", "248.455, -208.377, 1.40719, 0.45", "250.884, -209.97, 1.72714, 0.45", "252.182, -210.848, 1.79422, 0.45", "255.052, -212.805, 1.57895, 0.45", "257.966, -214.803, 1.007, 0.45", "261.152, -217.062, 0.0235342, 0.45", "262.206, -217.829, -0.359009, 0.45", "266.453, -220.951, -1.99316, 0.45", "269.66, -223.397, -3.21146, 0.45", "271.49, -224.782, -3.83955, 0.45", "275.476, -227.629, -4.98294, 0.45", "277.277, -228.837, -5.28528, 0.45", "280.696, -231.056, -5.40271, 0.45", "285.152, -233.821, -4.94931, 0.45", "290.196, -237.018, -3.83958, 0.45", "293.885, -239.414, -2.58054, 0.45", "298.422, -242.239, -0.559499, 0.45", "300.755, -243.636, 0.617102, 0.45", "302.326, -244.478, 1.46814, 0.45", "306.489, -246.176, 3.55062, 0.45", "310.378, -247.407, 5.24702, 0.45", "315.473, -248.636, 7.02703, 0.45", "318.962, -249.217, 7.87858, 0.45", "324.594, -249.809, 8.89305, 0.45", "332.603, -250.113, 10.019, 0.45", "334.749, -250.006, 10.2255, 0.45", "336.75, -249.755, 10.3514, 0.45", "340.012, -248.911, 10.6075, 0.45", "341.892, -247.981, 10.82, 0.45", "344.067, -245.753, 11.2071, 0.45", "345.001, -244.108, 11.4694, 0.45", "345.814, -242.472, 11.7033, 0.45", "347.487, -238.958, 12.1575, 0.45", "348.506, -236.921, 12.3992, 0.45", "350.515, -233.604, 12.7389, 0.45", "352.393, -231.217, 13.1787, 0.45", "354.555, -229.062, 13.8715, 0.45", "356.249, -227.642, 14.4575, 0.45", "357.967, -226.558, 15.1352, 0.45", "360.195, -225.584, 16.1091, 0.45", "366.578, -224.492, 19.9792, 0.45", "367.435, -224.538, 20.7114, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "241.481, -254.578, 13.1528, 0.45", "241.539, -256.674, 13.4775, 0.45", "241.713, -258.483, 13.7574, 0.45", "241.991, -260.382, 14.089, 0.45", "242.261, -262.107, 14.3827, 0.45", "242.788, -264.984, 15.0936, 0.45", "243.059, -266.319, 15.579, 0.45", "243.48, -268.143, 16.489, 0.45", "243.907, -269.864, 17.4503, 0.45", "244.6, -272.317, 18.9443, 0.45", "245.689, -275.85, 21.1597, 0.45", "246.893, -279.366, 23.3202, 0.45", "247.946, -282.462, 25.1034, 0.45", "248.615, -284.334, 26.072, 0.45", "249.719, -287.302, 27.3381, 0.45", "250.473, -289.25, 27.9923, 0.45", "251.378, -291.758, 28.4848, 0.45", "252.258, -294.17, 28.7633, 0.45", "253.181, -296.684, 28.9754, 0.45", "253.978, -299.025, 29.2259, 0.45", "254.699, -301.523, 29.4, 0.45", "255.554, -304.756, 29.6322, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "241.481, -254.578, 13.1528, 0.45", "243.644, -252.892, 13.0677, 0.45", "244.709, -252.062, 13.0258, 0.45", "245.911, -251.125, 12.9785, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "255.554, -304.756, 29.6322, 0.45", "254.148, -308.385, 32.5488, 0.45", "252.452, -312.86, 35.6968, 0.45", "251.479, -315.532, 37.3877, 0.45", "250.91, -317.215, 38.3574, 0.45", "250.787, -317.6, 38.5579, 0.45", "249.521, -321.719, 40.6196, 0.45", "249.26, -322.783, 40.9451, 0.45", "249.049, -323.819, 41.1553, 0.45", "248.789, -324.886, 41.4007, 0.45", "248.377, -326.354, 41.665, 0.45", "247.671, -328.913, 41.9567, 0.45", "247.062, -331.21, 42.1464, 0.45", "246.317, -333.986, 42.5569, 0.45", "245.863, -335.532, 42.9265, 0.45", "245.292, -337.354, 43.422, 0.45", "244.444, -339.934, 44.1702, 0.45", "243.661, -342.281, 45.5062, 0.45", "242.943, -344.332, 47.1667, 0.45", "242.373, -345.99, 48.7357, 0.45", "241.856, -347.476, 50.362, 0.45", "241.26, -349.042, 52.1894, 0.45", "238.693, -355.464, 59.4163, 0.45", "238.06, -357.124, 61.0676, 0.45", "237.662, -358.286, 62.0331, 0.45", "236.477, -362.085, 64.6158, 0.45", "235.926, -364.11, 65.7505, 0.45", "235.35, -366.729, 66.6096, 0.45", "234.963, -368.742, 66.6852, 0.45", "234.609, -371.082, 66.6474, 0.45", "234.361, -373.284, 66.4038, 0.45", "234.272, -374.988, 65.9212, 0.45", "234.283, -375.844, 65.6826, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "255.554, -304.756, 29.6322, 0.45", "255.861, -306.007, 30.178, 0.45", "256.453, -308.568, 31.2019, 0.45", "256.959, -311.483, 32.3385, 0.45", "257.041, -312.583, 32.8512, 0.45", "257.048, -314.221, 33.7631, 0.45", "256.986, -315.877, 34.8175, 0.45", "256.87, -316.951, 35.658, 0.45", "256.66, -318.387, 36.9741, 0.45", "256.078, -321.74, 40.616, 0.45", "255.696, -323.904, 43.1092, 0.45", "255.519, -325.18, 44.6068, 0.45", "255.334, -327.164, 47.022, 0.45", "255.331, -327.66, 47.6163, 0.45", "255.524, -328.778, 49.0081, 0.45", "255.941, -329.951, 50.3101, 0.45", "256.67, -331.621, 51.9983, 0.45", "256.993, -332.282, 52.5879, 0.45", "257.989, -334.314, 54.134, 0.45", "259.718, -337.594, 56.5346, 0.45", "260.732, -339.404, 57.8848, 0.45", "262.215, -341.936, 59.7949, 0.45", "263.179, -343.638, 61.0801, 0.45", "265.128, -347.046, 63.6785, 0.45", "265.737, -348.09, 64.4697, 0.45", "267.082, -350.463, 66.1928, 0.45", "267.564, -351.355, 66.9309, 0.45", "268.782, -353.631, 68.8964, 0.45", "269.87, -355.811, 70.8932, 0.45", "270.341, -356.798, 72.0136, 0.45", "270.865, -357.952, 73.55, 0.45", "271.786, -360.234, 76.5102, 0.45", "272.181, -361.354, 77.9313, 0.45", "272.584, -362.554, 79.4112, 0.45", "274.202, -367.553, 85.2705, 0.45", "275.378, -371.09, 89.1445, 0.45", "276.397, -374.061, 92.1984, 0.45", "276.714, -374.975, 93.0239, 0.45", "277.041, -375.947, 93.93, 0.45", "277.459, -377.15, 95.0958, 0.45", "277.938, -378.398, 96.4148, 0.45", "278.415, -379.547, 97.9126, 0.45", "278.605, -379.968, 98.5637, 0.45", "280.331, -383.74, 104.819, 0.45", "281.119, -385.512, 107.79, 0.45", "282.503, -388.377, 112.448, 0.45", "282.729, -388.847, 113.221, 0.45", "282.974, -389.317, 113.954, 0.45", "283.433, -390.162, 115.148, 0.45", "284.579, -392.225, 117.59, 0.45", "285.682, -394.294, 119.913, 0.45", "288.416, -399.672, 125.75, 0.45", "289.549, -401.97, 128.287, 0.45", "290.099, -403.062, 129.515, 0.45", "290.692, -404.168, 131.192, 0.45", "291.5, -405.442, 133.87, 0.45", "292.438, -406.76, 137.559, 0.45", "292.796, -407.224, 139.109, 0.45", "293.045, -407.614, 140.547, 0.45", "294.901, -411.065, 153.09, 0.45", "295.373, -412.061, 156.479, 0.45", "295.88, -413.266, 160.115, 0.45", "296.141, -413.972, 162.288, 0.45", "296.702, -415.682, 167.357, 0.45", "296.934, -416.596, 169.76, 0.45", "297.157, -417.672, 171.967, 0.45", "297.538, -419.63, 176.036, 0.45", "299.253, -426.262, 190.983, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L5_NBC_adc0ce53be_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_23
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_24
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_69, id: dend_69, parent: dend_47
create dend_69
public dend_69
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_64, id: dend_64, parent: dend_48
create dend_64
public dend_64
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_29
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_29
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_49
create dend_63
public dend_63
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_62, id: dend_62, parent: dend_54
create dend_62
public dend_62
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_71
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.45000027720458424)
    connect dend_12(0), soma_0(0.45000027720458424)
    connect dend_11(0), soma_0(0.45000027720458424)
    connect dend_0(0), soma_0(0.45000027720458424)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_69(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_64(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_29(1.0)
    connect dend_32(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_62(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.02864, -8.95645, 0.0, 3.19243 ) }
    soma_0 { pt3dadd( 0.862269, -8.03576, 0.0, 5.44292 ) }
    soma_0 { pt3dadd( 0.695902, -7.11508, 0.0, 7.15224 ) }
    soma_0 { pt3dadd( 0.529535, -6.1944, 0.0, 9.22848 ) }
    soma_0 { pt3dadd( 0.363167, -5.27371, 0.0, 10.1568 ) }
    soma_0 { pt3dadd( 0.1968, -4.35303, 0.0, 10.228 ) }
    soma_0 { pt3dadd( 0.0304325, -3.43235, 0.0, 10.4278 ) }
    soma_0 { pt3dadd( -0.135935, -2.51166, 0.0, 10.5372 ) }
    soma_0 { pt3dadd( -0.302302, -1.59098, 0.0, 10.6261 ) }
    soma_0 { pt3dadd( -0.468669, -0.670298, 0.0, 10.9078 ) }
    soma_0 { pt3dadd( -0.635037, 0.250385, 0.0, 11.3454 ) }
    soma_0 { pt3dadd( -0.801404, 1.17107, 0.0, 11.7831 ) }
    soma_0 { pt3dadd( -0.967771, 2.09175, 0.0, 12.1088 ) }
    soma_0 { pt3dadd( -1.13414, 3.01243, 0.0, 11.7546 ) }
    soma_0 { pt3dadd( -1.30051, 3.93312, 0.0, 11.2789 ) }
    soma_0 { pt3dadd( -1.46687, 4.8538, 0.0, 10.5376 ) }
    soma_0 { pt3dadd( -1.63324, 5.77448, 0.0, 9.41766 ) }
    soma_0 { pt3dadd( -1.79961, 6.69517, 0.0, 7.67825 ) }
    soma_0 { pt3dadd( -1.96598, 7.61585, 0.0, 5.72147 ) }
    soma_0 { pt3dadd( -2.13234, 8.53653, 0.0, 3.87406 ) }
    soma_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.1959 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.55142, -9.21367, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.55142, -9.21367, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.39251, -11.4736, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.25612, -13.4132, -8.14, 3.62 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.23859, 3.90583, -3.81, 1.24 ) }
    dend_12 { pt3dadd( 6.61614, 4.0499, -3.47128, 1.24 ) }
    dend_12 { pt3dadd( 10.3186, 4.35309, -2.47372, 1.24 ) }
    dend_12 { pt3dadd( 13.8131, 4.63924, -1.5322, 1.24 ) }
    dend_12 { pt3dadd( 17.2987, 4.92465, -0.593086, 1.24 ) }
    dend_12 { pt3dadd( 24.4617, 5.51122, 1.33685, 1.24 ) }
    dend_12 { pt3dadd( 29.9802, 5.96311, 2.82372, 1.24 ) }
    dend_12 { pt3dadd( 32.2935, 6.07972, 3.52715, 1.24 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.49141, 4.58984, -1.31, 0.68 ) }
    dend_11 { pt3dadd( -8.69973, 4.51745, -1.43757, 0.68 ) }
    dend_11 { pt3dadd( -10.8568, 4.48845, -1.61258, 0.68 ) }
    dend_11 { pt3dadd( -14.3167, 4.76912, -1.97671, 0.68 ) }
    dend_11 { pt3dadd( -16.7773, 5.19965, -2.25387, 0.68 ) }
    dend_11 { pt3dadd( -18.2906, 5.60699, -2.41902, 0.68 ) }
    dend_11 { pt3dadd( -20.8643, 6.403, -2.66027, 0.68 ) }
    dend_11 { pt3dadd( -23.5059, 7.39283, -2.94115, 0.68 ) }
    dend_11 { pt3dadd( -26.8939, 8.9409, -3.31125, 0.68 ) }
    dend_11 { pt3dadd( -29.2393, 10.2457, -3.60922, 0.68 ) }
    dend_11 { pt3dadd( -32.5928, 12.3241, -4.20735, 0.68 ) }
    dend_11 { pt3dadd( -35.6002, 14.3503, -4.96549, 0.68 ) }
    dend_11 { pt3dadd( -37.5872, 15.8204, -5.63581, 0.68 ) }
    dend_11 { pt3dadd( -39.4385, 17.3474, -6.39834, 0.68 ) }
    dend_11 { pt3dadd( -40.7439, 18.4886, -6.98493, 0.68 ) }
    dend_11 { pt3dadd( -43.2184, 20.5992, -8.09397, 0.68 ) }
    dend_11 { pt3dadd( -45.0363, 22.1587, -8.99552, 0.68 ) }
    dend_11 { pt3dadd( -45.8751, 22.8921, -9.40147, 0.68 ) }
    dend_11 { pt3dadd( -48.864, 25.4351, -10.8749, 0.68 ) }
    dend_11 { pt3dadd( -51.235, 27.4244, -12.0997, 0.68 ) }
    dend_11 { pt3dadd( -54.6045, 30.1375, -13.7259, 0.68 ) }
    dend_11 { pt3dadd( -56.8997, 31.9378, -14.6682, 0.57 ) }
    dend_11 { pt3dadd( -58.8628, 33.3933, -15.3971, 0.57 ) }
    dend_11 { pt3dadd( -61.2186, 35.0576, -16.3201, 0.57 ) }
    dend_11 { pt3dadd( -61.7499, 35.3848, -16.5943, 0.57 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.06859, -4.60616, -2.56, 1.47 ) }
    dend_0 { pt3dadd( 6.38025, -5.41363, -2.38226, 1.47 ) }
    dend_0 { pt3dadd( 9.79429, -7.51534, -1.91963, 1.47 ) }
    dend_0 { pt3dadd( 13.9328, -10.063, -1.35883, 1.47 ) }
    dend_0 { pt3dadd( 16.5495, -11.6739, -1.00424, 2.6 ) }
    dend_0 { pt3dadd( 16.9501, -11.9205, -0.94995, 2.26 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 64/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.31666 ) }
    axon_0 { pt3dadd( -4.96601, 24.2182, 0.0, 2.31666 ) }
    axon_0 { pt3dadd( -7.63332, 38.9791, 0.0, 2.31666 ) }
    // Section: dend_45, id: dend_45, parent: dend_23 (entry count 67/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.25612, -13.4132, -8.14, 0.12 ) }
    dend_45 { pt3dadd( -0.28041, -13.537, -8.14092, 0.12 ) }
    dend_45 { pt3dadd( 1.05656, -13.7802, -8.14192, 0.12 ) }
    dend_45 { pt3dadd( 1.75403, -13.9095, -8.14231, 0.45 ) }
    dend_45 { pt3dadd( 2.39264, -14.0192, -8.06392, 0.45 ) }
    dend_45 { pt3dadd( 4.82275, -14.4009, -7.78057, 0.45 ) }
    dend_45 { pt3dadd( 5.16658, -14.458, -7.74206, 1.36 ) }
    dend_45 { pt3dadd( 6.37037, -14.6713, -7.60472, 1.02 ) }
    dend_45 { pt3dadd( 8.01935, -14.9649, -7.39248, 0.45 ) }
    dend_45 { pt3dadd( 10.5438, -15.4105, -6.75825, 0.45 ) }
    dend_45 { pt3dadd( 12.7574, -15.7635, -5.81784, 0.45 ) }
    dend_45 { pt3dadd( 13.4008, -15.8403, -5.50496, 1.7 ) }
    dend_45 { pt3dadd( 14.5927, -15.9583, -4.47343, 0.68 ) }
    dend_45 { pt3dadd( 16.1896, -16.1169, -2.69391, 0.57 ) }
    dend_45 { pt3dadd( 18.6349, -16.368, 0.354844, 0.57 ) }
    dend_45 { pt3dadd( 20.3904, -16.5438, 2.78932, 0.57 ) }
    dend_45 { pt3dadd( 21.7479, -16.6669, 4.9558, 0.57 ) }
    dend_45 { pt3dadd( 26.6261, -17.0201, 13.5622, 0.45 ) }
    dend_45 { pt3dadd( 27.01, -17.0469, 14.3594, 0.45 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 86/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.25612, -13.4132, -8.14, 2.26 ) }
    dend_24 { pt3dadd( -1.53307, -15.4905, -8.0884, 2.26 ) }
    dend_24 { pt3dadd( -1.80579, -17.536, -8.03759, 2.26 ) }
    dend_24 { pt3dadd( -2.2034, -20.5182, -7.96351, 2.94 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 90/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 32.2935, 6.07972, 3.52715, 0.45 ) }
    dend_22 { pt3dadd( 35.8819, 5.99407, 2.6291, 0.45 ) }
    dend_22 { pt3dadd( 37.5982, 5.98396, 2.77937, 0.45 ) }
    dend_22 { pt3dadd( 38.4935, 6.05248, 3.05441, 0.45 ) }
    dend_22 { pt3dadd( 39.6527, 6.26577, 3.56955, 0.45 ) }
    dend_22 { pt3dadd( 41.9173, 6.96289, 4.90124, 0.79 ) }
    dend_22 { pt3dadd( 44.5163, 8.00719, 6.61598, 0.79 ) }
    dend_22 { pt3dadd( 46.9732, 9.25053, 8.47883, 0.79 ) }
    dend_22 { pt3dadd( 48.7603, 10.3478, 9.94667, 0.79 ) }
    dend_22 { pt3dadd( 50.1445, 11.3971, 11.1667, 0.79 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( 52.1001, 13.3743, 13.1541, 0.79 ) }
    dend_22 { pt3dadd( 53.8254, 15.6419, 15.054, 0.79 ) }
    dend_22 { pt3dadd( 54.5962, 16.8073, 15.8402, 0.68 ) }
    dend_22 { pt3dadd( 55.2618, 17.87, 16.4243, 0.68 ) }
    dend_22 { pt3dadd( 56.681, 20.0825, 17.5, 0.68 ) }
    dend_22 { pt3dadd( 59.6625, 24.6893, 19.7609, 0.68 ) }
    dend_22 { pt3dadd( 60.6192, 26.2053, 20.4804, 0.68 ) }
    dend_22 { pt3dadd( 62.2273, 28.6887, 21.6484, 0.68 ) }
    dend_22 { pt3dadd( 63.1498, 29.9602, 22.2569, 0.68 ) }
    dend_22 { pt3dadd( 64.0358, 30.976, 22.7933, 0.57 ) }
    dend_22 { pt3dadd( 66.418, 33.1057, 24.0296, 0.57 ) }
    dend_22 { pt3dadd( 67.669, 33.8365, 24.7422, 0.57 ) }
    dend_22 { pt3dadd( 69.695, 34.3145, 27.1857, 0.57 ) }
    dend_22 { pt3dadd( 70.3371, 34.09, 28.9343, 0.57 ) }
    dend_22 { pt3dadd( 71.1204, 33.4874, 31.9314, 0.57 ) }
    dend_22 { pt3dadd( 71.3554, 33.2244, 33.0248, 0.57 ) }
    dend_22 { pt3dadd( 72.1894, 31.7736, 37.9634, 0.57 ) }
    dend_22 { pt3dadd( 72.9971, 29.8322, 44.1353, 0.57 ) }
    dend_22 { pt3dadd( 73.4217, 28.1963, 49.1463, 0.57 ) }
    dend_22 { pt3dadd( 73.5707, 27.3261, 51.9548, 0.57 ) }
    dend_22 { pt3dadd( 73.6014, 27.1208, 52.7475, 0.57 ) }
    dend_22 { pt3dadd( 73.6547, 26.7812, 54.1564, 0.57 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 22/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 32.2935, 6.07972, 3.52715, 0.79 ) }
    dend_13 { pt3dadd( 33.3905, 8.89365, 2.48593, 0.79 ) }
    dend_13 { pt3dadd( 34.0562, 10.9773, 1.83161, 0.79 ) }
    dend_13 { pt3dadd( 34.3991, 12.0993, 1.52885, 0.79 ) }
    dend_13 { pt3dadd( 35.4878, 14.7083, 0.90027, 0.79 ) }
    dend_13 { pt3dadd( 36.7188, 17.0336, 0.398615, 0.79 ) }
    dend_13 { pt3dadd( 37.8194, 18.912, 0.0454612, 0.79 ) }
    dend_13 { pt3dadd( 39.5482, 21.5496, -0.310343, 0.79 ) }
    dend_13 { pt3dadd( 40.8533, 23.434, -0.568342, 0.79 ) }
    dend_13 { pt3dadd( 43.4606, 27.0348, -1.26071, 0.79 ) }
    dend_13 { pt3dadd( 45.1787, 29.2102, -2.02698, 0.79 ) }
    dend_13 { pt3dadd( 47.0686, 31.1371, -3.44699, 1.02 ) }
    dend_13 { pt3dadd( 48.2911, 32.2394, -4.50338, 1.02 ) }
    dend_13 { pt3dadd( 49.4523, 33.1687, -5.73568, 1.02 ) }
    dend_13 { pt3dadd( 50.9706, 34.356, -7.9179, 1.02 ) }
    dend_13 { pt3dadd( 53.078, 36.0964, -12.4805, 1.02 ) }
    dend_13 { pt3dadd( 55.2836, 37.5639, -18.4221, 1.02 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 16.9501, -11.9205, -0.94995, 0.68 ) }
    dend_8 { pt3dadd( 17.9607, -13.5127, -1.27537, 0.68 ) }
    dend_8 { pt3dadd( 18.3219, -14.01, -1.31212, 0.68 ) }
    dend_8 { pt3dadd( 20.3218, -16.6321, -1.3579, 0.68 ) }
    dend_8 { pt3dadd( 23.4589, -20.6906, -1.32695, 0.68 ) }
    dend_8 { pt3dadd( 25.487, -23.328, -1.4251, 0.68 ) }
    dend_8 { pt3dadd( 26.7442, -24.958, -1.541, 0.68 ) }
    dend_8 { pt3dadd( 30.5931, -29.6954, -1.4305, 0.68 ) }
    dend_8 { pt3dadd( 32.3678, -31.789, -1.21283, 0.68 ) }
    dend_8 { pt3dadd( 32.9197, -32.4038, -1.10076, 0.68 ) }
    dend_8 { pt3dadd( 35.9159, -35.5866, -0.301364, 0.68 ) }
    dend_8 { pt3dadd( 38.0542, -37.6149, 0.278266, 0.68 ) }
    dend_8 { pt3dadd( 43.5938, -42.6599, 1.73237, 0.68 ) }
    dend_8 { pt3dadd( 46.2199, -44.9922, 2.37097, 0.68 ) }
    dend_8 { pt3dadd( 47.7886, -46.3169, 2.74974, 0.68 ) }
    dend_8 { pt3dadd( 49.9598, -48.0917, 3.26467, 0.68 ) }
    dend_8 { pt3dadd( 54.9922, -52.2326, 4.36605, 0.68 ) }
    dend_8 { pt3dadd( 56.9769, -53.9796, 4.58928, 0.68 ) }
    dend_8 { pt3dadd( 57.8736, -54.8444, 4.58125, 0.68 ) }
    dend_8 { pt3dadd( 60.2132, -57.2128, 4.48588, 0.68 ) }
    dend_8 { pt3dadd( 61.6368, -58.7474, 4.39149, 0.68 ) }
    dend_8 { pt3dadd( 64.4787, -62.1276, 4.05312, 0.68 ) }
    dend_8 { pt3dadd( 66.2698, -64.7262, 3.7824, 0.68 ) }
    dend_8 { pt3dadd( 67.4962, -66.6116, 3.55569, 0.68 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 63/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 16.9501, -11.9205, -0.94995, 1.24 ) }
    dend_1 { pt3dadd( 21.9695, -13.1674, -0.867113, 1.24 ) }
    dend_1 { pt3dadd( 24.537, -13.8052, -0.824741, 1.24 ) }
    dend_1 { pt3dadd( 28.6506, -14.8271, -0.756853, 1.24 ) }
    dend_1 { pt3dadd( 32.8137, -15.8613, -0.688147, 1.24 ) }
    dend_1 { pt3dadd( 43.8517, -18.6032, -0.505984, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 69/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.63332, 38.9791, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -10.3006, 53.74, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -12.9679, 68.501, 0.0, 0.57 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 72/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 27.01, -17.0469, 14.3594, 0.45 ) }
    dend_47 { pt3dadd( 27.82, -19.4124, 18.1894, 0.45 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 74/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 27.01, -17.0469, 14.3594, 0.45 ) }
    dend_46 { pt3dadd( 31.2173, -15.6888, 14.2111, 0.45 ) }
    dend_46 { pt3dadd( 33.1975, -15.1431, 14.3669, 0.45 ) }
    dend_46 { pt3dadd( 35.9113, -14.4716, 14.7334, 0.45 ) }
    dend_46 { pt3dadd( 38.8732, -13.9998, 15.2414, 0.45 ) }
    dend_46 { pt3dadd( 40.4232, -14.002, 15.5638, 0.45 ) }
    dend_46 { pt3dadd( 44.6157, -14.4692, 16.4949, 0.45 ) }
    dend_46 { pt3dadd( 44.9577, -14.5553, 16.608, 0.45 ) }
    dend_46 { pt3dadd( 45.1058, -14.6144, 16.6627, 2.6 ) }
    dend_46 { pt3dadd( 47.9413, -16.1471, 17.7497, 0.57 ) }
    dend_46 { pt3dadd( 51.3955, -18.445, 19.0828, 0.57 ) }
    dend_46 { pt3dadd( 52.4034, -19.1389, 19.4289, 0.57 ) }
    dend_46 { pt3dadd( 52.4924, -19.1965, 19.4533, 2.38 ) }
    dend_46 { pt3dadd( 55.4952, -20.8608, 20.2378, 0.34 ) }
    dend_46 { pt3dadd( 56.6501, -21.3431, 20.5162, 0.34 ) }
    dend_46 { pt3dadd( 59.2619, -21.9806, 21.0681, 0.45 ) }
    dend_46 { pt3dadd( 61.7337, -22.1067, 21.7175, 0.45 ) }
    dend_46 { pt3dadd( 64.317, -21.9605, 22.6874, 0.45 ) }
    dend_46 { pt3dadd( 66.6576, -21.64, 23.8836, 0.45 ) }
    dend_46 { pt3dadd( 69.1537, -21.1135, 25.5443, 0.45 ) }
    dend_46 { pt3dadd( 71.3582, -20.5695, 27.2208, 0.45 ) }
    dend_46 { pt3dadd( 76.1528, -19.268, 31.1867, 0.45 ) }
    dend_46 { pt3dadd( 79.7746, -18.34, 34.5017, 0.45 ) }
    dend_46 { pt3dadd( 83.2793, -17.5765, 37.9165, 0.45 ) }
    dend_46 { pt3dadd( 86.6265, -17.0411, 41.2083, 0.45 ) }
    dend_46 { pt3dadd( 87.6237, -16.9519, 42.1733, 2.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( 89.4054, -16.8907, 43.7555, 0.45 ) }
    dend_46 { pt3dadd( 93.0684, -16.8616, 46.4339, 0.45 ) }
    dend_46 { pt3dadd( 94.6603, -16.855, 47.4246, 0.45 ) }
    dend_46 { pt3dadd( 97.0639, -16.7942, 48.7373, 0.45 ) }
    dend_46 { pt3dadd( 102.046, -16.5359, 51.4592, 0.45 ) }
    dend_46 { pt3dadd( 105.6, -16.2749, 53.4066, 0.45 ) }
    dend_46 { pt3dadd( 109.287, -16.0679, 55.4119, 0.45 ) }
    dend_46 { pt3dadd( 111.578, -16.0483, 56.6158, 0.45 ) }
    dend_46 { pt3dadd( 113.802, -16.129, 57.7468, 0.45 ) }
    dend_46 { pt3dadd( 118.09, -16.5067, 59.813, 0.45 ) }
    dend_46 { pt3dadd( 121.602, -17.0066, 61.3093, 0.45 ) }
    dend_46 { pt3dadd( 126.082, -17.8378, 63.1585, 0.45 ) }
    dend_46 { pt3dadd( 130.584, -18.9033, 64.9706, 0.45 ) }
    dend_46 { pt3dadd( 133.252, -19.6261, 66.0109, 0.45 ) }
    dend_46 { pt3dadd( 134.602, -20.076, 66.5172, 0.45 ) }
    dend_46 { pt3dadd( 135.332, -20.3619, 66.7321, 0.45 ) }
    // Section: dend_44, id: dend_44, parent: dend_24 (entry count 16/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -2.2034, -20.5182, -7.96351, 0.12 ) }
    dend_44 { pt3dadd( -3.34225, -19.7007, -7.45501, 0.12 ) }
    dend_44 { pt3dadd( -3.55469, -19.5873, -7.29649, 0.12 ) }
    dend_44 { pt3dadd( -4.16122, -19.3279, -6.7819, 0.45 ) }
    dend_44 { pt3dadd( -5.08772, -19.3224, -5.39408, 0.79 ) }
    dend_44 { pt3dadd( -6.22286, -19.5867, -3.12975, 0.45 ) }
    dend_44 { pt3dadd( -6.86443, -19.8667, -1.66077, 0.45 ) }
    dend_44 { pt3dadd( -8.00165, -20.6657, 1.44686, 0.45 ) }
    dend_44 { pt3dadd( -8.16115, -20.8488, 1.94825, 0.45 ) }
    dend_44 { pt3dadd( -9.50328, -23.1179, 7.34262, 0.45 ) }
    dend_44 { pt3dadd( -10.0369, -24.3329, 9.93333, 0.45 ) }
    dend_44 { pt3dadd( -10.4077, -25.3167, 11.8987, 0.45 ) }
    dend_44 { pt3dadd( -10.4977, -25.5573, 12.3982, 0.45 ) }
    dend_44 { pt3dadd( -11.0365, -26.8485, 15.1303, 0.45 ) }
    dend_44 { pt3dadd( -12.2528, -29.3295, 20.4456, 0.45 ) }
    dend_44 { pt3dadd( -12.6884, -29.9991, 21.8224, 0.45 ) }
    dend_44 { pt3dadd( -13.0495, -30.4766, 22.7721, 0.45 ) }
    dend_44 { pt3dadd( -13.8182, -31.3899, 24.6245, 0.45 ) }
    dend_44 { pt3dadd( -14.079, -31.7112, 25.3038, 0.45 ) }
    dend_44 { pt3dadd( -15.659, -33.6646, 29.472, 0.45 ) }
    dend_44 { pt3dadd( -16.2759, -34.7044, 31.3034, 0.45 ) }
    dend_44 { pt3dadd( -16.8803, -35.9915, 33.4693, 0.45 ) }
    dend_44 { pt3dadd( -17.0304, -36.4331, 34.2441, 0.45 ) }
    dend_44 { pt3dadd( -17.6122, -38.5878, 37.8255, 0.45 ) }
    dend_44 { pt3dadd( -17.6692, -38.8708, 38.2896, 0.45 ) }
    dend_44 { pt3dadd( -17.8825, -40.5287, 41.2004, 0.45 ) }
    dend_44 { pt3dadd( -17.9158, -40.9225, 41.8863, 0.45 ) }
    dend_44 { pt3dadd( -18.1058, -42.8384, 45.0006, 2.38 ) }
    dend_44 { pt3dadd( -18.3123, -44.4121, 47.562, 0.68 ) }
    dend_44 { pt3dadd( -18.3922, -45.0595, 48.5887, 0.68 ) }
    dend_44 { pt3dadd( -18.7331, -47.782, 53.3768, 0.68 ) }
    dend_44 { pt3dadd( -18.8808, -48.8955, 55.5085, 0.45 ) }
    dend_44 { pt3dadd( -18.9725, -49.4174, 56.4942, 0.45 ) }
    dend_44 { pt3dadd( -19.3167, -50.6319, 59.0571, 0.45 ) }
    dend_44 { pt3dadd( -19.5303, -51.2213, 60.4691, 0.45 ) }
    dend_44 { pt3dadd( -20.5126, -53.1452, 65.2236, 0.45 ) }
    dend_44 { pt3dadd( -21.1816, -54.1539, 67.9541, 0.45 ) }
    dend_44 { pt3dadd( -21.9024, -55.0425, 70.653, 0.45 ) }
    dend_44 { pt3dadd( -24.1042, -57.5025, 78.2299, 0.91 ) }
    dend_44 { pt3dadd( -24.157, -57.5632, 78.4058, 3.05 ) }
    dend_44 { pt3dadd( -24.7965, -58.3421, 80.5239, 0.45 ) }
    dend_44 { pt3dadd( -26.1531, -60.4651, 85.5984, 0.45 ) }
    dend_44 { pt3dadd( -26.5293, -61.1961, 87.2853, 0.45 ) }
    dend_44 { pt3dadd( -26.9783, -62.2755, 89.7241, 2.15 ) }
    dend_44 { pt3dadd( -28.3125, -66.3481, 97.4428, 0.57 ) }
    dend_44 { pt3dadd( -28.464, -66.8582, 98.4271, 0.57 ) }
    dend_44 { pt3dadd( -29.1828, -69.551, 103.662, 0.57 ) }
    dend_44 { pt3dadd( -29.6707, -71.3449, 106.923, 0.57 ) }
    dend_44 { pt3dadd( -29.7363, -71.5613, 107.33, 1.7 ) }
    dend_44 { pt3dadd( -30.0418, -72.4456, 109.029, 0.45 ) }
    dend_44 { pt3dadd( -31.6376, -76.657, 116.668, 0.45 ) }
    dend_44 { pt3dadd( -32.3784, -78.4327, 119.904, 0.45 ) }
    dend_44 { pt3dadd( -32.9471, -79.6815, 122.091, 0.45 ) }
    dend_44 { pt3dadd( -34.0716, -82.1225, 126.229, 0.45 ) }
    dend_44 { pt3dadd( -34.7243, -83.5643, 128.668, 0.45 ) }
    dend_44 { pt3dadd( -35.2192, -84.6244, 130.469, 0.45 ) }
    dend_44 { pt3dadd( -36.4079, -87.224, 134.039, 0.45 ) }
    dend_44 { pt3dadd( -36.5864, -87.6211, 134.599, 0.45 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 74/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.2034, -20.5182, -7.96351, 1.7 ) }
    dend_25 { pt3dadd( -1.52485, -23.2436, -6.26968, 1.7 ) }
    dend_25 { pt3dadd( -1.32694, -24.1473, -5.81495, 1.58 ) }
    dend_25 { pt3dadd( -0.757088, -26.9218, -4.71781, 1.36 ) }
    dend_25 { pt3dadd( -0.286942, -29.2109, -3.81264, 1.24 ) }
    dend_25 { pt3dadd( 0.390291, -32.5082, -2.50877, 1.24 ) }
    dend_25 { pt3dadd( 0.792942, -34.4686, -1.73354, 2.83 ) }
    dend_25 { pt3dadd( 1.34732, -37.2324, -0.90744, 3.62 ) }
    dend_25 { pt3dadd( 1.76309, -39.3354, -0.39173, 2.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 83/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 55.2836, 37.5639, -18.4221, 0.57 ) }
    dend_17 { pt3dadd( 55.2882, 35.766, -19.3347, 0.57 ) }
    dend_17 { pt3dadd( 55.2943, 33.4012, -20.535, 0.57 ) }
    dend_17 { pt3dadd( 55.2977, 32.0539, -21.2189, 0.57 ) }
    dend_17 { pt3dadd( 55.3025, 30.1985, -22.1607, 0.57 ) }
    dend_17 { pt3dadd( 55.3087, 27.78, -23.3882, 0.57 ) }
    dend_17 { pt3dadd( 55.3193, 23.6435, -25.4879, 0.57 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 55.2836, 37.5639, -18.4221, 1.02 ) }
    dend_14 { pt3dadd( 55.9417, 38.9936, -19.7956, 1.02 ) }
    dend_14 { pt3dadd( 57.4175, 42.1996, -22.8756, 1.02 ) }
    dend_14 { pt3dadd( 58.2517, 44.0116, -24.6164, 0.79 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 94/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 67.4962, -66.6116, 3.55569, 0.45 ) }
    dend_10 { pt3dadd( 70.5948, -70.9552, 2.62739, 0.45 ) }
    dend_10 { pt3dadd( 71.2316, -71.8559, 2.46143, 0.45 ) }
    dend_10 { pt3dadd( 72.1797, -73.2381, 2.28289, 0.45 ) }
    dend_10 { pt3dadd( 74.4861, -76.5753, 1.95075, 0.45 ) }
    dend_10 { pt3dadd( 75.4084, -77.865, 1.75489, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( 76.2691, -78.9978, 1.55505, 0.45 ) }
    dend_10 { pt3dadd( 77.8978, -80.9493, 1.22055, 0.45 ) }
    dend_10 { pt3dadd( 80.8767, -84.2645, 0.590847, 0.45 ) }
    dend_10 { pt3dadd( 82.5626, -85.8591, 0.286873, 0.45 ) }
    dend_10 { pt3dadd( 85.8382, -88.3983, -0.367669, 0.45 ) }
    dend_10 { pt3dadd( 88.2782, -89.9041, -0.740571, 0.45 ) }
    dend_10 { pt3dadd( 89.3752, -90.4874, -0.730388, 0.45 ) }
    dend_10 { pt3dadd( 91.3672, -91.4825, -0.509419, 0.45 ) }
    dend_10 { pt3dadd( 95.4893, -93.5792, 0.216298, 0.45 ) }
    dend_10 { pt3dadd( 98.2276, -95.099, 0.643654, 0.45 ) }
    dend_10 { pt3dadd( 102.361, -97.5591, 1.26354, 0.45 ) }
    dend_10 { pt3dadd( 111.111, -103.249, 2.30412, 0.45 ) }
    dend_10 { pt3dadd( 114.999, -106.029, 2.65778, 0.45 ) }
    dend_10 { pt3dadd( 117.817, -108.321, 2.80196, 0.45 ) }
    dend_10 { pt3dadd( 123.122, -113.433, 2.72929, 0.45 ) }
    dend_10 { pt3dadd( 124.133, -114.578, 2.64339, 0.45 ) }
    dend_10 { pt3dadd( 126.067, -117.328, 2.08576, 0.45 ) }
    dend_10 { pt3dadd( 127.046, -119.201, 1.51774, 0.45 ) }
    dend_10 { pt3dadd( 128.522, -122.815, 0.526089, 0.45 ) }
    dend_10 { pt3dadd( 129.472, -125.712, -0.111082, 0.45 ) }
    dend_10 { pt3dadd( 130.612, -129.629, -0.795471, 0.45 ) }
    dend_10 { pt3dadd( 131.653, -133.57, -1.4895, 0.45 ) }
    dend_10 { pt3dadd( 132.634, -137.724, -2.24524, 0.45 ) }
    dend_10 { pt3dadd( 133.041, -139.511, -2.5686, 0.45 ) }
    dend_10 { pt3dadd( 133.697, -142.384, -3.04558, 0.45 ) }
    dend_10 { pt3dadd( 135.046, -147.735, -3.81899, 0.45 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 67.4962, -66.6116, 3.55569, 0.57 ) }
    dend_9 { pt3dadd( 67.3671, -67.1059, 3.71907, 0.57 ) }
    dend_9 { pt3dadd( 66.5799, -69.6308, 5.37808, 0.57 ) }
    dend_9 { pt3dadd( 65.5031, -72.7501, 7.63115, 0.57 ) }
    dend_9 { pt3dadd( 64.7578, -74.5099, 9.15106, 0.57 ) }
    dend_9 { pt3dadd( 64.6107, -74.8197, 9.42473, 0.57 ) }
    dend_9 { pt3dadd( 63.7543, -76.3846, 10.8779, 0.57 ) }
    dend_9 { pt3dadd( 62.4295, -78.39, 12.9266, 0.57 ) }
    dend_9 { pt3dadd( 61.7423, -79.2345, 13.8845, 0.57 ) }
    dend_9 { pt3dadd( 60.3457, -80.7699, 16.02, 0.45 ) }
    dend_9 { pt3dadd( 59.6319, -81.5229, 17.0396, 0.45 ) }
    dend_9 { pt3dadd( 58.6516, -82.5556, 18.3816, 0.45 ) }
    dend_9 { pt3dadd( 57.7045, -83.6067, 19.6836, 0.45 ) }
    dend_9 { pt3dadd( 56.6156, -84.7975, 21.1397, 0.45 ) }
    dend_9 { pt3dadd( 54.4616, -87.378, 24.3594, 0.45 ) }
    dend_9 { pt3dadd( 54.0192, -87.9936, 25.1003, 0.45 ) }
    dend_9 { pt3dadd( 53.4209, -88.9295, 26.2224, 0.45 ) }
    dend_9 { pt3dadd( 52.0607, -91.341, 28.9697, 0.45 ) }
    dend_9 { pt3dadd( 51.5963, -92.2406, 29.9104, 0.45 ) }
    dend_9 { pt3dadd( 49.9333, -95.6006, 32.8984, 0.45 ) }
    dend_9 { pt3dadd( 49.4256, -96.7108, 33.7699, 0.45 ) }
    dend_9 { pt3dadd( 49.3231, -96.963, 33.9562, 0.45 ) }
    dend_9 { pt3dadd( 49.1038, -97.6259, 34.4549, 0.45 ) }
    dend_9 { pt3dadd( 48.5547, -99.4439, 35.8372, 0.45 ) }
    dend_9 { pt3dadd( 48.1472, -100.943, 37.0123, 0.45 ) }
    dend_9 { pt3dadd( 47.3836, -103.963, 39.5522, 0.45 ) }
    dend_9 { pt3dadd( 46.8735, -106.052, 41.6037, 0.45 ) }
    dend_9 { pt3dadd( 45.9374, -109.859, 45.6102, 0.45 ) }
    dend_9 { pt3dadd( 45.3838, -111.968, 47.9311, 0.45 ) }
    dend_9 { pt3dadd( 45.1265, -112.852, 48.9809, 0.45 ) }
    dend_9 { pt3dadd( 44.1851, -115.794, 52.4683, 0.45 ) }
    dend_9 { pt3dadd( 43.1538, -118.43, 55.4081, 0.45 ) }
    dend_9 { pt3dadd( 42.5181, -119.817, 56.929, 0.45 ) }
    dend_9 { pt3dadd( 41.8607, -121.12, 58.2438, 0.45 ) }
    dend_9 { pt3dadd( 40.6908, -123.558, 60.4252, 0.45 ) }
    dend_9 { pt3dadd( 39.7063, -125.652, 62.1249, 0.45 ) }
    dend_9 { pt3dadd( 38.8227, -127.423, 63.4471, 0.45 ) }
    dend_9 { pt3dadd( 38.0456, -128.837, 64.6868, 0.45 ) }
    dend_9 { pt3dadd( 36.0795, -131.849, 67.9276, 0.45 ) }
    dend_9 { pt3dadd( 34.6277, -133.557, 70.0851, 0.45 ) }
    dend_9 { pt3dadd( 33.188, -134.78, 71.8601, 0.45 ) }
    dend_9 { pt3dadd( 31.4129, -135.787, 73.5844, 0.45 ) }
    dend_9 { pt3dadd( 26.8137, -137.56, 77.1719, 0.45 ) }
    dend_9 { pt3dadd( 24.5866, -138.139, 78.6572, 0.45 ) }
    dend_9 { pt3dadd( 21.7052, -138.655, 80.1878, 0.45 ) }
    dend_9 { pt3dadd( 19.7661, -138.959, 81.1287, 0.45 ) }
    dend_9 { pt3dadd( 16.0521, -139.622, 82.7987, 0.45 ) }
    dend_9 { pt3dadd( 13.1577, -140.276, 83.9965, 0.45 ) }
    dend_9 { pt3dadd( 8.64521, -141.528, 86.2306, 0.45 ) }
    dend_9 { pt3dadd( 5.42796, -142.576, 88.2424, 0.45 ) }
    dend_9 { pt3dadd( 3.32059, -143.348, 89.6571, 0.45 ) }
    dend_9 { pt3dadd( -1.49311, -145.27, 92.9977, 0.45 ) }
    dend_9 { pt3dadd( -3.17029, -145.987, 94.2048, 0.45 ) }
    dend_9 { pt3dadd( -10.364, -149.173, 99.2841, 0.45 ) }
    dend_9 { pt3dadd( -12.3247, -150.071, 100.655, 0.45 ) }
    dend_9 { pt3dadd( -17.5013, -152.516, 104.566, 0.45 ) }
    dend_9 { pt3dadd( -18.9703, -153.225, 105.666, 0.45 ) }
    dend_9 { pt3dadd( -21.4983, -154.541, 107.531, 0.45 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 43.8517, -18.6032, -0.505984, 0.45 ) }
    dend_5 { pt3dadd( 46.2894, -21.9212, 1.01724, 0.45 ) }
    dend_5 { pt3dadd( 46.6716, -22.4505, 1.23145, 1.02 ) }
    dend_5 { pt3dadd( 50.651, -27.8599, 3.19851, 0.79 ) }
    dend_5 { pt3dadd( 53.0817, -31.224, 4.23158, 0.79 ) }
    dend_5 { pt3dadd( 54.4666, -33.1259, 4.71656, 0.68 ) }
    dend_5 { pt3dadd( 54.7634, -33.5222, 4.80106, 0.68 ) }
    dend_5 { pt3dadd( 56.5412, -35.8462, 5.09956, 0.68 ) }
    dend_5 { pt3dadd( 57.7415, -37.4127, 5.20895, 0.68 ) }
    dend_5 { pt3dadd( 60.2248, -40.5663, 5.21588, 0.68 ) }
    dend_5 { pt3dadd( 62.7193, -43.8169, 5.18215, 0.68 ) }
    dend_5 { pt3dadd( 65.1003, -46.9734, 5.11435, 0.68 ) }
    dend_5 { pt3dadd( 67.355, -49.9343, 5.0263, 0.68 ) }
    dend_5 { pt3dadd( 70.1741, -53.6531, 4.88938, 0.68 ) }
    dend_5 { pt3dadd( 73.6609, -58.2833, 4.47711, 0.68 ) }
    dend_5 { pt3dadd( 75.8142, -61.1795, 3.99858, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_5 { pt3dadd( 77.0676, -62.8851, 3.60482, 0.68 ) }
    dend_5 { pt3dadd( 78.6482, -65.0006, 3.03215, 0.68 ) }
    dend_5 { pt3dadd( 81.3004, -68.3884, 2.00039, 0.68 ) }
    dend_5 { pt3dadd( 84.7695, -72.6448, 0.584057, 0.68 ) }
    dend_5 { pt3dadd( 88.7956, -77.3187, -1.03293, 0.68 ) }
    dend_5 { pt3dadd( 90.9635, -79.6604, -1.81485, 0.68 ) }
    dend_5 { pt3dadd( 93.1275, -81.8996, -2.494, 0.68 ) }
    dend_5 { pt3dadd( 94.5371, -83.3066, -2.85844, 0.68 ) }
    dend_5 { pt3dadd( 95.8348, -84.5065, -3.0972, 0.68 ) }
    dend_5 { pt3dadd( 97.6686, -86.2362, -3.16683, 0.68 ) }
    dend_5 { pt3dadd( 99.1317, -87.7095, -3.18998, 0.68 ) }
    dend_5 { pt3dadd( 101.033, -90.0583, -3.30393, 0.68 ) }
    dend_5 { pt3dadd( 101.542, -90.8737, -3.39967, 0.68 ) }
    dend_5 { pt3dadd( 102.732, -93.2183, -3.72355, 0.68 ) }
    dend_5 { pt3dadd( 104.045, -96.3084, -4.2946, 0.68 ) }
    dend_5 { pt3dadd( 104.989, -98.9861, -4.86727, 0.68 ) }
    dend_5 { pt3dadd( 105.828, -101.696, -5.48275, 0.68 ) }
    dend_5 { pt3dadd( 107.045, -106.073, -6.48049, 0.68 ) }
    dend_5 { pt3dadd( 107.608, -108.149, -6.91899, 0.68 ) }
    dend_5 { pt3dadd( 108.409, -110.952, -7.42339, 0.68 ) }
    dend_5 { pt3dadd( 109.125, -113.087, -7.75373, 0.68 ) }
    dend_5 { pt3dadd( 110.141, -115.653, -7.98582, 0.68 ) }
    dend_5 { pt3dadd( 110.955, -117.529, -8.12213, 0.68 ) }
    dend_5 { pt3dadd( 111.357, -118.378, -8.15497, 0.68 ) }
    dend_5 { pt3dadd( 112.606, -120.835, -8.21255, 0.45 ) }
    dend_5 { pt3dadd( 114.396, -124.341, -8.22284, 0.45 ) }
    dend_5 { pt3dadd( 116.464, -128.403, -8.2579, 0.45 ) }
    dend_5 { pt3dadd( 118.062, -131.676, -8.42057, 0.45 ) }
    dend_5 { pt3dadd( 119.159, -134.009, -8.60396, 0.45 ) }
    dend_5 { pt3dadd( 120.425, -136.756, -8.87242, 0.45 ) }
    dend_5 { pt3dadd( 122.549, -141.371, -9.46914, 0.45 ) }
    dend_5 { pt3dadd( 123.656, -143.83, -9.82337, 0.45 ) }
    dend_5 { pt3dadd( 125.512, -148.087, -10.4996, 0.45 ) }
    dend_5 { pt3dadd( 127.223, -151.945, -11.1549, 0.45 ) }
    dend_5 { pt3dadd( 128.26, -154.306, -11.6118, 0.45 ) }
    dend_5 { pt3dadd( 129.114, -156.207, -12.0444, 0.45 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 43.8517, -18.6032, -0.505984, 0.68 ) }
    dend_2 { pt3dadd( 46.0932, -17.2608, 1.63285, 0.68 ) }
    dend_2 { pt3dadd( 48.7965, -15.4615, 3.92703, 0.68 ) }
    dend_2 { pt3dadd( 50.7689, -14.1245, 5.16938, 0.68 ) }
    dend_2 { pt3dadd( 52.1142, -13.2165, 5.78183, 0.68 ) }
    dend_2 { pt3dadd( 53.0024, -12.6064, 6.00255, 0.68 ) }
    dend_2 { pt3dadd( 55.126, -11.1666, 6.02612, 0.68 ) }
    dend_2 { pt3dadd( 56.5331, -10.2181, 5.66935, 0.68 ) }
    dend_2 { pt3dadd( 58.9995, -8.61727, 4.64179, 0.57 ) }
    dend_2 { pt3dadd( 60.9555, -7.39277, 3.65551, 0.57 ) }
    dend_2 { pt3dadd( 63.7948, -5.53887, 2.12126, 0.57 ) }
    dend_2 { pt3dadd( 67.0608, -3.34962, 0.313918, 0.57 ) }
    dend_2 { pt3dadd( 68.8792, -2.08543, -0.707233, 0.57 ) }
    dend_2 { pt3dadd( 69.7279, -1.43819, -1.21516, 0.57 ) }
    dend_2 { pt3dadd( 72.3544, 0.77579, -2.73434, 0.57 ) }
    dend_2 { pt3dadd( 75.8088, 3.84884, -4.63694, 0.57 ) }
    dend_2 { pt3dadd( 78.4924, 6.34227, -5.96374, 0.57 ) }
    dend_2 { pt3dadd( 79.4778, 7.33628, -6.44947, 0.57 ) }
    dend_2 { pt3dadd( 81.6873, 9.72254, -7.64023, 0.57 ) }
    dend_2 { pt3dadd( 83.7332, 11.995, -8.7843, 0.57 ) }
    dend_2 { pt3dadd( 84.6176, 13.0312, -9.28185, 0.57 ) }
    // Section: dend_69, id: dend_69, parent: dend_47 (entry count 57/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 27.82, -19.4124, 18.1894, 0.45 ) }
    dend_69 { pt3dadd( 25.8314, -25.1951, 19.7277, 0.45 ) }
    dend_69 { pt3dadd( 25.201, -27.0466, 20.1349, 0.45 ) }
    dend_69 { pt3dadd( 24.3776, -29.4379, 20.8758, 0.45 ) }
    dend_69 { pt3dadd( 23.5258, -31.8553, 21.8393, 0.45 ) }
    dend_69 { pt3dadd( 22.8708, -33.6519, 22.6529, 0.45 ) }
    dend_69 { pt3dadd( 21.6484, -37.0782, 24.2913, 0.45 ) }
    dend_69 { pt3dadd( 21.2273, -38.3832, 24.9447, 0.45 ) }
    dend_69 { pt3dadd( 20.0242, -42.3173, 27.1209, 0.45 ) }
    dend_69 { pt3dadd( 19.4178, -44.3099, 28.4772, 0.45 ) }
    dend_69 { pt3dadd( 18.9125, -45.8577, 29.7635, 0.45 ) }
    dend_69 { pt3dadd( 18.6008, -46.6297, 30.4786, 0.45 ) }
    dend_69 { pt3dadd( 18.1519, -47.53, 31.3634, 0.45 ) }
    dend_69 { pt3dadd( 17.4972, -48.6139, 32.2762, 0.45 ) }
    dend_69 { pt3dadd( 15.6938, -51.6609, 34.1627, 0.45 ) }
    dend_69 { pt3dadd( 15.3151, -52.3399, 34.4895, 0.45 ) }
    dend_69 { pt3dadd( 14.2564, -54.5021, 35.2938, 0.45 ) }
    dend_69 { pt3dadd( 13.6706, -55.7894, 35.3755, 0.45 ) }
    dend_69 { pt3dadd( 13.0163, -57.5625, 35.017, 0.45 ) }
    dend_69 { pt3dadd( 12.226, -60.8242, 33.6926, 0.45 ) }
    dend_69 { pt3dadd( 11.9684, -63.0173, 32.4857, 0.45 ) }
    dend_69 { pt3dadd( 11.8574, -64.9594, 31.2914, 0.45 ) }
    dend_69 { pt3dadd( 12.0195, -70.645, 27.2883, 0.45 ) }
    dend_69 { pt3dadd( 12.1067, -71.7256, 26.4279, 1.02 ) }
    dend_69 { pt3dadd( 12.2237, -72.8167, 25.392, 0.57 ) }
    dend_69 { pt3dadd( 12.2468, -74.0896, 23.8266, 0.45 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 83/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 27.82, -19.4124, 18.1894, 0.45 ) }
    dend_48 { pt3dadd( 29.2103, -19.7438, 18.2945, 0.45 ) }
    dend_48 { pt3dadd( 30.6417, -20.085, 18.4028, 0.45 ) }
    dend_48 { pt3dadd( 32.6314, -20.5593, 18.5532, 0.45 ) }
    dend_48 { pt3dadd( 34.315, -20.9606, 18.6805, 0.45 ) }
    dend_48 { pt3dadd( 35.1884, -21.1688, 18.7465, 0.45 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 1.76309, -39.3354, -0.39173, 0.45 ) }
    dend_29 { pt3dadd( 1.28256, -40.8701, 1.0871, 0.45 ) }
    dend_29 { pt3dadd( 1.09162, -41.5787, 1.71192, 0.79 ) }
    dend_29 { pt3dadd( -0.766618, -48.4754, 7.79263, 1.24 ) }
    dend_29 { pt3dadd( -1.56865, -51.4521, 10.4171, 1.24 ) }
    dend_29 { pt3dadd( -2.24615, -53.9666, 12.6341, 1.24 ) }
    dend_29 { pt3dadd( -3.0253, -56.8584, 15.1837, 1.24 ) }
    dend_29 { pt3dadd( -3.30897, -57.9081, 16.1263, 2.38 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 97/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.76309, -39.3354, -0.39173, 0.91 ) }
    dend_26 { pt3dadd( 3.79267, -40.9667, 0.264386, 0.91 ) }
    dend_26 { pt3dadd( 4.91069, -41.8653, 0.625817, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 6.84482, -43.4198, 1.25108, 0.91 ) }
    dend_26 { pt3dadd( 8.18104, -44.4938, 1.68305, 0.91 ) }
    dend_26 { pt3dadd( 10.2695, -46.1723, 2.35819, 0.79 ) }
    dend_26 { pt3dadd( 10.6956, -46.5148, 2.49594, 0.79 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 4/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 55.3193, 23.6435, -25.4879, 0.57 ) }
    dend_19 { pt3dadd( 55.9261, 21.8478, -25.4118, 0.57 ) }
    dend_19 { pt3dadd( 57.1761, 18.186, -24.6446, 0.57 ) }
    dend_19 { pt3dadd( 58.5014, 14.2049, -23.9462, 0.45 ) }
    dend_19 { pt3dadd( 60.3996, 8.47058, -23.095, 0.45 ) }
    dend_19 { pt3dadd( 62.4566, 2.1487, -22.0886, 0.45 ) }
    dend_19 { pt3dadd( 63.0193, 0.419299, -21.8133, 0.45 ) }
    dend_19 { pt3dadd( 65.6804, -7.87271, -20.392, 0.45 ) }
    dend_19 { pt3dadd( 67.6998, -14.4764, -19.143, 0.45 ) }
    dend_19 { pt3dadd( 68.6535, -17.5714, -18.5044, 0.45 ) }
    dend_19 { pt3dadd( 69.7575, -21.0182, -17.8144, 0.45 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 15/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 55.3193, 23.6435, -25.4879, 0.57 ) }
    dend_18 { pt3dadd( 52.9117, 23.4517, -27.3156, 0.57 ) }
    dend_18 { pt3dadd( 51.33, 22.8161, -27.8751, 0.68 ) }
    dend_18 { pt3dadd( 49.983, 22.0891, -28.3702, 0.68 ) }
    dend_18 { pt3dadd( 48.6351, 21.3617, -28.8657, 0.68 ) }
    dend_18 { pt3dadd( 46.4995, 20.2091, -29.6507, 0.68 ) }
    dend_18 { pt3dadd( 44.456, 19.1062, -30.4018, 0.68 ) }
    dend_18 { pt3dadd( 42.0224, 18.0071, -31.3178, 0.68 ) }
    dend_18 { pt3dadd( 39.5291, 17.0477, -32.1508, 0.57 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 58.2517, 44.0116, -24.6164, 0.68 ) }
    dend_16 { pt3dadd( 58.779, 45.107, -23.3481, 0.68 ) }
    dend_16 { pt3dadd( 59.2282, 46.04, -22.2677, 0.68 ) }
    dend_16 { pt3dadd( 59.9792, 47.5999, -20.4613, 0.68 ) }
    dend_16 { pt3dadd( 61.4961, 50.7508, -16.8126, 0.68 ) }
    dend_16 { pt3dadd( 62.345, 52.5142, -14.7707, 0.68 ) }
    dend_16 { pt3dadd( 63.4844, 54.8808, -12.0301, 0.68 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 31/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 58.2517, 44.0116, -24.6164, 0.79 ) }
    dend_15 { pt3dadd( 59.8581, 44.8976, -24.4907, 0.79 ) }
    dend_15 { pt3dadd( 62.4139, 46.3071, -24.2906, 0.79 ) }
    dend_15 { pt3dadd( 64.0693, 47.2201, -24.161, 0.79 ) }
    dend_15 { pt3dadd( 65.9158, 48.2384, -24.0165, 0.79 ) }
    dend_15 { pt3dadd( 66.9641, 48.8166, -23.9344, 0.79 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 129.114, -156.207, -12.0444, 0.57 ) }
    dend_7 { pt3dadd( 130.559, -159.114, -11.581, 0.57 ) }
    dend_7 { pt3dadd( 132.792, -163.437, -10.7757, 0.57 ) }
    dend_7 { pt3dadd( 133.907, -165.516, -10.3856, 0.57 ) }
    dend_7 { pt3dadd( 136.845, -170.834, -9.40952, 0.57 ) }
    dend_7 { pt3dadd( 139.725, -175.936, -8.43804, 0.57 ) }
    dend_7 { pt3dadd( 142.047, -180.049, -7.65477, 0.57 ) }
    dend_7 { pt3dadd( 143.433, -182.378, -7.10923, 0.57 ) }
    dend_7 { pt3dadd( 144.702, -184.451, -6.56795, 0.57 ) }
    dend_7 { pt3dadd( 145.919, -186.377, -6.07151, 0.57 ) }
    dend_7 { pt3dadd( 147.424, -188.58, -5.61392, 0.57 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 129.114, -156.207, -12.0444, 0.34 ) }
    dend_6 { pt3dadd( 131.176, -157.875, -11.3327, 0.34 ) }
    dend_6 { pt3dadd( 132.653, -159.154, -10.6248, 0.34 ) }
    dend_6 { pt3dadd( 133.286, -159.725, -10.3057, 0.34 ) }
    dend_6 { pt3dadd( 136.118, -162.458, -9.136, 0.34 ) }
    dend_6 { pt3dadd( 138.375, -164.75, -8.35396, 0.57 ) }
    dend_6 { pt3dadd( 141.402, -167.905, -7.37332, 0.57 ) }
    dend_6 { pt3dadd( 143.4, -170.12, -6.73378, 0.57 ) }
    dend_6 { pt3dadd( 145.167, -172.133, -6.31142, 0.57 ) }
    dend_6 { pt3dadd( 148.664, -176.212, -5.73266, 0.57 ) }
    dend_6 { pt3dadd( 150.655, -178.551, -5.56084, 0.57 ) }
    dend_6 { pt3dadd( 152.637, -180.848, -5.60978, 0.57 ) }
    dend_6 { pt3dadd( 155.286, -183.793, -5.94451, 0.57 ) }
    dend_6 { pt3dadd( 159.13, -187.956, -6.60616, 0.57 ) }
    dend_6 { pt3dadd( 162.363, -191.396, -7.1777, 0.57 ) }
    dend_6 { pt3dadd( 164.481, -193.567, -7.44782, 0.57 ) }
    dend_6 { pt3dadd( 168.183, -197.224, -7.85477, 0.57 ) }
    dend_6 { pt3dadd( 169.264, -198.245, -7.95643, 0.57 ) }
    dend_6 { pt3dadd( 171.665, -200.394, -8.0628, 0.57 ) }
    dend_6 { pt3dadd( 173.476, -201.91, -7.95003, 0.57 ) }
    dend_6 { pt3dadd( 176.981, -204.557, -7.48311, 0.57 ) }
    dend_6 { pt3dadd( 178.089, -205.328, -7.23719, 0.57 ) }
    dend_6 { pt3dadd( 179.941, -206.513, -6.41401, 0.57 ) }
    dend_6 { pt3dadd( 181.249, -207.286, -5.7349, 0.57 ) }
    dend_6 { pt3dadd( 182.578, -208.004, -4.93202, 0.57 ) }
    dend_6 { pt3dadd( 183.491, -208.481, -4.35587, 0.57 ) }
    dend_6 { pt3dadd( 185.684, -209.619, -2.92179, 0.57 ) }
    dend_6 { pt3dadd( 190.292, -212.07, 0.382058, 0.57 ) }
    dend_6 { pt3dadd( 191.532, -212.742, 1.36088, 0.57 ) }
    dend_6 { pt3dadd( 193.906, -214.055, 3.36176, 0.57 ) }
    dend_6 { pt3dadd( 196.303, -215.492, 5.48181, 0.57 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 84.6176, 13.0312, -9.28185, 0.45 ) }
    dend_4 { pt3dadd( 86.831, 14.8584, -13.3499, 0.45 ) }
    dend_4 { pt3dadd( 87.954, 15.7948, -15.407, 0.45 ) }
    dend_4 { pt3dadd( 89.4841, 17.3394, -18.4778, 0.45 ) }
    dend_4 { pt3dadd( 89.8893, 17.7675, -19.2249, 0.45 ) }
    dend_4 { pt3dadd( 90.0916, 17.9792, -19.5601, 0.45 ) }
    dend_4 { pt3dadd( 92.0289, 20.0199, -22.3981, 0.45 ) }
    dend_4 { pt3dadd( 92.2828, 20.2597, -22.671, 0.45 ) }
    dend_4 { pt3dadd( 93.8322, 21.7497, -24.3534, 0.45 ) }
    dend_4 { pt3dadd( 95.0093, 23.0273, -25.4713, 0.45 ) }
    dend_4 { pt3dadd( 95.6526, 23.7632, -26.0617, 0.45 ) }
    dend_4 { pt3dadd( 97.2035, 25.5067, -27.2939, 0.45 ) }
    dend_4 { pt3dadd( 98.6329, 26.9372, -27.966, 0.45 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 92/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 84.6176, 13.0312, -9.28185, 0.45 ) }
    dend_3 { pt3dadd( 86.1471, 13.3875, -9.28185, 0.45 ) }
    dend_3 { pt3dadd( 87.1312, 13.6167, -9.28185, 0.45 ) }
    // Section: dend_64, id: dend_64, parent: dend_48 (entry count 95/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 35.1884, -21.1688, 18.7465, 0.45 ) }
    dend_64 { pt3dadd( 33.4882, -25.2108, 20.4824, 0.45 ) }
    dend_64 { pt3dadd( 31.5755, -29.9098, 22.4434, 0.45 ) }
    dend_64 { pt3dadd( 30.4947, -32.5192, 23.5662, 0.45 ) }
    dend_64 { pt3dadd( 29.298, -35.3431, 24.7282, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_64 { pt3dadd( 27.9035, -38.654, 25.9942, 0.45 ) }
    dend_64 { pt3dadd( 27.3933, -39.9248, 26.4255, 0.45 ) }
    dend_64 { pt3dadd( 26.7806, -41.528, 26.8371, 0.45 ) }
    dend_64 { pt3dadd( 25.4911, -45.5195, 27.7447, 0.45 ) }
    dend_64 { pt3dadd( 24.7404, -48.5856, 28.2047, 0.45 ) }
    dend_64 { pt3dadd( 24.2484, -51.2733, 28.411, 0.45 ) }
    dend_64 { pt3dadd( 23.9296, -53.4843, 28.5143, 0.45 ) }
    dend_64 { pt3dadd( 23.722, -55.5167, 28.7113, 0.45 ) }
    dend_64 { pt3dadd( 23.5832, -58.7387, 29.205, 0.45 ) }
    dend_64 { pt3dadd( 23.6292, -60.8067, 29.8976, 0.45 ) }
    dend_64 { pt3dadd( 23.7539, -62.6793, 30.8449, 0.45 ) }
    dend_64 { pt3dadd( 24.0094, -65.358, 32.3507, 0.45 ) }
    dend_64 { pt3dadd( 24.3563, -68.0878, 34.0182, 0.45 ) }
    dend_64 { pt3dadd( 24.6164, -69.5761, 34.9511, 0.45 ) }
    dend_64 { pt3dadd( 25.723, -74.7384, 37.6219, 0.45 ) }
    dend_64 { pt3dadd( 26.6112, -78.1638, 39.0787, 0.45 ) }
    dend_64 { pt3dadd( 27.5402, -81.2303, 40.0204, 0.45 ) }
    dend_64 { pt3dadd( 28.4286, -84.0937, 40.4071, 0.45 ) }
    dend_64 { pt3dadd( 29.2932, -86.7957, 40.6019, 0.45 ) }
    dend_64 { pt3dadd( 30.8638, -92.0462, 40.7922, 0.45 ) }
    dend_64 { pt3dadd( 31.4935, -94.4089, 40.7883, 0.45 ) }
    dend_64 { pt3dadd( 31.8738, -96.2375, 41.1433, 0.45 ) }
    dend_64 { pt3dadd( 32.5947, -100.404, 42.2156, 0.45 ) }
    dend_64 { pt3dadd( 33.0494, -103.881, 43.2264, 0.45 ) }
    dend_64 { pt3dadd( 33.4004, -107.724, 44.7041, 0.45 ) }
    dend_64 { pt3dadd( 33.506, -109.683, 45.7822, 0.45 ) }
    dend_64 { pt3dadd( 33.6398, -117.094, 50.0532, 0.79 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 27/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 35.1884, -21.1688, 18.7465, 0.45 ) }
    dend_49 { pt3dadd( 37.2411, -22.5018, 19.1897, 0.45 ) }
    dend_49 { pt3dadd( 38.4161, -23.5103, 19.4115, 0.45 ) }
    dend_49 { pt3dadd( 40.3041, -25.3556, 19.7181, 0.45 ) }
    dend_49 { pt3dadd( 41.9691, -27.1237, 19.9648, 0.45 ) }
    dend_49 { pt3dadd( 44.3968, -29.8772, 20.2845, 0.45 ) }
    dend_49 { pt3dadd( 47.4398, -33.5511, 20.6508, 0.45 ) }
    dend_49 { pt3dadd( 50.8874, -38.331, 21.0675, 0.45 ) }
    dend_49 { pt3dadd( 53.4402, -42.2526, 21.0806, 0.45 ) }
    dend_49 { pt3dadd( 54.7876, -44.4599, 21.0478, 0.45 ) }
    dend_49 { pt3dadd( 57.217, -48.6694, 20.9099, 0.45 ) }
    dend_49 { pt3dadd( 58.7925, -51.4883, 20.7172, 0.45 ) }
    dend_49 { pt3dadd( 60.3918, -54.519, 20.4009, 0.45 ) }
    dend_49 { pt3dadd( 63.4542, -61.1201, 19.3021, 0.45 ) }
    // Section: dend_41, id: dend_41, parent: dend_29 (entry count 41/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -3.30897, -57.9081, 16.1263, 0.12 ) }
    dend_41 { pt3dadd( -3.7188, -58.452, 15.7458, 0.12 ) }
    dend_41 { pt3dadd( -4.33786, -59.8057, 14.9294, 0.57 ) }
    dend_41 { pt3dadd( -4.7478, -61.01, 14.355, 0.57 ) }
    dend_41 { pt3dadd( -5.06666, -62.0851, 14.0144, 0.57 ) }
    dend_41 { pt3dadd( -6.1335, -65.4989, 12.7971, 0.57 ) }
    dend_41 { pt3dadd( -6.86112, -67.535, 11.8606, 0.57 ) }
    dend_41 { pt3dadd( -7.28095, -68.6831, 11.256, 0.91 ) }
    dend_41 { pt3dadd( -7.70458, -69.7331, 10.4211, 0.91 ) }
    dend_41 { pt3dadd( -8.32262, -71.0321, 9.05371, 0.91 ) }
    dend_41 { pt3dadd( -9.50891, -72.6666, 6.36827, 0.68 ) }
    dend_41 { pt3dadd( -10.5532, -73.396, 3.9529, 0.68 ) }
    dend_41 { pt3dadd( -11.0855, -73.6531, 2.7173, 0.68 ) }
    dend_41 { pt3dadd( -12.8328, -74.3362, -1.60313, 0.68 ) }
    dend_41 { pt3dadd( -13.2421, -74.4556, -2.67487, 0.68 ) }
    dend_41 { pt3dadd( -14.1698, -74.6376, -5.29096, 0.68 ) }
    dend_41 { pt3dadd( -15.6978, -74.8138, -9.85685, 0.68 ) }
    dend_41 { pt3dadd( -16.2609, -74.8657, -11.6875, 0.68 ) }
    dend_41 { pt3dadd( -17.3009, -75.0565, -15.3438, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_29 (entry count 60/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -3.30897, -57.9081, 16.1263, 0.79 ) }
    dend_32 { pt3dadd( -2.62575, -61.4955, 16.3044, 0.79 ) }
    dend_32 { pt3dadd( -1.70506, -66.3296, 16.5443, 0.79 ) }
    dend_32 { pt3dadd( -1.27994, -68.5618, 16.655, 0.79 ) }
    dend_32 { pt3dadd( -0.952006, -70.2836, 16.7405, 0.79 ) }
    dend_32 { pt3dadd( -0.79855, -71.0894, 16.7805, 0.79 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 66/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.30897, -57.9081, 16.1263, 0.57 ) }
    dend_30 { pt3dadd( -2.38897, -58.4687, 19.6263, 0.57 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 10.6956, -46.5148, 2.49594, 1.13 ) }
    dend_28 { pt3dadd( 11.2924, -48.1635, 3.59645, 1.13 ) }
    dend_28 { pt3dadd( 12.2738, -50.7155, 5.09731, 0.91 ) }
    dend_28 { pt3dadd( 12.8682, -52.2642, 5.86159, 0.91 ) }
    dend_28 { pt3dadd( 13.8546, -54.8695, 6.99476, 0.91 ) }
    dend_28 { pt3dadd( 14.8784, -57.733, 8.10594, 0.91 ) }
    dend_28 { pt3dadd( 15.7292, -60.3039, 9.08801, 0.91 ) }
    dend_28 { pt3dadd( 16.2429, -62.0782, 9.68442, 0.91 ) }
    dend_28 { pt3dadd( 16.9607, -64.9946, 10.6459, 0.91 ) }
    dend_28 { pt3dadd( 17.2154, -66.2144, 11.0537, 1.92 ) }
    dend_28 { pt3dadd( 17.5164, -67.8498, 11.5733, 1.36 ) }
    dend_28 { pt3dadd( 17.9207, -70.2598, 12.3918, 1.02 ) }
    dend_28 { pt3dadd( 18.3496, -73.1036, 13.5022, 1.02 ) }
    dend_28 { pt3dadd( 18.7278, -75.5316, 14.5275, 1.02 ) }
    dend_28 { pt3dadd( 18.8972, -76.526, 14.9619, 1.02 ) }
    dend_28 { pt3dadd( 19.113, -77.6433, 15.451, 0.68 ) }
    dend_28 { pt3dadd( 19.5328, -79.4341, 16.1268, 0.68 ) }
    dend_28 { pt3dadd( 19.8112, -80.3966, 16.3867, 1.02 ) }
    dend_28 { pt3dadd( 20.1132, -81.2206, 16.5155, 2.15 ) }
    dend_28 { pt3dadd( 20.7324, -82.601, 16.5803, 1.47 ) }
    dend_28 { pt3dadd( 21.8382, -84.7766, 16.5905, 1.13 ) }
    dend_28 { pt3dadd( 22.6054, -86.2662, 16.5777, 0.79 ) }
    dend_28 { pt3dadd( 23.1301, -87.2461, 16.5485, 0.57 ) }
    dend_28 { pt3dadd( 24.1863, -89.0465, 16.4953, 0.57 ) }
    dend_28 { pt3dadd( 25.1456, -90.5531, 16.4501, 0.57 ) }
    dend_28 { pt3dadd( 25.9792, -91.7911, 16.4039, 0.57 ) }
    dend_28 { pt3dadd( 26.7388, -92.9642, 16.3532, 0.57 ) }
    dend_28 { pt3dadd( 27.2145, -93.83, 16.2965, 0.57 ) }
    dend_28 { pt3dadd( 27.9643, -95.4251, 16.1201, 0.57 ) }
    dend_28 { pt3dadd( 28.3752, -96.3602, 16.1045, 0.57 ) }
    dend_28 { pt3dadd( 28.9581, -97.7929, 16.1574, 2.83 ) }
    dend_28 { pt3dadd( 29.7233, -99.6597, 16.3535, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_28 { pt3dadd( 30.8494, -102.295, 16.6817, 1.02 ) }
    dend_28 { pt3dadd( 31.459, -103.781, 16.9149, 0.68 ) }
    dend_28 { pt3dadd( 32.9838, -107.462, 17.5496, 0.68 ) }
    dend_28 { pt3dadd( 33.5597, -108.739, 17.7685, 0.68 ) }
    dend_28 { pt3dadd( 34.624, -110.865, 18.2041, 0.68 ) }
    dend_28 { pt3dadd( 35.2684, -112.038, 18.4621, 0.68 ) }
    dend_28 { pt3dadd( 36.1332, -113.451, 18.7366, 0.68 ) }
    dend_28 { pt3dadd( 37.3571, -115.328, 18.981, 0.68 ) }
    dend_28 { pt3dadd( 38.8181, -117.371, 19.0946, 0.68 ) }
    dend_28 { pt3dadd( 40.9245, -120.062, 19.2558, 0.68 ) }
    dend_28 { pt3dadd( 42.2637, -121.71, 19.3554, 0.68 ) }
    dend_28 { pt3dadd( 43.8957, -123.689, 19.4272, 0.57 ) }
    dend_28 { pt3dadd( 45.0523, -125.105, 19.4261, 0.57 ) }
    dend_28 { pt3dadd( 46.1037, -126.519, 19.2909, 0.57 ) }
    dend_28 { pt3dadd( 47.1262, -128.029, 18.939, 0.57 ) }
    dend_28 { pt3dadd( 48.1251, -129.634, 18.2827, 0.57 ) }
    dend_28 { pt3dadd( 49.3852, -131.743, 17.2747, 0.57 ) }
    dend_28 { pt3dadd( 49.918, -132.683, 16.7542, 1.47 ) }
    dend_28 { pt3dadd( 51.2922, -135.113, 15.2797, 0.68 ) }
    dend_28 { pt3dadd( 52.1295, -136.564, 14.3695, 0.68 ) }
    dend_28 { pt3dadd( 53.3122, -138.452, 13.1689, 0.68 ) }
    dend_28 { pt3dadd( 55.0737, -141.021, 11.5748, 0.68 ) }
    dend_28 { pt3dadd( 56.8014, -143.34, 10.2843, 0.68 ) }
    dend_28 { pt3dadd( 57.6207, -144.358, 9.75165, 0.68 ) }
    dend_28 { pt3dadd( 58.1597, -145.011, 9.60663, 0.68 ) }
    dend_28 { pt3dadd( 59.0348, -146.271, 9.81038, 0.57 ) }
    dend_28 { pt3dadd( 59.4136, -146.923, 10.0817, 0.57 ) }
    dend_28 { pt3dadd( 59.9203, -147.908, 10.6231, 0.57 ) }
    dend_28 { pt3dadd( 60.7591, -149.684, 11.5793, 0.57 ) }
    dend_28 { pt3dadd( 63.4529, -155.915, 14.6035, 0.68 ) }
    dend_28 { pt3dadd( 64.9663, -159.652, 16.1244, 0.68 ) }
    dend_28 { pt3dadd( 65.6357, -161.432, 16.6806, 0.68 ) }
    dend_28 { pt3dadd( 66.0614, -162.668, 16.9025, 0.68 ) }
    dend_28 { pt3dadd( 67.1441, -166.045, 16.678, 0.68 ) }
    dend_28 { pt3dadd( 67.4722, -167.066, 16.3217, 0.68 ) }
    dend_28 { pt3dadd( 68.094, -168.886, 15.1291, 2.04 ) }
    dend_28 { pt3dadd( 68.6792, -170.466, 13.8624, 0.79 ) }
    dend_28 { pt3dadd( 69.3346, -172.099, 12.5281, 0.79 ) }
    dend_28 { pt3dadd( 70.6253, -175.157, 10.2733, 0.79 ) }
    dend_28 { pt3dadd( 71.3876, -176.841, 9.29335, 0.79 ) }
    dend_28 { pt3dadd( 72.1248, -178.413, 8.61096, 0.79 ) }
    dend_28 { pt3dadd( 72.9744, -180.225, 8.16351, 0.79 ) }
    dend_28 { pt3dadd( 73.8085, -181.889, 8.00408, 0.68 ) }
    dend_28 { pt3dadd( 74.9787, -184.108, 8.11987, 0.68 ) }
    dend_28 { pt3dadd( 76.0676, -186.108, 8.49148, 0.68 ) }
    dend_28 { pt3dadd( 77.0938, -187.9, 9.22337, 0.68 ) }
    dend_28 { pt3dadd( 77.8664, -189.197, 9.92416, 0.68 ) }
    dend_28 { pt3dadd( 78.688, -190.518, 10.8352, 0.68 ) }
    dend_28 { pt3dadd( 79.1802, -191.267, 11.3946, 1.58 ) }
    dend_28 { pt3dadd( 79.9362, -192.337, 12.1554, 1.58 ) }
    dend_28 { pt3dadd( 83.1297, -196.748, 15.1111, 0.68 ) }
    dend_28 { pt3dadd( 84.2965, -198.291, 16.107, 0.68 ) }
    dend_28 { pt3dadd( 86.4682, -201.047, 17.7925, 0.68 ) }
    dend_28 { pt3dadd( 88.4424, -203.535, 19.3178, 0.68 ) }
    dend_28 { pt3dadd( 90.1782, -205.674, 20.5769, 0.68 ) }
    dend_28 { pt3dadd( 91.5595, -207.346, 21.5489, 0.68 ) }
    dend_28 { pt3dadd( 93.1419, -209.19, 22.4878, 0.68 ) }
    dend_28 { pt3dadd( 94.2566, -210.394, 23.2747, 0.68 ) }
    dend_28 { pt3dadd( 96.3757, -212.507, 24.7916, 0.68 ) }
    dend_28 { pt3dadd( 97.1254, -213.184, 25.2665, 0.68 ) }
    dend_28 { pt3dadd( 99.1895, -214.892, 26.3147, 2.38 ) }
    dend_28 { pt3dadd( 100.247, -215.738, 26.6765, 1.92 ) }
    dend_28 { pt3dadd( 103.382, -218.152, 27.3682, 0.57 ) }
    dend_28 { pt3dadd( 104.591, -219.08, 27.4492, 0.57 ) }
    dend_28 { pt3dadd( 108.785, -222.287, 27.2088, 0.57 ) }
    dend_28 { pt3dadd( 111.701, -224.532, 26.9364, 0.57 ) }
    dend_28 { pt3dadd( 113.546, -225.948, 26.6743, 0.57 ) }
    dend_28 { pt3dadd( 115.876, -227.732, 26.3554, 0.57 ) }
    dend_28 { pt3dadd( 118.092, -229.396, 26.0568, 0.57 ) }
    dend_28 { pt3dadd( 119.593, -230.531, 26.0194, 0.57 ) }
    dend_28 { pt3dadd( 120.787, -231.433, 26.1873, 2.15 ) }
    dend_28 { pt3dadd( 121.78, -232.159, 26.3726, 1.13 ) }
    dend_28 { pt3dadd( 123.305, -233.273, 26.7203, 0.57 ) }
    dend_28 { pt3dadd( 124.727, -234.392, 26.8432, 0.57 ) }
    dend_28 { pt3dadd( 125.337, -234.89, 26.8357, 0.57 ) }
    dend_28 { pt3dadd( 126.081, -235.58, 26.793, 0.57 ) }
    dend_28 { pt3dadd( 127.024, -236.53, 26.7011, 0.57 ) }
    dend_28 { pt3dadd( 127.254, -236.798, 26.6815, 2.38 ) }
    dend_28 { pt3dadd( 129.459, -239.626, 26.5147, 0.45 ) }
    dend_28 { pt3dadd( 130.87, -241.556, 26.4375, 0.45 ) }
    dend_28 { pt3dadd( 132.424, -243.735, 26.3912, 0.45 ) }
    dend_28 { pt3dadd( 133.499, -245.275, 26.4438, 0.45 ) }
    dend_28 { pt3dadd( 135.403, -248.095, 26.7956, 0.45 ) }
    dend_28 { pt3dadd( 135.904, -248.868, 26.9489, 0.45 ) }
    dend_28 { pt3dadd( 138.001, -252.374, 28.0084, 0.45 ) }
    dend_28 { pt3dadd( 139.437, -255.061, 28.9007, 0.45 ) }
    dend_28 { pt3dadd( 140.589, -257.576, 29.6876, 0.45 ) }
    dend_28 { pt3dadd( 141.461, -259.932, 30.4755, 0.45 ) }
    dend_28 { pt3dadd( 141.782, -261.049, 30.8671, 0.45 ) }
    dend_28 { pt3dadd( 142.178, -262.857, 31.4333, 0.45 ) }
    dend_28 { pt3dadd( 142.536, -265.245, 32.0226, 0.45 ) }
    dend_28 { pt3dadd( 142.9, -267.722, 32.2031, 0.45 ) }
    dend_28 { pt3dadd( 143.025, -268.355, 32.1405, 1.24 ) }
    dend_28 { pt3dadd( 143.487, -269.927, 31.8248, 0.57 ) }
    dend_28 { pt3dadd( 144.276, -271.844, 31.3763, 0.57 ) }
    dend_28 { pt3dadd( 145.606, -274.315, 30.7534, 0.57 ) }
    dend_28 { pt3dadd( 147.04, -276.575, 30.2343, 1.36 ) }
    dend_28 { pt3dadd( 148.319, -278.37, 30.0303, 0.57 ) }
    dend_28 { pt3dadd( 149.851, -280.33, 29.9502, 0.57 ) }
    dend_28 { pt3dadd( 151.946, -282.826, 30.0251, 0.57 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( 153.594, -284.677, 30.3326, 0.57 ) }
    dend_28 { pt3dadd( 154.831, -285.996, 30.7051, 0.57 ) }
    dend_28 { pt3dadd( 157.485, -288.861, 31.6374, 0.57 ) }
    dend_28 { pt3dadd( 159.913, -291.651, 32.4779, 0.57 ) }
    dend_28 { pt3dadd( 160.894, -292.924, 32.8518, 0.57 ) }
    dend_28 { pt3dadd( 162.527, -295.383, 33.4213, 2.38 ) }
    dend_28 { pt3dadd( 162.982, -296.173, 33.5441, 1.58 ) }
    dend_28 { pt3dadd( 164.834, -299.82, 34.0436, 0.68 ) }
    dend_28 { pt3dadd( 165.814, -302.076, 34.2697, 0.68 ) }
    dend_28 { pt3dadd( 166.879, -304.874, 34.7493, 0.79 ) }
    dend_28 { pt3dadd( 167.833, -307.499, 35.2478, 0.57 ) }
    dend_28 { pt3dadd( 168.694, -310.026, 35.7344, 0.57 ) }
    dend_28 { pt3dadd( 169.921, -313.798, 36.5939, 0.57 ) }
    dend_28 { pt3dadd( 170.808, -316.64, 37.3551, 0.57 ) }
    dend_28 { pt3dadd( 171.637, -319.359, 38.0347, 0.57 ) }
    dend_28 { pt3dadd( 172.042, -320.675, 38.3216, 0.57 ) }
    dend_28 { pt3dadd( 172.689, -322.804, 38.7644, 0.57 ) }
    dend_28 { pt3dadd( 173.618, -325.985, 39.2449, 0.57 ) }
    dend_28 { pt3dadd( 174.225, -327.994, 39.3222, 0.57 ) }
    dend_28 { pt3dadd( 174.967, -330.364, 39.154, 0.57 ) }
    dend_28 { pt3dadd( 175.498, -332.016, 38.8469, 0.57 ) }
    dend_28 { pt3dadd( 175.846, -333.036, 38.5988, 0.57 ) }
    dend_28 { pt3dadd( 176.553, -334.926, 38.1211, 0.57 ) }
    dend_28 { pt3dadd( 177.85, -338.079, 37.3283, 0.57 ) }
    dend_28 { pt3dadd( 178.98, -340.545, 36.8508, 1.13 ) }
    dend_28 { pt3dadd( 179.695, -341.965, 36.6729, 2.38 ) }
    dend_28 { pt3dadd( 179.958, -342.457, 36.6354, 2.38 ) }
    dend_28 { pt3dadd( 181.797, -345.686, 36.5892, 0.79 ) }
    dend_28 { pt3dadd( 182.834, -347.506, 36.5117, 0.79 ) }
    dend_28 { pt3dadd( 184.007, -349.698, 36.4341, 0.57 ) }
    dend_28 { pt3dadd( 184.912, -351.496, 36.3106, 0.57 ) }
    dend_28 { pt3dadd( 185.673, -353.181, 36.1336, 0.57 ) }
    dend_28 { pt3dadd( 186.29, -354.67, 35.9024, 0.57 ) }
    dend_28 { pt3dadd( 187.79, -358.415, 35.0798, 0.57 ) }
    dend_28 { pt3dadd( 188.024, -359.043, 34.9583, 2.94 ) }
    dend_28 { pt3dadd( 189.09, -361.907, 34.399, 0.68 ) }
    dend_28 { pt3dadd( 190.143, -364.648, 33.9677, 0.68 ) }
    dend_28 { pt3dadd( 191.048, -366.796, 33.726, 0.68 ) }
    dend_28 { pt3dadd( 191.846, -368.535, 33.5979, 0.68 ) }
    dend_28 { pt3dadd( 193.206, -371.265, 33.5207, 0.68 ) }
    dend_28 { pt3dadd( 194.499, -373.838, 33.4035, 0.68 ) }
    dend_28 { pt3dadd( 195.451, -375.71, 33.2866, 0.68 ) }
    dend_28 { pt3dadd( 196.355, -377.484, 33.1319, 0.68 ) }
    dend_28 { pt3dadd( 198.062, -380.855, 32.8764, 0.68 ) }
    dend_28 { pt3dadd( 198.88, -382.443, 32.7771, 0.68 ) }
    dend_28 { pt3dadd( 199.751, -384.068, 32.7041, 0.68 ) }
    dend_28 { pt3dadd( 201.996, -388.393, 32.8649, 0.68 ) }
    dend_28 { pt3dadd( 202.495, -389.379, 32.9474, 0.68 ) }
    dend_28 { pt3dadd( 204.106, -392.871, 33.4635, 0.57 ) }
    dend_28 { pt3dadd( 204.495, -393.799, 33.6491, 0.57 ) }
    dend_28 { pt3dadd( 204.742, -394.467, 33.8024, 2.49 ) }
    dend_28 { pt3dadd( 206.262, -398.892, 35.002, 0.68 ) }
    dend_28 { pt3dadd( 206.649, -400.151, 35.4083, 0.68 ) }
    dend_28 { pt3dadd( 208.038, -404.577, 36.8977, 0.68 ) }
    dend_28 { pt3dadd( 208.501, -405.972, 37.3554, 0.68 ) }
    dend_28 { pt3dadd( 209.544, -408.775, 38.2149, 0.68 ) }
    dend_28 { pt3dadd( 210.739, -411.603, 39.0079, 0.68 ) }
    dend_28 { pt3dadd( 212.004, -414.152, 39.6083, 0.68 ) }
    dend_28 { pt3dadd( 213.24, -416.307, 40.1686, 0.68 ) }
    dend_28 { pt3dadd( 215.314, -419.389, 41.0037, 0.68 ) }
    dend_28 { pt3dadd( 216.161, -420.548, 41.3731, 0.68 ) }
    dend_28 { pt3dadd( 216.797, -421.397, 41.703, 2.72 ) }
    dend_28 { pt3dadd( 217.735, -422.708, 42.2488, 1.92 ) }
    dend_28 { pt3dadd( 219.381, -425.319, 43.445, 0.91 ) }
    dend_28 { pt3dadd( 220.248, -427.023, 44.3639, 0.91 ) }
    dend_28 { pt3dadd( 220.943, -428.773, 45.4593, 0.68 ) }
    dend_28 { pt3dadd( 221.6, -430.707, 46.82, 0.68 ) }
    dend_28 { pt3dadd( 222.218, -432.689, 48.3899, 0.68 ) }
    dend_28 { pt3dadd( 222.971, -435.229, 50.5508, 0.68 ) }
    dend_28 { pt3dadd( 223.486, -436.998, 52.2777, 0.68 ) }
    dend_28 { pt3dadd( 224.223, -439.415, 54.9522, 0.68 ) }
    dend_28 { pt3dadd( 224.865, -441.207, 57.3163, 0.68 ) }
    dend_28 { pt3dadd( 225.834, -443.527, 60.6987, 0.68 ) }
    dend_28 { pt3dadd( 226.319, -444.527, 62.3861, 0.68 ) }
    dend_28 { pt3dadd( 227.529, -446.703, 66.1006, 0.68 ) }
    dend_28 { pt3dadd( 228.334, -448.014, 68.2501, 0.68 ) }
    dend_28 { pt3dadd( 230.458, -451.305, 73.3253, 0.68 ) }
    dend_28 { pt3dadd( 231.288, -452.599, 75.1679, 0.68 ) }
    dend_28 { pt3dadd( 233.31, -455.745, 79.2243, 0.68 ) }
    dend_28 { pt3dadd( 234.741, -457.994, 81.8339, 0.68 ) }
    dend_28 { pt3dadd( 235.229, -458.761, 82.5689, 0.68 ) }
    dend_28 { pt3dadd( 235.654, -459.44, 83.1514, 0.68 ) }
    dend_28 { pt3dadd( 236.852, -461.568, 84.6908, 0.68 ) }
    dend_28 { pt3dadd( 237.326, -462.441, 85.3758, 0.68 ) }
    dend_28 { pt3dadd( 238.531, -464.809, 87.139, 0.45 ) }
    dend_28 { pt3dadd( 239.151, -466.049, 88.3711, 0.45 ) }
    dend_28 { pt3dadd( 239.407, -466.597, 88.9496, 0.45 ) }
    dend_28 { pt3dadd( 239.798, -467.439, 89.8656, 0.45 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 88/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 10.6956, -46.5148, 2.49594, 0.79 ) }
    dend_27 { pt3dadd( 12.0877, -45.201, 1.70501, 0.79 ) }
    dend_27 { pt3dadd( 13.3032, -44.0537, 1.01437, 0.57 ) }
    dend_27 { pt3dadd( 13.8592, -43.5289, 0.698453, 0.34 ) }
    dend_27 { pt3dadd( 14.4917, -42.9319, 0.339055, 0.34 ) }
    dend_27 { pt3dadd( 14.7602, -42.6785, 0.186509, 0.34 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 94/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 69.7575, -21.0182, -17.8144, 0.45 ) }
    dend_21 { pt3dadd( 70.4343, -22.7789, -17.7713, 0.45 ) }
    dend_21 { pt3dadd( 71.3007, -25.0181, -17.8678, 0.45 ) }
    dend_21 { pt3dadd( 73.1053, -29.7079, -18.2261, 0.45 ) }
    dend_21 { pt3dadd( 74.3487, -32.96, -18.9097, 0.45 ) }
    dend_21 { pt3dadd( 75.4645, -36.2226, -19.778, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 75.742, -37.1689, -20.0405, 0.45 ) }
    dend_21 { pt3dadd( 76.5863, -40.4976, -21.0097, 0.45 ) }
    dend_21 { pt3dadd( 77.5644, -44.8323, -22.2995, 0.45 ) }
    dend_21 { pt3dadd( 78.7578, -51.0249, -24.0633, 0.45 ) }
    dend_21 { pt3dadd( 79.347, -54.625, -25.0741, 0.45 ) }
    dend_21 { pt3dadd( 79.9543, -59.7243, -26.4352, 0.45 ) }
    dend_21 { pt3dadd( 80.289, -64.5598, -27.5761, 0.45 ) }
    dend_21 { pt3dadd( 80.2986, -67.8998, -28.2271, 0.45 ) }
    dend_21 { pt3dadd( 79.8959, -72.5032, -28.9649, 0.45 ) }
    dend_21 { pt3dadd( 79.3567, -75.1932, -29.2408, 0.45 ) }
    dend_21 { pt3dadd( 78.7426, -77.6259, -29.5383, 0.45 ) }
    dend_21 { pt3dadd( 77.656, -80.5026, -29.976, 0.45 ) }
    dend_21 { pt3dadd( 76.4971, -82.5482, -30.3491, 0.45 ) }
    dend_21 { pt3dadd( 74.5902, -85.0512, -30.85, 0.45 ) }
    dend_21 { pt3dadd( 71.9093, -87.8078, -31.3999, 0.45 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 15/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 69.7575, -21.0182, -17.8144, 0.45 ) }
    dend_20 { pt3dadd( 73.0264, -26.484, -16.3659, 0.45 ) }
    dend_20 { pt3dadd( 74.4978, -28.9444, -15.7139, 0.45 ) }
    dend_20 { pt3dadd( 76.5197, -32.3252, -14.8179, 0.45 ) }
    dend_20 { pt3dadd( 77.5772, -34.0934, -14.3493, 0.45 ) }
    dend_20 { pt3dadd( 79.8531, -37.8988, -13.3409, 0.45 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 21/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 33.6398, -117.094, 50.0532, 0.57 ) }
    dend_66 { pt3dadd( 31.5945, -118.871, 50.9472, 0.57 ) }
    dend_66 { pt3dadd( 30.0212, -120.343, 51.7001, 0.57 ) }
    dend_66 { pt3dadd( 28.7539, -121.58, 52.3019, 0.57 ) }
    dend_66 { pt3dadd( 28.0038, -122.409, 52.6551, 0.57 ) }
    dend_66 { pt3dadd( 26.8491, -123.872, 53.231, 0.57 ) }
    dend_66 { pt3dadd( 25.3945, -126.058, 54.1888, 0.57 ) }
    dend_66 { pt3dadd( 24.6198, -127.479, 54.8636, 0.57 ) }
    dend_66 { pt3dadd( 24.1348, -128.54, 55.2987, 0.57 ) }
    dend_66 { pt3dadd( 23.3285, -130.393, 56.3582, 0.57 ) }
    dend_66 { pt3dadd( 22.2101, -132.956, 57.9515, 0.57 ) }
    dend_66 { pt3dadd( 20.7657, -135.904, 60.1196, 0.57 ) }
    dend_66 { pt3dadd( 20.2095, -136.822, 60.8917, 0.57 ) }
    dend_66 { pt3dadd( 18.5572, -138.786, 63.0852, 0.57 ) }
    dend_66 { pt3dadd( 13.904, -142.307, 68.738, 0.57 ) }
    dend_66 { pt3dadd( 12.3413, -142.907, 70.2992, 0.57 ) }
    dend_66 { pt3dadd( 10.0075, -143.193, 72.0933, 0.57 ) }
    dend_66 { pt3dadd( 7.65502, -143.177, 73.5143, 0.57 ) }
    dend_66 { pt3dadd( 4.67089, -143.089, 75.3148, 0.57 ) }
    dend_66 { pt3dadd( 2.18379, -142.997, 76.6252, 0.57 ) }
    dend_66 { pt3dadd( -0.725325, -143.012, 77.9659, 0.57 ) }
    dend_66 { pt3dadd( -3.22898, -143.221, 79.2667, 0.57 ) }
    dend_66 { pt3dadd( -6.35311, -143.797, 80.9714, 0.57 ) }
    dend_66 { pt3dadd( -11.0781, -145.313, 83.7684, 0.57 ) }
    dend_66 { pt3dadd( -13.343, -146.482, 85.47, 0.57 ) }
    dend_66 { pt3dadd( -15.5577, -147.987, 87.554, 0.57 ) }
    dend_66 { pt3dadd( -16.7755, -148.966, 88.9971, 0.57 ) }
    dend_66 { pt3dadd( -17.4395, -149.526, 89.9296, 0.57 ) }
    dend_66 { pt3dadd( -18.369, -150.314, 91.2658, 0.57 ) }
    dend_66 { pt3dadd( -21.8283, -152.922, 96.0627, 0.57 ) }
    dend_66 { pt3dadd( -22.5617, -153.44, 97.0581, 0.57 ) }
    dend_66 { pt3dadd( -23.5935, -154.122, 98.3887, 0.57 ) }
    dend_66 { pt3dadd( -26.9049, -156.191, 102.569, 0.57 ) }
    dend_66 { pt3dadd( -28.3109, -157.073, 104.213, 0.57 ) }
    dend_66 { pt3dadd( -32.4465, -159.653, 108.61, 0.57 ) }
    dend_66 { pt3dadd( -33.3319, -160.219, 109.473, 0.57 ) }
    dend_66 { pt3dadd( -36.7685, -162.457, 112.671, 0.57 ) }
    dend_66 { pt3dadd( -37.7335, -163.096, 113.523, 0.57 ) }
    dend_66 { pt3dadd( -39.9075, -164.522, 115.251, 0.57 ) }
    dend_66 { pt3dadd( -41.0157, -165.256, 116.06, 0.57 ) }
    dend_66 { pt3dadd( -45.8041, -168.566, 119.157, 0.57 ) }
    dend_66 { pt3dadd( -48.0313, -170.142, 120.48, 0.57 ) }
    dend_66 { pt3dadd( -50.8341, -172.168, 121.77, 0.57 ) }
    dend_66 { pt3dadd( -54.5246, -174.912, 123.143, 0.57 ) }
    dend_66 { pt3dadd( -58.8257, -178.172, 124.415, 0.57 ) }
    dend_66 { pt3dadd( -60.0206, -179.12, 124.598, 0.57 ) }
    dend_66 { pt3dadd( -62.0628, -180.828, 124.537, 0.57 ) }
    dend_66 { pt3dadd( -65.6984, -183.941, 123.196, 0.57 ) }
    dend_66 { pt3dadd( -67.6502, -185.644, 121.807, 0.57 ) }
    dend_66 { pt3dadd( -69.7749, -187.563, 119.834, 0.57 ) }
    dend_66 { pt3dadd( -72.0541, -189.644, 117.431, 0.57 ) }
    dend_66 { pt3dadd( -73.8657, -191.302, 115.366, 0.57 ) }
    dend_66 { pt3dadd( -80.7335, -197.748, 106.66, 0.57 ) }
    dend_66 { pt3dadd( -80.8486, -197.86, 106.499, 2.26 ) }
    dend_66 { pt3dadd( -82.7547, -199.72, 103.12, 0.68 ) }
    dend_66 { pt3dadd( -83.4304, -200.41, 101.505, 0.68 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 77/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 33.6398, -117.094, 50.0532, 0.57 ) }
    dend_65 { pt3dadd( 34.6928, -119.639, 55.9075, 0.57 ) }
    dend_65 { pt3dadd( 35.4629, -121.472, 59.9032, 0.57 ) }
    dend_65 { pt3dadd( 35.6509, -121.881, 60.6755, 0.57 ) }
    dend_65 { pt3dadd( 36.1932, -123.044, 62.6519, 0.57 ) }
    dend_65 { pt3dadd( 37.2514, -125.291, 66.4805, 0.57 ) }
    dend_65 { pt3dadd( 39.9048, -130.563, 75.3415, 0.57 ) }
    dend_65 { pt3dadd( 40.4977, -131.618, 76.944, 0.57 ) }
    dend_65 { pt3dadd( 41.7928, -133.811, 79.9727, 0.57 ) }
    dend_65 { pt3dadd( 42.3279, -134.66, 81.0377, 0.57 ) }
    dend_65 { pt3dadd( 44.5615, -138.03, 85.1136, 0.57 ) }
    dend_65 { pt3dadd( 45.3574, -139.269, 86.2861, 0.57 ) }
    dend_65 { pt3dadd( 46.6032, -141.263, 87.4903, 0.57 ) }
    dend_65 { pt3dadd( 47.8713, -143.113, 88.7382, 0.57 ) }
    dend_65 { pt3dadd( 49.6355, -145.663, 90.5841, 0.57 ) }
    // Section: dend_63, id: dend_63, parent: dend_49 (entry count 92/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 63.4542, -61.1201, 19.3021, 0.34 ) }
    dend_63 { pt3dadd( 62.8064, -62.9875, 17.9956, 0.34 ) }
    dend_63 { pt3dadd( 62.4635, -64.4674, 16.9164, 0.34 ) }
    dend_63 { pt3dadd( 62.1136, -66.0805, 15.7791, 0.45 ) }
    dend_63 { pt3dadd( 61.5198, -68.8532, 13.909, 0.45 ) }
    dend_63 { pt3dadd( 60.98, -71.4419, 12.1087, 0.45 ) }
    dend_63 { pt3dadd( 60.5011, -73.7952, 10.4973, 0.45 ) }
    dend_63 { pt3dadd( 60.0257, -76.8234, 8.16411, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_63 { pt3dadd( 59.8943, -78.0744, 7.19497, 0.45 ) }
    dend_63 { pt3dadd( 59.824, -78.9732, 6.50478, 0.45 ) }
    dend_63 { pt3dadd( 59.6606, -81.3696, 4.75113, 0.45 ) }
    dend_63 { pt3dadd( 59.5489, -83.0146, 3.66252, 0.45 ) }
    dend_63 { pt3dadd( 59.2263, -87.5016, 0.861972, 0.45 ) }
    dend_63 { pt3dadd( 59.0797, -89.3623, -0.308302, 0.45 ) }
    dend_63 { pt3dadd( 59.0115, -90.546, -1.03678, 0.45 ) }
    dend_63 { pt3dadd( 58.8484, -92.982, -2.41431, 0.45 ) }
    dend_63 { pt3dadd( 58.7043, -95.576, -3.94054, 0.45 ) }
    dend_63 { pt3dadd( 58.6063, -97.1107, -5.00394, 0.45 ) }
    dend_63 { pt3dadd( 58.3808, -99.7307, -7.03579, 0.45 ) }
    dend_63 { pt3dadd( 58.261, -100.97, -8.10672, 0.45 ) }
    dend_63 { pt3dadd( 58.0993, -102.635, -9.79635, 0.45 ) }
    dend_63 { pt3dadd( 57.6732, -106.467, -14.1182, 0.45 ) }
    dend_63 { pt3dadd( 57.5174, -108.145, -16.3091, 0.45 ) }
    dend_63 { pt3dadd( 57.4247, -109.425, -18.0302, 0.45 ) }
    dend_63 { pt3dadd( 57.345, -110.997, -20.1129, 0.45 ) }
    dend_63 { pt3dadd( 57.2158, -114.142, -24.2445, 0.23 ) }
    dend_63 { pt3dadd( 57.1974, -114.913, -25.252, 0.23 ) }
    dend_63 { pt3dadd( 57.0933, -117.746, -28.5172, 0.23 ) }
    dend_63 { pt3dadd( 57.0998, -118.865, -29.7437, 0.23 ) }
    dend_63 { pt3dadd( 57.1918, -121.443, -32.6614, 0.45 ) }
    dend_63 { pt3dadd( 57.2443, -122.279, -33.6408, 0.45 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 23/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 63.4542, -61.1201, 19.3021, 0.45 ) }
    dend_50 { pt3dadd( 65.1999, -63.6402, 19.4895, 0.45 ) }
    dend_50 { pt3dadd( 66.8898, -66.1339, 19.6346, 0.45 ) }
    dend_50 { pt3dadd( 68.2244, -68.1869, 19.728, 0.45 ) }
    dend_50 { pt3dadd( 69.8994, -70.8814, 19.9765, 0.45 ) }
    dend_50 { pt3dadd( 72.6417, -75.3108, 20.4839, 0.45 ) }
    dend_50 { pt3dadd( 74.4806, -78.281, 20.8241, 0.45 ) }
    dend_50 { pt3dadd( 75.5168, -80.0515, 20.9848, 0.45 ) }
    dend_50 { pt3dadd( 77.1717, -83.0747, 21.254, 0.45 ) }
    dend_50 { pt3dadd( 78.8308, -86.2571, 21.5258, 0.45 ) }
    dend_50 { pt3dadd( 80.3007, -89.0731, 21.9459, 0.45 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -17.3009, -75.0565, -15.3438, 0.57 ) }
    dend_43 { pt3dadd( -18.6316, -75.3279, -19.1477, 0.57 ) }
    dend_43 { pt3dadd( -18.8218, -75.3667, -19.6912, 0.57 ) }
    dend_43 { pt3dadd( -19.2344, -75.4509, -20.8705, 0.57 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 38/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -17.3009, -75.0565, -15.3438, 0.68 ) }
    dend_42 { pt3dadd( -17.7589, -76.2441, -15.956, 0.68 ) }
    dend_42 { pt3dadd( -18.6137, -77.9033, -17.1928, 0.68 ) }
    dend_42 { pt3dadd( -19.0942, -78.7017, -17.824, 0.68 ) }
    dend_42 { pt3dadd( -19.5248, -79.3056, -18.3075, 0.68 ) }
    dend_42 { pt3dadd( -20.6013, -80.5884, -19.5362, 0.68 ) }
    dend_42 { pt3dadd( -21.1146, -81.1589, -20.105, 0.68 ) }
    dend_42 { pt3dadd( -22.8012, -82.878, -21.9394, 0.68 ) }
    dend_42 { pt3dadd( -23.382, -83.4922, -22.5358, 0.68 ) }
    dend_42 { pt3dadd( -24.1267, -84.2694, -23.2094, 0.68 ) }
    dend_42 { pt3dadd( -25.6695, -85.8782, -24.4849, 0.68 ) }
    dend_42 { pt3dadd( -26.878, -87.1059, -25.3188, 0.68 ) }
    dend_42 { pt3dadd( -28.8568, -89.1394, -26.5549, 0.68 ) }
    dend_42 { pt3dadd( -30.5497, -90.8962, -27.4938, 0.68 ) }
    dend_42 { pt3dadd( -32.3833, -92.8026, -28.444, 0.68 ) }
    dend_42 { pt3dadd( -33.8408, -94.3421, -29.1551, 0.68 ) }
    dend_42 { pt3dadd( -35.5593, -96.13, -29.8623, 0.68 ) }
    dend_42 { pt3dadd( -37.1303, -97.6461, -30.476, 0.57 ) }
    dend_42 { pt3dadd( -38.5436, -98.8689, -30.9669, 0.57 ) }
    dend_42 { pt3dadd( -40.2906, -100.329, -31.6204, 0.57 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 58/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -0.79855, -71.0894, 16.7805, 0.45 ) }
    dend_38 { pt3dadd( -4.30292, -71.9946, 18.8589, 0.45 ) }
    dend_38 { pt3dadd( -5.9233, -72.2389, 19.8778, 0.45 ) }
    dend_38 { pt3dadd( -9.63575, -72.5721, 21.9329, 0.45 ) }
    dend_38 { pt3dadd( -10.64, -72.6137, 22.514, 0.45 ) }
    dend_38 { pt3dadd( -12.0372, -72.5828, 23.3114, 0.45 ) }
    dend_38 { pt3dadd( -12.9606, -72.552, 24.1855, 0.45 ) }
    dend_38 { pt3dadd( -13.9138, -72.4827, 25.4619, 0.45 ) }
    dend_38 { pt3dadd( -14.7768, -72.3346, 26.8594, 0.45 ) }
    dend_38 { pt3dadd( -15.7163, -72.0414, 28.2552, 0.45 ) }
    dend_38 { pt3dadd( -16.3817, -71.7719, 29.2122, 0.45 ) }
    dend_38 { pt3dadd( -20.499, -70.0298, 35.1606, 0.45 ) }
    dend_38 { pt3dadd( -21.3949, -69.7007, 36.3847, 0.45 ) }
    dend_38 { pt3dadd( -23.2046, -69.144, 38.648, 0.45 ) }
    dend_38 { pt3dadd( -26.0308, -68.3752, 41.8973, 0.45 ) }
    dend_38 { pt3dadd( -27.1184, -68.1902, 42.9619, 0.45 ) }
    dend_38 { pt3dadd( -30.2833, -68.201, 45.5918, 0.45 ) }
    dend_38 { pt3dadd( -31.723, -68.471, 46.4146, 0.45 ) }
    dend_38 { pt3dadd( -32.5591, -68.7925, 46.8799, 0.34 ) }
    dend_38 { pt3dadd( -33.4738, -69.3362, 47.3547, 0.34 ) }
    dend_38 { pt3dadd( -35.9518, -71.0882, 48.3213, 0.34 ) }
    dend_38 { pt3dadd( -38.1655, -72.7001, 48.8587, 0.34 ) }
    dend_38 { pt3dadd( -39.7758, -73.8445, 49.0287, 0.34 ) }
    dend_38 { pt3dadd( -41.6972, -75.111, 49.2483, 0.34 ) }
    dend_38 { pt3dadd( -44.9444, -77.1372, 49.6729, 0.34 ) }
    dend_38 { pt3dadd( -49.1817, -79.5784, 50.2724, 0.34 ) }
    dend_38 { pt3dadd( -50.6528, -80.2915, 50.4561, 0.34 ) }
    dend_38 { pt3dadd( -51.7034, -80.6984, 50.6828, 0.34 ) }
    dend_38 { pt3dadd( -54.6884, -81.6951, 51.6126, 0.34 ) }
    dend_38 { pt3dadd( -56.6949, -82.3451, 52.5316, 0.34 ) }
    dend_38 { pt3dadd( -58.2324, -82.8433, 53.5392, 0.34 ) }
    dend_38 { pt3dadd( -59.9148, -83.423, 54.9377, 0.34 ) }
    dend_38 { pt3dadd( -62.0255, -84.2353, 56.6167, 0.34 ) }
    dend_38 { pt3dadd( -64.6222, -85.3475, 58.6427, 0.34 ) }
    dend_38 { pt3dadd( -67.4979, -86.7025, 60.7452, 0.34 ) }
    dend_38 { pt3dadd( -70.3497, -88.1388, 62.7294, 0.34 ) }
    dend_38 { pt3dadd( -72.1436, -89.1401, 63.8821, 0.34 ) }
    dend_38 { pt3dadd( -74.7887, -90.8226, 65.4546, 0.34 ) }
    dend_38 { pt3dadd( -76.2723, -91.8191, 66.1892, 0.34 ) }
    dend_38 { pt3dadd( -77.2963, -92.5131, 66.6081, 0.34 ) }
    dend_38 { pt3dadd( -80.3344, -94.5406, 67.4413, 0.34 ) }
    dend_38 { pt3dadd( -82.1221, -95.7967, 67.8518, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -84.4863, -97.4599, 68.421, 0.34 ) }
    dend_38 { pt3dadd( -85.3963, -98.0732, 68.6823, 0.34 ) }
    dend_38 { pt3dadd( -87.6221, -99.4737, 69.2108, 0.34 ) }
    dend_38 { pt3dadd( -88.8124, -100.201, 69.4577, 0.34 ) }
    dend_38 { pt3dadd( -91.1102, -101.573, 69.8385, 0.34 ) }
    dend_38 { pt3dadd( -92.4571, -102.362, 70.0001, 0.34 ) }
    dend_38 { pt3dadd( -93.9444, -103.201, 70.1027, 0.34 ) }
    dend_38 { pt3dadd( -96.6076, -104.671, 70.2309, 0.34 ) }
    dend_38 { pt3dadd( -98.8137, -105.818, 70.2932, 0.34 ) }
    dend_38 { pt3dadd( -101.113, -106.883, 70.305, 0.34 ) }
    dend_38 { pt3dadd( -103.29, -107.741, 70.2956, 0.34 ) }
    dend_38 { pt3dadd( -104.961, -108.332, 70.3569, 0.34 ) }
    dend_38 { pt3dadd( -106.601, -108.858, 70.4349, 0.34 ) }
    dend_38 { pt3dadd( -108.186, -109.285, 70.5412, 0.34 ) }
    dend_38 { pt3dadd( -109.506, -109.531, 70.6662, 0.34 ) }
    dend_38 { pt3dadd( -111.955, -109.737, 71.0016, 0.34 ) }
    dend_38 { pt3dadd( -113.69, -109.728, 71.3498, 0.34 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 17/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -0.79855, -71.0894, 16.7805, 2.72 ) }
    dend_33 { pt3dadd( -0.0938304, -74.5668, 21.9357, 2.72 ) }
    dend_33 { pt3dadd( 0.293175, -76.0767, 24.1231, 1.47 ) }
    dend_33 { pt3dadd( 0.656058, -77.4237, 25.8433, 1.13 ) }
    dend_33 { pt3dadd( 1.86665, -81.858, 31.1096, 1.13 ) }
    dend_33 { pt3dadd( 2.08058, -82.7637, 32.027, 3.39 ) }
    dend_33 { pt3dadd( 2.42248, -84.6187, 33.5962, 1.81 ) }
    dend_33 { pt3dadd( 2.9481, -88.5653, 35.6466, 0.68 ) }
    dend_33 { pt3dadd( 3.11826, -90.777, 36.445, 0.68 ) }
    dend_33 { pt3dadd( 3.0928, -91.9768, 36.6362, 0.68 ) }
    dend_33 { pt3dadd( 2.75578, -95.5498, 36.6056, 0.68 ) }
    dend_33 { pt3dadd( 2.39058, -97.9822, 36.5393, 0.68 ) }
    dend_33 { pt3dadd( 1.94746, -100.109, 36.3898, 0.68 ) }
    dend_33 { pt3dadd( 1.40735, -102.495, 36.0849, 0.68 ) }
    dend_33 { pt3dadd( 0.764112, -105.253, 35.8374, 0.68 ) }
    dend_33 { pt3dadd( 0.378033, -106.968, 35.6754, 0.68 ) }
    dend_33 { pt3dadd( -0.079566, -109.186, 35.5224, 0.68 ) }
    dend_33 { pt3dadd( -0.450015, -111.16, 35.3616, 0.68 ) }
    dend_33 { pt3dadd( -1.20211, -115.422, 35.0812, 0.68 ) }
    dend_33 { pt3dadd( -1.34965, -116.407, 35.0966, 3.51 ) }
    dend_33 { pt3dadd( -1.62036, -118.712, 35.2888, 1.7 ) }
    dend_33 { pt3dadd( -1.85685, -120.484, 35.631, 0.79 ) }
    dend_33 { pt3dadd( -2.18554, -122.539, 36.2347, 0.79 ) }
    dend_33 { pt3dadd( -2.83547, -126.332, 37.6539, 0.68 ) }
    dend_33 { pt3dadd( -3.44605, -129.888, 39.1717, 0.79 ) }
    dend_33 { pt3dadd( -3.61237, -130.956, 39.6163, 0.45 ) }
    dend_33 { pt3dadd( -4.00473, -133.983, 41.5935, 0.45 ) }
    dend_33 { pt3dadd( -4.09585, -135.089, 42.4967, 0.45 ) }
    dend_33 { pt3dadd( -4.11231, -135.898, 43.2655, 0.68 ) }
    dend_33 { pt3dadd( -4.04659, -137.792, 45.3293, 0.68 ) }
    dend_33 { pt3dadd( -3.96612, -138.771, 46.4282, 0.68 ) }
    dend_33 { pt3dadd( -3.30781, -145.033, 53.597, 2.38 ) }
    dend_33 { pt3dadd( -3.17752, -146.074, 54.854, 1.47 ) }
    dend_33 { pt3dadd( -3.1135, -146.642, 55.54, 0.79 ) }
    dend_33 { pt3dadd( -2.85818, -148.824, 58.1269, 0.79 ) }
    dend_33 { pt3dadd( -2.66281, -150.45, 59.9419, 0.79 ) }
    dend_33 { pt3dadd( -2.52443, -151.653, 61.0691, 2.15 ) }
    dend_33 { pt3dadd( -2.06666, -155.421, 63.4385, 0.79 ) }
    dend_33 { pt3dadd( -1.73377, -157.685, 64.7294, 0.68 ) }
    dend_33 { pt3dadd( -1.4532, -159.322, 65.4535, 0.68 ) }
    dend_33 { pt3dadd( -1.14617, -160.829, 65.91, 0.68 ) }
    dend_33 { pt3dadd( -1.02769, -161.432, 66.0338, 0.68 ) }
    dend_33 { pt3dadd( -0.70506, -163.276, 66.1272, 0.68 ) }
    dend_33 { pt3dadd( -0.428684, -165.265, 65.9404, 0.68 ) }
    dend_33 { pt3dadd( -0.236441, -168.79, 65.4987, 0.68 ) }
    dend_33 { pt3dadd( -0.272355, -169.468, 65.3978, 2.6 ) }
    dend_33 { pt3dadd( -0.430681, -170.625, 65.2197, 2.26 ) }
    dend_33 { pt3dadd( -1.31856, -174.432, 64.6533, 0.45 ) }
    dend_33 { pt3dadd( -1.72279, -175.627, 64.4903, 0.45 ) }
    dend_33 { pt3dadd( -2.4551, -177.408, 64.2264, 0.45 ) }
    dend_33 { pt3dadd( -3.62745, -179.973, 63.8466, 0.45 ) }
    dend_33 { pt3dadd( -4.79614, -182.396, 63.5525, 0.45 ) }
    dend_33 { pt3dadd( -6.14998, -185.091, 63.3202, 0.45 ) }
    dend_33 { pt3dadd( -7.64011, -187.946, 63.172, 0.45 ) }
    dend_33 { pt3dadd( -9.08047, -190.73, 62.9924, 2.38 ) }
    dend_33 { pt3dadd( -9.41658, -191.402, 62.943, 3.51 ) }
    dend_33 { pt3dadd( -11.0553, -194.666, 62.7116, 0.57 ) }
    dend_33 { pt3dadd( -11.7819, -196.115, 62.6017, 1.24 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 75/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -2.38897, -58.4687, 19.6263, 0.45 ) }
    dend_31 { pt3dadd( -1.3844, -57.9574, 18.296, 0.45 ) }
    dend_31 { pt3dadd( -0.713943, -57.6722, 17.5868, 0.45 ) }
    dend_31 { pt3dadd( 0.308644, -57.3503, 16.6186, 0.45 ) }
    dend_31 { pt3dadd( 3.15161, -56.7271, 14.2855, 0.45 ) }
    dend_31 { pt3dadd( 5.7489, -56.2402, 12.2715, 0.45 ) }
    dend_31 { pt3dadd( 8.2579, -55.7698, 10.3591, 0.45 ) }
    dend_31 { pt3dadd( 10.8531, -55.2412, 7.98458, 0.45 ) }
    dend_31 { pt3dadd( 13.1409, -54.7525, 5.85405, 0.45 ) }
    dend_31 { pt3dadd( 14.9268, -54.3822, 4.22187, 0.45 ) }
    dend_31 { pt3dadd( 18.3015, -53.7246, 1.23276, 0.45 ) }
    dend_31 { pt3dadd( 20.6278, -53.2499, -0.830723, 0.45 ) }
    dend_31 { pt3dadd( 25.0497, -52.1341, -5.08026, 0.45 ) }
    dend_31 { pt3dadd( 26.5426, -51.6826, -6.93372, 0.45 ) }
    dend_31 { pt3dadd( 26.6955, -51.6213, -7.14947, 0.45 ) }
    dend_31 { pt3dadd( 26.9318, -51.5073, -7.56297, 0.45 ) }
    dend_31 { pt3dadd( 27.9004, -51.1015, -9.29847, 0.45 ) }
    dend_31 { pt3dadd( 30.0411, -50.5897, -13.286, 0.45 ) }
    dend_31 { pt3dadd( 31.2414, -50.4749, -15.2948, 0.45 ) }
    dend_31 { pt3dadd( 31.8724, -50.4577, -16.3405, 0.45 ) }
    dend_31 { pt3dadd( 33.375, -50.5279, -18.8229, 0.45 ) }
    dend_31 { pt3dadd( 34.3293, -50.6541, -20.3557, 0.45 ) }
    dend_31 { pt3dadd( 36.655, -51.0506, -23.9802, 0.45 ) }
    dend_31 { pt3dadd( 38.2169, -51.2524, -26.0141, 0.45 ) }
    dend_31 { pt3dadd( 38.8422, -51.3298, -26.7617, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( 39.5575, -51.3803, -27.5455, 0.45 ) }
    dend_31 { pt3dadd( 40.3773, -51.3405, -28.3045, 0.45 ) }
    dend_31 { pt3dadd( 41.5696, -51.0807, -29.2545, 0.45 ) }
    dend_31 { pt3dadd( 43.6982, -50.2904, -30.3739, 0.45 ) }
    dend_31 { pt3dadd( 44.6624, -49.9128, -30.9515, 0.45 ) }
    dend_31 { pt3dadd( 47.4592, -48.7969, -32.7284, 0.45 ) }
    dend_31 { pt3dadd( 48.7585, -48.2731, -33.6277, 0.45 ) }
    dend_31 { pt3dadd( 49.8863, -47.855, -34.4319, 0.45 ) }
    dend_31 { pt3dadd( 52.0292, -47.1733, -35.9532, 0.45 ) }
    dend_31 { pt3dadd( 57.1192, -45.8965, -39.4097, 0.45 ) }
    dend_31 { pt3dadd( 57.7353, -45.7611, -39.8322, 0.45 ) }
    dend_31 { pt3dadd( 59.6398, -45.4583, -41.2011, 0.45 ) }
    dend_31 { pt3dadd( 60.9518, -45.3151, -42.1994, 0.45 ) }
    dend_31 { pt3dadd( 61.5526, -45.2778, -42.6722, 0.45 ) }
    dend_31 { pt3dadd( 63.7085, -45.2037, -44.3437, 0.45 ) }
    dend_31 { pt3dadd( 65.4884, -45.1279, -44.8585, 0.45 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 16/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -83.4304, -200.41, 101.505, 0.57 ) }
    dend_68 { pt3dadd( -84.5704, -201.43, 101.591, 0.57 ) }
    dend_68 { pt3dadd( -87.8396, -204.004, 101.755, 0.57 ) }
    dend_68 { pt3dadd( -90.5976, -205.967, 101.85, 0.45 ) }
    dend_68 { pt3dadd( -93.1023, -207.579, 102.192, 0.45 ) }
    dend_68 { pt3dadd( -95.0513, -208.763, 102.538, 0.45 ) }
    dend_68 { pt3dadd( -96.7838, -209.781, 102.932, 0.45 ) }
    dend_68 { pt3dadd( -98.7671, -210.861, 103.416, 0.45 ) }
    dend_68 { pt3dadd( -100.89, -211.835, 104.018, 0.45 ) }
    dend_68 { pt3dadd( -106.581, -214.175, 105.901, 0.45 ) }
    dend_68 { pt3dadd( -107.64, -214.607, 106.314, 0.45 ) }
    dend_68 { pt3dadd( -109.552, -215.467, 107.186, 0.45 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 28/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -83.4304, -200.41, 101.505, 0.57 ) }
    dend_67 { pt3dadd( -84.3697, -205.378, 102.611, 0.57 ) }
    dend_67 { pt3dadd( -84.7047, -207.073, 103.013, 0.57 ) }
    dend_67 { pt3dadd( -85.1098, -209.204, 103.491, 0.57 ) }
    dend_67 { pt3dadd( -85.6546, -212.076, 104.099, 0.57 ) }
    dend_67 { pt3dadd( -86.0109, -214.054, 104.578, 0.57 ) }
    dend_67 { pt3dadd( -86.1694, -215.053, 104.819, 0.57 ) }
    dend_67 { pt3dadd( -86.1974, -215.236, 104.877, 2.04 ) }
    dend_67 { pt3dadd( -86.702, -217.744, 105.31, 0.57 ) }
    dend_67 { pt3dadd( -86.9549, -218.599, 105.367, 0.57 ) }
    dend_67 { pt3dadd( -87.4801, -219.818, 105.308, 1.92 ) }
    dend_67 { pt3dadd( -89.0916, -222.896, 105.471, 0.68 ) }
    dend_67 { pt3dadd( -89.8733, -224.246, 105.62, 0.68 ) }
    dend_67 { pt3dadd( -92.0854, -227.774, 106.013, 0.57 ) }
    dend_67 { pt3dadd( -93.5991, -230.193, 106.679, 0.57 ) }
    dend_67 { pt3dadd( -95.6686, -233.706, 108.058, 0.57 ) }
    dend_67 { pt3dadd( -98.3787, -239.089, 110.546, 0.57 ) }
    dend_67 { pt3dadd( -98.7173, -239.92, 110.997, 0.57 ) }
    dend_67 { pt3dadd( -99.2433, -241.722, 111.988, 0.45 ) }
    dend_67 { pt3dadd( -100.5, -248.853, 116.342, 0.45 ) }
    dend_67 { pt3dadd( -100.641, -250.024, 117.048, 0.45 ) }
    dend_67 { pt3dadd( -101.025, -253.589, 119.075, 0.45 ) }
    dend_67 { pt3dadd( -101.353, -256.28, 120.279, 0.45 ) }
    dend_67 { pt3dadd( -101.723, -258.491, 121.412, 0.45 ) }
    dend_67 { pt3dadd( -102.819, -262.856, 123.697, 0.45 ) }
    dend_67 { pt3dadd( -103.486, -264.592, 124.571, 0.45 ) }
    dend_67 { pt3dadd( -104.177, -266.068, 125.472, 0.45 ) }
    dend_67 { pt3dadd( -104.464, -266.587, 125.851, 0.45 ) }
    dend_67 { pt3dadd( -106.799, -270.471, 129.074, 0.11 ) }
    dend_67 { pt3dadd( -108.165, -272.624, 131.026, 0.23 ) }
    dend_67 { pt3dadd( -110.171, -275.817, 133.744, 0.23 ) }
    dend_67 { pt3dadd( -110.993, -277.193, 135.024, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 60/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 80.3007, -89.0731, 21.9459, 0.34 ) }
    dend_52 { pt3dadd( 81.7808, -91.3514, 22.0249, 0.34 ) }
    dend_52 { pt3dadd( 83.5624, -94.0939, 22.12, 0.34 ) }
    dend_52 { pt3dadd( 85.3112, -96.7859, 22.2133, 0.34 ) }
    dend_52 { pt3dadd( 86.5681, -98.7206, 22.2803, 0.34 ) }
    dend_52 { pt3dadd( 87.2463, -99.7647, 22.3165, 0.34 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 66/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 80.3007, -89.0731, 21.9459, 0.45 ) }
    dend_51 { pt3dadd( 82.8243, -87.8384, 21.4388, 0.45 ) }
    dend_51 { pt3dadd( 84.713, -86.8964, 20.9594, 0.45 ) }
    dend_51 { pt3dadd( 87.5784, -85.4994, 20.2121, 0.45 ) }
    dend_51 { pt3dadd( 89.5589, -84.5036, 19.7339, 0.45 ) }
    dend_51 { pt3dadd( 93.5126, -82.5018, 18.8239, 0.45 ) }
    dend_51 { pt3dadd( 96.1821, -81.2177, 18.2606, 0.45 ) }
    dend_51 { pt3dadd( 98.2418, -80.309, 17.9103, 0.45 ) }
    dend_51 { pt3dadd( 101.054, -79.1416, 17.4135, 0.45 ) }
    dend_51 { pt3dadd( 104.307, -77.8, 16.7524, 0.45 ) }
    dend_51 { pt3dadd( 104.706, -77.6284, 16.6483, 1.58 ) }
    dend_51 { pt3dadd( 107.696, -76.2935, 15.8355, 0.34 ) }
    dend_51 { pt3dadd( 110.109, -75.2598, 15.0288, 0.34 ) }
    dend_51 { pt3dadd( 114.129, -73.5399, 13.3327, 0.34 ) }
    dend_51 { pt3dadd( 116.379, -72.5985, 12.172, 0.34 ) }
    dend_51 { pt3dadd( 118.749, -71.932, 10.8337, 0.34 ) }
    dend_51 { pt3dadd( 120.254, -71.6359, 9.88349, 0.34 ) }
    dend_51 { pt3dadd( 121.96, -71.5102, 8.81129, 0.34 ) }
    dend_51 { pt3dadd( 124.617, -71.7647, 7.21389, 0.34 ) }
    dend_51 { pt3dadd( 126.688, -72.237, 6.18272, 0.34 ) }
    dend_51 { pt3dadd( 132.418, -73.966, 3.7018, 0.34 ) }
    dend_51 { pt3dadd( 135.467, -74.9984, 2.36782, 0.34 ) }
    dend_51 { pt3dadd( 138.645, -76.1445, 0.958931, 0.34 ) }
    dend_51 { pt3dadd( 143.531, -78.05, -1.13182, 0.34 ) }
    dend_51 { pt3dadd( 146.474, -79.3372, -2.36737, 0.34 ) }
    dend_51 { pt3dadd( 149.628, -80.7963, -3.72839, 0.34 ) }
    dend_51 { pt3dadd( 152.753, -82.2614, -4.91882, 0.34 ) }
    dend_51 { pt3dadd( 155.876, -83.6774, -5.90839, 0.34 ) }
    dend_51 { pt3dadd( 157.326, -84.2434, -6.26203, 0.34 ) }
    dend_51 { pt3dadd( 159.08, -84.8774, -6.46821, 0.34 ) }
    dend_51 { pt3dadd( 161.113, -85.6167, -6.56891, 0.34 ) }
    dend_51 { pt3dadd( 162.7, -86.1611, -6.54381, 0.34 ) }
    dend_51 { pt3dadd( 164.549, -86.74, -6.42598, 0.34 ) }
    dend_51 { pt3dadd( 171.003, -88.6407, -6.02058, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_51 { pt3dadd( 174.052, -89.4527, -5.83785, 0.34 ) }
    dend_51 { pt3dadd( 177.123, -90.2399, -5.66361, 0.34 ) }
    dend_51 { pt3dadd( 179.963, -90.9816, -5.51926, 0.34 ) }
    dend_51 { pt3dadd( 184.669, -92.2355, -5.39681, 0.34 ) }
    dend_51 { pt3dadd( 188.366, -93.2083, -5.33316, 0.34 ) }
    dend_51 { pt3dadd( 190.686, -93.7717, -5.33316, 0.34 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 6/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -113.69, -109.728, 71.3498, 0.34 ) }
    dend_40 { pt3dadd( -114.841, -110.213, 72.0017, 0.34 ) }
    dend_40 { pt3dadd( -117.257, -111.441, 72.9718, 0.34 ) }
    dend_40 { pt3dadd( -118.229, -111.988, 73.2403, 2.04 ) }
    dend_40 { pt3dadd( -119.194, -112.56, 73.4565, 1.13 ) }
    dend_40 { pt3dadd( -120.732, -113.59, 73.7847, 0.79 ) }
    dend_40 { pt3dadd( -121.796, -114.336, 73.8288, 0.57 ) }
    dend_40 { pt3dadd( -123.696, -115.673, 73.6441, 0.57 ) }
    dend_40 { pt3dadd( -127.72, -118.474, 72.8857, 0.57 ) }
    dend_40 { pt3dadd( -129.562, -119.676, 72.6548, 0.57 ) }
    dend_40 { pt3dadd( -132.506, -121.493, 72.4431, 0.57 ) }
    dend_40 { pt3dadd( -137.823, -124.59, 72.3197, 0.57 ) }
    dend_40 { pt3dadd( -140.828, -126.166, 72.3069, 0.57 ) }
    dend_40 { pt3dadd( -142.254, -126.839, 72.3287, 0.57 ) }
    dend_40 { pt3dadd( -148.114, -129.382, 72.591, 0.57 ) }
    dend_40 { pt3dadd( -149.83, -130.094, 72.7262, 0.57 ) }
    dend_40 { pt3dadd( -151.417, -130.777, 72.9677, 0.57 ) }
    dend_40 { pt3dadd( -153.884, -131.971, 73.5194, 0.57 ) }
    dend_40 { pt3dadd( -156.371, -133.331, 74.1556, 0.57 ) }
    dend_40 { pt3dadd( -158.015, -134.318, 74.6262, 0.57 ) }
    dend_40 { pt3dadd( -160.005, -135.703, 75.2122, 0.57 ) }
    dend_40 { pt3dadd( -164.904, -139.339, 76.8836, 0.57 ) }
    dend_40 { pt3dadd( -167.449, -141.272, 77.8275, 0.57 ) }
    dend_40 { pt3dadd( -170.81, -143.885, 79.1344, 0.57 ) }
    dend_40 { pt3dadd( -173.43, -145.927, 80.153, 0.57 ) }
    dend_40 { pt3dadd( -176.128, -147.958, 81.155, 0.57 ) }
    dend_40 { pt3dadd( -177.957, -149.354, 81.8416, 0.57 ) }
    dend_40 { pt3dadd( -179.769, -150.728, 82.4409, 0.57 ) }
    dend_40 { pt3dadd( -182.019, -152.434, 83.1974, 0.57 ) }
    dend_40 { pt3dadd( -183.311, -153.392, 83.548, 0.57 ) }
    dend_40 { pt3dadd( -184.779, -154.434, 83.9342, 0.57 ) }
    dend_40 { pt3dadd( -187.733, -156.469, 84.7461, 0.57 ) }
    dend_40 { pt3dadd( -190.527, -158.436, 85.3671, 0.57 ) }
    dend_40 { pt3dadd( -192.52, -159.853, 85.6945, 0.57 ) }
    dend_40 { pt3dadd( -195.019, -161.618, 85.9603, 0.57 ) }
    dend_40 { pt3dadd( -197.076, -163.096, 86.058, 0.57 ) }
    dend_40 { pt3dadd( -198.474, -164.106, 86.0393, 0.57 ) }
    dend_40 { pt3dadd( -201.154, -165.976, 85.556, 0.57 ) }
    dend_40 { pt3dadd( -203.181, -167.377, 84.99, 0.57 ) }
    dend_40 { pt3dadd( -205.517, -168.915, 83.9272, 0.57 ) }
    dend_40 { pt3dadd( -207.529, -170.2, 82.6141, 0.57 ) }
    dend_40 { pt3dadd( -209.675, -171.504, 80.9309, 0.57 ) }
    dend_40 { pt3dadd( -213.096, -173.387, 77.8405, 0.57 ) }
    dend_40 { pt3dadd( -214.396, -174.044, 76.6775, 0.57 ) }
    dend_40 { pt3dadd( -218.955, -176.157, 72.6716, 0.57 ) }
    dend_40 { pt3dadd( -222.262, -177.597, 69.7754, 0.57 ) }
    dend_40 { pt3dadd( -223.358, -178.092, 68.8632, 0.57 ) }
    dend_40 { pt3dadd( -226.381, -179.635, 66.6853, 0.57 ) }
    dend_40 { pt3dadd( -229.737, -181.887, 65.3175, 0.57 ) }
    dend_40 { pt3dadd( -231.803, -183.63, 65.0176, 0.57 ) }
    dend_40 { pt3dadd( -232.522, -184.356, 65.1446, 0.57 ) }
    dend_40 { pt3dadd( -234.128, -186.088, 65.6348, 0.57 ) }
    dend_40 { pt3dadd( -235.054, -187.101, 65.9125, 0.57 ) }
    dend_40 { pt3dadd( -237.934, -190.52, 66.6076, 0.57 ) }
    dend_40 { pt3dadd( -239.805, -192.847, 66.5965, 0.57 ) }
    dend_40 { pt3dadd( -240.72, -194.0, 66.3336, 0.45 ) }
    dend_40 { pt3dadd( -241.543, -195.078, 65.925, 0.45 ) }
    dend_40 { pt3dadd( -242.742, -196.839, 64.8693, 0.45 ) }
    dend_40 { pt3dadd( -244.029, -199.222, 62.8243, 0.45 ) }
    dend_40 { pt3dadd( -244.809, -201.119, 60.768, 0.45 ) }
    dend_40 { pt3dadd( -245.8, -204.101, 57.3031, 0.45 ) }
    dend_40 { pt3dadd( -246.259, -205.673, 55.4626, 0.45 ) }
    dend_40 { pt3dadd( -246.835, -208.042, 52.9345, 0.45 ) }
    dend_40 { pt3dadd( -247.399, -210.734, 50.4056, 0.45 ) }
    dend_40 { pt3dadd( -247.92, -212.773, 48.8329, 0.45 ) }
    dend_40 { pt3dadd( -248.154, -213.595, 48.3541, 0.45 ) }
    dend_40 { pt3dadd( -248.669, -215.063, 47.784, 0.45 ) }
    dend_40 { pt3dadd( -249.961, -218.029, 46.9205, 0.45 ) }
    dend_40 { pt3dadd( -251.004, -220.051, 46.6037, 0.45 ) }
    dend_40 { pt3dadd( -252.61, -222.747, 46.429, 0.45 ) }
    dend_40 { pt3dadd( -254.213, -225.146, 46.6087, 0.45 ) }
    dend_40 { pt3dadd( -255.902, -227.444, 47.0072, 0.45 ) }
    dend_40 { pt3dadd( -257.073, -228.852, 47.4675, 0.45 ) }
    dend_40 { pt3dadd( -257.918, -229.767, 47.9913, 0.45 ) }
    dend_40 { pt3dadd( -258.816, -230.725, 48.8176, 0.45 ) }
    dend_40 { pt3dadd( -261.736, -234.141, 52.0312, 0.45 ) }
    dend_40 { pt3dadd( -262.319, -234.853, 52.6991, 0.45 ) }
    dend_40 { pt3dadd( -263.249, -236.168, 54.1514, 0.45 ) }
    dend_40 { pt3dadd( -264.817, -238.744, 56.9798, 0.45 ) }
    dend_40 { pt3dadd( -266.057, -241.177, 59.5252, 0.45 ) }
    dend_40 { pt3dadd( -267.41, -244.423, 62.5714, 0.45 ) }
    dend_40 { pt3dadd( -268.038, -246.191, 63.9114, 0.45 ) }
    dend_40 { pt3dadd( -271.269, -254.882, 69.5913, 0.45 ) }
    dend_40 { pt3dadd( -272.139, -257.18, 70.8077, 0.45 ) }
    dend_40 { pt3dadd( -273.313, -260.181, 71.6519, 0.45 ) }
    dend_40 { pt3dadd( -275.0, -264.393, 72.0233, 0.45 ) }
    dend_40 { pt3dadd( -277.517, -270.783, 71.7634, 0.45 ) }
    dend_40 { pt3dadd( -279.518, -276.037, 70.9398, 0.45 ) }
    dend_40 { pt3dadd( -281.271, -280.706, 69.5566, 0.45 ) }
    dend_40 { pt3dadd( -285.084, -291.384, 65.9622, 0.45 ) }
    dend_40 { pt3dadd( -285.62, -292.967, 65.3429, 0.45 ) }
    dend_40 { pt3dadd( -286.771, -296.895, 63.6661, 0.45 ) }
    dend_40 { pt3dadd( -287.33, -299.442, 62.2953, 0.45 ) }
    dend_40 { pt3dadd( -287.891, -303.019, 60.2606, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_40 { pt3dadd( -288.253, -305.767, 58.7192, 0.45 ) }
    dend_40 { pt3dadd( -288.497, -307.25, 58.0992, 0.45 ) }
    dend_40 { pt3dadd( -288.954, -309.33, 57.2331, 0.45 ) }
    dend_40 { pt3dadd( -291.14, -317.011, 54.4768, 0.45 ) }
    dend_40 { pt3dadd( -292.502, -321.114, 53.7519, 0.45 ) }
    dend_40 { pt3dadd( -293.11, -322.754, 53.7727, 0.45 ) }
    dend_40 { pt3dadd( -295.478, -328.585, 54.4714, 0.45 ) }
    dend_40 { pt3dadd( -296.696, -331.408, 55.0722, 0.45 ) }
    dend_40 { pt3dadd( -298.837, -335.772, 56.2766, 0.45 ) }
    dend_40 { pt3dadd( -301.487, -340.768, 58.3997, 0.45 ) }
    dend_40 { pt3dadd( -302.662, -342.976, 59.1543, 0.45 ) }
    dend_40 { pt3dadd( -304.038, -346.091, 59.8185, 0.45 ) }
    dend_40 { pt3dadd( -304.376, -347.491, 59.8516, 0.45 ) }
    dend_40 { pt3dadd( -304.713, -352.435, 59.1607, 0.45 ) }
    dend_40 { pt3dadd( -304.474, -358.201, 57.4605, 0.45 ) }
    dend_40 { pt3dadd( -303.166, -367.104, 53.6908, 0.45 ) }
    dend_40 { pt3dadd( -301.518, -373.023, 50.9444, 0.45 ) }
    dend_40 { pt3dadd( -300.031, -376.457, 49.2961, 0.45 ) }
    dend_40 { pt3dadd( -299.672, -377.085, 48.9671, 0.45 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 19/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -113.69, -109.728, 71.3498, 0.34 ) }
    dend_39 { pt3dadd( -112.059, -108.829, 72.8431, 0.34 ) }
    dend_39 { pt3dadd( -110.89, -108.184, 73.9132, 0.34 ) }
    dend_39 { pt3dadd( -106.36, -105.686, 78.06, 0.34 ) }
    dend_39 { pt3dadd( -105.11, -104.998, 79.2036, 0.34 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 24/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -11.7819, -196.115, 62.6017, 0.57 ) }
    dend_37 { pt3dadd( -13.2742, -197.033, 63.3499, 0.57 ) }
    dend_37 { pt3dadd( -15.7106, -198.751, 63.9997, 0.57 ) }
    dend_37 { pt3dadd( -17.0216, -199.81, 64.2018, 0.57 ) }
    dend_37 { pt3dadd( -18.7586, -201.378, 64.0819, 0.57 ) }
    dend_37 { pt3dadd( -20.371, -202.971, 63.8481, 0.57 ) }
    dend_37 { pt3dadd( -23.2447, -205.895, 63.3493, 0.57 ) }
    dend_37 { pt3dadd( -24.8115, -207.587, 62.9507, 0.57 ) }
    dend_37 { pt3dadd( -26.5736, -209.554, 62.3976, 0.57 ) }
    dend_37 { pt3dadd( -29.7514, -213.119, 61.424, 0.57 ) }
    dend_37 { pt3dadd( -33.3257, -217.036, 60.3577, 0.57 ) }
    dend_37 { pt3dadd( -35.7372, -219.637, 59.7896, 0.57 ) }
    dend_37 { pt3dadd( -36.5823, -220.525, 59.6641, 2.15 ) }
    dend_37 { pt3dadd( -37.3514, -221.293, 59.6041, 1.36 ) }
    dend_37 { pt3dadd( -38.9919, -222.831, 59.7262, 0.68 ) }
    dend_37 { pt3dadd( -39.8971, -223.624, 60.0002, 0.68 ) }
    dend_37 { pt3dadd( -40.9576, -224.488, 60.4949, 0.57 ) }
    dend_37 { pt3dadd( -41.554, -224.961, 60.8684, 0.57 ) }
    dend_37 { pt3dadd( -43.1154, -226.205, 61.9496, 0.57 ) }
    dend_37 { pt3dadd( -44.8514, -227.556, 63.1961, 0.57 ) }
    dend_37 { pt3dadd( -45.9983, -228.46, 64.0151, 0.57 ) }
    dend_37 { pt3dadd( -47.41, -229.654, 64.8889, 0.57 ) }
    dend_37 { pt3dadd( -48.7786, -230.843, 65.4753, 0.57 ) }
    dend_37 { pt3dadd( -49.3156, -231.332, 65.6326, 0.57 ) }
    dend_37 { pt3dadd( -50.1126, -232.102, 65.748, 0.57 ) }
    dend_37 { pt3dadd( -51.1913, -233.171, 65.8028, 0.57 ) }
    dend_37 { pt3dadd( -54.3838, -236.315, 65.8456, 0.57 ) }
    dend_37 { pt3dadd( -56.397, -238.306, 65.7216, 0.57 ) }
    dend_37 { pt3dadd( -58.0962, -239.994, 65.5624, 0.57 ) }
    dend_37 { pt3dadd( -60.2384, -242.039, 65.3469, 0.57 ) }
    dend_37 { pt3dadd( -63.0229, -244.613, 65.1607, 0.57 ) }
    dend_37 { pt3dadd( -66.6753, -247.735, 65.0416, 0.57 ) }
    dend_37 { pt3dadd( -68.1919, -248.94, 64.9753, 1.7 ) }
    dend_37 { pt3dadd( -69.5666, -249.987, 64.9147, 1.7 ) }
    dend_37 { pt3dadd( -70.921, -250.966, 64.763, 0.68 ) }
    dend_37 { pt3dadd( -73.4127, -252.653, 64.3879, 0.68 ) }
    dend_37 { pt3dadd( -74.9615, -253.715, 64.0976, 0.68 ) }
    dend_37 { pt3dadd( -77.387, -255.453, 63.6364, 0.68 ) }
    dend_37 { pt3dadd( -78.0479, -255.963, 63.4948, 1.7 ) }
    dend_37 { pt3dadd( -79.0814, -256.881, 63.2076, 1.7 ) }
    dend_37 { pt3dadd( -79.7578, -257.569, 62.9861, 1.7 ) }
    dend_37 { pt3dadd( -80.5304, -258.474, 62.7032, 0.68 ) }
    dend_37 { pt3dadd( -82.3073, -260.835, 62.0877, 0.68 ) }
    dend_37 { pt3dadd( -84.0013, -263.255, 61.5921, 0.68 ) }
    dend_37 { pt3dadd( -85.3335, -265.292, 61.3039, 0.68 ) }
    dend_37 { pt3dadd( -85.9434, -266.299, 61.212, 0.68 ) }
    dend_37 { pt3dadd( -87.3119, -268.723, 61.1052, 0.68 ) }
    dend_37 { pt3dadd( -88.5472, -271.024, 61.125, 0.68 ) }
    dend_37 { pt3dadd( -89.1298, -272.196, 61.2259, 0.68 ) }
    dend_37 { pt3dadd( -90.4853, -275.037, 61.7075, 0.68 ) }
    dend_37 { pt3dadd( -90.8671, -275.872, 61.8768, 0.68 ) }
    dend_37 { pt3dadd( -91.3187, -276.888, 62.1015, 1.02 ) }
    dend_37 { pt3dadd( -91.7701, -277.941, 62.3268, 0.45 ) }
    dend_37 { pt3dadd( -92.3828, -279.595, 62.6095, 0.45 ) }
    dend_37 { pt3dadd( -92.5502, -280.101, 62.6522, 0.45 ) }
    dend_37 { pt3dadd( -93.0408, -281.623, 62.7038, 0.45 ) }
    dend_37 { pt3dadd( -93.6233, -283.42, 62.7763, 0.45 ) }
    dend_37 { pt3dadd( -94.267, -285.473, 62.8615, 0.45 ) }
    dend_37 { pt3dadd( -94.9863, -287.842, 62.9543, 0.45 ) }
    dend_37 { pt3dadd( -95.6124, -289.974, 63.0654, 0.45 ) }
    dend_37 { pt3dadd( -96.6004, -293.296, 63.2408, 0.45 ) }
    dend_37 { pt3dadd( -96.8804, -294.309, 63.2964, 0.45 ) }
    dend_37 { pt3dadd( -97.1932, -295.567, 63.3666, 1.47 ) }
    dend_37 { pt3dadd( -97.2982, -296.0, 63.3918, 1.47 ) }
    dend_37 { pt3dadd( -97.8165, -298.096, 63.4253, 0.68 ) }
    dend_37 { pt3dadd( -98.4308, -300.606, 63.4068, 0.57 ) }
    dend_37 { pt3dadd( -98.9574, -302.869, 63.4257, 0.57 ) }
    dend_37 { pt3dadd( -99.4713, -304.994, 63.5608, 0.57 ) }
    dend_37 { pt3dadd( -99.6249, -305.598, 63.6227, 0.57 ) }
    dend_37 { pt3dadd( -100.109, -307.465, 63.9689, 0.57 ) }
    dend_37 { pt3dadd( -100.656, -309.535, 64.6781, 0.57 ) }
    dend_37 { pt3dadd( -101.061, -311.332, 65.5079, 1.7 ) }
    dend_37 { pt3dadd( -101.624, -314.199, 66.957, 0.68 ) }
    dend_37 { pt3dadd( -101.848, -315.633, 67.7129, 0.68 ) }
    dend_37 { pt3dadd( -102.191, -318.296, 69.0925, 0.68 ) }
    dend_37 { pt3dadd( -102.673, -322.201, 70.9758, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_37 { pt3dadd( -103.057, -324.911, 72.0729, 0.68 ) }
    dend_37 { pt3dadd( -103.236, -325.937, 72.3988, 2.15 ) }
    dend_37 { pt3dadd( -103.364, -326.567, 72.5507, 2.15 ) }
    dend_37 { pt3dadd( -103.857, -328.673, 72.836, 0.68 ) }
    dend_37 { pt3dadd( -104.552, -331.095, 72.9971, 0.68 ) }
    dend_37 { pt3dadd( -105.049, -332.644, 73.0995, 0.68 ) }
    dend_37 { pt3dadd( -105.803, -334.751, 73.3607, 0.68 ) }
    dend_37 { pt3dadd( -106.6, -337.003, 73.6311, 0.68 ) }
    dend_37 { pt3dadd( -107.328, -339.213, 73.8837, 0.68 ) }
    dend_37 { pt3dadd( -108.312, -342.665, 74.2572, 0.68 ) }
    dend_37 { pt3dadd( -108.834, -344.932, 74.4835, 0.68 ) }
    dend_37 { pt3dadd( -109.184, -346.665, 74.5923, 0.68 ) }
    dend_37 { pt3dadd( -109.649, -349.284, 74.6323, 0.68 ) }
    dend_37 { pt3dadd( -109.808, -350.329, 74.5993, 0.68 ) }
    dend_37 { pt3dadd( -110.143, -352.991, 74.3846, 0.68 ) }
    dend_37 { pt3dadd( -110.317, -354.699, 74.1352, 0.68 ) }
    dend_37 { pt3dadd( -110.541, -356.839, 73.8072, 0.68 ) }
    dend_37 { pt3dadd( -110.807, -358.894, 73.5751, 0.68 ) }
    dend_37 { pt3dadd( -111.093, -360.551, 73.4882, 0.68 ) }
    dend_37 { pt3dadd( -111.318, -361.611, 73.4345, 0.68 ) }
    dend_37 { pt3dadd( -111.612, -362.775, 73.4482, 0.68 ) }
    dend_37 { pt3dadd( -111.727, -363.197, 73.4812, 0.68 ) }
    dend_37 { pt3dadd( -112.286, -365.167, 73.7344, 0.68 ) }
    dend_37 { pt3dadd( -112.911, -367.437, 74.1227, 0.68 ) }
    dend_37 { pt3dadd( -113.314, -369.085, 74.4366, 0.68 ) }
    dend_37 { pt3dadd( -113.822, -371.389, 74.8759, 0.68 ) }
    dend_37 { pt3dadd( -114.246, -373.594, 75.351, 0.68 ) }
    dend_37 { pt3dadd( -114.342, -374.184, 75.5189, 0.68 ) }
    dend_37 { pt3dadd( -114.545, -375.658, 75.9923, 0.57 ) }
    dend_37 { pt3dadd( -114.717, -376.983, 76.421, 0.57 ) }
    dend_37 { pt3dadd( -115.028, -379.452, 77.2211, 0.57 ) }
    dend_37 { pt3dadd( -115.271, -381.767, 78.0565, 0.57 ) }
    dend_37 { pt3dadd( -115.561, -384.301, 79.1077, 0.57 ) }
    dend_37 { pt3dadd( -115.868, -386.84, 80.1738, 0.57 ) }
    dend_37 { pt3dadd( -116.195, -389.17, 81.0399, 0.57 ) }
    dend_37 { pt3dadd( -116.431, -390.802, 81.5146, 1.47 ) }
    dend_37 { pt3dadd( -116.922, -394.117, 82.2584, 0.45 ) }
    dend_37 { pt3dadd( -117.186, -395.729, 82.4759, 0.45 ) }
    dend_37 { pt3dadd( -117.701, -399.129, 82.6825, 0.45 ) }
    dend_37 { pt3dadd( -118.024, -401.921, 82.8579, 0.45 ) }
    dend_37 { pt3dadd( -118.286, -405.154, 83.0089, 0.45 ) }
    dend_37 { pt3dadd( -118.177, -407.771, 83.1469, 0.45 ) }
    dend_37 { pt3dadd( -118.962, -407.009, 81.7989, 0.45 ) }
    dend_37 { pt3dadd( -120.331, -404.637, 79.6704, 0.45 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 44/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -11.7819, -196.115, 62.6017, 0.57 ) }
    dend_34 { pt3dadd( -12.5319, -197.621, 62.7839, 0.57 ) }
    dend_34 { pt3dadd( -13.0319, -198.623, 62.9033, 0.57 ) }
    dend_34 { pt3dadd( -13.7112, -200.033, 63.0623, 0.57 ) }
    dend_34 { pt3dadd( -14.7376, -202.163, 63.3025, 0.57 ) }
    dend_34 { pt3dadd( -15.9641, -204.708, 63.5895, 0.57 ) }
    dend_34 { pt3dadd( -16.7244, -206.286, 63.7674, 2.15 ) }
    dend_34 { pt3dadd( -17.4157, -207.671, 63.9141, 2.72 ) }
    dend_34 { pt3dadd( -17.929, -208.757, 64.0431, 2.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 53/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 87.2463, -99.7647, 22.3165, 0.45 ) }
    dend_54 { pt3dadd( 91.9178, -100.204, 22.0298, 0.45 ) }
    dend_54 { pt3dadd( 93.0309, -100.302, 22.0503, 0.45 ) }
    dend_54 { pt3dadd( 95.083, -100.367, 22.1811, 0.45 ) }
    dend_54 { pt3dadd( 97.7938, -100.408, 22.4015, 0.45 ) }
    dend_54 { pt3dadd( 100.271, -100.454, 22.6162, 0.45 ) }
    dend_54 { pt3dadd( 103.512, -100.453, 22.8933, 0.45 ) }
    dend_54 { pt3dadd( 104.642, -100.415, 23.0555, 0.45 ) }
    dend_54 { pt3dadd( 107.843, -100.15, 23.4187, 0.45 ) }
    dend_54 { pt3dadd( 110.336, -99.7967, 23.6223, 0.45 ) }
    dend_54 { pt3dadd( 112.3, -99.3756, 23.6956, 0.45 ) }
    dend_54 { pt3dadd( 115.043, -98.5199, 23.5261, 0.45 ) }
    dend_54 { pt3dadd( 116.84, -97.798, 23.2494, 0.45 ) }
    dend_54 { pt3dadd( 118.792, -96.9088, 22.8597, 0.45 ) }
    dend_54 { pt3dadd( 120.786, -95.9353, 22.2698, 0.45 ) }
    dend_54 { pt3dadd( 122.997, -94.7584, 21.3886, 0.45 ) }
    dend_54 { pt3dadd( 126.101, -92.9923, 20.0014, 0.45 ) }
    dend_54 { pt3dadd( 127.362, -92.2675, 19.3623, 0.45 ) }
    dend_54 { pt3dadd( 128.698, -91.51, 18.6225, 0.45 ) }
    dend_54 { pt3dadd( 131.959, -89.7805, 16.7076, 0.45 ) }
    dend_54 { pt3dadd( 133.35, -89.1279, 15.7572, 0.45 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 74/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 87.2463, -99.7647, 22.3165, 0.34 ) }
    dend_53 { pt3dadd( 87.1844, -103.156, 21.1498, 0.34 ) }
    dend_53 { pt3dadd( 87.0689, -104.462, 20.6444, 0.34 ) }
    dend_53 { pt3dadd( 86.7879, -106.645, 19.7662, 0.34 ) }
    dend_53 { pt3dadd( 86.2154, -110.629, 18.1362, 0.34 ) }
    dend_53 { pt3dadd( 85.5455, -114.229, 16.4684, 0.34 ) }
    dend_53 { pt3dadd( 84.692, -117.944, 14.6955, 0.34 ) }
    dend_53 { pt3dadd( 83.3307, -121.691, 12.8455, 0.34 ) }
    dend_53 { pt3dadd( 83.0977, -122.168, 12.603, 0.34 ) }
    dend_53 { pt3dadd( 82.9278, -122.428, 12.455, 1.58 ) }
    dend_53 { pt3dadd( 80.5996, -125.291, 10.8758, 0.45 ) }
    dend_53 { pt3dadd( 79.5053, -126.557, 10.0969, 0.45 ) }
    dend_53 { pt3dadd( 76.7581, -129.746, 7.9442, 0.45 ) }
    dend_53 { pt3dadd( 75.8613, -130.868, 7.18239, 0.45 ) }
    dend_53 { pt3dadd( 73.6835, -133.914, 5.13674, 0.45 ) }
    dend_53 { pt3dadd( 72.97, -135.028, 4.44012, 0.45 ) }
    dend_53 { pt3dadd( 71.2221, -138.254, 2.61762, 0.45 ) }
    dend_53 { pt3dadd( 70.5031, -139.825, 1.68838, 0.45 ) }
    dend_53 { pt3dadd( 69.3549, -142.956, -0.0239414, 0.45 ) }
    dend_53 { pt3dadd( 68.6799, -144.96, -1.0448, 0.45 ) }
    dend_53 { pt3dadd( 67.8421, -147.666, -2.2462, 0.45 ) }
    dend_53 { pt3dadd( 66.6371, -151.782, -4.11681, 0.45 ) }
    dend_53 { pt3dadd( 65.7859, -154.724, -5.36544, 0.45 ) }
    dend_53 { pt3dadd( 64.7347, -158.52, -6.95573, 0.45 ) }
    dend_53 { pt3dadd( 63.8366, -161.615, -8.16022, 0.45 ) }
    dend_53 { pt3dadd( 63.0595, -164.297, -9.22827, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_53 { pt3dadd( 62.1372, -167.375, -10.4777, 0.45 ) }
    dend_53 { pt3dadd( 61.2245, -170.175, -11.5447, 0.45 ) }
    dend_53 { pt3dadd( 60.564, -171.877, -12.1325, 0.45 ) }
    dend_53 { pt3dadd( 59.3837, -174.556, -13.2846, 0.45 ) }
    dend_53 { pt3dadd( 58.9427, -175.52, -13.713, 0.45 ) }
    dend_53 { pt3dadd( 57.6392, -178.215, -14.9535, 0.45 ) }
    dend_53 { pt3dadd( 56.846, -179.807, -15.6524, 0.45 ) }
    dend_53 { pt3dadd( 55.7184, -182.066, -16.6983, 0.45 ) }
    dend_53 { pt3dadd( 53.6797, -186.265, -19.0676, 0.45 ) }
    dend_53 { pt3dadd( 52.5595, -188.761, -20.6236, 0.45 ) }
    dend_53 { pt3dadd( 51.9625, -190.207, -21.5395, 0.45 ) }
    dend_53 { pt3dadd( 51.54, -191.46, -22.2934, 0.45 ) }
    dend_53 { pt3dadd( 51.2413, -192.494, -22.9426, 0.45 ) }
    dend_53 { pt3dadd( 50.0751, -196.901, -25.6057, 0.45 ) }
    dend_53 { pt3dadd( 49.5287, -198.963, -26.7541, 0.45 ) }
    dend_53 { pt3dadd( 49.2216, -200.186, -27.4757, 0.45 ) }
    dend_53 { pt3dadd( 48.6994, -202.353, -28.7108, 0.45 ) }
    dend_53 { pt3dadd( 47.8983, -205.793, -31.1263, 0.45 ) }
    dend_53 { pt3dadd( 47.5325, -207.406, -32.3083, 0.45 ) }
    dend_53 { pt3dadd( 47.2734, -208.59, -33.1143, 0.45 ) }
    dend_53 { pt3dadd( 46.9725, -209.936, -34.0204, 0.45 ) }
    dend_53 { pt3dadd( 46.3587, -212.654, -35.8779, 0.45 ) }
    dend_53 { pt3dadd( 44.9923, -219.21, -39.3993, 0.45 ) }
    dend_53 { pt3dadd( 44.4718, -221.971, -40.2112, 0.45 ) }
    dend_53 { pt3dadd( 43.9164, -225.027, -40.5483, 0.45 ) }
    dend_53 { pt3dadd( 43.1685, -228.466, -40.1212, 0.45 ) }
    dend_53 { pt3dadd( 42.7632, -229.957, -39.6266, 0.45 ) }
    dend_53 { pt3dadd( 39.7975, -238.788, -34.9526, 0.45 ) }
    dend_53 { pt3dadd( 38.7939, -241.332, -33.2337, 0.45 ) }
    dend_53 { pt3dadd( 38.5901, -241.774, -32.9144, 0.45 ) }
    dend_53 { pt3dadd( 37.2304, -244.348, -31.1177, 0.45 ) }
    dend_53 { pt3dadd( 36.119, -246.349, -29.9269, 0.45 ) }
    dend_53 { pt3dadd( 34.8307, -248.609, -29.1016, 0.45 ) }
    dend_53 { pt3dadd( 34.5641, -249.071, -29.0911, 0.45 ) }
    dend_53 { pt3dadd( 33.7411, -250.596, -29.3008, 0.45 ) }
    dend_53 { pt3dadd( 32.53, -253.067, -29.8815, 0.45 ) }
    dend_53 { pt3dadd( 31.6869, -254.987, -30.4804, 0.45 ) }
    dend_53 { pt3dadd( 30.5058, -257.901, -31.4794, 0.45 ) }
    dend_53 { pt3dadd( 29.3403, -261.018, -32.5852, 0.45 ) }
    dend_53 { pt3dadd( 27.5859, -266.467, -34.3363, 0.45 ) }
    dend_53 { pt3dadd( 27.1135, -268.113, -34.8253, 0.45 ) }
    dend_53 { pt3dadd( 26.6651, -269.77, -35.2984, 0.45 ) }
    dend_53 { pt3dadd( 26.1626, -271.702, -35.8011, 0.45 ) }
    dend_53 { pt3dadd( 25.6675, -273.868, -36.2071, 0.45 ) }
    dend_53 { pt3dadd( 24.8911, -278.379, -36.8083, 0.45 ) }
    dend_53 { pt3dadd( 24.7742, -279.526, -36.7754, 0.45 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 46/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -17.929, -208.757, 64.0431, 0.45 ) }
    dend_36 { pt3dadd( -19.2533, -210.65, 63.8978, 0.45 ) }
    dend_36 { pt3dadd( -20.2863, -212.167, 63.8004, 0.45 ) }
    dend_36 { pt3dadd( -21.2319, -213.57, 63.7189, 0.45 ) }
    dend_36 { pt3dadd( -22.6254, -215.76, 63.621, 0.45 ) }
    dend_36 { pt3dadd( -23.4548, -217.033, 63.5799, 0.45 ) }
    dend_36 { pt3dadd( -24.7252, -218.966, 63.5915, 0.45 ) }
    dend_36 { pt3dadd( -26.0081, -221.038, 63.6992, 0.45 ) }
    dend_36 { pt3dadd( -26.3475, -221.581, 63.7386, 1.47 ) }
    dend_36 { pt3dadd( -27.6226, -223.518, 63.9554, 0.45 ) }
    dend_36 { pt3dadd( -28.4347, -224.753, 64.14, 0.45 ) }
    dend_36 { pt3dadd( -29.2374, -226.011, 64.4357, 0.45 ) }
    dend_36 { pt3dadd( -29.7877, -226.952, 64.7125, 0.45 ) }
    dend_36 { pt3dadd( -30.8804, -229.023, 65.4261, 0.45 ) }
    dend_36 { pt3dadd( -31.6212, -230.509, 65.9605, 0.79 ) }
    dend_36 { pt3dadd( -32.2796, -231.929, 66.4761, 0.79 ) }
    dend_36 { pt3dadd( -33.4147, -234.644, 67.5009, 0.45 ) }
    dend_36 { pt3dadd( -34.2535, -236.708, 68.2714, 0.45 ) }
    dend_36 { pt3dadd( -35.2251, -239.316, 69.2768, 0.45 ) }
    dend_36 { pt3dadd( -35.5186, -240.193, 69.6735, 0.45 ) }
    dend_36 { pt3dadd( -35.7837, -241.038, 70.0739, 1.92 ) }
    dend_36 { pt3dadd( -36.2338, -242.601, 70.9827, 1.47 ) }
    dend_36 { pt3dadd( -36.5734, -243.943, 71.8264, 0.57 ) }
    dend_36 { pt3dadd( -36.8535, -245.223, 72.6917, 0.57 ) }
    dend_36 { pt3dadd( -37.2634, -247.392, 74.3461, 0.57 ) }
    dend_36 { pt3dadd( -37.5326, -249.086, 75.6322, 0.57 ) }
    dend_36 { pt3dadd( -38.1217, -252.801, 78.3359, 0.57 ) }
    dend_36 { pt3dadd( -38.2422, -253.614, 78.8636, 0.57 ) }
    dend_36 { pt3dadd( -38.51, -255.291, 79.7911, 0.57 ) }
    dend_36 { pt3dadd( -39.0644, -258.27, 80.9968, 0.57 ) }
    dend_36 { pt3dadd( -39.4017, -259.964, 81.4063, 0.57 ) }
    dend_36 { pt3dadd( -39.733, -261.607, 81.4872, 0.57 ) }
    dend_36 { pt3dadd( -40.1826, -263.718, 81.4156, 0.57 ) }
    dend_36 { pt3dadd( -40.8567, -266.677, 81.4477, 0.57 ) }
    dend_36 { pt3dadd( -41.6102, -269.744, 81.5746, 0.57 ) }
    dend_36 { pt3dadd( -42.2931, -272.502, 81.6836, 0.57 ) }
    dend_36 { pt3dadd( -43.4584, -277.08, 81.9666, 0.57 ) }
    dend_36 { pt3dadd( -44.4467, -280.486, 82.0721, 0.57 ) }
    dend_36 { pt3dadd( -45.5169, -283.606, 82.0833, 0.23 ) }
    dend_36 { pt3dadd( -46.1964, -285.395, 82.1059, 0.23 ) }
    dend_36 { pt3dadd( -47.0052, -287.302, 82.1484, 0.23 ) }
    dend_36 { pt3dadd( -48.0706, -289.68, 82.1906, 0.23 ) }
    dend_36 { pt3dadd( -49.5531, -292.81, 82.2474, 0.23 ) }
    dend_36 { pt3dadd( -50.1784, -294.011, 82.0059, 0.23 ) }
    dend_36 { pt3dadd( -51.084, -295.541, 81.5693, 1.7 ) }
    dend_36 { pt3dadd( -52.2313, -297.194, 81.1888, 0.68 ) }
    dend_36 { pt3dadd( -53.403, -298.6, 80.9607, 0.45 ) }
    dend_36 { pt3dadd( -54.1166, -299.329, 80.9741, 0.45 ) }
    dend_36 { pt3dadd( -57.3073, -301.844, 81.7093, 0.45 ) }
    dend_36 { pt3dadd( -59.9325, -303.36, 82.4391, 0.45 ) }
    dend_36 { pt3dadd( -61.7981, -304.2, 82.9715, 0.45 ) }
    dend_36 { pt3dadd( -63.0403, -304.69, 83.4168, 0.45 ) }
    dend_36 { pt3dadd( -64.2578, -305.214, 83.8174, 0.45 ) }
    dend_36 { pt3dadd( -66.2472, -306.442, 84.4099, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_36 { pt3dadd( -66.514, -306.663, 84.4815, 0.45 ) }
    dend_36 { pt3dadd( -67.1131, -307.261, 84.513, 1.92 ) }
    dend_36 { pt3dadd( -68.523, -308.948, 84.4505, 0.57 ) }
    dend_36 { pt3dadd( -70.0699, -311.094, 84.3334, 0.57 ) }
    dend_36 { pt3dadd( -71.3774, -313.157, 84.0654, 0.45 ) }
    dend_36 { pt3dadd( -72.0435, -314.322, 83.8824, 0.45 ) }
    dend_36 { pt3dadd( -73.3614, -316.658, 83.5351, 0.45 ) }
    dend_36 { pt3dadd( -74.3023, -318.393, 83.312, 0.57 ) }
    dend_36 { pt3dadd( -74.8494, -319.442, 83.182, 0.57 ) }
    dend_36 { pt3dadd( -76.1654, -322.049, 82.895, 0.57 ) }
    dend_36 { pt3dadd( -77.9606, -325.518, 82.4484, 0.57 ) }
    dend_36 { pt3dadd( -78.765, -327.092, 82.237, 0.57 ) }
    dend_36 { pt3dadd( -80.5314, -330.586, 81.7589, 0.57 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 13/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -17.929, -208.757, 64.0431, 0.45 ) }
    dend_35 { pt3dadd( -17.274, -211.081, 64.339, 0.45 ) }
    dend_35 { pt3dadd( -16.9704, -212.093, 64.4563, 0.45 ) }
    dend_35 { pt3dadd( -15.9006, -215.6, 65.1492, 0.45 ) }
    dend_35 { pt3dadd( -14.9473, -218.896, 65.9295, 0.45 ) }
    dend_35 { pt3dadd( -14.2139, -221.594, 66.5187, 0.45 ) }
    dend_35 { pt3dadd( -14.1858, -221.694, 66.5365, 1.81 ) }
    dend_35 { pt3dadd( -13.8138, -222.974, 66.7387, 1.7 ) }
    dend_35 { pt3dadd( -12.8948, -226.251, 67.2367, 0.68 ) }
    dend_35 { pt3dadd( -12.3348, -228.124, 67.4803, 0.68 ) }
    dend_35 { pt3dadd( -11.5628, -230.503, 67.8694, 0.68 ) }
    dend_35 { pt3dadd( -10.5877, -233.337, 68.3495, 0.68 ) }
    dend_35 { pt3dadd( -9.94823, -235.021, 68.5872, 0.68 ) }
    dend_35 { pt3dadd( -8.98507, -237.281, 68.8389, 0.68 ) }
    dend_35 { pt3dadd( -7.90792, -239.509, 69.0081, 0.68 ) }
    dend_35 { pt3dadd( -6.54388, -242.091, 69.2427, 0.68 ) }
    dend_35 { pt3dadd( -4.99721, -244.835, 69.5336, 0.68 ) }
    dend_35 { pt3dadd( -3.07614, -248.116, 69.8289, 0.68 ) }
    dend_35 { pt3dadd( -1.83456, -250.239, 69.8116, 0.68 ) }
    dend_35 { pt3dadd( -0.5575, -252.439, 69.6095, 0.68 ) }
    dend_35 { pt3dadd( 0.317268, -253.993, 69.3542, 0.68 ) }
    dend_35 { pt3dadd( 1.32977, -255.948, 68.917, 0.68 ) }
    dend_35 { pt3dadd( 3.21713, -259.844, 67.9642, 0.68 ) }
    dend_35 { pt3dadd( 5.06871, -263.845, 66.9945, 0.57 ) }
    dend_35 { pt3dadd( 5.81978, -265.521, 66.6036, 0.57 ) }
    dend_35 { pt3dadd( 6.80693, -267.77, 66.1134, 0.57 ) }
    dend_35 { pt3dadd( 8.0031, -270.425, 65.4878, 0.57 ) }
    dend_35 { pt3dadd( 9.37763, -273.396, 64.7821, 0.57 ) }
    dend_35 { pt3dadd( 11.0237, -276.837, 64.0286, 0.57 ) }
    dend_35 { pt3dadd( 12.0094, -278.714, 63.728, 0.57 ) }
    dend_35 { pt3dadd( 12.771, -280.119, 63.5007, 0.57 ) }
    dend_35 { pt3dadd( 14.5289, -283.216, 63.1837, 0.57 ) }
    dend_35 { pt3dadd( 14.982, -283.945, 63.14, 0.57 ) }
    dend_35 { pt3dadd( 15.9305, -285.43, 63.1405, 0.57 ) }
    dend_35 { pt3dadd( 17.3529, -287.664, 63.4654, 0.57 ) }
    dend_35 { pt3dadd( 17.7786, -288.319, 63.6057, 2.6 ) }
    dend_35 { pt3dadd( 19.2584, -290.611, 64.1977, 2.04 ) }
    dend_35 { pt3dadd( 21.1802, -293.656, 64.7743, 0.57 ) }
    dend_35 { pt3dadd( 21.9872, -294.928, 64.8499, 0.57 ) }
    dend_35 { pt3dadd( 23.6855, -297.699, 65.4142, 0.57 ) }
    dend_35 { pt3dadd( 24.8549, -299.705, 65.9663, 0.57 ) }
    dend_35 { pt3dadd( 26.2165, -302.091, 66.8182, 0.57 ) }
    dend_35 { pt3dadd( 28.3001, -305.882, 68.3058, 0.57 ) }
    dend_35 { pt3dadd( 29.8461, -308.918, 69.669, 0.57 ) }
    dend_35 { pt3dadd( 34.0162, -317.439, 72.9121, 0.57 ) }
    dend_35 { pt3dadd( 36.295, -322.41, 74.4408, 0.57 ) }
    dend_35 { pt3dadd( 37.5127, -325.261, 75.252, 0.57 ) }
    dend_35 { pt3dadd( 38.5092, -327.723, 75.8098, 0.57 ) }
    dend_35 { pt3dadd( 39.0643, -329.213, 76.0537, 0.57 ) }
    dend_35 { pt3dadd( 41.2745, -335.665, 75.7528, 0.57 ) }
    dend_35 { pt3dadd( 42.2596, -338.466, 74.9481, 0.57 ) }
    dend_35 { pt3dadd( 42.6755, -339.69, 74.5217, 0.57 ) }
    dend_35 { pt3dadd( 43.4214, -341.862, 73.7124, 0.45 ) }
    dend_35 { pt3dadd( 43.7933, -342.88, 73.3847, 0.45 ) }
    dend_35 { pt3dadd( 44.6305, -344.913, 73.0286, 0.45 ) }
    dend_35 { pt3dadd( 45.5375, -347.04, 73.1349, 0.45 ) }
    dend_35 { pt3dadd( 45.9809, -348.031, 73.2208, 0.45 ) }
    dend_35 { pt3dadd( 46.4769, -349.153, 73.3473, 0.45 ) }
    dend_35 { pt3dadd( 46.923, -350.192, 73.4646, 0.45 ) }
    dend_35 { pt3dadd( 47.9972, -352.686, 73.7107, 0.45 ) }
    dend_35 { pt3dadd( 48.722, -354.429, 73.9073, 0.45 ) }
    dend_35 { pt3dadd( 49.5622, -356.548, 74.1401, 0.45 ) }
    dend_35 { pt3dadd( 50.6369, -359.178, 74.4071, 0.45 ) }
    dend_35 { pt3dadd( 51.5369, -361.431, 74.595, 0.45 ) }
    dend_35 { pt3dadd( 51.8592, -362.296, 74.6611, 0.45 ) }
    dend_35 { pt3dadd( 52.6733, -364.546, 74.783, 0.45 ) }
    dend_35 { pt3dadd( 54.0481, -368.395, 75.011, 0.45 ) }
    dend_35 { pt3dadd( 55.14, -371.492, 75.2122, 0.45 ) }
    dend_35 { pt3dadd( 56.2468, -374.725, 75.4583, 0.45 ) }
    dend_35 { pt3dadd( 57.2232, -377.64, 75.7327, 0.45 ) }
    // Section: dend_62, id: dend_62, parent: dend_54 (entry count 83/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 133.35, -89.1279, 15.7572, 0.45 ) }
    dend_62 { pt3dadd( 133.912, -90.0195, 13.6472, 0.45 ) }
    dend_62 { pt3dadd( 134.433, -90.8688, 12.0348, 0.45 ) }
    dend_62 { pt3dadd( 135.108, -91.8991, 10.327, 0.45 ) }
    dend_62 { pt3dadd( 135.67, -92.8495, 8.78638, 0.45 ) }
    dend_62 { pt3dadd( 137.885, -97.324, 1.58827, 0.45 ) }
    dend_62 { pt3dadd( 139.126, -100.131, -2.84784, 0.45 ) }
    dend_62 { pt3dadd( 139.725, -101.835, -5.76109, 0.45 ) }
    dend_62 { pt3dadd( 139.914, -102.564, -6.99823, 0.45 ) }
    dend_62 { pt3dadd( 140.431, -105.117, -11.0029, 0.45 ) }
    dend_62 { pt3dadd( 140.787, -106.927, -13.5701, 0.45 ) }
    dend_62 { pt3dadd( 140.847, -107.224, -13.889, 0.45 ) }
    dend_62 { pt3dadd( 141.413, -109.735, -16.3411, 0.45 ) }
    dend_62 { pt3dadd( 141.862, -111.501, -18.087, 0.45 ) }
    dend_62 { pt3dadd( 142.393, -113.23, -19.4519, 0.45 ) }
    dend_62 { pt3dadd( 143.117, -114.918, -20.5212, 0.34 ) }
    dend_62 { pt3dadd( 144.011, -116.67, -21.4967, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_62 { pt3dadd( 144.604, -117.756, -22.0447, 0.34 ) }
    dend_62 { pt3dadd( 145.091, -118.577, -22.3962, 0.34 ) }
    dend_62 { pt3dadd( 146.78, -121.191, -23.4894, 0.34 ) }
    dend_62 { pt3dadd( 148.847, -124.551, -24.9127, 0.34 ) }
    dend_62 { pt3dadd( 149.438, -125.574, -25.2572, 0.34 ) }
    dend_62 { pt3dadd( 149.854, -126.343, -25.6181, 0.34 ) }
    dend_62 { pt3dadd( 150.636, -127.873, -26.4583, 0.34 ) }
    dend_62 { pt3dadd( 151.055, -128.72, -26.9658, 0.34 ) }
    dend_62 { pt3dadd( 151.873, -130.42, -28.0841, 0.34 ) }
    dend_62 { pt3dadd( 152.573, -131.966, -28.9622, 0.34 ) }
    dend_62 { pt3dadd( 154.414, -136.056, -31.6229, 0.34 ) }
    dend_62 { pt3dadd( 155.214, -137.802, -32.9023, 0.34 ) }
    dend_62 { pt3dadd( 155.415, -138.241, -33.263, 0.34 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 133.35, -89.1279, 15.7572, 0.45 ) }
    dend_55 { pt3dadd( 135.402, -89.7339, 15.7036, 0.45 ) }
    dend_55 { pt3dadd( 137.032, -90.4106, 15.4925, 0.45 ) }
    dend_55 { pt3dadd( 138.979, -91.3528, 15.1877, 0.45 ) }
    dend_55 { pt3dadd( 141.517, -92.889, 14.3608, 0.45 ) }
    dend_55 { pt3dadd( 143.236, -94.1422, 13.6581, 0.45 ) }
    dend_55 { pt3dadd( 145.705, -96.1384, 12.5806, 0.45 ) }
    dend_55 { pt3dadd( 148.103, -98.4874, 11.3836, 0.34 ) }
    dend_55 { pt3dadd( 149.094, -99.5933, 10.8724, 0.34 ) }
    dend_55 { pt3dadd( 152.52, -103.75, 8.88926, 0.34 ) }
    dend_55 { pt3dadd( 154.569, -106.303, 7.62698, 0.34 ) }
    dend_55 { pt3dadd( 156.035, -108.123, 6.7883, 0.34 ) }
    dend_55 { pt3dadd( 157.404, -109.849, 6.09567, 0.34 ) }
    dend_55 { pt3dadd( 159.267, -112.132, 5.40322, 0.34 ) }
    dend_55 { pt3dadd( 161.319, -114.663, 4.81574, 0.34 ) }
    dend_55 { pt3dadd( 162.921, -116.603, 4.61103, 0.34 ) }
    dend_55 { pt3dadd( 164.451, -118.449, 4.44698, 0.34 ) }
    dend_55 { pt3dadd( 165.817, -120.177, 4.40547, 0.34 ) }
    dend_55 { pt3dadd( 166.879, -121.544, 4.5366, 0.34 ) }
    dend_55 { pt3dadd( 167.936, -122.967, 4.90172, 0.34 ) }
    dend_55 { pt3dadd( 169.062, -124.505, 5.35858, 0.34 ) }
    dend_55 { pt3dadd( 170.479, -126.381, 5.88449, 0.34 ) }
    dend_55 { pt3dadd( 173.153, -129.748, 6.72535, 0.45 ) }
    dend_55 { pt3dadd( 175.423, -132.39, 7.3803, 0.45 ) }
    dend_55 { pt3dadd( 177.584, -134.741, 8.05489, 0.45 ) }
    dend_55 { pt3dadd( 180.218, -137.493, 8.87604, 0.45 ) }
    dend_55 { pt3dadd( 181.53, -138.758, 9.20114, 0.45 ) }
    dend_55 { pt3dadd( 183.077, -140.181, 9.48547, 0.45 ) }
    dend_55 { pt3dadd( 183.951, -140.961, 9.55135, 0.45 ) }
    dend_55 { pt3dadd( 187.733, -144.332, 9.56203, 0.45 ) }
    dend_55 { pt3dadd( 190.289, -146.639, 9.5124, 0.45 ) }
    dend_55 { pt3dadd( 192.733, -148.955, 9.56553, 0.45 ) }
    dend_55 { pt3dadd( 193.766, -149.955, 9.56924, 0.45 ) }
    dend_55 { pt3dadd( 197.226, -153.256, 9.61952, 0.45 ) }
    dend_55 { pt3dadd( 198.827, -154.821, 9.69493, 0.45 ) }
    dend_55 { pt3dadd( 200.974, -156.974, 9.93222, 0.45 ) }
    dend_55 { pt3dadd( 202.276, -158.285, 10.238, 0.45 ) }
    dend_55 { pt3dadd( 203.181, -159.216, 10.5076, 0.45 ) }
    dend_55 { pt3dadd( 205.482, -161.583, 11.2195, 0.45 ) }
    dend_55 { pt3dadd( 207.815, -164.043, 12.0223, 0.45 ) }
    dend_55 { pt3dadd( 209.843, -166.268, 12.5125, 0.45 ) }
    dend_55 { pt3dadd( 212.0, -168.725, 12.7844, 0.45 ) }
    dend_55 { pt3dadd( 213.597, -170.576, 12.7003, 0.45 ) }
    dend_55 { pt3dadd( 215.249, -172.572, 12.3527, 0.45 ) }
    dend_55 { pt3dadd( 216.481, -174.107, 11.9036, 0.45 ) }
    dend_55 { pt3dadd( 218.907, -177.167, 10.8051, 0.45 ) }
    dend_55 { pt3dadd( 220.235, -178.889, 10.1708, 0.45 ) }
    dend_55 { pt3dadd( 222.499, -181.883, 9.16352, 0.45 ) }
    dend_55 { pt3dadd( 224.623, -184.636, 8.36896, 0.45 ) }
    dend_55 { pt3dadd( 225.974, -186.327, 7.92153, 0.45 ) }
    dend_55 { pt3dadd( 227.207, -187.837, 7.44846, 0.45 ) }
    dend_55 { pt3dadd( 228.882, -189.893, 6.8277, 0.45 ) }
    dend_55 { pt3dadd( 229.864, -191.042, 6.40872, 0.45 ) }
    dend_55 { pt3dadd( 230.378, -191.647, 6.1643, 0.45 ) }
    dend_55 { pt3dadd( 231.639, -193.102, 5.49013, 0.45 ) }
    dend_55 { pt3dadd( 234.942, -196.756, 3.57727, 0.45 ) }
    dend_55 { pt3dadd( 236.247, -198.158, 2.76103, 0.45 ) }
    dend_55 { pt3dadd( 238.067, -200.087, 1.5383, 0.45 ) }
    dend_55 { pt3dadd( 239.562, -201.662, 0.53583, 0.45 ) }
    dend_55 { pt3dadd( 240.126, -202.28, 0.155143, 0.79 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 73/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 240.126, -202.28, 0.155143, 0.45 ) }
    dend_57 { pt3dadd( 239.334, -204.713, -0.359022, 0.45 ) }
    dend_57 { pt3dadd( 238.941, -206.273, -0.621299, 0.45 ) }
    dend_57 { pt3dadd( 238.688, -207.619, -0.97044, 0.45 ) }
    dend_57 { pt3dadd( 238.612, -208.301, -1.29273, 0.45 ) }
    dend_57 { pt3dadd( 238.614, -209.409, -1.90275, 0.45 ) }
    dend_57 { pt3dadd( 238.698, -210.36, -2.41963, 0.45 ) }
    dend_57 { pt3dadd( 239.04, -211.753, -3.1883, 0.45 ) }
    dend_57 { pt3dadd( 239.773, -214.072, -4.48219, 0.45 ) }
    dend_57 { pt3dadd( 240.793, -217.09, -6.16774, 0.45 ) }
    dend_57 { pt3dadd( 241.307, -218.758, -6.98076, 0.45 ) }
    dend_57 { pt3dadd( 241.958, -221.068, -7.93561, 0.45 ) }
    dend_57 { pt3dadd( 242.262, -222.471, -8.39948, 0.45 ) }
    dend_57 { pt3dadd( 242.582, -224.378, -8.71098, 0.45 ) }
    dend_57 { pt3dadd( 242.864, -227.004, -8.38541, 0.45 ) }
    dend_57 { pt3dadd( 243.013, -229.916, -7.59447, 0.45 ) }
    dend_57 { pt3dadd( 242.994, -231.633, -6.92816, 0.45 ) }
    dend_57 { pt3dadd( 242.899, -233.337, -5.86729, 0.45 ) }
    dend_57 { pt3dadd( 242.671, -236.534, -3.37561, 0.45 ) }
    dend_57 { pt3dadd( 242.358, -240.747, 0.415199, 0.45 ) }
    dend_57 { pt3dadd( 242.265, -242.037, 1.62975, 0.45 ) }
    dend_57 { pt3dadd( 242.171, -243.959, 3.42636, 0.45 ) }
    dend_57 { pt3dadd( 241.937, -248.307, 7.70993, 0.45 ) }
    dend_57 { pt3dadd( 241.871, -249.558, 8.97095, 0.45 ) }
    dend_57 { pt3dadd( 241.756, -251.041, 10.3259, 0.45 ) }
    dend_57 { pt3dadd( 241.551, -253.426, 12.2156, 0.45 ) }
    dend_57 { pt3dadd( 241.481, -254.578, 13.1528, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 0/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 240.126, -202.28, 0.155143, 0.45 ) }
    dend_56 { pt3dadd( 241.369, -203.348, 0.413307, 0.45 ) }
    dend_56 { pt3dadd( 243.698, -205.191, 0.795655, 0.45 ) }
    dend_56 { pt3dadd( 246.22, -206.913, 1.11372, 0.45 ) }
    dend_56 { pt3dadd( 248.455, -208.377, 1.40719, 0.45 ) }
    dend_56 { pt3dadd( 250.884, -209.97, 1.72714, 0.45 ) }
    dend_56 { pt3dadd( 252.182, -210.848, 1.79422, 0.45 ) }
    dend_56 { pt3dadd( 255.052, -212.805, 1.57895, 0.45 ) }
    dend_56 { pt3dadd( 257.966, -214.803, 1.007, 0.45 ) }
    dend_56 { pt3dadd( 261.152, -217.062, 0.0235342, 0.45 ) }
    dend_56 { pt3dadd( 262.206, -217.829, -0.359009, 0.45 ) }
    dend_56 { pt3dadd( 266.453, -220.951, -1.99316, 0.45 ) }
    dend_56 { pt3dadd( 269.66, -223.397, -3.21146, 0.45 ) }
    dend_56 { pt3dadd( 271.49, -224.782, -3.83955, 0.45 ) }
    dend_56 { pt3dadd( 275.476, -227.629, -4.98294, 0.45 ) }
    dend_56 { pt3dadd( 277.277, -228.837, -5.28528, 0.45 ) }
    dend_56 { pt3dadd( 280.696, -231.056, -5.40271, 0.45 ) }
    dend_56 { pt3dadd( 285.152, -233.821, -4.94931, 0.45 ) }
    dend_56 { pt3dadd( 290.196, -237.018, -3.83958, 0.45 ) }
    dend_56 { pt3dadd( 293.885, -239.414, -2.58054, 0.45 ) }
    dend_56 { pt3dadd( 298.422, -242.239, -0.559499, 0.45 ) }
    dend_56 { pt3dadd( 300.755, -243.636, 0.617102, 0.45 ) }
    dend_56 { pt3dadd( 302.326, -244.478, 1.46814, 0.45 ) }
    dend_56 { pt3dadd( 306.489, -246.176, 3.55062, 0.45 ) }
    dend_56 { pt3dadd( 310.378, -247.407, 5.24702, 0.45 ) }
    dend_56 { pt3dadd( 315.473, -248.636, 7.02703, 0.45 ) }
    dend_56 { pt3dadd( 318.962, -249.217, 7.87858, 0.45 ) }
    dend_56 { pt3dadd( 324.594, -249.809, 8.89305, 0.45 ) }
    dend_56 { pt3dadd( 332.603, -250.113, 10.019, 0.45 ) }
    dend_56 { pt3dadd( 334.749, -250.006, 10.2255, 0.45 ) }
    dend_56 { pt3dadd( 336.75, -249.755, 10.3514, 0.45 ) }
    dend_56 { pt3dadd( 340.012, -248.911, 10.6075, 0.45 ) }
    dend_56 { pt3dadd( 341.892, -247.981, 10.82, 0.45 ) }
    dend_56 { pt3dadd( 344.067, -245.753, 11.2071, 0.45 ) }
    dend_56 { pt3dadd( 345.001, -244.108, 11.4694, 0.45 ) }
    dend_56 { pt3dadd( 345.814, -242.472, 11.7033, 0.45 ) }
    dend_56 { pt3dadd( 347.487, -238.958, 12.1575, 0.45 ) }
    dend_56 { pt3dadd( 348.506, -236.921, 12.3992, 0.45 ) }
    dend_56 { pt3dadd( 350.515, -233.604, 12.7389, 0.45 ) }
    dend_56 { pt3dadd( 352.393, -231.217, 13.1787, 0.45 ) }
    dend_56 { pt3dadd( 354.555, -229.062, 13.8715, 0.45 ) }
    dend_56 { pt3dadd( 356.249, -227.642, 14.4575, 0.45 ) }
    dend_56 { pt3dadd( 357.967, -226.558, 15.1352, 0.45 ) }
    dend_56 { pt3dadd( 360.195, -225.584, 16.1091, 0.45 ) }
    dend_56 { pt3dadd( 366.578, -224.492, 19.9792, 0.45 ) }
    dend_56 { pt3dadd( 367.435, -224.538, 20.7114, 0.45 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 46/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 241.481, -254.578, 13.1528, 0.45 ) }
    dend_59 { pt3dadd( 241.539, -256.674, 13.4775, 0.45 ) }
    dend_59 { pt3dadd( 241.713, -258.483, 13.7574, 0.45 ) }
    dend_59 { pt3dadd( 241.991, -260.382, 14.089, 0.45 ) }
    dend_59 { pt3dadd( 242.261, -262.107, 14.3827, 0.45 ) }
    dend_59 { pt3dadd( 242.788, -264.984, 15.0936, 0.45 ) }
    dend_59 { pt3dadd( 243.059, -266.319, 15.579, 0.45 ) }
    dend_59 { pt3dadd( 243.48, -268.143, 16.489, 0.45 ) }
    dend_59 { pt3dadd( 243.907, -269.864, 17.4503, 0.45 ) }
    dend_59 { pt3dadd( 244.6, -272.317, 18.9443, 0.45 ) }
    dend_59 { pt3dadd( 245.689, -275.85, 21.1597, 0.45 ) }
    dend_59 { pt3dadd( 246.893, -279.366, 23.3202, 0.45 ) }
    dend_59 { pt3dadd( 247.946, -282.462, 25.1034, 0.45 ) }
    dend_59 { pt3dadd( 248.615, -284.334, 26.072, 0.45 ) }
    dend_59 { pt3dadd( 249.719, -287.302, 27.3381, 0.45 ) }
    dend_59 { pt3dadd( 250.473, -289.25, 27.9923, 0.45 ) }
    dend_59 { pt3dadd( 251.378, -291.758, 28.4848, 0.45 ) }
    dend_59 { pt3dadd( 252.258, -294.17, 28.7633, 0.45 ) }
    dend_59 { pt3dadd( 253.181, -296.684, 28.9754, 0.45 ) }
    dend_59 { pt3dadd( 253.978, -299.025, 29.2259, 0.45 ) }
    dend_59 { pt3dadd( 254.699, -301.523, 29.4, 0.45 ) }
    dend_59 { pt3dadd( 255.554, -304.756, 29.6322, 0.45 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 68/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 241.481, -254.578, 13.1528, 0.45 ) }
    dend_58 { pt3dadd( 243.644, -252.892, 13.0677, 0.45 ) }
    dend_58 { pt3dadd( 244.709, -252.062, 13.0258, 0.45 ) }
    dend_58 { pt3dadd( 245.911, -251.125, 12.9785, 0.45 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 72/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 255.554, -304.756, 29.6322, 0.45 ) }
    dend_61 { pt3dadd( 254.148, -308.385, 32.5488, 0.45 ) }
    dend_61 { pt3dadd( 252.452, -312.86, 35.6968, 0.45 ) }
    dend_61 { pt3dadd( 251.479, -315.532, 37.3877, 0.45 ) }
    dend_61 { pt3dadd( 250.91, -317.215, 38.3574, 0.45 ) }
    dend_61 { pt3dadd( 250.787, -317.6, 38.5579, 0.45 ) }
    dend_61 { pt3dadd( 249.521, -321.719, 40.6196, 0.45 ) }
    dend_61 { pt3dadd( 249.26, -322.783, 40.9451, 0.45 ) }
    dend_61 { pt3dadd( 249.049, -323.819, 41.1553, 0.45 ) }
    dend_61 { pt3dadd( 248.789, -324.886, 41.4007, 0.45 ) }
    dend_61 { pt3dadd( 248.377, -326.354, 41.665, 0.45 ) }
    dend_61 { pt3dadd( 247.671, -328.913, 41.9567, 0.45 ) }
    dend_61 { pt3dadd( 247.062, -331.21, 42.1464, 0.45 ) }
    dend_61 { pt3dadd( 246.317, -333.986, 42.5569, 0.45 ) }
    dend_61 { pt3dadd( 245.863, -335.532, 42.9265, 0.45 ) }
    dend_61 { pt3dadd( 245.292, -337.354, 43.422, 0.45 ) }
    dend_61 { pt3dadd( 244.444, -339.934, 44.1702, 0.45 ) }
    dend_61 { pt3dadd( 243.661, -342.281, 45.5062, 0.45 ) }
    dend_61 { pt3dadd( 242.943, -344.332, 47.1667, 0.45 ) }
    dend_61 { pt3dadd( 242.373, -345.99, 48.7357, 0.45 ) }
    dend_61 { pt3dadd( 241.856, -347.476, 50.362, 0.45 ) }
    dend_61 { pt3dadd( 241.26, -349.042, 52.1894, 0.45 ) }
    dend_61 { pt3dadd( 238.693, -355.464, 59.4163, 0.45 ) }
    dend_61 { pt3dadd( 238.06, -357.124, 61.0676, 0.45 ) }
    dend_61 { pt3dadd( 237.662, -358.286, 62.0331, 0.45 ) }
    dend_61 { pt3dadd( 236.477, -362.085, 64.6158, 0.45 ) }
    dend_61 { pt3dadd( 235.926, -364.11, 65.7505, 0.45 ) }
    dend_61 { pt3dadd( 235.35, -366.729, 66.6096, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_61 { pt3dadd( 234.963, -368.742, 66.6852, 0.45 ) }
    dend_61 { pt3dadd( 234.609, -371.082, 66.6474, 0.45 ) }
    dend_61 { pt3dadd( 234.361, -373.284, 66.4038, 0.45 ) }
    dend_61 { pt3dadd( 234.272, -374.988, 65.9212, 0.45 ) }
    dend_61 { pt3dadd( 234.283, -375.844, 65.6826, 0.45 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 5/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 255.554, -304.756, 29.6322, 0.45 ) }
    dend_60 { pt3dadd( 255.861, -306.007, 30.178, 0.45 ) }
    dend_60 { pt3dadd( 256.453, -308.568, 31.2019, 0.45 ) }
    dend_60 { pt3dadd( 256.959, -311.483, 32.3385, 0.45 ) }
    dend_60 { pt3dadd( 257.041, -312.583, 32.8512, 0.45 ) }
    dend_60 { pt3dadd( 257.048, -314.221, 33.7631, 0.45 ) }
    dend_60 { pt3dadd( 256.986, -315.877, 34.8175, 0.45 ) }
    dend_60 { pt3dadd( 256.87, -316.951, 35.658, 0.45 ) }
    dend_60 { pt3dadd( 256.66, -318.387, 36.9741, 0.45 ) }
    dend_60 { pt3dadd( 256.078, -321.74, 40.616, 0.45 ) }
    dend_60 { pt3dadd( 255.696, -323.904, 43.1092, 0.45 ) }
    dend_60 { pt3dadd( 255.519, -325.18, 44.6068, 0.45 ) }
    dend_60 { pt3dadd( 255.334, -327.164, 47.022, 0.45 ) }
    dend_60 { pt3dadd( 255.331, -327.66, 47.6163, 0.45 ) }
    dend_60 { pt3dadd( 255.524, -328.778, 49.0081, 0.45 ) }
    dend_60 { pt3dadd( 255.941, -329.951, 50.3101, 0.45 ) }
    dend_60 { pt3dadd( 256.67, -331.621, 51.9983, 0.45 ) }
    dend_60 { pt3dadd( 256.993, -332.282, 52.5879, 0.45 ) }
    dend_60 { pt3dadd( 257.989, -334.314, 54.134, 0.45 ) }
    dend_60 { pt3dadd( 259.718, -337.594, 56.5346, 0.45 ) }
    dend_60 { pt3dadd( 260.732, -339.404, 57.8848, 0.45 ) }
    dend_60 { pt3dadd( 262.215, -341.936, 59.7949, 0.45 ) }
    dend_60 { pt3dadd( 263.179, -343.638, 61.0801, 0.45 ) }
    dend_60 { pt3dadd( 265.128, -347.046, 63.6785, 0.45 ) }
    dend_60 { pt3dadd( 265.737, -348.09, 64.4697, 0.45 ) }
    dend_60 { pt3dadd( 267.082, -350.463, 66.1928, 0.45 ) }
    dend_60 { pt3dadd( 267.564, -351.355, 66.9309, 0.45 ) }
    dend_60 { pt3dadd( 268.782, -353.631, 68.8964, 0.45 ) }
    dend_60 { pt3dadd( 269.87, -355.811, 70.8932, 0.45 ) }
    dend_60 { pt3dadd( 270.341, -356.798, 72.0136, 0.45 ) }
    dend_60 { pt3dadd( 270.865, -357.952, 73.55, 0.45 ) }
    dend_60 { pt3dadd( 271.786, -360.234, 76.5102, 0.45 ) }
    dend_60 { pt3dadd( 272.181, -361.354, 77.9313, 0.45 ) }
    dend_60 { pt3dadd( 272.584, -362.554, 79.4112, 0.45 ) }
    dend_60 { pt3dadd( 274.202, -367.553, 85.2705, 0.45 ) }
    dend_60 { pt3dadd( 275.378, -371.09, 89.1445, 0.45 ) }
    dend_60 { pt3dadd( 276.397, -374.061, 92.1984, 0.45 ) }
    dend_60 { pt3dadd( 276.714, -374.975, 93.0239, 0.45 ) }
    dend_60 { pt3dadd( 277.041, -375.947, 93.93, 0.45 ) }
    dend_60 { pt3dadd( 277.459, -377.15, 95.0958, 0.45 ) }
    dend_60 { pt3dadd( 277.938, -378.398, 96.4148, 0.45 ) }
    dend_60 { pt3dadd( 278.415, -379.547, 97.9126, 0.45 ) }
    dend_60 { pt3dadd( 278.605, -379.968, 98.5637, 0.45 ) }
    dend_60 { pt3dadd( 280.331, -383.74, 104.819, 0.45 ) }
    dend_60 { pt3dadd( 281.119, -385.512, 107.79, 0.45 ) }
    dend_60 { pt3dadd( 282.503, -388.377, 112.448, 0.45 ) }
    dend_60 { pt3dadd( 282.729, -388.847, 113.221, 0.45 ) }
    dend_60 { pt3dadd( 282.974, -389.317, 113.954, 0.45 ) }
    dend_60 { pt3dadd( 283.433, -390.162, 115.148, 0.45 ) }
    dend_60 { pt3dadd( 284.579, -392.225, 117.59, 0.45 ) }
    dend_60 { pt3dadd( 285.682, -394.294, 119.913, 0.45 ) }
    dend_60 { pt3dadd( 288.416, -399.672, 125.75, 0.45 ) }
    dend_60 { pt3dadd( 289.549, -401.97, 128.287, 0.45 ) }
    dend_60 { pt3dadd( 290.099, -403.062, 129.515, 0.45 ) }
    dend_60 { pt3dadd( 290.692, -404.168, 131.192, 0.45 ) }
    dend_60 { pt3dadd( 291.5, -405.442, 133.87, 0.45 ) }
    dend_60 { pt3dadd( 292.438, -406.76, 137.559, 0.45 ) }
    dend_60 { pt3dadd( 292.796, -407.224, 139.109, 0.45 ) }
    dend_60 { pt3dadd( 293.045, -407.614, 140.547, 0.45 ) }
    dend_60 { pt3dadd( 294.901, -411.065, 153.09, 0.45 ) }
    dend_60 { pt3dadd( 295.373, -412.061, 156.479, 0.45 ) }
    dend_60 { pt3dadd( 295.88, -413.266, 160.115, 0.45 ) }
    dend_60 { pt3dadd( 296.141, -413.972, 162.288, 0.45 ) }
    dend_60 { pt3dadd( 296.702, -415.682, 167.357, 0.45 ) }
    dend_60 { pt3dadd( 296.934, -416.596, 169.76, 0.45 ) }
    dend_60 { pt3dadd( 297.157, -417.672, 171.967, 0.45 ) }
    dend_60 { pt3dadd( 297.538, -419.63, 176.036, 0.45 ) }
    dend_60 { pt3dadd( 299.253, -426.262, 190.983, 0.45 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_11 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_13 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_46 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_44 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_10 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_9 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_69 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_6 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_64 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_49 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_41 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_28 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_21 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_66 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_65 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_63 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_38 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_33 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_31 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_67 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_51 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_40 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_37 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_54 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_53 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_36 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_35 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_62 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_55 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_57 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_56 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_59 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_61 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_60 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_24 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_12 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_25 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_45 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_47 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_27 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_29 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_30 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_14 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_15 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_43 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_50 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_42 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_52 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_20 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_7 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_68 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_58 OneSecGrp_SectionRef_71.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_11 nseg = 3
    dend_22 nseg = 5
    dend_13 nseg = 3
    dend_8 nseg = 3
    dend_46 nseg = 7
    dend_44 nseg = 9
    dend_10 nseg = 5
    dend_9 nseg = 9
    dend_5 nseg = 9
    dend_2 nseg = 3
    dend_69 nseg = 3
    dend_19 nseg = 3
    dend_6 nseg = 5
    dend_64 nseg = 5
    dend_49 nseg = 3
    dend_41 nseg = 3
    dend_28 nseg = 27
    dend_21 nseg = 3
    dend_66 nseg = 9
    dend_65 nseg = 3
    dend_63 nseg = 5
    dend_38 nseg = 7
    dend_33 nseg = 7
    dend_31 nseg = 5
    dend_67 nseg = 5
    dend_51 nseg = 7
    dend_40 nseg = 19
    dend_37 nseg = 13
    dend_54 nseg = 3
    dend_53 nseg = 11
    dend_36 nseg = 7
    dend_35 nseg = 9
    dend_62 nseg = 3
    dend_55 nseg = 9
    dend_57 nseg = 3
    dend_56 nseg = 7
    dend_59 nseg = 3
    dend_61 nseg = 5
    dend_60 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L5_NBC_adc0ce53be_0_0


