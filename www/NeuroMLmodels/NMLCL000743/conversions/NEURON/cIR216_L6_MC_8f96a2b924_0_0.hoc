// Cell: cIR216_L6_MC_8f96a2b924_0_0
/*
{
  "id" : "cIR216_L6_MC_8f96a2b924_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.604345, 14.9148, -0.0137517, 2.24895", "0.567996, 13.358, -0.0124092, 3.66148", "0.531648, 11.8012, -0.0110666, 5.24119", "0.495299, 10.2445, -0.00972411, 6.93007", "0.458951, 8.68766, -0.00838158, 8.33529", "0.422602, 7.13086, -0.00703904, 9.38398", "0.386254, 5.57407, -0.00569651, 10.3974", "0.349905, 4.01727, -0.00435398, 11.1281", "0.313557, 2.46048, -0.00301145, 11.4353", "0.277208, 0.903681, -0.00166892, 10.9538", "0.240859, -0.653114, -3.26385E-4, 10.395", "0.204511, -2.20991, 0.00101615, 9.83019", "0.168162, -3.7667, 0.00235868, 9.07757", "0.131814, -5.3235, 0.00370121, 8.19272", "0.0954654, -6.8803, 0.00504374, 7.59378", "0.0591169, -8.43709, 0.00638627, 7.0332", "0.0227684, -9.99389, 0.00772881, 6.30438", "-0.0135801, -11.5507, 0.00907134, 5.3987", "-0.0499286, -13.1075, 0.0104139, 4.49303", "-0.0862771, -14.6643, 0.0117564, 3.43597", "-0.122626, -16.2211, 0.0130989, 2.07305" ]
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.599542, 14.5947, -0.0268013, 2.43", "0.599542, 14.5947, -0.0268013, 2.43", "0.570311, 15.6671, -0.0163575, 2.5", "0.536977, 16.8901, -0.00444804, 2.8", "0.515091, 17.6931, 0.00337142, 3.02", "0.495589, 18.4085, 0.0103386, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884478442963
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.69046, 10.9677, -14.5568, 1.11", "-1.75224, 11.3302, -14.9909, 1.11", "-1.78056, 12.1291, -15.7169, 1.11", "-1.77697, 12.7843, -16.3698, 1.11", "-1.78825, 13.3639, -17.0043, 1.11", "-1.81942, 14.1811, -17.9106, 1.11", "-1.85451, 15.1013, -18.931, 1.11", "-1.84547, 16.0721, -19.9958, 1.11", "-1.76799, 17.589, -21.5777, 1.11", "-1.71464, 18.4931, -22.5029, 1.11", "-1.70614, 19.1823, -23.2387, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884478442963
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "4.02954, 9.65144, -5.4068, 0.88", "4.41444, 10.0969, -5.56563, 0.88", "5.27166, 11.1179, -5.95683, 0.88", "6.26022, 12.303, -6.39914, 0.88", "7.31781, 13.6175, -6.85894, 0.88", "8.19562, 14.7514, -7.27492, 0.88", "9.53946, 16.5092, -7.95355, 0.88", "10.5029, 17.7769, -8.48964, 0.88", "11.283, 18.7742, -8.95461, 0.88", "11.9359, 19.5596, -9.38734, 0.88", "12.597, 20.2782, -9.8264, 0.88", "13.223, 20.8745, -10.2079, 0.88", "14.04, 21.5264, -10.6178, 0.88", "14.987, 22.1428, -11.0736, 0.88", "16.185, 22.8138, -11.6087, 0.88", "17.1273, 23.2938, -11.9697, 0.88", "17.9702, 23.7247, -12.2496, 0.88", "18.7549, 24.1544, -12.4957, 0.81", "19.5363, 24.6098, -12.7391, 0.74", "20.3664, 25.0834, -12.9989, 0.74", "21.6393, 25.7868, -13.4237, 0.74", "22.2189, 26.1167, -13.6581, 0.74", "22.9199, 26.5087, -13.9513, 0.74", "24.1591, 27.1447, -14.4272, 0.74", "25.2871, 27.6595, -14.8297, 0.74", "26.3103, 28.059, -15.1785, 0.74", "27.5362, 28.4324, -15.5389, 0.74", "28.997, 28.7855, -15.8935, 0.74", "31.1653, 29.23, -16.3931, 0.66", "32.6754, 29.522, -16.7165, 0.66", "34.2301, 29.8528, -17.066, 0.66", "36.8939, 30.5107, -17.6567, 0.66", "38.692, 31.0192, -18.0369, 0.66", "39.984, 31.4705, -18.358, 0.66", "41.0709, 31.95, -18.6595, 0.59", "42.4557, 32.6904, -19.0549, 0.59", "43.5173, 33.3683, -19.4208, 0.59", "44.5871, 34.1454, -19.8711, 0.59", "46.3399, 35.3925, -20.6183, 0.59", "47.0022, 35.8315, -20.8785, 0.59", "47.4227, 36.0893, -21.0374, 0.59", "49.1636, 37.0598, -21.6555, 0.59", "50.7532, 37.9124, -22.26, 0.59", "51.7475, 38.445, -22.6694, 0.59", "53.23, 39.2365, -23.2752, 0.59", "54.8762, 40.1156, -23.9396, 0.59", "55.9316, 40.6934, -24.3602, 0.59", "57.1929, 41.4247, -24.8342, 0.59", "58.8075, 42.4282, -25.4356, 0.59", "59.8213, 43.0633, -25.7946, 0.59", "61.6171, 44.1698, -26.3952, 0.59", "63.4086, 45.2664, -26.9527, 0.59", "64.5615, 45.9692, -27.2867, 0.59", "67.6521, 47.8171, -28.127, 0.59", "69.1629, 48.6936, -28.5246, 0.59", "69.9582, 49.1329, -28.73, 0.59", "71.4433, 49.9199, -29.112, 0.59", "73.4619, 50.9272, -29.6223, 0.59", "74.1531, 51.2425, -29.7962, 0.59", "76.6329, 52.2689, -30.3856, 0.59", "78.4768, 53.0486, -30.8043, 0.59", "79.2277, 53.3656, -30.9498, 0.59", "79.8515, 53.639, -31.0587, 0.59", "80.8534, 54.1092, -31.2138, 0.59", "81.7573, 54.5661, -31.335, 0.59", "83.5627, 55.5333, -31.5435, 0.52", "85.0104, 56.3545, -31.6956, 0.52", "86.5555, 57.2608, -31.8316, 0.52", "88.464, 58.3918, -31.9824, 0.52", "90.7297, 59.7613, -32.1419, 0.52", "92.6498, 60.9574, -32.2505, 0.52", "93.6418, 61.5993, -32.2815, 0.52", "95.2991, 62.7347, -32.3021, 0.52", "97.1616, 64.0986, -32.2857, 0.52", "98.0175, 64.7662, -32.2688, 0.52", "99.8503, 66.2575, -32.2261, 0.52", "102.126, 68.1157, -32.1725, 0.52", "103.772, 69.4793, -32.1282, 0.52", "104.884, 70.4116, -32.0962, 0.52", "106.053, 71.3787, -32.0339, 0.52", "107.536, 72.5462, -31.9152, 0.52", "110.74, 74.9879, -31.6536, 0.52", "113.613, 77.1726, -31.4528, 0.52", "114.441, 77.8027, -31.4, 0.52", "116.535, 79.4551, -31.2768, 0.52", "118.026, 80.704, -31.2051, 0.52", "123.495, 85.5489, -30.9934, 0.52", "126.095, 87.9661, -30.9679, 0.52", "126.857, 88.6898, -30.9926, 0.52", "128.323, 90.123, -31.099, 0.52", "131.523, 93.3601, -31.4841, 0.52", "131.94, 93.7953, -31.5489, 0.52", "134.166, 96.1253, -31.9338, 0.52", "136.035, 98.0075, -32.1934, 0.52", "137.767, 99.685, -32.3775, 0.52", "139.271, 101.084, -32.4912, 0.52", "140.18, 101.918, -32.5394, 0.52", "144.09, 105.493, -32.6623, 0.52", "146.973, 108.195, -32.7027, 0.52", "149.763, 110.848, -32.7213, 0.44", "152.885, 113.833, -32.7431, 0.44", "153.971, 114.87, -32.748, 0.44", "155.675, 116.495, -32.7529, 0.44", "157.803, 118.572, -32.7979, 0.44", "158.954, 119.751, -32.8928, 0.44", "159.89, 120.771, -32.9941, 0.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884478442963,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.310458, -15.8741, 2.5432, 0.81", "0.655409, -17.4842, 2.71348, 0.81", "1.26307, -18.3918, 2.77943, 0.81", "2.04375, -19.4766, 2.83429, 0.81", "2.99995, -20.7987, 2.86177, 0.81", "3.46295, -21.4214, 2.93063, 0.74", "4.3856, -22.6005, 3.16197, 0.74", "5.53821, -23.7938, 3.51474, 0.74", "6.30026, -24.505, 3.76709, 0.59", "7.15605, -25.2366, 4.08266, 0.59", "9.09655, -26.7207, 4.85554, 0.59", "10.1118, -27.4314, 5.2606, 0.59", "12.1739, -28.7337, 6.0547, 0.59", "13.3302, -29.4039, 6.48925, 0.59", "14.6673, -30.1072, 6.89301, 0.59", "15.6395, -30.5796, 7.16077, 0.59", "16.3997, -30.9382, 7.32814, 0.59", "18.4747, -31.9346, 7.78673, 0.59", "19.8979, -32.6589, 8.18856, 0.59", "20.8015, -33.1273, 8.46362, 0.59", "22.7124, -34.1447, 9.04958, 0.59", "23.9973, -34.8825, 9.50117, 0.59", "24.4909, -35.1917, 9.70885, 0.59", "25.7966, -36.1311, 10.4087, 0.59", "26.7401, -36.8912, 11.025, 0.59", "27.4705, -37.5042, 11.5228, 0.59", "28.9997, -38.9218, 12.5265, 0.59", "29.6951, -39.6416, 13.0292, 0.59", "30.5948, -40.6782, 13.7479, 0.59", "31.4167, -41.7192, 14.4452, 0.59", "31.9084, -42.4043, 14.9117, 0.59", "32.5372, -43.279, 15.5188, 0.59", "33.0241, -43.8891, 15.9507, 0.59", "33.637, -44.5623, 16.4097, 0.59", "34.5582, -45.4861, 16.9794, 0.59", "35.1458, -46.088, 17.3355, 0.59", "35.9924, -46.967, 17.8311, 0.59", "36.8961, -47.8529, 18.3257, 0.59", "37.8316, -48.7701, 18.7806, 0.59", "38.4701, -49.404, 19.0697, 0.59", "39.6013, -50.6065, 19.5734, 0.59", "40.3296, -51.4289, 19.8817, 0.59", "40.7414, -51.9358, 20.0508, 0.59", "41.5847, -53.0421, 20.4155, 0.59", "49.4153, -57.5551, 24.5695, 0.59", "56.3333, -62.7063, 29.4919, 0.59", "62.751, -68.3929, 34.4713, 0.59", "68.9934, -74.1924, 39.5361, 0.59", "73.8081, -81.0446, 44.7731, 0.59", "77.8741, -87.9407, 50.5561, 0.59", "81.0364, -94.6125, 57.1268, 0.59", "83.8184, -100.374, 64.6996, 0.59", "86.2129, -105.356, 72.955, 0.59", "87.8563, -109.621, 81.7965, 0.59", "90.1772, -113.907, 90.4732, 0.59", "92.987, -118.83, 98.6345, 0.59", "95.426, -122.951, 107.363, 0.59", "97.1107, -127.869, 115.832, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884478442963,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.980458, -14.8308, 10.9432, 0.88", "-2.02769, -16.2661, 11.6874, 0.88", "-2.46146, -16.9398, 12.0036, 0.88", "-3.17908, -18.2151, 12.5505, 0.88", "-3.50812, -18.8783, 12.8097, 0.88", "-4.11034, -20.1645, 13.2581, 0.88", "-4.47435, -21.0178, 13.5355, 0.88", "-4.774, -21.8982, 13.7863, 0.88", "-5.10802, -23.0091, 14.0719, 0.88", "-5.29241, -23.7465, 14.2658, 0.88", "-5.53418, -24.9607, 14.6213, 0.88", "-5.70698, -26.2965, 15.1199, 0.88", "-5.75008, -26.8407, 15.3754, 0.88", "-5.77054, -27.5637, 15.813, 0.88", "-5.75675, -28.1909, 16.2783, 0.88", "-5.70351, -29.0004, 16.9694, 0.88", "-5.55926, -30.1327, 18.0201, 0.88", "-5.41845, -30.8933, 18.7586, 0.88", "-5.26215, -31.6024, 19.444, 0.88", "-5.15702, -32.1354, 19.9227, 0.88", "-5.10091, -32.5461, 20.2535, 0.88", "-5.09626, -33.3859, 20.8208, 0.88", "-5.2011, -34.0825, 21.1949, 0.88", "-5.41854, -34.8331, 21.5084, 0.88", "-5.77046, -35.7074, 21.8459, 0.88", "-6.13337, -36.395, 22.1065, 0.88", "-6.79313, -37.4267, 22.4787, 0.88", "-7.69375, -38.5913, 22.866, 0.88", "-8.36263, -39.3481, 23.1073, 0.88", "-9.09978, -40.1398, 23.3565, 0.88", "-9.73781, -40.7997, 23.5788, 0.88", "-10.557, -41.6379, 23.8722, 0.88", "-11.6387, -42.7078, 24.2451, 0.88", "-12.3246, -43.3406, 24.4207, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884478442963
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.40046, -16.1471, 0.893199, 1.47", "-1.39648, -16.5944, 0.893199, 1.47", "-1.38338, -18.0682, 0.893199, 1.47", "-1.37941, -18.5156, 0.893199, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884478442963
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.122626, -16.2211, 0.0130989, 0.501844", "-0.472755, -31.217, 0.0130989, 0.501844", "-0.822885, -46.2129, 0.0130989, 0.501844" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "0.495589, 18.4085, 0.0103386, 1.03", "-0.479383, 19.6415, 1.31696, 1.03", "-1.31916, 20.7138, 2.33897, 1.25", "-1.71017, 21.2018, 2.75512, 1.25", "-2.23879, 21.8448, 3.26929, 1.4", "-2.81732, 22.5484, 3.832, 1.25", "-3.30926, 23.1466, 4.31048, 1.4", "-3.85117, 23.8122, 4.7713, 1.55", "-4.3703, 24.4353, 5.12213, 1.92", "-4.73219, 24.8621, 5.34694, 2.14" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "0.495589, 18.4085, 0.0103386, 1.62", "1.28164, 20.3926, -0.226657, 1.62", "1.65287, 21.1819, -0.32049, 1.62", "2.21796, 22.2991, -0.46239, 1.92", "2.83364, 23.3565, -0.595313, 2.06", "3.43265, 24.2534, -0.704736, 2.43", "3.70409, 24.6205, -0.74784, 2.43", "4.91135, 26.0089, -0.929536, 1.11", "5.74823, 26.8346, -1.03297, 1.11", "6.70151, 27.627, -1.11923, 1.25", "7.64992, 28.317, -1.19804, 1.25", "8.34437, 28.7759, -1.25064, 1.4", "9.41992, 29.4531, -1.32773, 1.03", "10.3125, 30.018, -1.38036, 1.03", "11.1799, 30.5917, -1.4432, 1.18", "11.8009, 31.0408, -1.46174, 1.47", "12.5254, 31.5654, -1.45002, 1.62", "12.9798, 31.8711, -1.42536, 1.62", "14.289, 32.6501, -1.32298, 1.11", "15.3455, 33.2549, -1.23342, 1.11", "16.8071, 34.116, -1.10633, 0.88", "17.9958, 34.8431, -1.00499, 0.88", "18.906, 35.4264, -0.90654, 0.88", "20.3522, 36.3367, -0.740315, 1.11", "20.9274, 36.6846, -0.674435, 1.11", "22.1958, 37.4674, -0.534956, 0.96", "23.592, 38.4446, -0.487805, 1.33", "24.2598, 39.0268, -0.450982, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-1.70614, 19.1823, -23.2387, 0.52", "0.710096, 19.3662, -24.7969, 0.52", "1.9842, 19.6243, -25.5101, 0.52", "3.12391, 19.9947, -26.0759, 0.52", "4.45614, 20.5076, -26.7188, 0.52", "5.54242, 20.9419, -27.264, 0.52", "7.19227, 21.6288, -28.2711, 0.52", "7.9856, 22.0258, -28.8849, 0.52", "8.76071, 22.5143, -29.6114, 0.52", "9.3653, 22.9322, -30.2289, 0.52", "10.4376, 23.7573, -31.3424, 0.52", "12.4319, 25.3182, -33.3783, 0.52", "14.0687, 26.5621, -34.9422, 0.52", "15.8846, 27.9451, -36.718, 0.52", "16.7935, 28.6111, -37.6022, 0.52", "18.7315, 29.8917, -39.3626, 0.52", "19.6226, 30.4348, -40.132, 0.52", "21.7157, 31.5707, -41.8365, 0.52", "25.2683, 33.2991, -44.7216, 0.52", "26.673, 33.903, -45.9153, 0.52", "29.1135, 34.8816, -48.0761, 0.52", "30.3984, 35.3531, -49.31, 0.52", "31.7303, 35.8748, -50.7072, 0.52", "32.8738, 36.3527, -51.9604, 0.52", "33.591, 36.6713, -52.6998, 0.52", "34.9872, 37.3494, -54.136, 0.52", "36.8483, 38.2916, -56.0054, 0.52", "37.8951, 38.7878, -56.9904, 0.52", "39.4232, 39.4898, -58.3831, 0.52", "40.8564, 40.1139, -59.6363, 0.52", "42.3391, 40.755, -60.8522, 0.52", "43.0953, 41.1006, -61.4147, 0.52", "44.1967, 41.6534, -62.1635, 0.52", "45.7523, 42.4979, -63.3278, 0.52", "47.1148, 43.3188, -64.4921, 0.52", "48.0801, 43.9326, -65.4289, 0.52", "49.002, 44.5488, -66.4688, 0.52", "50.1821, 45.3087, -67.8484, 0.44", "51.8531, 46.2692, -69.6792, 0.44", "52.5197, 46.6106, -70.4063, 0.44", "53.8011, 47.1982, -71.8726, 0.44", "54.9356, 47.6457, -73.1809, 0.44", "56.5483, 48.2149, -74.942, 0.44", "58.5384, 48.8661, -76.9128, 0.44", "59.3073, 49.1087, -77.5568, 0.44", "60.2711, 49.4309, -78.2279, 0.44", "62.0123, 50.0571, -79.2637, 0.44", "63.9589, 50.8082, -80.2663, 0.44", "65.7308, 51.4869, -81.0617, 0.44", "67.8335, 52.2837, -81.8594, 0.44", "71.041, 53.4872, -82.9446, 0.44", "72.0142, 53.8482, -83.2336, 0.44", "74.0181, 54.5458, -83.751, 0.44", "77.0331, 55.501, -84.4313, 0.44", "79.2751, 56.1821, -84.9834, 0.44", "80.1065, 56.4323, -85.238, 0.44", "81.8297, 56.9229, -85.8781, 0.44", "84.1415, 57.6131, -86.7943, 0.44", "85.0363, 57.887, -87.166, 0.44", "87.2265, 58.5915, -88.1112, 0.44", "88.5007, 58.9421, -88.6884, 0.44", "89.6815, 59.2256, -89.1984, 0.44", "91.1663, 59.5048, -89.7841, 0.44", "92.9883, 59.7916, -90.4744, 0.44", "94.5396, 59.9786, -91.0394, 0.44", "96.0481, 60.0669, -91.5333, 0.44", "96.9655, 60.0619, -91.8796, 0.44", "99.5211, 59.9317, -93.0663, 0.44", "100.964, 59.8266, -93.8951, 0.44", "102.275, 59.7482, -94.8194, 0.44", "103.287, 59.6837, -95.5987, 0.44", "105.574, 59.5624, -97.4844, 0.44", "106.903, 59.4754, -98.7057, 0.44", "107.517, 59.432, -99.3558, 0.44", "108.884, 59.3396, -100.745, 0.44" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.70614, 19.1823, -23.2387, 0.74", "-2.17278, 18.9694, -23.8805, 0.74", "-2.83843, 18.7764, -24.8129, 0.74", "-3.51138, 18.695, -25.7871, 0.74", "-4.24551, 18.7193, -26.9219, 0.74", "-4.81053, 18.8332, -27.8251, 0.74", "-5.39825, 19.0395, -28.8299, 0.74", "-5.98623, 19.4075, -29.952, 0.74", "-6.41889, 19.7643, -30.7999, 0.74", "-6.94848, 20.3357, -31.8714, 0.74", "-7.43139, 20.9945, -32.9045, 0.74", "-7.85119, 21.722, -33.9355, 0.74", "-8.16933, 22.4048, -34.825, 0.74" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-12.3246, -43.3406, 24.4207, 0.52", "-12.314, -44.2231, 25.0366, 0.52", "-12.3648, -45.4378, 25.8105, 0.52", "-12.3782, -46.2445, 26.2989, 0.52", "-12.3768, -46.8801, 26.6521, 0.52", "-12.3593, -48.0106, 27.2197, 0.52", "-12.3496, -49.1214, 27.7203, 0.52", "-12.3926, -50.1115, 28.1467, 0.52", "-12.4332, -50.8001, 28.4055, 0.52", "-12.4673, -51.604, 28.6897, 0.52", "-12.4667, -52.4263, 28.9091, 0.52", "-12.3827, -53.3837, 29.0627, 0.52" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-12.3246, -43.3406, 24.4207, 0.74", "-13.0861, -43.8729, 24.6303, 0.74", "-14.1919, -44.5887, 24.8893, 0.74", "-15.9153, -45.5823, 25.2717, 0.74", "-16.6829, -45.9725, 25.4316, 0.74", "-17.7321, -46.4466, 25.6306, 0.74", "-18.7174, -46.8604, 25.8181, 0.52", "-19.6004, -47.1792, 25.985, 0.52", "-20.4505, -47.4101, 26.1273, 0.52", "-21.4532, -47.6036, 26.2969, 0.52", "-22.5484, -47.7929, 26.4944, 0.52", "-23.5369, -47.9699, 26.6759, 0.52", "-24.6691, -48.1962, 26.8611, 0.52", "-25.9687, -48.4875, 27.1077, 0.52", "-27.3026, -48.835, 27.3813, 0.52", "-28.406, -49.1294, 27.6126, 0.52", "-29.5166, -49.4346, 27.839, 0.52", "-30.45, -49.6651, 28.0137, 0.52", "-32.3488, -50.066, 28.3546, 0.52", "-33.5468, -50.258, 28.5803, 0.52", "-35.2859, -50.4555, 28.9046, 0.52", "-36.3415, -50.547, 29.1009, 0.52", "-37.5086, -50.6136, 29.3195, 0.52", "-39.2776, -50.6663, 29.6368, 0.52", "-40.8122, -50.6813, 29.8744, 0.52", "-41.6923, -50.6868, 30.0285, 0.52", "-43.2692, -50.717, 30.3407, 0.52", "-44.4307, -50.7547, 30.5943, 0.52", "-45.9032, -50.8458, 30.92, 0.52", "-47.1123, -50.8906, 31.1665, 0.52", "-47.9177, -50.885, 31.3074, 0.52", "-48.4544, -50.8682, 31.402, 0.52", "-49.063, -50.8351, 31.5078, 0.52", "-51.0954, -50.7257, 31.8469, 0.52", "-53.1508, -50.6382, 32.1621, 0.52", "-54.7157, -50.5958, 32.3858, 0.52", "-56.1019, -50.5701, 32.5745, 0.52", "-56.8405, -50.5654, 32.6737, 0.52", "-57.3838, -50.5741, 32.7464, 0.52", "-58.066, -50.6067, 32.8522, 0.52", "-58.9438, -50.6711, 32.9908, 0.52", "-59.3786, -50.7007, 33.0693, 0.52", "-60.4415, -50.7407, 33.2576, 0.52", "-61.6928, -50.7448, 33.4506, 0.52", "-63.3977, -50.7191, 33.7215, 0.52", "-64.3449, -50.6844, 33.875, 0.52", "-65.3731, -50.6331, 34.041, 0.52", "-66.458, -50.5854, 34.2166, 0.52", "-68.5231, -50.5266, 34.5477, 0.52", "-77.3641, -53.2082, 38.3257, 0.52", "-85.4322, -56.9649, 42.8046, 0.52", "-93.5767, -61.5043, 46.2673, 0.52", "-100.93, -66.8956, 50.1844, 0.52", "-109.102, -71.9334, 52.737, 0.52", "-116.06, -77.5227, 57.0645, 0.52", "-122.317, -82.9423, 62.5374, 0.52" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.37941, -18.5156, 0.893199, 1.03", "-0.922363, -21.5012, -0.821654, 1.03", "-0.701424, -22.9445, -1.65063, 1.03", "-0.428251, -24.729, -2.6756, 1.03", "-0.192021, -26.2721, -3.56195, 0.88", "-0.105617, -26.8366, -3.88615, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.37941, -18.5156, 0.893199, 1.47", "-1.55904, -20.4152, 0.944292, 1.47", "-1.81133, -23.7789, 1.00142, 1.47", "-1.94804, -25.9473, 1.028, 1.33", "-2.06549, -28.0168, 1.04708, 1.18", "-2.13146, -29.6236, 1.05801, 1.03", "-2.21677, -32.1161, 1.05834, 1.03", "-2.25949, -34.9102, 1.04298, 1.03", "-2.25565, -35.974, 1.03269, 1.03", "-2.22955, -37.5567, 1.00518, 1.03", "-2.17593, -40.2278, 0.944407, 1.03", "-2.15373, -41.4821, 0.910821, 1.03", "-2.1273, -42.2676, 0.90949, 1.03", "-2.01768, -43.9889, 1.014, 1.25", "-1.86603, -46.1232, 1.25465, 1.18", "-1.76373, -47.8834, 1.53717, 1.11", "-1.73781, -49.5566, 1.90316, 1.11", "-1.75634, -50.9925, 2.27288, 1.03", "-1.85493, -52.9202, 2.80262, 1.03", "-2.01274, -54.4736, 3.2521, 1.03", "-2.23119, -56.2388, 3.769, 1.03", "-2.44776, -57.9603, 4.24394, 1.03", "-2.55709, -58.8468, 4.4626, 1.03", "-2.72418, -60.4104, 4.75966, 1.03", "-2.85737, -61.9916, 4.95321, 1.03", "-2.89396, -63.1511, 5.08851, 1.03", "-2.85982, -64.2732, 5.2096, 1.03", "-2.77742, -65.2252, 5.28955, 1.03", "-2.59813, -66.92, 5.43534, 1.18", "-2.32135, -68.9486, 5.61263, 1.18" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.822885, -46.2129, 0.0130989, 0.501844", "-1.17301, -61.2088, 0.0130989, 0.501844", "-1.52314, -76.2048, 0.0130989, 0.501844" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-4.73219, 24.8621, 5.34694, 0.96", "-6.31155, 25.4819, 5.35686, 0.96", "-7.39925, 25.9225, 5.35626, 0.96", "-8.49698, 26.3796, 5.34593, 0.81", "-9.09586, 26.6385, 5.35082, 0.81", "-9.78647, 26.9391, 5.38706, 0.96", "-10.5631, 27.2501, 5.44811, 0.96", "-11.1243, 27.4562, 5.51237, 0.96", "-11.8573, 27.7079, 5.62886, 0.88", "-12.4753, 27.8994, 5.7157, 0.88", "-13.4697, 28.1587, 5.81085, 1.03", "-14.9269, 28.4722, 5.84718, 1.25", "-15.6696, 28.6107, 5.81881, 1.25", "-16.481, 28.7394, 5.73388, 1.03", "-17.8092, 28.923, 5.50027, 0.88", "-18.9907, 29.0734, 5.2244, 0.74", "-20.0615, 29.2094, 4.89833, 1.11", "-20.8952, 29.3231, 4.5952, 1.18", "-21.6629, 29.4166, 4.28125, 1.18", "-22.302, 29.4713, 4.00372, 1.18" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-4.73219, 24.8621, 5.34694, 0.96", "-4.57006, 26.9204, 5.50026, 0.96", "-4.49527, 27.7086, 5.54284, 1.25", "-4.41709, 28.4335, 5.5678, 1.25", "-4.35257, 29.0782, 5.58281, 1.4", "-4.29623, 29.8602, 5.64152, 1.4", "-4.26608, 30.8447, 5.74698, 1.18", "-4.2988, 31.7308, 5.88479, 1.03", "-4.4574, 32.8393, 6.13053, 0.88", "-4.67193, 33.5877, 6.3388, 0.81", "-5.1975, 34.7211, 6.79915, 1.03", "-5.60452, 35.292, 7.11002, 1.03", "-6.06898, 35.7467, 7.43471, 1.25", "-6.8804, 36.3746, 8.05029, 0.88", "-7.49704, 36.7813, 8.53217, 0.74", "-8.33319, 37.3136, 9.22884, 0.74", "-8.9696, 37.7353, 9.81988, 1.03", "-9.60505, 38.186, 10.5213, 1.18", "-10.5242, 38.9163, 11.7121, 1.03", "-10.9258, 39.313, 12.3495, 0.66", "-11.5668, 40.1762, 13.68, 0.59", "-11.8333, 40.7508, 14.4788, 0.96", "-11.9303, 41.2436, 15.1017, 0.96", "-11.9481, 41.6198, 15.501, 1.11", "-11.9193, 42.1466, 15.9967, 1.11", "-11.8243, 42.7457, 16.5281, 1.25", "-11.6684, 43.3696, 17.0074, 1.03", "-11.4158, 44.4932, 17.7532, 0.59", "-11.2373, 45.4444, 18.3574, 1.18" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "24.2598, 39.0268, -0.450982, 0.59", "24.8453, 40.222, -0.492922, 0.59", "25.1706, 40.9067, -0.512879, 0.29", "25.6325, 41.9391, -0.538203, 0.66", "26.1708, 43.2372, -0.523479, 0.29", "26.5352, 44.2003, -0.501427, 0.29", "26.8495, 45.0722, -0.473743, 1.11", "27.0289, 45.611, -0.43685, 1.11", "27.2518, 46.3698, -0.362357, 0.74", "27.5135, 47.3448, -0.221598, 0.44", "27.7189, 48.1844, -0.0579221, 0.29", "27.8754, 48.9228, 0.100481, 0.29", "28.0381, 49.7892, 0.285874, 0.96", "28.1419, 50.3939, 0.403167, 1.18", "28.2574, 51.1795, 0.533731, 1.18", "28.2981, 51.5217, 0.580282, 1.18", "28.4256, 52.8669, 0.758673, 0.52", "28.4969, 53.8572, 0.81894, 0.52", "28.5789, 55.0053, 0.81844, 0.96", "28.6381, 55.7957, 0.776354, 1.4", "28.6923, 56.4452, 0.699155, 1.4", "28.7357, 56.95, 0.618495, 1.4", "28.906, 58.5524, 0.296805, 0.59", "28.9917, 59.2732, 0.113665, 0.59", "29.0781, 59.9752, -0.055893, 0.74", "29.1833, 60.8819, -0.259851, 0.52", "29.2641, 61.7491, -0.438539, 0.29", "29.3218, 62.7297, -0.614431, 0.29", "29.3336, 63.7108, -0.762767, 0.29", "29.3009, 64.9525, -0.94993, 0.96", "29.2769, 65.6193, -1.03832, 1.33", "29.2665, 66.0412, -1.08406, 1.69", "29.2588, 66.6683, -1.16663, 1.77", "29.2569, 67.4883, -1.25204, 1.33", "29.2927, 68.7726, -1.35698, 0.37", "29.3257, 69.4262, -1.41478, 0.37", "29.3541, 70.0013, -1.42855, 0.29", "29.3753, 70.7323, -1.40797, 0.29", "29.3697, 71.763, -1.32134, 0.74", "29.3395, 72.4832, -1.24395, 0.96", "29.294, 72.9998, -1.20944, 0.96", "29.1579, 74.0561, -1.17837, 0.66", "29.0471, 74.7856, -1.18369, 0.44", "28.878, 75.8682, -1.2276, 0.29", "28.7366, 76.8214, -1.3321, 0.88", "28.6316, 77.7786, -1.4644, 1.33", "28.602, 78.3577, -1.55394, 1.4", "28.6327, 79.2075, -1.69074, 1.11", "28.702, 79.9098, -1.78907, 0.81", "28.8104, 80.6978, -1.88142, 0.81", "28.9859, 81.8289, -1.97324, 0.22", "29.1429, 82.7713, -2.01917, 0.22", "29.3397, 83.9385, -2.07131, 0.22", "29.5523, 85.2001, -2.10511, 0.96", "29.6207, 85.6347, -2.10246, 1.03", "29.6902, 86.1728, -2.0819, 0.81", "29.745, 86.8062, -2.05028, 0.44", "29.7669, 87.2828, -2.02267, 0.29", "29.7803, 87.6653, -1.99926, 0.29", "29.8406, 88.3728, -1.96008, 0.29", "29.9205, 89.0374, -1.92742, 0.74", "29.981, 89.4638, -1.90975, 0.74", "30.1032, 90.3853, -1.87729, 0.29", "30.1693, 91.1173, -1.85767, 0.29", "30.2143, 92.1353, -1.88845, 1.03", "30.2153, 92.5653, -1.9164, 1.4", "30.2029, 93.1987, -1.93378, 1.11", "30.1701, 94.0896, -1.92553, 0.29", "30.1217, 95.0007, -1.86786, 0.29", "30.0379, 96.4118, -1.70688, 0.96", "30.0111, 96.9507, -1.60318, 1.18", "29.9982, 98.221, -1.25384, 0.29", "30.0145, 98.7283, -1.07864, 0.29", "30.0913, 99.5511, -0.731359, 0.74", "30.2063, 100.127, -0.452575, 0.88", "30.4759, 101.077, 0.0435206, 0.29", "30.899, 102.29, 0.608267, 0.88", "30.9797, 102.492, 0.6879, 1.11", "31.2102, 103.013, 0.888849, 1.11", "31.7726, 104.156, 1.31387, 0.22", "32.1464, 104.872, 1.56782, 0.22", "32.8003, 106.048, 1.95276, 1.03", "33.0043, 106.4, 2.06986, 1.18", "33.4944, 107.252, 2.41452, 0.66", "33.7793, 107.777, 2.66259, 0.22", "34.0319, 108.3, 2.94394, 0.22", "34.2669, 108.823, 3.26174, 0.74", "34.4465, 109.263, 3.53635, 0.74", "34.8373, 110.364, 4.18765, 0.37", "35.0332, 110.996, 4.54428, 0.37", "35.2285, 111.736, 4.95523, 0.29", "35.4243, 112.604, 5.41267, 0.81", "35.542, 113.255, 5.71935, 0.96", "35.6016, 113.645, 5.8799, 0.96", "35.7656, 114.826, 6.30006, 0.29", "35.8881, 115.745, 6.62166, 0.29", "36.0332, 116.894, 7.0183, 0.29", "36.1219, 117.636, 7.25538, 0.81", "36.1718, 118.045, 7.38391, 1.03", "36.2312, 118.473, 7.50805, 1.03", "36.395, 119.49, 7.76113, 0.29", "36.554, 120.283, 7.95236, 0.29", "36.8089, 121.24, 8.18067, 0.52", "36.9252, 121.578, 8.25335, 0.52", "37.3216, 122.554, 8.42561, 0.29", "37.6733, 123.301, 8.52161, 0.96", "37.8907, 123.704, 8.55117, 0.96", "38.252, 124.336, 8.56969, 0.66", "38.62, 125.029, 8.5598, 0.52", "38.9797, 125.819, 8.52238, 0.37", "39.1695, 126.317, 8.48176, 0.37", "39.3342, 126.823, 8.42601, 0.29", "39.5004, 127.363, 8.35034, 0.29", "39.777, 128.25, 8.1926, 0.29", "39.9488, 128.786, 8.0901, 0.29", "40.2152, 129.616, 7.91387, 0.88", "40.411, 130.25, 7.75166, 1.03", "40.7994, 131.551, 7.35603, 0.22", "41.0435, 132.383, 7.08399, 0.22", "41.2032, 132.915, 6.90476, 0.22", "41.5064, 133.969, 6.53656, 1.11", "41.6965, 134.712, 6.26868, 1.33", "41.9629, 136.005, 5.80896, 0.22", "42.0723, 136.814, 5.52273, 0.22", "42.119, 137.269, 5.36954, 0.66" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "24.2598, 39.0268, -0.450982, 1.18", "25.7833, 39.3117, -0.484289, 1.18", "26.9674, 39.5331, -0.510177, 1.18", "28.0188, 39.7297, -0.533163, 1.11", "29.9877, 40.0979, -0.57621, 1.33", "30.5944, 40.2114, -0.589474, 1.33" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-8.16933, 22.4048, -34.825, 0.52", "-7.18364, 22.7802, -36.4453, 0.52", "-6.36032, 23.1699, -37.7867, 0.52", "-5.47393, 23.5933, -39.2034, 0.52", "-4.33048, 24.0846, -40.9816, 0.52", "-3.63119, 24.3488, -42.0896, 0.52", "-2.74617, 24.6423, -43.422, 0.52", "-1.62681, 24.9571, -45.1279, 0.52", "-0.257683, 25.2676, -47.1329, 0.52", "1.21751, 25.5532, -49.2245, 0.52", "3.62717, 25.9577, -52.4655, 0.52", "4.61842, 26.1201, -53.7729, 0.52", "5.74147, 26.32, -55.2451, 0.52", "7.18073, 26.6016, -57.2183, 0.52", "8.09673, 26.8281, -58.5093, 0.52", "8.74935, 27.0343, -59.485, 0.52", "9.38996, 27.2851, -60.5284, 0.52", "10.6562, 27.8239, -62.9493, 0.52", "11.5962, 28.2199, -64.9179, 0.52", "12.5895, 28.5981, -67.1403, 0.52", "13.4619, 28.8734, -69.1587, 0.52", "14.4548, 29.1723, -71.5584, 0.52", "15.877, 29.65, -75.2666, 0.52", "16.4222, 29.8854, -76.8808, 0.52", "16.6306, 30.0086, -77.5817, 0.52", "17.1672, 30.4312, -79.7323, 0.52", "17.6195, 30.9003, -81.8499, 0.52", "18.2215, 31.7355, -85.1854, 0.52", "18.541, 32.3312, -87.3262, 0.52", "18.7695, 32.8447, -89.0864, 0.52", "19.0579, 33.5633, -91.58, 0.52", "19.3163, 34.1965, -93.8498, 0.52", "19.652, 34.7831, -95.9985, 0.52", "20.1185, 35.3672, -98.0378, 0.52", "20.7643, 36.0188, -100.152, 0.52", "21.5648, 36.7268, -102.245, 0.52", "22.3262, 37.3503, -103.913, 0.52", "23.6701, 38.4088, -106.574, 0.52", "24.8803, 39.3356, -108.787, 0.52", "25.4512, 39.768, -109.763, 0.52", "26.4215, 40.4833, -111.348, 0.52", "28.1005, 41.703, -114.031, 0.52", "29.1871, 42.4836, -115.816, 0.52", "30.2766, 43.2609, -117.728, 0.52", "31.2184, 43.918, -119.417, 0.52", "31.9037, 44.3774, -120.649, 0.52", "32.3681, 44.6762, -121.497, 0.52", "33.038, 45.0813, -122.723, 0.52", "33.6015, 45.3923, -123.665, 0.52", "34.2161, 45.7296, -124.705, 0.52", "34.8059, 46.0515, -125.727, 0.52", "36.194, 46.8475, -128.147, 0.52", "37.1235, 47.3949, -129.729, 0.52", "38.6777, 48.269, -132.29, 0.52" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-8.16933, 22.4048, -34.825, 0.66", "-9.46481, 21.9992, -35.5903, 0.66", "-10.9384, 21.505, -36.5833, 0.66", "-12.5346, 20.9756, -37.7218, 0.66", "-13.5399, 20.6543, -38.502, 0.66", "-14.5703, 20.3495, -39.3294, 0.59", "-15.9446, 19.9723, -40.4259, 0.59", "-17.1846, 19.6526, -41.4602, 0.59", "-17.9109, 19.4921, -42.0461, 0.59", "-19.2136, 19.2567, -42.9807, 0.59", "-20.6965, 19.0635, -43.95, 0.59", "-22.4142, 18.9141, -45.0319, 0.59", "-23.8436, 18.8319, -45.8415, 0.59", "-25.164, 18.7484, -46.5916, 0.59", "-26.3382, 18.6499, -47.2978, 0.59", "-28.2131, 18.466, -48.4521, 0.59", "-28.8, 18.3987, -48.8557, 0.59", "-29.7041, 18.3053, -49.5363, 0.59", "-32.2096, 18.1164, -51.4881, 0.59", "-33.5564, 18.0794, -52.6067, 0.59", "-34.3135, 18.0872, -53.2163, 0.52", "-36.0747, 18.1802, -54.5355, 0.52", "-38.6258, 18.4159, -56.2393, 0.52", "-40.6611, 18.6742, -57.4155, 0.52", "-44.1625, 19.2415, -59.1136, 0.52", "-46.0388, 19.5771, -59.8738, 0.52", "-49.2805, 20.1989, -60.9855, 0.52", "-51.8645, 20.728, -61.7243, 0.52", "-54.5229, 21.3794, -62.3455, 0.52", "-56.747, 22.0059, -62.7638, 0.52", "-60.2836, 23.1398, -63.3202, 0.52", "-64.6149, 24.5947, -63.9939, 0.52", "-65.924, 25.0487, -64.1815, 0.52", "-71.189, 26.8858, -65.0124, 0.52", "-74.0627, 27.8862, -65.5054, 0.52", "-80.0397, 29.8901, -66.4806, 0.52", "-84.8025, 31.3852, -67.2301, 0.52", "-88.8067, 32.5511, -67.7964, 0.52", "-92.9243, 33.6377, -68.3464, 0.52", "-94.242, 33.9393, -68.5115, 0.52", "-96.6585, 34.4589, -68.7965, 0.52", "-98.6038, 34.8346, -69.0018, 0.52", "-101.32, 35.262, -69.2632, 0.52", "-105.507, 35.7757, -69.7363, 0.52", "-108.541, 36.0858, -70.1243, 0.52", "-111.608, 36.3519, -70.6373, 0.52", "-115.434, 36.6078, -71.4175, 0.52", "-122.226, 36.9579, -72.9668, 0.52", "-126.197, 37.0599, -73.9254, 0.52", "-127.715, 37.0714, -74.3211, 0.52", "-130.24, 37.0689, -75.0177, 0.52", "-131.31, 37.0621, -75.3212, 0.52", "-134.191, 37.0523, -76.2108, 0.52", "-137.578, 37.1037, -77.369, 0.52", "-139.79, 37.2001, -78.1192, 0.52", "-143.161, 37.4803, -79.3636, 0.52", "-146.3, 37.9584, -80.6492, 0.52", "-148.213, 38.4049, -81.5579, 0.52", "-150.046, 39.0124, -82.6123, 0.52", "-151.965, 39.9434, -83.9898, 0.52", "-153.415, 40.8887, -85.1761, 0.52", "-155.415, 42.5637, -87.0791, 0.52", "-156.644, 43.8328, -88.3884, 0.52", "-157.808, 45.1773, -89.6899, 0.52", "-158.69, 46.279, -90.7519, 0.52", "-159.25, 47.0118, -91.4726, 0.52" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-12.3827, -53.3837, 29.0627, 0.52", "-12.5279, -55.0104, 28.8742, 0.52", "-12.5767, -55.7812, 28.8333, 0.52", "-12.587, -56.6155, 28.8356, 0.52", "-12.4976, -58.1158, 28.8956, 0.52", "-12.408, -58.9373, 28.9458, 0.52", "-12.2872, -59.8004, 29.0076, 0.52", "-12.1744, -60.3763, 29.1301, 0.52", "-11.9656, -61.1617, 29.373, 0.52", "-11.6926, -62.0339, 29.7062, 0.52", "-11.2286, -63.3595, 30.2984, 0.52", "-10.8622, -64.3421, 30.8098, 0.52", "-10.2946, -65.8413, 31.6817, 0.52", "-9.98508, -66.7106, 32.2089, 0.52", "-9.84747, -67.1167, 32.4783, 0.52", "-9.65837, -67.6844, 32.9086, 0.52", "-9.35884, -68.4572, 33.6123, 0.52", "-9.20693, -68.8205, 33.9698, 0.52", "-9.0055, -69.3186, 34.3616, 0.52", "-8.99628, -78.9807, 35.7008, 0.52", "-7.12715, -88.5408, 36.3051, 0.52", "-5.58831, -98.1484, 37.034, 0.52", "-4.18023, -107.795, 37.4005, 0.52", "-0.89006, -116.99, 36.9232, 0.52", "2.69294, -126.088, 37.2309, 0.52", "6.56848, -134.93, 38.8869, 0.52", "9.99945, -143.981, 40.3176, 0.52", "14.9838, -152.21, 42.2968, 0.52", "20.6153, -160.042, 44.2371, 0.52", "27.5644, -166.763, 46.2842, 0.52", "34.3807, -172.741, 50.2776, 0.52" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-12.3827, -53.3837, 29.0627, 0.59", "-13.1222, -54.869, 29.2668, 0.59", "-13.4133, -55.478, 29.3538, 0.59", "-13.8695, -56.3543, 29.4944, 0.59", "-14.5327, -57.5424, 29.6851, 0.59", "-14.9629, -58.2285, 29.8132, 0.59", "-15.3461, -58.7769, 29.9336, 0.59", "-16.175, -59.8196, 30.2379, 0.59", "-16.7735, -60.4619, 30.4429, 0.59", "-17.6165, -61.1955, 30.706, 0.59", "-18.4726, -61.8245, 30.9558, 0.59", "-19.2758, -62.338, 31.2639, 0.59", "-20.4602, -63.0244, 31.8295, 0.59", "-20.8038, -63.2169, 32.021, 0.59", "-21.8176, -63.8237, 32.6314, 0.59", "-22.5896, -64.3009, 33.1196, 0.59", "-24.194, -65.3851, 34.1515, 0.59", "-24.9636, -65.8996, 34.6458, 0.59", "-25.9662, -66.5311, 35.2796, 0.59", "-27.0155, -67.1602, 35.8945, 0.59", "-27.5492, -67.4631, 36.1766, 0.59", "-28.0382, -67.7183, 36.3968, 0.59", "-29.4122, -68.373, 36.8919, 0.59", "-30.6169, -68.8659, 37.3325, 0.59", "-31.24, -69.0852, 37.579, 0.59", "-32.0433, -69.3735, 37.8957, 0.59", "-32.7951, -69.7324, 38.1538, 0.59", "-33.4293, -70.1144, 38.3423, 0.59", "-34.4562, -70.8732, 38.5676, 0.59", "-35.2147, -71.4791, 38.7121, 0.59", "-36.5758, -72.6227, 38.938, 0.59", "-38.5767, -74.4196, 39.189, 0.59", "-39.2836, -75.1259, 39.2481, 0.52", "-39.8576, -75.7638, 39.2645, 0.52", "-46.729, -82.241, 42.2056, 0.52", "-52.6243, -89.6232, 45.0197, 0.52", "-58.8113, -96.8302, 47.6809, 0.52", "-66.7595, -102.635, 48.8594, 0.52", "-74.8645, -107.504, 51.9191, 0.52" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.105617, -26.8366, -3.88615, 0.66", "0.169059, -29.7254, -4.82615, 0.66", "0.375397, -30.7699, -5.03768, 0.66", "0.595462, -31.7425, -5.23001, 0.59", "0.991702, -33.4873, -5.55213, 0.59", "1.26927, -34.7371, -5.76996, 0.59", "1.6168, -36.2715, -6.02599, 0.59", "2.13958, -38.209, -6.28156, 0.59", "2.83356, -40.7444, -6.68124, 0.59", "3.16502, -42.1116, -6.91999, 0.59", "3.30857, -42.7991, -7.04345, 0.59", "3.38758, -43.2995, -7.15126, 0.59", "3.48634, -44.3719, -7.46449, 0.59", "3.52865, -45.1004, -7.70853, 0.59", "3.71036, -46.3839, -8.06814, 0.59", "3.83392, -46.9673, -8.24363, 0.59", "4.01827, -47.6895, -8.44795, 0.59", "4.24239, -48.3917, -8.63777, 0.59", "4.74233, -49.662, -8.96544, 0.59", "5.38634, -51.1037, -9.3834, 0.59", "5.68083, -51.6538, -9.5663, 0.59", "6.19045, -52.5479, -9.918, 0.59", "6.98632, -53.7534, -10.4458, 0.59", "7.4422, -54.366, -10.7375, 0.59", "8.27103, -55.3544, -11.2593, 0.59", "8.95021, -56.1331, -11.7085, 0.59", "9.48959, -56.75, -12.0486, 0.59", "10.4367, -57.8833, -12.6846, 0.52", "10.9865, -58.6165, -13.0908, 0.52", "11.8322, -59.8566, -13.7432, 0.52", "12.2051, -60.4845, -14.067, 0.52", "12.7012, -61.542, -14.5864, 0.52", "13.1841, -62.7474, -15.162, 0.52", "13.6621, -64.0904, -15.8593, 0.52", "13.8854, -64.6783, -16.1941, 0.52", "14.3048, -65.6968, -16.8179, 0.52", "14.7848, -66.7807, -17.5049, 0.52", "15.4043, -68.1666, -18.4392, 0.52", "15.9168, -69.369, -19.2536, 0.52", "16.3352, -70.4996, -20.0296, 0.52", "16.655, -71.4498, -20.6623, 0.52", "16.9209, -72.2596, -21.1802, 0.52", "17.286, -73.2293, -21.7883, 0.52", "17.7493, -74.4305, -22.4579, 0.52", "18.3789, -75.9708, -23.2514, 0.52", "18.899, -77.1368, -23.8271, 0.52", "19.5736, -78.4493, -24.4554, 0.52", "20.6959, -80.43, -25.3603, 0.52", "21.2465, -81.3429, -25.7218, 0.52", "21.6427, -81.9697, -25.9542, 0.52", "22.1197, -82.7077, -26.2038, 0.52", "22.7236, -83.6278, -26.4952, 0.52", "23.7537, -85.1851, -26.9993, 0.52", "25.0083, -87.022, -27.6748, 0.52", "25.5875, -87.8127, -28.0165, 0.52", "26.3856, -88.8318, -28.502, 0.52", "27.3847, -90.0061, -29.149, 0.52", "28.7629, -91.5072, -30.0705, 0.52", "29.575, -92.2902, -30.5781, 0.52", "30.3167, -92.9279, -30.98, 0.52", "31.0842, -93.5455, -31.3371, 0.52", "32.0555, -94.291, -31.7091, 0.52", "33.2404, -95.152, -32.05, 0.52", "35.3112, -96.5805, -32.4794, 0.52", "37.6783, -98.1049, -32.9022, 0.52", "39.7079, -99.3102, -33.2249, 0.52", "42.4102, -100.807, -33.6227, 0.52", "44.9285, -102.097, -33.9764, 0.52", "46.005, -102.599, -34.1262, 0.52", "48.4158, -103.644, -34.4414, 0.52", "49.4879, -104.093, -34.5723, 0.52", "50.6828, -104.602, -34.6556, 0.52", "52.1449, -105.273, -34.6703, 0.52", "54.3145, -106.399, -34.5666, 0.52", "55.8214, -107.313, -34.4264, 0.52", "56.7654, -107.967, -34.2975, 0.52", "58.7927, -109.506, -33.9754, 0.52", "61.4195, -111.629, -33.4586, 0.52", "63.3949, -113.322, -32.9731, 0.52", "65.4057, -115.124, -32.4133, 0.52", "66.1676, -115.812, -32.1926, 0.52", "67.4665, -116.979, -31.8174, 0.52", "68.7861, -118.195, -31.4553, 0.52", "69.8537, -119.238, -31.1133, 0.52", "71.3387, -120.712, -30.5596, 0.52", "72.3027, -121.643, -30.1881, 0.52", "72.9516, -122.281, -29.9386, 0.52", "73.7295, -123.053, -29.6569, 0.52", "74.948, -124.303, -29.2377, 0.52", "76.0842, -125.501, -28.8572, 0.52", "76.964, -126.451, -28.5586, 0.52", "78.1451, -127.731, -28.1753, 0.52", "79.0679, -128.739, -27.8741, 0.52", "79.5504, -129.275, -27.72, 0.52", "80.3318, -130.204, -27.4888, 0.52", "80.8938, -130.946, -27.3114, 0.52", "81.4948, -131.815, -27.1007, 0.52", "82.0204, -132.635, -26.9174, 0.52", "82.4551, -133.327, -26.7719, 0.52", "83.1554, -134.373, -26.569, 0.52", "84.0905, -135.684, -26.3256, 0.52", "85.2409, -137.102, -26.0982, 0.52", "86.1078, -138.051, -25.9611, 0.52", "87.6867, -139.58, -25.8308, 0.52", "88.7491, -140.52, -25.805, 0.52", "89.8339, -141.415, -25.8383, 0.52", "92.6064, -143.562, -26.0281, 0.52", "93.552, -144.247, -26.1105, 0.52", "95.0253, -145.294, -26.2475, 0.52", "96.0956, -146.064, -26.3344, 0.52", "99.399, -148.527, -26.5565, 0.52", "100.854, -149.678, -26.613, 0.52", "102.708, -151.25, -26.5744, 0.52", "103.858, -152.294, -26.4684, 0.52", "105.278, -153.708, -26.2004, 0.52", "106.17, -154.679, -25.9728, 0.52", "107.07, -155.792, -25.6846, 0.52", "107.839, -156.832, -25.4019, 0.52", "108.435, -157.709, -25.1549, 0.52", "110.199, -160.39, -24.4121, 0.52", "111.294, -162.111, -23.9922, 0.52", "111.867, -162.998, -23.7983, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.105617, -26.8366, -3.88615, 0.88", "0.0327942, -28.3385, -4.55493, 0.88", "0.259139, -29.9933, -5.30824, 0.88", "0.519002, -31.2108, -6.00689, 0.88", "0.781781, -32.1188, -6.66487, 0.88", "1.02621, -32.8395, -7.24373, 0.81", "1.2743, -33.5456, -7.80954, 0.74", "1.6217, -34.3755, -8.48133, 0.74", "2.28727, -35.7838, -9.52267, 0.74", "2.79283, -36.7692, -10.2199, 0.74", "3.09293, -37.3638, -10.5908, 0.74", "3.56526, -38.3771, -11.2554, 0.74", "3.93595, -39.3011, -11.8549, 0.74", "4.2987, -40.3823, -12.477, 0.74", "4.60141, -41.4033, -13.0618, 0.66", "4.92212, -42.4267, -13.6492, 0.66", "5.62561, -44.6367, -15.0076, 0.66", "5.87759, -45.4007, -15.553, 0.66", "6.07735, -46.0308, -16.0692, 0.66", "6.39333, -47.1121, -17.104, 0.66", "6.6837, -48.1611, -18.1697, 0.66", "6.90457, -48.7676, -18.8245, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32135, -68.9486, 5.61263, 0.96", "-6.35882, -71.669, 7.34007, 0.96", "-7.43436, -72.4602, 7.62371, 0.96", "-8.85363, -73.665, 7.87046, 0.96", "-9.38797, -74.1877, 7.93446, 1.18", "-10.2328, -75.1326, 7.97816, 0.88", "-10.8248, -75.8499, 7.97856, 0.88", "-11.3852, -76.5991, 7.78755, 0.88", "-11.9693, -77.4948, 7.60069, 0.88", "-12.4115, -78.2276, 7.45798, 0.88", "-12.8641, -78.9954, 7.32423, 0.88", "-13.4112, -79.9125, 7.17202, 0.88", "-14.0834, -80.904, 7.00151, 0.81", "-14.6964, -81.7249, 6.86932, 0.81", "-15.3545, -82.4999, 6.73635, 0.81", "-16.0034, -83.1985, 6.62163, 0.59", "-16.7622, -84.0126, 6.49653, 0.59", "-17.7705, -85.1637, 6.3252, 0.59", "-18.4781, -86.0272, 6.20717, 0.59", "-19.0623, -86.745, 6.11305, 0.59", "-20.1833, -88.1804, 5.91804, 0.59", "-20.6975, -88.8747, 5.82582, 0.59", "-21.2914, -89.745, 5.72585, 0.59", "-21.6221, -90.3227, 5.66151, 0.59", "-21.8193, -90.7057, 5.61962, 0.59", "-22.2113, -91.569, 5.53894, 0.59", "-22.4944, -92.2571, 5.47356, 0.59", "-23.0007, -93.3756, 5.37514, 0.59", "-23.422, -94.2669, 5.28893, 0.59" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.32135, -68.9486, 5.61263, 1.18", "-1.93366, -71.1572, 6.38575, 1.18", "-1.7517, -72.1938, 6.74859, 1.18", "-1.50171, -73.6179, 7.2471, 1.03", "-1.20581, -75.3036, 7.83718, 1.03", "-0.920592, -76.9285, 8.40594, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-22.302, 29.4713, 4.00372, 0.29", "-23.7916, 31.0274, 2.2743, 0.29", "-24.2355, 31.5343, 1.70934, 0.29", "-24.5675, 31.9352, 1.2919, 0.29", "-25.0839, 32.524, 0.667739, 0.74", "-25.4796, 32.9459, 0.200509, 1.18", "-25.7968, 33.2612, -0.155744, 1.18", "-26.3358, 33.7559, -0.66067, 0.66", "-26.6809, 34.0674, -0.997678, 0.59", "-27.2835, 34.5837, -1.55067, 1.03", "-27.9737, 35.1389, -2.11864, 1.18", "-28.5062, 35.5681, -2.50704, 0.52", "-29.1401, 36.0983, -2.89766, 0.52", "-29.6225, 36.5181, -3.15149, 0.52", "-30.0729, 36.9447, -3.36642, 0.66", "-30.6346, 37.5717, -3.64711, 0.66", "-31.1124, 38.1988, -3.92525, 1.03", "-31.3369, 38.5734, -4.08962, 1.25", "-31.5558, 39.0158, -4.27295, 1.25", "-31.8147, 39.6289, -4.52326, 1.11", "-32.3488, 41.0079, -5.09305, 0.44", "-32.611, 41.6879, -5.3716, 0.37", "-32.9999, 42.6825, -5.77621, 0.74", "-33.4063, 43.6775, -6.16361, 0.96", "-33.6902, 44.3053, -6.38261, 0.96", "-33.9373, 44.7798, -6.53473, 0.96", "-34.2367, 45.2536, -6.65882, 0.81", "-34.8266, 46.0374, -6.86326, 0.29", "-35.4514, 46.738, -7.07572, 0.29", "-36.1158, 47.4108, -7.33515, 0.88", "-36.4971, 47.7639, -7.50846, 1.18", "-36.8896, 48.1052, -7.69909, 1.18", "-37.4005, 48.5282, -7.98825, 0.96", "-37.8316, 48.8633, -8.26126, 0.74", "-38.634, 49.4829, -8.86224, 0.37", "-39.1352, 49.8833, -9.30712, 0.37", "-39.6456, 50.3125, -9.7911, 1.03", "-40.0132, 50.6384, -10.1572, 1.25", "-40.2449, 50.8518, -10.389, 1.4", "-40.5773, 51.1827, -10.7054, 0.74", "-41.4606, 52.1064, -11.4704, 0.22", "-41.8509, 52.5196, -11.7718, 0.44", "-42.1444, 52.8362, -11.9783, 0.59", "-42.4602, 53.1893, -12.169, 0.59", "-42.7438, 53.5305, -12.3325, 0.66", "-43.6505, 54.6967, -12.8293, 0.22", "-44.0867, 55.3052, -13.0628, 0.22", "-44.5452, 55.9617, -13.3046, 0.59", "-44.9794, 56.5962, -13.5215, 0.81", "-45.3549, 57.1314, -13.6986, 1.18", "-45.6748, 57.5641, -13.8374, 0.74", "-46.4933, 58.6256, -14.1798, 0.29", "-47.2188, 59.5122, -14.4905, 0.29", "-47.7425, 60.1003, -14.7239, 0.44", "-48.3462, 60.7251, -14.9794, 0.44", "-48.9464, 61.295, -15.2084, 1.11", "-49.3846, 61.6875, -15.3652, 1.33", "-49.6495, 61.9197, -15.4576, 1.47", "-50.1939, 62.4074, -15.6438, 0.88", "-50.9223, 63.1024, -15.8819, 0.29", "-51.4249, 63.6409, -16.0205, 0.29", "-51.8217, 64.1173, -16.1056, 0.29", "-52.2192, 64.6653, -16.1294, 0.66", "-52.5236, 65.14, -16.1177, 0.81", "-52.6326, 65.3269, -16.1043, 0.81", "-53.0311, 66.0877, -16.0485, 0.22", "-53.4822, 66.9831, -16.0037, 0.22", "-54.0298, 68.0621, -16.0916, 0.96", "-54.3099, 68.5988, -16.197, 1.25", "-54.543, 69.0495, -16.3362, 1.25", "-54.6899, 69.3358, -16.4525, 1.25", "-55.0664, 70.1062, -16.8929, 0.22", "-55.7511, 71.5148, -17.8481, 0.22", "-56.0546, 72.1269, -18.2974, 1.11", "-56.2484, 72.5313, -18.5832, 1.25", "-56.4157, 72.8894, -18.8276, 1.33", "-57.0306, 74.1667, -19.6727, 0.29", "-57.475, 75.0823, -20.2292, 0.74", "-57.6853, 75.4908, -20.4481, 0.88", "-57.9127, 75.9188, -20.6748, 0.74", "-58.4766, 76.8903, -21.1589, 0.22", "-58.6574, 77.176, -21.2975, 0.22", "-59.0313, 77.7281, -21.5316, 0.66", "-59.331, 78.1539, -21.7331, 0.81", "-59.5633, 78.4813, -21.8951, 0.81", "-60.2094, 79.3809, -22.3704, 0.22", "-60.8094, 80.2155, -22.8047, 0.22", "-61.2904, 80.8769, -23.1324, 0.88", "-61.7914, 81.5414, -23.4435, 1.25", "-62.0887, 81.9323, -23.6087, 1.25", "-62.9104, 83.022, -24.0455, 0.22", "-63.7363, 84.204, -24.4673, 0.22", "-64.6093, 85.529, -24.8973, 0.22", "-65.1213, 86.3746, -25.1468, 0.22", "-65.4674, 86.995, -25.3025, 0.88", "-65.8534, 87.7424, -25.4853, 0.88", "-66.4426, 89.0759, -25.7995, 0.22", "-66.7508, 89.9101, -26.0184, 0.22", "-67.0821, 90.9486, -26.3054, 0.74", "-67.2158, 91.4026, -26.4342, 1.11", "-67.4002, 92.077, -26.624, 1.11", "-67.7978, 93.5757, -27.0537, 0.22", "-68.124, 94.8343, -27.4275, 0.22", "-68.3687, 95.8459, -27.7251, 0.66", "-68.4631, 96.2937, -27.8513, 0.66", "-68.7123, 97.6864, -28.2133, 0.29", "-68.8936, 98.9539, -28.5231, 0.29", "-68.968, 99.6679, -28.6917, 0.44", "-69.0099, 100.217, -28.8235, 0.44", "-69.0915, 101.457, -29.1441, 1.25", "-69.136, 102.051, -29.3107, 1.18", "-69.2079, 102.878, -29.5569, 0.59", "-69.3108, 103.915, -29.8803, 0.22", "-69.4407, 105.013, -30.2645, 0.22", "-69.6005, 106.113, -30.6691, 0.88", "-69.7456, 106.923, -30.9989, 1.03", "-69.8368, 107.357, -31.1918, 0.74", "-70.0949, 108.329, -31.6765, 0.29", "-70.2201, 108.717, -31.8943, 0.29", "-70.5265, 109.496, -32.377, 0.66", "-70.7235, 109.912, -32.6604, 0.66", "-71.1791, 110.778, -33.3102, 0.22", "-71.5125, 111.336, -33.7648, 0.22", "-71.7507, 111.675, -34.0751, 0.81", "-72.094, 112.117, -34.4994, 0.96", "-72.7642, 112.915, -35.2731, 0.22", "-73.1115, 113.317, -35.63, 0.22", "-73.3878, 113.628, -35.8874, 0.59", "-73.9267, 114.239, -36.3471, 0.59", "-74.6243, 115.029, -36.8915, 0.22", "-75.2577, 115.747, -37.3175, 0.74", "-75.8271, 116.372, -37.6332, 0.74", "-76.177, 116.769, -37.7936, 0.88", "-76.5276, 117.195, -37.9344, 0.88", "-77.1311, 117.99, -38.1283, 0.22", "-77.4064, 118.408, -38.2065, 0.37", "-77.7557, 119.106, -38.3188, 0.37", "-78.0412, 119.88, -38.4175, 0.22", "-78.1419, 120.217, -38.4527, 0.37", "-78.231, 120.613, -38.4944, 0.37", "-78.3999, 121.6, -38.6014, 0.22", "-78.5712, 122.904, -38.7477, 0.22", "-78.6792, 123.928, -38.8655, 0.74", "-78.7163, 124.278, -38.9122, 0.88", "-78.8553, 125.423, -39.0933, 0.22", "-78.9689, 126.261, -39.2349, 0.37", "-79.1116, 127.233, -39.4186, 0.22", "-79.2368, 128.031, -39.5875, 0.81", "-79.3304, 128.583, -39.7129, 0.96", "-79.4229, 129.091, -39.829, 0.96", "-79.6349, 130.141, -40.0489, 0.22", "-79.799, 130.924, -40.2026, 0.44", "-79.8675, 131.24, -40.2634, 0.44", "-80.2864, 133.095, -40.5744, 0.22", "-80.5437, 134.191, -40.7358, 0.22", "-80.8554, 135.408, -40.9068, 0.22", "-81.1088, 136.307, -41.037, 0.96", "-81.2365, 136.729, -41.1059, 1.11", "-81.7335, 138.255, -41.3767, 0.15", "-81.9046, 138.729, -41.4821, 0.15", "-82.1694, 139.377, -41.6508, 0.37", "-82.6342, 140.399, -41.9657, 0.22", "-82.9815, 141.116, -42.2083, 0.22", "-83.289, 141.732, -42.4238, 0.66", "-83.6204, 142.365, -42.6591, 0.66", "-83.8599, 142.799, -42.813, 0.81", "-84.4474, 143.786, -43.1568, 0.22", "-84.9912, 144.619, -43.4324, 0.22", "-85.2964, 145.059, -43.5608, 0.66", "-85.6328, 145.511, -43.6895, 0.74", "-86.2809, 146.315, -43.9, 0.22", "-86.8151, 146.937, -44.0662, 0.22", "-87.0866, 147.238, -44.153, 0.37", "-87.3298, 147.504, -44.2311, 0.37", "-88.3536, 148.63, -44.5684, 0.22", "-88.7327, 149.062, -44.6928, 0.59", "-89.3525, 149.802, -44.8943, 0.74", "-90.4496, 151.168, -45.2677, 0.22", "-91.1199, 152.022, -45.5112, 0.22", "-91.399, 152.39, -45.6193, 0.44", "-91.7272, 152.857, -45.7492, 0.44", "-92.248, 153.695, -45.9609, 0.22", "-92.5436, 154.238, -46.0773, 0.59", "-92.7261, 154.62, -46.1491, 0.74", "-92.9053, 155.072, -46.224, 0.74", "-93.5567, 156.896, -46.484, 0.22", "-93.9215, 157.994, -46.6288, 0.22", "-94.1308, 158.687, -46.7085, 0.66", "-94.2592, 159.145, -46.7543, 0.66", "-94.8465, 161.351, -46.9589, 0.22", "-95.0846, 162.265, -47.0634, 0.44", "-95.2851, 163.007, -47.1667, 0.52", "-95.7164, 164.556, -47.4597, 0.22", "-95.9588, 165.389, -47.6604, 0.59", "-96.1794, 166.12, -47.8646, 0.59", "-96.7946, 168.033, -48.4966, 0.22", "-97.2754, 169.46, -49.0179, 0.22", "-97.8037, 170.928, -49.6066, 0.22", "-98.1617, 171.847, -50.0246, 0.22", "-98.4158, 172.48, -50.3257, 0.66", "-98.5108, 172.716, -50.4427, 0.88", "-98.8027, 173.458, -50.7938, 0.59", "-99.1963, 174.545, -51.2667, 0.22", "-99.5293, 175.519, -51.6104, 0.22", "-99.7571, 176.253, -51.8555, 0.59", "-99.9636, 176.959, -52.0854, 0.59", "-100.314, 178.191, -52.4654, 0.22", "-100.558, 179.005, -52.699, 0.22", "-101.025, 180.464, -53.1064, 0.22", "-101.369, 181.438, -53.3805, 0.66", "-101.446, 181.638, -53.4368, 0.88", "-101.648, 182.155, -53.583, 0.88", "-102.089, 183.241, -53.9368, 0.22", "-102.322, 183.783, -54.1333, 0.22", "-102.567, 184.325, -54.3369, 0.37", "-103.15, 185.4, -54.7798, 0.22", "-103.765, 186.381, -55.2451, 0.22", "-104.348, 187.214, -55.6975, 0.81", "-104.871, 187.875, -56.0988, 0.96", "-105.712, 188.778, -56.6559, 0.22", "-107.16, 190.176, -57.4856, 0.22", "-107.72, 190.692, -57.7781, 0.59", "-108.026, 190.974, -57.9201, 0.74", "-108.761, 191.685, -58.2426, 0.22", "-110.016, 193.081, -58.7677, 0.22", "-110.93, 194.337, -59.1425, 0.22", "-111.696, 195.619, -59.4323, 0.88", "-111.973, 196.184, -59.5335, 1.25", "-112.347, 197.089, -59.6742, 0.81", "-113.028, 199.083, -59.9613, 0.15", "-113.689, 201.435, -60.2886, 0.15", "-113.936, 202.401, -60.4147, 0.37", "-114.451, 204.531, -60.625, 0.15", "-114.635, 205.34, -60.7016, 0.15", "-114.78, 206.061, -60.7561, 0.29", "-114.876, 206.573, -60.7955, 0.22", "-114.94, 206.958, -60.8209, 0.22", "-115.106, 207.927, -60.8974, 0.22", "-115.37, 208.811, -60.9913, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-22.302, 29.4713, 4.00372, 0.59", "-23.6906, 29.8809, 4.94895, 0.59", "-24.3757, 30.1122, 5.36306, 0.74", "-25.6416, 30.5441, 6.03929, 0.81", "-26.2769, 30.7523, 6.34624, 0.96", "-26.9905, 30.9617, 6.67376, 1.18", "-27.8005, 31.176, 7.03382, 0.74", "-28.5729, 31.3814, 7.34442, 0.52", "-29.1789, 31.5297, 7.58709, 0.52", "-29.818, 31.6637, 7.8275, 0.81", "-30.4908, 31.7903, 8.08444, 0.96", "-31.1615, 31.9182, 8.33004, 0.74", "-31.7924, 32.0507, 8.56351, 0.96", "-32.4979, 32.2263, 8.82575, 1.11", "-33.2257, 32.4487, 9.07495, 0.88", "-34.5227, 32.8953, 9.44457, 0.37", "-35.1809, 33.1325, 9.58654, 0.37", "-35.6446, 33.2804, 9.66375, 0.74", "-36.2265, 33.4247, 9.73445, 0.88", "-36.6757, 33.4975, 9.77335, 0.88", "-37.4842, 33.5572, 9.83329, 0.74", "-38.2223, 33.5546, 9.88539, 0.29", "-39.0741, 33.519, 9.9451, 0.29", "-39.793, 33.4863, 9.99308, 0.74", "-40.6944, 33.457, 10.0482, 0.88", "-41.392, 33.4558, 10.0846, 0.74", "-42.1332, 33.4999, 10.1182, 0.59", "-42.866, 33.5999, 10.1428, 0.59", "-43.5077, 33.7281, 10.1549, 0.52", "-44.1781, 33.896, 10.1799, 0.66", "-44.9462, 34.1201, 10.2261, 0.88", "-46.038, 34.4566, 10.3447, 0.29", "-47.1251, 34.7807, 10.5061, 0.88", "-47.7407, 34.9502, 10.6363, 1.18", "-48.4515, 35.1231, 10.8457, 1.33", "-48.8595, 35.2087, 11.0046, 1.55", "-49.8813, 35.3889, 11.4815, 0.96", "-50.6667, 35.4912, 11.8989, 0.81", "-51.4573, 35.5539, 12.3416, 0.66", "-52.1465, 35.5765, 12.7202, 0.66", "-52.7612, 35.565, 13.0301, 0.52", "-53.4352, 35.5303, 13.3371, 0.88", "-53.926, 35.4973, 13.5307, 1.11", "-54.5252, 35.4574, 13.7314, 1.18", "-55.0252, 35.4349, 13.8623, 0.96", "-55.6811, 35.4256, 14.0115, 0.66", "-56.2672, 35.4509, 14.1486, 0.44", "-56.7914, 35.5177, 14.2838, 0.44", "-57.4295, 35.6663, 14.4442, 0.66", "-57.8088, 35.7955, 14.5356, 0.66", "-58.4504, 36.0573, 14.6705, 0.66", "-59.196, 36.3813, 14.7995, 0.52", "-59.9564, 36.7067, 14.9041, 0.52", "-60.8955, 37.0828, 15.0006, 0.88", "-61.6045, 37.343, 15.0561, 1.11", "-62.5188, 37.6409, 15.1404, 0.88", "-63.506, 37.919, 15.2564, 0.66", "-64.2278, 38.0863, 15.3678, 1.11", "-65.0614, 38.2564, 15.563, 1.33", "-65.6293, 38.3765, 15.7463, 0.81", "-66.5814, 38.6019, 16.1305, 0.59", "-67.3246, 38.8047, 16.4862, 0.44", "-68.3104, 39.1139, 17.016, 0.44", "-69.4926, 39.5399, 17.6848, 0.37", "-70.1932, 39.8129, 18.1469, 0.74", "-70.7841, 40.0474, 18.5543, 1.11", "-71.0954, 40.1662, 18.7658, 1.33", "-71.4844, 40.3153, 19.0123, 1.33", "-72.2301, 40.5863, 19.4372, 1.11", "-74.3234, 41.2697, 20.43, 0.74", "-75.065, 41.4631, 20.7253, 0.81", "-76.0802, 41.7044, 21.0629, 0.52", "-77.3177, 42.0021, 21.3948, 1.18", "-77.889, 42.1482, 21.5025, 1.47", "-78.5241, 42.3143, 21.5629, 1.47", "-79.5909, 42.5883, 21.5486, 0.52", "-80.4608, 42.8063, 21.5359, 0.37", "-81.3884, 43.0317, 21.5287, 0.37", "-82.5659, 43.2996, 21.5538, 0.81", "-83.2074, 43.4509, 21.564, 1.11", "-84.1282, 43.6617, 21.5724, 1.55", "-84.5521, 43.7379, 21.5738, 1.55", "-85.819, 43.8641, 21.5852, 0.44", "-86.413, 43.8816, 21.5935, 0.44", "-87.0756, 43.8711, 21.6127, 0.81", "-87.6828, 43.8476, 21.6376, 0.81", "-88.6745, 43.7664, 21.6884, 0.37", "-89.1342, 43.7033, 21.7145, 0.37", "-89.6915, 43.5963, 21.7511, 0.81", "-90.4444, 43.4636, 21.8074, 1.18", "-90.9624, 43.4051, 21.8547, 1.18", "-91.8821, 43.3933, 21.9701, 0.59", "-92.6164, 43.4558, 22.0819, 0.74", "-92.9163, 43.4941, 22.1363, 0.74", "-93.6217, 43.6276, 22.289, 0.44", "-94.3411, 43.7815, 22.4841, 0.44", "-94.912, 43.9266, 22.6849, 0.22", "-95.3191, 44.0571, 22.8607, 0.22", "-95.8479, 44.2579, 23.1409, 0.66", "-96.1562, 44.3954, 23.3403, 0.66", "-96.9087, 44.7583, 23.9377, 0.22", "-97.3358, 44.9908, 24.3109, 0.22", "-97.7713, 45.2798, 24.7321, 0.44", "-98.3112, 45.7104, 25.3573, 0.44", "-98.8726, 46.217, 26.0741, 0.15", "-99.43, 46.7642, 26.8474, 0.59", "-99.7752, 47.1246, 27.3401, 0.74", "-100.107, 47.4543, 27.7912, 0.74", "-101.07, 48.3018, 28.9944, 0.52", "-101.229, 48.4234, 29.1741, 0.74", "-101.782, 48.7972, 29.7147, 0.88", "-102.22, 49.0696, 30.0802, 0.88", "-102.727, 49.3429, 30.4401, 0.37", "-103.322, 49.6122, 30.7654, 0.29", "-104.12, 49.9142, 31.0696, 0.29", "-104.903, 50.1757, 31.316, 0.81", "-105.434, 50.3355, 31.4367, 0.81", "-105.839, 50.456, 31.5174, 0.81", "-106.193, 50.5626, 31.5469, 0.74", "-106.758, 50.7347, 31.5274, 0.96", "-107.483, 50.947, 31.4388, 0.66", "-108.238, 51.1555, 31.3074, 0.44", "-108.921, 51.3463, 31.1606, 0.44", "-110.161, 51.7232, 30.8597, 0.44", "-111.142, 52.0196, 30.6329, 0.66", "-111.707, 52.1907, 30.5099, 0.96", "-112.166, 52.3201, 30.423, 0.96", "-112.753, 52.4824, 30.3255, 0.52", "-113.421, 52.6583, 30.3234, 0.66", "-114.377, 52.8804, 30.4817, 0.66", "-114.978, 52.9819, 30.6429, 0.59", "-115.887, 53.1225, 30.9262, 0.96", "-116.842, 53.2477, 31.2657, 0.96", "-118.897, 53.4437, 32.0777, 0.52", "-119.711, 53.493, 32.4297, 0.29", "-120.92, 53.5454, 33.0022, 0.29", "-129.214, 56.9851, 37.3335, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-11.2373, 45.4444, 18.3574, 0.59", "-10.6419, 45.1552, 19.9065, 0.59", "-10.0217, 45.0376, 21.5075, 0.74", "-8.67219, 45.1901, 24.9931, 0.66", "-8.35374, 45.3144, 25.8548, 0.66", "-8.20097, 45.4271, 26.3246, 0.74", "-8.01733, 45.6938, 27.1209, 0.52", "-8.01303, 46.1385, 27.941, 0.52", "-8.15092, 46.5906, 28.5451, 0.66", "-8.38238, 46.9946, 28.8758, 0.81", "-8.7651, 47.491, 29.2993, 0.96", "-9.51151, 48.2442, 30.0264, 1.03", "-10.1223, 48.7213, 30.5913, 0.81", "-10.6111, 49.0376, 31.0261, 0.81", "-11.0759, 49.3068, 31.4422, 0.74", "-11.7972, 49.7619, 32.1247, 0.88", "-12.2316, 50.0974, 32.5788, 0.88", "-12.7989, 50.707, 33.3009, 0.74", "-13.0219, 51.0921, 33.7064, 0.74", "-13.181, 51.5672, 34.1412, 0.59", "-13.2848, 52.3555, 34.7894, 0.96", "-13.2713, 53.0673, 35.3043, 0.96", "-13.1432, 53.9014, 35.9267, 0.96", "-12.8871, 54.8359, 36.6329, 0.66", "-12.658, 55.4888, 37.1349, 0.59", "-12.4176, 56.1556, 37.6368, 0.59", "-12.2524, 56.7129, 38.0396, 0.74", "-12.0295, 57.895, 38.7943, 0.81", "-11.9951, 58.5247, 39.1186, 0.81", "-12.0673, 59.5448, 39.514, 0.81", "-12.1961, 60.523, 39.8025, 0.81", "-12.3599, 61.5588, 40.0347, 0.74", "-12.5267, 62.6206, 40.2405, 0.74", "-12.729, 64.0178, 40.5046, 0.66", "-12.8698, 65.3711, 40.8273, 0.66", "-12.9667, 66.6389, 41.1549, 0.66", "-12.9784, 67.4094, 41.377, 0.81", "-12.9283, 68.2745, 41.6561, 0.81", "-12.799, 69.2553, 42.0223, 1.11", "-12.5684, 70.1649, 42.4801, 1.11", "-12.2237, 76.5283, 50.0487, 1.11", "-12.9884, 83.5767, 56.9157, 1.11", "-12.8208, 89.2957, 65.013, 1.11", "-11.7438, 93.0945, 74.1596, 1.11", "-10.3965, 96.0304, 83.5998, 1.11", "-8.11846, 99.4979, 92.6642, 1.11", "-5.01101, 104.423, 100.716, 1.11", "-0.997402, 108.547, 108.839, 1.11", "2.58167, 113.521, 116.66, 1.11" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-11.2373, 45.4444, 18.3574, 0.59", "-12.3585, 45.9099, 18.4393, 0.59", "-13.0923, 46.1699, 18.4913, 0.59", "-13.809, 46.41, 18.5426, 0.81", "-14.4932, 46.6614, 18.5859, 0.81", "-15.3554, 47.0137, 18.6359, 0.44", "-16.3766, 47.4772, 18.6911, 0.66", "-16.9599, 47.7437, 18.7289, 0.81", "-17.5906, 48.0886, 18.7654, 0.81", "-18.3823, 48.6518, 18.7989, 0.29", "-18.7435, 48.9801, 18.7862, 0.29", "-19.0684, 49.3404, 18.7438, 0.44", "-19.4069, 49.7741, 18.6719, 0.66", "-19.9419, 50.5172, 18.523, 0.22", "-20.6779, 51.5868, 18.2533, 0.22", "-21.2617, 52.4212, 18.0152, 0.22", "-21.7744, 53.1254, 17.7982, 0.81", "-22.1285, 53.607, 17.6413, 1.11", "-22.5944, 54.2583, 17.4253, 1.03", "-23.1183, 55.0052, 17.1796, 0.22", "-23.7156, 55.8615, 16.923, 0.22", "-23.9303, 56.1632, 16.8522, 0.44", "-24.3559, 56.7874, 16.7351, 0.22", "-24.7364, 57.3789, 16.6495, 0.59", "-24.984, 57.8449, 16.6149, 0.81", "-25.2349, 58.4595, 16.5941, 0.29", "-25.4391, 59.0947, 16.5909, 0.29", "-25.7257, 60.1463, 16.6153, 1.25", "-25.7741, 60.356, 16.6292, 1.4", "-26.0674, 61.8179, 16.7525, 0.44", "-26.205, 62.5404, 16.8195, 0.74", "-26.3017, 63.0484, 16.8642, 0.96", "-26.4574, 63.7891, 16.925, 0.29", "-26.6339, 64.5412, 16.9785, 0.22", "-26.9148, 65.6464, 17.0543, 1.33", "-27.0909, 66.2797, 17.0965, 1.33", "-27.4225, 67.4504, 17.1663, 0.29", "-27.7329, 68.5632, 17.2287, 0.29", "-27.9518, 69.3358, 17.2674, 0.29", "-28.113, 69.9234, 17.2937, 0.52", "-28.2772, 70.5963, 17.3337, 0.29", "-28.4153, 71.2974, 17.3834, 0.52", "-28.4561, 71.6095, 17.4003, 0.59", "-28.4963, 72.5368, 17.4197, 0.37", "-28.4274, 73.7592, 17.406, 0.96", "-28.3589, 74.1247, 17.3969, 1.47", "-28.2064, 74.5674, 17.4036, 1.18", "-27.8353, 75.3074, 17.4748, 0.81", "-27.4608, 75.9105, 17.5914, 0.29", "-27.1585, 76.3711, 17.7272, 0.29", "-26.7813, 77.0559, 17.9764, 0.22", "-26.5629, 77.6729, 18.2123, 0.22", "-26.4266, 78.3986, 18.5026, 1.03", "-26.3949, 78.959, 18.7365, 1.25", "-26.4524, 80.0373, 19.1476, 0.29", "-26.58, 80.9989, 19.4566, 0.29", "-26.7358, 81.8349, 19.6735, 0.66", "-26.8624, 82.4261, 19.8069, 0.74", "-26.9832, 82.9334, 19.9184, 0.52", "-27.1076, 83.464, 20.041, 0.29", "-27.2838, 84.4429, 20.2921, 1.11", "-27.3503, 85.0025, 20.4329, 1.33", "-27.4361, 85.9292, 20.6582, 0.74", "-27.4899, 86.5339, 20.8111, 0.29", "-27.535, 87.0924, 20.9639, 0.29", "-27.5881, 87.8168, 21.199, 0.29", "-27.6283, 88.3296, 21.3897, 0.52", "-27.6629, 88.7381, 21.571, 0.52", "-27.7292, 89.3973, 21.89, 0.29", "-27.7874, 89.9427, 22.1865, 0.59", "-27.8504, 90.4961, 22.5203, 0.81", "-27.903, 90.9595, 22.8108, 1.03", "-27.9979, 91.7897, 23.3193, 0.59", "-28.0854, 92.5181, 23.7585, 0.29", "-28.1868, 93.3474, 24.2327, 0.22", "-28.264, 93.8947, 24.5288, 0.22", "-28.3909, 94.7376, 24.9506, 0.22", "-28.5499, 95.6779, 25.3788, 0.22", "-28.7012, 96.4655, 25.6613, 0.66", "-28.8218, 97.0528, 25.8223, 0.96", "-28.9632, 97.6533, 25.9245, 0.96", "-29.0743, 98.0951, 25.9477, 0.96", "-29.2428, 98.7469, 25.884, 0.52", "-29.4898, 99.7426, 25.6589, 0.22", "-29.6252, 100.265, 25.4965, 0.22", "-29.7288, 100.638, 25.3699, 0.88", "-29.8952, 101.2, 25.1767, 1.03", "-30.2423, 102.231, 24.817, 0.44", "-30.4358, 102.752, 24.6557, 0.29", "-30.644, 103.261, 24.537, 0.29", "-30.8595, 103.758, 24.4495, 0.66", "-31.081, 104.254, 24.4062, 0.66", "-31.4, 104.95, 24.408, 0.22", "-31.6775, 105.553, 24.4446, 0.22", "-31.8849, 106.016, 24.4827, 0.74", "-32.1209, 106.547, 24.5268, 0.74", "-32.5768, 107.585, 24.5861, 0.22", "-32.7816, 108.09, 24.6396, 0.22", "-33.0572, 108.835, 24.7315, 0.74", "-33.2018, 109.252, 24.7714, 0.81", "-33.5185, 110.255, 24.8252, 0.22", "-33.7753, 111.131, 24.838, 0.22", "-34.1389, 112.469, 24.797, 0.22", "-34.2942, 113.047, 24.7749, 0.66", "-34.4341, 113.548, 24.7388, 0.66", "-34.6948, 114.428, 24.6464, 0.37", "-34.8358, 114.877, 24.5871, 0.37", "-35.1914, 115.862, 24.4076, 0.96", "-35.4709, 116.527, 24.2372, 1.18", "-35.8088, 117.258, 24.0449, 1.25", "-36.1137, 117.887, 23.8782, 0.52", "-36.3623, 118.382, 23.7407, 0.37", "-36.6141, 118.899, 23.5752, 0.29", "-36.8971, 119.538, 23.35, 0.22", "-37.0685, 120.024, 23.1609, 0.22", "-37.2813, 120.77, 22.8763, 0.66", "-37.3601, 121.091, 22.7507, 0.81", "-37.4861, 121.689, 22.5201, 0.81", "-37.6773, 122.808, 22.118, 0.29", "-37.8494, 124.268, 21.5779, 0.59", "-37.8973, 124.899, 21.3486, 0.59", "-37.9243, 125.448, 21.1521, 0.59", "-37.9451, 126.007, 20.9684, 0.59", "-37.9638, 126.63, 20.7939, 0.22", "-37.9778, 127.55, 20.5939, 0.22", "-37.982, 128.552, 20.4555, 0.74", "-37.98, 129.114, 20.3904, 0.74", "-37.9789, 129.731, 20.3338, 0.74", "-37.9912, 130.628, 20.2663, 0.29", "-38.0144, 131.737, 20.2166, 0.29", "-38.0309, 132.461, 20.2142, 0.74", "-38.0302, 133.216, 20.2165, 0.96", "-38.0203, 133.651, 20.2172, 1.18", "-37.9848, 134.385, 20.2201, 0.88", "-37.9376, 135.223, 20.2247, 0.22", "-37.9047, 136.213, 20.2561, 0.59", "-37.9067, 136.654, 20.2861, 0.59", "-37.9149, 136.919, 20.3149, 0.59", "-37.9707, 137.906, 20.4481, 0.22", "-37.9907, 138.166, 20.4857, 0.22", "-38.1402, 139.443, 20.6568, 0.22", "-38.2637, 140.24, 20.7593, 0.88", "-38.3532, 140.723, 20.8163, 0.88", "-38.4665, 141.251, 20.8723, 0.66", "-38.8113, 142.561, 20.9835, 0.22", "-39.0977, 143.535, 21.0391, 0.59", "-39.2863, 144.076, 21.0457, 0.74", "-39.5541, 144.762, 21.0398, 0.59", "-39.7717, 145.28, 21.0197, 0.44", "-40.0755, 145.975, 20.954, 0.81", "-40.2766, 146.383, 20.8913, 1.03", "-40.4827, 146.803, 20.8099, 1.18", "-40.5882, 147.025, 20.7607, 1.18", "-40.8573, 147.609, 20.6207, 0.66", "-41.3516, 148.79, 20.3531, 0.29", "-41.624, 149.583, 20.1977, 0.29", "-41.849, 150.384, 20.0683, 0.74", "-41.9906, 151.083, 19.9554, 0.74", "-42.0198, 151.293, 19.9163, 0.74", "-42.1167, 152.646, 19.6211, 0.29", "-42.1086, 153.819, 19.2932, 0.29", "-42.0617, 154.56, 19.039, 0.29", "-41.9185, 156.065, 18.4601, 0.88", "-41.8415, 156.771, 18.1647, 1.03", "-41.7146, 157.951, 17.6377, 0.22", "-41.5631, 159.304, 16.9821, 0.88", "-41.5038, 159.888, 16.692, 1.03", "-41.4206, 160.736, 16.3035, 0.52", "-41.3522, 161.369, 16.0601, 0.52", "-41.2877, 161.871, 15.9135, 0.88", "-41.1855, 162.432, 15.7915, 0.88", "-41.104, 162.786, 15.7365, 0.88", "-40.8494, 163.682, 15.6117, 0.22", "-40.6203, 164.355, 15.5177, 0.22", "-40.2881, 165.315, 15.3934, 0.88", "-40.0728, 165.962, 15.3138, 1.11", "-39.9169, 166.473, 15.2597, 1.11", "-39.7461, 167.093, 15.2043, 0.74", "-39.4755, 168.214, 15.1267, 0.29", "-39.2826, 169.18, 15.087, 0.29", "-39.1432, 170.01, 15.0664, 0.29", "-39.0217, 170.936, 15.0587, 0.74", "-38.9574, 171.514, 15.0611, 0.74", "-38.8861, 172.294, 15.0662, 0.44", "-38.7634, 173.794, 15.0754, 1.11", "-38.705, 174.576, 15.0801, 1.11", "-38.6646, 175.388, 15.0767, 0.81", "-38.6328, 176.453, 15.0875, 0.37", "-38.6257, 177.392, 15.1166, 0.37", "-38.6537, 178.26, 15.1708, 0.74", "-38.7374, 179.199, 15.2569, 0.29", "-38.8154, 179.745, 15.317, 0.29", "-38.9666, 180.662, 15.4293, 0.74", "-39.066, 181.223, 15.5039, 0.74", "-39.2302, 182.305, 15.6566, 0.29", "-39.349, 183.316, 15.8, 0.29", "-39.4277, 184.42, 15.9423, 0.29", "-39.4544, 185.494, 16.0215, 0.96", "-39.4487, 186.076, 16.0335, 0.96", "-39.4125, 186.887, 16.0219, 0.66", "-39.3752, 187.405, 15.9814, 0.22", "-39.2746, 188.534, 15.8277, 0.22", "-39.1313, 190.173, 15.5275, 1.4", "-39.1159, 190.465, 15.4604, 1.62", "-39.1092, 190.947, 15.3276, 1.62", "-39.1417, 192.331, 14.9128, 0.22", "-39.1736, 192.981, 14.7045, 0.22", "-39.2291, 193.867, 14.4209, 0.66", "-39.2584, 194.359, 14.2761, 0.66", "-39.2987, 195.299, 14.0177, 0.44", "-39.34, 196.149, 13.8174, 0.81", "-39.3846, 196.761, 13.7213, 0.81", "-39.4761, 197.748, 13.6158, 0.22", "-39.5449, 198.422, 13.588, 0.74", "-39.6088, 199.085, 13.6403, 0.74", "-39.7117, 200.209, 13.8883, 0.15", "-39.7889, 201.004, 14.1701, 0.15", "-39.8362, 201.534, 14.4024, 0.59", "-39.8878, 202.175, 14.7127, 0.59", "-39.9456, 203.145, 15.2034, 0.37", "-39.9441, 204.15, 15.7056, 0.44", "-39.8712, 204.971, 16.1025, 0.22", "-39.7556, 205.698, 16.4389, 0.66", "-39.6248, 206.334, 16.7441, 1.03", "-39.5159, 206.733, 16.9257, 1.03", "-39.2744, 207.408, 17.2209, 0.37", "-39.0651, 207.872, 17.4487, 0.37", "-38.5782, 208.817, 17.9929, 0.22", "-38.2449, 209.442, 18.3996, 0.22", "-37.9596, 210.014, 18.7839, 0.74", "-37.7463, 210.539, 19.1262, 0.74", "-37.5582, 211.149, 19.4882, 0.44", "-37.3286, 212.128, 19.9698, 0.88", "-37.2167, 212.729, 20.1861, 1.11", "-37.0776, 213.631, 20.4329, 0.66", "-36.9772, 214.464, 20.6139, 0.22", "-36.8943, 215.246, 20.7349, 0.22", "-36.8011, 216.179, 20.8227, 0.44", "-36.6372, 217.78, 20.8975, 0.22", "-36.5249, 218.625, 20.9226, 0.44", "-36.4647, 218.983, 20.9252, 0.44", "-36.3162, 219.69, 20.9243, 0.22", "-36.1531, 220.467, 20.916, 0.22", "-36.0316, 221.102, 20.9023, 0.44", "-35.9722, 221.5, 20.898, 0.22", "-39.3743, 230.436, 23.0039, 0.22" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "42.119, 137.269, 5.36954, 0.44", "42.593, 138.408, 5.38502, 0.44", "43.1103, 139.662, 5.44838, 0.37", "43.5998, 140.781, 5.57503, 1.18", "43.7495, 141.127, 5.655, 1.55", "44.0399, 141.827, 5.86634, 0.96", "44.4446, 142.778, 6.18987, 0.22", "44.8544, 143.636, 6.59281, 0.22", "45.2223, 144.398, 6.9979, 0.22", "46.0953, 146.166, 8.03761, 0.22", "46.543, 147.043, 8.59146, 0.44", "46.8635, 147.632, 9.00096, 0.37", "47.52, 148.792, 9.87716, 0.29", "51.7288, 157.497, 11.4806, 0.29", "55.433, 166.052, 14.529, 0.29", "58.06, 175.277, 16.4241, 0.29", "62.8457, 183.609, 18.4378, 0.29", "68.2656, 191.392, 21.0652, 0.29" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "42.119, 137.269, 5.36954, 0.29", "41.017, 137.513, 5.24929, 0.29", "40.6678, 137.597, 5.21465, 0.44", "40.3748, 137.665, 5.18891, 0.44", "39.3767, 137.886, 5.10837, 0.22", "38.5954, 138.058, 5.04533, 0.22", "38.01, 138.188, 4.99809, 0.22", "36.9849, 138.424, 4.91327, 0.22", "36.3367, 138.551, 4.86567, 0.52", "36.0352, 138.599, 4.84975, 0.52", "26.9274, 142.311, 3.25183, 0.52" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "30.5944, 40.2114, -0.589474, 0.52", "31.6689, 40.4011, -1.87951, 0.52", "32.433, 40.517, -2.72196, 0.44", "32.9698, 40.5932, -3.21988, 0.59", "33.4883, 40.6708, -3.65457, 0.81", "34.2813, 40.7992, -4.35626, 0.81", "34.8113, 40.8844, -4.8343, 0.66", "35.4404, 40.9944, -5.36531, 0.37", "36.3192, 41.1318, -6.07128, 0.37", "36.9767, 41.2381, -6.56909, 0.88", "38.672, 41.4919, -7.8021, 1.03", "39.4426, 41.6003, -8.31821, 1.11", "39.8934, 41.6518, -8.60618, 1.25", "40.521, 41.7063, -9.00051, 0.96", "41.2781, 41.7668, -9.45027, 0.37", "42.4855, 41.857, -10.038, 0.29", "43.115, 41.91, -10.261, 0.66", "43.7223, 41.9555, -10.456, 0.66", "44.2469, 41.9852, -10.6361, 0.66", "44.8856, 42.0291, -10.8619, 0.22", "45.3853, 42.0699, -11.0322, 0.22", "46.1349, 42.1312, -11.265, 0.96", "46.8544, 42.165, -11.4896, 1.4", "47.4885, 42.1673, -11.6865, 1.55", "48.062, 42.1377, -11.823, 0.88", "48.7492, 42.0707, -11.9505, 0.44", "49.6107, 41.9815, -12.0668, 0.59", "50.2125, 41.9206, -12.1165, 0.29", "51.1905, 41.831, -12.1455, 0.29", "52.4892, 41.6929, -12.1089, 0.52", "53.0753, 41.6168, -12.0769, 1.11", "53.465, 41.5409, -12.0474, 1.11", "53.8979, 41.4371, -12.011, 1.11", "54.5577, 41.2654, -11.9926, 0.96", "55.1941, 41.0862, -12.0166, 0.52", "55.6908, 40.9443, -12.0825, 0.29", "56.7419, 40.6374, -12.2531, 0.29", "57.3567, 40.4639, -12.3811, 0.96", "58.049, 40.2867, -12.5597, 0.96", "58.499, 40.1845, -12.6932, 0.96", "58.9824, 40.0864, -12.8612, 0.59", "59.4174, 40.0011, -13.0364, 0.59", "60.5027, 39.802, -13.5338, 0.22", "61.0824, 39.6992, -13.8406, 0.22", "61.4778, 39.6387, -14.0739, 0.96", "61.9163, 39.5822, -14.3526, 1.18", "62.9476, 39.4698, -15.0587, 0.44", "63.3797, 39.4168, -15.3569, 0.44", "64.0491, 39.326, -15.8855, 1.11", "64.6313, 39.2543, -16.3648, 1.33", "65.0999, 39.202, -16.7291, 1.33", "65.6143, 39.149, -17.1053, 1.03", "66.6544, 39.0481, -17.831, 0.22", "68.1066, 38.8806, -18.7917, 0.88", "68.4997, 38.8207, -19.045, 1.11", "69.5157, 38.6459, -19.736, 0.22", "70.1013, 38.5425, -20.1468, 0.66", "70.6485, 38.4547, -20.5282, 0.81", "71.0828, 38.3912, -20.8419, 0.59", "72.004, 38.2533, -21.476, 0.29", "72.8293, 38.1219, -22.0885, 0.59", "73.2385, 38.0511, -22.3954, 0.59", "74.3709, 37.8508, -23.2057, 0.22", "75.1596, 37.7198, -23.7596, 0.22", "75.7696, 37.6281, -24.18, 1.25", "76.284, 37.5638, -24.5273, 1.25", "77.7566, 37.4239, -25.4895, 0.22", "78.7718, 37.3428, -26.1638, 0.22", "79.5458, 37.2665, -26.6644, 0.52", "79.9994, 37.2135, -26.9355, 0.52", "80.3898, 37.16, -27.1671, 0.52", "81.0176, 37.0623, -27.5249, 0.22", "81.7438, 36.9378, -27.9066, 0.22", "82.4016, 36.7987, -28.2344, 0.22", "83.2048, 36.6082, -28.6092, 0.81", "83.84, 36.4467, -28.8948, 0.81", "84.9922, 36.1285, -29.3895, 0.15", "85.919, 35.8761, -29.7678, 0.22", "86.9855, 35.6116, -30.1931, 1.11", "87.7362, 35.4466, -30.4884, 1.55", "88.1809, 35.3524, -30.6567, 1.55", "88.8449, 35.2063, -30.8934, 0.96", "90.9934, 34.7075, -31.6613, 0.22", "91.6173, 34.5547, -31.8908, 0.88", "92.022, 34.4533, -32.032, 1.03", "92.4152, 34.3492, -32.1749, 1.03", "93.9129, 33.9441, -32.7318, 0.22", "94.3936, 33.8154, -32.9086, 0.52", "94.6744, 33.7369, -33.0085, 0.52", "95.4986, 33.518, -33.2908, 0.22", "96.1384, 33.3633, -33.496, 0.74", "96.6733, 33.244, -33.651, 0.74", "97.6666, 33.041, -33.9086, 0.22", "98.169, 32.9297, -34.0368, 0.44", "98.6893, 32.8033, -34.1835, 0.44", "99.9318, 32.5257, -34.5457, 0.22", "100.609, 32.3902, -34.7457, 0.52", "101.403, 32.2387, -35.0001, 0.52", "102.167, 32.1011, -35.2824, 1.03", "102.612, 32.0272, -35.4544, 1.03", "103.995, 31.8258, -35.9868, 0.22", "104.716, 31.7352, -36.271, 0.81", "105.422, 31.6655, -36.5408, 1.03", "107.559, 31.5128, -37.3952, 0.22", "109.113, 31.4807, -38.0446, 0.22", "110.195, 31.4889, -38.5151, 0.88", "110.736, 31.498, -38.7737, 1.4", "111.214, 31.5153, -39.0073, 0.96", "112.304, 31.581, -39.5594, 0.66", "113.926, 31.7373, -40.4976, 0.22", "114.472, 31.7901, -40.8412, 0.22", "115.548, 31.8723, -41.5546, 0.22", "116.28, 31.913, -42.0472, 0.66", "116.825, 31.9271, -42.4208, 0.66", "118.564, 31.9211, -43.5795, 0.29", "119.322, 31.8953, -44.0981, 0.66", "119.839, 31.8784, -44.4587, 0.66", "120.823, 31.8524, -45.1639, 0.22", "121.476, 31.8256, -45.6514, 0.59", "122.153, 31.786, -46.1645, 0.59", "123.194, 31.6849, -47.0368, 0.22", "124.142, 31.5712, -47.9044, 0.88", "124.6, 31.499, -48.3214, 0.88", "125.569, 31.3141, -49.1979, 0.22", "126.301, 31.158, -49.8602, 0.52", "127.827, 30.7974, -51.2095, 0.22", "128.731, 30.5748, -51.9598, 0.22", "130.038, 30.2514, -52.9554, 0.22", "130.413, 30.162, -53.21, 0.44", "131.149, 29.9907, -53.6466, 0.44", "132.178, 29.7601, -54.1688, 0.88", "133.73, 29.4408, -54.8057, 0.22", "134.403, 29.316, -55.0829, 0.44", "135.412, 29.1527, -55.5199, 0.22", "136.229, 29.0386, -55.8716, 0.44", "136.65, 29.0057, -56.0586, 0.44", "138.25, 29.0082, -56.7982, 0.22", "139.37, 29.1062, -57.3396, 0.88", "139.621, 29.1651, -57.4752, 0.88", "140.144, 29.3902, -57.8032, 0.22", "141.326, 30.1824, -58.607, 0.22", "141.892, 30.6535, -59.0184, 0.88", "142.26, 31.0238, -59.3037, 0.88", "143.264, 32.0814, -60.0596, 0.22", "143.979, 32.8458, -60.6087, 0.22", "145.354, 34.3292, -61.6944, 0.22", "145.976, 34.9548, -62.153, 0.96", "146.358, 35.2952, -62.4159, 0.96", "147.134, 35.9014, -62.908, 0.15", "147.864, 36.3687, -63.3067, 0.37", "148.281, 36.5984, -63.5183, 0.59", "149.892, 37.3611, -64.2923, 0.22", "150.542, 37.6537, -64.5865, 0.66", "151.025, 37.8517, -64.8049, 0.66", "152.24, 38.3052, -65.3807, 0.22", "153.142, 38.5997, -65.8205, 0.44", "153.6, 38.7125, -66.1295, 0.44", "154.222, 38.8258, -66.6911, 0.22", "154.833, 38.8984, -67.3224, 0.22", "155.336, 38.9209, -67.8943, 0.59", "155.7, 38.9284, -68.3656, 0.81", "157.52, 39.0049, -70.8962, 0.22", "158.116, 39.0392, -71.7285, 0.22", "158.704, 39.071, -72.528, 0.22", "159.344, 39.1268, -73.3537, 0.22", "160.439, 39.2593, -74.6654, 1.03", "160.951, 39.3417, -75.2197, 1.03", "162.157, 39.5883, -76.2906, 0.22", "162.887, 39.7523, -76.9529, 0.22", "163.546, 39.9425, -77.5738, 0.88", "163.767, 40.0201, -77.8012, 0.88", "164.408, 40.2448, -78.4595, 0.66", "165.099, 40.5057, -79.2079, 0.22", "166.486, 41.1761, -80.941, 0.81", "167.205, 41.5716, -81.9201, 0.22", "168.218, 42.1497, -83.3991, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "30.5944, 40.2114, -0.589474, 0.81", "31.8032, 41.286, -0.474849, 0.81", "32.8096, 42.0437, -0.376396, 1.11", "33.6544, 42.5788, -0.298287, 1.03", "34.339, 42.9722, -0.244082, 0.59", "34.7545, 43.1984, -0.224657, 0.59", "35.5428, 43.6103, -0.221153, 0.52", "36.5248, 44.0108, -0.227625, 0.66", "37.2957, 44.262, -0.246271, 1.03", "37.7533, 44.3963, -0.27141, 1.25", "38.5043, 44.6118, -0.343275, 0.96", "39.1207, 44.8017, -0.446093, 0.81" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "111.867, -162.998, -23.7983, 0.52", "113.705, -164.934, -23.0618, 0.52", "114.287, -165.552, -22.8443, 0.52", "115.366, -166.722, -22.4436, 0.44", "116.054, -167.451, -22.2073, 0.44", "117.75, -169.194, -21.6721, 0.44", "118.595, -170.07, -21.4379, 0.44", "119.364, -170.874, -21.3013, 0.44", "120.341, -171.907, -21.1386, 0.44", "121.429, -173.107, -20.9711, 0.44", "122.224, -174.005, -20.8629, 0.44", "124.051, -176.122, -20.6202, 0.44", "124.743, -176.929, -20.5084, 0.44", "126.456, -178.931, -20.2092, 0.44", "128.245, -180.984, -19.8685, 0.44", "128.846, -181.662, -19.7379, 0.44", "129.923, -182.835, -19.4982, 0.44", "130.982, -183.916, -19.2667, 0.44", "132.039, -184.948, -19.0607, 0.44", "132.906, -185.771, -18.9167, 0.44", "134.525, -187.365, -18.689, 0.44", "135.025, -187.924, -18.6355, 0.44", "136.025, -189.207, -18.6107, 0.44", "136.991, -190.601, -18.6457, 0.37", "137.901, -192.095, -18.731, 0.37", "138.554, -193.317, -18.836, 0.37", "139.91, -196.264, -19.0998, 0.37", "140.724, -198.235, -19.2765, 0.37", "141.262, -199.648, -19.4201, 0.37", "141.773, -201.111, -19.5913, 0.37", "142.25, -202.554, -19.789, 0.37", "142.918, -204.662, -20.1066, 0.37", "143.194, -205.731, -20.2774, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "111.867, -162.998, -23.7983, 0.52", "112.053, -163.8, -24.0393, 0.52", "112.522, -165.436, -24.5052, 0.52", "112.908, -166.696, -24.8616, 0.52", "113.409, -168.112, -25.305, 0.52", "113.695, -168.843, -25.5512, 0.52", "113.969, -169.437, -25.7443, 0.52", "114.577, -170.566, -26.1079, 0.52", "115.043, -171.359, -26.3417, 0.52", "115.839, -172.709, -26.7109, 0.52", "116.307, -173.58, -26.9524, 0.52", "117.433, -175.837, -27.565, 0.52", "117.844, -176.719, -27.8017, 0.52", "118.656, -178.56, -28.2811, 0.52", "119.308, -180.07, -28.6899, 0.52", "120.41, -182.804, -29.4708, 0.52", "121.166, -184.811, -30.0823, 0.52", "121.525, -185.868, -30.4225, 0.52", "122.24, -187.903, -31.097, 0.52", "122.749, -189.264, -31.5839, 0.52", "123.236, -190.397, -32.0383, 0.52", "123.831, -191.574, -32.4822, 0.52", "124.767, -193.133, -33.0034, 0.52", "125.751, -194.511, -33.3835, 0.52", "126.64, -195.608, -33.611, 0.52", "127.859, -197.043, -33.7889, 0.52", "129.678, -199.059, -33.9039, 0.52", "131.62, -201.114, -33.9236, 0.52", "133.453, -202.994, -33.8604, 0.52", "134.626, -204.138, -33.7653, 0.52", "138.247, -207.571, -33.3665, 0.52", "139.254, -208.492, -33.2617, 0.52", "140.92, -209.952, -33.1122, 0.52", "142.473, -211.284, -32.9653, 0.52", "145.747, -214.004, -32.6512, 0.52", "147.291, -215.211, -32.5093, 0.52", "149.609, -216.822, -32.3303, 0.52", "150.657, -217.554, -32.2856, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "6.90457, -48.7676, -18.8245, 0.66", "6.68754, -49.781, -20.5813, 0.66", "6.42525, -50.8602, -22.1128, 0.66", "6.00824, -52.6258, -24.0884, 0.66", "5.74116, -53.9256, -25.2888, 0.66", "5.62843, -54.5625, -25.8113, 0.66", "5.41775, -56.0356, -26.9413, 0.66", "5.27976, -57.4852, -27.8435, 0.66", "5.18488, -59.2895, -28.7192, 0.66", "5.16903, -60.9117, -29.412, 0.66", "5.23756, -62.5495, -30.1309, 0.66", "5.3553, -64.1537, -30.8871, 0.66", "5.46278, -65.2922, -31.4436, 0.66", "5.60017, -66.7736, -32.2843, 0.59", "5.72305, -68.3446, -33.3106, 0.59", "5.78272, -69.4805, -34.0782, 0.59", "5.81105, -70.4672, -34.7549, 0.59", "5.84245, -72.2342, -35.9471, 0.59", "5.86368, -75.1497, -38.007, 0.59", "5.8881, -76.4359, -38.9686, 0.59", "5.94798, -77.4129, -39.6796, 0.59", "6.08647, -78.7552, -40.6541, 0.59", "6.28201, -79.9194, -41.5271, 0.59", "6.77574, -82.0847, -43.1919, 0.59", "7.31845, -83.9573, -44.494, 0.59", "7.64474, -84.9383, -45.1773, 0.59", "7.83945, -85.4253, -45.5076, 0.59", "8.40055, -86.5962, -46.2248, 0.59", "9.23313, -88.0429, -46.9916, 0.59", "10.2411, -89.528, -47.6171, 0.59", "11.0797, -90.6975, -48.0935, 0.59", "12.1942, -92.2183, -48.7284, 0.59", "13.123, -93.5335, -49.2517, 0.59", "14.5488, -95.664, -50.0028, 0.59", "16.1527, -98.1548, -50.8916, 0.52", "16.9672, -99.4874, -51.3837, 0.52", "17.3587, -100.198, -51.6526, 0.44", "18.8414, -103.265, -53.0476, 0.44", "19.7874, -105.421, -54.1474, 0.44", "21.0023, -108.43, -55.7769, 0.44", "21.3038, -109.215, -56.2038, 0.44", "22.7491, -113.025, -58.2982, 0.44", "23.9963, -116.327, -60.2515, 0.44", "24.7812, -118.398, -61.5466, 0.44", "25.3961, -120.017, -62.5558, 0.44", "26.0611, -121.818, -63.5891, 0.44", "26.3534, -122.591, -63.9937, 0.44", "26.899, -123.989, -64.6334, 0.44", "27.5415, -125.504, -65.2439, 0.44", "28.2927, -127.138, -66.001, 0.44", "28.7965, -128.1, -66.567, 0.44", "29.3452, -129.041, -67.207, 0.44", "30.2879, -130.543, -68.3338, 0.44", "31.158, -131.851, -69.3929, 0.44", "31.8664, -132.828, -70.2881, 0.44", "32.7705, -133.93, -71.3205, 0.44", "33.5405, -134.81, -72.0972, 0.44", "34.5035, -135.988, -72.9718, 0.44", "34.9508, -136.608, -73.3308, 0.44", "35.6141, -137.672, -73.8227, 0.44", "36.6397, -139.51, -74.6002, 0.44", "37.0281, -140.301, -74.9127, 0.44", "37.9073, -142.339, -75.7934, 0.44", "38.3345, -143.495, -76.3306, 0.44", "38.5433, -144.168, -76.6805, 0.44", "38.8679, -145.427, -77.3671, 0.44", "39.007, -145.983, -77.668, 0.44", "39.3817, -147.176, -78.2722, 0.44", "39.8936, -148.632, -78.9319, 0.44", "40.0708, -149.139, -79.1513, 0.44", "40.4455, -150.332, -79.6505, 0.44", "40.9547, -152.137, -80.3703, 0.44", "41.2085, -153.139, -80.7793, 0.44", "42.1245, -157.037, -82.443, 0.44", "42.4984, -158.853, -83.223, 0.44", "42.8197, -160.575, -83.9855, 0.44", "43.2802, -163.127, -85.2044, 0.44", "43.5278, -164.478, -85.8832, 0.44", "43.9812, -166.545, -86.9257, 0.44", "44.5373, -168.464, -87.8663, 0.44", "45.2456, -170.42, -88.8076, 0.44", "46.2061, -172.602, -89.8239, 0.44", "47.0301, -174.175, -90.5199, 0.44", "48.1151, -175.921, -91.2599, 0.44", "49.2232, -177.483, -91.8876, 0.44", "49.9063, -178.364, -92.2481, 0.44", "50.908, -179.646, -92.7247, 0.44", "51.9542, -181.153, -93.2008, 0.44", "52.6822, -182.397, -93.6108, 0.44", "53.426, -184.111, -94.1298, 0.44", "54.036, -185.964, -94.6003, 0.44", "54.3225, -187.054, -94.8237, 0.44", "54.893, -189.629, -95.2688, 0.44", "55.326, -191.895, -95.6216, 0.44", "56.1431, -196.345, -96.3327, 0.44", "56.9969, -200.32, -96.9969, 0.44", "57.9447, -203.805, -97.5933, 0.44", "58.5175, -205.566, -97.9066, 0.44", "59.2733, -207.571, -98.2824, 0.44", "60.1105, -209.607, -98.7026, 0.44", "61.3978, -212.561, -99.4523, 0.44", "62.9192, -215.94, -100.41, 0.44", "63.6001, -217.507, -100.849, 0.44", "64.7144, -220.606, -101.605, 0.44", "65.3574, -222.883, -102.063, 0.44", "65.7932, -225.07, -102.42, 0.44", "66.0027, -226.618, -102.661, 0.44", "66.2618, -229.741, -103.123, 0.44", "66.4891, -233.689, -103.649, 0.44", "66.5532, -235.973, -103.865, 0.44", "66.5646, -237.677, -103.956, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "6.90457, -48.7676, -18.8245, 0.59", "8.70211, -49.8289, -19.682, 0.59", "9.11592, -50.084, -19.892, 0.59", "9.9515, -50.5628, -20.294, 0.52", "10.7755, -51.0093, -20.6371, 0.52", "11.4603, -51.3732, -20.8871, 0.52", "12.7032, -52.0, -21.2833, 0.44", "13.9432, -52.6065, -21.5746, 0.44", "15.0588, -53.1666, -21.8056, 0.44", "16.4396, -53.933, -22.0985, 0.44", "18.0354, -54.8787, -22.4205, 0.44", "19.3356, -55.7202, -22.6885, 0.44", "20.386, -56.4826, -22.9195, 0.44", "21.6059, -57.4576, -23.1773, 0.44", "22.7812, -58.4846, -23.4585, 0.44", "23.5926, -59.2602, -23.6885, 0.44", "24.2671, -59.9471, -23.9094, 0.44", "25.0809, -60.8378, -24.2181, 0.44", "25.8064, -61.6603, -24.5068, 0.44", "26.3885, -62.3003, -24.741, 0.44", "27.4025, -63.3561, -25.1228, 0.44", "28.5165, -64.4968, -25.5707, 0.44", "29.5044, -65.534, -25.9918, 0.44", "30.2542, -66.3733, -26.3491, 0.44", "31.3296, -67.599, -26.9028, 0.44", "32.2867, -68.6863, -27.4021, 0.44", "33.2649, -69.7508, -27.9161, 0.44", "34.1437, -70.6783, -28.3799, 0.44", "35.1252, -71.6877, -28.9253, 0.44", "36.315, -72.882, -29.6352, 0.44", "36.9897, -73.5504, -30.0596, 0.44", "38.0886, -74.5741, -30.7227, 0.44", "39.5573, -75.8783, -31.5401, 0.44", "41.2246, -77.329, -32.3853, 0.44", "42.2316, -78.1995, -32.8862, 0.44", "43.7074, -79.5163, -33.6418, 0.44", "45.6986, -81.3178, -34.6413, 0.44", "46.7258, -82.2607, -35.1529, 0.44", "48.0867, -83.5443, -35.8485, 0.44", "48.9108, -84.3781, -36.2836, 0.44", "50.5404, -86.2155, -37.1998, 0.44", "51.3359, -87.1845, -37.6705, 0.44", "52.4124, -88.5408, -38.3764, 0.44", "53.8263, -90.3172, -39.3256, 0.44", "55.1345, -91.9379, -40.1849, 0.44", "55.8155, -92.7878, -40.5874, 0.44", "56.7809, -93.9685, -41.1212, 0.44", "58.1225, -95.6349, -41.7795, 0.44", "59.0677, -96.8158, -42.1698, 0.44", "59.7558, -97.6588, -42.4075, 0.44", "61.0067, -99.2016, -42.7862, 0.44", "63.0045, -101.714, -43.3397, 0.44", "65.2744, -104.656, -43.8959, 0.44", "66.0142, -105.617, -44.0551, 0.44", "68.5929, -108.862, -44.6208, 0.44", "69.8834, -110.405, -44.9184, 0.44", "70.2898, -110.86, -45.0157, 0.44", "71.1966, -111.769, -45.2203, 0.44", "72.4553, -112.847, -45.5647, 0.44", "73.3739, -113.562, -45.8169, 0.44", "75.1242, -114.802, -46.364, 0.44", "75.9909, -115.395, -46.6567, 0.44", "78.235, -116.81, -47.5162, 0.44", "80.1643, -117.934, -48.3082, 0.44", "82.8222, -119.341, -49.3841, 0.44", "85.7276, -120.737, -50.5313, 0.44", "87.9236, -121.665, -51.3707, 0.44", "92.8585, -123.463, -53.1788, 0.44", "94.8323, -124.082, -53.8781, 0.44", "97.3656, -124.777, -54.6233, 0.44", "99.2047, -125.2, -55.0514, 0.44", "101.35, -125.653, -55.3667, 0.44", "103.216, -126.051, -55.5293, 0.37", "105.135, -126.507, -55.6019, 0.37", "108.176, -127.327, -55.7183, 0.37", "110.791, -128.086, -55.9192, 0.37", "112.484, -128.604, -56.0664, 0.37", "115.07, -129.438, -56.3231, 0.37", "116.63, -129.955, -56.4992, 0.37", "119.083, -130.733, -56.8492, 0.37", "121.059, -131.339, -57.3596, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-23.422, -94.2669, 5.28893, 0.59", "-23.3157, -95.2676, 5.07148, 0.59", "-23.2655, -96.4132, 4.83476, 0.59", "-23.2222, -97.2837, 4.60267, 0.59", "-23.2039, -97.6378, 4.49951, 0.59", "-23.1194, -99.0957, 4.07663, 0.59", "-23.0847, -99.912, 3.84355, 0.59", "-23.0823, -100.476, 3.67849, 0.59", "-23.099, -101.687, 3.33609, 0.52", "-23.13, -102.933, 2.95232, 0.52", "-23.1878, -104.657, 2.3671, 0.52", "-23.247, -105.787, 1.94225, 0.52", "-23.3077, -106.361, 1.72086, 0.52", "-23.4584, -107.187, 1.38314, 0.52", "-23.6277, -107.743, 1.15535, 0.52", "-23.9056, -108.386, 0.887047, 0.52", "-24.0901, -108.742, 0.737605, 0.52", "-24.4881, -109.554, 0.419816, 0.52", "-24.7089, -109.993, 0.258163, 0.52", "-25.0145, -110.606, 0.0532033, 0.52", "-25.7088, -112.121, -0.377996, 0.52", "-26.0105, -112.86, -0.55042, 0.52", "-26.4143, -113.994, -0.787662, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-23.422, -94.2669, 5.28893, 0.59", "-24.0949, -95.2573, 5.37001, 0.59", "-24.6305, -96.0658, 5.46769, 0.59", "-25.2866, -97.0662, 5.60033, 0.59", "-25.961, -98.0853, 5.71139, 0.59", "-26.9748, -99.5294, 5.91953, 0.59", "-28.0654, -101.031, 6.16347, 0.59", "-28.587, -101.737, 6.29524, 0.59", "-29.195, -102.444, 6.45237, 0.59", "-30.132, -103.404, 6.70634, 0.59", "-31.3061, -104.494, 7.01384, 0.59", "-32.2091, -105.28, 7.21392, 0.59", "-33.0955, -106.047, 7.36619, 0.59", "-34.7655, -107.557, 7.61321, 0.59", "-35.6513, -108.382, 7.71852, 0.59", "-36.5953, -109.316, 7.76554, 0.59", "-37.7819, -110.594, 7.69742, 0.59", "-38.4575, -111.353, 7.61955, 0.59", "-39.5963, -112.691, 7.43028, 0.59", "-40.5122, -113.802, 7.22397, 0.59", "-41.608, -115.101, 6.94767, 0.59", "-42.5465, -116.226, 6.69798, 0.59", "-43.2411, -117.084, 6.5104, 0.59", "-44.2586, -118.418, 6.22743, 0.59", "-44.8404, -119.215, 6.07203, 0.59", "-45.3817, -119.983, 5.94804, 0.59", "-46.1392, -121.075, 5.83615, 0.59", "-46.6676, -121.843, 5.78535, 0.59", "-47.3587, -122.84, 5.75284, 0.59", "-47.9919, -123.747, 5.75123, 0.59", "-48.6971, -124.686, 5.77739, 0.59", "-49.3538, -125.469, 5.81466, 0.59", "-50.0826, -126.275, 5.86908, 0.59", "-51.5561, -127.788, 5.98716, 0.59", "-52.0342, -128.263, 6.02312, 0.59", "-52.9978, -129.212, 6.07876, 0.59", "-53.4804, -129.674, 6.09285, 0.59", "-54.3698, -130.488, 6.09865, 0.59", "-55.4492, -131.475, 6.08552, 0.59", "-56.7553, -132.656, 6.04984, 0.59", "-57.3551, -133.215, 6.03021, 0.59", "-58.2291, -134.09, 6.00044, 0.59", "-58.6666, -134.549, 5.98578, 0.59", "-59.3506, -135.267, 5.97782, 0.59", "-60.3776, -136.367, 5.98925, 0.59", "-60.9332, -136.932, 6.02523, 0.59", "-62.4543, -138.341, 6.17322, 0.59", "-63.0929, -138.859, 6.24817, 0.59", "-64.1673, -139.588, 6.37546, 0.59", "-64.8448, -139.962, 6.45272, 0.59", "-65.8031, -140.403, 6.56111, 0.59", "-67.814, -141.224, 6.77075, 0.59", "-68.968, -141.656, 6.87715, 0.59", "-71.0802, -142.402, 7.03875, 0.59", "-72.5864, -142.931, 7.12549, 0.59", "-73.856, -143.345, 7.18201, 0.59", "-74.9421, -143.699, 7.21355, 0.59", "-76.2811, -144.124, 7.25132, 0.59", "-77.4757, -144.519, 7.27065, 0.59", "-78.8184, -144.981, 7.27174, 0.59", "-80.353, -145.538, 7.28125, 0.59", "-81.3202, -145.917, 7.28995, 0.59", "-82.1639, -146.255, 7.30333, 0.59", "-83.0777, -146.634, 7.3225, 0.59", "-84.3351, -147.185, 7.34367, 0.59", "-86.398, -148.138, 7.37986, 0.59", "-88.1026, -148.968, 7.41117, 0.59", "-89.1654, -149.504, 7.43242, 0.59", "-90.1559, -150.049, 7.46232, 0.59", "-91.1083, -150.597, 7.49861, 0.59", "-92.3586, -151.329, 7.53614, 0.59", "-94.26, -152.489, 7.58955, 0.59", "-95.6885, -153.346, 7.63841, 0.59", "-97.4861, -154.431, 7.70732, 0.59", "-98.3707, -154.94, 7.74422, 0.59", "-99.1131, -155.309, 7.77594, 0.59", "-100.368, -155.829, 7.83243, 0.59", "-102.221, -156.454, 7.9263, 0.59", "-103.272, -156.716, 8.00697, 0.59", "-104.155, -156.906, 8.10575, 0.59", "-106.002, -157.346, 8.39231, 0.59", "-106.889, -157.603, 8.56868, 0.59", "-107.697, -157.889, 8.77954, 0.59", "-108.802, -158.4, 9.16864, 0.59", "-109.687, -158.906, 9.53527, 0.59", "-110.4, -159.42, 9.85295, 0.59", "-111.163, -160.057, 10.1962, 0.59", "-112.005, -160.749, 10.5214, 0.59", "-112.377, -161.049, 10.6394, 0.59", "-113.329, -161.735, 10.8661, 0.59", "-114.419, -162.413, 11.0744, 0.59", "-115.454, -162.996, 11.2396, 0.59", "-116.323, -163.429, 11.3535, 0.59", "-117.471, -163.983, 11.4762, 0.59", "-118.607, -164.536, 11.6038, 0.59", "-119.357, -164.9, 11.6916, 0.59", "-120.185, -165.312, 11.8022, 0.59", "-121.406, -165.975, 11.9988, 0.59", "-122.433, -166.602, 12.2004, 0.59", "-123.345, -167.216, 12.4189, 0.59", "-124.052, -167.769, 12.6153, 0.59", "-124.544, -168.193, 12.7997, 0.59", "-125.185, -168.802, 13.1207, 0.59", "-125.549, -169.2, 13.3639, 0.59", "-125.874, -169.616, 13.7087, 0.59", "-126.327, -170.324, 14.4135, 0.59", "-126.768, -171.15, 15.3118, 0.59", "-127.044, -171.699, 15.9541, 0.59", "-127.236, -172.111, 16.4759, 0.59", "-127.791, -173.409, 18.2474, 0.59", "-127.875, -173.682, 18.6406, 0.59", "-127.93, -174.085, 19.2632, 0.59", "-135.641, -179.933, 21.3994, 0.59" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-0.920592, -76.9285, 8.40594, 0.74", "-2.45635, -79.7112, 16.0174, 0.74", "-2.55054, -79.9451, 16.4739, 0.66", "-2.76652, -80.5378, 17.3898, 0.66", "-3.01877, -81.2151, 18.2553, 0.66", "-3.27694, -81.8874, 18.9787, 0.66", "-3.60676, -82.7254, 19.7821, 0.66", "-3.9148, -83.6117, 20.0364, 0.66", "-4.21261, -84.4068, 20.2844, 0.66", "-4.52605, -85.1773, 20.5388, 0.66", "-4.84613, -85.903, 20.7467, 0.66", "-5.07087, -86.391, 20.8522, 0.66", "-5.53745, -87.4732, 21.0029, 0.66", "-5.74374, -88.0424, 21.0547, 0.66", "-5.92574, -88.5687, 21.0767, 0.66", "-6.4699, -89.9758, 21.1327, 0.66", "-6.94674, -91.048, 21.1745, 0.66", "-7.72176, -92.5664, 21.2303, 0.66", "-8.34394, -93.6349, 21.3136, 0.66", "-8.89857, -94.4778, 21.4136, 0.66", "-9.77917, -95.7078, 21.6165, 0.66", "-10.1419, -96.1816, 21.7206, 0.66", "-10.7035, -96.8966, 21.9139, 0.66", "-11.2587, -97.5922, 22.1225, 0.66", "-11.8697, -98.4153, 22.3474, 0.66", "-12.25, -99.0041, 22.4721, 0.66", "-12.5976, -99.6294, 22.5657, 0.66", "-12.8074, -100.005, 22.6009, 0.66", "-13.2177, -100.731, 22.6395, 0.66", "-13.8897, -101.893, 22.6574, 0.66", "-14.4186, -102.822, 22.657, 0.66", "-15.2295, -104.273, 22.6393, 0.66", "-15.9099, -105.582, 22.6115, 0.66", "-16.5846, -107.086, 22.6103, 0.66", "-16.9937, -108.223, 22.6348, 0.66", "-17.2422, -109.05, 22.6695, 0.66", "-17.4448, -109.809, 22.7174, 0.66", "-17.8008, -111.118, 22.8227, 0.66", "-18.1915, -112.571, 22.9712, 0.66", "-18.4823, -113.627, 23.0981, 0.66", "-18.8079, -114.81, 23.2749, 0.52", "-19.1435, -115.974, 23.4839, 0.52", "-19.521, -117.222, 23.7449, 0.52", "-19.8853, -118.346, 24.0061, 0.52", "-20.3189, -119.606, 24.3018, 0.52", "-20.8024, -121.03, 24.6588, 0.52", "-21.2745, -122.456, 25.0359, 0.52", "-21.6467, -123.667, 25.3614, 0.52", "-21.9655, -124.798, 25.665, 0.52", "-22.2489, -125.779, 25.9132, 0.52", "-22.3901, -126.258, 26.0077, 0.52", "-22.6593, -127.232, 26.1458, 0.52", "-22.8815, -128.086, 26.2753, 0.52", "-23.1115, -128.972, 26.3961, 0.52", "-23.4053, -129.924, 26.5275, 0.52", "-23.9128, -131.424, 26.7334, 0.52", "-24.2246, -132.296, 26.8535, 0.52", "-24.7887, -133.766, 27.0492, 0.52", "-25.1994, -134.769, 27.1522, 0.52", "-25.7026, -136.093, 27.2167, 0.52", "-25.914, -136.721, 27.2178, 0.52", "-26.2865, -137.899, 27.2045, 0.52", "-26.6542, -139.081, 27.1781, 0.52", "-26.9901, -140.205, 27.1494, 0.52", "-27.4519, -141.753, 27.172, 0.52", "-27.8082, -142.877, 27.2145, 0.52", "-28.2752, -144.239, 27.2979, 0.52", "-28.7167, -145.481, 27.4051, 0.52", "-29.2106, -146.823, 27.5672, 0.52", "-29.5591, -147.718, 27.7097, 0.52", "-30.438, -149.89, 28.0999, 0.52", "-30.9226, -151.088, 28.3246, 0.52", "-31.2541, -151.939, 28.4836, 0.52", "-31.5201, -152.619, 28.6207, 0.52", "-31.8576, -153.464, 28.8055, 0.52", "-32.6101, -155.306, 29.2333, 0.52", "-33.2541, -156.799, 29.5856, 0.52", "-33.7357, -157.795, 29.8072, 0.52", "-34.1882, -158.705, 29.9863, 0.52", "-34.5561, -159.48, 30.1176, 0.52", "-34.8421, -160.138, 30.2094, 0.52", "-35.2662, -161.29, 30.328, 0.52", "-35.5355, -162.284, 30.3931, 0.52", "-35.7484, -163.327, 30.4281, 0.52", "-35.8592, -164.463, 30.4421, 0.52", "-35.8737, -165.322, 30.4794, 0.52", "-35.8203, -166.254, 30.5767, 0.52", "-35.6397, -167.679, 30.8096, 0.52", "-35.4217, -168.993, 31.086, 0.52", "-35.2321, -170.201, 31.4078, 0.52", "-35.0279, -171.77, 31.9564, 0.52", "-34.9587, -172.75, 32.3832, 0.52", "-34.9607, -173.277, 32.7104, 0.52", "-35.0275, -173.785, 33.1059, 0.52", "-35.1206, -174.193, 33.4338, 0.52", "-35.3098, -174.892, 33.98, 0.52", "-35.4112, -175.373, 34.3194, 0.52", "-35.4817, -176.834, 35.1103, 0.52", "-35.4298, -177.782, 35.4813, 0.52", "-35.2851, -179.396, 35.8474, 0.52", "-35.1214, -180.924, 35.9766, 0.52", "-35.0568, -181.476, 35.9982, 0.52", "-34.8773, -183.436, 36.0656, 0.52", "-34.7951, -184.528, 36.0958, 0.52", "-34.6809, -186.586, 36.2326, 0.52", "-34.6729, -187.977, 36.3237, 0.52", "-34.7191, -189.247, 36.3947, 0.52", "-34.8519, -191.175, 36.5779, 0.52", "-34.9483, -192.081, 36.7291, 0.52", "-34.9966, -192.782, 36.873, 0.52", "-35.0591, -194.771, 37.4173, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.920592, -76.9285, 8.40594, 0.88", "-0.656951, -78.4533, 8.55609, 0.88", "-0.511998, -80.2728, 8.64591, 0.88", "-0.507881, -81.7419, 8.69858, 0.88", "-0.530115, -82.7467, 8.72593, 0.88", "-0.578071, -84.6792, 8.80605, 0.88", "-0.606638, -86.0856, 8.87495, 0.88", "-0.723364, -88.1404, 8.93472, 0.88", "-0.816359, -89.1345, 8.95836, 0.88", "-0.952455, -90.3006, 8.99104, 0.88", "-1.15652, -91.8302, 9.03875, 0.96", "-1.2593, -92.639, 9.07761, 0.96", "-1.4122, -94.3225, 9.19777, 0.96", "-1.50958, -95.7772, 9.32536, 0.96", "-1.59676, -97.1267, 9.43547, 0.96", "-1.75892, -98.6503, 9.55176, 0.96", "-1.96867, -100.415, 9.66347, 0.96", "-2.18297, -102.137, 9.79417, 0.74", "-2.3474, -103.48, 9.90858, 0.74", "-2.5525, -105.168, 10.062, 0.74", "-2.76709, -107.13, 10.2285, 0.74", "-2.89157, -108.58, 10.3621, 0.74", "-3.02634, -110.314, 10.5171, 0.74", "-3.1143, -111.612, 10.6408, 0.74", "-3.13752, -112.329, 10.719, 0.74", "-3.14495, -113.543, 10.8826, 0.74", "-3.11351, -114.892, 11.0853, 0.74", "-3.07771, -116.599, 11.3495, 0.74", "-3.04281, -117.853, 11.53, 0.74", "-2.97723, -119.274, 11.7367, 0.74", "-2.92246, -120.218, 11.8662, 0.74", "-2.84503, -121.352, 12.0026, 0.74", "-2.74324, -122.485, 12.1032, 0.74", "-2.60589, -123.536, 12.1879, 0.74", "-2.39017, -124.787, 12.2702, 0.74", "-2.19494, -125.816, 12.3247, 0.74", "-1.98664, -126.792, 12.3538, 0.74", "-1.62949, -128.252, 12.4003, 0.74", "-1.48717, -128.789, 12.4172, 0.74", "-1.43205, -129.001, 12.4224, 0.74" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "39.1207, 44.8017, -0.446093, 0.37", "39.7379, 45.2945, -1.67168, 0.37", "40.2568, 45.7154, -2.52167, 0.37", "41.0087, 46.3631, -3.60864, 0.74", "41.5033, 46.8154, -4.27657, 0.88", "41.9306, 47.2616, -4.81686, 0.88", "42.4427, 47.8486, -5.46511, 0.22", "42.9121, 48.4598, -6.008, 0.22", "43.4864, 49.2729, -6.62042, 0.22", "44.0089, 50.1132, -7.14259, 0.22", "44.5959, 51.1921, -7.75981, 1.11", "44.8852, 51.8089, -8.08992, 1.47", "45.036, 52.1807, -8.29944, 1.47", "45.3638, 53.0359, -8.7882, 0.22", "45.5122, 53.428, -9.00468, 0.59", "45.688, 53.8754, -9.25277, 0.59", "45.9799, 54.5188, -9.60856, 0.44", "46.3326, 55.2193, -9.95716, 0.88", "46.6917, 55.8319, -10.2592, 0.88", "47.1377, 56.5265, -10.595, 0.29", "47.5433, 57.1031, -10.871, 0.29", "48.2476, 57.9898, -11.2822, 0.88", "48.5466, 58.3147, -11.4307, 1.18", "49.5249, 59.2609, -11.8436, 0.37", "49.9638, 59.6471, -12.0185, 0.37", "50.4169, 60.0293, -12.1872, 0.96", "50.9884, 60.5028, -12.3922, 0.96", "51.5576, 60.9665, -12.5944, 0.96", "52.0351, 61.361, -12.7607, 0.66", "52.8016, 62.0187, -13.0649, 0.22", "53.4349, 62.5926, -13.3763, 0.22", "53.8869, 63.031, -13.6453, 0.81", "54.117, 63.2809, -13.8108, 1.03", "54.3415, 63.5493, -13.995, 1.03", "55.0993, 64.493, -14.6417, 0.22", "55.5823, 65.0726, -15.0691, 0.88", "55.7962, 65.3174, -15.2604, 1.18", "56.1219, 65.6762, -15.5668, 1.18", "56.6606, 66.2636, -16.0978, 0.22", "57.2532, 66.92, -16.6958, 0.22", "57.6563, 67.3802, -17.1181, 0.22", "58.039, 67.8597, -17.5866, 0.96", "58.4603, 68.457, -18.1814, 1.33", "58.9957, 69.3546, -19.0671, 0.52", "59.2587, 69.9779, -19.6666, 0.44", "59.462, 70.6783, -20.3162, 0.37", "59.6783, 71.6613, -21.1625, 0.96", "59.7833, 72.1986, -21.5794, 0.96", "59.9548, 73.1216, -22.2005, 0.22", "60.2287, 74.5893, -23.0818, 1.11", "60.3324, 75.0706, -23.3605, 1.33", "60.462, 75.6021, -23.6435, 0.37", "60.7795, 76.6008, -24.1466, 0.15", "60.9969, 77.131, -24.4391, 0.96", "61.2597, 77.6296, -24.7315, 0.96", "61.8555, 78.5694, -25.3575, 0.22", "62.374, 79.3208, -25.8948, 0.59", "62.9446, 80.0959, -26.5146, 0.22", "63.4553, 80.7337, -27.0463, 0.22", "63.888, 81.2471, -27.4675, 0.59", "64.5398, 81.9682, -28.0216, 0.59", "65.284, 82.7379, -28.5444, 0.22", "65.8369, 83.289, -28.931, 0.22", "66.4925, 83.9465, -29.4037, 0.88", "66.7317, 84.1918, -29.5903, 1.25", "67.7954, 85.2993, -30.5405, 0.22", "68.2976, 85.8285, -31.0286, 0.22", "69.0413, 86.6485, -31.8966, 0.88", "69.3988, 87.1145, -32.4391, 1.03", "69.9933, 88.0359, -33.5929, 0.22", "70.3439, 88.7052, -34.4513, 0.22", "70.6329, 89.4742, -35.4653, 1.33", "70.7827, 90.0422, -36.2147, 1.47", "70.9984, 91.4185, -38.009, 0.22", "71.0255, 91.9353, -38.7037, 0.22", "70.9906, 92.6276, -39.6505, 0.52", "70.9098, 93.2445, -40.5154, 0.52", "70.8307, 93.6807, -41.1329, 0.22", "70.6643, 94.6189, -42.4398, 0.59", "70.4987, 95.6274, -43.8102, 0.88", "70.4208, 96.1253, -44.4736, 0.88", "70.339, 96.8204, -45.3671, 0.59", "70.2963, 97.4548, -46.1439, 0.22", "70.2803, 98.4682, -47.3307, 0.59", "70.2923, 98.9893, -47.9209, 0.22", "70.3182, 99.4579, -48.4491, 0.22", "70.4308, 100.449, -49.6413, 0.66", "70.5274, 101.046, -50.3705, 0.81", "70.6457, 101.655, -51.1486, 0.29", "70.8862, 102.624, -52.4174, 0.88", "70.9695, 102.907, -52.7969, 0.88", "71.3032, 103.819, -53.9958, 0.29", "71.4907, 104.23, -54.5295, 0.29", "71.8228, 104.849, -55.3113, 0.29", "72.2673, 105.605, -56.1616, 0.59", "72.4771, 105.964, -56.5287, 0.59", "72.9332, 106.819, -57.3166, 0.29", "73.286, 107.563, -57.8951, 0.52", "73.5144, 108.081, -58.2265, 0.52", "73.9534, 109.125, -58.783, 0.29", "74.9017, 111.367, -59.8354, 0.15", "75.2229, 112.1, -60.1702, 0.88", "75.6061, 112.963, -60.5757, 1.11", "76.2313, 114.319, -61.2544, 0.15", "76.8228, 115.523, -61.9359, 0.59", "77.6937, 117.116, -63.0068, 0.15", "78.2505, 118.036, -63.702, 0.66", "78.6939, 118.732, -64.3115, 0.66", "79.2582, 119.6, -65.1586, 0.22", "79.6521, 120.183, -65.7598, 0.22", "80.2747, 121.11, -66.6654, 0.59", "81.065, 122.295, -67.7409, 0.22", "81.4423, 122.864, -68.21, 0.52", "81.7057, 123.269, -68.5204, 0.52", "82.2384, 124.13, -69.1481, 0.22", "83.0019, 125.461, -70.0396, 0.22", "83.7383, 126.832, -70.9134, 1.03", "83.9596, 127.274, -71.1906, 1.03", "84.6197, 128.708, -72.0511, 0.15", "84.9422, 129.477, -72.4778, 0.15", "85.189, 130.147, -72.837, 0.81", "85.2972, 130.507, -72.9967, 0.81", "85.6794, 132.006, -73.5201, 0.22", "85.9238, 132.939, -73.7865, 0.37", "86.1882, 133.904, -74.0052, 0.22", "86.4176, 134.676, -74.1719, 0.44", "87.0763, 136.694, -74.6003, 0.22", "87.4172, 137.633, -74.7849, 0.44", "87.6886, 138.339, -74.9072, 0.22", "87.8836, 138.811, -74.993, 0.29", "88.1025, 139.31, -75.0801, 0.29", "88.4325, 139.935, -75.1615, 0.22", "88.9265, 140.471, -75.3072, 0.29" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "39.1207, 44.8017, -0.446093, 0.37", "40.3152, 45.2378, -0.365469, 0.37", "41.2185, 45.5795, -0.227341, 0.37", "42.0163, 45.8738, -0.0689021, 0.44", "42.5864, 46.0804, 0.0572821, 0.44", "43.6922, 46.4809, 0.341804, 0.44", "45.1127, 47.001, 0.744979, 0.81", "45.534, 47.1646, 0.908771, 0.88", "46.169, 47.4225, 1.21896, 0.88", "46.5007, 47.5718, 1.41033, 0.96", "47.0703, 47.8604, 1.75864, 0.74", "47.5001, 48.1054, 2.01835, 0.66", "48.1714, 48.481, 2.35294, 0.66", "48.9049, 48.8679, 2.66706, 0.52", "49.6166, 49.2311, 2.9413, 0.52", "50.5689, 49.6881, 3.25491, 1.18", "50.9174, 49.8485, 3.34426, 1.55", "51.7812, 50.2185, 3.52172, 1.55", "52.6263, 50.5574, 3.66028, 0.81", "53.713, 50.9725, 3.80629, 0.44", "54.3282, 51.191, 3.88333, 0.44", "55.3941, 51.5675, 4.02811, 1.55", "55.9511, 51.7789, 4.11014, 1.69", "56.3212, 51.9408, 4.17099, 1.69" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-26.4143, -113.994, -0.787662, 0.52", "-26.6921, -115.229, -1.64376, 0.52", "-26.8116, -115.955, -2.14771, 0.52", "-26.8313, -117.021, -2.84576, 0.52", "-26.778, -118.082, -3.53552, 0.52", "-26.6796, -119.188, -4.26526, 0.52", "-26.6106, -119.819, -4.7002, 0.52", "-26.4978, -120.537, -5.25206, 0.52", "-26.2036, -122.019, -6.61579, 0.52", "-26.0936, -122.54, -7.13012, 0.44", "-25.9546, -123.214, -7.85709, 0.44", "-25.8237, -123.903, -8.65116, 0.44", "-25.6978, -124.731, -9.59297, 0.44", "-25.5523, -126.515, -11.6201, 0.44", "-25.5543, -127.167, -12.3692, 0.44", "-25.5847, -127.885, -13.147, 0.44", "-25.627, -128.412, -13.6684, 0.44", "-25.7637, -129.547, -14.6639, 0.44", "-25.9124, -130.426, -15.3532, 0.44", "-26.1943, -131.647, -16.1756, 0.44", "-26.4778, -132.56, -16.8353, 0.44", "-26.7525, -133.26, -17.3496, 0.44", "-26.9623, -133.738, -17.7389, 0.44", "-27.2497, -134.389, -18.2497, 0.44", "-27.4175, -134.873, -18.5931, 0.44", "-27.7059, -135.931, -19.2657, 0.44", "-27.7933, -136.309, -19.5079, 0.44", "-28.0967, -137.623, -20.3659, 0.44", "-28.4265, -139.133, -21.378, 0.44", "-28.7485, -140.608, -22.3581, 0.44", "-28.9829, -141.635, -23.0853, 0.44", "-29.1825, -142.371, -23.6431, 0.44", "-29.5017, -143.312, -24.4557, 0.44", "-30.0157, -144.575, -25.6792, 0.44", "-30.305, -145.212, -26.3981, 0.44", "-30.6822, -145.957, -27.301, 0.44", "-31.0248, -146.646, -28.2104, 0.44", "-31.3706, -147.423, -29.265, 0.44", "-31.5243, -147.844, -29.8584, 0.44", "-31.6078, -148.064, -30.184, 0.44", "-31.6379, -148.16, -30.3219, 0.44", "-31.7377, -148.562, -30.8417, 0.44", "-31.8043, -148.916, -31.2838, 0.44", "-31.8527, -149.325, -31.7573, 0.44", "-31.9315, -150.351, -32.8388, 0.44", "-31.9604, -151.088, -33.5246, 0.44", "-31.9589, -151.317, -33.7036, 0.44", "-31.9456, -151.607, -33.8966, 0.44", "-31.9053, -152.42, -34.3395, 0.44", "-31.864, -153.123, -34.7061, 0.44", "-31.8079, -153.941, -35.1308, 0.44", "-31.8143, -154.584, -35.4483, 0.44", "-31.8479, -155.408, -35.8258, 0.44", "-31.9349, -156.288, -36.2912, 0.44", "-32.0645, -157.316, -36.9678, 0.44", "-32.1591, -158.318, -37.7379, 0.44", "-32.2512, -159.879, -38.9913, 0.44", "-32.28, -160.873, -39.7629, 0.44", "-32.2476, -162.895, -41.2141, 0.44", "-32.1123, -164.843, -42.4299, 0.44", "-31.9465, -166.445, -43.2694, 0.44", "-31.8123, -167.617, -43.887, 0.44", "-31.6077, -169.444, -44.8586, 0.44", "-31.4897, -170.723, -45.5141, 0.44", "-31.2821, -173.052, -46.5893, 0.44", "-31.2276, -173.917, -46.9698, 0.44", "-31.1038, -177.547, -48.6677, 0.44", "-31.0898, -178.188, -49.0038, 0.37", "-31.0757, -179.189, -49.5973, 0.37", "-31.0672, -179.926, -50.0834, 0.29", "-31.0136, -181.236, -50.9752, 0.29", "-30.9541, -181.83, -51.3641, 0.29", "-30.7516, -183.007, -52.01, 0.29", "-30.5533, -184.038, -52.5607, 0.29", "-30.3206, -185.3, -53.1852, 0.29", "-30.1428, -186.418, -53.694, 0.29", "-29.9588, -187.725, -54.2397, 0.29", "-29.8325, -188.774, -54.6846, 0.29", "-29.765, -189.503, -54.9886, 0.29", "-29.7067, -190.35, -55.3693, 0.29", "-29.6393, -191.315, -55.8214, 0.29", "-29.6006, -191.944, -56.1396, 0.29", "-29.5017, -193.493, -56.9395, 0.29", "-29.4621, -193.982, -57.2572, 0.29", "-29.337, -195.14, -58.1879, 0.29", "-29.2566, -195.678, -58.742, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-26.4143, -113.994, -0.787662, 0.52", "-26.5745, -114.831, -0.837026, 0.52", "-26.74, -115.999, -0.902384, 0.52", "-26.8243, -116.915, -0.948087, 0.52", "-26.9772, -119.123, -1.0503, 0.52", "-27.0673, -120.753, -1.12054, 0.52", "-27.1169, -121.98, -1.17507, 0.52", "-27.1265, -123.917, -1.26899, 0.52", "-27.107, -125.713, -1.35244, 0.52", "-27.1018, -126.277, -1.3901, 0.52", "-27.1131, -127.132, -1.4729, 0.52", "-27.2028, -128.838, -1.68486, 0.52", "-27.3623, -130.168, -1.90967, 0.52", "-27.6166, -131.28, -2.16073, 0.52", "-27.8826, -132.104, -2.37659, 0.52", "-28.1456, -132.796, -2.5764, 0.52", "-28.5115, -133.622, -2.83714, 0.52", "-29.0547, -134.651, -3.18759, 0.52", "-29.827, -135.936, -3.63875, 0.52", "-30.2355, -136.563, -3.84556, 0.52", "-30.7902, -137.39, -4.11546, 0.52", "-31.3404, -138.196, -4.36759, 0.52", "-31.7896, -138.853, -4.56717, 0.52", "-32.4024, -139.689, -4.79923, 0.52", "-33.1609, -140.604, -5.10134, 0.52", "-33.7409, -141.222, -5.3288, 0.52", "-34.6397, -142.124, -5.68168, 0.52", "-35.0761, -142.569, -5.87309, 0.52", "-36.0303, -143.582, -6.35182, 0.52", "-36.9231, -144.581, -6.8608, 0.52", "-37.6745, -145.478, -7.34723, 0.52", "-38.2899, -146.265, -7.7672, 0.52", "-38.8518, -147.061, -8.19231, 0.52", "-39.3348, -147.888, -8.62588, 0.52", "-39.6988, -148.745, -9.04199, 0.52", "-39.9315, -149.466, -9.33332, 0.52", "-40.1943, -150.399, -9.66945, 0.52", "-40.3934, -151.139, -9.88853, 0.52", "-40.7203, -152.376, -10.1576, 0.52", "-41.0233, -153.618, -10.3794, 0.52", "-41.3455, -155.004, -10.5885, 0.52", "-41.5671, -156.05, -10.7296, 0.52", "-41.8485, -157.515, -10.9039, 0.52", "-42.2772, -159.832, -11.1343, 0.52", "-42.5118, -161.225, -11.2361, 0.52", "-42.6694, -162.285, -11.3024, 0.52", "-43.0058, -164.437, -11.43, 0.52", "-43.326, -166.365, -11.5307, 0.52", "-43.549, -167.605, -11.5974, 0.52", "-43.9272, -169.575, -11.6995, 0.52", "-44.4038, -171.858, -11.7651, 0.52", "-44.822, -173.701, -11.7975, 0.52", "-45.2388, -175.433, -11.8405, 0.52", "-45.4929, -176.5, -11.8848, 0.52", "-45.7549, -177.614, -11.9437, 0.52", "-46.0178, -178.767, -12.0303, 0.52", "-46.213, -179.744, -12.1185, 0.52", "-46.5372, -181.531, -12.2882, 0.52", "-46.8483, -183.229, -12.4558, 0.52", "-47.2689, -185.398, -12.6623, 0.52", "-47.4857, -186.47, -12.7695, 0.52", "-47.817, -188.067, -12.945, 0.52", "-48.1503, -189.628, -13.0873, 0.52", "-48.4329, -190.891, -13.1684, 0.52", "-48.5881, -191.556, -13.2104, 0.52", "-48.8546, -192.688, -13.2745, 0.52", "-49.0089, -193.349, -13.3, 0.52", "-49.1859, -194.239, -13.3168, 0.52", "-49.3548, -195.15, -13.2935, 0.52", "-49.6298, -196.666, -13.1954, 0.52", "-49.7128, -197.154, -13.1469, 0.52", "-49.871, -198.074, -13.0207, 0.52", "-50.2269, -199.959, -12.7051, 0.52", "-50.4455, -200.994, -12.5096, 0.52", "-50.589, -201.615, -12.3999, 0.52", "-50.8099, -202.481, -12.2649, 0.52", "-51.1327, -203.672, -12.1375, 0.52", "-51.4128, -204.663, -12.0925, 0.52", "-51.751, -205.856, -12.1255, 0.52", "-51.984, -206.813, -12.2006, 0.52", "-52.1801, -207.74, -12.303, 0.52", "-52.3591, -208.783, -12.4597, 0.52", "-52.5043, -209.71, -12.6157, 0.52", "-52.6551, -210.679, -12.7924, 0.52", "-52.9386, -212.344, -13.1142, 0.52", "-53.1559, -213.485, -13.3223, 0.52", "-53.3718, -214.512, -13.5304, 0.52", "-53.6981, -215.774, -13.8001, 0.52", "-54.0632, -216.982, -14.0813, 0.52", "-54.3616, -217.829, -14.2984, 0.52", "-54.6775, -218.621, -14.4709, 0.52", "-55.0038, -219.41, -14.5895, 0.52", "-55.2982, -220.169, -14.6495, 0.52", "-55.624, -221.137, -14.6702, 0.52", "-56.0019, -222.308, -14.6297, 0.52", "-56.4369, -223.633, -14.5417, 0.52", "-56.8494, -224.8, -14.4471, 0.52", "-57.2839, -225.94, -14.3439, 0.52", "-57.7029, -227.014, -14.2471, 0.52", "-58.2871, -228.406, -14.1275, 0.52", "-58.8037, -229.584, -14.0456, 0.52", "-59.3633, -230.794, -14.0034, 0.52", "-59.9382, -231.961, -13.9514, 0.52", "-60.4273, -232.866, -13.9036, 0.52", "-60.8742, -233.687, -13.8803, 0.52", "-61.3174, -234.537, -13.8753, 0.52", "-61.6144, -235.141, -13.8838, 0.52", "-61.7986, -235.543, -13.9044, 0.52", "-62.6719, -237.492, -14.0847, 0.52", "-63.5332, -239.327, -14.2367, 0.52", "-63.9779, -240.27, -14.2975, 0.52", "-64.3527, -241.064, -14.3316, 0.52", "-64.8471, -242.131, -14.3539, 0.52", "-65.3128, -243.153, -14.3509, 0.52", "-66.1464, -245.047, -14.2675, 0.52", "-66.4401, -245.696, -14.1911, 0.52", "-66.6804, -246.237, -14.1015, 0.52", "-67.1092, -247.228, -13.866, 0.52", "-67.2476, -247.568, -13.7596, 0.52", "-67.5697, -248.483, -13.4505, 0.52", "-67.7646, -249.103, -13.259, 0.52", "-67.9644, -249.683, -13.0791, 0.52", "-68.2396, -250.409, -12.8702, 0.52", "-68.6744, -251.433, -12.5722, 0.52", "-68.9848, -252.088, -12.3918, 0.52", "-69.3703, -252.872, -12.2051, 0.52", "-69.7215, -253.606, -12.0714, 0.52", "-70.2534, -254.707, -11.9213, 0.52", "-70.5579, -255.337, -11.8534, 0.52", "-70.8797, -256.005, -11.7852, 0.52", "-71.3978, -257.11, -11.6736, 0.52", "-71.8198, -258.089, -11.5731, 0.52", "-72.2653, -259.274, -11.4532, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-35.0591, -194.771, 37.4173, 0.44", "-36.0168, -196.254, 36.3776, 0.44", "-36.2847, -196.95, 35.9964, 0.44", "-36.3674, -197.529, 35.7697, 0.44", "-36.3484, -198.227, 35.5767, 0.44", "-36.2148, -199.133, 35.4191, 0.44", "-36.0842, -199.775, 35.3481, 0.44", "-35.8253, -200.669, 35.3317, 0.44", "-35.351, -201.993, 35.3551, 0.44", "-34.915, -203.01, 35.404, 0.44", "-34.2743, -204.424, 35.505, 0.44", "-33.6754, -205.677, 35.6079, 0.44", "-33.2603, -206.528, 35.6919, 0.44", "-32.7929, -207.482, 35.8125, 0.44", "-32.4083, -208.266, 35.9092, 0.44", "-29.3894, -217.56, 36.0528, 0.44" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-35.0591, -194.771, 37.4173, 0.52", "-35.8431, -196.241, 37.9466, 0.52", "-36.0722, -196.67, 38.1013, 0.52", "-36.4979, -197.468, 38.3887, 0.44", "-36.8882, -198.2, 38.6522, 0.44", "-37.3256, -199.02, 38.9475, 0.44", "-37.8435, -199.991, 39.2972, 0.44", "-40.5336, -209.127, 41.5274, 0.44" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-1.43205, -129.001, 12.4224, 0.44", "-0.1531, -133.87, 15.1556, 0.44", "0.252915, -135.218, 15.6934, 0.44", "0.497949, -135.894, 15.8786, 0.44", "0.91737, -136.99, 16.0426, 0.44", "1.36334, -138.166, 16.1212, 0.44", "1.64691, -138.945, 16.1272, 0.44", "1.96378, -139.827, 15.9371, 0.44", "2.44685, -141.263, 15.6448, 0.44", "2.88759, -142.761, 15.3312, 0.44", "3.0721, -143.497, 15.1659, 0.44", "3.31997, -144.682, 14.8864, 0.44", "3.59419, -146.171, 14.512, 0.44", "3.73429, -147.073, 14.2873, 0.44", "3.82043, -147.687, 14.1359, 0.44", "4.05917, -149.238, 13.8088, 0.44", "4.29201, -150.617, 13.5679, 0.44", "4.48701, -151.769, 13.3849, 0.44", "4.64602, -152.859, 13.2458, 0.44", "4.72739, -153.523, 13.183, 0.44", "4.93622, -155.457, 13.0558, 0.44", "5.11628, -157.551, 12.9719, 0.44", "5.23504, -159.154, 12.9502, 0.44", "5.34913, -160.927, 12.966, 0.44", "5.4208, -162.029, 12.9902, 0.44", "5.52255, -163.648, 13.0456, 0.44", "5.5926, -164.799, 13.098, 0.44", "5.69913, -166.64, 13.2045, 0.44", "5.75495, -167.836, 13.2885, 0.44", "5.84241, -169.615, 13.4056, 0.44", "5.91621, -171.094, 13.5189, 0.44", "5.94621, -171.906, 13.5859, 0.44", "5.99355, -172.911, 13.6788, 0.44", "6.03148, -174.415, 13.8339, 0.44", "6.04122, -175.982, 14.0342, 0.44", "6.04164, -177.277, 14.2314, 0.44", "6.03878, -178.265, 14.4037, 0.44", "6.0457, -179.06, 14.5546, 0.44", "6.06739, -180.314, 14.8374, 0.44", "6.08129, -181.168, 15.056, 0.44", "6.07029, -181.733, 15.2037, 0.44", "6.05409, -182.395, 15.3589, 0.44", "6.04366, -183.331, 15.5829, 0.44", "6.06352, -184.576, 15.8537, 0.44", "6.10927, -185.559, 16.064, 0.44", "6.21687, -187.035, 16.3247, 0.44", "6.34201, -188.233, 16.4995, 0.44", "6.58965, -190.105, 16.7136, 0.44", "6.87391, -191.936, 16.8688, 0.44", "7.06795, -192.994, 16.9222, 0.44", "7.41778, -194.697, 16.9712, 0.44", "7.63449, -195.639, 16.9677, 0.44", "7.9429, -196.779, 16.9093, 0.44", "8.28824, -197.881, 16.796, 0.44", "8.52211, -198.596, 16.7235, 0.44", "8.72935, -199.218, 16.6708, 0.44", "9.15787, -200.514, 16.6051, 0.44", "9.61225, -201.829, 16.5742, 0.44", "10.2124, -203.363, 16.5782, 0.44", "10.7344, -204.598, 16.6124, 0.44", "11.5335, -206.391, 16.7154, 0.44", "11.762, -206.891, 16.7562, 0.44", "12.1544, -207.742, 16.8482, 0.44", "12.7089, -208.925, 17.0043, 0.44", "13.6402, -210.782, 17.2545, 0.44", "14.0291, -211.52, 17.346, 0.44", "14.6468, -212.654, 17.474, 0.44", "15.3137, -213.82, 17.6067, 0.37", "16.2695, -215.405, 17.8039, 0.37", "17.2675, -216.971, 18.0257, 0.37", "18.3773, -218.631, 18.2989, 0.37", "19.3071, -219.983, 18.5364, 0.37", "19.9322, -220.882, 18.7089, 0.37", "21.0751, -222.532, 19.0431, 0.37", "21.774, -223.584, 19.2709, 0.37", "22.7795, -225.128, 19.657, 0.37", "23.4642, -226.213, 19.9736, 0.37", "23.9223, -226.965, 20.207, 0.37", "24.279, -227.593, 20.3948, 0.37", "24.7066, -228.373, 20.6327, 0.37", "25.2354, -229.326, 20.9498, 0.37", "25.5882, -229.897, 21.1519, 0.37", "26.0012, -230.523, 21.3801, 0.37", "26.4201, -231.073, 21.5893, 0.37", "26.7787, -231.508, 21.7532, 0.37", "27.3602, -232.202, 21.9978, 0.37", "27.9416, -232.971, 22.2486, 0.37", "28.367, -233.562, 22.4477, 0.37", "28.7331, -234.094, 22.6655, 0.37", "29.1147, -234.654, 22.9379, 0.37", "29.3706, -235.073, 23.1625, 0.37", "29.7041, -235.674, 23.4855, 0.37", "30.0668, -236.421, 23.8641, 0.37", "30.2989, -236.938, 24.1046, 0.37", "30.8396, -238.247, 24.6776, 0.29", "31.2765, -239.409, 25.1449, 0.37", "31.5577, -240.199, 25.4188, 0.37", "31.8503, -241.121, 25.6926, 0.37", "32.0753, -241.907, 25.8814, 0.37", "32.3198, -242.846, 26.0645, 0.37", "32.5584, -243.893, 26.2412, 0.37", "32.8151, -244.972, 26.4162, 0.37", "33.0844, -246.043, 26.6014, 0.37", "33.3671, -246.971, 26.7533, 0.37", "33.6261, -247.819, 26.8826, 0.37", "33.9184, -248.809, 27.0058, 0.37", "34.1603, -249.693, 27.1193, 0.37", "34.5374, -251.306, 27.3175, 0.37", "35.0426, -253.607, 27.598, 0.37", "35.2373, -254.414, 27.6563, 0.37", "35.7551, -256.277, 27.6782, 0.37", "36.1712, -257.506, 27.6211, 0.37", "36.5131, -258.45, 27.5411, 0.37", "37.0602, -259.698, 27.3873, 0.37", "38.1485, -261.771, 27.0867, 0.37", "38.6007, -262.53, 26.9792, 0.37", "39.3665, -263.723, 26.8157, 0.37", "40.2857, -265.291, 26.6784, 0.37", "40.8209, -266.371, 26.6483, 0.37", "41.258, -267.48, 26.6647, 0.37", "41.7072, -268.912, 26.7434, 0.37", "42.0257, -270.043, 26.8057, 0.37", "42.7087, -272.655, 26.9272, 0.37", "43.5855, -276.034, 27.0635, 0.37", "44.0424, -277.91, 27.1514, 0.37", "44.4542, -279.657, 27.2399, 0.37", "44.8218, -281.277, 27.3362, 0.37", "45.1833, -283.0, 27.4516, 0.37", "45.481, -284.574, 27.5673, 0.37", "45.6938, -285.884, 27.6906, 0.37", "45.9176, -287.364, 27.8458, 0.37", "46.1567, -289.1, 28.0397, 0.37", "46.3759, -291.144, 28.2735, 0.37", "46.5484, -293.198, 28.4987, 0.37", "46.5902, -293.929, 28.5693, 0.37", "46.6109, -294.656, 28.6304, 0.37", "46.5851, -296.057, 28.7454, 0.37", "46.5023, -297.709, 28.8729, 0.37", "46.4059, -298.784, 28.9565, 0.37", "46.266, -300.184, 29.0901, 0.37", "46.1619, -301.042, 29.1773, 0.37", "45.9515, -302.587, 29.3652, 0.37", "45.758, -303.624, 29.4833, 0.37", "45.3596, -305.293, 29.6293, 0.37", "44.8077, -307.594, 29.8349, 0.37", "44.382, -309.424, 29.9974, 0.37", "43.9251, -311.429, 30.1631, 0.37", "43.4299, -313.44, 30.3167, 0.37", "42.9272, -315.005, 30.4146, 0.37", "45.566, -324.389, 31.036, 0.37" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-1.43205, -129.001, 12.4224, 0.74", "-1.55634, -129.661, 12.3692, 0.74", "-1.70441, -131.125, 12.2815, 0.74", "-1.83055, -132.368, 12.2917, 0.74", "-1.97686, -133.648, 12.3909, 0.74", "-2.06656, -134.356, 12.4855, 0.74", "-2.3295, -136.478, 12.8173, 0.74", "-2.46646, -138.025, 13.1534, 0.74", "-2.53861, -139.524, 13.5595, 0.74", "-2.54749, -140.793, 13.9327, 0.74", "-2.52838, -141.722, 14.2271, 0.74", "-2.50088, -142.77, 14.5583, 0.74", "-2.45725, -144.657, 15.1157, 0.74", "-2.44724, -145.417, 15.3101, 0.74", "-2.41901, -146.89, 15.6257, 0.74", "-2.43112, -148.332, 15.8976, 0.74", "-2.48653, -149.739, 16.1444, 0.74", "-2.64146, -151.532, 16.4501, 0.74", "-2.73094, -152.46, 16.5774, 0.66", "-2.90883, -154.205, 16.7815, 0.66", "-3.03567, -155.508, 16.9028, 0.66", "-3.10133, -156.353, 16.9751, 0.66", "-3.13071, -157.319, 17.0401, 0.66", "-3.08629, -159.566, 17.2147, 0.66", "-2.93193, -161.258, 17.3843, 0.66", "-2.75658, -162.25, 17.5082, 0.66", "-2.42574, -163.54, 17.7429, 0.66", "-2.09128, -164.648, 17.9933, 0.66", "-1.63961, -166.036, 18.7915, 0.66", "-1.27898, -167.072, 19.5301, 0.66", "-0.810739, -168.243, 20.5123, 0.66", "-0.371286, -169.332, 21.5685, 0.66", "-0.224287, -169.706, 21.9925, 0.66", "1.26017, -173.882, 27.7727, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "56.3212, 51.9408, 4.17099, 0.29", "58.0533, 52.8175, 4.07717, 0.29", "58.7063, 53.1207, 4.04504, 0.29", "59.343, 53.3858, 4.0175, 0.29", "60.2116, 53.7367, 3.97312, 0.66", "60.9107, 54.0185, 3.96802, 0.66", "62.0361, 54.4728, 3.99828, 0.37", "62.6631, 54.7094, 4.05544, 0.37", "63.5055, 55.0085, 4.16135, 0.37", "64.1206, 55.2046, 4.24921, 0.37", "65.3781, 55.5806, 4.4512, 0.96", "65.9671, 55.7584, 4.55136, 0.96", "66.3537, 55.8803, 4.62792, 0.96", "67.3078, 56.207, 4.83675, 0.44", "67.7106, 56.3578, 4.93164, 0.44", "68.492, 56.6482, 5.10824, 0.29", "69.303, 56.9635, 5.2638, 0.59", "69.9435, 57.2302, 5.39354, 0.59", "70.9313, 57.6772, 5.60946, 0.44", "71.7855, 58.083, 5.80565, 0.66", "72.4534, 58.3904, 5.95847, 0.66", "72.9682, 58.6152, 6.05863, 0.66", "73.6389, 58.9015, 6.17368, 0.96", "74.4746, 59.2483, 6.27116, 0.96", "75.6499, 59.7206, 6.34179, 0.29", "76.7538, 60.1667, 6.3684, 0.29", "77.5545, 60.5215, 6.36743, 0.74", "78.2552, 60.8551, 6.34648, 0.29", "78.8697, 61.1771, 6.30979, 0.29", "79.4729, 61.5299, 6.26125, 0.29", "80.1209, 61.9534, 6.20262, 0.29", "80.8282, 62.4026, 6.14902, 1.03", "81.2043, 62.6173, 6.13513, 1.18", "81.7657, 62.8901, 6.11116, 1.18", "82.3445, 63.1261, 6.13057, 0.59", "83.1815, 63.4221, 6.21048, 0.37", "84.3062, 63.7582, 6.35429, 0.37", "85.1033, 63.9627, 6.47893, 0.81", "85.7798, 64.1293, 6.60109, 0.52", "87.1376, 64.4545, 6.87766, 0.29", "87.7975, 64.6305, 7.02556, 0.29", "88.8294, 64.9686, 7.27272, 0.59", "89.4229, 65.2205, 7.40719, 0.59", "90.0096, 65.5002, 7.52068, 0.59", "90.6709, 65.8442, 7.6161, 0.59", "91.314, 66.1908, 7.66724, 0.29", "91.9565, 66.5367, 7.7216, 0.29", "93.1387, 67.1591, 7.83714, 0.44", "93.6998, 67.4402, 7.89227, 0.88", "94.5059, 67.8093, 7.94096, 0.74", "95.5771, 68.2284, 7.92481, 1.11", "96.1464, 68.4171, 7.87902, 1.11", "97.4676, 68.7798, 7.67894, 0.29", "98.147, 68.9178, 7.53705, 0.29", "99.2963, 69.1193, 7.23792, 0.29", "100.724, 69.3362, 6.80228, 0.74", "101.349, 69.4288, 6.57174, 0.96", "102.168, 69.5592, 6.24733, 0.74", "103.456, 69.795, 5.71775, 0.22", "104.223, 69.9472, 5.42796, 0.22", "105.192, 70.1566, 5.12997, 0.66", "106.082, 70.3563, 4.9106, 0.66", "106.901, 70.5403, 4.73741, 0.22", "107.408, 70.6703, 4.64145, 0.22", "107.826, 70.7863, 4.56697, 0.66", "108.611, 71.0053, 4.45639, 0.74", "109.237, 71.1982, 4.38618, 0.96", "109.962, 71.4319, 4.32811, 0.96", "110.543, 71.6399, 4.27759, 0.44", "111.243, 71.9098, 4.2152, 0.44", "112.243, 72.3309, 4.11331, 0.81", "112.634, 72.5062, 4.05306, 0.81", "113.378, 72.8238, 3.91502, 0.52", "113.816, 72.9957, 3.82726, 0.52", "114.696, 73.295, 3.65465, 0.88", "115.454, 73.5166, 3.506, 1.03", "116.66, 73.799, 3.27251, 0.29", "117.664, 73.9734, 3.08911, 0.29", "118.532, 74.0952, 2.93435, 0.29", "119.697, 74.2393, 2.72506, 0.44", "120.331, 74.3309, 2.60579, 0.44", "120.83, 74.4381, 2.49747, 0.22", "121.627, 74.7529, 2.26365, 0.22", "122.04, 75.0451, 2.06264, 0.74", "122.444, 75.4604, 1.75197, 0.88", "122.937, 76.1016, 1.27778, 0.66", "123.491, 76.8733, 0.672293, 0.52", "124.059, 77.6652, -2.92296E-4, 0.96", "124.392, 78.1159, -0.410066, 1.4", "125.004, 78.8508, -1.1304, 1.11", "125.502, 79.3753, -1.71158, 0.59", "126.248, 80.0858, -2.5547, 0.52", "126.867, 80.6451, -3.2479, 0.44", "127.194, 80.9365, -3.61792, 0.44", "127.732, 81.4115, -4.22425, 0.37", "128.451, 82.0241, -5.02501, 0.74", "129.023, 82.4941, -5.66884, 1.03", "129.701, 83.0247, -6.37845, 1.18", "130.147, 83.3285, -6.78892, 1.18", "130.74, 83.6669, -7.30494, 0.66", "131.826, 84.1659, -8.24248, 0.44", "132.462, 84.405, -8.75118, 0.44", "133.062, 84.5846, -9.2368, 0.44", "134.089, 84.8605, -10.0409, 0.96", "135.269, 85.1919, -10.9226, 0.96", "136.204, 85.4755, -11.574, 0.88", "136.897, 85.7167, -12.0298, 0.29", "137.631, 86.0028, -12.5056, 0.29", "138.335, 86.3423, -12.9534, 0.29", "139.09, 86.7954, -13.3986, 0.88", "139.596, 87.1245, -13.6494, 0.88", "140.24, 87.5448, -13.944, 0.88", "140.977, 88.0034, -14.29, 0.66", "141.813, 88.5195, -14.6934, 0.29", "142.552, 88.9705, -15.0911, 0.81", "142.932, 89.2139, -15.3161, 0.81", "143.348, 89.5099, -15.5806, 0.81", "143.733, 89.8098, -15.8158, 0.81", "144.499, 90.4523, -16.2463, 0.29", "144.805, 90.7116, -16.4189, 0.29", "145.221, 91.0742, -16.6507, 0.66", "145.579, 91.3893, -16.8543, 0.66", "146.345, 92.0517, -17.2812, 0.29", "147.274, 92.846, -17.7853, 0.88", "147.696, 93.1922, -18.0167, 0.88", "148.544, 93.8543, -18.5014, 0.37", "149.244, 94.3641, -18.9232, 0.59", "149.673, 94.6556, -19.1862, 0.74", "150.104, 94.9291, -19.4691, 0.74", "150.861, 95.3917, -19.9523, 0.44", "151.34, 95.6615, -20.2322, 0.66", "151.959, 95.9867, -20.5581, 0.44", "152.442, 96.2267, -20.7977, 0.29", "152.813, 96.4025, -20.9644, 0.29", "153.528, 96.7334, -21.2524, 0.81", "154.203, 97.053, -21.5005, 0.81", "155.047, 97.4789, -21.8242, 0.29", "155.548, 97.7316, -22.031, 0.29", "156.553, 98.2194, -22.5047, 0.74", "157.013, 98.4201, -22.7305, 0.88", "157.628, 98.6457, -23.0487, 0.88", "158.264, 98.8554, -23.3941, 0.88", "159.264, 99.1699, -23.9975, 0.22", "159.907, 99.3809, -24.4152, 0.22", "160.708, 99.655, -24.9803, 0.81", "161.518, 99.9629, -25.5976, 1.03", "162.583, 100.411, -26.4379, 0.29", "163.284, 100.744, -27.021, 0.29", "164.05, 101.157, -27.6817, 1.03", "164.547, 101.451, -28.1123, 1.11", "165.342, 101.975, -28.8274, 0.96", "166.063, 102.496, -29.4824, 0.29", "166.616, 102.899, -29.9333, 0.29", "167.214, 103.319, -30.354, 0.29", "167.725, 103.664, -30.6693, 0.29", "168.7, 104.3, -31.1827, 1.11", "169.082, 104.544, -31.3599, 1.25", "170.335, 105.351, -31.9115, 0.29", "170.964, 105.739, -32.1592, 0.22", "171.401, 105.997, -32.3264, 0.96", "171.834, 106.246, -32.4765, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "56.3212, 51.9408, 4.17099, 0.44", "57.4796, 52.9198, 4.44927, 0.44", "58.2773, 53.54, 4.64838, 0.44", "58.9776, 54.0489, 4.83614, 0.59", "59.6124, 54.4876, 5.02334, 0.59", "60.137, 54.8257, 5.20817, 0.37", "60.8401, 55.2372, 5.47829, 0.74", "61.374, 55.5041, 5.70665, 0.74", "61.7737, 55.6899, 5.88803, 0.96", "62.2023, 55.8884, 6.09788, 0.96", "63.2953, 56.4292, 6.67231, 0.29", "63.8923, 56.7665, 7.04328, 0.29", "64.6535, 57.2578, 7.58941, 0.88", "65.048, 57.5297, 7.88409, 0.88", "65.4519, 57.8248, 8.18963, 0.59", "65.866, 58.1224, 8.48072, 0.44", "66.4254, 58.5402, 8.84954, 0.29", "67.0963, 59.0572, 9.29688, 1.33", "67.4019, 59.3006, 9.50561, 1.55", "67.6774, 59.5341, 9.69737, 1.55", "68.365, 60.1629, 10.1776, 0.88", "69.0134, 60.8694, 10.7006, 0.29", "69.2891, 61.2301, 10.9615, 0.29", "69.7846, 62.0157, 11.5183, 0.96", "70.0461, 62.4885, 11.8516, 1.11", "70.3106, 62.9917, 12.2118, 0.81", "70.8428, 64.0395, 12.9484, 0.29", "71.1267, 64.5393, 13.2862, 0.29", "71.4231, 65.0087, 13.5712, 0.96", "71.6368, 65.327, 13.7386, 0.96", "71.9783, 65.831, 13.9535, 0.96", "72.3633, 66.4042, 14.1391, 0.29", "72.7496, 66.9964, 14.2918, 0.29", "73.3075, 67.8909, 14.4961, 0.96", "73.6042, 68.3792, 14.6044, 1.18", "73.9117, 68.8647, 14.7404, 0.81", "74.2953, 69.4686, 14.9344, 0.29", "74.8459, 70.3237, 15.2548, 0.29", "75.3389, 71.0369, 15.5601, 0.96", "75.6481, 71.4269, 15.7456, 0.96", "76.5147, 72.3885, 16.2497, 0.37", "77.0565, 72.9233, 16.558, 0.37", "77.5062, 73.3138, 16.8046, 0.37", "77.9421, 73.6618, 17.0248, 0.29", "78.7673, 74.2915, 17.4, 0.96", "79.2107, 74.6138, 17.5721, 1.18", "79.6549, 74.9224, 17.7071, 1.18", "80.0496, 75.178, 17.8167, 1.18", "80.5804, 75.519, 17.9542, 0.66", "81.3628, 76.0783, 18.1613, 0.29", "81.9535, 76.5526, 18.3216, 0.29", "82.5297, 77.0654, 18.4831, 0.29", "82.9421, 77.4591, 18.5968, 0.96", "83.2381, 77.7596, 18.6812, 0.96", "84.1082, 78.6497, 18.9897, 0.29", "84.4309, 78.989, 19.1266, 0.29", "84.8911, 79.4669, 19.3394, 0.74", "85.436, 80.0032, 19.6192, 0.88", "85.923, 80.4484, 19.8808, 0.88", "86.7879, 81.1597, 20.3446, 0.52", "87.3164, 81.5469, 20.6216, 1.18", "87.6941, 81.811, 20.8079, 1.4", "88.0551, 82.0559, 20.9678, 1.4", "88.5364, 82.3951, 21.1712, 1.03", "89.4441, 83.0717, 21.4898, 0.29", "89.9129, 83.4406, 21.6122, 0.29", "90.3711, 83.8086, 21.7131, 0.81", "90.7693, 84.1244, 21.7868, 1.03", "91.3334, 84.5411, 21.8725, 0.44", "92.1547, 85.0724, 21.9739, 0.29", "92.7976, 85.4579, 22.0519, 0.59", "93.2235, 85.6965, 22.1042, 0.59", "93.8027, 86.0037, 22.1746, 0.59", "94.4662, 86.3487, 22.2482, 0.74", "95.2061, 86.7324, 22.3434, 0.44", "96.2331, 87.3144, 22.4971, 0.81", "96.6326, 87.5781, 22.5783, 0.96", "97.0348, 87.8807, 22.6825, 0.96", "97.802, 88.5338, 22.9189, 0.44", "98.639, 89.3029, 23.1992, 0.44", "99.4744, 90.089, 23.457, 0.96", "100.311, 90.8784, 23.6717, 1.55", "100.841, 91.3839, 23.7905, 1.55", "101.491, 92.012, 23.8976, 1.03", "102.179, 92.6874, 23.9584, 0.37", "102.933, 93.4209, 23.9504, 0.96", "103.544, 94.0042, 23.9031, 0.96", "103.945, 94.3803, 23.8396, 0.96", "104.592, 94.9858, 23.7182, 0.52", "105.074, 95.4369, 23.6278, 0.44", "105.676, 95.986, 23.5222, 0.44", "106.544, 96.7404, 23.4495, 1.11", "107.101, 97.1979, 23.4631, 1.25", "107.818, 97.7939, 23.5571, 0.59", "108.395, 98.285, 23.7052, 0.37", "108.91, 98.7403, 23.8961, 0.37", "109.705, 99.4641, 24.287, 0.66", "110.356, 100.045, 24.6978, 0.52", "110.763, 100.411, 25.0214, 0.37", "111.403, 100.999, 25.6144, 0.37", "111.882, 101.435, 26.0891, 0.37", "112.328, 101.832, 26.5369, 0.74", "113.126, 102.503, 27.308, 0.59", "114.064, 103.252, 28.2126, 0.96", "114.756, 103.798, 28.8908, 1.18", "115.048, 104.038, 29.1891, 1.18", "115.532, 104.468, 29.6909, 0.81", "115.93, 104.857, 30.0898, 0.81", "116.356, 105.309, 30.4835, 1.03", "116.964, 105.963, 30.9801, 0.59", "117.505, 106.538, 31.4029, 0.59", "118.022, 107.032, 31.7883, 0.59", "118.402, 107.36, 32.0461, 1.18", "118.743, 107.618, 32.2517, 1.18", "119.271, 107.973, 32.5381, 0.88", "119.898, 108.369, 32.854, 0.66", "120.921, 109.061, 33.3211, 0.59", "121.633, 109.59, 33.6105, 0.59", "122.028, 109.909, 33.7519, 1.11", "122.615, 110.401, 33.9127, 1.18", "123.063, 110.786, 34.01, 1.18", "123.801, 111.405, 34.1066, 1.03", "124.44, 111.93, 34.1516, 0.66", "125.014, 112.405, 34.1466, 0.66", "125.937, 113.191, 34.0702, 1.25", "126.332, 113.519, 34.0121, 1.25", "127.286, 114.29, 33.8383, 0.81", "127.958, 114.827, 33.7072, 0.96", "129.061, 115.742, 33.4584, 0.52", "129.908, 116.499, 33.2369, 0.52", "130.417, 116.998, 33.0791, 0.74", "130.935, 117.531, 32.9011, 0.74", "131.353, 117.992, 32.7712, 0.37", "136.72, 125.753, 35.5703, 0.37", "141.952, 133.869, 37.3909, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "1.26017, -173.882, 27.7727, 0.52", "2.07904, -174.811, 27.9725, 0.52", "2.89777, -175.812, 28.1839, 0.52", "3.81089, -177.039, 28.3495, 0.52", "4.23036, -177.635, 28.3927, 0.52", "5.17871, -178.981, 28.4903, 0.52", "5.83728, -179.916, 28.5581, 0.52", "6.1531, -180.456, 28.5928, 0.52", "6.70908, -181.549, 28.6517, 0.52", "7.08484, -182.314, 28.6367, 0.52", "12.0889, -190.72, 29.4295, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "1.26017, -173.882, 27.7727, 0.66", "0.777185, -175.328, 27.7377, 0.66", "0.308202, -176.817, 27.7013, 0.66", "-0.338738, -178.895, 27.6515, 0.66", "-0.834679, -180.497, 27.6157, 0.66", "-1.01644, -181.187, 27.6174, 0.66", "-1.1366, -181.74, 27.6284, 0.66", "-1.21446, -182.379, 27.6515, 0.66", "-1.19711, -183.115, 27.6914, 0.66", "-1.0269, -184.355, 27.8251, 0.66", "-0.803216, -185.72, 28.0032, 0.66", "-0.709425, -186.36, 28.0887, 0.66", "-0.611093, -187.116, 28.1838, 0.66", "-0.463806, -188.378, 28.3277, 0.66", "-0.338369, -189.734, 28.4564, 0.66", "-0.174515, -191.296, 28.5345, 0.66", "-0.0260484, -192.521, 28.6259, 0.66", "0.194949, -193.857, 28.7689, 0.66", "0.466229, -195.123, 28.9475, 0.66", "1.04917, -197.155, 29.2873, 0.66", "1.62055, -198.677, 29.5671, 0.66", "2.55651, -200.709, 29.976, 0.66", "3.23186, -201.992, 30.3179, 0.66", "3.75136, -202.899, 30.5902, 0.66", "4.62112, -204.307, 31.0651, 0.66", "5.19529, -205.188, 31.3991, 0.66", "5.92176, -206.449, 31.8795, 0.66", "6.60246, -207.728, 32.1965, 0.66", "7.54615, -216.995, 35.1563, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "171.834, 106.246, -32.4765, 0.22", "172.746, 106.736, -32.5216, 0.22", "173.354, 107.058, -32.5535, 0.66", "173.719, 107.266, -32.5858, 0.66", "175.497, 108.276, -32.7962, 0.22", "176.266, 108.729, -32.8967, 0.88", "176.599, 108.927, -32.9477, 1.03", "176.967, 109.145, -33.0195, 1.03", "178.251, 109.896, -33.3398, 0.22", "179.107, 110.398, -33.593, 0.22", "179.881, 110.854, -33.8567, 0.44", "180.285, 111.093, -34.0005, 0.44", "181.319, 111.691, -34.3737, 0.22", "182.217, 112.189, -34.696, 0.74", "182.608, 112.4, -34.8382, 0.88", "182.957, 112.611, -34.9617, 0.88", "183.685, 113.069, -35.2094, 0.29", "184.403, 113.563, -35.4494, 0.29", "184.775, 113.843, -35.5839, 0.59", "185.28, 114.243, -35.781, 0.59", "186.172, 115.007, -36.1913, 0.22", "186.641, 115.427, -36.4268, 0.81", "187.072, 115.826, -36.65, 1.03", "187.514, 116.236, -36.8679, 1.03", "188.461, 117.113, -37.3425, 0.44", "189.062, 117.658, -37.6494, 0.52", "189.939, 118.438, -38.1343, 0.22", "190.588, 119.009, -38.483, 0.37", "191.076, 119.425, -38.7411, 0.22", "191.762, 119.997, -39.1015, 0.81", "192.209, 120.346, -39.3406, 0.81", "193.201, 121.097, -39.8619, 0.44", "193.775, 121.524, -40.1565, 0.37", "194.486, 122.038, -40.516, 0.59", "194.878, 122.321, -40.7043, 0.37", "196.409, 123.412, -41.3488, 0.29", "197.855, 124.489, -41.8949, 0.29", "198.619, 125.103, -42.1522, 0.88", "198.934, 125.364, -42.2518, 1.11", "199.4, 125.754, -42.3993, 0.81", "200.862, 126.99, -42.8694, 0.22", "201.825, 127.818, -43.1796, 0.22", "203.174, 128.95, -43.7095, 0.22", "204.237, 129.808, -44.2549, 0.22", "205.169, 130.525, -44.8171, 0.88", "205.489, 130.749, -45.0394, 1.25", "205.844, 130.973, -45.3129, 1.25", "207.15, 131.691, -46.3783, 0.44", "208.542, 132.382, -47.532, 0.22", "209.082, 132.647, -47.9781, 0.44", "209.909, 133.055, -48.6279, 0.29", "210.53, 133.365, -49.0967, 0.66", "211.389, 133.801, -49.6981, 0.52", "211.979, 134.112, -50.0587, 0.29", "212.926, 134.647, -50.6371, 0.96", "213.667, 135.083, -51.1177, 0.96", "214.037, 135.309, -51.3666, 0.96", "216.14, 136.649, -52.861, 0.22", "217.454, 137.511, -53.8108, 0.22", "218.64, 138.311, -54.6814, 0.66", "219.202, 138.692, -55.0808, 0.66", "220.487, 139.578, -55.9991, 0.22", "221.096, 140.003, -56.4433, 0.66", "221.695, 140.411, -56.877, 0.66", "222.234, 140.748, -57.2669, 0.37", "223.618, 141.552, -58.2019, 0.22", "224.494, 142.024, -58.7474, 0.66", "225.367, 142.45, -59.2371, 0.66", "227.091, 143.162, -60.2497, 0.22", "227.915, 143.458, -60.7885, 0.22", "228.501, 143.629, -61.1955, 0.74", "229.153, 143.765, -61.6763, 0.88", "229.578, 143.824, -61.9936, 0.88", "232.02, 144.012, -63.7008, 0.29", "232.686, 144.034, -64.1552, 0.44", "233.593, 144.062, -64.7483, 0.22", "234.234, 144.098, -65.1423, 0.59", "234.639, 144.135, -65.3583, 0.59", "236.593, 144.384, -66.2209, 0.22", "237.65, 144.539, -66.582, 0.66", "238.433, 144.673, -66.8226, 0.66", "240.487, 145.08, -67.4596, 0.15", "242.332, 145.492, -68.0253, 0.15", "243.406, 145.755, -68.3246, 0.59", "243.898, 145.885, -68.4612, 0.88", "246.221, 146.468, -68.939, 0.22", "247.087, 146.671, -69.087, 0.59", "247.389, 146.736, -69.1284, 0.59", "249.347, 147.117, -69.3511, 0.22", "250.972, 147.41, -69.4961, 0.22", "252.819, 147.716, -69.6241, 0.22", "253.72, 147.823, -69.6532, 0.74", "254.392, 147.887, -69.6471, 0.88", "254.774, 147.915, -69.6465, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "171.834, 106.246, -32.4765, 0.22", "173.068, 105.702, -32.4892, 0.22", "173.672, 105.41, -32.4823, 0.74", "173.942, 105.275, -32.4761, 0.74", "175.874, 104.233, -32.4195, 0.22", "176.409, 103.923, -32.4023, 0.22", "177.251, 103.41, -32.3382, 0.81", "177.653, 103.135, -32.2877, 0.81", "178.078, 102.84, -32.2187, 0.81", "179.196, 102.088, -32.0036, 0.22", "179.881, 101.657, -31.8501, 0.22", "180.745, 101.161, -31.6619, 0.52", "181.101, 100.986, -31.5953, 0.52", "181.978, 100.609, -31.43, 0.22", "182.722, 100.316, -31.2929, 0.22", "183.492, 100.043, -31.1585, 0.66", "184.007, 99.871, -31.0819, 0.66", "185.252, 99.4605, -30.9476, 0.22", "185.718, 99.3057, -30.8947, 0.66", "186.215, 99.1405, -30.8414, 0.88", "186.668, 99.0131, -30.8234, 0.88", "187.031, 98.9376, -30.8298, 0.88", "187.468, 98.8807, -30.8591, 0.29", "187.986, 98.8446, -30.9102, 0.22", "189.596, 98.7772, -31.1066, 0.22", "190.828, 98.7632, -31.2571, 0.96", "191.298, 98.7699, -31.3134, 0.96", "192.984, 98.8221, -31.5031, 0.22", "193.501, 98.8481, -31.5564, 0.52", "193.894, 98.8734, -31.5914, 0.52", "195.886, 99.024, -31.7463, 0.22", "196.548, 99.0701, -31.7844, 0.81", "198.196, 99.1449, -31.8376, 0.22", "198.963, 99.174, -31.8437, 0.22", "199.992, 99.1958, -31.8274, 0.74", "200.405, 99.1939, -31.8097, 1.03", "200.714, 99.1842, -31.7878, 1.03", "202.405, 99.0863, -31.6347, 0.22", "202.991, 99.0431, -31.5679, 0.59", "203.359, 99.0145, -31.5241, 0.59", "205.469, 98.8551, -31.261, 0.22", "206.275, 98.7997, -31.1592, 0.59", "206.665, 98.7774, -31.1149, 0.59", "208.586, 98.6974, -30.9578, 0.22", "209.254, 98.6665, -30.8976, 0.22" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_35", "dend_30", "dend_29", "dend_28", "dend_23", "dend_0", "dend_49", "dend_36", "dend_34", "dend_31", "dend_25", "dend_24", "dend_16", "dend_1", "dend_53", "dend_50", "dend_46", "dend_37", "dend_33", "dend_32", "dend_27", "dend_26", "dend_20", "dend_17", "dend_11", "dend_2", "dend_55", "dend_54", "dend_52", "dend_51", "dend_48", "dend_47", "dend_45", "dend_38", "dend_22", "dend_21", "dend_19", "dend_18", "dend_13", "dend_12", "dend_8", "dend_3", "dend_44", "dend_39", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_4", "dend_41", "dend_40", "dend_6", "dend_5", "dend_43", "dend_42" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_35", "dend_30", "dend_29", "dend_28", "dend_23", "dend_0", "dend_49", "dend_36", "dend_34", "dend_31", "dend_25", "dend_24", "dend_16", "dend_1", "dend_53", "dend_50", "dend_46", "dend_37", "dend_33", "dend_32", "dend_27", "dend_26", "dend_20", "dend_17", "dend_11", "dend_2", "dend_55", "dend_54", "dend_52", "dend_51", "dend_48", "dend_47", "dend_45", "dend_38", "dend_22", "dend_21", "dend_19", "dend_18", "dend_13", "dend_12", "dend_8", "dend_3", "dend_44", "dend_39", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_4", "dend_41", "dend_40", "dend_6", "dend_5", "dend_43", "dend_42" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_35", "dend_30", "dend_29", "dend_28", "dend_23", "dend_0", "axon_0", "dend_49", "dend_36", "dend_34", "dend_31", "dend_25", "dend_24", "dend_16", "dend_1", "axon_1", "dend_53", "dend_50", "dend_46", "dend_37", "dend_33", "dend_32", "dend_27", "dend_26", "dend_20", "dend_17", "dend_11", "dend_2", "dend_55", "dend_54", "dend_52", "dend_51", "dend_48", "dend_47", "dend_45", "dend_38", "dend_22", "dend_21", "dend_19", "dend_18", "dend_13", "dend_12", "dend_8", "dend_3", "dend_44", "dend_39", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_4", "dend_41", "dend_40", "dend_6", "dend_5", "dend_43", "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L6_MC_8f96a2b924_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_49, id: dend_49, parent: dend_35
create dend_49
public dend_49
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_36
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_37
create dend_45
public dend_45
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_44, id: dend_44, parent: dend_38
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_35, dend_30, dend_29, dend_28, dend_23, dend_0, dend_49, dend_36, dend_34, dend_31, dend_25, dend_24, dend_16, dend_1, dend_53, dend_50, dend_46, dend_37, dend_33, dend_32, dend_27, dend_26, dend_20, dend_17, dend_11, dend_2, dend_55, dend_54, dend_52, dend_51, dend_48, dend_47, dend_45, dend_38, dend_22, dend_21, dend_19, dend_18, dend_13, dend_12, dend_8, dend_3, dend_44, dend_39, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_41, dend_40, dend_6, dend_5, dend_43, dend_42]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_35, dend_30, dend_29, dend_28, dend_23, dend_0, dend_49, dend_36, dend_34, dend_31, dend_25, dend_24, dend_16, dend_1, dend_53, dend_50, dend_46, dend_37, dend_33, dend_32, dend_27, dend_26, dend_20, dend_17, dend_11, dend_2, dend_55, dend_54, dend_52, dend_51, dend_48, dend_47, dend_45, dend_38, dend_22, dend_21, dend_19, dend_18, dend_13, dend_12, dend_8, dend_3, dend_44, dend_39, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_41, dend_40, dend_6, dend_5, dend_43, dend_42]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_35, dend_30, dend_29, dend_28, dend_23, dend_0, axon_0, dend_49, dend_36, dend_34, dend_31, dend_25, dend_24, dend_16, dend_1, axon_1, dend_53, dend_50, dend_46, dend_37, dend_33, dend_32, dend_27, dend_26, dend_20, dend_17, dend_11, dend_2, dend_55, dend_54, dend_52, dend_51, dend_48, dend_47, dend_45, dend_38, dend_22, dend_21, dend_19, dend_18, dend_13, dend_12, dend_8, dend_3, dend_44, dend_39, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_41, dend_40, dend_6, dend_5, dend_43, dend_42]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_59
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_35(0), soma_0(0.49999884478442963)
    connect dend_30(0), soma_0(0.49999884478442963)
    connect dend_29(0), soma_0(0.49999884478442963)
    connect dend_28(0), soma_0(0.49999884478442963)
    connect dend_23(0), soma_0(0.49999884478442963)
    connect dend_0(0), soma_0(0.49999884478442963)
    connect axon_0(0), soma_0(1.0)
    connect dend_49(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_44(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.604345, 14.9148, -0.0137517, 2.24895 ) }
    soma_0 { pt3dadd( 0.567996, 13.358, -0.0124092, 3.66148 ) }
    soma_0 { pt3dadd( 0.531648, 11.8012, -0.0110666, 5.24119 ) }
    soma_0 { pt3dadd( 0.495299, 10.2445, -0.00972411, 6.93007 ) }
    soma_0 { pt3dadd( 0.458951, 8.68766, -0.00838158, 8.33529 ) }
    soma_0 { pt3dadd( 0.422602, 7.13086, -0.00703904, 9.38398 ) }
    soma_0 { pt3dadd( 0.386254, 5.57407, -0.00569651, 10.3974 ) }
    soma_0 { pt3dadd( 0.349905, 4.01727, -0.00435398, 11.1281 ) }
    soma_0 { pt3dadd( 0.313557, 2.46048, -0.00301145, 11.4353 ) }
    soma_0 { pt3dadd( 0.277208, 0.903681, -0.00166892, 10.9538 ) }
    soma_0 { pt3dadd( 0.240859, -0.653114, -3.26385E-4, 10.395 ) }
    soma_0 { pt3dadd( 0.204511, -2.20991, 0.00101615, 9.83019 ) }
    soma_0 { pt3dadd( 0.168162, -3.7667, 0.00235868, 9.07757 ) }
    soma_0 { pt3dadd( 0.131814, -5.3235, 0.00370121, 8.19272 ) }
    soma_0 { pt3dadd( 0.0954654, -6.8803, 0.00504374, 7.59378 ) }
    soma_0 { pt3dadd( 0.0591169, -8.43709, 0.00638627, 7.0332 ) }
    soma_0 { pt3dadd( 0.0227684, -9.99389, 0.00772881, 6.30438 ) }
    soma_0 { pt3dadd( -0.0135801, -11.5507, 0.00907134, 5.3987 ) }
    soma_0 { pt3dadd( -0.0499286, -13.1075, 0.0104139, 4.49303 ) }
    soma_0 { pt3dadd( -0.0862771, -14.6643, 0.0117564, 3.43597 ) }
    soma_0 { pt3dadd( -0.122626, -16.2211, 0.0130989, 2.07305 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 21/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.599542, 14.5947, -0.0268013, 2.43 ) }
    dend_35 { pt3dadd( 0.599542, 14.5947, -0.0268013, 2.43 ) }
    dend_35 { pt3dadd( 0.570311, 15.6671, -0.0163575, 2.5 ) }
    dend_35 { pt3dadd( 0.536977, 16.8901, -0.00444804, 2.8 ) }
    dend_35 { pt3dadd( 0.515091, 17.6931, 0.00337142, 3.02 ) }
    dend_35 { pt3dadd( 0.495589, 18.4085, 0.0103386, 3.17 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 27/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.69046, 10.9677, -14.5568, 1.11 ) }
    dend_30 { pt3dadd( -1.75224, 11.3302, -14.9909, 1.11 ) }
    dend_30 { pt3dadd( -1.78056, 12.1291, -15.7169, 1.11 ) }
    dend_30 { pt3dadd( -1.77697, 12.7843, -16.3698, 1.11 ) }
    dend_30 { pt3dadd( -1.78825, 13.3639, -17.0043, 1.11 ) }
    dend_30 { pt3dadd( -1.81942, 14.1811, -17.9106, 1.11 ) }
    dend_30 { pt3dadd( -1.85451, 15.1013, -18.931, 1.11 ) }
    dend_30 { pt3dadd( -1.84547, 16.0721, -19.9958, 1.11 ) }
    dend_30 { pt3dadd( -1.76799, 17.589, -21.5777, 1.11 ) }
    dend_30 { pt3dadd( -1.71464, 18.4931, -22.5029, 1.11 ) }
    dend_30 { pt3dadd( -1.70614, 19.1823, -23.2387, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 38/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 4.02954, 9.65144, -5.4068, 0.88 ) }
    dend_29 { pt3dadd( 4.41444, 10.0969, -5.56563, 0.88 ) }
    dend_29 { pt3dadd( 5.27166, 11.1179, -5.95683, 0.88 ) }
    dend_29 { pt3dadd( 6.26022, 12.303, -6.39914, 0.88 ) }
    dend_29 { pt3dadd( 7.31781, 13.6175, -6.85894, 0.88 ) }
    dend_29 { pt3dadd( 8.19562, 14.7514, -7.27492, 0.88 ) }
    dend_29 { pt3dadd( 9.53946, 16.5092, -7.95355, 0.88 ) }
    dend_29 { pt3dadd( 10.5029, 17.7769, -8.48964, 0.88 ) }
    dend_29 { pt3dadd( 11.283, 18.7742, -8.95461, 0.88 ) }
    dend_29 { pt3dadd( 11.9359, 19.5596, -9.38734, 0.88 ) }
    dend_29 { pt3dadd( 12.597, 20.2782, -9.8264, 0.88 ) }
    dend_29 { pt3dadd( 13.223, 20.8745, -10.2079, 0.88 ) }
    dend_29 { pt3dadd( 14.04, 21.5264, -10.6178, 0.88 ) }
    dend_29 { pt3dadd( 14.987, 22.1428, -11.0736, 0.88 ) }
    dend_29 { pt3dadd( 16.185, 22.8138, -11.6087, 0.88 ) }
    dend_29 { pt3dadd( 17.1273, 23.2938, -11.9697, 0.88 ) }
    dend_29 { pt3dadd( 17.9702, 23.7247, -12.2496, 0.88 ) }
    dend_29 { pt3dadd( 18.7549, 24.1544, -12.4957, 0.81 ) }
    dend_29 { pt3dadd( 19.5363, 24.6098, -12.7391, 0.74 ) }
    dend_29 { pt3dadd( 20.3664, 25.0834, -12.9989, 0.74 ) }
    dend_29 { pt3dadd( 21.6393, 25.7868, -13.4237, 0.74 ) }
    dend_29 { pt3dadd( 22.2189, 26.1167, -13.6581, 0.74 ) }
    dend_29 { pt3dadd( 22.9199, 26.5087, -13.9513, 0.74 ) }
    dend_29 { pt3dadd( 24.1591, 27.1447, -14.4272, 0.74 ) }
    dend_29 { pt3dadd( 25.2871, 27.6595, -14.8297, 0.74 ) }
    dend_29 { pt3dadd( 26.3103, 28.059, -15.1785, 0.74 ) }
    dend_29 { pt3dadd( 27.5362, 28.4324, -15.5389, 0.74 ) }
    dend_29 { pt3dadd( 28.997, 28.7855, -15.8935, 0.74 ) }
    dend_29 { pt3dadd( 31.1653, 29.23, -16.3931, 0.66 ) }
    dend_29 { pt3dadd( 32.6754, 29.522, -16.7165, 0.66 ) }
    dend_29 { pt3dadd( 34.2301, 29.8528, -17.066, 0.66 ) }
    dend_29 { pt3dadd( 36.8939, 30.5107, -17.6567, 0.66 ) }
    dend_29 { pt3dadd( 38.692, 31.0192, -18.0369, 0.66 ) }
    dend_29 { pt3dadd( 39.984, 31.4705, -18.358, 0.66 ) }
    dend_29 { pt3dadd( 41.0709, 31.95, -18.6595, 0.59 ) }
    dend_29 { pt3dadd( 42.4557, 32.6904, -19.0549, 0.59 ) }
    dend_29 { pt3dadd( 43.5173, 33.3683, -19.4208, 0.59 ) }
    dend_29 { pt3dadd( 44.5871, 34.1454, -19.8711, 0.59 ) }
    dend_29 { pt3dadd( 46.3399, 35.3925, -20.6183, 0.59 ) }
    dend_29 { pt3dadd( 47.0022, 35.8315, -20.8785, 0.59 ) }
    dend_29 { pt3dadd( 47.4227, 36.0893, -21.0374, 0.59 ) }
    dend_29 { pt3dadd( 49.1636, 37.0598, -21.6555, 0.59 ) }
    dend_29 { pt3dadd( 50.7532, 37.9124, -22.26, 0.59 ) }
    dend_29 { pt3dadd( 51.7475, 38.445, -22.6694, 0.59 ) }
    dend_29 { pt3dadd( 53.23, 39.2365, -23.2752, 0.59 ) }
    dend_29 { pt3dadd( 54.8762, 40.1156, -23.9396, 0.59 ) }
    dend_29 { pt3dadd( 55.9316, 40.6934, -24.3602, 0.59 ) }
    dend_29 { pt3dadd( 57.1929, 41.4247, -24.8342, 0.59 ) }
    dend_29 { pt3dadd( 58.8075, 42.4282, -25.4356, 0.59 ) }
    dend_29 { pt3dadd( 59.8213, 43.0633, -25.7946, 0.59 ) }
    dend_29 { pt3dadd( 61.6171, 44.1698, -26.3952, 0.59 ) }
    dend_29 { pt3dadd( 63.4086, 45.2664, -26.9527, 0.59 ) }
    dend_29 { pt3dadd( 64.5615, 45.9692, -27.2867, 0.59 ) }
    dend_29 { pt3dadd( 67.6521, 47.8171, -28.127, 0.59 ) }
    dend_29 { pt3dadd( 69.1629, 48.6936, -28.5246, 0.59 ) }
    dend_29 { pt3dadd( 69.9582, 49.1329, -28.73, 0.59 ) }
    dend_29 { pt3dadd( 71.4433, 49.9199, -29.112, 0.59 ) }
    dend_29 { pt3dadd( 73.4619, 50.9272, -29.6223, 0.59 ) }
    dend_29 { pt3dadd( 74.1531, 51.2425, -29.7962, 0.59 ) }
    dend_29 { pt3dadd( 76.6329, 52.2689, -30.3856, 0.59 ) }
    dend_29 { pt3dadd( 78.4768, 53.0486, -30.8043, 0.59 ) }
    dend_29 { pt3dadd( 79.2277, 53.3656, -30.9498, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_29 { pt3dadd( 79.8515, 53.639, -31.0587, 0.59 ) }
    dend_29 { pt3dadd( 80.8534, 54.1092, -31.2138, 0.59 ) }
    dend_29 { pt3dadd( 81.7573, 54.5661, -31.335, 0.59 ) }
    dend_29 { pt3dadd( 83.5627, 55.5333, -31.5435, 0.52 ) }
    dend_29 { pt3dadd( 85.0104, 56.3545, -31.6956, 0.52 ) }
    dend_29 { pt3dadd( 86.5555, 57.2608, -31.8316, 0.52 ) }
    dend_29 { pt3dadd( 88.464, 58.3918, -31.9824, 0.52 ) }
    dend_29 { pt3dadd( 90.7297, 59.7613, -32.1419, 0.52 ) }
    dend_29 { pt3dadd( 92.6498, 60.9574, -32.2505, 0.52 ) }
    dend_29 { pt3dadd( 93.6418, 61.5993, -32.2815, 0.52 ) }
    dend_29 { pt3dadd( 95.2991, 62.7347, -32.3021, 0.52 ) }
    dend_29 { pt3dadd( 97.1616, 64.0986, -32.2857, 0.52 ) }
    dend_29 { pt3dadd( 98.0175, 64.7662, -32.2688, 0.52 ) }
    dend_29 { pt3dadd( 99.8503, 66.2575, -32.2261, 0.52 ) }
    dend_29 { pt3dadd( 102.126, 68.1157, -32.1725, 0.52 ) }
    dend_29 { pt3dadd( 103.772, 69.4793, -32.1282, 0.52 ) }
    dend_29 { pt3dadd( 104.884, 70.4116, -32.0962, 0.52 ) }
    dend_29 { pt3dadd( 106.053, 71.3787, -32.0339, 0.52 ) }
    dend_29 { pt3dadd( 107.536, 72.5462, -31.9152, 0.52 ) }
    dend_29 { pt3dadd( 110.74, 74.9879, -31.6536, 0.52 ) }
    dend_29 { pt3dadd( 113.613, 77.1726, -31.4528, 0.52 ) }
    dend_29 { pt3dadd( 114.441, 77.8027, -31.4, 0.52 ) }
    dend_29 { pt3dadd( 116.535, 79.4551, -31.2768, 0.52 ) }
    dend_29 { pt3dadd( 118.026, 80.704, -31.2051, 0.52 ) }
    dend_29 { pt3dadd( 123.495, 85.5489, -30.9934, 0.52 ) }
    dend_29 { pt3dadd( 126.095, 87.9661, -30.9679, 0.52 ) }
    dend_29 { pt3dadd( 126.857, 88.6898, -30.9926, 0.52 ) }
    dend_29 { pt3dadd( 128.323, 90.123, -31.099, 0.52 ) }
    dend_29 { pt3dadd( 131.523, 93.3601, -31.4841, 0.52 ) }
    dend_29 { pt3dadd( 131.94, 93.7953, -31.5489, 0.52 ) }
    dend_29 { pt3dadd( 134.166, 96.1253, -31.9338, 0.52 ) }
    dend_29 { pt3dadd( 136.035, 98.0075, -32.1934, 0.52 ) }
    dend_29 { pt3dadd( 137.767, 99.685, -32.3775, 0.52 ) }
    dend_29 { pt3dadd( 139.271, 101.084, -32.4912, 0.52 ) }
    dend_29 { pt3dadd( 140.18, 101.918, -32.5394, 0.52 ) }
    dend_29 { pt3dadd( 144.09, 105.493, -32.6623, 0.52 ) }
    dend_29 { pt3dadd( 146.973, 108.195, -32.7027, 0.52 ) }
    dend_29 { pt3dadd( 149.763, 110.848, -32.7213, 0.44 ) }
    dend_29 { pt3dadd( 152.885, 113.833, -32.7431, 0.44 ) }
    dend_29 { pt3dadd( 153.971, 114.87, -32.748, 0.44 ) }
    dend_29 { pt3dadd( 155.675, 116.495, -32.7529, 0.44 ) }
    dend_29 { pt3dadd( 157.803, 118.572, -32.7979, 0.44 ) }
    dend_29 { pt3dadd( 158.954, 119.751, -32.8928, 0.44 ) }
    dend_29 { pt3dadd( 159.89, 120.771, -32.9941, 0.44 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 44/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.310458, -15.8741, 2.5432, 0.81 ) }
    dend_28 { pt3dadd( 0.655409, -17.4842, 2.71348, 0.81 ) }
    dend_28 { pt3dadd( 1.26307, -18.3918, 2.77943, 0.81 ) }
    dend_28 { pt3dadd( 2.04375, -19.4766, 2.83429, 0.81 ) }
    dend_28 { pt3dadd( 2.99995, -20.7987, 2.86177, 0.81 ) }
    dend_28 { pt3dadd( 3.46295, -21.4214, 2.93063, 0.74 ) }
    dend_28 { pt3dadd( 4.3856, -22.6005, 3.16197, 0.74 ) }
    dend_28 { pt3dadd( 5.53821, -23.7938, 3.51474, 0.74 ) }
    dend_28 { pt3dadd( 6.30026, -24.505, 3.76709, 0.59 ) }
    dend_28 { pt3dadd( 7.15605, -25.2366, 4.08266, 0.59 ) }
    dend_28 { pt3dadd( 9.09655, -26.7207, 4.85554, 0.59 ) }
    dend_28 { pt3dadd( 10.1118, -27.4314, 5.2606, 0.59 ) }
    dend_28 { pt3dadd( 12.1739, -28.7337, 6.0547, 0.59 ) }
    dend_28 { pt3dadd( 13.3302, -29.4039, 6.48925, 0.59 ) }
    dend_28 { pt3dadd( 14.6673, -30.1072, 6.89301, 0.59 ) }
    dend_28 { pt3dadd( 15.6395, -30.5796, 7.16077, 0.59 ) }
    dend_28 { pt3dadd( 16.3997, -30.9382, 7.32814, 0.59 ) }
    dend_28 { pt3dadd( 18.4747, -31.9346, 7.78673, 0.59 ) }
    dend_28 { pt3dadd( 19.8979, -32.6589, 8.18856, 0.59 ) }
    dend_28 { pt3dadd( 20.8015, -33.1273, 8.46362, 0.59 ) }
    dend_28 { pt3dadd( 22.7124, -34.1447, 9.04958, 0.59 ) }
    dend_28 { pt3dadd( 23.9973, -34.8825, 9.50117, 0.59 ) }
    dend_28 { pt3dadd( 24.4909, -35.1917, 9.70885, 0.59 ) }
    dend_28 { pt3dadd( 25.7966, -36.1311, 10.4087, 0.59 ) }
    dend_28 { pt3dadd( 26.7401, -36.8912, 11.025, 0.59 ) }
    dend_28 { pt3dadd( 27.4705, -37.5042, 11.5228, 0.59 ) }
    dend_28 { pt3dadd( 28.9997, -38.9218, 12.5265, 0.59 ) }
    dend_28 { pt3dadd( 29.6951, -39.6416, 13.0292, 0.59 ) }
    dend_28 { pt3dadd( 30.5948, -40.6782, 13.7479, 0.59 ) }
    dend_28 { pt3dadd( 31.4167, -41.7192, 14.4452, 0.59 ) }
    dend_28 { pt3dadd( 31.9084, -42.4043, 14.9117, 0.59 ) }
    dend_28 { pt3dadd( 32.5372, -43.279, 15.5188, 0.59 ) }
    dend_28 { pt3dadd( 33.0241, -43.8891, 15.9507, 0.59 ) }
    dend_28 { pt3dadd( 33.637, -44.5623, 16.4097, 0.59 ) }
    dend_28 { pt3dadd( 34.5582, -45.4861, 16.9794, 0.59 ) }
    dend_28 { pt3dadd( 35.1458, -46.088, 17.3355, 0.59 ) }
    dend_28 { pt3dadd( 35.9924, -46.967, 17.8311, 0.59 ) }
    dend_28 { pt3dadd( 36.8961, -47.8529, 18.3257, 0.59 ) }
    dend_28 { pt3dadd( 37.8316, -48.7701, 18.7806, 0.59 ) }
    dend_28 { pt3dadd( 38.4701, -49.404, 19.0697, 0.59 ) }
    dend_28 { pt3dadd( 39.6013, -50.6065, 19.5734, 0.59 ) }
    dend_28 { pt3dadd( 40.3296, -51.4289, 19.8817, 0.59 ) }
    dend_28 { pt3dadd( 40.7414, -51.9358, 20.0508, 0.59 ) }
    dend_28 { pt3dadd( 41.5847, -53.0421, 20.4155, 0.59 ) }
    dend_28 { pt3dadd( 49.4153, -57.5551, 24.5695, 0.59 ) }
    dend_28 { pt3dadd( 56.3333, -62.7063, 29.4919, 0.59 ) }
    dend_28 { pt3dadd( 62.751, -68.3929, 34.4713, 0.59 ) }
    dend_28 { pt3dadd( 68.9934, -74.1924, 39.5361, 0.59 ) }
    dend_28 { pt3dadd( 73.8081, -81.0446, 44.7731, 0.59 ) }
    dend_28 { pt3dadd( 77.8741, -87.9407, 50.5561, 0.59 ) }
    dend_28 { pt3dadd( 81.0364, -94.6125, 57.1268, 0.59 ) }
    dend_28 { pt3dadd( 83.8184, -100.374, 64.6996, 0.59 ) }
    dend_28 { pt3dadd( 86.2129, -105.356, 72.955, 0.59 ) }
    dend_28 { pt3dadd( 87.8563, -109.621, 81.7965, 0.59 ) }
    dend_28 { pt3dadd( 90.1772, -113.907, 90.4732, 0.59 ) }
    dend_28 { pt3dadd( 92.987, -118.83, 98.6345, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_28 { pt3dadd( 95.426, -122.951, 107.363, 0.59 ) }
    dend_28 { pt3dadd( 97.1107, -127.869, 115.832, 0.59 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.980458, -14.8308, 10.9432, 0.88 ) }
    dend_23 { pt3dadd( -2.02769, -16.2661, 11.6874, 0.88 ) }
    dend_23 { pt3dadd( -2.46146, -16.9398, 12.0036, 0.88 ) }
    dend_23 { pt3dadd( -3.17908, -18.2151, 12.5505, 0.88 ) }
    dend_23 { pt3dadd( -3.50812, -18.8783, 12.8097, 0.88 ) }
    dend_23 { pt3dadd( -4.11034, -20.1645, 13.2581, 0.88 ) }
    dend_23 { pt3dadd( -4.47435, -21.0178, 13.5355, 0.88 ) }
    dend_23 { pt3dadd( -4.774, -21.8982, 13.7863, 0.88 ) }
    dend_23 { pt3dadd( -5.10802, -23.0091, 14.0719, 0.88 ) }
    dend_23 { pt3dadd( -5.29241, -23.7465, 14.2658, 0.88 ) }
    dend_23 { pt3dadd( -5.53418, -24.9607, 14.6213, 0.88 ) }
    dend_23 { pt3dadd( -5.70698, -26.2965, 15.1199, 0.88 ) }
    dend_23 { pt3dadd( -5.75008, -26.8407, 15.3754, 0.88 ) }
    dend_23 { pt3dadd( -5.77054, -27.5637, 15.813, 0.88 ) }
    dend_23 { pt3dadd( -5.75675, -28.1909, 16.2783, 0.88 ) }
    dend_23 { pt3dadd( -5.70351, -29.0004, 16.9694, 0.88 ) }
    dend_23 { pt3dadd( -5.55926, -30.1327, 18.0201, 0.88 ) }
    dend_23 { pt3dadd( -5.41845, -30.8933, 18.7586, 0.88 ) }
    dend_23 { pt3dadd( -5.26215, -31.6024, 19.444, 0.88 ) }
    dend_23 { pt3dadd( -5.15702, -32.1354, 19.9227, 0.88 ) }
    dend_23 { pt3dadd( -5.10091, -32.5461, 20.2535, 0.88 ) }
    dend_23 { pt3dadd( -5.09626, -33.3859, 20.8208, 0.88 ) }
    dend_23 { pt3dadd( -5.2011, -34.0825, 21.1949, 0.88 ) }
    dend_23 { pt3dadd( -5.41854, -34.8331, 21.5084, 0.88 ) }
    dend_23 { pt3dadd( -5.77046, -35.7074, 21.8459, 0.88 ) }
    dend_23 { pt3dadd( -6.13337, -36.395, 22.1065, 0.88 ) }
    dend_23 { pt3dadd( -6.79313, -37.4267, 22.4787, 0.88 ) }
    dend_23 { pt3dadd( -7.69375, -38.5913, 22.866, 0.88 ) }
    dend_23 { pt3dadd( -8.36263, -39.3481, 23.1073, 0.88 ) }
    dend_23 { pt3dadd( -9.09978, -40.1398, 23.3565, 0.88 ) }
    dend_23 { pt3dadd( -9.73781, -40.7997, 23.5788, 0.88 ) }
    dend_23 { pt3dadd( -10.557, -41.6379, 23.8722, 0.88 ) }
    dend_23 { pt3dadd( -11.6387, -42.7078, 24.2451, 0.88 ) }
    dend_23 { pt3dadd( -12.3246, -43.3406, 24.4207, 0.88 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 36/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.40046, -16.1471, 0.893199, 1.47 ) }
    dend_0 { pt3dadd( -1.39648, -16.5944, 0.893199, 1.47 ) }
    dend_0 { pt3dadd( -1.38338, -18.0682, 0.893199, 1.47 ) }
    dend_0 { pt3dadd( -1.37941, -18.5156, 0.893199, 1.47 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.122626, -16.2211, 0.0130989, 0.501844 ) }
    axon_0 { pt3dadd( -0.472755, -31.217, 0.0130989, 0.501844 ) }
    axon_0 { pt3dadd( -0.822885, -46.2129, 0.0130989, 0.501844 ) }
    // Section: dend_49, id: dend_49, parent: dend_35 (entry count 43/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 0.495589, 18.4085, 0.0103386, 1.03 ) }
    dend_49 { pt3dadd( -0.479383, 19.6415, 1.31696, 1.03 ) }
    dend_49 { pt3dadd( -1.31916, 20.7138, 2.33897, 1.25 ) }
    dend_49 { pt3dadd( -1.71017, 21.2018, 2.75512, 1.25 ) }
    dend_49 { pt3dadd( -2.23879, 21.8448, 3.26929, 1.4 ) }
    dend_49 { pt3dadd( -2.81732, 22.5484, 3.832, 1.25 ) }
    dend_49 { pt3dadd( -3.30926, 23.1466, 4.31048, 1.4 ) }
    dend_49 { pt3dadd( -3.85117, 23.8122, 4.7713, 1.55 ) }
    dend_49 { pt3dadd( -4.3703, 24.4353, 5.12213, 1.92 ) }
    dend_49 { pt3dadd( -4.73219, 24.8621, 5.34694, 2.14 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 0.495589, 18.4085, 0.0103386, 1.62 ) }
    dend_36 { pt3dadd( 1.28164, 20.3926, -0.226657, 1.62 ) }
    dend_36 { pt3dadd( 1.65287, 21.1819, -0.32049, 1.62 ) }
    dend_36 { pt3dadd( 2.21796, 22.2991, -0.46239, 1.92 ) }
    dend_36 { pt3dadd( 2.83364, 23.3565, -0.595313, 2.06 ) }
    dend_36 { pt3dadd( 3.43265, 24.2534, -0.704736, 2.43 ) }
    dend_36 { pt3dadd( 3.70409, 24.6205, -0.74784, 2.43 ) }
    dend_36 { pt3dadd( 4.91135, 26.0089, -0.929536, 1.11 ) }
    dend_36 { pt3dadd( 5.74823, 26.8346, -1.03297, 1.11 ) }
    dend_36 { pt3dadd( 6.70151, 27.627, -1.11923, 1.25 ) }
    dend_36 { pt3dadd( 7.64992, 28.317, -1.19804, 1.25 ) }
    dend_36 { pt3dadd( 8.34437, 28.7759, -1.25064, 1.4 ) }
    dend_36 { pt3dadd( 9.41992, 29.4531, -1.32773, 1.03 ) }
    dend_36 { pt3dadd( 10.3125, 30.018, -1.38036, 1.03 ) }
    dend_36 { pt3dadd( 11.1799, 30.5917, -1.4432, 1.18 ) }
    dend_36 { pt3dadd( 11.8009, 31.0408, -1.46174, 1.47 ) }
    dend_36 { pt3dadd( 12.5254, 31.5654, -1.45002, 1.62 ) }
    dend_36 { pt3dadd( 12.9798, 31.8711, -1.42536, 1.62 ) }
    dend_36 { pt3dadd( 14.289, 32.6501, -1.32298, 1.11 ) }
    dend_36 { pt3dadd( 15.3455, 33.2549, -1.23342, 1.11 ) }
    dend_36 { pt3dadd( 16.8071, 34.116, -1.10633, 0.88 ) }
    dend_36 { pt3dadd( 17.9958, 34.8431, -1.00499, 0.88 ) }
    dend_36 { pt3dadd( 18.906, 35.4264, -0.90654, 0.88 ) }
    dend_36 { pt3dadd( 20.3522, 36.3367, -0.740315, 1.11 ) }
    dend_36 { pt3dadd( 20.9274, 36.6846, -0.674435, 1.11 ) }
    dend_36 { pt3dadd( 22.1958, 37.4674, -0.534956, 0.96 ) }
    dend_36 { pt3dadd( 23.592, 38.4446, -0.487805, 1.33 ) }
    dend_36 { pt3dadd( 24.2598, 39.0268, -0.450982, 1.62 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -1.70614, 19.1823, -23.2387, 0.52 ) }
    dend_34 { pt3dadd( 0.710096, 19.3662, -24.7969, 0.52 ) }
    dend_34 { pt3dadd( 1.9842, 19.6243, -25.5101, 0.52 ) }
    dend_34 { pt3dadd( 3.12391, 19.9947, -26.0759, 0.52 ) }
    dend_34 { pt3dadd( 4.45614, 20.5076, -26.7188, 0.52 ) }
    dend_34 { pt3dadd( 5.54242, 20.9419, -27.264, 0.52 ) }
    dend_34 { pt3dadd( 7.19227, 21.6288, -28.2711, 0.52 ) }
    dend_34 { pt3dadd( 7.9856, 22.0258, -28.8849, 0.52 ) }
    dend_34 { pt3dadd( 8.76071, 22.5143, -29.6114, 0.52 ) }
    dend_34 { pt3dadd( 9.3653, 22.9322, -30.2289, 0.52 ) }
    dend_34 { pt3dadd( 10.4376, 23.7573, -31.3424, 0.52 ) }
    dend_34 { pt3dadd( 12.4319, 25.3182, -33.3783, 0.52 ) }
    dend_34 { pt3dadd( 14.0687, 26.5621, -34.9422, 0.52 ) }
    dend_34 { pt3dadd( 15.8846, 27.9451, -36.718, 0.52 ) }
    dend_34 { pt3dadd( 16.7935, 28.6111, -37.6022, 0.52 ) }
    dend_34 { pt3dadd( 18.7315, 29.8917, -39.3626, 0.52 ) }
    dend_34 { pt3dadd( 19.6226, 30.4348, -40.132, 0.52 ) }
    dend_34 { pt3dadd( 21.7157, 31.5707, -41.8365, 0.52 ) }
    dend_34 { pt3dadd( 25.2683, 33.2991, -44.7216, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( 26.673, 33.903, -45.9153, 0.52 ) }
    dend_34 { pt3dadd( 29.1135, 34.8816, -48.0761, 0.52 ) }
    dend_34 { pt3dadd( 30.3984, 35.3531, -49.31, 0.52 ) }
    dend_34 { pt3dadd( 31.7303, 35.8748, -50.7072, 0.52 ) }
    dend_34 { pt3dadd( 32.8738, 36.3527, -51.9604, 0.52 ) }
    dend_34 { pt3dadd( 33.591, 36.6713, -52.6998, 0.52 ) }
    dend_34 { pt3dadd( 34.9872, 37.3494, -54.136, 0.52 ) }
    dend_34 { pt3dadd( 36.8483, 38.2916, -56.0054, 0.52 ) }
    dend_34 { pt3dadd( 37.8951, 38.7878, -56.9904, 0.52 ) }
    dend_34 { pt3dadd( 39.4232, 39.4898, -58.3831, 0.52 ) }
    dend_34 { pt3dadd( 40.8564, 40.1139, -59.6363, 0.52 ) }
    dend_34 { pt3dadd( 42.3391, 40.755, -60.8522, 0.52 ) }
    dend_34 { pt3dadd( 43.0953, 41.1006, -61.4147, 0.52 ) }
    dend_34 { pt3dadd( 44.1967, 41.6534, -62.1635, 0.52 ) }
    dend_34 { pt3dadd( 45.7523, 42.4979, -63.3278, 0.52 ) }
    dend_34 { pt3dadd( 47.1148, 43.3188, -64.4921, 0.52 ) }
    dend_34 { pt3dadd( 48.0801, 43.9326, -65.4289, 0.52 ) }
    dend_34 { pt3dadd( 49.002, 44.5488, -66.4688, 0.52 ) }
    dend_34 { pt3dadd( 50.1821, 45.3087, -67.8484, 0.44 ) }
    dend_34 { pt3dadd( 51.8531, 46.2692, -69.6792, 0.44 ) }
    dend_34 { pt3dadd( 52.5197, 46.6106, -70.4063, 0.44 ) }
    dend_34 { pt3dadd( 53.8011, 47.1982, -71.8726, 0.44 ) }
    dend_34 { pt3dadd( 54.9356, 47.6457, -73.1809, 0.44 ) }
    dend_34 { pt3dadd( 56.5483, 48.2149, -74.942, 0.44 ) }
    dend_34 { pt3dadd( 58.5384, 48.8661, -76.9128, 0.44 ) }
    dend_34 { pt3dadd( 59.3073, 49.1087, -77.5568, 0.44 ) }
    dend_34 { pt3dadd( 60.2711, 49.4309, -78.2279, 0.44 ) }
    dend_34 { pt3dadd( 62.0123, 50.0571, -79.2637, 0.44 ) }
    dend_34 { pt3dadd( 63.9589, 50.8082, -80.2663, 0.44 ) }
    dend_34 { pt3dadd( 65.7308, 51.4869, -81.0617, 0.44 ) }
    dend_34 { pt3dadd( 67.8335, 52.2837, -81.8594, 0.44 ) }
    dend_34 { pt3dadd( 71.041, 53.4872, -82.9446, 0.44 ) }
    dend_34 { pt3dadd( 72.0142, 53.8482, -83.2336, 0.44 ) }
    dend_34 { pt3dadd( 74.0181, 54.5458, -83.751, 0.44 ) }
    dend_34 { pt3dadd( 77.0331, 55.501, -84.4313, 0.44 ) }
    dend_34 { pt3dadd( 79.2751, 56.1821, -84.9834, 0.44 ) }
    dend_34 { pt3dadd( 80.1065, 56.4323, -85.238, 0.44 ) }
    dend_34 { pt3dadd( 81.8297, 56.9229, -85.8781, 0.44 ) }
    dend_34 { pt3dadd( 84.1415, 57.6131, -86.7943, 0.44 ) }
    dend_34 { pt3dadd( 85.0363, 57.887, -87.166, 0.44 ) }
    dend_34 { pt3dadd( 87.2265, 58.5915, -88.1112, 0.44 ) }
    dend_34 { pt3dadd( 88.5007, 58.9421, -88.6884, 0.44 ) }
    dend_34 { pt3dadd( 89.6815, 59.2256, -89.1984, 0.44 ) }
    dend_34 { pt3dadd( 91.1663, 59.5048, -89.7841, 0.44 ) }
    dend_34 { pt3dadd( 92.9883, 59.7916, -90.4744, 0.44 ) }
    dend_34 { pt3dadd( 94.5396, 59.9786, -91.0394, 0.44 ) }
    dend_34 { pt3dadd( 96.0481, 60.0669, -91.5333, 0.44 ) }
    dend_34 { pt3dadd( 96.9655, 60.0619, -91.8796, 0.44 ) }
    dend_34 { pt3dadd( 99.5211, 59.9317, -93.0663, 0.44 ) }
    dend_34 { pt3dadd( 100.964, 59.8266, -93.8951, 0.44 ) }
    dend_34 { pt3dadd( 102.275, 59.7482, -94.8194, 0.44 ) }
    dend_34 { pt3dadd( 103.287, 59.6837, -95.5987, 0.44 ) }
    dend_34 { pt3dadd( 105.574, 59.5624, -97.4844, 0.44 ) }
    dend_34 { pt3dadd( 106.903, 59.4754, -98.7057, 0.44 ) }
    dend_34 { pt3dadd( 107.517, 59.432, -99.3558, 0.44 ) }
    dend_34 { pt3dadd( 108.884, 59.3396, -100.745, 0.44 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 56/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.70614, 19.1823, -23.2387, 0.74 ) }
    dend_31 { pt3dadd( -2.17278, 18.9694, -23.8805, 0.74 ) }
    dend_31 { pt3dadd( -2.83843, 18.7764, -24.8129, 0.74 ) }
    dend_31 { pt3dadd( -3.51138, 18.695, -25.7871, 0.74 ) }
    dend_31 { pt3dadd( -4.24551, 18.7193, -26.9219, 0.74 ) }
    dend_31 { pt3dadd( -4.81053, 18.8332, -27.8251, 0.74 ) }
    dend_31 { pt3dadd( -5.39825, 19.0395, -28.8299, 0.74 ) }
    dend_31 { pt3dadd( -5.98623, 19.4075, -29.952, 0.74 ) }
    dend_31 { pt3dadd( -6.41889, 19.7643, -30.7999, 0.74 ) }
    dend_31 { pt3dadd( -6.94848, 20.3357, -31.8714, 0.74 ) }
    dend_31 { pt3dadd( -7.43139, 20.9945, -32.9045, 0.74 ) }
    dend_31 { pt3dadd( -7.85119, 21.722, -33.9355, 0.74 ) }
    dend_31 { pt3dadd( -8.16933, 22.4048, -34.825, 0.74 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 69/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -12.3246, -43.3406, 24.4207, 0.52 ) }
    dend_25 { pt3dadd( -12.314, -44.2231, 25.0366, 0.52 ) }
    dend_25 { pt3dadd( -12.3648, -45.4378, 25.8105, 0.52 ) }
    dend_25 { pt3dadd( -12.3782, -46.2445, 26.2989, 0.52 ) }
    dend_25 { pt3dadd( -12.3768, -46.8801, 26.6521, 0.52 ) }
    dend_25 { pt3dadd( -12.3593, -48.0106, 27.2197, 0.52 ) }
    dend_25 { pt3dadd( -12.3496, -49.1214, 27.7203, 0.52 ) }
    dend_25 { pt3dadd( -12.3926, -50.1115, 28.1467, 0.52 ) }
    dend_25 { pt3dadd( -12.4332, -50.8001, 28.4055, 0.52 ) }
    dend_25 { pt3dadd( -12.4673, -51.604, 28.6897, 0.52 ) }
    dend_25 { pt3dadd( -12.4667, -52.4263, 28.9091, 0.52 ) }
    dend_25 { pt3dadd( -12.3827, -53.3837, 29.0627, 0.52 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 81/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -12.3246, -43.3406, 24.4207, 0.74 ) }
    dend_24 { pt3dadd( -13.0861, -43.8729, 24.6303, 0.74 ) }
    dend_24 { pt3dadd( -14.1919, -44.5887, 24.8893, 0.74 ) }
    dend_24 { pt3dadd( -15.9153, -45.5823, 25.2717, 0.74 ) }
    dend_24 { pt3dadd( -16.6829, -45.9725, 25.4316, 0.74 ) }
    dend_24 { pt3dadd( -17.7321, -46.4466, 25.6306, 0.74 ) }
    dend_24 { pt3dadd( -18.7174, -46.8604, 25.8181, 0.52 ) }
    dend_24 { pt3dadd( -19.6004, -47.1792, 25.985, 0.52 ) }
    dend_24 { pt3dadd( -20.4505, -47.4101, 26.1273, 0.52 ) }
    dend_24 { pt3dadd( -21.4532, -47.6036, 26.2969, 0.52 ) }
    dend_24 { pt3dadd( -22.5484, -47.7929, 26.4944, 0.52 ) }
    dend_24 { pt3dadd( -23.5369, -47.9699, 26.6759, 0.52 ) }
    dend_24 { pt3dadd( -24.6691, -48.1962, 26.8611, 0.52 ) }
    dend_24 { pt3dadd( -25.9687, -48.4875, 27.1077, 0.52 ) }
    dend_24 { pt3dadd( -27.3026, -48.835, 27.3813, 0.52 ) }
    dend_24 { pt3dadd( -28.406, -49.1294, 27.6126, 0.52 ) }
    dend_24 { pt3dadd( -29.5166, -49.4346, 27.839, 0.52 ) }
    dend_24 { pt3dadd( -30.45, -49.6651, 28.0137, 0.52 ) }
    dend_24 { pt3dadd( -32.3488, -50.066, 28.3546, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_24 { pt3dadd( -33.5468, -50.258, 28.5803, 0.52 ) }
    dend_24 { pt3dadd( -35.2859, -50.4555, 28.9046, 0.52 ) }
    dend_24 { pt3dadd( -36.3415, -50.547, 29.1009, 0.52 ) }
    dend_24 { pt3dadd( -37.5086, -50.6136, 29.3195, 0.52 ) }
    dend_24 { pt3dadd( -39.2776, -50.6663, 29.6368, 0.52 ) }
    dend_24 { pt3dadd( -40.8122, -50.6813, 29.8744, 0.52 ) }
    dend_24 { pt3dadd( -41.6923, -50.6868, 30.0285, 0.52 ) }
    dend_24 { pt3dadd( -43.2692, -50.717, 30.3407, 0.52 ) }
    dend_24 { pt3dadd( -44.4307, -50.7547, 30.5943, 0.52 ) }
    dend_24 { pt3dadd( -45.9032, -50.8458, 30.92, 0.52 ) }
    dend_24 { pt3dadd( -47.1123, -50.8906, 31.1665, 0.52 ) }
    dend_24 { pt3dadd( -47.9177, -50.885, 31.3074, 0.52 ) }
    dend_24 { pt3dadd( -48.4544, -50.8682, 31.402, 0.52 ) }
    dend_24 { pt3dadd( -49.063, -50.8351, 31.5078, 0.52 ) }
    dend_24 { pt3dadd( -51.0954, -50.7257, 31.8469, 0.52 ) }
    dend_24 { pt3dadd( -53.1508, -50.6382, 32.1621, 0.52 ) }
    dend_24 { pt3dadd( -54.7157, -50.5958, 32.3858, 0.52 ) }
    dend_24 { pt3dadd( -56.1019, -50.5701, 32.5745, 0.52 ) }
    dend_24 { pt3dadd( -56.8405, -50.5654, 32.6737, 0.52 ) }
    dend_24 { pt3dadd( -57.3838, -50.5741, 32.7464, 0.52 ) }
    dend_24 { pt3dadd( -58.066, -50.6067, 32.8522, 0.52 ) }
    dend_24 { pt3dadd( -58.9438, -50.6711, 32.9908, 0.52 ) }
    dend_24 { pt3dadd( -59.3786, -50.7007, 33.0693, 0.52 ) }
    dend_24 { pt3dadd( -60.4415, -50.7407, 33.2576, 0.52 ) }
    dend_24 { pt3dadd( -61.6928, -50.7448, 33.4506, 0.52 ) }
    dend_24 { pt3dadd( -63.3977, -50.7191, 33.7215, 0.52 ) }
    dend_24 { pt3dadd( -64.3449, -50.6844, 33.875, 0.52 ) }
    dend_24 { pt3dadd( -65.3731, -50.6331, 34.041, 0.52 ) }
    dend_24 { pt3dadd( -66.458, -50.5854, 34.2166, 0.52 ) }
    dend_24 { pt3dadd( -68.5231, -50.5266, 34.5477, 0.52 ) }
    dend_24 { pt3dadd( -77.3641, -53.2082, 38.3257, 0.52 ) }
    dend_24 { pt3dadd( -85.4322, -56.9649, 42.8046, 0.52 ) }
    dend_24 { pt3dadd( -93.5767, -61.5043, 46.2673, 0.52 ) }
    dend_24 { pt3dadd( -100.93, -66.8956, 50.1844, 0.52 ) }
    dend_24 { pt3dadd( -109.102, -71.9334, 52.737, 0.52 ) }
    dend_24 { pt3dadd( -116.06, -77.5227, 57.0645, 0.52 ) }
    dend_24 { pt3dadd( -122.317, -82.9423, 62.5374, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.37941, -18.5156, 0.893199, 1.03 ) }
    dend_16 { pt3dadd( -0.922363, -21.5012, -0.821654, 1.03 ) }
    dend_16 { pt3dadd( -0.701424, -22.9445, -1.65063, 1.03 ) }
    dend_16 { pt3dadd( -0.428251, -24.729, -2.6756, 1.03 ) }
    dend_16 { pt3dadd( -0.192021, -26.2721, -3.56195, 0.88 ) }
    dend_16 { pt3dadd( -0.105617, -26.8366, -3.88615, 0.88 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 43/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.37941, -18.5156, 0.893199, 1.47 ) }
    dend_1 { pt3dadd( -1.55904, -20.4152, 0.944292, 1.47 ) }
    dend_1 { pt3dadd( -1.81133, -23.7789, 1.00142, 1.47 ) }
    dend_1 { pt3dadd( -1.94804, -25.9473, 1.028, 1.33 ) }
    dend_1 { pt3dadd( -2.06549, -28.0168, 1.04708, 1.18 ) }
    dend_1 { pt3dadd( -2.13146, -29.6236, 1.05801, 1.03 ) }
    dend_1 { pt3dadd( -2.21677, -32.1161, 1.05834, 1.03 ) }
    dend_1 { pt3dadd( -2.25949, -34.9102, 1.04298, 1.03 ) }
    dend_1 { pt3dadd( -2.25565, -35.974, 1.03269, 1.03 ) }
    dend_1 { pt3dadd( -2.22955, -37.5567, 1.00518, 1.03 ) }
    dend_1 { pt3dadd( -2.17593, -40.2278, 0.944407, 1.03 ) }
    dend_1 { pt3dadd( -2.15373, -41.4821, 0.910821, 1.03 ) }
    dend_1 { pt3dadd( -2.1273, -42.2676, 0.90949, 1.03 ) }
    dend_1 { pt3dadd( -2.01768, -43.9889, 1.014, 1.25 ) }
    dend_1 { pt3dadd( -1.86603, -46.1232, 1.25465, 1.18 ) }
    dend_1 { pt3dadd( -1.76373, -47.8834, 1.53717, 1.11 ) }
    dend_1 { pt3dadd( -1.73781, -49.5566, 1.90316, 1.11 ) }
    dend_1 { pt3dadd( -1.75634, -50.9925, 2.27288, 1.03 ) }
    dend_1 { pt3dadd( -1.85493, -52.9202, 2.80262, 1.03 ) }
    dend_1 { pt3dadd( -2.01274, -54.4736, 3.2521, 1.03 ) }
    dend_1 { pt3dadd( -2.23119, -56.2388, 3.769, 1.03 ) }
    dend_1 { pt3dadd( -2.44776, -57.9603, 4.24394, 1.03 ) }
    dend_1 { pt3dadd( -2.55709, -58.8468, 4.4626, 1.03 ) }
    dend_1 { pt3dadd( -2.72418, -60.4104, 4.75966, 1.03 ) }
    dend_1 { pt3dadd( -2.85737, -61.9916, 4.95321, 1.03 ) }
    dend_1 { pt3dadd( -2.89396, -63.1511, 5.08851, 1.03 ) }
    dend_1 { pt3dadd( -2.85982, -64.2732, 5.2096, 1.03 ) }
    dend_1 { pt3dadd( -2.77742, -65.2252, 5.28955, 1.03 ) }
    dend_1 { pt3dadd( -2.59813, -66.92, 5.43534, 1.18 ) }
    dend_1 { pt3dadd( -2.32135, -68.9486, 5.61263, 1.18 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 73/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.822885, -46.2129, 0.0130989, 0.501844 ) }
    axon_1 { pt3dadd( -1.17301, -61.2088, 0.0130989, 0.501844 ) }
    axon_1 { pt3dadd( -1.52314, -76.2048, 0.0130989, 0.501844 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 76/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -4.73219, 24.8621, 5.34694, 0.96 ) }
    dend_53 { pt3dadd( -6.31155, 25.4819, 5.35686, 0.96 ) }
    dend_53 { pt3dadd( -7.39925, 25.9225, 5.35626, 0.96 ) }
    dend_53 { pt3dadd( -8.49698, 26.3796, 5.34593, 0.81 ) }
    dend_53 { pt3dadd( -9.09586, 26.6385, 5.35082, 0.81 ) }
    dend_53 { pt3dadd( -9.78647, 26.9391, 5.38706, 0.96 ) }
    dend_53 { pt3dadd( -10.5631, 27.2501, 5.44811, 0.96 ) }
    dend_53 { pt3dadd( -11.1243, 27.4562, 5.51237, 0.96 ) }
    dend_53 { pt3dadd( -11.8573, 27.7079, 5.62886, 0.88 ) }
    dend_53 { pt3dadd( -12.4753, 27.8994, 5.7157, 0.88 ) }
    dend_53 { pt3dadd( -13.4697, 28.1587, 5.81085, 1.03 ) }
    dend_53 { pt3dadd( -14.9269, 28.4722, 5.84718, 1.25 ) }
    dend_53 { pt3dadd( -15.6696, 28.6107, 5.81881, 1.25 ) }
    dend_53 { pt3dadd( -16.481, 28.7394, 5.73388, 1.03 ) }
    dend_53 { pt3dadd( -17.8092, 28.923, 5.50027, 0.88 ) }
    dend_53 { pt3dadd( -18.9907, 29.0734, 5.2244, 0.74 ) }
    dend_53 { pt3dadd( -20.0615, 29.2094, 4.89833, 1.11 ) }
    dend_53 { pt3dadd( -20.8952, 29.3231, 4.5952, 1.18 ) }
    dend_53 { pt3dadd( -21.6629, 29.4166, 4.28125, 1.18 ) }
    dend_53 { pt3dadd( -22.302, 29.4713, 4.00372, 1.18 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 96/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -4.73219, 24.8621, 5.34694, 0.96 ) }
    dend_50 { pt3dadd( -4.57006, 26.9204, 5.50026, 0.96 ) }
    dend_50 { pt3dadd( -4.49527, 27.7086, 5.54284, 1.25 ) }
    dend_50 { pt3dadd( -4.41709, 28.4335, 5.5678, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_50 { pt3dadd( -4.35257, 29.0782, 5.58281, 1.4 ) }
    dend_50 { pt3dadd( -4.29623, 29.8602, 5.64152, 1.4 ) }
    dend_50 { pt3dadd( -4.26608, 30.8447, 5.74698, 1.18 ) }
    dend_50 { pt3dadd( -4.2988, 31.7308, 5.88479, 1.03 ) }
    dend_50 { pt3dadd( -4.4574, 32.8393, 6.13053, 0.88 ) }
    dend_50 { pt3dadd( -4.67193, 33.5877, 6.3388, 0.81 ) }
    dend_50 { pt3dadd( -5.1975, 34.7211, 6.79915, 1.03 ) }
    dend_50 { pt3dadd( -5.60452, 35.292, 7.11002, 1.03 ) }
    dend_50 { pt3dadd( -6.06898, 35.7467, 7.43471, 1.25 ) }
    dend_50 { pt3dadd( -6.8804, 36.3746, 8.05029, 0.88 ) }
    dend_50 { pt3dadd( -7.49704, 36.7813, 8.53217, 0.74 ) }
    dend_50 { pt3dadd( -8.33319, 37.3136, 9.22884, 0.74 ) }
    dend_50 { pt3dadd( -8.9696, 37.7353, 9.81988, 1.03 ) }
    dend_50 { pt3dadd( -9.60505, 38.186, 10.5213, 1.18 ) }
    dend_50 { pt3dadd( -10.5242, 38.9163, 11.7121, 1.03 ) }
    dend_50 { pt3dadd( -10.9258, 39.313, 12.3495, 0.66 ) }
    dend_50 { pt3dadd( -11.5668, 40.1762, 13.68, 0.59 ) }
    dend_50 { pt3dadd( -11.8333, 40.7508, 14.4788, 0.96 ) }
    dend_50 { pt3dadd( -11.9303, 41.2436, 15.1017, 0.96 ) }
    dend_50 { pt3dadd( -11.9481, 41.6198, 15.501, 1.11 ) }
    dend_50 { pt3dadd( -11.9193, 42.1466, 15.9967, 1.11 ) }
    dend_50 { pt3dadd( -11.8243, 42.7457, 16.5281, 1.25 ) }
    dend_50 { pt3dadd( -11.6684, 43.3696, 17.0074, 1.03 ) }
    dend_50 { pt3dadd( -11.4158, 44.4932, 17.7532, 0.59 ) }
    dend_50 { pt3dadd( -11.2373, 45.4444, 18.3574, 1.18 ) }
    // Section: dend_46, id: dend_46, parent: dend_36 (entry count 25/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 24.2598, 39.0268, -0.450982, 0.59 ) }
    dend_46 { pt3dadd( 24.8453, 40.222, -0.492922, 0.59 ) }
    dend_46 { pt3dadd( 25.1706, 40.9067, -0.512879, 0.29 ) }
    dend_46 { pt3dadd( 25.6325, 41.9391, -0.538203, 0.66 ) }
    dend_46 { pt3dadd( 26.1708, 43.2372, -0.523479, 0.29 ) }
    dend_46 { pt3dadd( 26.5352, 44.2003, -0.501427, 0.29 ) }
    dend_46 { pt3dadd( 26.8495, 45.0722, -0.473743, 1.11 ) }
    dend_46 { pt3dadd( 27.0289, 45.611, -0.43685, 1.11 ) }
    dend_46 { pt3dadd( 27.2518, 46.3698, -0.362357, 0.74 ) }
    dend_46 { pt3dadd( 27.5135, 47.3448, -0.221598, 0.44 ) }
    dend_46 { pt3dadd( 27.7189, 48.1844, -0.0579221, 0.29 ) }
    dend_46 { pt3dadd( 27.8754, 48.9228, 0.100481, 0.29 ) }
    dend_46 { pt3dadd( 28.0381, 49.7892, 0.285874, 0.96 ) }
    dend_46 { pt3dadd( 28.1419, 50.3939, 0.403167, 1.18 ) }
    dend_46 { pt3dadd( 28.2574, 51.1795, 0.533731, 1.18 ) }
    dend_46 { pt3dadd( 28.2981, 51.5217, 0.580282, 1.18 ) }
    dend_46 { pt3dadd( 28.4256, 52.8669, 0.758673, 0.52 ) }
    dend_46 { pt3dadd( 28.4969, 53.8572, 0.81894, 0.52 ) }
    dend_46 { pt3dadd( 28.5789, 55.0053, 0.81844, 0.96 ) }
    dend_46 { pt3dadd( 28.6381, 55.7957, 0.776354, 1.4 ) }
    dend_46 { pt3dadd( 28.6923, 56.4452, 0.699155, 1.4 ) }
    dend_46 { pt3dadd( 28.7357, 56.95, 0.618495, 1.4 ) }
    dend_46 { pt3dadd( 28.906, 58.5524, 0.296805, 0.59 ) }
    dend_46 { pt3dadd( 28.9917, 59.2732, 0.113665, 0.59 ) }
    dend_46 { pt3dadd( 29.0781, 59.9752, -0.055893, 0.74 ) }
    dend_46 { pt3dadd( 29.1833, 60.8819, -0.259851, 0.52 ) }
    dend_46 { pt3dadd( 29.2641, 61.7491, -0.438539, 0.29 ) }
    dend_46 { pt3dadd( 29.3218, 62.7297, -0.614431, 0.29 ) }
    dend_46 { pt3dadd( 29.3336, 63.7108, -0.762767, 0.29 ) }
    dend_46 { pt3dadd( 29.3009, 64.9525, -0.94993, 0.96 ) }
    dend_46 { pt3dadd( 29.2769, 65.6193, -1.03832, 1.33 ) }
    dend_46 { pt3dadd( 29.2665, 66.0412, -1.08406, 1.69 ) }
    dend_46 { pt3dadd( 29.2588, 66.6683, -1.16663, 1.77 ) }
    dend_46 { pt3dadd( 29.2569, 67.4883, -1.25204, 1.33 ) }
    dend_46 { pt3dadd( 29.2927, 68.7726, -1.35698, 0.37 ) }
    dend_46 { pt3dadd( 29.3257, 69.4262, -1.41478, 0.37 ) }
    dend_46 { pt3dadd( 29.3541, 70.0013, -1.42855, 0.29 ) }
    dend_46 { pt3dadd( 29.3753, 70.7323, -1.40797, 0.29 ) }
    dend_46 { pt3dadd( 29.3697, 71.763, -1.32134, 0.74 ) }
    dend_46 { pt3dadd( 29.3395, 72.4832, -1.24395, 0.96 ) }
    dend_46 { pt3dadd( 29.294, 72.9998, -1.20944, 0.96 ) }
    dend_46 { pt3dadd( 29.1579, 74.0561, -1.17837, 0.66 ) }
    dend_46 { pt3dadd( 29.0471, 74.7856, -1.18369, 0.44 ) }
    dend_46 { pt3dadd( 28.878, 75.8682, -1.2276, 0.29 ) }
    dend_46 { pt3dadd( 28.7366, 76.8214, -1.3321, 0.88 ) }
    dend_46 { pt3dadd( 28.6316, 77.7786, -1.4644, 1.33 ) }
    dend_46 { pt3dadd( 28.602, 78.3577, -1.55394, 1.4 ) }
    dend_46 { pt3dadd( 28.6327, 79.2075, -1.69074, 1.11 ) }
    dend_46 { pt3dadd( 28.702, 79.9098, -1.78907, 0.81 ) }
    dend_46 { pt3dadd( 28.8104, 80.6978, -1.88142, 0.81 ) }
    dend_46 { pt3dadd( 28.9859, 81.8289, -1.97324, 0.22 ) }
    dend_46 { pt3dadd( 29.1429, 82.7713, -2.01917, 0.22 ) }
    dend_46 { pt3dadd( 29.3397, 83.9385, -2.07131, 0.22 ) }
    dend_46 { pt3dadd( 29.5523, 85.2001, -2.10511, 0.96 ) }
    dend_46 { pt3dadd( 29.6207, 85.6347, -2.10246, 1.03 ) }
    dend_46 { pt3dadd( 29.6902, 86.1728, -2.0819, 0.81 ) }
    dend_46 { pt3dadd( 29.745, 86.8062, -2.05028, 0.44 ) }
    dend_46 { pt3dadd( 29.7669, 87.2828, -2.02267, 0.29 ) }
    dend_46 { pt3dadd( 29.7803, 87.6653, -1.99926, 0.29 ) }
    dend_46 { pt3dadd( 29.8406, 88.3728, -1.96008, 0.29 ) }
    dend_46 { pt3dadd( 29.9205, 89.0374, -1.92742, 0.74 ) }
    dend_46 { pt3dadd( 29.981, 89.4638, -1.90975, 0.74 ) }
    dend_46 { pt3dadd( 30.1032, 90.3853, -1.87729, 0.29 ) }
    dend_46 { pt3dadd( 30.1693, 91.1173, -1.85767, 0.29 ) }
    dend_46 { pt3dadd( 30.2143, 92.1353, -1.88845, 1.03 ) }
    dend_46 { pt3dadd( 30.2153, 92.5653, -1.9164, 1.4 ) }
    dend_46 { pt3dadd( 30.2029, 93.1987, -1.93378, 1.11 ) }
    dend_46 { pt3dadd( 30.1701, 94.0896, -1.92553, 0.29 ) }
    dend_46 { pt3dadd( 30.1217, 95.0007, -1.86786, 0.29 ) }
    dend_46 { pt3dadd( 30.0379, 96.4118, -1.70688, 0.96 ) }
    dend_46 { pt3dadd( 30.0111, 96.9507, -1.60318, 1.18 ) }
    dend_46 { pt3dadd( 29.9982, 98.221, -1.25384, 0.29 ) }
    dend_46 { pt3dadd( 30.0145, 98.7283, -1.07864, 0.29 ) }
    dend_46 { pt3dadd( 30.0913, 99.5511, -0.731359, 0.74 ) }
    dend_46 { pt3dadd( 30.2063, 100.127, -0.452575, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( 30.4759, 101.077, 0.0435206, 0.29 ) }
    dend_46 { pt3dadd( 30.899, 102.29, 0.608267, 0.88 ) }
    dend_46 { pt3dadd( 30.9797, 102.492, 0.6879, 1.11 ) }
    dend_46 { pt3dadd( 31.2102, 103.013, 0.888849, 1.11 ) }
    dend_46 { pt3dadd( 31.7726, 104.156, 1.31387, 0.22 ) }
    dend_46 { pt3dadd( 32.1464, 104.872, 1.56782, 0.22 ) }
    dend_46 { pt3dadd( 32.8003, 106.048, 1.95276, 1.03 ) }
    dend_46 { pt3dadd( 33.0043, 106.4, 2.06986, 1.18 ) }
    dend_46 { pt3dadd( 33.4944, 107.252, 2.41452, 0.66 ) }
    dend_46 { pt3dadd( 33.7793, 107.777, 2.66259, 0.22 ) }
    dend_46 { pt3dadd( 34.0319, 108.3, 2.94394, 0.22 ) }
    dend_46 { pt3dadd( 34.2669, 108.823, 3.26174, 0.74 ) }
    dend_46 { pt3dadd( 34.4465, 109.263, 3.53635, 0.74 ) }
    dend_46 { pt3dadd( 34.8373, 110.364, 4.18765, 0.37 ) }
    dend_46 { pt3dadd( 35.0332, 110.996, 4.54428, 0.37 ) }
    dend_46 { pt3dadd( 35.2285, 111.736, 4.95523, 0.29 ) }
    dend_46 { pt3dadd( 35.4243, 112.604, 5.41267, 0.81 ) }
    dend_46 { pt3dadd( 35.542, 113.255, 5.71935, 0.96 ) }
    dend_46 { pt3dadd( 35.6016, 113.645, 5.8799, 0.96 ) }
    dend_46 { pt3dadd( 35.7656, 114.826, 6.30006, 0.29 ) }
    dend_46 { pt3dadd( 35.8881, 115.745, 6.62166, 0.29 ) }
    dend_46 { pt3dadd( 36.0332, 116.894, 7.0183, 0.29 ) }
    dend_46 { pt3dadd( 36.1219, 117.636, 7.25538, 0.81 ) }
    dend_46 { pt3dadd( 36.1718, 118.045, 7.38391, 1.03 ) }
    dend_46 { pt3dadd( 36.2312, 118.473, 7.50805, 1.03 ) }
    dend_46 { pt3dadd( 36.395, 119.49, 7.76113, 0.29 ) }
    dend_46 { pt3dadd( 36.554, 120.283, 7.95236, 0.29 ) }
    dend_46 { pt3dadd( 36.8089, 121.24, 8.18067, 0.52 ) }
    dend_46 { pt3dadd( 36.9252, 121.578, 8.25335, 0.52 ) }
    dend_46 { pt3dadd( 37.3216, 122.554, 8.42561, 0.29 ) }
    dend_46 { pt3dadd( 37.6733, 123.301, 8.52161, 0.96 ) }
    dend_46 { pt3dadd( 37.8907, 123.704, 8.55117, 0.96 ) }
    dend_46 { pt3dadd( 38.252, 124.336, 8.56969, 0.66 ) }
    dend_46 { pt3dadd( 38.62, 125.029, 8.5598, 0.52 ) }
    dend_46 { pt3dadd( 38.9797, 125.819, 8.52238, 0.37 ) }
    dend_46 { pt3dadd( 39.1695, 126.317, 8.48176, 0.37 ) }
    dend_46 { pt3dadd( 39.3342, 126.823, 8.42601, 0.29 ) }
    dend_46 { pt3dadd( 39.5004, 127.363, 8.35034, 0.29 ) }
    dend_46 { pt3dadd( 39.777, 128.25, 8.1926, 0.29 ) }
    dend_46 { pt3dadd( 39.9488, 128.786, 8.0901, 0.29 ) }
    dend_46 { pt3dadd( 40.2152, 129.616, 7.91387, 0.88 ) }
    dend_46 { pt3dadd( 40.411, 130.25, 7.75166, 1.03 ) }
    dend_46 { pt3dadd( 40.7994, 131.551, 7.35603, 0.22 ) }
    dend_46 { pt3dadd( 41.0435, 132.383, 7.08399, 0.22 ) }
    dend_46 { pt3dadd( 41.2032, 132.915, 6.90476, 0.22 ) }
    dend_46 { pt3dadd( 41.5064, 133.969, 6.53656, 1.11 ) }
    dend_46 { pt3dadd( 41.6965, 134.712, 6.26868, 1.33 ) }
    dend_46 { pt3dadd( 41.9629, 136.005, 5.80896, 0.22 ) }
    dend_46 { pt3dadd( 42.0723, 136.814, 5.52273, 0.22 ) }
    dend_46 { pt3dadd( 42.119, 137.269, 5.36954, 0.66 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 50/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 24.2598, 39.0268, -0.450982, 1.18 ) }
    dend_37 { pt3dadd( 25.7833, 39.3117, -0.484289, 1.18 ) }
    dend_37 { pt3dadd( 26.9674, 39.5331, -0.510177, 1.18 ) }
    dend_37 { pt3dadd( 28.0188, 39.7297, -0.533163, 1.11 ) }
    dend_37 { pt3dadd( 29.9877, 40.0979, -0.57621, 1.33 ) }
    dend_37 { pt3dadd( 30.5944, 40.2114, -0.589474, 1.33 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 56/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -8.16933, 22.4048, -34.825, 0.52 ) }
    dend_33 { pt3dadd( -7.18364, 22.7802, -36.4453, 0.52 ) }
    dend_33 { pt3dadd( -6.36032, 23.1699, -37.7867, 0.52 ) }
    dend_33 { pt3dadd( -5.47393, 23.5933, -39.2034, 0.52 ) }
    dend_33 { pt3dadd( -4.33048, 24.0846, -40.9816, 0.52 ) }
    dend_33 { pt3dadd( -3.63119, 24.3488, -42.0896, 0.52 ) }
    dend_33 { pt3dadd( -2.74617, 24.6423, -43.422, 0.52 ) }
    dend_33 { pt3dadd( -1.62681, 24.9571, -45.1279, 0.52 ) }
    dend_33 { pt3dadd( -0.257683, 25.2676, -47.1329, 0.52 ) }
    dend_33 { pt3dadd( 1.21751, 25.5532, -49.2245, 0.52 ) }
    dend_33 { pt3dadd( 3.62717, 25.9577, -52.4655, 0.52 ) }
    dend_33 { pt3dadd( 4.61842, 26.1201, -53.7729, 0.52 ) }
    dend_33 { pt3dadd( 5.74147, 26.32, -55.2451, 0.52 ) }
    dend_33 { pt3dadd( 7.18073, 26.6016, -57.2183, 0.52 ) }
    dend_33 { pt3dadd( 8.09673, 26.8281, -58.5093, 0.52 ) }
    dend_33 { pt3dadd( 8.74935, 27.0343, -59.485, 0.52 ) }
    dend_33 { pt3dadd( 9.38996, 27.2851, -60.5284, 0.52 ) }
    dend_33 { pt3dadd( 10.6562, 27.8239, -62.9493, 0.52 ) }
    dend_33 { pt3dadd( 11.5962, 28.2199, -64.9179, 0.52 ) }
    dend_33 { pt3dadd( 12.5895, 28.5981, -67.1403, 0.52 ) }
    dend_33 { pt3dadd( 13.4619, 28.8734, -69.1587, 0.52 ) }
    dend_33 { pt3dadd( 14.4548, 29.1723, -71.5584, 0.52 ) }
    dend_33 { pt3dadd( 15.877, 29.65, -75.2666, 0.52 ) }
    dend_33 { pt3dadd( 16.4222, 29.8854, -76.8808, 0.52 ) }
    dend_33 { pt3dadd( 16.6306, 30.0086, -77.5817, 0.52 ) }
    dend_33 { pt3dadd( 17.1672, 30.4312, -79.7323, 0.52 ) }
    dend_33 { pt3dadd( 17.6195, 30.9003, -81.8499, 0.52 ) }
    dend_33 { pt3dadd( 18.2215, 31.7355, -85.1854, 0.52 ) }
    dend_33 { pt3dadd( 18.541, 32.3312, -87.3262, 0.52 ) }
    dend_33 { pt3dadd( 18.7695, 32.8447, -89.0864, 0.52 ) }
    dend_33 { pt3dadd( 19.0579, 33.5633, -91.58, 0.52 ) }
    dend_33 { pt3dadd( 19.3163, 34.1965, -93.8498, 0.52 ) }
    dend_33 { pt3dadd( 19.652, 34.7831, -95.9985, 0.52 ) }
    dend_33 { pt3dadd( 20.1185, 35.3672, -98.0378, 0.52 ) }
    dend_33 { pt3dadd( 20.7643, 36.0188, -100.152, 0.52 ) }
    dend_33 { pt3dadd( 21.5648, 36.7268, -102.245, 0.52 ) }
    dend_33 { pt3dadd( 22.3262, 37.3503, -103.913, 0.52 ) }
    dend_33 { pt3dadd( 23.6701, 38.4088, -106.574, 0.52 ) }
    dend_33 { pt3dadd( 24.8803, 39.3356, -108.787, 0.52 ) }
    dend_33 { pt3dadd( 25.4512, 39.768, -109.763, 0.52 ) }
    dend_33 { pt3dadd( 26.4215, 40.4833, -111.348, 0.52 ) }
    dend_33 { pt3dadd( 28.1005, 41.703, -114.031, 0.52 ) }
    dend_33 { pt3dadd( 29.1871, 42.4836, -115.816, 0.52 ) }
    dend_33 { pt3dadd( 30.2766, 43.2609, -117.728, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_33 { pt3dadd( 31.2184, 43.918, -119.417, 0.52 ) }
    dend_33 { pt3dadd( 31.9037, 44.3774, -120.649, 0.52 ) }
    dend_33 { pt3dadd( 32.3681, 44.6762, -121.497, 0.52 ) }
    dend_33 { pt3dadd( 33.038, 45.0813, -122.723, 0.52 ) }
    dend_33 { pt3dadd( 33.6015, 45.3923, -123.665, 0.52 ) }
    dend_33 { pt3dadd( 34.2161, 45.7296, -124.705, 0.52 ) }
    dend_33 { pt3dadd( 34.8059, 46.0515, -125.727, 0.52 ) }
    dend_33 { pt3dadd( 36.194, 46.8475, -128.147, 0.52 ) }
    dend_33 { pt3dadd( 37.1235, 47.3949, -129.729, 0.52 ) }
    dend_33 { pt3dadd( 38.6777, 48.269, -132.29, 0.52 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 10/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -8.16933, 22.4048, -34.825, 0.66 ) }
    dend_32 { pt3dadd( -9.46481, 21.9992, -35.5903, 0.66 ) }
    dend_32 { pt3dadd( -10.9384, 21.505, -36.5833, 0.66 ) }
    dend_32 { pt3dadd( -12.5346, 20.9756, -37.7218, 0.66 ) }
    dend_32 { pt3dadd( -13.5399, 20.6543, -38.502, 0.66 ) }
    dend_32 { pt3dadd( -14.5703, 20.3495, -39.3294, 0.59 ) }
    dend_32 { pt3dadd( -15.9446, 19.9723, -40.4259, 0.59 ) }
    dend_32 { pt3dadd( -17.1846, 19.6526, -41.4602, 0.59 ) }
    dend_32 { pt3dadd( -17.9109, 19.4921, -42.0461, 0.59 ) }
    dend_32 { pt3dadd( -19.2136, 19.2567, -42.9807, 0.59 ) }
    dend_32 { pt3dadd( -20.6965, 19.0635, -43.95, 0.59 ) }
    dend_32 { pt3dadd( -22.4142, 18.9141, -45.0319, 0.59 ) }
    dend_32 { pt3dadd( -23.8436, 18.8319, -45.8415, 0.59 ) }
    dend_32 { pt3dadd( -25.164, 18.7484, -46.5916, 0.59 ) }
    dend_32 { pt3dadd( -26.3382, 18.6499, -47.2978, 0.59 ) }
    dend_32 { pt3dadd( -28.2131, 18.466, -48.4521, 0.59 ) }
    dend_32 { pt3dadd( -28.8, 18.3987, -48.8557, 0.59 ) }
    dend_32 { pt3dadd( -29.7041, 18.3053, -49.5363, 0.59 ) }
    dend_32 { pt3dadd( -32.2096, 18.1164, -51.4881, 0.59 ) }
    dend_32 { pt3dadd( -33.5564, 18.0794, -52.6067, 0.59 ) }
    dend_32 { pt3dadd( -34.3135, 18.0872, -53.2163, 0.52 ) }
    dend_32 { pt3dadd( -36.0747, 18.1802, -54.5355, 0.52 ) }
    dend_32 { pt3dadd( -38.6258, 18.4159, -56.2393, 0.52 ) }
    dend_32 { pt3dadd( -40.6611, 18.6742, -57.4155, 0.52 ) }
    dend_32 { pt3dadd( -44.1625, 19.2415, -59.1136, 0.52 ) }
    dend_32 { pt3dadd( -46.0388, 19.5771, -59.8738, 0.52 ) }
    dend_32 { pt3dadd( -49.2805, 20.1989, -60.9855, 0.52 ) }
    dend_32 { pt3dadd( -51.8645, 20.728, -61.7243, 0.52 ) }
    dend_32 { pt3dadd( -54.5229, 21.3794, -62.3455, 0.52 ) }
    dend_32 { pt3dadd( -56.747, 22.0059, -62.7638, 0.52 ) }
    dend_32 { pt3dadd( -60.2836, 23.1398, -63.3202, 0.52 ) }
    dend_32 { pt3dadd( -64.6149, 24.5947, -63.9939, 0.52 ) }
    dend_32 { pt3dadd( -65.924, 25.0487, -64.1815, 0.52 ) }
    dend_32 { pt3dadd( -71.189, 26.8858, -65.0124, 0.52 ) }
    dend_32 { pt3dadd( -74.0627, 27.8862, -65.5054, 0.52 ) }
    dend_32 { pt3dadd( -80.0397, 29.8901, -66.4806, 0.52 ) }
    dend_32 { pt3dadd( -84.8025, 31.3852, -67.2301, 0.52 ) }
    dend_32 { pt3dadd( -88.8067, 32.5511, -67.7964, 0.52 ) }
    dend_32 { pt3dadd( -92.9243, 33.6377, -68.3464, 0.52 ) }
    dend_32 { pt3dadd( -94.242, 33.9393, -68.5115, 0.52 ) }
    dend_32 { pt3dadd( -96.6585, 34.4589, -68.7965, 0.52 ) }
    dend_32 { pt3dadd( -98.6038, 34.8346, -69.0018, 0.52 ) }
    dend_32 { pt3dadd( -101.32, 35.262, -69.2632, 0.52 ) }
    dend_32 { pt3dadd( -105.507, 35.7757, -69.7363, 0.52 ) }
    dend_32 { pt3dadd( -108.541, 36.0858, -70.1243, 0.52 ) }
    dend_32 { pt3dadd( -111.608, 36.3519, -70.6373, 0.52 ) }
    dend_32 { pt3dadd( -115.434, 36.6078, -71.4175, 0.52 ) }
    dend_32 { pt3dadd( -122.226, 36.9579, -72.9668, 0.52 ) }
    dend_32 { pt3dadd( -126.197, 37.0599, -73.9254, 0.52 ) }
    dend_32 { pt3dadd( -127.715, 37.0714, -74.3211, 0.52 ) }
    dend_32 { pt3dadd( -130.24, 37.0689, -75.0177, 0.52 ) }
    dend_32 { pt3dadd( -131.31, 37.0621, -75.3212, 0.52 ) }
    dend_32 { pt3dadd( -134.191, 37.0523, -76.2108, 0.52 ) }
    dend_32 { pt3dadd( -137.578, 37.1037, -77.369, 0.52 ) }
    dend_32 { pt3dadd( -139.79, 37.2001, -78.1192, 0.52 ) }
    dend_32 { pt3dadd( -143.161, 37.4803, -79.3636, 0.52 ) }
    dend_32 { pt3dadd( -146.3, 37.9584, -80.6492, 0.52 ) }
    dend_32 { pt3dadd( -148.213, 38.4049, -81.5579, 0.52 ) }
    dend_32 { pt3dadd( -150.046, 39.0124, -82.6123, 0.52 ) }
    dend_32 { pt3dadd( -151.965, 39.9434, -83.9898, 0.52 ) }
    dend_32 { pt3dadd( -153.415, 40.8887, -85.1761, 0.52 ) }
    dend_32 { pt3dadd( -155.415, 42.5637, -87.0791, 0.52 ) }
    dend_32 { pt3dadd( -156.644, 43.8328, -88.3884, 0.52 ) }
    dend_32 { pt3dadd( -157.808, 45.1773, -89.6899, 0.52 ) }
    dend_32 { pt3dadd( -158.69, 46.279, -90.7519, 0.52 ) }
    dend_32 { pt3dadd( -159.25, 47.0118, -91.4726, 0.52 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -12.3827, -53.3837, 29.0627, 0.52 ) }
    dend_27 { pt3dadd( -12.5279, -55.0104, 28.8742, 0.52 ) }
    dend_27 { pt3dadd( -12.5767, -55.7812, 28.8333, 0.52 ) }
    dend_27 { pt3dadd( -12.587, -56.6155, 28.8356, 0.52 ) }
    dend_27 { pt3dadd( -12.4976, -58.1158, 28.8956, 0.52 ) }
    dend_27 { pt3dadd( -12.408, -58.9373, 28.9458, 0.52 ) }
    dend_27 { pt3dadd( -12.2872, -59.8004, 29.0076, 0.52 ) }
    dend_27 { pt3dadd( -12.1744, -60.3763, 29.1301, 0.52 ) }
    dend_27 { pt3dadd( -11.9656, -61.1617, 29.373, 0.52 ) }
    dend_27 { pt3dadd( -11.6926, -62.0339, 29.7062, 0.52 ) }
    dend_27 { pt3dadd( -11.2286, -63.3595, 30.2984, 0.52 ) }
    dend_27 { pt3dadd( -10.8622, -64.3421, 30.8098, 0.52 ) }
    dend_27 { pt3dadd( -10.2946, -65.8413, 31.6817, 0.52 ) }
    dend_27 { pt3dadd( -9.98508, -66.7106, 32.2089, 0.52 ) }
    dend_27 { pt3dadd( -9.84747, -67.1167, 32.4783, 0.52 ) }
    dend_27 { pt3dadd( -9.65837, -67.6844, 32.9086, 0.52 ) }
    dend_27 { pt3dadd( -9.35884, -68.4572, 33.6123, 0.52 ) }
    dend_27 { pt3dadd( -9.20693, -68.8205, 33.9698, 0.52 ) }
    dend_27 { pt3dadd( -9.0055, -69.3186, 34.3616, 0.52 ) }
    dend_27 { pt3dadd( -8.99628, -78.9807, 35.7008, 0.52 ) }
    dend_27 { pt3dadd( -7.12715, -88.5408, 36.3051, 0.52 ) }
    dend_27 { pt3dadd( -5.58831, -98.1484, 37.034, 0.52 ) }
    dend_27 { pt3dadd( -4.18023, -107.795, 37.4005, 0.52 ) }
    dend_27 { pt3dadd( -0.89006, -116.99, 36.9232, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_27 { pt3dadd( 2.69294, -126.088, 37.2309, 0.52 ) }
    dend_27 { pt3dadd( 6.56848, -134.93, 38.8869, 0.52 ) }
    dend_27 { pt3dadd( 9.99945, -143.981, 40.3176, 0.52 ) }
    dend_27 { pt3dadd( 14.9838, -152.21, 42.2968, 0.52 ) }
    dend_27 { pt3dadd( 20.6153, -160.042, 44.2371, 0.52 ) }
    dend_27 { pt3dadd( 27.5644, -166.763, 46.2842, 0.52 ) }
    dend_27 { pt3dadd( 34.3807, -172.741, 50.2776, 0.52 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 7/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -12.3827, -53.3837, 29.0627, 0.59 ) }
    dend_26 { pt3dadd( -13.1222, -54.869, 29.2668, 0.59 ) }
    dend_26 { pt3dadd( -13.4133, -55.478, 29.3538, 0.59 ) }
    dend_26 { pt3dadd( -13.8695, -56.3543, 29.4944, 0.59 ) }
    dend_26 { pt3dadd( -14.5327, -57.5424, 29.6851, 0.59 ) }
    dend_26 { pt3dadd( -14.9629, -58.2285, 29.8132, 0.59 ) }
    dend_26 { pt3dadd( -15.3461, -58.7769, 29.9336, 0.59 ) }
    dend_26 { pt3dadd( -16.175, -59.8196, 30.2379, 0.59 ) }
    dend_26 { pt3dadd( -16.7735, -60.4619, 30.4429, 0.59 ) }
    dend_26 { pt3dadd( -17.6165, -61.1955, 30.706, 0.59 ) }
    dend_26 { pt3dadd( -18.4726, -61.8245, 30.9558, 0.59 ) }
    dend_26 { pt3dadd( -19.2758, -62.338, 31.2639, 0.59 ) }
    dend_26 { pt3dadd( -20.4602, -63.0244, 31.8295, 0.59 ) }
    dend_26 { pt3dadd( -20.8038, -63.2169, 32.021, 0.59 ) }
    dend_26 { pt3dadd( -21.8176, -63.8237, 32.6314, 0.59 ) }
    dend_26 { pt3dadd( -22.5896, -64.3009, 33.1196, 0.59 ) }
    dend_26 { pt3dadd( -24.194, -65.3851, 34.1515, 0.59 ) }
    dend_26 { pt3dadd( -24.9636, -65.8996, 34.6458, 0.59 ) }
    dend_26 { pt3dadd( -25.9662, -66.5311, 35.2796, 0.59 ) }
    dend_26 { pt3dadd( -27.0155, -67.1602, 35.8945, 0.59 ) }
    dend_26 { pt3dadd( -27.5492, -67.4631, 36.1766, 0.59 ) }
    dend_26 { pt3dadd( -28.0382, -67.7183, 36.3968, 0.59 ) }
    dend_26 { pt3dadd( -29.4122, -68.373, 36.8919, 0.59 ) }
    dend_26 { pt3dadd( -30.6169, -68.8659, 37.3325, 0.59 ) }
    dend_26 { pt3dadd( -31.24, -69.0852, 37.579, 0.59 ) }
    dend_26 { pt3dadd( -32.0433, -69.3735, 37.8957, 0.59 ) }
    dend_26 { pt3dadd( -32.7951, -69.7324, 38.1538, 0.59 ) }
    dend_26 { pt3dadd( -33.4293, -70.1144, 38.3423, 0.59 ) }
    dend_26 { pt3dadd( -34.4562, -70.8732, 38.5676, 0.59 ) }
    dend_26 { pt3dadd( -35.2147, -71.4791, 38.7121, 0.59 ) }
    dend_26 { pt3dadd( -36.5758, -72.6227, 38.938, 0.59 ) }
    dend_26 { pt3dadd( -38.5767, -74.4196, 39.189, 0.59 ) }
    dend_26 { pt3dadd( -39.2836, -75.1259, 39.2481, 0.52 ) }
    dend_26 { pt3dadd( -39.8576, -75.7638, 39.2645, 0.52 ) }
    dend_26 { pt3dadd( -46.729, -82.241, 42.2056, 0.52 ) }
    dend_26 { pt3dadd( -52.6243, -89.6232, 45.0197, 0.52 ) }
    dend_26 { pt3dadd( -58.8113, -96.8302, 47.6809, 0.52 ) }
    dend_26 { pt3dadd( -66.7595, -102.635, 48.8594, 0.52 ) }
    dend_26 { pt3dadd( -74.8645, -107.504, 51.9191, 0.52 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 46/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.105617, -26.8366, -3.88615, 0.66 ) }
    dend_20 { pt3dadd( 0.169059, -29.7254, -4.82615, 0.66 ) }
    dend_20 { pt3dadd( 0.375397, -30.7699, -5.03768, 0.66 ) }
    dend_20 { pt3dadd( 0.595462, -31.7425, -5.23001, 0.59 ) }
    dend_20 { pt3dadd( 0.991702, -33.4873, -5.55213, 0.59 ) }
    dend_20 { pt3dadd( 1.26927, -34.7371, -5.76996, 0.59 ) }
    dend_20 { pt3dadd( 1.6168, -36.2715, -6.02599, 0.59 ) }
    dend_20 { pt3dadd( 2.13958, -38.209, -6.28156, 0.59 ) }
    dend_20 { pt3dadd( 2.83356, -40.7444, -6.68124, 0.59 ) }
    dend_20 { pt3dadd( 3.16502, -42.1116, -6.91999, 0.59 ) }
    dend_20 { pt3dadd( 3.30857, -42.7991, -7.04345, 0.59 ) }
    dend_20 { pt3dadd( 3.38758, -43.2995, -7.15126, 0.59 ) }
    dend_20 { pt3dadd( 3.48634, -44.3719, -7.46449, 0.59 ) }
    dend_20 { pt3dadd( 3.52865, -45.1004, -7.70853, 0.59 ) }
    dend_20 { pt3dadd( 3.71036, -46.3839, -8.06814, 0.59 ) }
    dend_20 { pt3dadd( 3.83392, -46.9673, -8.24363, 0.59 ) }
    dend_20 { pt3dadd( 4.01827, -47.6895, -8.44795, 0.59 ) }
    dend_20 { pt3dadd( 4.24239, -48.3917, -8.63777, 0.59 ) }
    dend_20 { pt3dadd( 4.74233, -49.662, -8.96544, 0.59 ) }
    dend_20 { pt3dadd( 5.38634, -51.1037, -9.3834, 0.59 ) }
    dend_20 { pt3dadd( 5.68083, -51.6538, -9.5663, 0.59 ) }
    dend_20 { pt3dadd( 6.19045, -52.5479, -9.918, 0.59 ) }
    dend_20 { pt3dadd( 6.98632, -53.7534, -10.4458, 0.59 ) }
    dend_20 { pt3dadd( 7.4422, -54.366, -10.7375, 0.59 ) }
    dend_20 { pt3dadd( 8.27103, -55.3544, -11.2593, 0.59 ) }
    dend_20 { pt3dadd( 8.95021, -56.1331, -11.7085, 0.59 ) }
    dend_20 { pt3dadd( 9.48959, -56.75, -12.0486, 0.59 ) }
    dend_20 { pt3dadd( 10.4367, -57.8833, -12.6846, 0.52 ) }
    dend_20 { pt3dadd( 10.9865, -58.6165, -13.0908, 0.52 ) }
    dend_20 { pt3dadd( 11.8322, -59.8566, -13.7432, 0.52 ) }
    dend_20 { pt3dadd( 12.2051, -60.4845, -14.067, 0.52 ) }
    dend_20 { pt3dadd( 12.7012, -61.542, -14.5864, 0.52 ) }
    dend_20 { pt3dadd( 13.1841, -62.7474, -15.162, 0.52 ) }
    dend_20 { pt3dadd( 13.6621, -64.0904, -15.8593, 0.52 ) }
    dend_20 { pt3dadd( 13.8854, -64.6783, -16.1941, 0.52 ) }
    dend_20 { pt3dadd( 14.3048, -65.6968, -16.8179, 0.52 ) }
    dend_20 { pt3dadd( 14.7848, -66.7807, -17.5049, 0.52 ) }
    dend_20 { pt3dadd( 15.4043, -68.1666, -18.4392, 0.52 ) }
    dend_20 { pt3dadd( 15.9168, -69.369, -19.2536, 0.52 ) }
    dend_20 { pt3dadd( 16.3352, -70.4996, -20.0296, 0.52 ) }
    dend_20 { pt3dadd( 16.655, -71.4498, -20.6623, 0.52 ) }
    dend_20 { pt3dadd( 16.9209, -72.2596, -21.1802, 0.52 ) }
    dend_20 { pt3dadd( 17.286, -73.2293, -21.7883, 0.52 ) }
    dend_20 { pt3dadd( 17.7493, -74.4305, -22.4579, 0.52 ) }
    dend_20 { pt3dadd( 18.3789, -75.9708, -23.2514, 0.52 ) }
    dend_20 { pt3dadd( 18.899, -77.1368, -23.8271, 0.52 ) }
    dend_20 { pt3dadd( 19.5736, -78.4493, -24.4554, 0.52 ) }
    dend_20 { pt3dadd( 20.6959, -80.43, -25.3603, 0.52 ) }
    dend_20 { pt3dadd( 21.2465, -81.3429, -25.7218, 0.52 ) }
    dend_20 { pt3dadd( 21.6427, -81.9697, -25.9542, 0.52 ) }
    dend_20 { pt3dadd( 22.1197, -82.7077, -26.2038, 0.52 ) }
    dend_20 { pt3dadd( 22.7236, -83.6278, -26.4952, 0.52 ) }
    dend_20 { pt3dadd( 23.7537, -85.1851, -26.9993, 0.52 ) }
    dend_20 { pt3dadd( 25.0083, -87.022, -27.6748, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_20 { pt3dadd( 25.5875, -87.8127, -28.0165, 0.52 ) }
    dend_20 { pt3dadd( 26.3856, -88.8318, -28.502, 0.52 ) }
    dend_20 { pt3dadd( 27.3847, -90.0061, -29.149, 0.52 ) }
    dend_20 { pt3dadd( 28.7629, -91.5072, -30.0705, 0.52 ) }
    dend_20 { pt3dadd( 29.575, -92.2902, -30.5781, 0.52 ) }
    dend_20 { pt3dadd( 30.3167, -92.9279, -30.98, 0.52 ) }
    dend_20 { pt3dadd( 31.0842, -93.5455, -31.3371, 0.52 ) }
    dend_20 { pt3dadd( 32.0555, -94.291, -31.7091, 0.52 ) }
    dend_20 { pt3dadd( 33.2404, -95.152, -32.05, 0.52 ) }
    dend_20 { pt3dadd( 35.3112, -96.5805, -32.4794, 0.52 ) }
    dend_20 { pt3dadd( 37.6783, -98.1049, -32.9022, 0.52 ) }
    dend_20 { pt3dadd( 39.7079, -99.3102, -33.2249, 0.52 ) }
    dend_20 { pt3dadd( 42.4102, -100.807, -33.6227, 0.52 ) }
    dend_20 { pt3dadd( 44.9285, -102.097, -33.9764, 0.52 ) }
    dend_20 { pt3dadd( 46.005, -102.599, -34.1262, 0.52 ) }
    dend_20 { pt3dadd( 48.4158, -103.644, -34.4414, 0.52 ) }
    dend_20 { pt3dadd( 49.4879, -104.093, -34.5723, 0.52 ) }
    dend_20 { pt3dadd( 50.6828, -104.602, -34.6556, 0.52 ) }
    dend_20 { pt3dadd( 52.1449, -105.273, -34.6703, 0.52 ) }
    dend_20 { pt3dadd( 54.3145, -106.399, -34.5666, 0.52 ) }
    dend_20 { pt3dadd( 55.8214, -107.313, -34.4264, 0.52 ) }
    dend_20 { pt3dadd( 56.7654, -107.967, -34.2975, 0.52 ) }
    dend_20 { pt3dadd( 58.7927, -109.506, -33.9754, 0.52 ) }
    dend_20 { pt3dadd( 61.4195, -111.629, -33.4586, 0.52 ) }
    dend_20 { pt3dadd( 63.3949, -113.322, -32.9731, 0.52 ) }
    dend_20 { pt3dadd( 65.4057, -115.124, -32.4133, 0.52 ) }
    dend_20 { pt3dadd( 66.1676, -115.812, -32.1926, 0.52 ) }
    dend_20 { pt3dadd( 67.4665, -116.979, -31.8174, 0.52 ) }
    dend_20 { pt3dadd( 68.7861, -118.195, -31.4553, 0.52 ) }
    dend_20 { pt3dadd( 69.8537, -119.238, -31.1133, 0.52 ) }
    dend_20 { pt3dadd( 71.3387, -120.712, -30.5596, 0.52 ) }
    dend_20 { pt3dadd( 72.3027, -121.643, -30.1881, 0.52 ) }
    dend_20 { pt3dadd( 72.9516, -122.281, -29.9386, 0.52 ) }
    dend_20 { pt3dadd( 73.7295, -123.053, -29.6569, 0.52 ) }
    dend_20 { pt3dadd( 74.948, -124.303, -29.2377, 0.52 ) }
    dend_20 { pt3dadd( 76.0842, -125.501, -28.8572, 0.52 ) }
    dend_20 { pt3dadd( 76.964, -126.451, -28.5586, 0.52 ) }
    dend_20 { pt3dadd( 78.1451, -127.731, -28.1753, 0.52 ) }
    dend_20 { pt3dadd( 79.0679, -128.739, -27.8741, 0.52 ) }
    dend_20 { pt3dadd( 79.5504, -129.275, -27.72, 0.52 ) }
    dend_20 { pt3dadd( 80.3318, -130.204, -27.4888, 0.52 ) }
    dend_20 { pt3dadd( 80.8938, -130.946, -27.3114, 0.52 ) }
    dend_20 { pt3dadd( 81.4948, -131.815, -27.1007, 0.52 ) }
    dend_20 { pt3dadd( 82.0204, -132.635, -26.9174, 0.52 ) }
    dend_20 { pt3dadd( 82.4551, -133.327, -26.7719, 0.52 ) }
    dend_20 { pt3dadd( 83.1554, -134.373, -26.569, 0.52 ) }
    dend_20 { pt3dadd( 84.0905, -135.684, -26.3256, 0.52 ) }
    dend_20 { pt3dadd( 85.2409, -137.102, -26.0982, 0.52 ) }
    dend_20 { pt3dadd( 86.1078, -138.051, -25.9611, 0.52 ) }
    dend_20 { pt3dadd( 87.6867, -139.58, -25.8308, 0.52 ) }
    dend_20 { pt3dadd( 88.7491, -140.52, -25.805, 0.52 ) }
    dend_20 { pt3dadd( 89.8339, -141.415, -25.8383, 0.52 ) }
    dend_20 { pt3dadd( 92.6064, -143.562, -26.0281, 0.52 ) }
    dend_20 { pt3dadd( 93.552, -144.247, -26.1105, 0.52 ) }
    dend_20 { pt3dadd( 95.0253, -145.294, -26.2475, 0.52 ) }
    dend_20 { pt3dadd( 96.0956, -146.064, -26.3344, 0.52 ) }
    dend_20 { pt3dadd( 99.399, -148.527, -26.5565, 0.52 ) }
    dend_20 { pt3dadd( 100.854, -149.678, -26.613, 0.52 ) }
    dend_20 { pt3dadd( 102.708, -151.25, -26.5744, 0.52 ) }
    dend_20 { pt3dadd( 103.858, -152.294, -26.4684, 0.52 ) }
    dend_20 { pt3dadd( 105.278, -153.708, -26.2004, 0.52 ) }
    dend_20 { pt3dadd( 106.17, -154.679, -25.9728, 0.52 ) }
    dend_20 { pt3dadd( 107.07, -155.792, -25.6846, 0.52 ) }
    dend_20 { pt3dadd( 107.839, -156.832, -25.4019, 0.52 ) }
    dend_20 { pt3dadd( 108.435, -157.709, -25.1549, 0.52 ) }
    dend_20 { pt3dadd( 110.199, -160.39, -24.4121, 0.52 ) }
    dend_20 { pt3dadd( 111.294, -162.111, -23.9922, 0.52 ) }
    dend_20 { pt3dadd( 111.867, -162.998, -23.7983, 0.52 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 68/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.105617, -26.8366, -3.88615, 0.88 ) }
    dend_17 { pt3dadd( 0.0327942, -28.3385, -4.55493, 0.88 ) }
    dend_17 { pt3dadd( 0.259139, -29.9933, -5.30824, 0.88 ) }
    dend_17 { pt3dadd( 0.519002, -31.2108, -6.00689, 0.88 ) }
    dend_17 { pt3dadd( 0.781781, -32.1188, -6.66487, 0.88 ) }
    dend_17 { pt3dadd( 1.02621, -32.8395, -7.24373, 0.81 ) }
    dend_17 { pt3dadd( 1.2743, -33.5456, -7.80954, 0.74 ) }
    dend_17 { pt3dadd( 1.6217, -34.3755, -8.48133, 0.74 ) }
    dend_17 { pt3dadd( 2.28727, -35.7838, -9.52267, 0.74 ) }
    dend_17 { pt3dadd( 2.79283, -36.7692, -10.2199, 0.74 ) }
    dend_17 { pt3dadd( 3.09293, -37.3638, -10.5908, 0.74 ) }
    dend_17 { pt3dadd( 3.56526, -38.3771, -11.2554, 0.74 ) }
    dend_17 { pt3dadd( 3.93595, -39.3011, -11.8549, 0.74 ) }
    dend_17 { pt3dadd( 4.2987, -40.3823, -12.477, 0.74 ) }
    dend_17 { pt3dadd( 4.60141, -41.4033, -13.0618, 0.66 ) }
    dend_17 { pt3dadd( 4.92212, -42.4267, -13.6492, 0.66 ) }
    dend_17 { pt3dadd( 5.62561, -44.6367, -15.0076, 0.66 ) }
    dend_17 { pt3dadd( 5.87759, -45.4007, -15.553, 0.66 ) }
    dend_17 { pt3dadd( 6.07735, -46.0308, -16.0692, 0.66 ) }
    dend_17 { pt3dadd( 6.39333, -47.1121, -17.104, 0.66 ) }
    dend_17 { pt3dadd( 6.6837, -48.1611, -18.1697, 0.66 ) }
    dend_17 { pt3dadd( 6.90457, -48.7676, -18.8245, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 90/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32135, -68.9486, 5.61263, 0.96 ) }
    dend_11 { pt3dadd( -6.35882, -71.669, 7.34007, 0.96 ) }
    dend_11 { pt3dadd( -7.43436, -72.4602, 7.62371, 0.96 ) }
    dend_11 { pt3dadd( -8.85363, -73.665, 7.87046, 0.96 ) }
    dend_11 { pt3dadd( -9.38797, -74.1877, 7.93446, 1.18 ) }
    dend_11 { pt3dadd( -10.2328, -75.1326, 7.97816, 0.88 ) }
    dend_11 { pt3dadd( -10.8248, -75.8499, 7.97856, 0.88 ) }
    dend_11 { pt3dadd( -11.3852, -76.5991, 7.78755, 0.88 ) }
    dend_11 { pt3dadd( -11.9693, -77.4948, 7.60069, 0.88 ) }
    dend_11 { pt3dadd( -12.4115, -78.2276, 7.45798, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_11 { pt3dadd( -12.8641, -78.9954, 7.32423, 0.88 ) }
    dend_11 { pt3dadd( -13.4112, -79.9125, 7.17202, 0.88 ) }
    dend_11 { pt3dadd( -14.0834, -80.904, 7.00151, 0.81 ) }
    dend_11 { pt3dadd( -14.6964, -81.7249, 6.86932, 0.81 ) }
    dend_11 { pt3dadd( -15.3545, -82.4999, 6.73635, 0.81 ) }
    dend_11 { pt3dadd( -16.0034, -83.1985, 6.62163, 0.59 ) }
    dend_11 { pt3dadd( -16.7622, -84.0126, 6.49653, 0.59 ) }
    dend_11 { pt3dadd( -17.7705, -85.1637, 6.3252, 0.59 ) }
    dend_11 { pt3dadd( -18.4781, -86.0272, 6.20717, 0.59 ) }
    dend_11 { pt3dadd( -19.0623, -86.745, 6.11305, 0.59 ) }
    dend_11 { pt3dadd( -20.1833, -88.1804, 5.91804, 0.59 ) }
    dend_11 { pt3dadd( -20.6975, -88.8747, 5.82582, 0.59 ) }
    dend_11 { pt3dadd( -21.2914, -89.745, 5.72585, 0.59 ) }
    dend_11 { pt3dadd( -21.6221, -90.3227, 5.66151, 0.59 ) }
    dend_11 { pt3dadd( -21.8193, -90.7057, 5.61962, 0.59 ) }
    dend_11 { pt3dadd( -22.2113, -91.569, 5.53894, 0.59 ) }
    dend_11 { pt3dadd( -22.4944, -92.2571, 5.47356, 0.59 ) }
    dend_11 { pt3dadd( -23.0007, -93.3756, 5.37514, 0.59 ) }
    dend_11 { pt3dadd( -23.422, -94.2669, 5.28893, 0.59 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 19/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.32135, -68.9486, 5.61263, 1.18 ) }
    dend_2 { pt3dadd( -1.93366, -71.1572, 6.38575, 1.18 ) }
    dend_2 { pt3dadd( -1.7517, -72.1938, 6.74859, 1.18 ) }
    dend_2 { pt3dadd( -1.50171, -73.6179, 7.2471, 1.03 ) }
    dend_2 { pt3dadd( -1.20581, -75.3036, 7.83718, 1.03 ) }
    dend_2 { pt3dadd( -0.920592, -76.9285, 8.40594, 1.03 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 25/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -22.302, 29.4713, 4.00372, 0.29 ) }
    dend_55 { pt3dadd( -23.7916, 31.0274, 2.2743, 0.29 ) }
    dend_55 { pt3dadd( -24.2355, 31.5343, 1.70934, 0.29 ) }
    dend_55 { pt3dadd( -24.5675, 31.9352, 1.2919, 0.29 ) }
    dend_55 { pt3dadd( -25.0839, 32.524, 0.667739, 0.74 ) }
    dend_55 { pt3dadd( -25.4796, 32.9459, 0.200509, 1.18 ) }
    dend_55 { pt3dadd( -25.7968, 33.2612, -0.155744, 1.18 ) }
    dend_55 { pt3dadd( -26.3358, 33.7559, -0.66067, 0.66 ) }
    dend_55 { pt3dadd( -26.6809, 34.0674, -0.997678, 0.59 ) }
    dend_55 { pt3dadd( -27.2835, 34.5837, -1.55067, 1.03 ) }
    dend_55 { pt3dadd( -27.9737, 35.1389, -2.11864, 1.18 ) }
    dend_55 { pt3dadd( -28.5062, 35.5681, -2.50704, 0.52 ) }
    dend_55 { pt3dadd( -29.1401, 36.0983, -2.89766, 0.52 ) }
    dend_55 { pt3dadd( -29.6225, 36.5181, -3.15149, 0.52 ) }
    dend_55 { pt3dadd( -30.0729, 36.9447, -3.36642, 0.66 ) }
    dend_55 { pt3dadd( -30.6346, 37.5717, -3.64711, 0.66 ) }
    dend_55 { pt3dadd( -31.1124, 38.1988, -3.92525, 1.03 ) }
    dend_55 { pt3dadd( -31.3369, 38.5734, -4.08962, 1.25 ) }
    dend_55 { pt3dadd( -31.5558, 39.0158, -4.27295, 1.25 ) }
    dend_55 { pt3dadd( -31.8147, 39.6289, -4.52326, 1.11 ) }
    dend_55 { pt3dadd( -32.3488, 41.0079, -5.09305, 0.44 ) }
    dend_55 { pt3dadd( -32.611, 41.6879, -5.3716, 0.37 ) }
    dend_55 { pt3dadd( -32.9999, 42.6825, -5.77621, 0.74 ) }
    dend_55 { pt3dadd( -33.4063, 43.6775, -6.16361, 0.96 ) }
    dend_55 { pt3dadd( -33.6902, 44.3053, -6.38261, 0.96 ) }
    dend_55 { pt3dadd( -33.9373, 44.7798, -6.53473, 0.96 ) }
    dend_55 { pt3dadd( -34.2367, 45.2536, -6.65882, 0.81 ) }
    dend_55 { pt3dadd( -34.8266, 46.0374, -6.86326, 0.29 ) }
    dend_55 { pt3dadd( -35.4514, 46.738, -7.07572, 0.29 ) }
    dend_55 { pt3dadd( -36.1158, 47.4108, -7.33515, 0.88 ) }
    dend_55 { pt3dadd( -36.4971, 47.7639, -7.50846, 1.18 ) }
    dend_55 { pt3dadd( -36.8896, 48.1052, -7.69909, 1.18 ) }
    dend_55 { pt3dadd( -37.4005, 48.5282, -7.98825, 0.96 ) }
    dend_55 { pt3dadd( -37.8316, 48.8633, -8.26126, 0.74 ) }
    dend_55 { pt3dadd( -38.634, 49.4829, -8.86224, 0.37 ) }
    dend_55 { pt3dadd( -39.1352, 49.8833, -9.30712, 0.37 ) }
    dend_55 { pt3dadd( -39.6456, 50.3125, -9.7911, 1.03 ) }
    dend_55 { pt3dadd( -40.0132, 50.6384, -10.1572, 1.25 ) }
    dend_55 { pt3dadd( -40.2449, 50.8518, -10.389, 1.4 ) }
    dend_55 { pt3dadd( -40.5773, 51.1827, -10.7054, 0.74 ) }
    dend_55 { pt3dadd( -41.4606, 52.1064, -11.4704, 0.22 ) }
    dend_55 { pt3dadd( -41.8509, 52.5196, -11.7718, 0.44 ) }
    dend_55 { pt3dadd( -42.1444, 52.8362, -11.9783, 0.59 ) }
    dend_55 { pt3dadd( -42.4602, 53.1893, -12.169, 0.59 ) }
    dend_55 { pt3dadd( -42.7438, 53.5305, -12.3325, 0.66 ) }
    dend_55 { pt3dadd( -43.6505, 54.6967, -12.8293, 0.22 ) }
    dend_55 { pt3dadd( -44.0867, 55.3052, -13.0628, 0.22 ) }
    dend_55 { pt3dadd( -44.5452, 55.9617, -13.3046, 0.59 ) }
    dend_55 { pt3dadd( -44.9794, 56.5962, -13.5215, 0.81 ) }
    dend_55 { pt3dadd( -45.3549, 57.1314, -13.6986, 1.18 ) }
    dend_55 { pt3dadd( -45.6748, 57.5641, -13.8374, 0.74 ) }
    dend_55 { pt3dadd( -46.4933, 58.6256, -14.1798, 0.29 ) }
    dend_55 { pt3dadd( -47.2188, 59.5122, -14.4905, 0.29 ) }
    dend_55 { pt3dadd( -47.7425, 60.1003, -14.7239, 0.44 ) }
    dend_55 { pt3dadd( -48.3462, 60.7251, -14.9794, 0.44 ) }
    dend_55 { pt3dadd( -48.9464, 61.295, -15.2084, 1.11 ) }
    dend_55 { pt3dadd( -49.3846, 61.6875, -15.3652, 1.33 ) }
    dend_55 { pt3dadd( -49.6495, 61.9197, -15.4576, 1.47 ) }
    dend_55 { pt3dadd( -50.1939, 62.4074, -15.6438, 0.88 ) }
    dend_55 { pt3dadd( -50.9223, 63.1024, -15.8819, 0.29 ) }
    dend_55 { pt3dadd( -51.4249, 63.6409, -16.0205, 0.29 ) }
    dend_55 { pt3dadd( -51.8217, 64.1173, -16.1056, 0.29 ) }
    dend_55 { pt3dadd( -52.2192, 64.6653, -16.1294, 0.66 ) }
    dend_55 { pt3dadd( -52.5236, 65.14, -16.1177, 0.81 ) }
    dend_55 { pt3dadd( -52.6326, 65.3269, -16.1043, 0.81 ) }
    dend_55 { pt3dadd( -53.0311, 66.0877, -16.0485, 0.22 ) }
    dend_55 { pt3dadd( -53.4822, 66.9831, -16.0037, 0.22 ) }
    dend_55 { pt3dadd( -54.0298, 68.0621, -16.0916, 0.96 ) }
    dend_55 { pt3dadd( -54.3099, 68.5988, -16.197, 1.25 ) }
    dend_55 { pt3dadd( -54.543, 69.0495, -16.3362, 1.25 ) }
    dend_55 { pt3dadd( -54.6899, 69.3358, -16.4525, 1.25 ) }
    dend_55 { pt3dadd( -55.0664, 70.1062, -16.8929, 0.22 ) }
    dend_55 { pt3dadd( -55.7511, 71.5148, -17.8481, 0.22 ) }
    dend_55 { pt3dadd( -56.0546, 72.1269, -18.2974, 1.11 ) }
    dend_55 { pt3dadd( -56.2484, 72.5313, -18.5832, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( -56.4157, 72.8894, -18.8276, 1.33 ) }
    dend_55 { pt3dadd( -57.0306, 74.1667, -19.6727, 0.29 ) }
    dend_55 { pt3dadd( -57.475, 75.0823, -20.2292, 0.74 ) }
    dend_55 { pt3dadd( -57.6853, 75.4908, -20.4481, 0.88 ) }
    dend_55 { pt3dadd( -57.9127, 75.9188, -20.6748, 0.74 ) }
    dend_55 { pt3dadd( -58.4766, 76.8903, -21.1589, 0.22 ) }
    dend_55 { pt3dadd( -58.6574, 77.176, -21.2975, 0.22 ) }
    dend_55 { pt3dadd( -59.0313, 77.7281, -21.5316, 0.66 ) }
    dend_55 { pt3dadd( -59.331, 78.1539, -21.7331, 0.81 ) }
    dend_55 { pt3dadd( -59.5633, 78.4813, -21.8951, 0.81 ) }
    dend_55 { pt3dadd( -60.2094, 79.3809, -22.3704, 0.22 ) }
    dend_55 { pt3dadd( -60.8094, 80.2155, -22.8047, 0.22 ) }
    dend_55 { pt3dadd( -61.2904, 80.8769, -23.1324, 0.88 ) }
    dend_55 { pt3dadd( -61.7914, 81.5414, -23.4435, 1.25 ) }
    dend_55 { pt3dadd( -62.0887, 81.9323, -23.6087, 1.25 ) }
    dend_55 { pt3dadd( -62.9104, 83.022, -24.0455, 0.22 ) }
    dend_55 { pt3dadd( -63.7363, 84.204, -24.4673, 0.22 ) }
    dend_55 { pt3dadd( -64.6093, 85.529, -24.8973, 0.22 ) }
    dend_55 { pt3dadd( -65.1213, 86.3746, -25.1468, 0.22 ) }
    dend_55 { pt3dadd( -65.4674, 86.995, -25.3025, 0.88 ) }
    dend_55 { pt3dadd( -65.8534, 87.7424, -25.4853, 0.88 ) }
    dend_55 { pt3dadd( -66.4426, 89.0759, -25.7995, 0.22 ) }
    dend_55 { pt3dadd( -66.7508, 89.9101, -26.0184, 0.22 ) }
    dend_55 { pt3dadd( -67.0821, 90.9486, -26.3054, 0.74 ) }
    dend_55 { pt3dadd( -67.2158, 91.4026, -26.4342, 1.11 ) }
    dend_55 { pt3dadd( -67.4002, 92.077, -26.624, 1.11 ) }
    dend_55 { pt3dadd( -67.7978, 93.5757, -27.0537, 0.22 ) }
    dend_55 { pt3dadd( -68.124, 94.8343, -27.4275, 0.22 ) }
    dend_55 { pt3dadd( -68.3687, 95.8459, -27.7251, 0.66 ) }
    dend_55 { pt3dadd( -68.4631, 96.2937, -27.8513, 0.66 ) }
    dend_55 { pt3dadd( -68.7123, 97.6864, -28.2133, 0.29 ) }
    dend_55 { pt3dadd( -68.8936, 98.9539, -28.5231, 0.29 ) }
    dend_55 { pt3dadd( -68.968, 99.6679, -28.6917, 0.44 ) }
    dend_55 { pt3dadd( -69.0099, 100.217, -28.8235, 0.44 ) }
    dend_55 { pt3dadd( -69.0915, 101.457, -29.1441, 1.25 ) }
    dend_55 { pt3dadd( -69.136, 102.051, -29.3107, 1.18 ) }
    dend_55 { pt3dadd( -69.2079, 102.878, -29.5569, 0.59 ) }
    dend_55 { pt3dadd( -69.3108, 103.915, -29.8803, 0.22 ) }
    dend_55 { pt3dadd( -69.4407, 105.013, -30.2645, 0.22 ) }
    dend_55 { pt3dadd( -69.6005, 106.113, -30.6691, 0.88 ) }
    dend_55 { pt3dadd( -69.7456, 106.923, -30.9989, 1.03 ) }
    dend_55 { pt3dadd( -69.8368, 107.357, -31.1918, 0.74 ) }
    dend_55 { pt3dadd( -70.0949, 108.329, -31.6765, 0.29 ) }
    dend_55 { pt3dadd( -70.2201, 108.717, -31.8943, 0.29 ) }
    dend_55 { pt3dadd( -70.5265, 109.496, -32.377, 0.66 ) }
    dend_55 { pt3dadd( -70.7235, 109.912, -32.6604, 0.66 ) }
    dend_55 { pt3dadd( -71.1791, 110.778, -33.3102, 0.22 ) }
    dend_55 { pt3dadd( -71.5125, 111.336, -33.7648, 0.22 ) }
    dend_55 { pt3dadd( -71.7507, 111.675, -34.0751, 0.81 ) }
    dend_55 { pt3dadd( -72.094, 112.117, -34.4994, 0.96 ) }
    dend_55 { pt3dadd( -72.7642, 112.915, -35.2731, 0.22 ) }
    dend_55 { pt3dadd( -73.1115, 113.317, -35.63, 0.22 ) }
    dend_55 { pt3dadd( -73.3878, 113.628, -35.8874, 0.59 ) }
    dend_55 { pt3dadd( -73.9267, 114.239, -36.3471, 0.59 ) }
    dend_55 { pt3dadd( -74.6243, 115.029, -36.8915, 0.22 ) }
    dend_55 { pt3dadd( -75.2577, 115.747, -37.3175, 0.74 ) }
    dend_55 { pt3dadd( -75.8271, 116.372, -37.6332, 0.74 ) }
    dend_55 { pt3dadd( -76.177, 116.769, -37.7936, 0.88 ) }
    dend_55 { pt3dadd( -76.5276, 117.195, -37.9344, 0.88 ) }
    dend_55 { pt3dadd( -77.1311, 117.99, -38.1283, 0.22 ) }
    dend_55 { pt3dadd( -77.4064, 118.408, -38.2065, 0.37 ) }
    dend_55 { pt3dadd( -77.7557, 119.106, -38.3188, 0.37 ) }
    dend_55 { pt3dadd( -78.0412, 119.88, -38.4175, 0.22 ) }
    dend_55 { pt3dadd( -78.1419, 120.217, -38.4527, 0.37 ) }
    dend_55 { pt3dadd( -78.231, 120.613, -38.4944, 0.37 ) }
    dend_55 { pt3dadd( -78.3999, 121.6, -38.6014, 0.22 ) }
    dend_55 { pt3dadd( -78.5712, 122.904, -38.7477, 0.22 ) }
    dend_55 { pt3dadd( -78.6792, 123.928, -38.8655, 0.74 ) }
    dend_55 { pt3dadd( -78.7163, 124.278, -38.9122, 0.88 ) }
    dend_55 { pt3dadd( -78.8553, 125.423, -39.0933, 0.22 ) }
    dend_55 { pt3dadd( -78.9689, 126.261, -39.2349, 0.37 ) }
    dend_55 { pt3dadd( -79.1116, 127.233, -39.4186, 0.22 ) }
    dend_55 { pt3dadd( -79.2368, 128.031, -39.5875, 0.81 ) }
    dend_55 { pt3dadd( -79.3304, 128.583, -39.7129, 0.96 ) }
    dend_55 { pt3dadd( -79.4229, 129.091, -39.829, 0.96 ) }
    dend_55 { pt3dadd( -79.6349, 130.141, -40.0489, 0.22 ) }
    dend_55 { pt3dadd( -79.799, 130.924, -40.2026, 0.44 ) }
    dend_55 { pt3dadd( -79.8675, 131.24, -40.2634, 0.44 ) }
    dend_55 { pt3dadd( -80.2864, 133.095, -40.5744, 0.22 ) }
    dend_55 { pt3dadd( -80.5437, 134.191, -40.7358, 0.22 ) }
    dend_55 { pt3dadd( -80.8554, 135.408, -40.9068, 0.22 ) }
    dend_55 { pt3dadd( -81.1088, 136.307, -41.037, 0.96 ) }
    dend_55 { pt3dadd( -81.2365, 136.729, -41.1059, 1.11 ) }
    dend_55 { pt3dadd( -81.7335, 138.255, -41.3767, 0.15 ) }
    dend_55 { pt3dadd( -81.9046, 138.729, -41.4821, 0.15 ) }
    dend_55 { pt3dadd( -82.1694, 139.377, -41.6508, 0.37 ) }
    dend_55 { pt3dadd( -82.6342, 140.399, -41.9657, 0.22 ) }
    dend_55 { pt3dadd( -82.9815, 141.116, -42.2083, 0.22 ) }
    dend_55 { pt3dadd( -83.289, 141.732, -42.4238, 0.66 ) }
    dend_55 { pt3dadd( -83.6204, 142.365, -42.6591, 0.66 ) }
    dend_55 { pt3dadd( -83.8599, 142.799, -42.813, 0.81 ) }
    dend_55 { pt3dadd( -84.4474, 143.786, -43.1568, 0.22 ) }
    dend_55 { pt3dadd( -84.9912, 144.619, -43.4324, 0.22 ) }
    dend_55 { pt3dadd( -85.2964, 145.059, -43.5608, 0.66 ) }
    dend_55 { pt3dadd( -85.6328, 145.511, -43.6895, 0.74 ) }
    dend_55 { pt3dadd( -86.2809, 146.315, -43.9, 0.22 ) }
    dend_55 { pt3dadd( -86.8151, 146.937, -44.0662, 0.22 ) }
    dend_55 { pt3dadd( -87.0866, 147.238, -44.153, 0.37 ) }
    dend_55 { pt3dadd( -87.3298, 147.504, -44.2311, 0.37 ) }
    dend_55 { pt3dadd( -88.3536, 148.63, -44.5684, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_55 { pt3dadd( -88.7327, 149.062, -44.6928, 0.59 ) }
    dend_55 { pt3dadd( -89.3525, 149.802, -44.8943, 0.74 ) }
    dend_55 { pt3dadd( -90.4496, 151.168, -45.2677, 0.22 ) }
    dend_55 { pt3dadd( -91.1199, 152.022, -45.5112, 0.22 ) }
    dend_55 { pt3dadd( -91.399, 152.39, -45.6193, 0.44 ) }
    dend_55 { pt3dadd( -91.7272, 152.857, -45.7492, 0.44 ) }
    dend_55 { pt3dadd( -92.248, 153.695, -45.9609, 0.22 ) }
    dend_55 { pt3dadd( -92.5436, 154.238, -46.0773, 0.59 ) }
    dend_55 { pt3dadd( -92.7261, 154.62, -46.1491, 0.74 ) }
    dend_55 { pt3dadd( -92.9053, 155.072, -46.224, 0.74 ) }
    dend_55 { pt3dadd( -93.5567, 156.896, -46.484, 0.22 ) }
    dend_55 { pt3dadd( -93.9215, 157.994, -46.6288, 0.22 ) }
    dend_55 { pt3dadd( -94.1308, 158.687, -46.7085, 0.66 ) }
    dend_55 { pt3dadd( -94.2592, 159.145, -46.7543, 0.66 ) }
    dend_55 { pt3dadd( -94.8465, 161.351, -46.9589, 0.22 ) }
    dend_55 { pt3dadd( -95.0846, 162.265, -47.0634, 0.44 ) }
    dend_55 { pt3dadd( -95.2851, 163.007, -47.1667, 0.52 ) }
    dend_55 { pt3dadd( -95.7164, 164.556, -47.4597, 0.22 ) }
    dend_55 { pt3dadd( -95.9588, 165.389, -47.6604, 0.59 ) }
    dend_55 { pt3dadd( -96.1794, 166.12, -47.8646, 0.59 ) }
    dend_55 { pt3dadd( -96.7946, 168.033, -48.4966, 0.22 ) }
    dend_55 { pt3dadd( -97.2754, 169.46, -49.0179, 0.22 ) }
    dend_55 { pt3dadd( -97.8037, 170.928, -49.6066, 0.22 ) }
    dend_55 { pt3dadd( -98.1617, 171.847, -50.0246, 0.22 ) }
    dend_55 { pt3dadd( -98.4158, 172.48, -50.3257, 0.66 ) }
    dend_55 { pt3dadd( -98.5108, 172.716, -50.4427, 0.88 ) }
    dend_55 { pt3dadd( -98.8027, 173.458, -50.7938, 0.59 ) }
    dend_55 { pt3dadd( -99.1963, 174.545, -51.2667, 0.22 ) }
    dend_55 { pt3dadd( -99.5293, 175.519, -51.6104, 0.22 ) }
    dend_55 { pt3dadd( -99.7571, 176.253, -51.8555, 0.59 ) }
    dend_55 { pt3dadd( -99.9636, 176.959, -52.0854, 0.59 ) }
    dend_55 { pt3dadd( -100.314, 178.191, -52.4654, 0.22 ) }
    dend_55 { pt3dadd( -100.558, 179.005, -52.699, 0.22 ) }
    dend_55 { pt3dadd( -101.025, 180.464, -53.1064, 0.22 ) }
    dend_55 { pt3dadd( -101.369, 181.438, -53.3805, 0.66 ) }
    dend_55 { pt3dadd( -101.446, 181.638, -53.4368, 0.88 ) }
    dend_55 { pt3dadd( -101.648, 182.155, -53.583, 0.88 ) }
    dend_55 { pt3dadd( -102.089, 183.241, -53.9368, 0.22 ) }
    dend_55 { pt3dadd( -102.322, 183.783, -54.1333, 0.22 ) }
    dend_55 { pt3dadd( -102.567, 184.325, -54.3369, 0.37 ) }
    dend_55 { pt3dadd( -103.15, 185.4, -54.7798, 0.22 ) }
    dend_55 { pt3dadd( -103.765, 186.381, -55.2451, 0.22 ) }
    dend_55 { pt3dadd( -104.348, 187.214, -55.6975, 0.81 ) }
    dend_55 { pt3dadd( -104.871, 187.875, -56.0988, 0.96 ) }
    dend_55 { pt3dadd( -105.712, 188.778, -56.6559, 0.22 ) }
    dend_55 { pt3dadd( -107.16, 190.176, -57.4856, 0.22 ) }
    dend_55 { pt3dadd( -107.72, 190.692, -57.7781, 0.59 ) }
    dend_55 { pt3dadd( -108.026, 190.974, -57.9201, 0.74 ) }
    dend_55 { pt3dadd( -108.761, 191.685, -58.2426, 0.22 ) }
    dend_55 { pt3dadd( -110.016, 193.081, -58.7677, 0.22 ) }
    dend_55 { pt3dadd( -110.93, 194.337, -59.1425, 0.22 ) }
    dend_55 { pt3dadd( -111.696, 195.619, -59.4323, 0.88 ) }
    dend_55 { pt3dadd( -111.973, 196.184, -59.5335, 1.25 ) }
    dend_55 { pt3dadd( -112.347, 197.089, -59.6742, 0.81 ) }
    dend_55 { pt3dadd( -113.028, 199.083, -59.9613, 0.15 ) }
    dend_55 { pt3dadd( -113.689, 201.435, -60.2886, 0.15 ) }
    dend_55 { pt3dadd( -113.936, 202.401, -60.4147, 0.37 ) }
    dend_55 { pt3dadd( -114.451, 204.531, -60.625, 0.15 ) }
    dend_55 { pt3dadd( -114.635, 205.34, -60.7016, 0.15 ) }
    dend_55 { pt3dadd( -114.78, 206.061, -60.7561, 0.29 ) }
    dend_55 { pt3dadd( -114.876, 206.573, -60.7955, 0.22 ) }
    dend_55 { pt3dadd( -114.94, 206.958, -60.8209, 0.22 ) }
    dend_55 { pt3dadd( -115.106, 207.927, -60.8974, 0.22 ) }
    dend_55 { pt3dadd( -115.37, 208.811, -60.9913, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 64/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -22.302, 29.4713, 4.00372, 0.59 ) }
    dend_54 { pt3dadd( -23.6906, 29.8809, 4.94895, 0.59 ) }
    dend_54 { pt3dadd( -24.3757, 30.1122, 5.36306, 0.74 ) }
    dend_54 { pt3dadd( -25.6416, 30.5441, 6.03929, 0.81 ) }
    dend_54 { pt3dadd( -26.2769, 30.7523, 6.34624, 0.96 ) }
    dend_54 { pt3dadd( -26.9905, 30.9617, 6.67376, 1.18 ) }
    dend_54 { pt3dadd( -27.8005, 31.176, 7.03382, 0.74 ) }
    dend_54 { pt3dadd( -28.5729, 31.3814, 7.34442, 0.52 ) }
    dend_54 { pt3dadd( -29.1789, 31.5297, 7.58709, 0.52 ) }
    dend_54 { pt3dadd( -29.818, 31.6637, 7.8275, 0.81 ) }
    dend_54 { pt3dadd( -30.4908, 31.7903, 8.08444, 0.96 ) }
    dend_54 { pt3dadd( -31.1615, 31.9182, 8.33004, 0.74 ) }
    dend_54 { pt3dadd( -31.7924, 32.0507, 8.56351, 0.96 ) }
    dend_54 { pt3dadd( -32.4979, 32.2263, 8.82575, 1.11 ) }
    dend_54 { pt3dadd( -33.2257, 32.4487, 9.07495, 0.88 ) }
    dend_54 { pt3dadd( -34.5227, 32.8953, 9.44457, 0.37 ) }
    dend_54 { pt3dadd( -35.1809, 33.1325, 9.58654, 0.37 ) }
    dend_54 { pt3dadd( -35.6446, 33.2804, 9.66375, 0.74 ) }
    dend_54 { pt3dadd( -36.2265, 33.4247, 9.73445, 0.88 ) }
    dend_54 { pt3dadd( -36.6757, 33.4975, 9.77335, 0.88 ) }
    dend_54 { pt3dadd( -37.4842, 33.5572, 9.83329, 0.74 ) }
    dend_54 { pt3dadd( -38.2223, 33.5546, 9.88539, 0.29 ) }
    dend_54 { pt3dadd( -39.0741, 33.519, 9.9451, 0.29 ) }
    dend_54 { pt3dadd( -39.793, 33.4863, 9.99308, 0.74 ) }
    dend_54 { pt3dadd( -40.6944, 33.457, 10.0482, 0.88 ) }
    dend_54 { pt3dadd( -41.392, 33.4558, 10.0846, 0.74 ) }
    dend_54 { pt3dadd( -42.1332, 33.4999, 10.1182, 0.59 ) }
    dend_54 { pt3dadd( -42.866, 33.5999, 10.1428, 0.59 ) }
    dend_54 { pt3dadd( -43.5077, 33.7281, 10.1549, 0.52 ) }
    dend_54 { pt3dadd( -44.1781, 33.896, 10.1799, 0.66 ) }
    dend_54 { pt3dadd( -44.9462, 34.1201, 10.2261, 0.88 ) }
    dend_54 { pt3dadd( -46.038, 34.4566, 10.3447, 0.29 ) }
    dend_54 { pt3dadd( -47.1251, 34.7807, 10.5061, 0.88 ) }
    dend_54 { pt3dadd( -47.7407, 34.9502, 10.6363, 1.18 ) }
    dend_54 { pt3dadd( -48.4515, 35.1231, 10.8457, 1.33 ) }
    dend_54 { pt3dadd( -48.8595, 35.2087, 11.0046, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_54 { pt3dadd( -49.8813, 35.3889, 11.4815, 0.96 ) }
    dend_54 { pt3dadd( -50.6667, 35.4912, 11.8989, 0.81 ) }
    dend_54 { pt3dadd( -51.4573, 35.5539, 12.3416, 0.66 ) }
    dend_54 { pt3dadd( -52.1465, 35.5765, 12.7202, 0.66 ) }
    dend_54 { pt3dadd( -52.7612, 35.565, 13.0301, 0.52 ) }
    dend_54 { pt3dadd( -53.4352, 35.5303, 13.3371, 0.88 ) }
    dend_54 { pt3dadd( -53.926, 35.4973, 13.5307, 1.11 ) }
    dend_54 { pt3dadd( -54.5252, 35.4574, 13.7314, 1.18 ) }
    dend_54 { pt3dadd( -55.0252, 35.4349, 13.8623, 0.96 ) }
    dend_54 { pt3dadd( -55.6811, 35.4256, 14.0115, 0.66 ) }
    dend_54 { pt3dadd( -56.2672, 35.4509, 14.1486, 0.44 ) }
    dend_54 { pt3dadd( -56.7914, 35.5177, 14.2838, 0.44 ) }
    dend_54 { pt3dadd( -57.4295, 35.6663, 14.4442, 0.66 ) }
    dend_54 { pt3dadd( -57.8088, 35.7955, 14.5356, 0.66 ) }
    dend_54 { pt3dadd( -58.4504, 36.0573, 14.6705, 0.66 ) }
    dend_54 { pt3dadd( -59.196, 36.3813, 14.7995, 0.52 ) }
    dend_54 { pt3dadd( -59.9564, 36.7067, 14.9041, 0.52 ) }
    dend_54 { pt3dadd( -60.8955, 37.0828, 15.0006, 0.88 ) }
    dend_54 { pt3dadd( -61.6045, 37.343, 15.0561, 1.11 ) }
    dend_54 { pt3dadd( -62.5188, 37.6409, 15.1404, 0.88 ) }
    dend_54 { pt3dadd( -63.506, 37.919, 15.2564, 0.66 ) }
    dend_54 { pt3dadd( -64.2278, 38.0863, 15.3678, 1.11 ) }
    dend_54 { pt3dadd( -65.0614, 38.2564, 15.563, 1.33 ) }
    dend_54 { pt3dadd( -65.6293, 38.3765, 15.7463, 0.81 ) }
    dend_54 { pt3dadd( -66.5814, 38.6019, 16.1305, 0.59 ) }
    dend_54 { pt3dadd( -67.3246, 38.8047, 16.4862, 0.44 ) }
    dend_54 { pt3dadd( -68.3104, 39.1139, 17.016, 0.44 ) }
    dend_54 { pt3dadd( -69.4926, 39.5399, 17.6848, 0.37 ) }
    dend_54 { pt3dadd( -70.1932, 39.8129, 18.1469, 0.74 ) }
    dend_54 { pt3dadd( -70.7841, 40.0474, 18.5543, 1.11 ) }
    dend_54 { pt3dadd( -71.0954, 40.1662, 18.7658, 1.33 ) }
    dend_54 { pt3dadd( -71.4844, 40.3153, 19.0123, 1.33 ) }
    dend_54 { pt3dadd( -72.2301, 40.5863, 19.4372, 1.11 ) }
    dend_54 { pt3dadd( -74.3234, 41.2697, 20.43, 0.74 ) }
    dend_54 { pt3dadd( -75.065, 41.4631, 20.7253, 0.81 ) }
    dend_54 { pt3dadd( -76.0802, 41.7044, 21.0629, 0.52 ) }
    dend_54 { pt3dadd( -77.3177, 42.0021, 21.3948, 1.18 ) }
    dend_54 { pt3dadd( -77.889, 42.1482, 21.5025, 1.47 ) }
    dend_54 { pt3dadd( -78.5241, 42.3143, 21.5629, 1.47 ) }
    dend_54 { pt3dadd( -79.5909, 42.5883, 21.5486, 0.52 ) }
    dend_54 { pt3dadd( -80.4608, 42.8063, 21.5359, 0.37 ) }
    dend_54 { pt3dadd( -81.3884, 43.0317, 21.5287, 0.37 ) }
    dend_54 { pt3dadd( -82.5659, 43.2996, 21.5538, 0.81 ) }
    dend_54 { pt3dadd( -83.2074, 43.4509, 21.564, 1.11 ) }
    dend_54 { pt3dadd( -84.1282, 43.6617, 21.5724, 1.55 ) }
    dend_54 { pt3dadd( -84.5521, 43.7379, 21.5738, 1.55 ) }
    dend_54 { pt3dadd( -85.819, 43.8641, 21.5852, 0.44 ) }
    dend_54 { pt3dadd( -86.413, 43.8816, 21.5935, 0.44 ) }
    dend_54 { pt3dadd( -87.0756, 43.8711, 21.6127, 0.81 ) }
    dend_54 { pt3dadd( -87.6828, 43.8476, 21.6376, 0.81 ) }
    dend_54 { pt3dadd( -88.6745, 43.7664, 21.6884, 0.37 ) }
    dend_54 { pt3dadd( -89.1342, 43.7033, 21.7145, 0.37 ) }
    dend_54 { pt3dadd( -89.6915, 43.5963, 21.7511, 0.81 ) }
    dend_54 { pt3dadd( -90.4444, 43.4636, 21.8074, 1.18 ) }
    dend_54 { pt3dadd( -90.9624, 43.4051, 21.8547, 1.18 ) }
    dend_54 { pt3dadd( -91.8821, 43.3933, 21.9701, 0.59 ) }
    dend_54 { pt3dadd( -92.6164, 43.4558, 22.0819, 0.74 ) }
    dend_54 { pt3dadd( -92.9163, 43.4941, 22.1363, 0.74 ) }
    dend_54 { pt3dadd( -93.6217, 43.6276, 22.289, 0.44 ) }
    dend_54 { pt3dadd( -94.3411, 43.7815, 22.4841, 0.44 ) }
    dend_54 { pt3dadd( -94.912, 43.9266, 22.6849, 0.22 ) }
    dend_54 { pt3dadd( -95.3191, 44.0571, 22.8607, 0.22 ) }
    dend_54 { pt3dadd( -95.8479, 44.2579, 23.1409, 0.66 ) }
    dend_54 { pt3dadd( -96.1562, 44.3954, 23.3403, 0.66 ) }
    dend_54 { pt3dadd( -96.9087, 44.7583, 23.9377, 0.22 ) }
    dend_54 { pt3dadd( -97.3358, 44.9908, 24.3109, 0.22 ) }
    dend_54 { pt3dadd( -97.7713, 45.2798, 24.7321, 0.44 ) }
    dend_54 { pt3dadd( -98.3112, 45.7104, 25.3573, 0.44 ) }
    dend_54 { pt3dadd( -98.8726, 46.217, 26.0741, 0.15 ) }
    dend_54 { pt3dadd( -99.43, 46.7642, 26.8474, 0.59 ) }
    dend_54 { pt3dadd( -99.7752, 47.1246, 27.3401, 0.74 ) }
    dend_54 { pt3dadd( -100.107, 47.4543, 27.7912, 0.74 ) }
    dend_54 { pt3dadd( -101.07, 48.3018, 28.9944, 0.52 ) }
    dend_54 { pt3dadd( -101.229, 48.4234, 29.1741, 0.74 ) }
    dend_54 { pt3dadd( -101.782, 48.7972, 29.7147, 0.88 ) }
    dend_54 { pt3dadd( -102.22, 49.0696, 30.0802, 0.88 ) }
    dend_54 { pt3dadd( -102.727, 49.3429, 30.4401, 0.37 ) }
    dend_54 { pt3dadd( -103.322, 49.6122, 30.7654, 0.29 ) }
    dend_54 { pt3dadd( -104.12, 49.9142, 31.0696, 0.29 ) }
    dend_54 { pt3dadd( -104.903, 50.1757, 31.316, 0.81 ) }
    dend_54 { pt3dadd( -105.434, 50.3355, 31.4367, 0.81 ) }
    dend_54 { pt3dadd( -105.839, 50.456, 31.5174, 0.81 ) }
    dend_54 { pt3dadd( -106.193, 50.5626, 31.5469, 0.74 ) }
    dend_54 { pt3dadd( -106.758, 50.7347, 31.5274, 0.96 ) }
    dend_54 { pt3dadd( -107.483, 50.947, 31.4388, 0.66 ) }
    dend_54 { pt3dadd( -108.238, 51.1555, 31.3074, 0.44 ) }
    dend_54 { pt3dadd( -108.921, 51.3463, 31.1606, 0.44 ) }
    dend_54 { pt3dadd( -110.161, 51.7232, 30.8597, 0.44 ) }
    dend_54 { pt3dadd( -111.142, 52.0196, 30.6329, 0.66 ) }
    dend_54 { pt3dadd( -111.707, 52.1907, 30.5099, 0.96 ) }
    dend_54 { pt3dadd( -112.166, 52.3201, 30.423, 0.96 ) }
    dend_54 { pt3dadd( -112.753, 52.4824, 30.3255, 0.52 ) }
    dend_54 { pt3dadd( -113.421, 52.6583, 30.3234, 0.66 ) }
    dend_54 { pt3dadd( -114.377, 52.8804, 30.4817, 0.66 ) }
    dend_54 { pt3dadd( -114.978, 52.9819, 30.6429, 0.59 ) }
    dend_54 { pt3dadd( -115.887, 53.1225, 30.9262, 0.96 ) }
    dend_54 { pt3dadd( -116.842, 53.2477, 31.2657, 0.96 ) }
    dend_54 { pt3dadd( -118.897, 53.4437, 32.0777, 0.52 ) }
    dend_54 { pt3dadd( -119.711, 53.493, 32.4297, 0.29 ) }
    dend_54 { pt3dadd( -120.92, 53.5454, 33.0022, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_54 { pt3dadd( -129.214, 56.9851, 37.3335, 0.29 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 1/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -11.2373, 45.4444, 18.3574, 0.59 ) }
    dend_52 { pt3dadd( -10.6419, 45.1552, 19.9065, 0.59 ) }
    dend_52 { pt3dadd( -10.0217, 45.0376, 21.5075, 0.74 ) }
    dend_52 { pt3dadd( -8.67219, 45.1901, 24.9931, 0.66 ) }
    dend_52 { pt3dadd( -8.35374, 45.3144, 25.8548, 0.66 ) }
    dend_52 { pt3dadd( -8.20097, 45.4271, 26.3246, 0.74 ) }
    dend_52 { pt3dadd( -8.01733, 45.6938, 27.1209, 0.52 ) }
    dend_52 { pt3dadd( -8.01303, 46.1385, 27.941, 0.52 ) }
    dend_52 { pt3dadd( -8.15092, 46.5906, 28.5451, 0.66 ) }
    dend_52 { pt3dadd( -8.38238, 46.9946, 28.8758, 0.81 ) }
    dend_52 { pt3dadd( -8.7651, 47.491, 29.2993, 0.96 ) }
    dend_52 { pt3dadd( -9.51151, 48.2442, 30.0264, 1.03 ) }
    dend_52 { pt3dadd( -10.1223, 48.7213, 30.5913, 0.81 ) }
    dend_52 { pt3dadd( -10.6111, 49.0376, 31.0261, 0.81 ) }
    dend_52 { pt3dadd( -11.0759, 49.3068, 31.4422, 0.74 ) }
    dend_52 { pt3dadd( -11.7972, 49.7619, 32.1247, 0.88 ) }
    dend_52 { pt3dadd( -12.2316, 50.0974, 32.5788, 0.88 ) }
    dend_52 { pt3dadd( -12.7989, 50.707, 33.3009, 0.74 ) }
    dend_52 { pt3dadd( -13.0219, 51.0921, 33.7064, 0.74 ) }
    dend_52 { pt3dadd( -13.181, 51.5672, 34.1412, 0.59 ) }
    dend_52 { pt3dadd( -13.2848, 52.3555, 34.7894, 0.96 ) }
    dend_52 { pt3dadd( -13.2713, 53.0673, 35.3043, 0.96 ) }
    dend_52 { pt3dadd( -13.1432, 53.9014, 35.9267, 0.96 ) }
    dend_52 { pt3dadd( -12.8871, 54.8359, 36.6329, 0.66 ) }
    dend_52 { pt3dadd( -12.658, 55.4888, 37.1349, 0.59 ) }
    dend_52 { pt3dadd( -12.4176, 56.1556, 37.6368, 0.59 ) }
    dend_52 { pt3dadd( -12.2524, 56.7129, 38.0396, 0.74 ) }
    dend_52 { pt3dadd( -12.0295, 57.895, 38.7943, 0.81 ) }
    dend_52 { pt3dadd( -11.9951, 58.5247, 39.1186, 0.81 ) }
    dend_52 { pt3dadd( -12.0673, 59.5448, 39.514, 0.81 ) }
    dend_52 { pt3dadd( -12.1961, 60.523, 39.8025, 0.81 ) }
    dend_52 { pt3dadd( -12.3599, 61.5588, 40.0347, 0.74 ) }
    dend_52 { pt3dadd( -12.5267, 62.6206, 40.2405, 0.74 ) }
    dend_52 { pt3dadd( -12.729, 64.0178, 40.5046, 0.66 ) }
    dend_52 { pt3dadd( -12.8698, 65.3711, 40.8273, 0.66 ) }
    dend_52 { pt3dadd( -12.9667, 66.6389, 41.1549, 0.66 ) }
    dend_52 { pt3dadd( -12.9784, 67.4094, 41.377, 0.81 ) }
    dend_52 { pt3dadd( -12.9283, 68.2745, 41.6561, 0.81 ) }
    dend_52 { pt3dadd( -12.799, 69.2553, 42.0223, 1.11 ) }
    dend_52 { pt3dadd( -12.5684, 70.1649, 42.4801, 1.11 ) }
    dend_52 { pt3dadd( -12.2237, 76.5283, 50.0487, 1.11 ) }
    dend_52 { pt3dadd( -12.9884, 83.5767, 56.9157, 1.11 ) }
    dend_52 { pt3dadd( -12.8208, 89.2957, 65.013, 1.11 ) }
    dend_52 { pt3dadd( -11.7438, 93.0945, 74.1596, 1.11 ) }
    dend_52 { pt3dadd( -10.3965, 96.0304, 83.5998, 1.11 ) }
    dend_52 { pt3dadd( -8.11846, 99.4979, 92.6642, 1.11 ) }
    dend_52 { pt3dadd( -5.01101, 104.423, 100.716, 1.11 ) }
    dend_52 { pt3dadd( -0.997402, 108.547, 108.839, 1.11 ) }
    dend_52 { pt3dadd( 2.58167, 113.521, 116.66, 1.11 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 50/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -11.2373, 45.4444, 18.3574, 0.59 ) }
    dend_51 { pt3dadd( -12.3585, 45.9099, 18.4393, 0.59 ) }
    dend_51 { pt3dadd( -13.0923, 46.1699, 18.4913, 0.59 ) }
    dend_51 { pt3dadd( -13.809, 46.41, 18.5426, 0.81 ) }
    dend_51 { pt3dadd( -14.4932, 46.6614, 18.5859, 0.81 ) }
    dend_51 { pt3dadd( -15.3554, 47.0137, 18.6359, 0.44 ) }
    dend_51 { pt3dadd( -16.3766, 47.4772, 18.6911, 0.66 ) }
    dend_51 { pt3dadd( -16.9599, 47.7437, 18.7289, 0.81 ) }
    dend_51 { pt3dadd( -17.5906, 48.0886, 18.7654, 0.81 ) }
    dend_51 { pt3dadd( -18.3823, 48.6518, 18.7989, 0.29 ) }
    dend_51 { pt3dadd( -18.7435, 48.9801, 18.7862, 0.29 ) }
    dend_51 { pt3dadd( -19.0684, 49.3404, 18.7438, 0.44 ) }
    dend_51 { pt3dadd( -19.4069, 49.7741, 18.6719, 0.66 ) }
    dend_51 { pt3dadd( -19.9419, 50.5172, 18.523, 0.22 ) }
    dend_51 { pt3dadd( -20.6779, 51.5868, 18.2533, 0.22 ) }
    dend_51 { pt3dadd( -21.2617, 52.4212, 18.0152, 0.22 ) }
    dend_51 { pt3dadd( -21.7744, 53.1254, 17.7982, 0.81 ) }
    dend_51 { pt3dadd( -22.1285, 53.607, 17.6413, 1.11 ) }
    dend_51 { pt3dadd( -22.5944, 54.2583, 17.4253, 1.03 ) }
    dend_51 { pt3dadd( -23.1183, 55.0052, 17.1796, 0.22 ) }
    dend_51 { pt3dadd( -23.7156, 55.8615, 16.923, 0.22 ) }
    dend_51 { pt3dadd( -23.9303, 56.1632, 16.8522, 0.44 ) }
    dend_51 { pt3dadd( -24.3559, 56.7874, 16.7351, 0.22 ) }
    dend_51 { pt3dadd( -24.7364, 57.3789, 16.6495, 0.59 ) }
    dend_51 { pt3dadd( -24.984, 57.8449, 16.6149, 0.81 ) }
    dend_51 { pt3dadd( -25.2349, 58.4595, 16.5941, 0.29 ) }
    dend_51 { pt3dadd( -25.4391, 59.0947, 16.5909, 0.29 ) }
    dend_51 { pt3dadd( -25.7257, 60.1463, 16.6153, 1.25 ) }
    dend_51 { pt3dadd( -25.7741, 60.356, 16.6292, 1.4 ) }
    dend_51 { pt3dadd( -26.0674, 61.8179, 16.7525, 0.44 ) }
    dend_51 { pt3dadd( -26.205, 62.5404, 16.8195, 0.74 ) }
    dend_51 { pt3dadd( -26.3017, 63.0484, 16.8642, 0.96 ) }
    dend_51 { pt3dadd( -26.4574, 63.7891, 16.925, 0.29 ) }
    dend_51 { pt3dadd( -26.6339, 64.5412, 16.9785, 0.22 ) }
    dend_51 { pt3dadd( -26.9148, 65.6464, 17.0543, 1.33 ) }
    dend_51 { pt3dadd( -27.0909, 66.2797, 17.0965, 1.33 ) }
    dend_51 { pt3dadd( -27.4225, 67.4504, 17.1663, 0.29 ) }
    dend_51 { pt3dadd( -27.7329, 68.5632, 17.2287, 0.29 ) }
    dend_51 { pt3dadd( -27.9518, 69.3358, 17.2674, 0.29 ) }
    dend_51 { pt3dadd( -28.113, 69.9234, 17.2937, 0.52 ) }
    dend_51 { pt3dadd( -28.2772, 70.5963, 17.3337, 0.29 ) }
    dend_51 { pt3dadd( -28.4153, 71.2974, 17.3834, 0.52 ) }
    dend_51 { pt3dadd( -28.4561, 71.6095, 17.4003, 0.59 ) }
    dend_51 { pt3dadd( -28.4963, 72.5368, 17.4197, 0.37 ) }
    dend_51 { pt3dadd( -28.4274, 73.7592, 17.406, 0.96 ) }
    dend_51 { pt3dadd( -28.3589, 74.1247, 17.3969, 1.47 ) }
    dend_51 { pt3dadd( -28.2064, 74.5674, 17.4036, 1.18 ) }
    dend_51 { pt3dadd( -27.8353, 75.3074, 17.4748, 0.81 ) }
    dend_51 { pt3dadd( -27.4608, 75.9105, 17.5914, 0.29 ) }
    dend_51 { pt3dadd( -27.1585, 76.3711, 17.7272, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_51 { pt3dadd( -26.7813, 77.0559, 17.9764, 0.22 ) }
    dend_51 { pt3dadd( -26.5629, 77.6729, 18.2123, 0.22 ) }
    dend_51 { pt3dadd( -26.4266, 78.3986, 18.5026, 1.03 ) }
    dend_51 { pt3dadd( -26.3949, 78.959, 18.7365, 1.25 ) }
    dend_51 { pt3dadd( -26.4524, 80.0373, 19.1476, 0.29 ) }
    dend_51 { pt3dadd( -26.58, 80.9989, 19.4566, 0.29 ) }
    dend_51 { pt3dadd( -26.7358, 81.8349, 19.6735, 0.66 ) }
    dend_51 { pt3dadd( -26.8624, 82.4261, 19.8069, 0.74 ) }
    dend_51 { pt3dadd( -26.9832, 82.9334, 19.9184, 0.52 ) }
    dend_51 { pt3dadd( -27.1076, 83.464, 20.041, 0.29 ) }
    dend_51 { pt3dadd( -27.2838, 84.4429, 20.2921, 1.11 ) }
    dend_51 { pt3dadd( -27.3503, 85.0025, 20.4329, 1.33 ) }
    dend_51 { pt3dadd( -27.4361, 85.9292, 20.6582, 0.74 ) }
    dend_51 { pt3dadd( -27.4899, 86.5339, 20.8111, 0.29 ) }
    dend_51 { pt3dadd( -27.535, 87.0924, 20.9639, 0.29 ) }
    dend_51 { pt3dadd( -27.5881, 87.8168, 21.199, 0.29 ) }
    dend_51 { pt3dadd( -27.6283, 88.3296, 21.3897, 0.52 ) }
    dend_51 { pt3dadd( -27.6629, 88.7381, 21.571, 0.52 ) }
    dend_51 { pt3dadd( -27.7292, 89.3973, 21.89, 0.29 ) }
    dend_51 { pt3dadd( -27.7874, 89.9427, 22.1865, 0.59 ) }
    dend_51 { pt3dadd( -27.8504, 90.4961, 22.5203, 0.81 ) }
    dend_51 { pt3dadd( -27.903, 90.9595, 22.8108, 1.03 ) }
    dend_51 { pt3dadd( -27.9979, 91.7897, 23.3193, 0.59 ) }
    dend_51 { pt3dadd( -28.0854, 92.5181, 23.7585, 0.29 ) }
    dend_51 { pt3dadd( -28.1868, 93.3474, 24.2327, 0.22 ) }
    dend_51 { pt3dadd( -28.264, 93.8947, 24.5288, 0.22 ) }
    dend_51 { pt3dadd( -28.3909, 94.7376, 24.9506, 0.22 ) }
    dend_51 { pt3dadd( -28.5499, 95.6779, 25.3788, 0.22 ) }
    dend_51 { pt3dadd( -28.7012, 96.4655, 25.6613, 0.66 ) }
    dend_51 { pt3dadd( -28.8218, 97.0528, 25.8223, 0.96 ) }
    dend_51 { pt3dadd( -28.9632, 97.6533, 25.9245, 0.96 ) }
    dend_51 { pt3dadd( -29.0743, 98.0951, 25.9477, 0.96 ) }
    dend_51 { pt3dadd( -29.2428, 98.7469, 25.884, 0.52 ) }
    dend_51 { pt3dadd( -29.4898, 99.7426, 25.6589, 0.22 ) }
    dend_51 { pt3dadd( -29.6252, 100.265, 25.4965, 0.22 ) }
    dend_51 { pt3dadd( -29.7288, 100.638, 25.3699, 0.88 ) }
    dend_51 { pt3dadd( -29.8952, 101.2, 25.1767, 1.03 ) }
    dend_51 { pt3dadd( -30.2423, 102.231, 24.817, 0.44 ) }
    dend_51 { pt3dadd( -30.4358, 102.752, 24.6557, 0.29 ) }
    dend_51 { pt3dadd( -30.644, 103.261, 24.537, 0.29 ) }
    dend_51 { pt3dadd( -30.8595, 103.758, 24.4495, 0.66 ) }
    dend_51 { pt3dadd( -31.081, 104.254, 24.4062, 0.66 ) }
    dend_51 { pt3dadd( -31.4, 104.95, 24.408, 0.22 ) }
    dend_51 { pt3dadd( -31.6775, 105.553, 24.4446, 0.22 ) }
    dend_51 { pt3dadd( -31.8849, 106.016, 24.4827, 0.74 ) }
    dend_51 { pt3dadd( -32.1209, 106.547, 24.5268, 0.74 ) }
    dend_51 { pt3dadd( -32.5768, 107.585, 24.5861, 0.22 ) }
    dend_51 { pt3dadd( -32.7816, 108.09, 24.6396, 0.22 ) }
    dend_51 { pt3dadd( -33.0572, 108.835, 24.7315, 0.74 ) }
    dend_51 { pt3dadd( -33.2018, 109.252, 24.7714, 0.81 ) }
    dend_51 { pt3dadd( -33.5185, 110.255, 24.8252, 0.22 ) }
    dend_51 { pt3dadd( -33.7753, 111.131, 24.838, 0.22 ) }
    dend_51 { pt3dadd( -34.1389, 112.469, 24.797, 0.22 ) }
    dend_51 { pt3dadd( -34.2942, 113.047, 24.7749, 0.66 ) }
    dend_51 { pt3dadd( -34.4341, 113.548, 24.7388, 0.66 ) }
    dend_51 { pt3dadd( -34.6948, 114.428, 24.6464, 0.37 ) }
    dend_51 { pt3dadd( -34.8358, 114.877, 24.5871, 0.37 ) }
    dend_51 { pt3dadd( -35.1914, 115.862, 24.4076, 0.96 ) }
    dend_51 { pt3dadd( -35.4709, 116.527, 24.2372, 1.18 ) }
    dend_51 { pt3dadd( -35.8088, 117.258, 24.0449, 1.25 ) }
    dend_51 { pt3dadd( -36.1137, 117.887, 23.8782, 0.52 ) }
    dend_51 { pt3dadd( -36.3623, 118.382, 23.7407, 0.37 ) }
    dend_51 { pt3dadd( -36.6141, 118.899, 23.5752, 0.29 ) }
    dend_51 { pt3dadd( -36.8971, 119.538, 23.35, 0.22 ) }
    dend_51 { pt3dadd( -37.0685, 120.024, 23.1609, 0.22 ) }
    dend_51 { pt3dadd( -37.2813, 120.77, 22.8763, 0.66 ) }
    dend_51 { pt3dadd( -37.3601, 121.091, 22.7507, 0.81 ) }
    dend_51 { pt3dadd( -37.4861, 121.689, 22.5201, 0.81 ) }
    dend_51 { pt3dadd( -37.6773, 122.808, 22.118, 0.29 ) }
    dend_51 { pt3dadd( -37.8494, 124.268, 21.5779, 0.59 ) }
    dend_51 { pt3dadd( -37.8973, 124.899, 21.3486, 0.59 ) }
    dend_51 { pt3dadd( -37.9243, 125.448, 21.1521, 0.59 ) }
    dend_51 { pt3dadd( -37.9451, 126.007, 20.9684, 0.59 ) }
    dend_51 { pt3dadd( -37.9638, 126.63, 20.7939, 0.22 ) }
    dend_51 { pt3dadd( -37.9778, 127.55, 20.5939, 0.22 ) }
    dend_51 { pt3dadd( -37.982, 128.552, 20.4555, 0.74 ) }
    dend_51 { pt3dadd( -37.98, 129.114, 20.3904, 0.74 ) }
    dend_51 { pt3dadd( -37.9789, 129.731, 20.3338, 0.74 ) }
    dend_51 { pt3dadd( -37.9912, 130.628, 20.2663, 0.29 ) }
    dend_51 { pt3dadd( -38.0144, 131.737, 20.2166, 0.29 ) }
    dend_51 { pt3dadd( -38.0309, 132.461, 20.2142, 0.74 ) }
    dend_51 { pt3dadd( -38.0302, 133.216, 20.2165, 0.96 ) }
    dend_51 { pt3dadd( -38.0203, 133.651, 20.2172, 1.18 ) }
    dend_51 { pt3dadd( -37.9848, 134.385, 20.2201, 0.88 ) }
    dend_51 { pt3dadd( -37.9376, 135.223, 20.2247, 0.22 ) }
    dend_51 { pt3dadd( -37.9047, 136.213, 20.2561, 0.59 ) }
    dend_51 { pt3dadd( -37.9067, 136.654, 20.2861, 0.59 ) }
    dend_51 { pt3dadd( -37.9149, 136.919, 20.3149, 0.59 ) }
    dend_51 { pt3dadd( -37.9707, 137.906, 20.4481, 0.22 ) }
    dend_51 { pt3dadd( -37.9907, 138.166, 20.4857, 0.22 ) }
    dend_51 { pt3dadd( -38.1402, 139.443, 20.6568, 0.22 ) }
    dend_51 { pt3dadd( -38.2637, 140.24, 20.7593, 0.88 ) }
    dend_51 { pt3dadd( -38.3532, 140.723, 20.8163, 0.88 ) }
    dend_51 { pt3dadd( -38.4665, 141.251, 20.8723, 0.66 ) }
    dend_51 { pt3dadd( -38.8113, 142.561, 20.9835, 0.22 ) }
    dend_51 { pt3dadd( -39.0977, 143.535, 21.0391, 0.59 ) }
    dend_51 { pt3dadd( -39.2863, 144.076, 21.0457, 0.74 ) }
    dend_51 { pt3dadd( -39.5541, 144.762, 21.0398, 0.59 ) }
    dend_51 { pt3dadd( -39.7717, 145.28, 21.0197, 0.44 ) }
    dend_51 { pt3dadd( -40.0755, 145.975, 20.954, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_51 { pt3dadd( -40.2766, 146.383, 20.8913, 1.03 ) }
    dend_51 { pt3dadd( -40.4827, 146.803, 20.8099, 1.18 ) }
    dend_51 { pt3dadd( -40.5882, 147.025, 20.7607, 1.18 ) }
    dend_51 { pt3dadd( -40.8573, 147.609, 20.6207, 0.66 ) }
    dend_51 { pt3dadd( -41.3516, 148.79, 20.3531, 0.29 ) }
    dend_51 { pt3dadd( -41.624, 149.583, 20.1977, 0.29 ) }
    dend_51 { pt3dadd( -41.849, 150.384, 20.0683, 0.74 ) }
    dend_51 { pt3dadd( -41.9906, 151.083, 19.9554, 0.74 ) }
    dend_51 { pt3dadd( -42.0198, 151.293, 19.9163, 0.74 ) }
    dend_51 { pt3dadd( -42.1167, 152.646, 19.6211, 0.29 ) }
    dend_51 { pt3dadd( -42.1086, 153.819, 19.2932, 0.29 ) }
    dend_51 { pt3dadd( -42.0617, 154.56, 19.039, 0.29 ) }
    dend_51 { pt3dadd( -41.9185, 156.065, 18.4601, 0.88 ) }
    dend_51 { pt3dadd( -41.8415, 156.771, 18.1647, 1.03 ) }
    dend_51 { pt3dadd( -41.7146, 157.951, 17.6377, 0.22 ) }
    dend_51 { pt3dadd( -41.5631, 159.304, 16.9821, 0.88 ) }
    dend_51 { pt3dadd( -41.5038, 159.888, 16.692, 1.03 ) }
    dend_51 { pt3dadd( -41.4206, 160.736, 16.3035, 0.52 ) }
    dend_51 { pt3dadd( -41.3522, 161.369, 16.0601, 0.52 ) }
    dend_51 { pt3dadd( -41.2877, 161.871, 15.9135, 0.88 ) }
    dend_51 { pt3dadd( -41.1855, 162.432, 15.7915, 0.88 ) }
    dend_51 { pt3dadd( -41.104, 162.786, 15.7365, 0.88 ) }
    dend_51 { pt3dadd( -40.8494, 163.682, 15.6117, 0.22 ) }
    dend_51 { pt3dadd( -40.6203, 164.355, 15.5177, 0.22 ) }
    dend_51 { pt3dadd( -40.2881, 165.315, 15.3934, 0.88 ) }
    dend_51 { pt3dadd( -40.0728, 165.962, 15.3138, 1.11 ) }
    dend_51 { pt3dadd( -39.9169, 166.473, 15.2597, 1.11 ) }
    dend_51 { pt3dadd( -39.7461, 167.093, 15.2043, 0.74 ) }
    dend_51 { pt3dadd( -39.4755, 168.214, 15.1267, 0.29 ) }
    dend_51 { pt3dadd( -39.2826, 169.18, 15.087, 0.29 ) }
    dend_51 { pt3dadd( -39.1432, 170.01, 15.0664, 0.29 ) }
    dend_51 { pt3dadd( -39.0217, 170.936, 15.0587, 0.74 ) }
    dend_51 { pt3dadd( -38.9574, 171.514, 15.0611, 0.74 ) }
    dend_51 { pt3dadd( -38.8861, 172.294, 15.0662, 0.44 ) }
    dend_51 { pt3dadd( -38.7634, 173.794, 15.0754, 1.11 ) }
    dend_51 { pt3dadd( -38.705, 174.576, 15.0801, 1.11 ) }
    dend_51 { pt3dadd( -38.6646, 175.388, 15.0767, 0.81 ) }
    dend_51 { pt3dadd( -38.6328, 176.453, 15.0875, 0.37 ) }
    dend_51 { pt3dadd( -38.6257, 177.392, 15.1166, 0.37 ) }
    dend_51 { pt3dadd( -38.6537, 178.26, 15.1708, 0.74 ) }
    dend_51 { pt3dadd( -38.7374, 179.199, 15.2569, 0.29 ) }
    dend_51 { pt3dadd( -38.8154, 179.745, 15.317, 0.29 ) }
    dend_51 { pt3dadd( -38.9666, 180.662, 15.4293, 0.74 ) }
    dend_51 { pt3dadd( -39.066, 181.223, 15.5039, 0.74 ) }
    dend_51 { pt3dadd( -39.2302, 182.305, 15.6566, 0.29 ) }
    dend_51 { pt3dadd( -39.349, 183.316, 15.8, 0.29 ) }
    dend_51 { pt3dadd( -39.4277, 184.42, 15.9423, 0.29 ) }
    dend_51 { pt3dadd( -39.4544, 185.494, 16.0215, 0.96 ) }
    dend_51 { pt3dadd( -39.4487, 186.076, 16.0335, 0.96 ) }
    dend_51 { pt3dadd( -39.4125, 186.887, 16.0219, 0.66 ) }
    dend_51 { pt3dadd( -39.3752, 187.405, 15.9814, 0.22 ) }
    dend_51 { pt3dadd( -39.2746, 188.534, 15.8277, 0.22 ) }
    dend_51 { pt3dadd( -39.1313, 190.173, 15.5275, 1.4 ) }
    dend_51 { pt3dadd( -39.1159, 190.465, 15.4604, 1.62 ) }
    dend_51 { pt3dadd( -39.1092, 190.947, 15.3276, 1.62 ) }
    dend_51 { pt3dadd( -39.1417, 192.331, 14.9128, 0.22 ) }
    dend_51 { pt3dadd( -39.1736, 192.981, 14.7045, 0.22 ) }
    dend_51 { pt3dadd( -39.2291, 193.867, 14.4209, 0.66 ) }
    dend_51 { pt3dadd( -39.2584, 194.359, 14.2761, 0.66 ) }
    dend_51 { pt3dadd( -39.2987, 195.299, 14.0177, 0.44 ) }
    dend_51 { pt3dadd( -39.34, 196.149, 13.8174, 0.81 ) }
    dend_51 { pt3dadd( -39.3846, 196.761, 13.7213, 0.81 ) }
    dend_51 { pt3dadd( -39.4761, 197.748, 13.6158, 0.22 ) }
    dend_51 { pt3dadd( -39.5449, 198.422, 13.588, 0.74 ) }
    dend_51 { pt3dadd( -39.6088, 199.085, 13.6403, 0.74 ) }
    dend_51 { pt3dadd( -39.7117, 200.209, 13.8883, 0.15 ) }
    dend_51 { pt3dadd( -39.7889, 201.004, 14.1701, 0.15 ) }
    dend_51 { pt3dadd( -39.8362, 201.534, 14.4024, 0.59 ) }
    dend_51 { pt3dadd( -39.8878, 202.175, 14.7127, 0.59 ) }
    dend_51 { pt3dadd( -39.9456, 203.145, 15.2034, 0.37 ) }
    dend_51 { pt3dadd( -39.9441, 204.15, 15.7056, 0.44 ) }
    dend_51 { pt3dadd( -39.8712, 204.971, 16.1025, 0.22 ) }
    dend_51 { pt3dadd( -39.7556, 205.698, 16.4389, 0.66 ) }
    dend_51 { pt3dadd( -39.6248, 206.334, 16.7441, 1.03 ) }
    dend_51 { pt3dadd( -39.5159, 206.733, 16.9257, 1.03 ) }
    dend_51 { pt3dadd( -39.2744, 207.408, 17.2209, 0.37 ) }
    dend_51 { pt3dadd( -39.0651, 207.872, 17.4487, 0.37 ) }
    dend_51 { pt3dadd( -38.5782, 208.817, 17.9929, 0.22 ) }
    dend_51 { pt3dadd( -38.2449, 209.442, 18.3996, 0.22 ) }
    dend_51 { pt3dadd( -37.9596, 210.014, 18.7839, 0.74 ) }
    dend_51 { pt3dadd( -37.7463, 210.539, 19.1262, 0.74 ) }
    dend_51 { pt3dadd( -37.5582, 211.149, 19.4882, 0.44 ) }
    dend_51 { pt3dadd( -37.3286, 212.128, 19.9698, 0.88 ) }
    dend_51 { pt3dadd( -37.2167, 212.729, 20.1861, 1.11 ) }
    dend_51 { pt3dadd( -37.0776, 213.631, 20.4329, 0.66 ) }
    dend_51 { pt3dadd( -36.9772, 214.464, 20.6139, 0.22 ) }
    dend_51 { pt3dadd( -36.8943, 215.246, 20.7349, 0.22 ) }
    dend_51 { pt3dadd( -36.8011, 216.179, 20.8227, 0.44 ) }
    dend_51 { pt3dadd( -36.6372, 217.78, 20.8975, 0.22 ) }
    dend_51 { pt3dadd( -36.5249, 218.625, 20.9226, 0.44 ) }
    dend_51 { pt3dadd( -36.4647, 218.983, 20.9252, 0.44 ) }
    dend_51 { pt3dadd( -36.3162, 219.69, 20.9243, 0.22 ) }
    dend_51 { pt3dadd( -36.1531, 220.467, 20.916, 0.22 ) }
    dend_51 { pt3dadd( -36.0316, 221.102, 20.9023, 0.44 ) }
    dend_51 { pt3dadd( -35.9722, 221.5, 20.898, 0.22 ) }
    dend_51 { pt3dadd( -39.3743, 230.436, 23.0039, 0.22 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 96/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 42.119, 137.269, 5.36954, 0.44 ) }
    dend_48 { pt3dadd( 42.593, 138.408, 5.38502, 0.44 ) }
    dend_48 { pt3dadd( 43.1103, 139.662, 5.44838, 0.37 ) }
    dend_48 { pt3dadd( 43.5998, 140.781, 5.57503, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_48 { pt3dadd( 43.7495, 141.127, 5.655, 1.55 ) }
    dend_48 { pt3dadd( 44.0399, 141.827, 5.86634, 0.96 ) }
    dend_48 { pt3dadd( 44.4446, 142.778, 6.18987, 0.22 ) }
    dend_48 { pt3dadd( 44.8544, 143.636, 6.59281, 0.22 ) }
    dend_48 { pt3dadd( 45.2223, 144.398, 6.9979, 0.22 ) }
    dend_48 { pt3dadd( 46.0953, 146.166, 8.03761, 0.22 ) }
    dend_48 { pt3dadd( 46.543, 147.043, 8.59146, 0.44 ) }
    dend_48 { pt3dadd( 46.8635, 147.632, 9.00096, 0.37 ) }
    dend_48 { pt3dadd( 47.52, 148.792, 9.87716, 0.29 ) }
    dend_48 { pt3dadd( 51.7288, 157.497, 11.4806, 0.29 ) }
    dend_48 { pt3dadd( 55.433, 166.052, 14.529, 0.29 ) }
    dend_48 { pt3dadd( 58.06, 175.277, 16.4241, 0.29 ) }
    dend_48 { pt3dadd( 62.8457, 183.609, 18.4378, 0.29 ) }
    dend_48 { pt3dadd( 68.2656, 191.392, 21.0652, 0.29 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 14/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 42.119, 137.269, 5.36954, 0.29 ) }
    dend_47 { pt3dadd( 41.017, 137.513, 5.24929, 0.29 ) }
    dend_47 { pt3dadd( 40.6678, 137.597, 5.21465, 0.44 ) }
    dend_47 { pt3dadd( 40.3748, 137.665, 5.18891, 0.44 ) }
    dend_47 { pt3dadd( 39.3767, 137.886, 5.10837, 0.22 ) }
    dend_47 { pt3dadd( 38.5954, 138.058, 5.04533, 0.22 ) }
    dend_47 { pt3dadd( 38.01, 138.188, 4.99809, 0.22 ) }
    dend_47 { pt3dadd( 36.9849, 138.424, 4.91327, 0.22 ) }
    dend_47 { pt3dadd( 36.3367, 138.551, 4.86567, 0.52 ) }
    dend_47 { pt3dadd( 36.0352, 138.599, 4.84975, 0.52 ) }
    dend_47 { pt3dadd( 26.9274, 142.311, 3.25183, 0.52 ) }
    // Section: dend_45, id: dend_45, parent: dend_37 (entry count 25/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 30.5944, 40.2114, -0.589474, 0.52 ) }
    dend_45 { pt3dadd( 31.6689, 40.4011, -1.87951, 0.52 ) }
    dend_45 { pt3dadd( 32.433, 40.517, -2.72196, 0.44 ) }
    dend_45 { pt3dadd( 32.9698, 40.5932, -3.21988, 0.59 ) }
    dend_45 { pt3dadd( 33.4883, 40.6708, -3.65457, 0.81 ) }
    dend_45 { pt3dadd( 34.2813, 40.7992, -4.35626, 0.81 ) }
    dend_45 { pt3dadd( 34.8113, 40.8844, -4.8343, 0.66 ) }
    dend_45 { pt3dadd( 35.4404, 40.9944, -5.36531, 0.37 ) }
    dend_45 { pt3dadd( 36.3192, 41.1318, -6.07128, 0.37 ) }
    dend_45 { pt3dadd( 36.9767, 41.2381, -6.56909, 0.88 ) }
    dend_45 { pt3dadd( 38.672, 41.4919, -7.8021, 1.03 ) }
    dend_45 { pt3dadd( 39.4426, 41.6003, -8.31821, 1.11 ) }
    dend_45 { pt3dadd( 39.8934, 41.6518, -8.60618, 1.25 ) }
    dend_45 { pt3dadd( 40.521, 41.7063, -9.00051, 0.96 ) }
    dend_45 { pt3dadd( 41.2781, 41.7668, -9.45027, 0.37 ) }
    dend_45 { pt3dadd( 42.4855, 41.857, -10.038, 0.29 ) }
    dend_45 { pt3dadd( 43.115, 41.91, -10.261, 0.66 ) }
    dend_45 { pt3dadd( 43.7223, 41.9555, -10.456, 0.66 ) }
    dend_45 { pt3dadd( 44.2469, 41.9852, -10.6361, 0.66 ) }
    dend_45 { pt3dadd( 44.8856, 42.0291, -10.8619, 0.22 ) }
    dend_45 { pt3dadd( 45.3853, 42.0699, -11.0322, 0.22 ) }
    dend_45 { pt3dadd( 46.1349, 42.1312, -11.265, 0.96 ) }
    dend_45 { pt3dadd( 46.8544, 42.165, -11.4896, 1.4 ) }
    dend_45 { pt3dadd( 47.4885, 42.1673, -11.6865, 1.55 ) }
    dend_45 { pt3dadd( 48.062, 42.1377, -11.823, 0.88 ) }
    dend_45 { pt3dadd( 48.7492, 42.0707, -11.9505, 0.44 ) }
    dend_45 { pt3dadd( 49.6107, 41.9815, -12.0668, 0.59 ) }
    dend_45 { pt3dadd( 50.2125, 41.9206, -12.1165, 0.29 ) }
    dend_45 { pt3dadd( 51.1905, 41.831, -12.1455, 0.29 ) }
    dend_45 { pt3dadd( 52.4892, 41.6929, -12.1089, 0.52 ) }
    dend_45 { pt3dadd( 53.0753, 41.6168, -12.0769, 1.11 ) }
    dend_45 { pt3dadd( 53.465, 41.5409, -12.0474, 1.11 ) }
    dend_45 { pt3dadd( 53.8979, 41.4371, -12.011, 1.11 ) }
    dend_45 { pt3dadd( 54.5577, 41.2654, -11.9926, 0.96 ) }
    dend_45 { pt3dadd( 55.1941, 41.0862, -12.0166, 0.52 ) }
    dend_45 { pt3dadd( 55.6908, 40.9443, -12.0825, 0.29 ) }
    dend_45 { pt3dadd( 56.7419, 40.6374, -12.2531, 0.29 ) }
    dend_45 { pt3dadd( 57.3567, 40.4639, -12.3811, 0.96 ) }
    dend_45 { pt3dadd( 58.049, 40.2867, -12.5597, 0.96 ) }
    dend_45 { pt3dadd( 58.499, 40.1845, -12.6932, 0.96 ) }
    dend_45 { pt3dadd( 58.9824, 40.0864, -12.8612, 0.59 ) }
    dend_45 { pt3dadd( 59.4174, 40.0011, -13.0364, 0.59 ) }
    dend_45 { pt3dadd( 60.5027, 39.802, -13.5338, 0.22 ) }
    dend_45 { pt3dadd( 61.0824, 39.6992, -13.8406, 0.22 ) }
    dend_45 { pt3dadd( 61.4778, 39.6387, -14.0739, 0.96 ) }
    dend_45 { pt3dadd( 61.9163, 39.5822, -14.3526, 1.18 ) }
    dend_45 { pt3dadd( 62.9476, 39.4698, -15.0587, 0.44 ) }
    dend_45 { pt3dadd( 63.3797, 39.4168, -15.3569, 0.44 ) }
    dend_45 { pt3dadd( 64.0491, 39.326, -15.8855, 1.11 ) }
    dend_45 { pt3dadd( 64.6313, 39.2543, -16.3648, 1.33 ) }
    dend_45 { pt3dadd( 65.0999, 39.202, -16.7291, 1.33 ) }
    dend_45 { pt3dadd( 65.6143, 39.149, -17.1053, 1.03 ) }
    dend_45 { pt3dadd( 66.6544, 39.0481, -17.831, 0.22 ) }
    dend_45 { pt3dadd( 68.1066, 38.8806, -18.7917, 0.88 ) }
    dend_45 { pt3dadd( 68.4997, 38.8207, -19.045, 1.11 ) }
    dend_45 { pt3dadd( 69.5157, 38.6459, -19.736, 0.22 ) }
    dend_45 { pt3dadd( 70.1013, 38.5425, -20.1468, 0.66 ) }
    dend_45 { pt3dadd( 70.6485, 38.4547, -20.5282, 0.81 ) }
    dend_45 { pt3dadd( 71.0828, 38.3912, -20.8419, 0.59 ) }
    dend_45 { pt3dadd( 72.004, 38.2533, -21.476, 0.29 ) }
    dend_45 { pt3dadd( 72.8293, 38.1219, -22.0885, 0.59 ) }
    dend_45 { pt3dadd( 73.2385, 38.0511, -22.3954, 0.59 ) }
    dend_45 { pt3dadd( 74.3709, 37.8508, -23.2057, 0.22 ) }
    dend_45 { pt3dadd( 75.1596, 37.7198, -23.7596, 0.22 ) }
    dend_45 { pt3dadd( 75.7696, 37.6281, -24.18, 1.25 ) }
    dend_45 { pt3dadd( 76.284, 37.5638, -24.5273, 1.25 ) }
    dend_45 { pt3dadd( 77.7566, 37.4239, -25.4895, 0.22 ) }
    dend_45 { pt3dadd( 78.7718, 37.3428, -26.1638, 0.22 ) }
    dend_45 { pt3dadd( 79.5458, 37.2665, -26.6644, 0.52 ) }
    dend_45 { pt3dadd( 79.9994, 37.2135, -26.9355, 0.52 ) }
    dend_45 { pt3dadd( 80.3898, 37.16, -27.1671, 0.52 ) }
    dend_45 { pt3dadd( 81.0176, 37.0623, -27.5249, 0.22 ) }
    dend_45 { pt3dadd( 81.7438, 36.9378, -27.9066, 0.22 ) }
    dend_45 { pt3dadd( 82.4016, 36.7987, -28.2344, 0.22 ) }
    dend_45 { pt3dadd( 83.2048, 36.6082, -28.6092, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_45 { pt3dadd( 83.84, 36.4467, -28.8948, 0.81 ) }
    dend_45 { pt3dadd( 84.9922, 36.1285, -29.3895, 0.15 ) }
    dend_45 { pt3dadd( 85.919, 35.8761, -29.7678, 0.22 ) }
    dend_45 { pt3dadd( 86.9855, 35.6116, -30.1931, 1.11 ) }
    dend_45 { pt3dadd( 87.7362, 35.4466, -30.4884, 1.55 ) }
    dend_45 { pt3dadd( 88.1809, 35.3524, -30.6567, 1.55 ) }
    dend_45 { pt3dadd( 88.8449, 35.2063, -30.8934, 0.96 ) }
    dend_45 { pt3dadd( 90.9934, 34.7075, -31.6613, 0.22 ) }
    dend_45 { pt3dadd( 91.6173, 34.5547, -31.8908, 0.88 ) }
    dend_45 { pt3dadd( 92.022, 34.4533, -32.032, 1.03 ) }
    dend_45 { pt3dadd( 92.4152, 34.3492, -32.1749, 1.03 ) }
    dend_45 { pt3dadd( 93.9129, 33.9441, -32.7318, 0.22 ) }
    dend_45 { pt3dadd( 94.3936, 33.8154, -32.9086, 0.52 ) }
    dend_45 { pt3dadd( 94.6744, 33.7369, -33.0085, 0.52 ) }
    dend_45 { pt3dadd( 95.4986, 33.518, -33.2908, 0.22 ) }
    dend_45 { pt3dadd( 96.1384, 33.3633, -33.496, 0.74 ) }
    dend_45 { pt3dadd( 96.6733, 33.244, -33.651, 0.74 ) }
    dend_45 { pt3dadd( 97.6666, 33.041, -33.9086, 0.22 ) }
    dend_45 { pt3dadd( 98.169, 32.9297, -34.0368, 0.44 ) }
    dend_45 { pt3dadd( 98.6893, 32.8033, -34.1835, 0.44 ) }
    dend_45 { pt3dadd( 99.9318, 32.5257, -34.5457, 0.22 ) }
    dend_45 { pt3dadd( 100.609, 32.3902, -34.7457, 0.52 ) }
    dend_45 { pt3dadd( 101.403, 32.2387, -35.0001, 0.52 ) }
    dend_45 { pt3dadd( 102.167, 32.1011, -35.2824, 1.03 ) }
    dend_45 { pt3dadd( 102.612, 32.0272, -35.4544, 1.03 ) }
    dend_45 { pt3dadd( 103.995, 31.8258, -35.9868, 0.22 ) }
    dend_45 { pt3dadd( 104.716, 31.7352, -36.271, 0.81 ) }
    dend_45 { pt3dadd( 105.422, 31.6655, -36.5408, 1.03 ) }
    dend_45 { pt3dadd( 107.559, 31.5128, -37.3952, 0.22 ) }
    dend_45 { pt3dadd( 109.113, 31.4807, -38.0446, 0.22 ) }
    dend_45 { pt3dadd( 110.195, 31.4889, -38.5151, 0.88 ) }
    dend_45 { pt3dadd( 110.736, 31.498, -38.7737, 1.4 ) }
    dend_45 { pt3dadd( 111.214, 31.5153, -39.0073, 0.96 ) }
    dend_45 { pt3dadd( 112.304, 31.581, -39.5594, 0.66 ) }
    dend_45 { pt3dadd( 113.926, 31.7373, -40.4976, 0.22 ) }
    dend_45 { pt3dadd( 114.472, 31.7901, -40.8412, 0.22 ) }
    dend_45 { pt3dadd( 115.548, 31.8723, -41.5546, 0.22 ) }
    dend_45 { pt3dadd( 116.28, 31.913, -42.0472, 0.66 ) }
    dend_45 { pt3dadd( 116.825, 31.9271, -42.4208, 0.66 ) }
    dend_45 { pt3dadd( 118.564, 31.9211, -43.5795, 0.29 ) }
    dend_45 { pt3dadd( 119.322, 31.8953, -44.0981, 0.66 ) }
    dend_45 { pt3dadd( 119.839, 31.8784, -44.4587, 0.66 ) }
    dend_45 { pt3dadd( 120.823, 31.8524, -45.1639, 0.22 ) }
    dend_45 { pt3dadd( 121.476, 31.8256, -45.6514, 0.59 ) }
    dend_45 { pt3dadd( 122.153, 31.786, -46.1645, 0.59 ) }
    dend_45 { pt3dadd( 123.194, 31.6849, -47.0368, 0.22 ) }
    dend_45 { pt3dadd( 124.142, 31.5712, -47.9044, 0.88 ) }
    dend_45 { pt3dadd( 124.6, 31.499, -48.3214, 0.88 ) }
    dend_45 { pt3dadd( 125.569, 31.3141, -49.1979, 0.22 ) }
    dend_45 { pt3dadd( 126.301, 31.158, -49.8602, 0.52 ) }
    dend_45 { pt3dadd( 127.827, 30.7974, -51.2095, 0.22 ) }
    dend_45 { pt3dadd( 128.731, 30.5748, -51.9598, 0.22 ) }
    dend_45 { pt3dadd( 130.038, 30.2514, -52.9554, 0.22 ) }
    dend_45 { pt3dadd( 130.413, 30.162, -53.21, 0.44 ) }
    dend_45 { pt3dadd( 131.149, 29.9907, -53.6466, 0.44 ) }
    dend_45 { pt3dadd( 132.178, 29.7601, -54.1688, 0.88 ) }
    dend_45 { pt3dadd( 133.73, 29.4408, -54.8057, 0.22 ) }
    dend_45 { pt3dadd( 134.403, 29.316, -55.0829, 0.44 ) }
    dend_45 { pt3dadd( 135.412, 29.1527, -55.5199, 0.22 ) }
    dend_45 { pt3dadd( 136.229, 29.0386, -55.8716, 0.44 ) }
    dend_45 { pt3dadd( 136.65, 29.0057, -56.0586, 0.44 ) }
    dend_45 { pt3dadd( 138.25, 29.0082, -56.7982, 0.22 ) }
    dend_45 { pt3dadd( 139.37, 29.1062, -57.3396, 0.88 ) }
    dend_45 { pt3dadd( 139.621, 29.1651, -57.4752, 0.88 ) }
    dend_45 { pt3dadd( 140.144, 29.3902, -57.8032, 0.22 ) }
    dend_45 { pt3dadd( 141.326, 30.1824, -58.607, 0.22 ) }
    dend_45 { pt3dadd( 141.892, 30.6535, -59.0184, 0.88 ) }
    dend_45 { pt3dadd( 142.26, 31.0238, -59.3037, 0.88 ) }
    dend_45 { pt3dadd( 143.264, 32.0814, -60.0596, 0.22 ) }
    dend_45 { pt3dadd( 143.979, 32.8458, -60.6087, 0.22 ) }
    dend_45 { pt3dadd( 145.354, 34.3292, -61.6944, 0.22 ) }
    dend_45 { pt3dadd( 145.976, 34.9548, -62.153, 0.96 ) }
    dend_45 { pt3dadd( 146.358, 35.2952, -62.4159, 0.96 ) }
    dend_45 { pt3dadd( 147.134, 35.9014, -62.908, 0.15 ) }
    dend_45 { pt3dadd( 147.864, 36.3687, -63.3067, 0.37 ) }
    dend_45 { pt3dadd( 148.281, 36.5984, -63.5183, 0.59 ) }
    dend_45 { pt3dadd( 149.892, 37.3611, -64.2923, 0.22 ) }
    dend_45 { pt3dadd( 150.542, 37.6537, -64.5865, 0.66 ) }
    dend_45 { pt3dadd( 151.025, 37.8517, -64.8049, 0.66 ) }
    dend_45 { pt3dadd( 152.24, 38.3052, -65.3807, 0.22 ) }
    dend_45 { pt3dadd( 153.142, 38.5997, -65.8205, 0.44 ) }
    dend_45 { pt3dadd( 153.6, 38.7125, -66.1295, 0.44 ) }
    dend_45 { pt3dadd( 154.222, 38.8258, -66.6911, 0.22 ) }
    dend_45 { pt3dadd( 154.833, 38.8984, -67.3224, 0.22 ) }
    dend_45 { pt3dadd( 155.336, 38.9209, -67.8943, 0.59 ) }
    dend_45 { pt3dadd( 155.7, 38.9284, -68.3656, 0.81 ) }
    dend_45 { pt3dadd( 157.52, 39.0049, -70.8962, 0.22 ) }
    dend_45 { pt3dadd( 158.116, 39.0392, -71.7285, 0.22 ) }
    dend_45 { pt3dadd( 158.704, 39.071, -72.528, 0.22 ) }
    dend_45 { pt3dadd( 159.344, 39.1268, -73.3537, 0.22 ) }
    dend_45 { pt3dadd( 160.439, 39.2593, -74.6654, 1.03 ) }
    dend_45 { pt3dadd( 160.951, 39.3417, -75.2197, 1.03 ) }
    dend_45 { pt3dadd( 162.157, 39.5883, -76.2906, 0.22 ) }
    dend_45 { pt3dadd( 162.887, 39.7523, -76.9529, 0.22 ) }
    dend_45 { pt3dadd( 163.546, 39.9425, -77.5738, 0.88 ) }
    dend_45 { pt3dadd( 163.767, 40.0201, -77.8012, 0.88 ) }
    dend_45 { pt3dadd( 164.408, 40.2448, -78.4595, 0.66 ) }
    dend_45 { pt3dadd( 165.099, 40.5057, -79.2079, 0.22 ) }
    dend_45 { pt3dadd( 166.486, 41.1761, -80.941, 0.81 ) }
    dend_45 { pt3dadd( 167.205, 41.5716, -81.9201, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_45 { pt3dadd( 168.218, 42.1497, -83.3991, 0.74 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 1/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 30.5944, 40.2114, -0.589474, 0.81 ) }
    dend_38 { pt3dadd( 31.8032, 41.286, -0.474849, 0.81 ) }
    dend_38 { pt3dadd( 32.8096, 42.0437, -0.376396, 1.11 ) }
    dend_38 { pt3dadd( 33.6544, 42.5788, -0.298287, 1.03 ) }
    dend_38 { pt3dadd( 34.339, 42.9722, -0.244082, 0.59 ) }
    dend_38 { pt3dadd( 34.7545, 43.1984, -0.224657, 0.59 ) }
    dend_38 { pt3dadd( 35.5428, 43.6103, -0.221153, 0.52 ) }
    dend_38 { pt3dadd( 36.5248, 44.0108, -0.227625, 0.66 ) }
    dend_38 { pt3dadd( 37.2957, 44.262, -0.246271, 1.03 ) }
    dend_38 { pt3dadd( 37.7533, 44.3963, -0.27141, 1.25 ) }
    dend_38 { pt3dadd( 38.5043, 44.6118, -0.343275, 0.96 ) }
    dend_38 { pt3dadd( 39.1207, 44.8017, -0.446093, 0.81 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 13/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 111.867, -162.998, -23.7983, 0.52 ) }
    dend_22 { pt3dadd( 113.705, -164.934, -23.0618, 0.52 ) }
    dend_22 { pt3dadd( 114.287, -165.552, -22.8443, 0.52 ) }
    dend_22 { pt3dadd( 115.366, -166.722, -22.4436, 0.44 ) }
    dend_22 { pt3dadd( 116.054, -167.451, -22.2073, 0.44 ) }
    dend_22 { pt3dadd( 117.75, -169.194, -21.6721, 0.44 ) }
    dend_22 { pt3dadd( 118.595, -170.07, -21.4379, 0.44 ) }
    dend_22 { pt3dadd( 119.364, -170.874, -21.3013, 0.44 ) }
    dend_22 { pt3dadd( 120.341, -171.907, -21.1386, 0.44 ) }
    dend_22 { pt3dadd( 121.429, -173.107, -20.9711, 0.44 ) }
    dend_22 { pt3dadd( 122.224, -174.005, -20.8629, 0.44 ) }
    dend_22 { pt3dadd( 124.051, -176.122, -20.6202, 0.44 ) }
    dend_22 { pt3dadd( 124.743, -176.929, -20.5084, 0.44 ) }
    dend_22 { pt3dadd( 126.456, -178.931, -20.2092, 0.44 ) }
    dend_22 { pt3dadd( 128.245, -180.984, -19.8685, 0.44 ) }
    dend_22 { pt3dadd( 128.846, -181.662, -19.7379, 0.44 ) }
    dend_22 { pt3dadd( 129.923, -182.835, -19.4982, 0.44 ) }
    dend_22 { pt3dadd( 130.982, -183.916, -19.2667, 0.44 ) }
    dend_22 { pt3dadd( 132.039, -184.948, -19.0607, 0.44 ) }
    dend_22 { pt3dadd( 132.906, -185.771, -18.9167, 0.44 ) }
    dend_22 { pt3dadd( 134.525, -187.365, -18.689, 0.44 ) }
    dend_22 { pt3dadd( 135.025, -187.924, -18.6355, 0.44 ) }
    dend_22 { pt3dadd( 136.025, -189.207, -18.6107, 0.44 ) }
    dend_22 { pt3dadd( 136.991, -190.601, -18.6457, 0.37 ) }
    dend_22 { pt3dadd( 137.901, -192.095, -18.731, 0.37 ) }
    dend_22 { pt3dadd( 138.554, -193.317, -18.836, 0.37 ) }
    dend_22 { pt3dadd( 139.91, -196.264, -19.0998, 0.37 ) }
    dend_22 { pt3dadd( 140.724, -198.235, -19.2765, 0.37 ) }
    dend_22 { pt3dadd( 141.262, -199.648, -19.4201, 0.37 ) }
    dend_22 { pt3dadd( 141.773, -201.111, -19.5913, 0.37 ) }
    dend_22 { pt3dadd( 142.25, -202.554, -19.789, 0.37 ) }
    dend_22 { pt3dadd( 142.918, -204.662, -20.1066, 0.37 ) }
    dend_22 { pt3dadd( 143.194, -205.731, -20.2774, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 46/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 111.867, -162.998, -23.7983, 0.52 ) }
    dend_21 { pt3dadd( 112.053, -163.8, -24.0393, 0.52 ) }
    dend_21 { pt3dadd( 112.522, -165.436, -24.5052, 0.52 ) }
    dend_21 { pt3dadd( 112.908, -166.696, -24.8616, 0.52 ) }
    dend_21 { pt3dadd( 113.409, -168.112, -25.305, 0.52 ) }
    dend_21 { pt3dadd( 113.695, -168.843, -25.5512, 0.52 ) }
    dend_21 { pt3dadd( 113.969, -169.437, -25.7443, 0.52 ) }
    dend_21 { pt3dadd( 114.577, -170.566, -26.1079, 0.52 ) }
    dend_21 { pt3dadd( 115.043, -171.359, -26.3417, 0.52 ) }
    dend_21 { pt3dadd( 115.839, -172.709, -26.7109, 0.52 ) }
    dend_21 { pt3dadd( 116.307, -173.58, -26.9524, 0.52 ) }
    dend_21 { pt3dadd( 117.433, -175.837, -27.565, 0.52 ) }
    dend_21 { pt3dadd( 117.844, -176.719, -27.8017, 0.52 ) }
    dend_21 { pt3dadd( 118.656, -178.56, -28.2811, 0.52 ) }
    dend_21 { pt3dadd( 119.308, -180.07, -28.6899, 0.52 ) }
    dend_21 { pt3dadd( 120.41, -182.804, -29.4708, 0.52 ) }
    dend_21 { pt3dadd( 121.166, -184.811, -30.0823, 0.52 ) }
    dend_21 { pt3dadd( 121.525, -185.868, -30.4225, 0.52 ) }
    dend_21 { pt3dadd( 122.24, -187.903, -31.097, 0.52 ) }
    dend_21 { pt3dadd( 122.749, -189.264, -31.5839, 0.52 ) }
    dend_21 { pt3dadd( 123.236, -190.397, -32.0383, 0.52 ) }
    dend_21 { pt3dadd( 123.831, -191.574, -32.4822, 0.52 ) }
    dend_21 { pt3dadd( 124.767, -193.133, -33.0034, 0.52 ) }
    dend_21 { pt3dadd( 125.751, -194.511, -33.3835, 0.52 ) }
    dend_21 { pt3dadd( 126.64, -195.608, -33.611, 0.52 ) }
    dend_21 { pt3dadd( 127.859, -197.043, -33.7889, 0.52 ) }
    dend_21 { pt3dadd( 129.678, -199.059, -33.9039, 0.52 ) }
    dend_21 { pt3dadd( 131.62, -201.114, -33.9236, 0.52 ) }
    dend_21 { pt3dadd( 133.453, -202.994, -33.8604, 0.52 ) }
    dend_21 { pt3dadd( 134.626, -204.138, -33.7653, 0.52 ) }
    dend_21 { pt3dadd( 138.247, -207.571, -33.3665, 0.52 ) }
    dend_21 { pt3dadd( 139.254, -208.492, -33.2617, 0.52 ) }
    dend_21 { pt3dadd( 140.92, -209.952, -33.1122, 0.52 ) }
    dend_21 { pt3dadd( 142.473, -211.284, -32.9653, 0.52 ) }
    dend_21 { pt3dadd( 145.747, -214.004, -32.6512, 0.52 ) }
    dend_21 { pt3dadd( 147.291, -215.211, -32.5093, 0.52 ) }
    dend_21 { pt3dadd( 149.609, -216.822, -32.3303, 0.52 ) }
    dend_21 { pt3dadd( 150.657, -217.554, -32.2856, 0.52 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 84/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 6.90457, -48.7676, -18.8245, 0.66 ) }
    dend_19 { pt3dadd( 6.68754, -49.781, -20.5813, 0.66 ) }
    dend_19 { pt3dadd( 6.42525, -50.8602, -22.1128, 0.66 ) }
    dend_19 { pt3dadd( 6.00824, -52.6258, -24.0884, 0.66 ) }
    dend_19 { pt3dadd( 5.74116, -53.9256, -25.2888, 0.66 ) }
    dend_19 { pt3dadd( 5.62843, -54.5625, -25.8113, 0.66 ) }
    dend_19 { pt3dadd( 5.41775, -56.0356, -26.9413, 0.66 ) }
    dend_19 { pt3dadd( 5.27976, -57.4852, -27.8435, 0.66 ) }
    dend_19 { pt3dadd( 5.18488, -59.2895, -28.7192, 0.66 ) }
    dend_19 { pt3dadd( 5.16903, -60.9117, -29.412, 0.66 ) }
    dend_19 { pt3dadd( 5.23756, -62.5495, -30.1309, 0.66 ) }
    dend_19 { pt3dadd( 5.3553, -64.1537, -30.8871, 0.66 ) }
    dend_19 { pt3dadd( 5.46278, -65.2922, -31.4436, 0.66 ) }
    dend_19 { pt3dadd( 5.60017, -66.7736, -32.2843, 0.59 ) }
    dend_19 { pt3dadd( 5.72305, -68.3446, -33.3106, 0.59 ) }
    dend_19 { pt3dadd( 5.78272, -69.4805, -34.0782, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_19 { pt3dadd( 5.81105, -70.4672, -34.7549, 0.59 ) }
    dend_19 { pt3dadd( 5.84245, -72.2342, -35.9471, 0.59 ) }
    dend_19 { pt3dadd( 5.86368, -75.1497, -38.007, 0.59 ) }
    dend_19 { pt3dadd( 5.8881, -76.4359, -38.9686, 0.59 ) }
    dend_19 { pt3dadd( 5.94798, -77.4129, -39.6796, 0.59 ) }
    dend_19 { pt3dadd( 6.08647, -78.7552, -40.6541, 0.59 ) }
    dend_19 { pt3dadd( 6.28201, -79.9194, -41.5271, 0.59 ) }
    dend_19 { pt3dadd( 6.77574, -82.0847, -43.1919, 0.59 ) }
    dend_19 { pt3dadd( 7.31845, -83.9573, -44.494, 0.59 ) }
    dend_19 { pt3dadd( 7.64474, -84.9383, -45.1773, 0.59 ) }
    dend_19 { pt3dadd( 7.83945, -85.4253, -45.5076, 0.59 ) }
    dend_19 { pt3dadd( 8.40055, -86.5962, -46.2248, 0.59 ) }
    dend_19 { pt3dadd( 9.23313, -88.0429, -46.9916, 0.59 ) }
    dend_19 { pt3dadd( 10.2411, -89.528, -47.6171, 0.59 ) }
    dend_19 { pt3dadd( 11.0797, -90.6975, -48.0935, 0.59 ) }
    dend_19 { pt3dadd( 12.1942, -92.2183, -48.7284, 0.59 ) }
    dend_19 { pt3dadd( 13.123, -93.5335, -49.2517, 0.59 ) }
    dend_19 { pt3dadd( 14.5488, -95.664, -50.0028, 0.59 ) }
    dend_19 { pt3dadd( 16.1527, -98.1548, -50.8916, 0.52 ) }
    dend_19 { pt3dadd( 16.9672, -99.4874, -51.3837, 0.52 ) }
    dend_19 { pt3dadd( 17.3587, -100.198, -51.6526, 0.44 ) }
    dend_19 { pt3dadd( 18.8414, -103.265, -53.0476, 0.44 ) }
    dend_19 { pt3dadd( 19.7874, -105.421, -54.1474, 0.44 ) }
    dend_19 { pt3dadd( 21.0023, -108.43, -55.7769, 0.44 ) }
    dend_19 { pt3dadd( 21.3038, -109.215, -56.2038, 0.44 ) }
    dend_19 { pt3dadd( 22.7491, -113.025, -58.2982, 0.44 ) }
    dend_19 { pt3dadd( 23.9963, -116.327, -60.2515, 0.44 ) }
    dend_19 { pt3dadd( 24.7812, -118.398, -61.5466, 0.44 ) }
    dend_19 { pt3dadd( 25.3961, -120.017, -62.5558, 0.44 ) }
    dend_19 { pt3dadd( 26.0611, -121.818, -63.5891, 0.44 ) }
    dend_19 { pt3dadd( 26.3534, -122.591, -63.9937, 0.44 ) }
    dend_19 { pt3dadd( 26.899, -123.989, -64.6334, 0.44 ) }
    dend_19 { pt3dadd( 27.5415, -125.504, -65.2439, 0.44 ) }
    dend_19 { pt3dadd( 28.2927, -127.138, -66.001, 0.44 ) }
    dend_19 { pt3dadd( 28.7965, -128.1, -66.567, 0.44 ) }
    dend_19 { pt3dadd( 29.3452, -129.041, -67.207, 0.44 ) }
    dend_19 { pt3dadd( 30.2879, -130.543, -68.3338, 0.44 ) }
    dend_19 { pt3dadd( 31.158, -131.851, -69.3929, 0.44 ) }
    dend_19 { pt3dadd( 31.8664, -132.828, -70.2881, 0.44 ) }
    dend_19 { pt3dadd( 32.7705, -133.93, -71.3205, 0.44 ) }
    dend_19 { pt3dadd( 33.5405, -134.81, -72.0972, 0.44 ) }
    dend_19 { pt3dadd( 34.5035, -135.988, -72.9718, 0.44 ) }
    dend_19 { pt3dadd( 34.9508, -136.608, -73.3308, 0.44 ) }
    dend_19 { pt3dadd( 35.6141, -137.672, -73.8227, 0.44 ) }
    dend_19 { pt3dadd( 36.6397, -139.51, -74.6002, 0.44 ) }
    dend_19 { pt3dadd( 37.0281, -140.301, -74.9127, 0.44 ) }
    dend_19 { pt3dadd( 37.9073, -142.339, -75.7934, 0.44 ) }
    dend_19 { pt3dadd( 38.3345, -143.495, -76.3306, 0.44 ) }
    dend_19 { pt3dadd( 38.5433, -144.168, -76.6805, 0.44 ) }
    dend_19 { pt3dadd( 38.8679, -145.427, -77.3671, 0.44 ) }
    dend_19 { pt3dadd( 39.007, -145.983, -77.668, 0.44 ) }
    dend_19 { pt3dadd( 39.3817, -147.176, -78.2722, 0.44 ) }
    dend_19 { pt3dadd( 39.8936, -148.632, -78.9319, 0.44 ) }
    dend_19 { pt3dadd( 40.0708, -149.139, -79.1513, 0.44 ) }
    dend_19 { pt3dadd( 40.4455, -150.332, -79.6505, 0.44 ) }
    dend_19 { pt3dadd( 40.9547, -152.137, -80.3703, 0.44 ) }
    dend_19 { pt3dadd( 41.2085, -153.139, -80.7793, 0.44 ) }
    dend_19 { pt3dadd( 42.1245, -157.037, -82.443, 0.44 ) }
    dend_19 { pt3dadd( 42.4984, -158.853, -83.223, 0.44 ) }
    dend_19 { pt3dadd( 42.8197, -160.575, -83.9855, 0.44 ) }
    dend_19 { pt3dadd( 43.2802, -163.127, -85.2044, 0.44 ) }
    dend_19 { pt3dadd( 43.5278, -164.478, -85.8832, 0.44 ) }
    dend_19 { pt3dadd( 43.9812, -166.545, -86.9257, 0.44 ) }
    dend_19 { pt3dadd( 44.5373, -168.464, -87.8663, 0.44 ) }
    dend_19 { pt3dadd( 45.2456, -170.42, -88.8076, 0.44 ) }
    dend_19 { pt3dadd( 46.2061, -172.602, -89.8239, 0.44 ) }
    dend_19 { pt3dadd( 47.0301, -174.175, -90.5199, 0.44 ) }
    dend_19 { pt3dadd( 48.1151, -175.921, -91.2599, 0.44 ) }
    dend_19 { pt3dadd( 49.2232, -177.483, -91.8876, 0.44 ) }
    dend_19 { pt3dadd( 49.9063, -178.364, -92.2481, 0.44 ) }
    dend_19 { pt3dadd( 50.908, -179.646, -92.7247, 0.44 ) }
    dend_19 { pt3dadd( 51.9542, -181.153, -93.2008, 0.44 ) }
    dend_19 { pt3dadd( 52.6822, -182.397, -93.6108, 0.44 ) }
    dend_19 { pt3dadd( 53.426, -184.111, -94.1298, 0.44 ) }
    dend_19 { pt3dadd( 54.036, -185.964, -94.6003, 0.44 ) }
    dend_19 { pt3dadd( 54.3225, -187.054, -94.8237, 0.44 ) }
    dend_19 { pt3dadd( 54.893, -189.629, -95.2688, 0.44 ) }
    dend_19 { pt3dadd( 55.326, -191.895, -95.6216, 0.44 ) }
    dend_19 { pt3dadd( 56.1431, -196.345, -96.3327, 0.44 ) }
    dend_19 { pt3dadd( 56.9969, -200.32, -96.9969, 0.44 ) }
    dend_19 { pt3dadd( 57.9447, -203.805, -97.5933, 0.44 ) }
    dend_19 { pt3dadd( 58.5175, -205.566, -97.9066, 0.44 ) }
    dend_19 { pt3dadd( 59.2733, -207.571, -98.2824, 0.44 ) }
    dend_19 { pt3dadd( 60.1105, -209.607, -98.7026, 0.44 ) }
    dend_19 { pt3dadd( 61.3978, -212.561, -99.4523, 0.44 ) }
    dend_19 { pt3dadd( 62.9192, -215.94, -100.41, 0.44 ) }
    dend_19 { pt3dadd( 63.6001, -217.507, -100.849, 0.44 ) }
    dend_19 { pt3dadd( 64.7144, -220.606, -101.605, 0.44 ) }
    dend_19 { pt3dadd( 65.3574, -222.883, -102.063, 0.44 ) }
    dend_19 { pt3dadd( 65.7932, -225.07, -102.42, 0.44 ) }
    dend_19 { pt3dadd( 66.0027, -226.618, -102.661, 0.44 ) }
    dend_19 { pt3dadd( 66.2618, -229.741, -103.123, 0.44 ) }
    dend_19 { pt3dadd( 66.4891, -233.689, -103.649, 0.44 ) }
    dend_19 { pt3dadd( 66.5532, -235.973, -103.865, 0.44 ) }
    dend_19 { pt3dadd( 66.5646, -237.677, -103.956, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 95/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 6.90457, -48.7676, -18.8245, 0.59 ) }
    dend_18 { pt3dadd( 8.70211, -49.8289, -19.682, 0.59 ) }
    dend_18 { pt3dadd( 9.11592, -50.084, -19.892, 0.59 ) }
    dend_18 { pt3dadd( 9.9515, -50.5628, -20.294, 0.52 ) }
    dend_18 { pt3dadd( 10.7755, -51.0093, -20.6371, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_18 { pt3dadd( 11.4603, -51.3732, -20.8871, 0.52 ) }
    dend_18 { pt3dadd( 12.7032, -52.0, -21.2833, 0.44 ) }
    dend_18 { pt3dadd( 13.9432, -52.6065, -21.5746, 0.44 ) }
    dend_18 { pt3dadd( 15.0588, -53.1666, -21.8056, 0.44 ) }
    dend_18 { pt3dadd( 16.4396, -53.933, -22.0985, 0.44 ) }
    dend_18 { pt3dadd( 18.0354, -54.8787, -22.4205, 0.44 ) }
    dend_18 { pt3dadd( 19.3356, -55.7202, -22.6885, 0.44 ) }
    dend_18 { pt3dadd( 20.386, -56.4826, -22.9195, 0.44 ) }
    dend_18 { pt3dadd( 21.6059, -57.4576, -23.1773, 0.44 ) }
    dend_18 { pt3dadd( 22.7812, -58.4846, -23.4585, 0.44 ) }
    dend_18 { pt3dadd( 23.5926, -59.2602, -23.6885, 0.44 ) }
    dend_18 { pt3dadd( 24.2671, -59.9471, -23.9094, 0.44 ) }
    dend_18 { pt3dadd( 25.0809, -60.8378, -24.2181, 0.44 ) }
    dend_18 { pt3dadd( 25.8064, -61.6603, -24.5068, 0.44 ) }
    dend_18 { pt3dadd( 26.3885, -62.3003, -24.741, 0.44 ) }
    dend_18 { pt3dadd( 27.4025, -63.3561, -25.1228, 0.44 ) }
    dend_18 { pt3dadd( 28.5165, -64.4968, -25.5707, 0.44 ) }
    dend_18 { pt3dadd( 29.5044, -65.534, -25.9918, 0.44 ) }
    dend_18 { pt3dadd( 30.2542, -66.3733, -26.3491, 0.44 ) }
    dend_18 { pt3dadd( 31.3296, -67.599, -26.9028, 0.44 ) }
    dend_18 { pt3dadd( 32.2867, -68.6863, -27.4021, 0.44 ) }
    dend_18 { pt3dadd( 33.2649, -69.7508, -27.9161, 0.44 ) }
    dend_18 { pt3dadd( 34.1437, -70.6783, -28.3799, 0.44 ) }
    dend_18 { pt3dadd( 35.1252, -71.6877, -28.9253, 0.44 ) }
    dend_18 { pt3dadd( 36.315, -72.882, -29.6352, 0.44 ) }
    dend_18 { pt3dadd( 36.9897, -73.5504, -30.0596, 0.44 ) }
    dend_18 { pt3dadd( 38.0886, -74.5741, -30.7227, 0.44 ) }
    dend_18 { pt3dadd( 39.5573, -75.8783, -31.5401, 0.44 ) }
    dend_18 { pt3dadd( 41.2246, -77.329, -32.3853, 0.44 ) }
    dend_18 { pt3dadd( 42.2316, -78.1995, -32.8862, 0.44 ) }
    dend_18 { pt3dadd( 43.7074, -79.5163, -33.6418, 0.44 ) }
    dend_18 { pt3dadd( 45.6986, -81.3178, -34.6413, 0.44 ) }
    dend_18 { pt3dadd( 46.7258, -82.2607, -35.1529, 0.44 ) }
    dend_18 { pt3dadd( 48.0867, -83.5443, -35.8485, 0.44 ) }
    dend_18 { pt3dadd( 48.9108, -84.3781, -36.2836, 0.44 ) }
    dend_18 { pt3dadd( 50.5404, -86.2155, -37.1998, 0.44 ) }
    dend_18 { pt3dadd( 51.3359, -87.1845, -37.6705, 0.44 ) }
    dend_18 { pt3dadd( 52.4124, -88.5408, -38.3764, 0.44 ) }
    dend_18 { pt3dadd( 53.8263, -90.3172, -39.3256, 0.44 ) }
    dend_18 { pt3dadd( 55.1345, -91.9379, -40.1849, 0.44 ) }
    dend_18 { pt3dadd( 55.8155, -92.7878, -40.5874, 0.44 ) }
    dend_18 { pt3dadd( 56.7809, -93.9685, -41.1212, 0.44 ) }
    dend_18 { pt3dadd( 58.1225, -95.6349, -41.7795, 0.44 ) }
    dend_18 { pt3dadd( 59.0677, -96.8158, -42.1698, 0.44 ) }
    dend_18 { pt3dadd( 59.7558, -97.6588, -42.4075, 0.44 ) }
    dend_18 { pt3dadd( 61.0067, -99.2016, -42.7862, 0.44 ) }
    dend_18 { pt3dadd( 63.0045, -101.714, -43.3397, 0.44 ) }
    dend_18 { pt3dadd( 65.2744, -104.656, -43.8959, 0.44 ) }
    dend_18 { pt3dadd( 66.0142, -105.617, -44.0551, 0.44 ) }
    dend_18 { pt3dadd( 68.5929, -108.862, -44.6208, 0.44 ) }
    dend_18 { pt3dadd( 69.8834, -110.405, -44.9184, 0.44 ) }
    dend_18 { pt3dadd( 70.2898, -110.86, -45.0157, 0.44 ) }
    dend_18 { pt3dadd( 71.1966, -111.769, -45.2203, 0.44 ) }
    dend_18 { pt3dadd( 72.4553, -112.847, -45.5647, 0.44 ) }
    dend_18 { pt3dadd( 73.3739, -113.562, -45.8169, 0.44 ) }
    dend_18 { pt3dadd( 75.1242, -114.802, -46.364, 0.44 ) }
    dend_18 { pt3dadd( 75.9909, -115.395, -46.6567, 0.44 ) }
    dend_18 { pt3dadd( 78.235, -116.81, -47.5162, 0.44 ) }
    dend_18 { pt3dadd( 80.1643, -117.934, -48.3082, 0.44 ) }
    dend_18 { pt3dadd( 82.8222, -119.341, -49.3841, 0.44 ) }
    dend_18 { pt3dadd( 85.7276, -120.737, -50.5313, 0.44 ) }
    dend_18 { pt3dadd( 87.9236, -121.665, -51.3707, 0.44 ) }
    dend_18 { pt3dadd( 92.8585, -123.463, -53.1788, 0.44 ) }
    dend_18 { pt3dadd( 94.8323, -124.082, -53.8781, 0.44 ) }
    dend_18 { pt3dadd( 97.3656, -124.777, -54.6233, 0.44 ) }
    dend_18 { pt3dadd( 99.2047, -125.2, -55.0514, 0.44 ) }
    dend_18 { pt3dadd( 101.35, -125.653, -55.3667, 0.44 ) }
    dend_18 { pt3dadd( 103.216, -126.051, -55.5293, 0.37 ) }
    dend_18 { pt3dadd( 105.135, -126.507, -55.6019, 0.37 ) }
    dend_18 { pt3dadd( 108.176, -127.327, -55.7183, 0.37 ) }
    dend_18 { pt3dadd( 110.791, -128.086, -55.9192, 0.37 ) }
    dend_18 { pt3dadd( 112.484, -128.604, -56.0664, 0.37 ) }
    dend_18 { pt3dadd( 115.07, -129.438, -56.3231, 0.37 ) }
    dend_18 { pt3dadd( 116.63, -129.955, -56.4992, 0.37 ) }
    dend_18 { pt3dadd( 119.083, -130.733, -56.8492, 0.37 ) }
    dend_18 { pt3dadd( 121.059, -131.339, -57.3596, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 76/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -23.422, -94.2669, 5.28893, 0.59 ) }
    dend_13 { pt3dadd( -23.3157, -95.2676, 5.07148, 0.59 ) }
    dend_13 { pt3dadd( -23.2655, -96.4132, 4.83476, 0.59 ) }
    dend_13 { pt3dadd( -23.2222, -97.2837, 4.60267, 0.59 ) }
    dend_13 { pt3dadd( -23.2039, -97.6378, 4.49951, 0.59 ) }
    dend_13 { pt3dadd( -23.1194, -99.0957, 4.07663, 0.59 ) }
    dend_13 { pt3dadd( -23.0847, -99.912, 3.84355, 0.59 ) }
    dend_13 { pt3dadd( -23.0823, -100.476, 3.67849, 0.59 ) }
    dend_13 { pt3dadd( -23.099, -101.687, 3.33609, 0.52 ) }
    dend_13 { pt3dadd( -23.13, -102.933, 2.95232, 0.52 ) }
    dend_13 { pt3dadd( -23.1878, -104.657, 2.3671, 0.52 ) }
    dend_13 { pt3dadd( -23.247, -105.787, 1.94225, 0.52 ) }
    dend_13 { pt3dadd( -23.3077, -106.361, 1.72086, 0.52 ) }
    dend_13 { pt3dadd( -23.4584, -107.187, 1.38314, 0.52 ) }
    dend_13 { pt3dadd( -23.6277, -107.743, 1.15535, 0.52 ) }
    dend_13 { pt3dadd( -23.9056, -108.386, 0.887047, 0.52 ) }
    dend_13 { pt3dadd( -24.0901, -108.742, 0.737605, 0.52 ) }
    dend_13 { pt3dadd( -24.4881, -109.554, 0.419816, 0.52 ) }
    dend_13 { pt3dadd( -24.7089, -109.993, 0.258163, 0.52 ) }
    dend_13 { pt3dadd( -25.0145, -110.606, 0.0532033, 0.52 ) }
    dend_13 { pt3dadd( -25.7088, -112.121, -0.377996, 0.52 ) }
    dend_13 { pt3dadd( -26.0105, -112.86, -0.55042, 0.52 ) }
    dend_13 { pt3dadd( -26.4143, -113.994, -0.787662, 0.52 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 99/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -23.422, -94.2669, 5.28893, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_12 { pt3dadd( -24.0949, -95.2573, 5.37001, 0.59 ) }
    dend_12 { pt3dadd( -24.6305, -96.0658, 5.46769, 0.59 ) }
    dend_12 { pt3dadd( -25.2866, -97.0662, 5.60033, 0.59 ) }
    dend_12 { pt3dadd( -25.961, -98.0853, 5.71139, 0.59 ) }
    dend_12 { pt3dadd( -26.9748, -99.5294, 5.91953, 0.59 ) }
    dend_12 { pt3dadd( -28.0654, -101.031, 6.16347, 0.59 ) }
    dend_12 { pt3dadd( -28.587, -101.737, 6.29524, 0.59 ) }
    dend_12 { pt3dadd( -29.195, -102.444, 6.45237, 0.59 ) }
    dend_12 { pt3dadd( -30.132, -103.404, 6.70634, 0.59 ) }
    dend_12 { pt3dadd( -31.3061, -104.494, 7.01384, 0.59 ) }
    dend_12 { pt3dadd( -32.2091, -105.28, 7.21392, 0.59 ) }
    dend_12 { pt3dadd( -33.0955, -106.047, 7.36619, 0.59 ) }
    dend_12 { pt3dadd( -34.7655, -107.557, 7.61321, 0.59 ) }
    dend_12 { pt3dadd( -35.6513, -108.382, 7.71852, 0.59 ) }
    dend_12 { pt3dadd( -36.5953, -109.316, 7.76554, 0.59 ) }
    dend_12 { pt3dadd( -37.7819, -110.594, 7.69742, 0.59 ) }
    dend_12 { pt3dadd( -38.4575, -111.353, 7.61955, 0.59 ) }
    dend_12 { pt3dadd( -39.5963, -112.691, 7.43028, 0.59 ) }
    dend_12 { pt3dadd( -40.5122, -113.802, 7.22397, 0.59 ) }
    dend_12 { pt3dadd( -41.608, -115.101, 6.94767, 0.59 ) }
    dend_12 { pt3dadd( -42.5465, -116.226, 6.69798, 0.59 ) }
    dend_12 { pt3dadd( -43.2411, -117.084, 6.5104, 0.59 ) }
    dend_12 { pt3dadd( -44.2586, -118.418, 6.22743, 0.59 ) }
    dend_12 { pt3dadd( -44.8404, -119.215, 6.07203, 0.59 ) }
    dend_12 { pt3dadd( -45.3817, -119.983, 5.94804, 0.59 ) }
    dend_12 { pt3dadd( -46.1392, -121.075, 5.83615, 0.59 ) }
    dend_12 { pt3dadd( -46.6676, -121.843, 5.78535, 0.59 ) }
    dend_12 { pt3dadd( -47.3587, -122.84, 5.75284, 0.59 ) }
    dend_12 { pt3dadd( -47.9919, -123.747, 5.75123, 0.59 ) }
    dend_12 { pt3dadd( -48.6971, -124.686, 5.77739, 0.59 ) }
    dend_12 { pt3dadd( -49.3538, -125.469, 5.81466, 0.59 ) }
    dend_12 { pt3dadd( -50.0826, -126.275, 5.86908, 0.59 ) }
    dend_12 { pt3dadd( -51.5561, -127.788, 5.98716, 0.59 ) }
    dend_12 { pt3dadd( -52.0342, -128.263, 6.02312, 0.59 ) }
    dend_12 { pt3dadd( -52.9978, -129.212, 6.07876, 0.59 ) }
    dend_12 { pt3dadd( -53.4804, -129.674, 6.09285, 0.59 ) }
    dend_12 { pt3dadd( -54.3698, -130.488, 6.09865, 0.59 ) }
    dend_12 { pt3dadd( -55.4492, -131.475, 6.08552, 0.59 ) }
    dend_12 { pt3dadd( -56.7553, -132.656, 6.04984, 0.59 ) }
    dend_12 { pt3dadd( -57.3551, -133.215, 6.03021, 0.59 ) }
    dend_12 { pt3dadd( -58.2291, -134.09, 6.00044, 0.59 ) }
    dend_12 { pt3dadd( -58.6666, -134.549, 5.98578, 0.59 ) }
    dend_12 { pt3dadd( -59.3506, -135.267, 5.97782, 0.59 ) }
    dend_12 { pt3dadd( -60.3776, -136.367, 5.98925, 0.59 ) }
    dend_12 { pt3dadd( -60.9332, -136.932, 6.02523, 0.59 ) }
    dend_12 { pt3dadd( -62.4543, -138.341, 6.17322, 0.59 ) }
    dend_12 { pt3dadd( -63.0929, -138.859, 6.24817, 0.59 ) }
    dend_12 { pt3dadd( -64.1673, -139.588, 6.37546, 0.59 ) }
    dend_12 { pt3dadd( -64.8448, -139.962, 6.45272, 0.59 ) }
    dend_12 { pt3dadd( -65.8031, -140.403, 6.56111, 0.59 ) }
    dend_12 { pt3dadd( -67.814, -141.224, 6.77075, 0.59 ) }
    dend_12 { pt3dadd( -68.968, -141.656, 6.87715, 0.59 ) }
    dend_12 { pt3dadd( -71.0802, -142.402, 7.03875, 0.59 ) }
    dend_12 { pt3dadd( -72.5864, -142.931, 7.12549, 0.59 ) }
    dend_12 { pt3dadd( -73.856, -143.345, 7.18201, 0.59 ) }
    dend_12 { pt3dadd( -74.9421, -143.699, 7.21355, 0.59 ) }
    dend_12 { pt3dadd( -76.2811, -144.124, 7.25132, 0.59 ) }
    dend_12 { pt3dadd( -77.4757, -144.519, 7.27065, 0.59 ) }
    dend_12 { pt3dadd( -78.8184, -144.981, 7.27174, 0.59 ) }
    dend_12 { pt3dadd( -80.353, -145.538, 7.28125, 0.59 ) }
    dend_12 { pt3dadd( -81.3202, -145.917, 7.28995, 0.59 ) }
    dend_12 { pt3dadd( -82.1639, -146.255, 7.30333, 0.59 ) }
    dend_12 { pt3dadd( -83.0777, -146.634, 7.3225, 0.59 ) }
    dend_12 { pt3dadd( -84.3351, -147.185, 7.34367, 0.59 ) }
    dend_12 { pt3dadd( -86.398, -148.138, 7.37986, 0.59 ) }
    dend_12 { pt3dadd( -88.1026, -148.968, 7.41117, 0.59 ) }
    dend_12 { pt3dadd( -89.1654, -149.504, 7.43242, 0.59 ) }
    dend_12 { pt3dadd( -90.1559, -150.049, 7.46232, 0.59 ) }
    dend_12 { pt3dadd( -91.1083, -150.597, 7.49861, 0.59 ) }
    dend_12 { pt3dadd( -92.3586, -151.329, 7.53614, 0.59 ) }
    dend_12 { pt3dadd( -94.26, -152.489, 7.58955, 0.59 ) }
    dend_12 { pt3dadd( -95.6885, -153.346, 7.63841, 0.59 ) }
    dend_12 { pt3dadd( -97.4861, -154.431, 7.70732, 0.59 ) }
    dend_12 { pt3dadd( -98.3707, -154.94, 7.74422, 0.59 ) }
    dend_12 { pt3dadd( -99.1131, -155.309, 7.77594, 0.59 ) }
    dend_12 { pt3dadd( -100.368, -155.829, 7.83243, 0.59 ) }
    dend_12 { pt3dadd( -102.221, -156.454, 7.9263, 0.59 ) }
    dend_12 { pt3dadd( -103.272, -156.716, 8.00697, 0.59 ) }
    dend_12 { pt3dadd( -104.155, -156.906, 8.10575, 0.59 ) }
    dend_12 { pt3dadd( -106.002, -157.346, 8.39231, 0.59 ) }
    dend_12 { pt3dadd( -106.889, -157.603, 8.56868, 0.59 ) }
    dend_12 { pt3dadd( -107.697, -157.889, 8.77954, 0.59 ) }
    dend_12 { pt3dadd( -108.802, -158.4, 9.16864, 0.59 ) }
    dend_12 { pt3dadd( -109.687, -158.906, 9.53527, 0.59 ) }
    dend_12 { pt3dadd( -110.4, -159.42, 9.85295, 0.59 ) }
    dend_12 { pt3dadd( -111.163, -160.057, 10.1962, 0.59 ) }
    dend_12 { pt3dadd( -112.005, -160.749, 10.5214, 0.59 ) }
    dend_12 { pt3dadd( -112.377, -161.049, 10.6394, 0.59 ) }
    dend_12 { pt3dadd( -113.329, -161.735, 10.8661, 0.59 ) }
    dend_12 { pt3dadd( -114.419, -162.413, 11.0744, 0.59 ) }
    dend_12 { pt3dadd( -115.454, -162.996, 11.2396, 0.59 ) }
    dend_12 { pt3dadd( -116.323, -163.429, 11.3535, 0.59 ) }
    dend_12 { pt3dadd( -117.471, -163.983, 11.4762, 0.59 ) }
    dend_12 { pt3dadd( -118.607, -164.536, 11.6038, 0.59 ) }
    dend_12 { pt3dadd( -119.357, -164.9, 11.6916, 0.59 ) }
    dend_12 { pt3dadd( -120.185, -165.312, 11.8022, 0.59 ) }
    dend_12 { pt3dadd( -121.406, -165.975, 11.9988, 0.59 ) }
    dend_12 { pt3dadd( -122.433, -166.602, 12.2004, 0.59 ) }
    dend_12 { pt3dadd( -123.345, -167.216, 12.4189, 0.59 ) }
    dend_12 { pt3dadd( -124.052, -167.769, 12.6153, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_12 { pt3dadd( -124.544, -168.193, 12.7997, 0.59 ) }
    dend_12 { pt3dadd( -125.185, -168.802, 13.1207, 0.59 ) }
    dend_12 { pt3dadd( -125.549, -169.2, 13.3639, 0.59 ) }
    dend_12 { pt3dadd( -125.874, -169.616, 13.7087, 0.59 ) }
    dend_12 { pt3dadd( -126.327, -170.324, 14.4135, 0.59 ) }
    dend_12 { pt3dadd( -126.768, -171.15, 15.3118, 0.59 ) }
    dend_12 { pt3dadd( -127.044, -171.699, 15.9541, 0.59 ) }
    dend_12 { pt3dadd( -127.236, -172.111, 16.4759, 0.59 ) }
    dend_12 { pt3dadd( -127.791, -173.409, 18.2474, 0.59 ) }
    dend_12 { pt3dadd( -127.875, -173.682, 18.6406, 0.59 ) }
    dend_12 { pt3dadd( -127.93, -174.085, 19.2632, 0.59 ) }
    dend_12 { pt3dadd( -135.641, -179.933, 21.3994, 0.59 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 12/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -0.920592, -76.9285, 8.40594, 0.74 ) }
    dend_8 { pt3dadd( -2.45635, -79.7112, 16.0174, 0.74 ) }
    dend_8 { pt3dadd( -2.55054, -79.9451, 16.4739, 0.66 ) }
    dend_8 { pt3dadd( -2.76652, -80.5378, 17.3898, 0.66 ) }
    dend_8 { pt3dadd( -3.01877, -81.2151, 18.2553, 0.66 ) }
    dend_8 { pt3dadd( -3.27694, -81.8874, 18.9787, 0.66 ) }
    dend_8 { pt3dadd( -3.60676, -82.7254, 19.7821, 0.66 ) }
    dend_8 { pt3dadd( -3.9148, -83.6117, 20.0364, 0.66 ) }
    dend_8 { pt3dadd( -4.21261, -84.4068, 20.2844, 0.66 ) }
    dend_8 { pt3dadd( -4.52605, -85.1773, 20.5388, 0.66 ) }
    dend_8 { pt3dadd( -4.84613, -85.903, 20.7467, 0.66 ) }
    dend_8 { pt3dadd( -5.07087, -86.391, 20.8522, 0.66 ) }
    dend_8 { pt3dadd( -5.53745, -87.4732, 21.0029, 0.66 ) }
    dend_8 { pt3dadd( -5.74374, -88.0424, 21.0547, 0.66 ) }
    dend_8 { pt3dadd( -5.92574, -88.5687, 21.0767, 0.66 ) }
    dend_8 { pt3dadd( -6.4699, -89.9758, 21.1327, 0.66 ) }
    dend_8 { pt3dadd( -6.94674, -91.048, 21.1745, 0.66 ) }
    dend_8 { pt3dadd( -7.72176, -92.5664, 21.2303, 0.66 ) }
    dend_8 { pt3dadd( -8.34394, -93.6349, 21.3136, 0.66 ) }
    dend_8 { pt3dadd( -8.89857, -94.4778, 21.4136, 0.66 ) }
    dend_8 { pt3dadd( -9.77917, -95.7078, 21.6165, 0.66 ) }
    dend_8 { pt3dadd( -10.1419, -96.1816, 21.7206, 0.66 ) }
    dend_8 { pt3dadd( -10.7035, -96.8966, 21.9139, 0.66 ) }
    dend_8 { pt3dadd( -11.2587, -97.5922, 22.1225, 0.66 ) }
    dend_8 { pt3dadd( -11.8697, -98.4153, 22.3474, 0.66 ) }
    dend_8 { pt3dadd( -12.25, -99.0041, 22.4721, 0.66 ) }
    dend_8 { pt3dadd( -12.5976, -99.6294, 22.5657, 0.66 ) }
    dend_8 { pt3dadd( -12.8074, -100.005, 22.6009, 0.66 ) }
    dend_8 { pt3dadd( -13.2177, -100.731, 22.6395, 0.66 ) }
    dend_8 { pt3dadd( -13.8897, -101.893, 22.6574, 0.66 ) }
    dend_8 { pt3dadd( -14.4186, -102.822, 22.657, 0.66 ) }
    dend_8 { pt3dadd( -15.2295, -104.273, 22.6393, 0.66 ) }
    dend_8 { pt3dadd( -15.9099, -105.582, 22.6115, 0.66 ) }
    dend_8 { pt3dadd( -16.5846, -107.086, 22.6103, 0.66 ) }
    dend_8 { pt3dadd( -16.9937, -108.223, 22.6348, 0.66 ) }
    dend_8 { pt3dadd( -17.2422, -109.05, 22.6695, 0.66 ) }
    dend_8 { pt3dadd( -17.4448, -109.809, 22.7174, 0.66 ) }
    dend_8 { pt3dadd( -17.8008, -111.118, 22.8227, 0.66 ) }
    dend_8 { pt3dadd( -18.1915, -112.571, 22.9712, 0.66 ) }
    dend_8 { pt3dadd( -18.4823, -113.627, 23.0981, 0.66 ) }
    dend_8 { pt3dadd( -18.8079, -114.81, 23.2749, 0.52 ) }
    dend_8 { pt3dadd( -19.1435, -115.974, 23.4839, 0.52 ) }
    dend_8 { pt3dadd( -19.521, -117.222, 23.7449, 0.52 ) }
    dend_8 { pt3dadd( -19.8853, -118.346, 24.0061, 0.52 ) }
    dend_8 { pt3dadd( -20.3189, -119.606, 24.3018, 0.52 ) }
    dend_8 { pt3dadd( -20.8024, -121.03, 24.6588, 0.52 ) }
    dend_8 { pt3dadd( -21.2745, -122.456, 25.0359, 0.52 ) }
    dend_8 { pt3dadd( -21.6467, -123.667, 25.3614, 0.52 ) }
    dend_8 { pt3dadd( -21.9655, -124.798, 25.665, 0.52 ) }
    dend_8 { pt3dadd( -22.2489, -125.779, 25.9132, 0.52 ) }
    dend_8 { pt3dadd( -22.3901, -126.258, 26.0077, 0.52 ) }
    dend_8 { pt3dadd( -22.6593, -127.232, 26.1458, 0.52 ) }
    dend_8 { pt3dadd( -22.8815, -128.086, 26.2753, 0.52 ) }
    dend_8 { pt3dadd( -23.1115, -128.972, 26.3961, 0.52 ) }
    dend_8 { pt3dadd( -23.4053, -129.924, 26.5275, 0.52 ) }
    dend_8 { pt3dadd( -23.9128, -131.424, 26.7334, 0.52 ) }
    dend_8 { pt3dadd( -24.2246, -132.296, 26.8535, 0.52 ) }
    dend_8 { pt3dadd( -24.7887, -133.766, 27.0492, 0.52 ) }
    dend_8 { pt3dadd( -25.1994, -134.769, 27.1522, 0.52 ) }
    dend_8 { pt3dadd( -25.7026, -136.093, 27.2167, 0.52 ) }
    dend_8 { pt3dadd( -25.914, -136.721, 27.2178, 0.52 ) }
    dend_8 { pt3dadd( -26.2865, -137.899, 27.2045, 0.52 ) }
    dend_8 { pt3dadd( -26.6542, -139.081, 27.1781, 0.52 ) }
    dend_8 { pt3dadd( -26.9901, -140.205, 27.1494, 0.52 ) }
    dend_8 { pt3dadd( -27.4519, -141.753, 27.172, 0.52 ) }
    dend_8 { pt3dadd( -27.8082, -142.877, 27.2145, 0.52 ) }
    dend_8 { pt3dadd( -28.2752, -144.239, 27.2979, 0.52 ) }
    dend_8 { pt3dadd( -28.7167, -145.481, 27.4051, 0.52 ) }
    dend_8 { pt3dadd( -29.2106, -146.823, 27.5672, 0.52 ) }
    dend_8 { pt3dadd( -29.5591, -147.718, 27.7097, 0.52 ) }
    dend_8 { pt3dadd( -30.438, -149.89, 28.0999, 0.52 ) }
    dend_8 { pt3dadd( -30.9226, -151.088, 28.3246, 0.52 ) }
    dend_8 { pt3dadd( -31.2541, -151.939, 28.4836, 0.52 ) }
    dend_8 { pt3dadd( -31.5201, -152.619, 28.6207, 0.52 ) }
    dend_8 { pt3dadd( -31.8576, -153.464, 28.8055, 0.52 ) }
    dend_8 { pt3dadd( -32.6101, -155.306, 29.2333, 0.52 ) }
    dend_8 { pt3dadd( -33.2541, -156.799, 29.5856, 0.52 ) }
    dend_8 { pt3dadd( -33.7357, -157.795, 29.8072, 0.52 ) }
    dend_8 { pt3dadd( -34.1882, -158.705, 29.9863, 0.52 ) }
    dend_8 { pt3dadd( -34.5561, -159.48, 30.1176, 0.52 ) }
    dend_8 { pt3dadd( -34.8421, -160.138, 30.2094, 0.52 ) }
    dend_8 { pt3dadd( -35.2662, -161.29, 30.328, 0.52 ) }
    dend_8 { pt3dadd( -35.5355, -162.284, 30.3931, 0.52 ) }
    dend_8 { pt3dadd( -35.7484, -163.327, 30.4281, 0.52 ) }
    dend_8 { pt3dadd( -35.8592, -164.463, 30.4421, 0.52 ) }
    dend_8 { pt3dadd( -35.8737, -165.322, 30.4794, 0.52 ) }
    dend_8 { pt3dadd( -35.8203, -166.254, 30.5767, 0.52 ) }
    dend_8 { pt3dadd( -35.6397, -167.679, 30.8096, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_8 { pt3dadd( -35.4217, -168.993, 31.086, 0.52 ) }
    dend_8 { pt3dadd( -35.2321, -170.201, 31.4078, 0.52 ) }
    dend_8 { pt3dadd( -35.0279, -171.77, 31.9564, 0.52 ) }
    dend_8 { pt3dadd( -34.9587, -172.75, 32.3832, 0.52 ) }
    dend_8 { pt3dadd( -34.9607, -173.277, 32.7104, 0.52 ) }
    dend_8 { pt3dadd( -35.0275, -173.785, 33.1059, 0.52 ) }
    dend_8 { pt3dadd( -35.1206, -174.193, 33.4338, 0.52 ) }
    dend_8 { pt3dadd( -35.3098, -174.892, 33.98, 0.52 ) }
    dend_8 { pt3dadd( -35.4112, -175.373, 34.3194, 0.52 ) }
    dend_8 { pt3dadd( -35.4817, -176.834, 35.1103, 0.52 ) }
    dend_8 { pt3dadd( -35.4298, -177.782, 35.4813, 0.52 ) }
    dend_8 { pt3dadd( -35.2851, -179.396, 35.8474, 0.52 ) }
    dend_8 { pt3dadd( -35.1214, -180.924, 35.9766, 0.52 ) }
    dend_8 { pt3dadd( -35.0568, -181.476, 35.9982, 0.52 ) }
    dend_8 { pt3dadd( -34.8773, -183.436, 36.0656, 0.52 ) }
    dend_8 { pt3dadd( -34.7951, -184.528, 36.0958, 0.52 ) }
    dend_8 { pt3dadd( -34.6809, -186.586, 36.2326, 0.52 ) }
    dend_8 { pt3dadd( -34.6729, -187.977, 36.3237, 0.52 ) }
    dend_8 { pt3dadd( -34.7191, -189.247, 36.3947, 0.52 ) }
    dend_8 { pt3dadd( -34.8519, -191.175, 36.5779, 0.52 ) }
    dend_8 { pt3dadd( -34.9483, -192.081, 36.7291, 0.52 ) }
    dend_8 { pt3dadd( -34.9966, -192.782, 36.873, 0.52 ) }
    dend_8 { pt3dadd( -35.0591, -194.771, 37.4173, 0.52 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 23/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.920592, -76.9285, 8.40594, 0.88 ) }
    dend_3 { pt3dadd( -0.656951, -78.4533, 8.55609, 0.88 ) }
    dend_3 { pt3dadd( -0.511998, -80.2728, 8.64591, 0.88 ) }
    dend_3 { pt3dadd( -0.507881, -81.7419, 8.69858, 0.88 ) }
    dend_3 { pt3dadd( -0.530115, -82.7467, 8.72593, 0.88 ) }
    dend_3 { pt3dadd( -0.578071, -84.6792, 8.80605, 0.88 ) }
    dend_3 { pt3dadd( -0.606638, -86.0856, 8.87495, 0.88 ) }
    dend_3 { pt3dadd( -0.723364, -88.1404, 8.93472, 0.88 ) }
    dend_3 { pt3dadd( -0.816359, -89.1345, 8.95836, 0.88 ) }
    dend_3 { pt3dadd( -0.952455, -90.3006, 8.99104, 0.88 ) }
    dend_3 { pt3dadd( -1.15652, -91.8302, 9.03875, 0.96 ) }
    dend_3 { pt3dadd( -1.2593, -92.639, 9.07761, 0.96 ) }
    dend_3 { pt3dadd( -1.4122, -94.3225, 9.19777, 0.96 ) }
    dend_3 { pt3dadd( -1.50958, -95.7772, 9.32536, 0.96 ) }
    dend_3 { pt3dadd( -1.59676, -97.1267, 9.43547, 0.96 ) }
    dend_3 { pt3dadd( -1.75892, -98.6503, 9.55176, 0.96 ) }
    dend_3 { pt3dadd( -1.96867, -100.415, 9.66347, 0.96 ) }
    dend_3 { pt3dadd( -2.18297, -102.137, 9.79417, 0.74 ) }
    dend_3 { pt3dadd( -2.3474, -103.48, 9.90858, 0.74 ) }
    dend_3 { pt3dadd( -2.5525, -105.168, 10.062, 0.74 ) }
    dend_3 { pt3dadd( -2.76709, -107.13, 10.2285, 0.74 ) }
    dend_3 { pt3dadd( -2.89157, -108.58, 10.3621, 0.74 ) }
    dend_3 { pt3dadd( -3.02634, -110.314, 10.5171, 0.74 ) }
    dend_3 { pt3dadd( -3.1143, -111.612, 10.6408, 0.74 ) }
    dend_3 { pt3dadd( -3.13752, -112.329, 10.719, 0.74 ) }
    dend_3 { pt3dadd( -3.14495, -113.543, 10.8826, 0.74 ) }
    dend_3 { pt3dadd( -3.11351, -114.892, 11.0853, 0.74 ) }
    dend_3 { pt3dadd( -3.07771, -116.599, 11.3495, 0.74 ) }
    dend_3 { pt3dadd( -3.04281, -117.853, 11.53, 0.74 ) }
    dend_3 { pt3dadd( -2.97723, -119.274, 11.7367, 0.74 ) }
    dend_3 { pt3dadd( -2.92246, -120.218, 11.8662, 0.74 ) }
    dend_3 { pt3dadd( -2.84503, -121.352, 12.0026, 0.74 ) }
    dend_3 { pt3dadd( -2.74324, -122.485, 12.1032, 0.74 ) }
    dend_3 { pt3dadd( -2.60589, -123.536, 12.1879, 0.74 ) }
    dend_3 { pt3dadd( -2.39017, -124.787, 12.2702, 0.74 ) }
    dend_3 { pt3dadd( -2.19494, -125.816, 12.3247, 0.74 ) }
    dend_3 { pt3dadd( -1.98664, -126.792, 12.3538, 0.74 ) }
    dend_3 { pt3dadd( -1.62949, -128.252, 12.4003, 0.74 ) }
    dend_3 { pt3dadd( -1.48717, -128.789, 12.4172, 0.74 ) }
    dend_3 { pt3dadd( -1.43205, -129.001, 12.4224, 0.74 ) }
    // Section: dend_44, id: dend_44, parent: dend_38 (entry count 63/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 39.1207, 44.8017, -0.446093, 0.37 ) }
    dend_44 { pt3dadd( 39.7379, 45.2945, -1.67168, 0.37 ) }
    dend_44 { pt3dadd( 40.2568, 45.7154, -2.52167, 0.37 ) }
    dend_44 { pt3dadd( 41.0087, 46.3631, -3.60864, 0.74 ) }
    dend_44 { pt3dadd( 41.5033, 46.8154, -4.27657, 0.88 ) }
    dend_44 { pt3dadd( 41.9306, 47.2616, -4.81686, 0.88 ) }
    dend_44 { pt3dadd( 42.4427, 47.8486, -5.46511, 0.22 ) }
    dend_44 { pt3dadd( 42.9121, 48.4598, -6.008, 0.22 ) }
    dend_44 { pt3dadd( 43.4864, 49.2729, -6.62042, 0.22 ) }
    dend_44 { pt3dadd( 44.0089, 50.1132, -7.14259, 0.22 ) }
    dend_44 { pt3dadd( 44.5959, 51.1921, -7.75981, 1.11 ) }
    dend_44 { pt3dadd( 44.8852, 51.8089, -8.08992, 1.47 ) }
    dend_44 { pt3dadd( 45.036, 52.1807, -8.29944, 1.47 ) }
    dend_44 { pt3dadd( 45.3638, 53.0359, -8.7882, 0.22 ) }
    dend_44 { pt3dadd( 45.5122, 53.428, -9.00468, 0.59 ) }
    dend_44 { pt3dadd( 45.688, 53.8754, -9.25277, 0.59 ) }
    dend_44 { pt3dadd( 45.9799, 54.5188, -9.60856, 0.44 ) }
    dend_44 { pt3dadd( 46.3326, 55.2193, -9.95716, 0.88 ) }
    dend_44 { pt3dadd( 46.6917, 55.8319, -10.2592, 0.88 ) }
    dend_44 { pt3dadd( 47.1377, 56.5265, -10.595, 0.29 ) }
    dend_44 { pt3dadd( 47.5433, 57.1031, -10.871, 0.29 ) }
    dend_44 { pt3dadd( 48.2476, 57.9898, -11.2822, 0.88 ) }
    dend_44 { pt3dadd( 48.5466, 58.3147, -11.4307, 1.18 ) }
    dend_44 { pt3dadd( 49.5249, 59.2609, -11.8436, 0.37 ) }
    dend_44 { pt3dadd( 49.9638, 59.6471, -12.0185, 0.37 ) }
    dend_44 { pt3dadd( 50.4169, 60.0293, -12.1872, 0.96 ) }
    dend_44 { pt3dadd( 50.9884, 60.5028, -12.3922, 0.96 ) }
    dend_44 { pt3dadd( 51.5576, 60.9665, -12.5944, 0.96 ) }
    dend_44 { pt3dadd( 52.0351, 61.361, -12.7607, 0.66 ) }
    dend_44 { pt3dadd( 52.8016, 62.0187, -13.0649, 0.22 ) }
    dend_44 { pt3dadd( 53.4349, 62.5926, -13.3763, 0.22 ) }
    dend_44 { pt3dadd( 53.8869, 63.031, -13.6453, 0.81 ) }
    dend_44 { pt3dadd( 54.117, 63.2809, -13.8108, 1.03 ) }
    dend_44 { pt3dadd( 54.3415, 63.5493, -13.995, 1.03 ) }
    dend_44 { pt3dadd( 55.0993, 64.493, -14.6417, 0.22 ) }
    dend_44 { pt3dadd( 55.5823, 65.0726, -15.0691, 0.88 ) }
    dend_44 { pt3dadd( 55.7962, 65.3174, -15.2604, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_44 { pt3dadd( 56.1219, 65.6762, -15.5668, 1.18 ) }
    dend_44 { pt3dadd( 56.6606, 66.2636, -16.0978, 0.22 ) }
    dend_44 { pt3dadd( 57.2532, 66.92, -16.6958, 0.22 ) }
    dend_44 { pt3dadd( 57.6563, 67.3802, -17.1181, 0.22 ) }
    dend_44 { pt3dadd( 58.039, 67.8597, -17.5866, 0.96 ) }
    dend_44 { pt3dadd( 58.4603, 68.457, -18.1814, 1.33 ) }
    dend_44 { pt3dadd( 58.9957, 69.3546, -19.0671, 0.52 ) }
    dend_44 { pt3dadd( 59.2587, 69.9779, -19.6666, 0.44 ) }
    dend_44 { pt3dadd( 59.462, 70.6783, -20.3162, 0.37 ) }
    dend_44 { pt3dadd( 59.6783, 71.6613, -21.1625, 0.96 ) }
    dend_44 { pt3dadd( 59.7833, 72.1986, -21.5794, 0.96 ) }
    dend_44 { pt3dadd( 59.9548, 73.1216, -22.2005, 0.22 ) }
    dend_44 { pt3dadd( 60.2287, 74.5893, -23.0818, 1.11 ) }
    dend_44 { pt3dadd( 60.3324, 75.0706, -23.3605, 1.33 ) }
    dend_44 { pt3dadd( 60.462, 75.6021, -23.6435, 0.37 ) }
    dend_44 { pt3dadd( 60.7795, 76.6008, -24.1466, 0.15 ) }
    dend_44 { pt3dadd( 60.9969, 77.131, -24.4391, 0.96 ) }
    dend_44 { pt3dadd( 61.2597, 77.6296, -24.7315, 0.96 ) }
    dend_44 { pt3dadd( 61.8555, 78.5694, -25.3575, 0.22 ) }
    dend_44 { pt3dadd( 62.374, 79.3208, -25.8948, 0.59 ) }
    dend_44 { pt3dadd( 62.9446, 80.0959, -26.5146, 0.22 ) }
    dend_44 { pt3dadd( 63.4553, 80.7337, -27.0463, 0.22 ) }
    dend_44 { pt3dadd( 63.888, 81.2471, -27.4675, 0.59 ) }
    dend_44 { pt3dadd( 64.5398, 81.9682, -28.0216, 0.59 ) }
    dend_44 { pt3dadd( 65.284, 82.7379, -28.5444, 0.22 ) }
    dend_44 { pt3dadd( 65.8369, 83.289, -28.931, 0.22 ) }
    dend_44 { pt3dadd( 66.4925, 83.9465, -29.4037, 0.88 ) }
    dend_44 { pt3dadd( 66.7317, 84.1918, -29.5903, 1.25 ) }
    dend_44 { pt3dadd( 67.7954, 85.2993, -30.5405, 0.22 ) }
    dend_44 { pt3dadd( 68.2976, 85.8285, -31.0286, 0.22 ) }
    dend_44 { pt3dadd( 69.0413, 86.6485, -31.8966, 0.88 ) }
    dend_44 { pt3dadd( 69.3988, 87.1145, -32.4391, 1.03 ) }
    dend_44 { pt3dadd( 69.9933, 88.0359, -33.5929, 0.22 ) }
    dend_44 { pt3dadd( 70.3439, 88.7052, -34.4513, 0.22 ) }
    dend_44 { pt3dadd( 70.6329, 89.4742, -35.4653, 1.33 ) }
    dend_44 { pt3dadd( 70.7827, 90.0422, -36.2147, 1.47 ) }
    dend_44 { pt3dadd( 70.9984, 91.4185, -38.009, 0.22 ) }
    dend_44 { pt3dadd( 71.0255, 91.9353, -38.7037, 0.22 ) }
    dend_44 { pt3dadd( 70.9906, 92.6276, -39.6505, 0.52 ) }
    dend_44 { pt3dadd( 70.9098, 93.2445, -40.5154, 0.52 ) }
    dend_44 { pt3dadd( 70.8307, 93.6807, -41.1329, 0.22 ) }
    dend_44 { pt3dadd( 70.6643, 94.6189, -42.4398, 0.59 ) }
    dend_44 { pt3dadd( 70.4987, 95.6274, -43.8102, 0.88 ) }
    dend_44 { pt3dadd( 70.4208, 96.1253, -44.4736, 0.88 ) }
    dend_44 { pt3dadd( 70.339, 96.8204, -45.3671, 0.59 ) }
    dend_44 { pt3dadd( 70.2963, 97.4548, -46.1439, 0.22 ) }
    dend_44 { pt3dadd( 70.2803, 98.4682, -47.3307, 0.59 ) }
    dend_44 { pt3dadd( 70.2923, 98.9893, -47.9209, 0.22 ) }
    dend_44 { pt3dadd( 70.3182, 99.4579, -48.4491, 0.22 ) }
    dend_44 { pt3dadd( 70.4308, 100.449, -49.6413, 0.66 ) }
    dend_44 { pt3dadd( 70.5274, 101.046, -50.3705, 0.81 ) }
    dend_44 { pt3dadd( 70.6457, 101.655, -51.1486, 0.29 ) }
    dend_44 { pt3dadd( 70.8862, 102.624, -52.4174, 0.88 ) }
    dend_44 { pt3dadd( 70.9695, 102.907, -52.7969, 0.88 ) }
    dend_44 { pt3dadd( 71.3032, 103.819, -53.9958, 0.29 ) }
    dend_44 { pt3dadd( 71.4907, 104.23, -54.5295, 0.29 ) }
    dend_44 { pt3dadd( 71.8228, 104.849, -55.3113, 0.29 ) }
    dend_44 { pt3dadd( 72.2673, 105.605, -56.1616, 0.59 ) }
    dend_44 { pt3dadd( 72.4771, 105.964, -56.5287, 0.59 ) }
    dend_44 { pt3dadd( 72.9332, 106.819, -57.3166, 0.29 ) }
    dend_44 { pt3dadd( 73.286, 107.563, -57.8951, 0.52 ) }
    dend_44 { pt3dadd( 73.5144, 108.081, -58.2265, 0.52 ) }
    dend_44 { pt3dadd( 73.9534, 109.125, -58.783, 0.29 ) }
    dend_44 { pt3dadd( 74.9017, 111.367, -59.8354, 0.15 ) }
    dend_44 { pt3dadd( 75.2229, 112.1, -60.1702, 0.88 ) }
    dend_44 { pt3dadd( 75.6061, 112.963, -60.5757, 1.11 ) }
    dend_44 { pt3dadd( 76.2313, 114.319, -61.2544, 0.15 ) }
    dend_44 { pt3dadd( 76.8228, 115.523, -61.9359, 0.59 ) }
    dend_44 { pt3dadd( 77.6937, 117.116, -63.0068, 0.15 ) }
    dend_44 { pt3dadd( 78.2505, 118.036, -63.702, 0.66 ) }
    dend_44 { pt3dadd( 78.6939, 118.732, -64.3115, 0.66 ) }
    dend_44 { pt3dadd( 79.2582, 119.6, -65.1586, 0.22 ) }
    dend_44 { pt3dadd( 79.6521, 120.183, -65.7598, 0.22 ) }
    dend_44 { pt3dadd( 80.2747, 121.11, -66.6654, 0.59 ) }
    dend_44 { pt3dadd( 81.065, 122.295, -67.7409, 0.22 ) }
    dend_44 { pt3dadd( 81.4423, 122.864, -68.21, 0.52 ) }
    dend_44 { pt3dadd( 81.7057, 123.269, -68.5204, 0.52 ) }
    dend_44 { pt3dadd( 82.2384, 124.13, -69.1481, 0.22 ) }
    dend_44 { pt3dadd( 83.0019, 125.461, -70.0396, 0.22 ) }
    dend_44 { pt3dadd( 83.7383, 126.832, -70.9134, 1.03 ) }
    dend_44 { pt3dadd( 83.9596, 127.274, -71.1906, 1.03 ) }
    dend_44 { pt3dadd( 84.6197, 128.708, -72.0511, 0.15 ) }
    dend_44 { pt3dadd( 84.9422, 129.477, -72.4778, 0.15 ) }
    dend_44 { pt3dadd( 85.189, 130.147, -72.837, 0.81 ) }
    dend_44 { pt3dadd( 85.2972, 130.507, -72.9967, 0.81 ) }
    dend_44 { pt3dadd( 85.6794, 132.006, -73.5201, 0.22 ) }
    dend_44 { pt3dadd( 85.9238, 132.939, -73.7865, 0.37 ) }
    dend_44 { pt3dadd( 86.1882, 133.904, -74.0052, 0.22 ) }
    dend_44 { pt3dadd( 86.4176, 134.676, -74.1719, 0.44 ) }
    dend_44 { pt3dadd( 87.0763, 136.694, -74.6003, 0.22 ) }
    dend_44 { pt3dadd( 87.4172, 137.633, -74.7849, 0.44 ) }
    dend_44 { pt3dadd( 87.6886, 138.339, -74.9072, 0.22 ) }
    dend_44 { pt3dadd( 87.8836, 138.811, -74.993, 0.29 ) }
    dend_44 { pt3dadd( 88.1025, 139.31, -75.0801, 0.29 ) }
    dend_44 { pt3dadd( 88.4325, 139.935, -75.1615, 0.22 ) }
    dend_44 { pt3dadd( 88.9265, 140.471, -75.3072, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 96/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 39.1207, 44.8017, -0.446093, 0.37 ) }
    dend_39 { pt3dadd( 40.3152, 45.2378, -0.365469, 0.37 ) }
    dend_39 { pt3dadd( 41.2185, 45.5795, -0.227341, 0.37 ) }
    dend_39 { pt3dadd( 42.0163, 45.8738, -0.0689021, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_39 { pt3dadd( 42.5864, 46.0804, 0.0572821, 0.44 ) }
    dend_39 { pt3dadd( 43.6922, 46.4809, 0.341804, 0.44 ) }
    dend_39 { pt3dadd( 45.1127, 47.001, 0.744979, 0.81 ) }
    dend_39 { pt3dadd( 45.534, 47.1646, 0.908771, 0.88 ) }
    dend_39 { pt3dadd( 46.169, 47.4225, 1.21896, 0.88 ) }
    dend_39 { pt3dadd( 46.5007, 47.5718, 1.41033, 0.96 ) }
    dend_39 { pt3dadd( 47.0703, 47.8604, 1.75864, 0.74 ) }
    dend_39 { pt3dadd( 47.5001, 48.1054, 2.01835, 0.66 ) }
    dend_39 { pt3dadd( 48.1714, 48.481, 2.35294, 0.66 ) }
    dend_39 { pt3dadd( 48.9049, 48.8679, 2.66706, 0.52 ) }
    dend_39 { pt3dadd( 49.6166, 49.2311, 2.9413, 0.52 ) }
    dend_39 { pt3dadd( 50.5689, 49.6881, 3.25491, 1.18 ) }
    dend_39 { pt3dadd( 50.9174, 49.8485, 3.34426, 1.55 ) }
    dend_39 { pt3dadd( 51.7812, 50.2185, 3.52172, 1.55 ) }
    dend_39 { pt3dadd( 52.6263, 50.5574, 3.66028, 0.81 ) }
    dend_39 { pt3dadd( 53.713, 50.9725, 3.80629, 0.44 ) }
    dend_39 { pt3dadd( 54.3282, 51.191, 3.88333, 0.44 ) }
    dend_39 { pt3dadd( 55.3941, 51.5675, 4.02811, 1.55 ) }
    dend_39 { pt3dadd( 55.9511, 51.7789, 4.11014, 1.69 ) }
    dend_39 { pt3dadd( 56.3212, 51.9408, 4.17099, 1.69 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 20/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -26.4143, -113.994, -0.787662, 0.52 ) }
    dend_15 { pt3dadd( -26.6921, -115.229, -1.64376, 0.52 ) }
    dend_15 { pt3dadd( -26.8116, -115.955, -2.14771, 0.52 ) }
    dend_15 { pt3dadd( -26.8313, -117.021, -2.84576, 0.52 ) }
    dend_15 { pt3dadd( -26.778, -118.082, -3.53552, 0.52 ) }
    dend_15 { pt3dadd( -26.6796, -119.188, -4.26526, 0.52 ) }
    dend_15 { pt3dadd( -26.6106, -119.819, -4.7002, 0.52 ) }
    dend_15 { pt3dadd( -26.4978, -120.537, -5.25206, 0.52 ) }
    dend_15 { pt3dadd( -26.2036, -122.019, -6.61579, 0.52 ) }
    dend_15 { pt3dadd( -26.0936, -122.54, -7.13012, 0.44 ) }
    dend_15 { pt3dadd( -25.9546, -123.214, -7.85709, 0.44 ) }
    dend_15 { pt3dadd( -25.8237, -123.903, -8.65116, 0.44 ) }
    dend_15 { pt3dadd( -25.6978, -124.731, -9.59297, 0.44 ) }
    dend_15 { pt3dadd( -25.5523, -126.515, -11.6201, 0.44 ) }
    dend_15 { pt3dadd( -25.5543, -127.167, -12.3692, 0.44 ) }
    dend_15 { pt3dadd( -25.5847, -127.885, -13.147, 0.44 ) }
    dend_15 { pt3dadd( -25.627, -128.412, -13.6684, 0.44 ) }
    dend_15 { pt3dadd( -25.7637, -129.547, -14.6639, 0.44 ) }
    dend_15 { pt3dadd( -25.9124, -130.426, -15.3532, 0.44 ) }
    dend_15 { pt3dadd( -26.1943, -131.647, -16.1756, 0.44 ) }
    dend_15 { pt3dadd( -26.4778, -132.56, -16.8353, 0.44 ) }
    dend_15 { pt3dadd( -26.7525, -133.26, -17.3496, 0.44 ) }
    dend_15 { pt3dadd( -26.9623, -133.738, -17.7389, 0.44 ) }
    dend_15 { pt3dadd( -27.2497, -134.389, -18.2497, 0.44 ) }
    dend_15 { pt3dadd( -27.4175, -134.873, -18.5931, 0.44 ) }
    dend_15 { pt3dadd( -27.7059, -135.931, -19.2657, 0.44 ) }
    dend_15 { pt3dadd( -27.7933, -136.309, -19.5079, 0.44 ) }
    dend_15 { pt3dadd( -28.0967, -137.623, -20.3659, 0.44 ) }
    dend_15 { pt3dadd( -28.4265, -139.133, -21.378, 0.44 ) }
    dend_15 { pt3dadd( -28.7485, -140.608, -22.3581, 0.44 ) }
    dend_15 { pt3dadd( -28.9829, -141.635, -23.0853, 0.44 ) }
    dend_15 { pt3dadd( -29.1825, -142.371, -23.6431, 0.44 ) }
    dend_15 { pt3dadd( -29.5017, -143.312, -24.4557, 0.44 ) }
    dend_15 { pt3dadd( -30.0157, -144.575, -25.6792, 0.44 ) }
    dend_15 { pt3dadd( -30.305, -145.212, -26.3981, 0.44 ) }
    dend_15 { pt3dadd( -30.6822, -145.957, -27.301, 0.44 ) }
    dend_15 { pt3dadd( -31.0248, -146.646, -28.2104, 0.44 ) }
    dend_15 { pt3dadd( -31.3706, -147.423, -29.265, 0.44 ) }
    dend_15 { pt3dadd( -31.5243, -147.844, -29.8584, 0.44 ) }
    dend_15 { pt3dadd( -31.6078, -148.064, -30.184, 0.44 ) }
    dend_15 { pt3dadd( -31.6379, -148.16, -30.3219, 0.44 ) }
    dend_15 { pt3dadd( -31.7377, -148.562, -30.8417, 0.44 ) }
    dend_15 { pt3dadd( -31.8043, -148.916, -31.2838, 0.44 ) }
    dend_15 { pt3dadd( -31.8527, -149.325, -31.7573, 0.44 ) }
    dend_15 { pt3dadd( -31.9315, -150.351, -32.8388, 0.44 ) }
    dend_15 { pt3dadd( -31.9604, -151.088, -33.5246, 0.44 ) }
    dend_15 { pt3dadd( -31.9589, -151.317, -33.7036, 0.44 ) }
    dend_15 { pt3dadd( -31.9456, -151.607, -33.8966, 0.44 ) }
    dend_15 { pt3dadd( -31.9053, -152.42, -34.3395, 0.44 ) }
    dend_15 { pt3dadd( -31.864, -153.123, -34.7061, 0.44 ) }
    dend_15 { pt3dadd( -31.8079, -153.941, -35.1308, 0.44 ) }
    dend_15 { pt3dadd( -31.8143, -154.584, -35.4483, 0.44 ) }
    dend_15 { pt3dadd( -31.8479, -155.408, -35.8258, 0.44 ) }
    dend_15 { pt3dadd( -31.9349, -156.288, -36.2912, 0.44 ) }
    dend_15 { pt3dadd( -32.0645, -157.316, -36.9678, 0.44 ) }
    dend_15 { pt3dadd( -32.1591, -158.318, -37.7379, 0.44 ) }
    dend_15 { pt3dadd( -32.2512, -159.879, -38.9913, 0.44 ) }
    dend_15 { pt3dadd( -32.28, -160.873, -39.7629, 0.44 ) }
    dend_15 { pt3dadd( -32.2476, -162.895, -41.2141, 0.44 ) }
    dend_15 { pt3dadd( -32.1123, -164.843, -42.4299, 0.44 ) }
    dend_15 { pt3dadd( -31.9465, -166.445, -43.2694, 0.44 ) }
    dend_15 { pt3dadd( -31.8123, -167.617, -43.887, 0.44 ) }
    dend_15 { pt3dadd( -31.6077, -169.444, -44.8586, 0.44 ) }
    dend_15 { pt3dadd( -31.4897, -170.723, -45.5141, 0.44 ) }
    dend_15 { pt3dadd( -31.2821, -173.052, -46.5893, 0.44 ) }
    dend_15 { pt3dadd( -31.2276, -173.917, -46.9698, 0.44 ) }
    dend_15 { pt3dadd( -31.1038, -177.547, -48.6677, 0.44 ) }
    dend_15 { pt3dadd( -31.0898, -178.188, -49.0038, 0.37 ) }
    dend_15 { pt3dadd( -31.0757, -179.189, -49.5973, 0.37 ) }
    dend_15 { pt3dadd( -31.0672, -179.926, -50.0834, 0.29 ) }
    dend_15 { pt3dadd( -31.0136, -181.236, -50.9752, 0.29 ) }
    dend_15 { pt3dadd( -30.9541, -181.83, -51.3641, 0.29 ) }
    dend_15 { pt3dadd( -30.7516, -183.007, -52.01, 0.29 ) }
    dend_15 { pt3dadd( -30.5533, -184.038, -52.5607, 0.29 ) }
    dend_15 { pt3dadd( -30.3206, -185.3, -53.1852, 0.29 ) }
    dend_15 { pt3dadd( -30.1428, -186.418, -53.694, 0.29 ) }
    dend_15 { pt3dadd( -29.9588, -187.725, -54.2397, 0.29 ) }
    dend_15 { pt3dadd( -29.8325, -188.774, -54.6846, 0.29 ) }
    dend_15 { pt3dadd( -29.765, -189.503, -54.9886, 0.29 ) }
    dend_15 { pt3dadd( -29.7067, -190.35, -55.3693, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_15 { pt3dadd( -29.6393, -191.315, -55.8214, 0.29 ) }
    dend_15 { pt3dadd( -29.6006, -191.944, -56.1396, 0.29 ) }
    dend_15 { pt3dadd( -29.5017, -193.493, -56.9395, 0.29 ) }
    dend_15 { pt3dadd( -29.4621, -193.982, -57.2572, 0.29 ) }
    dend_15 { pt3dadd( -29.337, -195.14, -58.1879, 0.29 ) }
    dend_15 { pt3dadd( -29.2566, -195.678, -58.742, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 6/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -26.4143, -113.994, -0.787662, 0.52 ) }
    dend_14 { pt3dadd( -26.5745, -114.831, -0.837026, 0.52 ) }
    dend_14 { pt3dadd( -26.74, -115.999, -0.902384, 0.52 ) }
    dend_14 { pt3dadd( -26.8243, -116.915, -0.948087, 0.52 ) }
    dend_14 { pt3dadd( -26.9772, -119.123, -1.0503, 0.52 ) }
    dend_14 { pt3dadd( -27.0673, -120.753, -1.12054, 0.52 ) }
    dend_14 { pt3dadd( -27.1169, -121.98, -1.17507, 0.52 ) }
    dend_14 { pt3dadd( -27.1265, -123.917, -1.26899, 0.52 ) }
    dend_14 { pt3dadd( -27.107, -125.713, -1.35244, 0.52 ) }
    dend_14 { pt3dadd( -27.1018, -126.277, -1.3901, 0.52 ) }
    dend_14 { pt3dadd( -27.1131, -127.132, -1.4729, 0.52 ) }
    dend_14 { pt3dadd( -27.2028, -128.838, -1.68486, 0.52 ) }
    dend_14 { pt3dadd( -27.3623, -130.168, -1.90967, 0.52 ) }
    dend_14 { pt3dadd( -27.6166, -131.28, -2.16073, 0.52 ) }
    dend_14 { pt3dadd( -27.8826, -132.104, -2.37659, 0.52 ) }
    dend_14 { pt3dadd( -28.1456, -132.796, -2.5764, 0.52 ) }
    dend_14 { pt3dadd( -28.5115, -133.622, -2.83714, 0.52 ) }
    dend_14 { pt3dadd( -29.0547, -134.651, -3.18759, 0.52 ) }
    dend_14 { pt3dadd( -29.827, -135.936, -3.63875, 0.52 ) }
    dend_14 { pt3dadd( -30.2355, -136.563, -3.84556, 0.52 ) }
    dend_14 { pt3dadd( -30.7902, -137.39, -4.11546, 0.52 ) }
    dend_14 { pt3dadd( -31.3404, -138.196, -4.36759, 0.52 ) }
    dend_14 { pt3dadd( -31.7896, -138.853, -4.56717, 0.52 ) }
    dend_14 { pt3dadd( -32.4024, -139.689, -4.79923, 0.52 ) }
    dend_14 { pt3dadd( -33.1609, -140.604, -5.10134, 0.52 ) }
    dend_14 { pt3dadd( -33.7409, -141.222, -5.3288, 0.52 ) }
    dend_14 { pt3dadd( -34.6397, -142.124, -5.68168, 0.52 ) }
    dend_14 { pt3dadd( -35.0761, -142.569, -5.87309, 0.52 ) }
    dend_14 { pt3dadd( -36.0303, -143.582, -6.35182, 0.52 ) }
    dend_14 { pt3dadd( -36.9231, -144.581, -6.8608, 0.52 ) }
    dend_14 { pt3dadd( -37.6745, -145.478, -7.34723, 0.52 ) }
    dend_14 { pt3dadd( -38.2899, -146.265, -7.7672, 0.52 ) }
    dend_14 { pt3dadd( -38.8518, -147.061, -8.19231, 0.52 ) }
    dend_14 { pt3dadd( -39.3348, -147.888, -8.62588, 0.52 ) }
    dend_14 { pt3dadd( -39.6988, -148.745, -9.04199, 0.52 ) }
    dend_14 { pt3dadd( -39.9315, -149.466, -9.33332, 0.52 ) }
    dend_14 { pt3dadd( -40.1943, -150.399, -9.66945, 0.52 ) }
    dend_14 { pt3dadd( -40.3934, -151.139, -9.88853, 0.52 ) }
    dend_14 { pt3dadd( -40.7203, -152.376, -10.1576, 0.52 ) }
    dend_14 { pt3dadd( -41.0233, -153.618, -10.3794, 0.52 ) }
    dend_14 { pt3dadd( -41.3455, -155.004, -10.5885, 0.52 ) }
    dend_14 { pt3dadd( -41.5671, -156.05, -10.7296, 0.52 ) }
    dend_14 { pt3dadd( -41.8485, -157.515, -10.9039, 0.52 ) }
    dend_14 { pt3dadd( -42.2772, -159.832, -11.1343, 0.52 ) }
    dend_14 { pt3dadd( -42.5118, -161.225, -11.2361, 0.52 ) }
    dend_14 { pt3dadd( -42.6694, -162.285, -11.3024, 0.52 ) }
    dend_14 { pt3dadd( -43.0058, -164.437, -11.43, 0.52 ) }
    dend_14 { pt3dadd( -43.326, -166.365, -11.5307, 0.52 ) }
    dend_14 { pt3dadd( -43.549, -167.605, -11.5974, 0.52 ) }
    dend_14 { pt3dadd( -43.9272, -169.575, -11.6995, 0.52 ) }
    dend_14 { pt3dadd( -44.4038, -171.858, -11.7651, 0.52 ) }
    dend_14 { pt3dadd( -44.822, -173.701, -11.7975, 0.52 ) }
    dend_14 { pt3dadd( -45.2388, -175.433, -11.8405, 0.52 ) }
    dend_14 { pt3dadd( -45.4929, -176.5, -11.8848, 0.52 ) }
    dend_14 { pt3dadd( -45.7549, -177.614, -11.9437, 0.52 ) }
    dend_14 { pt3dadd( -46.0178, -178.767, -12.0303, 0.52 ) }
    dend_14 { pt3dadd( -46.213, -179.744, -12.1185, 0.52 ) }
    dend_14 { pt3dadd( -46.5372, -181.531, -12.2882, 0.52 ) }
    dend_14 { pt3dadd( -46.8483, -183.229, -12.4558, 0.52 ) }
    dend_14 { pt3dadd( -47.2689, -185.398, -12.6623, 0.52 ) }
    dend_14 { pt3dadd( -47.4857, -186.47, -12.7695, 0.52 ) }
    dend_14 { pt3dadd( -47.817, -188.067, -12.945, 0.52 ) }
    dend_14 { pt3dadd( -48.1503, -189.628, -13.0873, 0.52 ) }
    dend_14 { pt3dadd( -48.4329, -190.891, -13.1684, 0.52 ) }
    dend_14 { pt3dadd( -48.5881, -191.556, -13.2104, 0.52 ) }
    dend_14 { pt3dadd( -48.8546, -192.688, -13.2745, 0.52 ) }
    dend_14 { pt3dadd( -49.0089, -193.349, -13.3, 0.52 ) }
    dend_14 { pt3dadd( -49.1859, -194.239, -13.3168, 0.52 ) }
    dend_14 { pt3dadd( -49.3548, -195.15, -13.2935, 0.52 ) }
    dend_14 { pt3dadd( -49.6298, -196.666, -13.1954, 0.52 ) }
    dend_14 { pt3dadd( -49.7128, -197.154, -13.1469, 0.52 ) }
    dend_14 { pt3dadd( -49.871, -198.074, -13.0207, 0.52 ) }
    dend_14 { pt3dadd( -50.2269, -199.959, -12.7051, 0.52 ) }
    dend_14 { pt3dadd( -50.4455, -200.994, -12.5096, 0.52 ) }
    dend_14 { pt3dadd( -50.589, -201.615, -12.3999, 0.52 ) }
    dend_14 { pt3dadd( -50.8099, -202.481, -12.2649, 0.52 ) }
    dend_14 { pt3dadd( -51.1327, -203.672, -12.1375, 0.52 ) }
    dend_14 { pt3dadd( -51.4128, -204.663, -12.0925, 0.52 ) }
    dend_14 { pt3dadd( -51.751, -205.856, -12.1255, 0.52 ) }
    dend_14 { pt3dadd( -51.984, -206.813, -12.2006, 0.52 ) }
    dend_14 { pt3dadd( -52.1801, -207.74, -12.303, 0.52 ) }
    dend_14 { pt3dadd( -52.3591, -208.783, -12.4597, 0.52 ) }
    dend_14 { pt3dadd( -52.5043, -209.71, -12.6157, 0.52 ) }
    dend_14 { pt3dadd( -52.6551, -210.679, -12.7924, 0.52 ) }
    dend_14 { pt3dadd( -52.9386, -212.344, -13.1142, 0.52 ) }
    dend_14 { pt3dadd( -53.1559, -213.485, -13.3223, 0.52 ) }
    dend_14 { pt3dadd( -53.3718, -214.512, -13.5304, 0.52 ) }
    dend_14 { pt3dadd( -53.6981, -215.774, -13.8001, 0.52 ) }
    dend_14 { pt3dadd( -54.0632, -216.982, -14.0813, 0.52 ) }
    dend_14 { pt3dadd( -54.3616, -217.829, -14.2984, 0.52 ) }
    dend_14 { pt3dadd( -54.6775, -218.621, -14.4709, 0.52 ) }
    dend_14 { pt3dadd( -55.0038, -219.41, -14.5895, 0.52 ) }
    dend_14 { pt3dadd( -55.2982, -220.169, -14.6495, 0.52 ) }
    dend_14 { pt3dadd( -55.624, -221.137, -14.6702, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_14 { pt3dadd( -56.0019, -222.308, -14.6297, 0.52 ) }
    dend_14 { pt3dadd( -56.4369, -223.633, -14.5417, 0.52 ) }
    dend_14 { pt3dadd( -56.8494, -224.8, -14.4471, 0.52 ) }
    dend_14 { pt3dadd( -57.2839, -225.94, -14.3439, 0.52 ) }
    dend_14 { pt3dadd( -57.7029, -227.014, -14.2471, 0.52 ) }
    dend_14 { pt3dadd( -58.2871, -228.406, -14.1275, 0.52 ) }
    dend_14 { pt3dadd( -58.8037, -229.584, -14.0456, 0.52 ) }
    dend_14 { pt3dadd( -59.3633, -230.794, -14.0034, 0.52 ) }
    dend_14 { pt3dadd( -59.9382, -231.961, -13.9514, 0.52 ) }
    dend_14 { pt3dadd( -60.4273, -232.866, -13.9036, 0.52 ) }
    dend_14 { pt3dadd( -60.8742, -233.687, -13.8803, 0.52 ) }
    dend_14 { pt3dadd( -61.3174, -234.537, -13.8753, 0.52 ) }
    dend_14 { pt3dadd( -61.6144, -235.141, -13.8838, 0.52 ) }
    dend_14 { pt3dadd( -61.7986, -235.543, -13.9044, 0.52 ) }
    dend_14 { pt3dadd( -62.6719, -237.492, -14.0847, 0.52 ) }
    dend_14 { pt3dadd( -63.5332, -239.327, -14.2367, 0.52 ) }
    dend_14 { pt3dadd( -63.9779, -240.27, -14.2975, 0.52 ) }
    dend_14 { pt3dadd( -64.3527, -241.064, -14.3316, 0.52 ) }
    dend_14 { pt3dadd( -64.8471, -242.131, -14.3539, 0.52 ) }
    dend_14 { pt3dadd( -65.3128, -243.153, -14.3509, 0.52 ) }
    dend_14 { pt3dadd( -66.1464, -245.047, -14.2675, 0.52 ) }
    dend_14 { pt3dadd( -66.4401, -245.696, -14.1911, 0.52 ) }
    dend_14 { pt3dadd( -66.6804, -246.237, -14.1015, 0.52 ) }
    dend_14 { pt3dadd( -67.1092, -247.228, -13.866, 0.52 ) }
    dend_14 { pt3dadd( -67.2476, -247.568, -13.7596, 0.52 ) }
    dend_14 { pt3dadd( -67.5697, -248.483, -13.4505, 0.52 ) }
    dend_14 { pt3dadd( -67.7646, -249.103, -13.259, 0.52 ) }
    dend_14 { pt3dadd( -67.9644, -249.683, -13.0791, 0.52 ) }
    dend_14 { pt3dadd( -68.2396, -250.409, -12.8702, 0.52 ) }
    dend_14 { pt3dadd( -68.6744, -251.433, -12.5722, 0.52 ) }
    dend_14 { pt3dadd( -68.9848, -252.088, -12.3918, 0.52 ) }
    dend_14 { pt3dadd( -69.3703, -252.872, -12.2051, 0.52 ) }
    dend_14 { pt3dadd( -69.7215, -253.606, -12.0714, 0.52 ) }
    dend_14 { pt3dadd( -70.2534, -254.707, -11.9213, 0.52 ) }
    dend_14 { pt3dadd( -70.5579, -255.337, -11.8534, 0.52 ) }
    dend_14 { pt3dadd( -70.8797, -256.005, -11.7852, 0.52 ) }
    dend_14 { pt3dadd( -71.3978, -257.11, -11.6736, 0.52 ) }
    dend_14 { pt3dadd( -71.8198, -258.089, -11.5731, 0.52 ) }
    dend_14 { pt3dadd( -72.2653, -259.274, -11.4532, 0.52 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 39/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -35.0591, -194.771, 37.4173, 0.44 ) }
    dend_10 { pt3dadd( -36.0168, -196.254, 36.3776, 0.44 ) }
    dend_10 { pt3dadd( -36.2847, -196.95, 35.9964, 0.44 ) }
    dend_10 { pt3dadd( -36.3674, -197.529, 35.7697, 0.44 ) }
    dend_10 { pt3dadd( -36.3484, -198.227, 35.5767, 0.44 ) }
    dend_10 { pt3dadd( -36.2148, -199.133, 35.4191, 0.44 ) }
    dend_10 { pt3dadd( -36.0842, -199.775, 35.3481, 0.44 ) }
    dend_10 { pt3dadd( -35.8253, -200.669, 35.3317, 0.44 ) }
    dend_10 { pt3dadd( -35.351, -201.993, 35.3551, 0.44 ) }
    dend_10 { pt3dadd( -34.915, -203.01, 35.404, 0.44 ) }
    dend_10 { pt3dadd( -34.2743, -204.424, 35.505, 0.44 ) }
    dend_10 { pt3dadd( -33.6754, -205.677, 35.6079, 0.44 ) }
    dend_10 { pt3dadd( -33.2603, -206.528, 35.6919, 0.44 ) }
    dend_10 { pt3dadd( -32.7929, -207.482, 35.8125, 0.44 ) }
    dend_10 { pt3dadd( -32.4083, -208.266, 35.9092, 0.44 ) }
    dend_10 { pt3dadd( -29.3894, -217.56, 36.0528, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 55/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -35.0591, -194.771, 37.4173, 0.52 ) }
    dend_9 { pt3dadd( -35.8431, -196.241, 37.9466, 0.52 ) }
    dend_9 { pt3dadd( -36.0722, -196.67, 38.1013, 0.52 ) }
    dend_9 { pt3dadd( -36.4979, -197.468, 38.3887, 0.44 ) }
    dend_9 { pt3dadd( -36.8882, -198.2, 38.6522, 0.44 ) }
    dend_9 { pt3dadd( -37.3256, -199.02, 38.9475, 0.44 ) }
    dend_9 { pt3dadd( -37.8435, -199.991, 39.2972, 0.44 ) }
    dend_9 { pt3dadd( -40.5336, -209.127, 41.5274, 0.44 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -1.43205, -129.001, 12.4224, 0.44 ) }
    dend_7 { pt3dadd( -0.1531, -133.87, 15.1556, 0.44 ) }
    dend_7 { pt3dadd( 0.252915, -135.218, 15.6934, 0.44 ) }
    dend_7 { pt3dadd( 0.497949, -135.894, 15.8786, 0.44 ) }
    dend_7 { pt3dadd( 0.91737, -136.99, 16.0426, 0.44 ) }
    dend_7 { pt3dadd( 1.36334, -138.166, 16.1212, 0.44 ) }
    dend_7 { pt3dadd( 1.64691, -138.945, 16.1272, 0.44 ) }
    dend_7 { pt3dadd( 1.96378, -139.827, 15.9371, 0.44 ) }
    dend_7 { pt3dadd( 2.44685, -141.263, 15.6448, 0.44 ) }
    dend_7 { pt3dadd( 2.88759, -142.761, 15.3312, 0.44 ) }
    dend_7 { pt3dadd( 3.0721, -143.497, 15.1659, 0.44 ) }
    dend_7 { pt3dadd( 3.31997, -144.682, 14.8864, 0.44 ) }
    dend_7 { pt3dadd( 3.59419, -146.171, 14.512, 0.44 ) }
    dend_7 { pt3dadd( 3.73429, -147.073, 14.2873, 0.44 ) }
    dend_7 { pt3dadd( 3.82043, -147.687, 14.1359, 0.44 ) }
    dend_7 { pt3dadd( 4.05917, -149.238, 13.8088, 0.44 ) }
    dend_7 { pt3dadd( 4.29201, -150.617, 13.5679, 0.44 ) }
    dend_7 { pt3dadd( 4.48701, -151.769, 13.3849, 0.44 ) }
    dend_7 { pt3dadd( 4.64602, -152.859, 13.2458, 0.44 ) }
    dend_7 { pt3dadd( 4.72739, -153.523, 13.183, 0.44 ) }
    dend_7 { pt3dadd( 4.93622, -155.457, 13.0558, 0.44 ) }
    dend_7 { pt3dadd( 5.11628, -157.551, 12.9719, 0.44 ) }
    dend_7 { pt3dadd( 5.23504, -159.154, 12.9502, 0.44 ) }
    dend_7 { pt3dadd( 5.34913, -160.927, 12.966, 0.44 ) }
    dend_7 { pt3dadd( 5.4208, -162.029, 12.9902, 0.44 ) }
    dend_7 { pt3dadd( 5.52255, -163.648, 13.0456, 0.44 ) }
    dend_7 { pt3dadd( 5.5926, -164.799, 13.098, 0.44 ) }
    dend_7 { pt3dadd( 5.69913, -166.64, 13.2045, 0.44 ) }
    dend_7 { pt3dadd( 5.75495, -167.836, 13.2885, 0.44 ) }
    dend_7 { pt3dadd( 5.84241, -169.615, 13.4056, 0.44 ) }
    dend_7 { pt3dadd( 5.91621, -171.094, 13.5189, 0.44 ) }
    dend_7 { pt3dadd( 5.94621, -171.906, 13.5859, 0.44 ) }
    dend_7 { pt3dadd( 5.99355, -172.911, 13.6788, 0.44 ) }
    dend_7 { pt3dadd( 6.03148, -174.415, 13.8339, 0.44 ) }
    dend_7 { pt3dadd( 6.04122, -175.982, 14.0342, 0.44 ) }
    dend_7 { pt3dadd( 6.04164, -177.277, 14.2314, 0.44 ) }
    dend_7 { pt3dadd( 6.03878, -178.265, 14.4037, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_7 { pt3dadd( 6.0457, -179.06, 14.5546, 0.44 ) }
    dend_7 { pt3dadd( 6.06739, -180.314, 14.8374, 0.44 ) }
    dend_7 { pt3dadd( 6.08129, -181.168, 15.056, 0.44 ) }
    dend_7 { pt3dadd( 6.07029, -181.733, 15.2037, 0.44 ) }
    dend_7 { pt3dadd( 6.05409, -182.395, 15.3589, 0.44 ) }
    dend_7 { pt3dadd( 6.04366, -183.331, 15.5829, 0.44 ) }
    dend_7 { pt3dadd( 6.06352, -184.576, 15.8537, 0.44 ) }
    dend_7 { pt3dadd( 6.10927, -185.559, 16.064, 0.44 ) }
    dend_7 { pt3dadd( 6.21687, -187.035, 16.3247, 0.44 ) }
    dend_7 { pt3dadd( 6.34201, -188.233, 16.4995, 0.44 ) }
    dend_7 { pt3dadd( 6.58965, -190.105, 16.7136, 0.44 ) }
    dend_7 { pt3dadd( 6.87391, -191.936, 16.8688, 0.44 ) }
    dend_7 { pt3dadd( 7.06795, -192.994, 16.9222, 0.44 ) }
    dend_7 { pt3dadd( 7.41778, -194.697, 16.9712, 0.44 ) }
    dend_7 { pt3dadd( 7.63449, -195.639, 16.9677, 0.44 ) }
    dend_7 { pt3dadd( 7.9429, -196.779, 16.9093, 0.44 ) }
    dend_7 { pt3dadd( 8.28824, -197.881, 16.796, 0.44 ) }
    dend_7 { pt3dadd( 8.52211, -198.596, 16.7235, 0.44 ) }
    dend_7 { pt3dadd( 8.72935, -199.218, 16.6708, 0.44 ) }
    dend_7 { pt3dadd( 9.15787, -200.514, 16.6051, 0.44 ) }
    dend_7 { pt3dadd( 9.61225, -201.829, 16.5742, 0.44 ) }
    dend_7 { pt3dadd( 10.2124, -203.363, 16.5782, 0.44 ) }
    dend_7 { pt3dadd( 10.7344, -204.598, 16.6124, 0.44 ) }
    dend_7 { pt3dadd( 11.5335, -206.391, 16.7154, 0.44 ) }
    dend_7 { pt3dadd( 11.762, -206.891, 16.7562, 0.44 ) }
    dend_7 { pt3dadd( 12.1544, -207.742, 16.8482, 0.44 ) }
    dend_7 { pt3dadd( 12.7089, -208.925, 17.0043, 0.44 ) }
    dend_7 { pt3dadd( 13.6402, -210.782, 17.2545, 0.44 ) }
    dend_7 { pt3dadd( 14.0291, -211.52, 17.346, 0.44 ) }
    dend_7 { pt3dadd( 14.6468, -212.654, 17.474, 0.44 ) }
    dend_7 { pt3dadd( 15.3137, -213.82, 17.6067, 0.37 ) }
    dend_7 { pt3dadd( 16.2695, -215.405, 17.8039, 0.37 ) }
    dend_7 { pt3dadd( 17.2675, -216.971, 18.0257, 0.37 ) }
    dend_7 { pt3dadd( 18.3773, -218.631, 18.2989, 0.37 ) }
    dend_7 { pt3dadd( 19.3071, -219.983, 18.5364, 0.37 ) }
    dend_7 { pt3dadd( 19.9322, -220.882, 18.7089, 0.37 ) }
    dend_7 { pt3dadd( 21.0751, -222.532, 19.0431, 0.37 ) }
    dend_7 { pt3dadd( 21.774, -223.584, 19.2709, 0.37 ) }
    dend_7 { pt3dadd( 22.7795, -225.128, 19.657, 0.37 ) }
    dend_7 { pt3dadd( 23.4642, -226.213, 19.9736, 0.37 ) }
    dend_7 { pt3dadd( 23.9223, -226.965, 20.207, 0.37 ) }
    dend_7 { pt3dadd( 24.279, -227.593, 20.3948, 0.37 ) }
    dend_7 { pt3dadd( 24.7066, -228.373, 20.6327, 0.37 ) }
    dend_7 { pt3dadd( 25.2354, -229.326, 20.9498, 0.37 ) }
    dend_7 { pt3dadd( 25.5882, -229.897, 21.1519, 0.37 ) }
    dend_7 { pt3dadd( 26.0012, -230.523, 21.3801, 0.37 ) }
    dend_7 { pt3dadd( 26.4201, -231.073, 21.5893, 0.37 ) }
    dend_7 { pt3dadd( 26.7787, -231.508, 21.7532, 0.37 ) }
    dend_7 { pt3dadd( 27.3602, -232.202, 21.9978, 0.37 ) }
    dend_7 { pt3dadd( 27.9416, -232.971, 22.2486, 0.37 ) }
    dend_7 { pt3dadd( 28.367, -233.562, 22.4477, 0.37 ) }
    dend_7 { pt3dadd( 28.7331, -234.094, 22.6655, 0.37 ) }
    dend_7 { pt3dadd( 29.1147, -234.654, 22.9379, 0.37 ) }
    dend_7 { pt3dadd( 29.3706, -235.073, 23.1625, 0.37 ) }
    dend_7 { pt3dadd( 29.7041, -235.674, 23.4855, 0.37 ) }
    dend_7 { pt3dadd( 30.0668, -236.421, 23.8641, 0.37 ) }
    dend_7 { pt3dadd( 30.2989, -236.938, 24.1046, 0.37 ) }
    dend_7 { pt3dadd( 30.8396, -238.247, 24.6776, 0.29 ) }
    dend_7 { pt3dadd( 31.2765, -239.409, 25.1449, 0.37 ) }
    dend_7 { pt3dadd( 31.5577, -240.199, 25.4188, 0.37 ) }
    dend_7 { pt3dadd( 31.8503, -241.121, 25.6926, 0.37 ) }
    dend_7 { pt3dadd( 32.0753, -241.907, 25.8814, 0.37 ) }
    dend_7 { pt3dadd( 32.3198, -242.846, 26.0645, 0.37 ) }
    dend_7 { pt3dadd( 32.5584, -243.893, 26.2412, 0.37 ) }
    dend_7 { pt3dadd( 32.8151, -244.972, 26.4162, 0.37 ) }
    dend_7 { pt3dadd( 33.0844, -246.043, 26.6014, 0.37 ) }
    dend_7 { pt3dadd( 33.3671, -246.971, 26.7533, 0.37 ) }
    dend_7 { pt3dadd( 33.6261, -247.819, 26.8826, 0.37 ) }
    dend_7 { pt3dadd( 33.9184, -248.809, 27.0058, 0.37 ) }
    dend_7 { pt3dadd( 34.1603, -249.693, 27.1193, 0.37 ) }
    dend_7 { pt3dadd( 34.5374, -251.306, 27.3175, 0.37 ) }
    dend_7 { pt3dadd( 35.0426, -253.607, 27.598, 0.37 ) }
    dend_7 { pt3dadd( 35.2373, -254.414, 27.6563, 0.37 ) }
    dend_7 { pt3dadd( 35.7551, -256.277, 27.6782, 0.37 ) }
    dend_7 { pt3dadd( 36.1712, -257.506, 27.6211, 0.37 ) }
    dend_7 { pt3dadd( 36.5131, -258.45, 27.5411, 0.37 ) }
    dend_7 { pt3dadd( 37.0602, -259.698, 27.3873, 0.37 ) }
    dend_7 { pt3dadd( 38.1485, -261.771, 27.0867, 0.37 ) }
    dend_7 { pt3dadd( 38.6007, -262.53, 26.9792, 0.37 ) }
    dend_7 { pt3dadd( 39.3665, -263.723, 26.8157, 0.37 ) }
    dend_7 { pt3dadd( 40.2857, -265.291, 26.6784, 0.37 ) }
    dend_7 { pt3dadd( 40.8209, -266.371, 26.6483, 0.37 ) }
    dend_7 { pt3dadd( 41.258, -267.48, 26.6647, 0.37 ) }
    dend_7 { pt3dadd( 41.7072, -268.912, 26.7434, 0.37 ) }
    dend_7 { pt3dadd( 42.0257, -270.043, 26.8057, 0.37 ) }
    dend_7 { pt3dadd( 42.7087, -272.655, 26.9272, 0.37 ) }
    dend_7 { pt3dadd( 43.5855, -276.034, 27.0635, 0.37 ) }
    dend_7 { pt3dadd( 44.0424, -277.91, 27.1514, 0.37 ) }
    dend_7 { pt3dadd( 44.4542, -279.657, 27.2399, 0.37 ) }
    dend_7 { pt3dadd( 44.8218, -281.277, 27.3362, 0.37 ) }
    dend_7 { pt3dadd( 45.1833, -283.0, 27.4516, 0.37 ) }
    dend_7 { pt3dadd( 45.481, -284.574, 27.5673, 0.37 ) }
    dend_7 { pt3dadd( 45.6938, -285.884, 27.6906, 0.37 ) }
    dend_7 { pt3dadd( 45.9176, -287.364, 27.8458, 0.37 ) }
    dend_7 { pt3dadd( 46.1567, -289.1, 28.0397, 0.37 ) }
    dend_7 { pt3dadd( 46.3759, -291.144, 28.2735, 0.37 ) }
    dend_7 { pt3dadd( 46.5484, -293.198, 28.4987, 0.37 ) }
    dend_7 { pt3dadd( 46.5902, -293.929, 28.5693, 0.37 ) }
    dend_7 { pt3dadd( 46.6109, -294.656, 28.6304, 0.37 ) }
    dend_7 { pt3dadd( 46.5851, -296.057, 28.7454, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_7 { pt3dadd( 46.5023, -297.709, 28.8729, 0.37 ) }
    dend_7 { pt3dadd( 46.4059, -298.784, 28.9565, 0.37 ) }
    dend_7 { pt3dadd( 46.266, -300.184, 29.0901, 0.37 ) }
    dend_7 { pt3dadd( 46.1619, -301.042, 29.1773, 0.37 ) }
    dend_7 { pt3dadd( 45.9515, -302.587, 29.3652, 0.37 ) }
    dend_7 { pt3dadd( 45.758, -303.624, 29.4833, 0.37 ) }
    dend_7 { pt3dadd( 45.3596, -305.293, 29.6293, 0.37 ) }
    dend_7 { pt3dadd( 44.8077, -307.594, 29.8349, 0.37 ) }
    dend_7 { pt3dadd( 44.382, -309.424, 29.9974, 0.37 ) }
    dend_7 { pt3dadd( 43.9251, -311.429, 30.1631, 0.37 ) }
    dend_7 { pt3dadd( 43.4299, -313.44, 30.3167, 0.37 ) }
    dend_7 { pt3dadd( 42.9272, -315.005, 30.4146, 0.37 ) }
    dend_7 { pt3dadd( 45.566, -324.389, 31.036, 0.37 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 13/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -1.43205, -129.001, 12.4224, 0.74 ) }
    dend_4 { pt3dadd( -1.55634, -129.661, 12.3692, 0.74 ) }
    dend_4 { pt3dadd( -1.70441, -131.125, 12.2815, 0.74 ) }
    dend_4 { pt3dadd( -1.83055, -132.368, 12.2917, 0.74 ) }
    dend_4 { pt3dadd( -1.97686, -133.648, 12.3909, 0.74 ) }
    dend_4 { pt3dadd( -2.06656, -134.356, 12.4855, 0.74 ) }
    dend_4 { pt3dadd( -2.3295, -136.478, 12.8173, 0.74 ) }
    dend_4 { pt3dadd( -2.46646, -138.025, 13.1534, 0.74 ) }
    dend_4 { pt3dadd( -2.53861, -139.524, 13.5595, 0.74 ) }
    dend_4 { pt3dadd( -2.54749, -140.793, 13.9327, 0.74 ) }
    dend_4 { pt3dadd( -2.52838, -141.722, 14.2271, 0.74 ) }
    dend_4 { pt3dadd( -2.50088, -142.77, 14.5583, 0.74 ) }
    dend_4 { pt3dadd( -2.45725, -144.657, 15.1157, 0.74 ) }
    dend_4 { pt3dadd( -2.44724, -145.417, 15.3101, 0.74 ) }
    dend_4 { pt3dadd( -2.41901, -146.89, 15.6257, 0.74 ) }
    dend_4 { pt3dadd( -2.43112, -148.332, 15.8976, 0.74 ) }
    dend_4 { pt3dadd( -2.48653, -149.739, 16.1444, 0.74 ) }
    dend_4 { pt3dadd( -2.64146, -151.532, 16.4501, 0.74 ) }
    dend_4 { pt3dadd( -2.73094, -152.46, 16.5774, 0.66 ) }
    dend_4 { pt3dadd( -2.90883, -154.205, 16.7815, 0.66 ) }
    dend_4 { pt3dadd( -3.03567, -155.508, 16.9028, 0.66 ) }
    dend_4 { pt3dadd( -3.10133, -156.353, 16.9751, 0.66 ) }
    dend_4 { pt3dadd( -3.13071, -157.319, 17.0401, 0.66 ) }
    dend_4 { pt3dadd( -3.08629, -159.566, 17.2147, 0.66 ) }
    dend_4 { pt3dadd( -2.93193, -161.258, 17.3843, 0.66 ) }
    dend_4 { pt3dadd( -2.75658, -162.25, 17.5082, 0.66 ) }
    dend_4 { pt3dadd( -2.42574, -163.54, 17.7429, 0.66 ) }
    dend_4 { pt3dadd( -2.09128, -164.648, 17.9933, 0.66 ) }
    dend_4 { pt3dadd( -1.63961, -166.036, 18.7915, 0.66 ) }
    dend_4 { pt3dadd( -1.27898, -167.072, 19.5301, 0.66 ) }
    dend_4 { pt3dadd( -0.810739, -168.243, 20.5123, 0.66 ) }
    dend_4 { pt3dadd( -0.371286, -169.332, 21.5685, 0.66 ) }
    dend_4 { pt3dadd( -0.224287, -169.706, 21.9925, 0.66 ) }
    dend_4 { pt3dadd( 1.26017, -173.882, 27.7727, 0.66 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 47/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 56.3212, 51.9408, 4.17099, 0.29 ) }
    dend_41 { pt3dadd( 58.0533, 52.8175, 4.07717, 0.29 ) }
    dend_41 { pt3dadd( 58.7063, 53.1207, 4.04504, 0.29 ) }
    dend_41 { pt3dadd( 59.343, 53.3858, 4.0175, 0.29 ) }
    dend_41 { pt3dadd( 60.2116, 53.7367, 3.97312, 0.66 ) }
    dend_41 { pt3dadd( 60.9107, 54.0185, 3.96802, 0.66 ) }
    dend_41 { pt3dadd( 62.0361, 54.4728, 3.99828, 0.37 ) }
    dend_41 { pt3dadd( 62.6631, 54.7094, 4.05544, 0.37 ) }
    dend_41 { pt3dadd( 63.5055, 55.0085, 4.16135, 0.37 ) }
    dend_41 { pt3dadd( 64.1206, 55.2046, 4.24921, 0.37 ) }
    dend_41 { pt3dadd( 65.3781, 55.5806, 4.4512, 0.96 ) }
    dend_41 { pt3dadd( 65.9671, 55.7584, 4.55136, 0.96 ) }
    dend_41 { pt3dadd( 66.3537, 55.8803, 4.62792, 0.96 ) }
    dend_41 { pt3dadd( 67.3078, 56.207, 4.83675, 0.44 ) }
    dend_41 { pt3dadd( 67.7106, 56.3578, 4.93164, 0.44 ) }
    dend_41 { pt3dadd( 68.492, 56.6482, 5.10824, 0.29 ) }
    dend_41 { pt3dadd( 69.303, 56.9635, 5.2638, 0.59 ) }
    dend_41 { pt3dadd( 69.9435, 57.2302, 5.39354, 0.59 ) }
    dend_41 { pt3dadd( 70.9313, 57.6772, 5.60946, 0.44 ) }
    dend_41 { pt3dadd( 71.7855, 58.083, 5.80565, 0.66 ) }
    dend_41 { pt3dadd( 72.4534, 58.3904, 5.95847, 0.66 ) }
    dend_41 { pt3dadd( 72.9682, 58.6152, 6.05863, 0.66 ) }
    dend_41 { pt3dadd( 73.6389, 58.9015, 6.17368, 0.96 ) }
    dend_41 { pt3dadd( 74.4746, 59.2483, 6.27116, 0.96 ) }
    dend_41 { pt3dadd( 75.6499, 59.7206, 6.34179, 0.29 ) }
    dend_41 { pt3dadd( 76.7538, 60.1667, 6.3684, 0.29 ) }
    dend_41 { pt3dadd( 77.5545, 60.5215, 6.36743, 0.74 ) }
    dend_41 { pt3dadd( 78.2552, 60.8551, 6.34648, 0.29 ) }
    dend_41 { pt3dadd( 78.8697, 61.1771, 6.30979, 0.29 ) }
    dend_41 { pt3dadd( 79.4729, 61.5299, 6.26125, 0.29 ) }
    dend_41 { pt3dadd( 80.1209, 61.9534, 6.20262, 0.29 ) }
    dend_41 { pt3dadd( 80.8282, 62.4026, 6.14902, 1.03 ) }
    dend_41 { pt3dadd( 81.2043, 62.6173, 6.13513, 1.18 ) }
    dend_41 { pt3dadd( 81.7657, 62.8901, 6.11116, 1.18 ) }
    dend_41 { pt3dadd( 82.3445, 63.1261, 6.13057, 0.59 ) }
    dend_41 { pt3dadd( 83.1815, 63.4221, 6.21048, 0.37 ) }
    dend_41 { pt3dadd( 84.3062, 63.7582, 6.35429, 0.37 ) }
    dend_41 { pt3dadd( 85.1033, 63.9627, 6.47893, 0.81 ) }
    dend_41 { pt3dadd( 85.7798, 64.1293, 6.60109, 0.52 ) }
    dend_41 { pt3dadd( 87.1376, 64.4545, 6.87766, 0.29 ) }
    dend_41 { pt3dadd( 87.7975, 64.6305, 7.02556, 0.29 ) }
    dend_41 { pt3dadd( 88.8294, 64.9686, 7.27272, 0.59 ) }
    dend_41 { pt3dadd( 89.4229, 65.2205, 7.40719, 0.59 ) }
    dend_41 { pt3dadd( 90.0096, 65.5002, 7.52068, 0.59 ) }
    dend_41 { pt3dadd( 90.6709, 65.8442, 7.6161, 0.59 ) }
    dend_41 { pt3dadd( 91.314, 66.1908, 7.66724, 0.29 ) }
    dend_41 { pt3dadd( 91.9565, 66.5367, 7.7216, 0.29 ) }
    dend_41 { pt3dadd( 93.1387, 67.1591, 7.83714, 0.44 ) }
    dend_41 { pt3dadd( 93.6998, 67.4402, 7.89227, 0.88 ) }
    dend_41 { pt3dadd( 94.5059, 67.8093, 7.94096, 0.74 ) }
    dend_41 { pt3dadd( 95.5771, 68.2284, 7.92481, 1.11 ) }
    dend_41 { pt3dadd( 96.1464, 68.4171, 7.87902, 1.11 ) }
    dend_41 { pt3dadd( 97.4676, 68.7798, 7.67894, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_41 { pt3dadd( 98.147, 68.9178, 7.53705, 0.29 ) }
    dend_41 { pt3dadd( 99.2963, 69.1193, 7.23792, 0.29 ) }
    dend_41 { pt3dadd( 100.724, 69.3362, 6.80228, 0.74 ) }
    dend_41 { pt3dadd( 101.349, 69.4288, 6.57174, 0.96 ) }
    dend_41 { pt3dadd( 102.168, 69.5592, 6.24733, 0.74 ) }
    dend_41 { pt3dadd( 103.456, 69.795, 5.71775, 0.22 ) }
    dend_41 { pt3dadd( 104.223, 69.9472, 5.42796, 0.22 ) }
    dend_41 { pt3dadd( 105.192, 70.1566, 5.12997, 0.66 ) }
    dend_41 { pt3dadd( 106.082, 70.3563, 4.9106, 0.66 ) }
    dend_41 { pt3dadd( 106.901, 70.5403, 4.73741, 0.22 ) }
    dend_41 { pt3dadd( 107.408, 70.6703, 4.64145, 0.22 ) }
    dend_41 { pt3dadd( 107.826, 70.7863, 4.56697, 0.66 ) }
    dend_41 { pt3dadd( 108.611, 71.0053, 4.45639, 0.74 ) }
    dend_41 { pt3dadd( 109.237, 71.1982, 4.38618, 0.96 ) }
    dend_41 { pt3dadd( 109.962, 71.4319, 4.32811, 0.96 ) }
    dend_41 { pt3dadd( 110.543, 71.6399, 4.27759, 0.44 ) }
    dend_41 { pt3dadd( 111.243, 71.9098, 4.2152, 0.44 ) }
    dend_41 { pt3dadd( 112.243, 72.3309, 4.11331, 0.81 ) }
    dend_41 { pt3dadd( 112.634, 72.5062, 4.05306, 0.81 ) }
    dend_41 { pt3dadd( 113.378, 72.8238, 3.91502, 0.52 ) }
    dend_41 { pt3dadd( 113.816, 72.9957, 3.82726, 0.52 ) }
    dend_41 { pt3dadd( 114.696, 73.295, 3.65465, 0.88 ) }
    dend_41 { pt3dadd( 115.454, 73.5166, 3.506, 1.03 ) }
    dend_41 { pt3dadd( 116.66, 73.799, 3.27251, 0.29 ) }
    dend_41 { pt3dadd( 117.664, 73.9734, 3.08911, 0.29 ) }
    dend_41 { pt3dadd( 118.532, 74.0952, 2.93435, 0.29 ) }
    dend_41 { pt3dadd( 119.697, 74.2393, 2.72506, 0.44 ) }
    dend_41 { pt3dadd( 120.331, 74.3309, 2.60579, 0.44 ) }
    dend_41 { pt3dadd( 120.83, 74.4381, 2.49747, 0.22 ) }
    dend_41 { pt3dadd( 121.627, 74.7529, 2.26365, 0.22 ) }
    dend_41 { pt3dadd( 122.04, 75.0451, 2.06264, 0.74 ) }
    dend_41 { pt3dadd( 122.444, 75.4604, 1.75197, 0.88 ) }
    dend_41 { pt3dadd( 122.937, 76.1016, 1.27778, 0.66 ) }
    dend_41 { pt3dadd( 123.491, 76.8733, 0.672293, 0.52 ) }
    dend_41 { pt3dadd( 124.059, 77.6652, -2.92296E-4, 0.96 ) }
    dend_41 { pt3dadd( 124.392, 78.1159, -0.410066, 1.4 ) }
    dend_41 { pt3dadd( 125.004, 78.8508, -1.1304, 1.11 ) }
    dend_41 { pt3dadd( 125.502, 79.3753, -1.71158, 0.59 ) }
    dend_41 { pt3dadd( 126.248, 80.0858, -2.5547, 0.52 ) }
    dend_41 { pt3dadd( 126.867, 80.6451, -3.2479, 0.44 ) }
    dend_41 { pt3dadd( 127.194, 80.9365, -3.61792, 0.44 ) }
    dend_41 { pt3dadd( 127.732, 81.4115, -4.22425, 0.37 ) }
    dend_41 { pt3dadd( 128.451, 82.0241, -5.02501, 0.74 ) }
    dend_41 { pt3dadd( 129.023, 82.4941, -5.66884, 1.03 ) }
    dend_41 { pt3dadd( 129.701, 83.0247, -6.37845, 1.18 ) }
    dend_41 { pt3dadd( 130.147, 83.3285, -6.78892, 1.18 ) }
    dend_41 { pt3dadd( 130.74, 83.6669, -7.30494, 0.66 ) }
    dend_41 { pt3dadd( 131.826, 84.1659, -8.24248, 0.44 ) }
    dend_41 { pt3dadd( 132.462, 84.405, -8.75118, 0.44 ) }
    dend_41 { pt3dadd( 133.062, 84.5846, -9.2368, 0.44 ) }
    dend_41 { pt3dadd( 134.089, 84.8605, -10.0409, 0.96 ) }
    dend_41 { pt3dadd( 135.269, 85.1919, -10.9226, 0.96 ) }
    dend_41 { pt3dadd( 136.204, 85.4755, -11.574, 0.88 ) }
    dend_41 { pt3dadd( 136.897, 85.7167, -12.0298, 0.29 ) }
    dend_41 { pt3dadd( 137.631, 86.0028, -12.5056, 0.29 ) }
    dend_41 { pt3dadd( 138.335, 86.3423, -12.9534, 0.29 ) }
    dend_41 { pt3dadd( 139.09, 86.7954, -13.3986, 0.88 ) }
    dend_41 { pt3dadd( 139.596, 87.1245, -13.6494, 0.88 ) }
    dend_41 { pt3dadd( 140.24, 87.5448, -13.944, 0.88 ) }
    dend_41 { pt3dadd( 140.977, 88.0034, -14.29, 0.66 ) }
    dend_41 { pt3dadd( 141.813, 88.5195, -14.6934, 0.29 ) }
    dend_41 { pt3dadd( 142.552, 88.9705, -15.0911, 0.81 ) }
    dend_41 { pt3dadd( 142.932, 89.2139, -15.3161, 0.81 ) }
    dend_41 { pt3dadd( 143.348, 89.5099, -15.5806, 0.81 ) }
    dend_41 { pt3dadd( 143.733, 89.8098, -15.8158, 0.81 ) }
    dend_41 { pt3dadd( 144.499, 90.4523, -16.2463, 0.29 ) }
    dend_41 { pt3dadd( 144.805, 90.7116, -16.4189, 0.29 ) }
    dend_41 { pt3dadd( 145.221, 91.0742, -16.6507, 0.66 ) }
    dend_41 { pt3dadd( 145.579, 91.3893, -16.8543, 0.66 ) }
    dend_41 { pt3dadd( 146.345, 92.0517, -17.2812, 0.29 ) }
    dend_41 { pt3dadd( 147.274, 92.846, -17.7853, 0.88 ) }
    dend_41 { pt3dadd( 147.696, 93.1922, -18.0167, 0.88 ) }
    dend_41 { pt3dadd( 148.544, 93.8543, -18.5014, 0.37 ) }
    dend_41 { pt3dadd( 149.244, 94.3641, -18.9232, 0.59 ) }
    dend_41 { pt3dadd( 149.673, 94.6556, -19.1862, 0.74 ) }
    dend_41 { pt3dadd( 150.104, 94.9291, -19.4691, 0.74 ) }
    dend_41 { pt3dadd( 150.861, 95.3917, -19.9523, 0.44 ) }
    dend_41 { pt3dadd( 151.34, 95.6615, -20.2322, 0.66 ) }
    dend_41 { pt3dadd( 151.959, 95.9867, -20.5581, 0.44 ) }
    dend_41 { pt3dadd( 152.442, 96.2267, -20.7977, 0.29 ) }
    dend_41 { pt3dadd( 152.813, 96.4025, -20.9644, 0.29 ) }
    dend_41 { pt3dadd( 153.528, 96.7334, -21.2524, 0.81 ) }
    dend_41 { pt3dadd( 154.203, 97.053, -21.5005, 0.81 ) }
    dend_41 { pt3dadd( 155.047, 97.4789, -21.8242, 0.29 ) }
    dend_41 { pt3dadd( 155.548, 97.7316, -22.031, 0.29 ) }
    dend_41 { pt3dadd( 156.553, 98.2194, -22.5047, 0.74 ) }
    dend_41 { pt3dadd( 157.013, 98.4201, -22.7305, 0.88 ) }
    dend_41 { pt3dadd( 157.628, 98.6457, -23.0487, 0.88 ) }
    dend_41 { pt3dadd( 158.264, 98.8554, -23.3941, 0.88 ) }
    dend_41 { pt3dadd( 159.264, 99.1699, -23.9975, 0.22 ) }
    dend_41 { pt3dadd( 159.907, 99.3809, -24.4152, 0.22 ) }
    dend_41 { pt3dadd( 160.708, 99.655, -24.9803, 0.81 ) }
    dend_41 { pt3dadd( 161.518, 99.9629, -25.5976, 1.03 ) }
    dend_41 { pt3dadd( 162.583, 100.411, -26.4379, 0.29 ) }
    dend_41 { pt3dadd( 163.284, 100.744, -27.021, 0.29 ) }
    dend_41 { pt3dadd( 164.05, 101.157, -27.6817, 1.03 ) }
    dend_41 { pt3dadd( 164.547, 101.451, -28.1123, 1.11 ) }
    dend_41 { pt3dadd( 165.342, 101.975, -28.8274, 0.96 ) }
    dend_41 { pt3dadd( 166.063, 102.496, -29.4824, 0.29 ) }
    dend_41 { pt3dadd( 166.616, 102.899, -29.9333, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_41 { pt3dadd( 167.214, 103.319, -30.354, 0.29 ) }
    dend_41 { pt3dadd( 167.725, 103.664, -30.6693, 0.29 ) }
    dend_41 { pt3dadd( 168.7, 104.3, -31.1827, 1.11 ) }
    dend_41 { pt3dadd( 169.082, 104.544, -31.3599, 1.25 ) }
    dend_41 { pt3dadd( 170.335, 105.351, -31.9115, 0.29 ) }
    dend_41 { pt3dadd( 170.964, 105.739, -32.1592, 0.22 ) }
    dend_41 { pt3dadd( 171.401, 105.997, -32.3264, 0.96 ) }
    dend_41 { pt3dadd( 171.834, 106.246, -32.4765, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 56.3212, 51.9408, 4.17099, 0.44 ) }
    dend_40 { pt3dadd( 57.4796, 52.9198, 4.44927, 0.44 ) }
    dend_40 { pt3dadd( 58.2773, 53.54, 4.64838, 0.44 ) }
    dend_40 { pt3dadd( 58.9776, 54.0489, 4.83614, 0.59 ) }
    dend_40 { pt3dadd( 59.6124, 54.4876, 5.02334, 0.59 ) }
    dend_40 { pt3dadd( 60.137, 54.8257, 5.20817, 0.37 ) }
    dend_40 { pt3dadd( 60.8401, 55.2372, 5.47829, 0.74 ) }
    dend_40 { pt3dadd( 61.374, 55.5041, 5.70665, 0.74 ) }
    dend_40 { pt3dadd( 61.7737, 55.6899, 5.88803, 0.96 ) }
    dend_40 { pt3dadd( 62.2023, 55.8884, 6.09788, 0.96 ) }
    dend_40 { pt3dadd( 63.2953, 56.4292, 6.67231, 0.29 ) }
    dend_40 { pt3dadd( 63.8923, 56.7665, 7.04328, 0.29 ) }
    dend_40 { pt3dadd( 64.6535, 57.2578, 7.58941, 0.88 ) }
    dend_40 { pt3dadd( 65.048, 57.5297, 7.88409, 0.88 ) }
    dend_40 { pt3dadd( 65.4519, 57.8248, 8.18963, 0.59 ) }
    dend_40 { pt3dadd( 65.866, 58.1224, 8.48072, 0.44 ) }
    dend_40 { pt3dadd( 66.4254, 58.5402, 8.84954, 0.29 ) }
    dend_40 { pt3dadd( 67.0963, 59.0572, 9.29688, 1.33 ) }
    dend_40 { pt3dadd( 67.4019, 59.3006, 9.50561, 1.55 ) }
    dend_40 { pt3dadd( 67.6774, 59.5341, 9.69737, 1.55 ) }
    dend_40 { pt3dadd( 68.365, 60.1629, 10.1776, 0.88 ) }
    dend_40 { pt3dadd( 69.0134, 60.8694, 10.7006, 0.29 ) }
    dend_40 { pt3dadd( 69.2891, 61.2301, 10.9615, 0.29 ) }
    dend_40 { pt3dadd( 69.7846, 62.0157, 11.5183, 0.96 ) }
    dend_40 { pt3dadd( 70.0461, 62.4885, 11.8516, 1.11 ) }
    dend_40 { pt3dadd( 70.3106, 62.9917, 12.2118, 0.81 ) }
    dend_40 { pt3dadd( 70.8428, 64.0395, 12.9484, 0.29 ) }
    dend_40 { pt3dadd( 71.1267, 64.5393, 13.2862, 0.29 ) }
    dend_40 { pt3dadd( 71.4231, 65.0087, 13.5712, 0.96 ) }
    dend_40 { pt3dadd( 71.6368, 65.327, 13.7386, 0.96 ) }
    dend_40 { pt3dadd( 71.9783, 65.831, 13.9535, 0.96 ) }
    dend_40 { pt3dadd( 72.3633, 66.4042, 14.1391, 0.29 ) }
    dend_40 { pt3dadd( 72.7496, 66.9964, 14.2918, 0.29 ) }
    dend_40 { pt3dadd( 73.3075, 67.8909, 14.4961, 0.96 ) }
    dend_40 { pt3dadd( 73.6042, 68.3792, 14.6044, 1.18 ) }
    dend_40 { pt3dadd( 73.9117, 68.8647, 14.7404, 0.81 ) }
    dend_40 { pt3dadd( 74.2953, 69.4686, 14.9344, 0.29 ) }
    dend_40 { pt3dadd( 74.8459, 70.3237, 15.2548, 0.29 ) }
    dend_40 { pt3dadd( 75.3389, 71.0369, 15.5601, 0.96 ) }
    dend_40 { pt3dadd( 75.6481, 71.4269, 15.7456, 0.96 ) }
    dend_40 { pt3dadd( 76.5147, 72.3885, 16.2497, 0.37 ) }
    dend_40 { pt3dadd( 77.0565, 72.9233, 16.558, 0.37 ) }
    dend_40 { pt3dadd( 77.5062, 73.3138, 16.8046, 0.37 ) }
    dend_40 { pt3dadd( 77.9421, 73.6618, 17.0248, 0.29 ) }
    dend_40 { pt3dadd( 78.7673, 74.2915, 17.4, 0.96 ) }
    dend_40 { pt3dadd( 79.2107, 74.6138, 17.5721, 1.18 ) }
    dend_40 { pt3dadd( 79.6549, 74.9224, 17.7071, 1.18 ) }
    dend_40 { pt3dadd( 80.0496, 75.178, 17.8167, 1.18 ) }
    dend_40 { pt3dadd( 80.5804, 75.519, 17.9542, 0.66 ) }
    dend_40 { pt3dadd( 81.3628, 76.0783, 18.1613, 0.29 ) }
    dend_40 { pt3dadd( 81.9535, 76.5526, 18.3216, 0.29 ) }
    dend_40 { pt3dadd( 82.5297, 77.0654, 18.4831, 0.29 ) }
    dend_40 { pt3dadd( 82.9421, 77.4591, 18.5968, 0.96 ) }
    dend_40 { pt3dadd( 83.2381, 77.7596, 18.6812, 0.96 ) }
    dend_40 { pt3dadd( 84.1082, 78.6497, 18.9897, 0.29 ) }
    dend_40 { pt3dadd( 84.4309, 78.989, 19.1266, 0.29 ) }
    dend_40 { pt3dadd( 84.8911, 79.4669, 19.3394, 0.74 ) }
    dend_40 { pt3dadd( 85.436, 80.0032, 19.6192, 0.88 ) }
    dend_40 { pt3dadd( 85.923, 80.4484, 19.8808, 0.88 ) }
    dend_40 { pt3dadd( 86.7879, 81.1597, 20.3446, 0.52 ) }
    dend_40 { pt3dadd( 87.3164, 81.5469, 20.6216, 1.18 ) }
    dend_40 { pt3dadd( 87.6941, 81.811, 20.8079, 1.4 ) }
    dend_40 { pt3dadd( 88.0551, 82.0559, 20.9678, 1.4 ) }
    dend_40 { pt3dadd( 88.5364, 82.3951, 21.1712, 1.03 ) }
    dend_40 { pt3dadd( 89.4441, 83.0717, 21.4898, 0.29 ) }
    dend_40 { pt3dadd( 89.9129, 83.4406, 21.6122, 0.29 ) }
    dend_40 { pt3dadd( 90.3711, 83.8086, 21.7131, 0.81 ) }
    dend_40 { pt3dadd( 90.7693, 84.1244, 21.7868, 1.03 ) }
    dend_40 { pt3dadd( 91.3334, 84.5411, 21.8725, 0.44 ) }
    dend_40 { pt3dadd( 92.1547, 85.0724, 21.9739, 0.29 ) }
    dend_40 { pt3dadd( 92.7976, 85.4579, 22.0519, 0.59 ) }
    dend_40 { pt3dadd( 93.2235, 85.6965, 22.1042, 0.59 ) }
    dend_40 { pt3dadd( 93.8027, 86.0037, 22.1746, 0.59 ) }
    dend_40 { pt3dadd( 94.4662, 86.3487, 22.2482, 0.74 ) }
    dend_40 { pt3dadd( 95.2061, 86.7324, 22.3434, 0.44 ) }
    dend_40 { pt3dadd( 96.2331, 87.3144, 22.4971, 0.81 ) }
    dend_40 { pt3dadd( 96.6326, 87.5781, 22.5783, 0.96 ) }
    dend_40 { pt3dadd( 97.0348, 87.8807, 22.6825, 0.96 ) }
    dend_40 { pt3dadd( 97.802, 88.5338, 22.9189, 0.44 ) }
    dend_40 { pt3dadd( 98.639, 89.3029, 23.1992, 0.44 ) }
    dend_40 { pt3dadd( 99.4744, 90.089, 23.457, 0.96 ) }
    dend_40 { pt3dadd( 100.311, 90.8784, 23.6717, 1.55 ) }
    dend_40 { pt3dadd( 100.841, 91.3839, 23.7905, 1.55 ) }
    dend_40 { pt3dadd( 101.491, 92.012, 23.8976, 1.03 ) }
    dend_40 { pt3dadd( 102.179, 92.6874, 23.9584, 0.37 ) }
    dend_40 { pt3dadd( 102.933, 93.4209, 23.9504, 0.96 ) }
    dend_40 { pt3dadd( 103.544, 94.0042, 23.9031, 0.96 ) }
    dend_40 { pt3dadd( 103.945, 94.3803, 23.8396, 0.96 ) }
    dend_40 { pt3dadd( 104.592, 94.9858, 23.7182, 0.52 ) }
    dend_40 { pt3dadd( 105.074, 95.4369, 23.6278, 0.44 ) }
    dend_40 { pt3dadd( 105.676, 95.986, 23.5222, 0.44 ) }
    dend_40 { pt3dadd( 106.544, 96.7404, 23.4495, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_40 { pt3dadd( 107.101, 97.1979, 23.4631, 1.25 ) }
    dend_40 { pt3dadd( 107.818, 97.7939, 23.5571, 0.59 ) }
    dend_40 { pt3dadd( 108.395, 98.285, 23.7052, 0.37 ) }
    dend_40 { pt3dadd( 108.91, 98.7403, 23.8961, 0.37 ) }
    dend_40 { pt3dadd( 109.705, 99.4641, 24.287, 0.66 ) }
    dend_40 { pt3dadd( 110.356, 100.045, 24.6978, 0.52 ) }
    dend_40 { pt3dadd( 110.763, 100.411, 25.0214, 0.37 ) }
    dend_40 { pt3dadd( 111.403, 100.999, 25.6144, 0.37 ) }
    dend_40 { pt3dadd( 111.882, 101.435, 26.0891, 0.37 ) }
    dend_40 { pt3dadd( 112.328, 101.832, 26.5369, 0.74 ) }
    dend_40 { pt3dadd( 113.126, 102.503, 27.308, 0.59 ) }
    dend_40 { pt3dadd( 114.064, 103.252, 28.2126, 0.96 ) }
    dend_40 { pt3dadd( 114.756, 103.798, 28.8908, 1.18 ) }
    dend_40 { pt3dadd( 115.048, 104.038, 29.1891, 1.18 ) }
    dend_40 { pt3dadd( 115.532, 104.468, 29.6909, 0.81 ) }
    dend_40 { pt3dadd( 115.93, 104.857, 30.0898, 0.81 ) }
    dend_40 { pt3dadd( 116.356, 105.309, 30.4835, 1.03 ) }
    dend_40 { pt3dadd( 116.964, 105.963, 30.9801, 0.59 ) }
    dend_40 { pt3dadd( 117.505, 106.538, 31.4029, 0.59 ) }
    dend_40 { pt3dadd( 118.022, 107.032, 31.7883, 0.59 ) }
    dend_40 { pt3dadd( 118.402, 107.36, 32.0461, 1.18 ) }
    dend_40 { pt3dadd( 118.743, 107.618, 32.2517, 1.18 ) }
    dend_40 { pt3dadd( 119.271, 107.973, 32.5381, 0.88 ) }
    dend_40 { pt3dadd( 119.898, 108.369, 32.854, 0.66 ) }
    dend_40 { pt3dadd( 120.921, 109.061, 33.3211, 0.59 ) }
    dend_40 { pt3dadd( 121.633, 109.59, 33.6105, 0.59 ) }
    dend_40 { pt3dadd( 122.028, 109.909, 33.7519, 1.11 ) }
    dend_40 { pt3dadd( 122.615, 110.401, 33.9127, 1.18 ) }
    dend_40 { pt3dadd( 123.063, 110.786, 34.01, 1.18 ) }
    dend_40 { pt3dadd( 123.801, 111.405, 34.1066, 1.03 ) }
    dend_40 { pt3dadd( 124.44, 111.93, 34.1516, 0.66 ) }
    dend_40 { pt3dadd( 125.014, 112.405, 34.1466, 0.66 ) }
    dend_40 { pt3dadd( 125.937, 113.191, 34.0702, 1.25 ) }
    dend_40 { pt3dadd( 126.332, 113.519, 34.0121, 1.25 ) }
    dend_40 { pt3dadd( 127.286, 114.29, 33.8383, 0.81 ) }
    dend_40 { pt3dadd( 127.958, 114.827, 33.7072, 0.96 ) }
    dend_40 { pt3dadd( 129.061, 115.742, 33.4584, 0.52 ) }
    dend_40 { pt3dadd( 129.908, 116.499, 33.2369, 0.52 ) }
    dend_40 { pt3dadd( 130.417, 116.998, 33.0791, 0.74 ) }
    dend_40 { pt3dadd( 130.935, 117.531, 32.9011, 0.74 ) }
    dend_40 { pt3dadd( 131.353, 117.992, 32.7712, 0.37 ) }
    dend_40 { pt3dadd( 136.72, 125.753, 35.5703, 0.37 ) }
    dend_40 { pt3dadd( 141.952, 133.869, 37.3909, 0.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 43/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 1.26017, -173.882, 27.7727, 0.52 ) }
    dend_6 { pt3dadd( 2.07904, -174.811, 27.9725, 0.52 ) }
    dend_6 { pt3dadd( 2.89777, -175.812, 28.1839, 0.52 ) }
    dend_6 { pt3dadd( 3.81089, -177.039, 28.3495, 0.52 ) }
    dend_6 { pt3dadd( 4.23036, -177.635, 28.3927, 0.52 ) }
    dend_6 { pt3dadd( 5.17871, -178.981, 28.4903, 0.52 ) }
    dend_6 { pt3dadd( 5.83728, -179.916, 28.5581, 0.52 ) }
    dend_6 { pt3dadd( 6.1531, -180.456, 28.5928, 0.52 ) }
    dend_6 { pt3dadd( 6.70908, -181.549, 28.6517, 0.52 ) }
    dend_6 { pt3dadd( 7.08484, -182.314, 28.6367, 0.52 ) }
    dend_6 { pt3dadd( 12.0889, -190.72, 29.4295, 0.52 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 54/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 1.26017, -173.882, 27.7727, 0.66 ) }
    dend_5 { pt3dadd( 0.777185, -175.328, 27.7377, 0.66 ) }
    dend_5 { pt3dadd( 0.308202, -176.817, 27.7013, 0.66 ) }
    dend_5 { pt3dadd( -0.338738, -178.895, 27.6515, 0.66 ) }
    dend_5 { pt3dadd( -0.834679, -180.497, 27.6157, 0.66 ) }
    dend_5 { pt3dadd( -1.01644, -181.187, 27.6174, 0.66 ) }
    dend_5 { pt3dadd( -1.1366, -181.74, 27.6284, 0.66 ) }
    dend_5 { pt3dadd( -1.21446, -182.379, 27.6515, 0.66 ) }
    dend_5 { pt3dadd( -1.19711, -183.115, 27.6914, 0.66 ) }
    dend_5 { pt3dadd( -1.0269, -184.355, 27.8251, 0.66 ) }
    dend_5 { pt3dadd( -0.803216, -185.72, 28.0032, 0.66 ) }
    dend_5 { pt3dadd( -0.709425, -186.36, 28.0887, 0.66 ) }
    dend_5 { pt3dadd( -0.611093, -187.116, 28.1838, 0.66 ) }
    dend_5 { pt3dadd( -0.463806, -188.378, 28.3277, 0.66 ) }
    dend_5 { pt3dadd( -0.338369, -189.734, 28.4564, 0.66 ) }
    dend_5 { pt3dadd( -0.174515, -191.296, 28.5345, 0.66 ) }
    dend_5 { pt3dadd( -0.0260484, -192.521, 28.6259, 0.66 ) }
    dend_5 { pt3dadd( 0.194949, -193.857, 28.7689, 0.66 ) }
    dend_5 { pt3dadd( 0.466229, -195.123, 28.9475, 0.66 ) }
    dend_5 { pt3dadd( 1.04917, -197.155, 29.2873, 0.66 ) }
    dend_5 { pt3dadd( 1.62055, -198.677, 29.5671, 0.66 ) }
    dend_5 { pt3dadd( 2.55651, -200.709, 29.976, 0.66 ) }
    dend_5 { pt3dadd( 3.23186, -201.992, 30.3179, 0.66 ) }
    dend_5 { pt3dadd( 3.75136, -202.899, 30.5902, 0.66 ) }
    dend_5 { pt3dadd( 4.62112, -204.307, 31.0651, 0.66 ) }
    dend_5 { pt3dadd( 5.19529, -205.188, 31.3991, 0.66 ) }
    dend_5 { pt3dadd( 5.92176, -206.449, 31.8795, 0.66 ) }
    dend_5 { pt3dadd( 6.60246, -207.728, 32.1965, 0.66 ) }
    dend_5 { pt3dadd( 7.54615, -216.995, 35.1563, 0.66 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 83/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 171.834, 106.246, -32.4765, 0.22 ) }
    dend_43 { pt3dadd( 172.746, 106.736, -32.5216, 0.22 ) }
    dend_43 { pt3dadd( 173.354, 107.058, -32.5535, 0.66 ) }
    dend_43 { pt3dadd( 173.719, 107.266, -32.5858, 0.66 ) }
    dend_43 { pt3dadd( 175.497, 108.276, -32.7962, 0.22 ) }
    dend_43 { pt3dadd( 176.266, 108.729, -32.8967, 0.88 ) }
    dend_43 { pt3dadd( 176.599, 108.927, -32.9477, 1.03 ) }
    dend_43 { pt3dadd( 176.967, 109.145, -33.0195, 1.03 ) }
    dend_43 { pt3dadd( 178.251, 109.896, -33.3398, 0.22 ) }
    dend_43 { pt3dadd( 179.107, 110.398, -33.593, 0.22 ) }
    dend_43 { pt3dadd( 179.881, 110.854, -33.8567, 0.44 ) }
    dend_43 { pt3dadd( 180.285, 111.093, -34.0005, 0.44 ) }
    dend_43 { pt3dadd( 181.319, 111.691, -34.3737, 0.22 ) }
    dend_43 { pt3dadd( 182.217, 112.189, -34.696, 0.74 ) }
    dend_43 { pt3dadd( 182.608, 112.4, -34.8382, 0.88 ) }
    dend_43 { pt3dadd( 182.957, 112.611, -34.9617, 0.88 ) }
    dend_43 { pt3dadd( 183.685, 113.069, -35.2094, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_43 { pt3dadd( 184.403, 113.563, -35.4494, 0.29 ) }
    dend_43 { pt3dadd( 184.775, 113.843, -35.5839, 0.59 ) }
    dend_43 { pt3dadd( 185.28, 114.243, -35.781, 0.59 ) }
    dend_43 { pt3dadd( 186.172, 115.007, -36.1913, 0.22 ) }
    dend_43 { pt3dadd( 186.641, 115.427, -36.4268, 0.81 ) }
    dend_43 { pt3dadd( 187.072, 115.826, -36.65, 1.03 ) }
    dend_43 { pt3dadd( 187.514, 116.236, -36.8679, 1.03 ) }
    dend_43 { pt3dadd( 188.461, 117.113, -37.3425, 0.44 ) }
    dend_43 { pt3dadd( 189.062, 117.658, -37.6494, 0.52 ) }
    dend_43 { pt3dadd( 189.939, 118.438, -38.1343, 0.22 ) }
    dend_43 { pt3dadd( 190.588, 119.009, -38.483, 0.37 ) }
    dend_43 { pt3dadd( 191.076, 119.425, -38.7411, 0.22 ) }
    dend_43 { pt3dadd( 191.762, 119.997, -39.1015, 0.81 ) }
    dend_43 { pt3dadd( 192.209, 120.346, -39.3406, 0.81 ) }
    dend_43 { pt3dadd( 193.201, 121.097, -39.8619, 0.44 ) }
    dend_43 { pt3dadd( 193.775, 121.524, -40.1565, 0.37 ) }
    dend_43 { pt3dadd( 194.486, 122.038, -40.516, 0.59 ) }
    dend_43 { pt3dadd( 194.878, 122.321, -40.7043, 0.37 ) }
    dend_43 { pt3dadd( 196.409, 123.412, -41.3488, 0.29 ) }
    dend_43 { pt3dadd( 197.855, 124.489, -41.8949, 0.29 ) }
    dend_43 { pt3dadd( 198.619, 125.103, -42.1522, 0.88 ) }
    dend_43 { pt3dadd( 198.934, 125.364, -42.2518, 1.11 ) }
    dend_43 { pt3dadd( 199.4, 125.754, -42.3993, 0.81 ) }
    dend_43 { pt3dadd( 200.862, 126.99, -42.8694, 0.22 ) }
    dend_43 { pt3dadd( 201.825, 127.818, -43.1796, 0.22 ) }
    dend_43 { pt3dadd( 203.174, 128.95, -43.7095, 0.22 ) }
    dend_43 { pt3dadd( 204.237, 129.808, -44.2549, 0.22 ) }
    dend_43 { pt3dadd( 205.169, 130.525, -44.8171, 0.88 ) }
    dend_43 { pt3dadd( 205.489, 130.749, -45.0394, 1.25 ) }
    dend_43 { pt3dadd( 205.844, 130.973, -45.3129, 1.25 ) }
    dend_43 { pt3dadd( 207.15, 131.691, -46.3783, 0.44 ) }
    dend_43 { pt3dadd( 208.542, 132.382, -47.532, 0.22 ) }
    dend_43 { pt3dadd( 209.082, 132.647, -47.9781, 0.44 ) }
    dend_43 { pt3dadd( 209.909, 133.055, -48.6279, 0.29 ) }
    dend_43 { pt3dadd( 210.53, 133.365, -49.0967, 0.66 ) }
    dend_43 { pt3dadd( 211.389, 133.801, -49.6981, 0.52 ) }
    dend_43 { pt3dadd( 211.979, 134.112, -50.0587, 0.29 ) }
    dend_43 { pt3dadd( 212.926, 134.647, -50.6371, 0.96 ) }
    dend_43 { pt3dadd( 213.667, 135.083, -51.1177, 0.96 ) }
    dend_43 { pt3dadd( 214.037, 135.309, -51.3666, 0.96 ) }
    dend_43 { pt3dadd( 216.14, 136.649, -52.861, 0.22 ) }
    dend_43 { pt3dadd( 217.454, 137.511, -53.8108, 0.22 ) }
    dend_43 { pt3dadd( 218.64, 138.311, -54.6814, 0.66 ) }
    dend_43 { pt3dadd( 219.202, 138.692, -55.0808, 0.66 ) }
    dend_43 { pt3dadd( 220.487, 139.578, -55.9991, 0.22 ) }
    dend_43 { pt3dadd( 221.096, 140.003, -56.4433, 0.66 ) }
    dend_43 { pt3dadd( 221.695, 140.411, -56.877, 0.66 ) }
    dend_43 { pt3dadd( 222.234, 140.748, -57.2669, 0.37 ) }
    dend_43 { pt3dadd( 223.618, 141.552, -58.2019, 0.22 ) }
    dend_43 { pt3dadd( 224.494, 142.024, -58.7474, 0.66 ) }
    dend_43 { pt3dadd( 225.367, 142.45, -59.2371, 0.66 ) }
    dend_43 { pt3dadd( 227.091, 143.162, -60.2497, 0.22 ) }
    dend_43 { pt3dadd( 227.915, 143.458, -60.7885, 0.22 ) }
    dend_43 { pt3dadd( 228.501, 143.629, -61.1955, 0.74 ) }
    dend_43 { pt3dadd( 229.153, 143.765, -61.6763, 0.88 ) }
    dend_43 { pt3dadd( 229.578, 143.824, -61.9936, 0.88 ) }
    dend_43 { pt3dadd( 232.02, 144.012, -63.7008, 0.29 ) }
    dend_43 { pt3dadd( 232.686, 144.034, -64.1552, 0.44 ) }
    dend_43 { pt3dadd( 233.593, 144.062, -64.7483, 0.22 ) }
    dend_43 { pt3dadd( 234.234, 144.098, -65.1423, 0.59 ) }
    dend_43 { pt3dadd( 234.639, 144.135, -65.3583, 0.59 ) }
    dend_43 { pt3dadd( 236.593, 144.384, -66.2209, 0.22 ) }
    dend_43 { pt3dadd( 237.65, 144.539, -66.582, 0.66 ) }
    dend_43 { pt3dadd( 238.433, 144.673, -66.8226, 0.66 ) }
    dend_43 { pt3dadd( 240.487, 145.08, -67.4596, 0.15 ) }
    dend_43 { pt3dadd( 242.332, 145.492, -68.0253, 0.15 ) }
    dend_43 { pt3dadd( 243.406, 145.755, -68.3246, 0.59 ) }
    dend_43 { pt3dadd( 243.898, 145.885, -68.4612, 0.88 ) }
    dend_43 { pt3dadd( 246.221, 146.468, -68.939, 0.22 ) }
    dend_43 { pt3dadd( 247.087, 146.671, -69.087, 0.59 ) }
    dend_43 { pt3dadd( 247.389, 146.736, -69.1284, 0.59 ) }
    dend_43 { pt3dadd( 249.347, 147.117, -69.3511, 0.22 ) }
    dend_43 { pt3dadd( 250.972, 147.41, -69.4961, 0.22 ) }
    dend_43 { pt3dadd( 252.819, 147.716, -69.6241, 0.22 ) }
    dend_43 { pt3dadd( 253.72, 147.823, -69.6532, 0.74 ) }
    dend_43 { pt3dadd( 254.392, 147.887, -69.6471, 0.88 ) }
    dend_43 { pt3dadd( 254.774, 147.915, -69.6465, 0.59 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 77/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 171.834, 106.246, -32.4765, 0.22 ) }
    dend_42 { pt3dadd( 173.068, 105.702, -32.4892, 0.22 ) }
    dend_42 { pt3dadd( 173.672, 105.41, -32.4823, 0.74 ) }
    dend_42 { pt3dadd( 173.942, 105.275, -32.4761, 0.74 ) }
    dend_42 { pt3dadd( 175.874, 104.233, -32.4195, 0.22 ) }
    dend_42 { pt3dadd( 176.409, 103.923, -32.4023, 0.22 ) }
    dend_42 { pt3dadd( 177.251, 103.41, -32.3382, 0.81 ) }
    dend_42 { pt3dadd( 177.653, 103.135, -32.2877, 0.81 ) }
    dend_42 { pt3dadd( 178.078, 102.84, -32.2187, 0.81 ) }
    dend_42 { pt3dadd( 179.196, 102.088, -32.0036, 0.22 ) }
    dend_42 { pt3dadd( 179.881, 101.657, -31.8501, 0.22 ) }
    dend_42 { pt3dadd( 180.745, 101.161, -31.6619, 0.52 ) }
    dend_42 { pt3dadd( 181.101, 100.986, -31.5953, 0.52 ) }
    dend_42 { pt3dadd( 181.978, 100.609, -31.43, 0.22 ) }
    dend_42 { pt3dadd( 182.722, 100.316, -31.2929, 0.22 ) }
    dend_42 { pt3dadd( 183.492, 100.043, -31.1585, 0.66 ) }
    dend_42 { pt3dadd( 184.007, 99.871, -31.0819, 0.66 ) }
    dend_42 { pt3dadd( 185.252, 99.4605, -30.9476, 0.22 ) }
    dend_42 { pt3dadd( 185.718, 99.3057, -30.8947, 0.66 ) }
    dend_42 { pt3dadd( 186.215, 99.1405, -30.8414, 0.88 ) }
    dend_42 { pt3dadd( 186.668, 99.0131, -30.8234, 0.88 ) }
    dend_42 { pt3dadd( 187.031, 98.9376, -30.8298, 0.88 ) }
    dend_42 { pt3dadd( 187.468, 98.8807, -30.8591, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_42 { pt3dadd( 187.986, 98.8446, -30.9102, 0.22 ) }
    dend_42 { pt3dadd( 189.596, 98.7772, -31.1066, 0.22 ) }
    dend_42 { pt3dadd( 190.828, 98.7632, -31.2571, 0.96 ) }
    dend_42 { pt3dadd( 191.298, 98.7699, -31.3134, 0.96 ) }
    dend_42 { pt3dadd( 192.984, 98.8221, -31.5031, 0.22 ) }
    dend_42 { pt3dadd( 193.501, 98.8481, -31.5564, 0.52 ) }
    dend_42 { pt3dadd( 193.894, 98.8734, -31.5914, 0.52 ) }
    dend_42 { pt3dadd( 195.886, 99.024, -31.7463, 0.22 ) }
    dend_42 { pt3dadd( 196.548, 99.0701, -31.7844, 0.81 ) }
    dend_42 { pt3dadd( 198.196, 99.1449, -31.8376, 0.22 ) }
    dend_42 { pt3dadd( 198.963, 99.174, -31.8437, 0.22 ) }
    dend_42 { pt3dadd( 199.992, 99.1958, -31.8274, 0.74 ) }
    dend_42 { pt3dadd( 200.405, 99.1939, -31.8097, 1.03 ) }
    dend_42 { pt3dadd( 200.714, 99.1842, -31.7878, 1.03 ) }
    dend_42 { pt3dadd( 202.405, 99.0863, -31.6347, 0.22 ) }
    dend_42 { pt3dadd( 202.991, 99.0431, -31.5679, 0.59 ) }
    dend_42 { pt3dadd( 203.359, 99.0145, -31.5241, 0.59 ) }
    dend_42 { pt3dadd( 205.469, 98.8551, -31.261, 0.22 ) }
    dend_42 { pt3dadd( 206.275, 98.7997, -31.1592, 0.59 ) }
    dend_42 { pt3dadd( 206.665, 98.7774, -31.1149, 0.59 ) }
    dend_42 { pt3dadd( 208.586, 98.6974, -30.9578, 0.22 ) }
    dend_42 { pt3dadd( 209.254, 98.6665, -30.8976, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_35, dend_30, dend_29, dend_28, dend_23, dend_0, dend_49, dend_36, dend_34, dend_31, dend_25, dend_24, dend_16, dend_1, dend_53, dend_50, dend_46, dend_37, dend_33, dend_32, dend_27, dend_26, dend_20, dend_17, dend_11, dend_2, dend_55, dend_54, dend_52, dend_51, dend_48, dend_47, dend_45, dend_38, dend_22, dend_21, dend_19, dend_18, dend_13, dend_12, dend_8, dend_3, dend_44, dend_39, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_41, dend_40, dend_6, dend_5, dend_43, dend_42]}
    ModelViewParmSubset_2 = new SectionList()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_35, dend_30, dend_29, dend_28, dend_23, dend_0, dend_49, dend_36, dend_34, dend_31, dend_25, dend_24, dend_16, dend_1, dend_53, dend_50, dend_46, dend_37, dend_33, dend_32, dend_27, dend_26, dend_20, dend_17, dend_11, dend_2, dend_55, dend_54, dend_52, dend_51, dend_48, dend_47, dend_45, dend_38, dend_22, dend_21, dend_19, dend_18, dend_13, dend_12, dend_8, dend_3, dend_44, dend_39, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_41, dend_40, dend_6, dend_5, dend_43, dend_42]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_35, dend_30, dend_29, dend_28, dend_23, dend_0, axon_0, dend_49, dend_36, dend_34, dend_31, dend_25, dend_24, dend_16, dend_1, axon_1, dend_53, dend_50, dend_46, dend_37, dend_33, dend_32, dend_27, dend_26, dend_20, dend_17, dend_11, dend_2, dend_55, dend_54, dend_52, dend_51, dend_48, dend_47, dend_45, dend_38, dend_22, dend_21, dend_19, dend_18, dend_13, dend_12, dend_8, dend_3, dend_44, dend_39, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_41, dend_40, dend_6, dend_5, dend_43, dend_42]}
    ModelViewParmSubset_5 = new SectionList()
    dend_35 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_29 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_28 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_34 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_24 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_1 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_46 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_26 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_55 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_54 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_52 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_51 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_48 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_45 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_22 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_21 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_12 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_44 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_15 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_14 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_4 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_41 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_40 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_43 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_35 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_30 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_16 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_49 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_53 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_23 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_36 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_17 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_50 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_37 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_25 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_38 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_39 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_11 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_13 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_47 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_9 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_10 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_42 OneSecGrp_SectionRef_59.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 9
    dend_28 nseg = 9
    dend_34 nseg = 7
    dend_24 nseg = 7
    dend_1 nseg = 3
    dend_46 nseg = 5
    dend_33 nseg = 5
    dend_32 nseg = 9
    dend_27 nseg = 7
    dend_26 nseg = 5
    dend_20 nseg = 9
    dend_55 nseg = 11
    dend_54 nseg = 7
    dend_52 nseg = 7
    dend_51 nseg = 11
    dend_48 nseg = 3
    dend_45 nseg = 9
    dend_22 nseg = 3
    dend_21 nseg = 3
    dend_19 nseg = 11
    dend_18 nseg = 7
    dend_12 nseg = 7
    dend_8 nseg = 7
    dend_3 nseg = 3
    dend_44 nseg = 7
    dend_15 nseg = 5
    dend_14 nseg = 7
    dend_7 nseg = 11
    dend_4 nseg = 3
    dend_41 nseg = 7
    dend_40 nseg = 7
    dend_5 nseg = 3
    dend_43 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L6_MC_8f96a2b924_0_0


