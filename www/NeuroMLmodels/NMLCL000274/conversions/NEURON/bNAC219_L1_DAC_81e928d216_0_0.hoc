// Cell: bNAC219_L1_DAC_81e928d216_0_0
/*
{
  "id" : "bNAC219_L1_DAC_81e928d216_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.11062, -5.58376, 0.0, 2.32289", "1.87318, -5.06732, 0.0, 4.26744", "1.63575, -4.55088, 0.0, 6.34441", "1.39832, -4.03444, 0.0, 7.43343", "1.16088, -3.518, 0.0, 8.27263", "0.923446, -3.00155, 0.0, 9.07202", "0.686011, -2.48511, 0.0, 9.73854", "0.448576, -1.96867, 0.0, 10.2442", "0.211142, -1.45223, 0.0, 10.6418", "-0.026293, -0.935787, 0.0, 11.0394", "-0.263728, -0.419346, 0.0, 11.2878", "-0.501163, 0.097096, 0.0, 11.372", "-0.738597, 0.613538, 0.0, 11.4346", "-0.976032, 1.12998, 0.0, 11.3996", "-1.21347, 1.64642, 0.0, 11.0085", "-1.4509, 2.16286, 0.0, 10.3492", "-1.68834, 2.6793, 0.0, 9.68916", "-1.92577, 3.19575, 0.0, 8.73406", "-2.16321, 3.71219, 0.0, 7.23475", "-2.40064, 4.22863, 0.0, 5.34976", "-2.63808, 4.74507, 0.0, 3.00569" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.50627, 3.0038, -14.83, 4.13", "-1.50627, 3.0038, -14.83, 4.13", "-1.85771, 3.26797, -16.3599, 4.13", "-2.20375, 3.52809, -17.8663, 4.13", "-2.672, 3.88008, -19.9046, 4.13" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999984658439006
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.323727, -2.7462, 13.78, 0.92", "0.323727, -2.7462, 13.78, 0.92", "0.626344, -4.16995, 13.8687, 0.92", "0.94236, -5.65674, 13.9613, 0.92", "1.12911, -6.53534, 14.0161, 1.15", "1.36568, -7.64836, 14.0854, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999984658439006
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "4.42373, 1.0138, -11.42, 0.91", "4.42373, 1.0138, -11.42, 0.91", "6.35558, 0.920064, -10.7094, 0.68", "8.11321, 0.803932, -10.1482, 0.91", "10.4779, 0.552568, -9.61245, 0.91", "12.44, 0.310876, -9.36115, 0.68", "13.7928, 0.126503, -9.28285, 0.45", "14.7374, -0.0119359, -9.31013, 0.45", "16.5348, -0.281533, -9.44749, 0.91", "18.613, -0.605504, -9.76037, 0.91", "20.8408, -1.01596, -10.4232, 0.91", "21.9809, -1.28656, -10.8801, 0.68", "23.7196, -1.7874, -11.659, 0.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999984658439006
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "2.30373, -4.7262, -7.53, 1.36", "2.30373, -4.7262, -7.53, 1.36", "2.68685, -5.48005, -8.62285, 1.14", "3.19401, -6.53525, -9.98852, 0.91", "3.88268, -7.99996, -11.7184, 1.14", "4.82082, -9.99528, -14.0749, 0.91", "5.48307, -11.4038, -15.7383, 1.14", "6.08204, -12.6935, -17.2482, 0.91", "6.53759, -13.7001, -18.4051, 1.14", "6.81046, -14.3511, -19.0713, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999984658439006
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-5.83627, -1.0262, -4.22, 1.59", "-5.83627, -1.0262, -4.22, 1.59", "-7.00814, -1.19678, -4.86213, 1.14", "-8.80162, -1.40697, -5.64579, 0.68", "-10.234, -1.54887, -6.16781, 0.68", "-11.7371, -1.7173, -6.59073, 0.68", "-13.5656, -1.99933, -6.95734, 0.91", "-15.8038, -2.44411, -7.12888, 0.68", "-17.5685, -2.85481, -7.06294, 0.68", "-18.6665, -3.13854, -6.92716, 0.45", "-20.3592, -3.59698, -6.673, 0.45", "-22.285, -4.09491, -6.37483, 0.91", "-24.1226, -4.50049, -6.11308, 0.45", "-25.5218, -4.78119, -6.03157, 0.45", "-27.3263, -5.06652, -6.01245, 0.68", "-28.8861, -5.23602, -6.0038, 0.45", "-30.4706, -5.35338, -6.06508, 0.68", "-31.5585, -5.4546, -6.15522, 0.68", "-33.9338, -5.80338, -6.37994, 0.45", "-36.1799, -6.19084, -6.53476, 0.68", "-37.861, -6.53452, -6.60409, 0.68", "-39.8897, -7.01399, -6.61217, 0.45", "-42.669, -7.82747, -6.65828, 0.68", "-44.2586, -8.40552, -6.71871, 0.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999984658439006
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.34373, 3.8638, 7.07, 0.91", "2.34373, 3.8638, 7.07, 0.91", "3.38849, 5.10372, 7.80701, 0.68", "4.7987, 6.94938, 8.91219, 0.68", "5.66176, 8.20851, 9.65859, 0.91", "6.78892, 10.0444, 10.7593, 0.91", "7.69245, 11.5334, 11.6834, 0.91", "8.31737, 12.597, 12.3858, 0.45", "8.91428, 13.6858, 13.164, 0.68", "9.5257, 14.8662, 14.0705, 0.68", "10.1678, 16.2635, 15.0785, 0.68", "10.8892, 17.9301, 16.114, 0.68", "11.4582, 19.2177, 16.883, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999984658439006
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.61373, -1.0262, 5.4, 0.91", "4.61373, -1.0262, 5.4, 0.91", "6.34618, -1.1552, 5.94256, 0.91", "7.93277, -1.27334, 6.43943, 1.14", "9.79299, -1.41185, 7.022, 1.36", "11.0684, -1.50682, 7.42143, 1.82", "12.3319, -1.60091, 7.81714, 2.05", "14.1372, -1.74814, 8.41434, 2.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999984658439006
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.63808, 4.74507, 0.0, 0.756338", "-8.90388, 18.3737, 0.0, 0.756338", "-15.1697, 32.0023, 0.0, 0.756338" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-2.672, 3.88008, -19.9046, 4.13", "-3.822, 5.32008, -19.9246, 4.13" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.672, 3.88008, -19.9046, 2.05", "-3.42562, 2.71757, -20.1689, 2.05", "-4.41372, 1.06403, -20.5176, 2.05", "-5.2496, -0.48491, -20.8499, 1.59", "-6.44546, -2.70092, -21.3254, 1.14", "-7.52381, -4.69917, -21.7542, 1.14", "-8.31874, -6.17223, -22.0703, 1.14", "-9.54006, -8.68555, -22.5588, 0.91", "-10.4145, -10.6114, -22.8448, 1.14" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "1.36568, -7.64836, 14.0854, 0.46", "1.92786, -8.31069, 14.5517, 0.46", "2.39835, -9.19096, 15.1237, 0.46", "2.5798, -9.90241, 15.6466, 0.46", "2.83598, -11.2165, 16.8592, 0.46", "2.95658, -11.6234, 17.2397, 0.46", "3.20241, -12.4093, 17.9627, 0.92", "3.38357, -13.2266, 18.6809, 0.92", "3.60306, -14.5612, 19.8803, 0.69", "3.8145, -15.9936, 21.2139, 0.69", "4.06541, -17.4308, 22.5667, 0.46", "4.38523, -18.6726, 23.7672, 0.46", "4.68616, -19.4413, 24.498, 0.46" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "1.36568, -7.64836, 14.0854, 0.46", "0.636276, -8.02995, 13.9212, 0.46", "-0.152657, -8.45716, 13.7175, 0.46", "-0.775815, -8.83904, 13.5562, 0.46", "-1.54099, -9.40368, 13.3618, 0.46", "-2.10621, -9.86387, 13.2324, 0.69", "-3.15983, -10.7605, 13.104, 0.69", "-4.10304, -11.5935, 13.1531, 0.46", "-4.84824, -12.2069, 13.2933, 0.46", "-5.76999, -12.8751, 13.575, 0.46", "-6.89774, -13.6157, 14.0428, 0.92", "-8.37836, -14.4925, 14.79, 0.92", "-9.92854, -15.2841, 15.7332, 0.92", "-11.1312, -15.7066, 16.5463, 1.15", "-12.211, -15.8513, 17.3315, 0.92", "-12.9928, -15.7999, 17.9612, 0.46", "-13.6008, -15.6349, 18.4633, 0.46", "-14.5186, -15.2487, 19.2234, 0.46", "-15.4851, -14.6881, 20.0496, 0.69", "-16.9755, -13.6055, 21.4161, 0.46", "-17.6995, -12.9546, 22.0988, 0.46", "-18.5334, -12.1053, 22.8703, 0.69" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "23.7196, -1.7874, -11.659, 0.68", "24.9921, -2.02192, -11.4724, 0.68", "26.1501, -2.30178, -11.3123, 0.68", "27.6714, -2.74961, -11.1963, 0.45", "29.0273, -3.17106, -11.2094, 0.45", "30.5525, -3.61649, -11.2875, 0.68", "31.2875, -3.81647, -11.3365, 0.45", "32.1462, -4.0234, -11.4253, 0.45", "33.6328, -4.35711, -11.6183, 0.68", "35.762, -4.80627, -11.8122, 0.45", "36.9146, -5.02537, -11.851, 0.45", "38.7259, -5.36293, -11.7366, 0.45", "40.938, -5.7383, -11.3922, 0.91", "42.5013, -5.98149, -11.0109, 0.45", "44.1399, -6.2804, -10.4788, 0.45", "45.319, -6.51847, -10.0455, 0.45", "47.2024, -6.97635, -9.32678, 0.23", "47.9322, -7.18919, -9.03177, 0.68", "48.9655, -7.55096, -8.60143, 1.14", "51.5454, -8.54159, -7.55931, 0.45", "52.97, -9.10976, -7.04898, 0.45", "55.0454, -9.98477, -6.36746, 0.45", "57.0256, -10.8489, -5.77666, 0.45", "58.8879, -11.7126, -5.2063, 0.68", "60.0702, -12.3082, -4.82911, 0.68", "61.9228, -13.2994, -4.23351, 0.23", "62.8199, -13.8, -3.95149, 0.23", "64.0155, -14.4511, -3.62322, 0.45", "66.1182, -15.5645, -3.08586, 0.45", "67.3699, -16.2639, -2.77795, 0.23", "68.3632, -16.8286, -2.54222, 0.45", "69.5043, -17.4627, -2.27267, 0.45", "70.6067, -18.0554, -2.03008, 0.68", "72.0728, -18.8595, -1.69434, 0.45", "73.8581, -19.8071, -1.27875, 0.45", "75.2362, -20.5049, -0.901427, 0.45", "76.8411, -21.3124, -0.361814, 0.45", "78.5215, -22.1254, 0.261578, 0.68", "79.9283, -22.7644, 0.891885, 0.45", "81.3979, -23.3922, 1.69629, 0.68", "83.2248, -24.1631, 2.86648, 0.23", "84.4954, -24.7212, 3.79954, 0.23", "85.5539, -25.1329, 4.62302, 0.68", "86.9546, -25.4953, 5.71605, 0.23", "88.2235, -25.6294, 6.6212, 0.68", "89.3211, -25.6038, 7.29299, 1.14", "91.5556, -25.3627, 8.43189, 0.23", "93.3628, -25.0833, 9.2255, 0.45", "95.4541, -24.744, 10.0932, 0.23", "97.7369, -24.4331, 11.0018, 0.23", "100.323, -24.2033, 12.0251, 0.23", "102.346, -24.1241, 12.8636, 0.23", "104.157, -24.1232, 13.6049, 0.23", "106.104, -24.2807, 14.4323, 0.23", "107.946, -24.6482, 15.2525, 0.23", "109.588, -25.2008, 16.0663, 0.45", "110.771, -25.7855, 16.774, 0.23" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "23.7196, -1.7874, -11.659, 1.14", "25.0496, -1.6874, -12.609, 1.14" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "6.81046, -14.3511, -19.0713, 0.91", "6.66748, -14.9316, -19.8695, 0.91", "6.33958, -16.2629, -21.7001, 0.68", "6.08721, -17.2875, -23.1091, 0.68", "5.81491, -18.3931, -24.6293, 0.91" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.81046, -14.3511, -19.0713, 0.68", "8.20397, -14.9325, -17.9315, 0.68", "9.86058, -15.7776, -16.6388, 0.68", "11.256, -16.5739, -15.4989, 0.45", "11.8672, -16.975, -14.9847, 0.45", "12.5163, -17.4403, -14.4261, 0.68", "13.6035, -18.2083, -13.5618, 1.14", "14.8374, -19.1473, -12.6442, 0.68", "15.9184, -20.0599, -11.847, 0.68", "17.12, -21.1653, -10.894, 0.45", "18.0864, -22.0511, -10.1044, 0.45", "19.1931, -23.0506, -9.2287, 0.91" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-44.2586, -8.40552, -6.71871, 0.45", "-45.7231, -9.87998, -6.21075, 0.45", "-46.5583, -10.7832, -5.97654, 0.45", "-47.7186, -12.0432, -5.69779, 0.45", "-48.556, -12.9563, -5.51694, 0.68", "-49.0631, -13.4873, -5.42281, 0.91", "-50.2893, -14.7593, -5.19603, 0.45", "-51.3596, -15.8029, -5.08323, 0.45", "-52.1406, -16.5518, -4.98028, 0.45", "-52.406, -16.8061, -4.92741, 0.68", "-53.4669, -17.7842, -4.62352, 1.14", "-54.2622, -18.4735, -4.35142, 0.68", "-55.3193, -19.3314, -3.94769, 0.45", "-57.1684, -20.7537, -3.21494, 0.45", "-58.4011, -21.7056, -2.72471, 0.23", "-59.0956, -22.2184, -2.46992, 0.23", "-59.8497, -22.7443, -2.21131, 0.91", "-60.715, -23.3052, -1.94366, 0.23", "-62.095, -24.1267, -1.53727, 0.23", "-62.8524, -24.5517, -1.326, 0.91", "-64.4931, -25.4268, -0.902154, 0.23", "-65.1173, -25.7545, -0.735011, 0.68", "-66.3, -26.3439, -0.352615, 0.45", "-67.6262, -26.9249, 0.146594, 0.45", "-68.8696, -27.4477, 0.728419, 0.45", "-70.2566, -28.0828, 1.48958, 0.45", "-71.2528, -28.5963, 2.10156, 0.45", "-72.4253, -29.288, 2.79996, 0.45", "-73.2087, -29.7668, 3.29685, 0.45", "-74.7725, -30.8383, 4.47093, 0.45", "-75.5631, -31.4303, 5.22959, 0.45", "-76.0776, -31.8724, 5.81156, 0.68", "-77.1372, -32.9175, 7.14169, 0.45", "-77.9569, -33.8824, 8.18899, 0.45", "-78.6077, -34.7531, 9.08052, 0.45", "-79.1721, -35.3801, 10.1117, 0.68" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-44.2586, -8.40552, -6.71871, 0.45", "-45.7742, -8.20226, -7.47042, 0.45", "-47.2727, -8.06234, -8.14191, 0.45", "-48.4365, -7.98294, -8.6642, 0.23", "-49.5612, -7.95286, -9.19702, 0.45", "-51.124, -8.01854, -9.96233, 0.45", "-51.8506, -8.09456, -10.3301, 0.45", "-53.2249, -8.40191, -11.1232, 0.45", "-54.4263, -8.77001, -11.8517, 0.45", "-55.4073, -9.12114, -12.4767, 0.68", "-56.4712, -9.53833, -13.2614, 0.68", "-57.3642, -9.95063, -14.0322, 0.91", "-58.3746, -10.5238, -15.0546, 0.45", "-59.2288, -11.1455, -16.0694, 0.91", "-60.0838, -11.8709, -17.1054, 0.91", "-61.2176, -12.9486, -18.5802, 0.45", "-61.9147, -13.7338, -19.5686, 0.68", "-62.389, -14.4502, -20.3799, 0.45", "-62.8947, -15.5465, -21.4696, 0.45", "-63.2505, -16.7377, -22.5261, 0.68", "-63.5487, -18.4365, -23.9034, 0.45", "-63.6698, -19.6847, -24.8507, 0.91", "-63.7696, -21.3107, -26.0798, 0.45", "-63.8048, -22.3694, -26.858, 0.45", "-63.8473, -23.9696, -28.0372, 0.45", "-63.9113, -25.584, -29.2634, 0.68", "-64.0792, -27.1019, -30.4006, 0.23", "-64.2552, -28.2117, -31.321, 0.23", "-64.496, -29.3623, -32.3725, 0.23", "-64.7401, -30.3184, -33.3944, 0.45", "-64.957, -31.1059, -34.4027, 0.68", "-65.321, -32.5105, -36.4082, 0.91", "-65.6571, -34.1157, -38.9502, 0.23", "-65.807, -35.0171, -40.4997, 0.45", "-66.0113, -36.2109, -42.6901, 0.45", "-66.2401, -37.5347, -45.1742, 0.45", "-66.3337, -38.0649, -46.1863, 0.91", "-66.6273, -39.428, -48.9147, 0.23", "-66.859, -40.1532, -50.3818, 0.45", "-67.1629, -40.9733, -52.0196, 0.45", "-67.4773, -41.7381, -53.4579, 0.45", "-67.719, -42.1968, -54.2801, 0.23", "-68.1886, -42.8921, -55.546, 0.23", "-68.5715, -43.4048, -56.3422, 0.23", "-69.2455, -44.2402, -57.5052, 0.45", "-69.9613, -45.0556, -58.5687, 0.68", "-71.0907, -46.2167, -60.003, 0.23", "-72.574, -47.794, -61.7246, 0.23", "-74.2648, -49.5949, -63.5799, 0.23", "-75.3939, -50.7888, -64.7609, 0.23", "-76.2204, -51.6425, -65.5739, 0.68", "-77.4628, -52.9094, -66.7341, 0.23", "-79.5067, -55.0956, -68.5215, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "11.4582, 19.2177, 16.883, 0.91", "11.8498, 19.506, 17.3584, 0.91", "12.2246, 19.8687, 17.8637, 0.68", "13.4978, 21.2827, 19.4862, 0.45", "14.1933, 22.0861, 20.347, 0.45", "14.8465, 22.8097, 21.1162, 0.45", "15.6659, 23.6454, 22.0557, 0.45", "16.5414, 24.4577, 23.0325, 0.68", "18.0536, 25.6386, 24.6332, 0.45", "19.1582, 26.2859, 25.7002, 0.68", "20.2081, 26.4929, 26.5786, 0.68", "21.3724, 26.2629, 27.3177, 0.68", "22.527, 25.8066, 27.815, 0.68", "24.0512, 25.0603, 28.2551, 0.68", "25.7166, 24.0595, 28.64, 0.45", "27.4114, 22.9485, 28.9201, 0.68", "29.0161, 21.874, 29.0867, 0.23", "30.8141, 20.7561, 29.1531, 0.23", "32.6571, 19.8155, 29.1477, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "11.4582, 19.2177, 16.883, 0.68", "11.959, 19.5708, 16.5268, 0.68", "12.9458, 20.4276, 15.8999, 0.68", "14.0302, 21.4288, 15.3139, 0.68", "15.5882, 22.8054, 14.6039, 0.68", "16.3127, 23.4131, 14.3218, 0.68", "18.056, 24.828, 13.7755, 0.68", "19.3885, 25.9604, 13.4828, 0.68", "20.8512, 27.2639, 13.3132, 0.45", "22.0283, 28.3713, 13.2928, 0.45", "23.0893, 29.3962, 13.3923, 0.45", "24.2487, 30.5152, 13.5816, 0.45", "25.0658, 31.3421, 13.7363, 0.68", "25.9766, 32.3089, 13.88, 0.68", "27.0731, 33.5641, 13.9813, 0.91", "28.3427, 35.0799, 13.949, 0.68", "29.5183, 36.4637, 13.7915, 0.45", "30.6993, 37.8418, 13.4846, 0.45", "31.8176, 39.1588, 13.1041, 0.45", "32.605, 40.0914, 12.7721, 0.68", "33.7982, 41.5011, 12.1547, 0.68", "34.5303, 42.3994, 11.6999, 0.91", "35.1593, 43.1749, 11.3114, 0.91", "36.2162, 44.4982, 10.7703, 0.23", "37.3161, 46.1019, 10.292, 0.68" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-15.1697, 32.0023, 0.0, 0.69", "-21.4355, 45.631, 0.0, 0.69", "-27.7013, 59.2596, 0.0, 0.69" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-3.822, 5.32008, -19.9246, 2.98", "-5.13508, 5.89333, -20.9247, 2.98", "-6.39766, 6.44454, -21.8864, 2.29", "-7.53155, 6.93957, -22.75, 2.06", "-9.23228, 7.68206, -24.0454, 2.06" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-3.822, 5.32008, -19.9246, 1.61", "-3.63276, 6.80261, -19.0649, 1.61", "-3.39062, 8.61944, -18.0005, 0.92", "-3.18228, 9.93472, -17.2637, 0.92", "-2.97223, 11.2608, -16.5209, 1.38", "-2.71209, 12.9032, -15.601, 0.92", "-2.38577, 14.9634, -14.4469, 0.92", "-2.20235, 16.0831, -13.7777, 1.15", "-2.01863, 17.2335, -13.1132, 1.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-10.4145, -10.6114, -22.8448, 0.23", "-8.75997, -10.8219, -24.2966, 0.23", "-7.46665, -10.9898, -25.3561, 0.45", "-5.40959, -11.2349, -26.8379, 0.23", "-4.03341, -11.3553, -27.8002, 0.68", "-3.05871, -11.3907, -28.4985, 0.45", "-2.31296, -11.3993, -29.0718, 0.45", "-0.498673, -11.2932, -30.5658, 0.68", "0.894148, -11.1859, -31.7171, 0.45", "1.9942, -11.1322, -32.7073, 0.45", "3.35393, -11.1753, -34.071, 0.68", "4.76762, -11.3262, -35.7342, 0.68", "6.04884, -11.5273, -37.5487, 0.23", "6.98881, -11.7381, -39.12, 0.68", "7.90088, -12.0848, -40.8806, 0.45", "8.64057, -12.461, -42.4483, 0.68", "9.68479, -13.0821, -44.884, 0.68", "10.6849, -13.6759, -47.3733, 0.45", "11.429, -14.1129, -49.225, 0.68", "12.4047, -14.6257, -51.553, 0.91", "13.5001, -15.1018, -53.7867, 0.91", "14.512, -15.4928, -55.669, 0.68", "16.0505, -16.0507, -58.5275, 0.45", "17.5399, -16.5396, -61.2777, 0.45", "17.9804, -16.6604, -62.1194, 0.68", "18.9542, -16.8429, -63.9988, 0.23", "20.1833, -17.0587, -66.4723, 0.23", "22.0509, -17.3472, -70.4173, 0.23", "23.2033, -17.4778, -72.9768, 0.45", "24.4826, -17.5388, -75.9339, 0.45", "25.51, -17.5336, -78.3151, 0.45", "26.7586, -17.397, -81.1284, 0.23", "27.4787, -17.2816, -82.5839, 0.23", "27.8431, -17.2141, -83.2366, 0.45", "28.5369, -17.0668, -84.4496, 0.68", "30.1282, -16.7715, -87.1175, 0.45", "32.1208, -16.4062, -90.4515, 0.23", "33.7615, -16.0532, -93.235, 0.23", "34.3859, -15.9298, -94.3342, 0.45", "35.7064, -15.7166, -96.7918, 0.45", "37.1387, -15.5361, -99.5095, 0.45", "38.2421, -15.4513, -101.613, 0.45", "39.5245, -15.4369, -104.111, 0.45", "40.5978, -15.4234, -106.252, 0.45", "41.7964, -15.4246, -108.709, 0.45", "43.0989, -15.4614, -111.364, 0.45", "44.3631, -15.5283, -114.0, 0.45", "45.5583, -15.72, -116.504, 0.45" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-10.4145, -10.6114, -22.8448, 0.68", "-10.8536, -11.4003, -23.0069, 0.68", "-11.7343, -12.9825, -23.332, 0.68", "-12.2031, -13.8249, -23.505, 0.68", "-12.8616, -15.0079, -23.7481, 0.68", "-13.6197, -16.3699, -24.0279, 0.91", "-14.4606, -17.8807, -24.3383, 0.91" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "4.68616, -19.4413, 24.498, 0.46", "5.12871, -20.728, 25.2097, 0.46", "5.83169, -22.7718, 26.3403, 0.46", "6.12335, -23.6197, 26.8093, 0.46", "6.34676, -24.2693, 27.1686, 0.46", "6.78472, -25.5426, 27.8729, 0.46" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "4.68616, -19.4413, 24.498, 0.46", "5.12343, -20.8816, 25.564, 0.46", "5.88096, -22.4797, 26.6472, 0.46", "6.7447, -24.1727, 27.6201, 0.46", "7.18156, -25.0289, 28.0792, 0.46", "7.81865, -26.3245, 28.7565, 0.46", "8.6059, -27.9255, 29.5935, 0.46", "9.3455, -29.1531, 30.2227, 0.46", "10.2504, -30.5143, 30.8056, 0.46", "10.678, -31.0973, 31.0113, 0.23", "11.2683, -31.9805, 31.2646, 0.23" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-18.5334, -12.1053, 22.8703, 0.69", "-19.3456, -11.4538, 24.0212, 0.69", "-20.7084, -10.3606, 25.9522, 0.92", "-20.9935, -10.132, 26.3561, 0.92", "-22.049, -9.28532, 27.8517, 0.46" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-18.5334, -12.1053, 22.8703, 0.23", "-18.9099, -13.9241, 24.244, 0.23", "-19.1379, -15.1018, 25.0557, 0.46", "-19.5977, -16.8529, 26.1408, 0.23", "-19.9518, -17.8227, 26.6971, 0.23", "-20.2669, -18.4175, 27.0341, 0.23", "-21.2478, -19.875, 27.9041, 0.23", "-21.946, -20.7803, 28.3816, 0.92", "-22.9912, -21.8741, 28.9776, 0.23", "-24.2161, -22.8974, 29.4813, 0.23", "-25.8747, -24.033, 30.1105, 0.23", "-26.7591, -24.5364, 30.3982, 0.23" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "25.0496, -1.6874, -12.609, 0.23", "26.3391, -2.90929, -12.8182, 0.23", "27.9323, -4.42081, -12.9135, 0.23", "28.875, -5.32823, -12.9207, 0.68", "30.0416, -6.47611, -12.8948, 0.23", "31.0546, -7.48128, -12.8443, 0.23", "32.1483, -8.59154, -12.7718, 0.91", "33.2721, -9.78543, -12.6379, 0.23", "34.0023, -10.5991, -12.4822, 0.68", "34.9094, -11.7111, -12.2213, 0.23", "35.4607, -12.4398, -12.0156, 0.45", "36.2121, -13.4998, -11.7046, 0.23", "36.6905, -14.2231, -11.4799, 0.45", "37.8707, -16.157, -10.8225, 0.23", "38.7086, -17.5403, -10.3023, 0.45", "39.3417, -18.5824, -9.88197, 0.45", "39.9676, -19.5724, -9.4804, 0.23", "40.7494, -20.7249, -9.0081, 0.68", "41.648, -21.9336, -8.4908, 1.14", "43.2496, -23.8727, -7.62232, 0.23", "43.9892, -24.7088, -7.28185, 0.45", "44.9298, -25.7262, -6.93612, 0.91", "46.3125, -27.1231, -6.39735, 0.23", "47.4434, -28.2171, -5.96233, 0.23", "48.2272, -28.9519, -5.65211, 0.91", "49.7154, -30.3521, -5.06209, 0.45", "50.4067, -31.0073, -4.77809, 0.45", "53.0119, -33.5771, -3.59234, 0.23", "53.735, -34.3266, -3.24852, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "25.0496, -1.6874, -12.609, 0.91", "24.8547, -1.17116, -14.066, 0.91", "24.6349, -0.373943, -16.3177, 0.68", "24.5459, 0.280926, -17.9845, 0.45", "24.539, 0.754861, -19.0105, 0.45", "24.518, 1.744, -20.9682, 0.45", "24.4966, 2.17152, -21.7577, 0.45", "24.4385, 3.00301, -23.1506, 0.45", "24.3901, 3.83175, -24.3798, 0.45", "24.3714, 4.83874, -25.7588, 0.91", "24.417, 5.86172, -26.9869, 0.23", "24.5304, 6.90187, -28.0366, 0.23", "24.7162, 8.00801, -29.1179, 0.45", "24.8392, 8.51967, -29.6298, 0.45", "25.1634, 9.49116, -30.6129, 0.45", "25.4963, 10.2993, -31.4606, 0.68", "26.1204, 11.5171, -32.7732, 0.23", "26.7374, 12.6918, -34.0583, 0.68", "27.2298, 13.7378, -35.1978, 0.68", "27.5464, 14.5012, -36.0591, 0.91", "28.0402, 15.6887, -37.4595, 0.68", "28.7161, 17.3929, -39.5124, 0.45", "29.214, 18.8097, -41.159, 0.68", "29.5561, 20.0044, -42.4391, 0.45", "29.9582, 21.646, -44.1054, 0.45", "30.3259, 23.3022, -45.7287, 0.45", "30.5589, 24.5481, -46.8499, 0.45", "30.673, 25.4585, -47.6072, 0.68", "30.7366, 27.1302, -48.793, 0.23", "30.6729, 28.424, -49.525, 0.45", "30.4204, 30.1954, -50.2022, 0.45", "29.9488, 32.5501, -50.6476, 0.45", "29.6318, 34.1436, -50.621, 1.14", "29.1062, 37.2811, -49.7357, 0.23", "28.9702, 38.6796, -48.8671, 0.45", "28.9341, 40.241, -47.466, 0.68", "28.9835, 41.6817, -45.8502, 0.91", "29.1382, 42.9704, -44.185, 0.45", "29.4965, 44.3614, -42.3899, 0.45", "29.9667, 45.5714, -40.9829, 0.68", "30.5142, 46.8735, -39.7868, 0.23", "30.9835, 48.0282, -39.0051, 0.45", "31.25, 48.8112, -38.6664, 0.91", "32.0149, 51.5896, -38.0147, 0.45", "32.3867, 53.2775, -37.8718, 0.45", "32.677, 55.1059, -37.9563, 0.45", "32.815, 56.543, -38.1501, 0.68", "32.8407, 58.8619, -38.5317, 0.23", "32.746, 60.0234, -38.6727, 0.91", "32.4976, 61.4529, -38.802, 0.45", "32.0542, 63.4441, -38.8294, 0.23", "31.7851, 64.3745, -38.7666, 0.45", "31.1453, 66.2876, -38.4723, 0.23", "30.2337, 68.6758, -37.8994, 0.23", "30.2337, 68.6758, -37.8994, 0.23", "29.1047, 70.9678, -37.1922, 0.45", "28.2288, 72.6644, -36.6386, 0.23", "26.7554, 75.6861, -35.7059, 0.23", "25.9952, 77.3932, -35.2309, 0.23", "25.4203, 78.8393, -34.8088, 0.45", "25.0497, 80.2997, -34.3203, 0.23", "24.6378, 82.4701, -33.526, 0.23", "24.5088, 84.3554, -32.7772, 0.23", "24.6485, 85.7754, -32.1602, 0.23", "25.1527, 87.8566, -31.2365, 0.23", "26.2869, 90.907, -29.7945, 0.23" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.81491, -18.3931, -24.6293, 0.45", "6.24958, -19.8623, -24.5021, 0.45", "6.54082, -21.0846, -24.424, 0.68", "6.77906, -22.2223, -24.3869, 0.68", "7.15591, -24.1402, -24.3575, 0.45", "7.4242, -25.6184, -24.4011, 0.68", "7.82825, -27.9194, -24.61, 0.45", "7.97383, -28.8897, -24.774, 0.68", "8.11465, -30.0613, -25.1203, 0.91", "8.20206, -30.8744, -25.472, 1.14", "8.31122, -32.2013, -26.2798, 0.68", "8.39428, -33.3224, -27.1297, 0.68", "8.49983, -34.4531, -28.0572, 0.91", "8.61637, -35.935, -29.253, 0.91", "8.6797, -37.217, -30.2624, 0.68", "8.70255, -39.1265, -31.658, 0.68", "8.67509, -40.0118, -32.2, 0.68", "8.50296, -42.2307, -33.3355, 0.45", "8.3619, -43.6599, -33.9605, 0.45", "8.29156, -44.357, -34.1996, 0.68", "8.15677, -46.1111, -34.6335, 0.91", "8.04831, -48.7066, -35.1073, 0.68", "8.02623, -49.981, -35.3004, 0.23", "8.07701, -51.8583, -35.5377, 0.23", "8.27404, -53.879, -35.8206, 0.45", "8.67762, -56.1787, -36.2222, 0.68", "9.17756, -58.0606, -36.6458, 0.45", "9.52722, -59.1081, -36.9667, 0.91", "10.4104, -61.3512, -37.8489, 0.45", "11.1044, -62.9187, -38.7041, 0.68", "11.7515, -64.2193, -39.6751, 0.45", "12.4444, -65.4496, -40.808, 0.91", "13.178, -66.6632, -42.0769, 0.45", "13.6899, -67.522, -43.0642, 0.68", "14.4946, -69.0132, -44.9099, 0.68", "14.8409, -69.713, -45.7908, 0.45", "15.4446, -70.9504, -47.3688, 0.68", "15.9408, -71.9668, -48.6891, 0.45", "16.4084, -72.8274, -49.9044, 0.45", "17.0709, -74.0439, -51.7612, 0.45", "17.6419, -74.9934, -53.3481, 0.68", "17.8718, -75.3357, -53.9697, 1.14", "18.6731, -76.3939, -56.0434, 0.45", "19.6342, -77.5139, -58.2908, 0.45", "20.711, -78.6637, -60.5107, 0.45", "21.7563, -79.8045, -62.5231, 0.68", "22.5861, -80.7882, -64.0996, 0.45", "23.3921, -81.8169, -65.6339, 0.45", "24.0237, -82.638, -66.7437, 0.68", "25.1269, -84.1279, -68.5082, 0.45", "26.2305, -85.5591, -70.0381, 0.68", "27.2811, -86.9323, -71.3435, 0.68", "28.3103, -88.3044, -72.5548, 0.68", "28.6821, -88.7822, -72.9637, 0.45", "29.3601, -89.5804, -73.6365, 0.68", "30.3892, -90.7211, -74.6057, 0.23", "31.507, -91.8967, -75.698, 0.68", "32.4379, -92.8745, -76.7184, 0.45", "33.093, -93.5595, -77.5036, 0.68", "33.8114, -94.3543, -78.5809, 0.45", "34.6772, -95.3348, -80.2053, 0.45", "35.5969, -96.4537, -82.4256, 0.45", "36.2271, -97.3164, -84.2841, 0.45", "36.4499, -97.7, -85.1299, 0.91", "36.9318, -98.87, -87.6477, 0.45", "37.2507, -99.9988, -89.9564, 0.45", "37.518, -101.26, -92.3759, 0.45", "37.6209, -101.885, -93.4574, 0.45", "37.8574, -103.351, -95.8803, 0.45", "38.0347, -104.327, -97.4047, 0.45", "38.3315, -105.812, -99.4867, 0.45", "38.5502, -106.916, -100.929, 0.45", "38.9982, -108.892, -103.397, 0.45", "39.2512, -109.874, -104.578, 0.68", "39.7058, -111.709, -106.525, 0.45", "39.9982, -112.935, -107.63, 0.45", "40.1248, -113.538, -108.077, 0.45", "40.3872, -114.835, -108.9, 0.45", "40.5997, -115.814, -109.405, 0.45", "41.15, -117.934, -110.465, 0.45", "41.6717, -119.592, -111.36, 0.23", "42.3959, -121.736, -112.64, 0.23", "42.7789, -122.907, -113.483, 0.23", "43.1263, -124.024, -114.367, 0.45", "43.6533, -125.73, -115.824, 0.23", "44.5514, -128.622, -118.451, 0.23", "45.0532, -130.326, -120.015, 0.45", "45.6685, -132.841, -122.216, 0.23", "45.9191, -134.2, -123.349, 0.23", "46.065, -135.285, -124.213, 0.68", "46.2412, -137.404, -125.724, 0.23", "46.2919, -138.656, -126.572, 0.45", "46.3639, -142.284, -128.863, 0.23", "46.3727, -143.17, -129.362, 0.23", "46.3584, -144.167, -129.936, 0.45", "46.2462, -147.009, -131.549, 0.45", "46.1646, -148.446, -132.331, 0.23", "45.9939, -151.863, -134.193, 0.23", "45.9678, -154.226, -135.423, 0.23" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.81491, -18.3931, -24.6293, 0.68", "4.66317, -19.0329, -25.9124, 0.68", "3.51129, -19.7167, -27.2729, 0.45", "2.44976, -20.2858, -28.575, 0.45", "1.13873, -20.9657, -30.2194, 0.68", "-0.122992, -21.6464, -31.8738, 0.45", "-1.33212, -22.3374, -33.5488, 0.45", "-2.49737, -23.0654, -35.2365, 0.45", "-3.51453, -23.7734, -36.8605, 0.45", "-4.48889, -24.4999, -38.5196, 0.45", "-5.2171, -25.0767, -39.8126, 0.45", "-6.24975, -25.9372, -41.5511, 0.45", "-6.81801, -26.4444, -42.4867, 0.91", "-8.0567, -27.5958, -44.461, 0.45", "-9.00489, -28.4459, -45.8151, 0.45", "-10.4824, -29.5982, -47.6631, 0.45", "-11.2078, -30.0752, -48.4143, 0.91", "-12.5084, -30.8058, -49.5145, 0.45", "-13.3006, -31.1604, -50.045, 0.45", "-14.6959, -31.6253, -50.7152, 0.45", "-15.3713, -31.8102, -50.9521, 0.45", "-16.5648, -32.1069, -51.3037, 0.45", "-17.2346, -32.2952, -51.5418, 0.68", "-18.4948, -32.6713, -52.0171, 0.68", "-19.6777, -33.0562, -52.5067, 0.45", "-20.8927, -33.5024, -53.0908, 1.14", "-22.2448, -33.9897, -53.7767, 0.45", "-24.1873, -34.6547, -54.8105, 0.45", "-25.7474, -35.1863, -55.635, 0.45", "-27.3943, -35.7607, -56.489, 0.23", "-28.5927, -36.1831, -57.0525, 0.23", "-30.0066, -36.7293, -57.7176, 0.45", "-30.9539, -37.1501, -58.1487, 0.23", "-31.8343, -37.6118, -58.5556, 0.68", "-33.6146, -38.6856, -59.3985, 0.45", "-34.8852, -39.5009, -59.9646, 0.91", "-36.3277, -40.4345, -60.5523, 0.45", "-37.4748, -41.1873, -61.0222, 0.45", "-38.3302, -41.7323, -61.3749, 0.23", "-40.3304, -42.907, -62.1992, 0.23", "-41.2319, -43.3897, -62.5452, 0.68", "-42.8445, -44.1209, -63.1163, 0.23", "-43.9262, -44.5664, -63.4424, 0.68", "-45.0391, -45.0118, -63.7591, 0.45", "-46.5206, -45.6328, -64.1791, 0.23", "-47.6222, -46.1735, -64.5396, 0.23", "-48.5925, -46.7286, -64.906, 0.23", "-49.7116, -47.5427, -65.3722, 0.23", "-49.9132, -47.7329, -65.4663, 0.23", "-50.567, -48.5348, -65.8689, 0.68", "-51.683, -50.4238, -66.8777, 0.45", "-52.0154, -51.22, -67.3152, 0.45", "-52.3543, -52.1842, -67.8559, 0.45", "-52.7658, -53.5105, -68.6378, 0.23", "-53.1004, -54.6999, -69.34, 0.23", "-53.36, -55.9333, -70.0536, 0.23", "-53.5014, -57.1375, -70.6492, 0.91" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "19.1931, -23.0506, -9.2287, 0.45", "20.0452, -23.4057, -8.11905, 0.45", "21.466, -24.1762, -6.24666, 0.68", "22.6025, -24.9159, -4.85321, 0.45", "23.1991, -25.3101, -4.18383, 0.45", "23.824, -25.7406, -3.49452, 0.45", "24.3519, -26.138, -2.929, 0.45", "25.3641, -27.0353, -1.95163, 0.91", "26.5033, -28.2203, -0.97193, 0.45", "27.4123, -29.3149, -0.209235, 0.45", "27.9407, -30.0486, 0.273119, 0.45", "28.7327, -31.2671, 1.00313, 0.68", "29.3913, -32.4203, 1.62507, 0.91", "29.9537, -33.5124, 2.18677, 0.68", "30.7307, -35.1151, 3.04598, 0.68", "31.4191, -36.5888, 3.85837, 0.68", "31.7195, -37.1696, 4.19494, 0.68", "32.5183, -38.61, 5.11284, 0.68", "33.4, -40.1345, 6.11859, 0.68", "34.0793, -41.2537, 6.86784, 0.68", "34.8297, -42.5026, 7.70159, 0.45", "35.3625, -43.3896, 8.24283, 0.45", "35.6957, -43.9509, 8.56098, 0.45", "36.2583, -44.8514, 9.05917, 0.68", "36.9661, -46.1102, 9.68537, 0.68", "37.2942, -46.7144, 9.95991, 0.45", "37.8645, -47.7764, 10.4326, 0.45", "38.2722, -48.5235, 10.7547, 0.45", "39.1905, -50.063, 11.4513, 0.45", "40.202, -51.5706, 12.1404, 0.68", "40.7736, -52.3144, 12.4925, 0.91", "41.2779, -52.9325, 12.8137, 0.91", "41.8937, -53.7052, 13.2341, 0.68", "42.6949, -54.821, 13.8059, 0.45", "43.5816, -56.2231, 14.4748, 0.45", "44.3493, -57.6378, 15.1445, 0.23", "44.6266, -58.3491, 15.4567, 0.23", "44.7318, -58.8892, 15.653, 0.23", "44.7729, -60.6271, 16.1421, 0.45", "44.5959, -62.8435, 16.6004, 0.23", "44.4194, -63.9674, 16.7756, 0.23", "44.0695, -65.7605, 16.9643, 0.23", "43.4895, -68.4337, 17.197, 0.23", "43.1442, -69.8918, 17.306, 0.23", "42.8631, -71.0264, 17.4019, 0.23", "42.3524, -72.9718, 17.6201, 0.23", "41.9812, -74.3553, 17.8933, 0.23", "41.4384, -76.5446, 18.4134, 0.23", "41.2123, -77.449, 18.6835, 0.45", "40.7391, -79.2068, 19.3146, 0.23", "40.4021, -80.287, 19.7819, 0.45", "39.8278, -81.9248, 20.702, 0.45" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "19.1931, -23.0506, -9.2287, 0.45", "20.7887, -25.3204, -10.3289, 0.45", "21.4756, -26.2403, -10.8287, 0.68", "22.2704, -27.1624, -11.379, 0.45", "23.2627, -28.1353, -11.9664, 0.45", "24.4306, -29.1458, -12.5793, 0.45", "25.864, -30.2837, -13.2636, 0.45", "27.5208, -31.3657, -13.8923, 0.68", "29.5671, -32.3804, -14.5866, 0.68", "31.7077, -33.0559, -15.2494, 0.45", "33.0486, -33.2537, -15.5944, 0.45", "33.9866, -33.2576, -15.7744, 0.68", "35.0469, -33.1276, -15.9269, 0.91", "37.6185, -32.6237, -16.2768, 0.45", "39.7211, -32.1487, -16.569, 0.68", "41.1891, -31.8268, -16.7924, 0.91", "42.5294, -31.5251, -17.0077, 0.91", "44.7267, -31.064, -17.3852, 0.45", "46.5729, -30.7831, -17.7269, 0.45", "47.4508, -30.7365, -17.904, 0.68", "49.2353, -30.8652, -18.2376, 0.45" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "37.3161, 46.1019, 10.292, 0.23", "38.5671, 46.9365, 10.8062, 0.23", "39.6613, 47.6584, 11.2417, 0.45", "40.8454, 48.4172, 11.6852, 0.45", "41.9972, 49.1554, 12.1166, 0.23", "43.1241, 49.8776, 12.5387, 0.68", "45.2937, 51.2681, 13.3513, 0.45", "47.101, 52.446, 13.9529, 0.23", "47.8598, 52.9746, 14.1918, 0.23" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "37.3161, 46.1019, 10.292, 0.45", "37.7072, 48.0153, 9.46783, 0.45", "38.0068, 49.2787, 8.8968, 0.45", "38.3079, 50.4879, 8.34659, 0.68", "38.492, 51.2636, 7.99833, 0.68", "38.8862, 53.013, 7.17307, 0.23", "39.2072, 54.667, 6.33717, 0.23", "39.4473, 56.2453, 5.49515, 0.23", "39.5548, 57.329, 4.90401, 0.45", "39.7725, 59.7576, 3.55669, 0.23", "39.8594, 61.001, 2.84352, 0.68", "39.9148, 63.0282, 1.66104, 0.23", "39.8949, 64.884, 0.583831, 0.23", "39.8395, 65.5223, 0.195998, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-9.23228, 7.68206, -24.0454, 1.83", "-9.57278, 7.87753, -24.0295, 1.83", "-11.1894, 8.76828, -23.7811, 1.61", "-13.5381, 10.1081, -23.1758, 1.15", "-15.107, 11.1012, -22.6513, 1.38", "-16.2562, 11.8287, -22.2671, 1.15", "-17.2636, 12.4664, -21.9304, 1.15", "-18.5918, 13.3009, -21.402, 0.92", "-19.9422, 14.1966, -20.6383, 0.92", "-21.0169, 14.9789, -19.7494, 1.15" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-9.23228, 7.68206, -24.0454, 0.69", "-9.68867, 6.82894, -25.641, 0.69", "-9.98816, 6.26915, -26.688, 0.69", "-10.3947, 5.50928, -28.1092, 0.69", "-10.7948, 4.76133, -29.5081, 0.69", "-11.03, 4.32162, -30.3305, 0.69" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.01863, 17.2335, -13.1132, 0.69", "-1.89855, 18.2906, -11.7685, 0.69", "-1.66581, 19.4741, -10.3049, 0.69", "-1.41001, 20.5691, -9.06618, 0.69", "-1.09459, 21.622, -7.98271, 0.69", "-0.524861, 23.0321, -6.57461, 0.69", "-0.00104021, 24.085, -5.56809, 0.46", "0.593802, 24.9565, -4.8167, 0.46", "1.23308, 25.7114, -4.18654, 0.69", "2.41301, 27.0032, -3.18876, 0.46", "3.70351, 28.3117, -2.27162, 0.69", "4.58666, 29.1014, -1.7677, 0.92", "5.52829, 29.8075, -1.31979, 0.69", "6.82607, 30.567, -0.765971, 0.46", "7.35192, 30.7933, -0.540169, 0.46", "9.01532, 31.3475, 0.274961, 0.46", "10.3367, 31.7428, 1.08641, 0.46", "11.9663, 32.1918, 2.21248, 0.46", "13.167, 32.4875, 3.06495, 0.46", "14.9277, 32.91, 4.33592, 0.46", "16.7015, 33.3323, 5.63165, 0.46", "18.587, 33.7711, 7.03751, 0.46", "19.7641, 34.0652, 7.89462, 0.46", "21.5411, 34.5338, 9.15343, 0.46", "23.1556, 35.0413, 10.2054, 0.92", "24.5451, 35.5254, 11.0014, 0.23", "26.0901, 36.0272, 11.7847, 0.23", "27.6723, 36.5224, 12.5527, 0.23", "28.4343, 36.7736, 12.9175, 0.46", "30.1023, 37.3109, 13.6487, 0.23", "31.8013, 37.8658, 14.3661, 0.69", "33.9268, 38.5886, 15.2805, 0.46", "35.5536, 39.1567, 15.9719, 0.46", "37.0094, 39.6059, 16.5862, 0.46", "38.5694, 40.0202, 17.145, 0.46" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-2.01863, 17.2335, -13.1132, 0.69", "-1.88852, 17.7934, -14.0201, 0.69", "-1.67343, 18.4672, -15.02, 0.69", "-1.41569, 19.2718, -16.0741, 0.69", "-1.28286, 19.6555, -16.5017, 0.69", "-0.972102, 20.5206, -17.2558, 0.69", "-0.47826, 21.8156, -18.2311, 0.92", "0.0110726, 22.9528, -18.9166, 0.69", "0.384261, 23.6523, -19.2505, 0.69", "1.10783, 24.6853, -19.7063, 0.69", "2.43921, 26.1919, -20.3948, 0.46", "2.81106, 26.555, -20.5545, 0.46", "3.4162, 27.1129, -20.7868, 0.69", "4.58685, 28.1702, -21.2203, 0.92", "6.01581, 29.4743, -21.7765, 0.69", "7.392, 30.7771, -22.3935, 0.92", "8.57487, 31.8728, -22.9598, 0.46", "9.14497, 32.4497, -23.2458, 0.46", "9.80797, 33.2385, -23.5937, 0.46", "10.4747, 34.3279, -24.0027, 0.46", "10.894, 35.3945, -24.2287, 0.92" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-14.4606, -17.8807, -24.3383, 0.45", "-14.2935, -19.1277, -25.6634, 0.45", "-14.1461, -20.5706, -26.9561, 0.45", "-14.0922, -21.5606, -27.7001, 0.68", "-14.0219, -23.4465, -28.9388, 0.68", "-13.9978, -24.118, -29.3455, 0.68", "-13.9636, -25.921, -30.3408, 0.45", "-13.9598, -27.2768, -30.993, 0.91", "-14.0014, -28.6778, -31.5334, 0.45", "-14.0685, -30.1546, -32.0821, 0.45", "-14.1071, -31.4256, -32.5519, 0.45", "-14.1316, -32.8186, -33.1428, 0.45", "-14.1368, -33.42, -33.4354, 0.68", "-14.1668, -35.0144, -34.3156, 0.91", "-14.1347, -36.9262, -35.4953, 0.68", "-14.0577, -38.7563, -36.7032, 0.45", "-13.9975, -39.6273, -37.3133, 0.68", "-13.909, -40.5807, -37.9907, 0.91", "-13.7635, -41.8921, -38.8963, 0.45", "-13.5493, -43.4125, -39.9158, 0.68", "-13.3661, -44.8875, -40.8211, 0.45", "-13.2983, -45.587, -41.2444, 0.68", "-13.1719, -46.8493, -41.9634, 0.91", "-13.0386, -48.096, -42.6462, 0.91", "-12.9214, -49.4055, -43.2947, 0.45", "-12.8272, -51.087, -44.0212, 0.45", "-12.7794, -51.7358, -44.2732, 0.68", "-12.5817, -53.6118, -44.9242, 0.45", "-12.4792, -54.5768, -45.2339, 0.45", "-12.4533, -54.9324, -45.2988, 0.45", "-12.3106, -57.2341, -45.4564, 0.68", "-12.2132, -58.5823, -45.4699, 0.45", "-12.1408, -59.8183, -45.4344, 1.14", "-12.0777, -61.4785, -45.3573, 0.68", "-11.9593, -64.5656, -45.2304, 0.23", "-11.8984, -65.7368, -45.231, 0.45", "-11.8316, -67.1654, -45.2786, 0.23", "-11.7805, -68.3317, -45.3685, 0.68", "-11.6761, -69.8696, -45.5986, 0.91", "-11.4558, -71.8293, -46.0505, 0.68", "-11.1732, -73.9727, -46.7432, 0.23", "-10.9205, -75.6048, -47.2759, 0.91", "-10.7243, -76.68, -47.629, 0.68", "-10.3572, -78.338, -48.2172, 0.68", "-10.0229, -79.6036, -48.7011, 0.45", "-9.62019, -80.9641, -49.2583, 0.45", "-8.95422, -83.0139, -50.0917, 0.23", "-8.61124, -83.9998, -50.4968, 0.68", "-8.12116, -85.3829, -51.0181, 0.91", "-7.49286, -87.202, -51.6757, 0.23", "-7.05429, -88.5403, -52.1719, 0.23", "-6.88779, -89.0994, -52.3933, 0.68", "-6.60107, -90.2859, -52.8808, 0.23", "-6.36802, -91.7547, -53.4368, 0.45", "-6.27654, -93.0201, -53.8953, 0.23", "-6.27253, -94.1545, -54.2918, 0.91", "-6.3313, -95.7024, -54.8087, 0.23", "-6.38592, -96.5181, -55.0755, 0.68", "-6.61877, -99.4143, -55.9571, 0.45", "-6.72354, -101.311, -56.4497, 0.68", "-6.76124, -103.617, -57.0192, 0.23", "-6.71422, -106.157, -57.6217, 0.45", "-6.63248, -107.972, -58.05, 0.23", "-6.4566, -110.496, -58.6483, 0.23", "-6.16482, -112.978, -59.2209, 0.23", "-5.79418, -115.308, -59.7321, 0.23", "-5.67639, -115.884, -59.8613, 0.23", "-5.319, -117.3, -60.2024, 0.45" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-14.4606, -17.8807, -24.3383, 0.91", "-14.9433, -18.5708, -24.7917, 0.91", "-16.0926, -20.1418, -25.8027, 0.68", "-17.0157, -21.3269, -26.5295, 0.68", "-18.1242, -22.6161, -27.273, 0.68", "-18.9148, -23.5355, -27.8033, 0.68", "-19.6494, -24.3897, -28.296, 0.68", "-20.3396, -25.2423, -28.7936, 0.68", "-20.9509, -26.0161, -29.2319, 0.91", "-21.919, -27.0356, -29.7075, 0.91" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-22.049, -9.28532, 27.8517, 0.23", "-24.1698, -9.96665, 28.0998, 0.23", "-25.3788, -10.4185, 28.4132, 0.23", "-26.4475, -10.7955, 28.755, 0.23", "-27.6719, -11.3255, 29.1918, 0.23", "-29.2538, -12.0896, 29.8123, 0.69", "-30.3269, -12.608, 30.2332, 0.46", "-31.4439, -13.1837, 30.8053, 0.46", "-33.5006, -14.3085, 31.9913, 0.46", "-35.2265, -15.3686, 33.0247, 0.23", "-35.6505, -15.644, 33.2651, 0.23" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-22.049, -9.28532, 27.8517, 0.46", "-23.8212, -8.19457, 25.8886, 0.46", "-25.8465, -6.94805, 23.6451, 0.23" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "49.2353, -30.8652, -18.2376, 0.23", "48.6562, -32.1709, -17.2837, 0.23", "48.3898, -33.1696, -16.3103, 0.23", "48.3076, -33.7715, -15.6444, 0.45", "48.4032, -34.5614, -14.555, 0.23", "48.5053, -34.828, -14.0617, 0.45", "48.9061, -35.8747, -12.1249, 0.23", "49.3543, -36.4947, -10.6688, 0.23", "49.6167, -36.7252, -10.0173, 0.45", "50.5655, -37.2783, -7.98011, 0.23", "51.392, -37.5459, -6.39758, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "49.2353, -30.8652, -18.2376, 0.45", "51.7212, -30.4357, -18.5728, 0.45", "52.7002, -30.2739, -18.7285, 0.45", "54.2772, -30.0423, -18.9858, 0.68", "56.7294, -29.754, -19.3792, 0.68", "59.6326, -29.5175, -19.8206, 0.45", "61.5819, -29.4172, -20.0989, 0.45", "63.637, -29.4249, -20.4175, 0.45", "64.7834, -29.4656, -20.616, 0.23", "66.0383, -29.5543, -20.8471, 0.45", "67.9002, -29.7897, -21.1862, 0.45", "69.2375, -30.0757, -21.4386, 0.23", "69.801, -30.2354, -21.5867, 0.45", "71.2283, -30.7203, -22.0813, 0.23", "71.9257, -30.9575, -22.3585, 0.23", "72.9232, -31.2755, -22.8099, 0.91", "74.657, -31.8165, -23.7063, 0.23", "76.3644, -32.4029, -24.6904, 0.45", "77.398, -32.7839, -25.3911, 0.23", "78.6154, -33.263, -26.3402, 0.45", "80.0019, -33.775, -27.5427, 0.68", "80.8929, -34.053, -28.3485, 0.68", "82.3948, -34.3407, -29.6328, 0.23", "84.422, -34.503, -31.1107, 0.23", "85.746, -34.4935, -31.9285, 0.45", "86.9156, -34.4173, -32.5228, 0.23", "88.4834, -34.1629, -33.0975, 0.68", "90.5972, -33.6366, -33.5633, 0.23", "93.3944, -32.7429, -33.8452, 0.23", "94.7857, -32.2271, -33.8475, 0.23", "95.6587, -31.8433, -33.7459, 0.23", "97.2244, -31.0162, -33.2888, 0.23", "98.4919, -30.1499, -32.5463, 0.68", "99.0831, -29.6449, -31.9916, 0.23", "99.5519, -29.158, -31.4122, 0.68", "101.024, -27.4746, -29.2105, 0.23", "102.157, -26.0589, -27.1772, 0.23", "103.046, -24.8433, -25.1739, 0.23", "103.259, -24.4992, -24.5728, 0.91" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-21.0169, 14.9789, -19.7494, 0.92", "-21.3964, 16.0341, -19.1749, 0.92", "-21.9635, 17.7834, -18.1656, 0.69", "-22.3526, 19.077, -17.3909, 0.69", "-22.7661, 20.5844, -16.4618, 0.92", "-23.2219, 22.2008, -15.4663, 0.69", "-23.6776, 23.8168, -14.4711, 0.46", "-24.0916, 25.1328, -13.6146, 0.69", "-24.4555, 26.2632, -12.8367, 0.69", "-24.6307, 26.9103, -12.3909, 0.92", "-24.805, 27.7932, -11.7802, 1.15" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-21.0169, 14.9789, -19.7494, 0.69", "-22.0964, 14.9277, -19.8068, 0.69", "-24.5991, 14.4747, -19.934, 0.46", "-25.6855, 14.1904, -20.0079, 0.46", "-26.5642, 13.9254, -20.072, 0.46", "-27.4805, 13.6406, -20.1359, 0.46", "-28.9762, 13.0902, -20.2333, 0.69", "-30.1099, 12.5609, -20.2813, 0.69", "-31.2086, 11.9813, -20.2581, 0.69", "-32.4595, 11.3368, -20.1672, 0.69", "-34.154, 10.6102, -19.9999, 0.46", "-36.1205, 9.99982, -19.7249, 0.46", "-37.3629, 9.75423, -19.4759, 0.46", "-38.8188, 9.55492, -19.096, 0.46", "-39.5304, 9.47221, -18.8786, 0.92", "-41.2811, 9.31741, -18.3242, 0.46", "-42.7454, 9.2639, -17.9341, 0.46", "-44.2557, 9.29297, -17.5679, 0.46", "-46.1846, 9.29246, -17.1171, 0.69", "-47.2403, 9.24078, -16.8612, 0.69", "-48.5759, 9.12707, -16.5327, 0.46", "-50.4001, 8.8854, -16.0901, 0.69", "-52.1679, 8.68317, -15.7093, 0.23", "-53.6293, 8.59079, -15.4286, 0.46", "-55.2466, 8.57593, -15.0668, 1.38" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-11.03, 4.32162, -30.3305, 0.69", "-11.304, 4.58908, -30.922, 0.69", "-11.9837, 5.45854, -33.0847, 0.69", "-12.3545, 6.10221, -34.8802, 0.69", "-12.5287, 6.48549, -35.9813, 0.69", "-12.6207, 6.82752, -36.9043, 0.69", "-12.7104, 7.22635, -37.9225, 0.69", "-12.8136, 7.92117, -39.5139, 0.69", "-12.8138, 8.71611, -41.2161, 0.69", "-12.6815, 9.6831, -43.1701, 0.46", "-12.6013, 10.2974, -44.3966, 0.46", "-12.5971, 10.542, -44.8823, 0.46", "-12.6903, 11.225, -46.2673, 0.69", "-12.9506, 12.5525, -48.834, 0.69", "-13.0879, 13.7113, -50.8281, 0.69", "-13.1417, 14.6679, -52.2797, 0.69", "-13.1769, 15.3976, -53.2054, 0.69", "-13.1509, 16.4583, -54.3516, 0.69", "-13.0642, 17.7305, -55.608, 0.46", "-12.9607, 19.1406, -56.788, 0.92", "-12.8596, 20.5302, -57.8449, 0.69", "-12.7459, 22.195, -59.0572, 0.69", "-12.6898, 23.4075, -59.9622, 0.46", "-12.6886, 25.079, -61.3275, 0.69", "-12.7748, 26.2492, -62.3834, 0.69", "-12.9892, 27.6118, -63.6499, 0.69", "-13.1779, 28.5254, -64.5478, 0.69", "-13.3791, 29.225, -65.2431, 0.69", "-13.7654, 30.3416, -66.2224, 0.92", "-13.9917, 30.9967, -66.7316, 1.38", "-14.4554, 32.379, -67.7436, 0.69", "-14.987, 33.939, -68.8909, 0.69", "-15.4742, 35.4032, -69.9282, 0.69", "-15.7786, 36.3265, -70.5429, 0.46", "-16.2649, 37.7733, -71.4307, 0.92", "-16.8193, 39.3628, -72.3951, 0.46", "-17.5174, 41.3242, -73.5745, 0.46", "-17.6876, 41.7929, -73.8619, 0.69", "-17.9632, 42.5432, -74.3494, 0.92", "-18.3598, 43.5127, -75.0105, 0.92", "-19.2324, 45.3485, -76.3016, 0.46", "-20.1643, 46.9688, -77.4835, 0.46", "-20.8849, 48.0681, -78.2531, 0.46", "-21.3941, 48.7713, -78.7221, 0.46", "-22.4528, 50.072, -79.5489, 0.92", "-24.019, 51.8248, -80.5156, 0.46", "-25.1254, 53.0234, -81.0009, 0.69", "-26.229, 54.2834, -81.3488, 0.46", "-26.883, 55.1447, -81.5656, 0.46", "-27.3312, 55.9262, -81.7519, 0.69", "-28.0415, 58.081, -82.365, 0.46", "-28.1915, 59.4179, -82.9276, 0.46", "-28.1813, 61.0058, -83.884, 0.46", "-28.0697, 63.1579, -85.5502, 0.46", "-27.9294, 64.7975, -87.0262, 0.46", "-27.6803, 66.8053, -89.1863, 0.46", "-27.4241, 68.6731, -91.4892, 0.46", "-27.2743, 70.1174, -93.3177, 0.69", "-27.2438, 71.0838, -94.5837, 0.69", "-27.2944, 72.2118, -95.9667, 0.46", "-27.5422, 74.03, -98.0811, 0.46", "-27.7285, 74.8894, -98.9403, 0.46", "-28.3479, 77.3562, -101.126, 0.46", "-28.8178, 78.884, -102.495, 0.46", "-29.3957, 80.4275, -103.896, 0.69", "-30.139, 82.1028, -105.672, 0.69", "-30.779, 83.4353, -107.174, 0.46", "-31.3844, 84.7384, -108.666, 0.46", "-31.9585, 85.9931, -110.135, 0.46", "-32.4208, 86.9541, -111.156, 0.23", "-33.8484, 89.7978, -114.06, 0.23", "-34.2461, 90.6877, -114.85, 0.23", "-34.939, 92.3347, -116.226, 0.23", "-35.2364, 93.0398, -116.831, 0.23", "-35.7347, 94.2493, -117.929, 0.69", "-36.2532, 95.4351, -119.098, 0.23", "-36.9093, 96.6955, -120.539, 0.23", "-37.7635, 98.1566, -122.622, 0.23", "-38.3027, 98.9915, -124.163, 0.23", "-38.6972, 99.5984, -125.379, 0.23", "-39.1225, 100.298, -126.839, 0.46", "-39.9772, 101.647, -129.71, 0.23", "-40.7026, 102.762, -132.142, 0.23", "-41.855, 104.573, -136.087, 0.23", "-42.0457, 104.873, -136.748, 0.46", "-42.8616, 106.149, -139.638, 0.23", "-43.6379, 107.405, -142.545, 0.23", "-44.3088, 108.641, -145.07, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-11.03, 4.32162, -30.3305, 0.46", "-11.2144, 4.38605, -30.9647, 0.46", "-11.2206, 4.29808, -32.6785, 0.46", "-11.1102, 4.16508, -33.4042, 0.46", "-10.9878, 4.00126, -33.9821, 0.46", "-10.6871, 3.51945, -35.2246, 0.46", "-10.3143, 2.78883, -36.897, 0.46", "-10.0475, 2.18407, -38.1937, 0.46", "-9.74919, 1.24251, -39.9629, 0.46", "-9.66981, 0.804015, -40.7338, 1.15", "-9.5887, -0.112747, -42.1112, 0.69", "-9.55129, -1.22958, -43.5719, 0.69", "-9.54786, -2.32576, -44.8477, 0.92", "-9.59392, -3.45359, -46.115, 0.69", "-9.63354, -4.5078, -47.279, 0.69", "-9.58848, -6.24802, -49.1828, 0.46", "-9.4831, -7.23232, -50.2756, 0.46", "-9.42455, -7.64428, -50.7284, 0.69", "-9.19652, -9.22426, -52.5042, 0.46", "-9.01626, -10.6477, -54.1303, 0.69", "-8.87724, -11.9829, -55.685, 0.92", "-8.64872, -13.7247, -57.7483, 0.69", "-8.42028, -15.1081, -59.4091, 0.69", "-8.21779, -16.1343, -60.6588, 0.69", "-7.98604, -17.3269, -62.1445, 0.69", "-7.78711, -18.5645, -63.6995, 0.69", "-7.55888, -20.3856, -66.0623, 0.92", "-7.42018, -21.7457, -67.8201, 0.69", "-7.32553, -22.8376, -69.3457, 0.69", "-7.26172, -24.0584, -71.175, 0.69", "-7.26767, -24.9419, -72.6073, 0.69", "-7.31182, -25.9081, -74.2237, 1.15", "-7.39918, -26.7026, -75.5898, 1.61", "-7.59349, -28.8054, -79.086, 0.69", "-7.64295, -29.6433, -80.4719, 0.69", "-7.63406, -30.893, -82.5475, 0.69", "-7.60138, -31.4507, -83.5511, 0.92" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "10.894, 35.3945, -24.2287, 0.92", "12.4628, 35.712, -23.3827, 0.92", "13.9846, 36.1708, -22.6276, 0.69", "16.1249, 37.025, -21.7553, 0.46", "17.3043, 37.6163, -21.3505, 0.46", "18.0971, 38.1042, -21.1092, 0.46", "18.5889, 38.4375, -20.964, 0.92", "20.0457, 39.549, -20.6302, 0.92", "21.853, 41.0491, -20.408, 0.46", "23.1507, 42.1469, -20.3622, 0.69", "25.2261, 43.7527, -20.4383, 0.46", "27.6356, 45.3251, -20.7315, 0.92", "28.888, 45.911, -21.055, 0.23", "30.5932, 46.3087, -21.7271, 0.69", "32.0951, 46.402, -22.5294, 0.46", "34.3012, 46.2064, -23.9547, 0.69", "36.0646, 45.8782, -25.255, 0.69", "38.8337, 45.1374, -27.3904, 0.69", "40.7225, 44.5287, -28.7588, 0.69", "42.3625, 43.9243, -29.84, 0.69", "43.6935, 43.3929, -30.6212, 0.69", "44.6291, 43.0094, -31.0981, 0.69", "46.6697, 42.1633, -31.9272, 0.92", "48.2831, 41.4479, -32.4238, 0.46", "50.3411, 40.5356, -32.929, 0.46", "51.6156, 39.9246, -33.173, 0.23", "52.9048, 39.3191, -33.376, 0.46", "54.3662, 38.6508, -33.6264, 0.46", "55.1913, 38.3004, -33.7832, 0.46", "56.676, 37.7001, -34.117, 0.69", "58.0342, 37.1613, -34.4423, 0.46", "59.0927, 36.764, -34.758, 0.46", "61.2006, 35.9882, -35.4583, 0.23", "62.8084, 35.389, -36.0728, 0.46", "64.16, 34.911, -36.6437, 0.23", "65.5925, 34.4692, -37.2887, 0.46", "67.5362, 34.0092, -38.1506, 0.23", "68.2223, 33.9, -38.4308, 0.23", "69.422, 33.8721, -38.8147, 0.46", "72.0701, 34.1681, -39.4448, 0.23", "73.1104, 34.3894, -39.6535, 0.69", "74.6515, 34.8267, -39.9414, 0.23", "75.7694, 35.1739, -40.1323, 0.69", "78.1459, 35.9757, -40.4282, 0.23", "79.7496, 36.5663, -40.5214, 0.69", "82.491, 37.5643, -40.4927, 0.23", "84.3233, 38.2404, -40.2913, 0.23", "85.4502, 38.6802, -39.992, 0.46", "87.9901, 39.7976, -38.7451, 0.23", "89.0899, 40.3699, -37.8534, 0.23", "89.5276, 40.6815, -37.3263, 0.46", "90.6811, 41.9478, -35.2359, 0.23", "91.294, 43.0414, -33.6313, 0.23", "91.6007, 44.1477, -32.2798, 0.23", "91.6623, 44.5706, -31.829, 0.23", "91.7438, 45.6166, -30.8162, 0.46", "91.7552, 47.2886, -29.3497, 0.23", "91.6137, 49.1465, -28.0126, 0.23", "91.4099, 50.9776, -26.8993, 0.23" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "10.894, 35.3945, -24.2287, 0.46", "10.5135, 36.1324, -25.4663, 0.46", "9.39543, 37.7894, -27.9795, 0.46", "8.63973, 38.5695, -29.2634, 0.46", "8.10438, 39.0325, -30.1007, 0.46", "7.5336, 39.5106, -30.9799, 0.46", "6.7629, 40.1572, -32.166, 0.46", "5.91539, 40.8091, -33.3681, 0.46", "4.80441, 41.6615, -34.9689, 0.69", "3.92547, 42.3416, -36.4146, 0.46", "3.15347, 42.9587, -37.8964, 0.46", "2.50637, 43.4789, -39.3417, 0.69", "1.68468, 44.0899, -41.4466, 0.69", "0.836768, 44.7083, -43.8526, 0.69", "0.375689, 45.0294, -45.2434, 0.69", "0.0552791, 45.2037, -46.2511, 0.69", "-0.546351, 45.4615, -48.333, 0.69", "-1.03532, 45.6824, -50.2359, 0.69", "-1.24483, 45.8135, -51.1037, 0.69", "-1.47152, 45.9866, -51.9813, 0.69", "-1.95909, 46.4889, -53.8386, 0.69", "-2.27952, 46.8883, -55.0091, 0.69", "-2.6143, 47.3998, -56.1691, 0.46", "-3.30068, 48.549, -58.2856, 0.46", "-3.83001, 49.4565, -59.7558, 0.46", "-4.44536, 50.5362, -61.3242, 0.46", "-4.84712, 51.2172, -62.2822, 0.46", "-5.25148, 51.9132, -63.2335, 0.46", "-5.6468, 52.6498, -64.2852, 0.23", "-6.20104, 53.8261, -66.0796, 0.46", "-6.91923, 55.5394, -68.8866, 0.23", "-7.22188, 56.4009, -70.356, 0.23", "-7.42512, 57.1773, -71.8622, 0.92", "-7.71855, 58.8919, -75.5532, 0.23", "-7.79992, 60.0807, -78.3231, 0.46", "-7.78115, 60.9887, -80.5458, 0.46", "-7.71741, 61.4748, -81.7941, 0.69", "-7.44032, 62.8978, -85.5818, 0.69", "-7.28789, 63.644, -87.6298, 0.69", "-7.18729, 64.1247, -88.9616, 0.46", "-7.09582, 64.6336, -90.4725, 0.69", "-6.97186, 65.3992, -93.0026, 0.69", "-6.89654, 66.0671, -95.3066, 0.69", "-6.8893, 66.5161, -96.7398, 0.46", "-6.88797, 67.3377, -99.501, 0.46", "-6.87141, 68.1747, -102.391, 0.46", "-6.82341, 69.0943, -105.648, 0.46", "-6.78332, 69.6253, -107.574, 0.46", "-6.67997, 70.1369, -109.45, 0.23" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-21.919, -27.0356, -29.7075, 0.68", "-23.1943, -26.9152, -30.8423, 0.68", "-24.6938, -26.7204, -32.1078, 0.68", "-26.2762, -26.4517, -33.3896, 0.45", "-27.7993, -26.1514, -34.5489, 0.91", "-29.0849, -25.8515, -35.4343, 0.45", "-30.7144, -25.4019, -36.5082, 0.68", "-31.5183, -25.1412, -36.9669, 0.23", "-32.1443, -24.895, -37.2847, 0.23", "-33.3423, -24.3265, -37.8638, 0.91", "-34.8092, -23.5698, -38.6008, 0.45", "-36.1503, -22.8589, -39.3513, 0.45", "-36.6815, -22.5852, -39.6856, 0.68", "-38.2535, -21.773, -40.7989, 0.45", "-39.0581, -21.3942, -41.429, 0.45", "-39.9305, -21.0271, -42.1431, 0.45", "-41.6695, -20.4564, -43.5883, 0.68", "-42.8717, -20.1263, -44.5055, 0.45", "-43.9961, -19.8658, -45.3299, 0.45", "-45.3108, -19.6552, -46.216, 0.68", "-46.4532, -19.5216, -46.9603, 0.45", "-48.0887, -19.3354, -48.0645, 0.45", "-49.2572, -19.2106, -48.9063, 0.45", "-50.8683, -19.0564, -50.0724, 0.45", "-52.2518, -18.9441, -51.1128, 0.91", "-54.0419, -18.8386, -52.6011, 0.45", "-55.6035, -18.7967, -54.0453, 0.45", "-56.6743, -18.786, -55.0472, 0.45", "-57.9251, -18.7775, -56.1998, 0.68", "-59.1517, -18.7233, -57.2832, 0.68", "-60.4834, -18.639, -58.3444, 0.68", "-61.7648, -18.5472, -59.2048, 0.68", "-63.5707, -18.4033, -60.3354, 0.68", "-64.9878, -18.2631, -61.2514, 0.45", "-66.3422, -18.1343, -62.1604, 0.68", "-68.6962, -17.9711, -63.7021, 0.23", "-69.8776, -17.9085, -64.4609, 0.68", "-72.1979, -17.8524, -65.9904, 0.45", "-73.6867, -17.8876, -66.9995, 0.45", "-74.9868, -17.9681, -67.8968, 0.45", "-76.4032, -18.0863, -68.8912, 0.45", "-77.6689, -18.1997, -69.7491, 0.45", "-78.3683, -18.2656, -70.181, 0.45", "-79.8062, -18.3568, -70.9151, 0.68", "-81.3572, -18.3759, -71.5556, 0.45", "-83.1856, -18.2842, -72.1657, 0.45", "-84.9823, -18.1303, -72.7145, 0.45", "-86.6481, -17.916, -73.2468, 0.45", "-87.4837, -17.7796, -73.5383, 0.68", "-88.9381, -17.5069, -74.1653, 0.68", "-90.8203, -17.096, -75.0687, 0.23", "-91.9781, -16.8033, -75.6795, 0.23", "-93.6375, -16.3282, -76.6277, 0.68", "-95.7004, -15.7069, -77.7239, 0.45", "-97.8307, -15.0947, -78.8346, 0.45", "-99.3278, -14.6551, -79.6115, 0.45", "-100.62, -14.2859, -80.2493, 0.45", "-102.89, -13.6129, -81.3382, 0.45", "-105.206, -12.9144, -82.4121, 0.45", "-107.053, -12.3448, -83.2994, 0.45", "-108.586, -11.9072, -84.1468, 0.45", "-110.753, -11.4018, -85.6654, 0.23", "-112.819, -11.0342, -87.5146, 0.23", "-113.586, -10.9438, -88.3429, 0.68", "-114.822, -10.7931, -89.8377, 0.23", "-116.656, -10.5277, -92.1676, 0.23", "-118.55, -10.1972, -94.5357, 0.23", "-120.56, -9.82966, -97.1238, 0.23", "-122.157, -9.54361, -99.1771, 0.23", "-123.478, -9.25765, -100.897, 0.23", "-125.155, -8.79259, -102.97, 0.23", "-126.735, -8.24436, -104.651, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-21.919, -27.0356, -29.7075, 0.68", "-22.4053, -28.0993, -30.5038, 0.68", "-23.1855, -29.7401, -31.6108, 0.68", "-23.9322, -31.1185, -32.5304, 0.91", "-24.7192, -32.4861, -33.4439, 0.45", "-25.181, -33.2617, -33.9527, 0.68", "-26.001, -34.6052, -34.8127, 0.68", "-27.0609, -36.1832, -35.7585, 0.91", "-27.9602, -37.4746, -36.4157, 0.45", "-28.6332, -38.3689, -36.817, 0.68", "-29.4619, -39.4387, -37.1893, 0.45", "-29.9069, -40.0005, -37.3259, 0.91", "-30.7278, -40.9746, -37.4403, 1.36", "-31.7222, -42.1089, -37.4671, 0.45", "-32.541, -43.0552, -37.4243, 0.45", "-33.7879, -44.479, -37.3092, 0.45", "-34.4967, -45.3228, -37.2349, 0.91", "-35.6334, -46.7294, -37.0956, 0.45", "-36.7412, -48.1363, -36.9139, 0.45", "-37.4852, -49.1126, -36.7754, 0.45", "-38.0448, -49.9036, -36.6642, 0.45", "-39.0475, -51.3598, -36.4768, 0.68", "-40.2121, -53.0854, -36.2209, 0.45", "-41.1926, -54.5924, -35.9846, 0.45", "-41.9789, -55.8047, -35.7728, 0.45", "-42.4745, -56.5298, -35.6258, 0.91", "-43.5791, -58.1115, -35.2672, 0.45", "-44.524, -59.4417, -34.9299, 0.68", "-45.8381, -61.2815, -34.4459, 0.45", "-46.8015, -62.5645, -34.0903, 0.45", "-47.8071, -63.8334, -33.6721, 0.45", "-48.3699, -64.5745, -33.3917, 0.91", "-49.3308, -65.9847, -32.8088, 0.45", "-50.0653, -67.1422, -32.329, 0.45", "-50.659, -68.2003, -31.9367, 0.68", "-51.4805, -69.9131, -31.4331, 0.45", "-52.4107, -72.27, -30.8615, 0.68", "-52.9, -73.6592, -30.5817, 0.45", "-53.3993, -75.2671, -30.3232, 0.45", "-53.9185, -77.1334, -30.129, 0.45", "-54.358, -78.8549, -30.0645, 0.45", "-54.7848, -80.5414, -30.1182, 0.45", "-55.3386, -82.5229, -30.2761, 0.91", "-55.8396, -84.0279, -30.4167, 0.23", "-56.6977, -86.3746, -30.6846, 0.45", "-57.199, -87.6504, -30.8627, 0.68", "-57.5965, -88.732, -31.0808, 0.68", "-58.1009, -90.2917, -31.5119, 0.45", "-58.5815, -92.0916, -32.1285, 0.45", "-58.8502, -93.2847, -32.5803, 0.45", "-59.1178, -94.5303, -33.1239, 0.68", "-59.4721, -96.1057, -33.9106, 0.45", "-59.7905, -97.4944, -34.7397, 0.45", "-60.0632, -98.665, -35.5381, 0.45", "-60.3474, -99.8164, -36.3696, 0.68", "-60.8332, -101.309, -37.4756, 0.45", "-61.2639, -102.348, -38.288, 0.68", "-61.8242, -103.527, -39.2286, 0.45", "-62.1593, -104.187, -39.7087, 0.68", "-62.7917, -105.344, -40.4767, 0.68", "-63.5235, -106.585, -41.2474, 0.23", "-64.2938, -107.877, -41.9408, 0.23", "-64.7172, -108.584, -42.2784, 0.45", "-65.8163, -110.465, -43.073, 0.23", "-66.2533, -111.203, -43.3789, 0.23", "-66.9454, -112.299, -43.8147, 0.23", "-67.1248, -112.584, -43.9169, 0.23", "-67.5756, -113.339, -44.1554, 0.45", "-68.9346, -115.874, -44.759, 0.23", "-69.1811, -116.361, -44.8163, 0.68", "-70.6499, -119.384, -44.7846, 0.23", "-71.1637, -120.491, -44.6387, 0.45", "-72.24, -122.962, -44.0679, 0.23", "-73.0739, -125.042, -43.4179, 0.68", "-73.8556, -127.153, -42.6263, 0.45", "-74.2931, -128.51, -42.1311, 0.45", "-74.9739, -130.906, -41.283, 0.23", "-75.5837, -133.136, -40.5945, 0.23", "-75.8602, -134.218, -40.3188, 0.45", "-76.6823, -137.354, -39.6895, 0.23", "-77.4318, -140.085, -39.1681, 0.23", "-77.8594, -141.507, -38.9054, 0.23", "-78.2217, -142.601, -38.6872, 0.45", "-79.135, -145.092, -38.1945, 0.23", "-80.1068, -147.582, -37.6887, 0.23", "-81.2614, -150.303, -37.0138, 0.23", "-82.1846, -152.253, -36.4085, 0.23", "-82.5674, -153.008, -36.1271, 0.45", "-83.8628, -155.482, -35.2417, 0.23", "-84.1447, -156.006, -35.1023, 0.68", "-85.2962, -158.293, -34.913, 0.23", "-86.0465, -159.837, -35.1266, 0.23", "-86.7267, -161.215, -35.4086, 0.23", "-87.9268, -163.707, -36.3342, 0.23", "-88.8337, -165.788, -37.8596, 0.23", "-89.4789, -167.389, -39.4474, 0.23", "-89.7685, -168.184, -40.4542, 0.45" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-24.805, 27.7932, -11.7802, 0.69", "-25.1784, 28.1571, -11.2207, 0.69", "-26.0174, 29.1296, -10.0938, 0.46", "-26.9593, 30.2677, -8.90363, 0.46", "-27.6355, 31.0227, -8.13307, 0.46", "-28.3078, 31.7003, -7.45165, 0.46", "-29.1819, 32.5172, -6.61791, 0.46", "-30.3343, 33.5926, -5.57014, 0.69", "-31.0997, 34.3056, -4.98119, 0.69", "-31.777, 34.8389, -4.5483, 0.92", "-32.4747, 35.2684, -4.12984, 0.46", "-33.5848, 35.739, -3.509, 0.46", "-34.9547, 36.1398, -2.83278, 0.69", "-36.238, 36.4168, -2.25097, 0.69", "-37.7127, 36.651, -1.59245, 0.46", "-39.2023, 36.7891, -0.929354, 0.92", "-40.4485, 36.7766, -0.33656, 0.46", "-41.6698, 36.6241, 0.327115, 0.46", "-42.7454, 36.4051, 1.03875, 0.46", "-43.4336, 36.217, 1.6323, 0.46", "-44.165, 35.9723, 2.42031, 0.69", "-45.2684, 35.5752, 3.76085, 0.92", "-46.6126, 35.0492, 5.53187, 0.69", "-47.6348, 34.6028, 6.96955, 0.69", "-48.9467, 34.0297, 8.79302, 0.69", "-49.9221, 33.6717, 10.0634, 0.69", "-51.018, 33.3075, 11.4873, 0.46", "-51.9307, 33.0085, 12.6048, 0.46", "-53.0357, 32.6235, 13.9138, 0.46", "-53.8962, 32.317, 14.9129, 0.69", "-55.2583, 31.9014, 16.4369, 0.46", "-56.9511, 31.4481, 18.2991, 0.46", "-57.297, 31.3451, 18.7089, 0.46" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-24.805, 27.7932, -11.7802, 0.69", "-24.6456, 29.2202, -12.1271, 0.69", "-24.445, 30.6061, -12.3306, 0.46", "-24.2023, 32.0719, -12.4441, 0.46", "-24.1221, 32.6888, -12.4923, 0.92", "-23.9857, 33.8274, -12.5781, 0.92", "-23.8038, 35.4112, -12.6688, 0.46", "-23.7102, 36.176, -12.6675, 0.46", "-23.506, 37.6193, -12.6236, 0.69", "-23.1726, 39.7878, -12.6407, 0.69", "-23.0161, 40.6637, -12.67, 0.69", "-22.6291, 42.3816, -12.8569, 0.92", "-22.1596, 44.0749, -13.1439, 0.46", "-21.7031, 45.3312, -13.4163, 0.69", "-21.0442, 46.6502, -13.802, 0.92", "-20.2174, 47.9198, -14.3162, 1.15", "-18.7803, 49.885, -15.3943, 0.46", "-18.0811, 50.7673, -15.9744, 0.46", "-17.2171, 51.8817, -16.7841, 0.92", "-16.2128, 53.3061, -17.8227, 0.46", "-15.3726, 54.6603, -18.7308, 0.46", "-14.7506, 55.9688, -19.5454, 0.46", "-14.1145, 57.8109, -20.6025, 0.69", "-13.6063, 59.544, -21.5776, 0.46", "-13.2512, 61.0998, -22.4047, 0.69", "-13.0265, 62.3847, -22.9993, 0.69", "-12.7455, 64.2171, -23.7595, 0.46", "-12.5351, 65.6033, -24.3143, 0.46", "-12.3126, 67.3432, -25.0935, 0.92" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-55.2466, 8.57593, -15.0668, 0.46", "-57.0903, 6.74037, -15.5102, 0.46", "-58.046, 5.85306, -15.4896, 0.46", "-58.9964, 5.00656, -15.3681, 0.69", "-60.4914, 3.74255, -15.0649, 0.46", "-61.5007, 2.87438, -14.7721, 0.46", "-62.7666, 1.78486, -14.3354, 0.69", "-64.2466, 0.565154, -13.548, 0.46", "-64.6126, 0.252516, -13.3066, 0.46", "-65.5149, -0.481292, -12.587, 0.46", "-66.7369, -1.39482, -11.4763, 0.46", "-67.4907, -1.91445, -10.779, 0.69", "-68.5272, -2.54496, -9.74068, 0.46", "-69.4708, -3.03311, -8.75618, 0.46", "-70.8046, -3.70618, -7.19538, 0.46", "-71.1586, -3.89766, -6.71859, 0.46", "-71.7341, -4.21403, -5.86209, 0.69", "-72.9607, -4.98239, -3.90912, 0.23", "-73.6239, -5.46801, -2.85366, 0.23", "-74.5626, -6.31166, -1.37547, 0.23", "-75.3497, -7.17309, -0.222263, 0.69", "-76.1682, -8.162, 0.858762, 0.69", "-76.5382, -8.66007, 1.24924, 0.69", "-77.1155, -9.49009, 1.70836, 0.23", "-77.8, -10.5153, 2.11202, 0.23", "-78.5984, -11.6295, 2.4356, 0.23", "-79.4491, -12.7996, 2.67789, 0.46", "-81.0286, -15.0973, 3.0066, 0.23", "-81.6232, -15.973, 3.13311, 0.69", "-82.1231, -16.7188, 3.23386, 0.69" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-55.2466, 8.57593, -15.0668, 0.23", "-56.9133, 8.91379, -13.8863, 0.23", "-58.5265, 9.15859, -12.6503, 0.46", "-60.2386, 9.41057, -11.2177, 0.23", "-60.9227, 9.54545, -10.6149, 0.23", "-61.623, 9.71305, -9.97312, 0.46", "-62.5426, 9.94602, -9.11519, 0.46", "-64.4578, 10.5441, -7.25853, 0.23", "-66.1839, 11.1977, -5.52103, 0.23", "-67.242, 11.6526, -4.44993, 0.46", "-68.4513, 12.2033, -3.22733, 0.23", "-69.4248, 12.7045, -2.20497, 0.23", "-70.5002, 13.3654, -0.960269, 0.23", "-71.0116, 13.7035, -0.371144, 0.92", "-71.7886, 14.1928, 0.620819, 0.23", "-72.4166, 14.5575, 1.55851, 0.46", "-73.5925, 15.2053, 3.68402, 0.23", "-74.6819, 15.7706, 6.14291, 0.23", "-75.161, 15.997, 7.68646, 0.23", "-75.7039, 16.3104, 10.3398, 0.23", "-75.799, 16.4637, 12.02, 0.23", "-75.642, 16.539, 13.2718, 0.23", "-75.3785, 16.5416, 14.2207, 0.23", "-74.4755, 16.453, 16.093, 0.23", "-73.1742, 16.3572, 17.9312, 0.46", "-71.1051, 16.406, 19.8295, 0.23", "-69.9802, 16.5428, 20.6724, 0.23" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-7.60138, -31.4507, -83.5511, 0.46", "-7.07569, -31.4127, -86.9306, 0.46", "-6.60941, -31.4411, -90.0664, 0.46", "-6.28811, -31.5158, -92.5388, 0.69", "-5.80193, -31.7588, -97.0479, 0.46", "-5.44468, -32.0183, -100.667, 0.46", "-5.23361, -32.2433, -103.23, 0.46", "-5.05985, -32.5742, -106.497, 0.69", "-4.98139, -32.9523, -110.001, 0.69", "-5.03324, -33.3846, -113.889, 0.69", "-5.28548, -33.8749, -118.465, 0.69", "-5.79039, -34.3792, -123.281, 0.69", "-6.27929, -34.7065, -126.423, 0.69", "-6.99631, -35.0991, -129.823, 0.69", "-8.06189, -35.5991, -134.291, 0.69", "-8.78546, -35.8837, -136.9, 0.69", "-9.80214, -36.2348, -139.955, 0.46", "-11.3053, -36.7503, -143.957, 0.23", "-13.2228, -37.5301, -148.646, 0.23" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-7.60138, -31.4507, -83.5511, 0.23", "-7.55418, -33.0116, -84.9925, 0.23", "-7.46212, -34.1735, -86.271, 0.23", "-7.32792, -35.4683, -87.7674, 0.69", "-7.10255, -37.0982, -89.7744, 0.92", "-6.8524, -38.9546, -92.1158, 0.46", "-6.68367, -40.3943, -93.9124, 0.46", "-6.40469, -42.5354, -96.6734, 0.46", "-6.24023, -43.9596, -98.5407, 0.69", "-6.04961, -46.0092, -101.044, 0.46", "-5.94281, -47.1239, -102.383, 0.46", "-5.8727, -47.9419, -103.346, 0.46", "-5.79783, -49.2028, -104.808, 0.46", "-5.69779, -50.7786, -106.518, 0.69", "-5.50411, -53.4059, -109.351, 0.46", "-5.42315, -54.6776, -110.741, 0.69", "-5.25707, -57.3008, -113.805, 0.23", "-5.21113, -57.9961, -114.627, 0.23", "-5.09977, -59.2819, -116.181, 0.46", "-4.85896, -61.5319, -119.033, 0.23", "-4.64798, -63.6409, -121.804, 0.23", "-4.5002, -65.3914, -124.085, 0.23", "-4.4111, -66.3614, -125.354, 0.23", "-4.26517, -67.6975, -127.236, 0.46", "-3.95665, -69.849, -130.683, 0.23" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-57.297, 31.3451, 18.7089, 0.23", "-57.1951, 29.651, 18.269, 0.23", "-57.1828, 28.8338, 18.0014, 0.23", "-57.2594, 25.8362, 16.9033, 0.23", "-57.3054, 24.0333, 16.2427, 0.23", "-57.3406, 22.6563, 15.7382, 0.23", "-57.3992, 20.3631, 14.8981, 0.23", "-57.4476, 18.9576, 14.3092, 0.23", "-57.5146, 17.9989, 13.8386, 0.23" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-57.297, 31.3451, 18.7089, 0.69", "-58.1194, 31.5157, 19.6219, 0.69", "-59.6155, 31.4377, 21.2673, 1.15", "-60.8402, 31.1672, 22.4726, 0.92", "-62.4866, 30.5892, 23.9386, 0.46", "-63.7301, 30.0539, 24.9692, 0.46", "-65.0608, 29.4412, 26.0843, 0.46", "-66.3071, 28.7174, 27.025, 0.23", "-67.363, 27.9608, 27.7289, 0.23", "-67.8618, 27.5238, 28.0308, 0.46", "-69.3277, 25.9516, 28.8553, 0.46", "-70.1491, 24.8682, 29.2865, 0.23", "-70.5731, 24.0811, 29.5034, 0.23", "-70.8906, 23.0442, 29.6646, 0.23", "-71.0471, 21.3268, 29.8021, 0.23", "-70.869, 19.6161, 29.8119, 0.46", "-70.1791, 17.2972, 29.5929, 0.23", "-69.651, 15.7706, 29.4047, 0.23", "-69.2174, 14.7144, 29.2673, 0.23", "-68.2473, 12.7481, 28.986, 0.23", "-66.9725, 10.61, 28.6386, 0.46", "-65.2635, 8.26672, 28.2168, 0.46" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-12.3126, 67.3432, -25.0935, 0.23", "-13.2614, 68.2053, -24.244, 0.23", "-14.0075, 68.9119, -23.5159, 0.23", "-14.7111, 69.638, -22.7895, 0.92", "-15.8112, 70.8196, -21.5735, 0.23", "-16.9954, 72.0763, -20.1723, 0.23", "-17.9631, 73.1232, -18.9174, 0.23", "-18.5918, 73.7821, -18.017, 0.23", "-19.6241, 74.8679, -16.3527, 0.23", "-20.6825, 75.9544, -14.4118, 0.23", "-21.6605, 76.9713, -12.4816, 0.23", "-22.4524, 77.8121, -10.7842, 0.23", "-23.0571, 78.3957, -9.43738, 0.23", "-23.5244, 78.792, -8.32903, 0.23", "-24.1566, 79.2013, -6.61788, 0.23" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-12.3126, 67.3432, -25.0935, 0.46", "-12.2818, 68.2854, -25.2983, 0.46", "-12.1244, 69.1264, -25.5673, 0.46", "-11.8891, 70.384, -25.9696, 0.46", "-11.6332, 71.7515, -26.407, 0.69", "-11.4317, 72.8283, -26.7515, 0.92", "-11.3017, 73.523, -26.9737, 1.38", "-11.0509, 75.3036, -27.6143, 0.92" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-11.0509, 75.3036, -27.6143, 0.46", "-9.64391, 75.5068, -28.0401, 0.46", "-8.37912, 75.9359, -28.4929, 0.46", "-7.5853, 76.4095, -28.8117, 0.46", "-6.84633, 77.0014, -29.0998, 0.46", "-5.44737, 78.291, -29.6469, 0.69", "-4.38175, 79.3796, -30.1608, 0.46", "-3.52023, 80.6147, -30.6919, 0.46", "-3.04395, 81.5924, -31.1307, 0.46", "-2.5297, 82.9698, -31.8252, 0.46", "-2.14638, 84.0997, -32.4823, 0.69", "-1.67884, 85.3987, -33.354, 0.46", "-1.1538, 86.526, -34.1689, 0.69", "-0.252978, 87.9854, -35.2808, 0.46", "0.750306, 89.3266, -36.3001, 0.46", "1.61742, 90.4647, -37.1758, 0.46", "2.13133, 91.0812, -37.6343, 0.23", "3.1472, 92.1243, -38.3536, 0.46", "5.2327, 93.8748, -39.5677, 0.23", "6.97024, 95.081, -40.3142, 0.23" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-11.0509, 75.3036, -27.6143, 0.69", "-11.4887, 76.6595, -26.9227, 0.69", "-11.8798, 78.3402, -26.076, 0.46", "-12.1145, 79.5267, -25.4879, 0.46", "-12.2677, 80.1254, -25.2153, 0.46", "-12.7535, 81.7077, -24.5333, 0.69", "-13.5376, 83.7904, -23.6466, 0.46", "-14.127, 85.3135, -23.0506, 0.46", "-14.7938, 87.0168, -22.4165, 0.46", "-16.2024, 90.508, -21.1439, 0.23", "-16.8323, 91.9353, -20.6111, 0.23", "-17.7042, 93.5965, -19.9511, 0.23" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_23", "dend_18", "dend_9", "dend_6", "dend_1", "dend_0", "dend_40", "dend_33", "dend_29", "dend_24", "dend_22", "dend_19", "dend_15", "dend_10", "dend_8", "dend_7", "dend_5", "dend_2", "dend_46", "dend_41", "dend_39", "dend_34", "dend_31", "dend_30", "dend_26", "dend_25", "dend_21", "dend_20", "dend_17", "dend_16", "dend_14", "dend_11", "dend_4", "dend_3", "dend_52", "dend_47", "dend_45", "dend_42", "dend_38", "dend_35", "dend_28", "dend_27", "dend_13", "dend_12", "dend_56", "dend_53", "dend_51", "dend_48", "dend_44", "dend_43", "dend_37", "dend_36", "dend_62", "dend_57", "dend_55", "dend_54", "dend_50", "dend_49", "dend_64", "dend_63", "dend_61", "dend_58", "dend_60", "dend_59" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_23", "dend_18", "dend_9", "dend_6", "dend_1", "dend_0", "dend_40", "dend_33", "dend_29", "dend_24", "dend_22", "dend_19", "dend_15", "dend_10", "dend_8", "dend_7", "dend_5", "dend_2", "dend_46", "dend_41", "dend_39", "dend_34", "dend_31", "dend_30", "dend_26", "dend_25", "dend_21", "dend_20", "dend_17", "dend_16", "dend_14", "dend_11", "dend_4", "dend_3", "dend_52", "dend_47", "dend_45", "dend_42", "dend_38", "dend_35", "dend_28", "dend_27", "dend_13", "dend_12", "dend_56", "dend_53", "dend_51", "dend_48", "dend_44", "dend_43", "dend_37", "dend_36", "dend_62", "dend_57", "dend_55", "dend_54", "dend_50", "dend_49", "dend_64", "dend_63", "dend_61", "dend_58", "dend_60", "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L1_DAC_81e928d216_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: soma_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_57
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_18, dend_9, dend_6, dend_1, dend_0, dend_40, dend_33, dend_29, dend_24, dend_22, dend_19, dend_15, dend_10, dend_8, dend_7, dend_5, dend_2, dend_46, dend_41, dend_39, dend_34, dend_31, dend_30, dend_26, dend_25, dend_21, dend_20, dend_17, dend_16, dend_14, dend_11, dend_4, dend_3, dend_52, dend_47, dend_45, dend_42, dend_38, dend_35, dend_28, dend_27, dend_13, dend_12, dend_56, dend_53, dend_51, dend_48, dend_44, dend_43, dend_37, dend_36, dend_62, dend_57, dend_55, dend_54, dend_50, dend_49, dend_64, dend_63, dend_61, dend_58, dend_60, dend_59]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_23, dend_18, dend_9, dend_6, dend_1, dend_0, dend_40, dend_33, dend_29, dend_24, dend_22, dend_19, dend_15, dend_10, dend_8, dend_7, dend_5, dend_2, dend_46, dend_41, dend_39, dend_34, dend_31, dend_30, dend_26, dend_25, dend_21, dend_20, dend_17, dend_16, dend_14, dend_11, dend_4, dend_3, dend_52, dend_47, dend_45, dend_42, dend_38, dend_35, dend_28, dend_27, dend_13, dend_12, dend_56, dend_53, dend_51, dend_48, dend_44, dend_43, dend_37, dend_36, dend_62, dend_57, dend_55, dend_54, dend_50, dend_49, dend_64, dend_63, dend_61, dend_58, dend_60, dend_59]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_64
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.49999984658439006)
    connect dend_23(0), soma_0(0.49999984658439006)
    connect dend_18(0), soma_0(0.49999984658439006)
    connect dend_9(0), soma_0(0.49999984658439006)
    connect dend_6(0), soma_0(0.49999984658439006)
    connect dend_1(0), soma_0(0.49999984658439006)
    connect dend_0(0), soma_0(0.49999984658439006)
    connect axon_0(0), soma_0(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.11062, -5.58376, 0.0, 2.32289 ) }
    soma_0 { pt3dadd( 1.87318, -5.06732, 0.0, 4.26744 ) }
    soma_0 { pt3dadd( 1.63575, -4.55088, 0.0, 6.34441 ) }
    soma_0 { pt3dadd( 1.39832, -4.03444, 0.0, 7.43343 ) }
    soma_0 { pt3dadd( 1.16088, -3.518, 0.0, 8.27263 ) }
    soma_0 { pt3dadd( 0.923446, -3.00155, 0.0, 9.07202 ) }
    soma_0 { pt3dadd( 0.686011, -2.48511, 0.0, 9.73854 ) }
    soma_0 { pt3dadd( 0.448576, -1.96867, 0.0, 10.2442 ) }
    soma_0 { pt3dadd( 0.211142, -1.45223, 0.0, 10.6418 ) }
    soma_0 { pt3dadd( -0.026293, -0.935787, 0.0, 11.0394 ) }
    soma_0 { pt3dadd( -0.263728, -0.419346, 0.0, 11.2878 ) }
    soma_0 { pt3dadd( -0.501163, 0.097096, 0.0, 11.372 ) }
    soma_0 { pt3dadd( -0.738597, 0.613538, 0.0, 11.4346 ) }
    soma_0 { pt3dadd( -0.976032, 1.12998, 0.0, 11.3996 ) }
    soma_0 { pt3dadd( -1.21347, 1.64642, 0.0, 11.0085 ) }
    soma_0 { pt3dadd( -1.4509, 2.16286, 0.0, 10.3492 ) }
    soma_0 { pt3dadd( -1.68834, 2.6793, 0.0, 9.68916 ) }
    soma_0 { pt3dadd( -1.92577, 3.19575, 0.0, 8.73406 ) }
    soma_0 { pt3dadd( -2.16321, 3.71219, 0.0, 7.23475 ) }
    soma_0 { pt3dadd( -2.40064, 4.22863, 0.0, 5.34976 ) }
    soma_0 { pt3dadd( -2.63808, 4.74507, 0.0, 3.00569 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.50627, 3.0038, -14.83, 4.13 ) }
    dend_32 { pt3dadd( -1.50627, 3.0038, -14.83, 4.13 ) }
    dend_32 { pt3dadd( -1.85771, 3.26797, -16.3599, 4.13 ) }
    dend_32 { pt3dadd( -2.20375, 3.52809, -17.8663, 4.13 ) }
    dend_32 { pt3dadd( -2.672, 3.88008, -19.9046, 4.13 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.323727, -2.7462, 13.78, 0.92 ) }
    dend_23 { pt3dadd( 0.323727, -2.7462, 13.78, 0.92 ) }
    dend_23 { pt3dadd( 0.626344, -4.16995, 13.8687, 0.92 ) }
    dend_23 { pt3dadd( 0.94236, -5.65674, 13.9613, 0.92 ) }
    dend_23 { pt3dadd( 1.12911, -6.53534, 14.0161, 1.15 ) }
    dend_23 { pt3dadd( 1.36568, -7.64836, 14.0854, 0.92 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 32/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 4.42373, 1.0138, -11.42, 0.91 ) }
    dend_18 { pt3dadd( 4.42373, 1.0138, -11.42, 0.91 ) }
    dend_18 { pt3dadd( 6.35558, 0.920064, -10.7094, 0.68 ) }
    dend_18 { pt3dadd( 8.11321, 0.803932, -10.1482, 0.91 ) }
    dend_18 { pt3dadd( 10.4779, 0.552568, -9.61245, 0.91 ) }
    dend_18 { pt3dadd( 12.44, 0.310876, -9.36115, 0.68 ) }
    dend_18 { pt3dadd( 13.7928, 0.126503, -9.28285, 0.45 ) }
    dend_18 { pt3dadd( 14.7374, -0.0119359, -9.31013, 0.45 ) }
    dend_18 { pt3dadd( 16.5348, -0.281533, -9.44749, 0.91 ) }
    dend_18 { pt3dadd( 18.613, -0.605504, -9.76037, 0.91 ) }
    dend_18 { pt3dadd( 20.8408, -1.01596, -10.4232, 0.91 ) }
    dend_18 { pt3dadd( 21.9809, -1.28656, -10.8801, 0.68 ) }
    dend_18 { pt3dadd( 23.7196, -1.7874, -11.659, 0.91 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 45/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 2.30373, -4.7262, -7.53, 1.36 ) }
    dend_9 { pt3dadd( 2.30373, -4.7262, -7.53, 1.36 ) }
    dend_9 { pt3dadd( 2.68685, -5.48005, -8.62285, 1.14 ) }
    dend_9 { pt3dadd( 3.19401, -6.53525, -9.98852, 0.91 ) }
    dend_9 { pt3dadd( 3.88268, -7.99996, -11.7184, 1.14 ) }
    dend_9 { pt3dadd( 4.82082, -9.99528, -14.0749, 0.91 ) }
    dend_9 { pt3dadd( 5.48307, -11.4038, -15.7383, 1.14 ) }
    dend_9 { pt3dadd( 6.08204, -12.6935, -17.2482, 0.91 ) }
    dend_9 { pt3dadd( 6.53759, -13.7001, -18.4051, 1.14 ) }
    dend_9 { pt3dadd( 6.81046, -14.3511, -19.0713, 1.36 ) }
    // Section: dend_6, id: dend_6, parent: soma_0 (entry count 55/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -5.83627, -1.0262, -4.22, 1.59 ) }
    dend_6 { pt3dadd( -5.83627, -1.0262, -4.22, 1.59 ) }
    dend_6 { pt3dadd( -7.00814, -1.19678, -4.86213, 1.14 ) }
    dend_6 { pt3dadd( -8.80162, -1.40697, -5.64579, 0.68 ) }
    dend_6 { pt3dadd( -10.234, -1.54887, -6.16781, 0.68 ) }
    dend_6 { pt3dadd( -11.7371, -1.7173, -6.59073, 0.68 ) }
    dend_6 { pt3dadd( -13.5656, -1.99933, -6.95734, 0.91 ) }
    dend_6 { pt3dadd( -15.8038, -2.44411, -7.12888, 0.68 ) }
    dend_6 { pt3dadd( -17.5685, -2.85481, -7.06294, 0.68 ) }
    dend_6 { pt3dadd( -18.6665, -3.13854, -6.92716, 0.45 ) }
    dend_6 { pt3dadd( -20.3592, -3.59698, -6.673, 0.45 ) }
    dend_6 { pt3dadd( -22.285, -4.09491, -6.37483, 0.91 ) }
    dend_6 { pt3dadd( -24.1226, -4.50049, -6.11308, 0.45 ) }
    dend_6 { pt3dadd( -25.5218, -4.78119, -6.03157, 0.45 ) }
    dend_6 { pt3dadd( -27.3263, -5.06652, -6.01245, 0.68 ) }
    dend_6 { pt3dadd( -28.8861, -5.23602, -6.0038, 0.45 ) }
    dend_6 { pt3dadd( -30.4706, -5.35338, -6.06508, 0.68 ) }
    dend_6 { pt3dadd( -31.5585, -5.4546, -6.15522, 0.68 ) }
    dend_6 { pt3dadd( -33.9338, -5.80338, -6.37994, 0.45 ) }
    dend_6 { pt3dadd( -36.1799, -6.19084, -6.53476, 0.68 ) }
    dend_6 { pt3dadd( -37.861, -6.53452, -6.60409, 0.68 ) }
    dend_6 { pt3dadd( -39.8897, -7.01399, -6.61217, 0.45 ) }
    dend_6 { pt3dadd( -42.669, -7.82747, -6.65828, 0.68 ) }
    dend_6 { pt3dadd( -44.2586, -8.40552, -6.71871, 0.91 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 79/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.34373, 3.8638, 7.07, 0.91 ) }
    dend_1 { pt3dadd( 2.34373, 3.8638, 7.07, 0.91 ) }
    dend_1 { pt3dadd( 3.38849, 5.10372, 7.80701, 0.68 ) }
    dend_1 { pt3dadd( 4.7987, 6.94938, 8.91219, 0.68 ) }
    dend_1 { pt3dadd( 5.66176, 8.20851, 9.65859, 0.91 ) }
    dend_1 { pt3dadd( 6.78892, 10.0444, 10.7593, 0.91 ) }
    dend_1 { pt3dadd( 7.69245, 11.5334, 11.6834, 0.91 ) }
    dend_1 { pt3dadd( 8.31737, 12.597, 12.3858, 0.45 ) }
    dend_1 { pt3dadd( 8.91428, 13.6858, 13.164, 0.68 ) }
    dend_1 { pt3dadd( 9.5257, 14.8662, 14.0705, 0.68 ) }
    dend_1 { pt3dadd( 10.1678, 16.2635, 15.0785, 0.68 ) }
    dend_1 { pt3dadd( 10.8892, 17.9301, 16.114, 0.68 ) }
    dend_1 { pt3dadd( 11.4582, 19.2177, 16.883, 0.68 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.61373, -1.0262, 5.4, 0.91 ) }
    dend_0 { pt3dadd( 4.61373, -1.0262, 5.4, 0.91 ) }
    dend_0 { pt3dadd( 6.34618, -1.1552, 5.94256, 0.91 ) }
    dend_0 { pt3dadd( 7.93277, -1.27334, 6.43943, 1.14 ) }
    dend_0 { pt3dadd( 9.79299, -1.41185, 7.022, 1.36 ) }
    dend_0 { pt3dadd( 11.0684, -1.50682, 7.42143, 1.82 ) }
    dend_0 { pt3dadd( 12.3319, -1.60091, 7.81714, 2.05 ) }
    dend_0 { pt3dadd( 14.1372, -1.74814, 8.41434, 2.27 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 0/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.63808, 4.74507, 0.0, 0.756338 ) }
    axon_0 { pt3dadd( -8.90388, 18.3737, 0.0, 0.756338 ) }
    axon_0 { pt3dadd( -15.1697, 32.0023, 0.0, 0.756338 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 3/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -2.672, 3.88008, -19.9046, 4.13 ) }
    dend_40 { pt3dadd( -3.822, 5.32008, -19.9246, 4.13 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 5/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.672, 3.88008, -19.9046, 2.05 ) }
    dend_33 { pt3dadd( -3.42562, 2.71757, -20.1689, 2.05 ) }
    dend_33 { pt3dadd( -4.41372, 1.06403, -20.5176, 2.05 ) }
    dend_33 { pt3dadd( -5.2496, -0.48491, -20.8499, 1.59 ) }
    dend_33 { pt3dadd( -6.44546, -2.70092, -21.3254, 1.14 ) }
    dend_33 { pt3dadd( -7.52381, -4.69917, -21.7542, 1.14 ) }
    dend_33 { pt3dadd( -8.31874, -6.17223, -22.0703, 1.14 ) }
    dend_33 { pt3dadd( -9.54006, -8.68555, -22.5588, 0.91 ) }
    dend_33 { pt3dadd( -10.4145, -10.6114, -22.8448, 1.14 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 14/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 1.36568, -7.64836, 14.0854, 0.46 ) }
    dend_29 { pt3dadd( 1.92786, -8.31069, 14.5517, 0.46 ) }
    dend_29 { pt3dadd( 2.39835, -9.19096, 15.1237, 0.46 ) }
    dend_29 { pt3dadd( 2.5798, -9.90241, 15.6466, 0.46 ) }
    dend_29 { pt3dadd( 2.83598, -11.2165, 16.8592, 0.46 ) }
    dend_29 { pt3dadd( 2.95658, -11.6234, 17.2397, 0.46 ) }
    dend_29 { pt3dadd( 3.20241, -12.4093, 17.9627, 0.92 ) }
    dend_29 { pt3dadd( 3.38357, -13.2266, 18.6809, 0.92 ) }
    dend_29 { pt3dadd( 3.60306, -14.5612, 19.8803, 0.69 ) }
    dend_29 { pt3dadd( 3.8145, -15.9936, 21.2139, 0.69 ) }
    dend_29 { pt3dadd( 4.06541, -17.4308, 22.5667, 0.46 ) }
    dend_29 { pt3dadd( 4.38523, -18.6726, 23.7672, 0.46 ) }
    dend_29 { pt3dadd( 4.68616, -19.4413, 24.498, 0.46 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 27/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 1.36568, -7.64836, 14.0854, 0.46 ) }
    dend_24 { pt3dadd( 0.636276, -8.02995, 13.9212, 0.46 ) }
    dend_24 { pt3dadd( -0.152657, -8.45716, 13.7175, 0.46 ) }
    dend_24 { pt3dadd( -0.775815, -8.83904, 13.5562, 0.46 ) }
    dend_24 { pt3dadd( -1.54099, -9.40368, 13.3618, 0.46 ) }
    dend_24 { pt3dadd( -2.10621, -9.86387, 13.2324, 0.69 ) }
    dend_24 { pt3dadd( -3.15983, -10.7605, 13.104, 0.69 ) }
    dend_24 { pt3dadd( -4.10304, -11.5935, 13.1531, 0.46 ) }
    dend_24 { pt3dadd( -4.84824, -12.2069, 13.2933, 0.46 ) }
    dend_24 { pt3dadd( -5.76999, -12.8751, 13.575, 0.46 ) }
    dend_24 { pt3dadd( -6.89774, -13.6157, 14.0428, 0.92 ) }
    dend_24 { pt3dadd( -8.37836, -14.4925, 14.79, 0.92 ) }
    dend_24 { pt3dadd( -9.92854, -15.2841, 15.7332, 0.92 ) }
    dend_24 { pt3dadd( -11.1312, -15.7066, 16.5463, 1.15 ) }
    dend_24 { pt3dadd( -12.211, -15.8513, 17.3315, 0.92 ) }
    dend_24 { pt3dadd( -12.9928, -15.7999, 17.9612, 0.46 ) }
    dend_24 { pt3dadd( -13.6008, -15.6349, 18.4633, 0.46 ) }
    dend_24 { pt3dadd( -14.5186, -15.2487, 19.2234, 0.46 ) }
    dend_24 { pt3dadd( -15.4851, -14.6881, 20.0496, 0.69 ) }
    dend_24 { pt3dadd( -16.9755, -13.6055, 21.4161, 0.46 ) }
    dend_24 { pt3dadd( -17.6995, -12.9546, 22.0988, 0.46 ) }
    dend_24 { pt3dadd( -18.5334, -12.1053, 22.8703, 0.69 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 49/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 23.7196, -1.7874, -11.659, 0.68 ) }
    dend_22 { pt3dadd( 24.9921, -2.02192, -11.4724, 0.68 ) }
    dend_22 { pt3dadd( 26.1501, -2.30178, -11.3123, 0.68 ) }
    dend_22 { pt3dadd( 27.6714, -2.74961, -11.1963, 0.45 ) }
    dend_22 { pt3dadd( 29.0273, -3.17106, -11.2094, 0.45 ) }
    dend_22 { pt3dadd( 30.5525, -3.61649, -11.2875, 0.68 ) }
    dend_22 { pt3dadd( 31.2875, -3.81647, -11.3365, 0.45 ) }
    dend_22 { pt3dadd( 32.1462, -4.0234, -11.4253, 0.45 ) }
    dend_22 { pt3dadd( 33.6328, -4.35711, -11.6183, 0.68 ) }
    dend_22 { pt3dadd( 35.762, -4.80627, -11.8122, 0.45 ) }
    dend_22 { pt3dadd( 36.9146, -5.02537, -11.851, 0.45 ) }
    dend_22 { pt3dadd( 38.7259, -5.36293, -11.7366, 0.45 ) }
    dend_22 { pt3dadd( 40.938, -5.7383, -11.3922, 0.91 ) }
    dend_22 { pt3dadd( 42.5013, -5.98149, -11.0109, 0.45 ) }
    dend_22 { pt3dadd( 44.1399, -6.2804, -10.4788, 0.45 ) }
    dend_22 { pt3dadd( 45.319, -6.51847, -10.0455, 0.45 ) }
    dend_22 { pt3dadd( 47.2024, -6.97635, -9.32678, 0.23 ) }
    dend_22 { pt3dadd( 47.9322, -7.18919, -9.03177, 0.68 ) }
    dend_22 { pt3dadd( 48.9655, -7.55096, -8.60143, 1.14 ) }
    dend_22 { pt3dadd( 51.5454, -8.54159, -7.55931, 0.45 ) }
    dend_22 { pt3dadd( 52.97, -9.10976, -7.04898, 0.45 ) }
    dend_22 { pt3dadd( 55.0454, -9.98477, -6.36746, 0.45 ) }
    dend_22 { pt3dadd( 57.0256, -10.8489, -5.77666, 0.45 ) }
    dend_22 { pt3dadd( 58.8879, -11.7126, -5.2063, 0.68 ) }
    dend_22 { pt3dadd( 60.0702, -12.3082, -4.82911, 0.68 ) }
    dend_22 { pt3dadd( 61.9228, -13.2994, -4.23351, 0.23 ) }
    dend_22 { pt3dadd( 62.8199, -13.8, -3.95149, 0.23 ) }
    dend_22 { pt3dadd( 64.0155, -14.4511, -3.62322, 0.45 ) }
    dend_22 { pt3dadd( 66.1182, -15.5645, -3.08586, 0.45 ) }
    dend_22 { pt3dadd( 67.3699, -16.2639, -2.77795, 0.23 ) }
    dend_22 { pt3dadd( 68.3632, -16.8286, -2.54222, 0.45 ) }
    dend_22 { pt3dadd( 69.5043, -17.4627, -2.27267, 0.45 ) }
    dend_22 { pt3dadd( 70.6067, -18.0554, -2.03008, 0.68 ) }
    dend_22 { pt3dadd( 72.0728, -18.8595, -1.69434, 0.45 ) }
    dend_22 { pt3dadd( 73.8581, -19.8071, -1.27875, 0.45 ) }
    dend_22 { pt3dadd( 75.2362, -20.5049, -0.901427, 0.45 ) }
    dend_22 { pt3dadd( 76.8411, -21.3124, -0.361814, 0.45 ) }
    dend_22 { pt3dadd( 78.5215, -22.1254, 0.261578, 0.68 ) }
    dend_22 { pt3dadd( 79.9283, -22.7644, 0.891885, 0.45 ) }
    dend_22 { pt3dadd( 81.3979, -23.3922, 1.69629, 0.68 ) }
    dend_22 { pt3dadd( 83.2248, -24.1631, 2.86648, 0.23 ) }
    dend_22 { pt3dadd( 84.4954, -24.7212, 3.79954, 0.23 ) }
    dend_22 { pt3dadd( 85.5539, -25.1329, 4.62302, 0.68 ) }
    dend_22 { pt3dadd( 86.9546, -25.4953, 5.71605, 0.23 ) }
    dend_22 { pt3dadd( 88.2235, -25.6294, 6.6212, 0.68 ) }
    dend_22 { pt3dadd( 89.3211, -25.6038, 7.29299, 1.14 ) }
    dend_22 { pt3dadd( 91.5556, -25.3627, 8.43189, 0.23 ) }
    dend_22 { pt3dadd( 93.3628, -25.0833, 9.2255, 0.45 ) }
    dend_22 { pt3dadd( 95.4541, -24.744, 10.0932, 0.23 ) }
    dend_22 { pt3dadd( 97.7369, -24.4331, 11.0018, 0.23 ) }
    dend_22 { pt3dadd( 100.323, -24.2033, 12.0251, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_22 { pt3dadd( 102.346, -24.1241, 12.8636, 0.23 ) }
    dend_22 { pt3dadd( 104.157, -24.1232, 13.6049, 0.23 ) }
    dend_22 { pt3dadd( 106.104, -24.2807, 14.4323, 0.23 ) }
    dend_22 { pt3dadd( 107.946, -24.6482, 15.2525, 0.23 ) }
    dend_22 { pt3dadd( 109.588, -25.2008, 16.0663, 0.45 ) }
    dend_22 { pt3dadd( 110.771, -25.7855, 16.774, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 6/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 23.7196, -1.7874, -11.659, 1.14 ) }
    dend_19 { pt3dadd( 25.0496, -1.6874, -12.609, 1.14 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 8/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 6.81046, -14.3511, -19.0713, 0.91 ) }
    dend_15 { pt3dadd( 6.66748, -14.9316, -19.8695, 0.91 ) }
    dend_15 { pt3dadd( 6.33958, -16.2629, -21.7001, 0.68 ) }
    dend_15 { pt3dadd( 6.08721, -17.2875, -23.1091, 0.68 ) }
    dend_15 { pt3dadd( 5.81491, -18.3931, -24.6293, 0.91 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 13/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.81046, -14.3511, -19.0713, 0.68 ) }
    dend_10 { pt3dadd( 8.20397, -14.9325, -17.9315, 0.68 ) }
    dend_10 { pt3dadd( 9.86058, -15.7776, -16.6388, 0.68 ) }
    dend_10 { pt3dadd( 11.256, -16.5739, -15.4989, 0.45 ) }
    dend_10 { pt3dadd( 11.8672, -16.975, -14.9847, 0.45 ) }
    dend_10 { pt3dadd( 12.5163, -17.4403, -14.4261, 0.68 ) }
    dend_10 { pt3dadd( 13.6035, -18.2083, -13.5618, 1.14 ) }
    dend_10 { pt3dadd( 14.8374, -19.1473, -12.6442, 0.68 ) }
    dend_10 { pt3dadd( 15.9184, -20.0599, -11.847, 0.68 ) }
    dend_10 { pt3dadd( 17.12, -21.1653, -10.894, 0.45 ) }
    dend_10 { pt3dadd( 18.0864, -22.0511, -10.1044, 0.45 ) }
    dend_10 { pt3dadd( 19.1931, -23.0506, -9.2287, 0.91 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -44.2586, -8.40552, -6.71871, 0.45 ) }
    dend_8 { pt3dadd( -45.7231, -9.87998, -6.21075, 0.45 ) }
    dend_8 { pt3dadd( -46.5583, -10.7832, -5.97654, 0.45 ) }
    dend_8 { pt3dadd( -47.7186, -12.0432, -5.69779, 0.45 ) }
    dend_8 { pt3dadd( -48.556, -12.9563, -5.51694, 0.68 ) }
    dend_8 { pt3dadd( -49.0631, -13.4873, -5.42281, 0.91 ) }
    dend_8 { pt3dadd( -50.2893, -14.7593, -5.19603, 0.45 ) }
    dend_8 { pt3dadd( -51.3596, -15.8029, -5.08323, 0.45 ) }
    dend_8 { pt3dadd( -52.1406, -16.5518, -4.98028, 0.45 ) }
    dend_8 { pt3dadd( -52.406, -16.8061, -4.92741, 0.68 ) }
    dend_8 { pt3dadd( -53.4669, -17.7842, -4.62352, 1.14 ) }
    dend_8 { pt3dadd( -54.2622, -18.4735, -4.35142, 0.68 ) }
    dend_8 { pt3dadd( -55.3193, -19.3314, -3.94769, 0.45 ) }
    dend_8 { pt3dadd( -57.1684, -20.7537, -3.21494, 0.45 ) }
    dend_8 { pt3dadd( -58.4011, -21.7056, -2.72471, 0.23 ) }
    dend_8 { pt3dadd( -59.0956, -22.2184, -2.46992, 0.23 ) }
    dend_8 { pt3dadd( -59.8497, -22.7443, -2.21131, 0.91 ) }
    dend_8 { pt3dadd( -60.715, -23.3052, -1.94366, 0.23 ) }
    dend_8 { pt3dadd( -62.095, -24.1267, -1.53727, 0.23 ) }
    dend_8 { pt3dadd( -62.8524, -24.5517, -1.326, 0.91 ) }
    dend_8 { pt3dadd( -64.4931, -25.4268, -0.902154, 0.23 ) }
    dend_8 { pt3dadd( -65.1173, -25.7545, -0.735011, 0.68 ) }
    dend_8 { pt3dadd( -66.3, -26.3439, -0.352615, 0.45 ) }
    dend_8 { pt3dadd( -67.6262, -26.9249, 0.146594, 0.45 ) }
    dend_8 { pt3dadd( -68.8696, -27.4477, 0.728419, 0.45 ) }
    dend_8 { pt3dadd( -70.2566, -28.0828, 1.48958, 0.45 ) }
    dend_8 { pt3dadd( -71.2528, -28.5963, 2.10156, 0.45 ) }
    dend_8 { pt3dadd( -72.4253, -29.288, 2.79996, 0.45 ) }
    dend_8 { pt3dadd( -73.2087, -29.7668, 3.29685, 0.45 ) }
    dend_8 { pt3dadd( -74.7725, -30.8383, 4.47093, 0.45 ) }
    dend_8 { pt3dadd( -75.5631, -31.4303, 5.22959, 0.45 ) }
    dend_8 { pt3dadd( -76.0776, -31.8724, 5.81156, 0.68 ) }
    dend_8 { pt3dadd( -77.1372, -32.9175, 7.14169, 0.45 ) }
    dend_8 { pt3dadd( -77.9569, -33.8824, 8.18899, 0.45 ) }
    dend_8 { pt3dadd( -78.6077, -34.7531, 9.08052, 0.45 ) }
    dend_8 { pt3dadd( -79.1721, -35.3801, 10.1117, 0.68 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 61/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -44.2586, -8.40552, -6.71871, 0.45 ) }
    dend_7 { pt3dadd( -45.7742, -8.20226, -7.47042, 0.45 ) }
    dend_7 { pt3dadd( -47.2727, -8.06234, -8.14191, 0.45 ) }
    dend_7 { pt3dadd( -48.4365, -7.98294, -8.6642, 0.23 ) }
    dend_7 { pt3dadd( -49.5612, -7.95286, -9.19702, 0.45 ) }
    dend_7 { pt3dadd( -51.124, -8.01854, -9.96233, 0.45 ) }
    dend_7 { pt3dadd( -51.8506, -8.09456, -10.3301, 0.45 ) }
    dend_7 { pt3dadd( -53.2249, -8.40191, -11.1232, 0.45 ) }
    dend_7 { pt3dadd( -54.4263, -8.77001, -11.8517, 0.45 ) }
    dend_7 { pt3dadd( -55.4073, -9.12114, -12.4767, 0.68 ) }
    dend_7 { pt3dadd( -56.4712, -9.53833, -13.2614, 0.68 ) }
    dend_7 { pt3dadd( -57.3642, -9.95063, -14.0322, 0.91 ) }
    dend_7 { pt3dadd( -58.3746, -10.5238, -15.0546, 0.45 ) }
    dend_7 { pt3dadd( -59.2288, -11.1455, -16.0694, 0.91 ) }
    dend_7 { pt3dadd( -60.0838, -11.8709, -17.1054, 0.91 ) }
    dend_7 { pt3dadd( -61.2176, -12.9486, -18.5802, 0.45 ) }
    dend_7 { pt3dadd( -61.9147, -13.7338, -19.5686, 0.68 ) }
    dend_7 { pt3dadd( -62.389, -14.4502, -20.3799, 0.45 ) }
    dend_7 { pt3dadd( -62.8947, -15.5465, -21.4696, 0.45 ) }
    dend_7 { pt3dadd( -63.2505, -16.7377, -22.5261, 0.68 ) }
    dend_7 { pt3dadd( -63.5487, -18.4365, -23.9034, 0.45 ) }
    dend_7 { pt3dadd( -63.6698, -19.6847, -24.8507, 0.91 ) }
    dend_7 { pt3dadd( -63.7696, -21.3107, -26.0798, 0.45 ) }
    dend_7 { pt3dadd( -63.8048, -22.3694, -26.858, 0.45 ) }
    dend_7 { pt3dadd( -63.8473, -23.9696, -28.0372, 0.45 ) }
    dend_7 { pt3dadd( -63.9113, -25.584, -29.2634, 0.68 ) }
    dend_7 { pt3dadd( -64.0792, -27.1019, -30.4006, 0.23 ) }
    dend_7 { pt3dadd( -64.2552, -28.2117, -31.321, 0.23 ) }
    dend_7 { pt3dadd( -64.496, -29.3623, -32.3725, 0.23 ) }
    dend_7 { pt3dadd( -64.7401, -30.3184, -33.3944, 0.45 ) }
    dend_7 { pt3dadd( -64.957, -31.1059, -34.4027, 0.68 ) }
    dend_7 { pt3dadd( -65.321, -32.5105, -36.4082, 0.91 ) }
    dend_7 { pt3dadd( -65.6571, -34.1157, -38.9502, 0.23 ) }
    dend_7 { pt3dadd( -65.807, -35.0171, -40.4997, 0.45 ) }
    dend_7 { pt3dadd( -66.0113, -36.2109, -42.6901, 0.45 ) }
    dend_7 { pt3dadd( -66.2401, -37.5347, -45.1742, 0.45 ) }
    dend_7 { pt3dadd( -66.3337, -38.0649, -46.1863, 0.91 ) }
    dend_7 { pt3dadd( -66.6273, -39.428, -48.9147, 0.23 ) }
    dend_7 { pt3dadd( -66.859, -40.1532, -50.3818, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_7 { pt3dadd( -67.1629, -40.9733, -52.0196, 0.45 ) }
    dend_7 { pt3dadd( -67.4773, -41.7381, -53.4579, 0.45 ) }
    dend_7 { pt3dadd( -67.719, -42.1968, -54.2801, 0.23 ) }
    dend_7 { pt3dadd( -68.1886, -42.8921, -55.546, 0.23 ) }
    dend_7 { pt3dadd( -68.5715, -43.4048, -56.3422, 0.23 ) }
    dend_7 { pt3dadd( -69.2455, -44.2402, -57.5052, 0.45 ) }
    dend_7 { pt3dadd( -69.9613, -45.0556, -58.5687, 0.68 ) }
    dend_7 { pt3dadd( -71.0907, -46.2167, -60.003, 0.23 ) }
    dend_7 { pt3dadd( -72.574, -47.794, -61.7246, 0.23 ) }
    dend_7 { pt3dadd( -74.2648, -49.5949, -63.5799, 0.23 ) }
    dend_7 { pt3dadd( -75.3939, -50.7888, -64.7609, 0.23 ) }
    dend_7 { pt3dadd( -76.2204, -51.6425, -65.5739, 0.68 ) }
    dend_7 { pt3dadd( -77.4628, -52.9094, -66.7341, 0.23 ) }
    dend_7 { pt3dadd( -79.5067, -55.0956, -68.5215, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 14/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 11.4582, 19.2177, 16.883, 0.91 ) }
    dend_5 { pt3dadd( 11.8498, 19.506, 17.3584, 0.91 ) }
    dend_5 { pt3dadd( 12.2246, 19.8687, 17.8637, 0.68 ) }
    dend_5 { pt3dadd( 13.4978, 21.2827, 19.4862, 0.45 ) }
    dend_5 { pt3dadd( 14.1933, 22.0861, 20.347, 0.45 ) }
    dend_5 { pt3dadd( 14.8465, 22.8097, 21.1162, 0.45 ) }
    dend_5 { pt3dadd( 15.6659, 23.6454, 22.0557, 0.45 ) }
    dend_5 { pt3dadd( 16.5414, 24.4577, 23.0325, 0.68 ) }
    dend_5 { pt3dadd( 18.0536, 25.6386, 24.6332, 0.45 ) }
    dend_5 { pt3dadd( 19.1582, 26.2859, 25.7002, 0.68 ) }
    dend_5 { pt3dadd( 20.2081, 26.4929, 26.5786, 0.68 ) }
    dend_5 { pt3dadd( 21.3724, 26.2629, 27.3177, 0.68 ) }
    dend_5 { pt3dadd( 22.527, 25.8066, 27.815, 0.68 ) }
    dend_5 { pt3dadd( 24.0512, 25.0603, 28.2551, 0.68 ) }
    dend_5 { pt3dadd( 25.7166, 24.0595, 28.64, 0.45 ) }
    dend_5 { pt3dadd( 27.4114, 22.9485, 28.9201, 0.68 ) }
    dend_5 { pt3dadd( 29.0161, 21.874, 29.0867, 0.23 ) }
    dend_5 { pt3dadd( 30.8141, 20.7561, 29.1531, 0.23 ) }
    dend_5 { pt3dadd( 32.6571, 19.8155, 29.1477, 0.23 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 33/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 11.4582, 19.2177, 16.883, 0.68 ) }
    dend_2 { pt3dadd( 11.959, 19.5708, 16.5268, 0.68 ) }
    dend_2 { pt3dadd( 12.9458, 20.4276, 15.8999, 0.68 ) }
    dend_2 { pt3dadd( 14.0302, 21.4288, 15.3139, 0.68 ) }
    dend_2 { pt3dadd( 15.5882, 22.8054, 14.6039, 0.68 ) }
    dend_2 { pt3dadd( 16.3127, 23.4131, 14.3218, 0.68 ) }
    dend_2 { pt3dadd( 18.056, 24.828, 13.7755, 0.68 ) }
    dend_2 { pt3dadd( 19.3885, 25.9604, 13.4828, 0.68 ) }
    dend_2 { pt3dadd( 20.8512, 27.2639, 13.3132, 0.45 ) }
    dend_2 { pt3dadd( 22.0283, 28.3713, 13.2928, 0.45 ) }
    dend_2 { pt3dadd( 23.0893, 29.3962, 13.3923, 0.45 ) }
    dend_2 { pt3dadd( 24.2487, 30.5152, 13.5816, 0.45 ) }
    dend_2 { pt3dadd( 25.0658, 31.3421, 13.7363, 0.68 ) }
    dend_2 { pt3dadd( 25.9766, 32.3089, 13.88, 0.68 ) }
    dend_2 { pt3dadd( 27.0731, 33.5641, 13.9813, 0.91 ) }
    dend_2 { pt3dadd( 28.3427, 35.0799, 13.949, 0.68 ) }
    dend_2 { pt3dadd( 29.5183, 36.4637, 13.7915, 0.45 ) }
    dend_2 { pt3dadd( 30.6993, 37.8418, 13.4846, 0.45 ) }
    dend_2 { pt3dadd( 31.8176, 39.1588, 13.1041, 0.45 ) }
    dend_2 { pt3dadd( 32.605, 40.0914, 12.7721, 0.68 ) }
    dend_2 { pt3dadd( 33.7982, 41.5011, 12.1547, 0.68 ) }
    dend_2 { pt3dadd( 34.5303, 42.3994, 11.6999, 0.91 ) }
    dend_2 { pt3dadd( 35.1593, 43.1749, 11.3114, 0.91 ) }
    dend_2 { pt3dadd( 36.2162, 44.4982, 10.7703, 0.23 ) }
    dend_2 { pt3dadd( 37.3161, 46.1019, 10.292, 0.68 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 58/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -15.1697, 32.0023, 0.0, 0.69 ) }
    axon_1 { pt3dadd( -21.4355, 45.631, 0.0, 0.69 ) }
    axon_1 { pt3dadd( -27.7013, 59.2596, 0.0, 0.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 61/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -3.822, 5.32008, -19.9246, 2.98 ) }
    dend_46 { pt3dadd( -5.13508, 5.89333, -20.9247, 2.98 ) }
    dend_46 { pt3dadd( -6.39766, 6.44454, -21.8864, 2.29 ) }
    dend_46 { pt3dadd( -7.53155, 6.93957, -22.75, 2.06 ) }
    dend_46 { pt3dadd( -9.23228, 7.68206, -24.0454, 2.06 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 66/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -3.822, 5.32008, -19.9246, 1.61 ) }
    dend_41 { pt3dadd( -3.63276, 6.80261, -19.0649, 1.61 ) }
    dend_41 { pt3dadd( -3.39062, 8.61944, -18.0005, 0.92 ) }
    dend_41 { pt3dadd( -3.18228, 9.93472, -17.2637, 0.92 ) }
    dend_41 { pt3dadd( -2.97223, 11.2608, -16.5209, 1.38 ) }
    dend_41 { pt3dadd( -2.71209, 12.9032, -15.601, 0.92 ) }
    dend_41 { pt3dadd( -2.38577, 14.9634, -14.4469, 0.92 ) }
    dend_41 { pt3dadd( -2.20235, 16.0831, -13.7777, 1.15 ) }
    dend_41 { pt3dadd( -2.01863, 17.2335, -13.1132, 1.15 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 75/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -10.4145, -10.6114, -22.8448, 0.23 ) }
    dend_39 { pt3dadd( -8.75997, -10.8219, -24.2966, 0.23 ) }
    dend_39 { pt3dadd( -7.46665, -10.9898, -25.3561, 0.45 ) }
    dend_39 { pt3dadd( -5.40959, -11.2349, -26.8379, 0.23 ) }
    dend_39 { pt3dadd( -4.03341, -11.3553, -27.8002, 0.68 ) }
    dend_39 { pt3dadd( -3.05871, -11.3907, -28.4985, 0.45 ) }
    dend_39 { pt3dadd( -2.31296, -11.3993, -29.0718, 0.45 ) }
    dend_39 { pt3dadd( -0.498673, -11.2932, -30.5658, 0.68 ) }
    dend_39 { pt3dadd( 0.894148, -11.1859, -31.7171, 0.45 ) }
    dend_39 { pt3dadd( 1.9942, -11.1322, -32.7073, 0.45 ) }
    dend_39 { pt3dadd( 3.35393, -11.1753, -34.071, 0.68 ) }
    dend_39 { pt3dadd( 4.76762, -11.3262, -35.7342, 0.68 ) }
    dend_39 { pt3dadd( 6.04884, -11.5273, -37.5487, 0.23 ) }
    dend_39 { pt3dadd( 6.98881, -11.7381, -39.12, 0.68 ) }
    dend_39 { pt3dadd( 7.90088, -12.0848, -40.8806, 0.45 ) }
    dend_39 { pt3dadd( 8.64057, -12.461, -42.4483, 0.68 ) }
    dend_39 { pt3dadd( 9.68479, -13.0821, -44.884, 0.68 ) }
    dend_39 { pt3dadd( 10.6849, -13.6759, -47.3733, 0.45 ) }
    dend_39 { pt3dadd( 11.429, -14.1129, -49.225, 0.68 ) }
    dend_39 { pt3dadd( 12.4047, -14.6257, -51.553, 0.91 ) }
    dend_39 { pt3dadd( 13.5001, -15.1018, -53.7867, 0.91 ) }
    dend_39 { pt3dadd( 14.512, -15.4928, -55.669, 0.68 ) }
    dend_39 { pt3dadd( 16.0505, -16.0507, -58.5275, 0.45 ) }
    dend_39 { pt3dadd( 17.5399, -16.5396, -61.2777, 0.45 ) }
    dend_39 { pt3dadd( 17.9804, -16.6604, -62.1194, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_39 { pt3dadd( 18.9542, -16.8429, -63.9988, 0.23 ) }
    dend_39 { pt3dadd( 20.1833, -17.0587, -66.4723, 0.23 ) }
    dend_39 { pt3dadd( 22.0509, -17.3472, -70.4173, 0.23 ) }
    dend_39 { pt3dadd( 23.2033, -17.4778, -72.9768, 0.45 ) }
    dend_39 { pt3dadd( 24.4826, -17.5388, -75.9339, 0.45 ) }
    dend_39 { pt3dadd( 25.51, -17.5336, -78.3151, 0.45 ) }
    dend_39 { pt3dadd( 26.7586, -17.397, -81.1284, 0.23 ) }
    dend_39 { pt3dadd( 27.4787, -17.2816, -82.5839, 0.23 ) }
    dend_39 { pt3dadd( 27.8431, -17.2141, -83.2366, 0.45 ) }
    dend_39 { pt3dadd( 28.5369, -17.0668, -84.4496, 0.68 ) }
    dend_39 { pt3dadd( 30.1282, -16.7715, -87.1175, 0.45 ) }
    dend_39 { pt3dadd( 32.1208, -16.4062, -90.4515, 0.23 ) }
    dend_39 { pt3dadd( 33.7615, -16.0532, -93.235, 0.23 ) }
    dend_39 { pt3dadd( 34.3859, -15.9298, -94.3342, 0.45 ) }
    dend_39 { pt3dadd( 35.7064, -15.7166, -96.7918, 0.45 ) }
    dend_39 { pt3dadd( 37.1387, -15.5361, -99.5095, 0.45 ) }
    dend_39 { pt3dadd( 38.2421, -15.4513, -101.613, 0.45 ) }
    dend_39 { pt3dadd( 39.5245, -15.4369, -104.111, 0.45 ) }
    dend_39 { pt3dadd( 40.5978, -15.4234, -106.252, 0.45 ) }
    dend_39 { pt3dadd( 41.7964, -15.4246, -108.709, 0.45 ) }
    dend_39 { pt3dadd( 43.0989, -15.4614, -111.364, 0.45 ) }
    dend_39 { pt3dadd( 44.3631, -15.5283, -114.0, 0.45 ) }
    dend_39 { pt3dadd( 45.5583, -15.72, -116.504, 0.45 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 23/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -10.4145, -10.6114, -22.8448, 0.68 ) }
    dend_34 { pt3dadd( -10.8536, -11.4003, -23.0069, 0.68 ) }
    dend_34 { pt3dadd( -11.7343, -12.9825, -23.332, 0.68 ) }
    dend_34 { pt3dadd( -12.2031, -13.8249, -23.505, 0.68 ) }
    dend_34 { pt3dadd( -12.8616, -15.0079, -23.7481, 0.68 ) }
    dend_34 { pt3dadd( -13.6197, -16.3699, -24.0279, 0.91 ) }
    dend_34 { pt3dadd( -14.4606, -17.8807, -24.3383, 0.91 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 30/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 4.68616, -19.4413, 24.498, 0.46 ) }
    dend_31 { pt3dadd( 5.12871, -20.728, 25.2097, 0.46 ) }
    dend_31 { pt3dadd( 5.83169, -22.7718, 26.3403, 0.46 ) }
    dend_31 { pt3dadd( 6.12335, -23.6197, 26.8093, 0.46 ) }
    dend_31 { pt3dadd( 6.34676, -24.2693, 27.1686, 0.46 ) }
    dend_31 { pt3dadd( 6.78472, -25.5426, 27.8729, 0.46 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 36/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 4.68616, -19.4413, 24.498, 0.46 ) }
    dend_30 { pt3dadd( 5.12343, -20.8816, 25.564, 0.46 ) }
    dend_30 { pt3dadd( 5.88096, -22.4797, 26.6472, 0.46 ) }
    dend_30 { pt3dadd( 6.7447, -24.1727, 27.6201, 0.46 ) }
    dend_30 { pt3dadd( 7.18156, -25.0289, 28.0792, 0.46 ) }
    dend_30 { pt3dadd( 7.81865, -26.3245, 28.7565, 0.46 ) }
    dend_30 { pt3dadd( 8.6059, -27.9255, 29.5935, 0.46 ) }
    dend_30 { pt3dadd( 9.3455, -29.1531, 30.2227, 0.46 ) }
    dend_30 { pt3dadd( 10.2504, -30.5143, 30.8056, 0.46 ) }
    dend_30 { pt3dadd( 10.678, -31.0973, 31.0113, 0.23 ) }
    dend_30 { pt3dadd( 11.2683, -31.9805, 31.2646, 0.23 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 47/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -18.5334, -12.1053, 22.8703, 0.69 ) }
    dend_26 { pt3dadd( -19.3456, -11.4538, 24.0212, 0.69 ) }
    dend_26 { pt3dadd( -20.7084, -10.3606, 25.9522, 0.92 ) }
    dend_26 { pt3dadd( -20.9935, -10.132, 26.3561, 0.92 ) }
    dend_26 { pt3dadd( -22.049, -9.28532, 27.8517, 0.46 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 52/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -18.5334, -12.1053, 22.8703, 0.23 ) }
    dend_25 { pt3dadd( -18.9099, -13.9241, 24.244, 0.23 ) }
    dend_25 { pt3dadd( -19.1379, -15.1018, 25.0557, 0.46 ) }
    dend_25 { pt3dadd( -19.5977, -16.8529, 26.1408, 0.23 ) }
    dend_25 { pt3dadd( -19.9518, -17.8227, 26.6971, 0.23 ) }
    dend_25 { pt3dadd( -20.2669, -18.4175, 27.0341, 0.23 ) }
    dend_25 { pt3dadd( -21.2478, -19.875, 27.9041, 0.23 ) }
    dend_25 { pt3dadd( -21.946, -20.7803, 28.3816, 0.92 ) }
    dend_25 { pt3dadd( -22.9912, -21.8741, 28.9776, 0.23 ) }
    dend_25 { pt3dadd( -24.2161, -22.8974, 29.4813, 0.23 ) }
    dend_25 { pt3dadd( -25.8747, -24.033, 30.1105, 0.23 ) }
    dend_25 { pt3dadd( -26.7591, -24.5364, 30.3982, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 64/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 25.0496, -1.6874, -12.609, 0.23 ) }
    dend_21 { pt3dadd( 26.3391, -2.90929, -12.8182, 0.23 ) }
    dend_21 { pt3dadd( 27.9323, -4.42081, -12.9135, 0.23 ) }
    dend_21 { pt3dadd( 28.875, -5.32823, -12.9207, 0.68 ) }
    dend_21 { pt3dadd( 30.0416, -6.47611, -12.8948, 0.23 ) }
    dend_21 { pt3dadd( 31.0546, -7.48128, -12.8443, 0.23 ) }
    dend_21 { pt3dadd( 32.1483, -8.59154, -12.7718, 0.91 ) }
    dend_21 { pt3dadd( 33.2721, -9.78543, -12.6379, 0.23 ) }
    dend_21 { pt3dadd( 34.0023, -10.5991, -12.4822, 0.68 ) }
    dend_21 { pt3dadd( 34.9094, -11.7111, -12.2213, 0.23 ) }
    dend_21 { pt3dadd( 35.4607, -12.4398, -12.0156, 0.45 ) }
    dend_21 { pt3dadd( 36.2121, -13.4998, -11.7046, 0.23 ) }
    dend_21 { pt3dadd( 36.6905, -14.2231, -11.4799, 0.45 ) }
    dend_21 { pt3dadd( 37.8707, -16.157, -10.8225, 0.23 ) }
    dend_21 { pt3dadd( 38.7086, -17.5403, -10.3023, 0.45 ) }
    dend_21 { pt3dadd( 39.3417, -18.5824, -9.88197, 0.45 ) }
    dend_21 { pt3dadd( 39.9676, -19.5724, -9.4804, 0.23 ) }
    dend_21 { pt3dadd( 40.7494, -20.7249, -9.0081, 0.68 ) }
    dend_21 { pt3dadd( 41.648, -21.9336, -8.4908, 1.14 ) }
    dend_21 { pt3dadd( 43.2496, -23.8727, -7.62232, 0.23 ) }
    dend_21 { pt3dadd( 43.9892, -24.7088, -7.28185, 0.45 ) }
    dend_21 { pt3dadd( 44.9298, -25.7262, -6.93612, 0.91 ) }
    dend_21 { pt3dadd( 46.3125, -27.1231, -6.39735, 0.23 ) }
    dend_21 { pt3dadd( 47.4434, -28.2171, -5.96233, 0.23 ) }
    dend_21 { pt3dadd( 48.2272, -28.9519, -5.65211, 0.91 ) }
    dend_21 { pt3dadd( 49.7154, -30.3521, -5.06209, 0.45 ) }
    dend_21 { pt3dadd( 50.4067, -31.0073, -4.77809, 0.45 ) }
    dend_21 { pt3dadd( 53.0119, -33.5771, -3.59234, 0.23 ) }
    dend_21 { pt3dadd( 53.735, -34.3266, -3.24852, 0.45 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 93/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 25.0496, -1.6874, -12.609, 0.91 ) }
    dend_20 { pt3dadd( 24.8547, -1.17116, -14.066, 0.91 ) }
    dend_20 { pt3dadd( 24.6349, -0.373943, -16.3177, 0.68 ) }
    dend_20 { pt3dadd( 24.5459, 0.280926, -17.9845, 0.45 ) }
    dend_20 { pt3dadd( 24.539, 0.754861, -19.0105, 0.45 ) }
    dend_20 { pt3dadd( 24.518, 1.744, -20.9682, 0.45 ) }
    dend_20 { pt3dadd( 24.4966, 2.17152, -21.7577, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_20 { pt3dadd( 24.4385, 3.00301, -23.1506, 0.45 ) }
    dend_20 { pt3dadd( 24.3901, 3.83175, -24.3798, 0.45 ) }
    dend_20 { pt3dadd( 24.3714, 4.83874, -25.7588, 0.91 ) }
    dend_20 { pt3dadd( 24.417, 5.86172, -26.9869, 0.23 ) }
    dend_20 { pt3dadd( 24.5304, 6.90187, -28.0366, 0.23 ) }
    dend_20 { pt3dadd( 24.7162, 8.00801, -29.1179, 0.45 ) }
    dend_20 { pt3dadd( 24.8392, 8.51967, -29.6298, 0.45 ) }
    dend_20 { pt3dadd( 25.1634, 9.49116, -30.6129, 0.45 ) }
    dend_20 { pt3dadd( 25.4963, 10.2993, -31.4606, 0.68 ) }
    dend_20 { pt3dadd( 26.1204, 11.5171, -32.7732, 0.23 ) }
    dend_20 { pt3dadd( 26.7374, 12.6918, -34.0583, 0.68 ) }
    dend_20 { pt3dadd( 27.2298, 13.7378, -35.1978, 0.68 ) }
    dend_20 { pt3dadd( 27.5464, 14.5012, -36.0591, 0.91 ) }
    dend_20 { pt3dadd( 28.0402, 15.6887, -37.4595, 0.68 ) }
    dend_20 { pt3dadd( 28.7161, 17.3929, -39.5124, 0.45 ) }
    dend_20 { pt3dadd( 29.214, 18.8097, -41.159, 0.68 ) }
    dend_20 { pt3dadd( 29.5561, 20.0044, -42.4391, 0.45 ) }
    dend_20 { pt3dadd( 29.9582, 21.646, -44.1054, 0.45 ) }
    dend_20 { pt3dadd( 30.3259, 23.3022, -45.7287, 0.45 ) }
    dend_20 { pt3dadd( 30.5589, 24.5481, -46.8499, 0.45 ) }
    dend_20 { pt3dadd( 30.673, 25.4585, -47.6072, 0.68 ) }
    dend_20 { pt3dadd( 30.7366, 27.1302, -48.793, 0.23 ) }
    dend_20 { pt3dadd( 30.6729, 28.424, -49.525, 0.45 ) }
    dend_20 { pt3dadd( 30.4204, 30.1954, -50.2022, 0.45 ) }
    dend_20 { pt3dadd( 29.9488, 32.5501, -50.6476, 0.45 ) }
    dend_20 { pt3dadd( 29.6318, 34.1436, -50.621, 1.14 ) }
    dend_20 { pt3dadd( 29.1062, 37.2811, -49.7357, 0.23 ) }
    dend_20 { pt3dadd( 28.9702, 38.6796, -48.8671, 0.45 ) }
    dend_20 { pt3dadd( 28.9341, 40.241, -47.466, 0.68 ) }
    dend_20 { pt3dadd( 28.9835, 41.6817, -45.8502, 0.91 ) }
    dend_20 { pt3dadd( 29.1382, 42.9704, -44.185, 0.45 ) }
    dend_20 { pt3dadd( 29.4965, 44.3614, -42.3899, 0.45 ) }
    dend_20 { pt3dadd( 29.9667, 45.5714, -40.9829, 0.68 ) }
    dend_20 { pt3dadd( 30.5142, 46.8735, -39.7868, 0.23 ) }
    dend_20 { pt3dadd( 30.9835, 48.0282, -39.0051, 0.45 ) }
    dend_20 { pt3dadd( 31.25, 48.8112, -38.6664, 0.91 ) }
    dend_20 { pt3dadd( 32.0149, 51.5896, -38.0147, 0.45 ) }
    dend_20 { pt3dadd( 32.3867, 53.2775, -37.8718, 0.45 ) }
    dend_20 { pt3dadd( 32.677, 55.1059, -37.9563, 0.45 ) }
    dend_20 { pt3dadd( 32.815, 56.543, -38.1501, 0.68 ) }
    dend_20 { pt3dadd( 32.8407, 58.8619, -38.5317, 0.23 ) }
    dend_20 { pt3dadd( 32.746, 60.0234, -38.6727, 0.91 ) }
    dend_20 { pt3dadd( 32.4976, 61.4529, -38.802, 0.45 ) }
    dend_20 { pt3dadd( 32.0542, 63.4441, -38.8294, 0.23 ) }
    dend_20 { pt3dadd( 31.7851, 64.3745, -38.7666, 0.45 ) }
    dend_20 { pt3dadd( 31.1453, 66.2876, -38.4723, 0.23 ) }
    dend_20 { pt3dadd( 30.2337, 68.6758, -37.8994, 0.23 ) }
    dend_20 { pt3dadd( 30.2337, 68.6758, -37.8994, 0.23 ) }
    dend_20 { pt3dadd( 29.1047, 70.9678, -37.1922, 0.45 ) }
    dend_20 { pt3dadd( 28.2288, 72.6644, -36.6386, 0.23 ) }
    dend_20 { pt3dadd( 26.7554, 75.6861, -35.7059, 0.23 ) }
    dend_20 { pt3dadd( 25.9952, 77.3932, -35.2309, 0.23 ) }
    dend_20 { pt3dadd( 25.4203, 78.8393, -34.8088, 0.45 ) }
    dend_20 { pt3dadd( 25.0497, 80.2997, -34.3203, 0.23 ) }
    dend_20 { pt3dadd( 24.6378, 82.4701, -33.526, 0.23 ) }
    dend_20 { pt3dadd( 24.5088, 84.3554, -32.7772, 0.23 ) }
    dend_20 { pt3dadd( 24.6485, 85.7754, -32.1602, 0.23 ) }
    dend_20 { pt3dadd( 25.1527, 87.8566, -31.2365, 0.23 ) }
    dend_20 { pt3dadd( 26.2869, 90.907, -29.7945, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 59/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.81491, -18.3931, -24.6293, 0.45 ) }
    dend_17 { pt3dadd( 6.24958, -19.8623, -24.5021, 0.45 ) }
    dend_17 { pt3dadd( 6.54082, -21.0846, -24.424, 0.68 ) }
    dend_17 { pt3dadd( 6.77906, -22.2223, -24.3869, 0.68 ) }
    dend_17 { pt3dadd( 7.15591, -24.1402, -24.3575, 0.45 ) }
    dend_17 { pt3dadd( 7.4242, -25.6184, -24.4011, 0.68 ) }
    dend_17 { pt3dadd( 7.82825, -27.9194, -24.61, 0.45 ) }
    dend_17 { pt3dadd( 7.97383, -28.8897, -24.774, 0.68 ) }
    dend_17 { pt3dadd( 8.11465, -30.0613, -25.1203, 0.91 ) }
    dend_17 { pt3dadd( 8.20206, -30.8744, -25.472, 1.14 ) }
    dend_17 { pt3dadd( 8.31122, -32.2013, -26.2798, 0.68 ) }
    dend_17 { pt3dadd( 8.39428, -33.3224, -27.1297, 0.68 ) }
    dend_17 { pt3dadd( 8.49983, -34.4531, -28.0572, 0.91 ) }
    dend_17 { pt3dadd( 8.61637, -35.935, -29.253, 0.91 ) }
    dend_17 { pt3dadd( 8.6797, -37.217, -30.2624, 0.68 ) }
    dend_17 { pt3dadd( 8.70255, -39.1265, -31.658, 0.68 ) }
    dend_17 { pt3dadd( 8.67509, -40.0118, -32.2, 0.68 ) }
    dend_17 { pt3dadd( 8.50296, -42.2307, -33.3355, 0.45 ) }
    dend_17 { pt3dadd( 8.3619, -43.6599, -33.9605, 0.45 ) }
    dend_17 { pt3dadd( 8.29156, -44.357, -34.1996, 0.68 ) }
    dend_17 { pt3dadd( 8.15677, -46.1111, -34.6335, 0.91 ) }
    dend_17 { pt3dadd( 8.04831, -48.7066, -35.1073, 0.68 ) }
    dend_17 { pt3dadd( 8.02623, -49.981, -35.3004, 0.23 ) }
    dend_17 { pt3dadd( 8.07701, -51.8583, -35.5377, 0.23 ) }
    dend_17 { pt3dadd( 8.27404, -53.879, -35.8206, 0.45 ) }
    dend_17 { pt3dadd( 8.67762, -56.1787, -36.2222, 0.68 ) }
    dend_17 { pt3dadd( 9.17756, -58.0606, -36.6458, 0.45 ) }
    dend_17 { pt3dadd( 9.52722, -59.1081, -36.9667, 0.91 ) }
    dend_17 { pt3dadd( 10.4104, -61.3512, -37.8489, 0.45 ) }
    dend_17 { pt3dadd( 11.1044, -62.9187, -38.7041, 0.68 ) }
    dend_17 { pt3dadd( 11.7515, -64.2193, -39.6751, 0.45 ) }
    dend_17 { pt3dadd( 12.4444, -65.4496, -40.808, 0.91 ) }
    dend_17 { pt3dadd( 13.178, -66.6632, -42.0769, 0.45 ) }
    dend_17 { pt3dadd( 13.6899, -67.522, -43.0642, 0.68 ) }
    dend_17 { pt3dadd( 14.4946, -69.0132, -44.9099, 0.68 ) }
    dend_17 { pt3dadd( 14.8409, -69.713, -45.7908, 0.45 ) }
    dend_17 { pt3dadd( 15.4446, -70.9504, -47.3688, 0.68 ) }
    dend_17 { pt3dadd( 15.9408, -71.9668, -48.6891, 0.45 ) }
    dend_17 { pt3dadd( 16.4084, -72.8274, -49.9044, 0.45 ) }
    dend_17 { pt3dadd( 17.0709, -74.0439, -51.7612, 0.45 ) }
    dend_17 { pt3dadd( 17.6419, -74.9934, -53.3481, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_17 { pt3dadd( 17.8718, -75.3357, -53.9697, 1.14 ) }
    dend_17 { pt3dadd( 18.6731, -76.3939, -56.0434, 0.45 ) }
    dend_17 { pt3dadd( 19.6342, -77.5139, -58.2908, 0.45 ) }
    dend_17 { pt3dadd( 20.711, -78.6637, -60.5107, 0.45 ) }
    dend_17 { pt3dadd( 21.7563, -79.8045, -62.5231, 0.68 ) }
    dend_17 { pt3dadd( 22.5861, -80.7882, -64.0996, 0.45 ) }
    dend_17 { pt3dadd( 23.3921, -81.8169, -65.6339, 0.45 ) }
    dend_17 { pt3dadd( 24.0237, -82.638, -66.7437, 0.68 ) }
    dend_17 { pt3dadd( 25.1269, -84.1279, -68.5082, 0.45 ) }
    dend_17 { pt3dadd( 26.2305, -85.5591, -70.0381, 0.68 ) }
    dend_17 { pt3dadd( 27.2811, -86.9323, -71.3435, 0.68 ) }
    dend_17 { pt3dadd( 28.3103, -88.3044, -72.5548, 0.68 ) }
    dend_17 { pt3dadd( 28.6821, -88.7822, -72.9637, 0.45 ) }
    dend_17 { pt3dadd( 29.3601, -89.5804, -73.6365, 0.68 ) }
    dend_17 { pt3dadd( 30.3892, -90.7211, -74.6057, 0.23 ) }
    dend_17 { pt3dadd( 31.507, -91.8967, -75.698, 0.68 ) }
    dend_17 { pt3dadd( 32.4379, -92.8745, -76.7184, 0.45 ) }
    dend_17 { pt3dadd( 33.093, -93.5595, -77.5036, 0.68 ) }
    dend_17 { pt3dadd( 33.8114, -94.3543, -78.5809, 0.45 ) }
    dend_17 { pt3dadd( 34.6772, -95.3348, -80.2053, 0.45 ) }
    dend_17 { pt3dadd( 35.5969, -96.4537, -82.4256, 0.45 ) }
    dend_17 { pt3dadd( 36.2271, -97.3164, -84.2841, 0.45 ) }
    dend_17 { pt3dadd( 36.4499, -97.7, -85.1299, 0.91 ) }
    dend_17 { pt3dadd( 36.9318, -98.87, -87.6477, 0.45 ) }
    dend_17 { pt3dadd( 37.2507, -99.9988, -89.9564, 0.45 ) }
    dend_17 { pt3dadd( 37.518, -101.26, -92.3759, 0.45 ) }
    dend_17 { pt3dadd( 37.6209, -101.885, -93.4574, 0.45 ) }
    dend_17 { pt3dadd( 37.8574, -103.351, -95.8803, 0.45 ) }
    dend_17 { pt3dadd( 38.0347, -104.327, -97.4047, 0.45 ) }
    dend_17 { pt3dadd( 38.3315, -105.812, -99.4867, 0.45 ) }
    dend_17 { pt3dadd( 38.5502, -106.916, -100.929, 0.45 ) }
    dend_17 { pt3dadd( 38.9982, -108.892, -103.397, 0.45 ) }
    dend_17 { pt3dadd( 39.2512, -109.874, -104.578, 0.68 ) }
    dend_17 { pt3dadd( 39.7058, -111.709, -106.525, 0.45 ) }
    dend_17 { pt3dadd( 39.9982, -112.935, -107.63, 0.45 ) }
    dend_17 { pt3dadd( 40.1248, -113.538, -108.077, 0.45 ) }
    dend_17 { pt3dadd( 40.3872, -114.835, -108.9, 0.45 ) }
    dend_17 { pt3dadd( 40.5997, -115.814, -109.405, 0.45 ) }
    dend_17 { pt3dadd( 41.15, -117.934, -110.465, 0.45 ) }
    dend_17 { pt3dadd( 41.6717, -119.592, -111.36, 0.23 ) }
    dend_17 { pt3dadd( 42.3959, -121.736, -112.64, 0.23 ) }
    dend_17 { pt3dadd( 42.7789, -122.907, -113.483, 0.23 ) }
    dend_17 { pt3dadd( 43.1263, -124.024, -114.367, 0.45 ) }
    dend_17 { pt3dadd( 43.6533, -125.73, -115.824, 0.23 ) }
    dend_17 { pt3dadd( 44.5514, -128.622, -118.451, 0.23 ) }
    dend_17 { pt3dadd( 45.0532, -130.326, -120.015, 0.45 ) }
    dend_17 { pt3dadd( 45.6685, -132.841, -122.216, 0.23 ) }
    dend_17 { pt3dadd( 45.9191, -134.2, -123.349, 0.23 ) }
    dend_17 { pt3dadd( 46.065, -135.285, -124.213, 0.68 ) }
    dend_17 { pt3dadd( 46.2412, -137.404, -125.724, 0.23 ) }
    dend_17 { pt3dadd( 46.2919, -138.656, -126.572, 0.45 ) }
    dend_17 { pt3dadd( 46.3639, -142.284, -128.863, 0.23 ) }
    dend_17 { pt3dadd( 46.3727, -143.17, -129.362, 0.23 ) }
    dend_17 { pt3dadd( 46.3584, -144.167, -129.936, 0.45 ) }
    dend_17 { pt3dadd( 46.2462, -147.009, -131.549, 0.45 ) }
    dend_17 { pt3dadd( 46.1646, -148.446, -132.331, 0.23 ) }
    dend_17 { pt3dadd( 45.9939, -151.863, -134.193, 0.23 ) }
    dend_17 { pt3dadd( 45.9678, -154.226, -135.423, 0.23 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 58/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.81491, -18.3931, -24.6293, 0.68 ) }
    dend_16 { pt3dadd( 4.66317, -19.0329, -25.9124, 0.68 ) }
    dend_16 { pt3dadd( 3.51129, -19.7167, -27.2729, 0.45 ) }
    dend_16 { pt3dadd( 2.44976, -20.2858, -28.575, 0.45 ) }
    dend_16 { pt3dadd( 1.13873, -20.9657, -30.2194, 0.68 ) }
    dend_16 { pt3dadd( -0.122992, -21.6464, -31.8738, 0.45 ) }
    dend_16 { pt3dadd( -1.33212, -22.3374, -33.5488, 0.45 ) }
    dend_16 { pt3dadd( -2.49737, -23.0654, -35.2365, 0.45 ) }
    dend_16 { pt3dadd( -3.51453, -23.7734, -36.8605, 0.45 ) }
    dend_16 { pt3dadd( -4.48889, -24.4999, -38.5196, 0.45 ) }
    dend_16 { pt3dadd( -5.2171, -25.0767, -39.8126, 0.45 ) }
    dend_16 { pt3dadd( -6.24975, -25.9372, -41.5511, 0.45 ) }
    dend_16 { pt3dadd( -6.81801, -26.4444, -42.4867, 0.91 ) }
    dend_16 { pt3dadd( -8.0567, -27.5958, -44.461, 0.45 ) }
    dend_16 { pt3dadd( -9.00489, -28.4459, -45.8151, 0.45 ) }
    dend_16 { pt3dadd( -10.4824, -29.5982, -47.6631, 0.45 ) }
    dend_16 { pt3dadd( -11.2078, -30.0752, -48.4143, 0.91 ) }
    dend_16 { pt3dadd( -12.5084, -30.8058, -49.5145, 0.45 ) }
    dend_16 { pt3dadd( -13.3006, -31.1604, -50.045, 0.45 ) }
    dend_16 { pt3dadd( -14.6959, -31.6253, -50.7152, 0.45 ) }
    dend_16 { pt3dadd( -15.3713, -31.8102, -50.9521, 0.45 ) }
    dend_16 { pt3dadd( -16.5648, -32.1069, -51.3037, 0.45 ) }
    dend_16 { pt3dadd( -17.2346, -32.2952, -51.5418, 0.68 ) }
    dend_16 { pt3dadd( -18.4948, -32.6713, -52.0171, 0.68 ) }
    dend_16 { pt3dadd( -19.6777, -33.0562, -52.5067, 0.45 ) }
    dend_16 { pt3dadd( -20.8927, -33.5024, -53.0908, 1.14 ) }
    dend_16 { pt3dadd( -22.2448, -33.9897, -53.7767, 0.45 ) }
    dend_16 { pt3dadd( -24.1873, -34.6547, -54.8105, 0.45 ) }
    dend_16 { pt3dadd( -25.7474, -35.1863, -55.635, 0.45 ) }
    dend_16 { pt3dadd( -27.3943, -35.7607, -56.489, 0.23 ) }
    dend_16 { pt3dadd( -28.5927, -36.1831, -57.0525, 0.23 ) }
    dend_16 { pt3dadd( -30.0066, -36.7293, -57.7176, 0.45 ) }
    dend_16 { pt3dadd( -30.9539, -37.1501, -58.1487, 0.23 ) }
    dend_16 { pt3dadd( -31.8343, -37.6118, -58.5556, 0.68 ) }
    dend_16 { pt3dadd( -33.6146, -38.6856, -59.3985, 0.45 ) }
    dend_16 { pt3dadd( -34.8852, -39.5009, -59.9646, 0.91 ) }
    dend_16 { pt3dadd( -36.3277, -40.4345, -60.5523, 0.45 ) }
    dend_16 { pt3dadd( -37.4748, -41.1873, -61.0222, 0.45 ) }
    dend_16 { pt3dadd( -38.3302, -41.7323, -61.3749, 0.23 ) }
    dend_16 { pt3dadd( -40.3304, -42.907, -62.1992, 0.23 ) }
    dend_16 { pt3dadd( -41.2319, -43.3897, -62.5452, 0.68 ) }
    dend_16 { pt3dadd( -42.8445, -44.1209, -63.1163, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_16 { pt3dadd( -43.9262, -44.5664, -63.4424, 0.68 ) }
    dend_16 { pt3dadd( -45.0391, -45.0118, -63.7591, 0.45 ) }
    dend_16 { pt3dadd( -46.5206, -45.6328, -64.1791, 0.23 ) }
    dend_16 { pt3dadd( -47.6222, -46.1735, -64.5396, 0.23 ) }
    dend_16 { pt3dadd( -48.5925, -46.7286, -64.906, 0.23 ) }
    dend_16 { pt3dadd( -49.7116, -47.5427, -65.3722, 0.23 ) }
    dend_16 { pt3dadd( -49.9132, -47.7329, -65.4663, 0.23 ) }
    dend_16 { pt3dadd( -50.567, -48.5348, -65.8689, 0.68 ) }
    dend_16 { pt3dadd( -51.683, -50.4238, -66.8777, 0.45 ) }
    dend_16 { pt3dadd( -52.0154, -51.22, -67.3152, 0.45 ) }
    dend_16 { pt3dadd( -52.3543, -52.1842, -67.8559, 0.45 ) }
    dend_16 { pt3dadd( -52.7658, -53.5105, -68.6378, 0.23 ) }
    dend_16 { pt3dadd( -53.1004, -54.6999, -69.34, 0.23 ) }
    dend_16 { pt3dadd( -53.36, -55.9333, -70.0536, 0.23 ) }
    dend_16 { pt3dadd( -53.5014, -57.1375, -70.6492, 0.91 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 15/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 19.1931, -23.0506, -9.2287, 0.45 ) }
    dend_14 { pt3dadd( 20.0452, -23.4057, -8.11905, 0.45 ) }
    dend_14 { pt3dadd( 21.466, -24.1762, -6.24666, 0.68 ) }
    dend_14 { pt3dadd( 22.6025, -24.9159, -4.85321, 0.45 ) }
    dend_14 { pt3dadd( 23.1991, -25.3101, -4.18383, 0.45 ) }
    dend_14 { pt3dadd( 23.824, -25.7406, -3.49452, 0.45 ) }
    dend_14 { pt3dadd( 24.3519, -26.138, -2.929, 0.45 ) }
    dend_14 { pt3dadd( 25.3641, -27.0353, -1.95163, 0.91 ) }
    dend_14 { pt3dadd( 26.5033, -28.2203, -0.97193, 0.45 ) }
    dend_14 { pt3dadd( 27.4123, -29.3149, -0.209235, 0.45 ) }
    dend_14 { pt3dadd( 27.9407, -30.0486, 0.273119, 0.45 ) }
    dend_14 { pt3dadd( 28.7327, -31.2671, 1.00313, 0.68 ) }
    dend_14 { pt3dadd( 29.3913, -32.4203, 1.62507, 0.91 ) }
    dend_14 { pt3dadd( 29.9537, -33.5124, 2.18677, 0.68 ) }
    dend_14 { pt3dadd( 30.7307, -35.1151, 3.04598, 0.68 ) }
    dend_14 { pt3dadd( 31.4191, -36.5888, 3.85837, 0.68 ) }
    dend_14 { pt3dadd( 31.7195, -37.1696, 4.19494, 0.68 ) }
    dend_14 { pt3dadd( 32.5183, -38.61, 5.11284, 0.68 ) }
    dend_14 { pt3dadd( 33.4, -40.1345, 6.11859, 0.68 ) }
    dend_14 { pt3dadd( 34.0793, -41.2537, 6.86784, 0.68 ) }
    dend_14 { pt3dadd( 34.8297, -42.5026, 7.70159, 0.45 ) }
    dend_14 { pt3dadd( 35.3625, -43.3896, 8.24283, 0.45 ) }
    dend_14 { pt3dadd( 35.6957, -43.9509, 8.56098, 0.45 ) }
    dend_14 { pt3dadd( 36.2583, -44.8514, 9.05917, 0.68 ) }
    dend_14 { pt3dadd( 36.9661, -46.1102, 9.68537, 0.68 ) }
    dend_14 { pt3dadd( 37.2942, -46.7144, 9.95991, 0.45 ) }
    dend_14 { pt3dadd( 37.8645, -47.7764, 10.4326, 0.45 ) }
    dend_14 { pt3dadd( 38.2722, -48.5235, 10.7547, 0.45 ) }
    dend_14 { pt3dadd( 39.1905, -50.063, 11.4513, 0.45 ) }
    dend_14 { pt3dadd( 40.202, -51.5706, 12.1404, 0.68 ) }
    dend_14 { pt3dadd( 40.7736, -52.3144, 12.4925, 0.91 ) }
    dend_14 { pt3dadd( 41.2779, -52.9325, 12.8137, 0.91 ) }
    dend_14 { pt3dadd( 41.8937, -53.7052, 13.2341, 0.68 ) }
    dend_14 { pt3dadd( 42.6949, -54.821, 13.8059, 0.45 ) }
    dend_14 { pt3dadd( 43.5816, -56.2231, 14.4748, 0.45 ) }
    dend_14 { pt3dadd( 44.3493, -57.6378, 15.1445, 0.23 ) }
    dend_14 { pt3dadd( 44.6266, -58.3491, 15.4567, 0.23 ) }
    dend_14 { pt3dadd( 44.7318, -58.8892, 15.653, 0.23 ) }
    dend_14 { pt3dadd( 44.7729, -60.6271, 16.1421, 0.45 ) }
    dend_14 { pt3dadd( 44.5959, -62.8435, 16.6004, 0.23 ) }
    dend_14 { pt3dadd( 44.4194, -63.9674, 16.7756, 0.23 ) }
    dend_14 { pt3dadd( 44.0695, -65.7605, 16.9643, 0.23 ) }
    dend_14 { pt3dadd( 43.4895, -68.4337, 17.197, 0.23 ) }
    dend_14 { pt3dadd( 43.1442, -69.8918, 17.306, 0.23 ) }
    dend_14 { pt3dadd( 42.8631, -71.0264, 17.4019, 0.23 ) }
    dend_14 { pt3dadd( 42.3524, -72.9718, 17.6201, 0.23 ) }
    dend_14 { pt3dadd( 41.9812, -74.3553, 17.8933, 0.23 ) }
    dend_14 { pt3dadd( 41.4384, -76.5446, 18.4134, 0.23 ) }
    dend_14 { pt3dadd( 41.2123, -77.449, 18.6835, 0.45 ) }
    dend_14 { pt3dadd( 40.7391, -79.2068, 19.3146, 0.23 ) }
    dend_14 { pt3dadd( 40.4021, -80.287, 19.7819, 0.45 ) }
    dend_14 { pt3dadd( 39.8278, -81.9248, 20.702, 0.45 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 67/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 19.1931, -23.0506, -9.2287, 0.45 ) }
    dend_11 { pt3dadd( 20.7887, -25.3204, -10.3289, 0.45 ) }
    dend_11 { pt3dadd( 21.4756, -26.2403, -10.8287, 0.68 ) }
    dend_11 { pt3dadd( 22.2704, -27.1624, -11.379, 0.45 ) }
    dend_11 { pt3dadd( 23.2627, -28.1353, -11.9664, 0.45 ) }
    dend_11 { pt3dadd( 24.4306, -29.1458, -12.5793, 0.45 ) }
    dend_11 { pt3dadd( 25.864, -30.2837, -13.2636, 0.45 ) }
    dend_11 { pt3dadd( 27.5208, -31.3657, -13.8923, 0.68 ) }
    dend_11 { pt3dadd( 29.5671, -32.3804, -14.5866, 0.68 ) }
    dend_11 { pt3dadd( 31.7077, -33.0559, -15.2494, 0.45 ) }
    dend_11 { pt3dadd( 33.0486, -33.2537, -15.5944, 0.45 ) }
    dend_11 { pt3dadd( 33.9866, -33.2576, -15.7744, 0.68 ) }
    dend_11 { pt3dadd( 35.0469, -33.1276, -15.9269, 0.91 ) }
    dend_11 { pt3dadd( 37.6185, -32.6237, -16.2768, 0.45 ) }
    dend_11 { pt3dadd( 39.7211, -32.1487, -16.569, 0.68 ) }
    dend_11 { pt3dadd( 41.1891, -31.8268, -16.7924, 0.91 ) }
    dend_11 { pt3dadd( 42.5294, -31.5251, -17.0077, 0.91 ) }
    dend_11 { pt3dadd( 44.7267, -31.064, -17.3852, 0.45 ) }
    dend_11 { pt3dadd( 46.5729, -30.7831, -17.7269, 0.45 ) }
    dend_11 { pt3dadd( 47.4508, -30.7365, -17.904, 0.68 ) }
    dend_11 { pt3dadd( 49.2353, -30.8652, -18.2376, 0.45 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 88/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 37.3161, 46.1019, 10.292, 0.23 ) }
    dend_4 { pt3dadd( 38.5671, 46.9365, 10.8062, 0.23 ) }
    dend_4 { pt3dadd( 39.6613, 47.6584, 11.2417, 0.45 ) }
    dend_4 { pt3dadd( 40.8454, 48.4172, 11.6852, 0.45 ) }
    dend_4 { pt3dadd( 41.9972, 49.1554, 12.1166, 0.23 ) }
    dend_4 { pt3dadd( 43.1241, 49.8776, 12.5387, 0.68 ) }
    dend_4 { pt3dadd( 45.2937, 51.2681, 13.3513, 0.45 ) }
    dend_4 { pt3dadd( 47.101, 52.446, 13.9529, 0.23 ) }
    dend_4 { pt3dadd( 47.8598, 52.9746, 14.1918, 0.23 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 97/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 37.3161, 46.1019, 10.292, 0.45 ) }
    dend_3 { pt3dadd( 37.7072, 48.0153, 9.46783, 0.45 ) }
    dend_3 { pt3dadd( 38.0068, 49.2787, 8.8968, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( 38.3079, 50.4879, 8.34659, 0.68 ) }
    dend_3 { pt3dadd( 38.492, 51.2636, 7.99833, 0.68 ) }
    dend_3 { pt3dadd( 38.8862, 53.013, 7.17307, 0.23 ) }
    dend_3 { pt3dadd( 39.2072, 54.667, 6.33717, 0.23 ) }
    dend_3 { pt3dadd( 39.4473, 56.2453, 5.49515, 0.23 ) }
    dend_3 { pt3dadd( 39.5548, 57.329, 4.90401, 0.45 ) }
    dend_3 { pt3dadd( 39.7725, 59.7576, 3.55669, 0.23 ) }
    dend_3 { pt3dadd( 39.8594, 61.001, 2.84352, 0.68 ) }
    dend_3 { pt3dadd( 39.9148, 63.0282, 1.66104, 0.23 ) }
    dend_3 { pt3dadd( 39.8949, 64.884, 0.583831, 0.23 ) }
    dend_3 { pt3dadd( 39.8395, 65.5223, 0.195998, 0.45 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 11/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -9.23228, 7.68206, -24.0454, 1.83 ) }
    dend_52 { pt3dadd( -9.57278, 7.87753, -24.0295, 1.83 ) }
    dend_52 { pt3dadd( -11.1894, 8.76828, -23.7811, 1.61 ) }
    dend_52 { pt3dadd( -13.5381, 10.1081, -23.1758, 1.15 ) }
    dend_52 { pt3dadd( -15.107, 11.1012, -22.6513, 1.38 ) }
    dend_52 { pt3dadd( -16.2562, 11.8287, -22.2671, 1.15 ) }
    dend_52 { pt3dadd( -17.2636, 12.4664, -21.9304, 1.15 ) }
    dend_52 { pt3dadd( -18.5918, 13.3009, -21.402, 0.92 ) }
    dend_52 { pt3dadd( -19.9422, 14.1966, -20.6383, 0.92 ) }
    dend_52 { pt3dadd( -21.0169, 14.9789, -19.7494, 1.15 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -9.23228, 7.68206, -24.0454, 0.69 ) }
    dend_47 { pt3dadd( -9.68867, 6.82894, -25.641, 0.69 ) }
    dend_47 { pt3dadd( -9.98816, 6.26915, -26.688, 0.69 ) }
    dend_47 { pt3dadd( -10.3947, 5.50928, -28.1092, 0.69 ) }
    dend_47 { pt3dadd( -10.7948, 4.76133, -29.5081, 0.69 ) }
    dend_47 { pt3dadd( -11.03, 4.32162, -30.3305, 0.69 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 27/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.01863, 17.2335, -13.1132, 0.69 ) }
    dend_45 { pt3dadd( -1.89855, 18.2906, -11.7685, 0.69 ) }
    dend_45 { pt3dadd( -1.66581, 19.4741, -10.3049, 0.69 ) }
    dend_45 { pt3dadd( -1.41001, 20.5691, -9.06618, 0.69 ) }
    dend_45 { pt3dadd( -1.09459, 21.622, -7.98271, 0.69 ) }
    dend_45 { pt3dadd( -0.524861, 23.0321, -6.57461, 0.69 ) }
    dend_45 { pt3dadd( -0.00104021, 24.085, -5.56809, 0.46 ) }
    dend_45 { pt3dadd( 0.593802, 24.9565, -4.8167, 0.46 ) }
    dend_45 { pt3dadd( 1.23308, 25.7114, -4.18654, 0.69 ) }
    dend_45 { pt3dadd( 2.41301, 27.0032, -3.18876, 0.46 ) }
    dend_45 { pt3dadd( 3.70351, 28.3117, -2.27162, 0.69 ) }
    dend_45 { pt3dadd( 4.58666, 29.1014, -1.7677, 0.92 ) }
    dend_45 { pt3dadd( 5.52829, 29.8075, -1.31979, 0.69 ) }
    dend_45 { pt3dadd( 6.82607, 30.567, -0.765971, 0.46 ) }
    dend_45 { pt3dadd( 7.35192, 30.7933, -0.540169, 0.46 ) }
    dend_45 { pt3dadd( 9.01532, 31.3475, 0.274961, 0.46 ) }
    dend_45 { pt3dadd( 10.3367, 31.7428, 1.08641, 0.46 ) }
    dend_45 { pt3dadd( 11.9663, 32.1918, 2.21248, 0.46 ) }
    dend_45 { pt3dadd( 13.167, 32.4875, 3.06495, 0.46 ) }
    dend_45 { pt3dadd( 14.9277, 32.91, 4.33592, 0.46 ) }
    dend_45 { pt3dadd( 16.7015, 33.3323, 5.63165, 0.46 ) }
    dend_45 { pt3dadd( 18.587, 33.7711, 7.03751, 0.46 ) }
    dend_45 { pt3dadd( 19.7641, 34.0652, 7.89462, 0.46 ) }
    dend_45 { pt3dadd( 21.5411, 34.5338, 9.15343, 0.46 ) }
    dend_45 { pt3dadd( 23.1556, 35.0413, 10.2054, 0.92 ) }
    dend_45 { pt3dadd( 24.5451, 35.5254, 11.0014, 0.23 ) }
    dend_45 { pt3dadd( 26.0901, 36.0272, 11.7847, 0.23 ) }
    dend_45 { pt3dadd( 27.6723, 36.5224, 12.5527, 0.23 ) }
    dend_45 { pt3dadd( 28.4343, 36.7736, 12.9175, 0.46 ) }
    dend_45 { pt3dadd( 30.1023, 37.3109, 13.6487, 0.23 ) }
    dend_45 { pt3dadd( 31.8013, 37.8658, 14.3661, 0.69 ) }
    dend_45 { pt3dadd( 33.9268, 38.5886, 15.2805, 0.46 ) }
    dend_45 { pt3dadd( 35.5536, 39.1567, 15.9719, 0.46 ) }
    dend_45 { pt3dadd( 37.0094, 39.6059, 16.5862, 0.46 ) }
    dend_45 { pt3dadd( 38.5694, 40.0202, 17.145, 0.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 62/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -2.01863, 17.2335, -13.1132, 0.69 ) }
    dend_42 { pt3dadd( -1.88852, 17.7934, -14.0201, 0.69 ) }
    dend_42 { pt3dadd( -1.67343, 18.4672, -15.02, 0.69 ) }
    dend_42 { pt3dadd( -1.41569, 19.2718, -16.0741, 0.69 ) }
    dend_42 { pt3dadd( -1.28286, 19.6555, -16.5017, 0.69 ) }
    dend_42 { pt3dadd( -0.972102, 20.5206, -17.2558, 0.69 ) }
    dend_42 { pt3dadd( -0.47826, 21.8156, -18.2311, 0.92 ) }
    dend_42 { pt3dadd( 0.0110726, 22.9528, -18.9166, 0.69 ) }
    dend_42 { pt3dadd( 0.384261, 23.6523, -19.2505, 0.69 ) }
    dend_42 { pt3dadd( 1.10783, 24.6853, -19.7063, 0.69 ) }
    dend_42 { pt3dadd( 2.43921, 26.1919, -20.3948, 0.46 ) }
    dend_42 { pt3dadd( 2.81106, 26.555, -20.5545, 0.46 ) }
    dend_42 { pt3dadd( 3.4162, 27.1129, -20.7868, 0.69 ) }
    dend_42 { pt3dadd( 4.58685, 28.1702, -21.2203, 0.92 ) }
    dend_42 { pt3dadd( 6.01581, 29.4743, -21.7765, 0.69 ) }
    dend_42 { pt3dadd( 7.392, 30.7771, -22.3935, 0.92 ) }
    dend_42 { pt3dadd( 8.57487, 31.8728, -22.9598, 0.46 ) }
    dend_42 { pt3dadd( 9.14497, 32.4497, -23.2458, 0.46 ) }
    dend_42 { pt3dadd( 9.80797, 33.2385, -23.5937, 0.46 ) }
    dend_42 { pt3dadd( 10.4747, 34.3279, -24.0027, 0.46 ) }
    dend_42 { pt3dadd( 10.894, 35.3945, -24.2287, 0.92 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -14.4606, -17.8807, -24.3383, 0.45 ) }
    dend_38 { pt3dadd( -14.2935, -19.1277, -25.6634, 0.45 ) }
    dend_38 { pt3dadd( -14.1461, -20.5706, -26.9561, 0.45 ) }
    dend_38 { pt3dadd( -14.0922, -21.5606, -27.7001, 0.68 ) }
    dend_38 { pt3dadd( -14.0219, -23.4465, -28.9388, 0.68 ) }
    dend_38 { pt3dadd( -13.9978, -24.118, -29.3455, 0.68 ) }
    dend_38 { pt3dadd( -13.9636, -25.921, -30.3408, 0.45 ) }
    dend_38 { pt3dadd( -13.9598, -27.2768, -30.993, 0.91 ) }
    dend_38 { pt3dadd( -14.0014, -28.6778, -31.5334, 0.45 ) }
    dend_38 { pt3dadd( -14.0685, -30.1546, -32.0821, 0.45 ) }
    dend_38 { pt3dadd( -14.1071, -31.4256, -32.5519, 0.45 ) }
    dend_38 { pt3dadd( -14.1316, -32.8186, -33.1428, 0.45 ) }
    dend_38 { pt3dadd( -14.1368, -33.42, -33.4354, 0.68 ) }
    dend_38 { pt3dadd( -14.1668, -35.0144, -34.3156, 0.91 ) }
    dend_38 { pt3dadd( -14.1347, -36.9262, -35.4953, 0.68 ) }
    dend_38 { pt3dadd( -14.0577, -38.7563, -36.7032, 0.45 ) }
    dend_38 { pt3dadd( -13.9975, -39.6273, -37.3133, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( -13.909, -40.5807, -37.9907, 0.91 ) }
    dend_38 { pt3dadd( -13.7635, -41.8921, -38.8963, 0.45 ) }
    dend_38 { pt3dadd( -13.5493, -43.4125, -39.9158, 0.68 ) }
    dend_38 { pt3dadd( -13.3661, -44.8875, -40.8211, 0.45 ) }
    dend_38 { pt3dadd( -13.2983, -45.587, -41.2444, 0.68 ) }
    dend_38 { pt3dadd( -13.1719, -46.8493, -41.9634, 0.91 ) }
    dend_38 { pt3dadd( -13.0386, -48.096, -42.6462, 0.91 ) }
    dend_38 { pt3dadd( -12.9214, -49.4055, -43.2947, 0.45 ) }
    dend_38 { pt3dadd( -12.8272, -51.087, -44.0212, 0.45 ) }
    dend_38 { pt3dadd( -12.7794, -51.7358, -44.2732, 0.68 ) }
    dend_38 { pt3dadd( -12.5817, -53.6118, -44.9242, 0.45 ) }
    dend_38 { pt3dadd( -12.4792, -54.5768, -45.2339, 0.45 ) }
    dend_38 { pt3dadd( -12.4533, -54.9324, -45.2988, 0.45 ) }
    dend_38 { pt3dadd( -12.3106, -57.2341, -45.4564, 0.68 ) }
    dend_38 { pt3dadd( -12.2132, -58.5823, -45.4699, 0.45 ) }
    dend_38 { pt3dadd( -12.1408, -59.8183, -45.4344, 1.14 ) }
    dend_38 { pt3dadd( -12.0777, -61.4785, -45.3573, 0.68 ) }
    dend_38 { pt3dadd( -11.9593, -64.5656, -45.2304, 0.23 ) }
    dend_38 { pt3dadd( -11.8984, -65.7368, -45.231, 0.45 ) }
    dend_38 { pt3dadd( -11.8316, -67.1654, -45.2786, 0.23 ) }
    dend_38 { pt3dadd( -11.7805, -68.3317, -45.3685, 0.68 ) }
    dend_38 { pt3dadd( -11.6761, -69.8696, -45.5986, 0.91 ) }
    dend_38 { pt3dadd( -11.4558, -71.8293, -46.0505, 0.68 ) }
    dend_38 { pt3dadd( -11.1732, -73.9727, -46.7432, 0.23 ) }
    dend_38 { pt3dadd( -10.9205, -75.6048, -47.2759, 0.91 ) }
    dend_38 { pt3dadd( -10.7243, -76.68, -47.629, 0.68 ) }
    dend_38 { pt3dadd( -10.3572, -78.338, -48.2172, 0.68 ) }
    dend_38 { pt3dadd( -10.0229, -79.6036, -48.7011, 0.45 ) }
    dend_38 { pt3dadd( -9.62019, -80.9641, -49.2583, 0.45 ) }
    dend_38 { pt3dadd( -8.95422, -83.0139, -50.0917, 0.23 ) }
    dend_38 { pt3dadd( -8.61124, -83.9998, -50.4968, 0.68 ) }
    dend_38 { pt3dadd( -8.12116, -85.3829, -51.0181, 0.91 ) }
    dend_38 { pt3dadd( -7.49286, -87.202, -51.6757, 0.23 ) }
    dend_38 { pt3dadd( -7.05429, -88.5403, -52.1719, 0.23 ) }
    dend_38 { pt3dadd( -6.88779, -89.0994, -52.3933, 0.68 ) }
    dend_38 { pt3dadd( -6.60107, -90.2859, -52.8808, 0.23 ) }
    dend_38 { pt3dadd( -6.36802, -91.7547, -53.4368, 0.45 ) }
    dend_38 { pt3dadd( -6.27654, -93.0201, -53.8953, 0.23 ) }
    dend_38 { pt3dadd( -6.27253, -94.1545, -54.2918, 0.91 ) }
    dend_38 { pt3dadd( -6.3313, -95.7024, -54.8087, 0.23 ) }
    dend_38 { pt3dadd( -6.38592, -96.5181, -55.0755, 0.68 ) }
    dend_38 { pt3dadd( -6.61877, -99.4143, -55.9571, 0.45 ) }
    dend_38 { pt3dadd( -6.72354, -101.311, -56.4497, 0.68 ) }
    dend_38 { pt3dadd( -6.76124, -103.617, -57.0192, 0.23 ) }
    dend_38 { pt3dadd( -6.71422, -106.157, -57.6217, 0.45 ) }
    dend_38 { pt3dadd( -6.63248, -107.972, -58.05, 0.23 ) }
    dend_38 { pt3dadd( -6.4566, -110.496, -58.6483, 0.23 ) }
    dend_38 { pt3dadd( -6.16482, -112.978, -59.2209, 0.23 ) }
    dend_38 { pt3dadd( -5.79418, -115.308, -59.7321, 0.23 ) }
    dend_38 { pt3dadd( -5.67639, -115.884, -59.8613, 0.23 ) }
    dend_38 { pt3dadd( -5.319, -117.3, -60.2024, 0.45 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 51/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -14.4606, -17.8807, -24.3383, 0.91 ) }
    dend_35 { pt3dadd( -14.9433, -18.5708, -24.7917, 0.91 ) }
    dend_35 { pt3dadd( -16.0926, -20.1418, -25.8027, 0.68 ) }
    dend_35 { pt3dadd( -17.0157, -21.3269, -26.5295, 0.68 ) }
    dend_35 { pt3dadd( -18.1242, -22.6161, -27.273, 0.68 ) }
    dend_35 { pt3dadd( -18.9148, -23.5355, -27.8033, 0.68 ) }
    dend_35 { pt3dadd( -19.6494, -24.3897, -28.296, 0.68 ) }
    dend_35 { pt3dadd( -20.3396, -25.2423, -28.7936, 0.68 ) }
    dend_35 { pt3dadd( -20.9509, -26.0161, -29.2319, 0.91 ) }
    dend_35 { pt3dadd( -21.919, -27.0356, -29.7075, 0.91 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 61/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -22.049, -9.28532, 27.8517, 0.23 ) }
    dend_28 { pt3dadd( -24.1698, -9.96665, 28.0998, 0.23 ) }
    dend_28 { pt3dadd( -25.3788, -10.4185, 28.4132, 0.23 ) }
    dend_28 { pt3dadd( -26.4475, -10.7955, 28.755, 0.23 ) }
    dend_28 { pt3dadd( -27.6719, -11.3255, 29.1918, 0.23 ) }
    dend_28 { pt3dadd( -29.2538, -12.0896, 29.8123, 0.69 ) }
    dend_28 { pt3dadd( -30.3269, -12.608, 30.2332, 0.46 ) }
    dend_28 { pt3dadd( -31.4439, -13.1837, 30.8053, 0.46 ) }
    dend_28 { pt3dadd( -33.5006, -14.3085, 31.9913, 0.46 ) }
    dend_28 { pt3dadd( -35.2265, -15.3686, 33.0247, 0.23 ) }
    dend_28 { pt3dadd( -35.6505, -15.644, 33.2651, 0.23 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 72/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -22.049, -9.28532, 27.8517, 0.46 ) }
    dend_27 { pt3dadd( -23.8212, -8.19457, 25.8886, 0.46 ) }
    dend_27 { pt3dadd( -25.8465, -6.94805, 23.6451, 0.23 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 75/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 49.2353, -30.8652, -18.2376, 0.23 ) }
    dend_13 { pt3dadd( 48.6562, -32.1709, -17.2837, 0.23 ) }
    dend_13 { pt3dadd( 48.3898, -33.1696, -16.3103, 0.23 ) }
    dend_13 { pt3dadd( 48.3076, -33.7715, -15.6444, 0.45 ) }
    dend_13 { pt3dadd( 48.4032, -34.5614, -14.555, 0.23 ) }
    dend_13 { pt3dadd( 48.5053, -34.828, -14.0617, 0.45 ) }
    dend_13 { pt3dadd( 48.9061, -35.8747, -12.1249, 0.23 ) }
    dend_13 { pt3dadd( 49.3543, -36.4947, -10.6688, 0.23 ) }
    dend_13 { pt3dadd( 49.6167, -36.7252, -10.0173, 0.45 ) }
    dend_13 { pt3dadd( 50.5655, -37.2783, -7.98011, 0.23 ) }
    dend_13 { pt3dadd( 51.392, -37.5459, -6.39758, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 86/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 49.2353, -30.8652, -18.2376, 0.45 ) }
    dend_12 { pt3dadd( 51.7212, -30.4357, -18.5728, 0.45 ) }
    dend_12 { pt3dadd( 52.7002, -30.2739, -18.7285, 0.45 ) }
    dend_12 { pt3dadd( 54.2772, -30.0423, -18.9858, 0.68 ) }
    dend_12 { pt3dadd( 56.7294, -29.754, -19.3792, 0.68 ) }
    dend_12 { pt3dadd( 59.6326, -29.5175, -19.8206, 0.45 ) }
    dend_12 { pt3dadd( 61.5819, -29.4172, -20.0989, 0.45 ) }
    dend_12 { pt3dadd( 63.637, -29.4249, -20.4175, 0.45 ) }
    dend_12 { pt3dadd( 64.7834, -29.4656, -20.616, 0.23 ) }
    dend_12 { pt3dadd( 66.0383, -29.5543, -20.8471, 0.45 ) }
    dend_12 { pt3dadd( 67.9002, -29.7897, -21.1862, 0.45 ) }
    dend_12 { pt3dadd( 69.2375, -30.0757, -21.4386, 0.23 ) }
    dend_12 { pt3dadd( 69.801, -30.2354, -21.5867, 0.45 ) }
    dend_12 { pt3dadd( 71.2283, -30.7203, -22.0813, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_12 { pt3dadd( 71.9257, -30.9575, -22.3585, 0.23 ) }
    dend_12 { pt3dadd( 72.9232, -31.2755, -22.8099, 0.91 ) }
    dend_12 { pt3dadd( 74.657, -31.8165, -23.7063, 0.23 ) }
    dend_12 { pt3dadd( 76.3644, -32.4029, -24.6904, 0.45 ) }
    dend_12 { pt3dadd( 77.398, -32.7839, -25.3911, 0.23 ) }
    dend_12 { pt3dadd( 78.6154, -33.263, -26.3402, 0.45 ) }
    dend_12 { pt3dadd( 80.0019, -33.775, -27.5427, 0.68 ) }
    dend_12 { pt3dadd( 80.8929, -34.053, -28.3485, 0.68 ) }
    dend_12 { pt3dadd( 82.3948, -34.3407, -29.6328, 0.23 ) }
    dend_12 { pt3dadd( 84.422, -34.503, -31.1107, 0.23 ) }
    dend_12 { pt3dadd( 85.746, -34.4935, -31.9285, 0.45 ) }
    dend_12 { pt3dadd( 86.9156, -34.4173, -32.5228, 0.23 ) }
    dend_12 { pt3dadd( 88.4834, -34.1629, -33.0975, 0.68 ) }
    dend_12 { pt3dadd( 90.5972, -33.6366, -33.5633, 0.23 ) }
    dend_12 { pt3dadd( 93.3944, -32.7429, -33.8452, 0.23 ) }
    dend_12 { pt3dadd( 94.7857, -32.2271, -33.8475, 0.23 ) }
    dend_12 { pt3dadd( 95.6587, -31.8433, -33.7459, 0.23 ) }
    dend_12 { pt3dadd( 97.2244, -31.0162, -33.2888, 0.23 ) }
    dend_12 { pt3dadd( 98.4919, -30.1499, -32.5463, 0.68 ) }
    dend_12 { pt3dadd( 99.0831, -29.6449, -31.9916, 0.23 ) }
    dend_12 { pt3dadd( 99.5519, -29.158, -31.4122, 0.68 ) }
    dend_12 { pt3dadd( 101.024, -27.4746, -29.2105, 0.23 ) }
    dend_12 { pt3dadd( 102.157, -26.0589, -27.1772, 0.23 ) }
    dend_12 { pt3dadd( 103.046, -24.8433, -25.1739, 0.23 ) }
    dend_12 { pt3dadd( 103.259, -24.4992, -24.5728, 0.91 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 25/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -21.0169, 14.9789, -19.7494, 0.92 ) }
    dend_56 { pt3dadd( -21.3964, 16.0341, -19.1749, 0.92 ) }
    dend_56 { pt3dadd( -21.9635, 17.7834, -18.1656, 0.69 ) }
    dend_56 { pt3dadd( -22.3526, 19.077, -17.3909, 0.69 ) }
    dend_56 { pt3dadd( -22.7661, 20.5844, -16.4618, 0.92 ) }
    dend_56 { pt3dadd( -23.2219, 22.2008, -15.4663, 0.69 ) }
    dend_56 { pt3dadd( -23.6776, 23.8168, -14.4711, 0.46 ) }
    dend_56 { pt3dadd( -24.0916, 25.1328, -13.6146, 0.69 ) }
    dend_56 { pt3dadd( -24.4555, 26.2632, -12.8367, 0.69 ) }
    dend_56 { pt3dadd( -24.6307, 26.9103, -12.3909, 0.92 ) }
    dend_56 { pt3dadd( -24.805, 27.7932, -11.7802, 1.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 36/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -21.0169, 14.9789, -19.7494, 0.69 ) }
    dend_53 { pt3dadd( -22.0964, 14.9277, -19.8068, 0.69 ) }
    dend_53 { pt3dadd( -24.5991, 14.4747, -19.934, 0.46 ) }
    dend_53 { pt3dadd( -25.6855, 14.1904, -20.0079, 0.46 ) }
    dend_53 { pt3dadd( -26.5642, 13.9254, -20.072, 0.46 ) }
    dend_53 { pt3dadd( -27.4805, 13.6406, -20.1359, 0.46 ) }
    dend_53 { pt3dadd( -28.9762, 13.0902, -20.2333, 0.69 ) }
    dend_53 { pt3dadd( -30.1099, 12.5609, -20.2813, 0.69 ) }
    dend_53 { pt3dadd( -31.2086, 11.9813, -20.2581, 0.69 ) }
    dend_53 { pt3dadd( -32.4595, 11.3368, -20.1672, 0.69 ) }
    dend_53 { pt3dadd( -34.154, 10.6102, -19.9999, 0.46 ) }
    dend_53 { pt3dadd( -36.1205, 9.99982, -19.7249, 0.46 ) }
    dend_53 { pt3dadd( -37.3629, 9.75423, -19.4759, 0.46 ) }
    dend_53 { pt3dadd( -38.8188, 9.55492, -19.096, 0.46 ) }
    dend_53 { pt3dadd( -39.5304, 9.47221, -18.8786, 0.92 ) }
    dend_53 { pt3dadd( -41.2811, 9.31741, -18.3242, 0.46 ) }
    dend_53 { pt3dadd( -42.7454, 9.2639, -17.9341, 0.46 ) }
    dend_53 { pt3dadd( -44.2557, 9.29297, -17.5679, 0.46 ) }
    dend_53 { pt3dadd( -46.1846, 9.29246, -17.1171, 0.69 ) }
    dend_53 { pt3dadd( -47.2403, 9.24078, -16.8612, 0.69 ) }
    dend_53 { pt3dadd( -48.5759, 9.12707, -16.5327, 0.46 ) }
    dend_53 { pt3dadd( -50.4001, 8.8854, -16.0901, 0.69 ) }
    dend_53 { pt3dadd( -52.1679, 8.68317, -15.7093, 0.23 ) }
    dend_53 { pt3dadd( -53.6293, 8.59079, -15.4286, 0.46 ) }
    dend_53 { pt3dadd( -55.2466, 8.57593, -15.0668, 1.38 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 61/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -11.03, 4.32162, -30.3305, 0.69 ) }
    dend_51 { pt3dadd( -11.304, 4.58908, -30.922, 0.69 ) }
    dend_51 { pt3dadd( -11.9837, 5.45854, -33.0847, 0.69 ) }
    dend_51 { pt3dadd( -12.3545, 6.10221, -34.8802, 0.69 ) }
    dend_51 { pt3dadd( -12.5287, 6.48549, -35.9813, 0.69 ) }
    dend_51 { pt3dadd( -12.6207, 6.82752, -36.9043, 0.69 ) }
    dend_51 { pt3dadd( -12.7104, 7.22635, -37.9225, 0.69 ) }
    dend_51 { pt3dadd( -12.8136, 7.92117, -39.5139, 0.69 ) }
    dend_51 { pt3dadd( -12.8138, 8.71611, -41.2161, 0.69 ) }
    dend_51 { pt3dadd( -12.6815, 9.6831, -43.1701, 0.46 ) }
    dend_51 { pt3dadd( -12.6013, 10.2974, -44.3966, 0.46 ) }
    dend_51 { pt3dadd( -12.5971, 10.542, -44.8823, 0.46 ) }
    dend_51 { pt3dadd( -12.6903, 11.225, -46.2673, 0.69 ) }
    dend_51 { pt3dadd( -12.9506, 12.5525, -48.834, 0.69 ) }
    dend_51 { pt3dadd( -13.0879, 13.7113, -50.8281, 0.69 ) }
    dend_51 { pt3dadd( -13.1417, 14.6679, -52.2797, 0.69 ) }
    dend_51 { pt3dadd( -13.1769, 15.3976, -53.2054, 0.69 ) }
    dend_51 { pt3dadd( -13.1509, 16.4583, -54.3516, 0.69 ) }
    dend_51 { pt3dadd( -13.0642, 17.7305, -55.608, 0.46 ) }
    dend_51 { pt3dadd( -12.9607, 19.1406, -56.788, 0.92 ) }
    dend_51 { pt3dadd( -12.8596, 20.5302, -57.8449, 0.69 ) }
    dend_51 { pt3dadd( -12.7459, 22.195, -59.0572, 0.69 ) }
    dend_51 { pt3dadd( -12.6898, 23.4075, -59.9622, 0.46 ) }
    dend_51 { pt3dadd( -12.6886, 25.079, -61.3275, 0.69 ) }
    dend_51 { pt3dadd( -12.7748, 26.2492, -62.3834, 0.69 ) }
    dend_51 { pt3dadd( -12.9892, 27.6118, -63.6499, 0.69 ) }
    dend_51 { pt3dadd( -13.1779, 28.5254, -64.5478, 0.69 ) }
    dend_51 { pt3dadd( -13.3791, 29.225, -65.2431, 0.69 ) }
    dend_51 { pt3dadd( -13.7654, 30.3416, -66.2224, 0.92 ) }
    dend_51 { pt3dadd( -13.9917, 30.9967, -66.7316, 1.38 ) }
    dend_51 { pt3dadd( -14.4554, 32.379, -67.7436, 0.69 ) }
    dend_51 { pt3dadd( -14.987, 33.939, -68.8909, 0.69 ) }
    dend_51 { pt3dadd( -15.4742, 35.4032, -69.9282, 0.69 ) }
    dend_51 { pt3dadd( -15.7786, 36.3265, -70.5429, 0.46 ) }
    dend_51 { pt3dadd( -16.2649, 37.7733, -71.4307, 0.92 ) }
    dend_51 { pt3dadd( -16.8193, 39.3628, -72.3951, 0.46 ) }
    dend_51 { pt3dadd( -17.5174, 41.3242, -73.5745, 0.46 ) }
    dend_51 { pt3dadd( -17.6876, 41.7929, -73.8619, 0.69 ) }
    dend_51 { pt3dadd( -17.9632, 42.5432, -74.3494, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_51 { pt3dadd( -18.3598, 43.5127, -75.0105, 0.92 ) }
    dend_51 { pt3dadd( -19.2324, 45.3485, -76.3016, 0.46 ) }
    dend_51 { pt3dadd( -20.1643, 46.9688, -77.4835, 0.46 ) }
    dend_51 { pt3dadd( -20.8849, 48.0681, -78.2531, 0.46 ) }
    dend_51 { pt3dadd( -21.3941, 48.7713, -78.7221, 0.46 ) }
    dend_51 { pt3dadd( -22.4528, 50.072, -79.5489, 0.92 ) }
    dend_51 { pt3dadd( -24.019, 51.8248, -80.5156, 0.46 ) }
    dend_51 { pt3dadd( -25.1254, 53.0234, -81.0009, 0.69 ) }
    dend_51 { pt3dadd( -26.229, 54.2834, -81.3488, 0.46 ) }
    dend_51 { pt3dadd( -26.883, 55.1447, -81.5656, 0.46 ) }
    dend_51 { pt3dadd( -27.3312, 55.9262, -81.7519, 0.69 ) }
    dend_51 { pt3dadd( -28.0415, 58.081, -82.365, 0.46 ) }
    dend_51 { pt3dadd( -28.1915, 59.4179, -82.9276, 0.46 ) }
    dend_51 { pt3dadd( -28.1813, 61.0058, -83.884, 0.46 ) }
    dend_51 { pt3dadd( -28.0697, 63.1579, -85.5502, 0.46 ) }
    dend_51 { pt3dadd( -27.9294, 64.7975, -87.0262, 0.46 ) }
    dend_51 { pt3dadd( -27.6803, 66.8053, -89.1863, 0.46 ) }
    dend_51 { pt3dadd( -27.4241, 68.6731, -91.4892, 0.46 ) }
    dend_51 { pt3dadd( -27.2743, 70.1174, -93.3177, 0.69 ) }
    dend_51 { pt3dadd( -27.2438, 71.0838, -94.5837, 0.69 ) }
    dend_51 { pt3dadd( -27.2944, 72.2118, -95.9667, 0.46 ) }
    dend_51 { pt3dadd( -27.5422, 74.03, -98.0811, 0.46 ) }
    dend_51 { pt3dadd( -27.7285, 74.8894, -98.9403, 0.46 ) }
    dend_51 { pt3dadd( -28.3479, 77.3562, -101.126, 0.46 ) }
    dend_51 { pt3dadd( -28.8178, 78.884, -102.495, 0.46 ) }
    dend_51 { pt3dadd( -29.3957, 80.4275, -103.896, 0.69 ) }
    dend_51 { pt3dadd( -30.139, 82.1028, -105.672, 0.69 ) }
    dend_51 { pt3dadd( -30.779, 83.4353, -107.174, 0.46 ) }
    dend_51 { pt3dadd( -31.3844, 84.7384, -108.666, 0.46 ) }
    dend_51 { pt3dadd( -31.9585, 85.9931, -110.135, 0.46 ) }
    dend_51 { pt3dadd( -32.4208, 86.9541, -111.156, 0.23 ) }
    dend_51 { pt3dadd( -33.8484, 89.7978, -114.06, 0.23 ) }
    dend_51 { pt3dadd( -34.2461, 90.6877, -114.85, 0.23 ) }
    dend_51 { pt3dadd( -34.939, 92.3347, -116.226, 0.23 ) }
    dend_51 { pt3dadd( -35.2364, 93.0398, -116.831, 0.23 ) }
    dend_51 { pt3dadd( -35.7347, 94.2493, -117.929, 0.69 ) }
    dend_51 { pt3dadd( -36.2532, 95.4351, -119.098, 0.23 ) }
    dend_51 { pt3dadd( -36.9093, 96.6955, -120.539, 0.23 ) }
    dend_51 { pt3dadd( -37.7635, 98.1566, -122.622, 0.23 ) }
    dend_51 { pt3dadd( -38.3027, 98.9915, -124.163, 0.23 ) }
    dend_51 { pt3dadd( -38.6972, 99.5984, -125.379, 0.23 ) }
    dend_51 { pt3dadd( -39.1225, 100.298, -126.839, 0.46 ) }
    dend_51 { pt3dadd( -39.9772, 101.647, -129.71, 0.23 ) }
    dend_51 { pt3dadd( -40.7026, 102.762, -132.142, 0.23 ) }
    dend_51 { pt3dadd( -41.855, 104.573, -136.087, 0.23 ) }
    dend_51 { pt3dadd( -42.0457, 104.873, -136.748, 0.46 ) }
    dend_51 { pt3dadd( -42.8616, 106.149, -139.638, 0.23 ) }
    dend_51 { pt3dadd( -43.6379, 107.405, -142.545, 0.23 ) }
    dend_51 { pt3dadd( -44.3088, 108.641, -145.07, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 49/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -11.03, 4.32162, -30.3305, 0.46 ) }
    dend_48 { pt3dadd( -11.2144, 4.38605, -30.9647, 0.46 ) }
    dend_48 { pt3dadd( -11.2206, 4.29808, -32.6785, 0.46 ) }
    dend_48 { pt3dadd( -11.1102, 4.16508, -33.4042, 0.46 ) }
    dend_48 { pt3dadd( -10.9878, 4.00126, -33.9821, 0.46 ) }
    dend_48 { pt3dadd( -10.6871, 3.51945, -35.2246, 0.46 ) }
    dend_48 { pt3dadd( -10.3143, 2.78883, -36.897, 0.46 ) }
    dend_48 { pt3dadd( -10.0475, 2.18407, -38.1937, 0.46 ) }
    dend_48 { pt3dadd( -9.74919, 1.24251, -39.9629, 0.46 ) }
    dend_48 { pt3dadd( -9.66981, 0.804015, -40.7338, 1.15 ) }
    dend_48 { pt3dadd( -9.5887, -0.112747, -42.1112, 0.69 ) }
    dend_48 { pt3dadd( -9.55129, -1.22958, -43.5719, 0.69 ) }
    dend_48 { pt3dadd( -9.54786, -2.32576, -44.8477, 0.92 ) }
    dend_48 { pt3dadd( -9.59392, -3.45359, -46.115, 0.69 ) }
    dend_48 { pt3dadd( -9.63354, -4.5078, -47.279, 0.69 ) }
    dend_48 { pt3dadd( -9.58848, -6.24802, -49.1828, 0.46 ) }
    dend_48 { pt3dadd( -9.4831, -7.23232, -50.2756, 0.46 ) }
    dend_48 { pt3dadd( -9.42455, -7.64428, -50.7284, 0.69 ) }
    dend_48 { pt3dadd( -9.19652, -9.22426, -52.5042, 0.46 ) }
    dend_48 { pt3dadd( -9.01626, -10.6477, -54.1303, 0.69 ) }
    dend_48 { pt3dadd( -8.87724, -11.9829, -55.685, 0.92 ) }
    dend_48 { pt3dadd( -8.64872, -13.7247, -57.7483, 0.69 ) }
    dend_48 { pt3dadd( -8.42028, -15.1081, -59.4091, 0.69 ) }
    dend_48 { pt3dadd( -8.21779, -16.1343, -60.6588, 0.69 ) }
    dend_48 { pt3dadd( -7.98604, -17.3269, -62.1445, 0.69 ) }
    dend_48 { pt3dadd( -7.78711, -18.5645, -63.6995, 0.69 ) }
    dend_48 { pt3dadd( -7.55888, -20.3856, -66.0623, 0.92 ) }
    dend_48 { pt3dadd( -7.42018, -21.7457, -67.8201, 0.69 ) }
    dend_48 { pt3dadd( -7.32553, -22.8376, -69.3457, 0.69 ) }
    dend_48 { pt3dadd( -7.26172, -24.0584, -71.175, 0.69 ) }
    dend_48 { pt3dadd( -7.26767, -24.9419, -72.6073, 0.69 ) }
    dend_48 { pt3dadd( -7.31182, -25.9081, -74.2237, 1.15 ) }
    dend_48 { pt3dadd( -7.39918, -26.7026, -75.5898, 1.61 ) }
    dend_48 { pt3dadd( -7.59349, -28.8054, -79.086, 0.69 ) }
    dend_48 { pt3dadd( -7.64295, -29.6433, -80.4719, 0.69 ) }
    dend_48 { pt3dadd( -7.63406, -30.893, -82.5475, 0.69 ) }
    dend_48 { pt3dadd( -7.60138, -31.4507, -83.5511, 0.92 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 86/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 10.894, 35.3945, -24.2287, 0.92 ) }
    dend_44 { pt3dadd( 12.4628, 35.712, -23.3827, 0.92 ) }
    dend_44 { pt3dadd( 13.9846, 36.1708, -22.6276, 0.69 ) }
    dend_44 { pt3dadd( 16.1249, 37.025, -21.7553, 0.46 ) }
    dend_44 { pt3dadd( 17.3043, 37.6163, -21.3505, 0.46 ) }
    dend_44 { pt3dadd( 18.0971, 38.1042, -21.1092, 0.46 ) }
    dend_44 { pt3dadd( 18.5889, 38.4375, -20.964, 0.92 ) }
    dend_44 { pt3dadd( 20.0457, 39.549, -20.6302, 0.92 ) }
    dend_44 { pt3dadd( 21.853, 41.0491, -20.408, 0.46 ) }
    dend_44 { pt3dadd( 23.1507, 42.1469, -20.3622, 0.69 ) }
    dend_44 { pt3dadd( 25.2261, 43.7527, -20.4383, 0.46 ) }
    dend_44 { pt3dadd( 27.6356, 45.3251, -20.7315, 0.92 ) }
    dend_44 { pt3dadd( 28.888, 45.911, -21.055, 0.23 ) }
    dend_44 { pt3dadd( 30.5932, 46.3087, -21.7271, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_44 { pt3dadd( 32.0951, 46.402, -22.5294, 0.46 ) }
    dend_44 { pt3dadd( 34.3012, 46.2064, -23.9547, 0.69 ) }
    dend_44 { pt3dadd( 36.0646, 45.8782, -25.255, 0.69 ) }
    dend_44 { pt3dadd( 38.8337, 45.1374, -27.3904, 0.69 ) }
    dend_44 { pt3dadd( 40.7225, 44.5287, -28.7588, 0.69 ) }
    dend_44 { pt3dadd( 42.3625, 43.9243, -29.84, 0.69 ) }
    dend_44 { pt3dadd( 43.6935, 43.3929, -30.6212, 0.69 ) }
    dend_44 { pt3dadd( 44.6291, 43.0094, -31.0981, 0.69 ) }
    dend_44 { pt3dadd( 46.6697, 42.1633, -31.9272, 0.92 ) }
    dend_44 { pt3dadd( 48.2831, 41.4479, -32.4238, 0.46 ) }
    dend_44 { pt3dadd( 50.3411, 40.5356, -32.929, 0.46 ) }
    dend_44 { pt3dadd( 51.6156, 39.9246, -33.173, 0.23 ) }
    dend_44 { pt3dadd( 52.9048, 39.3191, -33.376, 0.46 ) }
    dend_44 { pt3dadd( 54.3662, 38.6508, -33.6264, 0.46 ) }
    dend_44 { pt3dadd( 55.1913, 38.3004, -33.7832, 0.46 ) }
    dend_44 { pt3dadd( 56.676, 37.7001, -34.117, 0.69 ) }
    dend_44 { pt3dadd( 58.0342, 37.1613, -34.4423, 0.46 ) }
    dend_44 { pt3dadd( 59.0927, 36.764, -34.758, 0.46 ) }
    dend_44 { pt3dadd( 61.2006, 35.9882, -35.4583, 0.23 ) }
    dend_44 { pt3dadd( 62.8084, 35.389, -36.0728, 0.46 ) }
    dend_44 { pt3dadd( 64.16, 34.911, -36.6437, 0.23 ) }
    dend_44 { pt3dadd( 65.5925, 34.4692, -37.2887, 0.46 ) }
    dend_44 { pt3dadd( 67.5362, 34.0092, -38.1506, 0.23 ) }
    dend_44 { pt3dadd( 68.2223, 33.9, -38.4308, 0.23 ) }
    dend_44 { pt3dadd( 69.422, 33.8721, -38.8147, 0.46 ) }
    dend_44 { pt3dadd( 72.0701, 34.1681, -39.4448, 0.23 ) }
    dend_44 { pt3dadd( 73.1104, 34.3894, -39.6535, 0.69 ) }
    dend_44 { pt3dadd( 74.6515, 34.8267, -39.9414, 0.23 ) }
    dend_44 { pt3dadd( 75.7694, 35.1739, -40.1323, 0.69 ) }
    dend_44 { pt3dadd( 78.1459, 35.9757, -40.4282, 0.23 ) }
    dend_44 { pt3dadd( 79.7496, 36.5663, -40.5214, 0.69 ) }
    dend_44 { pt3dadd( 82.491, 37.5643, -40.4927, 0.23 ) }
    dend_44 { pt3dadd( 84.3233, 38.2404, -40.2913, 0.23 ) }
    dend_44 { pt3dadd( 85.4502, 38.6802, -39.992, 0.46 ) }
    dend_44 { pt3dadd( 87.9901, 39.7976, -38.7451, 0.23 ) }
    dend_44 { pt3dadd( 89.0899, 40.3699, -37.8534, 0.23 ) }
    dend_44 { pt3dadd( 89.5276, 40.6815, -37.3263, 0.46 ) }
    dend_44 { pt3dadd( 90.6811, 41.9478, -35.2359, 0.23 ) }
    dend_44 { pt3dadd( 91.294, 43.0414, -33.6313, 0.23 ) }
    dend_44 { pt3dadd( 91.6007, 44.1477, -32.2798, 0.23 ) }
    dend_44 { pt3dadd( 91.6623, 44.5706, -31.829, 0.23 ) }
    dend_44 { pt3dadd( 91.7438, 45.6166, -30.8162, 0.46 ) }
    dend_44 { pt3dadd( 91.7552, 47.2886, -29.3497, 0.23 ) }
    dend_44 { pt3dadd( 91.6137, 49.1465, -28.0126, 0.23 ) }
    dend_44 { pt3dadd( 91.4099, 50.9776, -26.8993, 0.23 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 45/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 10.894, 35.3945, -24.2287, 0.46 ) }
    dend_43 { pt3dadd( 10.5135, 36.1324, -25.4663, 0.46 ) }
    dend_43 { pt3dadd( 9.39543, 37.7894, -27.9795, 0.46 ) }
    dend_43 { pt3dadd( 8.63973, 38.5695, -29.2634, 0.46 ) }
    dend_43 { pt3dadd( 8.10438, 39.0325, -30.1007, 0.46 ) }
    dend_43 { pt3dadd( 7.5336, 39.5106, -30.9799, 0.46 ) }
    dend_43 { pt3dadd( 6.7629, 40.1572, -32.166, 0.46 ) }
    dend_43 { pt3dadd( 5.91539, 40.8091, -33.3681, 0.46 ) }
    dend_43 { pt3dadd( 4.80441, 41.6615, -34.9689, 0.69 ) }
    dend_43 { pt3dadd( 3.92547, 42.3416, -36.4146, 0.46 ) }
    dend_43 { pt3dadd( 3.15347, 42.9587, -37.8964, 0.46 ) }
    dend_43 { pt3dadd( 2.50637, 43.4789, -39.3417, 0.69 ) }
    dend_43 { pt3dadd( 1.68468, 44.0899, -41.4466, 0.69 ) }
    dend_43 { pt3dadd( 0.836768, 44.7083, -43.8526, 0.69 ) }
    dend_43 { pt3dadd( 0.375689, 45.0294, -45.2434, 0.69 ) }
    dend_43 { pt3dadd( 0.0552791, 45.2037, -46.2511, 0.69 ) }
    dend_43 { pt3dadd( -0.546351, 45.4615, -48.333, 0.69 ) }
    dend_43 { pt3dadd( -1.03532, 45.6824, -50.2359, 0.69 ) }
    dend_43 { pt3dadd( -1.24483, 45.8135, -51.1037, 0.69 ) }
    dend_43 { pt3dadd( -1.47152, 45.9866, -51.9813, 0.69 ) }
    dend_43 { pt3dadd( -1.95909, 46.4889, -53.8386, 0.69 ) }
    dend_43 { pt3dadd( -2.27952, 46.8883, -55.0091, 0.69 ) }
    dend_43 { pt3dadd( -2.6143, 47.3998, -56.1691, 0.46 ) }
    dend_43 { pt3dadd( -3.30068, 48.549, -58.2856, 0.46 ) }
    dend_43 { pt3dadd( -3.83001, 49.4565, -59.7558, 0.46 ) }
    dend_43 { pt3dadd( -4.44536, 50.5362, -61.3242, 0.46 ) }
    dend_43 { pt3dadd( -4.84712, 51.2172, -62.2822, 0.46 ) }
    dend_43 { pt3dadd( -5.25148, 51.9132, -63.2335, 0.46 ) }
    dend_43 { pt3dadd( -5.6468, 52.6498, -64.2852, 0.23 ) }
    dend_43 { pt3dadd( -6.20104, 53.8261, -66.0796, 0.46 ) }
    dend_43 { pt3dadd( -6.91923, 55.5394, -68.8866, 0.23 ) }
    dend_43 { pt3dadd( -7.22188, 56.4009, -70.356, 0.23 ) }
    dend_43 { pt3dadd( -7.42512, 57.1773, -71.8622, 0.92 ) }
    dend_43 { pt3dadd( -7.71855, 58.8919, -75.5532, 0.23 ) }
    dend_43 { pt3dadd( -7.79992, 60.0807, -78.3231, 0.46 ) }
    dend_43 { pt3dadd( -7.78115, 60.9887, -80.5458, 0.46 ) }
    dend_43 { pt3dadd( -7.71741, 61.4748, -81.7941, 0.69 ) }
    dend_43 { pt3dadd( -7.44032, 62.8978, -85.5818, 0.69 ) }
    dend_43 { pt3dadd( -7.28789, 63.644, -87.6298, 0.69 ) }
    dend_43 { pt3dadd( -7.18729, 64.1247, -88.9616, 0.46 ) }
    dend_43 { pt3dadd( -7.09582, 64.6336, -90.4725, 0.69 ) }
    dend_43 { pt3dadd( -6.97186, 65.3992, -93.0026, 0.69 ) }
    dend_43 { pt3dadd( -6.89654, 66.0671, -95.3066, 0.69 ) }
    dend_43 { pt3dadd( -6.8893, 66.5161, -96.7398, 0.46 ) }
    dend_43 { pt3dadd( -6.88797, 67.3377, -99.501, 0.46 ) }
    dend_43 { pt3dadd( -6.87141, 68.1747, -102.391, 0.46 ) }
    dend_43 { pt3dadd( -6.82341, 69.0943, -105.648, 0.46 ) }
    dend_43 { pt3dadd( -6.78332, 69.6253, -107.574, 0.46 ) }
    dend_43 { pt3dadd( -6.67997, 70.1369, -109.45, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 94/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -21.919, -27.0356, -29.7075, 0.68 ) }
    dend_37 { pt3dadd( -23.1943, -26.9152, -30.8423, 0.68 ) }
    dend_37 { pt3dadd( -24.6938, -26.7204, -32.1078, 0.68 ) }
    dend_37 { pt3dadd( -26.2762, -26.4517, -33.3896, 0.45 ) }
    dend_37 { pt3dadd( -27.7993, -26.1514, -34.5489, 0.91 ) }
    dend_37 { pt3dadd( -29.0849, -25.8515, -35.4343, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_37 { pt3dadd( -30.7144, -25.4019, -36.5082, 0.68 ) }
    dend_37 { pt3dadd( -31.5183, -25.1412, -36.9669, 0.23 ) }
    dend_37 { pt3dadd( -32.1443, -24.895, -37.2847, 0.23 ) }
    dend_37 { pt3dadd( -33.3423, -24.3265, -37.8638, 0.91 ) }
    dend_37 { pt3dadd( -34.8092, -23.5698, -38.6008, 0.45 ) }
    dend_37 { pt3dadd( -36.1503, -22.8589, -39.3513, 0.45 ) }
    dend_37 { pt3dadd( -36.6815, -22.5852, -39.6856, 0.68 ) }
    dend_37 { pt3dadd( -38.2535, -21.773, -40.7989, 0.45 ) }
    dend_37 { pt3dadd( -39.0581, -21.3942, -41.429, 0.45 ) }
    dend_37 { pt3dadd( -39.9305, -21.0271, -42.1431, 0.45 ) }
    dend_37 { pt3dadd( -41.6695, -20.4564, -43.5883, 0.68 ) }
    dend_37 { pt3dadd( -42.8717, -20.1263, -44.5055, 0.45 ) }
    dend_37 { pt3dadd( -43.9961, -19.8658, -45.3299, 0.45 ) }
    dend_37 { pt3dadd( -45.3108, -19.6552, -46.216, 0.68 ) }
    dend_37 { pt3dadd( -46.4532, -19.5216, -46.9603, 0.45 ) }
    dend_37 { pt3dadd( -48.0887, -19.3354, -48.0645, 0.45 ) }
    dend_37 { pt3dadd( -49.2572, -19.2106, -48.9063, 0.45 ) }
    dend_37 { pt3dadd( -50.8683, -19.0564, -50.0724, 0.45 ) }
    dend_37 { pt3dadd( -52.2518, -18.9441, -51.1128, 0.91 ) }
    dend_37 { pt3dadd( -54.0419, -18.8386, -52.6011, 0.45 ) }
    dend_37 { pt3dadd( -55.6035, -18.7967, -54.0453, 0.45 ) }
    dend_37 { pt3dadd( -56.6743, -18.786, -55.0472, 0.45 ) }
    dend_37 { pt3dadd( -57.9251, -18.7775, -56.1998, 0.68 ) }
    dend_37 { pt3dadd( -59.1517, -18.7233, -57.2832, 0.68 ) }
    dend_37 { pt3dadd( -60.4834, -18.639, -58.3444, 0.68 ) }
    dend_37 { pt3dadd( -61.7648, -18.5472, -59.2048, 0.68 ) }
    dend_37 { pt3dadd( -63.5707, -18.4033, -60.3354, 0.68 ) }
    dend_37 { pt3dadd( -64.9878, -18.2631, -61.2514, 0.45 ) }
    dend_37 { pt3dadd( -66.3422, -18.1343, -62.1604, 0.68 ) }
    dend_37 { pt3dadd( -68.6962, -17.9711, -63.7021, 0.23 ) }
    dend_37 { pt3dadd( -69.8776, -17.9085, -64.4609, 0.68 ) }
    dend_37 { pt3dadd( -72.1979, -17.8524, -65.9904, 0.45 ) }
    dend_37 { pt3dadd( -73.6867, -17.8876, -66.9995, 0.45 ) }
    dend_37 { pt3dadd( -74.9868, -17.9681, -67.8968, 0.45 ) }
    dend_37 { pt3dadd( -76.4032, -18.0863, -68.8912, 0.45 ) }
    dend_37 { pt3dadd( -77.6689, -18.1997, -69.7491, 0.45 ) }
    dend_37 { pt3dadd( -78.3683, -18.2656, -70.181, 0.45 ) }
    dend_37 { pt3dadd( -79.8062, -18.3568, -70.9151, 0.68 ) }
    dend_37 { pt3dadd( -81.3572, -18.3759, -71.5556, 0.45 ) }
    dend_37 { pt3dadd( -83.1856, -18.2842, -72.1657, 0.45 ) }
    dend_37 { pt3dadd( -84.9823, -18.1303, -72.7145, 0.45 ) }
    dend_37 { pt3dadd( -86.6481, -17.916, -73.2468, 0.45 ) }
    dend_37 { pt3dadd( -87.4837, -17.7796, -73.5383, 0.68 ) }
    dend_37 { pt3dadd( -88.9381, -17.5069, -74.1653, 0.68 ) }
    dend_37 { pt3dadd( -90.8203, -17.096, -75.0687, 0.23 ) }
    dend_37 { pt3dadd( -91.9781, -16.8033, -75.6795, 0.23 ) }
    dend_37 { pt3dadd( -93.6375, -16.3282, -76.6277, 0.68 ) }
    dend_37 { pt3dadd( -95.7004, -15.7069, -77.7239, 0.45 ) }
    dend_37 { pt3dadd( -97.8307, -15.0947, -78.8346, 0.45 ) }
    dend_37 { pt3dadd( -99.3278, -14.6551, -79.6115, 0.45 ) }
    dend_37 { pt3dadd( -100.62, -14.2859, -80.2493, 0.45 ) }
    dend_37 { pt3dadd( -102.89, -13.6129, -81.3382, 0.45 ) }
    dend_37 { pt3dadd( -105.206, -12.9144, -82.4121, 0.45 ) }
    dend_37 { pt3dadd( -107.053, -12.3448, -83.2994, 0.45 ) }
    dend_37 { pt3dadd( -108.586, -11.9072, -84.1468, 0.45 ) }
    dend_37 { pt3dadd( -110.753, -11.4018, -85.6654, 0.23 ) }
    dend_37 { pt3dadd( -112.819, -11.0342, -87.5146, 0.23 ) }
    dend_37 { pt3dadd( -113.586, -10.9438, -88.3429, 0.68 ) }
    dend_37 { pt3dadd( -114.822, -10.7931, -89.8377, 0.23 ) }
    dend_37 { pt3dadd( -116.656, -10.5277, -92.1676, 0.23 ) }
    dend_37 { pt3dadd( -118.55, -10.1972, -94.5357, 0.23 ) }
    dend_37 { pt3dadd( -120.56, -9.82966, -97.1238, 0.23 ) }
    dend_37 { pt3dadd( -122.157, -9.54361, -99.1771, 0.23 ) }
    dend_37 { pt3dadd( -123.478, -9.25765, -100.897, 0.23 ) }
    dend_37 { pt3dadd( -125.155, -8.79259, -102.97, 0.23 ) }
    dend_37 { pt3dadd( -126.735, -8.24436, -104.651, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 66/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -21.919, -27.0356, -29.7075, 0.68 ) }
    dend_36 { pt3dadd( -22.4053, -28.0993, -30.5038, 0.68 ) }
    dend_36 { pt3dadd( -23.1855, -29.7401, -31.6108, 0.68 ) }
    dend_36 { pt3dadd( -23.9322, -31.1185, -32.5304, 0.91 ) }
    dend_36 { pt3dadd( -24.7192, -32.4861, -33.4439, 0.45 ) }
    dend_36 { pt3dadd( -25.181, -33.2617, -33.9527, 0.68 ) }
    dend_36 { pt3dadd( -26.001, -34.6052, -34.8127, 0.68 ) }
    dend_36 { pt3dadd( -27.0609, -36.1832, -35.7585, 0.91 ) }
    dend_36 { pt3dadd( -27.9602, -37.4746, -36.4157, 0.45 ) }
    dend_36 { pt3dadd( -28.6332, -38.3689, -36.817, 0.68 ) }
    dend_36 { pt3dadd( -29.4619, -39.4387, -37.1893, 0.45 ) }
    dend_36 { pt3dadd( -29.9069, -40.0005, -37.3259, 0.91 ) }
    dend_36 { pt3dadd( -30.7278, -40.9746, -37.4403, 1.36 ) }
    dend_36 { pt3dadd( -31.7222, -42.1089, -37.4671, 0.45 ) }
    dend_36 { pt3dadd( -32.541, -43.0552, -37.4243, 0.45 ) }
    dend_36 { pt3dadd( -33.7879, -44.479, -37.3092, 0.45 ) }
    dend_36 { pt3dadd( -34.4967, -45.3228, -37.2349, 0.91 ) }
    dend_36 { pt3dadd( -35.6334, -46.7294, -37.0956, 0.45 ) }
    dend_36 { pt3dadd( -36.7412, -48.1363, -36.9139, 0.45 ) }
    dend_36 { pt3dadd( -37.4852, -49.1126, -36.7754, 0.45 ) }
    dend_36 { pt3dadd( -38.0448, -49.9036, -36.6642, 0.45 ) }
    dend_36 { pt3dadd( -39.0475, -51.3598, -36.4768, 0.68 ) }
    dend_36 { pt3dadd( -40.2121, -53.0854, -36.2209, 0.45 ) }
    dend_36 { pt3dadd( -41.1926, -54.5924, -35.9846, 0.45 ) }
    dend_36 { pt3dadd( -41.9789, -55.8047, -35.7728, 0.45 ) }
    dend_36 { pt3dadd( -42.4745, -56.5298, -35.6258, 0.91 ) }
    dend_36 { pt3dadd( -43.5791, -58.1115, -35.2672, 0.45 ) }
    dend_36 { pt3dadd( -44.524, -59.4417, -34.9299, 0.68 ) }
    dend_36 { pt3dadd( -45.8381, -61.2815, -34.4459, 0.45 ) }
    dend_36 { pt3dadd( -46.8015, -62.5645, -34.0903, 0.45 ) }
    dend_36 { pt3dadd( -47.8071, -63.8334, -33.6721, 0.45 ) }
    dend_36 { pt3dadd( -48.3699, -64.5745, -33.3917, 0.91 ) }
    dend_36 { pt3dadd( -49.3308, -65.9847, -32.8088, 0.45 ) }
    dend_36 { pt3dadd( -50.0653, -67.1422, -32.329, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_36 { pt3dadd( -50.659, -68.2003, -31.9367, 0.68 ) }
    dend_36 { pt3dadd( -51.4805, -69.9131, -31.4331, 0.45 ) }
    dend_36 { pt3dadd( -52.4107, -72.27, -30.8615, 0.68 ) }
    dend_36 { pt3dadd( -52.9, -73.6592, -30.5817, 0.45 ) }
    dend_36 { pt3dadd( -53.3993, -75.2671, -30.3232, 0.45 ) }
    dend_36 { pt3dadd( -53.9185, -77.1334, -30.129, 0.45 ) }
    dend_36 { pt3dadd( -54.358, -78.8549, -30.0645, 0.45 ) }
    dend_36 { pt3dadd( -54.7848, -80.5414, -30.1182, 0.45 ) }
    dend_36 { pt3dadd( -55.3386, -82.5229, -30.2761, 0.91 ) }
    dend_36 { pt3dadd( -55.8396, -84.0279, -30.4167, 0.23 ) }
    dend_36 { pt3dadd( -56.6977, -86.3746, -30.6846, 0.45 ) }
    dend_36 { pt3dadd( -57.199, -87.6504, -30.8627, 0.68 ) }
    dend_36 { pt3dadd( -57.5965, -88.732, -31.0808, 0.68 ) }
    dend_36 { pt3dadd( -58.1009, -90.2917, -31.5119, 0.45 ) }
    dend_36 { pt3dadd( -58.5815, -92.0916, -32.1285, 0.45 ) }
    dend_36 { pt3dadd( -58.8502, -93.2847, -32.5803, 0.45 ) }
    dend_36 { pt3dadd( -59.1178, -94.5303, -33.1239, 0.68 ) }
    dend_36 { pt3dadd( -59.4721, -96.1057, -33.9106, 0.45 ) }
    dend_36 { pt3dadd( -59.7905, -97.4944, -34.7397, 0.45 ) }
    dend_36 { pt3dadd( -60.0632, -98.665, -35.5381, 0.45 ) }
    dend_36 { pt3dadd( -60.3474, -99.8164, -36.3696, 0.68 ) }
    dend_36 { pt3dadd( -60.8332, -101.309, -37.4756, 0.45 ) }
    dend_36 { pt3dadd( -61.2639, -102.348, -38.288, 0.68 ) }
    dend_36 { pt3dadd( -61.8242, -103.527, -39.2286, 0.45 ) }
    dend_36 { pt3dadd( -62.1593, -104.187, -39.7087, 0.68 ) }
    dend_36 { pt3dadd( -62.7917, -105.344, -40.4767, 0.68 ) }
    dend_36 { pt3dadd( -63.5235, -106.585, -41.2474, 0.23 ) }
    dend_36 { pt3dadd( -64.2938, -107.877, -41.9408, 0.23 ) }
    dend_36 { pt3dadd( -64.7172, -108.584, -42.2784, 0.45 ) }
    dend_36 { pt3dadd( -65.8163, -110.465, -43.073, 0.23 ) }
    dend_36 { pt3dadd( -66.2533, -111.203, -43.3789, 0.23 ) }
    dend_36 { pt3dadd( -66.9454, -112.299, -43.8147, 0.23 ) }
    dend_36 { pt3dadd( -67.1248, -112.584, -43.9169, 0.23 ) }
    dend_36 { pt3dadd( -67.5756, -113.339, -44.1554, 0.45 ) }
    dend_36 { pt3dadd( -68.9346, -115.874, -44.759, 0.23 ) }
    dend_36 { pt3dadd( -69.1811, -116.361, -44.8163, 0.68 ) }
    dend_36 { pt3dadd( -70.6499, -119.384, -44.7846, 0.23 ) }
    dend_36 { pt3dadd( -71.1637, -120.491, -44.6387, 0.45 ) }
    dend_36 { pt3dadd( -72.24, -122.962, -44.0679, 0.23 ) }
    dend_36 { pt3dadd( -73.0739, -125.042, -43.4179, 0.68 ) }
    dend_36 { pt3dadd( -73.8556, -127.153, -42.6263, 0.45 ) }
    dend_36 { pt3dadd( -74.2931, -128.51, -42.1311, 0.45 ) }
    dend_36 { pt3dadd( -74.9739, -130.906, -41.283, 0.23 ) }
    dend_36 { pt3dadd( -75.5837, -133.136, -40.5945, 0.23 ) }
    dend_36 { pt3dadd( -75.8602, -134.218, -40.3188, 0.45 ) }
    dend_36 { pt3dadd( -76.6823, -137.354, -39.6895, 0.23 ) }
    dend_36 { pt3dadd( -77.4318, -140.085, -39.1681, 0.23 ) }
    dend_36 { pt3dadd( -77.8594, -141.507, -38.9054, 0.23 ) }
    dend_36 { pt3dadd( -78.2217, -142.601, -38.6872, 0.45 ) }
    dend_36 { pt3dadd( -79.135, -145.092, -38.1945, 0.23 ) }
    dend_36 { pt3dadd( -80.1068, -147.582, -37.6887, 0.23 ) }
    dend_36 { pt3dadd( -81.2614, -150.303, -37.0138, 0.23 ) }
    dend_36 { pt3dadd( -82.1846, -152.253, -36.4085, 0.23 ) }
    dend_36 { pt3dadd( -82.5674, -153.008, -36.1271, 0.45 ) }
    dend_36 { pt3dadd( -83.8628, -155.482, -35.2417, 0.23 ) }
    dend_36 { pt3dadd( -84.1447, -156.006, -35.1023, 0.68 ) }
    dend_36 { pt3dadd( -85.2962, -158.293, -34.913, 0.23 ) }
    dend_36 { pt3dadd( -86.0465, -159.837, -35.1266, 0.23 ) }
    dend_36 { pt3dadd( -86.7267, -161.215, -35.4086, 0.23 ) }
    dend_36 { pt3dadd( -87.9268, -163.707, -36.3342, 0.23 ) }
    dend_36 { pt3dadd( -88.8337, -165.788, -37.8596, 0.23 ) }
    dend_36 { pt3dadd( -89.4789, -167.389, -39.4474, 0.23 ) }
    dend_36 { pt3dadd( -89.7685, -168.184, -40.4542, 0.45 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 63/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -24.805, 27.7932, -11.7802, 0.69 ) }
    dend_62 { pt3dadd( -25.1784, 28.1571, -11.2207, 0.69 ) }
    dend_62 { pt3dadd( -26.0174, 29.1296, -10.0938, 0.46 ) }
    dend_62 { pt3dadd( -26.9593, 30.2677, -8.90363, 0.46 ) }
    dend_62 { pt3dadd( -27.6355, 31.0227, -8.13307, 0.46 ) }
    dend_62 { pt3dadd( -28.3078, 31.7003, -7.45165, 0.46 ) }
    dend_62 { pt3dadd( -29.1819, 32.5172, -6.61791, 0.46 ) }
    dend_62 { pt3dadd( -30.3343, 33.5926, -5.57014, 0.69 ) }
    dend_62 { pt3dadd( -31.0997, 34.3056, -4.98119, 0.69 ) }
    dend_62 { pt3dadd( -31.777, 34.8389, -4.5483, 0.92 ) }
    dend_62 { pt3dadd( -32.4747, 35.2684, -4.12984, 0.46 ) }
    dend_62 { pt3dadd( -33.5848, 35.739, -3.509, 0.46 ) }
    dend_62 { pt3dadd( -34.9547, 36.1398, -2.83278, 0.69 ) }
    dend_62 { pt3dadd( -36.238, 36.4168, -2.25097, 0.69 ) }
    dend_62 { pt3dadd( -37.7127, 36.651, -1.59245, 0.46 ) }
    dend_62 { pt3dadd( -39.2023, 36.7891, -0.929354, 0.92 ) }
    dend_62 { pt3dadd( -40.4485, 36.7766, -0.33656, 0.46 ) }
    dend_62 { pt3dadd( -41.6698, 36.6241, 0.327115, 0.46 ) }
    dend_62 { pt3dadd( -42.7454, 36.4051, 1.03875, 0.46 ) }
    dend_62 { pt3dadd( -43.4336, 36.217, 1.6323, 0.46 ) }
    dend_62 { pt3dadd( -44.165, 35.9723, 2.42031, 0.69 ) }
    dend_62 { pt3dadd( -45.2684, 35.5752, 3.76085, 0.92 ) }
    dend_62 { pt3dadd( -46.6126, 35.0492, 5.53187, 0.69 ) }
    dend_62 { pt3dadd( -47.6348, 34.6028, 6.96955, 0.69 ) }
    dend_62 { pt3dadd( -48.9467, 34.0297, 8.79302, 0.69 ) }
    dend_62 { pt3dadd( -49.9221, 33.6717, 10.0634, 0.69 ) }
    dend_62 { pt3dadd( -51.018, 33.3075, 11.4873, 0.46 ) }
    dend_62 { pt3dadd( -51.9307, 33.0085, 12.6048, 0.46 ) }
    dend_62 { pt3dadd( -53.0357, 32.6235, 13.9138, 0.46 ) }
    dend_62 { pt3dadd( -53.8962, 32.317, 14.9129, 0.69 ) }
    dend_62 { pt3dadd( -55.2583, 31.9014, 16.4369, 0.46 ) }
    dend_62 { pt3dadd( -56.9511, 31.4481, 18.2991, 0.46 ) }
    dend_62 { pt3dadd( -57.297, 31.3451, 18.7089, 0.46 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 96/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -24.805, 27.7932, -11.7802, 0.69 ) }
    dend_57 { pt3dadd( -24.6456, 29.2202, -12.1271, 0.69 ) }
    dend_57 { pt3dadd( -24.445, 30.6061, -12.3306, 0.46 ) }
    dend_57 { pt3dadd( -24.2023, 32.0719, -12.4441, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_57 { pt3dadd( -24.1221, 32.6888, -12.4923, 0.92 ) }
    dend_57 { pt3dadd( -23.9857, 33.8274, -12.5781, 0.92 ) }
    dend_57 { pt3dadd( -23.8038, 35.4112, -12.6688, 0.46 ) }
    dend_57 { pt3dadd( -23.7102, 36.176, -12.6675, 0.46 ) }
    dend_57 { pt3dadd( -23.506, 37.6193, -12.6236, 0.69 ) }
    dend_57 { pt3dadd( -23.1726, 39.7878, -12.6407, 0.69 ) }
    dend_57 { pt3dadd( -23.0161, 40.6637, -12.67, 0.69 ) }
    dend_57 { pt3dadd( -22.6291, 42.3816, -12.8569, 0.92 ) }
    dend_57 { pt3dadd( -22.1596, 44.0749, -13.1439, 0.46 ) }
    dend_57 { pt3dadd( -21.7031, 45.3312, -13.4163, 0.69 ) }
    dend_57 { pt3dadd( -21.0442, 46.6502, -13.802, 0.92 ) }
    dend_57 { pt3dadd( -20.2174, 47.9198, -14.3162, 1.15 ) }
    dend_57 { pt3dadd( -18.7803, 49.885, -15.3943, 0.46 ) }
    dend_57 { pt3dadd( -18.0811, 50.7673, -15.9744, 0.46 ) }
    dend_57 { pt3dadd( -17.2171, 51.8817, -16.7841, 0.92 ) }
    dend_57 { pt3dadd( -16.2128, 53.3061, -17.8227, 0.46 ) }
    dend_57 { pt3dadd( -15.3726, 54.6603, -18.7308, 0.46 ) }
    dend_57 { pt3dadd( -14.7506, 55.9688, -19.5454, 0.46 ) }
    dend_57 { pt3dadd( -14.1145, 57.8109, -20.6025, 0.69 ) }
    dend_57 { pt3dadd( -13.6063, 59.544, -21.5776, 0.46 ) }
    dend_57 { pt3dadd( -13.2512, 61.0998, -22.4047, 0.69 ) }
    dend_57 { pt3dadd( -13.0265, 62.3847, -22.9993, 0.69 ) }
    dend_57 { pt3dadd( -12.7455, 64.2171, -23.7595, 0.46 ) }
    dend_57 { pt3dadd( -12.5351, 65.6033, -24.3143, 0.46 ) }
    dend_57 { pt3dadd( -12.3126, 67.3432, -25.0935, 0.92 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 25/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -55.2466, 8.57593, -15.0668, 0.46 ) }
    dend_55 { pt3dadd( -57.0903, 6.74037, -15.5102, 0.46 ) }
    dend_55 { pt3dadd( -58.046, 5.85306, -15.4896, 0.46 ) }
    dend_55 { pt3dadd( -58.9964, 5.00656, -15.3681, 0.69 ) }
    dend_55 { pt3dadd( -60.4914, 3.74255, -15.0649, 0.46 ) }
    dend_55 { pt3dadd( -61.5007, 2.87438, -14.7721, 0.46 ) }
    dend_55 { pt3dadd( -62.7666, 1.78486, -14.3354, 0.69 ) }
    dend_55 { pt3dadd( -64.2466, 0.565154, -13.548, 0.46 ) }
    dend_55 { pt3dadd( -64.6126, 0.252516, -13.3066, 0.46 ) }
    dend_55 { pt3dadd( -65.5149, -0.481292, -12.587, 0.46 ) }
    dend_55 { pt3dadd( -66.7369, -1.39482, -11.4763, 0.46 ) }
    dend_55 { pt3dadd( -67.4907, -1.91445, -10.779, 0.69 ) }
    dend_55 { pt3dadd( -68.5272, -2.54496, -9.74068, 0.46 ) }
    dend_55 { pt3dadd( -69.4708, -3.03311, -8.75618, 0.46 ) }
    dend_55 { pt3dadd( -70.8046, -3.70618, -7.19538, 0.46 ) }
    dend_55 { pt3dadd( -71.1586, -3.89766, -6.71859, 0.46 ) }
    dend_55 { pt3dadd( -71.7341, -4.21403, -5.86209, 0.69 ) }
    dend_55 { pt3dadd( -72.9607, -4.98239, -3.90912, 0.23 ) }
    dend_55 { pt3dadd( -73.6239, -5.46801, -2.85366, 0.23 ) }
    dend_55 { pt3dadd( -74.5626, -6.31166, -1.37547, 0.23 ) }
    dend_55 { pt3dadd( -75.3497, -7.17309, -0.222263, 0.69 ) }
    dend_55 { pt3dadd( -76.1682, -8.162, 0.858762, 0.69 ) }
    dend_55 { pt3dadd( -76.5382, -8.66007, 1.24924, 0.69 ) }
    dend_55 { pt3dadd( -77.1155, -9.49009, 1.70836, 0.23 ) }
    dend_55 { pt3dadd( -77.8, -10.5153, 2.11202, 0.23 ) }
    dend_55 { pt3dadd( -78.5984, -11.6295, 2.4356, 0.23 ) }
    dend_55 { pt3dadd( -79.4491, -12.7996, 2.67789, 0.46 ) }
    dend_55 { pt3dadd( -81.0286, -15.0973, 3.0066, 0.23 ) }
    dend_55 { pt3dadd( -81.6232, -15.973, 3.13311, 0.69 ) }
    dend_55 { pt3dadd( -82.1231, -16.7188, 3.23386, 0.69 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 55/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -55.2466, 8.57593, -15.0668, 0.23 ) }
    dend_54 { pt3dadd( -56.9133, 8.91379, -13.8863, 0.23 ) }
    dend_54 { pt3dadd( -58.5265, 9.15859, -12.6503, 0.46 ) }
    dend_54 { pt3dadd( -60.2386, 9.41057, -11.2177, 0.23 ) }
    dend_54 { pt3dadd( -60.9227, 9.54545, -10.6149, 0.23 ) }
    dend_54 { pt3dadd( -61.623, 9.71305, -9.97312, 0.46 ) }
    dend_54 { pt3dadd( -62.5426, 9.94602, -9.11519, 0.46 ) }
    dend_54 { pt3dadd( -64.4578, 10.5441, -7.25853, 0.23 ) }
    dend_54 { pt3dadd( -66.1839, 11.1977, -5.52103, 0.23 ) }
    dend_54 { pt3dadd( -67.242, 11.6526, -4.44993, 0.46 ) }
    dend_54 { pt3dadd( -68.4513, 12.2033, -3.22733, 0.23 ) }
    dend_54 { pt3dadd( -69.4248, 12.7045, -2.20497, 0.23 ) }
    dend_54 { pt3dadd( -70.5002, 13.3654, -0.960269, 0.23 ) }
    dend_54 { pt3dadd( -71.0116, 13.7035, -0.371144, 0.92 ) }
    dend_54 { pt3dadd( -71.7886, 14.1928, 0.620819, 0.23 ) }
    dend_54 { pt3dadd( -72.4166, 14.5575, 1.55851, 0.46 ) }
    dend_54 { pt3dadd( -73.5925, 15.2053, 3.68402, 0.23 ) }
    dend_54 { pt3dadd( -74.6819, 15.7706, 6.14291, 0.23 ) }
    dend_54 { pt3dadd( -75.161, 15.997, 7.68646, 0.23 ) }
    dend_54 { pt3dadd( -75.7039, 16.3104, 10.3398, 0.23 ) }
    dend_54 { pt3dadd( -75.799, 16.4637, 12.02, 0.23 ) }
    dend_54 { pt3dadd( -75.642, 16.539, 13.2718, 0.23 ) }
    dend_54 { pt3dadd( -75.3785, 16.5416, 14.2207, 0.23 ) }
    dend_54 { pt3dadd( -74.4755, 16.453, 16.093, 0.23 ) }
    dend_54 { pt3dadd( -73.1742, 16.3572, 17.9312, 0.46 ) }
    dend_54 { pt3dadd( -71.1051, 16.406, 19.8295, 0.23 ) }
    dend_54 { pt3dadd( -69.9802, 16.5428, 20.6724, 0.23 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 82/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -7.60138, -31.4507, -83.5511, 0.46 ) }
    dend_50 { pt3dadd( -7.07569, -31.4127, -86.9306, 0.46 ) }
    dend_50 { pt3dadd( -6.60941, -31.4411, -90.0664, 0.46 ) }
    dend_50 { pt3dadd( -6.28811, -31.5158, -92.5388, 0.69 ) }
    dend_50 { pt3dadd( -5.80193, -31.7588, -97.0479, 0.46 ) }
    dend_50 { pt3dadd( -5.44468, -32.0183, -100.667, 0.46 ) }
    dend_50 { pt3dadd( -5.23361, -32.2433, -103.23, 0.46 ) }
    dend_50 { pt3dadd( -5.05985, -32.5742, -106.497, 0.69 ) }
    dend_50 { pt3dadd( -4.98139, -32.9523, -110.001, 0.69 ) }
    dend_50 { pt3dadd( -5.03324, -33.3846, -113.889, 0.69 ) }
    dend_50 { pt3dadd( -5.28548, -33.8749, -118.465, 0.69 ) }
    dend_50 { pt3dadd( -5.79039, -34.3792, -123.281, 0.69 ) }
    dend_50 { pt3dadd( -6.27929, -34.7065, -126.423, 0.69 ) }
    dend_50 { pt3dadd( -6.99631, -35.0991, -129.823, 0.69 ) }
    dend_50 { pt3dadd( -8.06189, -35.5991, -134.291, 0.69 ) }
    dend_50 { pt3dadd( -8.78546, -35.8837, -136.9, 0.69 ) }
    dend_50 { pt3dadd( -9.80214, -36.2348, -139.955, 0.46 ) }
    dend_50 { pt3dadd( -11.3053, -36.7503, -143.957, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_50 { pt3dadd( -13.2228, -37.5301, -148.646, 0.23 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 1/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -7.60138, -31.4507, -83.5511, 0.23 ) }
    dend_49 { pt3dadd( -7.55418, -33.0116, -84.9925, 0.23 ) }
    dend_49 { pt3dadd( -7.46212, -34.1735, -86.271, 0.23 ) }
    dend_49 { pt3dadd( -7.32792, -35.4683, -87.7674, 0.69 ) }
    dend_49 { pt3dadd( -7.10255, -37.0982, -89.7744, 0.92 ) }
    dend_49 { pt3dadd( -6.8524, -38.9546, -92.1158, 0.46 ) }
    dend_49 { pt3dadd( -6.68367, -40.3943, -93.9124, 0.46 ) }
    dend_49 { pt3dadd( -6.40469, -42.5354, -96.6734, 0.46 ) }
    dend_49 { pt3dadd( -6.24023, -43.9596, -98.5407, 0.69 ) }
    dend_49 { pt3dadd( -6.04961, -46.0092, -101.044, 0.46 ) }
    dend_49 { pt3dadd( -5.94281, -47.1239, -102.383, 0.46 ) }
    dend_49 { pt3dadd( -5.8727, -47.9419, -103.346, 0.46 ) }
    dend_49 { pt3dadd( -5.79783, -49.2028, -104.808, 0.46 ) }
    dend_49 { pt3dadd( -5.69779, -50.7786, -106.518, 0.69 ) }
    dend_49 { pt3dadd( -5.50411, -53.4059, -109.351, 0.46 ) }
    dend_49 { pt3dadd( -5.42315, -54.6776, -110.741, 0.69 ) }
    dend_49 { pt3dadd( -5.25707, -57.3008, -113.805, 0.23 ) }
    dend_49 { pt3dadd( -5.21113, -57.9961, -114.627, 0.23 ) }
    dend_49 { pt3dadd( -5.09977, -59.2819, -116.181, 0.46 ) }
    dend_49 { pt3dadd( -4.85896, -61.5319, -119.033, 0.23 ) }
    dend_49 { pt3dadd( -4.64798, -63.6409, -121.804, 0.23 ) }
    dend_49 { pt3dadd( -4.5002, -65.3914, -124.085, 0.23 ) }
    dend_49 { pt3dadd( -4.4111, -66.3614, -125.354, 0.23 ) }
    dend_49 { pt3dadd( -4.26517, -67.6975, -127.236, 0.46 ) }
    dend_49 { pt3dadd( -3.95665, -69.849, -130.683, 0.23 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 26/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -57.297, 31.3451, 18.7089, 0.23 ) }
    dend_64 { pt3dadd( -57.1951, 29.651, 18.269, 0.23 ) }
    dend_64 { pt3dadd( -57.1828, 28.8338, 18.0014, 0.23 ) }
    dend_64 { pt3dadd( -57.2594, 25.8362, 16.9033, 0.23 ) }
    dend_64 { pt3dadd( -57.3054, 24.0333, 16.2427, 0.23 ) }
    dend_64 { pt3dadd( -57.3406, 22.6563, 15.7382, 0.23 ) }
    dend_64 { pt3dadd( -57.3992, 20.3631, 14.8981, 0.23 ) }
    dend_64 { pt3dadd( -57.4476, 18.9576, 14.3092, 0.23 ) }
    dend_64 { pt3dadd( -57.5146, 17.9989, 13.8386, 0.23 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 35/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -57.297, 31.3451, 18.7089, 0.69 ) }
    dend_63 { pt3dadd( -58.1194, 31.5157, 19.6219, 0.69 ) }
    dend_63 { pt3dadd( -59.6155, 31.4377, 21.2673, 1.15 ) }
    dend_63 { pt3dadd( -60.8402, 31.1672, 22.4726, 0.92 ) }
    dend_63 { pt3dadd( -62.4866, 30.5892, 23.9386, 0.46 ) }
    dend_63 { pt3dadd( -63.7301, 30.0539, 24.9692, 0.46 ) }
    dend_63 { pt3dadd( -65.0608, 29.4412, 26.0843, 0.46 ) }
    dend_63 { pt3dadd( -66.3071, 28.7174, 27.025, 0.23 ) }
    dend_63 { pt3dadd( -67.363, 27.9608, 27.7289, 0.23 ) }
    dend_63 { pt3dadd( -67.8618, 27.5238, 28.0308, 0.46 ) }
    dend_63 { pt3dadd( -69.3277, 25.9516, 28.8553, 0.46 ) }
    dend_63 { pt3dadd( -70.1491, 24.8682, 29.2865, 0.23 ) }
    dend_63 { pt3dadd( -70.5731, 24.0811, 29.5034, 0.23 ) }
    dend_63 { pt3dadd( -70.8906, 23.0442, 29.6646, 0.23 ) }
    dend_63 { pt3dadd( -71.0471, 21.3268, 29.8021, 0.23 ) }
    dend_63 { pt3dadd( -70.869, 19.6161, 29.8119, 0.46 ) }
    dend_63 { pt3dadd( -70.1791, 17.2972, 29.5929, 0.23 ) }
    dend_63 { pt3dadd( -69.651, 15.7706, 29.4047, 0.23 ) }
    dend_63 { pt3dadd( -69.2174, 14.7144, 29.2673, 0.23 ) }
    dend_63 { pt3dadd( -68.2473, 12.7481, 28.986, 0.23 ) }
    dend_63 { pt3dadd( -66.9725, 10.61, 28.6386, 0.46 ) }
    dend_63 { pt3dadd( -65.2635, 8.26672, 28.2168, 0.46 ) }
    // Section: dend_61, id: dend_61, parent: dend_57 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -12.3126, 67.3432, -25.0935, 0.23 ) }
    dend_61 { pt3dadd( -13.2614, 68.2053, -24.244, 0.23 ) }
    dend_61 { pt3dadd( -14.0075, 68.9119, -23.5159, 0.23 ) }
    dend_61 { pt3dadd( -14.7111, 69.638, -22.7895, 0.92 ) }
    dend_61 { pt3dadd( -15.8112, 70.8196, -21.5735, 0.23 ) }
    dend_61 { pt3dadd( -16.9954, 72.0763, -20.1723, 0.23 ) }
    dend_61 { pt3dadd( -17.9631, 73.1232, -18.9174, 0.23 ) }
    dend_61 { pt3dadd( -18.5918, 73.7821, -18.017, 0.23 ) }
    dend_61 { pt3dadd( -19.6241, 74.8679, -16.3527, 0.23 ) }
    dend_61 { pt3dadd( -20.6825, 75.9544, -14.4118, 0.23 ) }
    dend_61 { pt3dadd( -21.6605, 76.9713, -12.4816, 0.23 ) }
    dend_61 { pt3dadd( -22.4524, 77.8121, -10.7842, 0.23 ) }
    dend_61 { pt3dadd( -23.0571, 78.3957, -9.43738, 0.23 ) }
    dend_61 { pt3dadd( -23.5244, 78.792, -8.32903, 0.23 ) }
    dend_61 { pt3dadd( -24.1566, 79.2013, -6.61788, 0.23 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 72/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -12.3126, 67.3432, -25.0935, 0.46 ) }
    dend_58 { pt3dadd( -12.2818, 68.2854, -25.2983, 0.46 ) }
    dend_58 { pt3dadd( -12.1244, 69.1264, -25.5673, 0.46 ) }
    dend_58 { pt3dadd( -11.8891, 70.384, -25.9696, 0.46 ) }
    dend_58 { pt3dadd( -11.6332, 71.7515, -26.407, 0.69 ) }
    dend_58 { pt3dadd( -11.4317, 72.8283, -26.7515, 0.92 ) }
    dend_58 { pt3dadd( -11.3017, 73.523, -26.9737, 1.38 ) }
    dend_58 { pt3dadd( -11.0509, 75.3036, -27.6143, 0.92 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 80/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -11.0509, 75.3036, -27.6143, 0.46 ) }
    dend_60 { pt3dadd( -9.64391, 75.5068, -28.0401, 0.46 ) }
    dend_60 { pt3dadd( -8.37912, 75.9359, -28.4929, 0.46 ) }
    dend_60 { pt3dadd( -7.5853, 76.4095, -28.8117, 0.46 ) }
    dend_60 { pt3dadd( -6.84633, 77.0014, -29.0998, 0.46 ) }
    dend_60 { pt3dadd( -5.44737, 78.291, -29.6469, 0.69 ) }
    dend_60 { pt3dadd( -4.38175, 79.3796, -30.1608, 0.46 ) }
    dend_60 { pt3dadd( -3.52023, 80.6147, -30.6919, 0.46 ) }
    dend_60 { pt3dadd( -3.04395, 81.5924, -31.1307, 0.46 ) }
    dend_60 { pt3dadd( -2.5297, 82.9698, -31.8252, 0.46 ) }
    dend_60 { pt3dadd( -2.14638, 84.0997, -32.4823, 0.69 ) }
    dend_60 { pt3dadd( -1.67884, 85.3987, -33.354, 0.46 ) }
    dend_60 { pt3dadd( -1.1538, 86.526, -34.1689, 0.69 ) }
    dend_60 { pt3dadd( -0.252978, 87.9854, -35.2808, 0.46 ) }
    dend_60 { pt3dadd( 0.750306, 89.3266, -36.3001, 0.46 ) }
    dend_60 { pt3dadd( 1.61742, 90.4647, -37.1758, 0.46 ) }
    dend_60 { pt3dadd( 2.13133, 91.0812, -37.6343, 0.23 ) }
    dend_60 { pt3dadd( 3.1472, 92.1243, -38.3536, 0.46 ) }
    dend_60 { pt3dadd( 5.2327, 93.8748, -39.5677, 0.23 ) }
    dend_60 { pt3dadd( 6.97024, 95.081, -40.3142, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 0/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -11.0509, 75.3036, -27.6143, 0.69 ) }
    dend_59 { pt3dadd( -11.4887, 76.6595, -26.9227, 0.69 ) }
    dend_59 { pt3dadd( -11.8798, 78.3402, -26.076, 0.46 ) }
    dend_59 { pt3dadd( -12.1145, 79.5267, -25.4879, 0.46 ) }
    dend_59 { pt3dadd( -12.2677, 80.1254, -25.2153, 0.46 ) }
    dend_59 { pt3dadd( -12.7535, 81.7077, -24.5333, 0.69 ) }
    dend_59 { pt3dadd( -13.5376, 83.7904, -23.6466, 0.46 ) }
    dend_59 { pt3dadd( -14.127, 85.3135, -23.0506, 0.46 ) }
    dend_59 { pt3dadd( -14.7938, 87.0168, -22.4165, 0.46 ) }
    dend_59 { pt3dadd( -16.2024, 90.508, -21.1439, 0.23 ) }
    dend_59 { pt3dadd( -16.8323, 91.9353, -20.6111, 0.23 ) }
    dend_59 { pt3dadd( -17.7042, 93.5965, -19.9511, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_18, dend_9, dend_6, dend_1, dend_0, dend_40, dend_33, dend_29, dend_24, dend_22, dend_19, dend_15, dend_10, dend_8, dend_7, dend_5, dend_2, dend_46, dend_41, dend_39, dend_34, dend_31, dend_30, dend_26, dend_25, dend_21, dend_20, dend_17, dend_16, dend_14, dend_11, dend_4, dend_3, dend_52, dend_47, dend_45, dend_42, dend_38, dend_35, dend_28, dend_27, dend_13, dend_12, dend_56, dend_53, dend_51, dend_48, dend_44, dend_43, dend_37, dend_36, dend_62, dend_57, dend_55, dend_54, dend_50, dend_49, dend_64, dend_63, dend_61, dend_58, dend_60, dend_59]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_23, dend_18, dend_9, dend_6, dend_1, dend_0, dend_40, dend_33, dend_29, dend_24, dend_22, dend_19, dend_15, dend_10, dend_8, dend_7, dend_5, dend_2, dend_46, dend_41, dend_39, dend_34, dend_31, dend_30, dend_26, dend_25, dend_21, dend_20, dend_17, dend_16, dend_14, dend_11, dend_4, dend_3, dend_52, dend_47, dend_45, dend_42, dend_38, dend_35, dend_28, dend_27, dend_13, dend_12, dend_56, dend_53, dend_51, dend_48, dend_44, dend_43, dend_37, dend_36, dend_62, dend_57, dend_55, dend_54, dend_50, dend_49, dend_64, dend_63, dend_61, dend_58, dend_60, dend_59]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_22 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_8 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_7 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_39 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_21 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_20 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_17 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_16 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_14 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_45 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_12 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_51 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_48 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_44 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_43 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_36 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_62 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_57 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_55 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_54 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_50 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_49 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_40 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_46 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_18 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_1 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_29 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_47 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_19 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_33 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_15 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_31 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_34 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_24 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_10 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_30 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_27 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_56 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_42 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_25 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_5 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_28 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_2 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_53 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_11 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_4 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_13 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_58 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_64 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_59 OneSecGrp_SectionRef_68.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_60 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_63 OneSecGrp_SectionRef_64.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_22 nseg = 5
    dend_8 nseg = 3
    dend_7 nseg = 5
    dend_39 nseg = 5
    dend_21 nseg = 3
    dend_20 nseg = 7
    dend_17 nseg = 9
    dend_16 nseg = 5
    dend_14 nseg = 3
    dend_45 nseg = 3
    dend_38 nseg = 5
    dend_12 nseg = 3
    dend_51 nseg = 9
    dend_48 nseg = 3
    dend_44 nseg = 5
    dend_43 nseg = 5
    dend_37 nseg = 7
    dend_36 nseg = 9
    dend_62 nseg = 3
    dend_57 nseg = 3
    dend_55 nseg = 3
    dend_54 nseg = 3
    dend_50 nseg = 3
    dend_49 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L1_DAC_81e928d216_0_0


