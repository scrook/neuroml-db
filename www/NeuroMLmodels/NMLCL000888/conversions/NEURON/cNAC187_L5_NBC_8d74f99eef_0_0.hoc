// Cell: cNAC187_L5_NBC_8d74f99eef_0_0
/*
{
  "id" : "cNAC187_L5_NBC_8d74f99eef_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.91165, -15.504, 0.0, 2.36095", "1.69225, -14.164, 0.0, 3.77272", "1.47285, -12.824, 0.0, 5.64735", "1.25345, -11.484, 0.0, 7.11092", "1.03406, -10.144, 0.0, 8.31603", "0.814659, -8.80403, 0.0, 9.51462", "0.595262, -7.46404, 0.0, 10.3186", "0.375865, -6.12406, 0.0, 10.9463", "0.156467, -4.78407, 0.0, 11.2263", "-0.0629298, -3.44408, 0.0, 11.5062", "-0.282327, -2.1041, 0.0, 11.5148", "-0.501724, -0.76411, 0.0, 11.4563", "-0.721122, 0.575877, 0.0, 12.0569", "-0.940519, 1.91586, 0.0, 12.3516", "-1.15992, 3.25585, 0.0, 11.8398", "-1.37931, 4.59584, 0.0, 10.9681", "-1.59871, 5.93582, 0.0, 9.93554", "-1.81811, 7.27581, 0.0, 8.23546", "-2.03751, 8.6158, 0.0, 6.93545", "-2.2569, 9.95578, 0.0, 5.0025", "-2.4763, 11.2958, 0.0, 3.14572" ]
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "2.49262, -16.9948, -20.89, 1.66", "3.27327, -23.1198, -22.2966, 1.66", "3.9306, -28.2774, -23.4811, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037708019813
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-8.31738, 2.19923, -1.78, 2.49", "-10.0979, 2.79293, -1.6067, 2.49", "-14.8583, 4.38025, -1.14338, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037708019813
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.21262, 11.7962, 2.62, 1.94", "5.83562, 15.3442, 3.0047, 1.94", "9.09849, 18.5395, 3.35115, 1.66", "11.7313, 21.1178, 3.63071, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000037708019813
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.4763, 11.2958, 0.0, 0.55", "-4.89999, 26.0987, 0.0, 0.55", "-7.32368, 40.9016, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "3.9306, -28.2774, -23.4811, 1.66", "6.38608, -30.3242, -15.7392, 1.66" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "3.9306, -28.2774, -23.4811, 0.83", "6.13111, -30.9975, -27.6505, 0.83", "6.86869, -31.9092, -29.0481, 0.83" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-14.8583, 4.38025, -1.14338, 1.66", "-17.1525, 6.29138, 0.908145, 1.66", "-20.4104, 9.00546, 3.82161, 1.38", "-22.8479, 11.0361, 6.00136, 1.38" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-14.8583, 4.38025, -1.14338, 0.83", "-22.2431, 6.31203, -8.69065, 0.83", "-24.7435, 6.92742, -10.946, 0.83", "-28.2352, 7.75546, -13.702, 0.83", "-30.5717, 8.29195, -15.323, 0.83", "-32.5359, 8.72398, -16.5098, 0.83", "-34.054, 9.08297, -17.3234, 0.83", "-35.5811, 9.43018, -17.6955, 0.55", "-37.1803, 9.86178, -17.9493, 0.83", "-38.8581, 10.4316, -18.0626, 0.55", "-40.5544, 11.06, -18.2137, 0.83", "-43.4189, 12.1743, -18.4994, 0.55", "-46.2605, 13.2936, -18.6692, 0.83", "-48.8583, 14.3183, -18.721, 0.83", "-51.2709, 15.2238, -18.675, 0.55", "-55.4818, 16.6329, -18.2777, 0.55", "-56.6532, 16.9675, -18.0813, 0.55", "-59.5649, 17.5642, -17.3449, 0.83", "-61.3583, 17.8667, -16.8189, 0.55", "-64.0754, 18.1681, -16.0455, 0.83", "-66.5515, 18.4062, -15.3779, 0.55", "-69.2709, 18.6997, -14.7453, 1.11", "-74.4903, 19.5393, -14.2713, 0.55", "-77.2938, 20.1661, -14.39, 0.55", "-79.6954, 20.7742, -14.7215, 0.55", "-82.8169, 21.8245, -15.7237, 0.55", "-84.9242, 22.6706, -16.7025, 0.55", "-89.8369, 24.8483, -19.4439, 0.55", "-92.0802, 25.9378, -20.7175, 0.83", "-93.8306, 26.7874, -21.5616, 0.83", "-99.1886, 29.4287, -23.4869, 0.28", "-101.077, 30.2998, -23.9104, 0.55", "-104.342, 31.7747, -24.2806, 0.55", "-108.033, 33.3415, -24.1715, 0.28", "-110.373, 34.394, -23.9327, 0.55", "-112.414, 35.3565, -23.5571, 0.28", "-113.516, 35.8923, -23.3253, 0.83", "-115.81, 37.1242, -22.9801, 0.28", "-116.587, 37.5426, -22.9232, 0.83", "-119.967, 39.2958, -22.9272, 0.28", "-122.453, 40.4542, -23.1627, 0.83", "-126.425, 42.0575, -23.7169, 0.28", "-128.554, 42.8214, -24.0692, 0.55", "-133.597, 44.5012, -24.9578, 0.28", "-135.962, 45.1259, -25.3762, 0.55", "-143.249, 46.6106, -26.6205, 0.28", "-146.932, 47.1644, -27.2395, 0.55", "-150.113, 47.5057, -27.7338, 0.28", "-153.053, 47.7217, -28.2248, 0.55", "-163.357, 48.1196, -29.8054, 0.28", "-165.504, 48.1145, -30.0601, 0.83", "-169.147, 47.9494, -30.3633, 0.28", "-169.914, 47.8755, -30.392, 0.55", "-172.374, 47.6212, -30.3767, 0.28", "-174.46, 47.4153, -30.296, 0.83", "-179.673, 47.2414, -29.8628, 0.28", "-182.421, 47.2815, -29.5456, 0.83", "-191.093, 48.1824, -28.6242, 0.28", "-197.474, 49.2981, -27.9676, 0.28", "-198.744, 49.618, -27.836, 0.83", "-203.442, 51.1722, -27.6542, 0.28", "-205.536, 52.052, -27.6325, 0.83", "-211.493, 55.2385, -28.3415, 0.28", "-213.089, 56.2813, -28.7996, 0.55", "-214.34, 57.1254, -29.2721, 0.55", "-219.721, 60.6295, -31.6621, 0.28", "-221.708, 61.8185, -32.7743, 0.55", "-227.049, 64.7621, -36.1102, 0.28", "-229.735, 65.8101, -37.7129, 0.55", "-239.622, 68.1627, -40.1981, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "11.7313, 21.1178, 3.63071, 1.38", "13.9409, 23.0476, 3.52861, 1.38", "15.8748, 24.7366, 3.43925, 1.11", "17.6055, 26.2482, 3.35929, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "11.7313, 21.1178, 3.63071, 0.83", "21.5803, 24.6399, 3.96408, 0.83", "28.8241, 27.4138, 5.14555, 0.83", "32.1218, 28.7614, 6.04149, 0.83", "36.1, 30.5257, 7.39936, 0.83", "40.4334, 32.5538, 9.1161, 0.83", "46.6251, 35.5182, 11.8341, 1.11", "49.9126, 37.154, 13.8202, 0.83", "53.0566, 38.8452, 15.8827, 1.11", "55.0608, 39.9801, 17.228, 0.55", "56.9857, 41.026, 18.5611, 0.83", "60.1058, 42.6121, 20.7416, 0.28", "62.2106, 43.5005, 22.1708, 0.55", "64.7268, 44.3199, 23.7621, 0.28", "71.4021, 46.0475, 27.8307, 0.55", "74.1783, 46.6155, 29.4723, 0.83", "77.8935, 47.2368, 31.7066, 0.55", "80.4087, 47.5555, 33.3343, 0.83", "84.8093, 47.9067, 36.5328, 0.55", "89.1739, 48.1061, 39.8565, 0.83", "93.0481, 47.991, 43.0457, 0.55", "96.0571, 47.7618, 45.6121, 0.55", "99.5768, 47.3494, 48.6404, 0.83", "104.397, 46.609, 52.725, 0.55", "106.654, 46.1795, 54.6156, 1.38", "115.63, 44.3763, 61.6873, 0.55", "118.146, 43.9062, 63.502, 0.55", "120.832, 43.4762, 65.0995, 1.11", "126.37, 42.731, 67.6068, 0.28", "127.742, 42.5237, 68.0486, 0.83", "130.893, 41.9391, 68.8121, 0.28", "132.796, 41.5277, 69.0029, 1.11", "135.23, 40.7512, 69.24, 0.28", "136.84, 40.0405, 69.4338, 0.83", "142.581, 36.8068, 70.1155, 0.28", "145.432, 34.9462, 70.6438, 0.28", "147.241, 33.5907, 71.141, 1.11", "148.764, 32.4305, 71.7776, 1.11", "150.984, 30.8341, 72.9468, 0.28", "152.321, 29.9943, 73.741, 0.83", "155.58, 28.297, 75.6729, 0.28", "158.396, 27.133, 77.345, 0.83", "163.524, 25.3656, 80.4046, 0.28", "166.514, 24.5098, 82.0808, 1.11", "170.689, 23.5285, 84.2881, 0.28", "173.356, 23.0232, 85.6664, 0.83", "180.653, 22.0054, 89.1533, 0.28", "181.306, 21.9343, 89.4467, 0.83", "185.849, 21.5046, 91.2315, 0.55", "189.818, 21.1083, 92.6882, 0.28", "193.75, 20.6714, 94.038, 1.38", "196.737, 20.2769, 95.0198, 0.83", "204.326, 19.1455, 97.1243, 0.28", "208.199, 18.5426, 98.1789, 1.11", "213.552, 17.6777, 99.5751, 0.28", "214.955, 17.443, 99.9358, 1.11", "218.599, 16.883, 100.698, 0.28", "220.984, 16.583, 101.234, 1.11", "226.243, 16.1953, 102.635, 0.28", "227.24, 16.181, 102.981, 0.55", "231.731, 16.4784, 104.674, 0.28", "236.646, 17.2271, 106.843, 0.83", "240.327, 18.1529, 108.647, 0.28", "243.404, 19.1174, 110.535, 0.83", "247.799, 20.6425, 113.884, 0.28", "249.649, 21.3229, 115.409, 0.55", "254.335, 23.1863, 119.709, 0.28", "256.142, 23.9066, 121.574, 0.55", "261.075, 25.9594, 126.804, 0.28", "263.901, 27.1337, 129.854, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.32368, 40.9016, 0.0, 0.55", "-9.74737, 55.7045, 0.0, 0.55", "-12.1711, 70.5074, 0.0, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "6.38608, -30.3242, -15.7392, 0.55", "6.38499, -30.409, -15.7337, 0.55", "6.46355, -34.3925, -15.336, 0.55", "6.79145, -38.9678, -14.6536, 0.55", "7.02938, -41.2985, -14.2407, 0.55", "7.1677, -42.6696, -13.9384, 0.55", "7.3946, -45.0131, -13.436, 0.55", "7.85007, -49.159, -12.3662, 0.55", "8.3306, -53.177, -11.5407, 0.55", "8.51086, -54.6181, -11.3461, 0.28", "9.14292, -59.4663, -10.9885, 0.55", "9.5003, -62.2708, -10.9197, 0.55", "9.81623, -65.1165, -11.0068, 0.55", "10.5995, -73.3423, -11.9138, 0.28", "10.7249, -75.0022, -12.2111, 0.55", "10.7985, -76.0617, -12.415, 0.55", "10.9283, -77.9166, -12.8079, 0.28", "10.9443, -78.2808, -12.8549, 0.55", "10.9352, -80.3689, -13.159, 0.28", "10.8974, -82.1968, -13.2597, 0.55", "10.8746, -85.4726, -13.474, 0.28", "10.9442, -88.275, -13.613, 0.55", "11.1353, -91.013, -13.7158, 0.28", "11.5878, -95.3679, -13.7736, 0.83", "12.0736, -98.933, -13.78, 0.55", "12.3924, -100.862, -13.7611, 0.83", "12.7907, -102.979, -13.6634, 0.28", "13.3466, -105.551, -13.4002, 0.83", "14.0414, -108.39, -12.9213, 0.28", "14.3942, -109.742, -12.5494, 0.83", "15.2349, -113.138, -11.5244, 0.28", "15.7362, -115.375, -10.8681, 0.83", "16.3241, -118.087, -10.04, 0.28", "17.0115, -121.178, -9.05331, 0.83", "18.4838, -127.667, -6.84449, 0.28", "19.238, -130.623, -5.77703, 0.83", "20.7399, -136.062, -3.78522, 0.28", "21.5615, -139.073, -2.7413, 0.83", "22.6356, -143.127, -1.35302, 0.28", "23.2145, -145.223, -0.702065, 0.83", "26.6278, -156.724, 2.44791, 0.28", "27.5911, -159.756, 3.20175, 0.83", "30.4052, -168.147, 5.13026, 0.28", "31.1949, -170.472, 5.61075, 0.83", "32.8416, -175.28, 6.47238, 0.28", "33.9097, -178.38, 6.89239, 0.83", "35.5761, -183.3, 7.1468, 0.28", "35.9848, -184.393, 7.15431, 0.83" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "6.38608, -30.3242, -15.7392, 0.55", "6.88974, -36.1977, -18.4197, 0.55", "7.16521, -39.0277, -19.5182, 0.55", "7.33009, -40.3402, -19.9369, 0.55", "7.72739, -42.9058, -20.4542, 0.55", "8.1194, -45.0864, -20.601, 0.55", "8.56019, -47.1367, -20.4745, 0.55", "8.94991, -48.4018, -19.9932, 0.28", "9.66596, -50.1263, -18.9875, 0.55", "10.8746, -52.6262, -17.1651, 0.55", "11.9704, -54.8021, -15.5406, 0.55", "12.8307, -56.3951, -14.276, 0.28", "13.5039, -57.6419, -13.1953, 0.55", "15.2527, -60.8934, -10.2871, 0.28", "16.5762, -63.445, -7.93044, 0.83", "17.846, -65.9578, -5.5922, 0.28", "19.1621, -68.7682, -3.00693, 0.83", "20.2291, -71.2334, -0.655606, 0.28", "20.7226, -72.4324, 0.573915, 0.55", "21.5824, -74.5614, 2.99485, 0.28", "22.084, -75.6884, 4.47138, 0.83", "22.4054, -76.3313, 5.45097, 0.83", "23.8907, -79.1525, 9.70599, 0.28", "24.6504, -80.5484, 11.8156, 0.55", "25.4139, -81.9606, 13.9754, 0.28", "26.5802, -84.1768, 17.575, 0.83", "27.8781, -86.8086, 21.9439, 0.28", "28.2459, -87.7393, 23.3289, 0.83", "28.8951, -89.8947, 26.2249, 0.28", "29.2866, -91.6578, 28.2974, 0.83", "30.4372, -98.4372, 35.4756, 0.28", "30.5831, -99.6453, 36.6295, 0.83", "31.0395, -105.024, 41.3983, 0.28", "31.1403, -106.722, 42.8597, 0.55", "31.2646, -109.701, 45.2049, 0.28", "31.3171, -110.773, 45.9645, 0.83", "31.3972, -112.183, 46.8001, 0.28", "31.4692, -112.804, 47.2139, 0.55", "31.7506, -114.242, 48.3708, 0.28", "31.9069, -114.99, 48.9406, 0.83", "32.727, -118.737, 51.6308, 0.28", "32.8781, -119.462, 52.117, 0.83", "33.3969, -122.204, 53.885, 0.28", "33.6668, -123.791, 54.8626, 0.83", "33.9349, -125.496, 55.8653, 0.28", "34.1354, -127.078, 56.783, 0.55", "34.4124, -129.965, 58.3756, 0.28", "34.6042, -131.651, 59.3099, 0.83", "34.9138, -134.235, 60.6371, 0.28", "35.049, -135.199, 61.0909, 0.55", "35.3141, -136.89, 61.8467, 0.28", "35.5447, -138.194, 62.3605, 0.55", "36.4946, -142.884, 64.0738, 0.28", "36.9811, -144.993, 64.7925, 0.83", "37.3229, -146.374, 65.2214, 0.28", "37.5517, -147.243, 65.4657, 0.55", "38.0948, -149.168, 65.9249, 0.28", "38.6833, -151.234, 66.3252, 0.55" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "6.86869, -31.9092, -29.0481, 0.83", "7.104, -33.9333, -27.1622, 0.83", "7.17662, -35.037, -25.7974, 0.28", "7.18121, -36.2801, -24.1215, 0.55", "7.18595, -37.0093, -23.1065, 0.28", "7.16618, -39.0786, -19.8984, 0.83", "7.16946, -41.4196, -16.2592, 0.28", "7.13616, -43.9679, -11.278, 0.83", "7.08714, -45.9451, -6.71725, 0.28", "7.05165, -47.073, -3.99582, 0.83", "6.8704, -50.5193, 4.63335, 0.28", "6.83001, -51.1954, 6.39952, 0.55", "6.51335, -55.38, 18.3558, 0.28", "6.43305, -57.3488, 24.8203, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "6.86869, -31.9092, -29.0481, 0.83", "6.85225, -32.3152, -29.3025, 0.83", "6.83677, -35.3631, -31.6122, 0.83", "6.90069, -38.897, -34.2133, 1.11", "7.02606, -43.5311, -37.4701, 0.83", "7.13315, -47.4894, -40.2519, 0.83", "7.54834, -62.8358, -51.037, 0.55", "7.72418, -66.4051, -53.7845, 0.55", "7.98356, -69.3558, -56.4602, 0.55", "8.17517, -70.88, -58.124, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-22.8479, 11.0361, 6.00136, 1.11", "-29.2133, 16.1522, 5.43021, 1.11", "-32.1917, 18.5462, 5.16296, 1.11", "-34.7774, 20.6244, 4.93095, 0.83", "-37.5562, 22.8579, 4.68161, 0.83", "-39.8739, 24.7208, 4.47365, 1.11" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-22.8479, 11.0361, 6.00136, 0.83", "-25.5827, 12.7777, 6.34137, 0.83", "-26.6231, 13.4402, 6.47073, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "17.6055, 26.2482, 3.35929, 1.11", "22.1882, 30.4905, 2.25554, 1.11", "24.0662, 32.229, 1.80325, 1.11", "25.4939, 33.5506, 1.4594, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "17.6055, 26.2482, 3.35929, 1.11", "18.8708, 33.2799, 2.41963, 1.11", "19.6343, 36.0868, 2.23455, 0.83", "20.1405, 37.6174, 2.2245, 0.83", "21.1862, 40.4638, 2.21627, 0.83", "22.3027, 43.216, 2.23768, 0.83", "23.3467, 45.6175, 2.26205, 1.38", "25.1099, 49.3762, 2.52803, 1.38", "27.0719, 53.3041, 2.72177, 0.83", "28.2686, 55.6762, 2.80761, 0.83", "29.2743, 57.6791, 2.89207, 1.11", "30.1704, 59.5294, 2.94751, 0.83", "30.7049, 60.8034, 3.00552, 0.83", "31.5907, 63.2693, 3.31103, 1.38", "32.3803, 65.6069, 3.64446, 0.83", "33.2558, 68.4053, 4.11788, 1.38", "35.0726, 74.6994, 5.25011, 1.11", "35.8424, 77.4172, 5.8025, 1.38", "37.3388, 82.4412, 6.92848, 1.38" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "8.17517, -70.88, -58.124, 0.55", "5.93801, -72.4111, -59.0157, 0.55", "3.89077, -73.4979, -59.2798, 0.55", "2.80881, -74.0306, -59.3801, 0.55", "1.49299, -74.6999, -59.5202, 0.55", "-1.84819, -76.4987, -59.7269, 0.55", "-6.64289, -78.9957, -60.0884, 0.55", "-12.0903, -82.0678, -60.6287, 0.55", "-15.0936, -83.8674, -61.1885, 0.55", "-18.1707, -85.8152, -62.0218, 0.55", "-23.4379, -89.1404, -63.632, 0.55", "-28.1454, -92.2317, -65.2356, 0.55", "-31.9433, -95.0064, -66.7244, 0.55", "-36.6283, -98.532, -68.7782, 0.55", "-41.6911, -102.339, -70.8821, 0.55", "-44.1337, -104.111, -71.8305, 0.55", "-48.2768, -107.005, -73.3731, 0.55", "-55.0219, -111.539, -75.5084, 0.55", "-60.3384, -114.853, -76.9104, 0.55", "-63.4708, -116.756, -77.5874, 0.55", "-66.5093, -118.549, -78.2729, 0.55", "-70.3706, -121.039, -79.4572, 0.83", "-72.6623, -122.553, -80.2696, 0.55", "-75.9495, -124.93, -81.5942, 0.83", "-78.0641, -126.558, -82.609, 0.28", "-80.4608, -128.411, -83.9572, 0.83", "-88.7162, -134.827, -89.0111, 0.28", "-91.2707, -136.768, -90.6153, 0.55", "-94.2483, -138.961, -92.4879, 0.55", "-101.13, -143.824, -96.5211, 0.55", "-103.655, -145.656, -98.0226, 0.55", "-107.876, -148.742, -100.416, 0.55", "-111.672, -151.487, -102.369, 1.38", "-114.623, -153.678, -103.848, 0.83", "-122.314, -159.64, -107.666, 0.28", "-127.885, -164.271, -110.218, 0.55", "-131.513, -167.388, -111.805, 0.83", "-133.589, -169.25, -112.75, 0.28", "-135.315, -170.848, -113.576, 0.55", "-137.965, -173.332, -114.92, 0.28", "-140.038, -175.249, -116.088, 0.55", "-150.122, -181.519, -118.239, 0.55", "-160.0, -187.723, -121.336, 0.55", "-169.213, -195.257, -123.708, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "8.17517, -70.88, -58.124, 0.55", "9.0355, -73.6763, -59.7259, 0.55", "9.27049, -75.5258, -60.4019, 0.55", "9.28059, -79.0199, -61.3447, 0.55", "9.2892, -81.9958, -62.1477, 0.55", "9.30518, -87.5242, -63.6395, 0.55", "9.31113, -89.5806, -64.1944, 0.55", "9.24891, -94.9976, -66.1866, 0.28", "9.23878, -97.4094, -67.0238, 0.55", "10.1109, -105.348, -71.113, 0.55", "10.9733, -112.819, -75.9555, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-39.8739, 24.7208, 4.47365, 0.83", "-42.3358, 26.0284, 2.8081, 0.83", "-45.126, 27.7244, 0.947594, 0.55", "-47.5558, 29.2804, -0.708571, 0.55", "-50.3, 31.0595, -2.50438, 0.55", "-51.6615, 31.8889, -3.33704, 0.55", "-52.8964, 32.5826, -4.11919, 0.55", "-54.8139, 33.6058, -5.28323, 0.55", "-56.7916, 34.6403, -6.45962, 0.55", "-58.4369, 35.4712, -7.27526, 0.55", "-60.2697, 36.3316, -8.16043, 0.83", "-63.3986, 37.9151, -9.78301, 0.83", "-64.9017, 38.6964, -10.5719, 0.55", "-67.016, 39.8804, -11.6094, 0.83", "-69.9377, 41.6884, -13.0521, 0.55", "-71.576, 42.8127, -13.9784, 0.55", "-74.3843, 44.9225, -15.8058, 0.55", "-75.2079, 45.5879, -16.4146, 0.55", "-76.9066, 47.0937, -17.9629, 0.55", "-77.6094, 47.7597, -18.7179, 0.55", "-79.2946, 49.4905, -20.7921, 0.83", "-80.7616, 51.1894, -22.63, 0.55", "-82.1093, 53.1321, -24.5728, 0.83", "-82.9812, 54.6672, -25.9799, 0.55", "-83.136, 55.0288, -26.2706, 0.83", "-83.5627, 56.2224, -27.1523, 0.55", "-83.8237, 57.0203, -27.7093, 0.83", "-84.6929, 59.5493, -29.4391, 0.55", "-85.5183, 61.8364, -30.9709, 0.55", "-87.0198, 65.7215, -33.6893, 0.55", "-87.9567, 67.9969, -35.3083, 0.55", "-89.3553, 71.2903, -37.7352, 0.28", "-89.9997, 72.7655, -38.8438, 0.28", "-90.9788, 74.9344, -40.5445, 0.28", "-92.5138, 78.3566, -43.197, 0.28", "-93.5964, 80.6779, -45.0066, 0.28", "-95.0261, 83.8288, -47.434, 0.28", "-96.0008, 86.0765, -49.2588, 0.28", "-96.7536, 87.9136, -50.8653, 0.55", "-102.113, 93.1969, -55.0288, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-39.8739, 24.7208, 4.47365, 0.28", "-44.0985, 25.8617, 8.26607, 0.28", "-50.8276, 27.6712, 14.1158, 0.28", "-54.8721, 28.8249, 17.6092, 0.28", "-58.9668, 30.0175, 21.17, 0.55", "-63.5746, 31.4257, 25.1669, 0.55", "-65.9858, 32.1785, 27.1883, 0.28", "-67.1361, 32.5941, 28.1221, 0.55", "-70.0311, 33.8946, 30.0337, 0.28", "-73.8712, 35.9537, 32.1418, 0.55", "-74.9011, 36.6045, 32.6646, 0.55", "-76.9244, 38.0318, 33.6773, 0.28", "-81.9046, 41.8219, 36.3876, 0.83", "-85.7291, 44.8583, 38.6014, 0.28", "-86.529, 45.5313, 39.1021, 0.28", "-89.2278, 48.0218, 41.1127, 0.83", "-91.519, 50.2179, 43.168, 0.28", "-92.9601, 51.6036, 44.7632, 0.55", "-94.9924, 53.3995, 47.4397, 0.28", "-96.649, 54.8002, 49.7601, 0.55", "-98.7394, 56.5859, 52.915, 0.28", "-100.045, 57.712, 55.0504, 0.83", "-102.357, 59.6852, 59.0459, 0.28", "-104.184, 61.1742, 62.3715, 0.55", "-104.868, 61.6909, 63.6036, 0.55", "-107.148, 63.2955, 67.377, 0.28", "-108.563, 64.1856, 69.3794, 0.55", "-110.875, 65.5783, 72.4357, 0.28", "-112.574, 66.5807, 74.5025, 0.55", "-115.723, 68.2758, 78.079, 0.28", "-118.201, 69.4091, 80.8004, 1.11", "-123.178, 71.4383, 86.3928, 0.28", "-125.108, 72.1853, 88.5171, 0.55", "-127.095, 72.915, 90.7208, 0.28", "-128.936, 73.5526, 92.8314, 0.55", "-132.081, 74.4968, 96.7986, 0.28", "-137.049, 75.7231, 103.689, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-26.6231, 13.4402, 6.47073, 0.55", "-26.4033, 15.6247, 9.16183, 0.55", "-26.3277, 17.303, 11.0655, 0.55", "-26.4477, 19.8177, 13.8476, 0.55", "-26.8522, 22.6479, 16.821, 0.55", "-27.3708, 24.8027, 18.9764, 0.83", "-27.9498, 26.864, 20.9, 0.55", "-28.8715, 29.5547, 23.3064, 0.83", "-30.0722, 32.7546, 25.8718, 0.55", "-31.3189, 35.7716, 27.8214, 0.83", "-32.601, 38.6504, 29.4086, 0.55", "-33.4919, 40.5077, 30.4378, 0.55", "-34.4445, 42.4304, 31.4586, 1.38", "-35.6578, 44.9852, 32.7605, 0.83", "-36.6051, 47.2744, 33.8757, 0.83", "-37.3284, 49.2432, 34.855, 0.55", "-38.8551, 53.5874, 37.1118, 0.83", "-39.9152, 56.3573, 38.654, 0.83", "-40.7213, 58.3521, 39.7991, 0.55", "-41.3556, 59.9478, 40.7631, 0.55", "-41.4424, 60.2153, 40.9283, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-26.6231, 13.4402, 6.47073, 0.55", "-29.3403, 14.8743, 9.95055, 0.55", "-31.0216, 15.6284, 12.8519, 0.83", "-32.3459, 16.1877, 15.795, 0.83", "-34.5673, 17.2857, 21.3115, 0.55", "-35.6198, 17.8911, 24.1138, 0.83", "-36.2891, 18.3173, 25.9095, 0.55", "-39.4635, 20.7545, 35.7849, 0.83", "-42.0923, 23.247, 45.1524, 0.55", "-42.7827, 24.0261, 47.859, 0.55", "-43.771, 25.331, 51.8493, 0.55", "-44.2005, 26.0139, 53.6491, 0.55", "-45.0967, 27.9225, 57.8074, 0.28", "-45.4419, 29.1853, 59.7477, 1.11", "-45.5863, 30.2225, 61.294, 1.11", "-45.8788, 32.4818, 65.4586, 0.55", "-46.119, 34.2645, 69.1723, 0.55", "-46.376, 35.9858, 73.0891, 0.55", "-46.7146, 37.865, 77.5774, 0.55", "-47.6438, 42.6321, 89.9843, 1.11", "-48.5198, 47.6362, 103.619, 0.55", "-48.6761, 48.6447, 106.432, 0.55", "-48.9351, 50.2846, 111.06, 0.55", "-49.1831, 51.737, 115.148, 1.11", "-49.8523, 55.3161, 125.007, 0.28", "-50.3361, 57.9618, 131.734, 1.11", "-50.6301, 60.2247, 136.806, 0.28", "-50.6898, 60.6367, 137.687, 0.55", "-51.0472, 62.6092, 141.721, 0.28", "-51.3679, 63.7969, 143.968, 1.11", "-52.6354, 66.9491, 149.199, 0.28", "-53.0438, 67.8482, 150.756, 0.83", "-54.2654, 70.8184, 156.089, 0.28", "-54.4678, 71.4034, 157.173, 0.55", "-55.2249, 74.0548, 162.114, 0.28", "-55.6221, 75.7145, 165.338, 1.38", "-56.817, 82.0862, 177.87, 0.28", "-57.2824, 84.9625, 183.8, 1.11", "-57.5682, 87.4212, 188.973, 0.28", "-57.6135, 88.0083, 190.257, 0.55", "-57.6493, 91.3903, 197.995, 0.28", "-57.6373, 92.3828, 200.297, 0.55", "-57.7578, 94.8476, 205.637, 0.28" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "25.4939, 33.5506, 1.4594, 0.55", "25.7195, 34.9945, -0.105301, 0.55", "26.5105, 40.0569, -5.59126, 0.55", "27.0713, 43.6452, -9.47982, 0.55", "27.3818, 45.6322, -11.633, 0.55", "28.0671, 50.018, -16.3858, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "25.4939, 33.5506, 1.4594, 0.83", "26.9367, 34.5006, 1.3754, 0.83", "31.4639, 37.4814, 1.11182, 0.83", "36.5131, 40.806, 0.817841, 0.83", "38.6424, 42.2079, 0.693871, 0.83", "40.9215, 43.7086, 0.561173, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "37.3388, 82.4412, 6.92848, 1.11", "37.4693, 87.8559, 6.3318, 1.11", "37.7244, 92.7094, 6.0215, 1.11", "37.8592, 95.4306, 5.95036, 1.38", "38.1205, 99.8043, 5.77606, 1.11", "38.4585, 105.46, 5.55067, 1.38", "38.6521, 108.699, 5.42159, 1.38", "39.0486, 114.386, 5.56309, 0.83", "39.463, 119.358, 5.79583, 0.83", "39.9189, 124.893, 5.99095, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "37.3388, 82.4412, 6.92848, 0.55", "39.9241, 83.0613, 9.49373, 0.55", "43.4161, 83.85, 12.5662, 0.28", "44.9654, 84.2394, 13.9999, 1.11", "47.3708, 85.1152, 15.7324, 0.55", "53.2549, 87.7376, 19.4344, 0.28", "55.3501, 88.786, 20.6084, 0.55", "66.2062, 95.2751, 25.8632, 0.28", "69.1308, 97.2581, 26.88, 0.55", "80.3934, 105.306, 28.7031, 0.28", "82.1969, 106.789, 28.0923, 0.55", "83.5091, 107.961, 27.0389, 0.28", "84.2133, 108.672, 26.2235, 0.55", "87.2126, 112.237, 21.7214, 0.28", "88.2889, 113.545, 20.0649, 0.55", "95.5394, 122.405, 9.45002, 0.28", "96.9964, 124.192, 7.27194, 0.55", "98.9447, 126.661, 4.32925, 0.28", "100.972, 129.32, 1.33553, 1.11", "106.548, 137.492, -6.44726, 0.28", "107.604, 139.159, -7.85406, 0.55", "119.267, 147.604, -8.55409, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "10.9733, -112.819, -75.9555, 0.28", "12.1132, -124.657, -80.7906, 0.28", "13.921, -136.552, -85.2103, 0.28", "15.4958, -148.883, -88.4333, 0.28", "16.8291, -161.351, -91.2663, 0.28", "16.7335, -173.976, -93.9423, 0.28", "16.6597, -186.833, -95.0259, 0.28", "18.2869, -199.531, -94.363, 0.28", "19.719, -212.277, -95.0646, 0.28", "21.7753, -224.747, -97.2485, 0.28" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "10.9733, -112.819, -75.9555, 1.11", "10.2149, -118.577, -78.7941, 0.28", "9.78621, -124.74, -80.7407, 0.28", "10.3377, -131.063, -81.9137, 0.28" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-102.113, 93.1969, -55.0288, 0.28", "-109.893, 100.268, -62.0544, 0.28", "-118.593, 105.382, -69.5128, 0.28", "-128.026, 111.644, -74.9755, 0.28" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-102.113, 93.1969, -55.0288, 1.11", "-108.92, 101.692, -61.545, 0.28", "-115.688, 110.065, -68.2418, 0.28", "-122.436, 118.491, -74.897, 0.28", "-128.393, 127.864, -81.1496, 0.28", "-136.793, 135.922, -86.1253, 0.28" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-137.049, 75.7231, 103.689, 0.28", "-137.636, 77.7622, 104.342, 0.28", "-138.083, 79.291, 104.821, 0.83", "-138.953, 82.3519, 105.886, 0.28", "-139.29, 83.5337, 106.304, 0.55", "-139.859, 85.5192, 107.008, 0.28", "-140.419, 87.1175, 107.71, 0.83", "-141.358, 89.2673, 108.853, 0.28", "-142.164, 90.4706, 109.652, 0.55", "-142.944, 91.2891, 110.346, 0.28", "-143.358, 91.6697, 110.695, 0.55", "-147.328, 94.6979, 113.888, 0.28", "-148.092, 95.1782, 114.464, 0.83", "-152.103, 97.1707, 117.405, 0.28", "-152.86, 97.4831, 117.917, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-137.049, 75.7231, 103.689, 0.28", "-139.853, 75.1305, 105.917, 0.28", "-140.75, 74.9962, 106.626, 0.55", "-142.007, 74.8879, 107.645, 0.28", "-143.152, 75.1171, 108.693, 0.55", "-149.087, 77.252, 114.333, 0.28", "-150.933, 78.0752, 116.063, 0.55", "-152.012, 78.7166, 117.103, 0.28", "-152.787, 79.2313, 117.846, 1.11", "-158.034, 83.0129, 122.789, 0.28", "-159.619, 84.0934, 124.148, 0.83", "-161.29, 85.1818, 125.453, 0.28", "-162.209, 85.7025, 126.137, 0.55", "-164.553, 86.8451, 127.751, 0.28", "-166.746, 87.7506, 129.207, 0.83", "-172.903, 89.861, 133.101, 0.28", "-174.34, 90.3443, 134.005, 0.55", "-177.108, 91.2579, 135.77, 0.28", "-179.454, 92.0264, 137.263, 1.11", "-182.821, 93.1565, 139.383, 0.28", "-184.019, 93.5673, 140.136, 0.55", "-186.275, 94.3552, 141.612, 0.28", "-187.835, 94.8474, 142.679, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-41.4424, 60.2153, 40.9283, 0.28", "-30.935, 60.7841, 57.6118, 0.28", "-28.7103, 60.8797, 60.8927, 1.11", "-24.1058, 61.0003, 67.1816, 0.28", "-22.7767, 61.0284, 68.8842, 0.83", "-18.4352, 61.0854, 74.2233, 0.28", "-16.1824, 61.115, 76.9937, 0.83", "-13.303, 61.0038, 79.4997, 0.28", "-10.6996, 60.8511, 81.4231, 0.55", "-6.5159, 60.4485, 83.7508, 0.28", "-4.29663, 60.2806, 85.2265, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-41.4424, 60.2153, 40.9283, 1.11", "-42.1392, 61.9905, 41.8579, 1.11", "-43.5534, 64.8735, 43.8525, 0.55", "-45.1952, 68.2641, 46.4051, 1.11", "-46.7031, 71.3776, 49.0825, 0.83", "-47.9559, 73.9317, 51.4458, 0.55", "-49.0217, 76.0366, 53.4826, 1.11", "-51.6201, 80.9167, 58.5876, 0.55", "-52.2907, 82.1795, 60.0061, 0.55", "-53.988, 85.357, 63.7413, 0.55", "-55.0088, 87.4628, 65.9446, 1.11", "-55.7485, 89.1665, 67.5165, 0.55", "-56.2283, 90.458, 68.5588, 0.83", "-57.0238, 92.9469, 70.2647, 0.55", "-57.5233, 94.4477, 71.2356, 0.83", "-59.1946, 99.9533, 74.3593, 1.38", "-59.9066, 102.547, 75.7884, 0.55", "-60.4309, 104.616, 76.9234, 0.28", "-61.3372, 108.099, 78.9199, 1.11" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "28.0671, 50.018, -16.3858, 0.83", "28.5935, 51.2763, -18.7163, 0.83", "29.8816, 53.6121, -22.846, 0.55", "32.4781, 57.4838, -29.6308, 0.55", "32.8608, 58.064, -30.5828, 0.55", "34.0646, 59.7183, -33.2336, 0.55", "34.8916, 60.8547, -35.0546, 0.55", "35.4855, 61.622, -36.3232, 0.55", "36.6529, 62.7923, -38.0645, 0.55", "39.7512, 65.2375, -41.0878, 0.55", "41.1895, 66.5396, -42.6892, 0.55", "45.2651, 71.195, -49.2688, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "28.0671, 50.018, -16.3858, 0.55", "27.4034, 53.749, -16.9439, 0.55", "26.5811, 57.9522, -18.06, 0.55", "26.0521, 60.6996, -18.9176, 0.55", "25.5614, 63.3743, -19.8064, 0.55", "24.8174, 67.4706, -21.1638, 0.55", "24.444, 69.7618, -21.9155, 0.55", "23.8922, 74.1679, -23.6796, 0.83", "23.7388, 75.3381, -24.1615, 0.28", "23.6727, 75.9491, -24.4632, 0.55", "23.5464, 77.3159, -25.3932, 0.55", "23.47, 78.4231, -26.4291, 0.55", "23.3933, 81.434, -28.8514, 0.83", "20.6562, 90.9252, -33.8451, 0.83", "18.9162, 99.6353, -40.3355, 0.83", "19.4928, 109.454, -45.4669, 0.83", "18.4403, 119.513, -50.0809, 0.83", "19.7356, 130.276, -52.9236, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "40.9215, 43.7086, 0.561173, 0.83", "45.9508, 51.172, 1.22009, 0.83", "47.9527, 53.7353, 0.988399, 0.83", "50.3925, 56.3112, 0.451195, 0.55", "52.679, 58.4998, -0.0434593, 0.55", "54.7327, 60.366, -0.397913, 0.83", "57.1459, 62.3819, -0.858744, 0.83", "59.5964, 64.1817, -1.6799, 0.28", "63.8507, 66.8638, -3.37617, 0.28", "65.399, 67.6983, -4.00952, 1.11", "67.6328, 68.6634, -5.15473, 0.55", "71.6844, 70.0792, -7.61032, 0.83", "76.0171, 71.5191, -10.4296, 0.55", "80.2263, 72.7858, -13.4625, 0.83", "81.2907, 73.0574, -14.3426, 0.83", "87.0202, 74.3265, -19.5797, 0.28", "89.4662, 74.7394, -22.0654, 0.83", "99.3301, 80.0488, -26.5298, 0.83", "110.1, 84.4937, -29.4512, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "40.9215, 43.7086, 0.561173, 0.83", "43.8013, 47.1276, 1.39632, 0.83", "45.4885, 49.5859, 2.11562, 0.83", "46.7883, 51.6215, 2.75677, 0.83", "48.4895, 54.5142, 3.64712, 0.83", "50.4445, 58.052, 4.78802, 1.11", "52.3724, 61.5642, 5.9539, 0.83", "54.6139, 65.9388, 7.47306, 1.11", "55.7646, 68.3108, 8.32474, 0.55", "57.2709, 71.6268, 9.66961, 0.83", "58.5131, 74.3321, 10.9651, 0.83", "59.9862, 77.5524, 12.7283, 1.11", "61.1724, 80.0772, 14.2686, 0.55", "62.005, 81.865, 15.4114, 0.28", "64.4537, 87.2684, 19.1308, 1.38", "66.4882, 91.6525, 22.4049, 0.55", "67.2084, 93.2077, 23.6619, 0.83", "68.1873, 95.4184, 25.5161, 0.55", "69.5391, 98.4789, 28.1503, 0.28", "70.5903, 100.825, 30.2446, 1.38", "72.1424, 103.923, 33.1589, 0.55", "73.2684, 106.116, 35.395, 1.38" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "39.9189, 124.893, 5.99095, 1.11", "39.8765, 125.663, 6.19345, 1.11", "39.7436, 128.393, 6.69404, 0.83", "39.8066, 131.66, 7.11011, 0.83", "40.2219, 135.486, 7.41884, 1.11", "41.1828, 141.66, 7.79144, 1.11", "41.5214, 143.867, 7.84735, 0.83", "42.0655, 147.721, 7.83946, 0.83", "42.6867, 151.774, 7.73355, 1.38", "43.329, 155.771, 7.52337, 1.11", "43.9135, 159.122, 7.28441, 1.11", "44.8341, 163.687, 6.86798, 1.11", "46.304, 171.462, 6.28393, 1.38", "46.6986, 174.359, 6.19227, 0.55", "46.8147, 176.215, 6.14098, 0.83", "46.8242, 177.007, 6.12321, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "39.9189, 124.893, 5.99095, 0.55", "40.2559, 127.261, 0.39495, 0.55", "40.3176, 127.774, -0.748395, 0.55", "40.6235, 129.283, -3.67287, 0.83", "41.0946, 131.605, -8.17622, 0.55", "41.3614, 132.921, -10.7274, 0.83", "41.6355, 134.273, -13.3474, 0.28", "41.6367, 134.962, -14.8555, 0.55", "41.5607, 135.989, -17.0661, 0.55", "40.495, 139.841, -26.5495, 0.55", "38.5136, 144.168, -35.6895, 0.55", "37.0702, 147.822, -45.1961, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "119.267, 147.604, -8.55409, 0.28", "124.596, 151.612, -8.71224, 0.28", "130.682, 154.171, -8.69974, 0.28", "137.042, 155.64, -9.49151, 0.28", "143.324, 157.587, -9.36031, 0.28", "149.278, 160.162, -10.7118, 0.28", "154.609, 162.935, -13.5962, 0.28" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "119.267, 147.604, -8.55409, 1.11", "127.997, 154.282, -9.7073, 0.28", "136.217, 161.639, -10.8669, 0.28" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "10.3377, -131.063, -81.9137, 0.28", "11.0064, -140.102, -84.654, 0.28", "9.81833, -149.2, -87.1081, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "10.3377, -131.063, -81.9137, 0.28", "11.5473, -139.624, -84.4024, 0.28", "11.6765, -148.451, -86.3428, 0.28", "11.9243, -157.4, -87.6165, 0.28", "12.74, -166.24, -89.2309, 0.28", "12.4852, -174.766, -92.1857, 0.28", "12.8819, -182.793, -96.192, 0.28", "13.5718, -191.053, -99.67, 0.28", "15.6124, -199.08, -103.049, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-61.3372, 108.099, 78.9199, 0.55", "-62.5353, 110.224, 80.7936, 0.55", "-63.4506, 111.739, 82.2814, 0.55", "-64.5226, 113.604, 84.1825, 1.11", "-65.8829, 115.956, 86.806, 0.55", "-66.4741, 116.884, 88.0016, 0.28", "-67.6333, 118.739, 90.4889, 0.55", "-68.3541, 119.91, 92.3107, 0.28", "-68.7142, 120.442, 93.2277, 0.83", "-69.8423, 121.914, 95.9703, 0.28", "-71.0263, 123.403, 98.7689, 0.28", "-71.5765, 124.054, 100.045, 0.83", "-72.3668, 124.951, 101.828, 0.28", "-74.0566, 126.879, 105.609, 0.28", "-75.0018, 127.991, 107.664, 0.83", "-76.9305, 130.432, 111.817, 0.28", "-77.0218, 130.557, 112.018, 0.55", "-77.8762, 131.78, 113.892, 0.28", "-78.4197, 132.688, 115.068, 0.83", "-78.8543, 133.589, 115.984, 0.28", "-78.9297, 133.769, 116.134, 0.55", "-79.8034, 135.949, 117.69, 0.28", "-80.5579, 137.807, 118.992, 1.11", "-81.9573, 141.132, 121.422, 0.28", "-82.5003, 142.348, 122.353, 0.55", "-83.1928, 143.841, 123.581, 0.83", "-83.9804, 146.253, 125.37, 0.28", "-84.1076, 146.932, 125.814, 0.55", "-84.1963, 149.687, 127.482, 0.28", "-84.022, 150.979, 128.141, 0.28", "-83.4937, 153.611, 129.431, 1.11", "-81.886, 159.428, 131.713, 0.28", "-81.5233, 160.357, 131.954, 0.55", "-80.8472, 161.828, 132.2, 0.28", "-80.5527, 162.318, 132.209, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-61.3372, 108.099, 78.9199, 0.28", "-61.4482, 114.989, 77.0124, 0.28", "-61.6792, 117.895, 76.2736, 0.28", "-61.8609, 119.467, 75.9082, 0.28", "-62.1134, 122.122, 75.0877, 0.83", "-62.3535, 125.468, 73.9877, 0.28", "-62.3454, 126.14, 73.7273, 0.55", "-62.2062, 129.298, 72.4428, 0.28", "-62.0482, 131.162, 71.5469, 0.55", "-61.396, 135.643, 69.156, 0.28", "-60.9657, 137.353, 68.1366, 0.83", "-59.2789, 141.731, 65.3018, 0.28", "-58.8895, 142.531, 64.7299, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "19.7356, 130.276, -52.9236, 0.28", "19.0413, 136.683, -55.7401, 0.28", "18.3553, 143.323, -58.0356, 0.28", "17.0831, 150.188, -59.3051, 0.28", "16.323, 157.254, -59.8601, 0.28", "14.5424, 164.116, -60.3889, 0.28", "11.4291, 170.39, -61.232, 0.28", "9.6984, 177.262, -61.8001, 0.28", "8.6645, 184.179, -63.0348, 0.28", "7.90028, 190.995, -64.8026, 0.28", "5.79164, 197.544, -66.3975, 0.28", "2.94999, 203.489, -68.7738, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "19.7356, 130.276, -52.9236, 1.11", "19.2275, 137.857, -57.1429, 0.28", "19.9963, 146.24, -59.5843, 0.28", "21.1605, 154.088, -63.1664, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "110.1, 84.4937, -29.4512, 0.28", "118.7, 90.2519, -33.7027, 0.28", "128.322, 93.7889, -37.9459, 0.28", "137.661, 97.9022, -42.3541, 0.28", "146.553, 102.004, -47.611, 0.28", "154.973, 108.125, -51.7644, 0.28", "162.31, 114.822, -57.0163, 0.28", "169.831, 121.347, -62.2043, 0.28", "176.28, 126.465, -69.7273, 0.28", "183.218, 131.83, -76.6369, 0.28", "190.357, 137.387, -83.1973, 0.28", "197.952, 143.019, -89.1615, 0.28" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "110.1, 84.4937, -29.4512, 1.11", "117.144, 88.9207, -32.784, 0.28", "123.573, 94.213, -36.2138, 0.28", "129.501, 100.404, -39.1504, 0.28" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "73.2684, 106.116, 35.395, 1.11", "75.1333, 108.164, 37.3237, 1.11", "76.6869, 109.851, 38.7227, 0.55", "77.937, 111.05, 39.4778, 0.83", "79.699, 112.726, 40.344, 0.28", "82.8577, 115.71, 41.6451, 1.38", "86.7439, 119.383, 43.0587, 0.55", "89.7027, 122.213, 44.1635, 1.38", "94.0776, 126.282, 45.7478, 0.28", "95.1688, 127.265, 46.1892, 0.55", "97.8194, 129.611, 47.3879, 0.28", "100.119, 131.587, 48.5746, 0.83", "105.767, 136.498, 52.1101, 0.28", "107.825, 138.323, 53.7067, 1.11", "110.686, 140.959, 56.3691, 0.28", "112.931, 142.982, 58.6082, 0.83", "114.67, 144.554, 60.5084, 0.28", "115.704, 145.451, 61.6627, 0.55", "116.64, 146.207, 62.6783, 0.28", "117.661, 147.023, 63.7447, 0.83", "119.382, 148.339, 65.4226, 0.28", "120.347, 149.031, 66.3889, 0.83", "121.922, 150.109, 67.9846, 0.28", "123.24, 150.994, 69.3619, 0.55", "125.399, 152.353, 71.5292, 0.28", "126.536, 153.05, 72.6797, 0.83", "128.742, 154.433, 74.7339, 0.28", "129.825, 155.083, 75.6148, 1.11", "133.366, 157.222, 78.2206, 0.28", "134.693, 157.987, 79.0756, 0.28", "137.611, 159.642, 80.785, 0.83", "141.73, 162.124, 83.0581, 0.28", "144.126, 164.143, 84.6885, 0.83", "145.769, 166.095, 86.2002, 0.28", "146.388, 167.139, 86.9856, 0.83", "147.37, 169.555, 88.8866, 0.28", "147.641, 170.719, 89.8772, 0.83", "148.289, 178.806, 97.4549, 0.28", "148.257, 180.407, 99.058, 0.55", "148.184, 181.243, 99.9796, 0.83", "147.864, 183.193, 102.359, 0.28", "147.535, 184.854, 104.499, 0.83", "146.979, 187.397, 108.015, 0.28", "146.597, 189.182, 110.808, 0.83", "145.716, 192.702, 116.397, 0.28", "144.775, 195.879, 121.509, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "73.2684, 106.116, 35.395, 0.28", "75.2532, 104.741, 36.7449, 0.28", "76.04, 104.203, 37.3183, 0.55", "81.3783, 100.716, 41.6215, 0.28", "82.8971, 99.7943, 42.9803, 1.11", "84.5249, 98.8642, 44.5431, 0.28", "85.0575, 98.5748, 45.0925, 0.55", "86.4051, 97.9475, 46.702, 0.28", "88.1306, 97.1938, 48.9276, 1.66", "89.8468, 96.549, 51.477, 0.28", "90.3029, 96.3975, 52.1229, 0.83", "91.5572, 96.008, 53.9171, 0.28", "92.2593, 95.7736, 54.8768, 0.83", "96.1671, 94.3192, 59.9997, 0.28", "97.5533, 93.7905, 61.8124, 1.11", "100.192, 92.8076, 65.324, 0.28", "101.006, 92.5124, 66.457, 0.83", "102.866, 91.885, 69.1655, 0.28", "103.304, 91.7583, 69.8407, 0.83", "104.747, 91.3945, 72.117, 0.28", "105.636, 91.1613, 73.4996, 0.83", "106.78, 90.9, 75.3097, 0.28", "107.373, 90.8227, 76.2062, 0.83", "113.196, 90.5513, 84.9081, 0.28", "114.073, 90.5588, 86.1621, 0.55", "115.578, 90.6519, 88.2109, 0.28", "117.085, 90.766, 90.1927, 1.11", "120.735, 91.2155, 94.8432, 0.28", "121.566, 91.3908, 95.9131, 0.83", "122.32, 91.7747, 96.9004, 0.28", "122.94, 92.1542, 97.745, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "46.8242, 177.007, 6.12321, 0.55", "47.0259, 177.811, 6.43355, 0.55", "47.7811, 180.559, 7.46077, 0.83", "48.5296, 183.252, 8.46984, 0.55", "49.1719, 186.315, 9.58221, 0.83", "49.5163, 188.171, 10.1799, 0.55", "50.0038, 191.006, 11.0499, 0.83", "50.2839, 192.537, 11.5009, 0.55", "50.701, 194.641, 12.065, 1.11", "51.3353, 198.427, 12.5093, 1.11", "51.5931, 201.112, 12.4393, 0.55", "51.6273, 201.9, 12.3353, 0.83", "51.6511, 203.183, 11.9772, 0.55", "51.6104, 205.364, 11.1971, 0.83", "51.2331, 212.466, 8.01637, 0.55", "50.9523, 215.996, 6.20412, 0.55", "50.7343, 217.746, 5.26294, 0.83", "50.097, 221.921, 2.94593, 0.55", "49.7745, 223.65, 1.96564, 0.83", "49.3586, 225.686, 0.853254, 0.28", "49.2911, 226.073, 0.744376, 0.55", "49.2188, 226.959, 0.587014, 0.28", "49.1945, 227.813, 0.522234, 0.55", "49.2434, 229.496, 0.59141, 0.28", "49.3389, 231.302, 0.666975, 0.83", "49.6615, 236.866, 0.982308, 0.28", "49.7734, 238.562, 1.07169, 0.83", "49.8783, 240.187, 1.1551, 0.28", "49.9465, 241.088, 1.19878, 0.55", "50.1923, 243.709, 1.34537, 0.28", "50.3306, 244.869, 1.39939, 0.55", "51.0924, 250.41, 1.78042, 0.28", "51.2121, 251.251, 1.88186, 0.28", "51.6172, 254.167, 2.35835, 0.83", "51.9695, 256.873, 2.88014, 1.11", "52.2841, 259.244, 3.41568, 1.66", "52.7292, 263.346, 4.36753, 1.38", "52.9426, 265.848, 4.98101, 1.11", "53.1048, 268.236, 5.55876, 1.38", "53.3938, 275.548, 7.23529, 0.28", "53.4042, 276.751, 7.49474, 0.55", "53.398, 279.37, 7.97935, 0.28", "53.3873, 280.482, 8.12523, 0.55", "53.3058, 284.191, 8.52483, 0.28", "53.1883, 287.927, 8.70853, 0.83", "52.9576, 292.989, 8.71462, 0.28", "52.77, 295.875, 8.5167, 1.11", "52.5404, 298.751, 8.15692, 0.28", "52.3511, 300.3, 7.74193, 0.83", "51.836, 303.538, 6.43484, 0.28", "51.7223, 304.159, 6.11962, 0.83", "50.9591, 307.666, 3.88842, 0.28", "50.7171, 308.597, 3.24097, 1.11", "49.167, 314.196, -1.01112, 0.28", "48.7895, 315.49, -2.07913, 0.83", "46.8224, 325.407, -4.00091, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "46.8242, 177.007, 6.12321, 0.83", "47.7329, 180.196, 5.50232, 0.83", "48.4259, 183.516, 4.52237, 0.83", "48.8669, 185.629, 3.89885, 0.55", "49.1978, 187.214, 3.43093, 0.55", "49.8533, 190.355, 2.50405, 0.55", "50.3433, 192.702, 1.8112, 0.83", "50.7907, 196.085, 0.265403, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "37.0702, 147.822, -45.1961, 0.28", "33.5629, 152.108, -52.1336, 0.28", "29.2139, 157.682, -57.5858, 0.28", "24.3467, 164.133, -61.5032, 0.28", "17.7511, 168.883, -65.13, 0.28", "9.88502, 172.62, -66.8455, 0.28", "2.15161, 175.967, -69.5905, 0.28", "-5.4311, 180.053, -71.7682, 0.28" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "37.0702, 147.822, -45.1961, 1.11", "37.4852, 151.057, -52.1861, 0.28", "39.0845, 154.39, -58.961, 0.28", "41.2673, 156.781, -65.9432, 0.28" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "136.217, 161.639, -10.8669, 0.28", "143.993, 168.12, -12.0164, 0.28", "152.11, 174.218, -11.9145, 0.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "136.217, 161.639, -10.8669, 0.28", "143.461, 167.788, -12.1377, 0.28", "150.992, 173.576, -13.2624, 0.28", "157.732, 180.109, -15.3623, 0.28", "164.418, 186.165, -18.6371, 0.28", "171.59, 192.121, -20.8562, 0.28", "177.994, 199.066, -22.7946, 0.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "50.7907, 196.085, 0.265403, 0.55", "52.43, 198.748, -2.02763, 0.55", "53.3018, 200.022, -2.95598, 0.55", "56.3903, 203.99, -5.77425, 0.55", "58.0849, 205.921, -7.30879, 0.55", "59.8954, 207.837, -8.88871, 0.28", "62.3503, 210.332, -10.9015, 0.28", "64.2493, 212.101, -12.294, 0.83", "66.0658, 213.656, -13.48, 0.83", "69.3863, 216.196, -15.2025, 0.28", "70.4721, 216.923, -15.8978, 0.55", "71.9904, 217.915, -17.0664, 0.55", "73.1516, 218.647, -18.0891, 0.55", "74.4392, 219.48, -19.3201, 0.55", "76.2395, 220.689, -21.0807, 0.55", "80.7397, 223.706, -25.5719, 0.55", "81.8002, 224.403, -26.7225, 0.55", "84.4101, 226.062, -29.795, 0.28", "85.9078, 227.019, -31.6364, 0.83", "92.725, 231.59, -35.6117, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "50.7907, 196.085, 0.265403, 0.28", "49.5103, 198.062, 0.195414, 0.28", "48.5542, 199.561, 0.0751614, 0.55", "46.9218, 202.144, -0.139131, 0.28", "45.2522, 204.88, -0.443838, 0.83", "43.9928, 207.048, -0.736933, 0.28", "42.9832, 208.88, -1.02869, 0.55", "42.3779, 210.012, -1.25129, 0.28", "42.1354, 210.551, -1.39671, 0.83", "41.3429, 212.323, -2.00389, 0.28", "41.0476, 213.041, -2.22874, 0.55", "40.5086, 214.357, -2.61002, 0.28", "40.2657, 214.94, -2.76131, 0.55", "38.6274, 218.636, -3.74706, 0.28", "37.6726, 220.699, -4.29676, 0.55", "36.6228, 222.801, -4.79236, 0.28", "35.9811, 223.995, -5.05748, 0.55", "31.7992, 234.419, -8.35296, 0.55", "27.7935, 245.063, -11.2032, 0.55", "24.4289, 256.349, -11.7187, 0.55", "21.7255, 267.631, -13.7612, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.4311, 180.053, -71.7682, 0.28", "-14.8635, 187.385, -76.8834, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.4311, 180.053, -71.7682, 0.28", "-11.2776, 184.423, -77.5261, 0.28", "-15.5808, 190.673, -83.0331, 0.28", "-19.0409, 197.174, -88.8497, 0.28", "-23.676, 203.887, -93.5393, 0.28", "-29.2469, 210.288, -97.5861, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "152.11, 174.218, -11.9145, 0.28", "158.956, 181.884, -20.3682, 0.28", "166.866, 190.073, -27.3314, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "152.11, 174.218, -11.9145, 0.28", "158.373, 179.208, -9.82656, 0.28", "164.545, 183.73, -6.74476, 0.28", "171.167, 186.778, -3.02972, 0.28", "178.42, 187.894, 0.471229, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_52", "dend_35", "dend_0", "dend_62", "dend_53", "dend_37", "dend_36", "dend_2", "dend_1", "dend_64", "dend_63", "dend_61", "dend_54", "dend_45", "dend_38", "dend_22", "dend_3", "dend_60", "dend_55", "dend_49", "dend_46", "dend_40", "dend_39", "dend_30", "dend_23", "dend_11", "dend_4", "dend_59", "dend_56", "dend_51", "dend_50", "dend_48", "dend_47", "dend_44", "dend_41", "dend_34", "dend_31", "dend_27", "dend_24", "dend_17", "dend_12", "dend_10", "dend_5", "dend_58", "dend_57", "dend_43", "dend_42", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_18", "dend_14", "dend_13", "dend_7", "dend_6", "dend_20", "dend_19", "dend_16", "dend_15", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_52", "dend_35", "dend_0", "dend_62", "dend_53", "dend_37", "dend_36", "dend_2", "dend_1", "dend_64", "dend_63", "dend_61", "dend_54", "dend_45", "dend_38", "dend_22", "dend_3", "dend_60", "dend_55", "dend_49", "dend_46", "dend_40", "dend_39", "dend_30", "dend_23", "dend_11", "dend_4", "dend_59", "dend_56", "dend_51", "dend_50", "dend_48", "dend_47", "dend_44", "dend_41", "dend_34", "dend_31", "dend_27", "dend_24", "dend_17", "dend_12", "dend_10", "dend_5", "dend_58", "dend_57", "dend_43", "dend_42", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_18", "dend_14", "dend_13", "dend_7", "dend_6", "dend_20", "dend_19", "dend_16", "dend_15", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_52", "dend_52", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_53", "dend_53", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_38", "dend_38", "dend_22", "dend_22", "dend_22", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_NBC_8d74f99eef_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_45, id: dend_45, parent: dend_37
create dend_45
public dend_45
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_22, id: dend_22, parent: dend_2
create dend_22
public dend_22
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_54
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_35, dend_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_35, dend_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_68
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_35, dend_35, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_53, dend_53, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_22, dend_22, dend_22, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_52(0), soma_0(0.45000037708019813)
    connect dend_35(0), soma_0(0.45000037708019813)
    connect dend_0(0), soma_0(0.45000037708019813)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_45(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_22(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.91165, -15.504, 0.0, 2.36095 ) }
    soma_0 { pt3dadd( 1.69225, -14.164, 0.0, 3.77272 ) }
    soma_0 { pt3dadd( 1.47285, -12.824, 0.0, 5.64735 ) }
    soma_0 { pt3dadd( 1.25345, -11.484, 0.0, 7.11092 ) }
    soma_0 { pt3dadd( 1.03406, -10.144, 0.0, 8.31603 ) }
    soma_0 { pt3dadd( 0.814659, -8.80403, 0.0, 9.51462 ) }
    soma_0 { pt3dadd( 0.595262, -7.46404, 0.0, 10.3186 ) }
    soma_0 { pt3dadd( 0.375865, -6.12406, 0.0, 10.9463 ) }
    soma_0 { pt3dadd( 0.156467, -4.78407, 0.0, 11.2263 ) }
    soma_0 { pt3dadd( -0.0629298, -3.44408, 0.0, 11.5062 ) }
    soma_0 { pt3dadd( -0.282327, -2.1041, 0.0, 11.5148 ) }
    soma_0 { pt3dadd( -0.501724, -0.76411, 0.0, 11.4563 ) }
    soma_0 { pt3dadd( -0.721122, 0.575877, 0.0, 12.0569 ) }
    soma_0 { pt3dadd( -0.940519, 1.91586, 0.0, 12.3516 ) }
    soma_0 { pt3dadd( -1.15992, 3.25585, 0.0, 11.8398 ) }
    soma_0 { pt3dadd( -1.37931, 4.59584, 0.0, 10.9681 ) }
    soma_0 { pt3dadd( -1.59871, 5.93582, 0.0, 9.93554 ) }
    soma_0 { pt3dadd( -1.81811, 7.27581, 0.0, 8.23546 ) }
    soma_0 { pt3dadd( -2.03751, 8.6158, 0.0, 6.93545 ) }
    soma_0 { pt3dadd( -2.2569, 9.95578, 0.0, 5.0025 ) }
    soma_0 { pt3dadd( -2.4763, 11.2958, 0.0, 3.14572 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 21/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 2.49262, -16.9948, -20.89, 1.66 ) }
    dend_52 { pt3dadd( 3.27327, -23.1198, -22.2966, 1.66 ) }
    dend_52 { pt3dadd( 3.9306, -28.2774, -23.4811, 1.66 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -8.31738, 2.19923, -1.78, 2.49 ) }
    dend_35 { pt3dadd( -10.0979, 2.79293, -1.6067, 2.49 ) }
    dend_35 { pt3dadd( -14.8583, 4.38025, -1.14338, 2.49 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.21262, 11.7962, 2.62, 1.94 ) }
    dend_0 { pt3dadd( 5.83562, 15.3442, 3.0047, 1.94 ) }
    dend_0 { pt3dadd( 9.09849, 18.5395, 3.35115, 1.66 ) }
    dend_0 { pt3dadd( 11.7313, 21.1178, 3.63071, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.4763, 11.2958, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -4.89999, 26.0987, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -7.32368, 40.9016, 0.0, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 34/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 3.9306, -28.2774, -23.4811, 1.66 ) }
    dend_62 { pt3dadd( 6.38608, -30.3242, -15.7392, 1.66 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 36/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 3.9306, -28.2774, -23.4811, 0.83 ) }
    dend_53 { pt3dadd( 6.13111, -30.9975, -27.6505, 0.83 ) }
    dend_53 { pt3dadd( 6.86869, -31.9092, -29.0481, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 39/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -14.8583, 4.38025, -1.14338, 1.66 ) }
    dend_37 { pt3dadd( -17.1525, 6.29138, 0.908145, 1.66 ) }
    dend_37 { pt3dadd( -20.4104, 9.00546, 3.82161, 1.38 ) }
    dend_37 { pt3dadd( -22.8479, 11.0361, 6.00136, 1.38 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 43/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -14.8583, 4.38025, -1.14338, 0.83 ) }
    dend_36 { pt3dadd( -22.2431, 6.31203, -8.69065, 0.83 ) }
    dend_36 { pt3dadd( -24.7435, 6.92742, -10.946, 0.83 ) }
    dend_36 { pt3dadd( -28.2352, 7.75546, -13.702, 0.83 ) }
    dend_36 { pt3dadd( -30.5717, 8.29195, -15.323, 0.83 ) }
    dend_36 { pt3dadd( -32.5359, 8.72398, -16.5098, 0.83 ) }
    dend_36 { pt3dadd( -34.054, 9.08297, -17.3234, 0.83 ) }
    dend_36 { pt3dadd( -35.5811, 9.43018, -17.6955, 0.55 ) }
    dend_36 { pt3dadd( -37.1803, 9.86178, -17.9493, 0.83 ) }
    dend_36 { pt3dadd( -38.8581, 10.4316, -18.0626, 0.55 ) }
    dend_36 { pt3dadd( -40.5544, 11.06, -18.2137, 0.83 ) }
    dend_36 { pt3dadd( -43.4189, 12.1743, -18.4994, 0.55 ) }
    dend_36 { pt3dadd( -46.2605, 13.2936, -18.6692, 0.83 ) }
    dend_36 { pt3dadd( -48.8583, 14.3183, -18.721, 0.83 ) }
    dend_36 { pt3dadd( -51.2709, 15.2238, -18.675, 0.55 ) }
    dend_36 { pt3dadd( -55.4818, 16.6329, -18.2777, 0.55 ) }
    dend_36 { pt3dadd( -56.6532, 16.9675, -18.0813, 0.55 ) }
    dend_36 { pt3dadd( -59.5649, 17.5642, -17.3449, 0.83 ) }
    dend_36 { pt3dadd( -61.3583, 17.8667, -16.8189, 0.55 ) }
    dend_36 { pt3dadd( -64.0754, 18.1681, -16.0455, 0.83 ) }
    dend_36 { pt3dadd( -66.5515, 18.4062, -15.3779, 0.55 ) }
    dend_36 { pt3dadd( -69.2709, 18.6997, -14.7453, 1.11 ) }
    dend_36 { pt3dadd( -74.4903, 19.5393, -14.2713, 0.55 ) }
    dend_36 { pt3dadd( -77.2938, 20.1661, -14.39, 0.55 ) }
    dend_36 { pt3dadd( -79.6954, 20.7742, -14.7215, 0.55 ) }
    dend_36 { pt3dadd( -82.8169, 21.8245, -15.7237, 0.55 ) }
    dend_36 { pt3dadd( -84.9242, 22.6706, -16.7025, 0.55 ) }
    dend_36 { pt3dadd( -89.8369, 24.8483, -19.4439, 0.55 ) }
    dend_36 { pt3dadd( -92.0802, 25.9378, -20.7175, 0.83 ) }
    dend_36 { pt3dadd( -93.8306, 26.7874, -21.5616, 0.83 ) }
    dend_36 { pt3dadd( -99.1886, 29.4287, -23.4869, 0.28 ) }
    dend_36 { pt3dadd( -101.077, 30.2998, -23.9104, 0.55 ) }
    dend_36 { pt3dadd( -104.342, 31.7747, -24.2806, 0.55 ) }
    dend_36 { pt3dadd( -108.033, 33.3415, -24.1715, 0.28 ) }
    dend_36 { pt3dadd( -110.373, 34.394, -23.9327, 0.55 ) }
    dend_36 { pt3dadd( -112.414, 35.3565, -23.5571, 0.28 ) }
    dend_36 { pt3dadd( -113.516, 35.8923, -23.3253, 0.83 ) }
    dend_36 { pt3dadd( -115.81, 37.1242, -22.9801, 0.28 ) }
    dend_36 { pt3dadd( -116.587, 37.5426, -22.9232, 0.83 ) }
    dend_36 { pt3dadd( -119.967, 39.2958, -22.9272, 0.28 ) }
    dend_36 { pt3dadd( -122.453, 40.4542, -23.1627, 0.83 ) }
    dend_36 { pt3dadd( -126.425, 42.0575, -23.7169, 0.28 ) }
    dend_36 { pt3dadd( -128.554, 42.8214, -24.0692, 0.55 ) }
    dend_36 { pt3dadd( -133.597, 44.5012, -24.9578, 0.28 ) }
    dend_36 { pt3dadd( -135.962, 45.1259, -25.3762, 0.55 ) }
    dend_36 { pt3dadd( -143.249, 46.6106, -26.6205, 0.28 ) }
    dend_36 { pt3dadd( -146.932, 47.1644, -27.2395, 0.55 ) }
    dend_36 { pt3dadd( -150.113, 47.5057, -27.7338, 0.28 ) }
    dend_36 { pt3dadd( -153.053, 47.7217, -28.2248, 0.55 ) }
    dend_36 { pt3dadd( -163.357, 48.1196, -29.8054, 0.28 ) }
    dend_36 { pt3dadd( -165.504, 48.1145, -30.0601, 0.83 ) }
    dend_36 { pt3dadd( -169.147, 47.9494, -30.3633, 0.28 ) }
    dend_36 { pt3dadd( -169.914, 47.8755, -30.392, 0.55 ) }
    dend_36 { pt3dadd( -172.374, 47.6212, -30.3767, 0.28 ) }
    dend_36 { pt3dadd( -174.46, 47.4153, -30.296, 0.83 ) }
    dend_36 { pt3dadd( -179.673, 47.2414, -29.8628, 0.28 ) }
    dend_36 { pt3dadd( -182.421, 47.2815, -29.5456, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_36 { pt3dadd( -191.093, 48.1824, -28.6242, 0.28 ) }
    dend_36 { pt3dadd( -197.474, 49.2981, -27.9676, 0.28 ) }
    dend_36 { pt3dadd( -198.744, 49.618, -27.836, 0.83 ) }
    dend_36 { pt3dadd( -203.442, 51.1722, -27.6542, 0.28 ) }
    dend_36 { pt3dadd( -205.536, 52.052, -27.6325, 0.83 ) }
    dend_36 { pt3dadd( -211.493, 55.2385, -28.3415, 0.28 ) }
    dend_36 { pt3dadd( -213.089, 56.2813, -28.7996, 0.55 ) }
    dend_36 { pt3dadd( -214.34, 57.1254, -29.2721, 0.55 ) }
    dend_36 { pt3dadd( -219.721, 60.6295, -31.6621, 0.28 ) }
    dend_36 { pt3dadd( -221.708, 61.8185, -32.7743, 0.55 ) }
    dend_36 { pt3dadd( -227.049, 64.7621, -36.1102, 0.28 ) }
    dend_36 { pt3dadd( -229.735, 65.8101, -37.7129, 0.55 ) }
    dend_36 { pt3dadd( -239.622, 68.1627, -40.1981, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 13/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 11.7313, 21.1178, 3.63071, 1.38 ) }
    dend_2 { pt3dadd( 13.9409, 23.0476, 3.52861, 1.38 ) }
    dend_2 { pt3dadd( 15.8748, 24.7366, 3.43925, 1.11 ) }
    dend_2 { pt3dadd( 17.6055, 26.2482, 3.35929, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 17/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 11.7313, 21.1178, 3.63071, 0.83 ) }
    dend_1 { pt3dadd( 21.5803, 24.6399, 3.96408, 0.83 ) }
    dend_1 { pt3dadd( 28.8241, 27.4138, 5.14555, 0.83 ) }
    dend_1 { pt3dadd( 32.1218, 28.7614, 6.04149, 0.83 ) }
    dend_1 { pt3dadd( 36.1, 30.5257, 7.39936, 0.83 ) }
    dend_1 { pt3dadd( 40.4334, 32.5538, 9.1161, 0.83 ) }
    dend_1 { pt3dadd( 46.6251, 35.5182, 11.8341, 1.11 ) }
    dend_1 { pt3dadd( 49.9126, 37.154, 13.8202, 0.83 ) }
    dend_1 { pt3dadd( 53.0566, 38.8452, 15.8827, 1.11 ) }
    dend_1 { pt3dadd( 55.0608, 39.9801, 17.228, 0.55 ) }
    dend_1 { pt3dadd( 56.9857, 41.026, 18.5611, 0.83 ) }
    dend_1 { pt3dadd( 60.1058, 42.6121, 20.7416, 0.28 ) }
    dend_1 { pt3dadd( 62.2106, 43.5005, 22.1708, 0.55 ) }
    dend_1 { pt3dadd( 64.7268, 44.3199, 23.7621, 0.28 ) }
    dend_1 { pt3dadd( 71.4021, 46.0475, 27.8307, 0.55 ) }
    dend_1 { pt3dadd( 74.1783, 46.6155, 29.4723, 0.83 ) }
    dend_1 { pt3dadd( 77.8935, 47.2368, 31.7066, 0.55 ) }
    dend_1 { pt3dadd( 80.4087, 47.5555, 33.3343, 0.83 ) }
    dend_1 { pt3dadd( 84.8093, 47.9067, 36.5328, 0.55 ) }
    dend_1 { pt3dadd( 89.1739, 48.1061, 39.8565, 0.83 ) }
    dend_1 { pt3dadd( 93.0481, 47.991, 43.0457, 0.55 ) }
    dend_1 { pt3dadd( 96.0571, 47.7618, 45.6121, 0.55 ) }
    dend_1 { pt3dadd( 99.5768, 47.3494, 48.6404, 0.83 ) }
    dend_1 { pt3dadd( 104.397, 46.609, 52.725, 0.55 ) }
    dend_1 { pt3dadd( 106.654, 46.1795, 54.6156, 1.38 ) }
    dend_1 { pt3dadd( 115.63, 44.3763, 61.6873, 0.55 ) }
    dend_1 { pt3dadd( 118.146, 43.9062, 63.502, 0.55 ) }
    dend_1 { pt3dadd( 120.832, 43.4762, 65.0995, 1.11 ) }
    dend_1 { pt3dadd( 126.37, 42.731, 67.6068, 0.28 ) }
    dend_1 { pt3dadd( 127.742, 42.5237, 68.0486, 0.83 ) }
    dend_1 { pt3dadd( 130.893, 41.9391, 68.8121, 0.28 ) }
    dend_1 { pt3dadd( 132.796, 41.5277, 69.0029, 1.11 ) }
    dend_1 { pt3dadd( 135.23, 40.7512, 69.24, 0.28 ) }
    dend_1 { pt3dadd( 136.84, 40.0405, 69.4338, 0.83 ) }
    dend_1 { pt3dadd( 142.581, 36.8068, 70.1155, 0.28 ) }
    dend_1 { pt3dadd( 145.432, 34.9462, 70.6438, 0.28 ) }
    dend_1 { pt3dadd( 147.241, 33.5907, 71.141, 1.11 ) }
    dend_1 { pt3dadd( 148.764, 32.4305, 71.7776, 1.11 ) }
    dend_1 { pt3dadd( 150.984, 30.8341, 72.9468, 0.28 ) }
    dend_1 { pt3dadd( 152.321, 29.9943, 73.741, 0.83 ) }
    dend_1 { pt3dadd( 155.58, 28.297, 75.6729, 0.28 ) }
    dend_1 { pt3dadd( 158.396, 27.133, 77.345, 0.83 ) }
    dend_1 { pt3dadd( 163.524, 25.3656, 80.4046, 0.28 ) }
    dend_1 { pt3dadd( 166.514, 24.5098, 82.0808, 1.11 ) }
    dend_1 { pt3dadd( 170.689, 23.5285, 84.2881, 0.28 ) }
    dend_1 { pt3dadd( 173.356, 23.0232, 85.6664, 0.83 ) }
    dend_1 { pt3dadd( 180.653, 22.0054, 89.1533, 0.28 ) }
    dend_1 { pt3dadd( 181.306, 21.9343, 89.4467, 0.83 ) }
    dend_1 { pt3dadd( 185.849, 21.5046, 91.2315, 0.55 ) }
    dend_1 { pt3dadd( 189.818, 21.1083, 92.6882, 0.28 ) }
    dend_1 { pt3dadd( 193.75, 20.6714, 94.038, 1.38 ) }
    dend_1 { pt3dadd( 196.737, 20.2769, 95.0198, 0.83 ) }
    dend_1 { pt3dadd( 204.326, 19.1455, 97.1243, 0.28 ) }
    dend_1 { pt3dadd( 208.199, 18.5426, 98.1789, 1.11 ) }
    dend_1 { pt3dadd( 213.552, 17.6777, 99.5751, 0.28 ) }
    dend_1 { pt3dadd( 214.955, 17.443, 99.9358, 1.11 ) }
    dend_1 { pt3dadd( 218.599, 16.883, 100.698, 0.28 ) }
    dend_1 { pt3dadd( 220.984, 16.583, 101.234, 1.11 ) }
    dend_1 { pt3dadd( 226.243, 16.1953, 102.635, 0.28 ) }
    dend_1 { pt3dadd( 227.24, 16.181, 102.981, 0.55 ) }
    dend_1 { pt3dadd( 231.731, 16.4784, 104.674, 0.28 ) }
    dend_1 { pt3dadd( 236.646, 17.2271, 106.843, 0.83 ) }
    dend_1 { pt3dadd( 240.327, 18.1529, 108.647, 0.28 ) }
    dend_1 { pt3dadd( 243.404, 19.1174, 110.535, 0.83 ) }
    dend_1 { pt3dadd( 247.799, 20.6425, 113.884, 0.28 ) }
    dend_1 { pt3dadd( 249.649, 21.3229, 115.409, 0.55 ) }
    dend_1 { pt3dadd( 254.335, 23.1863, 119.709, 0.28 ) }
    dend_1 { pt3dadd( 256.142, 23.9066, 121.574, 0.55 ) }
    dend_1 { pt3dadd( 261.075, 25.9594, 126.804, 0.28 ) }
    dend_1 { pt3dadd( 263.901, 27.1337, 129.854, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 87/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.32368, 40.9016, 0.0, 0.55 ) }
    axon_1 { pt3dadd( -9.74737, 55.7045, 0.0, 0.55 ) }
    axon_1 { pt3dadd( -12.1711, 70.5074, 0.0, 0.55 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 90/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 6.38608, -30.3242, -15.7392, 0.55 ) }
    dend_64 { pt3dadd( 6.38499, -30.409, -15.7337, 0.55 ) }
    dend_64 { pt3dadd( 6.46355, -34.3925, -15.336, 0.55 ) }
    dend_64 { pt3dadd( 6.79145, -38.9678, -14.6536, 0.55 ) }
    dend_64 { pt3dadd( 7.02938, -41.2985, -14.2407, 0.55 ) }
    dend_64 { pt3dadd( 7.1677, -42.6696, -13.9384, 0.55 ) }
    dend_64 { pt3dadd( 7.3946, -45.0131, -13.436, 0.55 ) }
    dend_64 { pt3dadd( 7.85007, -49.159, -12.3662, 0.55 ) }
    dend_64 { pt3dadd( 8.3306, -53.177, -11.5407, 0.55 ) }
    dend_64 { pt3dadd( 8.51086, -54.6181, -11.3461, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_64 { pt3dadd( 9.14292, -59.4663, -10.9885, 0.55 ) }
    dend_64 { pt3dadd( 9.5003, -62.2708, -10.9197, 0.55 ) }
    dend_64 { pt3dadd( 9.81623, -65.1165, -11.0068, 0.55 ) }
    dend_64 { pt3dadd( 10.5995, -73.3423, -11.9138, 0.28 ) }
    dend_64 { pt3dadd( 10.7249, -75.0022, -12.2111, 0.55 ) }
    dend_64 { pt3dadd( 10.7985, -76.0617, -12.415, 0.55 ) }
    dend_64 { pt3dadd( 10.9283, -77.9166, -12.8079, 0.28 ) }
    dend_64 { pt3dadd( 10.9443, -78.2808, -12.8549, 0.55 ) }
    dend_64 { pt3dadd( 10.9352, -80.3689, -13.159, 0.28 ) }
    dend_64 { pt3dadd( 10.8974, -82.1968, -13.2597, 0.55 ) }
    dend_64 { pt3dadd( 10.8746, -85.4726, -13.474, 0.28 ) }
    dend_64 { pt3dadd( 10.9442, -88.275, -13.613, 0.55 ) }
    dend_64 { pt3dadd( 11.1353, -91.013, -13.7158, 0.28 ) }
    dend_64 { pt3dadd( 11.5878, -95.3679, -13.7736, 0.83 ) }
    dend_64 { pt3dadd( 12.0736, -98.933, -13.78, 0.55 ) }
    dend_64 { pt3dadd( 12.3924, -100.862, -13.7611, 0.83 ) }
    dend_64 { pt3dadd( 12.7907, -102.979, -13.6634, 0.28 ) }
    dend_64 { pt3dadd( 13.3466, -105.551, -13.4002, 0.83 ) }
    dend_64 { pt3dadd( 14.0414, -108.39, -12.9213, 0.28 ) }
    dend_64 { pt3dadd( 14.3942, -109.742, -12.5494, 0.83 ) }
    dend_64 { pt3dadd( 15.2349, -113.138, -11.5244, 0.28 ) }
    dend_64 { pt3dadd( 15.7362, -115.375, -10.8681, 0.83 ) }
    dend_64 { pt3dadd( 16.3241, -118.087, -10.04, 0.28 ) }
    dend_64 { pt3dadd( 17.0115, -121.178, -9.05331, 0.83 ) }
    dend_64 { pt3dadd( 18.4838, -127.667, -6.84449, 0.28 ) }
    dend_64 { pt3dadd( 19.238, -130.623, -5.77703, 0.83 ) }
    dend_64 { pt3dadd( 20.7399, -136.062, -3.78522, 0.28 ) }
    dend_64 { pt3dadd( 21.5615, -139.073, -2.7413, 0.83 ) }
    dend_64 { pt3dadd( 22.6356, -143.127, -1.35302, 0.28 ) }
    dend_64 { pt3dadd( 23.2145, -145.223, -0.702065, 0.83 ) }
    dend_64 { pt3dadd( 26.6278, -156.724, 2.44791, 0.28 ) }
    dend_64 { pt3dadd( 27.5911, -159.756, 3.20175, 0.83 ) }
    dend_64 { pt3dadd( 30.4052, -168.147, 5.13026, 0.28 ) }
    dend_64 { pt3dadd( 31.1949, -170.472, 5.61075, 0.83 ) }
    dend_64 { pt3dadd( 32.8416, -175.28, 6.47238, 0.28 ) }
    dend_64 { pt3dadd( 33.9097, -178.38, 6.89239, 0.83 ) }
    dend_64 { pt3dadd( 35.5761, -183.3, 7.1468, 0.28 ) }
    dend_64 { pt3dadd( 35.9848, -184.393, 7.15431, 0.83 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 38/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 6.38608, -30.3242, -15.7392, 0.55 ) }
    dend_63 { pt3dadd( 6.88974, -36.1977, -18.4197, 0.55 ) }
    dend_63 { pt3dadd( 7.16521, -39.0277, -19.5182, 0.55 ) }
    dend_63 { pt3dadd( 7.33009, -40.3402, -19.9369, 0.55 ) }
    dend_63 { pt3dadd( 7.72739, -42.9058, -20.4542, 0.55 ) }
    dend_63 { pt3dadd( 8.1194, -45.0864, -20.601, 0.55 ) }
    dend_63 { pt3dadd( 8.56019, -47.1367, -20.4745, 0.55 ) }
    dend_63 { pt3dadd( 8.94991, -48.4018, -19.9932, 0.28 ) }
    dend_63 { pt3dadd( 9.66596, -50.1263, -18.9875, 0.55 ) }
    dend_63 { pt3dadd( 10.8746, -52.6262, -17.1651, 0.55 ) }
    dend_63 { pt3dadd( 11.9704, -54.8021, -15.5406, 0.55 ) }
    dend_63 { pt3dadd( 12.8307, -56.3951, -14.276, 0.28 ) }
    dend_63 { pt3dadd( 13.5039, -57.6419, -13.1953, 0.55 ) }
    dend_63 { pt3dadd( 15.2527, -60.8934, -10.2871, 0.28 ) }
    dend_63 { pt3dadd( 16.5762, -63.445, -7.93044, 0.83 ) }
    dend_63 { pt3dadd( 17.846, -65.9578, -5.5922, 0.28 ) }
    dend_63 { pt3dadd( 19.1621, -68.7682, -3.00693, 0.83 ) }
    dend_63 { pt3dadd( 20.2291, -71.2334, -0.655606, 0.28 ) }
    dend_63 { pt3dadd( 20.7226, -72.4324, 0.573915, 0.55 ) }
    dend_63 { pt3dadd( 21.5824, -74.5614, 2.99485, 0.28 ) }
    dend_63 { pt3dadd( 22.084, -75.6884, 4.47138, 0.83 ) }
    dend_63 { pt3dadd( 22.4054, -76.3313, 5.45097, 0.83 ) }
    dend_63 { pt3dadd( 23.8907, -79.1525, 9.70599, 0.28 ) }
    dend_63 { pt3dadd( 24.6504, -80.5484, 11.8156, 0.55 ) }
    dend_63 { pt3dadd( 25.4139, -81.9606, 13.9754, 0.28 ) }
    dend_63 { pt3dadd( 26.5802, -84.1768, 17.575, 0.83 ) }
    dend_63 { pt3dadd( 27.8781, -86.8086, 21.9439, 0.28 ) }
    dend_63 { pt3dadd( 28.2459, -87.7393, 23.3289, 0.83 ) }
    dend_63 { pt3dadd( 28.8951, -89.8947, 26.2249, 0.28 ) }
    dend_63 { pt3dadd( 29.2866, -91.6578, 28.2974, 0.83 ) }
    dend_63 { pt3dadd( 30.4372, -98.4372, 35.4756, 0.28 ) }
    dend_63 { pt3dadd( 30.5831, -99.6453, 36.6295, 0.83 ) }
    dend_63 { pt3dadd( 31.0395, -105.024, 41.3983, 0.28 ) }
    dend_63 { pt3dadd( 31.1403, -106.722, 42.8597, 0.55 ) }
    dend_63 { pt3dadd( 31.2646, -109.701, 45.2049, 0.28 ) }
    dend_63 { pt3dadd( 31.3171, -110.773, 45.9645, 0.83 ) }
    dend_63 { pt3dadd( 31.3972, -112.183, 46.8001, 0.28 ) }
    dend_63 { pt3dadd( 31.4692, -112.804, 47.2139, 0.55 ) }
    dend_63 { pt3dadd( 31.7506, -114.242, 48.3708, 0.28 ) }
    dend_63 { pt3dadd( 31.9069, -114.99, 48.9406, 0.83 ) }
    dend_63 { pt3dadd( 32.727, -118.737, 51.6308, 0.28 ) }
    dend_63 { pt3dadd( 32.8781, -119.462, 52.117, 0.83 ) }
    dend_63 { pt3dadd( 33.3969, -122.204, 53.885, 0.28 ) }
    dend_63 { pt3dadd( 33.6668, -123.791, 54.8626, 0.83 ) }
    dend_63 { pt3dadd( 33.9349, -125.496, 55.8653, 0.28 ) }
    dend_63 { pt3dadd( 34.1354, -127.078, 56.783, 0.55 ) }
    dend_63 { pt3dadd( 34.4124, -129.965, 58.3756, 0.28 ) }
    dend_63 { pt3dadd( 34.6042, -131.651, 59.3099, 0.83 ) }
    dend_63 { pt3dadd( 34.9138, -134.235, 60.6371, 0.28 ) }
    dend_63 { pt3dadd( 35.049, -135.199, 61.0909, 0.55 ) }
    dend_63 { pt3dadd( 35.3141, -136.89, 61.8467, 0.28 ) }
    dend_63 { pt3dadd( 35.5447, -138.194, 62.3605, 0.55 ) }
    dend_63 { pt3dadd( 36.4946, -142.884, 64.0738, 0.28 ) }
    dend_63 { pt3dadd( 36.9811, -144.993, 64.7925, 0.83 ) }
    dend_63 { pt3dadd( 37.3229, -146.374, 65.2214, 0.28 ) }
    dend_63 { pt3dadd( 37.5517, -147.243, 65.4657, 0.55 ) }
    dend_63 { pt3dadd( 38.0948, -149.168, 65.9249, 0.28 ) }
    dend_63 { pt3dadd( 38.6833, -151.234, 66.3252, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 96/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 6.86869, -31.9092, -29.0481, 0.83 ) }
    dend_61 { pt3dadd( 7.104, -33.9333, -27.1622, 0.83 ) }
    dend_61 { pt3dadd( 7.17662, -35.037, -25.7974, 0.28 ) }
    dend_61 { pt3dadd( 7.18121, -36.2801, -24.1215, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_61 { pt3dadd( 7.18595, -37.0093, -23.1065, 0.28 ) }
    dend_61 { pt3dadd( 7.16618, -39.0786, -19.8984, 0.83 ) }
    dend_61 { pt3dadd( 7.16946, -41.4196, -16.2592, 0.28 ) }
    dend_61 { pt3dadd( 7.13616, -43.9679, -11.278, 0.83 ) }
    dend_61 { pt3dadd( 7.08714, -45.9451, -6.71725, 0.28 ) }
    dend_61 { pt3dadd( 7.05165, -47.073, -3.99582, 0.83 ) }
    dend_61 { pt3dadd( 6.8704, -50.5193, 4.63335, 0.28 ) }
    dend_61 { pt3dadd( 6.83001, -51.1954, 6.39952, 0.55 ) }
    dend_61 { pt3dadd( 6.51335, -55.38, 18.3558, 0.28 ) }
    dend_61 { pt3dadd( 6.43305, -57.3488, 24.8203, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 10/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 6.86869, -31.9092, -29.0481, 0.83 ) }
    dend_54 { pt3dadd( 6.85225, -32.3152, -29.3025, 0.83 ) }
    dend_54 { pt3dadd( 6.83677, -35.3631, -31.6122, 0.83 ) }
    dend_54 { pt3dadd( 6.90069, -38.897, -34.2133, 1.11 ) }
    dend_54 { pt3dadd( 7.02606, -43.5311, -37.4701, 0.83 ) }
    dend_54 { pt3dadd( 7.13315, -47.4894, -40.2519, 0.83 ) }
    dend_54 { pt3dadd( 7.54834, -62.8358, -51.037, 0.55 ) }
    dend_54 { pt3dadd( 7.72418, -66.4051, -53.7845, 0.55 ) }
    dend_54 { pt3dadd( 7.98356, -69.3558, -56.4602, 0.55 ) }
    dend_54 { pt3dadd( 8.17517, -70.88, -58.124, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_37 (entry count 20/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -22.8479, 11.0361, 6.00136, 1.11 ) }
    dend_45 { pt3dadd( -29.2133, 16.1522, 5.43021, 1.11 ) }
    dend_45 { pt3dadd( -32.1917, 18.5462, 5.16296, 1.11 ) }
    dend_45 { pt3dadd( -34.7774, 20.6244, 4.93095, 0.83 ) }
    dend_45 { pt3dadd( -37.5562, 22.8579, 4.68161, 0.83 ) }
    dend_45 { pt3dadd( -39.8739, 24.7208, 4.47365, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 26/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -22.8479, 11.0361, 6.00136, 0.83 ) }
    dend_38 { pt3dadd( -25.5827, 12.7777, 6.34137, 0.83 ) }
    dend_38 { pt3dadd( -26.6231, 13.4402, 6.47073, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_2 (entry count 29/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 17.6055, 26.2482, 3.35929, 1.11 ) }
    dend_22 { pt3dadd( 22.1882, 30.4905, 2.25554, 1.11 ) }
    dend_22 { pt3dadd( 24.0662, 32.229, 1.80325, 1.11 ) }
    dend_22 { pt3dadd( 25.4939, 33.5506, 1.4594, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 17.6055, 26.2482, 3.35929, 1.11 ) }
    dend_3 { pt3dadd( 18.8708, 33.2799, 2.41963, 1.11 ) }
    dend_3 { pt3dadd( 19.6343, 36.0868, 2.23455, 0.83 ) }
    dend_3 { pt3dadd( 20.1405, 37.6174, 2.2245, 0.83 ) }
    dend_3 { pt3dadd( 21.1862, 40.4638, 2.21627, 0.83 ) }
    dend_3 { pt3dadd( 22.3027, 43.216, 2.23768, 0.83 ) }
    dend_3 { pt3dadd( 23.3467, 45.6175, 2.26205, 1.38 ) }
    dend_3 { pt3dadd( 25.1099, 49.3762, 2.52803, 1.38 ) }
    dend_3 { pt3dadd( 27.0719, 53.3041, 2.72177, 0.83 ) }
    dend_3 { pt3dadd( 28.2686, 55.6762, 2.80761, 0.83 ) }
    dend_3 { pt3dadd( 29.2743, 57.6791, 2.89207, 1.11 ) }
    dend_3 { pt3dadd( 30.1704, 59.5294, 2.94751, 0.83 ) }
    dend_3 { pt3dadd( 30.7049, 60.8034, 3.00552, 0.83 ) }
    dend_3 { pt3dadd( 31.5907, 63.2693, 3.31103, 1.38 ) }
    dend_3 { pt3dadd( 32.3803, 65.6069, 3.64446, 0.83 ) }
    dend_3 { pt3dadd( 33.2558, 68.4053, 4.11788, 1.38 ) }
    dend_3 { pt3dadd( 35.0726, 74.6994, 5.25011, 1.11 ) }
    dend_3 { pt3dadd( 35.8424, 77.4172, 5.8025, 1.38 ) }
    dend_3 { pt3dadd( 37.3388, 82.4412, 6.92848, 1.38 ) }
    // Section: dend_60, id: dend_60, parent: dend_54 (entry count 52/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 8.17517, -70.88, -58.124, 0.55 ) }
    dend_60 { pt3dadd( 5.93801, -72.4111, -59.0157, 0.55 ) }
    dend_60 { pt3dadd( 3.89077, -73.4979, -59.2798, 0.55 ) }
    dend_60 { pt3dadd( 2.80881, -74.0306, -59.3801, 0.55 ) }
    dend_60 { pt3dadd( 1.49299, -74.6999, -59.5202, 0.55 ) }
    dend_60 { pt3dadd( -1.84819, -76.4987, -59.7269, 0.55 ) }
    dend_60 { pt3dadd( -6.64289, -78.9957, -60.0884, 0.55 ) }
    dend_60 { pt3dadd( -12.0903, -82.0678, -60.6287, 0.55 ) }
    dend_60 { pt3dadd( -15.0936, -83.8674, -61.1885, 0.55 ) }
    dend_60 { pt3dadd( -18.1707, -85.8152, -62.0218, 0.55 ) }
    dend_60 { pt3dadd( -23.4379, -89.1404, -63.632, 0.55 ) }
    dend_60 { pt3dadd( -28.1454, -92.2317, -65.2356, 0.55 ) }
    dend_60 { pt3dadd( -31.9433, -95.0064, -66.7244, 0.55 ) }
    dend_60 { pt3dadd( -36.6283, -98.532, -68.7782, 0.55 ) }
    dend_60 { pt3dadd( -41.6911, -102.339, -70.8821, 0.55 ) }
    dend_60 { pt3dadd( -44.1337, -104.111, -71.8305, 0.55 ) }
    dend_60 { pt3dadd( -48.2768, -107.005, -73.3731, 0.55 ) }
    dend_60 { pt3dadd( -55.0219, -111.539, -75.5084, 0.55 ) }
    dend_60 { pt3dadd( -60.3384, -114.853, -76.9104, 0.55 ) }
    dend_60 { pt3dadd( -63.4708, -116.756, -77.5874, 0.55 ) }
    dend_60 { pt3dadd( -66.5093, -118.549, -78.2729, 0.55 ) }
    dend_60 { pt3dadd( -70.3706, -121.039, -79.4572, 0.83 ) }
    dend_60 { pt3dadd( -72.6623, -122.553, -80.2696, 0.55 ) }
    dend_60 { pt3dadd( -75.9495, -124.93, -81.5942, 0.83 ) }
    dend_60 { pt3dadd( -78.0641, -126.558, -82.609, 0.28 ) }
    dend_60 { pt3dadd( -80.4608, -128.411, -83.9572, 0.83 ) }
    dend_60 { pt3dadd( -88.7162, -134.827, -89.0111, 0.28 ) }
    dend_60 { pt3dadd( -91.2707, -136.768, -90.6153, 0.55 ) }
    dend_60 { pt3dadd( -94.2483, -138.961, -92.4879, 0.55 ) }
    dend_60 { pt3dadd( -101.13, -143.824, -96.5211, 0.55 ) }
    dend_60 { pt3dadd( -103.655, -145.656, -98.0226, 0.55 ) }
    dend_60 { pt3dadd( -107.876, -148.742, -100.416, 0.55 ) }
    dend_60 { pt3dadd( -111.672, -151.487, -102.369, 1.38 ) }
    dend_60 { pt3dadd( -114.623, -153.678, -103.848, 0.83 ) }
    dend_60 { pt3dadd( -122.314, -159.64, -107.666, 0.28 ) }
    dend_60 { pt3dadd( -127.885, -164.271, -110.218, 0.55 ) }
    dend_60 { pt3dadd( -131.513, -167.388, -111.805, 0.83 ) }
    dend_60 { pt3dadd( -133.589, -169.25, -112.75, 0.28 ) }
    dend_60 { pt3dadd( -135.315, -170.848, -113.576, 0.55 ) }
    dend_60 { pt3dadd( -137.965, -173.332, -114.92, 0.28 ) }
    dend_60 { pt3dadd( -140.038, -175.249, -116.088, 0.55 ) }
    dend_60 { pt3dadd( -150.122, -181.519, -118.239, 0.55 ) }
    dend_60 { pt3dadd( -160.0, -187.723, -121.336, 0.55 ) }
    dend_60 { pt3dadd( -169.213, -195.257, -123.708, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 96/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 8.17517, -70.88, -58.124, 0.55 ) }
    dend_55 { pt3dadd( 9.0355, -73.6763, -59.7259, 0.55 ) }
    dend_55 { pt3dadd( 9.27049, -75.5258, -60.4019, 0.55 ) }
    dend_55 { pt3dadd( 9.28059, -79.0199, -61.3447, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_55 { pt3dadd( 9.2892, -81.9958, -62.1477, 0.55 ) }
    dend_55 { pt3dadd( 9.30518, -87.5242, -63.6395, 0.55 ) }
    dend_55 { pt3dadd( 9.31113, -89.5806, -64.1944, 0.55 ) }
    dend_55 { pt3dadd( 9.24891, -94.9976, -66.1866, 0.28 ) }
    dend_55 { pt3dadd( 9.23878, -97.4094, -67.0238, 0.55 ) }
    dend_55 { pt3dadd( 10.1109, -105.348, -71.113, 0.55 ) }
    dend_55 { pt3dadd( 10.9733, -112.819, -75.9555, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 7/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -39.8739, 24.7208, 4.47365, 0.83 ) }
    dend_49 { pt3dadd( -42.3358, 26.0284, 2.8081, 0.83 ) }
    dend_49 { pt3dadd( -45.126, 27.7244, 0.947594, 0.55 ) }
    dend_49 { pt3dadd( -47.5558, 29.2804, -0.708571, 0.55 ) }
    dend_49 { pt3dadd( -50.3, 31.0595, -2.50438, 0.55 ) }
    dend_49 { pt3dadd( -51.6615, 31.8889, -3.33704, 0.55 ) }
    dend_49 { pt3dadd( -52.8964, 32.5826, -4.11919, 0.55 ) }
    dend_49 { pt3dadd( -54.8139, 33.6058, -5.28323, 0.55 ) }
    dend_49 { pt3dadd( -56.7916, 34.6403, -6.45962, 0.55 ) }
    dend_49 { pt3dadd( -58.4369, 35.4712, -7.27526, 0.55 ) }
    dend_49 { pt3dadd( -60.2697, 36.3316, -8.16043, 0.83 ) }
    dend_49 { pt3dadd( -63.3986, 37.9151, -9.78301, 0.83 ) }
    dend_49 { pt3dadd( -64.9017, 38.6964, -10.5719, 0.55 ) }
    dend_49 { pt3dadd( -67.016, 39.8804, -11.6094, 0.83 ) }
    dend_49 { pt3dadd( -69.9377, 41.6884, -13.0521, 0.55 ) }
    dend_49 { pt3dadd( -71.576, 42.8127, -13.9784, 0.55 ) }
    dend_49 { pt3dadd( -74.3843, 44.9225, -15.8058, 0.55 ) }
    dend_49 { pt3dadd( -75.2079, 45.5879, -16.4146, 0.55 ) }
    dend_49 { pt3dadd( -76.9066, 47.0937, -17.9629, 0.55 ) }
    dend_49 { pt3dadd( -77.6094, 47.7597, -18.7179, 0.55 ) }
    dend_49 { pt3dadd( -79.2946, 49.4905, -20.7921, 0.83 ) }
    dend_49 { pt3dadd( -80.7616, 51.1894, -22.63, 0.55 ) }
    dend_49 { pt3dadd( -82.1093, 53.1321, -24.5728, 0.83 ) }
    dend_49 { pt3dadd( -82.9812, 54.6672, -25.9799, 0.55 ) }
    dend_49 { pt3dadd( -83.136, 55.0288, -26.2706, 0.83 ) }
    dend_49 { pt3dadd( -83.5627, 56.2224, -27.1523, 0.55 ) }
    dend_49 { pt3dadd( -83.8237, 57.0203, -27.7093, 0.83 ) }
    dend_49 { pt3dadd( -84.6929, 59.5493, -29.4391, 0.55 ) }
    dend_49 { pt3dadd( -85.5183, 61.8364, -30.9709, 0.55 ) }
    dend_49 { pt3dadd( -87.0198, 65.7215, -33.6893, 0.55 ) }
    dend_49 { pt3dadd( -87.9567, 67.9969, -35.3083, 0.55 ) }
    dend_49 { pt3dadd( -89.3553, 71.2903, -37.7352, 0.28 ) }
    dend_49 { pt3dadd( -89.9997, 72.7655, -38.8438, 0.28 ) }
    dend_49 { pt3dadd( -90.9788, 74.9344, -40.5445, 0.28 ) }
    dend_49 { pt3dadd( -92.5138, 78.3566, -43.197, 0.28 ) }
    dend_49 { pt3dadd( -93.5964, 80.6779, -45.0066, 0.28 ) }
    dend_49 { pt3dadd( -95.0261, 83.8288, -47.434, 0.28 ) }
    dend_49 { pt3dadd( -96.0008, 86.0765, -49.2588, 0.28 ) }
    dend_49 { pt3dadd( -96.7536, 87.9136, -50.8653, 0.55 ) }
    dend_49 { pt3dadd( -102.113, 93.1969, -55.0288, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 47/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -39.8739, 24.7208, 4.47365, 0.28 ) }
    dend_46 { pt3dadd( -44.0985, 25.8617, 8.26607, 0.28 ) }
    dend_46 { pt3dadd( -50.8276, 27.6712, 14.1158, 0.28 ) }
    dend_46 { pt3dadd( -54.8721, 28.8249, 17.6092, 0.28 ) }
    dend_46 { pt3dadd( -58.9668, 30.0175, 21.17, 0.55 ) }
    dend_46 { pt3dadd( -63.5746, 31.4257, 25.1669, 0.55 ) }
    dend_46 { pt3dadd( -65.9858, 32.1785, 27.1883, 0.28 ) }
    dend_46 { pt3dadd( -67.1361, 32.5941, 28.1221, 0.55 ) }
    dend_46 { pt3dadd( -70.0311, 33.8946, 30.0337, 0.28 ) }
    dend_46 { pt3dadd( -73.8712, 35.9537, 32.1418, 0.55 ) }
    dend_46 { pt3dadd( -74.9011, 36.6045, 32.6646, 0.55 ) }
    dend_46 { pt3dadd( -76.9244, 38.0318, 33.6773, 0.28 ) }
    dend_46 { pt3dadd( -81.9046, 41.8219, 36.3876, 0.83 ) }
    dend_46 { pt3dadd( -85.7291, 44.8583, 38.6014, 0.28 ) }
    dend_46 { pt3dadd( -86.529, 45.5313, 39.1021, 0.28 ) }
    dend_46 { pt3dadd( -89.2278, 48.0218, 41.1127, 0.83 ) }
    dend_46 { pt3dadd( -91.519, 50.2179, 43.168, 0.28 ) }
    dend_46 { pt3dadd( -92.9601, 51.6036, 44.7632, 0.55 ) }
    dend_46 { pt3dadd( -94.9924, 53.3995, 47.4397, 0.28 ) }
    dend_46 { pt3dadd( -96.649, 54.8002, 49.7601, 0.55 ) }
    dend_46 { pt3dadd( -98.7394, 56.5859, 52.915, 0.28 ) }
    dend_46 { pt3dadd( -100.045, 57.712, 55.0504, 0.83 ) }
    dend_46 { pt3dadd( -102.357, 59.6852, 59.0459, 0.28 ) }
    dend_46 { pt3dadd( -104.184, 61.1742, 62.3715, 0.55 ) }
    dend_46 { pt3dadd( -104.868, 61.6909, 63.6036, 0.55 ) }
    dend_46 { pt3dadd( -107.148, 63.2955, 67.377, 0.28 ) }
    dend_46 { pt3dadd( -108.563, 64.1856, 69.3794, 0.55 ) }
    dend_46 { pt3dadd( -110.875, 65.5783, 72.4357, 0.28 ) }
    dend_46 { pt3dadd( -112.574, 66.5807, 74.5025, 0.55 ) }
    dend_46 { pt3dadd( -115.723, 68.2758, 78.079, 0.28 ) }
    dend_46 { pt3dadd( -118.201, 69.4091, 80.8004, 1.11 ) }
    dend_46 { pt3dadd( -123.178, 71.4383, 86.3928, 0.28 ) }
    dend_46 { pt3dadd( -125.108, 72.1853, 88.5171, 0.55 ) }
    dend_46 { pt3dadd( -127.095, 72.915, 90.7208, 0.28 ) }
    dend_46 { pt3dadd( -128.936, 73.5526, 92.8314, 0.55 ) }
    dend_46 { pt3dadd( -132.081, 74.4968, 96.7986, 0.28 ) }
    dend_46 { pt3dadd( -137.049, 75.7231, 103.689, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 84/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -26.6231, 13.4402, 6.47073, 0.55 ) }
    dend_40 { pt3dadd( -26.4033, 15.6247, 9.16183, 0.55 ) }
    dend_40 { pt3dadd( -26.3277, 17.303, 11.0655, 0.55 ) }
    dend_40 { pt3dadd( -26.4477, 19.8177, 13.8476, 0.55 ) }
    dend_40 { pt3dadd( -26.8522, 22.6479, 16.821, 0.55 ) }
    dend_40 { pt3dadd( -27.3708, 24.8027, 18.9764, 0.83 ) }
    dend_40 { pt3dadd( -27.9498, 26.864, 20.9, 0.55 ) }
    dend_40 { pt3dadd( -28.8715, 29.5547, 23.3064, 0.83 ) }
    dend_40 { pt3dadd( -30.0722, 32.7546, 25.8718, 0.55 ) }
    dend_40 { pt3dadd( -31.3189, 35.7716, 27.8214, 0.83 ) }
    dend_40 { pt3dadd( -32.601, 38.6504, 29.4086, 0.55 ) }
    dend_40 { pt3dadd( -33.4919, 40.5077, 30.4378, 0.55 ) }
    dend_40 { pt3dadd( -34.4445, 42.4304, 31.4586, 1.38 ) }
    dend_40 { pt3dadd( -35.6578, 44.9852, 32.7605, 0.83 ) }
    dend_40 { pt3dadd( -36.6051, 47.2744, 33.8757, 0.83 ) }
    dend_40 { pt3dadd( -37.3284, 49.2432, 34.855, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_40 { pt3dadd( -38.8551, 53.5874, 37.1118, 0.83 ) }
    dend_40 { pt3dadd( -39.9152, 56.3573, 38.654, 0.83 ) }
    dend_40 { pt3dadd( -40.7213, 58.3521, 39.7991, 0.55 ) }
    dend_40 { pt3dadd( -41.3556, 59.9478, 40.7631, 0.55 ) }
    dend_40 { pt3dadd( -41.4424, 60.2153, 40.9283, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 5/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -26.6231, 13.4402, 6.47073, 0.55 ) }
    dend_39 { pt3dadd( -29.3403, 14.8743, 9.95055, 0.55 ) }
    dend_39 { pt3dadd( -31.0216, 15.6284, 12.8519, 0.83 ) }
    dend_39 { pt3dadd( -32.3459, 16.1877, 15.795, 0.83 ) }
    dend_39 { pt3dadd( -34.5673, 17.2857, 21.3115, 0.55 ) }
    dend_39 { pt3dadd( -35.6198, 17.8911, 24.1138, 0.83 ) }
    dend_39 { pt3dadd( -36.2891, 18.3173, 25.9095, 0.55 ) }
    dend_39 { pt3dadd( -39.4635, 20.7545, 35.7849, 0.83 ) }
    dend_39 { pt3dadd( -42.0923, 23.247, 45.1524, 0.55 ) }
    dend_39 { pt3dadd( -42.7827, 24.0261, 47.859, 0.55 ) }
    dend_39 { pt3dadd( -43.771, 25.331, 51.8493, 0.55 ) }
    dend_39 { pt3dadd( -44.2005, 26.0139, 53.6491, 0.55 ) }
    dend_39 { pt3dadd( -45.0967, 27.9225, 57.8074, 0.28 ) }
    dend_39 { pt3dadd( -45.4419, 29.1853, 59.7477, 1.11 ) }
    dend_39 { pt3dadd( -45.5863, 30.2225, 61.294, 1.11 ) }
    dend_39 { pt3dadd( -45.8788, 32.4818, 65.4586, 0.55 ) }
    dend_39 { pt3dadd( -46.119, 34.2645, 69.1723, 0.55 ) }
    dend_39 { pt3dadd( -46.376, 35.9858, 73.0891, 0.55 ) }
    dend_39 { pt3dadd( -46.7146, 37.865, 77.5774, 0.55 ) }
    dend_39 { pt3dadd( -47.6438, 42.6321, 89.9843, 1.11 ) }
    dend_39 { pt3dadd( -48.5198, 47.6362, 103.619, 0.55 ) }
    dend_39 { pt3dadd( -48.6761, 48.6447, 106.432, 0.55 ) }
    dend_39 { pt3dadd( -48.9351, 50.2846, 111.06, 0.55 ) }
    dend_39 { pt3dadd( -49.1831, 51.737, 115.148, 1.11 ) }
    dend_39 { pt3dadd( -49.8523, 55.3161, 125.007, 0.28 ) }
    dend_39 { pt3dadd( -50.3361, 57.9618, 131.734, 1.11 ) }
    dend_39 { pt3dadd( -50.6301, 60.2247, 136.806, 0.28 ) }
    dend_39 { pt3dadd( -50.6898, 60.6367, 137.687, 0.55 ) }
    dend_39 { pt3dadd( -51.0472, 62.6092, 141.721, 0.28 ) }
    dend_39 { pt3dadd( -51.3679, 63.7969, 143.968, 1.11 ) }
    dend_39 { pt3dadd( -52.6354, 66.9491, 149.199, 0.28 ) }
    dend_39 { pt3dadd( -53.0438, 67.8482, 150.756, 0.83 ) }
    dend_39 { pt3dadd( -54.2654, 70.8184, 156.089, 0.28 ) }
    dend_39 { pt3dadd( -54.4678, 71.4034, 157.173, 0.55 ) }
    dend_39 { pt3dadd( -55.2249, 74.0548, 162.114, 0.28 ) }
    dend_39 { pt3dadd( -55.6221, 75.7145, 165.338, 1.38 ) }
    dend_39 { pt3dadd( -56.817, 82.0862, 177.87, 0.28 ) }
    dend_39 { pt3dadd( -57.2824, 84.9625, 183.8, 1.11 ) }
    dend_39 { pt3dadd( -57.5682, 87.4212, 188.973, 0.28 ) }
    dend_39 { pt3dadd( -57.6135, 88.0083, 190.257, 0.55 ) }
    dend_39 { pt3dadd( -57.6493, 91.3903, 197.995, 0.28 ) }
    dend_39 { pt3dadd( -57.6373, 92.3828, 200.297, 0.55 ) }
    dend_39 { pt3dadd( -57.7578, 94.8476, 205.637, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 48/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 25.4939, 33.5506, 1.4594, 0.55 ) }
    dend_30 { pt3dadd( 25.7195, 34.9945, -0.105301, 0.55 ) }
    dend_30 { pt3dadd( 26.5105, 40.0569, -5.59126, 0.55 ) }
    dend_30 { pt3dadd( 27.0713, 43.6452, -9.47982, 0.55 ) }
    dend_30 { pt3dadd( 27.3818, 45.6322, -11.633, 0.55 ) }
    dend_30 { pt3dadd( 28.0671, 50.018, -16.3858, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 54/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 25.4939, 33.5506, 1.4594, 0.83 ) }
    dend_23 { pt3dadd( 26.9367, 34.5006, 1.3754, 0.83 ) }
    dend_23 { pt3dadd( 31.4639, 37.4814, 1.11182, 0.83 ) }
    dend_23 { pt3dadd( 36.5131, 40.806, 0.817841, 0.83 ) }
    dend_23 { pt3dadd( 38.6424, 42.2079, 0.693871, 0.83 ) }
    dend_23 { pt3dadd( 40.9215, 43.7086, 0.561173, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 60/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 37.3388, 82.4412, 6.92848, 1.11 ) }
    dend_11 { pt3dadd( 37.4693, 87.8559, 6.3318, 1.11 ) }
    dend_11 { pt3dadd( 37.7244, 92.7094, 6.0215, 1.11 ) }
    dend_11 { pt3dadd( 37.8592, 95.4306, 5.95036, 1.38 ) }
    dend_11 { pt3dadd( 38.1205, 99.8043, 5.77606, 1.11 ) }
    dend_11 { pt3dadd( 38.4585, 105.46, 5.55067, 1.38 ) }
    dend_11 { pt3dadd( 38.6521, 108.699, 5.42159, 1.38 ) }
    dend_11 { pt3dadd( 39.0486, 114.386, 5.56309, 0.83 ) }
    dend_11 { pt3dadd( 39.463, 119.358, 5.79583, 0.83 ) }
    dend_11 { pt3dadd( 39.9189, 124.893, 5.99095, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 70/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 37.3388, 82.4412, 6.92848, 0.55 ) }
    dend_4 { pt3dadd( 39.9241, 83.0613, 9.49373, 0.55 ) }
    dend_4 { pt3dadd( 43.4161, 83.85, 12.5662, 0.28 ) }
    dend_4 { pt3dadd( 44.9654, 84.2394, 13.9999, 1.11 ) }
    dend_4 { pt3dadd( 47.3708, 85.1152, 15.7324, 0.55 ) }
    dend_4 { pt3dadd( 53.2549, 87.7376, 19.4344, 0.28 ) }
    dend_4 { pt3dadd( 55.3501, 88.786, 20.6084, 0.55 ) }
    dend_4 { pt3dadd( 66.2062, 95.2751, 25.8632, 0.28 ) }
    dend_4 { pt3dadd( 69.1308, 97.2581, 26.88, 0.55 ) }
    dend_4 { pt3dadd( 80.3934, 105.306, 28.7031, 0.28 ) }
    dend_4 { pt3dadd( 82.1969, 106.789, 28.0923, 0.55 ) }
    dend_4 { pt3dadd( 83.5091, 107.961, 27.0389, 0.28 ) }
    dend_4 { pt3dadd( 84.2133, 108.672, 26.2235, 0.55 ) }
    dend_4 { pt3dadd( 87.2126, 112.237, 21.7214, 0.28 ) }
    dend_4 { pt3dadd( 88.2889, 113.545, 20.0649, 0.55 ) }
    dend_4 { pt3dadd( 95.5394, 122.405, 9.45002, 0.28 ) }
    dend_4 { pt3dadd( 96.9964, 124.192, 7.27194, 0.55 ) }
    dend_4 { pt3dadd( 98.9447, 126.661, 4.32925, 0.28 ) }
    dend_4 { pt3dadd( 100.972, 129.32, 1.33553, 1.11 ) }
    dend_4 { pt3dadd( 106.548, 137.492, -6.44726, 0.28 ) }
    dend_4 { pt3dadd( 107.604, 139.159, -7.85406, 0.55 ) }
    dend_4 { pt3dadd( 119.267, 147.604, -8.55409, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 92/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 10.9733, -112.819, -75.9555, 0.28 ) }
    dend_59 { pt3dadd( 12.1132, -124.657, -80.7906, 0.28 ) }
    dend_59 { pt3dadd( 13.921, -136.552, -85.2103, 0.28 ) }
    dend_59 { pt3dadd( 15.4958, -148.883, -88.4333, 0.28 ) }
    dend_59 { pt3dadd( 16.8291, -161.351, -91.2663, 0.28 ) }
    dend_59 { pt3dadd( 16.7335, -173.976, -93.9423, 0.28 ) }
    dend_59 { pt3dadd( 16.6597, -186.833, -95.0259, 0.28 ) }
    dend_59 { pt3dadd( 18.2869, -199.531, -94.363, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_59 { pt3dadd( 19.719, -212.277, -95.0646, 0.28 ) }
    dend_59 { pt3dadd( 21.7753, -224.747, -97.2485, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 2/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 10.9733, -112.819, -75.9555, 1.11 ) }
    dend_56 { pt3dadd( 10.2149, -118.577, -78.7941, 0.28 ) }
    dend_56 { pt3dadd( 9.78621, -124.74, -80.7407, 0.28 ) }
    dend_56 { pt3dadd( 10.3377, -131.063, -81.9137, 0.28 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 6/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -102.113, 93.1969, -55.0288, 0.28 ) }
    dend_51 { pt3dadd( -109.893, 100.268, -62.0544, 0.28 ) }
    dend_51 { pt3dadd( -118.593, 105.382, -69.5128, 0.28 ) }
    dend_51 { pt3dadd( -128.026, 111.644, -74.9755, 0.28 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 10/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -102.113, 93.1969, -55.0288, 1.11 ) }
    dend_50 { pt3dadd( -108.92, 101.692, -61.545, 0.28 ) }
    dend_50 { pt3dadd( -115.688, 110.065, -68.2418, 0.28 ) }
    dend_50 { pt3dadd( -122.436, 118.491, -74.897, 0.28 ) }
    dend_50 { pt3dadd( -128.393, 127.864, -81.1496, 0.28 ) }
    dend_50 { pt3dadd( -136.793, 135.922, -86.1253, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 16/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -137.049, 75.7231, 103.689, 0.28 ) }
    dend_48 { pt3dadd( -137.636, 77.7622, 104.342, 0.28 ) }
    dend_48 { pt3dadd( -138.083, 79.291, 104.821, 0.83 ) }
    dend_48 { pt3dadd( -138.953, 82.3519, 105.886, 0.28 ) }
    dend_48 { pt3dadd( -139.29, 83.5337, 106.304, 0.55 ) }
    dend_48 { pt3dadd( -139.859, 85.5192, 107.008, 0.28 ) }
    dend_48 { pt3dadd( -140.419, 87.1175, 107.71, 0.83 ) }
    dend_48 { pt3dadd( -141.358, 89.2673, 108.853, 0.28 ) }
    dend_48 { pt3dadd( -142.164, 90.4706, 109.652, 0.55 ) }
    dend_48 { pt3dadd( -142.944, 91.2891, 110.346, 0.28 ) }
    dend_48 { pt3dadd( -143.358, 91.6697, 110.695, 0.55 ) }
    dend_48 { pt3dadd( -147.328, 94.6979, 113.888, 0.28 ) }
    dend_48 { pt3dadd( -148.092, 95.1782, 114.464, 0.83 ) }
    dend_48 { pt3dadd( -152.103, 97.1707, 117.405, 0.28 ) }
    dend_48 { pt3dadd( -152.86, 97.4831, 117.917, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 31/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -137.049, 75.7231, 103.689, 0.28 ) }
    dend_47 { pt3dadd( -139.853, 75.1305, 105.917, 0.28 ) }
    dend_47 { pt3dadd( -140.75, 74.9962, 106.626, 0.55 ) }
    dend_47 { pt3dadd( -142.007, 74.8879, 107.645, 0.28 ) }
    dend_47 { pt3dadd( -143.152, 75.1171, 108.693, 0.55 ) }
    dend_47 { pt3dadd( -149.087, 77.252, 114.333, 0.28 ) }
    dend_47 { pt3dadd( -150.933, 78.0752, 116.063, 0.55 ) }
    dend_47 { pt3dadd( -152.012, 78.7166, 117.103, 0.28 ) }
    dend_47 { pt3dadd( -152.787, 79.2313, 117.846, 1.11 ) }
    dend_47 { pt3dadd( -158.034, 83.0129, 122.789, 0.28 ) }
    dend_47 { pt3dadd( -159.619, 84.0934, 124.148, 0.83 ) }
    dend_47 { pt3dadd( -161.29, 85.1818, 125.453, 0.28 ) }
    dend_47 { pt3dadd( -162.209, 85.7025, 126.137, 0.55 ) }
    dend_47 { pt3dadd( -164.553, 86.8451, 127.751, 0.28 ) }
    dend_47 { pt3dadd( -166.746, 87.7506, 129.207, 0.83 ) }
    dend_47 { pt3dadd( -172.903, 89.861, 133.101, 0.28 ) }
    dend_47 { pt3dadd( -174.34, 90.3443, 134.005, 0.55 ) }
    dend_47 { pt3dadd( -177.108, 91.2579, 135.77, 0.28 ) }
    dend_47 { pt3dadd( -179.454, 92.0264, 137.263, 1.11 ) }
    dend_47 { pt3dadd( -182.821, 93.1565, 139.383, 0.28 ) }
    dend_47 { pt3dadd( -184.019, 93.5673, 140.136, 0.55 ) }
    dend_47 { pt3dadd( -186.275, 94.3552, 141.612, 0.28 ) }
    dend_47 { pt3dadd( -187.835, 94.8474, 142.679, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 54/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -41.4424, 60.2153, 40.9283, 0.28 ) }
    dend_44 { pt3dadd( -30.935, 60.7841, 57.6118, 0.28 ) }
    dend_44 { pt3dadd( -28.7103, 60.8797, 60.8927, 1.11 ) }
    dend_44 { pt3dadd( -24.1058, 61.0003, 67.1816, 0.28 ) }
    dend_44 { pt3dadd( -22.7767, 61.0284, 68.8842, 0.83 ) }
    dend_44 { pt3dadd( -18.4352, 61.0854, 74.2233, 0.28 ) }
    dend_44 { pt3dadd( -16.1824, 61.115, 76.9937, 0.83 ) }
    dend_44 { pt3dadd( -13.303, 61.0038, 79.4997, 0.28 ) }
    dend_44 { pt3dadd( -10.6996, 60.8511, 81.4231, 0.55 ) }
    dend_44 { pt3dadd( -6.5159, 60.4485, 83.7508, 0.28 ) }
    dend_44 { pt3dadd( -4.29663, 60.2806, 85.2265, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 65/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -41.4424, 60.2153, 40.9283, 1.11 ) }
    dend_41 { pt3dadd( -42.1392, 61.9905, 41.8579, 1.11 ) }
    dend_41 { pt3dadd( -43.5534, 64.8735, 43.8525, 0.55 ) }
    dend_41 { pt3dadd( -45.1952, 68.2641, 46.4051, 1.11 ) }
    dend_41 { pt3dadd( -46.7031, 71.3776, 49.0825, 0.83 ) }
    dend_41 { pt3dadd( -47.9559, 73.9317, 51.4458, 0.55 ) }
    dend_41 { pt3dadd( -49.0217, 76.0366, 53.4826, 1.11 ) }
    dend_41 { pt3dadd( -51.6201, 80.9167, 58.5876, 0.55 ) }
    dend_41 { pt3dadd( -52.2907, 82.1795, 60.0061, 0.55 ) }
    dend_41 { pt3dadd( -53.988, 85.357, 63.7413, 0.55 ) }
    dend_41 { pt3dadd( -55.0088, 87.4628, 65.9446, 1.11 ) }
    dend_41 { pt3dadd( -55.7485, 89.1665, 67.5165, 0.55 ) }
    dend_41 { pt3dadd( -56.2283, 90.458, 68.5588, 0.83 ) }
    dend_41 { pt3dadd( -57.0238, 92.9469, 70.2647, 0.55 ) }
    dend_41 { pt3dadd( -57.5233, 94.4477, 71.2356, 0.83 ) }
    dend_41 { pt3dadd( -59.1946, 99.9533, 74.3593, 1.38 ) }
    dend_41 { pt3dadd( -59.9066, 102.547, 75.7884, 0.55 ) }
    dend_41 { pt3dadd( -60.4309, 104.616, 76.9234, 0.28 ) }
    dend_41 { pt3dadd( -61.3372, 108.099, 78.9199, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 84/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 28.0671, 50.018, -16.3858, 0.83 ) }
    dend_34 { pt3dadd( 28.5935, 51.2763, -18.7163, 0.83 ) }
    dend_34 { pt3dadd( 29.8816, 53.6121, -22.846, 0.55 ) }
    dend_34 { pt3dadd( 32.4781, 57.4838, -29.6308, 0.55 ) }
    dend_34 { pt3dadd( 32.8608, 58.064, -30.5828, 0.55 ) }
    dend_34 { pt3dadd( 34.0646, 59.7183, -33.2336, 0.55 ) }
    dend_34 { pt3dadd( 34.8916, 60.8547, -35.0546, 0.55 ) }
    dend_34 { pt3dadd( 35.4855, 61.622, -36.3232, 0.55 ) }
    dend_34 { pt3dadd( 36.6529, 62.7923, -38.0645, 0.55 ) }
    dend_34 { pt3dadd( 39.7512, 65.2375, -41.0878, 0.55 ) }
    dend_34 { pt3dadd( 41.1895, 66.5396, -42.6892, 0.55 ) }
    dend_34 { pt3dadd( 45.2651, 71.195, -49.2688, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 96/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 28.0671, 50.018, -16.3858, 0.55 ) }
    dend_31 { pt3dadd( 27.4034, 53.749, -16.9439, 0.55 ) }
    dend_31 { pt3dadd( 26.5811, 57.9522, -18.06, 0.55 ) }
    dend_31 { pt3dadd( 26.0521, 60.6996, -18.9176, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_31 { pt3dadd( 25.5614, 63.3743, -19.8064, 0.55 ) }
    dend_31 { pt3dadd( 24.8174, 67.4706, -21.1638, 0.55 ) }
    dend_31 { pt3dadd( 24.444, 69.7618, -21.9155, 0.55 ) }
    dend_31 { pt3dadd( 23.8922, 74.1679, -23.6796, 0.83 ) }
    dend_31 { pt3dadd( 23.7388, 75.3381, -24.1615, 0.28 ) }
    dend_31 { pt3dadd( 23.6727, 75.9491, -24.4632, 0.55 ) }
    dend_31 { pt3dadd( 23.5464, 77.3159, -25.3932, 0.55 ) }
    dend_31 { pt3dadd( 23.47, 78.4231, -26.4291, 0.55 ) }
    dend_31 { pt3dadd( 23.3933, 81.434, -28.8514, 0.83 ) }
    dend_31 { pt3dadd( 20.6562, 90.9252, -33.8451, 0.83 ) }
    dend_31 { pt3dadd( 18.9162, 99.6353, -40.3355, 0.83 ) }
    dend_31 { pt3dadd( 19.4928, 109.454, -45.4669, 0.83 ) }
    dend_31 { pt3dadd( 18.4403, 119.513, -50.0809, 0.83 ) }
    dend_31 { pt3dadd( 19.7356, 130.276, -52.9236, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 14/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 40.9215, 43.7086, 0.561173, 0.83 ) }
    dend_27 { pt3dadd( 45.9508, 51.172, 1.22009, 0.83 ) }
    dend_27 { pt3dadd( 47.9527, 53.7353, 0.988399, 0.83 ) }
    dend_27 { pt3dadd( 50.3925, 56.3112, 0.451195, 0.55 ) }
    dend_27 { pt3dadd( 52.679, 58.4998, -0.0434593, 0.55 ) }
    dend_27 { pt3dadd( 54.7327, 60.366, -0.397913, 0.83 ) }
    dend_27 { pt3dadd( 57.1459, 62.3819, -0.858744, 0.83 ) }
    dend_27 { pt3dadd( 59.5964, 64.1817, -1.6799, 0.28 ) }
    dend_27 { pt3dadd( 63.8507, 66.8638, -3.37617, 0.28 ) }
    dend_27 { pt3dadd( 65.399, 67.6983, -4.00952, 1.11 ) }
    dend_27 { pt3dadd( 67.6328, 68.6634, -5.15473, 0.55 ) }
    dend_27 { pt3dadd( 71.6844, 70.0792, -7.61032, 0.83 ) }
    dend_27 { pt3dadd( 76.0171, 71.5191, -10.4296, 0.55 ) }
    dend_27 { pt3dadd( 80.2263, 72.7858, -13.4625, 0.83 ) }
    dend_27 { pt3dadd( 81.2907, 73.0574, -14.3426, 0.83 ) }
    dend_27 { pt3dadd( 87.0202, 74.3265, -19.5797, 0.28 ) }
    dend_27 { pt3dadd( 89.4662, 74.7394, -22.0654, 0.83 ) }
    dend_27 { pt3dadd( 99.3301, 80.0488, -26.5298, 0.83 ) }
    dend_27 { pt3dadd( 110.1, 84.4937, -29.4512, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 33/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 40.9215, 43.7086, 0.561173, 0.83 ) }
    dend_24 { pt3dadd( 43.8013, 47.1276, 1.39632, 0.83 ) }
    dend_24 { pt3dadd( 45.4885, 49.5859, 2.11562, 0.83 ) }
    dend_24 { pt3dadd( 46.7883, 51.6215, 2.75677, 0.83 ) }
    dend_24 { pt3dadd( 48.4895, 54.5142, 3.64712, 0.83 ) }
    dend_24 { pt3dadd( 50.4445, 58.052, 4.78802, 1.11 ) }
    dend_24 { pt3dadd( 52.3724, 61.5642, 5.9539, 0.83 ) }
    dend_24 { pt3dadd( 54.6139, 65.9388, 7.47306, 1.11 ) }
    dend_24 { pt3dadd( 55.7646, 68.3108, 8.32474, 0.55 ) }
    dend_24 { pt3dadd( 57.2709, 71.6268, 9.66961, 0.83 ) }
    dend_24 { pt3dadd( 58.5131, 74.3321, 10.9651, 0.83 ) }
    dend_24 { pt3dadd( 59.9862, 77.5524, 12.7283, 1.11 ) }
    dend_24 { pt3dadd( 61.1724, 80.0772, 14.2686, 0.55 ) }
    dend_24 { pt3dadd( 62.005, 81.865, 15.4114, 0.28 ) }
    dend_24 { pt3dadd( 64.4537, 87.2684, 19.1308, 1.38 ) }
    dend_24 { pt3dadd( 66.4882, 91.6525, 22.4049, 0.55 ) }
    dend_24 { pt3dadd( 67.2084, 93.2077, 23.6619, 0.83 ) }
    dend_24 { pt3dadd( 68.1873, 95.4184, 25.5161, 0.55 ) }
    dend_24 { pt3dadd( 69.5391, 98.4789, 28.1503, 0.28 ) }
    dend_24 { pt3dadd( 70.5903, 100.825, 30.2446, 1.38 ) }
    dend_24 { pt3dadd( 72.1424, 103.923, 33.1589, 0.55 ) }
    dend_24 { pt3dadd( 73.2684, 106.116, 35.395, 1.38 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 55/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 39.9189, 124.893, 5.99095, 1.11 ) }
    dend_17 { pt3dadd( 39.8765, 125.663, 6.19345, 1.11 ) }
    dend_17 { pt3dadd( 39.7436, 128.393, 6.69404, 0.83 ) }
    dend_17 { pt3dadd( 39.8066, 131.66, 7.11011, 0.83 ) }
    dend_17 { pt3dadd( 40.2219, 135.486, 7.41884, 1.11 ) }
    dend_17 { pt3dadd( 41.1828, 141.66, 7.79144, 1.11 ) }
    dend_17 { pt3dadd( 41.5214, 143.867, 7.84735, 0.83 ) }
    dend_17 { pt3dadd( 42.0655, 147.721, 7.83946, 0.83 ) }
    dend_17 { pt3dadd( 42.6867, 151.774, 7.73355, 1.38 ) }
    dend_17 { pt3dadd( 43.329, 155.771, 7.52337, 1.11 ) }
    dend_17 { pt3dadd( 43.9135, 159.122, 7.28441, 1.11 ) }
    dend_17 { pt3dadd( 44.8341, 163.687, 6.86798, 1.11 ) }
    dend_17 { pt3dadd( 46.304, 171.462, 6.28393, 1.38 ) }
    dend_17 { pt3dadd( 46.6986, 174.359, 6.19227, 0.55 ) }
    dend_17 { pt3dadd( 46.8147, 176.215, 6.14098, 0.83 ) }
    dend_17 { pt3dadd( 46.8242, 177.007, 6.12321, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 71/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 39.9189, 124.893, 5.99095, 0.55 ) }
    dend_12 { pt3dadd( 40.2559, 127.261, 0.39495, 0.55 ) }
    dend_12 { pt3dadd( 40.3176, 127.774, -0.748395, 0.55 ) }
    dend_12 { pt3dadd( 40.6235, 129.283, -3.67287, 0.83 ) }
    dend_12 { pt3dadd( 41.0946, 131.605, -8.17622, 0.55 ) }
    dend_12 { pt3dadd( 41.3614, 132.921, -10.7274, 0.83 ) }
    dend_12 { pt3dadd( 41.6355, 134.273, -13.3474, 0.28 ) }
    dend_12 { pt3dadd( 41.6367, 134.962, -14.8555, 0.55 ) }
    dend_12 { pt3dadd( 41.5607, 135.989, -17.0661, 0.55 ) }
    dend_12 { pt3dadd( 40.495, 139.841, -26.5495, 0.55 ) }
    dend_12 { pt3dadd( 38.5136, 144.168, -35.6895, 0.55 ) }
    dend_12 { pt3dadd( 37.0702, 147.822, -45.1961, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 83/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 119.267, 147.604, -8.55409, 0.28 ) }
    dend_10 { pt3dadd( 124.596, 151.612, -8.71224, 0.28 ) }
    dend_10 { pt3dadd( 130.682, 154.171, -8.69974, 0.28 ) }
    dend_10 { pt3dadd( 137.042, 155.64, -9.49151, 0.28 ) }
    dend_10 { pt3dadd( 143.324, 157.587, -9.36031, 0.28 ) }
    dend_10 { pt3dadd( 149.278, 160.162, -10.7118, 0.28 ) }
    dend_10 { pt3dadd( 154.609, 162.935, -13.5962, 0.28 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 90/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 119.267, 147.604, -8.55409, 1.11 ) }
    dend_5 { pt3dadd( 127.997, 154.282, -9.7073, 0.28 ) }
    dend_5 { pt3dadd( 136.217, 161.639, -10.8669, 0.28 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 93/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 10.3377, -131.063, -81.9137, 0.28 ) }
    dend_58 { pt3dadd( 11.0064, -140.102, -84.654, 0.28 ) }
    dend_58 { pt3dadd( 9.81833, -149.2, -87.1081, 0.28 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 96/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 10.3377, -131.063, -81.9137, 0.28 ) }
    dend_57 { pt3dadd( 11.5473, -139.624, -84.4024, 0.28 ) }
    dend_57 { pt3dadd( 11.6765, -148.451, -86.3428, 0.28 ) }
    dend_57 { pt3dadd( 11.9243, -157.4, -87.6165, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_57 { pt3dadd( 12.74, -166.24, -89.2309, 0.28 ) }
    dend_57 { pt3dadd( 12.4852, -174.766, -92.1857, 0.28 ) }
    dend_57 { pt3dadd( 12.8819, -182.793, -96.192, 0.28 ) }
    dend_57 { pt3dadd( 13.5718, -191.053, -99.67, 0.28 ) }
    dend_57 { pt3dadd( 15.6124, -199.08, -103.049, 0.28 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 5/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -61.3372, 108.099, 78.9199, 0.55 ) }
    dend_43 { pt3dadd( -62.5353, 110.224, 80.7936, 0.55 ) }
    dend_43 { pt3dadd( -63.4506, 111.739, 82.2814, 0.55 ) }
    dend_43 { pt3dadd( -64.5226, 113.604, 84.1825, 1.11 ) }
    dend_43 { pt3dadd( -65.8829, 115.956, 86.806, 0.55 ) }
    dend_43 { pt3dadd( -66.4741, 116.884, 88.0016, 0.28 ) }
    dend_43 { pt3dadd( -67.6333, 118.739, 90.4889, 0.55 ) }
    dend_43 { pt3dadd( -68.3541, 119.91, 92.3107, 0.28 ) }
    dend_43 { pt3dadd( -68.7142, 120.442, 93.2277, 0.83 ) }
    dend_43 { pt3dadd( -69.8423, 121.914, 95.9703, 0.28 ) }
    dend_43 { pt3dadd( -71.0263, 123.403, 98.7689, 0.28 ) }
    dend_43 { pt3dadd( -71.5765, 124.054, 100.045, 0.83 ) }
    dend_43 { pt3dadd( -72.3668, 124.951, 101.828, 0.28 ) }
    dend_43 { pt3dadd( -74.0566, 126.879, 105.609, 0.28 ) }
    dend_43 { pt3dadd( -75.0018, 127.991, 107.664, 0.83 ) }
    dend_43 { pt3dadd( -76.9305, 130.432, 111.817, 0.28 ) }
    dend_43 { pt3dadd( -77.0218, 130.557, 112.018, 0.55 ) }
    dend_43 { pt3dadd( -77.8762, 131.78, 113.892, 0.28 ) }
    dend_43 { pt3dadd( -78.4197, 132.688, 115.068, 0.83 ) }
    dend_43 { pt3dadd( -78.8543, 133.589, 115.984, 0.28 ) }
    dend_43 { pt3dadd( -78.9297, 133.769, 116.134, 0.55 ) }
    dend_43 { pt3dadd( -79.8034, 135.949, 117.69, 0.28 ) }
    dend_43 { pt3dadd( -80.5579, 137.807, 118.992, 1.11 ) }
    dend_43 { pt3dadd( -81.9573, 141.132, 121.422, 0.28 ) }
    dend_43 { pt3dadd( -82.5003, 142.348, 122.353, 0.55 ) }
    dend_43 { pt3dadd( -83.1928, 143.841, 123.581, 0.83 ) }
    dend_43 { pt3dadd( -83.9804, 146.253, 125.37, 0.28 ) }
    dend_43 { pt3dadd( -84.1076, 146.932, 125.814, 0.55 ) }
    dend_43 { pt3dadd( -84.1963, 149.687, 127.482, 0.28 ) }
    dend_43 { pt3dadd( -84.022, 150.979, 128.141, 0.28 ) }
    dend_43 { pt3dadd( -83.4937, 153.611, 129.431, 1.11 ) }
    dend_43 { pt3dadd( -81.886, 159.428, 131.713, 0.28 ) }
    dend_43 { pt3dadd( -81.5233, 160.357, 131.954, 0.55 ) }
    dend_43 { pt3dadd( -80.8472, 161.828, 132.2, 0.28 ) }
    dend_43 { pt3dadd( -80.5527, 162.318, 132.209, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 40/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -61.3372, 108.099, 78.9199, 0.28 ) }
    dend_42 { pt3dadd( -61.4482, 114.989, 77.0124, 0.28 ) }
    dend_42 { pt3dadd( -61.6792, 117.895, 76.2736, 0.28 ) }
    dend_42 { pt3dadd( -61.8609, 119.467, 75.9082, 0.28 ) }
    dend_42 { pt3dadd( -62.1134, 122.122, 75.0877, 0.83 ) }
    dend_42 { pt3dadd( -62.3535, 125.468, 73.9877, 0.28 ) }
    dend_42 { pt3dadd( -62.3454, 126.14, 73.7273, 0.55 ) }
    dend_42 { pt3dadd( -62.2062, 129.298, 72.4428, 0.28 ) }
    dend_42 { pt3dadd( -62.0482, 131.162, 71.5469, 0.55 ) }
    dend_42 { pt3dadd( -61.396, 135.643, 69.156, 0.28 ) }
    dend_42 { pt3dadd( -60.9657, 137.353, 68.1366, 0.83 ) }
    dend_42 { pt3dadd( -59.2789, 141.731, 65.3018, 0.28 ) }
    dend_42 { pt3dadd( -58.8895, 142.531, 64.7299, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 53/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 19.7356, 130.276, -52.9236, 0.28 ) }
    dend_33 { pt3dadd( 19.0413, 136.683, -55.7401, 0.28 ) }
    dend_33 { pt3dadd( 18.3553, 143.323, -58.0356, 0.28 ) }
    dend_33 { pt3dadd( 17.0831, 150.188, -59.3051, 0.28 ) }
    dend_33 { pt3dadd( 16.323, 157.254, -59.8601, 0.28 ) }
    dend_33 { pt3dadd( 14.5424, 164.116, -60.3889, 0.28 ) }
    dend_33 { pt3dadd( 11.4291, 170.39, -61.232, 0.28 ) }
    dend_33 { pt3dadd( 9.6984, 177.262, -61.8001, 0.28 ) }
    dend_33 { pt3dadd( 8.6645, 184.179, -63.0348, 0.28 ) }
    dend_33 { pt3dadd( 7.90028, 190.995, -64.8026, 0.28 ) }
    dend_33 { pt3dadd( 5.79164, 197.544, -66.3975, 0.28 ) }
    dend_33 { pt3dadd( 2.94999, 203.489, -68.7738, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 65/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 19.7356, 130.276, -52.9236, 1.11 ) }
    dend_32 { pt3dadd( 19.2275, 137.857, -57.1429, 0.28 ) }
    dend_32 { pt3dadd( 19.9963, 146.24, -59.5843, 0.28 ) }
    dend_32 { pt3dadd( 21.1605, 154.088, -63.1664, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 69/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 110.1, 84.4937, -29.4512, 0.28 ) }
    dend_29 { pt3dadd( 118.7, 90.2519, -33.7027, 0.28 ) }
    dend_29 { pt3dadd( 128.322, 93.7889, -37.9459, 0.28 ) }
    dend_29 { pt3dadd( 137.661, 97.9022, -42.3541, 0.28 ) }
    dend_29 { pt3dadd( 146.553, 102.004, -47.611, 0.28 ) }
    dend_29 { pt3dadd( 154.973, 108.125, -51.7644, 0.28 ) }
    dend_29 { pt3dadd( 162.31, 114.822, -57.0163, 0.28 ) }
    dend_29 { pt3dadd( 169.831, 121.347, -62.2043, 0.28 ) }
    dend_29 { pt3dadd( 176.28, 126.465, -69.7273, 0.28 ) }
    dend_29 { pt3dadd( 183.218, 131.83, -76.6369, 0.28 ) }
    dend_29 { pt3dadd( 190.357, 137.387, -83.1973, 0.28 ) }
    dend_29 { pt3dadd( 197.952, 143.019, -89.1615, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 81/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 110.1, 84.4937, -29.4512, 1.11 ) }
    dend_28 { pt3dadd( 117.144, 88.9207, -32.784, 0.28 ) }
    dend_28 { pt3dadd( 123.573, 94.213, -36.2138, 0.28 ) }
    dend_28 { pt3dadd( 129.501, 100.404, -39.1504, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 73.2684, 106.116, 35.395, 1.11 ) }
    dend_26 { pt3dadd( 75.1333, 108.164, 37.3237, 1.11 ) }
    dend_26 { pt3dadd( 76.6869, 109.851, 38.7227, 0.55 ) }
    dend_26 { pt3dadd( 77.937, 111.05, 39.4778, 0.83 ) }
    dend_26 { pt3dadd( 79.699, 112.726, 40.344, 0.28 ) }
    dend_26 { pt3dadd( 82.8577, 115.71, 41.6451, 1.38 ) }
    dend_26 { pt3dadd( 86.7439, 119.383, 43.0587, 0.55 ) }
    dend_26 { pt3dadd( 89.7027, 122.213, 44.1635, 1.38 ) }
    dend_26 { pt3dadd( 94.0776, 126.282, 45.7478, 0.28 ) }
    dend_26 { pt3dadd( 95.1688, 127.265, 46.1892, 0.55 ) }
    dend_26 { pt3dadd( 97.8194, 129.611, 47.3879, 0.28 ) }
    dend_26 { pt3dadd( 100.119, 131.587, 48.5746, 0.83 ) }
    dend_26 { pt3dadd( 105.767, 136.498, 52.1101, 0.28 ) }
    dend_26 { pt3dadd( 107.825, 138.323, 53.7067, 1.11 ) }
    dend_26 { pt3dadd( 110.686, 140.959, 56.3691, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( 112.931, 142.982, 58.6082, 0.83 ) }
    dend_26 { pt3dadd( 114.67, 144.554, 60.5084, 0.28 ) }
    dend_26 { pt3dadd( 115.704, 145.451, 61.6627, 0.55 ) }
    dend_26 { pt3dadd( 116.64, 146.207, 62.6783, 0.28 ) }
    dend_26 { pt3dadd( 117.661, 147.023, 63.7447, 0.83 ) }
    dend_26 { pt3dadd( 119.382, 148.339, 65.4226, 0.28 ) }
    dend_26 { pt3dadd( 120.347, 149.031, 66.3889, 0.83 ) }
    dend_26 { pt3dadd( 121.922, 150.109, 67.9846, 0.28 ) }
    dend_26 { pt3dadd( 123.24, 150.994, 69.3619, 0.55 ) }
    dend_26 { pt3dadd( 125.399, 152.353, 71.5292, 0.28 ) }
    dend_26 { pt3dadd( 126.536, 153.05, 72.6797, 0.83 ) }
    dend_26 { pt3dadd( 128.742, 154.433, 74.7339, 0.28 ) }
    dend_26 { pt3dadd( 129.825, 155.083, 75.6148, 1.11 ) }
    dend_26 { pt3dadd( 133.366, 157.222, 78.2206, 0.28 ) }
    dend_26 { pt3dadd( 134.693, 157.987, 79.0756, 0.28 ) }
    dend_26 { pt3dadd( 137.611, 159.642, 80.785, 0.83 ) }
    dend_26 { pt3dadd( 141.73, 162.124, 83.0581, 0.28 ) }
    dend_26 { pt3dadd( 144.126, 164.143, 84.6885, 0.83 ) }
    dend_26 { pt3dadd( 145.769, 166.095, 86.2002, 0.28 ) }
    dend_26 { pt3dadd( 146.388, 167.139, 86.9856, 0.83 ) }
    dend_26 { pt3dadd( 147.37, 169.555, 88.8866, 0.28 ) }
    dend_26 { pt3dadd( 147.641, 170.719, 89.8772, 0.83 ) }
    dend_26 { pt3dadd( 148.289, 178.806, 97.4549, 0.28 ) }
    dend_26 { pt3dadd( 148.257, 180.407, 99.058, 0.55 ) }
    dend_26 { pt3dadd( 148.184, 181.243, 99.9796, 0.83 ) }
    dend_26 { pt3dadd( 147.864, 183.193, 102.359, 0.28 ) }
    dend_26 { pt3dadd( 147.535, 184.854, 104.499, 0.83 ) }
    dend_26 { pt3dadd( 146.979, 187.397, 108.015, 0.28 ) }
    dend_26 { pt3dadd( 146.597, 189.182, 110.808, 0.83 ) }
    dend_26 { pt3dadd( 145.716, 192.702, 116.397, 0.28 ) }
    dend_26 { pt3dadd( 144.775, 195.879, 121.509, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 31/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 73.2684, 106.116, 35.395, 0.28 ) }
    dend_25 { pt3dadd( 75.2532, 104.741, 36.7449, 0.28 ) }
    dend_25 { pt3dadd( 76.04, 104.203, 37.3183, 0.55 ) }
    dend_25 { pt3dadd( 81.3783, 100.716, 41.6215, 0.28 ) }
    dend_25 { pt3dadd( 82.8971, 99.7943, 42.9803, 1.11 ) }
    dend_25 { pt3dadd( 84.5249, 98.8642, 44.5431, 0.28 ) }
    dend_25 { pt3dadd( 85.0575, 98.5748, 45.0925, 0.55 ) }
    dend_25 { pt3dadd( 86.4051, 97.9475, 46.702, 0.28 ) }
    dend_25 { pt3dadd( 88.1306, 97.1938, 48.9276, 1.66 ) }
    dend_25 { pt3dadd( 89.8468, 96.549, 51.477, 0.28 ) }
    dend_25 { pt3dadd( 90.3029, 96.3975, 52.1229, 0.83 ) }
    dend_25 { pt3dadd( 91.5572, 96.008, 53.9171, 0.28 ) }
    dend_25 { pt3dadd( 92.2593, 95.7736, 54.8768, 0.83 ) }
    dend_25 { pt3dadd( 96.1671, 94.3192, 59.9997, 0.28 ) }
    dend_25 { pt3dadd( 97.5533, 93.7905, 61.8124, 1.11 ) }
    dend_25 { pt3dadd( 100.192, 92.8076, 65.324, 0.28 ) }
    dend_25 { pt3dadd( 101.006, 92.5124, 66.457, 0.83 ) }
    dend_25 { pt3dadd( 102.866, 91.885, 69.1655, 0.28 ) }
    dend_25 { pt3dadd( 103.304, 91.7583, 69.8407, 0.83 ) }
    dend_25 { pt3dadd( 104.747, 91.3945, 72.117, 0.28 ) }
    dend_25 { pt3dadd( 105.636, 91.1613, 73.4996, 0.83 ) }
    dend_25 { pt3dadd( 106.78, 90.9, 75.3097, 0.28 ) }
    dend_25 { pt3dadd( 107.373, 90.8227, 76.2062, 0.83 ) }
    dend_25 { pt3dadd( 113.196, 90.5513, 84.9081, 0.28 ) }
    dend_25 { pt3dadd( 114.073, 90.5588, 86.1621, 0.55 ) }
    dend_25 { pt3dadd( 115.578, 90.6519, 88.2109, 0.28 ) }
    dend_25 { pt3dadd( 117.085, 90.766, 90.1927, 1.11 ) }
    dend_25 { pt3dadd( 120.735, 91.2155, 94.8432, 0.28 ) }
    dend_25 { pt3dadd( 121.566, 91.3908, 95.9131, 0.83 ) }
    dend_25 { pt3dadd( 122.32, 91.7747, 96.9004, 0.28 ) }
    dend_25 { pt3dadd( 122.94, 92.1542, 97.745, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 62/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 46.8242, 177.007, 6.12321, 0.55 ) }
    dend_21 { pt3dadd( 47.0259, 177.811, 6.43355, 0.55 ) }
    dend_21 { pt3dadd( 47.7811, 180.559, 7.46077, 0.83 ) }
    dend_21 { pt3dadd( 48.5296, 183.252, 8.46984, 0.55 ) }
    dend_21 { pt3dadd( 49.1719, 186.315, 9.58221, 0.83 ) }
    dend_21 { pt3dadd( 49.5163, 188.171, 10.1799, 0.55 ) }
    dend_21 { pt3dadd( 50.0038, 191.006, 11.0499, 0.83 ) }
    dend_21 { pt3dadd( 50.2839, 192.537, 11.5009, 0.55 ) }
    dend_21 { pt3dadd( 50.701, 194.641, 12.065, 1.11 ) }
    dend_21 { pt3dadd( 51.3353, 198.427, 12.5093, 1.11 ) }
    dend_21 { pt3dadd( 51.5931, 201.112, 12.4393, 0.55 ) }
    dend_21 { pt3dadd( 51.6273, 201.9, 12.3353, 0.83 ) }
    dend_21 { pt3dadd( 51.6511, 203.183, 11.9772, 0.55 ) }
    dend_21 { pt3dadd( 51.6104, 205.364, 11.1971, 0.83 ) }
    dend_21 { pt3dadd( 51.2331, 212.466, 8.01637, 0.55 ) }
    dend_21 { pt3dadd( 50.9523, 215.996, 6.20412, 0.55 ) }
    dend_21 { pt3dadd( 50.7343, 217.746, 5.26294, 0.83 ) }
    dend_21 { pt3dadd( 50.097, 221.921, 2.94593, 0.55 ) }
    dend_21 { pt3dadd( 49.7745, 223.65, 1.96564, 0.83 ) }
    dend_21 { pt3dadd( 49.3586, 225.686, 0.853254, 0.28 ) }
    dend_21 { pt3dadd( 49.2911, 226.073, 0.744376, 0.55 ) }
    dend_21 { pt3dadd( 49.2188, 226.959, 0.587014, 0.28 ) }
    dend_21 { pt3dadd( 49.1945, 227.813, 0.522234, 0.55 ) }
    dend_21 { pt3dadd( 49.2434, 229.496, 0.59141, 0.28 ) }
    dend_21 { pt3dadd( 49.3389, 231.302, 0.666975, 0.83 ) }
    dend_21 { pt3dadd( 49.6615, 236.866, 0.982308, 0.28 ) }
    dend_21 { pt3dadd( 49.7734, 238.562, 1.07169, 0.83 ) }
    dend_21 { pt3dadd( 49.8783, 240.187, 1.1551, 0.28 ) }
    dend_21 { pt3dadd( 49.9465, 241.088, 1.19878, 0.55 ) }
    dend_21 { pt3dadd( 50.1923, 243.709, 1.34537, 0.28 ) }
    dend_21 { pt3dadd( 50.3306, 244.869, 1.39939, 0.55 ) }
    dend_21 { pt3dadd( 51.0924, 250.41, 1.78042, 0.28 ) }
    dend_21 { pt3dadd( 51.2121, 251.251, 1.88186, 0.28 ) }
    dend_21 { pt3dadd( 51.6172, 254.167, 2.35835, 0.83 ) }
    dend_21 { pt3dadd( 51.9695, 256.873, 2.88014, 1.11 ) }
    dend_21 { pt3dadd( 52.2841, 259.244, 3.41568, 1.66 ) }
    dend_21 { pt3dadd( 52.7292, 263.346, 4.36753, 1.38 ) }
    dend_21 { pt3dadd( 52.9426, 265.848, 4.98101, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 53.1048, 268.236, 5.55876, 1.38 ) }
    dend_21 { pt3dadd( 53.3938, 275.548, 7.23529, 0.28 ) }
    dend_21 { pt3dadd( 53.4042, 276.751, 7.49474, 0.55 ) }
    dend_21 { pt3dadd( 53.398, 279.37, 7.97935, 0.28 ) }
    dend_21 { pt3dadd( 53.3873, 280.482, 8.12523, 0.55 ) }
    dend_21 { pt3dadd( 53.3058, 284.191, 8.52483, 0.28 ) }
    dend_21 { pt3dadd( 53.1883, 287.927, 8.70853, 0.83 ) }
    dend_21 { pt3dadd( 52.9576, 292.989, 8.71462, 0.28 ) }
    dend_21 { pt3dadd( 52.77, 295.875, 8.5167, 1.11 ) }
    dend_21 { pt3dadd( 52.5404, 298.751, 8.15692, 0.28 ) }
    dend_21 { pt3dadd( 52.3511, 300.3, 7.74193, 0.83 ) }
    dend_21 { pt3dadd( 51.836, 303.538, 6.43484, 0.28 ) }
    dend_21 { pt3dadd( 51.7223, 304.159, 6.11962, 0.83 ) }
    dend_21 { pt3dadd( 50.9591, 307.666, 3.88842, 0.28 ) }
    dend_21 { pt3dadd( 50.7171, 308.597, 3.24097, 1.11 ) }
    dend_21 { pt3dadd( 49.167, 314.196, -1.01112, 0.28 ) }
    dend_21 { pt3dadd( 48.7895, 315.49, -2.07913, 0.83 ) }
    dend_21 { pt3dadd( 46.8224, 325.407, -4.00091, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 18/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 46.8242, 177.007, 6.12321, 0.83 ) }
    dend_18 { pt3dadd( 47.7329, 180.196, 5.50232, 0.83 ) }
    dend_18 { pt3dadd( 48.4259, 183.516, 4.52237, 0.83 ) }
    dend_18 { pt3dadd( 48.8669, 185.629, 3.89885, 0.55 ) }
    dend_18 { pt3dadd( 49.1978, 187.214, 3.43093, 0.55 ) }
    dend_18 { pt3dadd( 49.8533, 190.355, 2.50405, 0.55 ) }
    dend_18 { pt3dadd( 50.3433, 192.702, 1.8112, 0.83 ) }
    dend_18 { pt3dadd( 50.7907, 196.085, 0.265403, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 26/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 37.0702, 147.822, -45.1961, 0.28 ) }
    dend_14 { pt3dadd( 33.5629, 152.108, -52.1336, 0.28 ) }
    dend_14 { pt3dadd( 29.2139, 157.682, -57.5858, 0.28 ) }
    dend_14 { pt3dadd( 24.3467, 164.133, -61.5032, 0.28 ) }
    dend_14 { pt3dadd( 17.7511, 168.883, -65.13, 0.28 ) }
    dend_14 { pt3dadd( 9.88502, 172.62, -66.8455, 0.28 ) }
    dend_14 { pt3dadd( 2.15161, 175.967, -69.5905, 0.28 ) }
    dend_14 { pt3dadd( -5.4311, 180.053, -71.7682, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 34/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 37.0702, 147.822, -45.1961, 1.11 ) }
    dend_13 { pt3dadd( 37.4852, 151.057, -52.1861, 0.28 ) }
    dend_13 { pt3dadd( 39.0845, 154.39, -58.961, 0.28 ) }
    dend_13 { pt3dadd( 41.2673, 156.781, -65.9432, 0.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 38/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 136.217, 161.639, -10.8669, 0.28 ) }
    dend_7 { pt3dadd( 143.993, 168.12, -12.0164, 0.28 ) }
    dend_7 { pt3dadd( 152.11, 174.218, -11.9145, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 41/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 136.217, 161.639, -10.8669, 0.28 ) }
    dend_6 { pt3dadd( 143.461, 167.788, -12.1377, 0.28 ) }
    dend_6 { pt3dadd( 150.992, 173.576, -13.2624, 0.28 ) }
    dend_6 { pt3dadd( 157.732, 180.109, -15.3623, 0.28 ) }
    dend_6 { pt3dadd( 164.418, 186.165, -18.6371, 0.28 ) }
    dend_6 { pt3dadd( 171.59, 192.121, -20.8562, 0.28 ) }
    dend_6 { pt3dadd( 177.994, 199.066, -22.7946, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 50.7907, 196.085, 0.265403, 0.55 ) }
    dend_20 { pt3dadd( 52.43, 198.748, -2.02763, 0.55 ) }
    dend_20 { pt3dadd( 53.3018, 200.022, -2.95598, 0.55 ) }
    dend_20 { pt3dadd( 56.3903, 203.99, -5.77425, 0.55 ) }
    dend_20 { pt3dadd( 58.0849, 205.921, -7.30879, 0.55 ) }
    dend_20 { pt3dadd( 59.8954, 207.837, -8.88871, 0.28 ) }
    dend_20 { pt3dadd( 62.3503, 210.332, -10.9015, 0.28 ) }
    dend_20 { pt3dadd( 64.2493, 212.101, -12.294, 0.83 ) }
    dend_20 { pt3dadd( 66.0658, 213.656, -13.48, 0.83 ) }
    dend_20 { pt3dadd( 69.3863, 216.196, -15.2025, 0.28 ) }
    dend_20 { pt3dadd( 70.4721, 216.923, -15.8978, 0.55 ) }
    dend_20 { pt3dadd( 71.9904, 217.915, -17.0664, 0.55 ) }
    dend_20 { pt3dadd( 73.1516, 218.647, -18.0891, 0.55 ) }
    dend_20 { pt3dadd( 74.4392, 219.48, -19.3201, 0.55 ) }
    dend_20 { pt3dadd( 76.2395, 220.689, -21.0807, 0.55 ) }
    dend_20 { pt3dadd( 80.7397, 223.706, -25.5719, 0.55 ) }
    dend_20 { pt3dadd( 81.8002, 224.403, -26.7225, 0.55 ) }
    dend_20 { pt3dadd( 84.4101, 226.062, -29.795, 0.28 ) }
    dend_20 { pt3dadd( 85.9078, 227.019, -31.6364, 0.83 ) }
    dend_20 { pt3dadd( 92.725, 231.59, -35.6117, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 68/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 50.7907, 196.085, 0.265403, 0.28 ) }
    dend_19 { pt3dadd( 49.5103, 198.062, 0.195414, 0.28 ) }
    dend_19 { pt3dadd( 48.5542, 199.561, 0.0751614, 0.55 ) }
    dend_19 { pt3dadd( 46.9218, 202.144, -0.139131, 0.28 ) }
    dend_19 { pt3dadd( 45.2522, 204.88, -0.443838, 0.83 ) }
    dend_19 { pt3dadd( 43.9928, 207.048, -0.736933, 0.28 ) }
    dend_19 { pt3dadd( 42.9832, 208.88, -1.02869, 0.55 ) }
    dend_19 { pt3dadd( 42.3779, 210.012, -1.25129, 0.28 ) }
    dend_19 { pt3dadd( 42.1354, 210.551, -1.39671, 0.83 ) }
    dend_19 { pt3dadd( 41.3429, 212.323, -2.00389, 0.28 ) }
    dend_19 { pt3dadd( 41.0476, 213.041, -2.22874, 0.55 ) }
    dend_19 { pt3dadd( 40.5086, 214.357, -2.61002, 0.28 ) }
    dend_19 { pt3dadd( 40.2657, 214.94, -2.76131, 0.55 ) }
    dend_19 { pt3dadd( 38.6274, 218.636, -3.74706, 0.28 ) }
    dend_19 { pt3dadd( 37.6726, 220.699, -4.29676, 0.55 ) }
    dend_19 { pt3dadd( 36.6228, 222.801, -4.79236, 0.28 ) }
    dend_19 { pt3dadd( 35.9811, 223.995, -5.05748, 0.55 ) }
    dend_19 { pt3dadd( 31.7992, 234.419, -8.35296, 0.55 ) }
    dend_19 { pt3dadd( 27.7935, 245.063, -11.2032, 0.55 ) }
    dend_19 { pt3dadd( 24.4289, 256.349, -11.7187, 0.55 ) }
    dend_19 { pt3dadd( 21.7255, 267.631, -13.7612, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 89/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.4311, 180.053, -71.7682, 0.28 ) }
    dend_16 { pt3dadd( -14.8635, 187.385, -76.8834, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 91/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.4311, 180.053, -71.7682, 0.28 ) }
    dend_15 { pt3dadd( -11.2776, 184.423, -77.5261, 0.28 ) }
    dend_15 { pt3dadd( -15.5808, 190.673, -83.0331, 0.28 ) }
    dend_15 { pt3dadd( -19.0409, 197.174, -88.8497, 0.28 ) }
    dend_15 { pt3dadd( -23.676, 203.887, -93.5393, 0.28 ) }
    dend_15 { pt3dadd( -29.2469, 210.288, -97.5861, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 97/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 152.11, 174.218, -11.9145, 0.28 ) }
    dend_9 { pt3dadd( 158.956, 181.884, -20.3682, 0.28 ) }
    dend_9 { pt3dadd( 166.866, 190.073, -27.3314, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 0/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 152.11, 174.218, -11.9145, 0.28 ) }
    dend_8 { pt3dadd( 158.373, 179.208, -9.82656, 0.28 ) }
    dend_8 { pt3dadd( 164.545, 183.73, -6.74476, 0.28 ) }
    dend_8 { pt3dadd( 171.167, 186.778, -3.02972, 0.28 ) }
    dend_8 { pt3dadd( 178.42, 187.894, 0.471229, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_35, dend_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_52 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_35, dend_0, dend_62, dend_53, dend_37, dend_36, dend_2, dend_1, dend_64, dend_63, dend_61, dend_54, dend_45, dend_38, dend_22, dend_3, dend_60, dend_55, dend_49, dend_46, dend_40, dend_39, dend_30, dend_23, dend_11, dend_4, dend_59, dend_56, dend_51, dend_50, dend_48, dend_47, dend_44, dend_41, dend_34, dend_31, dend_27, dend_24, dend_17, dend_12, dend_10, dend_5, dend_58, dend_57, dend_43, dend_42, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25, dend_21, dend_18, dend_14, dend_13, dend_7, dend_6, dend_20, dend_19, dend_16, dend_15, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_64 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_63 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_61 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_54 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_60 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_49 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_46 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_40 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_39 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_11 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_59 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_50 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_47 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_41 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_34 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_31 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_27 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_24 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_17 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_57 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_43 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_33 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_29 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_26 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_25 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_21 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_14 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_6 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_20 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_19 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_15 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_52 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_53 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_37 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_62 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_38 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_22 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_23 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_30 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_56 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_58 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_28 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_32 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_42 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_51 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_18 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_13 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_48 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_5 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_7 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_16 OneSecGrp_SectionRef_65.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_9 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_8 OneSecGrp_SectionRef_68.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_35, dend_35, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_53, dend_53, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_22, dend_22, dend_22, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_53 all.append()
    dend_53 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_36 nseg = 13
    dend_1 nseg = 15
    dend_64 nseg = 9
    dend_63 nseg = 9
    dend_61 nseg = 3
    dend_54 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 11
    dend_55 nseg = 3
    dend_49 nseg = 5
    dend_46 nseg = 7
    dend_40 nseg = 3
    dend_39 nseg = 11
    dend_11 nseg = 3
    dend_4 nseg = 7
    dend_59 nseg = 5
    dend_50 nseg = 3
    dend_47 nseg = 3
    dend_44 nseg = 3
    dend_41 nseg = 3
    dend_34 nseg = 3
    dend_31 nseg = 5
    dend_27 nseg = 5
    dend_24 nseg = 3
    dend_17 nseg = 3
    dend_12 nseg = 3
    dend_57 nseg = 3
    dend_43 nseg = 5
    dend_33 nseg = 3
    dend_29 nseg = 7
    dend_26 nseg = 7
    dend_25 nseg = 5
    dend_21 nseg = 7
    dend_14 nseg = 3
    dend_6 nseg = 3
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_NBC_8d74f99eef_0_0


