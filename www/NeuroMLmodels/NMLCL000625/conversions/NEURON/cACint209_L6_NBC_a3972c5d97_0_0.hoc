// Cell: cACint209_L6_NBC_a3972c5d97_0_0
/*
{
  "id" : "cACint209_L6_NBC_a3972c5d97_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-13.5885, -1.40806, -1.21115, 3.28922", "-12.1797, -1.31485, -1.09796, 5.53013", "-10.7708, -1.22164, -0.98478, 8.11492", "-9.36203, -1.12843, -0.871597, 8.79827", "-7.95321, -1.03522, -0.758413, 9.64874", "-6.54439, -0.94201, -0.645229, 10.525", "-5.13557, -0.848801, -0.532045, 11.3671", "-3.72674, -0.755591, -0.418861, 12.0867", "-2.31792, -0.662382, -0.305678, 12.7138", "-0.909103, -0.569173, -0.192494, 13.1296", "0.499717, -0.475964, -0.0793099, 13.1814", "1.90854, -0.382755, 0.033874, 12.8438", "3.31736, -0.289546, 0.147058, 12.4399", "4.72618, -0.196336, 0.260242, 11.9471", "6.135, -0.103127, 0.373425, 11.0762", "7.54382, -0.00991806, 0.486609, 10.1681", "8.95264, 0.0832911, 0.599793, 8.77152", "10.3615, 0.1765, 0.712977, 7.19375", "11.7703, 0.269709, 0.826161, 5.5839", "13.1791, 0.362919, 0.939345, 4.44994", "14.5879, 0.456128, 1.05253, 2.56587" ]
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-12.1281, -3.87264, -1.27135, 2.58", "-12.1281, -3.87264, -1.27135, 2.58", "-13.5426, -4.7569, -1.47831, 2.21", "-13.6183, -4.79983, -1.49483, 2.21", "-14.7969, -5.44864, -1.78455, 2.21", "-15.7522, -5.94356, -2.01904, 2.14", "-15.8197, -5.97747, -2.03581, 2.14", "-16.8479, -6.45965, -2.34078, 1.92", "-18.2071, -7.07085, -2.77025, 1.92", "-18.2731, -7.10294, -2.79457, 1.92", "-19.4554, -7.73714, -3.31558, 1.92", "-19.5082, -7.76772, -3.34162, 1.92", "-20.8227, -8.61065, -3.99646, 1.92", "-22.3619, -9.64839, -4.7828, 2.14", "-23.7899, -10.645, -5.53582, 2.14", "-25.4042, -11.8001, -6.41773, 2.14", "-26.7195, -12.7925, -7.1838, 2.87", "-28.1305, -13.8812, -8.01004, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000602452921
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-12.6281, 1.81836, -0.451354, 2.73", "-12.6281, 1.81836, -0.451354, 2.73", "-13.3821, 2.04803, -0.451354, 2.65", "-13.9259, 2.21368, -0.451354, 2.95", "-14.5791, 2.41266, -0.451354, 3.24", "-15.4024, 2.66343, -0.451354, 3.46", "-15.8407, 2.79696, -0.451354, 3.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000602452921
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "14.6219, 1.08336, -0.521354, 3.68", "14.6219, 1.08336, -0.521354, 3.68", "18.1288, 0.659103, 1.22009, 3.68", "20.8783, 0.326462, 2.58547, 3.17", "23.328, 0.0300988, 3.80194, 3.17", "25.5493, -0.238637, 4.90501, 3.02" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000602452921
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "14.5879, 0.456128, 1.05253, 0.535241", "29.5552, 1.44638, 1.05253, 0.535241", "44.5225, 2.43664, 1.05253, 0.535241" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-28.1305, -13.8812, -8.01004, 1.92", "-28.1879, -15.8092, -8.44978, 1.92", "-28.2527, -17.9579, -8.86448, 0.74", "-28.2555, -18.0498, -8.88061, 0.74", "-28.2901, -19.5801, -9.23392, 0.52", "-28.3021, -20.7093, -9.50805, 1.11", "-28.3036, -20.813, -9.53257, 1.11", "-28.3444, -22.1433, -9.80722, 1.11", "-28.348, -22.235, -9.82392, 1.11", "-28.5584, -24.562, -10.2219, 0.59", "-28.8483, -26.4633, -10.5268, 0.59", "-29.1513, -27.8076, -10.7173, 1.4", "-29.4915, -29.1807, -10.8754, 0.74", "-29.514, -29.2711, -10.8771, 0.74", "-30.0333, -31.3463, -10.7341, 0.74", "-30.2974, -32.5452, -10.513, 1.18", "-30.4881, -33.6074, -10.2603, 1.62", "-30.6465, -35.3531, -9.75614, 1.47", "-30.6726, -37.8117, -8.9487, 0.88", "-30.6674, -37.9116, -8.91314, 0.88", "-30.3917, -39.5103, -8.25368, 0.74", "-30.3431, -39.7044, -8.16599, 0.74", "-29.8446, -41.3433, -7.37394, 0.74", "-29.7991, -41.5188, -7.28684, 0.74" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-28.1305, -13.8812, -8.01004, 1.69", "-29.7364, -14.5277, -8.82692, 1.69", "-31.026, -15.0758, -9.39566, 1.4", "-32.9033, -15.8923, -10.1588, 1.4", "-34.3567, -16.5244, -10.7495, 1.77", "-34.4241, -16.5537, -10.7769, 1.77", "-36.0223, -17.2488, -11.4265, 2.06", "-36.8112, -17.607, -11.6644, 2.06", "-36.9235, -17.66, -11.6947, 2.06" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-15.8407, 2.79696, -0.451354, 1.47", "-16.407, 4.02762, -0.398487, 1.47", "-16.7877, 4.85358, -0.305045, 0.81", "-17.1514, 5.63371, -0.159304, 0.81", "-17.6394, 6.65047, 0.123919, 0.81", "-18.2209, 7.85636, 0.505025, 0.81", "-18.6816, 8.84316, 0.822128, 0.81", "-19.2693, 10.0671, 1.26623, 0.81", "-19.7372, 11.0631, 1.66881, 0.81", "-20.254, 12.2086, 2.18039, 1.18", "-20.5519, 12.8667, 2.50886, 1.55", "-20.9575, 13.719, 3.04224, 1.84" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-15.8407, 2.79696, -0.451354, 2.06", "-18.4389, 3.39656, -0.957067, 2.06", "-20.5116, 3.8749, -1.36051, 1.84", "-22.5364, 4.3422, -1.75464, 1.84", "-24.381, 4.76789, -2.11368, 1.84", "-25.664, 5.06399, -2.36341, 1.84", "-27.595, 5.50963, -2.73927, 1.25" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "25.5493, -0.238637, 4.90501, 2.58", "27.4088, 1.17387, -0.051758, 2.58" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "25.5493, -0.238637, 4.90501, 3.02", "29.7476, -4.36531, 8.65189, 3.02", "30.9432, -5.11134, 10.132, 1.69", "32.3048, -5.81337, 11.6431, 1.4", "32.3599, -5.84178, 11.7042, 1.4", "33.5169, -6.43831, 12.9882, 1.4", "35.7117, -7.56996, 15.424, 1.18", "37.3261, -8.23262, 17.6106, 1.03", "38.1971, -8.48396, 18.6843, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "44.5225, 2.43664, 1.05253, 0.15", "59.4897, 3.42689, 1.05253, 0.15", "74.457, 4.41715, 1.05253, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-29.7991, -41.5188, -7.28684, 0.74", "-30.5414, -42.7633, -4.92467, 0.74", "-30.7027, -43.0415, -4.43926, 0.74", "-31.1424, -43.9172, -3.05597, 0.22", "-31.2719, -44.2301, -2.58929, 0.66", "-31.5628, -45.0312, -1.43024, 0.66", "-31.8341, -45.9969, -0.129702, 0.52", "-31.9061, -46.5383, 0.477711, 0.88", "-31.8925, -47.0028, 1.02767, 0.88", "-31.7576, -47.8624, 1.95563, 0.59", "-31.7437, -47.9311, 2.02139, 0.59", "-31.5767, -48.7598, 2.71299, 0.59", "-31.3288, -50.3559, 3.86378, 0.37", "-31.019, -53.1433, 5.76676, 0.66", "-30.9366, -54.1779, 6.41161, 0.96", "-30.8302, -55.451, 7.08779, 0.88", "-30.7118, -56.6494, 7.62368, 0.88", "-30.5541, -58.1203, 8.14143, 1.18", "-30.5382, -58.2155, 8.15863, 1.18", "-30.2847, -59.1991, 8.28536, 1.77", "-29.834, -60.6418, 8.54718, 1.69", "-29.3578, -61.9519, 8.83361, 1.69", "-29.2396, -62.243, 8.90302, 1.69", "-28.3751, -64.3338, 9.42308, 1.69", "-27.5172, -66.4695, 9.96111, 0.52", "-27.0926, -67.601, 10.2589, 0.52", "-27.025, -67.7924, 10.3094, 0.52", "-26.4572, -69.3761, 10.709, 0.52", "-26.3782, -69.5882, 10.7547, 0.52", "-25.9673, -70.6245, 11.0897, 1.18", "-25.9334, -70.7104, 11.1205, 1.18", "-25.3648, -72.1019, 11.7599, 1.47", "-25.259, -72.4137, 11.9268, 1.47", "-24.9834, -73.2802, 12.4531, 1.47", "-24.1446, -76.0108, 14.226, 0.52", "-23.8809, -76.9651, 14.9063, 0.52", "-23.8583, -77.0509, 14.9718, 0.52", "-23.5032, -78.6543, 16.3895, 0.52" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-29.7991, -41.5188, -7.28684, 0.15", "-28.7557, -41.6526, -6.43797, 0.15", "-28.706, -41.659, -6.39751, 0.15", "-28.2274, -41.7203, -6.00813, 0.15", "-27.2157, -41.8501, -5.18503, 0.15", "-26.7926, -41.9044, -4.84084, 0.15", "-26.7429, -41.9107, -4.80037, 0.15", "-18.8734, -41.8088, -0.0482643, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-36.9235, -17.66, -11.6947, 1.18", "-37.8912, -17.5016, -12.824, 1.18", "-39.8417, -17.1288, -14.9917, 0.59", "-40.399, -16.9863, -15.6075, 0.59", "-41.9602, -16.509, -17.2852, 0.59", "-42.6471, -16.2634, -17.9629, 0.81", "-43.55, -15.8986, -18.9721, 0.81", "-43.7268, -15.827, -19.1895, 0.81", "-44.7699, -15.3737, -20.7865, 0.74", "-44.9978, -15.2685, -21.2051, 0.74", "-45.5166, -15.0854, -22.3411, 0.74", "-47.0902, -14.8661, -26.3352, 0.59", "-47.4379, -14.8872, -27.3088, 0.59", "-48.0247, -14.9969, -28.8747, 0.59", "-48.0584, -15.0065, -28.9609, 0.59", "-48.4295, -15.1454, -29.8695, 0.44", "-48.8091, -15.2615, -30.7298, 0.44", "-49.8127, -15.3905, -32.5425, 1.18", "-50.158, -15.397, -33.1405, 1.18", "-51.6857, -15.4161, -35.7655, 0.52", "-52.142, -15.4504, -36.592, 0.52", "-53.2926, -15.6642, -38.8546, 0.52", "-53.992, -15.9832, -40.3304, 0.52", "-54.0268, -16.0042, -40.4015, 0.52", "-54.4929, -16.2249, -41.2074, 0.96", "-55.0617, -16.4578, -42.0335, 0.66", "-55.7529, -16.6826, -43.0571, 0.37", "-56.8223, -16.9495, -44.6628, 1.18", "-58.2208, -17.2091, -46.8848, 0.88", "-59.827, -17.4, -49.819, 0.29", "-59.9146, -17.4074, -49.9899, 0.96", "-61.5221, -17.5113, -53.3489, 1.33", "-63.4326, -17.6741, -57.7668, 0.52", "-64.403, -17.8041, -60.3638, 1.33", "-66.1615, -18.235, -65.7634, 0.37", "-66.3501, -18.3009, -66.4432, 0.74", "-66.8326, -18.4463, -68.3197, 0.74", "-67.541, -18.6545, -71.1585, 1.47", "-69.032, -19.143, -77.5857, 0.44", "-69.2178, -19.1821, -78.3911, 1.33", "-69.4168, -19.2047, -79.2296, 1.33", "-71.0833, -19.3435, -85.5999, 1.11", "-71.4669, -19.3745, -86.9166, 0.96", "-72.3326, -19.4102, -89.5631, 1.25", "-74.3207, -19.4984, -94.8979, 0.59", "-74.3571, -19.4994, -94.9834, 0.59", "-75.4034, -19.5808, -97.1264, 0.59", "-76.439, -19.7248, -99.0262, 1.33", "-77.1402, -19.7799, -100.43, 0.29", "-77.5493, -19.7969, -101.28, 0.29", "-78.707, -19.8738, -103.739, 0.66", "-79.1715, -19.9281, -104.783, 0.66", "-81.271, -20.2462, -109.925, 0.81", "-83.4109, -20.7739, -115.323, 1.18", "-84.3566, -21.1029, -117.824, 0.52", "-84.6467, -21.2244, -118.62, 0.44", "-85.3503, -21.5352, -120.574, 0.44", "-86.2348, -21.8219, -123.13, 1.11", "-86.5038, -21.8972, -123.893, 1.11", "-87.424, -22.0617, -126.504, 0.37", "-87.6434, -22.0817, -127.153, 0.37", "-88.877, -22.1691, -130.84, 0.37", "-90.8262, -22.2326, -136.755, 0.37", "-90.8615, -22.234, -136.856, 0.37", "-91.6441, -22.2685, -139.006, 0.66", "-93.4166, -22.4373, -143.651, 0.37", "-93.9921, -22.5313, -145.102, 0.96", "-94.0293, -22.5428, -145.187, 0.96", "-97.1375, -23.7916, -151.447, 0.29", "-98.2818, -24.2855, -153.65, 0.96", "-98.5544, -24.4184, -154.161, 0.96", "-98.7779, -24.5572, -154.601, 0.29", "-99.5423, -25.1184, -156.318, 0.29", "-99.6955, -25.2904, -156.673, 0.74", "-99.8586, -25.62, -157.087, 0.74", "-100.614, -27.1005, -159.032, 0.37", "-101.118, -28.0904, -160.441, 1.03", "-101.591, -28.9602, -161.922, 0.15", "-102.275, -30.0878, -164.259, 0.15", "-102.297, -30.1286, -164.341, 0.15", "-102.858, -31.2255, -166.445, 1.4", "-103.106, -31.7511, -167.369, 1.77", "-103.631, -33.2987, -169.849, 0.15", "-103.833, -33.9297, -171.372, 0.22", "-104.006, -34.5426, -173.425, 0.22", "-104.026, -34.6054, -173.654, 1.03", "-104.034, -34.6274, -173.745, 1.03", "-104.239, -34.9454, -175.275, 1.03", "-105.217, -36.1898, -182.209, 0.22", "-105.355, -36.3066, -183.124, 0.22", "-105.47, -36.3466, -183.795, 0.22", "-105.492, -36.3522, -183.917, 0.22", "-106.147, -36.4491, -186.898, 0.22", "-109.707, -37.0229, -197.946, 0.22" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-36.9235, -17.66, -11.6947, 1.92", "-38.2909, -18.6447, -12.0152, 1.92", "-39.4802, -19.4738, -12.2769, 1.69", "-40.3687, -20.082, -12.4725, 1.4", "-41.5478, -20.881, -12.7365, 1.4", "-41.6128, -20.9245, -12.7438, 1.4", "-42.6079, -21.5421, -12.7599, 1.4", "-43.1414, -21.8316, -12.673, 1.11", "-44.0853, -22.2119, -12.4677, 1.11", "-44.1476, -22.2295, -12.452, 1.11", "-46.3828, -22.7107, -11.8846, 1.11", "-47.4894, -22.9367, -11.6389, 1.11", "-47.5643, -22.9499, -11.6238, 1.11", "-49.3435, -23.3289, -11.3451, 1.33", "-50.3299, -23.567, -11.2627, 0.96", "-50.8279, -23.7473, -11.2846, 0.96", "-51.4059, -24.0297, -11.4144, 0.96", "-51.4692, -24.0732, -11.4312, 0.96", "-52.0913, -24.5865, -11.6003, 0.96", "-52.1538, -24.65, -11.6174, 0.96", "-53.078, -25.5742, -11.942, 0.96", "-53.1268, -25.6183, -11.9587, 0.96", "-54.2052, -26.5264, -12.3125, 1.18", "-54.9823, -27.1164, -12.5355, 1.18", "-55.0544, -27.1668, -12.5545, 1.18", "-55.8764, -27.7259, -12.7556, 1.18", "-56.6756, -28.2392, -12.9322, 1.18", "-56.768, -28.2988, -12.9483, 1.18", "-58.4019, -29.3874, -12.9764, 1.18", "-58.467, -29.4312, -12.9713, 1.18", "-59.1862, -29.9504, -12.8635, 1.18", "-59.5108, -30.1998, -12.79, 1.18", "-60.6069, -31.0586, -12.5144, 1.18", "-62.1711, -32.2668, -12.1207, 1.18", "-62.2408, -32.3204, -12.1023, 1.18", "-63.3025, -33.1237, -11.8601, 1.18", "-63.3647, -33.1702, -11.8475, 1.18", "-64.4323, -33.9522, -11.7014, 0.96", "-65.3754, -34.6105, -11.645, 0.96", "-65.515, -34.7045, -11.6473, 0.96", "-66.8781, -35.6071, -11.6686, 0.96", "-66.9718, -35.6665, -11.6698, 0.96", "-68.5202, -36.6819, -11.693, 0.96", "-69.5524, -37.405, -11.7132, 1.47" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-20.9575, 13.719, 3.04224, 1.11", "-20.6811, 14.5374, 3.54601, 1.11", "-20.4293, 15.3822, 4.08127, 0.74", "-20.1352, 16.5191, 4.92843, 0.74", "-19.9022, 17.4102, 5.61408, 0.74", "-19.6161, 18.3628, 6.36142, 1.11", "-19.0954, 19.8426, 7.48915, 0.74", "-18.8643, 20.5019, 7.99786, 0.74", "-18.3023, 21.8542, 9.00604, 0.44", "-17.9159, 22.5096, 9.43616, 0.44", "-17.4728, 23.0173, 9.69584, 0.81", "-16.7777, 23.6573, 9.89213, 1.03", "-16.4873, 23.9195, 9.98382, 1.03", "-15.7894, 24.6203, 10.4365, 0.81", "-15.3883, 25.1216, 10.9525, 0.59", "-15.0408, 25.7507, 11.8056, 0.44", "-14.7326, 26.5015, 12.8952, 0.44", "-14.2166, 28.1681, 15.3515, 0.88", "-14.009, 28.9919, 16.5031, 0.88", "-13.8205, 29.8954, 17.731, 0.88", "-13.6007, 30.7963, 18.8538, 0.37", "-13.4909, 31.1351, 19.2162, 0.96", "-13.2462, 31.7306, 19.7002, 1.25", "-12.7432, 32.7475, 20.3166, 1.62", "-12.5289, 33.1557, 20.5528, 1.62", "-11.6363, 34.8186, 21.531, 1.18", "-10.935, 36.0531, 22.3584, 0.74", "-10.6253, 36.5888, 22.7567, 1.03", "-9.81493, 37.9356, 23.8408, 1.03", "-9.35347, 38.6871, 24.509, 1.03", "-8.89888, 39.4345, 25.1888, 1.11", "-8.35842, 40.3339, 25.9994, 1.11", "-7.92162, 41.0448, 26.6439, 1.47", "-7.5149, 41.6785, 27.1642, 1.47", "-6.75928, 42.8768, 28.0772, 1.77", "-6.52564, 43.2421, 28.3385, 1.69", "-6.11147, 43.8916, 28.7626, 1.33", "-5.00912, 45.6296, 29.8802, 1.03", "-4.10076, 47.0312, 30.772, 1.03", "-3.44576, 48.048, 31.4253, 1.33", "-2.85329, 48.9832, 32.0067, 1.33", "-2.09627, 50.1851, 32.7518, 1.33", "-1.11829, 51.6537, 33.664, 1.03", "-0.375294, 52.6362, 34.2592, 1.03", "0.52038, 53.6776, 34.9424, 0.74", "0.984281, 54.1472, 35.2489, 0.44", "1.46, 54.6129, 35.5272, 0.44", "2.24026, 55.2883, 35.8133, 0.44", "3.10935, 55.9114, 35.8478, 0.44", "3.64587, 56.2626, 35.8033, 0.44", "4.11661, 56.5462, 35.7209, 1.03", "5.53582, 57.3855, 35.4406, 1.03", "6.52431, 58.0471, 35.2134, 1.33", "7.62826, 59.0149, 34.9142, 1.33", "8.21176, 59.6199, 34.7406, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-20.9575, 13.719, 3.04224, 0.81", "-21.5727, 14.61, 2.92942, 0.81", "-22.1418, 15.4088, 2.83073, 0.66", "-22.8808, 16.5039, 2.61961, 0.66", "-23.3357, 17.2413, 2.45322, 0.66", "-23.8236, 18.0974, 2.24601, 0.66", "-24.2238, 18.8727, 2.05145, 0.44", "-24.6393, 19.885, 1.77227, 0.44", "-25.1038, 21.2716, 1.3696, 0.52", "-25.3243, 22.1846, 1.0937, 0.52", "-25.3878, 22.5574, 0.963966, 0.81", "-25.5045, 23.3243, 0.680095, 0.81", "-25.6022, 23.9901, 0.41269, 1.18", "-25.7214, 24.5837, 0.172703, 0.59", "-25.9479, 25.3892, -0.135987, 0.59", "-26.2351, 26.2659, -0.400684, 0.59", "-26.8865, 28.0393, -0.93491, 0.59", "-27.2574, 28.9362, -1.20255, 0.88", "-27.8465, 30.2422, -1.5784, 0.88", "-28.1468, 30.8974, -1.75158, 1.25", "-28.9533, 32.5503, -2.09009, 1.03" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-27.595, 5.50963, -2.73927, 0.88", "-31.5313, 7.78921, 2.49003, 0.88", "-32.5854, 8.31902, 3.77029, 1.11", "-34.3305, 9.03919, 5.67796, 1.11", "-34.9634, 9.23634, 6.28168, 1.47", "-35.7095, 9.39809, 6.96581, 1.47", "-36.8645, 9.54711, 8.03614, 0.88", "-38.7062, 9.41958, 9.33609, 0.88", "-39.7117, 9.17206, 10.1278, 0.88", "-41.0762, 8.65934, 11.2107, 1.25", "-42.4092, 8.0987, 12.3437, 1.25", "-43.7178, 7.54299, 13.4424, 1.11", "-44.6056, 7.19309, 14.1033, 1.11", "-45.9456, 6.66599, 15.0531, 0.96", "-46.8058, 6.36041, 15.6816, 0.96", "-48.051, 6.00278, 16.5567, 0.96", "-49.6157, 5.72654, 17.4182, 0.96", "-51.4111, 5.5769, 18.2142, 1.84" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-27.595, 5.50963, -2.73927, 0.88", "-28.3749, 5.83, -3.1608, 0.88", "-30.1933, 6.52388, -4.10423, 0.88", "-31.8088, 7.12574, -4.92297, 0.88", "-33.431, 7.71007, -5.68313, 0.88", "-34.7184, 8.14577, -6.23701, 0.88", "-35.4188, 8.36492, -6.50276, 0.88", "-36.8708, 8.74549, -6.95192, 0.88", "-37.7175, 8.92194, -7.13234, 0.88", "-38.8086, 9.12265, -7.24019, 1.25", "-39.9882, 9.32206, -7.25505, 1.25", "-41.1977, 9.51887, -7.22692, 1.25", "-42.6821, 9.75949, -7.15916, 1.25", "-43.0735, 9.82652, -7.15085, 0.88", "-44.2286, 10.0442, -7.1875, 0.74", "-45.3818, 10.2884, -7.31091, 0.74", "-46.3091, 10.5264, -7.46773, 1.03", "-47.253, 10.8079, -7.69069, 1.25", "-48.4731, 11.2537, -8.01302, 1.25", "-49.1714, 11.5624, -8.22729, 0.96", "-49.6779, 11.8463, -8.40896, 0.81", "-50.3775, 12.3562, -8.69181, 0.81", "-50.7332, 12.6876, -8.83126, 0.66", "-51.4444, 13.4942, -9.13569, 0.66", "-52.0231, 14.2412, -9.38787, 0.96", "-52.5044, 14.94, -9.66591, 1.11", "-53.0741, 15.8451, -10.3055, 1.4", "-53.4132, 16.3485, -10.7864, 1.4", "-54.0002, 17.0821, -11.6467, 1.18", "-54.3407, 17.4252, -12.1427, 0.96", "-55.09, 17.9823, -13.19, 0.88", "-57.4134, 19.1021, -16.2954, 0.81", "-58.0069, 19.2514, -17.0048, 0.81", "-58.7905, 19.3129, -17.821, 1.33", "-59.2349, 19.2942, -18.2148, 1.33", "-60.4809, 19.1625, -19.1364, 0.96", "-61.6673, 19.0127, -19.8388, 0.96", "-62.8673, 18.8917, -20.3786, 0.81", "-64.1644, 18.8611, -20.9466, 1.25", "-65.2694, 18.9192, -21.4047, 1.25", "-66.1339, 19.0526, -21.7499, 1.25", "-67.3595, 19.4134, -22.2714, 1.03", "-67.9251, 19.6428, -22.6101, 0.88", "-68.558, 19.9126, -23.1201, 0.81", "-68.8272, 20.0032, -23.3811, 0.81", "-69.6164, 20.159, -24.2676, 0.74", "-70.8644, 20.2678, -25.7795, 0.74", "-72.0838, 20.2979, -27.2344, 0.59", "-72.7235, 20.3157, -27.9689, 0.59", "-73.4256, 20.3625, -28.7493, 0.59", "-74.36, 20.4985, -29.6889, 0.52", "-74.8105, 20.6049, -30.0601, 0.44", "-75.5506, 20.8944, -30.5723, 0.44", "-76.2982, 21.2824, -31.0222, 1.18", "-77.2269, 21.7953, -31.6164, 1.18", "-78.314, 22.3454, -32.3254, 1.18", "-78.8655, 22.5445, -32.6742, 1.18", "-79.854, 22.7248, -33.3838, 0.52", "-80.5062, 22.711, -33.8803, 0.52", "-81.5719, 22.5389, -34.8112, 0.52", "-82.2201, 22.3718, -35.4017, 0.52", "-82.8604, 22.2049, -36.1612, 0.52", "-83.5253, 22.0873, -37.0958, 0.52", "-84.0807, 22.1219, -38.0448, 0.52", "-84.8664, 22.3928, -39.4771, 0.37", "-85.1021, 22.5385, -39.8906, 0.37", "-86.4027, 23.5456, -42.0069, 0.74", "-86.8347, 23.9162, -42.612, 0.74", "-88.0676, 24.947, -43.9847, 1.03", "-88.7892, 25.467, -44.5875, 1.4", "-89.4501, 25.8214, -44.9099, 1.4", "-90.0394, 26.0761, -45.1197, 1.4", "-91.1061, 26.4616, -45.3518, 0.44", "-91.8049, 26.7049, -45.5043, 0.44", "-93.0503, 27.1252, -45.7835, 0.44", "-94.659, 27.6696, -46.2551, 0.44", "-95.9704, 28.1373, -46.6711, 0.88", "-96.5119, 28.3541, -46.8304, 0.88", "-97.4142, 28.7538, -47.0663, 0.37", "-98.3271, 29.1867, -47.2744, 0.37", "-98.7832, 29.4091, -47.3849, 0.15", "-99.7036, 29.8237, -47.5923, 0.15", "-101.383, 30.4921, -47.9689, 0.15", "-101.819, 30.6409, -48.0787, 0.66", "-102.807, 30.9183, -48.3271, 0.66", "-104.293, 31.2928, -48.7712, 0.66", "-104.986, 31.4554, -49.0239, 0.96", "-106.279, 31.7449, -49.6051, 0.37", "-107.0, 31.9172, -49.9601, 0.37", "-107.852, 32.1626, -50.3594, 0.37", "-108.464, 32.3944, -50.6575, 0.37", "-109.085, 32.6728, -50.9505, 0.37", "-109.875, 33.0792, -51.381, 0.37", "-110.555, 33.4756, -51.7682, 0.88", "-111.157, 33.8487, -52.1563, 1.11", "-112.222, 34.5059, -52.8535, 1.11", "-112.927, 34.9042, -53.335, 0.66", "-113.753, 35.3312, -53.9243, 0.44", "-114.289, 35.5905, -54.3045, 0.44", "-115.481, 36.1241, -55.1526, 0.44", "-116.26, 36.4387, -55.7061, 0.44", "-117.591, 36.9039, -56.5569, 0.22", "-117.957, 37.0204, -56.7816, 0.22", "-118.895, 37.2998, -57.2893, 0.22", "-120.164, 37.6515, -57.9003, 0.22", "-121.49, 38.0042, -58.5023, 0.59", "-122.555, 38.2825, -58.9668, 0.59", "-123.371, 38.4921, -59.2666, 0.59", "-124.61, 38.7979, -59.6986, 0.96", "-125.67, 39.0196, -60.0024, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "27.4088, 1.17387, -0.051758, 1.25", "29.5214, 3.28706, 2.98345, 1.25", "29.9493, 3.66809, 3.31231, 1.25", "30.0328, 3.74133, 3.36277, 1.25", "30.8532, 4.47657, 3.77786, 0.96", "32.0068, 5.52468, 4.30017, 0.96", "32.7772, 6.22463, 4.64898, 1.33", "33.8951, 7.1327, 4.77388, 1.69", "33.946, 7.17312, 4.77981, 1.69", "34.4064, 7.56543, 4.83134, 1.69", "34.4714, 7.63143, 4.8373, 1.69" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "27.4088, 1.17387, -0.051758, 1.18", "30.4714, 1.2093, 3.44157, 1.18", "32.1628, 1.41025, 4.83062, 1.03", "32.239, 1.42986, 4.87271, 1.03", "34.1444, 2.02538, 5.68257, 1.33", "35.5421, 2.54341, 6.13383, 1.33", "36.7069, 3.00914, 6.4433, 1.33", "36.7724, 3.04011, 6.4439, 1.33", "38.2025, 3.77997, 6.40673, 1.33", "38.7337, 4.05427, 6.41716, 1.33", "40.122, 4.76552, 6.5306, 1.33", "40.8612, 5.16325, 6.56452, 1.62", "41.6835, 5.60501, 6.58248, 1.92", "42.8687, 6.2335, 6.59582, 1.11", "44.1962, 6.92748, 6.58224, 0.88", "44.2806, 6.97398, 6.58089, 0.88", "45.5845, 7.7139, 6.5433, 0.88" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "38.1971, -8.48396, 18.6843, 1.03", "38.7642, -8.39591, 18.6343, 1.03", "38.9267, -8.36416, 18.6544, 1.03", "40.3056, -8.0629, 18.9379, 1.03", "40.4488, -8.02447, 18.9675, 1.03", "41.8384, -7.65465, 19.2171, 1.03", "41.9337, -7.62963, 19.233, 1.03", "43.798, -7.22721, 19.5831, 1.03", "43.8761, -7.21839, 19.6003, 1.03", "45.2099, -7.17755, 19.934, 1.03", "46.6971, -7.26473, 20.4176, 1.03", "46.8273, -7.28569, 20.4674, 1.03", "47.966, -7.59179, 20.938, 1.25", "49.1937, -8.07456, 21.4649, 1.25", "49.2558, -8.11189, 21.5023, 1.25", "50.3764, -9.16966, 22.4284, 1.25", "50.8225, -9.72969, 22.8876, 1.25", "51.1766, -10.2311, 23.3305, 1.11", "51.2147, -10.2855, 23.3804, 1.11", "52.2944, -11.6322, 24.7478, 1.11", "52.8412, -12.2538, 25.4052, 1.4", "52.8752, -12.2853, 25.4459, 1.4", "53.8683, -12.9836, 26.6447, 1.4", "55.0904, -13.5115, 27.9163, 1.11", "56.1952, -13.8022, 28.9533, 1.03", "56.2403, -13.8037, 28.9936, 1.03", "57.6346, -13.6836, 30.1373, 1.33", "57.7516, -13.6639, 30.2304, 1.33", "59.0281, -13.3601, 31.1997, 1.33", "59.081, -13.3423, 31.2425, 1.33", "60.5986, -12.7899, 32.462, 2.06", "61.8304, -12.3376, 33.4522, 2.06", "63.8923, -11.5726, 35.0999, 1.62", "63.9448, -11.5525, 35.1422, 1.62", "65.5025, -10.923, 36.4343, 1.4", "65.5543, -10.9027, 36.4775, 1.4", "67.0441, -10.3635, 37.6771, 1.33", "67.0936, -10.347, 37.7243, 1.33", "67.8477, -10.1887, 38.532, 1.03", "67.8932, -10.1869, 38.586, 1.03", "69.1452, -10.4462, 40.2696, 1.4", "69.3869, -10.5439, 40.6331, 1.4", "70.5874, -11.2442, 42.627, 1.03", "71.4998, -11.8563, 44.2087, 1.03", "72.1058, -12.3186, 45.2755, 1.03", "72.9261, -12.993, 46.6724, 1.03", "73.8755, -13.8652, 48.208, 0.81", "74.5531, -14.4964, 49.2472, 0.81", "74.5907, -14.5288, 49.2992, 0.81", "75.141, -14.9004, 50.0148, 0.81", "75.2305, -14.9336, 50.1336, 0.81", "75.5612, -14.9741, 50.5674, 0.81", "75.6056, -14.9703, 50.6221, 0.81", "76.9238, -14.7234, 52.2478, 0.81", "77.0184, -14.6971, 52.3658, 0.81", "78.3777, -14.3367, 53.9944, 0.81", "78.4389, -14.3194, 54.0723, 0.81", "78.9543, -14.1682, 54.7406, 0.81", "79.0164, -14.1522, 54.8181, 0.81", "80.2563, -13.8817, 56.2704, 0.81", "81.097, -13.7514, 57.3026, 0.81", "82.9841, -13.5751, 59.7189, 1.69", "83.0266, -13.5765, 59.7754, 1.69", "83.366, -13.6969, 60.2611, 1.69", "83.4019, -13.7255, 60.3163, 1.69", "84.2339, -14.7941, 61.6818, 1.11", "84.2616, -14.8422, 61.7289, 1.11", "84.8381, -16.0025, 62.6535, 1.03", "85.8605, -18.0513, 64.1555, 1.03", "86.612, -19.5102, 65.199, 1.03", "86.641, -19.5652, 65.2372, 1.03", "87.4202, -20.9383, 66.1947, 1.03", "88.2144, -22.2033, 67.2314, 1.03", "89.1147, -23.4606, 68.4542, 1.03", "90.0475, -24.5877, 69.8811, 0.96", "90.0744, -24.6176, 69.9281, 0.96", "90.7727, -25.3672, 71.4019, 0.66", "91.4436, -25.9897, 73.1441, 0.66", "91.4588, -26.0022, 73.2021, 0.66", "91.7135, -26.1435, 75.129, 0.66", "91.7165, -26.1421, 75.2786, 0.66", "91.7104, -26.1397, 75.4223, 0.66" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-23.5032, -78.6543, 16.3895, 0.29", "-23.2759, -79.9805, 16.5031, 0.29", "-23.264, -80.049, 16.5013, 0.29", "-23.1043, -80.9798, 16.4496, 0.29", "-23.0932, -81.0481, 16.4436, 0.29", "-22.9855, -81.6642, 16.4287, 1.25", "-22.7957, -82.702, 16.4257, 1.55", "-22.5759, -83.7924, 16.3878, 1.55", "-22.5443, -83.9377, 16.3829, 1.55", "-22.2278, -85.3088, 16.3499, 1.55", "-21.785, -87.1586, 16.3098, 1.4", "-21.7686, -87.226, 16.3089, 1.4", "-21.6314, -87.7788, 16.2982, 1.4", "-21.347, -89.0347, 16.2514, 0.74", "-21.3374, -89.0934, 16.2479, 0.74", "-21.2692, -89.9035, 16.1746, 0.74", "-21.2681, -89.9825, 16.1645, 0.74", "-21.2654, -91.4504, 16.0879, 0.74", "-21.2831, -92.4762, 16.0946, 0.74", "-21.2811, -93.5168, 16.1344, 0.74", "-21.2491, -94.7569, 16.231, 0.74", "-21.2453, -94.826, 16.2375, 0.74", "-21.1132, -96.5053, 16.4189, 0.74", "-21.0956, -96.6523, 16.4338, 0.74", "-20.7419, -98.8138, 16.6508, 0.74", "-20.5032, -100.08, 16.7519, 0.74", "-20.1738, -101.768, 16.8551, 0.74", "-20.1448, -101.914, 16.859, 0.74", "-19.7287, -103.946, 16.812, 0.74", "-19.502, -104.985, 16.7766, 1.25", "-19.1455, -106.495, 16.7009, 1.62", "-19.1254, -106.571, 16.6932, 1.62", "-18.8783, -107.432, 16.5731, 1.62", "-18.607, -108.387, 16.402, 1.84", "-18.5495, -108.592, 16.3575, 1.84", "-18.4487, -108.957, 16.2842, 1.84", "-18.016, -110.475, 16.1216, 1.33", "-17.6955, -111.676, 16.0758, 0.96", "-17.239, -113.467, 16.1074, 0.96", "-17.2228, -113.523, 16.1171, 0.96", "-16.7423, -115.032, 16.561, 0.96", "-16.2707, -116.337, 17.1004, 1.62", "-15.9313, -117.129, 17.5902, 1.62", "-15.9067, -117.179, 17.6293, 1.62", "-14.7575, -119.28, 19.5115, 1.03", "-14.7316, -119.326, 19.5533, 1.03", "-14.4346, -119.834, 20.034, 1.03", "-13.7778, -120.96, 21.0878, 0.74", "-13.7529, -121.009, 21.1276, 0.74", "-13.461, -121.748, 21.6019, 0.74", "-13.4473, -121.812, 21.6231, 0.74", "-13.3075, -122.943, 21.9481, 0.74", "-13.3007, -123.075, 21.9871, 0.74", "-13.2819, -124.771, 22.4467, 0.74", "-13.2835, -124.847, 22.4685, 0.74", "-13.3451, -126.227, 22.9067, 0.74", "-13.4307, -127.534, 23.3176, 0.74", "-13.5374, -128.721, 23.6828, 1.11", "-13.5447, -128.796, 23.7068, 1.11", "-13.6472, -129.808, 24.0434, 1.11", "-13.7646, -131.141, 24.4782, 1.11", "-13.8284, -131.76, 24.6713, 1.4", "-13.8433, -131.904, 24.708, 1.4", "-13.932, -132.676, 24.8739, 1.4", "-14.0897, -134.017, 25.1557, 1.18", "-14.2226, -135.172, 25.4403, 0.74", "-14.335, -136.151, 25.6816, 0.74", "-14.3405, -136.218, 25.6971, 0.74", "-14.4008, -137.285, 25.9244, 1.18", "-14.4022, -137.353, 25.9362, 1.18", "-14.369, -138.822, 26.0845, 1.33", "-14.3184, -139.745, 26.0927, 1.33", "-14.1951, -141.237, 26.0373, 1.11", "-14.1913, -141.306, 26.0322, 1.11", "-14.1951, -142.41, 25.8596, 0.74", "-14.271, -143.471, 25.6019, 0.59", "-14.4175, -144.17, 25.3483, 0.59", "-14.4444, -144.229, 25.3253, 0.59", "-15.1122, -145.163, 24.9956, 0.59", "-15.9465, -146.12, 24.7117, 0.52", "-15.995, -146.166, 24.7014, 0.52", "-16.628, -146.746, 24.6277, 0.81", "-17.2736, -147.548, 24.5904, 0.81", "-17.521, -148.252, 24.526, 0.66", "-17.5283, -148.32, 24.5181, 0.66", "-17.5332, -149.121, 24.4233, 0.66", "-17.5222, -149.276, 24.4063, 0.66", "-17.2647, -151.091, 24.2025, 0.59", "-16.8423, -153.509, 23.917, 1.03", "-16.6757, -154.447, 23.8419, 1.33", "-16.6637, -154.515, 23.8392, 1.33", "-16.4742, -155.716, 23.8531, 0.66", "-16.3364, -156.956, 23.9333, 0.44", "-16.2772, -157.973, 24.0775, 1.11", "-16.2534, -159.284, 24.366, 1.11", "-16.2536, -159.342, 24.3797, 1.11", "-16.2834, -160.282, 24.5937, 0.81", "-16.4156, -161.577, 24.856, 1.11", "-16.427, -161.653, 24.8761, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-23.5032, -78.6543, 16.3895, 0.52", "-22.5314, -78.2768, 16.6959, 0.52", "-22.4725, -78.2545, 16.7167, 0.52", "-21.6024, -77.938, 16.9223, 0.52", "-21.4304, -77.8755, 16.9629, 0.52", "-19.9831, -77.3492, 17.3049, 0.52", "-19.8266, -77.2923, 17.3419, 0.88", "-19.7667, -77.271, 17.3607, 0.88", "-18.0856, -76.728, 17.9057, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-18.8734, -41.8088, -0.0482643, 0.15", "-13.9593, -42.0606, 2.37909, 0.15", "-8.83572, -42.4937, 4.29446, 0.15", "-3.45875, -43.265, 5.0759, 0.15", "1.81832, -43.7106, 6.50994, 0.15" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-18.8734, -41.8088, -0.0482643, 0.15", "-8.99997, -42.2898, 5.67705, 0.15", "1.6774, -42.6665, 9.71331, 0.15", "11.4865, -43.0911, 15.5525, 0.15", "21.2144, -44.0821, 21.4681, 0.15", "31.824, -44.681, 25.6558, 0.15" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-69.5524, -37.405, -11.7132, 0.88", "-69.4694, -38.3199, -11.5423, 0.88", "-69.3344, -39.4549, -11.2561, 0.59", "-69.2105, -40.9018, -10.7443, 0.37", "-69.1666, -41.9848, -10.3217, 0.74", "-69.1739, -43.8531, -9.58125, 0.37", "-69.1895, -44.3804, -9.35271, 0.74", "-69.2706, -45.7048, -8.68449, 0.52", "-69.4057, -47.5117, -7.68568, 0.52", "-69.4929, -48.4829, -7.10026, 1.11", "-69.6525, -49.5809, -6.40478, 1.11", "-69.9452, -50.7313, -5.68424, 0.88", "-69.9651, -50.7959, -5.64294, 0.88" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-69.5524, -37.405, -11.7132, 0.81", "-70.9713, -37.7394, -12.0206, 0.81", "-71.9137, -37.9757, -12.217, 0.81", "-73.3475, -38.3433, -12.5077, 0.66", "-74.7726, -38.6826, -12.7811, 0.66", "-75.7702, -38.9095, -12.9665, 0.66", "-75.9019, -38.9362, -12.9898, 0.66", "-76.5296, -39.0443, -13.0972, 0.66", "-76.7198, -39.07, -13.1097, 0.66", "-78.2232, -39.218, -13.0208, 0.66", "-78.3115, -39.2276, -13.0081, 0.66", "-79.779, -39.4628, -12.7112, 0.66", "-79.865, -39.4795, -12.6907, 0.66", "-81.5755, -39.9669, -12.2068, 0.66", "-81.6676, -40.0034, -12.177, 0.66", "-82.6307, -40.4819, -11.7734, 0.66", "-83.3661, -40.879, -11.4456, 0.44", "-83.4517, -40.9252, -11.4086, 0.44", "-84.5022, -41.3598, -11.0885, 0.44", "-84.6225, -41.3974, -11.0685, 0.44", "-85.7157, -41.5599, -10.94, 0.44", "-85.9968, -41.565, -10.9213, 0.44", "-87.0987, -41.5564, -10.9414, 0.44", "-88.0844, -41.5407, -11.0208, 0.88", "-88.1731, -41.5379, -11.0336, 0.88", "-89.2795, -41.5394, -11.2494, 0.88", "-90.1824, -41.5896, -11.4883, 0.88", "-91.1093, -41.7092, -11.7288, 0.88", "-91.2921, -41.7464, -11.7757, 0.88", "-91.91, -41.9032, -11.9252, 0.88", "-92.2833, -42.003, -12.0102, 0.22", "-93.3813, -42.2962, -12.2295, 0.37", "-94.4873, -42.5724, -12.4119, 0.37", "-94.574, -42.5942, -12.4215, 0.37", "-95.2714, -42.782, -12.4918, 0.88", "-95.3578, -42.806, -12.4999, 0.88", "-96.5473, -43.1352, -12.6037, 0.88", "-96.6342, -43.1576, -12.6105, 0.88", "-97.618, -43.3597, -12.7016, 0.88", "-97.7185, -43.3782, -12.7115, 0.88", "-99.0328, -43.5998, -12.8347, 0.88", "-99.1207, -43.6164, -12.842, 0.88", "-99.7967, -43.7519, -12.8935, 1.11", "-100.816, -43.9422, -12.9701, 0.88", "-101.754, -44.1078, -13.0391, 0.88", "-102.717, -44.2944, -13.1028, 0.74", "-103.716, -44.5056, -13.161, 0.59", "-103.891, -44.5457, -13.1702, 0.59", "-105.172, -44.8747, -13.2288, 0.59", "-105.359, -44.9236, -13.2191, 0.59", "-106.588, -45.2362, -13.0692, 0.59", "-107.792, -45.5215, -12.8659, 0.74", "-109.233, -45.8489, -12.5677, 0.88", "-110.147, -46.0856, -12.3538, 0.88", "-112.223, -46.7119, -11.7905, 0.37", "-112.485, -46.7949, -11.721, 0.37", "-113.562, -47.1478, -11.4527, 0.37", "-113.797, -47.2334, -11.4011, 0.37", "-115.171, -47.7939, -11.2154, 0.81", "-115.523, -47.9527, -11.2108, 0.81", "-116.195, -48.2957, -11.2936, 0.44", "-117.156, -48.787, -11.4086, 0.44", "-117.344, -48.8821, -11.4472, 0.44", "-118.108, -49.1777, -11.6602, 0.44", "-118.508, -49.2593, -11.7946, 0.44", "-119.615, -49.369, -12.173, 0.44", "-119.973, -49.3708, -12.2707, 0.44", "-121.377, -49.2509, -12.5873, 0.44", "-122.77, -49.0602, -12.855, 0.74", "-124.221, -48.7948, -12.9734, 1.03", "-125.052, -48.6391, -12.9553, 1.03", "-126.378, -48.4147, -12.5959, 0.37", "-127.829, -48.224, -11.914, 0.37", "-127.905, -48.2188, -11.8668, 0.37", "-129.478, -48.2257, -10.7243, 0.96", "-130.071, -48.2505, -10.16, 0.96", "-132.211, -48.3951, -7.93758, 0.66", "-132.421, -48.4214, -7.72367, 0.66", "-133.482, -48.6158, -6.67707, 0.66", "-133.579, -48.6385, -6.59528, 0.66", "-136.567, -49.4655, -4.44603, 1.62", "-137.485, -49.7724, -3.9013, 1.62", "-138.986, -50.3747, -3.23009, 0.81", "-140.287, -50.9459, -2.81429, 0.44", "-141.765, -51.66, -2.53443, 0.44", "-141.846, -51.7019, -2.53222, 0.44", "-143.556, -52.6707, -2.84047, 0.44", "-143.631, -52.7162, -2.86443, 0.44", "-145.118, -53.6839, -3.61675, 0.44", "-145.272, -53.791, -3.71989, 0.44", "-145.838, -54.201, -4.13469, 0.44", "-145.902, -54.2477, -4.17907, 0.44", "-147.378, -55.4384, -5.0689, 0.44", "-147.48, -55.5256, -5.10384, 0.44", "-148.196, -56.1593, -5.21062, 0.44", "-149.34, -57.1483, -5.32726, 0.44", "-149.771, -57.4893, -5.35133, 0.44", "-151.199, -58.4582, -5.37868, 0.44", "-152.812, -59.4329, -5.33697, 0.44", "-152.949, -59.508, -5.3363, 0.44", "-154.349, -60.1882, -5.35704, 0.81", "-155.945, -60.8508, -5.37443, 1.18", "-157.682, -61.4634, -5.39002, 1.18", "-157.781, -61.4922, -5.38941, 1.18", "-159.71, -61.9787, -5.30552, 1.33", "-160.908, -62.2666, -5.19231, 1.62", "-163.019, -62.7808, -4.85095, 1.62", "-163.177, -62.822, -4.81765, 1.62", "-164.371, -63.1614, -4.52553, 1.62", "-165.822, -63.6054, -4.15315, 1.03", "-166.483, -63.8146, -3.9818, 0.59", "-167.419, -64.1389, -3.75973, 0.37", "-167.503, -64.17, -3.74757, 0.37", "-168.572, -64.5867, -3.6953, 0.37", "-169.159, -64.827, -3.72463, 0.66", "-170.386, -65.3633, -3.87036, 0.66", "-170.468, -65.4005, -3.87608, 0.66", "-171.385, -65.8062, -3.90628, 0.96", "-172.674, -66.3544, -3.795, 1.18", "-172.756, -66.3884, -3.77876, 1.18", "-174.321, -67.0621, -3.38058, 1.18", "-175.629, -67.6658, -2.93399, 1.18", "-175.717, -67.7065, -2.89737, 1.18", "-177.35, -68.4516, -1.97764, 1.18", "-177.469, -68.5027, -1.89284, 1.18" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "8.21176, 59.6199, 34.7406, 0.37", "9.35916, 60.2607, 35.2013, 0.37", "10.9734, 61.2875, 35.9121, 0.37", "12.6227, 62.3738, 36.7639, 0.37", "14.2603, 63.5187, 37.6637, 0.37", "15.3248, 64.278, 38.2254, 0.74", "15.8743, 64.6534, 38.5226, 0.74", "16.7, 65.1857, 39.0142, 0.44", "18.2895, 66.0677, 39.9694, 0.44", "19.0016, 66.3887, 40.345, 0.44", "20.7118, 66.8898, 41.071, 0.44", "22.3768, 67.1216, 41.8501, 0.66", "23.2968, 67.1568, 42.4208, 0.66", "24.1173, 67.1673, 43.0126, 0.66", "24.6998, 67.1931, 43.4828, 1.03", "25.7495, 67.3531, 44.4345, 1.03", "28.0243, 68.1852, 46.7622, 1.03", "29.5626, 69.2157, 48.5226, 0.66", "30.2389, 69.8979, 49.3804, 0.59", "30.7244, 70.5959, 50.0426, 0.59", "31.4963, 72.1396, 51.1214, 0.44", "31.9452, 73.455, 51.72, 0.44", "32.2124, 74.7113, 52.0369, 0.88", "32.3711, 75.6786, 52.1931, 1.11", "32.5297, 76.7005, 52.3903, 1.11", "32.7193, 77.8746, 52.6412, 0.66", "32.8979, 78.8336, 52.8538, 0.52", "33.1579, 79.8725, 53.1276, 0.52", "33.542, 80.9644, 53.5811, 0.52", "33.9678, 81.8891, 54.2093, 0.74", "34.2399, 82.4006, 54.6622, 0.74", "34.567, 82.9832, 55.2871, 0.74", "35.1889, 84.0827, 56.5485, 0.52", "36.0871, 85.7281, 58.3688, 0.52", "36.4566, 86.4447, 59.0834, 0.88", "36.7404, 87.028, 59.6396, 0.88", "37.2478, 88.1362, 60.7054, 0.52", "37.5335, 88.8327, 61.34, 0.52", "37.9277, 89.9883, 62.1358, 0.52", "38.364, 91.3221, 62.6694, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "8.21176, 59.6199, 34.7406, 0.52", "8.63594, 61.2477, 35.3535, 0.52", "9.04676, 62.7457, 36.1529, 0.52", "9.56802, 64.1042, 37.1678, 0.52", "9.87517, 64.7442, 37.9484, 0.52", "10.3751, 65.7484, 39.3912, 0.52", "10.8592, 66.7321, 40.8867, 0.52", "11.3583, 67.6842, 42.5601, 0.52", "12.0564, 69.0372, 45.0853, 0.52", "13.0972, 71.2281, 49.2028, 0.52", "13.3946, 71.8999, 50.4971, 0.52", "13.6269, 72.4919, 51.6005, 0.52", "13.7561, 72.8748, 52.2119, 0.81", "13.9388, 73.632, 53.0901, 0.81", "14.0108, 74.2057, 53.4988, 0.81", "14.0763, 74.6848, 53.6636, 0.44", "14.3007, 75.9362, 54.0124, 0.37", "14.4373, 76.6908, 54.1861, 0.74", "14.6289, 77.7652, 54.4732, 0.74", "14.6873, 78.2092, 54.61, 0.37", "14.7497, 78.8372, 54.8813, 0.37", "14.8071, 79.4303, 55.2293, 0.37", "14.8929, 80.1779, 55.8125, 0.37", "15.021, 80.968, 56.6523, 0.37", "15.1155, 81.4393, 57.2907, 0.37", "15.3232, 82.4868, 58.7847, 0.37", "15.43, 83.0368, 59.5875, 0.37", "15.594, 83.9234, 60.793, 0.66", "15.928, 85.5921, 62.8617, 0.66", "16.2135, 87.0022, 64.4332, 1.03", "16.3436, 87.642, 65.0915, 1.03", "16.528, 88.7428, 66.0391, 0.52", "16.7293, 90.157, 67.1143, 0.52", "16.8198, 90.9389, 67.5898, 0.81", "16.8444, 91.175, 67.6897, 0.81", "16.9883, 92.1501, 68.0763, 0.37", "17.2087, 93.2368, 68.5456, 0.37", "17.4581, 94.1284, 68.942, 0.37", "17.7013, 94.8705, 69.2911, 0.37", "18.0575, 95.9395, 69.7967, 0.37", "18.5647, 97.4389, 70.4936, 0.37", "18.8329, 98.1651, 70.8178, 0.37", "19.2392, 99.0894, 71.2426, 0.37", "19.5952, 99.8094, 71.5473, 0.37", "19.92, 100.404, 71.819, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-28.9533, 32.5503, -2.09009, 0.66", "-29.4816, 32.8497, -2.69862, 0.66", "-29.8966, 32.9762, -3.21094, 0.52", "-30.2715, 33.074, -3.65577, 0.52", "-31.1007, 33.3058, -4.6008, 0.81", "-31.5039, 33.4501, -5.05624, 0.81", "-32.7004, 33.9963, -6.45408, 0.81", "-33.9077, 34.684, -7.93852, 0.44", "-34.2756, 34.938, -8.38089, 0.44", "-34.6136, 35.2196, -8.77781, 0.59", "-35.2935, 35.8717, -9.48622, 0.59", "-35.9776, 36.568, -10.1209, 0.59", "-36.5282, 37.1432, -10.5201, 0.59", "-37.0661, 37.6655, -10.9022, 0.59", "-37.928, 38.2717, -11.4974, 0.59", "-38.4916, 38.5445, -11.8497, 0.22", "-39.1847, 38.7517, -12.2679, 0.22", "-39.9741, 38.9234, -12.7286, 0.22", "-41.396, 39.1799, -13.5734, 0.44", "-42.1079, 39.3046, -14.0783, 0.59", "-42.7099, 39.4388, -14.5312, 0.81", "-43.5659, 39.6773, -15.2251, 0.81", "-44.15, 39.8647, -15.6969, 1.18", "-44.6175, 40.0229, -16.0805, 1.47", "-46.3046, 40.4926, -17.3191, 0.96", "-47.0632, 40.6619, -17.9001, 0.66", "-48.0231, 40.8487, -18.622, 0.66", "-48.6292, 40.955, -19.0464, 0.66", "-50.2051, 41.1376, -20.225, 0.37", "-51.3563, 41.1846, -21.223, 0.37", "-52.4384, 41.1519, -22.2039, 0.74", "-52.9349, 41.1012, -22.678, 0.74", "-53.6189, 41.0059, -23.329, 0.44", "-55.3002, 40.7496, -24.9135, 0.44", "-57.0802, 40.465, -26.4716, 0.44", "-57.7887, 40.3687, -27.0959, 1.33", "-58.7602, 40.2623, -27.8844, 1.33", "-59.4205, 40.213, -28.3841, 0.52", "-59.9672, 40.2232, -28.7642, 0.52", "-61.1698, 40.3732, -29.359, 0.52", "-62.7106, 40.6595, -29.9868, 0.81", "-63.4929, 40.812, -30.2653, 0.52", "-64.6004, 40.9835, -30.7221, 0.52", "-66.1507, 41.0951, -31.4547, 0.52", "-68.1124, 41.1203, -32.4194, 0.52", "-69.875, 41.1019, -33.2727, 0.37", "-71.3181, 41.0944, -33.9301, 1.11", "-74.379, 41.1203, -35.4065, 1.11", "-76.3969, 41.1511, -36.4255, 0.88", "-76.9901, 41.166, -36.7259, 0.59", "-77.7986, 41.2234, -37.1431, 0.37", "-78.6409, 41.3353, -37.5614, 0.37", "-80.1897, 41.6376, -38.313, 0.29", "-80.8636, 41.8134, -38.5617, 0.81", "-82.0389, 42.1359, -38.9618, 1.11", "-83.4883, 42.4841, -39.4443, 1.11", "-85.3447, 42.8631, -40.0823, 0.66", "-86.1776, 43.0172, -40.3629, 0.52", "-86.8082, 43.1301, -40.5595, 0.52", "-88.0473, 43.3673, -40.9448, 0.52", "-88.9957, 43.5732, -41.2606, 0.52", "-90.0566, 43.8594, -41.6061, 0.52", "-90.9346, 44.1664, -41.9078, 0.52", "-91.5858, 44.4538, -42.1988, 0.88", "-91.9475, 44.6469, -42.4268, 0.52", "-92.7361, 45.1609, -43.0553, 0.44", "-93.3461, 45.626, -43.6026, 0.44", "-94.2307, 46.4384, -44.4817, 1.03", "-94.5503, 46.7594, -44.8307, 1.03", "-95.4494, 47.7481, -45.8499, 0.52", "-95.8644, 48.2429, -46.3008, 0.37", "-96.3487, 48.8862, -46.7747, 0.37", "-97.2157, 50.1786, -47.6839, 0.22", "-97.341, 50.3948, -47.8119, 0.74", "-97.6005, 50.892, -48.0808, 1.03", "-98.0353, 51.7703, -48.514, 1.03", "-98.4029, 52.5058, -48.8841, 0.74", "-99.0609, 53.7643, -49.607, 0.22", "-99.4917, 54.5312, -50.0707, 0.22", "-100.351, 55.9109, -50.9529, 0.22", "-100.805, 56.5592, -51.4002, 0.88", "-101.321, 57.2323, -51.8825, 0.88", "-102.126, 58.2148, -52.5729, 0.22", "-102.592, 58.7577, -52.9077, 0.22", "-103.581, 59.8137, -53.6501, 0.22", "-103.722, 59.9635, -53.7598, 0.88", "-104.061, 60.3316, -54.0144, 0.88", "-104.288, 60.5609, -54.2095, 0.15", "-104.826, 61.0525, -54.6619, 0.15", "-105.707, 61.76, -55.4934, 0.15", "-106.021, 62.0028, -55.8141, 1.03", "-106.408, 62.3237, -56.2467, 1.25", "-107.652, 63.399, -57.8282, 0.22", "-108.078, 63.7789, -58.4083, 0.22", "-108.398, 64.0656, -58.8492, 0.22", "-108.909, 64.5385, -59.4858, 0.22", "-109.586, 65.1311, -60.311, 0.22", "-110.449, 65.9324, -61.344, 0.22", "-110.664, 66.1427, -61.5965, 0.66", "-111.078, 66.5452, -62.0994, 0.66", "-111.783, 67.1996, -62.9045, 0.66", "-113.11, 68.3542, -64.4152, 0.66", "-113.483, 68.6736, -64.8116, 0.22", "-114.295, 69.4297, -65.6864, 0.22", "-114.295, 69.4297, -65.6864, 0.81", "-114.804, 70.0007, -66.2434, 0.81", "-115.97, 71.455, -67.4444, 0.29", "-116.569, 72.2646, -68.0106, 0.29", "-117.405, 73.3642, -68.7263, 0.88", "-117.974, 74.1091, -69.1945, 1.18", "-118.576, 74.8878, -69.6836, 1.18", "-119.2, 75.6546, -70.1873, 0.74", "-119.869, 76.4041, -70.671, 0.22", "-120.816, 77.362, -71.3411, 0.22", "-121.631, 78.1161, -71.8748, 0.22", "-122.158, 78.5938, -72.2093, 0.22", "-123.404, 79.703, -73.0618, 0.22", "-124.078, 80.3073, -73.5156, 0.22", "-124.478, 80.6842, -73.7931, 0.81", "-124.942, 81.1355, -74.1949, 0.81", "-125.769, 81.9801, -74.9921, 0.81", "-126.737, 83.08, -76.1049, 0.22", "-127.322, 83.871, -76.9749, 0.22", "-127.943, 84.8168, -78.0961, 0.59", "-128.757, 86.1107, -79.7246, 0.96", "-128.974, 86.4581, -80.1784, 0.15", "-129.216, 86.8432, -80.7165, 0.15", "-129.715, 87.6685, -81.7997, 0.15", "-129.962, 88.1044, -82.3593, 0.15", "-130.308, 88.7218, -83.0585, 0.81", "-130.598, 89.2276, -83.5551, 0.81", "-131.453, 90.614, -84.9209, 0.22", "-131.695, 91.0016, -85.2719, 0.22", "-131.877, 91.3282, -85.5591, 0.66", "-132.009, 91.5791, -85.795, 0.66", "-132.139, 91.8304, -86.0532, 0.66", "-132.549, 92.6006, -86.8938, 0.22", "-132.83, 93.1394, -87.4723, 0.88", "-133.399, 94.2182, -88.7165, 0.88", "-134.134, 95.5576, -90.3671, 0.15", "-134.439, 96.0887, -91.0609, 0.88", "-134.463, 96.1272, -91.1145, 0.88", "-142.004, 100.574, -95.9366, 0.88", "-150.02, 105.421, -99.4612, 0.88", "-158.208, 110.689, -101.851, 0.88", "-166.374, 115.158, -105.483, 0.88", "-175.2, 117.648, -109.271, 0.88", "-183.255, 122.133, -113.127, 0.88", "-190.61, 126.951, -117.914, 0.88", "-197.183, 132.035, -123.526, 0.88", "-205.272, 135.252, -128.336, 0.88", "-213.112, 137.318, -134.043, 0.88", "-219.688, 139.828, -141.044, 0.88", "-225.057, 142.151, -149.061, 0.88" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-28.9533, 32.5503, -2.09009, 0.29", "-29.0919, 32.895, -2.124, 0.29", "-29.4359, 33.7503, -2.20811, 0.29", "-30.16, 35.5504, -2.38515, 0.29", "-31.4654, 38.7961, -2.70436, 0.29", "-31.6212, 39.1833, -2.74244, 0.66" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-51.4111, 5.5769, 18.2142, 1.33", "-51.2024, 5.341, 19.6176, 1.33", "-51.0268, 5.01273, 20.9408, 0.74", "-50.8564, 4.511, 22.494, 0.74", "-50.4233, 2.95584, 26.446, 0.74", "-50.2282, 2.16399, 28.0946, 1.11", "-50.1118, 1.63748, 29.0018, 0.88", "-49.9729, 0.720655, 30.2707, 0.88", "-49.9189, -0.0474992, 31.2162, 1.11", "-49.9511, -0.874584, 32.1404, 0.74", "-50.1103, -1.99979, 33.2838, 0.74", "-50.3985, -3.00471, 34.57, 0.74", "-50.6288, -3.48695, 35.3302, 1.11", "-51.2358, -4.44869, 37.1239, 1.11", "-52.0826, -5.46078, 39.3697, 1.11", "-52.6304, -5.91774, 40.6367, 0.88", "-53.4265, -6.35535, 42.3229, 0.88", "-54.1648, -6.62676, 43.812, 0.88" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-51.4111, 5.5769, 18.2142, 0.96", "-51.856, 6.15205, 18.7946, 0.96", "-52.3262, 6.72664, 19.5531, 0.81", "-52.9149, 7.31058, 20.4667, 0.81", "-53.4952, 7.74565, 21.3345, 0.81", "-54.289, 8.15394, 22.4615, 0.81", "-55.1194, 8.44149, 23.5622, 0.81", "-56.0397, 8.5503, 24.7328, 0.81", "-56.7128, 8.51039, 25.5306, 0.81", "-57.4835, 8.39686, 26.3369, 0.81", "-58.561, 8.22001, 27.2357, 0.59", "-59.1828, 8.15298, 27.6263, 0.59", "-60.1712, 8.14957, 28.0877, 0.59", "-60.9414, 8.27642, 28.3828, 0.59", "-61.6942, 8.55487, 28.6549, 0.59", "-62.2044, 8.82991, 28.878, 0.59", "-63.0028, 9.39609, 29.5094, 1.03", "-63.5291, 9.90478, 30.2054, 0.66", "-63.9091, 10.3268, 31.0227, 0.66", "-64.2484, 10.6899, 31.9683, 0.66", "-64.8519, 11.2502, 33.7899, 0.96", "-65.7943, 11.9849, 36.6198, 0.96", "-66.1666, 12.2061, 37.685, 0.96", "-66.9622, 12.5703, 39.7816, 0.96", "-67.599, 12.7805, 41.1925, 0.96", "-68.1128, 12.8689, 42.0164, 0.96", "-68.8924, 12.938, 42.5782, 1.18", "-69.8354, 13.0082, 42.8005, 1.18", "-70.3595, 13.0609, 42.8247, 1.18", "-71.8749, 13.3412, 42.6361, 0.44", "-72.7397, 13.5322, 42.5392, 0.44", "-73.67, 13.7637, 42.5278, 0.44", "-74.1691, 13.8878, 42.6145, 0.96", "-75.1906, 14.1464, 42.9611, 1.11", "-75.6985, 14.2662, 43.1955, 1.11", "-77.2329, 14.582, 44.0474, 0.59", "-78.3268, 14.7735, 44.6759, 0.59", "-79.7298, 14.9648, 45.4607, 0.74", "-80.1698, 15.0255, 45.6858, 0.74", "-80.9126, 15.1347, 46.0449, 0.59", "-81.7368, 15.2832, 46.3776, 0.59", "-82.157, 15.3748, 46.4949, 0.59", "-82.8615, 15.5469, 46.6612, 0.59", "-83.8335, 15.7944, 46.8246, 0.59", "-84.7647, 16.0171, 46.9798, 0.81", "-85.7101, 16.2524, 47.1348, 1.11", "-86.6292, 16.4938, 47.309, 1.11", "-87.1687, 16.6523, 47.4164, 0.44", "-87.7932, 16.8654, 47.5314, 0.44", "-88.6899, 17.2228, 47.6717, 0.44", "-89.4501, 17.5724, 47.7632, 0.44", "-90.0385, 17.8746, 47.8344, 0.44", "-91.377, 18.5528, 47.984, 0.44", "-92.152, 18.8996, 48.1198, 0.44", "-93.1507, 19.2995, 48.3711, 0.44", "-93.6877, 19.4957, 48.5389, 0.29", "-94.2085, 19.6557, 48.7865, 0.29", "-95.1693, 19.8945, 49.4827, 0.29", "-96.3662, 20.1101, 50.7132, 0.29", "-96.8522, 20.1818, 51.3625, 0.66", "-97.1911, 20.2353, 51.8912, 0.66", "-98.2399, 20.4687, 53.6485, 0.52", "-98.9268, 20.6868, 54.878, 0.37", "-99.0757, 20.7505, 55.1455, 0.66", "-99.6924, 21.0364, 56.0883, 0.96", "-100.124, 21.2131, 56.6528, 1.25", "-100.609, 21.3669, 57.1434, 1.25", "-101.93, 21.6999, 58.0507, 1.03", "-102.565, 21.8242, 58.3842, 0.74", "-103.483, 21.9341, 58.7778, 0.74", "-104.218, 21.9707, 59.0031, 0.74", "-105.37, 21.9766, 59.2643, 0.74", "-106.326, 21.9584, 59.4105, 1.11", "-107.15, 21.9438, 59.4646, 1.11", "-108.188, 21.939, 59.4871, 1.11", "-109.676, 21.9864, 59.4616, 1.4", "-110.421, 22.0572, 59.3967, 0.66", "-110.905, 22.1394, 59.3306, 0.52", "-111.912, 22.3907, 59.1509, 0.44", "-112.614, 22.6282, 59.009, 0.44", "-113.341, 22.9444, 58.8569, 1.03", "-114.549, 23.5386, 58.5727, 0.81", "-114.995, 23.7639, 58.4712, 0.59", "-115.815, 24.1796, 58.286, 0.59", "-116.735, 24.6149, 58.1115, 0.96", "-117.453, 24.8938, 58.0117, 0.96", "-117.954, 25.0458, 57.9714, 0.74", "-118.854, 25.2753, 57.9463, 0.66", "-119.358, 25.3884, 57.934, 0.66", "-120.822, 25.7064, 57.9126, 0.66", "-122.364, 26.0425, 57.8839, 0.66", "-123.07, 26.2052, 57.8732, 0.66", "-123.529, 26.3221, 57.8716, 1.11", "-124.099, 26.4936, 57.8658, 1.11", "-125.293, 26.9421, 57.873, 1.11", "-125.781, 27.1561, 57.8839, 0.74", "-126.342, 27.4154, 57.9055, 0.52", "-126.972, 27.6843, 57.9284, 0.52", "-127.903, 28.0433, 57.9781, 0.52", "-128.671, 28.3089, 58.0243, 0.74", "-129.605, 28.5835, 58.1042, 1.03", "-130.773, 28.8791, 58.2695, 1.18", "-131.784, 29.0858, 58.44, 1.18", "-132.718, 29.2454, 58.6102, 0.88", "-133.805, 29.3918, 58.8564, 0.88", "-134.955, 29.5221, 59.1901, 0.74", "-136.351, 29.6825, 59.6859, 0.74", "-137.524, 29.8529, 60.1665, 0.74", "-138.539, 30.0347, 60.6651, 0.74", "-139.618, 30.2834, 61.2994, 0.74", "-140.556, 30.5805, 61.9267, 0.52", "-141.074, 30.7932, 62.2911, 0.52", "-142.173, 31.338, 63.0388, 0.52", "-143.327, 31.9822, 63.8785, 0.52", "-144.306, 32.5699, 64.5991, 0.52", "-144.664, 32.7999, 64.8369, 0.15", "-145.409, 33.2934, 65.3007, 0.15", "-146.588, 34.0479, 66.0561, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-125.67, 39.0196, -60.0024, 0.52", "-127.18, 38.0401, -60.8352, 0.52", "-128.056, 37.555, -61.293, 0.52", "-129.034, 37.0555, -61.7919, 0.29", "-129.963, 36.5933, -62.2621, 0.29", "-131.048, 36.049, -62.8016, 0.29", "-132.6, 35.2554, -63.5203, 0.29", "-133.279, 34.9427, -63.8363, 0.29", "-134.36, 34.4658, -64.3602, 0.15", "-134.927, 34.2149, -64.6328, 0.15", "-136.177, 33.6373, -65.2938, 0.15", "-137.391, 33.0532, -65.9732, 0.15", "-138.959, 32.2172, -66.7499, 0.15", "-143.648, 28.3742, -70.1151, 0.15" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-125.67, 39.0196, -60.0024, 1.62", "-126.634, 39.8613, -61.1227, 1.62", "-127.583, 40.5951, -62.1268, 0.44", "-128.791, 41.4403, -63.243, 0.44", "-129.567, 41.9212, -63.9167, 0.37", "-131.105, 42.7069, -65.2535, 0.37", "-132.567, 43.3554, -66.458, 0.22", "-133.579, 43.7365, -67.2521, 0.22", "-134.991, 44.1753, -68.2319, 0.22", "-136.799, 44.625, -69.3012, 0.22", "-139.501, 45.1138, -70.7888, 0.22", "-140.878, 45.2509, -71.4398, 0.22", "-141.625, 45.2769, -71.7641, 0.81", "-142.469, 45.2524, -72.1193, 1.18", "-143.316, 45.1459, -72.4171, 1.18", "-145.492, 44.6595, -72.9254, 0.22", "-146.731, 44.2855, -73.1674, 0.22", "-147.386, 44.0438, -73.3056, 0.88", "-148.029, 43.7984, -73.5109, 0.88", "-149.337, 43.3232, -74.1094, 0.29", "-150.952, 42.8097, -74.9458, 0.29", "-152.963, 42.3102, -76.1621, 0.15", "-156.02, 41.9161, -78.1201, 0.15", "-158.743, 41.8545, -79.8924, 1.25", "-161.304, 42.0459, -81.6577, 0.52", "-162.977, 42.3614, -82.8377, 0.52", "-165.105, 42.9961, -84.3054, 0.52", "-167.798, 44.1064, -86.015, 0.52", "-168.91, 44.7167, -86.6251, 1.03", "-170.274, 45.5325, -87.1133, 0.52", "-171.856, 46.5896, -87.4863, 0.52", "-172.485, 47.0448, -87.5979, 0.52", "-172.999, 47.4481, -87.6617, 0.22", "-174.126, 48.3801, -87.8582, 0.22", "-174.953, 49.0871, -87.9764, 0.22", "-175.963, 49.9748, -88.0613, 0.22", "-176.782, 50.7256, -88.16, 0.22", "-178.912, 52.7267, -88.4927, 0.22", "-179.405, 53.192, -88.5872, 0.66", "-180.253, 53.9888, -88.7713, 0.22", "-181.871, 55.5638, -89.1327, 0.22", "-192.46, 58.7155, -94.2061, 0.22", "-203.13, 63.9891, -96.9685, 0.22", "-214.264, 68.0179, -99.8296, 0.22", "-226.185, 69.8125, -101.308, 0.22", "-237.83, 69.9032, -104.747, 0.22", "-249.877, 69.9066, -106.262, 0.22", "-261.934, 70.6293, -107.48, 0.22", "-274.068, 70.2032, -107.749, 0.22", "-286.055, 68.9613, -106.216, 0.22", "-297.674, 69.1295, -102.699, 0.22", "-309.563, 69.6187, -100.288, 0.22" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "34.4714, 7.63143, 4.8373, 0.74", "36.6544, 8.26114, 4.98321, 0.74", "37.8588, 8.66398, 5.09605, 0.74", "37.939, 8.69091, 5.10321, 0.74", "39.2115, 9.11748, 5.21393, 0.96", "39.4016, 9.18007, 5.23006, 0.96", "40.7249, 9.61076, 5.34036, 0.74", "42.7668, 10.2617, 5.48092, 0.44", "44.3161, 10.7278, 5.58139, 0.81", "44.3979, 10.7498, 5.58585, 0.81", "45.8968, 11.1183, 5.58194, 1.03", "45.9909, 11.1407, 5.57647, 1.03", "47.547, 11.4859, 5.37888, 1.03", "47.6381, 11.5128, 5.35992, 1.03", "48.6865, 11.9214, 5.09572, 1.03", "50.0054, 12.5905, 4.78188, 0.66", "50.6724, 13.0434, 4.62163, 0.66", "50.8559, 13.2269, 4.5928, 0.66", "51.5139, 14.0453, 4.70221, 0.66", "51.5938, 14.1431, 4.74032, 0.66", "52.3144, 14.7981, 5.4687, 0.66", "52.4409, 14.861, 5.61266, 0.66", "53.4738, 15.1343, 6.8034, 0.66", "55.1233, 15.3281, 8.55441, 1.03", "55.4438, 15.328, 8.87815, 1.03", "57.0669, 15.2729, 10.6632, 0.66", "57.8382, 15.2514, 11.5366, 0.66", "57.9124, 15.2549, 11.6199, 0.66", "58.7903, 15.4704, 12.5682, 0.66", "58.8384, 15.5051, 12.6118, 0.66", "60.2905, 16.8955, 13.8044, 1.4", "60.9786, 17.6554, 14.3332, 1.4", "61.492, 18.2157, 14.7448, 1.4", "62.8673, 19.7332, 15.8282, 0.88", "64.4353, 21.5004, 17.0363, 0.52", "66.3387, 23.5839, 18.3814, 0.52", "66.4337, 23.6825, 18.4384, 0.52", "68.3179, 25.5206, 19.6158, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "34.4714, 7.63143, 4.8373, 0.96", "34.526, 8.78545, 5.58328, 0.96", "34.5776, 9.63768, 6.0784, 0.96", "34.5881, 9.79206, 6.16762, 0.96", "34.7149, 11.7773, 7.31442, 0.96", "34.7192, 11.8444, 7.35315, 0.96", "34.778, 12.7655, 7.88525, 0.96", "34.785, 12.8431, 7.92778, 0.96", "34.8729, 14.0176, 8.67784, 0.96", "34.8789, 14.1046, 8.73075, 0.96" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "45.5845, 7.7139, 6.5433, 0.88", "45.7152, 7.99196, 6.50867, 0.88", "45.9743, 8.56805, 6.45148, 0.88", "45.9881, 8.60187, 6.45021, 0.88", "46.4037, 9.6659, 6.43814, 0.88", "46.4188, 9.70491, 6.43849, 0.88", "46.7327, 10.5154, 6.45448, 0.88", "46.7519, 10.5675, 6.4568, 0.88", "47.1208, 11.5389, 6.52491, 0.88", "47.1638, 11.651, 6.53941, 0.88", "47.285, 11.983, 6.60986, 0.88", "47.2968, 12.0171, 6.61696, 0.88", "47.4745, 12.5841, 6.73319, 0.66", "47.548, 12.8398, 6.7846, 0.88", "47.6757, 13.3408, 6.88343, 0.66", "47.8497, 14.2062, 7.04818, 0.66", "47.9426, 14.7437, 7.1452, 0.66", "48.0686, 15.4997, 7.27538, 0.66", "48.0821, 15.5871, 7.28959, 0.66", "48.1585, 16.0424, 7.34241, 0.66", "48.3802, 17.1703, 7.41248, 0.52", "48.4347, 17.3693, 7.41657, 0.81", "48.5168, 17.6035, 7.41399, 0.66", "48.5477, 17.6791, 7.4105, 0.66", "48.8481, 18.3501, 7.36905, 0.66", "48.9101, 18.4737, 7.36079, 0.66", "49.1968, 19.0574, 7.34843, 0.66", "49.2273, 19.1296, 7.35071, 0.66", "49.4122, 19.6287, 7.41279, 0.66", "49.4462, 19.7289, 7.43238, 0.66", "49.637, 20.2967, 7.5776, 0.44", "49.9296, 21.1313, 7.79816, 0.44", "49.9436, 21.1695, 7.80855, 0.44", "50.3263, 22.0981, 8.04097, 0.44", "50.541, 22.5599, 8.14648, 1.03", "50.8131, 23.1404, 8.26524, 1.33", "50.9585, 23.4626, 8.30116, 1.33", "51.0098, 23.5919, 8.29747, 1.33", "51.251, 24.3119, 8.21148, 1.33", "51.414, 24.9168, 8.08784, 1.18", "51.5592, 25.5967, 7.88483, 0.44", "51.7446, 26.7262, 7.47882, 0.44", "51.8789, 27.6908, 7.10711, 0.44", "51.9079, 27.8982, 7.02807, 0.81", "51.9547, 28.2498, 6.89283, 0.81", "52.1554, 29.4541, 6.42093, 0.44", "52.1629, 29.4873, 6.40827, 0.44", "52.3055, 29.9904, 6.24122, 0.44", "52.5646, 30.7655, 6.00524, 0.44", "52.593, 30.8456, 5.98132, 0.44", "52.9951, 31.989, 5.681, 0.44", "53.0067, 32.0229, 5.67431, 0.44", "53.235, 32.7186, 5.54266, 0.44", "53.2491, 32.7635, 5.53346, 0.44", "53.3783, 33.1822, 5.4545, 1.03", "53.5324, 33.6507, 5.38752, 1.03", "53.545, 33.6851, 5.38528, 1.03", "53.8496, 34.4673, 5.35641, 0.66", "54.1087, 35.0672, 5.35038, 0.66", "54.2826, 35.4426, 5.34602, 0.88", "54.3313, 35.5418, 5.34499, 0.88", "54.5229, 35.9272, 5.34663, 0.88", "54.5406, 35.965, 5.34789, 0.88", "54.7564, 36.4464, 5.38672, 1.25", "54.9755, 36.9636, 5.45867, 1.47", "55.1567, 37.4089, 5.52213, 1.47", "55.3416, 37.8795, 5.59201, 0.88", "55.4894, 38.2745, 5.65472, 0.74", "55.8613, 39.2943, 5.83369, 0.74", "55.9477, 39.5492, 5.88793, 0.74", "57.9199, 44.3601, 5.46391, 0.74", "60.3249, 48.976, 5.39692, 0.74", "62.0044, 53.8825, 6.16645, 0.74", "64.2345, 58.4492, 7.35569, 0.74" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "91.7104, -26.1397, 75.4223, 0.66", "89.7704, -23.3479, 83.3605, 0.66", "89.609, -23.1156, 84.021, 0.66", "89.174, -22.4897, 85.8007, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "91.7104, -26.1397, 75.4223, 0.52", "92.8165, -23.3218, 84.9189, 0.52", "92.8536, -23.2621, 85.126, 0.52", "93.0082, -23.0793, 85.7781, 0.52", "93.2005, -22.9647, 86.2531, 0.52", "93.7085, -22.8869, 87.0925, 0.52", "94.0227, -22.8879, 87.5332, 0.52", "95.1995, -23.3755, 88.3605, 0.52", "95.2733, -23.411, 88.4234, 0.52", "96.8706, -24.2278, 89.9326, 0.44", "98.644, -25.2467, 91.8388, 0.44", "98.7222, -25.299, 91.9378, 0.44", "99.8659, -26.202, 93.6398, 0.44", "99.9036, -26.2404, 93.7112, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-16.427, -161.653, 24.8761, 0.29", "-15.5075, -162.482, 24.7832, 0.29", "-15.3193, -162.66, 24.7582, 0.29", "-14.5535, -163.502, 24.6259, 0.29", "-14.4779, -163.591, 24.6114, 0.29", "-13.6529, -164.7, 24.4293, 0.29", "-12.8662, -165.825, 24.2426, 0.29", "-12.8242, -165.898, 24.2338, 0.29", "-12.2656, -167.078, 24.1795, 0.66", "-12.2321, -167.168, 24.1868, 0.66", "-11.85, -168.392, 24.376, 0.66", "-11.8313, -168.473, 24.3931, 0.66", "-11.4021, -170.807, 24.9319, 0.52", "-11.1895, -172.112, 25.2136, 0.52", "-10.9631, -173.67, 25.5491, 1.03", "-10.8687, -174.27, 25.6622, 1.4", "-10.6547, -175.402, 25.8328, 1.18", "-10.4189, -176.343, 25.9774, 0.59", "-10.0227, -177.576, 26.0438, 0.59", "-9.98615, -177.666, 26.0432, 0.59", "-9.53086, -178.691, 25.9643, 0.81", "-9.00495, -179.766, 25.8801, 0.81", "-8.0108, -181.697, 25.9119, 0.37", "-7.15432, -183.387, 26.1009, 0.15", "-7.12252, -183.463, 26.1171, 0.15", "-6.91496, -184.399, 26.5047, 0.66", "-6.90999, -184.472, 26.5463, 0.66", "-6.92407, -186.313, 27.7362, 0.66", "-6.93136, -186.433, 27.8137, 0.66", "-6.95438, -187.132, 28.3393, 0.66", "-6.84039, -189.167, 29.7937, 0.37", "-6.47852, -191.26, 31.3926, 0.37", "-6.46068, -191.334, 31.4498, 0.37", "-6.12885, -192.296, 32.1901, 0.37", "-5.07877, -194.787, 34.1068, 0.37", "-4.24103, -196.492, 35.3695, 0.37", "-2.91827, -198.859, 37.0052, 0.37", "-2.86677, -198.94, 37.0583, 0.37", "-1.70019, -200.667, 38.1909, 0.37", "-1.40958, -201.058, 38.4422, 0.88", "-0.795459, -201.879, 38.8305, 0.22", "-0.249201, -202.713, 39.1905, 0.22", "0.493934, -204.032, 39.2255, 0.22" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-16.427, -161.653, 24.8761, 0.44", "-16.3312, -163.014, 24.7155, 0.44", "-16.2497, -164.455, 24.5164, 0.44", "-16.2491, -164.536, 24.5047, 0.44", "-16.2858, -166.39, 24.2155, 0.44", "-16.2886, -166.471, 24.2023, 0.44", "-16.3356, -167.745, 23.947, 0.44", "-16.3495, -167.914, 23.9059, 0.44", "-16.5233, -169.68, 23.4603, 0.81", "-16.5537, -170.054, 23.4116, 0.81", "-16.5599, -170.123, 23.4036, 0.81", "-16.6463, -171.129, 23.3148, 0.37", "-16.8196, -173.373, 23.2346, 0.29", "-16.8783, -174.513, 23.2284, 0.29", "-16.9157, -177.067, 23.4028, 0.29" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "1.81832, -43.7106, 6.50994, 0.15", "11.4241, -44.5634, 12.9363, 0.15", "21.5835, -45.0737, 18.4843, 0.15", "30.711, -43.583, 25.4778, 0.15", "40.5515, -43.7561, 31.5906, 0.15" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "1.81832, -43.7106, 6.50994, 0.15", "8.9032, -44.2553, 10.0774, 0.15", "16.3906, -44.2411, 12.7479, 0.15", "23.7885, -45.7645, 15.263, 0.15", "31.4104, -46.7976, 17.2878, 0.15", "38.8682, -47.2943, 19.9973, 0.15", "45.6618, -48.5604, 23.9466, 0.15", "52.2969, -50.5142, 27.9124, 0.15", "58.7547, -51.3465, 32.4823, 0.15", "64.7341, -52.7081, 37.5628, 0.15", "70.2012, -54.4946, 43.086, 0.15", "74.3381, -56.9037, 49.4905, 0.15", "79.4577, -59.8765, 54.8869, 0.15", "84.9069, -60.9888, 60.583, 0.15", "90.1824, -61.6954, 66.4956, 0.15", "95.0237, -60.8088, 72.7397, 0.15" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "31.824, -44.681, 25.6558, 0.15", "38.596, -44.9713, 32.2193, 0.15", "44.7672, -43.3342, 39.1746, 0.15", "51.1777, -41.2526, 45.7955, 0.15", "58.5077, -37.8815, 50.7693, 0.15", "66.1123, -33.7753, 54.7209, 0.15", "74.2757, -30.6007, 58.3275, 0.15", "82.5751, -26.5553, 60.5689, 0.15", "90.4176, -21.2565, 61.8842, 0.15", "98.2449, -15.7562, 61.9703, 0.15" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "31.824, -44.681, 25.6558, 0.15", "41.0707, -45.1376, 30.5347, 0.15", "49.8905, -43.7929, 36.0092, 0.15", "57.6025, -41.0071, 42.5432, 0.15" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-69.9651, -50.7959, -5.64294, 0.22", "-70.8976, -52.601, -5.72038, 0.22", "-71.5263, -53.5851, -5.69898, 0.22", "-71.5623, -53.6373, -5.69587, 0.22", "-73.1273, -55.7111, -5.47573, 0.22", "-73.8936, -56.6721, -5.34115, 0.22", "-73.9881, -56.7857, -5.31741, 0.22", "-75.4208, -58.3032, -4.69836, 0.22", "-75.535, -58.4166, -4.64213, 0.22", "-76.0488, -58.9142, -4.36503, 0.22", "-76.1321, -58.9948, -4.3084, 0.22", "-77.0198, -59.9594, -3.63312, 0.22", "-77.2302, -60.2057, -3.45646, 0.22", "-78.0067, -61.3103, -2.63432, 0.22", "-78.0408, -61.3625, -2.59823, 0.22", "-78.5875, -62.3269, -1.99534, 0.22", "-78.6422, -62.4292, -1.93561, 0.22", "-84.2539, -69.1588, 0.236655, 0.22", "-89.4182, -76.5659, 1.18625, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-69.9651, -50.7959, -5.64294, 0.52", "-70.0143, -51.3458, -5.66034, 0.52", "-70.165, -52.4012, -5.6799, 0.52", "-70.1836, -52.5187, -5.68175, 0.52", "-70.3546, -53.6567, -5.70759, 0.52", "-70.5135, -54.6508, -5.65726, 0.52", "-70.5497, -54.8731, -5.63837, 0.52", "-70.771, -56.1895, -5.48, 0.52", "-70.7995, -56.369, -5.43982, 0.52", "-70.9361, -57.4934, -5.12772, 0.52", "-71.0722, -58.8643, -4.69031, 1.18", "-71.1524, -59.7474, -4.38833, 1.92", "-71.2199, -60.4832, -4.13357, 2.28", "-71.3374, -62.4634, -3.29185, 0.74", "-71.3411, -63.1374, -2.98177, 0.66", "-71.3114, -63.7991, -2.65257, 0.66", "-71.2958, -63.9226, -2.59112, 0.66", "-71.1342, -64.8091, -2.13047, 0.66", "-70.7456, -66.5488, -1.27301, 0.66", "-70.4968, -67.4209, -0.901732, 0.52", "-70.4801, -67.4731, -0.8803, 0.52", "-70.076, -68.6644, -0.448948, 0.52", "-69.8841, -69.2858, -0.272093, 1.03", "-69.7299, -69.8871, -0.17137, 1.03", "-69.712, -70.0047, -0.169057, 1.03", "-69.6705, -70.5844, -0.174328, 0.81", "-69.6453, -71.2047, -0.196662, 0.52", "-69.6783, -72.0694, -0.261867, 0.52", "-69.738, -72.8761, -0.315645, 0.52", "-69.7542, -73.0434, -0.325757, 0.52", "-69.8544, -73.991, -0.378273, 0.52", "-69.8599, -74.0504, -0.377617, 0.52", "-69.9138, -75.3734, -0.310457, 0.52", "-69.9099, -75.6783, -0.286204, 0.52", "-69.8515, -76.2272, -0.178865, 0.52", "-69.821, -76.3974, -0.131925, 0.52", "-69.5468, -77.4834, 0.235749, 0.88", "-69.3399, -78.2778, 0.552342, 0.88", "-69.3119, -78.3956, 0.603402, 0.88", "-69.0705, -79.6832, 1.15629, 0.88", "-69.0627, -79.7379, 1.17675, 0.88", "-68.9871, -80.5173, 1.39071, 0.88", "-68.9392, -81.6275, 1.5718, 1.11", "-68.9118, -82.5683, 1.65876, 1.11", "-68.91, -82.6279, 1.65938, 1.11", "-68.8856, -83.4485, 1.60869, 0.74", "-68.8565, -84.2654, 1.56257, 0.59", "-68.8524, -84.3927, 1.55526, 0.59", "-68.8127, -85.3129, 1.487, 0.59", "-68.8092, -85.3723, 1.48509, 0.59", "-68.7807, -86.1866, 1.49388, 0.59", "-68.7437, -86.7896, 1.52662, 0.59", "-68.6551, -87.4827, 1.58799, 0.59", "-68.6205, -87.6651, 1.60517, 0.59", "-68.4887, -88.2097, 1.65697, 0.22", "-68.4533, -88.3315, 1.66416, 0.22", "-68.1183, -89.3392, 1.66773, 0.22", "-67.8762, -90.0475, 1.78305, 0.66", "-67.6813, -90.6852, 1.94571, 0.44", "-67.6656, -90.7399, 1.96152, 0.44", "-67.5154, -91.3208, 2.14557, 1.18", "-67.31, -92.1973, 2.40328, 1.84", "-66.9233, -94.056, 2.94418, 1.25", "-66.7747, -94.7619, 3.12434, 0.66", "-66.5996, -95.5618, 3.31204, 0.44", "-66.5729, -95.683, 3.33784, 0.44", "-66.3198, -96.8425, 3.5389, 0.44", "-66.0579, -98.0876, 3.6734, 0.44", "-65.9202, -98.7406, 3.7255, 0.44", "-65.7355, -99.5775, 3.83697, 0.29", "-65.7216, -99.6429, 3.84742, 0.29", "-65.5036, -100.588, 4.05419, 0.29", "-65.4325, -100.88, 4.1365, 0.29", "-65.0546, -102.392, 4.61613, 1.47", "-64.8446, -103.274, 4.96051, 1.99", "-64.6592, -104.222, 5.37175, 1.77", "-64.4917, -105.437, 5.94181, 1.4", "-64.4441, -106.13, 6.28785, 0.59", "-64.4448, -106.227, 6.33462, 0.59", "-64.5527, -107.061, 6.71857, 0.37", "-64.7526, -107.9, 7.1389, 0.37", "-64.9855, -108.602, 7.4919, 0.37", "-65.1531, -109.043, 7.66656, 0.88", "-65.2738, -109.373, 7.7788, 0.88", "-65.4034, -109.919, 7.90874, 0.37", "-65.4278, -110.311, 7.949, 0.37", "-65.4161, -110.45, 7.96466, 0.37", "-65.3045, -111.195, 8.04121, 0.37", "-65.2934, -111.253, 8.0481, 0.37", "-65.0555, -112.358, 8.1842, 0.37", "-64.8755, -113.176, 8.27336, 0.37", "-64.6633, -114.118, 8.38788, 0.59", "-64.5115, -114.716, 8.45411, 0.59", "-64.3954, -115.135, 8.52409, 0.29", "-64.3816, -115.191, 8.53483, 0.29", "-64.2516, -115.91, 8.72282, 0.29", "-64.2216, -116.13, 8.78441, 0.29", "-64.1234, -117.298, 9.17516, 0.29", "-64.1002, -118.277, 9.5592, 0.81", "-64.1168, -119.087, 9.90575, 1.11", "-64.2041, -120.197, 10.4145, 1.4", "-64.2751, -120.705, 10.6647, 1.4", "-64.536, -121.937, 11.2752, 0.52", "-64.707, -122.512, 11.5606, 0.29", "-64.7234, -122.563, 11.583, 0.29", "-64.8481, -123.066, 11.7834, 0.29", "-64.8689, -123.186, 11.8167, 0.29", "-64.8842, -123.672, 11.8949, 0.29", "-64.8292, -124.181, 11.9714, 0.22", "-64.8062, -124.302, 12.0014, 0.22", "-64.6263, -125.122, 12.2484, 0.22", "-64.6078, -125.23, 12.3087, 0.22", "-64.5826, -125.659, 12.5966, 0.22", "-64.6065, -126.691, 13.3843, 0.96", "-64.6445, -127.084, 13.6829, 0.96", "-64.6524, -127.131, 13.7162, 0.96", "-65.019, -128.647, 14.7247, 0.44", "-65.2148, -129.364, 15.1021, 0.44", "-65.2308, -129.417, 15.1228, 0.44", "-65.4379, -130.124, 15.2424, 0.81", "-65.6141, -130.744, 15.2865, 0.81", "-65.7001, -131.091, 15.305, 0.81", "-65.8614, -131.971, 15.2953, 0.37", "-65.8689, -132.021, 15.2987, 0.37", "-65.9906, -133.172, 15.5458, 0.37", "-65.9977, -133.289, 15.5931, 0.37", "-66.0282, -134.56, 16.2895, 1.03", "-66.0421, -135.052, 16.589, 1.03", "-66.0483, -135.22, 16.7037, 1.03", "-66.1215, -136.099, 17.3546, 0.74", "-66.1736, -136.656, 17.8268, 0.22", "-66.1786, -136.727, 17.8799, 0.22", "-66.2057, -137.51, 18.3894, 0.22", "-66.2063, -137.56, 18.4206, 0.22", "-66.179, -138.59, 19.0224, 1.18", "-66.0796, -140.21, 19.8929, 0.59", "-65.9771, -141.183, 20.3582, 0.59", "-65.871, -141.847, 20.6389, 1.03", "-65.8611, -141.894, 20.6558, 1.03", "-65.7716, -142.266, 20.7547, 1.11", "-65.4761, -143.35, 20.985, 0.52", "-65.1369, -144.591, 21.2149, 0.52", "-64.8404, -145.695, 21.4403, 1.47", "-64.6643, -146.41, 21.5506, 2.43", "-64.3968, -147.5, 21.712, 1.4", "-63.9992, -149.13, 21.9399, 0.22", "-63.8524, -149.73, 22.011, 0.22", "-63.8105, -149.91, 22.0356, 0.22", "-63.3745, -152.204, 22.3176, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-177.469, -68.5027, -1.89284, 0.52", "-178.121, -68.6978, -3.2437, 0.52", "-178.162, -68.7124, -3.32033, 0.52", "-180.108, -69.5788, -6.60794, 0.52", "-180.19, -69.63, -6.72919, 0.52", "-180.806, -70.0514, -7.54448, 0.52", "-181.606, -70.622, -8.53077, 0.96", "-181.677, -70.6747, -8.59904, 0.96", "-182.291, -71.1625, -9.06082, 0.96", "-183.482, -72.163, -9.66045, 0.44", "-184.385, -72.8732, -10.0972, 0.44", "-184.52, -72.9731, -10.1608, 0.44", "-185.505, -73.6268, -10.5665, 0.44", "-186.564, -74.2575, -11.0139, 0.81", "-186.767, -74.362, -11.1004, 0.81", "-187.741, -74.7968, -11.5043, 1.11", "-187.807, -74.8279, -11.5303, 1.11", "-188.396, -75.1093, -11.7746, 1.11", "-189.734, -75.7523, -12.3149, 0.59", "-189.801, -75.7843, -12.3381, 0.59", "-190.992, -76.3264, -12.7039, 0.59", "-191.111, -76.3802, -12.736, 0.59", "-192.427, -76.9958, -13.0197, 0.59", "-193.729, -77.6137, -13.2289, 0.88", "-194.814, -78.1351, -13.3688, 1.18", "-195.848, -78.6228, -13.5005, 1.33", "-196.89, -79.1068, -13.6273, 1.33", "-198.061, -79.6272, -13.7568, 0.52", "-199.15, -80.0635, -13.9199, 0.52", "-199.923, -80.347, -14.0895, 0.52", "-200.43, -80.5349, -14.2471, 0.74", "-200.574, -80.5884, -14.3074, 0.74", "-201.122, -80.7774, -14.6036, 0.74", "-202.458, -81.2885, -15.4863, 0.29", "-202.518, -81.3191, -15.5254, 0.29", "-203.232, -81.755, -15.939, 0.29", "-203.315, -81.8089, -15.9876, 0.29", "-203.896, -82.1657, -16.2902, 0.59", "-204.456, -82.4995, -16.544, 0.74", "-205.381, -82.9703, -16.9841, 0.74", "-205.471, -83.0095, -17.0327, 0.74", "-206.551, -83.4249, -17.6163, 0.37", "-207.313, -83.7087, -18.0295, 0.37", "-207.443, -83.7545, -18.0986, 0.37", "-209.006, -84.3052, -18.9351, 1.11", "-209.633, -84.5713, -19.2361, 1.11", "-210.382, -84.9551, -19.5296, 0.44", "-210.508, -85.0396, -19.5636, 0.44", "-211.057, -85.4668, -19.6717, 0.44", "-211.254, -85.6193, -19.7059, 0.44", "-212.494, -86.575, -19.8567, 0.44", "-212.777, -86.7699, -19.9073, 0.44", "-213.47, -87.2183, -20.122, 0.44", "-213.533, -87.2569, -20.1463, 0.44", "-214.715, -87.9872, -20.624, 0.81", "-215.702, -88.5811, -21.0327, 1.18", "-216.447, -89.0508, -21.3459, 1.18", "-217.582, -89.7979, -21.8086, 0.88", "-218.268, -90.2687, -22.0791, 0.52", "-219.111, -90.8899, -22.3888, 0.52", "-219.17, -90.9383, -22.4063, 0.52", "-220.292, -91.8493, -22.7416, 0.52", "-220.352, -91.8967, -22.7583, 0.52", "-221.632, -92.7919, -23.1174, 0.44", "-221.759, -92.8715, -23.1595, 0.44", "-223.385, -93.6931, -23.7429, 0.44", "-224.03, -93.9758, -23.9729, 0.81", "-224.632, -94.204, -24.2448, 1.11", "-225.933, -94.68, -24.924, 0.44", "-226.071, -94.7277, -25.0022, 0.44", "-227.206, -95.1152, -25.6874, 0.44", "-227.278, -95.1387, -25.7316, 0.44", "-229.038, -95.7813, -26.7327, 0.44", "-229.253, -95.8733, -26.8438, 0.44", "-230.39, -96.4515, -27.298, 1.03", "-230.52, -96.5244, -27.342, 1.03", "-231.533, -97.1512, -27.5732, 1.03", "-231.608, -97.1975, -27.5848, 1.03", "-232.306, -97.6389, -27.6386, 0.22", "-233.237, -98.2783, -27.7334, 0.22", "-233.308, -98.3305, -27.746, 0.22", "-235.263, -99.7224, -28.1597, 0.22", "-236.232, -100.356, -28.4273, 0.81", "-236.947, -100.796, -28.6485, 1.47", "-237.678, -101.221, -28.8965, 1.47", "-239.096, -102.012, -29.39, 0.22", "-240.921, -102.98, -30.0357, 0.22", "-242.55, -103.803, -30.6145, 0.81", "-243.331, -104.184, -30.879, 0.81", "-243.408, -104.219, -30.905, 0.81", "-244.689, -104.817, -31.2828, 0.22", "-244.824, -104.884, -31.3146, 0.22", "-246.55, -105.823, -31.6653, 0.22", "-246.652, -105.881, -31.6782, 0.22", "-248.059, -106.662, -31.8326, 0.22", "-248.975, -107.166, -31.9131, 0.81", "-249.043, -107.203, -31.9171, 0.81", "-249.731, -107.549, -31.9349, 0.81", "-250.499, -107.902, -31.8465, 0.15", "-250.726, -108.007, -31.8013, 0.15", "-251.665, -108.438, -31.5499, 0.15", "-251.734, -108.469, -31.5325, 0.15", "-252.693, -108.892, -31.31, 0.15", "-254.13, -109.523, -30.9838, 0.74", "-254.908, -109.858, -30.8327, 0.88", "-255.634, -110.164, -30.7272, 0.88", "-255.705, -110.194, -30.721, 0.88", "-257.053, -110.762, -30.68, 0.22", "-257.124, -110.792, -30.6837, 0.22", "-258.25, -111.261, -30.8903, 0.22", "-258.8, -111.506, -31.0037, 0.52", "-259.49, -111.867, -31.186, 0.52", "-259.556, -111.904, -31.2046, 0.52", "-260.096, -112.235, -31.3617, 0.52", "-261.137, -112.887, -31.6724, 0.22", "-262.281, -113.664, -31.9307, 0.22", "-263.397, -114.454, -32.1082, 1.03", "-264.189, -115.054, -32.1908, 1.4", "-265.057, -115.741, -32.2338, 1.4", "-265.194, -115.848, -32.2306, 1.4", "-266.803, -117.069, -32.0548, 0.22", "-267.012, -117.215, -32.0253, 0.22", "-267.766, -117.707, -31.9004, 0.22", "-268.073, -117.896, -31.8645, 0.22", "-269.737, -118.823, -31.7618, 0.22", "-269.954, -118.933, -31.7646, 0.22", "-271.444, -119.638, -32.096, 0.22", "-271.52, -119.676, -32.1219, 0.22", "-271.973, -119.926, -32.3178, 0.74", "-272.12, -120.018, -32.3935, 0.74", "-272.9, -120.576, -32.8621, 0.74", "-275.36, -122.451, -34.4109, 0.22", "-276.127, -123.068, -34.9191, 0.88", "-276.772, -123.593, -35.3247, 1.11", "-276.944, -123.736, -35.4271, 1.11", "-277.438, -124.139, -35.687, 1.11", "-278.15, -124.712, -35.9995, 0.22", "-278.285, -124.807, -36.0308, 0.15", "-279.069, -125.282, -36.1676, 0.15", "-279.226, -125.369, -36.2077, 0.15", "-280.721, -126.172, -36.6774, 0.15", "-280.875, -126.256, -36.7338, 0.15", "-282.285, -127.047, -37.2378, 0.15", "-282.348, -127.084, -37.2635, 0.15", "-283.618, -127.872, -37.8263, 0.81", "-283.687, -127.917, -37.8586, 0.81", "-284.318, -128.333, -38.1326, 0.81", "-286.54, -129.813, -39.1705, 0.22", "-287.46, -130.435, -39.6022, 0.96", "-287.782, -130.636, -39.7426, 0.96", "-288.878, -131.277, -40.1787, 0.15", "-290.768, -132.289, -40.9154, 0.15", "-292.669, -133.241, -41.6576, 1.33", "-293.421, -133.589, -41.9501, 1.33", "-294.267, -133.957, -42.233, 0.37", "-294.364, -133.999, -42.2631, 0.37", "-295.457, -134.469, -42.5413, 0.37", "-296.086, -134.746, -42.6527, 0.81", "-296.226, -134.81, -42.6572, 0.81", "-296.849, -135.124, -42.6851, 0.59", "-297.414, -135.466, -42.719, 0.29", "-298.218, -136.05, -42.986, 0.29", "-298.274, -136.095, -43.0164, 0.29", "-298.979, -136.628, -43.6397, 0.66", "-299.34, -136.892, -44.0124, 0.96", "-299.914, -137.236, -44.7407, 0.44", "-301.647, -137.989, -47.5174, 0.37", "-301.755, -138.018, -47.7316, 0.81", "-303.241, -138.247, -50.8952, 0.37", "-303.529, -138.266, -51.5994, 0.37", "-304.768, -138.243, -54.8456, 0.88", "-306.043, -138.097, -58.5346, 0.88", "-307.363, -137.755, -62.7579, 0.81", "-307.485, -137.714, -63.1887, 0.81", "-308.834, -137.23, -68.4956, 0.37", "-308.851, -137.224, -68.57, 0.37", "-309.559, -137.091, -71.6615, 0.37", "-310.333, -137.08, -74.8709, 0.22", "-310.377, -137.088, -75.0368, 0.22", "-310.829, -137.284, -76.4128, 0.22", "-310.859, -137.302, -76.4819, 0.22", "-312.479, -138.222, -79.4059, 0.22", "-312.714, -138.357, -79.7155, 0.81", "-314.774, -139.434, -81.9451, 0.37", "-316.619, -140.128, -83.6364, 0.37", "-316.687, -140.146, -83.6886, 0.37", "-318.543, -140.549, -84.7942, 0.37", "-319.136, -140.637, -84.9937, 0.81", "-320.805, -140.78, -85.3805, 0.29", "-322.655, -140.781, -85.485, 0.29", "-323.309, -140.78, -85.4738, 0.66", "-323.385, -140.788, -85.4687, 0.66", "-324.301, -141.012, -85.3627, 0.66", "-324.386, -141.033, -85.359, 0.66", "-325.583, -141.329, -85.351, 0.44", "-327.331, -141.78, -85.5053, 0.15", "-327.479, -141.817, -85.5264, 0.15", "-329.816, -142.428, -86.0214, 0.15", "-331.856, -143.017, -86.5704, 0.59", "-333.696, -143.619, -87.1459, 0.15", "-335.577, -144.282, -88.1523, 0.15", "-335.687, -144.328, -88.2325, 0.15", "-337.21, -145.062, -89.5362, 0.52", "-337.788, -145.435, -90.1306, 1.03", "-338.443, -146.01, -90.9034, 1.03", "-340.862, -148.627, -94.3738, 0.22", "-341.5, -149.392, -95.447, 0.22", "-341.546, -149.452, -95.5285, 0.22", "-342.264, -150.474, -96.8933, 0.22", "-343.521, -152.304, -99.3077, 0.22", "-343.552, -152.35, -99.3628, 0.22", "-344.654, -153.977, -100.864, 0.88", "-345.038, -154.466, -101.405, 0.88", "-345.238, -154.69, -101.679, 0.15", "-345.286, -154.732, -101.742, 0.15", "-345.994, -155.227, -102.728, 0.15", "-346.041, -155.265, -102.793, 0.15", "-346.866, -156.126, -104.157, 0.81", "-347.054, -156.327, -104.594, 0.81", "-347.077, -156.355, -104.662, 0.81", "-347.722, -157.242, -107.062, 0.15", "-348.055, -157.78, -108.563, 0.15", "-348.531, -158.353, -110.432, 0.15", "-349.282, -159.155, -113.117, 0.15", "-349.313, -159.183, -113.218, 0.15", "-349.798, -159.551, -114.627, 1.18", "-350.06, -159.717, -115.319, 1.18", "-351.183, -160.291, -118.172, 0.22", "-351.498, -160.429, -118.858, 0.22", "-351.532, -160.444, -118.925, 0.22", "-352.745, -160.916, -121.138, 0.22", "-352.784, -160.928, -121.203, 0.59", "-360.636, -166.736, -126.59, 0.59" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-177.469, -68.5027, -1.89284, 0.59", "-178.747, -68.3288, -1.2321, 0.59", "-179.607, -68.2583, -0.827426, 0.59", "-180.925, -68.2751, -0.28928, 0.29", "-181.775, -68.3251, 0.0306294, 0.29", "-181.832, -68.3307, 0.0512168, 0.29", "-183.082, -68.4618, 0.474025, 0.29", "-183.125, -68.4699, 0.484763, 0.29", "-184.186, -68.7221, 0.710197, 0.29", "-184.237, -68.7346, 0.719198, 0.29", "-185.03, -68.9119, 0.880408, 0.29", "-185.972, -69.1099, 1.07425, 0.66", "-186.6, -69.2465, 1.20783, 1.18", "-187.056, -69.3547, 1.3013, 1.18", "-188.064, -69.6049, 1.50179, 0.37", "-189.18, -69.9173, 1.70097, 0.37", "-189.866, -70.1308, 1.79627, 0.37", "-190.279, -70.2724, 1.82683, 0.59", "-190.636, -70.3846, 1.82552, 0.44", "-190.687, -70.3993, 1.82146, 0.44", "-191.403, -70.5759, 1.69714, 0.44", "-192.157, -70.7272, 1.54409, 0.44", "-192.973, -70.8695, 1.38229, 0.44", "-193.746, -70.9907, 1.27043, 0.44", "-193.85, -71.0053, 1.25942, 0.44", "-194.458, -71.0809, 1.21721, 0.44", "-195.081, -71.1508, 1.19213, 0.29", "-195.68, -71.2095, 1.17508, 0.29", "-196.449, -71.2913, 1.16469, 0.88", "-197.139, -71.369, 1.14691, 0.88", "-197.698, -71.4358, 1.12484, 0.52", "-198.99, -71.6082, 1.03796, 0.52", "-199.785, -71.7145, 0.960137, 1.18", "-200.498, -71.8075, 0.867647, 1.18", "-200.557, -71.8159, 0.858145, 1.18", "-201.178, -71.9136, 0.762393, 1.18", "-201.762, -72.0132, 0.680112, 0.29", "-202.253, -72.0911, 0.62086, 0.29", "-203.522, -72.2794, 0.485692, 0.29", "-203.917, -72.3304, 0.445141, 1.25", "-204.474, -72.4003, 0.392121, 1.25", "-205.165, -72.4808, 0.333454, 0.52", "-206.157, -72.5886, 0.266182, 0.52", "-206.217, -72.5955, 0.26216, 0.52", "-206.673, -72.65, 0.231941, 0.88", "-206.725, -72.6554, 0.229338, 0.88", "-207.004, -72.6806, 0.219158, 0.88", "-207.731, -72.7311, 0.199378, 0.29", "-209.244, -72.8339, 0.17034, 0.29", "-209.297, -72.8377, 0.169354, 0.29", "-210.012, -72.899, 0.156942, 0.66", "-210.073, -72.9048, 0.155776, 0.66", "-210.683, -72.9673, 0.15343, 0.66", "-211.18, -73.0197, 0.157488, 0.66", "-212.097, -73.1009, 0.167286, 0.22", "-212.594, -73.1382, 0.169333, 0.88", "-213.206, -73.1784, 0.164541, 0.88", "-213.93, -73.2236, 0.161532, 0.22", "-214.209, -73.2433, 0.161969, 0.22", "-214.842, -73.3038, 0.16508, 0.22", "-214.903, -73.3104, 0.16537, 0.22", "-215.518, -73.3987, 0.207306, 0.22", "-215.597, -73.414, 0.215965, 0.22", "-216.079, -73.5293, 0.278653, 0.81", "-216.614, -73.6716, 0.357829, 0.81", "-216.664, -73.6875, 0.365626, 0.81", "-217.697, -73.9895, 0.490229, 0.22", "-218.792, -74.2837, 0.589777, 0.22", "-218.913, -74.3154, 0.596771, 0.22", "-219.531, -74.4708, 0.616416, 0.96", "-220.296, -74.6644, 0.64224, 0.96", "-221.247, -74.912, 0.666063, 0.22", "-221.848, -75.0852, 0.690449, 0.22", "-222.797, -75.3762, 0.781302, 0.22", "-222.855, -75.3944, 0.789069, 0.22", "-223.601, -75.6402, 0.925324, 1.03", "-224.18, -75.825, 1.04692, 1.18", "-225.036, -76.1148, 1.24652, 0.22", "-225.25, -76.1805, 1.29191, 0.22", "-225.729, -76.2722, 1.4004, 0.22", "-225.84, -76.2852, 1.41977, 0.22", "-227.001, -76.3431, 1.55989, 0.22", "-227.344, -76.3534, 1.60545, 0.88", "-227.787, -76.3564, 1.66228, 0.88", "-229.512, -76.3843, 1.92343, 0.22", "-230.172, -76.4024, 2.03519, 0.96", "-230.387, -76.4125, 2.07593, 0.96", "-231.837, -76.5541, 2.43142, 0.22", "-231.895, -76.5627, 2.44735, 0.22", "-232.374, -76.6652, 2.58447, 0.96", "-232.748, -76.7781, 2.69007, 0.96", "-232.79, -76.7911, 2.70391, 0.96", "-233.724, -77.0685, 2.99784, 0.22", "-233.774, -77.0794, 3.01301, 0.22", "-234.399, -77.1957, 3.21784, 0.22", "-234.507, -77.2107, 3.25194, 0.52", "-234.673, -77.2314, 3.30212, 0.52", "-234.841, -77.251, 3.34577, 0.52", "-235.508, -77.3373, 3.47868, 0.15", "-235.7, -77.3856, 3.52096, 0.15", "-236.277, -77.5812, 3.67158, 0.15", "-236.389, -77.6225, 3.70155, 0.52", "-236.496, -77.6657, 3.7295, 0.52", "-236.855, -77.8232, 3.80911, 0.52", "-237.731, -78.2751, 3.97869, 0.22", "-237.857, -78.3448, 4.00268, 0.22", "-238.589, -78.7702, 4.13723, 0.88", "-238.938, -78.9678, 4.18961, 1.03", "-239.88, -79.4942, 4.30523, 0.22", "-240.472, -79.82, 4.35084, 0.22", "-240.965, -80.0928, 4.36348, 0.22", "-241.33, -80.2894, 4.35931, 0.22", "-241.795, -80.5344, 4.33919, 0.22", "-241.843, -80.5572, 4.33597, 0.22", "-242.792, -80.9445, 4.24837, 0.22", "-242.899, -80.9809, 4.23651, 0.22", "-243.833, -81.2605, 4.13059, 0.22", "-243.884, -81.2756, 4.12681, 0.22", "-244.434, -81.4371, 4.10393, 0.81", "-244.555, -81.4718, 4.10115, 0.81", "-244.933, -81.5687, 4.10654, 0.81", "-245.527, -81.7405, 4.1275, 0.81", "-246.428, -82.0198, 4.17434, 0.22", "-246.485, -82.0406, 4.17763, 0.22", "-247.273, -82.3665, 4.24742, 0.22", "-248.023, -82.7095, 4.32443, 0.59", "-249.355, -83.3477, 4.46079, 0.22", "-249.41, -83.3746, 4.46614, 0.22", "-250.64, -83.9813, 4.57159, 0.22", "-251.24, -84.2772, 4.6189, 1.03", "-251.819, -84.5568, 4.65935, 1.03", "-253.077, -85.1379, 4.72388, 0.22", "-253.133, -85.1611, 4.72295, 0.22", "-253.29, -85.2196, 4.71207, 0.74", "-254.403, -85.5758, 4.56866, 0.22", "-254.722, -85.671, 4.51122, 0.66", "-255.095, -85.7782, 4.43603, 0.66", "-256.851, -86.3042, 4.04341, 0.22", "-256.931, -86.3292, 4.02569, 0.22", "-257.293, -86.4443, 3.94552, 0.81", "-257.349, -86.463, 3.93298, 0.81", "-257.946, -86.6944, 3.79178, 0.81", "-257.993, -86.7178, 3.78242, 0.81", "-259.118, -87.3435, 3.60178, 0.22", "-259.216, -87.4016, 3.58624, 0.22", "-259.523, -87.5852, 3.53836, 0.22", "-260.085, -87.9314, 3.45324, 0.22", "-262.059, -89.2152, 3.23843, 0.22", "-262.111, -89.2491, 3.23524, 0.22", "-262.403, -89.4515, 3.23096, 0.96", "-263.085, -89.9054, 3.23776, 0.96", "-263.626, -90.2528, 3.25921, 0.22", "-264.732, -90.914, 3.34489, 0.22", "-265.229, -91.1992, 3.38838, 0.66", "-265.753, -91.4836, 3.4267, 0.66", "-266.358, -91.7932, 3.48043, 0.22", "-266.47, -91.8447, 3.49103, 0.22", "-267.233, -92.1316, 3.55731, 0.22", "-267.305, -92.1536, 3.56233, 0.22", "-268.342, -92.4423, 3.67839, 0.22", "-268.994, -92.6088, 3.77486, 0.96", "-269.523, -92.7484, 3.86716, 0.96", "-269.903, -92.8668, 3.94696, 0.96", "-269.978, -92.8923, 3.96494, 0.96", "-271.425, -93.4256, 4.32822, 0.22", "-271.528, -93.4673, 4.35553, 0.22", "-272.071, -93.7031, 4.49076, 1.03", "-273.881, -94.5445, 4.99088, 0.22", "-273.928, -94.5687, 4.99949, 0.22", "-274.214, -94.7311, 5.02766, 1.03", "-274.31, -94.7954, 5.02653, 1.03", "-274.729, -95.1011, 4.98845, 1.03", "-275.471, -95.756, 4.84393, 0.22", "-276.649, -96.9738, 4.29562, 0.22", "-276.796, -97.135, 4.21792, 0.22", "-277.172, -97.5646, 4.00115, 0.22", "-277.238, -97.64, 3.9606, 0.22", "-278.238, -98.8024, 3.3041, 0.22", "-279.072, -99.6938, 2.77844, 0.66", "-279.466, -100.056, 2.59009, 0.66", "-279.506, -100.087, 2.57313, 0.66", "-280.193, -100.545, 2.34713, 0.22", "-280.288, -100.602, 2.31908, 0.22", "-281.166, -100.996, 2.13938, 0.22", "-281.209, -101.013, 2.13799, 0.22", "-282.294, -101.411, 2.12883, 0.22", "-282.902, -101.639, 2.15155, 0.88" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "38.364, 91.3221, 62.6694, 0.52", "38.647, 91.4239, 62.6219, 0.52", "39.2449, 91.6393, 62.5216, 0.52", "40.0172, 91.9173, 62.3921, 0.52" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "38.364, 91.3221, 62.6694, 0.52", "38.941, 92.12, 62.6526, 0.52", "39.819, 93.3343, 62.6271, 0.52", "40.5753, 94.3801, 62.6051, 0.52", "41.0682, 95.0618, 62.5908, 0.52" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-54.1648, -6.62676, 43.812, 0.88", "-54.031, -7.40682, 44.1738, 0.88", "-53.8513, -9.6548, 45.086, 0.96", "-53.8616, -10.9379, 45.6739, 0.96", "-53.9439, -11.8526, 46.3066, 0.96", "-54.0701, -12.6908, 47.062, 0.96", "-54.2277, -13.3821, 47.7551, 0.96", "-54.4826, -14.0691, 48.5609, 0.96", "-55.2198, -15.3663, 50.2267, 0.81", "-56.5036, -17.1524, 52.8503, 0.59", "-57.2029, -18.026, 54.2198, 0.59", "-57.6719, -18.596, 55.0783, 0.59", "-58.3053, -19.3603, 56.0972, 0.59", "-58.8627, -20.0504, 56.8955, 0.81", "-59.9937, -21.5163, 58.2349, 0.81", "-60.9454, -22.8908, 59.3531, 0.81", "-61.9407, -24.6798, 61.0425, 0.81", "-62.4942, -26.0003, 62.3866, 0.81", "-62.686, -26.6042, 63.0073, 0.81", "-62.8867, -27.4508, 63.8712, 0.66", "-63.3392, -29.8981, 66.339, 0.96", "-63.797, -33.3951, 69.8521, 0.81", "-63.9167, -34.6755, 71.1257, 0.81", "-64.0042, -35.7129, 72.0892, 0.81", "-64.1294, -36.8199, 72.9558, 0.81", "-64.2188, -37.3462, 73.2533, 0.96", "-64.4812, -38.3734, 73.5017, 0.96", "-64.931, -39.7644, 73.575, 0.96", "-65.3495, -40.94, 73.5662, 0.96", "-65.8057, -42.1634, 73.5064, 0.96", "-66.4241, -43.7449, 73.3894, 0.96", "-67.0862, -45.3841, 73.2314, 0.96", "-67.625, -46.6213, 73.1066, 1.11", "-68.3911, -48.2412, 72.9569, 1.11", "-68.9093, -49.2631, 72.8874, 0.88", "-69.5956, -50.5925, 72.8429, 0.88", "-70.4552, -52.2334, 72.8518, 0.88", "-71.6174, -54.5033, 72.9712, 0.88", "-72.3134, -55.9426, 73.0833, 1.4", "-72.8544, -57.1872, 73.2444, 1.03", "-73.3938, -58.6147, 73.4565, 0.81", "-73.7764, -59.8389, 73.6899, 0.81", "-74.0454, -60.9646, 73.9561, 1.11", "-74.2565, -62.0592, 74.2475, 1.11", "-74.586, -63.5318, 74.6754, 1.11", "-74.8997, -64.4841, 74.9704, 0.74", "-75.3004, -65.3691, 75.2641, 0.74", "-75.9556, -66.4615, 75.638, 0.74", "-76.6073, -67.3419, 75.9423, 0.66", "-77.6962, -68.6392, 76.3643, 0.66", "-78.8374, -69.9173, 76.6782, 0.66", "-79.282, -70.4198, 76.7544, 0.66", "-79.8056, -71.0464, 76.773, 0.66", "-80.284, -71.6851, 76.7508, 0.44", "-80.6783, -72.3228, 76.6839, 0.44", "-81.2719, -73.4001, 76.5254, 0.44", "-81.9366, -74.5557, 76.3493, 0.44", "-82.4639, -75.3899, 76.318, 0.44", "-83.2106, -76.5475, 76.4265, 0.44", "-83.851, -77.5033, 76.6437, 0.44", "-84.5742, -78.5782, 77.0092, 0.37", "-85.5096, -80.0169, 77.6274, 0.37", "-86.8006, -82.0144, 78.5945, 0.37", "-87.5686, -83.199, 79.1905, 0.37", "-88.4603, -84.5538, 79.8968, 0.37", "-89.0418, -85.3599, 80.329, 0.37", "-89.8808, -86.3965, 80.8562, 0.37", "-90.8495, -87.4072, 81.307, 0.37", "-91.6279, -88.0914, 81.5722, 0.37", "-92.3718, -88.6262, 81.8028, 0.37", "-93.9314, -89.6585, 82.2833, 0.37", "-94.9941, -90.3509, 82.5962, 0.37", "-95.9453, -91.0159, 82.8671, 0.37", "-97.2098, -91.9365, 83.2315, 0.37", "-98.1152, -92.6354, 83.4887, 0.37", "-99.716, -94.0064, 83.919, 0.37", "-100.57, -94.8732, 84.1647, 0.29", "-101.589, -96.0162, 84.4517, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-54.1648, -6.62676, 43.812, 0.52", "-54.6085, -6.6902, 43.7613, 0.52", "-55.2335, -6.78427, 43.7176, 0.29", "-55.7088, -6.8694, 43.6984, 0.29", "-56.2495, -6.96623, 43.6767, 0.29", "-56.7929, -7.06355, 43.6548, 0.29", "-57.4373, -7.17895, 43.6289, 0.29", "-58.0042, -7.27558, 43.5964, 0.22", "-58.2718, -7.33048, 43.579, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "68.3179, 25.5206, 19.6158, 1.11", "68.8556, 25.6952, 20.4798, 1.11", "70.1248, 26.28, 22.3837, 0.88", "70.1596, 26.2978, 22.4351, 0.88", "71.3229, 26.8282, 24.0318, 0.74", "71.8794, 26.9429, 24.86, 0.74", "71.9116, 26.941, 24.9519, 0.74", "72.437, 26.8319, 26.8718, 0.74", "72.4538, 26.8259, 26.9428, 0.74", "72.6762, 26.7231, 27.7806, 0.74", "73.5639, 26.1489, 30.8121, 1.03", "75.6036, 24.6654, 37.4674, 0.88", "75.8618, 24.477, 38.2847, 0.88", "75.8903, 24.4556, 38.375, 0.88", "76.723, 23.9284, 40.9471, 0.88", "77.4849, 23.5671, 43.2271, 0.52", "77.5656, 23.5499, 43.4216, 0.52", "77.8412, 23.5045, 43.8242, 0.52", "77.9316, 23.5035, 44.0043, 0.52", "77.8063, 24.2715, 44.962, 0.52", "77.7558, 24.3792, 45.0204, 0.52", "77.3649, 25.2916, 45.3946, 0.88", "76.8637, 26.5349, 45.9378, 0.44", "76.8387, 26.6008, 45.9675, 0.44", "76.525, 27.5133, 46.3633, 0.44", "76.6069, 27.4903, 46.4708, 0.44", "77.0738, 27.3276, 47.1113, 0.44", "77.7743, 27.1184, 48.0506, 0.44", "77.8629, 27.0918, 48.1656, 0.44", "78.9824, 26.8288, 49.6917, 0.44", "80.9295, 26.4031, 52.4764, 0.44", "80.9597, 26.3995, 52.5221, 0.44", "81.5221, 26.4203, 53.4508, 0.66", "81.5848, 26.448, 53.5707, 0.66", "82.1321, 27.0513, 55.0176, 0.66", "82.2018, 27.1986, 55.2575, 0.66", "82.4105, 27.4886, 55.9991, 0.66", "82.6333, 27.663, 56.7725, 0.66", "82.933, 27.7708, 57.6766, 0.96", "83.8141, 27.9195, 60.0107, 0.44", "84.1884, 27.9191, 60.864, 0.44", "86.3001, 27.7449, 65.1939, 0.44", "86.3267, 27.7409, 65.2417, 0.44", "86.9249, 27.6517, 66.1433, 0.44", "87.1719, 27.6247, 66.4436, 0.44", "87.8052, 27.6488, 67.0, 0.44", "87.9142, 27.6865, 67.0652, 0.44", "88.8821, 28.4574, 67.0622, 0.37", "89.696, 29.2255, 67.0695, 0.37", "89.8576, 29.4074, 67.0685, 0.37", "90.1205, 29.7321, 67.0614, 0.37", "90.2315, 29.889, 67.0565, 0.37", "90.5688, 30.3735, 67.0663, 0.37", "91.3231, 31.449, 67.2904, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "68.3179, 25.5206, 19.6158, 0.37", "68.6579, 27.0739, 19.9489, 0.37", "68.6837, 27.1571, 19.9723, 0.37", "69.19, 28.6462, 20.465, 0.37", "69.2445, 28.8042, 20.5219, 0.37", "69.7724, 30.3461, 21.1036, 0.37", "69.8256, 30.5032, 21.1642, 0.37", "70.1947, 31.5656, 21.6468, 0.37", "70.5585, 32.6136, 22.1233, 0.81", "70.9193, 33.6802, 22.6046, 0.52", "71.1485, 34.5516, 22.9531, 0.52", "71.1637, 34.6359, 22.9828, 0.52", "71.295, 35.4201, 23.2223, 0.52", "71.3191, 35.59, 23.2661, 0.52", "71.4748, 36.665, 23.4821, 0.37", "71.6803, 38.04, 23.7039, 1.03", "71.8085, 38.8633, 23.8185, 0.52", "72.0203, 40.1836, 24.0038, 0.22", "72.0331, 40.2607, 24.015, 0.22", "72.1625, 41.0109, 24.1357, 0.59", "72.2652, 41.5161, 24.2342, 0.81", "72.3207, 41.7504, 24.2951, 0.81", "72.4851, 42.5345, 24.5088, 0.29", "72.574, 43.0107, 24.6485, 0.29", "72.6159, 43.1888, 24.6862, 0.29", "72.7999, 43.8648, 24.7983, 0.29", "73.006, 44.4836, 24.8598, 0.88", "73.3388, 45.3416, 24.9065, 0.88", "73.4458, 45.562, 24.9219, 0.88", "74.2284, 47.0163, 25.061, 0.37", "74.2687, 47.0823, 25.0705, 0.37", "74.7695, 47.8074, 25.2007, 0.37", "75.017, 48.1218, 25.2505, 0.37", "75.8888, 49.1553, 25.4054, 0.37", "75.9984, 49.278, 25.4254, 0.37", "76.9095, 50.2312, 25.6082, 0.37", "76.963, 50.2862, 25.6169, 0.37", "78.5762, 51.9674, 25.8422, 0.37", "78.6275, 52.025, 25.8468, 0.37", "79.485, 53.0655, 25.8963, 0.37", "79.6823, 53.3456, 25.8711, 0.37", "80.2972, 54.3192, 25.7034, 0.37", "80.8162, 55.2047, 25.5101, 1.25", "81.5284, 56.5495, 25.108, 2.06", "81.9705, 57.4346, 24.8071, 2.36", "83.3332, 60.3278, 23.7946, 1.84", "83.7475, 61.1985, 23.4769, 1.25", "83.7743, 61.2549, 23.4553, 1.25", "84.5011, 62.6606, 22.8938, 0.59", "84.9039, 63.3694, 22.588, 0.59", "85.6798, 64.6545, 22.0293, 0.52", "86.8815, 66.3396, 21.3913, 0.52", "86.9185, 66.3886, 21.3682, 0.52", "87.3019, 66.8663, 21.1018, 0.81", "88.5798, 68.3116, 20.1843, 0.22", "88.6836, 68.4214, 20.1057, 0.22", "89.5886, 69.3303, 19.4168, 0.22", "90.956, 70.6563, 18.4761, 0.22", "92.0469, 71.7259, 17.7867, 0.96", "92.6548, 72.3252, 17.4575, 1.11", "93.0564, 72.7099, 17.3093, 1.11", "93.4446, 73.1149, 17.1933, 0.22", "93.7723, 73.5138, 17.1536, 0.22", "93.9127, 73.6917, 17.1646, 0.22", "94.3487, 74.2771, 17.2379, 0.22", "95.0786, 75.3055, 17.3627, 0.22", "96.146, 76.8425, 17.5384, 0.22", "97.356, 78.6139, 17.7277, 0.22", "97.8048, 79.2855, 17.7965, 0.66", "98.1029, 79.7412, 17.8423, 0.66" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "34.8789, 14.1046, 8.73075, 0.59", "35.0511, 14.1085, 9.11602, 0.59", "35.2181, 14.144, 9.56858, 0.59", "35.5085, 14.2352, 10.427, 0.59", "35.6621, 14.3097, 10.982, 1.03", "36.0491, 14.5357, 12.7761, 0.88", "36.0548, 14.5392, 12.8124, 0.88", "36.1161, 14.6276, 13.8441, 0.88", "36.1144, 14.6302, 13.8811, 0.88", "35.9979, 14.6532, 14.58, 0.66", "35.8519, 14.6068, 15.1029, 0.66", "35.6527, 14.4065, 15.5786, 0.81", "35.6427, 14.3923, 15.6123, 0.81", "35.5863, 14.1576, 16.1184, 0.59", "35.6115, 14.1295, 16.2216, 0.59", "35.9424, 14.153, 16.6179, 0.59", "36.0376, 14.1753, 16.6996, 0.59", "37.0298, 14.4613, 17.3414, 0.59", "37.4689, 14.6014, 17.5856, 0.96", "37.8932, 14.762, 17.805, 0.59", "38.2681, 14.9433, 18.0537, 0.59", "38.3229, 14.9739, 18.1007, 0.59", "38.8921, 15.302, 18.671, 0.59", "38.9538, 15.3371, 18.7467, 0.59", "39.3521, 15.5795, 19.3294, 1.18", "40.1285, 15.9867, 20.5778, 1.11", "40.7577, 16.2795, 21.6546, 1.11", "40.773, 16.2849, 21.6816, 1.11", "41.3761, 16.4418, 22.784, 0.74", "41.3921, 16.4441, 22.8111, 0.74", "42.0162, 16.4477, 23.7806, 0.74", "42.0357, 16.4586, 23.8358, 0.74", "42.2473, 16.7665, 24.7651, 1.03", "42.2543, 16.7817, 24.8036, 1.03", "42.4051, 17.2049, 25.741, 0.74", "42.4113, 17.2233, 25.7782, 0.74", "43.0753, 19.6343, 30.1599, 1.25", "43.2295, 20.1948, 31.1233, 0.66", "43.2342, 20.214, 31.1541, 0.66", "43.3068, 20.4987, 31.5904, 0.66", "43.3676, 20.7519, 31.9574, 0.44", "43.3855, 20.7996, 32.0171, 0.44", "43.6391, 21.068, 32.1621, 0.29", "43.6718, 21.1034, 32.1823, 0.29", "44.03, 21.4689, 32.4194, 0.59", "44.0563, 21.4957, 32.4384, 0.59", "44.8616, 22.2294, 32.9815, 1.18", "45.8451, 22.9484, 33.5462, 0.59", "46.5622, 23.3815, 33.9116, 0.59", "46.8628, 23.5206, 34.0394, 0.44", "46.8949, 23.5337, 34.0514, 0.44", "47.5113, 23.8067, 34.2971, 0.44", "48.1547, 24.0779, 34.5382, 0.44", "48.1833, 24.094, 34.5546, 0.44", "48.5764, 24.4149, 34.9029, 0.44", "49.1153, 24.8851, 35.4979, 0.66", "49.6464, 25.4116, 36.2983, 0.66", "49.6608, 25.4285, 36.3274, 0.66", "50.0073, 25.8367, 37.1143, 0.52", "50.0237, 25.8521, 37.1496, 0.52", "50.2178, 25.9835, 37.5532, 0.52", "50.6966, 26.1935, 38.4329, 0.74", "50.714, 26.2032, 38.4637, 0.74", "50.9817, 26.4121, 38.9414, 0.44", "51.3023, 26.7965, 39.4938, 0.44", "51.3333, 26.8449, 39.5473, 0.44", "51.6413, 27.5296, 40.0109, 0.44", "51.8251, 28.0379, 40.2021, 0.44", "51.8405, 28.0872, 40.2134, 0.44", "51.9694, 28.55, 40.2373, 0.44", "51.9808, 28.5856, 40.23, 0.44", "52.2802, 29.194, 39.9861, 0.44", "52.2994, 29.2222, 39.9688, 0.44", "52.5555, 29.5568, 39.7744, 0.29", "52.817, 29.9335, 39.6186, 0.29", "52.8924, 30.0487, 39.5856, 0.29", "53.2542, 30.7073, 39.4507, 0.29", "53.2736, 30.7571, 39.4489, 0.29", "53.4337, 31.4384, 39.4846, 0.22", "53.4645, 32.1169, 39.5658, 0.22", "53.461, 32.1535, 39.5718, 0.22", "53.3762, 32.56, 39.6296, 0.22", "53.1694, 33.1543, 39.7018, 0.22", "53.1341, 33.2353, 39.7013, 0.22", "52.9578, 33.562, 39.6553, 0.22", "52.9176, 33.6328, 39.6348, 0.22", "52.7216, 33.9888, 39.5143, 0.22", "52.6835, 34.0655, 39.4785, 0.59", "52.4833, 34.4146, 39.2071, 0.59" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "34.8789, 14.1046, 8.73075, 0.66", "34.563, 14.5898, 8.71714, 0.66", "34.3065, 15.2509, 8.32009, 0.66", "34.3924, 15.9032, 6.91395, 0.29", "34.4735, 16.1336, 6.40204, 0.22", "34.5468, 16.2714, 6.1094, 0.22", "34.9964, 16.8982, 4.92847, 0.52", "35.4454, 17.3711, 4.02048, 0.88", "36.0015, 17.9098, 3.14975, 1.18", "36.6037, 18.525, 2.39788, 0.66", "37.3998, 19.4275, 1.62469, 0.52", "38.2349, 20.5933, 1.01438, 0.52", "38.2708, 20.6566, 0.997309, 0.52", "39.0514, 22.4087, 0.722932, 0.88", "39.6244, 24.1259, 0.544418, 1.33", "39.6372, 24.1988, 0.533942, 1.33", "39.6826, 25.2094, 0.284847, 0.81", "39.6108, 26.0261, -0.0611858, 0.52", "39.4253, 27.203, -0.794857, 0.52", "39.3013, 27.7257, -1.23574, 0.96", "38.9235, 29.2218, -2.67784, 0.96", "38.7117, 30.2187, -3.65787, 0.44", "38.5913, 30.9166, -4.29924, 0.37", "38.449, 31.8898, -5.09768, 0.37", "38.442, 31.952, -5.13927, 0.37", "38.3463, 32.979, -5.67348, 0.37", "38.2776, 33.8871, -5.92485, 0.88", "38.1345, 35.625, -6.17328, 0.66", "38.1289, 35.699, -6.17841, 0.66", "38.0512, 36.6073, -6.19001, 0.52", "38.0088, 37.2643, -6.18587, 0.52", "37.9046, 39.2852, -6.09918, 0.88", "37.9046, 39.3484, -6.09429, 0.88", "38.0187, 40.422, -6.03818, 1.25", "38.0338, 40.4947, -6.03756, 1.25", "38.3868, 41.6151, -6.07169, 1.25", "38.4654, 41.8006, -6.08496, 1.25", "39.1205, 43.0257, -6.26688, 0.96", "39.5822, 43.8702, -6.40077, 0.52", "40.0735, 44.7835, -6.58709, 0.44", "40.1208, 44.8753, -6.60957, 0.44", "40.3648, 45.3902, -6.78094, 0.44", "40.3927, 45.4548, -6.80746, 0.44", "40.8582, 46.8442, -7.53572, 0.44", "41.1389, 48.0103, -8.12733, 0.44", "41.1512, 48.0768, -8.16082, 0.44", "41.281, 48.8759, -8.5623, 0.44", "41.2936, 48.955, -8.59377, 0.44", "41.4906, 49.9685, -8.86728, 0.44", "41.8352, 51.2227, -9.05504, 0.44", "42.1406, 52.0173, -9.10144, 0.88", "42.1715, 52.0849, -9.10383, 0.88", "43.0905, 53.8603, -9.22688, 1.25", "43.6471, 54.875, -9.33831, 0.74", "44.0866, 55.6604, -9.46901, 0.74", "44.6432, 56.7406, -9.72105, 0.59", "45.0816, 57.6898, -10.0014, 0.52", "45.688, 59.2421, -10.5907, 0.37", "46.0007, 60.3106, -11.1084, 1.33", "46.2152, 61.3632, -11.6629, 1.33", "46.3143, 62.4673, -12.2648, 0.96", "46.3124, 63.2973, -12.7273, 0.52", "46.2516, 64.2329, -13.2662, 0.52", "46.1341, 65.3649, -13.9395, 0.52", "46.1132, 65.5649, -14.0638, 0.52", "46.0241, 66.7474, -14.7936, 0.52", "46.0192, 66.8745, -14.8743, 0.52", "46.0032, 67.6831, -15.3731, 0.37", "46.0181, 68.7613, -16.0291, 0.37", "46.0434, 69.5332, -16.5945, 1.03", "46.0492, 69.6585, -16.7002, 1.03", "46.0983, 70.2545, -17.2664, 1.03", "46.153, 70.9854, -18.0301, 1.25", "46.1866, 71.6496, -18.8079, 1.25", "46.1888, 72.7345, -20.1985, 1.25", "46.1788, 73.1075, -20.7088, 0.44", "46.1623, 73.3951, -21.0763, 0.44", "46.1035, 74.0185, -21.7869, 0.44", "46.0976, 74.0729, -21.8384, 0.44", "45.9828, 74.9431, -22.4984, 0.44", "45.9767, 75.0065, -22.5383, 0.44", "45.954, 75.7028, -22.9887, 0.44", "45.9753, 76.5871, -23.5814, 0.44", "46.0335, 77.4384, -24.1472, 0.44", "46.1538, 78.5164, -24.863, 1.18", "46.3067, 79.4956, -25.5156, 1.18", "46.6075, 81.3743, -26.7939, 1.18", "46.6857, 81.9118, -27.1369, 0.66", "46.7507, 82.4397, -27.4384, 0.44", "46.7939, 83.0779, -27.7566, 0.44", "46.795, 83.1573, -27.7896, 0.44", "46.739, 84.1548, -28.1266, 0.44", "46.6276, 85.724, -28.4841, 0.44", "46.6286, 85.9563, -28.5148, 0.44", "46.6991, 86.9668, -28.6003, 1.11", "46.8081, 87.7617, -28.6451, 1.55", "46.8414, 87.9245, -28.6553, 1.55", "47.235, 89.2958, -28.6953, 1.55", "47.7288, 90.8691, -28.7835, 0.81", "47.7496, 90.9405, -28.7856, 0.81", "47.864, 91.454, -28.7579, 0.66", "47.9445, 92.0593, -28.7065, 0.66", "47.9963, 93.124, -28.6363, 0.52", "47.9492, 93.953, -28.5955, 0.52", "47.9407, 94.0368, -28.59, 0.52", "47.7959, 95.6552, -28.4579, 0.52", "47.7551, 96.0872, -28.4127, 1.11", "47.7095, 96.6986, -28.4011, 1.11", "47.703, 96.8361, -28.4122, 1.11", "47.7071, 98.2662, -28.6115, 0.52", "47.7232, 98.8809, -28.7532, 0.44", "47.7263, 98.9618, -28.782, 0.44", "47.7552, 100.589, -29.4448, 0.44", "47.7542, 100.657, -29.4765, 0.44", "47.7139, 101.682, -30.011, 1.11", "47.6679, 102.247, -30.3161, 1.11", "47.6035, 102.945, -30.6613, 0.74", "47.5436, 103.583, -30.9558, 0.37", "47.4731, 104.325, -31.2718, 0.37", "47.4681, 104.395, -31.2989, 0.37", "47.3964, 105.676, -31.7579, 0.37", "47.3574, 106.336, -31.976, 0.29", "47.3506, 106.418, -31.9998, 0.29", "47.2477, 107.074, -32.2031, 0.29", "46.9864, 108.183, -32.5501, 0.29", "46.9381, 108.35, -32.6031, 0.29", "46.6583, 109.202, -32.8866, 0.29", "46.3445, 110.085, -33.157, 0.29", "45.9223, 111.294, -33.4784, 0.29", "45.6964, 112.013, -33.6598, 0.29", "45.6613, 112.142, -33.6932, 0.29", "45.4946, 113.141, -33.9601, 0.29", "45.4869, 113.265, -33.9939, 0.29", "45.5252, 114.188, -34.3021, 1.25", "45.6533, 115.284, -34.7059, 1.69", "45.6628, 115.364, -34.7359, 1.69", "45.7617, 116.454, -35.1529, 1.69", "45.7786, 116.674, -35.2402, 1.69", "45.8443, 117.616, -35.6294, 1.69", "45.8505, 117.713, -35.6719, 1.69", "45.9198, 119.194, -36.2854, 0.52", "45.9698, 120.023, -36.6113, 0.37", "46.029, 120.945, -36.8167, 0.37", "46.0344, 121.019, -36.8265, 0.37", "46.0991, 121.716, -36.8756, 0.37", "46.1085, 121.79, -36.8794, 0.37", "46.5204, 124.122, -36.9772, 0.22", "47.0472, 126.652, -37.0304, 0.37", "47.0647, 126.724, -37.0326, 0.37", "47.2851, 127.529, -37.0755, 1.18", "47.4998, 128.235, -37.1423, 1.92", "47.7473, 128.958, -37.2613, 1.25", "47.8912, 129.305, -37.38, 0.59", "48.2005, 130.006, -37.7454, 0.59", "48.2312, 130.077, -37.7817, 0.59", "48.7423, 131.373, -38.4207, 0.29", "48.7663, 131.437, -38.4521, 0.29", "49.2395, 132.728, -39.0873, 0.29", "49.2665, 132.801, -39.124, 0.29", "49.5769, 133.646, -39.5683, 0.29", "49.6873, 133.938, -39.7313, 0.81", "49.8846, 134.489, -40.0259, 0.44", "49.999, 134.929, -40.2368, 0.44", "50.0435, 135.212, -40.3584, 0.44", "50.0625, 135.866, -40.6341, 0.44", "50.047, 136.023, -40.7051, 0.44", "49.9213, 137.088, -41.223, 0.88", "49.821, 137.942, -41.6164, 0.88", "49.8045, 138.107, -41.692, 0.88", "49.7231, 139.303, -42.2466, 0.52", "49.6791, 140.6, -42.8054, 0.52", "49.6634, 141.838, -43.3296, 0.37", "49.6646, 142.931, -43.799, 1.11", "49.6758, 143.882, -44.1799, 1.47", "49.6872, 144.491, -44.4124, 1.47", "49.7348, 145.9, -44.8588, 0.44", "49.7437, 146.483, -45.0027, 0.44", "49.7401, 146.833, -45.0762, 0.37", "49.7355, 147.111, -45.1369, 0.37", "49.7485, 147.578, -45.2312, 0.37", "49.8443, 148.55, -45.4043, 0.37", "49.8525, 148.624, -45.406, 0.37", "49.9431, 149.418, -45.3615, 0.37", "49.9629, 149.596, -45.3453, 0.37", "50.0355, 150.259, -45.286, 1.18", "50.2319, 152.024, -45.1416, 1.18", "50.5121, 153.972, -45.0297, 0.96", "50.5736, 154.352, -45.0037, 0.37", "50.5915, 154.434, -44.995, 0.37", "50.8351, 155.164, -44.9037, 0.37", "51.0307, 155.418, -44.8491, 0.37", "51.7426, 155.832, -44.7801, 0.37", "51.8075, 155.865, -44.7797, 0.37", "52.8832, 156.481, -44.8013, 0.37", "53.0846, 156.62, -44.8191, 0.37", "54.0667, 157.456, -45.0177, 0.37", "54.7921, 158.179, -45.2588, 0.37", "55.3044, 158.757, -45.4828, 1.25", "55.7764, 159.355, -45.7052, 1.55", "56.5758, 160.477, -46.1228, 0.52", "57.3568, 161.601, -46.5436, 0.37", "57.9925, 162.493, -46.7823, 0.37", "58.031, 162.543, -46.7876, 0.37", "58.7396, 163.449, -46.6695, 0.88", "59.0462, 163.841, -46.5419, 0.88", "59.093, 163.903, -46.5137, 0.88", "60.4606, 165.793, -45.5316, 0.52", "60.4995, 165.849, -45.5054, 0.52", "61.4962, 167.267, -44.9469, 0.52", "61.5374, 167.325, -44.931, 0.52", "62.0441, 168.088, -44.8069, 0.81", "62.1378, 168.235, -44.8017, 0.81", "62.6779, 169.131, -44.9587, 0.81", "62.7166, 169.193, -44.9746, 0.81", "63.5359, 170.429, -45.3602, 0.52", "63.8581, 170.875, -45.4463, 0.52", "63.9945, 171.033, -45.4578, 0.52", "64.3007, 171.347, -45.4553, 0.88", "64.8412, 171.782, -45.3929, 0.88", "66.1064, 172.481, -45.1946, 0.37", "67.3143, 172.916, -44.9168, 0.37", "68.3064, 173.187, -44.6484, 0.37", "68.5869, 173.234, -44.5591, 0.37", "70.0148, 173.266, -43.9982, 0.29", "71.8221, 173.082, -43.1872, 0.29", "72.8607, 172.823, -42.6661, 1.03", "72.9221, 172.804, -42.6337, 1.03", "74.0732, 172.377, -41.9678, 0.29", "75.4008, 171.788, -41.1173, 0.29", "75.4519, 171.755, -41.0765, 0.29", "75.985, 171.257, -40.5133, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "64.2345, 58.4492, 7.35569, 0.66", "61.3573, 70.6353, 13.2679, 0.66", "60.7373, 82.2327, 20.7502, 0.66", "60.9986, 94.3114, 27.5094, 0.66", "63.2529, 107.295, 31.8727, 0.66", "66.2829, 119.879, 36.8127, 0.66", "71.0539, 131.957, 41.4904, 0.66", "74.614, 144.202, 46.8428, 0.66", "76.2059, 157.663, 49.9473, 0.66", "77.5658, 170.362, 55.3705, 0.66", "79.9352, 182.272, 61.9741, 0.66", "81.395, 193.78, 69.4561, 0.66", "80.9846, 206.542, 74.9113, 0.66", "82.3073, 218.441, 81.8317, 0.66", "86.5986, 229.129, 89.3092, 0.66", "89.1835, 239.912, 97.4424, 0.66", "93.5446, 249.749, 105.889, 0.66", "96.2526, 261.263, 112.991, 0.66", "97.3814, 272.021, 121.491, 0.66", "100.537, 282.667, 129.582, 0.66" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "64.2345, 58.4492, 7.35569, 0.52", "72.0145, 63.9737, 2.9763, 0.66", "79.5535, 70.8876, 0.285998, 0.66", "85.6708, 79.1064, -2.63386, 0.66", "92.8161, 86.7455, -4.511, 0.66" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "89.174, -22.4897, 85.8007, 0.66", "89.447, -22.6623, 86.5045, 0.66", "89.7301, -22.8174, 87.1714, 0.66", "90.8152, -23.3546, 89.5607, 0.66", "91.6537, -23.7466, 91.3399, 0.66", "91.6851, -23.7621, 91.4024, 0.66", "92.8256, -24.4433, 93.4893, 0.66", "92.887, -24.4803, 93.5851, 0.66", "93.0374, -24.5876, 93.7916, 1.03", "93.0374, -24.5876, 93.7916, 1.03", "93.6325, -25.3391, 94.6234, 0.88", "94.7416, -27.0021, 96.2468, 0.74", "94.7747, -27.0606, 96.2994, 0.74", "95.6703, -28.7284, 97.8107, 0.59", "96.0031, -29.4269, 98.448, 0.44", "96.3637, -30.2204, 99.178, 0.29", "96.624, -30.8644, 99.7815, 0.29", "96.9945, -31.9717, 100.794, 0.29", "97.0138, -32.0332, 100.851, 0.29", "97.1875, -32.6884, 101.482, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "89.174, -22.4897, 85.8007, 0.66", "88.5138, -21.8574, 85.912, 0.66", "87.6265, -20.9434, 85.9752, 0.37", "86.79, -19.8614, 85.8652, 0.37", "86.7298, -19.752, 85.8693, 0.37", "86.1135, -18.3571, 86.0081, 0.37", "86.0803, -18.2821, 86.0155, 0.37", "85.8856, -17.6681, 86.0805, 0.37", "85.5731, -16.0973, 86.2462, 0.22", "85.2835, -13.6745, 86.3187, 0.22", "85.2811, -13.5923, 86.3289, 0.22" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "97.1875, -32.6884, 101.482, 0.15", "98.3029, -35.1667, 102.221, 0.15", "98.7752, -36.2164, 102.534, 0.15", "99.601, -38.0512, 103.081, 0.15", "99.7675, -38.4211, 103.191, 0.15", "100.516, -40.0856, 103.687, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "97.1875, -32.6884, 101.482, 0.29", "96.5008, -32.6544, 101.022, 0.29", "95.9164, -32.6255, 100.63, 0.15", "94.6685, -32.5637, 99.7937, 0.15", "93.3514, -32.4986, 98.9108, 0.15", "91.8438, -32.424, 97.9003, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_21", "dend_0", "dend_50", "dend_41", "dend_31", "dend_22", "dend_9", "dend_1", "dend_58", "dend_51", "dend_49", "dend_42", "dend_35", "dend_32", "dend_26", "dend_23", "dend_14", "dend_10", "dend_2", "dend_60", "dend_59", "dend_55", "dend_52", "dend_46", "dend_43", "dend_37", "dend_36", "dend_34", "dend_33", "dend_28", "dend_27", "dend_25", "dend_24", "dend_18", "dend_15", "dend_11", "dend_4", "dend_3", "dend_62", "dend_61", "dend_57", "dend_56", "dend_54", "dend_53", "dend_48", "dend_47", "dend_45", "dend_44", "dend_39", "dend_38", "dend_30", "dend_29", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_12", "dend_6", "dend_5", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_40", "dend_21", "dend_0", "dend_50", "dend_41", "dend_31", "dend_22", "dend_9", "dend_1", "dend_58", "dend_51", "dend_49", "dend_42", "dend_35", "dend_32", "dend_26", "dend_23", "dend_14", "dend_10", "dend_2", "dend_60", "dend_59", "dend_55", "dend_52", "dend_46", "dend_43", "dend_37", "dend_36", "dend_34", "dend_33", "dend_28", "dend_27", "dend_25", "dend_24", "dend_18", "dend_15", "dend_11", "dend_4", "dend_3", "dend_62", "dend_61", "dend_57", "dend_56", "dend_54", "dend_53", "dend_48", "dend_47", "dend_45", "dend_44", "dend_39", "dend_38", "dend_30", "dend_29", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_12", "dend_6", "dend_5", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_21", "dend_0", "axon_0", "dend_50", "dend_41", "dend_31", "dend_22", "dend_9", "dend_1", "axon_1", "dend_58", "dend_51", "dend_49", "dend_42", "dend_35", "dend_32", "dend_26", "dend_23", "dend_14", "dend_10", "dend_2", "dend_60", "dend_59", "dend_55", "dend_52", "dend_46", "dend_43", "dend_37", "dend_36", "dend_34", "dend_33", "dend_28", "dend_27", "dend_25", "dend_24", "dend_18", "dend_15", "dend_11", "dend_4", "dend_3", "dend_62", "dend_61", "dend_57", "dend_56", "dend_54", "dend_53", "dend_48", "dend_47", "dend_45", "dend_44", "dend_39", "dend_38", "dend_30", "dend_29", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_12", "dend_6", "dend_5", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_9", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_NBC_a3972c5d97_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_40
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_31, id: dend_31, parent: dend_21
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_9, id: dend_9, parent: dend_0
create dend_9
public dend_9
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_58, id: dend_58, parent: dend_50
create dend_58
public dend_58
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_41
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_9
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_21, dend_0, dend_50, dend_41, dend_31, dend_22, dend_9, dend_1, dend_58, dend_51, dend_49, dend_42, dend_35, dend_32, dend_26, dend_23, dend_14, dend_10, dend_2, dend_60, dend_59, dend_55, dend_52, dend_46, dend_43, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_25, dend_24, dend_18, dend_15, dend_11, dend_4, dend_3, dend_62, dend_61, dend_57, dend_56, dend_54, dend_53, dend_48, dend_47, dend_45, dend_44, dend_39, dend_38, dend_30, dend_29, dend_20, dend_19, dend_17, dend_16, dend_13, dend_12, dend_6, dend_5, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_21, dend_0, dend_50, dend_41, dend_31, dend_22, dend_9, dend_1, dend_58, dend_51, dend_49, dend_42, dend_35, dend_32, dend_26, dend_23, dend_14, dend_10, dend_2, dend_60, dend_59, dend_55, dend_52, dend_46, dend_43, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_25, dend_24, dend_18, dend_15, dend_11, dend_4, dend_3, dend_62, dend_61, dend_57, dend_56, dend_54, dend_53, dend_48, dend_47, dend_45, dend_44, dend_39, dend_38, dend_30, dend_29, dend_20, dend_19, dend_17, dend_16, dend_13, dend_12, dend_6, dend_5, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_40, dend_21, dend_0, axon_0, dend_50, dend_41, dend_31, dend_22, dend_9, dend_1, axon_1, dend_58, dend_51, dend_49, dend_42, dend_35, dend_32, dend_26, dend_23, dend_14, dend_10, dend_2, dend_60, dend_59, dend_55, dend_52, dend_46, dend_43, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_25, dend_24, dend_18, dend_15, dend_11, dend_4, dend_3, dend_62, dend_61, dend_57, dend_56, dend_54, dend_53, dend_48, dend_47, dend_45, dend_44, dend_39, dend_38, dend_30, dend_29, dend_20, dend_19, dend_17, dend_16, dend_13, dend_12, dend_6, dend_5, dend_8, dend_7]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_40(0), soma_0(0.450000602452921)
    connect dend_21(0), soma_0(0.450000602452921)
    connect dend_0(0), soma_0(0.450000602452921)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_31(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_9(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_58(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_14(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -13.5885, -1.40806, -1.21115, 3.28922 ) }
    soma_0 { pt3dadd( -12.1797, -1.31485, -1.09796, 5.53013 ) }
    soma_0 { pt3dadd( -10.7708, -1.22164, -0.98478, 8.11492 ) }
    soma_0 { pt3dadd( -9.36203, -1.12843, -0.871597, 8.79827 ) }
    soma_0 { pt3dadd( -7.95321, -1.03522, -0.758413, 9.64874 ) }
    soma_0 { pt3dadd( -6.54439, -0.94201, -0.645229, 10.525 ) }
    soma_0 { pt3dadd( -5.13557, -0.848801, -0.532045, 11.3671 ) }
    soma_0 { pt3dadd( -3.72674, -0.755591, -0.418861, 12.0867 ) }
    soma_0 { pt3dadd( -2.31792, -0.662382, -0.305678, 12.7138 ) }
    soma_0 { pt3dadd( -0.909103, -0.569173, -0.192494, 13.1296 ) }
    soma_0 { pt3dadd( 0.499717, -0.475964, -0.0793099, 13.1814 ) }
    soma_0 { pt3dadd( 1.90854, -0.382755, 0.033874, 12.8438 ) }
    soma_0 { pt3dadd( 3.31736, -0.289546, 0.147058, 12.4399 ) }
    soma_0 { pt3dadd( 4.72618, -0.196336, 0.260242, 11.9471 ) }
    soma_0 { pt3dadd( 6.135, -0.103127, 0.373425, 11.0762 ) }
    soma_0 { pt3dadd( 7.54382, -0.00991806, 0.486609, 10.1681 ) }
    soma_0 { pt3dadd( 8.95264, 0.0832911, 0.599793, 8.77152 ) }
    soma_0 { pt3dadd( 10.3615, 0.1765, 0.712977, 7.19375 ) }
    soma_0 { pt3dadd( 11.7703, 0.269709, 0.826161, 5.5839 ) }
    soma_0 { pt3dadd( 13.1791, 0.362919, 0.939345, 4.44994 ) }
    soma_0 { pt3dadd( 14.5879, 0.456128, 1.05253, 2.56587 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -12.1281, -3.87264, -1.27135, 2.58 ) }
    dend_40 { pt3dadd( -12.1281, -3.87264, -1.27135, 2.58 ) }
    dend_40 { pt3dadd( -13.5426, -4.7569, -1.47831, 2.21 ) }
    dend_40 { pt3dadd( -13.6183, -4.79983, -1.49483, 2.21 ) }
    dend_40 { pt3dadd( -14.7969, -5.44864, -1.78455, 2.21 ) }
    dend_40 { pt3dadd( -15.7522, -5.94356, -2.01904, 2.14 ) }
    dend_40 { pt3dadd( -15.8197, -5.97747, -2.03581, 2.14 ) }
    dend_40 { pt3dadd( -16.8479, -6.45965, -2.34078, 1.92 ) }
    dend_40 { pt3dadd( -18.2071, -7.07085, -2.77025, 1.92 ) }
    dend_40 { pt3dadd( -18.2731, -7.10294, -2.79457, 1.92 ) }
    dend_40 { pt3dadd( -19.4554, -7.73714, -3.31558, 1.92 ) }
    dend_40 { pt3dadd( -19.5082, -7.76772, -3.34162, 1.92 ) }
    dend_40 { pt3dadd( -20.8227, -8.61065, -3.99646, 1.92 ) }
    dend_40 { pt3dadd( -22.3619, -9.64839, -4.7828, 2.14 ) }
    dend_40 { pt3dadd( -23.7899, -10.645, -5.53582, 2.14 ) }
    dend_40 { pt3dadd( -25.4042, -11.8001, -6.41773, 2.14 ) }
    dend_40 { pt3dadd( -26.7195, -12.7925, -7.1838, 2.87 ) }
    dend_40 { pt3dadd( -28.1305, -13.8812, -8.01004, 2.87 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 39/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -12.6281, 1.81836, -0.451354, 2.73 ) }
    dend_21 { pt3dadd( -12.6281, 1.81836, -0.451354, 2.73 ) }
    dend_21 { pt3dadd( -13.3821, 2.04803, -0.451354, 2.65 ) }
    dend_21 { pt3dadd( -13.9259, 2.21368, -0.451354, 2.95 ) }
    dend_21 { pt3dadd( -14.5791, 2.41266, -0.451354, 3.24 ) }
    dend_21 { pt3dadd( -15.4024, 2.66343, -0.451354, 3.46 ) }
    dend_21 { pt3dadd( -15.8407, 2.79696, -0.451354, 3.24 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 46/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 14.6219, 1.08336, -0.521354, 3.68 ) }
    dend_0 { pt3dadd( 14.6219, 1.08336, -0.521354, 3.68 ) }
    dend_0 { pt3dadd( 18.1288, 0.659103, 1.22009, 3.68 ) }
    dend_0 { pt3dadd( 20.8783, 0.326462, 2.58547, 3.17 ) }
    dend_0 { pt3dadd( 23.328, 0.0300988, 3.80194, 3.17 ) }
    dend_0 { pt3dadd( 25.5493, -0.238637, 4.90501, 3.02 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 52/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 14.5879, 0.456128, 1.05253, 0.535241 ) }
    axon_0 { pt3dadd( 29.5552, 1.44638, 1.05253, 0.535241 ) }
    axon_0 { pt3dadd( 44.5225, 2.43664, 1.05253, 0.535241 ) }
    // Section: dend_50, id: dend_50, parent: dend_40 (entry count 55/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -28.1305, -13.8812, -8.01004, 1.92 ) }
    dend_50 { pt3dadd( -28.1879, -15.8092, -8.44978, 1.92 ) }
    dend_50 { pt3dadd( -28.2527, -17.9579, -8.86448, 0.74 ) }
    dend_50 { pt3dadd( -28.2555, -18.0498, -8.88061, 0.74 ) }
    dend_50 { pt3dadd( -28.2901, -19.5801, -9.23392, 0.52 ) }
    dend_50 { pt3dadd( -28.3021, -20.7093, -9.50805, 1.11 ) }
    dend_50 { pt3dadd( -28.3036, -20.813, -9.53257, 1.11 ) }
    dend_50 { pt3dadd( -28.3444, -22.1433, -9.80722, 1.11 ) }
    dend_50 { pt3dadd( -28.348, -22.235, -9.82392, 1.11 ) }
    dend_50 { pt3dadd( -28.5584, -24.562, -10.2219, 0.59 ) }
    dend_50 { pt3dadd( -28.8483, -26.4633, -10.5268, 0.59 ) }
    dend_50 { pt3dadd( -29.1513, -27.8076, -10.7173, 1.4 ) }
    dend_50 { pt3dadd( -29.4915, -29.1807, -10.8754, 0.74 ) }
    dend_50 { pt3dadd( -29.514, -29.2711, -10.8771, 0.74 ) }
    dend_50 { pt3dadd( -30.0333, -31.3463, -10.7341, 0.74 ) }
    dend_50 { pt3dadd( -30.2974, -32.5452, -10.513, 1.18 ) }
    dend_50 { pt3dadd( -30.4881, -33.6074, -10.2603, 1.62 ) }
    dend_50 { pt3dadd( -30.6465, -35.3531, -9.75614, 1.47 ) }
    dend_50 { pt3dadd( -30.6726, -37.8117, -8.9487, 0.88 ) }
    dend_50 { pt3dadd( -30.6674, -37.9116, -8.91314, 0.88 ) }
    dend_50 { pt3dadd( -30.3917, -39.5103, -8.25368, 0.74 ) }
    dend_50 { pt3dadd( -30.3431, -39.7044, -8.16599, 0.74 ) }
    dend_50 { pt3dadd( -29.8446, -41.3433, -7.37394, 0.74 ) }
    dend_50 { pt3dadd( -29.7991, -41.5188, -7.28684, 0.74 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 79/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -28.1305, -13.8812, -8.01004, 1.69 ) }
    dend_41 { pt3dadd( -29.7364, -14.5277, -8.82692, 1.69 ) }
    dend_41 { pt3dadd( -31.026, -15.0758, -9.39566, 1.4 ) }
    dend_41 { pt3dadd( -32.9033, -15.8923, -10.1588, 1.4 ) }
    dend_41 { pt3dadd( -34.3567, -16.5244, -10.7495, 1.77 ) }
    dend_41 { pt3dadd( -34.4241, -16.5537, -10.7769, 1.77 ) }
    dend_41 { pt3dadd( -36.0223, -17.2488, -11.4265, 2.06 ) }
    dend_41 { pt3dadd( -36.8112, -17.607, -11.6644, 2.06 ) }
    dend_41 { pt3dadd( -36.9235, -17.66, -11.6947, 2.06 ) }
    // Section: dend_31, id: dend_31, parent: dend_21 (entry count 88/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -15.8407, 2.79696, -0.451354, 1.47 ) }
    dend_31 { pt3dadd( -16.407, 4.02762, -0.398487, 1.47 ) }
    dend_31 { pt3dadd( -16.7877, 4.85358, -0.305045, 0.81 ) }
    dend_31 { pt3dadd( -17.1514, 5.63371, -0.159304, 0.81 ) }
    dend_31 { pt3dadd( -17.6394, 6.65047, 0.123919, 0.81 ) }
    dend_31 { pt3dadd( -18.2209, 7.85636, 0.505025, 0.81 ) }
    dend_31 { pt3dadd( -18.6816, 8.84316, 0.822128, 0.81 ) }
    dend_31 { pt3dadd( -19.2693, 10.0671, 1.26623, 0.81 ) }
    dend_31 { pt3dadd( -19.7372, 11.0631, 1.66881, 0.81 ) }
    dend_31 { pt3dadd( -20.254, 12.2086, 2.18039, 1.18 ) }
    dend_31 { pt3dadd( -20.5519, 12.8667, 2.50886, 1.55 ) }
    dend_31 { pt3dadd( -20.9575, 13.719, 3.04224, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 0/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -15.8407, 2.79696, -0.451354, 2.06 ) }
    dend_22 { pt3dadd( -18.4389, 3.39656, -0.957067, 2.06 ) }
    dend_22 { pt3dadd( -20.5116, 3.8749, -1.36051, 1.84 ) }
    dend_22 { pt3dadd( -22.5364, 4.3422, -1.75464, 1.84 ) }
    dend_22 { pt3dadd( -24.381, 4.76789, -2.11368, 1.84 ) }
    dend_22 { pt3dadd( -25.664, 5.06399, -2.36341, 1.84 ) }
    dend_22 { pt3dadd( -27.595, 5.50963, -2.73927, 1.25 ) }
    // Section: dend_9, id: dend_9, parent: dend_0 (entry count 7/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 25.5493, -0.238637, 4.90501, 2.58 ) }
    dend_9 { pt3dadd( 27.4088, 1.17387, -0.051758, 2.58 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 9/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 25.5493, -0.238637, 4.90501, 3.02 ) }
    dend_1 { pt3dadd( 29.7476, -4.36531, 8.65189, 3.02 ) }
    dend_1 { pt3dadd( 30.9432, -5.11134, 10.132, 1.69 ) }
    dend_1 { pt3dadd( 32.3048, -5.81337, 11.6431, 1.4 ) }
    dend_1 { pt3dadd( 32.3599, -5.84178, 11.7042, 1.4 ) }
    dend_1 { pt3dadd( 33.5169, -6.43831, 12.9882, 1.4 ) }
    dend_1 { pt3dadd( 35.7117, -7.56996, 15.424, 1.18 ) }
    dend_1 { pt3dadd( 37.3261, -8.23262, 17.6106, 1.03 ) }
    dend_1 { pt3dadd( 38.1971, -8.48396, 18.6843, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 18/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 44.5225, 2.43664, 1.05253, 0.15 ) }
    axon_1 { pt3dadd( 59.4897, 3.42689, 1.05253, 0.15 ) }
    axon_1 { pt3dadd( 74.457, 4.41715, 1.05253, 0.15 ) }
    // Section: dend_58, id: dend_58, parent: dend_50 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -29.7991, -41.5188, -7.28684, 0.74 ) }
    dend_58 { pt3dadd( -30.5414, -42.7633, -4.92467, 0.74 ) }
    dend_58 { pt3dadd( -30.7027, -43.0415, -4.43926, 0.74 ) }
    dend_58 { pt3dadd( -31.1424, -43.9172, -3.05597, 0.22 ) }
    dend_58 { pt3dadd( -31.2719, -44.2301, -2.58929, 0.66 ) }
    dend_58 { pt3dadd( -31.5628, -45.0312, -1.43024, 0.66 ) }
    dend_58 { pt3dadd( -31.8341, -45.9969, -0.129702, 0.52 ) }
    dend_58 { pt3dadd( -31.9061, -46.5383, 0.477711, 0.88 ) }
    dend_58 { pt3dadd( -31.8925, -47.0028, 1.02767, 0.88 ) }
    dend_58 { pt3dadd( -31.7576, -47.8624, 1.95563, 0.59 ) }
    dend_58 { pt3dadd( -31.7437, -47.9311, 2.02139, 0.59 ) }
    dend_58 { pt3dadd( -31.5767, -48.7598, 2.71299, 0.59 ) }
    dend_58 { pt3dadd( -31.3288, -50.3559, 3.86378, 0.37 ) }
    dend_58 { pt3dadd( -31.019, -53.1433, 5.76676, 0.66 ) }
    dend_58 { pt3dadd( -30.9366, -54.1779, 6.41161, 0.96 ) }
    dend_58 { pt3dadd( -30.8302, -55.451, 7.08779, 0.88 ) }
    dend_58 { pt3dadd( -30.7118, -56.6494, 7.62368, 0.88 ) }
    dend_58 { pt3dadd( -30.5541, -58.1203, 8.14143, 1.18 ) }
    dend_58 { pt3dadd( -30.5382, -58.2155, 8.15863, 1.18 ) }
    dend_58 { pt3dadd( -30.2847, -59.1991, 8.28536, 1.77 ) }
    dend_58 { pt3dadd( -29.834, -60.6418, 8.54718, 1.69 ) }
    dend_58 { pt3dadd( -29.3578, -61.9519, 8.83361, 1.69 ) }
    dend_58 { pt3dadd( -29.2396, -62.243, 8.90302, 1.69 ) }
    dend_58 { pt3dadd( -28.3751, -64.3338, 9.42308, 1.69 ) }
    dend_58 { pt3dadd( -27.5172, -66.4695, 9.96111, 0.52 ) }
    dend_58 { pt3dadd( -27.0926, -67.601, 10.2589, 0.52 ) }
    dend_58 { pt3dadd( -27.025, -67.7924, 10.3094, 0.52 ) }
    dend_58 { pt3dadd( -26.4572, -69.3761, 10.709, 0.52 ) }
    dend_58 { pt3dadd( -26.3782, -69.5882, 10.7547, 0.52 ) }
    dend_58 { pt3dadd( -25.9673, -70.6245, 11.0897, 1.18 ) }
    dend_58 { pt3dadd( -25.9334, -70.7104, 11.1205, 1.18 ) }
    dend_58 { pt3dadd( -25.3648, -72.1019, 11.7599, 1.47 ) }
    dend_58 { pt3dadd( -25.259, -72.4137, 11.9268, 1.47 ) }
    dend_58 { pt3dadd( -24.9834, -73.2802, 12.4531, 1.47 ) }
    dend_58 { pt3dadd( -24.1446, -76.0108, 14.226, 0.52 ) }
    dend_58 { pt3dadd( -23.8809, -76.9651, 14.9063, 0.52 ) }
    dend_58 { pt3dadd( -23.8583, -77.0509, 14.9718, 0.52 ) }
    dend_58 { pt3dadd( -23.5032, -78.6543, 16.3895, 0.52 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 59/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -29.7991, -41.5188, -7.28684, 0.15 ) }
    dend_51 { pt3dadd( -28.7557, -41.6526, -6.43797, 0.15 ) }
    dend_51 { pt3dadd( -28.706, -41.659, -6.39751, 0.15 ) }
    dend_51 { pt3dadd( -28.2274, -41.7203, -6.00813, 0.15 ) }
    dend_51 { pt3dadd( -27.2157, -41.8501, -5.18503, 0.15 ) }
    dend_51 { pt3dadd( -26.7926, -41.9044, -4.84084, 0.15 ) }
    dend_51 { pt3dadd( -26.7429, -41.9107, -4.80037, 0.15 ) }
    dend_51 { pt3dadd( -18.8734, -41.8088, -0.0482643, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_41 (entry count 67/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -36.9235, -17.66, -11.6947, 1.18 ) }
    dend_49 { pt3dadd( -37.8912, -17.5016, -12.824, 1.18 ) }
    dend_49 { pt3dadd( -39.8417, -17.1288, -14.9917, 0.59 ) }
    dend_49 { pt3dadd( -40.399, -16.9863, -15.6075, 0.59 ) }
    dend_49 { pt3dadd( -41.9602, -16.509, -17.2852, 0.59 ) }
    dend_49 { pt3dadd( -42.6471, -16.2634, -17.9629, 0.81 ) }
    dend_49 { pt3dadd( -43.55, -15.8986, -18.9721, 0.81 ) }
    dend_49 { pt3dadd( -43.7268, -15.827, -19.1895, 0.81 ) }
    dend_49 { pt3dadd( -44.7699, -15.3737, -20.7865, 0.74 ) }
    dend_49 { pt3dadd( -44.9978, -15.2685, -21.2051, 0.74 ) }
    dend_49 { pt3dadd( -45.5166, -15.0854, -22.3411, 0.74 ) }
    dend_49 { pt3dadd( -47.0902, -14.8661, -26.3352, 0.59 ) }
    dend_49 { pt3dadd( -47.4379, -14.8872, -27.3088, 0.59 ) }
    dend_49 { pt3dadd( -48.0247, -14.9969, -28.8747, 0.59 ) }
    dend_49 { pt3dadd( -48.0584, -15.0065, -28.9609, 0.59 ) }
    dend_49 { pt3dadd( -48.4295, -15.1454, -29.8695, 0.44 ) }
    dend_49 { pt3dadd( -48.8091, -15.2615, -30.7298, 0.44 ) }
    dend_49 { pt3dadd( -49.8127, -15.3905, -32.5425, 1.18 ) }
    dend_49 { pt3dadd( -50.158, -15.397, -33.1405, 1.18 ) }
    dend_49 { pt3dadd( -51.6857, -15.4161, -35.7655, 0.52 ) }
    dend_49 { pt3dadd( -52.142, -15.4504, -36.592, 0.52 ) }
    dend_49 { pt3dadd( -53.2926, -15.6642, -38.8546, 0.52 ) }
    dend_49 { pt3dadd( -53.992, -15.9832, -40.3304, 0.52 ) }
    dend_49 { pt3dadd( -54.0268, -16.0042, -40.4015, 0.52 ) }
    dend_49 { pt3dadd( -54.4929, -16.2249, -41.2074, 0.96 ) }
    dend_49 { pt3dadd( -55.0617, -16.4578, -42.0335, 0.66 ) }
    dend_49 { pt3dadd( -55.7529, -16.6826, -43.0571, 0.37 ) }
    dend_49 { pt3dadd( -56.8223, -16.9495, -44.6628, 1.18 ) }
    dend_49 { pt3dadd( -58.2208, -17.2091, -46.8848, 0.88 ) }
    dend_49 { pt3dadd( -59.827, -17.4, -49.819, 0.29 ) }
    dend_49 { pt3dadd( -59.9146, -17.4074, -49.9899, 0.96 ) }
    dend_49 { pt3dadd( -61.5221, -17.5113, -53.3489, 1.33 ) }
    dend_49 { pt3dadd( -63.4326, -17.6741, -57.7668, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_49 { pt3dadd( -64.403, -17.8041, -60.3638, 1.33 ) }
    dend_49 { pt3dadd( -66.1615, -18.235, -65.7634, 0.37 ) }
    dend_49 { pt3dadd( -66.3501, -18.3009, -66.4432, 0.74 ) }
    dend_49 { pt3dadd( -66.8326, -18.4463, -68.3197, 0.74 ) }
    dend_49 { pt3dadd( -67.541, -18.6545, -71.1585, 1.47 ) }
    dend_49 { pt3dadd( -69.032, -19.143, -77.5857, 0.44 ) }
    dend_49 { pt3dadd( -69.2178, -19.1821, -78.3911, 1.33 ) }
    dend_49 { pt3dadd( -69.4168, -19.2047, -79.2296, 1.33 ) }
    dend_49 { pt3dadd( -71.0833, -19.3435, -85.5999, 1.11 ) }
    dend_49 { pt3dadd( -71.4669, -19.3745, -86.9166, 0.96 ) }
    dend_49 { pt3dadd( -72.3326, -19.4102, -89.5631, 1.25 ) }
    dend_49 { pt3dadd( -74.3207, -19.4984, -94.8979, 0.59 ) }
    dend_49 { pt3dadd( -74.3571, -19.4994, -94.9834, 0.59 ) }
    dend_49 { pt3dadd( -75.4034, -19.5808, -97.1264, 0.59 ) }
    dend_49 { pt3dadd( -76.439, -19.7248, -99.0262, 1.33 ) }
    dend_49 { pt3dadd( -77.1402, -19.7799, -100.43, 0.29 ) }
    dend_49 { pt3dadd( -77.5493, -19.7969, -101.28, 0.29 ) }
    dend_49 { pt3dadd( -78.707, -19.8738, -103.739, 0.66 ) }
    dend_49 { pt3dadd( -79.1715, -19.9281, -104.783, 0.66 ) }
    dend_49 { pt3dadd( -81.271, -20.2462, -109.925, 0.81 ) }
    dend_49 { pt3dadd( -83.4109, -20.7739, -115.323, 1.18 ) }
    dend_49 { pt3dadd( -84.3566, -21.1029, -117.824, 0.52 ) }
    dend_49 { pt3dadd( -84.6467, -21.2244, -118.62, 0.44 ) }
    dend_49 { pt3dadd( -85.3503, -21.5352, -120.574, 0.44 ) }
    dend_49 { pt3dadd( -86.2348, -21.8219, -123.13, 1.11 ) }
    dend_49 { pt3dadd( -86.5038, -21.8972, -123.893, 1.11 ) }
    dend_49 { pt3dadd( -87.424, -22.0617, -126.504, 0.37 ) }
    dend_49 { pt3dadd( -87.6434, -22.0817, -127.153, 0.37 ) }
    dend_49 { pt3dadd( -88.877, -22.1691, -130.84, 0.37 ) }
    dend_49 { pt3dadd( -90.8262, -22.2326, -136.755, 0.37 ) }
    dend_49 { pt3dadd( -90.8615, -22.234, -136.856, 0.37 ) }
    dend_49 { pt3dadd( -91.6441, -22.2685, -139.006, 0.66 ) }
    dend_49 { pt3dadd( -93.4166, -22.4373, -143.651, 0.37 ) }
    dend_49 { pt3dadd( -93.9921, -22.5313, -145.102, 0.96 ) }
    dend_49 { pt3dadd( -94.0293, -22.5428, -145.187, 0.96 ) }
    dend_49 { pt3dadd( -97.1375, -23.7916, -151.447, 0.29 ) }
    dend_49 { pt3dadd( -98.2818, -24.2855, -153.65, 0.96 ) }
    dend_49 { pt3dadd( -98.5544, -24.4184, -154.161, 0.96 ) }
    dend_49 { pt3dadd( -98.7779, -24.5572, -154.601, 0.29 ) }
    dend_49 { pt3dadd( -99.5423, -25.1184, -156.318, 0.29 ) }
    dend_49 { pt3dadd( -99.6955, -25.2904, -156.673, 0.74 ) }
    dend_49 { pt3dadd( -99.8586, -25.62, -157.087, 0.74 ) }
    dend_49 { pt3dadd( -100.614, -27.1005, -159.032, 0.37 ) }
    dend_49 { pt3dadd( -101.118, -28.0904, -160.441, 1.03 ) }
    dend_49 { pt3dadd( -101.591, -28.9602, -161.922, 0.15 ) }
    dend_49 { pt3dadd( -102.275, -30.0878, -164.259, 0.15 ) }
    dend_49 { pt3dadd( -102.297, -30.1286, -164.341, 0.15 ) }
    dend_49 { pt3dadd( -102.858, -31.2255, -166.445, 1.4 ) }
    dend_49 { pt3dadd( -103.106, -31.7511, -167.369, 1.77 ) }
    dend_49 { pt3dadd( -103.631, -33.2987, -169.849, 0.15 ) }
    dend_49 { pt3dadd( -103.833, -33.9297, -171.372, 0.22 ) }
    dend_49 { pt3dadd( -104.006, -34.5426, -173.425, 0.22 ) }
    dend_49 { pt3dadd( -104.026, -34.6054, -173.654, 1.03 ) }
    dend_49 { pt3dadd( -104.034, -34.6274, -173.745, 1.03 ) }
    dend_49 { pt3dadd( -104.239, -34.9454, -175.275, 1.03 ) }
    dend_49 { pt3dadd( -105.217, -36.1898, -182.209, 0.22 ) }
    dend_49 { pt3dadd( -105.355, -36.3066, -183.124, 0.22 ) }
    dend_49 { pt3dadd( -105.47, -36.3466, -183.795, 0.22 ) }
    dend_49 { pt3dadd( -105.492, -36.3522, -183.917, 0.22 ) }
    dend_49 { pt3dadd( -106.147, -36.4491, -186.898, 0.22 ) }
    dend_49 { pt3dadd( -109.707, -37.0229, -197.946, 0.22 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 61/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -36.9235, -17.66, -11.6947, 1.92 ) }
    dend_42 { pt3dadd( -38.2909, -18.6447, -12.0152, 1.92 ) }
    dend_42 { pt3dadd( -39.4802, -19.4738, -12.2769, 1.69 ) }
    dend_42 { pt3dadd( -40.3687, -20.082, -12.4725, 1.4 ) }
    dend_42 { pt3dadd( -41.5478, -20.881, -12.7365, 1.4 ) }
    dend_42 { pt3dadd( -41.6128, -20.9245, -12.7438, 1.4 ) }
    dend_42 { pt3dadd( -42.6079, -21.5421, -12.7599, 1.4 ) }
    dend_42 { pt3dadd( -43.1414, -21.8316, -12.673, 1.11 ) }
    dend_42 { pt3dadd( -44.0853, -22.2119, -12.4677, 1.11 ) }
    dend_42 { pt3dadd( -44.1476, -22.2295, -12.452, 1.11 ) }
    dend_42 { pt3dadd( -46.3828, -22.7107, -11.8846, 1.11 ) }
    dend_42 { pt3dadd( -47.4894, -22.9367, -11.6389, 1.11 ) }
    dend_42 { pt3dadd( -47.5643, -22.9499, -11.6238, 1.11 ) }
    dend_42 { pt3dadd( -49.3435, -23.3289, -11.3451, 1.33 ) }
    dend_42 { pt3dadd( -50.3299, -23.567, -11.2627, 0.96 ) }
    dend_42 { pt3dadd( -50.8279, -23.7473, -11.2846, 0.96 ) }
    dend_42 { pt3dadd( -51.4059, -24.0297, -11.4144, 0.96 ) }
    dend_42 { pt3dadd( -51.4692, -24.0732, -11.4312, 0.96 ) }
    dend_42 { pt3dadd( -52.0913, -24.5865, -11.6003, 0.96 ) }
    dend_42 { pt3dadd( -52.1538, -24.65, -11.6174, 0.96 ) }
    dend_42 { pt3dadd( -53.078, -25.5742, -11.942, 0.96 ) }
    dend_42 { pt3dadd( -53.1268, -25.6183, -11.9587, 0.96 ) }
    dend_42 { pt3dadd( -54.2052, -26.5264, -12.3125, 1.18 ) }
    dend_42 { pt3dadd( -54.9823, -27.1164, -12.5355, 1.18 ) }
    dend_42 { pt3dadd( -55.0544, -27.1668, -12.5545, 1.18 ) }
    dend_42 { pt3dadd( -55.8764, -27.7259, -12.7556, 1.18 ) }
    dend_42 { pt3dadd( -56.6756, -28.2392, -12.9322, 1.18 ) }
    dend_42 { pt3dadd( -56.768, -28.2988, -12.9483, 1.18 ) }
    dend_42 { pt3dadd( -58.4019, -29.3874, -12.9764, 1.18 ) }
    dend_42 { pt3dadd( -58.467, -29.4312, -12.9713, 1.18 ) }
    dend_42 { pt3dadd( -59.1862, -29.9504, -12.8635, 1.18 ) }
    dend_42 { pt3dadd( -59.5108, -30.1998, -12.79, 1.18 ) }
    dend_42 { pt3dadd( -60.6069, -31.0586, -12.5144, 1.18 ) }
    dend_42 { pt3dadd( -62.1711, -32.2668, -12.1207, 1.18 ) }
    dend_42 { pt3dadd( -62.2408, -32.3204, -12.1023, 1.18 ) }
    dend_42 { pt3dadd( -63.3025, -33.1237, -11.8601, 1.18 ) }
    dend_42 { pt3dadd( -63.3647, -33.1702, -11.8475, 1.18 ) }
    dend_42 { pt3dadd( -64.4323, -33.9522, -11.7014, 0.96 ) }
    dend_42 { pt3dadd( -65.3754, -34.6105, -11.645, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -65.515, -34.7045, -11.6473, 0.96 ) }
    dend_42 { pt3dadd( -66.8781, -35.6071, -11.6686, 0.96 ) }
    dend_42 { pt3dadd( -66.9718, -35.6665, -11.6698, 0.96 ) }
    dend_42 { pt3dadd( -68.5202, -36.6819, -11.693, 0.96 ) }
    dend_42 { pt3dadd( -69.5524, -37.405, -11.7132, 1.47 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 5/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -20.9575, 13.719, 3.04224, 1.11 ) }
    dend_35 { pt3dadd( -20.6811, 14.5374, 3.54601, 1.11 ) }
    dend_35 { pt3dadd( -20.4293, 15.3822, 4.08127, 0.74 ) }
    dend_35 { pt3dadd( -20.1352, 16.5191, 4.92843, 0.74 ) }
    dend_35 { pt3dadd( -19.9022, 17.4102, 5.61408, 0.74 ) }
    dend_35 { pt3dadd( -19.6161, 18.3628, 6.36142, 1.11 ) }
    dend_35 { pt3dadd( -19.0954, 19.8426, 7.48915, 0.74 ) }
    dend_35 { pt3dadd( -18.8643, 20.5019, 7.99786, 0.74 ) }
    dend_35 { pt3dadd( -18.3023, 21.8542, 9.00604, 0.44 ) }
    dend_35 { pt3dadd( -17.9159, 22.5096, 9.43616, 0.44 ) }
    dend_35 { pt3dadd( -17.4728, 23.0173, 9.69584, 0.81 ) }
    dend_35 { pt3dadd( -16.7777, 23.6573, 9.89213, 1.03 ) }
    dend_35 { pt3dadd( -16.4873, 23.9195, 9.98382, 1.03 ) }
    dend_35 { pt3dadd( -15.7894, 24.6203, 10.4365, 0.81 ) }
    dend_35 { pt3dadd( -15.3883, 25.1216, 10.9525, 0.59 ) }
    dend_35 { pt3dadd( -15.0408, 25.7507, 11.8056, 0.44 ) }
    dend_35 { pt3dadd( -14.7326, 26.5015, 12.8952, 0.44 ) }
    dend_35 { pt3dadd( -14.2166, 28.1681, 15.3515, 0.88 ) }
    dend_35 { pt3dadd( -14.009, 28.9919, 16.5031, 0.88 ) }
    dend_35 { pt3dadd( -13.8205, 29.8954, 17.731, 0.88 ) }
    dend_35 { pt3dadd( -13.6007, 30.7963, 18.8538, 0.37 ) }
    dend_35 { pt3dadd( -13.4909, 31.1351, 19.2162, 0.96 ) }
    dend_35 { pt3dadd( -13.2462, 31.7306, 19.7002, 1.25 ) }
    dend_35 { pt3dadd( -12.7432, 32.7475, 20.3166, 1.62 ) }
    dend_35 { pt3dadd( -12.5289, 33.1557, 20.5528, 1.62 ) }
    dend_35 { pt3dadd( -11.6363, 34.8186, 21.531, 1.18 ) }
    dend_35 { pt3dadd( -10.935, 36.0531, 22.3584, 0.74 ) }
    dend_35 { pt3dadd( -10.6253, 36.5888, 22.7567, 1.03 ) }
    dend_35 { pt3dadd( -9.81493, 37.9356, 23.8408, 1.03 ) }
    dend_35 { pt3dadd( -9.35347, 38.6871, 24.509, 1.03 ) }
    dend_35 { pt3dadd( -8.89888, 39.4345, 25.1888, 1.11 ) }
    dend_35 { pt3dadd( -8.35842, 40.3339, 25.9994, 1.11 ) }
    dend_35 { pt3dadd( -7.92162, 41.0448, 26.6439, 1.47 ) }
    dend_35 { pt3dadd( -7.5149, 41.6785, 27.1642, 1.47 ) }
    dend_35 { pt3dadd( -6.75928, 42.8768, 28.0772, 1.77 ) }
    dend_35 { pt3dadd( -6.52564, 43.2421, 28.3385, 1.69 ) }
    dend_35 { pt3dadd( -6.11147, 43.8916, 28.7626, 1.33 ) }
    dend_35 { pt3dadd( -5.00912, 45.6296, 29.8802, 1.03 ) }
    dend_35 { pt3dadd( -4.10076, 47.0312, 30.772, 1.03 ) }
    dend_35 { pt3dadd( -3.44576, 48.048, 31.4253, 1.33 ) }
    dend_35 { pt3dadd( -2.85329, 48.9832, 32.0067, 1.33 ) }
    dend_35 { pt3dadd( -2.09627, 50.1851, 32.7518, 1.33 ) }
    dend_35 { pt3dadd( -1.11829, 51.6537, 33.664, 1.03 ) }
    dend_35 { pt3dadd( -0.375294, 52.6362, 34.2592, 1.03 ) }
    dend_35 { pt3dadd( 0.52038, 53.6776, 34.9424, 0.74 ) }
    dend_35 { pt3dadd( 0.984281, 54.1472, 35.2489, 0.44 ) }
    dend_35 { pt3dadd( 1.46, 54.6129, 35.5272, 0.44 ) }
    dend_35 { pt3dadd( 2.24026, 55.2883, 35.8133, 0.44 ) }
    dend_35 { pt3dadd( 3.10935, 55.9114, 35.8478, 0.44 ) }
    dend_35 { pt3dadd( 3.64587, 56.2626, 35.8033, 0.44 ) }
    dend_35 { pt3dadd( 4.11661, 56.5462, 35.7209, 1.03 ) }
    dend_35 { pt3dadd( 5.53582, 57.3855, 35.4406, 1.03 ) }
    dend_35 { pt3dadd( 6.52431, 58.0471, 35.2134, 1.33 ) }
    dend_35 { pt3dadd( 7.62826, 59.0149, 34.9142, 1.33 ) }
    dend_35 { pt3dadd( 8.21176, 59.6199, 34.7406, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 60/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -20.9575, 13.719, 3.04224, 0.81 ) }
    dend_32 { pt3dadd( -21.5727, 14.61, 2.92942, 0.81 ) }
    dend_32 { pt3dadd( -22.1418, 15.4088, 2.83073, 0.66 ) }
    dend_32 { pt3dadd( -22.8808, 16.5039, 2.61961, 0.66 ) }
    dend_32 { pt3dadd( -23.3357, 17.2413, 2.45322, 0.66 ) }
    dend_32 { pt3dadd( -23.8236, 18.0974, 2.24601, 0.66 ) }
    dend_32 { pt3dadd( -24.2238, 18.8727, 2.05145, 0.44 ) }
    dend_32 { pt3dadd( -24.6393, 19.885, 1.77227, 0.44 ) }
    dend_32 { pt3dadd( -25.1038, 21.2716, 1.3696, 0.52 ) }
    dend_32 { pt3dadd( -25.3243, 22.1846, 1.0937, 0.52 ) }
    dend_32 { pt3dadd( -25.3878, 22.5574, 0.963966, 0.81 ) }
    dend_32 { pt3dadd( -25.5045, 23.3243, 0.680095, 0.81 ) }
    dend_32 { pt3dadd( -25.6022, 23.9901, 0.41269, 1.18 ) }
    dend_32 { pt3dadd( -25.7214, 24.5837, 0.172703, 0.59 ) }
    dend_32 { pt3dadd( -25.9479, 25.3892, -0.135987, 0.59 ) }
    dend_32 { pt3dadd( -26.2351, 26.2659, -0.400684, 0.59 ) }
    dend_32 { pt3dadd( -26.8865, 28.0393, -0.93491, 0.59 ) }
    dend_32 { pt3dadd( -27.2574, 28.9362, -1.20255, 0.88 ) }
    dend_32 { pt3dadd( -27.8465, 30.2422, -1.5784, 0.88 ) }
    dend_32 { pt3dadd( -28.1468, 30.8974, -1.75158, 1.25 ) }
    dend_32 { pt3dadd( -28.9533, 32.5503, -2.09009, 1.03 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 81/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -27.595, 5.50963, -2.73927, 0.88 ) }
    dend_26 { pt3dadd( -31.5313, 7.78921, 2.49003, 0.88 ) }
    dend_26 { pt3dadd( -32.5854, 8.31902, 3.77029, 1.11 ) }
    dend_26 { pt3dadd( -34.3305, 9.03919, 5.67796, 1.11 ) }
    dend_26 { pt3dadd( -34.9634, 9.23634, 6.28168, 1.47 ) }
    dend_26 { pt3dadd( -35.7095, 9.39809, 6.96581, 1.47 ) }
    dend_26 { pt3dadd( -36.8645, 9.54711, 8.03614, 0.88 ) }
    dend_26 { pt3dadd( -38.7062, 9.41958, 9.33609, 0.88 ) }
    dend_26 { pt3dadd( -39.7117, 9.17206, 10.1278, 0.88 ) }
    dend_26 { pt3dadd( -41.0762, 8.65934, 11.2107, 1.25 ) }
    dend_26 { pt3dadd( -42.4092, 8.0987, 12.3437, 1.25 ) }
    dend_26 { pt3dadd( -43.7178, 7.54299, 13.4424, 1.11 ) }
    dend_26 { pt3dadd( -44.6056, 7.19309, 14.1033, 1.11 ) }
    dend_26 { pt3dadd( -45.9456, 6.66599, 15.0531, 0.96 ) }
    dend_26 { pt3dadd( -46.8058, 6.36041, 15.6816, 0.96 ) }
    dend_26 { pt3dadd( -48.051, 6.00278, 16.5567, 0.96 ) }
    dend_26 { pt3dadd( -49.6157, 5.72654, 17.4182, 0.96 ) }
    dend_26 { pt3dadd( -51.4111, 5.5769, 18.2142, 1.84 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 99/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -27.595, 5.50963, -2.73927, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_23 { pt3dadd( -28.3749, 5.83, -3.1608, 0.88 ) }
    dend_23 { pt3dadd( -30.1933, 6.52388, -4.10423, 0.88 ) }
    dend_23 { pt3dadd( -31.8088, 7.12574, -4.92297, 0.88 ) }
    dend_23 { pt3dadd( -33.431, 7.71007, -5.68313, 0.88 ) }
    dend_23 { pt3dadd( -34.7184, 8.14577, -6.23701, 0.88 ) }
    dend_23 { pt3dadd( -35.4188, 8.36492, -6.50276, 0.88 ) }
    dend_23 { pt3dadd( -36.8708, 8.74549, -6.95192, 0.88 ) }
    dend_23 { pt3dadd( -37.7175, 8.92194, -7.13234, 0.88 ) }
    dend_23 { pt3dadd( -38.8086, 9.12265, -7.24019, 1.25 ) }
    dend_23 { pt3dadd( -39.9882, 9.32206, -7.25505, 1.25 ) }
    dend_23 { pt3dadd( -41.1977, 9.51887, -7.22692, 1.25 ) }
    dend_23 { pt3dadd( -42.6821, 9.75949, -7.15916, 1.25 ) }
    dend_23 { pt3dadd( -43.0735, 9.82652, -7.15085, 0.88 ) }
    dend_23 { pt3dadd( -44.2286, 10.0442, -7.1875, 0.74 ) }
    dend_23 { pt3dadd( -45.3818, 10.2884, -7.31091, 0.74 ) }
    dend_23 { pt3dadd( -46.3091, 10.5264, -7.46773, 1.03 ) }
    dend_23 { pt3dadd( -47.253, 10.8079, -7.69069, 1.25 ) }
    dend_23 { pt3dadd( -48.4731, 11.2537, -8.01302, 1.25 ) }
    dend_23 { pt3dadd( -49.1714, 11.5624, -8.22729, 0.96 ) }
    dend_23 { pt3dadd( -49.6779, 11.8463, -8.40896, 0.81 ) }
    dend_23 { pt3dadd( -50.3775, 12.3562, -8.69181, 0.81 ) }
    dend_23 { pt3dadd( -50.7332, 12.6876, -8.83126, 0.66 ) }
    dend_23 { pt3dadd( -51.4444, 13.4942, -9.13569, 0.66 ) }
    dend_23 { pt3dadd( -52.0231, 14.2412, -9.38787, 0.96 ) }
    dend_23 { pt3dadd( -52.5044, 14.94, -9.66591, 1.11 ) }
    dend_23 { pt3dadd( -53.0741, 15.8451, -10.3055, 1.4 ) }
    dend_23 { pt3dadd( -53.4132, 16.3485, -10.7864, 1.4 ) }
    dend_23 { pt3dadd( -54.0002, 17.0821, -11.6467, 1.18 ) }
    dend_23 { pt3dadd( -54.3407, 17.4252, -12.1427, 0.96 ) }
    dend_23 { pt3dadd( -55.09, 17.9823, -13.19, 0.88 ) }
    dend_23 { pt3dadd( -57.4134, 19.1021, -16.2954, 0.81 ) }
    dend_23 { pt3dadd( -58.0069, 19.2514, -17.0048, 0.81 ) }
    dend_23 { pt3dadd( -58.7905, 19.3129, -17.821, 1.33 ) }
    dend_23 { pt3dadd( -59.2349, 19.2942, -18.2148, 1.33 ) }
    dend_23 { pt3dadd( -60.4809, 19.1625, -19.1364, 0.96 ) }
    dend_23 { pt3dadd( -61.6673, 19.0127, -19.8388, 0.96 ) }
    dend_23 { pt3dadd( -62.8673, 18.8917, -20.3786, 0.81 ) }
    dend_23 { pt3dadd( -64.1644, 18.8611, -20.9466, 1.25 ) }
    dend_23 { pt3dadd( -65.2694, 18.9192, -21.4047, 1.25 ) }
    dend_23 { pt3dadd( -66.1339, 19.0526, -21.7499, 1.25 ) }
    dend_23 { pt3dadd( -67.3595, 19.4134, -22.2714, 1.03 ) }
    dend_23 { pt3dadd( -67.9251, 19.6428, -22.6101, 0.88 ) }
    dend_23 { pt3dadd( -68.558, 19.9126, -23.1201, 0.81 ) }
    dend_23 { pt3dadd( -68.8272, 20.0032, -23.3811, 0.81 ) }
    dend_23 { pt3dadd( -69.6164, 20.159, -24.2676, 0.74 ) }
    dend_23 { pt3dadd( -70.8644, 20.2678, -25.7795, 0.74 ) }
    dend_23 { pt3dadd( -72.0838, 20.2979, -27.2344, 0.59 ) }
    dend_23 { pt3dadd( -72.7235, 20.3157, -27.9689, 0.59 ) }
    dend_23 { pt3dadd( -73.4256, 20.3625, -28.7493, 0.59 ) }
    dend_23 { pt3dadd( -74.36, 20.4985, -29.6889, 0.52 ) }
    dend_23 { pt3dadd( -74.8105, 20.6049, -30.0601, 0.44 ) }
    dend_23 { pt3dadd( -75.5506, 20.8944, -30.5723, 0.44 ) }
    dend_23 { pt3dadd( -76.2982, 21.2824, -31.0222, 1.18 ) }
    dend_23 { pt3dadd( -77.2269, 21.7953, -31.6164, 1.18 ) }
    dend_23 { pt3dadd( -78.314, 22.3454, -32.3254, 1.18 ) }
    dend_23 { pt3dadd( -78.8655, 22.5445, -32.6742, 1.18 ) }
    dend_23 { pt3dadd( -79.854, 22.7248, -33.3838, 0.52 ) }
    dend_23 { pt3dadd( -80.5062, 22.711, -33.8803, 0.52 ) }
    dend_23 { pt3dadd( -81.5719, 22.5389, -34.8112, 0.52 ) }
    dend_23 { pt3dadd( -82.2201, 22.3718, -35.4017, 0.52 ) }
    dend_23 { pt3dadd( -82.8604, 22.2049, -36.1612, 0.52 ) }
    dend_23 { pt3dadd( -83.5253, 22.0873, -37.0958, 0.52 ) }
    dend_23 { pt3dadd( -84.0807, 22.1219, -38.0448, 0.52 ) }
    dend_23 { pt3dadd( -84.8664, 22.3928, -39.4771, 0.37 ) }
    dend_23 { pt3dadd( -85.1021, 22.5385, -39.8906, 0.37 ) }
    dend_23 { pt3dadd( -86.4027, 23.5456, -42.0069, 0.74 ) }
    dend_23 { pt3dadd( -86.8347, 23.9162, -42.612, 0.74 ) }
    dend_23 { pt3dadd( -88.0676, 24.947, -43.9847, 1.03 ) }
    dend_23 { pt3dadd( -88.7892, 25.467, -44.5875, 1.4 ) }
    dend_23 { pt3dadd( -89.4501, 25.8214, -44.9099, 1.4 ) }
    dend_23 { pt3dadd( -90.0394, 26.0761, -45.1197, 1.4 ) }
    dend_23 { pt3dadd( -91.1061, 26.4616, -45.3518, 0.44 ) }
    dend_23 { pt3dadd( -91.8049, 26.7049, -45.5043, 0.44 ) }
    dend_23 { pt3dadd( -93.0503, 27.1252, -45.7835, 0.44 ) }
    dend_23 { pt3dadd( -94.659, 27.6696, -46.2551, 0.44 ) }
    dend_23 { pt3dadd( -95.9704, 28.1373, -46.6711, 0.88 ) }
    dend_23 { pt3dadd( -96.5119, 28.3541, -46.8304, 0.88 ) }
    dend_23 { pt3dadd( -97.4142, 28.7538, -47.0663, 0.37 ) }
    dend_23 { pt3dadd( -98.3271, 29.1867, -47.2744, 0.37 ) }
    dend_23 { pt3dadd( -98.7832, 29.4091, -47.3849, 0.15 ) }
    dend_23 { pt3dadd( -99.7036, 29.8237, -47.5923, 0.15 ) }
    dend_23 { pt3dadd( -101.383, 30.4921, -47.9689, 0.15 ) }
    dend_23 { pt3dadd( -101.819, 30.6409, -48.0787, 0.66 ) }
    dend_23 { pt3dadd( -102.807, 30.9183, -48.3271, 0.66 ) }
    dend_23 { pt3dadd( -104.293, 31.2928, -48.7712, 0.66 ) }
    dend_23 { pt3dadd( -104.986, 31.4554, -49.0239, 0.96 ) }
    dend_23 { pt3dadd( -106.279, 31.7449, -49.6051, 0.37 ) }
    dend_23 { pt3dadd( -107.0, 31.9172, -49.9601, 0.37 ) }
    dend_23 { pt3dadd( -107.852, 32.1626, -50.3594, 0.37 ) }
    dend_23 { pt3dadd( -108.464, 32.3944, -50.6575, 0.37 ) }
    dend_23 { pt3dadd( -109.085, 32.6728, -50.9505, 0.37 ) }
    dend_23 { pt3dadd( -109.875, 33.0792, -51.381, 0.37 ) }
    dend_23 { pt3dadd( -110.555, 33.4756, -51.7682, 0.88 ) }
    dend_23 { pt3dadd( -111.157, 33.8487, -52.1563, 1.11 ) }
    dend_23 { pt3dadd( -112.222, 34.5059, -52.8535, 1.11 ) }
    dend_23 { pt3dadd( -112.927, 34.9042, -53.335, 0.66 ) }
    dend_23 { pt3dadd( -113.753, 35.3312, -53.9243, 0.44 ) }
    dend_23 { pt3dadd( -114.289, 35.5905, -54.3045, 0.44 ) }
    dend_23 { pt3dadd( -115.481, 36.1241, -55.1526, 0.44 ) }
    dend_23 { pt3dadd( -116.26, 36.4387, -55.7061, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_23 { pt3dadd( -117.591, 36.9039, -56.5569, 0.22 ) }
    dend_23 { pt3dadd( -117.957, 37.0204, -56.7816, 0.22 ) }
    dend_23 { pt3dadd( -118.895, 37.2998, -57.2893, 0.22 ) }
    dend_23 { pt3dadd( -120.164, 37.6515, -57.9003, 0.22 ) }
    dend_23 { pt3dadd( -121.49, 38.0042, -58.5023, 0.59 ) }
    dend_23 { pt3dadd( -122.555, 38.2825, -58.9668, 0.59 ) }
    dend_23 { pt3dadd( -123.371, 38.4921, -59.2666, 0.59 ) }
    dend_23 { pt3dadd( -124.61, 38.7979, -59.6986, 0.96 ) }
    dend_23 { pt3dadd( -125.67, 39.0196, -60.0024, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_9 (entry count 9/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 27.4088, 1.17387, -0.051758, 1.25 ) }
    dend_14 { pt3dadd( 29.5214, 3.28706, 2.98345, 1.25 ) }
    dend_14 { pt3dadd( 29.9493, 3.66809, 3.31231, 1.25 ) }
    dend_14 { pt3dadd( 30.0328, 3.74133, 3.36277, 1.25 ) }
    dend_14 { pt3dadd( 30.8532, 4.47657, 3.77786, 0.96 ) }
    dend_14 { pt3dadd( 32.0068, 5.52468, 4.30017, 0.96 ) }
    dend_14 { pt3dadd( 32.7772, 6.22463, 4.64898, 1.33 ) }
    dend_14 { pt3dadd( 33.8951, 7.1327, 4.77388, 1.69 ) }
    dend_14 { pt3dadd( 33.946, 7.17312, 4.77981, 1.69 ) }
    dend_14 { pt3dadd( 34.4064, 7.56543, 4.83134, 1.69 ) }
    dend_14 { pt3dadd( 34.4714, 7.63143, 4.8373, 1.69 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 20/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 27.4088, 1.17387, -0.051758, 1.18 ) }
    dend_10 { pt3dadd( 30.4714, 1.2093, 3.44157, 1.18 ) }
    dend_10 { pt3dadd( 32.1628, 1.41025, 4.83062, 1.03 ) }
    dend_10 { pt3dadd( 32.239, 1.42986, 4.87271, 1.03 ) }
    dend_10 { pt3dadd( 34.1444, 2.02538, 5.68257, 1.33 ) }
    dend_10 { pt3dadd( 35.5421, 2.54341, 6.13383, 1.33 ) }
    dend_10 { pt3dadd( 36.7069, 3.00914, 6.4433, 1.33 ) }
    dend_10 { pt3dadd( 36.7724, 3.04011, 6.4439, 1.33 ) }
    dend_10 { pt3dadd( 38.2025, 3.77997, 6.40673, 1.33 ) }
    dend_10 { pt3dadd( 38.7337, 4.05427, 6.41716, 1.33 ) }
    dend_10 { pt3dadd( 40.122, 4.76552, 6.5306, 1.33 ) }
    dend_10 { pt3dadd( 40.8612, 5.16325, 6.56452, 1.62 ) }
    dend_10 { pt3dadd( 41.6835, 5.60501, 6.58248, 1.92 ) }
    dend_10 { pt3dadd( 42.8687, 6.2335, 6.59582, 1.11 ) }
    dend_10 { pt3dadd( 44.1962, 6.92748, 6.58224, 0.88 ) }
    dend_10 { pt3dadd( 44.2806, 6.97398, 6.58089, 0.88 ) }
    dend_10 { pt3dadd( 45.5845, 7.7139, 6.5433, 0.88 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 37/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 38.1971, -8.48396, 18.6843, 1.03 ) }
    dend_2 { pt3dadd( 38.7642, -8.39591, 18.6343, 1.03 ) }
    dend_2 { pt3dadd( 38.9267, -8.36416, 18.6544, 1.03 ) }
    dend_2 { pt3dadd( 40.3056, -8.0629, 18.9379, 1.03 ) }
    dend_2 { pt3dadd( 40.4488, -8.02447, 18.9675, 1.03 ) }
    dend_2 { pt3dadd( 41.8384, -7.65465, 19.2171, 1.03 ) }
    dend_2 { pt3dadd( 41.9337, -7.62963, 19.233, 1.03 ) }
    dend_2 { pt3dadd( 43.798, -7.22721, 19.5831, 1.03 ) }
    dend_2 { pt3dadd( 43.8761, -7.21839, 19.6003, 1.03 ) }
    dend_2 { pt3dadd( 45.2099, -7.17755, 19.934, 1.03 ) }
    dend_2 { pt3dadd( 46.6971, -7.26473, 20.4176, 1.03 ) }
    dend_2 { pt3dadd( 46.8273, -7.28569, 20.4674, 1.03 ) }
    dend_2 { pt3dadd( 47.966, -7.59179, 20.938, 1.25 ) }
    dend_2 { pt3dadd( 49.1937, -8.07456, 21.4649, 1.25 ) }
    dend_2 { pt3dadd( 49.2558, -8.11189, 21.5023, 1.25 ) }
    dend_2 { pt3dadd( 50.3764, -9.16966, 22.4284, 1.25 ) }
    dend_2 { pt3dadd( 50.8225, -9.72969, 22.8876, 1.25 ) }
    dend_2 { pt3dadd( 51.1766, -10.2311, 23.3305, 1.11 ) }
    dend_2 { pt3dadd( 51.2147, -10.2855, 23.3804, 1.11 ) }
    dend_2 { pt3dadd( 52.2944, -11.6322, 24.7478, 1.11 ) }
    dend_2 { pt3dadd( 52.8412, -12.2538, 25.4052, 1.4 ) }
    dend_2 { pt3dadd( 52.8752, -12.2853, 25.4459, 1.4 ) }
    dend_2 { pt3dadd( 53.8683, -12.9836, 26.6447, 1.4 ) }
    dend_2 { pt3dadd( 55.0904, -13.5115, 27.9163, 1.11 ) }
    dend_2 { pt3dadd( 56.1952, -13.8022, 28.9533, 1.03 ) }
    dend_2 { pt3dadd( 56.2403, -13.8037, 28.9936, 1.03 ) }
    dend_2 { pt3dadd( 57.6346, -13.6836, 30.1373, 1.33 ) }
    dend_2 { pt3dadd( 57.7516, -13.6639, 30.2304, 1.33 ) }
    dend_2 { pt3dadd( 59.0281, -13.3601, 31.1997, 1.33 ) }
    dend_2 { pt3dadd( 59.081, -13.3423, 31.2425, 1.33 ) }
    dend_2 { pt3dadd( 60.5986, -12.7899, 32.462, 2.06 ) }
    dend_2 { pt3dadd( 61.8304, -12.3376, 33.4522, 2.06 ) }
    dend_2 { pt3dadd( 63.8923, -11.5726, 35.0999, 1.62 ) }
    dend_2 { pt3dadd( 63.9448, -11.5525, 35.1422, 1.62 ) }
    dend_2 { pt3dadd( 65.5025, -10.923, 36.4343, 1.4 ) }
    dend_2 { pt3dadd( 65.5543, -10.9027, 36.4775, 1.4 ) }
    dend_2 { pt3dadd( 67.0441, -10.3635, 37.6771, 1.33 ) }
    dend_2 { pt3dadd( 67.0936, -10.347, 37.7243, 1.33 ) }
    dend_2 { pt3dadd( 67.8477, -10.1887, 38.532, 1.03 ) }
    dend_2 { pt3dadd( 67.8932, -10.1869, 38.586, 1.03 ) }
    dend_2 { pt3dadd( 69.1452, -10.4462, 40.2696, 1.4 ) }
    dend_2 { pt3dadd( 69.3869, -10.5439, 40.6331, 1.4 ) }
    dend_2 { pt3dadd( 70.5874, -11.2442, 42.627, 1.03 ) }
    dend_2 { pt3dadd( 71.4998, -11.8563, 44.2087, 1.03 ) }
    dend_2 { pt3dadd( 72.1058, -12.3186, 45.2755, 1.03 ) }
    dend_2 { pt3dadd( 72.9261, -12.993, 46.6724, 1.03 ) }
    dend_2 { pt3dadd( 73.8755, -13.8652, 48.208, 0.81 ) }
    dend_2 { pt3dadd( 74.5531, -14.4964, 49.2472, 0.81 ) }
    dend_2 { pt3dadd( 74.5907, -14.5288, 49.2992, 0.81 ) }
    dend_2 { pt3dadd( 75.141, -14.9004, 50.0148, 0.81 ) }
    dend_2 { pt3dadd( 75.2305, -14.9336, 50.1336, 0.81 ) }
    dend_2 { pt3dadd( 75.5612, -14.9741, 50.5674, 0.81 ) }
    dend_2 { pt3dadd( 75.6056, -14.9703, 50.6221, 0.81 ) }
    dend_2 { pt3dadd( 76.9238, -14.7234, 52.2478, 0.81 ) }
    dend_2 { pt3dadd( 77.0184, -14.6971, 52.3658, 0.81 ) }
    dend_2 { pt3dadd( 78.3777, -14.3367, 53.9944, 0.81 ) }
    dend_2 { pt3dadd( 78.4389, -14.3194, 54.0723, 0.81 ) }
    dend_2 { pt3dadd( 78.9543, -14.1682, 54.7406, 0.81 ) }
    dend_2 { pt3dadd( 79.0164, -14.1522, 54.8181, 0.81 ) }
    dend_2 { pt3dadd( 80.2563, -13.8817, 56.2704, 0.81 ) }
    dend_2 { pt3dadd( 81.097, -13.7514, 57.3026, 0.81 ) }
    dend_2 { pt3dadd( 82.9841, -13.5751, 59.7189, 1.69 ) }
    dend_2 { pt3dadd( 83.0266, -13.5765, 59.7754, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 83.366, -13.6969, 60.2611, 1.69 ) }
    dend_2 { pt3dadd( 83.4019, -13.7255, 60.3163, 1.69 ) }
    dend_2 { pt3dadd( 84.2339, -14.7941, 61.6818, 1.11 ) }
    dend_2 { pt3dadd( 84.2616, -14.8422, 61.7289, 1.11 ) }
    dend_2 { pt3dadd( 84.8381, -16.0025, 62.6535, 1.03 ) }
    dend_2 { pt3dadd( 85.8605, -18.0513, 64.1555, 1.03 ) }
    dend_2 { pt3dadd( 86.612, -19.5102, 65.199, 1.03 ) }
    dend_2 { pt3dadd( 86.641, -19.5652, 65.2372, 1.03 ) }
    dend_2 { pt3dadd( 87.4202, -20.9383, 66.1947, 1.03 ) }
    dend_2 { pt3dadd( 88.2144, -22.2033, 67.2314, 1.03 ) }
    dend_2 { pt3dadd( 89.1147, -23.4606, 68.4542, 1.03 ) }
    dend_2 { pt3dadd( 90.0475, -24.5877, 69.8811, 0.96 ) }
    dend_2 { pt3dadd( 90.0744, -24.6176, 69.9281, 0.96 ) }
    dend_2 { pt3dadd( 90.7727, -25.3672, 71.4019, 0.66 ) }
    dend_2 { pt3dadd( 91.4436, -25.9897, 73.1441, 0.66 ) }
    dend_2 { pt3dadd( 91.4588, -26.0022, 73.2021, 0.66 ) }
    dend_2 { pt3dadd( 91.7135, -26.1435, 75.129, 0.66 ) }
    dend_2 { pt3dadd( 91.7165, -26.1421, 75.2786, 0.66 ) }
    dend_2 { pt3dadd( 91.7104, -26.1397, 75.4223, 0.66 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 19/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -23.5032, -78.6543, 16.3895, 0.29 ) }
    dend_60 { pt3dadd( -23.2759, -79.9805, 16.5031, 0.29 ) }
    dend_60 { pt3dadd( -23.264, -80.049, 16.5013, 0.29 ) }
    dend_60 { pt3dadd( -23.1043, -80.9798, 16.4496, 0.29 ) }
    dend_60 { pt3dadd( -23.0932, -81.0481, 16.4436, 0.29 ) }
    dend_60 { pt3dadd( -22.9855, -81.6642, 16.4287, 1.25 ) }
    dend_60 { pt3dadd( -22.7957, -82.702, 16.4257, 1.55 ) }
    dend_60 { pt3dadd( -22.5759, -83.7924, 16.3878, 1.55 ) }
    dend_60 { pt3dadd( -22.5443, -83.9377, 16.3829, 1.55 ) }
    dend_60 { pt3dadd( -22.2278, -85.3088, 16.3499, 1.55 ) }
    dend_60 { pt3dadd( -21.785, -87.1586, 16.3098, 1.4 ) }
    dend_60 { pt3dadd( -21.7686, -87.226, 16.3089, 1.4 ) }
    dend_60 { pt3dadd( -21.6314, -87.7788, 16.2982, 1.4 ) }
    dend_60 { pt3dadd( -21.347, -89.0347, 16.2514, 0.74 ) }
    dend_60 { pt3dadd( -21.3374, -89.0934, 16.2479, 0.74 ) }
    dend_60 { pt3dadd( -21.2692, -89.9035, 16.1746, 0.74 ) }
    dend_60 { pt3dadd( -21.2681, -89.9825, 16.1645, 0.74 ) }
    dend_60 { pt3dadd( -21.2654, -91.4504, 16.0879, 0.74 ) }
    dend_60 { pt3dadd( -21.2831, -92.4762, 16.0946, 0.74 ) }
    dend_60 { pt3dadd( -21.2811, -93.5168, 16.1344, 0.74 ) }
    dend_60 { pt3dadd( -21.2491, -94.7569, 16.231, 0.74 ) }
    dend_60 { pt3dadd( -21.2453, -94.826, 16.2375, 0.74 ) }
    dend_60 { pt3dadd( -21.1132, -96.5053, 16.4189, 0.74 ) }
    dend_60 { pt3dadd( -21.0956, -96.6523, 16.4338, 0.74 ) }
    dend_60 { pt3dadd( -20.7419, -98.8138, 16.6508, 0.74 ) }
    dend_60 { pt3dadd( -20.5032, -100.08, 16.7519, 0.74 ) }
    dend_60 { pt3dadd( -20.1738, -101.768, 16.8551, 0.74 ) }
    dend_60 { pt3dadd( -20.1448, -101.914, 16.859, 0.74 ) }
    dend_60 { pt3dadd( -19.7287, -103.946, 16.812, 0.74 ) }
    dend_60 { pt3dadd( -19.502, -104.985, 16.7766, 1.25 ) }
    dend_60 { pt3dadd( -19.1455, -106.495, 16.7009, 1.62 ) }
    dend_60 { pt3dadd( -19.1254, -106.571, 16.6932, 1.62 ) }
    dend_60 { pt3dadd( -18.8783, -107.432, 16.5731, 1.62 ) }
    dend_60 { pt3dadd( -18.607, -108.387, 16.402, 1.84 ) }
    dend_60 { pt3dadd( -18.5495, -108.592, 16.3575, 1.84 ) }
    dend_60 { pt3dadd( -18.4487, -108.957, 16.2842, 1.84 ) }
    dend_60 { pt3dadd( -18.016, -110.475, 16.1216, 1.33 ) }
    dend_60 { pt3dadd( -17.6955, -111.676, 16.0758, 0.96 ) }
    dend_60 { pt3dadd( -17.239, -113.467, 16.1074, 0.96 ) }
    dend_60 { pt3dadd( -17.2228, -113.523, 16.1171, 0.96 ) }
    dend_60 { pt3dadd( -16.7423, -115.032, 16.561, 0.96 ) }
    dend_60 { pt3dadd( -16.2707, -116.337, 17.1004, 1.62 ) }
    dend_60 { pt3dadd( -15.9313, -117.129, 17.5902, 1.62 ) }
    dend_60 { pt3dadd( -15.9067, -117.179, 17.6293, 1.62 ) }
    dend_60 { pt3dadd( -14.7575, -119.28, 19.5115, 1.03 ) }
    dend_60 { pt3dadd( -14.7316, -119.326, 19.5533, 1.03 ) }
    dend_60 { pt3dadd( -14.4346, -119.834, 20.034, 1.03 ) }
    dend_60 { pt3dadd( -13.7778, -120.96, 21.0878, 0.74 ) }
    dend_60 { pt3dadd( -13.7529, -121.009, 21.1276, 0.74 ) }
    dend_60 { pt3dadd( -13.461, -121.748, 21.6019, 0.74 ) }
    dend_60 { pt3dadd( -13.4473, -121.812, 21.6231, 0.74 ) }
    dend_60 { pt3dadd( -13.3075, -122.943, 21.9481, 0.74 ) }
    dend_60 { pt3dadd( -13.3007, -123.075, 21.9871, 0.74 ) }
    dend_60 { pt3dadd( -13.2819, -124.771, 22.4467, 0.74 ) }
    dend_60 { pt3dadd( -13.2835, -124.847, 22.4685, 0.74 ) }
    dend_60 { pt3dadd( -13.3451, -126.227, 22.9067, 0.74 ) }
    dend_60 { pt3dadd( -13.4307, -127.534, 23.3176, 0.74 ) }
    dend_60 { pt3dadd( -13.5374, -128.721, 23.6828, 1.11 ) }
    dend_60 { pt3dadd( -13.5447, -128.796, 23.7068, 1.11 ) }
    dend_60 { pt3dadd( -13.6472, -129.808, 24.0434, 1.11 ) }
    dend_60 { pt3dadd( -13.7646, -131.141, 24.4782, 1.11 ) }
    dend_60 { pt3dadd( -13.8284, -131.76, 24.6713, 1.4 ) }
    dend_60 { pt3dadd( -13.8433, -131.904, 24.708, 1.4 ) }
    dend_60 { pt3dadd( -13.932, -132.676, 24.8739, 1.4 ) }
    dend_60 { pt3dadd( -14.0897, -134.017, 25.1557, 1.18 ) }
    dend_60 { pt3dadd( -14.2226, -135.172, 25.4403, 0.74 ) }
    dend_60 { pt3dadd( -14.335, -136.151, 25.6816, 0.74 ) }
    dend_60 { pt3dadd( -14.3405, -136.218, 25.6971, 0.74 ) }
    dend_60 { pt3dadd( -14.4008, -137.285, 25.9244, 1.18 ) }
    dend_60 { pt3dadd( -14.4022, -137.353, 25.9362, 1.18 ) }
    dend_60 { pt3dadd( -14.369, -138.822, 26.0845, 1.33 ) }
    dend_60 { pt3dadd( -14.3184, -139.745, 26.0927, 1.33 ) }
    dend_60 { pt3dadd( -14.1951, -141.237, 26.0373, 1.11 ) }
    dend_60 { pt3dadd( -14.1913, -141.306, 26.0322, 1.11 ) }
    dend_60 { pt3dadd( -14.1951, -142.41, 25.8596, 0.74 ) }
    dend_60 { pt3dadd( -14.271, -143.471, 25.6019, 0.59 ) }
    dend_60 { pt3dadd( -14.4175, -144.17, 25.3483, 0.59 ) }
    dend_60 { pt3dadd( -14.4444, -144.229, 25.3253, 0.59 ) }
    dend_60 { pt3dadd( -15.1122, -145.163, 24.9956, 0.59 ) }
    dend_60 { pt3dadd( -15.9465, -146.12, 24.7117, 0.52 ) }
    dend_60 { pt3dadd( -15.995, -146.166, 24.7014, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_60 { pt3dadd( -16.628, -146.746, 24.6277, 0.81 ) }
    dend_60 { pt3dadd( -17.2736, -147.548, 24.5904, 0.81 ) }
    dend_60 { pt3dadd( -17.521, -148.252, 24.526, 0.66 ) }
    dend_60 { pt3dadd( -17.5283, -148.32, 24.5181, 0.66 ) }
    dend_60 { pt3dadd( -17.5332, -149.121, 24.4233, 0.66 ) }
    dend_60 { pt3dadd( -17.5222, -149.276, 24.4063, 0.66 ) }
    dend_60 { pt3dadd( -17.2647, -151.091, 24.2025, 0.59 ) }
    dend_60 { pt3dadd( -16.8423, -153.509, 23.917, 1.03 ) }
    dend_60 { pt3dadd( -16.6757, -154.447, 23.8419, 1.33 ) }
    dend_60 { pt3dadd( -16.6637, -154.515, 23.8392, 1.33 ) }
    dend_60 { pt3dadd( -16.4742, -155.716, 23.8531, 0.66 ) }
    dend_60 { pt3dadd( -16.3364, -156.956, 23.9333, 0.44 ) }
    dend_60 { pt3dadd( -16.2772, -157.973, 24.0775, 1.11 ) }
    dend_60 { pt3dadd( -16.2534, -159.284, 24.366, 1.11 ) }
    dend_60 { pt3dadd( -16.2536, -159.342, 24.3797, 1.11 ) }
    dend_60 { pt3dadd( -16.2834, -160.282, 24.5937, 0.81 ) }
    dend_60 { pt3dadd( -16.4156, -161.577, 24.856, 1.11 ) }
    dend_60 { pt3dadd( -16.427, -161.653, 24.8761, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 18/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -23.5032, -78.6543, 16.3895, 0.52 ) }
    dend_59 { pt3dadd( -22.5314, -78.2768, 16.6959, 0.52 ) }
    dend_59 { pt3dadd( -22.4725, -78.2545, 16.7167, 0.52 ) }
    dend_59 { pt3dadd( -21.6024, -77.938, 16.9223, 0.52 ) }
    dend_59 { pt3dadd( -21.4304, -77.8755, 16.9629, 0.52 ) }
    dend_59 { pt3dadd( -19.9831, -77.3492, 17.3049, 0.52 ) }
    dend_59 { pt3dadd( -19.8266, -77.2923, 17.3419, 0.88 ) }
    dend_59 { pt3dadd( -19.7667, -77.271, 17.3607, 0.88 ) }
    dend_59 { pt3dadd( -18.0856, -76.728, 17.9057, 0.29 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 27/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -18.8734, -41.8088, -0.0482643, 0.15 ) }
    dend_55 { pt3dadd( -13.9593, -42.0606, 2.37909, 0.15 ) }
    dend_55 { pt3dadd( -8.83572, -42.4937, 4.29446, 0.15 ) }
    dend_55 { pt3dadd( -3.45875, -43.265, 5.0759, 0.15 ) }
    dend_55 { pt3dadd( 1.81832, -43.7106, 6.50994, 0.15 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 32/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -18.8734, -41.8088, -0.0482643, 0.15 ) }
    dend_52 { pt3dadd( -8.99997, -42.2898, 5.67705, 0.15 ) }
    dend_52 { pt3dadd( 1.6774, -42.6665, 9.71331, 0.15 ) }
    dend_52 { pt3dadd( 11.4865, -43.0911, 15.5525, 0.15 ) }
    dend_52 { pt3dadd( 21.2144, -44.0821, 21.4681, 0.15 ) }
    dend_52 { pt3dadd( 31.824, -44.681, 25.6558, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -69.5524, -37.405, -11.7132, 0.88 ) }
    dend_46 { pt3dadd( -69.4694, -38.3199, -11.5423, 0.88 ) }
    dend_46 { pt3dadd( -69.3344, -39.4549, -11.2561, 0.59 ) }
    dend_46 { pt3dadd( -69.2105, -40.9018, -10.7443, 0.37 ) }
    dend_46 { pt3dadd( -69.1666, -41.9848, -10.3217, 0.74 ) }
    dend_46 { pt3dadd( -69.1739, -43.8531, -9.58125, 0.37 ) }
    dend_46 { pt3dadd( -69.1895, -44.3804, -9.35271, 0.74 ) }
    dend_46 { pt3dadd( -69.2706, -45.7048, -8.68449, 0.52 ) }
    dend_46 { pt3dadd( -69.4057, -47.5117, -7.68568, 0.52 ) }
    dend_46 { pt3dadd( -69.4929, -48.4829, -7.10026, 1.11 ) }
    dend_46 { pt3dadd( -69.6525, -49.5809, -6.40478, 1.11 ) }
    dend_46 { pt3dadd( -69.9452, -50.7313, -5.68424, 0.88 ) }
    dend_46 { pt3dadd( -69.9651, -50.7959, -5.64294, 0.88 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 51/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -69.5524, -37.405, -11.7132, 0.81 ) }
    dend_43 { pt3dadd( -70.9713, -37.7394, -12.0206, 0.81 ) }
    dend_43 { pt3dadd( -71.9137, -37.9757, -12.217, 0.81 ) }
    dend_43 { pt3dadd( -73.3475, -38.3433, -12.5077, 0.66 ) }
    dend_43 { pt3dadd( -74.7726, -38.6826, -12.7811, 0.66 ) }
    dend_43 { pt3dadd( -75.7702, -38.9095, -12.9665, 0.66 ) }
    dend_43 { pt3dadd( -75.9019, -38.9362, -12.9898, 0.66 ) }
    dend_43 { pt3dadd( -76.5296, -39.0443, -13.0972, 0.66 ) }
    dend_43 { pt3dadd( -76.7198, -39.07, -13.1097, 0.66 ) }
    dend_43 { pt3dadd( -78.2232, -39.218, -13.0208, 0.66 ) }
    dend_43 { pt3dadd( -78.3115, -39.2276, -13.0081, 0.66 ) }
    dend_43 { pt3dadd( -79.779, -39.4628, -12.7112, 0.66 ) }
    dend_43 { pt3dadd( -79.865, -39.4795, -12.6907, 0.66 ) }
    dend_43 { pt3dadd( -81.5755, -39.9669, -12.2068, 0.66 ) }
    dend_43 { pt3dadd( -81.6676, -40.0034, -12.177, 0.66 ) }
    dend_43 { pt3dadd( -82.6307, -40.4819, -11.7734, 0.66 ) }
    dend_43 { pt3dadd( -83.3661, -40.879, -11.4456, 0.44 ) }
    dend_43 { pt3dadd( -83.4517, -40.9252, -11.4086, 0.44 ) }
    dend_43 { pt3dadd( -84.5022, -41.3598, -11.0885, 0.44 ) }
    dend_43 { pt3dadd( -84.6225, -41.3974, -11.0685, 0.44 ) }
    dend_43 { pt3dadd( -85.7157, -41.5599, -10.94, 0.44 ) }
    dend_43 { pt3dadd( -85.9968, -41.565, -10.9213, 0.44 ) }
    dend_43 { pt3dadd( -87.0987, -41.5564, -10.9414, 0.44 ) }
    dend_43 { pt3dadd( -88.0844, -41.5407, -11.0208, 0.88 ) }
    dend_43 { pt3dadd( -88.1731, -41.5379, -11.0336, 0.88 ) }
    dend_43 { pt3dadd( -89.2795, -41.5394, -11.2494, 0.88 ) }
    dend_43 { pt3dadd( -90.1824, -41.5896, -11.4883, 0.88 ) }
    dend_43 { pt3dadd( -91.1093, -41.7092, -11.7288, 0.88 ) }
    dend_43 { pt3dadd( -91.2921, -41.7464, -11.7757, 0.88 ) }
    dend_43 { pt3dadd( -91.91, -41.9032, -11.9252, 0.88 ) }
    dend_43 { pt3dadd( -92.2833, -42.003, -12.0102, 0.22 ) }
    dend_43 { pt3dadd( -93.3813, -42.2962, -12.2295, 0.37 ) }
    dend_43 { pt3dadd( -94.4873, -42.5724, -12.4119, 0.37 ) }
    dend_43 { pt3dadd( -94.574, -42.5942, -12.4215, 0.37 ) }
    dend_43 { pt3dadd( -95.2714, -42.782, -12.4918, 0.88 ) }
    dend_43 { pt3dadd( -95.3578, -42.806, -12.4999, 0.88 ) }
    dend_43 { pt3dadd( -96.5473, -43.1352, -12.6037, 0.88 ) }
    dend_43 { pt3dadd( -96.6342, -43.1576, -12.6105, 0.88 ) }
    dend_43 { pt3dadd( -97.618, -43.3597, -12.7016, 0.88 ) }
    dend_43 { pt3dadd( -97.7185, -43.3782, -12.7115, 0.88 ) }
    dend_43 { pt3dadd( -99.0328, -43.5998, -12.8347, 0.88 ) }
    dend_43 { pt3dadd( -99.1207, -43.6164, -12.842, 0.88 ) }
    dend_43 { pt3dadd( -99.7967, -43.7519, -12.8935, 1.11 ) }
    dend_43 { pt3dadd( -100.816, -43.9422, -12.9701, 0.88 ) }
    dend_43 { pt3dadd( -101.754, -44.1078, -13.0391, 0.88 ) }
    dend_43 { pt3dadd( -102.717, -44.2944, -13.1028, 0.74 ) }
    dend_43 { pt3dadd( -103.716, -44.5056, -13.161, 0.59 ) }
    dend_43 { pt3dadd( -103.891, -44.5457, -13.1702, 0.59 ) }
    dend_43 { pt3dadd( -105.172, -44.8747, -13.2288, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_43 { pt3dadd( -105.359, -44.9236, -13.2191, 0.59 ) }
    dend_43 { pt3dadd( -106.588, -45.2362, -13.0692, 0.59 ) }
    dend_43 { pt3dadd( -107.792, -45.5215, -12.8659, 0.74 ) }
    dend_43 { pt3dadd( -109.233, -45.8489, -12.5677, 0.88 ) }
    dend_43 { pt3dadd( -110.147, -46.0856, -12.3538, 0.88 ) }
    dend_43 { pt3dadd( -112.223, -46.7119, -11.7905, 0.37 ) }
    dend_43 { pt3dadd( -112.485, -46.7949, -11.721, 0.37 ) }
    dend_43 { pt3dadd( -113.562, -47.1478, -11.4527, 0.37 ) }
    dend_43 { pt3dadd( -113.797, -47.2334, -11.4011, 0.37 ) }
    dend_43 { pt3dadd( -115.171, -47.7939, -11.2154, 0.81 ) }
    dend_43 { pt3dadd( -115.523, -47.9527, -11.2108, 0.81 ) }
    dend_43 { pt3dadd( -116.195, -48.2957, -11.2936, 0.44 ) }
    dend_43 { pt3dadd( -117.156, -48.787, -11.4086, 0.44 ) }
    dend_43 { pt3dadd( -117.344, -48.8821, -11.4472, 0.44 ) }
    dend_43 { pt3dadd( -118.108, -49.1777, -11.6602, 0.44 ) }
    dend_43 { pt3dadd( -118.508, -49.2593, -11.7946, 0.44 ) }
    dend_43 { pt3dadd( -119.615, -49.369, -12.173, 0.44 ) }
    dend_43 { pt3dadd( -119.973, -49.3708, -12.2707, 0.44 ) }
    dend_43 { pt3dadd( -121.377, -49.2509, -12.5873, 0.44 ) }
    dend_43 { pt3dadd( -122.77, -49.0602, -12.855, 0.74 ) }
    dend_43 { pt3dadd( -124.221, -48.7948, -12.9734, 1.03 ) }
    dend_43 { pt3dadd( -125.052, -48.6391, -12.9553, 1.03 ) }
    dend_43 { pt3dadd( -126.378, -48.4147, -12.5959, 0.37 ) }
    dend_43 { pt3dadd( -127.829, -48.224, -11.914, 0.37 ) }
    dend_43 { pt3dadd( -127.905, -48.2188, -11.8668, 0.37 ) }
    dend_43 { pt3dadd( -129.478, -48.2257, -10.7243, 0.96 ) }
    dend_43 { pt3dadd( -130.071, -48.2505, -10.16, 0.96 ) }
    dend_43 { pt3dadd( -132.211, -48.3951, -7.93758, 0.66 ) }
    dend_43 { pt3dadd( -132.421, -48.4214, -7.72367, 0.66 ) }
    dend_43 { pt3dadd( -133.482, -48.6158, -6.67707, 0.66 ) }
    dend_43 { pt3dadd( -133.579, -48.6385, -6.59528, 0.66 ) }
    dend_43 { pt3dadd( -136.567, -49.4655, -4.44603, 1.62 ) }
    dend_43 { pt3dadd( -137.485, -49.7724, -3.9013, 1.62 ) }
    dend_43 { pt3dadd( -138.986, -50.3747, -3.23009, 0.81 ) }
    dend_43 { pt3dadd( -140.287, -50.9459, -2.81429, 0.44 ) }
    dend_43 { pt3dadd( -141.765, -51.66, -2.53443, 0.44 ) }
    dend_43 { pt3dadd( -141.846, -51.7019, -2.53222, 0.44 ) }
    dend_43 { pt3dadd( -143.556, -52.6707, -2.84047, 0.44 ) }
    dend_43 { pt3dadd( -143.631, -52.7162, -2.86443, 0.44 ) }
    dend_43 { pt3dadd( -145.118, -53.6839, -3.61675, 0.44 ) }
    dend_43 { pt3dadd( -145.272, -53.791, -3.71989, 0.44 ) }
    dend_43 { pt3dadd( -145.838, -54.201, -4.13469, 0.44 ) }
    dend_43 { pt3dadd( -145.902, -54.2477, -4.17907, 0.44 ) }
    dend_43 { pt3dadd( -147.378, -55.4384, -5.0689, 0.44 ) }
    dend_43 { pt3dadd( -147.48, -55.5256, -5.10384, 0.44 ) }
    dend_43 { pt3dadd( -148.196, -56.1593, -5.21062, 0.44 ) }
    dend_43 { pt3dadd( -149.34, -57.1483, -5.32726, 0.44 ) }
    dend_43 { pt3dadd( -149.771, -57.4893, -5.35133, 0.44 ) }
    dend_43 { pt3dadd( -151.199, -58.4582, -5.37868, 0.44 ) }
    dend_43 { pt3dadd( -152.812, -59.4329, -5.33697, 0.44 ) }
    dend_43 { pt3dadd( -152.949, -59.508, -5.3363, 0.44 ) }
    dend_43 { pt3dadd( -154.349, -60.1882, -5.35704, 0.81 ) }
    dend_43 { pt3dadd( -155.945, -60.8508, -5.37443, 1.18 ) }
    dend_43 { pt3dadd( -157.682, -61.4634, -5.39002, 1.18 ) }
    dend_43 { pt3dadd( -157.781, -61.4922, -5.38941, 1.18 ) }
    dend_43 { pt3dadd( -159.71, -61.9787, -5.30552, 1.33 ) }
    dend_43 { pt3dadd( -160.908, -62.2666, -5.19231, 1.62 ) }
    dend_43 { pt3dadd( -163.019, -62.7808, -4.85095, 1.62 ) }
    dend_43 { pt3dadd( -163.177, -62.822, -4.81765, 1.62 ) }
    dend_43 { pt3dadd( -164.371, -63.1614, -4.52553, 1.62 ) }
    dend_43 { pt3dadd( -165.822, -63.6054, -4.15315, 1.03 ) }
    dend_43 { pt3dadd( -166.483, -63.8146, -3.9818, 0.59 ) }
    dend_43 { pt3dadd( -167.419, -64.1389, -3.75973, 0.37 ) }
    dend_43 { pt3dadd( -167.503, -64.17, -3.74757, 0.37 ) }
    dend_43 { pt3dadd( -168.572, -64.5867, -3.6953, 0.37 ) }
    dend_43 { pt3dadd( -169.159, -64.827, -3.72463, 0.66 ) }
    dend_43 { pt3dadd( -170.386, -65.3633, -3.87036, 0.66 ) }
    dend_43 { pt3dadd( -170.468, -65.4005, -3.87608, 0.66 ) }
    dend_43 { pt3dadd( -171.385, -65.8062, -3.90628, 0.96 ) }
    dend_43 { pt3dadd( -172.674, -66.3544, -3.795, 1.18 ) }
    dend_43 { pt3dadd( -172.756, -66.3884, -3.77876, 1.18 ) }
    dend_43 { pt3dadd( -174.321, -67.0621, -3.38058, 1.18 ) }
    dend_43 { pt3dadd( -175.629, -67.6658, -2.93399, 1.18 ) }
    dend_43 { pt3dadd( -175.717, -67.7065, -2.89737, 1.18 ) }
    dend_43 { pt3dadd( -177.35, -68.4516, -1.97764, 1.18 ) }
    dend_43 { pt3dadd( -177.469, -68.5027, -1.89284, 1.18 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 76/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 8.21176, 59.6199, 34.7406, 0.37 ) }
    dend_37 { pt3dadd( 9.35916, 60.2607, 35.2013, 0.37 ) }
    dend_37 { pt3dadd( 10.9734, 61.2875, 35.9121, 0.37 ) }
    dend_37 { pt3dadd( 12.6227, 62.3738, 36.7639, 0.37 ) }
    dend_37 { pt3dadd( 14.2603, 63.5187, 37.6637, 0.37 ) }
    dend_37 { pt3dadd( 15.3248, 64.278, 38.2254, 0.74 ) }
    dend_37 { pt3dadd( 15.8743, 64.6534, 38.5226, 0.74 ) }
    dend_37 { pt3dadd( 16.7, 65.1857, 39.0142, 0.44 ) }
    dend_37 { pt3dadd( 18.2895, 66.0677, 39.9694, 0.44 ) }
    dend_37 { pt3dadd( 19.0016, 66.3887, 40.345, 0.44 ) }
    dend_37 { pt3dadd( 20.7118, 66.8898, 41.071, 0.44 ) }
    dend_37 { pt3dadd( 22.3768, 67.1216, 41.8501, 0.66 ) }
    dend_37 { pt3dadd( 23.2968, 67.1568, 42.4208, 0.66 ) }
    dend_37 { pt3dadd( 24.1173, 67.1673, 43.0126, 0.66 ) }
    dend_37 { pt3dadd( 24.6998, 67.1931, 43.4828, 1.03 ) }
    dend_37 { pt3dadd( 25.7495, 67.3531, 44.4345, 1.03 ) }
    dend_37 { pt3dadd( 28.0243, 68.1852, 46.7622, 1.03 ) }
    dend_37 { pt3dadd( 29.5626, 69.2157, 48.5226, 0.66 ) }
    dend_37 { pt3dadd( 30.2389, 69.8979, 49.3804, 0.59 ) }
    dend_37 { pt3dadd( 30.7244, 70.5959, 50.0426, 0.59 ) }
    dend_37 { pt3dadd( 31.4963, 72.1396, 51.1214, 0.44 ) }
    dend_37 { pt3dadd( 31.9452, 73.455, 51.72, 0.44 ) }
    dend_37 { pt3dadd( 32.2124, 74.7113, 52.0369, 0.88 ) }
    dend_37 { pt3dadd( 32.3711, 75.6786, 52.1931, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_37 { pt3dadd( 32.5297, 76.7005, 52.3903, 1.11 ) }
    dend_37 { pt3dadd( 32.7193, 77.8746, 52.6412, 0.66 ) }
    dend_37 { pt3dadd( 32.8979, 78.8336, 52.8538, 0.52 ) }
    dend_37 { pt3dadd( 33.1579, 79.8725, 53.1276, 0.52 ) }
    dend_37 { pt3dadd( 33.542, 80.9644, 53.5811, 0.52 ) }
    dend_37 { pt3dadd( 33.9678, 81.8891, 54.2093, 0.74 ) }
    dend_37 { pt3dadd( 34.2399, 82.4006, 54.6622, 0.74 ) }
    dend_37 { pt3dadd( 34.567, 82.9832, 55.2871, 0.74 ) }
    dend_37 { pt3dadd( 35.1889, 84.0827, 56.5485, 0.52 ) }
    dend_37 { pt3dadd( 36.0871, 85.7281, 58.3688, 0.52 ) }
    dend_37 { pt3dadd( 36.4566, 86.4447, 59.0834, 0.88 ) }
    dend_37 { pt3dadd( 36.7404, 87.028, 59.6396, 0.88 ) }
    dend_37 { pt3dadd( 37.2478, 88.1362, 60.7054, 0.52 ) }
    dend_37 { pt3dadd( 37.5335, 88.8327, 61.34, 0.52 ) }
    dend_37 { pt3dadd( 37.9277, 89.9883, 62.1358, 0.52 ) }
    dend_37 { pt3dadd( 38.364, 91.3221, 62.6694, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 16/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 8.21176, 59.6199, 34.7406, 0.52 ) }
    dend_36 { pt3dadd( 8.63594, 61.2477, 35.3535, 0.52 ) }
    dend_36 { pt3dadd( 9.04676, 62.7457, 36.1529, 0.52 ) }
    dend_36 { pt3dadd( 9.56802, 64.1042, 37.1678, 0.52 ) }
    dend_36 { pt3dadd( 9.87517, 64.7442, 37.9484, 0.52 ) }
    dend_36 { pt3dadd( 10.3751, 65.7484, 39.3912, 0.52 ) }
    dend_36 { pt3dadd( 10.8592, 66.7321, 40.8867, 0.52 ) }
    dend_36 { pt3dadd( 11.3583, 67.6842, 42.5601, 0.52 ) }
    dend_36 { pt3dadd( 12.0564, 69.0372, 45.0853, 0.52 ) }
    dend_36 { pt3dadd( 13.0972, 71.2281, 49.2028, 0.52 ) }
    dend_36 { pt3dadd( 13.3946, 71.8999, 50.4971, 0.52 ) }
    dend_36 { pt3dadd( 13.6269, 72.4919, 51.6005, 0.52 ) }
    dend_36 { pt3dadd( 13.7561, 72.8748, 52.2119, 0.81 ) }
    dend_36 { pt3dadd( 13.9388, 73.632, 53.0901, 0.81 ) }
    dend_36 { pt3dadd( 14.0108, 74.2057, 53.4988, 0.81 ) }
    dend_36 { pt3dadd( 14.0763, 74.6848, 53.6636, 0.44 ) }
    dend_36 { pt3dadd( 14.3007, 75.9362, 54.0124, 0.37 ) }
    dend_36 { pt3dadd( 14.4373, 76.6908, 54.1861, 0.74 ) }
    dend_36 { pt3dadd( 14.6289, 77.7652, 54.4732, 0.74 ) }
    dend_36 { pt3dadd( 14.6873, 78.2092, 54.61, 0.37 ) }
    dend_36 { pt3dadd( 14.7497, 78.8372, 54.8813, 0.37 ) }
    dend_36 { pt3dadd( 14.8071, 79.4303, 55.2293, 0.37 ) }
    dend_36 { pt3dadd( 14.8929, 80.1779, 55.8125, 0.37 ) }
    dend_36 { pt3dadd( 15.021, 80.968, 56.6523, 0.37 ) }
    dend_36 { pt3dadd( 15.1155, 81.4393, 57.2907, 0.37 ) }
    dend_36 { pt3dadd( 15.3232, 82.4868, 58.7847, 0.37 ) }
    dend_36 { pt3dadd( 15.43, 83.0368, 59.5875, 0.37 ) }
    dend_36 { pt3dadd( 15.594, 83.9234, 60.793, 0.66 ) }
    dend_36 { pt3dadd( 15.928, 85.5921, 62.8617, 0.66 ) }
    dend_36 { pt3dadd( 16.2135, 87.0022, 64.4332, 1.03 ) }
    dend_36 { pt3dadd( 16.3436, 87.642, 65.0915, 1.03 ) }
    dend_36 { pt3dadd( 16.528, 88.7428, 66.0391, 0.52 ) }
    dend_36 { pt3dadd( 16.7293, 90.157, 67.1143, 0.52 ) }
    dend_36 { pt3dadd( 16.8198, 90.9389, 67.5898, 0.81 ) }
    dend_36 { pt3dadd( 16.8444, 91.175, 67.6897, 0.81 ) }
    dend_36 { pt3dadd( 16.9883, 92.1501, 68.0763, 0.37 ) }
    dend_36 { pt3dadd( 17.2087, 93.2368, 68.5456, 0.37 ) }
    dend_36 { pt3dadd( 17.4581, 94.1284, 68.942, 0.37 ) }
    dend_36 { pt3dadd( 17.7013, 94.8705, 69.2911, 0.37 ) }
    dend_36 { pt3dadd( 18.0575, 95.9395, 69.7967, 0.37 ) }
    dend_36 { pt3dadd( 18.5647, 97.4389, 70.4936, 0.37 ) }
    dend_36 { pt3dadd( 18.8329, 98.1651, 70.8178, 0.37 ) }
    dend_36 { pt3dadd( 19.2392, 99.0894, 71.2426, 0.37 ) }
    dend_36 { pt3dadd( 19.5952, 99.8094, 71.5473, 0.37 ) }
    dend_36 { pt3dadd( 19.92, 100.404, 71.819, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 61/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -28.9533, 32.5503, -2.09009, 0.66 ) }
    dend_34 { pt3dadd( -29.4816, 32.8497, -2.69862, 0.66 ) }
    dend_34 { pt3dadd( -29.8966, 32.9762, -3.21094, 0.52 ) }
    dend_34 { pt3dadd( -30.2715, 33.074, -3.65577, 0.52 ) }
    dend_34 { pt3dadd( -31.1007, 33.3058, -4.6008, 0.81 ) }
    dend_34 { pt3dadd( -31.5039, 33.4501, -5.05624, 0.81 ) }
    dend_34 { pt3dadd( -32.7004, 33.9963, -6.45408, 0.81 ) }
    dend_34 { pt3dadd( -33.9077, 34.684, -7.93852, 0.44 ) }
    dend_34 { pt3dadd( -34.2756, 34.938, -8.38089, 0.44 ) }
    dend_34 { pt3dadd( -34.6136, 35.2196, -8.77781, 0.59 ) }
    dend_34 { pt3dadd( -35.2935, 35.8717, -9.48622, 0.59 ) }
    dend_34 { pt3dadd( -35.9776, 36.568, -10.1209, 0.59 ) }
    dend_34 { pt3dadd( -36.5282, 37.1432, -10.5201, 0.59 ) }
    dend_34 { pt3dadd( -37.0661, 37.6655, -10.9022, 0.59 ) }
    dend_34 { pt3dadd( -37.928, 38.2717, -11.4974, 0.59 ) }
    dend_34 { pt3dadd( -38.4916, 38.5445, -11.8497, 0.22 ) }
    dend_34 { pt3dadd( -39.1847, 38.7517, -12.2679, 0.22 ) }
    dend_34 { pt3dadd( -39.9741, 38.9234, -12.7286, 0.22 ) }
    dend_34 { pt3dadd( -41.396, 39.1799, -13.5734, 0.44 ) }
    dend_34 { pt3dadd( -42.1079, 39.3046, -14.0783, 0.59 ) }
    dend_34 { pt3dadd( -42.7099, 39.4388, -14.5312, 0.81 ) }
    dend_34 { pt3dadd( -43.5659, 39.6773, -15.2251, 0.81 ) }
    dend_34 { pt3dadd( -44.15, 39.8647, -15.6969, 1.18 ) }
    dend_34 { pt3dadd( -44.6175, 40.0229, -16.0805, 1.47 ) }
    dend_34 { pt3dadd( -46.3046, 40.4926, -17.3191, 0.96 ) }
    dend_34 { pt3dadd( -47.0632, 40.6619, -17.9001, 0.66 ) }
    dend_34 { pt3dadd( -48.0231, 40.8487, -18.622, 0.66 ) }
    dend_34 { pt3dadd( -48.6292, 40.955, -19.0464, 0.66 ) }
    dend_34 { pt3dadd( -50.2051, 41.1376, -20.225, 0.37 ) }
    dend_34 { pt3dadd( -51.3563, 41.1846, -21.223, 0.37 ) }
    dend_34 { pt3dadd( -52.4384, 41.1519, -22.2039, 0.74 ) }
    dend_34 { pt3dadd( -52.9349, 41.1012, -22.678, 0.74 ) }
    dend_34 { pt3dadd( -53.6189, 41.0059, -23.329, 0.44 ) }
    dend_34 { pt3dadd( -55.3002, 40.7496, -24.9135, 0.44 ) }
    dend_34 { pt3dadd( -57.0802, 40.465, -26.4716, 0.44 ) }
    dend_34 { pt3dadd( -57.7887, 40.3687, -27.0959, 1.33 ) }
    dend_34 { pt3dadd( -58.7602, 40.2623, -27.8844, 1.33 ) }
    dend_34 { pt3dadd( -59.4205, 40.213, -28.3841, 0.52 ) }
    dend_34 { pt3dadd( -59.9672, 40.2232, -28.7642, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_34 { pt3dadd( -61.1698, 40.3732, -29.359, 0.52 ) }
    dend_34 { pt3dadd( -62.7106, 40.6595, -29.9868, 0.81 ) }
    dend_34 { pt3dadd( -63.4929, 40.812, -30.2653, 0.52 ) }
    dend_34 { pt3dadd( -64.6004, 40.9835, -30.7221, 0.52 ) }
    dend_34 { pt3dadd( -66.1507, 41.0951, -31.4547, 0.52 ) }
    dend_34 { pt3dadd( -68.1124, 41.1203, -32.4194, 0.52 ) }
    dend_34 { pt3dadd( -69.875, 41.1019, -33.2727, 0.37 ) }
    dend_34 { pt3dadd( -71.3181, 41.0944, -33.9301, 1.11 ) }
    dend_34 { pt3dadd( -74.379, 41.1203, -35.4065, 1.11 ) }
    dend_34 { pt3dadd( -76.3969, 41.1511, -36.4255, 0.88 ) }
    dend_34 { pt3dadd( -76.9901, 41.166, -36.7259, 0.59 ) }
    dend_34 { pt3dadd( -77.7986, 41.2234, -37.1431, 0.37 ) }
    dend_34 { pt3dadd( -78.6409, 41.3353, -37.5614, 0.37 ) }
    dend_34 { pt3dadd( -80.1897, 41.6376, -38.313, 0.29 ) }
    dend_34 { pt3dadd( -80.8636, 41.8134, -38.5617, 0.81 ) }
    dend_34 { pt3dadd( -82.0389, 42.1359, -38.9618, 1.11 ) }
    dend_34 { pt3dadd( -83.4883, 42.4841, -39.4443, 1.11 ) }
    dend_34 { pt3dadd( -85.3447, 42.8631, -40.0823, 0.66 ) }
    dend_34 { pt3dadd( -86.1776, 43.0172, -40.3629, 0.52 ) }
    dend_34 { pt3dadd( -86.8082, 43.1301, -40.5595, 0.52 ) }
    dend_34 { pt3dadd( -88.0473, 43.3673, -40.9448, 0.52 ) }
    dend_34 { pt3dadd( -88.9957, 43.5732, -41.2606, 0.52 ) }
    dend_34 { pt3dadd( -90.0566, 43.8594, -41.6061, 0.52 ) }
    dend_34 { pt3dadd( -90.9346, 44.1664, -41.9078, 0.52 ) }
    dend_34 { pt3dadd( -91.5858, 44.4538, -42.1988, 0.88 ) }
    dend_34 { pt3dadd( -91.9475, 44.6469, -42.4268, 0.52 ) }
    dend_34 { pt3dadd( -92.7361, 45.1609, -43.0553, 0.44 ) }
    dend_34 { pt3dadd( -93.3461, 45.626, -43.6026, 0.44 ) }
    dend_34 { pt3dadd( -94.2307, 46.4384, -44.4817, 1.03 ) }
    dend_34 { pt3dadd( -94.5503, 46.7594, -44.8307, 1.03 ) }
    dend_34 { pt3dadd( -95.4494, 47.7481, -45.8499, 0.52 ) }
    dend_34 { pt3dadd( -95.8644, 48.2429, -46.3008, 0.37 ) }
    dend_34 { pt3dadd( -96.3487, 48.8862, -46.7747, 0.37 ) }
    dend_34 { pt3dadd( -97.2157, 50.1786, -47.6839, 0.22 ) }
    dend_34 { pt3dadd( -97.341, 50.3948, -47.8119, 0.74 ) }
    dend_34 { pt3dadd( -97.6005, 50.892, -48.0808, 1.03 ) }
    dend_34 { pt3dadd( -98.0353, 51.7703, -48.514, 1.03 ) }
    dend_34 { pt3dadd( -98.4029, 52.5058, -48.8841, 0.74 ) }
    dend_34 { pt3dadd( -99.0609, 53.7643, -49.607, 0.22 ) }
    dend_34 { pt3dadd( -99.4917, 54.5312, -50.0707, 0.22 ) }
    dend_34 { pt3dadd( -100.351, 55.9109, -50.9529, 0.22 ) }
    dend_34 { pt3dadd( -100.805, 56.5592, -51.4002, 0.88 ) }
    dend_34 { pt3dadd( -101.321, 57.2323, -51.8825, 0.88 ) }
    dend_34 { pt3dadd( -102.126, 58.2148, -52.5729, 0.22 ) }
    dend_34 { pt3dadd( -102.592, 58.7577, -52.9077, 0.22 ) }
    dend_34 { pt3dadd( -103.581, 59.8137, -53.6501, 0.22 ) }
    dend_34 { pt3dadd( -103.722, 59.9635, -53.7598, 0.88 ) }
    dend_34 { pt3dadd( -104.061, 60.3316, -54.0144, 0.88 ) }
    dend_34 { pt3dadd( -104.288, 60.5609, -54.2095, 0.15 ) }
    dend_34 { pt3dadd( -104.826, 61.0525, -54.6619, 0.15 ) }
    dend_34 { pt3dadd( -105.707, 61.76, -55.4934, 0.15 ) }
    dend_34 { pt3dadd( -106.021, 62.0028, -55.8141, 1.03 ) }
    dend_34 { pt3dadd( -106.408, 62.3237, -56.2467, 1.25 ) }
    dend_34 { pt3dadd( -107.652, 63.399, -57.8282, 0.22 ) }
    dend_34 { pt3dadd( -108.078, 63.7789, -58.4083, 0.22 ) }
    dend_34 { pt3dadd( -108.398, 64.0656, -58.8492, 0.22 ) }
    dend_34 { pt3dadd( -108.909, 64.5385, -59.4858, 0.22 ) }
    dend_34 { pt3dadd( -109.586, 65.1311, -60.311, 0.22 ) }
    dend_34 { pt3dadd( -110.449, 65.9324, -61.344, 0.22 ) }
    dend_34 { pt3dadd( -110.664, 66.1427, -61.5965, 0.66 ) }
    dend_34 { pt3dadd( -111.078, 66.5452, -62.0994, 0.66 ) }
    dend_34 { pt3dadd( -111.783, 67.1996, -62.9045, 0.66 ) }
    dend_34 { pt3dadd( -113.11, 68.3542, -64.4152, 0.66 ) }
    dend_34 { pt3dadd( -113.483, 68.6736, -64.8116, 0.22 ) }
    dend_34 { pt3dadd( -114.295, 69.4297, -65.6864, 0.22 ) }
    dend_34 { pt3dadd( -114.295, 69.4297, -65.6864, 0.81 ) }
    dend_34 { pt3dadd( -114.804, 70.0007, -66.2434, 0.81 ) }
    dend_34 { pt3dadd( -115.97, 71.455, -67.4444, 0.29 ) }
    dend_34 { pt3dadd( -116.569, 72.2646, -68.0106, 0.29 ) }
    dend_34 { pt3dadd( -117.405, 73.3642, -68.7263, 0.88 ) }
    dend_34 { pt3dadd( -117.974, 74.1091, -69.1945, 1.18 ) }
    dend_34 { pt3dadd( -118.576, 74.8878, -69.6836, 1.18 ) }
    dend_34 { pt3dadd( -119.2, 75.6546, -70.1873, 0.74 ) }
    dend_34 { pt3dadd( -119.869, 76.4041, -70.671, 0.22 ) }
    dend_34 { pt3dadd( -120.816, 77.362, -71.3411, 0.22 ) }
    dend_34 { pt3dadd( -121.631, 78.1161, -71.8748, 0.22 ) }
    dend_34 { pt3dadd( -122.158, 78.5938, -72.2093, 0.22 ) }
    dend_34 { pt3dadd( -123.404, 79.703, -73.0618, 0.22 ) }
    dend_34 { pt3dadd( -124.078, 80.3073, -73.5156, 0.22 ) }
    dend_34 { pt3dadd( -124.478, 80.6842, -73.7931, 0.81 ) }
    dend_34 { pt3dadd( -124.942, 81.1355, -74.1949, 0.81 ) }
    dend_34 { pt3dadd( -125.769, 81.9801, -74.9921, 0.81 ) }
    dend_34 { pt3dadd( -126.737, 83.08, -76.1049, 0.22 ) }
    dend_34 { pt3dadd( -127.322, 83.871, -76.9749, 0.22 ) }
    dend_34 { pt3dadd( -127.943, 84.8168, -78.0961, 0.59 ) }
    dend_34 { pt3dadd( -128.757, 86.1107, -79.7246, 0.96 ) }
    dend_34 { pt3dadd( -128.974, 86.4581, -80.1784, 0.15 ) }
    dend_34 { pt3dadd( -129.216, 86.8432, -80.7165, 0.15 ) }
    dend_34 { pt3dadd( -129.715, 87.6685, -81.7997, 0.15 ) }
    dend_34 { pt3dadd( -129.962, 88.1044, -82.3593, 0.15 ) }
    dend_34 { pt3dadd( -130.308, 88.7218, -83.0585, 0.81 ) }
    dend_34 { pt3dadd( -130.598, 89.2276, -83.5551, 0.81 ) }
    dend_34 { pt3dadd( -131.453, 90.614, -84.9209, 0.22 ) }
    dend_34 { pt3dadd( -131.695, 91.0016, -85.2719, 0.22 ) }
    dend_34 { pt3dadd( -131.877, 91.3282, -85.5591, 0.66 ) }
    dend_34 { pt3dadd( -132.009, 91.5791, -85.795, 0.66 ) }
    dend_34 { pt3dadd( -132.139, 91.8304, -86.0532, 0.66 ) }
    dend_34 { pt3dadd( -132.549, 92.6006, -86.8938, 0.22 ) }
    dend_34 { pt3dadd( -132.83, 93.1394, -87.4723, 0.88 ) }
    dend_34 { pt3dadd( -133.399, 94.2182, -88.7165, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( -134.134, 95.5576, -90.3671, 0.15 ) }
    dend_34 { pt3dadd( -134.439, 96.0887, -91.0609, 0.88 ) }
    dend_34 { pt3dadd( -134.463, 96.1272, -91.1145, 0.88 ) }
    dend_34 { pt3dadd( -142.004, 100.574, -95.9366, 0.88 ) }
    dend_34 { pt3dadd( -150.02, 105.421, -99.4612, 0.88 ) }
    dend_34 { pt3dadd( -158.208, 110.689, -101.851, 0.88 ) }
    dend_34 { pt3dadd( -166.374, 115.158, -105.483, 0.88 ) }
    dend_34 { pt3dadd( -175.2, 117.648, -109.271, 0.88 ) }
    dend_34 { pt3dadd( -183.255, 122.133, -113.127, 0.88 ) }
    dend_34 { pt3dadd( -190.61, 126.951, -117.914, 0.88 ) }
    dend_34 { pt3dadd( -197.183, 132.035, -123.526, 0.88 ) }
    dend_34 { pt3dadd( -205.272, 135.252, -128.336, 0.88 ) }
    dend_34 { pt3dadd( -213.112, 137.318, -134.043, 0.88 ) }
    dend_34 { pt3dadd( -219.688, 139.828, -141.044, 0.88 ) }
    dend_34 { pt3dadd( -225.057, 142.151, -149.061, 0.88 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 15/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -28.9533, 32.5503, -2.09009, 0.29 ) }
    dend_33 { pt3dadd( -29.0919, 32.895, -2.124, 0.29 ) }
    dend_33 { pt3dadd( -29.4359, 33.7503, -2.20811, 0.29 ) }
    dend_33 { pt3dadd( -30.16, 35.5504, -2.38515, 0.29 ) }
    dend_33 { pt3dadd( -31.4654, 38.7961, -2.70436, 0.29 ) }
    dend_33 { pt3dadd( -31.6212, 39.1833, -2.74244, 0.66 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -51.4111, 5.5769, 18.2142, 1.33 ) }
    dend_28 { pt3dadd( -51.2024, 5.341, 19.6176, 1.33 ) }
    dend_28 { pt3dadd( -51.0268, 5.01273, 20.9408, 0.74 ) }
    dend_28 { pt3dadd( -50.8564, 4.511, 22.494, 0.74 ) }
    dend_28 { pt3dadd( -50.4233, 2.95584, 26.446, 0.74 ) }
    dend_28 { pt3dadd( -50.2282, 2.16399, 28.0946, 1.11 ) }
    dend_28 { pt3dadd( -50.1118, 1.63748, 29.0018, 0.88 ) }
    dend_28 { pt3dadd( -49.9729, 0.720655, 30.2707, 0.88 ) }
    dend_28 { pt3dadd( -49.9189, -0.0474992, 31.2162, 1.11 ) }
    dend_28 { pt3dadd( -49.9511, -0.874584, 32.1404, 0.74 ) }
    dend_28 { pt3dadd( -50.1103, -1.99979, 33.2838, 0.74 ) }
    dend_28 { pt3dadd( -50.3985, -3.00471, 34.57, 0.74 ) }
    dend_28 { pt3dadd( -50.6288, -3.48695, 35.3302, 1.11 ) }
    dend_28 { pt3dadd( -51.2358, -4.44869, 37.1239, 1.11 ) }
    dend_28 { pt3dadd( -52.0826, -5.46078, 39.3697, 1.11 ) }
    dend_28 { pt3dadd( -52.6304, -5.91774, 40.6367, 0.88 ) }
    dend_28 { pt3dadd( -53.4265, -6.35535, 42.3229, 0.88 ) }
    dend_28 { pt3dadd( -54.1648, -6.62676, 43.812, 0.88 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 39/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -51.4111, 5.5769, 18.2142, 0.96 ) }
    dend_27 { pt3dadd( -51.856, 6.15205, 18.7946, 0.96 ) }
    dend_27 { pt3dadd( -52.3262, 6.72664, 19.5531, 0.81 ) }
    dend_27 { pt3dadd( -52.9149, 7.31058, 20.4667, 0.81 ) }
    dend_27 { pt3dadd( -53.4952, 7.74565, 21.3345, 0.81 ) }
    dend_27 { pt3dadd( -54.289, 8.15394, 22.4615, 0.81 ) }
    dend_27 { pt3dadd( -55.1194, 8.44149, 23.5622, 0.81 ) }
    dend_27 { pt3dadd( -56.0397, 8.5503, 24.7328, 0.81 ) }
    dend_27 { pt3dadd( -56.7128, 8.51039, 25.5306, 0.81 ) }
    dend_27 { pt3dadd( -57.4835, 8.39686, 26.3369, 0.81 ) }
    dend_27 { pt3dadd( -58.561, 8.22001, 27.2357, 0.59 ) }
    dend_27 { pt3dadd( -59.1828, 8.15298, 27.6263, 0.59 ) }
    dend_27 { pt3dadd( -60.1712, 8.14957, 28.0877, 0.59 ) }
    dend_27 { pt3dadd( -60.9414, 8.27642, 28.3828, 0.59 ) }
    dend_27 { pt3dadd( -61.6942, 8.55487, 28.6549, 0.59 ) }
    dend_27 { pt3dadd( -62.2044, 8.82991, 28.878, 0.59 ) }
    dend_27 { pt3dadd( -63.0028, 9.39609, 29.5094, 1.03 ) }
    dend_27 { pt3dadd( -63.5291, 9.90478, 30.2054, 0.66 ) }
    dend_27 { pt3dadd( -63.9091, 10.3268, 31.0227, 0.66 ) }
    dend_27 { pt3dadd( -64.2484, 10.6899, 31.9683, 0.66 ) }
    dend_27 { pt3dadd( -64.8519, 11.2502, 33.7899, 0.96 ) }
    dend_27 { pt3dadd( -65.7943, 11.9849, 36.6198, 0.96 ) }
    dend_27 { pt3dadd( -66.1666, 12.2061, 37.685, 0.96 ) }
    dend_27 { pt3dadd( -66.9622, 12.5703, 39.7816, 0.96 ) }
    dend_27 { pt3dadd( -67.599, 12.7805, 41.1925, 0.96 ) }
    dend_27 { pt3dadd( -68.1128, 12.8689, 42.0164, 0.96 ) }
    dend_27 { pt3dadd( -68.8924, 12.938, 42.5782, 1.18 ) }
    dend_27 { pt3dadd( -69.8354, 13.0082, 42.8005, 1.18 ) }
    dend_27 { pt3dadd( -70.3595, 13.0609, 42.8247, 1.18 ) }
    dend_27 { pt3dadd( -71.8749, 13.3412, 42.6361, 0.44 ) }
    dend_27 { pt3dadd( -72.7397, 13.5322, 42.5392, 0.44 ) }
    dend_27 { pt3dadd( -73.67, 13.7637, 42.5278, 0.44 ) }
    dend_27 { pt3dadd( -74.1691, 13.8878, 42.6145, 0.96 ) }
    dend_27 { pt3dadd( -75.1906, 14.1464, 42.9611, 1.11 ) }
    dend_27 { pt3dadd( -75.6985, 14.2662, 43.1955, 1.11 ) }
    dend_27 { pt3dadd( -77.2329, 14.582, 44.0474, 0.59 ) }
    dend_27 { pt3dadd( -78.3268, 14.7735, 44.6759, 0.59 ) }
    dend_27 { pt3dadd( -79.7298, 14.9648, 45.4607, 0.74 ) }
    dend_27 { pt3dadd( -80.1698, 15.0255, 45.6858, 0.74 ) }
    dend_27 { pt3dadd( -80.9126, 15.1347, 46.0449, 0.59 ) }
    dend_27 { pt3dadd( -81.7368, 15.2832, 46.3776, 0.59 ) }
    dend_27 { pt3dadd( -82.157, 15.3748, 46.4949, 0.59 ) }
    dend_27 { pt3dadd( -82.8615, 15.5469, 46.6612, 0.59 ) }
    dend_27 { pt3dadd( -83.8335, 15.7944, 46.8246, 0.59 ) }
    dend_27 { pt3dadd( -84.7647, 16.0171, 46.9798, 0.81 ) }
    dend_27 { pt3dadd( -85.7101, 16.2524, 47.1348, 1.11 ) }
    dend_27 { pt3dadd( -86.6292, 16.4938, 47.309, 1.11 ) }
    dend_27 { pt3dadd( -87.1687, 16.6523, 47.4164, 0.44 ) }
    dend_27 { pt3dadd( -87.7932, 16.8654, 47.5314, 0.44 ) }
    dend_27 { pt3dadd( -88.6899, 17.2228, 47.6717, 0.44 ) }
    dend_27 { pt3dadd( -89.4501, 17.5724, 47.7632, 0.44 ) }
    dend_27 { pt3dadd( -90.0385, 17.8746, 47.8344, 0.44 ) }
    dend_27 { pt3dadd( -91.377, 18.5528, 47.984, 0.44 ) }
    dend_27 { pt3dadd( -92.152, 18.8996, 48.1198, 0.44 ) }
    dend_27 { pt3dadd( -93.1507, 19.2995, 48.3711, 0.44 ) }
    dend_27 { pt3dadd( -93.6877, 19.4957, 48.5389, 0.29 ) }
    dend_27 { pt3dadd( -94.2085, 19.6557, 48.7865, 0.29 ) }
    dend_27 { pt3dadd( -95.1693, 19.8945, 49.4827, 0.29 ) }
    dend_27 { pt3dadd( -96.3662, 20.1101, 50.7132, 0.29 ) }
    dend_27 { pt3dadd( -96.8522, 20.1818, 51.3625, 0.66 ) }
    dend_27 { pt3dadd( -97.1911, 20.2353, 51.8912, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -98.2399, 20.4687, 53.6485, 0.52 ) }
    dend_27 { pt3dadd( -98.9268, 20.6868, 54.878, 0.37 ) }
    dend_27 { pt3dadd( -99.0757, 20.7505, 55.1455, 0.66 ) }
    dend_27 { pt3dadd( -99.6924, 21.0364, 56.0883, 0.96 ) }
    dend_27 { pt3dadd( -100.124, 21.2131, 56.6528, 1.25 ) }
    dend_27 { pt3dadd( -100.609, 21.3669, 57.1434, 1.25 ) }
    dend_27 { pt3dadd( -101.93, 21.6999, 58.0507, 1.03 ) }
    dend_27 { pt3dadd( -102.565, 21.8242, 58.3842, 0.74 ) }
    dend_27 { pt3dadd( -103.483, 21.9341, 58.7778, 0.74 ) }
    dend_27 { pt3dadd( -104.218, 21.9707, 59.0031, 0.74 ) }
    dend_27 { pt3dadd( -105.37, 21.9766, 59.2643, 0.74 ) }
    dend_27 { pt3dadd( -106.326, 21.9584, 59.4105, 1.11 ) }
    dend_27 { pt3dadd( -107.15, 21.9438, 59.4646, 1.11 ) }
    dend_27 { pt3dadd( -108.188, 21.939, 59.4871, 1.11 ) }
    dend_27 { pt3dadd( -109.676, 21.9864, 59.4616, 1.4 ) }
    dend_27 { pt3dadd( -110.421, 22.0572, 59.3967, 0.66 ) }
    dend_27 { pt3dadd( -110.905, 22.1394, 59.3306, 0.52 ) }
    dend_27 { pt3dadd( -111.912, 22.3907, 59.1509, 0.44 ) }
    dend_27 { pt3dadd( -112.614, 22.6282, 59.009, 0.44 ) }
    dend_27 { pt3dadd( -113.341, 22.9444, 58.8569, 1.03 ) }
    dend_27 { pt3dadd( -114.549, 23.5386, 58.5727, 0.81 ) }
    dend_27 { pt3dadd( -114.995, 23.7639, 58.4712, 0.59 ) }
    dend_27 { pt3dadd( -115.815, 24.1796, 58.286, 0.59 ) }
    dend_27 { pt3dadd( -116.735, 24.6149, 58.1115, 0.96 ) }
    dend_27 { pt3dadd( -117.453, 24.8938, 58.0117, 0.96 ) }
    dend_27 { pt3dadd( -117.954, 25.0458, 57.9714, 0.74 ) }
    dend_27 { pt3dadd( -118.854, 25.2753, 57.9463, 0.66 ) }
    dend_27 { pt3dadd( -119.358, 25.3884, 57.934, 0.66 ) }
    dend_27 { pt3dadd( -120.822, 25.7064, 57.9126, 0.66 ) }
    dend_27 { pt3dadd( -122.364, 26.0425, 57.8839, 0.66 ) }
    dend_27 { pt3dadd( -123.07, 26.2052, 57.8732, 0.66 ) }
    dend_27 { pt3dadd( -123.529, 26.3221, 57.8716, 1.11 ) }
    dend_27 { pt3dadd( -124.099, 26.4936, 57.8658, 1.11 ) }
    dend_27 { pt3dadd( -125.293, 26.9421, 57.873, 1.11 ) }
    dend_27 { pt3dadd( -125.781, 27.1561, 57.8839, 0.74 ) }
    dend_27 { pt3dadd( -126.342, 27.4154, 57.9055, 0.52 ) }
    dend_27 { pt3dadd( -126.972, 27.6843, 57.9284, 0.52 ) }
    dend_27 { pt3dadd( -127.903, 28.0433, 57.9781, 0.52 ) }
    dend_27 { pt3dadd( -128.671, 28.3089, 58.0243, 0.74 ) }
    dend_27 { pt3dadd( -129.605, 28.5835, 58.1042, 1.03 ) }
    dend_27 { pt3dadd( -130.773, 28.8791, 58.2695, 1.18 ) }
    dend_27 { pt3dadd( -131.784, 29.0858, 58.44, 1.18 ) }
    dend_27 { pt3dadd( -132.718, 29.2454, 58.6102, 0.88 ) }
    dend_27 { pt3dadd( -133.805, 29.3918, 58.8564, 0.88 ) }
    dend_27 { pt3dadd( -134.955, 29.5221, 59.1901, 0.74 ) }
    dend_27 { pt3dadd( -136.351, 29.6825, 59.6859, 0.74 ) }
    dend_27 { pt3dadd( -137.524, 29.8529, 60.1665, 0.74 ) }
    dend_27 { pt3dadd( -138.539, 30.0347, 60.6651, 0.74 ) }
    dend_27 { pt3dadd( -139.618, 30.2834, 61.2994, 0.74 ) }
    dend_27 { pt3dadd( -140.556, 30.5805, 61.9267, 0.52 ) }
    dend_27 { pt3dadd( -141.074, 30.7932, 62.2911, 0.52 ) }
    dend_27 { pt3dadd( -142.173, 31.338, 63.0388, 0.52 ) }
    dend_27 { pt3dadd( -143.327, 31.9822, 63.8785, 0.52 ) }
    dend_27 { pt3dadd( -144.306, 32.5699, 64.5991, 0.52 ) }
    dend_27 { pt3dadd( -144.664, 32.7999, 64.8369, 0.15 ) }
    dend_27 { pt3dadd( -145.409, 33.2934, 65.3007, 0.15 ) }
    dend_27 { pt3dadd( -146.588, 34.0479, 66.0561, 0.15 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 57/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -125.67, 39.0196, -60.0024, 0.52 ) }
    dend_25 { pt3dadd( -127.18, 38.0401, -60.8352, 0.52 ) }
    dend_25 { pt3dadd( -128.056, 37.555, -61.293, 0.52 ) }
    dend_25 { pt3dadd( -129.034, 37.0555, -61.7919, 0.29 ) }
    dend_25 { pt3dadd( -129.963, 36.5933, -62.2621, 0.29 ) }
    dend_25 { pt3dadd( -131.048, 36.049, -62.8016, 0.29 ) }
    dend_25 { pt3dadd( -132.6, 35.2554, -63.5203, 0.29 ) }
    dend_25 { pt3dadd( -133.279, 34.9427, -63.8363, 0.29 ) }
    dend_25 { pt3dadd( -134.36, 34.4658, -64.3602, 0.15 ) }
    dend_25 { pt3dadd( -134.927, 34.2149, -64.6328, 0.15 ) }
    dend_25 { pt3dadd( -136.177, 33.6373, -65.2938, 0.15 ) }
    dend_25 { pt3dadd( -137.391, 33.0532, -65.9732, 0.15 ) }
    dend_25 { pt3dadd( -138.959, 32.2172, -66.7499, 0.15 ) }
    dend_25 { pt3dadd( -143.648, 28.3742, -70.1151, 0.15 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 71/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -125.67, 39.0196, -60.0024, 1.62 ) }
    dend_24 { pt3dadd( -126.634, 39.8613, -61.1227, 1.62 ) }
    dend_24 { pt3dadd( -127.583, 40.5951, -62.1268, 0.44 ) }
    dend_24 { pt3dadd( -128.791, 41.4403, -63.243, 0.44 ) }
    dend_24 { pt3dadd( -129.567, 41.9212, -63.9167, 0.37 ) }
    dend_24 { pt3dadd( -131.105, 42.7069, -65.2535, 0.37 ) }
    dend_24 { pt3dadd( -132.567, 43.3554, -66.458, 0.22 ) }
    dend_24 { pt3dadd( -133.579, 43.7365, -67.2521, 0.22 ) }
    dend_24 { pt3dadd( -134.991, 44.1753, -68.2319, 0.22 ) }
    dend_24 { pt3dadd( -136.799, 44.625, -69.3012, 0.22 ) }
    dend_24 { pt3dadd( -139.501, 45.1138, -70.7888, 0.22 ) }
    dend_24 { pt3dadd( -140.878, 45.2509, -71.4398, 0.22 ) }
    dend_24 { pt3dadd( -141.625, 45.2769, -71.7641, 0.81 ) }
    dend_24 { pt3dadd( -142.469, 45.2524, -72.1193, 1.18 ) }
    dend_24 { pt3dadd( -143.316, 45.1459, -72.4171, 1.18 ) }
    dend_24 { pt3dadd( -145.492, 44.6595, -72.9254, 0.22 ) }
    dend_24 { pt3dadd( -146.731, 44.2855, -73.1674, 0.22 ) }
    dend_24 { pt3dadd( -147.386, 44.0438, -73.3056, 0.88 ) }
    dend_24 { pt3dadd( -148.029, 43.7984, -73.5109, 0.88 ) }
    dend_24 { pt3dadd( -149.337, 43.3232, -74.1094, 0.29 ) }
    dend_24 { pt3dadd( -150.952, 42.8097, -74.9458, 0.29 ) }
    dend_24 { pt3dadd( -152.963, 42.3102, -76.1621, 0.15 ) }
    dend_24 { pt3dadd( -156.02, 41.9161, -78.1201, 0.15 ) }
    dend_24 { pt3dadd( -158.743, 41.8545, -79.8924, 1.25 ) }
    dend_24 { pt3dadd( -161.304, 42.0459, -81.6577, 0.52 ) }
    dend_24 { pt3dadd( -162.977, 42.3614, -82.8377, 0.52 ) }
    dend_24 { pt3dadd( -165.105, 42.9961, -84.3054, 0.52 ) }
    dend_24 { pt3dadd( -167.798, 44.1064, -86.015, 0.52 ) }
    dend_24 { pt3dadd( -168.91, 44.7167, -86.6251, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_24 { pt3dadd( -170.274, 45.5325, -87.1133, 0.52 ) }
    dend_24 { pt3dadd( -171.856, 46.5896, -87.4863, 0.52 ) }
    dend_24 { pt3dadd( -172.485, 47.0448, -87.5979, 0.52 ) }
    dend_24 { pt3dadd( -172.999, 47.4481, -87.6617, 0.22 ) }
    dend_24 { pt3dadd( -174.126, 48.3801, -87.8582, 0.22 ) }
    dend_24 { pt3dadd( -174.953, 49.0871, -87.9764, 0.22 ) }
    dend_24 { pt3dadd( -175.963, 49.9748, -88.0613, 0.22 ) }
    dend_24 { pt3dadd( -176.782, 50.7256, -88.16, 0.22 ) }
    dend_24 { pt3dadd( -178.912, 52.7267, -88.4927, 0.22 ) }
    dend_24 { pt3dadd( -179.405, 53.192, -88.5872, 0.66 ) }
    dend_24 { pt3dadd( -180.253, 53.9888, -88.7713, 0.22 ) }
    dend_24 { pt3dadd( -181.871, 55.5638, -89.1327, 0.22 ) }
    dend_24 { pt3dadd( -192.46, 58.7155, -94.2061, 0.22 ) }
    dend_24 { pt3dadd( -203.13, 63.9891, -96.9685, 0.22 ) }
    dend_24 { pt3dadd( -214.264, 68.0179, -99.8296, 0.22 ) }
    dend_24 { pt3dadd( -226.185, 69.8125, -101.308, 0.22 ) }
    dend_24 { pt3dadd( -237.83, 69.9032, -104.747, 0.22 ) }
    dend_24 { pt3dadd( -249.877, 69.9066, -106.262, 0.22 ) }
    dend_24 { pt3dadd( -261.934, 70.6293, -107.48, 0.22 ) }
    dend_24 { pt3dadd( -274.068, 70.2032, -107.749, 0.22 ) }
    dend_24 { pt3dadd( -286.055, 68.9613, -106.216, 0.22 ) }
    dend_24 { pt3dadd( -297.674, 69.1295, -102.699, 0.22 ) }
    dend_24 { pt3dadd( -309.563, 69.6187, -100.288, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 34.4714, 7.63143, 4.8373, 0.74 ) }
    dend_18 { pt3dadd( 36.6544, 8.26114, 4.98321, 0.74 ) }
    dend_18 { pt3dadd( 37.8588, 8.66398, 5.09605, 0.74 ) }
    dend_18 { pt3dadd( 37.939, 8.69091, 5.10321, 0.74 ) }
    dend_18 { pt3dadd( 39.2115, 9.11748, 5.21393, 0.96 ) }
    dend_18 { pt3dadd( 39.4016, 9.18007, 5.23006, 0.96 ) }
    dend_18 { pt3dadd( 40.7249, 9.61076, 5.34036, 0.74 ) }
    dend_18 { pt3dadd( 42.7668, 10.2617, 5.48092, 0.44 ) }
    dend_18 { pt3dadd( 44.3161, 10.7278, 5.58139, 0.81 ) }
    dend_18 { pt3dadd( 44.3979, 10.7498, 5.58585, 0.81 ) }
    dend_18 { pt3dadd( 45.8968, 11.1183, 5.58194, 1.03 ) }
    dend_18 { pt3dadd( 45.9909, 11.1407, 5.57647, 1.03 ) }
    dend_18 { pt3dadd( 47.547, 11.4859, 5.37888, 1.03 ) }
    dend_18 { pt3dadd( 47.6381, 11.5128, 5.35992, 1.03 ) }
    dend_18 { pt3dadd( 48.6865, 11.9214, 5.09572, 1.03 ) }
    dend_18 { pt3dadd( 50.0054, 12.5905, 4.78188, 0.66 ) }
    dend_18 { pt3dadd( 50.6724, 13.0434, 4.62163, 0.66 ) }
    dend_18 { pt3dadd( 50.8559, 13.2269, 4.5928, 0.66 ) }
    dend_18 { pt3dadd( 51.5139, 14.0453, 4.70221, 0.66 ) }
    dend_18 { pt3dadd( 51.5938, 14.1431, 4.74032, 0.66 ) }
    dend_18 { pt3dadd( 52.3144, 14.7981, 5.4687, 0.66 ) }
    dend_18 { pt3dadd( 52.4409, 14.861, 5.61266, 0.66 ) }
    dend_18 { pt3dadd( 53.4738, 15.1343, 6.8034, 0.66 ) }
    dend_18 { pt3dadd( 55.1233, 15.3281, 8.55441, 1.03 ) }
    dend_18 { pt3dadd( 55.4438, 15.328, 8.87815, 1.03 ) }
    dend_18 { pt3dadd( 57.0669, 15.2729, 10.6632, 0.66 ) }
    dend_18 { pt3dadd( 57.8382, 15.2514, 11.5366, 0.66 ) }
    dend_18 { pt3dadd( 57.9124, 15.2549, 11.6199, 0.66 ) }
    dend_18 { pt3dadd( 58.7903, 15.4704, 12.5682, 0.66 ) }
    dend_18 { pt3dadd( 58.8384, 15.5051, 12.6118, 0.66 ) }
    dend_18 { pt3dadd( 60.2905, 16.8955, 13.8044, 1.4 ) }
    dend_18 { pt3dadd( 60.9786, 17.6554, 14.3332, 1.4 ) }
    dend_18 { pt3dadd( 61.492, 18.2157, 14.7448, 1.4 ) }
    dend_18 { pt3dadd( 62.8673, 19.7332, 15.8282, 0.88 ) }
    dend_18 { pt3dadd( 64.4353, 21.5004, 17.0363, 0.52 ) }
    dend_18 { pt3dadd( 66.3387, 23.5839, 18.3814, 0.52 ) }
    dend_18 { pt3dadd( 66.4337, 23.6825, 18.4384, 0.52 ) }
    dend_18 { pt3dadd( 68.3179, 25.5206, 19.6158, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 61/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 34.4714, 7.63143, 4.8373, 0.96 ) }
    dend_15 { pt3dadd( 34.526, 8.78545, 5.58328, 0.96 ) }
    dend_15 { pt3dadd( 34.5776, 9.63768, 6.0784, 0.96 ) }
    dend_15 { pt3dadd( 34.5881, 9.79206, 6.16762, 0.96 ) }
    dend_15 { pt3dadd( 34.7149, 11.7773, 7.31442, 0.96 ) }
    dend_15 { pt3dadd( 34.7192, 11.8444, 7.35315, 0.96 ) }
    dend_15 { pt3dadd( 34.778, 12.7655, 7.88525, 0.96 ) }
    dend_15 { pt3dadd( 34.785, 12.8431, 7.92778, 0.96 ) }
    dend_15 { pt3dadd( 34.8729, 14.0176, 8.67784, 0.96 ) }
    dend_15 { pt3dadd( 34.8789, 14.1046, 8.73075, 0.96 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 71/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 45.5845, 7.7139, 6.5433, 0.88 ) }
    dend_11 { pt3dadd( 45.7152, 7.99196, 6.50867, 0.88 ) }
    dend_11 { pt3dadd( 45.9743, 8.56805, 6.45148, 0.88 ) }
    dend_11 { pt3dadd( 45.9881, 8.60187, 6.45021, 0.88 ) }
    dend_11 { pt3dadd( 46.4037, 9.6659, 6.43814, 0.88 ) }
    dend_11 { pt3dadd( 46.4188, 9.70491, 6.43849, 0.88 ) }
    dend_11 { pt3dadd( 46.7327, 10.5154, 6.45448, 0.88 ) }
    dend_11 { pt3dadd( 46.7519, 10.5675, 6.4568, 0.88 ) }
    dend_11 { pt3dadd( 47.1208, 11.5389, 6.52491, 0.88 ) }
    dend_11 { pt3dadd( 47.1638, 11.651, 6.53941, 0.88 ) }
    dend_11 { pt3dadd( 47.285, 11.983, 6.60986, 0.88 ) }
    dend_11 { pt3dadd( 47.2968, 12.0171, 6.61696, 0.88 ) }
    dend_11 { pt3dadd( 47.4745, 12.5841, 6.73319, 0.66 ) }
    dend_11 { pt3dadd( 47.548, 12.8398, 6.7846, 0.88 ) }
    dend_11 { pt3dadd( 47.6757, 13.3408, 6.88343, 0.66 ) }
    dend_11 { pt3dadd( 47.8497, 14.2062, 7.04818, 0.66 ) }
    dend_11 { pt3dadd( 47.9426, 14.7437, 7.1452, 0.66 ) }
    dend_11 { pt3dadd( 48.0686, 15.4997, 7.27538, 0.66 ) }
    dend_11 { pt3dadd( 48.0821, 15.5871, 7.28959, 0.66 ) }
    dend_11 { pt3dadd( 48.1585, 16.0424, 7.34241, 0.66 ) }
    dend_11 { pt3dadd( 48.3802, 17.1703, 7.41248, 0.52 ) }
    dend_11 { pt3dadd( 48.4347, 17.3693, 7.41657, 0.81 ) }
    dend_11 { pt3dadd( 48.5168, 17.6035, 7.41399, 0.66 ) }
    dend_11 { pt3dadd( 48.5477, 17.6791, 7.4105, 0.66 ) }
    dend_11 { pt3dadd( 48.8481, 18.3501, 7.36905, 0.66 ) }
    dend_11 { pt3dadd( 48.9101, 18.4737, 7.36079, 0.66 ) }
    dend_11 { pt3dadd( 49.1968, 19.0574, 7.34843, 0.66 ) }
    dend_11 { pt3dadd( 49.2273, 19.1296, 7.35071, 0.66 ) }
    dend_11 { pt3dadd( 49.4122, 19.6287, 7.41279, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 49.4462, 19.7289, 7.43238, 0.66 ) }
    dend_11 { pt3dadd( 49.637, 20.2967, 7.5776, 0.44 ) }
    dend_11 { pt3dadd( 49.9296, 21.1313, 7.79816, 0.44 ) }
    dend_11 { pt3dadd( 49.9436, 21.1695, 7.80855, 0.44 ) }
    dend_11 { pt3dadd( 50.3263, 22.0981, 8.04097, 0.44 ) }
    dend_11 { pt3dadd( 50.541, 22.5599, 8.14648, 1.03 ) }
    dend_11 { pt3dadd( 50.8131, 23.1404, 8.26524, 1.33 ) }
    dend_11 { pt3dadd( 50.9585, 23.4626, 8.30116, 1.33 ) }
    dend_11 { pt3dadd( 51.0098, 23.5919, 8.29747, 1.33 ) }
    dend_11 { pt3dadd( 51.251, 24.3119, 8.21148, 1.33 ) }
    dend_11 { pt3dadd( 51.414, 24.9168, 8.08784, 1.18 ) }
    dend_11 { pt3dadd( 51.5592, 25.5967, 7.88483, 0.44 ) }
    dend_11 { pt3dadd( 51.7446, 26.7262, 7.47882, 0.44 ) }
    dend_11 { pt3dadd( 51.8789, 27.6908, 7.10711, 0.44 ) }
    dend_11 { pt3dadd( 51.9079, 27.8982, 7.02807, 0.81 ) }
    dend_11 { pt3dadd( 51.9547, 28.2498, 6.89283, 0.81 ) }
    dend_11 { pt3dadd( 52.1554, 29.4541, 6.42093, 0.44 ) }
    dend_11 { pt3dadd( 52.1629, 29.4873, 6.40827, 0.44 ) }
    dend_11 { pt3dadd( 52.3055, 29.9904, 6.24122, 0.44 ) }
    dend_11 { pt3dadd( 52.5646, 30.7655, 6.00524, 0.44 ) }
    dend_11 { pt3dadd( 52.593, 30.8456, 5.98132, 0.44 ) }
    dend_11 { pt3dadd( 52.9951, 31.989, 5.681, 0.44 ) }
    dend_11 { pt3dadd( 53.0067, 32.0229, 5.67431, 0.44 ) }
    dend_11 { pt3dadd( 53.235, 32.7186, 5.54266, 0.44 ) }
    dend_11 { pt3dadd( 53.2491, 32.7635, 5.53346, 0.44 ) }
    dend_11 { pt3dadd( 53.3783, 33.1822, 5.4545, 1.03 ) }
    dend_11 { pt3dadd( 53.5324, 33.6507, 5.38752, 1.03 ) }
    dend_11 { pt3dadd( 53.545, 33.6851, 5.38528, 1.03 ) }
    dend_11 { pt3dadd( 53.8496, 34.4673, 5.35641, 0.66 ) }
    dend_11 { pt3dadd( 54.1087, 35.0672, 5.35038, 0.66 ) }
    dend_11 { pt3dadd( 54.2826, 35.4426, 5.34602, 0.88 ) }
    dend_11 { pt3dadd( 54.3313, 35.5418, 5.34499, 0.88 ) }
    dend_11 { pt3dadd( 54.5229, 35.9272, 5.34663, 0.88 ) }
    dend_11 { pt3dadd( 54.5406, 35.965, 5.34789, 0.88 ) }
    dend_11 { pt3dadd( 54.7564, 36.4464, 5.38672, 1.25 ) }
    dend_11 { pt3dadd( 54.9755, 36.9636, 5.45867, 1.47 ) }
    dend_11 { pt3dadd( 55.1567, 37.4089, 5.52213, 1.47 ) }
    dend_11 { pt3dadd( 55.3416, 37.8795, 5.59201, 0.88 ) }
    dend_11 { pt3dadd( 55.4894, 38.2745, 5.65472, 0.74 ) }
    dend_11 { pt3dadd( 55.8613, 39.2943, 5.83369, 0.74 ) }
    dend_11 { pt3dadd( 55.9477, 39.5492, 5.88793, 0.74 ) }
    dend_11 { pt3dadd( 57.9199, 44.3601, 5.46391, 0.74 ) }
    dend_11 { pt3dadd( 60.3249, 48.976, 5.39692, 0.74 ) }
    dend_11 { pt3dadd( 62.0044, 53.8825, 6.16645, 0.74 ) }
    dend_11 { pt3dadd( 64.2345, 58.4492, 7.35569, 0.74 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 91.7104, -26.1397, 75.4223, 0.66 ) }
    dend_4 { pt3dadd( 89.7704, -23.3479, 83.3605, 0.66 ) }
    dend_4 { pt3dadd( 89.609, -23.1156, 84.021, 0.66 ) }
    dend_4 { pt3dadd( 89.174, -22.4897, 85.8007, 0.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 49/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 91.7104, -26.1397, 75.4223, 0.52 ) }
    dend_3 { pt3dadd( 92.8165, -23.3218, 84.9189, 0.52 ) }
    dend_3 { pt3dadd( 92.8536, -23.2621, 85.126, 0.52 ) }
    dend_3 { pt3dadd( 93.0082, -23.0793, 85.7781, 0.52 ) }
    dend_3 { pt3dadd( 93.2005, -22.9647, 86.2531, 0.52 ) }
    dend_3 { pt3dadd( 93.7085, -22.8869, 87.0925, 0.52 ) }
    dend_3 { pt3dadd( 94.0227, -22.8879, 87.5332, 0.52 ) }
    dend_3 { pt3dadd( 95.1995, -23.3755, 88.3605, 0.52 ) }
    dend_3 { pt3dadd( 95.2733, -23.411, 88.4234, 0.52 ) }
    dend_3 { pt3dadd( 96.8706, -24.2278, 89.9326, 0.44 ) }
    dend_3 { pt3dadd( 98.644, -25.2467, 91.8388, 0.44 ) }
    dend_3 { pt3dadd( 98.7222, -25.299, 91.9378, 0.44 ) }
    dend_3 { pt3dadd( 99.8659, -26.202, 93.6398, 0.44 ) }
    dend_3 { pt3dadd( 99.9036, -26.2404, 93.7112, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 63/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -16.427, -161.653, 24.8761, 0.29 ) }
    dend_62 { pt3dadd( -15.5075, -162.482, 24.7832, 0.29 ) }
    dend_62 { pt3dadd( -15.3193, -162.66, 24.7582, 0.29 ) }
    dend_62 { pt3dadd( -14.5535, -163.502, 24.6259, 0.29 ) }
    dend_62 { pt3dadd( -14.4779, -163.591, 24.6114, 0.29 ) }
    dend_62 { pt3dadd( -13.6529, -164.7, 24.4293, 0.29 ) }
    dend_62 { pt3dadd( -12.8662, -165.825, 24.2426, 0.29 ) }
    dend_62 { pt3dadd( -12.8242, -165.898, 24.2338, 0.29 ) }
    dend_62 { pt3dadd( -12.2656, -167.078, 24.1795, 0.66 ) }
    dend_62 { pt3dadd( -12.2321, -167.168, 24.1868, 0.66 ) }
    dend_62 { pt3dadd( -11.85, -168.392, 24.376, 0.66 ) }
    dend_62 { pt3dadd( -11.8313, -168.473, 24.3931, 0.66 ) }
    dend_62 { pt3dadd( -11.4021, -170.807, 24.9319, 0.52 ) }
    dend_62 { pt3dadd( -11.1895, -172.112, 25.2136, 0.52 ) }
    dend_62 { pt3dadd( -10.9631, -173.67, 25.5491, 1.03 ) }
    dend_62 { pt3dadd( -10.8687, -174.27, 25.6622, 1.4 ) }
    dend_62 { pt3dadd( -10.6547, -175.402, 25.8328, 1.18 ) }
    dend_62 { pt3dadd( -10.4189, -176.343, 25.9774, 0.59 ) }
    dend_62 { pt3dadd( -10.0227, -177.576, 26.0438, 0.59 ) }
    dend_62 { pt3dadd( -9.98615, -177.666, 26.0432, 0.59 ) }
    dend_62 { pt3dadd( -9.53086, -178.691, 25.9643, 0.81 ) }
    dend_62 { pt3dadd( -9.00495, -179.766, 25.8801, 0.81 ) }
    dend_62 { pt3dadd( -8.0108, -181.697, 25.9119, 0.37 ) }
    dend_62 { pt3dadd( -7.15432, -183.387, 26.1009, 0.15 ) }
    dend_62 { pt3dadd( -7.12252, -183.463, 26.1171, 0.15 ) }
    dend_62 { pt3dadd( -6.91496, -184.399, 26.5047, 0.66 ) }
    dend_62 { pt3dadd( -6.90999, -184.472, 26.5463, 0.66 ) }
    dend_62 { pt3dadd( -6.92407, -186.313, 27.7362, 0.66 ) }
    dend_62 { pt3dadd( -6.93136, -186.433, 27.8137, 0.66 ) }
    dend_62 { pt3dadd( -6.95438, -187.132, 28.3393, 0.66 ) }
    dend_62 { pt3dadd( -6.84039, -189.167, 29.7937, 0.37 ) }
    dend_62 { pt3dadd( -6.47852, -191.26, 31.3926, 0.37 ) }
    dend_62 { pt3dadd( -6.46068, -191.334, 31.4498, 0.37 ) }
    dend_62 { pt3dadd( -6.12885, -192.296, 32.1901, 0.37 ) }
    dend_62 { pt3dadd( -5.07877, -194.787, 34.1068, 0.37 ) }
    dend_62 { pt3dadd( -4.24103, -196.492, 35.3695, 0.37 ) }
    dend_62 { pt3dadd( -2.91827, -198.859, 37.0052, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_62 { pt3dadd( -2.86677, -198.94, 37.0583, 0.37 ) }
    dend_62 { pt3dadd( -1.70019, -200.667, 38.1909, 0.37 ) }
    dend_62 { pt3dadd( -1.40958, -201.058, 38.4422, 0.88 ) }
    dend_62 { pt3dadd( -0.795459, -201.879, 38.8305, 0.22 ) }
    dend_62 { pt3dadd( -0.249201, -202.713, 39.1905, 0.22 ) }
    dend_62 { pt3dadd( 0.493934, -204.032, 39.2255, 0.22 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 6/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -16.427, -161.653, 24.8761, 0.44 ) }
    dend_61 { pt3dadd( -16.3312, -163.014, 24.7155, 0.44 ) }
    dend_61 { pt3dadd( -16.2497, -164.455, 24.5164, 0.44 ) }
    dend_61 { pt3dadd( -16.2491, -164.536, 24.5047, 0.44 ) }
    dend_61 { pt3dadd( -16.2858, -166.39, 24.2155, 0.44 ) }
    dend_61 { pt3dadd( -16.2886, -166.471, 24.2023, 0.44 ) }
    dend_61 { pt3dadd( -16.3356, -167.745, 23.947, 0.44 ) }
    dend_61 { pt3dadd( -16.3495, -167.914, 23.9059, 0.44 ) }
    dend_61 { pt3dadd( -16.5233, -169.68, 23.4603, 0.81 ) }
    dend_61 { pt3dadd( -16.5537, -170.054, 23.4116, 0.81 ) }
    dend_61 { pt3dadd( -16.5599, -170.123, 23.4036, 0.81 ) }
    dend_61 { pt3dadd( -16.6463, -171.129, 23.3148, 0.37 ) }
    dend_61 { pt3dadd( -16.8196, -173.373, 23.2346, 0.29 ) }
    dend_61 { pt3dadd( -16.8783, -174.513, 23.2284, 0.29 ) }
    dend_61 { pt3dadd( -16.9157, -177.067, 23.4028, 0.29 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 21/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 1.81832, -43.7106, 6.50994, 0.15 ) }
    dend_57 { pt3dadd( 11.4241, -44.5634, 12.9363, 0.15 ) }
    dend_57 { pt3dadd( 21.5835, -45.0737, 18.4843, 0.15 ) }
    dend_57 { pt3dadd( 30.711, -43.583, 25.4778, 0.15 ) }
    dend_57 { pt3dadd( 40.5515, -43.7561, 31.5906, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 26/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 1.81832, -43.7106, 6.50994, 0.15 ) }
    dend_56 { pt3dadd( 8.9032, -44.2553, 10.0774, 0.15 ) }
    dend_56 { pt3dadd( 16.3906, -44.2411, 12.7479, 0.15 ) }
    dend_56 { pt3dadd( 23.7885, -45.7645, 15.263, 0.15 ) }
    dend_56 { pt3dadd( 31.4104, -46.7976, 17.2878, 0.15 ) }
    dend_56 { pt3dadd( 38.8682, -47.2943, 19.9973, 0.15 ) }
    dend_56 { pt3dadd( 45.6618, -48.5604, 23.9466, 0.15 ) }
    dend_56 { pt3dadd( 52.2969, -50.5142, 27.9124, 0.15 ) }
    dend_56 { pt3dadd( 58.7547, -51.3465, 32.4823, 0.15 ) }
    dend_56 { pt3dadd( 64.7341, -52.7081, 37.5628, 0.15 ) }
    dend_56 { pt3dadd( 70.2012, -54.4946, 43.086, 0.15 ) }
    dend_56 { pt3dadd( 74.3381, -56.9037, 49.4905, 0.15 ) }
    dend_56 { pt3dadd( 79.4577, -59.8765, 54.8869, 0.15 ) }
    dend_56 { pt3dadd( 84.9069, -60.9888, 60.583, 0.15 ) }
    dend_56 { pt3dadd( 90.1824, -61.6954, 66.4956, 0.15 ) }
    dend_56 { pt3dadd( 95.0237, -60.8088, 72.7397, 0.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 42/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 31.824, -44.681, 25.6558, 0.15 ) }
    dend_54 { pt3dadd( 38.596, -44.9713, 32.2193, 0.15 ) }
    dend_54 { pt3dadd( 44.7672, -43.3342, 39.1746, 0.15 ) }
    dend_54 { pt3dadd( 51.1777, -41.2526, 45.7955, 0.15 ) }
    dend_54 { pt3dadd( 58.5077, -37.8815, 50.7693, 0.15 ) }
    dend_54 { pt3dadd( 66.1123, -33.7753, 54.7209, 0.15 ) }
    dend_54 { pt3dadd( 74.2757, -30.6007, 58.3275, 0.15 ) }
    dend_54 { pt3dadd( 82.5751, -26.5553, 60.5689, 0.15 ) }
    dend_54 { pt3dadd( 90.4176, -21.2565, 61.8842, 0.15 ) }
    dend_54 { pt3dadd( 98.2449, -15.7562, 61.9703, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 52/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 31.824, -44.681, 25.6558, 0.15 ) }
    dend_53 { pt3dadd( 41.0707, -45.1376, 30.5347, 0.15 ) }
    dend_53 { pt3dadd( 49.8905, -43.7929, 36.0092, 0.15 ) }
    dend_53 { pt3dadd( 57.6025, -41.0071, 42.5432, 0.15 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 56/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -69.9651, -50.7959, -5.64294, 0.22 ) }
    dend_48 { pt3dadd( -70.8976, -52.601, -5.72038, 0.22 ) }
    dend_48 { pt3dadd( -71.5263, -53.5851, -5.69898, 0.22 ) }
    dend_48 { pt3dadd( -71.5623, -53.6373, -5.69587, 0.22 ) }
    dend_48 { pt3dadd( -73.1273, -55.7111, -5.47573, 0.22 ) }
    dend_48 { pt3dadd( -73.8936, -56.6721, -5.34115, 0.22 ) }
    dend_48 { pt3dadd( -73.9881, -56.7857, -5.31741, 0.22 ) }
    dend_48 { pt3dadd( -75.4208, -58.3032, -4.69836, 0.22 ) }
    dend_48 { pt3dadd( -75.535, -58.4166, -4.64213, 0.22 ) }
    dend_48 { pt3dadd( -76.0488, -58.9142, -4.36503, 0.22 ) }
    dend_48 { pt3dadd( -76.1321, -58.9948, -4.3084, 0.22 ) }
    dend_48 { pt3dadd( -77.0198, -59.9594, -3.63312, 0.22 ) }
    dend_48 { pt3dadd( -77.2302, -60.2057, -3.45646, 0.22 ) }
    dend_48 { pt3dadd( -78.0067, -61.3103, -2.63432, 0.22 ) }
    dend_48 { pt3dadd( -78.0408, -61.3625, -2.59823, 0.22 ) }
    dend_48 { pt3dadd( -78.5875, -62.3269, -1.99534, 0.22 ) }
    dend_48 { pt3dadd( -78.6422, -62.4292, -1.93561, 0.22 ) }
    dend_48 { pt3dadd( -84.2539, -69.1588, 0.236655, 0.22 ) }
    dend_48 { pt3dadd( -89.4182, -76.5659, 1.18625, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 75/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -69.9651, -50.7959, -5.64294, 0.52 ) }
    dend_47 { pt3dadd( -70.0143, -51.3458, -5.66034, 0.52 ) }
    dend_47 { pt3dadd( -70.165, -52.4012, -5.6799, 0.52 ) }
    dend_47 { pt3dadd( -70.1836, -52.5187, -5.68175, 0.52 ) }
    dend_47 { pt3dadd( -70.3546, -53.6567, -5.70759, 0.52 ) }
    dend_47 { pt3dadd( -70.5135, -54.6508, -5.65726, 0.52 ) }
    dend_47 { pt3dadd( -70.5497, -54.8731, -5.63837, 0.52 ) }
    dend_47 { pt3dadd( -70.771, -56.1895, -5.48, 0.52 ) }
    dend_47 { pt3dadd( -70.7995, -56.369, -5.43982, 0.52 ) }
    dend_47 { pt3dadd( -70.9361, -57.4934, -5.12772, 0.52 ) }
    dend_47 { pt3dadd( -71.0722, -58.8643, -4.69031, 1.18 ) }
    dend_47 { pt3dadd( -71.1524, -59.7474, -4.38833, 1.92 ) }
    dend_47 { pt3dadd( -71.2199, -60.4832, -4.13357, 2.28 ) }
    dend_47 { pt3dadd( -71.3374, -62.4634, -3.29185, 0.74 ) }
    dend_47 { pt3dadd( -71.3411, -63.1374, -2.98177, 0.66 ) }
    dend_47 { pt3dadd( -71.3114, -63.7991, -2.65257, 0.66 ) }
    dend_47 { pt3dadd( -71.2958, -63.9226, -2.59112, 0.66 ) }
    dend_47 { pt3dadd( -71.1342, -64.8091, -2.13047, 0.66 ) }
    dend_47 { pt3dadd( -70.7456, -66.5488, -1.27301, 0.66 ) }
    dend_47 { pt3dadd( -70.4968, -67.4209, -0.901732, 0.52 ) }
    dend_47 { pt3dadd( -70.4801, -67.4731, -0.8803, 0.52 ) }
    dend_47 { pt3dadd( -70.076, -68.6644, -0.448948, 0.52 ) }
    dend_47 { pt3dadd( -69.8841, -69.2858, -0.272093, 1.03 ) }
    dend_47 { pt3dadd( -69.7299, -69.8871, -0.17137, 1.03 ) }
    dend_47 { pt3dadd( -69.712, -70.0047, -0.169057, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_47 { pt3dadd( -69.6705, -70.5844, -0.174328, 0.81 ) }
    dend_47 { pt3dadd( -69.6453, -71.2047, -0.196662, 0.52 ) }
    dend_47 { pt3dadd( -69.6783, -72.0694, -0.261867, 0.52 ) }
    dend_47 { pt3dadd( -69.738, -72.8761, -0.315645, 0.52 ) }
    dend_47 { pt3dadd( -69.7542, -73.0434, -0.325757, 0.52 ) }
    dend_47 { pt3dadd( -69.8544, -73.991, -0.378273, 0.52 ) }
    dend_47 { pt3dadd( -69.8599, -74.0504, -0.377617, 0.52 ) }
    dend_47 { pt3dadd( -69.9138, -75.3734, -0.310457, 0.52 ) }
    dend_47 { pt3dadd( -69.9099, -75.6783, -0.286204, 0.52 ) }
    dend_47 { pt3dadd( -69.8515, -76.2272, -0.178865, 0.52 ) }
    dend_47 { pt3dadd( -69.821, -76.3974, -0.131925, 0.52 ) }
    dend_47 { pt3dadd( -69.5468, -77.4834, 0.235749, 0.88 ) }
    dend_47 { pt3dadd( -69.3399, -78.2778, 0.552342, 0.88 ) }
    dend_47 { pt3dadd( -69.3119, -78.3956, 0.603402, 0.88 ) }
    dend_47 { pt3dadd( -69.0705, -79.6832, 1.15629, 0.88 ) }
    dend_47 { pt3dadd( -69.0627, -79.7379, 1.17675, 0.88 ) }
    dend_47 { pt3dadd( -68.9871, -80.5173, 1.39071, 0.88 ) }
    dend_47 { pt3dadd( -68.9392, -81.6275, 1.5718, 1.11 ) }
    dend_47 { pt3dadd( -68.9118, -82.5683, 1.65876, 1.11 ) }
    dend_47 { pt3dadd( -68.91, -82.6279, 1.65938, 1.11 ) }
    dend_47 { pt3dadd( -68.8856, -83.4485, 1.60869, 0.74 ) }
    dend_47 { pt3dadd( -68.8565, -84.2654, 1.56257, 0.59 ) }
    dend_47 { pt3dadd( -68.8524, -84.3927, 1.55526, 0.59 ) }
    dend_47 { pt3dadd( -68.8127, -85.3129, 1.487, 0.59 ) }
    dend_47 { pt3dadd( -68.8092, -85.3723, 1.48509, 0.59 ) }
    dend_47 { pt3dadd( -68.7807, -86.1866, 1.49388, 0.59 ) }
    dend_47 { pt3dadd( -68.7437, -86.7896, 1.52662, 0.59 ) }
    dend_47 { pt3dadd( -68.6551, -87.4827, 1.58799, 0.59 ) }
    dend_47 { pt3dadd( -68.6205, -87.6651, 1.60517, 0.59 ) }
    dend_47 { pt3dadd( -68.4887, -88.2097, 1.65697, 0.22 ) }
    dend_47 { pt3dadd( -68.4533, -88.3315, 1.66416, 0.22 ) }
    dend_47 { pt3dadd( -68.1183, -89.3392, 1.66773, 0.22 ) }
    dend_47 { pt3dadd( -67.8762, -90.0475, 1.78305, 0.66 ) }
    dend_47 { pt3dadd( -67.6813, -90.6852, 1.94571, 0.44 ) }
    dend_47 { pt3dadd( -67.6656, -90.7399, 1.96152, 0.44 ) }
    dend_47 { pt3dadd( -67.5154, -91.3208, 2.14557, 1.18 ) }
    dend_47 { pt3dadd( -67.31, -92.1973, 2.40328, 1.84 ) }
    dend_47 { pt3dadd( -66.9233, -94.056, 2.94418, 1.25 ) }
    dend_47 { pt3dadd( -66.7747, -94.7619, 3.12434, 0.66 ) }
    dend_47 { pt3dadd( -66.5996, -95.5618, 3.31204, 0.44 ) }
    dend_47 { pt3dadd( -66.5729, -95.683, 3.33784, 0.44 ) }
    dend_47 { pt3dadd( -66.3198, -96.8425, 3.5389, 0.44 ) }
    dend_47 { pt3dadd( -66.0579, -98.0876, 3.6734, 0.44 ) }
    dend_47 { pt3dadd( -65.9202, -98.7406, 3.7255, 0.44 ) }
    dend_47 { pt3dadd( -65.7355, -99.5775, 3.83697, 0.29 ) }
    dend_47 { pt3dadd( -65.7216, -99.6429, 3.84742, 0.29 ) }
    dend_47 { pt3dadd( -65.5036, -100.588, 4.05419, 0.29 ) }
    dend_47 { pt3dadd( -65.4325, -100.88, 4.1365, 0.29 ) }
    dend_47 { pt3dadd( -65.0546, -102.392, 4.61613, 1.47 ) }
    dend_47 { pt3dadd( -64.8446, -103.274, 4.96051, 1.99 ) }
    dend_47 { pt3dadd( -64.6592, -104.222, 5.37175, 1.77 ) }
    dend_47 { pt3dadd( -64.4917, -105.437, 5.94181, 1.4 ) }
    dend_47 { pt3dadd( -64.4441, -106.13, 6.28785, 0.59 ) }
    dend_47 { pt3dadd( -64.4448, -106.227, 6.33462, 0.59 ) }
    dend_47 { pt3dadd( -64.5527, -107.061, 6.71857, 0.37 ) }
    dend_47 { pt3dadd( -64.7526, -107.9, 7.1389, 0.37 ) }
    dend_47 { pt3dadd( -64.9855, -108.602, 7.4919, 0.37 ) }
    dend_47 { pt3dadd( -65.1531, -109.043, 7.66656, 0.88 ) }
    dend_47 { pt3dadd( -65.2738, -109.373, 7.7788, 0.88 ) }
    dend_47 { pt3dadd( -65.4034, -109.919, 7.90874, 0.37 ) }
    dend_47 { pt3dadd( -65.4278, -110.311, 7.949, 0.37 ) }
    dend_47 { pt3dadd( -65.4161, -110.45, 7.96466, 0.37 ) }
    dend_47 { pt3dadd( -65.3045, -111.195, 8.04121, 0.37 ) }
    dend_47 { pt3dadd( -65.2934, -111.253, 8.0481, 0.37 ) }
    dend_47 { pt3dadd( -65.0555, -112.358, 8.1842, 0.37 ) }
    dend_47 { pt3dadd( -64.8755, -113.176, 8.27336, 0.37 ) }
    dend_47 { pt3dadd( -64.6633, -114.118, 8.38788, 0.59 ) }
    dend_47 { pt3dadd( -64.5115, -114.716, 8.45411, 0.59 ) }
    dend_47 { pt3dadd( -64.3954, -115.135, 8.52409, 0.29 ) }
    dend_47 { pt3dadd( -64.3816, -115.191, 8.53483, 0.29 ) }
    dend_47 { pt3dadd( -64.2516, -115.91, 8.72282, 0.29 ) }
    dend_47 { pt3dadd( -64.2216, -116.13, 8.78441, 0.29 ) }
    dend_47 { pt3dadd( -64.1234, -117.298, 9.17516, 0.29 ) }
    dend_47 { pt3dadd( -64.1002, -118.277, 9.5592, 0.81 ) }
    dend_47 { pt3dadd( -64.1168, -119.087, 9.90575, 1.11 ) }
    dend_47 { pt3dadd( -64.2041, -120.197, 10.4145, 1.4 ) }
    dend_47 { pt3dadd( -64.2751, -120.705, 10.6647, 1.4 ) }
    dend_47 { pt3dadd( -64.536, -121.937, 11.2752, 0.52 ) }
    dend_47 { pt3dadd( -64.707, -122.512, 11.5606, 0.29 ) }
    dend_47 { pt3dadd( -64.7234, -122.563, 11.583, 0.29 ) }
    dend_47 { pt3dadd( -64.8481, -123.066, 11.7834, 0.29 ) }
    dend_47 { pt3dadd( -64.8689, -123.186, 11.8167, 0.29 ) }
    dend_47 { pt3dadd( -64.8842, -123.672, 11.8949, 0.29 ) }
    dend_47 { pt3dadd( -64.8292, -124.181, 11.9714, 0.22 ) }
    dend_47 { pt3dadd( -64.8062, -124.302, 12.0014, 0.22 ) }
    dend_47 { pt3dadd( -64.6263, -125.122, 12.2484, 0.22 ) }
    dend_47 { pt3dadd( -64.6078, -125.23, 12.3087, 0.22 ) }
    dend_47 { pt3dadd( -64.5826, -125.659, 12.5966, 0.22 ) }
    dend_47 { pt3dadd( -64.6065, -126.691, 13.3843, 0.96 ) }
    dend_47 { pt3dadd( -64.6445, -127.084, 13.6829, 0.96 ) }
    dend_47 { pt3dadd( -64.6524, -127.131, 13.7162, 0.96 ) }
    dend_47 { pt3dadd( -65.019, -128.647, 14.7247, 0.44 ) }
    dend_47 { pt3dadd( -65.2148, -129.364, 15.1021, 0.44 ) }
    dend_47 { pt3dadd( -65.2308, -129.417, 15.1228, 0.44 ) }
    dend_47 { pt3dadd( -65.4379, -130.124, 15.2424, 0.81 ) }
    dend_47 { pt3dadd( -65.6141, -130.744, 15.2865, 0.81 ) }
    dend_47 { pt3dadd( -65.7001, -131.091, 15.305, 0.81 ) }
    dend_47 { pt3dadd( -65.8614, -131.971, 15.2953, 0.37 ) }
    dend_47 { pt3dadd( -65.8689, -132.021, 15.2987, 0.37 ) }
    dend_47 { pt3dadd( -65.9906, -133.172, 15.5458, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -65.9977, -133.289, 15.5931, 0.37 ) }
    dend_47 { pt3dadd( -66.0282, -134.56, 16.2895, 1.03 ) }
    dend_47 { pt3dadd( -66.0421, -135.052, 16.589, 1.03 ) }
    dend_47 { pt3dadd( -66.0483, -135.22, 16.7037, 1.03 ) }
    dend_47 { pt3dadd( -66.1215, -136.099, 17.3546, 0.74 ) }
    dend_47 { pt3dadd( -66.1736, -136.656, 17.8268, 0.22 ) }
    dend_47 { pt3dadd( -66.1786, -136.727, 17.8799, 0.22 ) }
    dend_47 { pt3dadd( -66.2057, -137.51, 18.3894, 0.22 ) }
    dend_47 { pt3dadd( -66.2063, -137.56, 18.4206, 0.22 ) }
    dend_47 { pt3dadd( -66.179, -138.59, 19.0224, 1.18 ) }
    dend_47 { pt3dadd( -66.0796, -140.21, 19.8929, 0.59 ) }
    dend_47 { pt3dadd( -65.9771, -141.183, 20.3582, 0.59 ) }
    dend_47 { pt3dadd( -65.871, -141.847, 20.6389, 1.03 ) }
    dend_47 { pt3dadd( -65.8611, -141.894, 20.6558, 1.03 ) }
    dend_47 { pt3dadd( -65.7716, -142.266, 20.7547, 1.11 ) }
    dend_47 { pt3dadd( -65.4761, -143.35, 20.985, 0.52 ) }
    dend_47 { pt3dadd( -65.1369, -144.591, 21.2149, 0.52 ) }
    dend_47 { pt3dadd( -64.8404, -145.695, 21.4403, 1.47 ) }
    dend_47 { pt3dadd( -64.6643, -146.41, 21.5506, 2.43 ) }
    dend_47 { pt3dadd( -64.3968, -147.5, 21.712, 1.4 ) }
    dend_47 { pt3dadd( -63.9992, -149.13, 21.9399, 0.22 ) }
    dend_47 { pt3dadd( -63.8524, -149.73, 22.011, 0.22 ) }
    dend_47 { pt3dadd( -63.8105, -149.91, 22.0356, 0.22 ) }
    dend_47 { pt3dadd( -63.3745, -152.204, 22.3176, 0.22 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 24/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -177.469, -68.5027, -1.89284, 0.52 ) }
    dend_45 { pt3dadd( -178.121, -68.6978, -3.2437, 0.52 ) }
    dend_45 { pt3dadd( -178.162, -68.7124, -3.32033, 0.52 ) }
    dend_45 { pt3dadd( -180.108, -69.5788, -6.60794, 0.52 ) }
    dend_45 { pt3dadd( -180.19, -69.63, -6.72919, 0.52 ) }
    dend_45 { pt3dadd( -180.806, -70.0514, -7.54448, 0.52 ) }
    dend_45 { pt3dadd( -181.606, -70.622, -8.53077, 0.96 ) }
    dend_45 { pt3dadd( -181.677, -70.6747, -8.59904, 0.96 ) }
    dend_45 { pt3dadd( -182.291, -71.1625, -9.06082, 0.96 ) }
    dend_45 { pt3dadd( -183.482, -72.163, -9.66045, 0.44 ) }
    dend_45 { pt3dadd( -184.385, -72.8732, -10.0972, 0.44 ) }
    dend_45 { pt3dadd( -184.52, -72.9731, -10.1608, 0.44 ) }
    dend_45 { pt3dadd( -185.505, -73.6268, -10.5665, 0.44 ) }
    dend_45 { pt3dadd( -186.564, -74.2575, -11.0139, 0.81 ) }
    dend_45 { pt3dadd( -186.767, -74.362, -11.1004, 0.81 ) }
    dend_45 { pt3dadd( -187.741, -74.7968, -11.5043, 1.11 ) }
    dend_45 { pt3dadd( -187.807, -74.8279, -11.5303, 1.11 ) }
    dend_45 { pt3dadd( -188.396, -75.1093, -11.7746, 1.11 ) }
    dend_45 { pt3dadd( -189.734, -75.7523, -12.3149, 0.59 ) }
    dend_45 { pt3dadd( -189.801, -75.7843, -12.3381, 0.59 ) }
    dend_45 { pt3dadd( -190.992, -76.3264, -12.7039, 0.59 ) }
    dend_45 { pt3dadd( -191.111, -76.3802, -12.736, 0.59 ) }
    dend_45 { pt3dadd( -192.427, -76.9958, -13.0197, 0.59 ) }
    dend_45 { pt3dadd( -193.729, -77.6137, -13.2289, 0.88 ) }
    dend_45 { pt3dadd( -194.814, -78.1351, -13.3688, 1.18 ) }
    dend_45 { pt3dadd( -195.848, -78.6228, -13.5005, 1.33 ) }
    dend_45 { pt3dadd( -196.89, -79.1068, -13.6273, 1.33 ) }
    dend_45 { pt3dadd( -198.061, -79.6272, -13.7568, 0.52 ) }
    dend_45 { pt3dadd( -199.15, -80.0635, -13.9199, 0.52 ) }
    dend_45 { pt3dadd( -199.923, -80.347, -14.0895, 0.52 ) }
    dend_45 { pt3dadd( -200.43, -80.5349, -14.2471, 0.74 ) }
    dend_45 { pt3dadd( -200.574, -80.5884, -14.3074, 0.74 ) }
    dend_45 { pt3dadd( -201.122, -80.7774, -14.6036, 0.74 ) }
    dend_45 { pt3dadd( -202.458, -81.2885, -15.4863, 0.29 ) }
    dend_45 { pt3dadd( -202.518, -81.3191, -15.5254, 0.29 ) }
    dend_45 { pt3dadd( -203.232, -81.755, -15.939, 0.29 ) }
    dend_45 { pt3dadd( -203.315, -81.8089, -15.9876, 0.29 ) }
    dend_45 { pt3dadd( -203.896, -82.1657, -16.2902, 0.59 ) }
    dend_45 { pt3dadd( -204.456, -82.4995, -16.544, 0.74 ) }
    dend_45 { pt3dadd( -205.381, -82.9703, -16.9841, 0.74 ) }
    dend_45 { pt3dadd( -205.471, -83.0095, -17.0327, 0.74 ) }
    dend_45 { pt3dadd( -206.551, -83.4249, -17.6163, 0.37 ) }
    dend_45 { pt3dadd( -207.313, -83.7087, -18.0295, 0.37 ) }
    dend_45 { pt3dadd( -207.443, -83.7545, -18.0986, 0.37 ) }
    dend_45 { pt3dadd( -209.006, -84.3052, -18.9351, 1.11 ) }
    dend_45 { pt3dadd( -209.633, -84.5713, -19.2361, 1.11 ) }
    dend_45 { pt3dadd( -210.382, -84.9551, -19.5296, 0.44 ) }
    dend_45 { pt3dadd( -210.508, -85.0396, -19.5636, 0.44 ) }
    dend_45 { pt3dadd( -211.057, -85.4668, -19.6717, 0.44 ) }
    dend_45 { pt3dadd( -211.254, -85.6193, -19.7059, 0.44 ) }
    dend_45 { pt3dadd( -212.494, -86.575, -19.8567, 0.44 ) }
    dend_45 { pt3dadd( -212.777, -86.7699, -19.9073, 0.44 ) }
    dend_45 { pt3dadd( -213.47, -87.2183, -20.122, 0.44 ) }
    dend_45 { pt3dadd( -213.533, -87.2569, -20.1463, 0.44 ) }
    dend_45 { pt3dadd( -214.715, -87.9872, -20.624, 0.81 ) }
    dend_45 { pt3dadd( -215.702, -88.5811, -21.0327, 1.18 ) }
    dend_45 { pt3dadd( -216.447, -89.0508, -21.3459, 1.18 ) }
    dend_45 { pt3dadd( -217.582, -89.7979, -21.8086, 0.88 ) }
    dend_45 { pt3dadd( -218.268, -90.2687, -22.0791, 0.52 ) }
    dend_45 { pt3dadd( -219.111, -90.8899, -22.3888, 0.52 ) }
    dend_45 { pt3dadd( -219.17, -90.9383, -22.4063, 0.52 ) }
    dend_45 { pt3dadd( -220.292, -91.8493, -22.7416, 0.52 ) }
    dend_45 { pt3dadd( -220.352, -91.8967, -22.7583, 0.52 ) }
    dend_45 { pt3dadd( -221.632, -92.7919, -23.1174, 0.44 ) }
    dend_45 { pt3dadd( -221.759, -92.8715, -23.1595, 0.44 ) }
    dend_45 { pt3dadd( -223.385, -93.6931, -23.7429, 0.44 ) }
    dend_45 { pt3dadd( -224.03, -93.9758, -23.9729, 0.81 ) }
    dend_45 { pt3dadd( -224.632, -94.204, -24.2448, 1.11 ) }
    dend_45 { pt3dadd( -225.933, -94.68, -24.924, 0.44 ) }
    dend_45 { pt3dadd( -226.071, -94.7277, -25.0022, 0.44 ) }
    dend_45 { pt3dadd( -227.206, -95.1152, -25.6874, 0.44 ) }
    dend_45 { pt3dadd( -227.278, -95.1387, -25.7316, 0.44 ) }
    dend_45 { pt3dadd( -229.038, -95.7813, -26.7327, 0.44 ) }
    dend_45 { pt3dadd( -229.253, -95.8733, -26.8438, 0.44 ) }
    dend_45 { pt3dadd( -230.39, -96.4515, -27.298, 1.03 ) }
    dend_45 { pt3dadd( -230.52, -96.5244, -27.342, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_45 { pt3dadd( -231.533, -97.1512, -27.5732, 1.03 ) }
    dend_45 { pt3dadd( -231.608, -97.1975, -27.5848, 1.03 ) }
    dend_45 { pt3dadd( -232.306, -97.6389, -27.6386, 0.22 ) }
    dend_45 { pt3dadd( -233.237, -98.2783, -27.7334, 0.22 ) }
    dend_45 { pt3dadd( -233.308, -98.3305, -27.746, 0.22 ) }
    dend_45 { pt3dadd( -235.263, -99.7224, -28.1597, 0.22 ) }
    dend_45 { pt3dadd( -236.232, -100.356, -28.4273, 0.81 ) }
    dend_45 { pt3dadd( -236.947, -100.796, -28.6485, 1.47 ) }
    dend_45 { pt3dadd( -237.678, -101.221, -28.8965, 1.47 ) }
    dend_45 { pt3dadd( -239.096, -102.012, -29.39, 0.22 ) }
    dend_45 { pt3dadd( -240.921, -102.98, -30.0357, 0.22 ) }
    dend_45 { pt3dadd( -242.55, -103.803, -30.6145, 0.81 ) }
    dend_45 { pt3dadd( -243.331, -104.184, -30.879, 0.81 ) }
    dend_45 { pt3dadd( -243.408, -104.219, -30.905, 0.81 ) }
    dend_45 { pt3dadd( -244.689, -104.817, -31.2828, 0.22 ) }
    dend_45 { pt3dadd( -244.824, -104.884, -31.3146, 0.22 ) }
    dend_45 { pt3dadd( -246.55, -105.823, -31.6653, 0.22 ) }
    dend_45 { pt3dadd( -246.652, -105.881, -31.6782, 0.22 ) }
    dend_45 { pt3dadd( -248.059, -106.662, -31.8326, 0.22 ) }
    dend_45 { pt3dadd( -248.975, -107.166, -31.9131, 0.81 ) }
    dend_45 { pt3dadd( -249.043, -107.203, -31.9171, 0.81 ) }
    dend_45 { pt3dadd( -249.731, -107.549, -31.9349, 0.81 ) }
    dend_45 { pt3dadd( -250.499, -107.902, -31.8465, 0.15 ) }
    dend_45 { pt3dadd( -250.726, -108.007, -31.8013, 0.15 ) }
    dend_45 { pt3dadd( -251.665, -108.438, -31.5499, 0.15 ) }
    dend_45 { pt3dadd( -251.734, -108.469, -31.5325, 0.15 ) }
    dend_45 { pt3dadd( -252.693, -108.892, -31.31, 0.15 ) }
    dend_45 { pt3dadd( -254.13, -109.523, -30.9838, 0.74 ) }
    dend_45 { pt3dadd( -254.908, -109.858, -30.8327, 0.88 ) }
    dend_45 { pt3dadd( -255.634, -110.164, -30.7272, 0.88 ) }
    dend_45 { pt3dadd( -255.705, -110.194, -30.721, 0.88 ) }
    dend_45 { pt3dadd( -257.053, -110.762, -30.68, 0.22 ) }
    dend_45 { pt3dadd( -257.124, -110.792, -30.6837, 0.22 ) }
    dend_45 { pt3dadd( -258.25, -111.261, -30.8903, 0.22 ) }
    dend_45 { pt3dadd( -258.8, -111.506, -31.0037, 0.52 ) }
    dend_45 { pt3dadd( -259.49, -111.867, -31.186, 0.52 ) }
    dend_45 { pt3dadd( -259.556, -111.904, -31.2046, 0.52 ) }
    dend_45 { pt3dadd( -260.096, -112.235, -31.3617, 0.52 ) }
    dend_45 { pt3dadd( -261.137, -112.887, -31.6724, 0.22 ) }
    dend_45 { pt3dadd( -262.281, -113.664, -31.9307, 0.22 ) }
    dend_45 { pt3dadd( -263.397, -114.454, -32.1082, 1.03 ) }
    dend_45 { pt3dadd( -264.189, -115.054, -32.1908, 1.4 ) }
    dend_45 { pt3dadd( -265.057, -115.741, -32.2338, 1.4 ) }
    dend_45 { pt3dadd( -265.194, -115.848, -32.2306, 1.4 ) }
    dend_45 { pt3dadd( -266.803, -117.069, -32.0548, 0.22 ) }
    dend_45 { pt3dadd( -267.012, -117.215, -32.0253, 0.22 ) }
    dend_45 { pt3dadd( -267.766, -117.707, -31.9004, 0.22 ) }
    dend_45 { pt3dadd( -268.073, -117.896, -31.8645, 0.22 ) }
    dend_45 { pt3dadd( -269.737, -118.823, -31.7618, 0.22 ) }
    dend_45 { pt3dadd( -269.954, -118.933, -31.7646, 0.22 ) }
    dend_45 { pt3dadd( -271.444, -119.638, -32.096, 0.22 ) }
    dend_45 { pt3dadd( -271.52, -119.676, -32.1219, 0.22 ) }
    dend_45 { pt3dadd( -271.973, -119.926, -32.3178, 0.74 ) }
    dend_45 { pt3dadd( -272.12, -120.018, -32.3935, 0.74 ) }
    dend_45 { pt3dadd( -272.9, -120.576, -32.8621, 0.74 ) }
    dend_45 { pt3dadd( -275.36, -122.451, -34.4109, 0.22 ) }
    dend_45 { pt3dadd( -276.127, -123.068, -34.9191, 0.88 ) }
    dend_45 { pt3dadd( -276.772, -123.593, -35.3247, 1.11 ) }
    dend_45 { pt3dadd( -276.944, -123.736, -35.4271, 1.11 ) }
    dend_45 { pt3dadd( -277.438, -124.139, -35.687, 1.11 ) }
    dend_45 { pt3dadd( -278.15, -124.712, -35.9995, 0.22 ) }
    dend_45 { pt3dadd( -278.285, -124.807, -36.0308, 0.15 ) }
    dend_45 { pt3dadd( -279.069, -125.282, -36.1676, 0.15 ) }
    dend_45 { pt3dadd( -279.226, -125.369, -36.2077, 0.15 ) }
    dend_45 { pt3dadd( -280.721, -126.172, -36.6774, 0.15 ) }
    dend_45 { pt3dadd( -280.875, -126.256, -36.7338, 0.15 ) }
    dend_45 { pt3dadd( -282.285, -127.047, -37.2378, 0.15 ) }
    dend_45 { pt3dadd( -282.348, -127.084, -37.2635, 0.15 ) }
    dend_45 { pt3dadd( -283.618, -127.872, -37.8263, 0.81 ) }
    dend_45 { pt3dadd( -283.687, -127.917, -37.8586, 0.81 ) }
    dend_45 { pt3dadd( -284.318, -128.333, -38.1326, 0.81 ) }
    dend_45 { pt3dadd( -286.54, -129.813, -39.1705, 0.22 ) }
    dend_45 { pt3dadd( -287.46, -130.435, -39.6022, 0.96 ) }
    dend_45 { pt3dadd( -287.782, -130.636, -39.7426, 0.96 ) }
    dend_45 { pt3dadd( -288.878, -131.277, -40.1787, 0.15 ) }
    dend_45 { pt3dadd( -290.768, -132.289, -40.9154, 0.15 ) }
    dend_45 { pt3dadd( -292.669, -133.241, -41.6576, 1.33 ) }
    dend_45 { pt3dadd( -293.421, -133.589, -41.9501, 1.33 ) }
    dend_45 { pt3dadd( -294.267, -133.957, -42.233, 0.37 ) }
    dend_45 { pt3dadd( -294.364, -133.999, -42.2631, 0.37 ) }
    dend_45 { pt3dadd( -295.457, -134.469, -42.5413, 0.37 ) }
    dend_45 { pt3dadd( -296.086, -134.746, -42.6527, 0.81 ) }
    dend_45 { pt3dadd( -296.226, -134.81, -42.6572, 0.81 ) }
    dend_45 { pt3dadd( -296.849, -135.124, -42.6851, 0.59 ) }
    dend_45 { pt3dadd( -297.414, -135.466, -42.719, 0.29 ) }
    dend_45 { pt3dadd( -298.218, -136.05, -42.986, 0.29 ) }
    dend_45 { pt3dadd( -298.274, -136.095, -43.0164, 0.29 ) }
    dend_45 { pt3dadd( -298.979, -136.628, -43.6397, 0.66 ) }
    dend_45 { pt3dadd( -299.34, -136.892, -44.0124, 0.96 ) }
    dend_45 { pt3dadd( -299.914, -137.236, -44.7407, 0.44 ) }
    dend_45 { pt3dadd( -301.647, -137.989, -47.5174, 0.37 ) }
    dend_45 { pt3dadd( -301.755, -138.018, -47.7316, 0.81 ) }
    dend_45 { pt3dadd( -303.241, -138.247, -50.8952, 0.37 ) }
    dend_45 { pt3dadd( -303.529, -138.266, -51.5994, 0.37 ) }
    dend_45 { pt3dadd( -304.768, -138.243, -54.8456, 0.88 ) }
    dend_45 { pt3dadd( -306.043, -138.097, -58.5346, 0.88 ) }
    dend_45 { pt3dadd( -307.363, -137.755, -62.7579, 0.81 ) }
    dend_45 { pt3dadd( -307.485, -137.714, -63.1887, 0.81 ) }
    dend_45 { pt3dadd( -308.834, -137.23, -68.4956, 0.37 ) }
    dend_45 { pt3dadd( -308.851, -137.224, -68.57, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_45 { pt3dadd( -309.559, -137.091, -71.6615, 0.37 ) }
    dend_45 { pt3dadd( -310.333, -137.08, -74.8709, 0.22 ) }
    dend_45 { pt3dadd( -310.377, -137.088, -75.0368, 0.22 ) }
    dend_45 { pt3dadd( -310.829, -137.284, -76.4128, 0.22 ) }
    dend_45 { pt3dadd( -310.859, -137.302, -76.4819, 0.22 ) }
    dend_45 { pt3dadd( -312.479, -138.222, -79.4059, 0.22 ) }
    dend_45 { pt3dadd( -312.714, -138.357, -79.7155, 0.81 ) }
    dend_45 { pt3dadd( -314.774, -139.434, -81.9451, 0.37 ) }
    dend_45 { pt3dadd( -316.619, -140.128, -83.6364, 0.37 ) }
    dend_45 { pt3dadd( -316.687, -140.146, -83.6886, 0.37 ) }
    dend_45 { pt3dadd( -318.543, -140.549, -84.7942, 0.37 ) }
    dend_45 { pt3dadd( -319.136, -140.637, -84.9937, 0.81 ) }
    dend_45 { pt3dadd( -320.805, -140.78, -85.3805, 0.29 ) }
    dend_45 { pt3dadd( -322.655, -140.781, -85.485, 0.29 ) }
    dend_45 { pt3dadd( -323.309, -140.78, -85.4738, 0.66 ) }
    dend_45 { pt3dadd( -323.385, -140.788, -85.4687, 0.66 ) }
    dend_45 { pt3dadd( -324.301, -141.012, -85.3627, 0.66 ) }
    dend_45 { pt3dadd( -324.386, -141.033, -85.359, 0.66 ) }
    dend_45 { pt3dadd( -325.583, -141.329, -85.351, 0.44 ) }
    dend_45 { pt3dadd( -327.331, -141.78, -85.5053, 0.15 ) }
    dend_45 { pt3dadd( -327.479, -141.817, -85.5264, 0.15 ) }
    dend_45 { pt3dadd( -329.816, -142.428, -86.0214, 0.15 ) }
    dend_45 { pt3dadd( -331.856, -143.017, -86.5704, 0.59 ) }
    dend_45 { pt3dadd( -333.696, -143.619, -87.1459, 0.15 ) }
    dend_45 { pt3dadd( -335.577, -144.282, -88.1523, 0.15 ) }
    dend_45 { pt3dadd( -335.687, -144.328, -88.2325, 0.15 ) }
    dend_45 { pt3dadd( -337.21, -145.062, -89.5362, 0.52 ) }
    dend_45 { pt3dadd( -337.788, -145.435, -90.1306, 1.03 ) }
    dend_45 { pt3dadd( -338.443, -146.01, -90.9034, 1.03 ) }
    dend_45 { pt3dadd( -340.862, -148.627, -94.3738, 0.22 ) }
    dend_45 { pt3dadd( -341.5, -149.392, -95.447, 0.22 ) }
    dend_45 { pt3dadd( -341.546, -149.452, -95.5285, 0.22 ) }
    dend_45 { pt3dadd( -342.264, -150.474, -96.8933, 0.22 ) }
    dend_45 { pt3dadd( -343.521, -152.304, -99.3077, 0.22 ) }
    dend_45 { pt3dadd( -343.552, -152.35, -99.3628, 0.22 ) }
    dend_45 { pt3dadd( -344.654, -153.977, -100.864, 0.88 ) }
    dend_45 { pt3dadd( -345.038, -154.466, -101.405, 0.88 ) }
    dend_45 { pt3dadd( -345.238, -154.69, -101.679, 0.15 ) }
    dend_45 { pt3dadd( -345.286, -154.732, -101.742, 0.15 ) }
    dend_45 { pt3dadd( -345.994, -155.227, -102.728, 0.15 ) }
    dend_45 { pt3dadd( -346.041, -155.265, -102.793, 0.15 ) }
    dend_45 { pt3dadd( -346.866, -156.126, -104.157, 0.81 ) }
    dend_45 { pt3dadd( -347.054, -156.327, -104.594, 0.81 ) }
    dend_45 { pt3dadd( -347.077, -156.355, -104.662, 0.81 ) }
    dend_45 { pt3dadd( -347.722, -157.242, -107.062, 0.15 ) }
    dend_45 { pt3dadd( -348.055, -157.78, -108.563, 0.15 ) }
    dend_45 { pt3dadd( -348.531, -158.353, -110.432, 0.15 ) }
    dend_45 { pt3dadd( -349.282, -159.155, -113.117, 0.15 ) }
    dend_45 { pt3dadd( -349.313, -159.183, -113.218, 0.15 ) }
    dend_45 { pt3dadd( -349.798, -159.551, -114.627, 1.18 ) }
    dend_45 { pt3dadd( -350.06, -159.717, -115.319, 1.18 ) }
    dend_45 { pt3dadd( -351.183, -160.291, -118.172, 0.22 ) }
    dend_45 { pt3dadd( -351.498, -160.429, -118.858, 0.22 ) }
    dend_45 { pt3dadd( -351.532, -160.444, -118.925, 0.22 ) }
    dend_45 { pt3dadd( -352.745, -160.916, -121.138, 0.22 ) }
    dend_45 { pt3dadd( -352.784, -160.928, -121.203, 0.59 ) }
    dend_45 { pt3dadd( -360.636, -166.736, -126.59, 0.59 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 57/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -177.469, -68.5027, -1.89284, 0.59 ) }
    dend_44 { pt3dadd( -178.747, -68.3288, -1.2321, 0.59 ) }
    dend_44 { pt3dadd( -179.607, -68.2583, -0.827426, 0.59 ) }
    dend_44 { pt3dadd( -180.925, -68.2751, -0.28928, 0.29 ) }
    dend_44 { pt3dadd( -181.775, -68.3251, 0.0306294, 0.29 ) }
    dend_44 { pt3dadd( -181.832, -68.3307, 0.0512168, 0.29 ) }
    dend_44 { pt3dadd( -183.082, -68.4618, 0.474025, 0.29 ) }
    dend_44 { pt3dadd( -183.125, -68.4699, 0.484763, 0.29 ) }
    dend_44 { pt3dadd( -184.186, -68.7221, 0.710197, 0.29 ) }
    dend_44 { pt3dadd( -184.237, -68.7346, 0.719198, 0.29 ) }
    dend_44 { pt3dadd( -185.03, -68.9119, 0.880408, 0.29 ) }
    dend_44 { pt3dadd( -185.972, -69.1099, 1.07425, 0.66 ) }
    dend_44 { pt3dadd( -186.6, -69.2465, 1.20783, 1.18 ) }
    dend_44 { pt3dadd( -187.056, -69.3547, 1.3013, 1.18 ) }
    dend_44 { pt3dadd( -188.064, -69.6049, 1.50179, 0.37 ) }
    dend_44 { pt3dadd( -189.18, -69.9173, 1.70097, 0.37 ) }
    dend_44 { pt3dadd( -189.866, -70.1308, 1.79627, 0.37 ) }
    dend_44 { pt3dadd( -190.279, -70.2724, 1.82683, 0.59 ) }
    dend_44 { pt3dadd( -190.636, -70.3846, 1.82552, 0.44 ) }
    dend_44 { pt3dadd( -190.687, -70.3993, 1.82146, 0.44 ) }
    dend_44 { pt3dadd( -191.403, -70.5759, 1.69714, 0.44 ) }
    dend_44 { pt3dadd( -192.157, -70.7272, 1.54409, 0.44 ) }
    dend_44 { pt3dadd( -192.973, -70.8695, 1.38229, 0.44 ) }
    dend_44 { pt3dadd( -193.746, -70.9907, 1.27043, 0.44 ) }
    dend_44 { pt3dadd( -193.85, -71.0053, 1.25942, 0.44 ) }
    dend_44 { pt3dadd( -194.458, -71.0809, 1.21721, 0.44 ) }
    dend_44 { pt3dadd( -195.081, -71.1508, 1.19213, 0.29 ) }
    dend_44 { pt3dadd( -195.68, -71.2095, 1.17508, 0.29 ) }
    dend_44 { pt3dadd( -196.449, -71.2913, 1.16469, 0.88 ) }
    dend_44 { pt3dadd( -197.139, -71.369, 1.14691, 0.88 ) }
    dend_44 { pt3dadd( -197.698, -71.4358, 1.12484, 0.52 ) }
    dend_44 { pt3dadd( -198.99, -71.6082, 1.03796, 0.52 ) }
    dend_44 { pt3dadd( -199.785, -71.7145, 0.960137, 1.18 ) }
    dend_44 { pt3dadd( -200.498, -71.8075, 0.867647, 1.18 ) }
    dend_44 { pt3dadd( -200.557, -71.8159, 0.858145, 1.18 ) }
    dend_44 { pt3dadd( -201.178, -71.9136, 0.762393, 1.18 ) }
    dend_44 { pt3dadd( -201.762, -72.0132, 0.680112, 0.29 ) }
    dend_44 { pt3dadd( -202.253, -72.0911, 0.62086, 0.29 ) }
    dend_44 { pt3dadd( -203.522, -72.2794, 0.485692, 0.29 ) }
    dend_44 { pt3dadd( -203.917, -72.3304, 0.445141, 1.25 ) }
    dend_44 { pt3dadd( -204.474, -72.4003, 0.392121, 1.25 ) }
    dend_44 { pt3dadd( -205.165, -72.4808, 0.333454, 0.52 ) }
    dend_44 { pt3dadd( -206.157, -72.5886, 0.266182, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_44 { pt3dadd( -206.217, -72.5955, 0.26216, 0.52 ) }
    dend_44 { pt3dadd( -206.673, -72.65, 0.231941, 0.88 ) }
    dend_44 { pt3dadd( -206.725, -72.6554, 0.229338, 0.88 ) }
    dend_44 { pt3dadd( -207.004, -72.6806, 0.219158, 0.88 ) }
    dend_44 { pt3dadd( -207.731, -72.7311, 0.199378, 0.29 ) }
    dend_44 { pt3dadd( -209.244, -72.8339, 0.17034, 0.29 ) }
    dend_44 { pt3dadd( -209.297, -72.8377, 0.169354, 0.29 ) }
    dend_44 { pt3dadd( -210.012, -72.899, 0.156942, 0.66 ) }
    dend_44 { pt3dadd( -210.073, -72.9048, 0.155776, 0.66 ) }
    dend_44 { pt3dadd( -210.683, -72.9673, 0.15343, 0.66 ) }
    dend_44 { pt3dadd( -211.18, -73.0197, 0.157488, 0.66 ) }
    dend_44 { pt3dadd( -212.097, -73.1009, 0.167286, 0.22 ) }
    dend_44 { pt3dadd( -212.594, -73.1382, 0.169333, 0.88 ) }
    dend_44 { pt3dadd( -213.206, -73.1784, 0.164541, 0.88 ) }
    dend_44 { pt3dadd( -213.93, -73.2236, 0.161532, 0.22 ) }
    dend_44 { pt3dadd( -214.209, -73.2433, 0.161969, 0.22 ) }
    dend_44 { pt3dadd( -214.842, -73.3038, 0.16508, 0.22 ) }
    dend_44 { pt3dadd( -214.903, -73.3104, 0.16537, 0.22 ) }
    dend_44 { pt3dadd( -215.518, -73.3987, 0.207306, 0.22 ) }
    dend_44 { pt3dadd( -215.597, -73.414, 0.215965, 0.22 ) }
    dend_44 { pt3dadd( -216.079, -73.5293, 0.278653, 0.81 ) }
    dend_44 { pt3dadd( -216.614, -73.6716, 0.357829, 0.81 ) }
    dend_44 { pt3dadd( -216.664, -73.6875, 0.365626, 0.81 ) }
    dend_44 { pt3dadd( -217.697, -73.9895, 0.490229, 0.22 ) }
    dend_44 { pt3dadd( -218.792, -74.2837, 0.589777, 0.22 ) }
    dend_44 { pt3dadd( -218.913, -74.3154, 0.596771, 0.22 ) }
    dend_44 { pt3dadd( -219.531, -74.4708, 0.616416, 0.96 ) }
    dend_44 { pt3dadd( -220.296, -74.6644, 0.64224, 0.96 ) }
    dend_44 { pt3dadd( -221.247, -74.912, 0.666063, 0.22 ) }
    dend_44 { pt3dadd( -221.848, -75.0852, 0.690449, 0.22 ) }
    dend_44 { pt3dadd( -222.797, -75.3762, 0.781302, 0.22 ) }
    dend_44 { pt3dadd( -222.855, -75.3944, 0.789069, 0.22 ) }
    dend_44 { pt3dadd( -223.601, -75.6402, 0.925324, 1.03 ) }
    dend_44 { pt3dadd( -224.18, -75.825, 1.04692, 1.18 ) }
    dend_44 { pt3dadd( -225.036, -76.1148, 1.24652, 0.22 ) }
    dend_44 { pt3dadd( -225.25, -76.1805, 1.29191, 0.22 ) }
    dend_44 { pt3dadd( -225.729, -76.2722, 1.4004, 0.22 ) }
    dend_44 { pt3dadd( -225.84, -76.2852, 1.41977, 0.22 ) }
    dend_44 { pt3dadd( -227.001, -76.3431, 1.55989, 0.22 ) }
    dend_44 { pt3dadd( -227.344, -76.3534, 1.60545, 0.88 ) }
    dend_44 { pt3dadd( -227.787, -76.3564, 1.66228, 0.88 ) }
    dend_44 { pt3dadd( -229.512, -76.3843, 1.92343, 0.22 ) }
    dend_44 { pt3dadd( -230.172, -76.4024, 2.03519, 0.96 ) }
    dend_44 { pt3dadd( -230.387, -76.4125, 2.07593, 0.96 ) }
    dend_44 { pt3dadd( -231.837, -76.5541, 2.43142, 0.22 ) }
    dend_44 { pt3dadd( -231.895, -76.5627, 2.44735, 0.22 ) }
    dend_44 { pt3dadd( -232.374, -76.6652, 2.58447, 0.96 ) }
    dend_44 { pt3dadd( -232.748, -76.7781, 2.69007, 0.96 ) }
    dend_44 { pt3dadd( -232.79, -76.7911, 2.70391, 0.96 ) }
    dend_44 { pt3dadd( -233.724, -77.0685, 2.99784, 0.22 ) }
    dend_44 { pt3dadd( -233.774, -77.0794, 3.01301, 0.22 ) }
    dend_44 { pt3dadd( -234.399, -77.1957, 3.21784, 0.22 ) }
    dend_44 { pt3dadd( -234.507, -77.2107, 3.25194, 0.52 ) }
    dend_44 { pt3dadd( -234.673, -77.2314, 3.30212, 0.52 ) }
    dend_44 { pt3dadd( -234.841, -77.251, 3.34577, 0.52 ) }
    dend_44 { pt3dadd( -235.508, -77.3373, 3.47868, 0.15 ) }
    dend_44 { pt3dadd( -235.7, -77.3856, 3.52096, 0.15 ) }
    dend_44 { pt3dadd( -236.277, -77.5812, 3.67158, 0.15 ) }
    dend_44 { pt3dadd( -236.389, -77.6225, 3.70155, 0.52 ) }
    dend_44 { pt3dadd( -236.496, -77.6657, 3.7295, 0.52 ) }
    dend_44 { pt3dadd( -236.855, -77.8232, 3.80911, 0.52 ) }
    dend_44 { pt3dadd( -237.731, -78.2751, 3.97869, 0.22 ) }
    dend_44 { pt3dadd( -237.857, -78.3448, 4.00268, 0.22 ) }
    dend_44 { pt3dadd( -238.589, -78.7702, 4.13723, 0.88 ) }
    dend_44 { pt3dadd( -238.938, -78.9678, 4.18961, 1.03 ) }
    dend_44 { pt3dadd( -239.88, -79.4942, 4.30523, 0.22 ) }
    dend_44 { pt3dadd( -240.472, -79.82, 4.35084, 0.22 ) }
    dend_44 { pt3dadd( -240.965, -80.0928, 4.36348, 0.22 ) }
    dend_44 { pt3dadd( -241.33, -80.2894, 4.35931, 0.22 ) }
    dend_44 { pt3dadd( -241.795, -80.5344, 4.33919, 0.22 ) }
    dend_44 { pt3dadd( -241.843, -80.5572, 4.33597, 0.22 ) }
    dend_44 { pt3dadd( -242.792, -80.9445, 4.24837, 0.22 ) }
    dend_44 { pt3dadd( -242.899, -80.9809, 4.23651, 0.22 ) }
    dend_44 { pt3dadd( -243.833, -81.2605, 4.13059, 0.22 ) }
    dend_44 { pt3dadd( -243.884, -81.2756, 4.12681, 0.22 ) }
    dend_44 { pt3dadd( -244.434, -81.4371, 4.10393, 0.81 ) }
    dend_44 { pt3dadd( -244.555, -81.4718, 4.10115, 0.81 ) }
    dend_44 { pt3dadd( -244.933, -81.5687, 4.10654, 0.81 ) }
    dend_44 { pt3dadd( -245.527, -81.7405, 4.1275, 0.81 ) }
    dend_44 { pt3dadd( -246.428, -82.0198, 4.17434, 0.22 ) }
    dend_44 { pt3dadd( -246.485, -82.0406, 4.17763, 0.22 ) }
    dend_44 { pt3dadd( -247.273, -82.3665, 4.24742, 0.22 ) }
    dend_44 { pt3dadd( -248.023, -82.7095, 4.32443, 0.59 ) }
    dend_44 { pt3dadd( -249.355, -83.3477, 4.46079, 0.22 ) }
    dend_44 { pt3dadd( -249.41, -83.3746, 4.46614, 0.22 ) }
    dend_44 { pt3dadd( -250.64, -83.9813, 4.57159, 0.22 ) }
    dend_44 { pt3dadd( -251.24, -84.2772, 4.6189, 1.03 ) }
    dend_44 { pt3dadd( -251.819, -84.5568, 4.65935, 1.03 ) }
    dend_44 { pt3dadd( -253.077, -85.1379, 4.72388, 0.22 ) }
    dend_44 { pt3dadd( -253.133, -85.1611, 4.72295, 0.22 ) }
    dend_44 { pt3dadd( -253.29, -85.2196, 4.71207, 0.74 ) }
    dend_44 { pt3dadd( -254.403, -85.5758, 4.56866, 0.22 ) }
    dend_44 { pt3dadd( -254.722, -85.671, 4.51122, 0.66 ) }
    dend_44 { pt3dadd( -255.095, -85.7782, 4.43603, 0.66 ) }
    dend_44 { pt3dadd( -256.851, -86.3042, 4.04341, 0.22 ) }
    dend_44 { pt3dadd( -256.931, -86.3292, 4.02569, 0.22 ) }
    dend_44 { pt3dadd( -257.293, -86.4443, 3.94552, 0.81 ) }
    dend_44 { pt3dadd( -257.349, -86.463, 3.93298, 0.81 ) }
    dend_44 { pt3dadd( -257.946, -86.6944, 3.79178, 0.81 ) }
    dend_44 { pt3dadd( -257.993, -86.7178, 3.78242, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_44 { pt3dadd( -259.118, -87.3435, 3.60178, 0.22 ) }
    dend_44 { pt3dadd( -259.216, -87.4016, 3.58624, 0.22 ) }
    dend_44 { pt3dadd( -259.523, -87.5852, 3.53836, 0.22 ) }
    dend_44 { pt3dadd( -260.085, -87.9314, 3.45324, 0.22 ) }
    dend_44 { pt3dadd( -262.059, -89.2152, 3.23843, 0.22 ) }
    dend_44 { pt3dadd( -262.111, -89.2491, 3.23524, 0.22 ) }
    dend_44 { pt3dadd( -262.403, -89.4515, 3.23096, 0.96 ) }
    dend_44 { pt3dadd( -263.085, -89.9054, 3.23776, 0.96 ) }
    dend_44 { pt3dadd( -263.626, -90.2528, 3.25921, 0.22 ) }
    dend_44 { pt3dadd( -264.732, -90.914, 3.34489, 0.22 ) }
    dend_44 { pt3dadd( -265.229, -91.1992, 3.38838, 0.66 ) }
    dend_44 { pt3dadd( -265.753, -91.4836, 3.4267, 0.66 ) }
    dend_44 { pt3dadd( -266.358, -91.7932, 3.48043, 0.22 ) }
    dend_44 { pt3dadd( -266.47, -91.8447, 3.49103, 0.22 ) }
    dend_44 { pt3dadd( -267.233, -92.1316, 3.55731, 0.22 ) }
    dend_44 { pt3dadd( -267.305, -92.1536, 3.56233, 0.22 ) }
    dend_44 { pt3dadd( -268.342, -92.4423, 3.67839, 0.22 ) }
    dend_44 { pt3dadd( -268.994, -92.6088, 3.77486, 0.96 ) }
    dend_44 { pt3dadd( -269.523, -92.7484, 3.86716, 0.96 ) }
    dend_44 { pt3dadd( -269.903, -92.8668, 3.94696, 0.96 ) }
    dend_44 { pt3dadd( -269.978, -92.8923, 3.96494, 0.96 ) }
    dend_44 { pt3dadd( -271.425, -93.4256, 4.32822, 0.22 ) }
    dend_44 { pt3dadd( -271.528, -93.4673, 4.35553, 0.22 ) }
    dend_44 { pt3dadd( -272.071, -93.7031, 4.49076, 1.03 ) }
    dend_44 { pt3dadd( -273.881, -94.5445, 4.99088, 0.22 ) }
    dend_44 { pt3dadd( -273.928, -94.5687, 4.99949, 0.22 ) }
    dend_44 { pt3dadd( -274.214, -94.7311, 5.02766, 1.03 ) }
    dend_44 { pt3dadd( -274.31, -94.7954, 5.02653, 1.03 ) }
    dend_44 { pt3dadd( -274.729, -95.1011, 4.98845, 1.03 ) }
    dend_44 { pt3dadd( -275.471, -95.756, 4.84393, 0.22 ) }
    dend_44 { pt3dadd( -276.649, -96.9738, 4.29562, 0.22 ) }
    dend_44 { pt3dadd( -276.796, -97.135, 4.21792, 0.22 ) }
    dend_44 { pt3dadd( -277.172, -97.5646, 4.00115, 0.22 ) }
    dend_44 { pt3dadd( -277.238, -97.64, 3.9606, 0.22 ) }
    dend_44 { pt3dadd( -278.238, -98.8024, 3.3041, 0.22 ) }
    dend_44 { pt3dadd( -279.072, -99.6938, 2.77844, 0.66 ) }
    dend_44 { pt3dadd( -279.466, -100.056, 2.59009, 0.66 ) }
    dend_44 { pt3dadd( -279.506, -100.087, 2.57313, 0.66 ) }
    dend_44 { pt3dadd( -280.193, -100.545, 2.34713, 0.22 ) }
    dend_44 { pt3dadd( -280.288, -100.602, 2.31908, 0.22 ) }
    dend_44 { pt3dadd( -281.166, -100.996, 2.13938, 0.22 ) }
    dend_44 { pt3dadd( -281.209, -101.013, 2.13799, 0.22 ) }
    dend_44 { pt3dadd( -282.294, -101.411, 2.12883, 0.22 ) }
    dend_44 { pt3dadd( -282.902, -101.639, 2.15155, 0.88 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 38.364, 91.3221, 62.6694, 0.52 ) }
    dend_39 { pt3dadd( 38.647, 91.4239, 62.6219, 0.52 ) }
    dend_39 { pt3dadd( 39.2449, 91.6393, 62.5216, 0.52 ) }
    dend_39 { pt3dadd( 40.0172, 91.9173, 62.3921, 0.52 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 48/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 38.364, 91.3221, 62.6694, 0.52 ) }
    dend_38 { pt3dadd( 38.941, 92.12, 62.6526, 0.52 ) }
    dend_38 { pt3dadd( 39.819, 93.3343, 62.6271, 0.52 ) }
    dend_38 { pt3dadd( 40.5753, 94.3801, 62.6051, 0.52 ) }
    dend_38 { pt3dadd( 41.0682, 95.0618, 62.5908, 0.52 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 53/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -54.1648, -6.62676, 43.812, 0.88 ) }
    dend_30 { pt3dadd( -54.031, -7.40682, 44.1738, 0.88 ) }
    dend_30 { pt3dadd( -53.8513, -9.6548, 45.086, 0.96 ) }
    dend_30 { pt3dadd( -53.8616, -10.9379, 45.6739, 0.96 ) }
    dend_30 { pt3dadd( -53.9439, -11.8526, 46.3066, 0.96 ) }
    dend_30 { pt3dadd( -54.0701, -12.6908, 47.062, 0.96 ) }
    dend_30 { pt3dadd( -54.2277, -13.3821, 47.7551, 0.96 ) }
    dend_30 { pt3dadd( -54.4826, -14.0691, 48.5609, 0.96 ) }
    dend_30 { pt3dadd( -55.2198, -15.3663, 50.2267, 0.81 ) }
    dend_30 { pt3dadd( -56.5036, -17.1524, 52.8503, 0.59 ) }
    dend_30 { pt3dadd( -57.2029, -18.026, 54.2198, 0.59 ) }
    dend_30 { pt3dadd( -57.6719, -18.596, 55.0783, 0.59 ) }
    dend_30 { pt3dadd( -58.3053, -19.3603, 56.0972, 0.59 ) }
    dend_30 { pt3dadd( -58.8627, -20.0504, 56.8955, 0.81 ) }
    dend_30 { pt3dadd( -59.9937, -21.5163, 58.2349, 0.81 ) }
    dend_30 { pt3dadd( -60.9454, -22.8908, 59.3531, 0.81 ) }
    dend_30 { pt3dadd( -61.9407, -24.6798, 61.0425, 0.81 ) }
    dend_30 { pt3dadd( -62.4942, -26.0003, 62.3866, 0.81 ) }
    dend_30 { pt3dadd( -62.686, -26.6042, 63.0073, 0.81 ) }
    dend_30 { pt3dadd( -62.8867, -27.4508, 63.8712, 0.66 ) }
    dend_30 { pt3dadd( -63.3392, -29.8981, 66.339, 0.96 ) }
    dend_30 { pt3dadd( -63.797, -33.3951, 69.8521, 0.81 ) }
    dend_30 { pt3dadd( -63.9167, -34.6755, 71.1257, 0.81 ) }
    dend_30 { pt3dadd( -64.0042, -35.7129, 72.0892, 0.81 ) }
    dend_30 { pt3dadd( -64.1294, -36.8199, 72.9558, 0.81 ) }
    dend_30 { pt3dadd( -64.2188, -37.3462, 73.2533, 0.96 ) }
    dend_30 { pt3dadd( -64.4812, -38.3734, 73.5017, 0.96 ) }
    dend_30 { pt3dadd( -64.931, -39.7644, 73.575, 0.96 ) }
    dend_30 { pt3dadd( -65.3495, -40.94, 73.5662, 0.96 ) }
    dend_30 { pt3dadd( -65.8057, -42.1634, 73.5064, 0.96 ) }
    dend_30 { pt3dadd( -66.4241, -43.7449, 73.3894, 0.96 ) }
    dend_30 { pt3dadd( -67.0862, -45.3841, 73.2314, 0.96 ) }
    dend_30 { pt3dadd( -67.625, -46.6213, 73.1066, 1.11 ) }
    dend_30 { pt3dadd( -68.3911, -48.2412, 72.9569, 1.11 ) }
    dend_30 { pt3dadd( -68.9093, -49.2631, 72.8874, 0.88 ) }
    dend_30 { pt3dadd( -69.5956, -50.5925, 72.8429, 0.88 ) }
    dend_30 { pt3dadd( -70.4552, -52.2334, 72.8518, 0.88 ) }
    dend_30 { pt3dadd( -71.6174, -54.5033, 72.9712, 0.88 ) }
    dend_30 { pt3dadd( -72.3134, -55.9426, 73.0833, 1.4 ) }
    dend_30 { pt3dadd( -72.8544, -57.1872, 73.2444, 1.03 ) }
    dend_30 { pt3dadd( -73.3938, -58.6147, 73.4565, 0.81 ) }
    dend_30 { pt3dadd( -73.7764, -59.8389, 73.6899, 0.81 ) }
    dend_30 { pt3dadd( -74.0454, -60.9646, 73.9561, 1.11 ) }
    dend_30 { pt3dadd( -74.2565, -62.0592, 74.2475, 1.11 ) }
    dend_30 { pt3dadd( -74.586, -63.5318, 74.6754, 1.11 ) }
    dend_30 { pt3dadd( -74.8997, -64.4841, 74.9704, 0.74 ) }
    dend_30 { pt3dadd( -75.3004, -65.3691, 75.2641, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_30 { pt3dadd( -75.9556, -66.4615, 75.638, 0.74 ) }
    dend_30 { pt3dadd( -76.6073, -67.3419, 75.9423, 0.66 ) }
    dend_30 { pt3dadd( -77.6962, -68.6392, 76.3643, 0.66 ) }
    dend_30 { pt3dadd( -78.8374, -69.9173, 76.6782, 0.66 ) }
    dend_30 { pt3dadd( -79.282, -70.4198, 76.7544, 0.66 ) }
    dend_30 { pt3dadd( -79.8056, -71.0464, 76.773, 0.66 ) }
    dend_30 { pt3dadd( -80.284, -71.6851, 76.7508, 0.44 ) }
    dend_30 { pt3dadd( -80.6783, -72.3228, 76.6839, 0.44 ) }
    dend_30 { pt3dadd( -81.2719, -73.4001, 76.5254, 0.44 ) }
    dend_30 { pt3dadd( -81.9366, -74.5557, 76.3493, 0.44 ) }
    dend_30 { pt3dadd( -82.4639, -75.3899, 76.318, 0.44 ) }
    dend_30 { pt3dadd( -83.2106, -76.5475, 76.4265, 0.44 ) }
    dend_30 { pt3dadd( -83.851, -77.5033, 76.6437, 0.44 ) }
    dend_30 { pt3dadd( -84.5742, -78.5782, 77.0092, 0.37 ) }
    dend_30 { pt3dadd( -85.5096, -80.0169, 77.6274, 0.37 ) }
    dend_30 { pt3dadd( -86.8006, -82.0144, 78.5945, 0.37 ) }
    dend_30 { pt3dadd( -87.5686, -83.199, 79.1905, 0.37 ) }
    dend_30 { pt3dadd( -88.4603, -84.5538, 79.8968, 0.37 ) }
    dend_30 { pt3dadd( -89.0418, -85.3599, 80.329, 0.37 ) }
    dend_30 { pt3dadd( -89.8808, -86.3965, 80.8562, 0.37 ) }
    dend_30 { pt3dadd( -90.8495, -87.4072, 81.307, 0.37 ) }
    dend_30 { pt3dadd( -91.6279, -88.0914, 81.5722, 0.37 ) }
    dend_30 { pt3dadd( -92.3718, -88.6262, 81.8028, 0.37 ) }
    dend_30 { pt3dadd( -93.9314, -89.6585, 82.2833, 0.37 ) }
    dend_30 { pt3dadd( -94.9941, -90.3509, 82.5962, 0.37 ) }
    dend_30 { pt3dadd( -95.9453, -91.0159, 82.8671, 0.37 ) }
    dend_30 { pt3dadd( -97.2098, -91.9365, 83.2315, 0.37 ) }
    dend_30 { pt3dadd( -98.1152, -92.6354, 83.4887, 0.37 ) }
    dend_30 { pt3dadd( -99.716, -94.0064, 83.919, 0.37 ) }
    dend_30 { pt3dadd( -100.57, -94.8732, 84.1647, 0.29 ) }
    dend_30 { pt3dadd( -101.589, -96.0162, 84.4517, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -54.1648, -6.62676, 43.812, 0.52 ) }
    dend_29 { pt3dadd( -54.6085, -6.6902, 43.7613, 0.52 ) }
    dend_29 { pt3dadd( -55.2335, -6.78427, 43.7176, 0.29 ) }
    dend_29 { pt3dadd( -55.7088, -6.8694, 43.6984, 0.29 ) }
    dend_29 { pt3dadd( -56.2495, -6.96623, 43.6767, 0.29 ) }
    dend_29 { pt3dadd( -56.7929, -7.06355, 43.6548, 0.29 ) }
    dend_29 { pt3dadd( -57.4373, -7.17895, 43.6289, 0.29 ) }
    dend_29 { pt3dadd( -58.0042, -7.27558, 43.5964, 0.22 ) }
    dend_29 { pt3dadd( -58.2718, -7.33048, 43.579, 0.22 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 40/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 68.3179, 25.5206, 19.6158, 1.11 ) }
    dend_20 { pt3dadd( 68.8556, 25.6952, 20.4798, 1.11 ) }
    dend_20 { pt3dadd( 70.1248, 26.28, 22.3837, 0.88 ) }
    dend_20 { pt3dadd( 70.1596, 26.2978, 22.4351, 0.88 ) }
    dend_20 { pt3dadd( 71.3229, 26.8282, 24.0318, 0.74 ) }
    dend_20 { pt3dadd( 71.8794, 26.9429, 24.86, 0.74 ) }
    dend_20 { pt3dadd( 71.9116, 26.941, 24.9519, 0.74 ) }
    dend_20 { pt3dadd( 72.437, 26.8319, 26.8718, 0.74 ) }
    dend_20 { pt3dadd( 72.4538, 26.8259, 26.9428, 0.74 ) }
    dend_20 { pt3dadd( 72.6762, 26.7231, 27.7806, 0.74 ) }
    dend_20 { pt3dadd( 73.5639, 26.1489, 30.8121, 1.03 ) }
    dend_20 { pt3dadd( 75.6036, 24.6654, 37.4674, 0.88 ) }
    dend_20 { pt3dadd( 75.8618, 24.477, 38.2847, 0.88 ) }
    dend_20 { pt3dadd( 75.8903, 24.4556, 38.375, 0.88 ) }
    dend_20 { pt3dadd( 76.723, 23.9284, 40.9471, 0.88 ) }
    dend_20 { pt3dadd( 77.4849, 23.5671, 43.2271, 0.52 ) }
    dend_20 { pt3dadd( 77.5656, 23.5499, 43.4216, 0.52 ) }
    dend_20 { pt3dadd( 77.8412, 23.5045, 43.8242, 0.52 ) }
    dend_20 { pt3dadd( 77.9316, 23.5035, 44.0043, 0.52 ) }
    dend_20 { pt3dadd( 77.8063, 24.2715, 44.962, 0.52 ) }
    dend_20 { pt3dadd( 77.7558, 24.3792, 45.0204, 0.52 ) }
    dend_20 { pt3dadd( 77.3649, 25.2916, 45.3946, 0.88 ) }
    dend_20 { pt3dadd( 76.8637, 26.5349, 45.9378, 0.44 ) }
    dend_20 { pt3dadd( 76.8387, 26.6008, 45.9675, 0.44 ) }
    dend_20 { pt3dadd( 76.525, 27.5133, 46.3633, 0.44 ) }
    dend_20 { pt3dadd( 76.6069, 27.4903, 46.4708, 0.44 ) }
    dend_20 { pt3dadd( 77.0738, 27.3276, 47.1113, 0.44 ) }
    dend_20 { pt3dadd( 77.7743, 27.1184, 48.0506, 0.44 ) }
    dend_20 { pt3dadd( 77.8629, 27.0918, 48.1656, 0.44 ) }
    dend_20 { pt3dadd( 78.9824, 26.8288, 49.6917, 0.44 ) }
    dend_20 { pt3dadd( 80.9295, 26.4031, 52.4764, 0.44 ) }
    dend_20 { pt3dadd( 80.9597, 26.3995, 52.5221, 0.44 ) }
    dend_20 { pt3dadd( 81.5221, 26.4203, 53.4508, 0.66 ) }
    dend_20 { pt3dadd( 81.5848, 26.448, 53.5707, 0.66 ) }
    dend_20 { pt3dadd( 82.1321, 27.0513, 55.0176, 0.66 ) }
    dend_20 { pt3dadd( 82.2018, 27.1986, 55.2575, 0.66 ) }
    dend_20 { pt3dadd( 82.4105, 27.4886, 55.9991, 0.66 ) }
    dend_20 { pt3dadd( 82.6333, 27.663, 56.7725, 0.66 ) }
    dend_20 { pt3dadd( 82.933, 27.7708, 57.6766, 0.96 ) }
    dend_20 { pt3dadd( 83.8141, 27.9195, 60.0107, 0.44 ) }
    dend_20 { pt3dadd( 84.1884, 27.9191, 60.864, 0.44 ) }
    dend_20 { pt3dadd( 86.3001, 27.7449, 65.1939, 0.44 ) }
    dend_20 { pt3dadd( 86.3267, 27.7409, 65.2417, 0.44 ) }
    dend_20 { pt3dadd( 86.9249, 27.6517, 66.1433, 0.44 ) }
    dend_20 { pt3dadd( 87.1719, 27.6247, 66.4436, 0.44 ) }
    dend_20 { pt3dadd( 87.8052, 27.6488, 67.0, 0.44 ) }
    dend_20 { pt3dadd( 87.9142, 27.6865, 67.0652, 0.44 ) }
    dend_20 { pt3dadd( 88.8821, 28.4574, 67.0622, 0.37 ) }
    dend_20 { pt3dadd( 89.696, 29.2255, 67.0695, 0.37 ) }
    dend_20 { pt3dadd( 89.8576, 29.4074, 67.0685, 0.37 ) }
    dend_20 { pt3dadd( 90.1205, 29.7321, 67.0614, 0.37 ) }
    dend_20 { pt3dadd( 90.2315, 29.889, 67.0565, 0.37 ) }
    dend_20 { pt3dadd( 90.5688, 30.3735, 67.0663, 0.37 ) }
    dend_20 { pt3dadd( 91.3231, 31.449, 67.2904, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 94/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 68.3179, 25.5206, 19.6158, 0.37 ) }
    dend_19 { pt3dadd( 68.6579, 27.0739, 19.9489, 0.37 ) }
    dend_19 { pt3dadd( 68.6837, 27.1571, 19.9723, 0.37 ) }
    dend_19 { pt3dadd( 69.19, 28.6462, 20.465, 0.37 ) }
    dend_19 { pt3dadd( 69.2445, 28.8042, 20.5219, 0.37 ) }
    dend_19 { pt3dadd( 69.7724, 30.3461, 21.1036, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_19 { pt3dadd( 69.8256, 30.5032, 21.1642, 0.37 ) }
    dend_19 { pt3dadd( 70.1947, 31.5656, 21.6468, 0.37 ) }
    dend_19 { pt3dadd( 70.5585, 32.6136, 22.1233, 0.81 ) }
    dend_19 { pt3dadd( 70.9193, 33.6802, 22.6046, 0.52 ) }
    dend_19 { pt3dadd( 71.1485, 34.5516, 22.9531, 0.52 ) }
    dend_19 { pt3dadd( 71.1637, 34.6359, 22.9828, 0.52 ) }
    dend_19 { pt3dadd( 71.295, 35.4201, 23.2223, 0.52 ) }
    dend_19 { pt3dadd( 71.3191, 35.59, 23.2661, 0.52 ) }
    dend_19 { pt3dadd( 71.4748, 36.665, 23.4821, 0.37 ) }
    dend_19 { pt3dadd( 71.6803, 38.04, 23.7039, 1.03 ) }
    dend_19 { pt3dadd( 71.8085, 38.8633, 23.8185, 0.52 ) }
    dend_19 { pt3dadd( 72.0203, 40.1836, 24.0038, 0.22 ) }
    dend_19 { pt3dadd( 72.0331, 40.2607, 24.015, 0.22 ) }
    dend_19 { pt3dadd( 72.1625, 41.0109, 24.1357, 0.59 ) }
    dend_19 { pt3dadd( 72.2652, 41.5161, 24.2342, 0.81 ) }
    dend_19 { pt3dadd( 72.3207, 41.7504, 24.2951, 0.81 ) }
    dend_19 { pt3dadd( 72.4851, 42.5345, 24.5088, 0.29 ) }
    dend_19 { pt3dadd( 72.574, 43.0107, 24.6485, 0.29 ) }
    dend_19 { pt3dadd( 72.6159, 43.1888, 24.6862, 0.29 ) }
    dend_19 { pt3dadd( 72.7999, 43.8648, 24.7983, 0.29 ) }
    dend_19 { pt3dadd( 73.006, 44.4836, 24.8598, 0.88 ) }
    dend_19 { pt3dadd( 73.3388, 45.3416, 24.9065, 0.88 ) }
    dend_19 { pt3dadd( 73.4458, 45.562, 24.9219, 0.88 ) }
    dend_19 { pt3dadd( 74.2284, 47.0163, 25.061, 0.37 ) }
    dend_19 { pt3dadd( 74.2687, 47.0823, 25.0705, 0.37 ) }
    dend_19 { pt3dadd( 74.7695, 47.8074, 25.2007, 0.37 ) }
    dend_19 { pt3dadd( 75.017, 48.1218, 25.2505, 0.37 ) }
    dend_19 { pt3dadd( 75.8888, 49.1553, 25.4054, 0.37 ) }
    dend_19 { pt3dadd( 75.9984, 49.278, 25.4254, 0.37 ) }
    dend_19 { pt3dadd( 76.9095, 50.2312, 25.6082, 0.37 ) }
    dend_19 { pt3dadd( 76.963, 50.2862, 25.6169, 0.37 ) }
    dend_19 { pt3dadd( 78.5762, 51.9674, 25.8422, 0.37 ) }
    dend_19 { pt3dadd( 78.6275, 52.025, 25.8468, 0.37 ) }
    dend_19 { pt3dadd( 79.485, 53.0655, 25.8963, 0.37 ) }
    dend_19 { pt3dadd( 79.6823, 53.3456, 25.8711, 0.37 ) }
    dend_19 { pt3dadd( 80.2972, 54.3192, 25.7034, 0.37 ) }
    dend_19 { pt3dadd( 80.8162, 55.2047, 25.5101, 1.25 ) }
    dend_19 { pt3dadd( 81.5284, 56.5495, 25.108, 2.06 ) }
    dend_19 { pt3dadd( 81.9705, 57.4346, 24.8071, 2.36 ) }
    dend_19 { pt3dadd( 83.3332, 60.3278, 23.7946, 1.84 ) }
    dend_19 { pt3dadd( 83.7475, 61.1985, 23.4769, 1.25 ) }
    dend_19 { pt3dadd( 83.7743, 61.2549, 23.4553, 1.25 ) }
    dend_19 { pt3dadd( 84.5011, 62.6606, 22.8938, 0.59 ) }
    dend_19 { pt3dadd( 84.9039, 63.3694, 22.588, 0.59 ) }
    dend_19 { pt3dadd( 85.6798, 64.6545, 22.0293, 0.52 ) }
    dend_19 { pt3dadd( 86.8815, 66.3396, 21.3913, 0.52 ) }
    dend_19 { pt3dadd( 86.9185, 66.3886, 21.3682, 0.52 ) }
    dend_19 { pt3dadd( 87.3019, 66.8663, 21.1018, 0.81 ) }
    dend_19 { pt3dadd( 88.5798, 68.3116, 20.1843, 0.22 ) }
    dend_19 { pt3dadd( 88.6836, 68.4214, 20.1057, 0.22 ) }
    dend_19 { pt3dadd( 89.5886, 69.3303, 19.4168, 0.22 ) }
    dend_19 { pt3dadd( 90.956, 70.6563, 18.4761, 0.22 ) }
    dend_19 { pt3dadd( 92.0469, 71.7259, 17.7867, 0.96 ) }
    dend_19 { pt3dadd( 92.6548, 72.3252, 17.4575, 1.11 ) }
    dend_19 { pt3dadd( 93.0564, 72.7099, 17.3093, 1.11 ) }
    dend_19 { pt3dadd( 93.4446, 73.1149, 17.1933, 0.22 ) }
    dend_19 { pt3dadd( 93.7723, 73.5138, 17.1536, 0.22 ) }
    dend_19 { pt3dadd( 93.9127, 73.6917, 17.1646, 0.22 ) }
    dend_19 { pt3dadd( 94.3487, 74.2771, 17.2379, 0.22 ) }
    dend_19 { pt3dadd( 95.0786, 75.3055, 17.3627, 0.22 ) }
    dend_19 { pt3dadd( 96.146, 76.8425, 17.5384, 0.22 ) }
    dend_19 { pt3dadd( 97.356, 78.6139, 17.7277, 0.22 ) }
    dend_19 { pt3dadd( 97.8048, 79.2855, 17.7965, 0.66 ) }
    dend_19 { pt3dadd( 98.1029, 79.7412, 17.8423, 0.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 64/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 34.8789, 14.1046, 8.73075, 0.59 ) }
    dend_17 { pt3dadd( 35.0511, 14.1085, 9.11602, 0.59 ) }
    dend_17 { pt3dadd( 35.2181, 14.144, 9.56858, 0.59 ) }
    dend_17 { pt3dadd( 35.5085, 14.2352, 10.427, 0.59 ) }
    dend_17 { pt3dadd( 35.6621, 14.3097, 10.982, 1.03 ) }
    dend_17 { pt3dadd( 36.0491, 14.5357, 12.7761, 0.88 ) }
    dend_17 { pt3dadd( 36.0548, 14.5392, 12.8124, 0.88 ) }
    dend_17 { pt3dadd( 36.1161, 14.6276, 13.8441, 0.88 ) }
    dend_17 { pt3dadd( 36.1144, 14.6302, 13.8811, 0.88 ) }
    dend_17 { pt3dadd( 35.9979, 14.6532, 14.58, 0.66 ) }
    dend_17 { pt3dadd( 35.8519, 14.6068, 15.1029, 0.66 ) }
    dend_17 { pt3dadd( 35.6527, 14.4065, 15.5786, 0.81 ) }
    dend_17 { pt3dadd( 35.6427, 14.3923, 15.6123, 0.81 ) }
    dend_17 { pt3dadd( 35.5863, 14.1576, 16.1184, 0.59 ) }
    dend_17 { pt3dadd( 35.6115, 14.1295, 16.2216, 0.59 ) }
    dend_17 { pt3dadd( 35.9424, 14.153, 16.6179, 0.59 ) }
    dend_17 { pt3dadd( 36.0376, 14.1753, 16.6996, 0.59 ) }
    dend_17 { pt3dadd( 37.0298, 14.4613, 17.3414, 0.59 ) }
    dend_17 { pt3dadd( 37.4689, 14.6014, 17.5856, 0.96 ) }
    dend_17 { pt3dadd( 37.8932, 14.762, 17.805, 0.59 ) }
    dend_17 { pt3dadd( 38.2681, 14.9433, 18.0537, 0.59 ) }
    dend_17 { pt3dadd( 38.3229, 14.9739, 18.1007, 0.59 ) }
    dend_17 { pt3dadd( 38.8921, 15.302, 18.671, 0.59 ) }
    dend_17 { pt3dadd( 38.9538, 15.3371, 18.7467, 0.59 ) }
    dend_17 { pt3dadd( 39.3521, 15.5795, 19.3294, 1.18 ) }
    dend_17 { pt3dadd( 40.1285, 15.9867, 20.5778, 1.11 ) }
    dend_17 { pt3dadd( 40.7577, 16.2795, 21.6546, 1.11 ) }
    dend_17 { pt3dadd( 40.773, 16.2849, 21.6816, 1.11 ) }
    dend_17 { pt3dadd( 41.3761, 16.4418, 22.784, 0.74 ) }
    dend_17 { pt3dadd( 41.3921, 16.4441, 22.8111, 0.74 ) }
    dend_17 { pt3dadd( 42.0162, 16.4477, 23.7806, 0.74 ) }
    dend_17 { pt3dadd( 42.0357, 16.4586, 23.8358, 0.74 ) }
    dend_17 { pt3dadd( 42.2473, 16.7665, 24.7651, 1.03 ) }
    dend_17 { pt3dadd( 42.2543, 16.7817, 24.8036, 1.03 ) }
    dend_17 { pt3dadd( 42.4051, 17.2049, 25.741, 0.74 ) }
    dend_17 { pt3dadd( 42.4113, 17.2233, 25.7782, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_17 { pt3dadd( 43.0753, 19.6343, 30.1599, 1.25 ) }
    dend_17 { pt3dadd( 43.2295, 20.1948, 31.1233, 0.66 ) }
    dend_17 { pt3dadd( 43.2342, 20.214, 31.1541, 0.66 ) }
    dend_17 { pt3dadd( 43.3068, 20.4987, 31.5904, 0.66 ) }
    dend_17 { pt3dadd( 43.3676, 20.7519, 31.9574, 0.44 ) }
    dend_17 { pt3dadd( 43.3855, 20.7996, 32.0171, 0.44 ) }
    dend_17 { pt3dadd( 43.6391, 21.068, 32.1621, 0.29 ) }
    dend_17 { pt3dadd( 43.6718, 21.1034, 32.1823, 0.29 ) }
    dend_17 { pt3dadd( 44.03, 21.4689, 32.4194, 0.59 ) }
    dend_17 { pt3dadd( 44.0563, 21.4957, 32.4384, 0.59 ) }
    dend_17 { pt3dadd( 44.8616, 22.2294, 32.9815, 1.18 ) }
    dend_17 { pt3dadd( 45.8451, 22.9484, 33.5462, 0.59 ) }
    dend_17 { pt3dadd( 46.5622, 23.3815, 33.9116, 0.59 ) }
    dend_17 { pt3dadd( 46.8628, 23.5206, 34.0394, 0.44 ) }
    dend_17 { pt3dadd( 46.8949, 23.5337, 34.0514, 0.44 ) }
    dend_17 { pt3dadd( 47.5113, 23.8067, 34.2971, 0.44 ) }
    dend_17 { pt3dadd( 48.1547, 24.0779, 34.5382, 0.44 ) }
    dend_17 { pt3dadd( 48.1833, 24.094, 34.5546, 0.44 ) }
    dend_17 { pt3dadd( 48.5764, 24.4149, 34.9029, 0.44 ) }
    dend_17 { pt3dadd( 49.1153, 24.8851, 35.4979, 0.66 ) }
    dend_17 { pt3dadd( 49.6464, 25.4116, 36.2983, 0.66 ) }
    dend_17 { pt3dadd( 49.6608, 25.4285, 36.3274, 0.66 ) }
    dend_17 { pt3dadd( 50.0073, 25.8367, 37.1143, 0.52 ) }
    dend_17 { pt3dadd( 50.0237, 25.8521, 37.1496, 0.52 ) }
    dend_17 { pt3dadd( 50.2178, 25.9835, 37.5532, 0.52 ) }
    dend_17 { pt3dadd( 50.6966, 26.1935, 38.4329, 0.74 ) }
    dend_17 { pt3dadd( 50.714, 26.2032, 38.4637, 0.74 ) }
    dend_17 { pt3dadd( 50.9817, 26.4121, 38.9414, 0.44 ) }
    dend_17 { pt3dadd( 51.3023, 26.7965, 39.4938, 0.44 ) }
    dend_17 { pt3dadd( 51.3333, 26.8449, 39.5473, 0.44 ) }
    dend_17 { pt3dadd( 51.6413, 27.5296, 40.0109, 0.44 ) }
    dend_17 { pt3dadd( 51.8251, 28.0379, 40.2021, 0.44 ) }
    dend_17 { pt3dadd( 51.8405, 28.0872, 40.2134, 0.44 ) }
    dend_17 { pt3dadd( 51.9694, 28.55, 40.2373, 0.44 ) }
    dend_17 { pt3dadd( 51.9808, 28.5856, 40.23, 0.44 ) }
    dend_17 { pt3dadd( 52.2802, 29.194, 39.9861, 0.44 ) }
    dend_17 { pt3dadd( 52.2994, 29.2222, 39.9688, 0.44 ) }
    dend_17 { pt3dadd( 52.5555, 29.5568, 39.7744, 0.29 ) }
    dend_17 { pt3dadd( 52.817, 29.9335, 39.6186, 0.29 ) }
    dend_17 { pt3dadd( 52.8924, 30.0487, 39.5856, 0.29 ) }
    dend_17 { pt3dadd( 53.2542, 30.7073, 39.4507, 0.29 ) }
    dend_17 { pt3dadd( 53.2736, 30.7571, 39.4489, 0.29 ) }
    dend_17 { pt3dadd( 53.4337, 31.4384, 39.4846, 0.22 ) }
    dend_17 { pt3dadd( 53.4645, 32.1169, 39.5658, 0.22 ) }
    dend_17 { pt3dadd( 53.461, 32.1535, 39.5718, 0.22 ) }
    dend_17 { pt3dadd( 53.3762, 32.56, 39.6296, 0.22 ) }
    dend_17 { pt3dadd( 53.1694, 33.1543, 39.7018, 0.22 ) }
    dend_17 { pt3dadd( 53.1341, 33.2353, 39.7013, 0.22 ) }
    dend_17 { pt3dadd( 52.9578, 33.562, 39.6553, 0.22 ) }
    dend_17 { pt3dadd( 52.9176, 33.6328, 39.6348, 0.22 ) }
    dend_17 { pt3dadd( 52.7216, 33.9888, 39.5143, 0.22 ) }
    dend_17 { pt3dadd( 52.6835, 34.0655, 39.4785, 0.59 ) }
    dend_17 { pt3dadd( 52.4833, 34.4146, 39.2071, 0.59 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 53/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 34.8789, 14.1046, 8.73075, 0.66 ) }
    dend_16 { pt3dadd( 34.563, 14.5898, 8.71714, 0.66 ) }
    dend_16 { pt3dadd( 34.3065, 15.2509, 8.32009, 0.66 ) }
    dend_16 { pt3dadd( 34.3924, 15.9032, 6.91395, 0.29 ) }
    dend_16 { pt3dadd( 34.4735, 16.1336, 6.40204, 0.22 ) }
    dend_16 { pt3dadd( 34.5468, 16.2714, 6.1094, 0.22 ) }
    dend_16 { pt3dadd( 34.9964, 16.8982, 4.92847, 0.52 ) }
    dend_16 { pt3dadd( 35.4454, 17.3711, 4.02048, 0.88 ) }
    dend_16 { pt3dadd( 36.0015, 17.9098, 3.14975, 1.18 ) }
    dend_16 { pt3dadd( 36.6037, 18.525, 2.39788, 0.66 ) }
    dend_16 { pt3dadd( 37.3998, 19.4275, 1.62469, 0.52 ) }
    dend_16 { pt3dadd( 38.2349, 20.5933, 1.01438, 0.52 ) }
    dend_16 { pt3dadd( 38.2708, 20.6566, 0.997309, 0.52 ) }
    dend_16 { pt3dadd( 39.0514, 22.4087, 0.722932, 0.88 ) }
    dend_16 { pt3dadd( 39.6244, 24.1259, 0.544418, 1.33 ) }
    dend_16 { pt3dadd( 39.6372, 24.1988, 0.533942, 1.33 ) }
    dend_16 { pt3dadd( 39.6826, 25.2094, 0.284847, 0.81 ) }
    dend_16 { pt3dadd( 39.6108, 26.0261, -0.0611858, 0.52 ) }
    dend_16 { pt3dadd( 39.4253, 27.203, -0.794857, 0.52 ) }
    dend_16 { pt3dadd( 39.3013, 27.7257, -1.23574, 0.96 ) }
    dend_16 { pt3dadd( 38.9235, 29.2218, -2.67784, 0.96 ) }
    dend_16 { pt3dadd( 38.7117, 30.2187, -3.65787, 0.44 ) }
    dend_16 { pt3dadd( 38.5913, 30.9166, -4.29924, 0.37 ) }
    dend_16 { pt3dadd( 38.449, 31.8898, -5.09768, 0.37 ) }
    dend_16 { pt3dadd( 38.442, 31.952, -5.13927, 0.37 ) }
    dend_16 { pt3dadd( 38.3463, 32.979, -5.67348, 0.37 ) }
    dend_16 { pt3dadd( 38.2776, 33.8871, -5.92485, 0.88 ) }
    dend_16 { pt3dadd( 38.1345, 35.625, -6.17328, 0.66 ) }
    dend_16 { pt3dadd( 38.1289, 35.699, -6.17841, 0.66 ) }
    dend_16 { pt3dadd( 38.0512, 36.6073, -6.19001, 0.52 ) }
    dend_16 { pt3dadd( 38.0088, 37.2643, -6.18587, 0.52 ) }
    dend_16 { pt3dadd( 37.9046, 39.2852, -6.09918, 0.88 ) }
    dend_16 { pt3dadd( 37.9046, 39.3484, -6.09429, 0.88 ) }
    dend_16 { pt3dadd( 38.0187, 40.422, -6.03818, 1.25 ) }
    dend_16 { pt3dadd( 38.0338, 40.4947, -6.03756, 1.25 ) }
    dend_16 { pt3dadd( 38.3868, 41.6151, -6.07169, 1.25 ) }
    dend_16 { pt3dadd( 38.4654, 41.8006, -6.08496, 1.25 ) }
    dend_16 { pt3dadd( 39.1205, 43.0257, -6.26688, 0.96 ) }
    dend_16 { pt3dadd( 39.5822, 43.8702, -6.40077, 0.52 ) }
    dend_16 { pt3dadd( 40.0735, 44.7835, -6.58709, 0.44 ) }
    dend_16 { pt3dadd( 40.1208, 44.8753, -6.60957, 0.44 ) }
    dend_16 { pt3dadd( 40.3648, 45.3902, -6.78094, 0.44 ) }
    dend_16 { pt3dadd( 40.3927, 45.4548, -6.80746, 0.44 ) }
    dend_16 { pt3dadd( 40.8582, 46.8442, -7.53572, 0.44 ) }
    dend_16 { pt3dadd( 41.1389, 48.0103, -8.12733, 0.44 ) }
    dend_16 { pt3dadd( 41.1512, 48.0768, -8.16082, 0.44 ) }
    dend_16 { pt3dadd( 41.281, 48.8759, -8.5623, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_16 { pt3dadd( 41.2936, 48.955, -8.59377, 0.44 ) }
    dend_16 { pt3dadd( 41.4906, 49.9685, -8.86728, 0.44 ) }
    dend_16 { pt3dadd( 41.8352, 51.2227, -9.05504, 0.44 ) }
    dend_16 { pt3dadd( 42.1406, 52.0173, -9.10144, 0.88 ) }
    dend_16 { pt3dadd( 42.1715, 52.0849, -9.10383, 0.88 ) }
    dend_16 { pt3dadd( 43.0905, 53.8603, -9.22688, 1.25 ) }
    dend_16 { pt3dadd( 43.6471, 54.875, -9.33831, 0.74 ) }
    dend_16 { pt3dadd( 44.0866, 55.6604, -9.46901, 0.74 ) }
    dend_16 { pt3dadd( 44.6432, 56.7406, -9.72105, 0.59 ) }
    dend_16 { pt3dadd( 45.0816, 57.6898, -10.0014, 0.52 ) }
    dend_16 { pt3dadd( 45.688, 59.2421, -10.5907, 0.37 ) }
    dend_16 { pt3dadd( 46.0007, 60.3106, -11.1084, 1.33 ) }
    dend_16 { pt3dadd( 46.2152, 61.3632, -11.6629, 1.33 ) }
    dend_16 { pt3dadd( 46.3143, 62.4673, -12.2648, 0.96 ) }
    dend_16 { pt3dadd( 46.3124, 63.2973, -12.7273, 0.52 ) }
    dend_16 { pt3dadd( 46.2516, 64.2329, -13.2662, 0.52 ) }
    dend_16 { pt3dadd( 46.1341, 65.3649, -13.9395, 0.52 ) }
    dend_16 { pt3dadd( 46.1132, 65.5649, -14.0638, 0.52 ) }
    dend_16 { pt3dadd( 46.0241, 66.7474, -14.7936, 0.52 ) }
    dend_16 { pt3dadd( 46.0192, 66.8745, -14.8743, 0.52 ) }
    dend_16 { pt3dadd( 46.0032, 67.6831, -15.3731, 0.37 ) }
    dend_16 { pt3dadd( 46.0181, 68.7613, -16.0291, 0.37 ) }
    dend_16 { pt3dadd( 46.0434, 69.5332, -16.5945, 1.03 ) }
    dend_16 { pt3dadd( 46.0492, 69.6585, -16.7002, 1.03 ) }
    dend_16 { pt3dadd( 46.0983, 70.2545, -17.2664, 1.03 ) }
    dend_16 { pt3dadd( 46.153, 70.9854, -18.0301, 1.25 ) }
    dend_16 { pt3dadd( 46.1866, 71.6496, -18.8079, 1.25 ) }
    dend_16 { pt3dadd( 46.1888, 72.7345, -20.1985, 1.25 ) }
    dend_16 { pt3dadd( 46.1788, 73.1075, -20.7088, 0.44 ) }
    dend_16 { pt3dadd( 46.1623, 73.3951, -21.0763, 0.44 ) }
    dend_16 { pt3dadd( 46.1035, 74.0185, -21.7869, 0.44 ) }
    dend_16 { pt3dadd( 46.0976, 74.0729, -21.8384, 0.44 ) }
    dend_16 { pt3dadd( 45.9828, 74.9431, -22.4984, 0.44 ) }
    dend_16 { pt3dadd( 45.9767, 75.0065, -22.5383, 0.44 ) }
    dend_16 { pt3dadd( 45.954, 75.7028, -22.9887, 0.44 ) }
    dend_16 { pt3dadd( 45.9753, 76.5871, -23.5814, 0.44 ) }
    dend_16 { pt3dadd( 46.0335, 77.4384, -24.1472, 0.44 ) }
    dend_16 { pt3dadd( 46.1538, 78.5164, -24.863, 1.18 ) }
    dend_16 { pt3dadd( 46.3067, 79.4956, -25.5156, 1.18 ) }
    dend_16 { pt3dadd( 46.6075, 81.3743, -26.7939, 1.18 ) }
    dend_16 { pt3dadd( 46.6857, 81.9118, -27.1369, 0.66 ) }
    dend_16 { pt3dadd( 46.7507, 82.4397, -27.4384, 0.44 ) }
    dend_16 { pt3dadd( 46.7939, 83.0779, -27.7566, 0.44 ) }
    dend_16 { pt3dadd( 46.795, 83.1573, -27.7896, 0.44 ) }
    dend_16 { pt3dadd( 46.739, 84.1548, -28.1266, 0.44 ) }
    dend_16 { pt3dadd( 46.6276, 85.724, -28.4841, 0.44 ) }
    dend_16 { pt3dadd( 46.6286, 85.9563, -28.5148, 0.44 ) }
    dend_16 { pt3dadd( 46.6991, 86.9668, -28.6003, 1.11 ) }
    dend_16 { pt3dadd( 46.8081, 87.7617, -28.6451, 1.55 ) }
    dend_16 { pt3dadd( 46.8414, 87.9245, -28.6553, 1.55 ) }
    dend_16 { pt3dadd( 47.235, 89.2958, -28.6953, 1.55 ) }
    dend_16 { pt3dadd( 47.7288, 90.8691, -28.7835, 0.81 ) }
    dend_16 { pt3dadd( 47.7496, 90.9405, -28.7856, 0.81 ) }
    dend_16 { pt3dadd( 47.864, 91.454, -28.7579, 0.66 ) }
    dend_16 { pt3dadd( 47.9445, 92.0593, -28.7065, 0.66 ) }
    dend_16 { pt3dadd( 47.9963, 93.124, -28.6363, 0.52 ) }
    dend_16 { pt3dadd( 47.9492, 93.953, -28.5955, 0.52 ) }
    dend_16 { pt3dadd( 47.9407, 94.0368, -28.59, 0.52 ) }
    dend_16 { pt3dadd( 47.7959, 95.6552, -28.4579, 0.52 ) }
    dend_16 { pt3dadd( 47.7551, 96.0872, -28.4127, 1.11 ) }
    dend_16 { pt3dadd( 47.7095, 96.6986, -28.4011, 1.11 ) }
    dend_16 { pt3dadd( 47.703, 96.8361, -28.4122, 1.11 ) }
    dend_16 { pt3dadd( 47.7071, 98.2662, -28.6115, 0.52 ) }
    dend_16 { pt3dadd( 47.7232, 98.8809, -28.7532, 0.44 ) }
    dend_16 { pt3dadd( 47.7263, 98.9618, -28.782, 0.44 ) }
    dend_16 { pt3dadd( 47.7552, 100.589, -29.4448, 0.44 ) }
    dend_16 { pt3dadd( 47.7542, 100.657, -29.4765, 0.44 ) }
    dend_16 { pt3dadd( 47.7139, 101.682, -30.011, 1.11 ) }
    dend_16 { pt3dadd( 47.6679, 102.247, -30.3161, 1.11 ) }
    dend_16 { pt3dadd( 47.6035, 102.945, -30.6613, 0.74 ) }
    dend_16 { pt3dadd( 47.5436, 103.583, -30.9558, 0.37 ) }
    dend_16 { pt3dadd( 47.4731, 104.325, -31.2718, 0.37 ) }
    dend_16 { pt3dadd( 47.4681, 104.395, -31.2989, 0.37 ) }
    dend_16 { pt3dadd( 47.3964, 105.676, -31.7579, 0.37 ) }
    dend_16 { pt3dadd( 47.3574, 106.336, -31.976, 0.29 ) }
    dend_16 { pt3dadd( 47.3506, 106.418, -31.9998, 0.29 ) }
    dend_16 { pt3dadd( 47.2477, 107.074, -32.2031, 0.29 ) }
    dend_16 { pt3dadd( 46.9864, 108.183, -32.5501, 0.29 ) }
    dend_16 { pt3dadd( 46.9381, 108.35, -32.6031, 0.29 ) }
    dend_16 { pt3dadd( 46.6583, 109.202, -32.8866, 0.29 ) }
    dend_16 { pt3dadd( 46.3445, 110.085, -33.157, 0.29 ) }
    dend_16 { pt3dadd( 45.9223, 111.294, -33.4784, 0.29 ) }
    dend_16 { pt3dadd( 45.6964, 112.013, -33.6598, 0.29 ) }
    dend_16 { pt3dadd( 45.6613, 112.142, -33.6932, 0.29 ) }
    dend_16 { pt3dadd( 45.4946, 113.141, -33.9601, 0.29 ) }
    dend_16 { pt3dadd( 45.4869, 113.265, -33.9939, 0.29 ) }
    dend_16 { pt3dadd( 45.5252, 114.188, -34.3021, 1.25 ) }
    dend_16 { pt3dadd( 45.6533, 115.284, -34.7059, 1.69 ) }
    dend_16 { pt3dadd( 45.6628, 115.364, -34.7359, 1.69 ) }
    dend_16 { pt3dadd( 45.7617, 116.454, -35.1529, 1.69 ) }
    dend_16 { pt3dadd( 45.7786, 116.674, -35.2402, 1.69 ) }
    dend_16 { pt3dadd( 45.8443, 117.616, -35.6294, 1.69 ) }
    dend_16 { pt3dadd( 45.8505, 117.713, -35.6719, 1.69 ) }
    dend_16 { pt3dadd( 45.9198, 119.194, -36.2854, 0.52 ) }
    dend_16 { pt3dadd( 45.9698, 120.023, -36.6113, 0.37 ) }
    dend_16 { pt3dadd( 46.029, 120.945, -36.8167, 0.37 ) }
    dend_16 { pt3dadd( 46.0344, 121.019, -36.8265, 0.37 ) }
    dend_16 { pt3dadd( 46.0991, 121.716, -36.8756, 0.37 ) }
    dend_16 { pt3dadd( 46.1085, 121.79, -36.8794, 0.37 ) }
    dend_16 { pt3dadd( 46.5204, 124.122, -36.9772, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_16 { pt3dadd( 47.0472, 126.652, -37.0304, 0.37 ) }
    dend_16 { pt3dadd( 47.0647, 126.724, -37.0326, 0.37 ) }
    dend_16 { pt3dadd( 47.2851, 127.529, -37.0755, 1.18 ) }
    dend_16 { pt3dadd( 47.4998, 128.235, -37.1423, 1.92 ) }
    dend_16 { pt3dadd( 47.7473, 128.958, -37.2613, 1.25 ) }
    dend_16 { pt3dadd( 47.8912, 129.305, -37.38, 0.59 ) }
    dend_16 { pt3dadd( 48.2005, 130.006, -37.7454, 0.59 ) }
    dend_16 { pt3dadd( 48.2312, 130.077, -37.7817, 0.59 ) }
    dend_16 { pt3dadd( 48.7423, 131.373, -38.4207, 0.29 ) }
    dend_16 { pt3dadd( 48.7663, 131.437, -38.4521, 0.29 ) }
    dend_16 { pt3dadd( 49.2395, 132.728, -39.0873, 0.29 ) }
    dend_16 { pt3dadd( 49.2665, 132.801, -39.124, 0.29 ) }
    dend_16 { pt3dadd( 49.5769, 133.646, -39.5683, 0.29 ) }
    dend_16 { pt3dadd( 49.6873, 133.938, -39.7313, 0.81 ) }
    dend_16 { pt3dadd( 49.8846, 134.489, -40.0259, 0.44 ) }
    dend_16 { pt3dadd( 49.999, 134.929, -40.2368, 0.44 ) }
    dend_16 { pt3dadd( 50.0435, 135.212, -40.3584, 0.44 ) }
    dend_16 { pt3dadd( 50.0625, 135.866, -40.6341, 0.44 ) }
    dend_16 { pt3dadd( 50.047, 136.023, -40.7051, 0.44 ) }
    dend_16 { pt3dadd( 49.9213, 137.088, -41.223, 0.88 ) }
    dend_16 { pt3dadd( 49.821, 137.942, -41.6164, 0.88 ) }
    dend_16 { pt3dadd( 49.8045, 138.107, -41.692, 0.88 ) }
    dend_16 { pt3dadd( 49.7231, 139.303, -42.2466, 0.52 ) }
    dend_16 { pt3dadd( 49.6791, 140.6, -42.8054, 0.52 ) }
    dend_16 { pt3dadd( 49.6634, 141.838, -43.3296, 0.37 ) }
    dend_16 { pt3dadd( 49.6646, 142.931, -43.799, 1.11 ) }
    dend_16 { pt3dadd( 49.6758, 143.882, -44.1799, 1.47 ) }
    dend_16 { pt3dadd( 49.6872, 144.491, -44.4124, 1.47 ) }
    dend_16 { pt3dadd( 49.7348, 145.9, -44.8588, 0.44 ) }
    dend_16 { pt3dadd( 49.7437, 146.483, -45.0027, 0.44 ) }
    dend_16 { pt3dadd( 49.7401, 146.833, -45.0762, 0.37 ) }
    dend_16 { pt3dadd( 49.7355, 147.111, -45.1369, 0.37 ) }
    dend_16 { pt3dadd( 49.7485, 147.578, -45.2312, 0.37 ) }
    dend_16 { pt3dadd( 49.8443, 148.55, -45.4043, 0.37 ) }
    dend_16 { pt3dadd( 49.8525, 148.624, -45.406, 0.37 ) }
    dend_16 { pt3dadd( 49.9431, 149.418, -45.3615, 0.37 ) }
    dend_16 { pt3dadd( 49.9629, 149.596, -45.3453, 0.37 ) }
    dend_16 { pt3dadd( 50.0355, 150.259, -45.286, 1.18 ) }
    dend_16 { pt3dadd( 50.2319, 152.024, -45.1416, 1.18 ) }
    dend_16 { pt3dadd( 50.5121, 153.972, -45.0297, 0.96 ) }
    dend_16 { pt3dadd( 50.5736, 154.352, -45.0037, 0.37 ) }
    dend_16 { pt3dadd( 50.5915, 154.434, -44.995, 0.37 ) }
    dend_16 { pt3dadd( 50.8351, 155.164, -44.9037, 0.37 ) }
    dend_16 { pt3dadd( 51.0307, 155.418, -44.8491, 0.37 ) }
    dend_16 { pt3dadd( 51.7426, 155.832, -44.7801, 0.37 ) }
    dend_16 { pt3dadd( 51.8075, 155.865, -44.7797, 0.37 ) }
    dend_16 { pt3dadd( 52.8832, 156.481, -44.8013, 0.37 ) }
    dend_16 { pt3dadd( 53.0846, 156.62, -44.8191, 0.37 ) }
    dend_16 { pt3dadd( 54.0667, 157.456, -45.0177, 0.37 ) }
    dend_16 { pt3dadd( 54.7921, 158.179, -45.2588, 0.37 ) }
    dend_16 { pt3dadd( 55.3044, 158.757, -45.4828, 1.25 ) }
    dend_16 { pt3dadd( 55.7764, 159.355, -45.7052, 1.55 ) }
    dend_16 { pt3dadd( 56.5758, 160.477, -46.1228, 0.52 ) }
    dend_16 { pt3dadd( 57.3568, 161.601, -46.5436, 0.37 ) }
    dend_16 { pt3dadd( 57.9925, 162.493, -46.7823, 0.37 ) }
    dend_16 { pt3dadd( 58.031, 162.543, -46.7876, 0.37 ) }
    dend_16 { pt3dadd( 58.7396, 163.449, -46.6695, 0.88 ) }
    dend_16 { pt3dadd( 59.0462, 163.841, -46.5419, 0.88 ) }
    dend_16 { pt3dadd( 59.093, 163.903, -46.5137, 0.88 ) }
    dend_16 { pt3dadd( 60.4606, 165.793, -45.5316, 0.52 ) }
    dend_16 { pt3dadd( 60.4995, 165.849, -45.5054, 0.52 ) }
    dend_16 { pt3dadd( 61.4962, 167.267, -44.9469, 0.52 ) }
    dend_16 { pt3dadd( 61.5374, 167.325, -44.931, 0.52 ) }
    dend_16 { pt3dadd( 62.0441, 168.088, -44.8069, 0.81 ) }
    dend_16 { pt3dadd( 62.1378, 168.235, -44.8017, 0.81 ) }
    dend_16 { pt3dadd( 62.6779, 169.131, -44.9587, 0.81 ) }
    dend_16 { pt3dadd( 62.7166, 169.193, -44.9746, 0.81 ) }
    dend_16 { pt3dadd( 63.5359, 170.429, -45.3602, 0.52 ) }
    dend_16 { pt3dadd( 63.8581, 170.875, -45.4463, 0.52 ) }
    dend_16 { pt3dadd( 63.9945, 171.033, -45.4578, 0.52 ) }
    dend_16 { pt3dadd( 64.3007, 171.347, -45.4553, 0.88 ) }
    dend_16 { pt3dadd( 64.8412, 171.782, -45.3929, 0.88 ) }
    dend_16 { pt3dadd( 66.1064, 172.481, -45.1946, 0.37 ) }
    dend_16 { pt3dadd( 67.3143, 172.916, -44.9168, 0.37 ) }
    dend_16 { pt3dadd( 68.3064, 173.187, -44.6484, 0.37 ) }
    dend_16 { pt3dadd( 68.5869, 173.234, -44.5591, 0.37 ) }
    dend_16 { pt3dadd( 70.0148, 173.266, -43.9982, 0.29 ) }
    dend_16 { pt3dadd( 71.8221, 173.082, -43.1872, 0.29 ) }
    dend_16 { pt3dadd( 72.8607, 172.823, -42.6661, 1.03 ) }
    dend_16 { pt3dadd( 72.9221, 172.804, -42.6337, 1.03 ) }
    dend_16 { pt3dadd( 74.0732, 172.377, -41.9678, 0.29 ) }
    dend_16 { pt3dadd( 75.4008, 171.788, -41.1173, 0.29 ) }
    dend_16 { pt3dadd( 75.4519, 171.755, -41.0765, 0.29 ) }
    dend_16 { pt3dadd( 75.985, 171.257, -40.5133, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 84/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 64.2345, 58.4492, 7.35569, 0.66 ) }
    dend_13 { pt3dadd( 61.3573, 70.6353, 13.2679, 0.66 ) }
    dend_13 { pt3dadd( 60.7373, 82.2327, 20.7502, 0.66 ) }
    dend_13 { pt3dadd( 60.9986, 94.3114, 27.5094, 0.66 ) }
    dend_13 { pt3dadd( 63.2529, 107.295, 31.8727, 0.66 ) }
    dend_13 { pt3dadd( 66.2829, 119.879, 36.8127, 0.66 ) }
    dend_13 { pt3dadd( 71.0539, 131.957, 41.4904, 0.66 ) }
    dend_13 { pt3dadd( 74.614, 144.202, 46.8428, 0.66 ) }
    dend_13 { pt3dadd( 76.2059, 157.663, 49.9473, 0.66 ) }
    dend_13 { pt3dadd( 77.5658, 170.362, 55.3705, 0.66 ) }
    dend_13 { pt3dadd( 79.9352, 182.272, 61.9741, 0.66 ) }
    dend_13 { pt3dadd( 81.395, 193.78, 69.4561, 0.66 ) }
    dend_13 { pt3dadd( 80.9846, 206.542, 74.9113, 0.66 ) }
    dend_13 { pt3dadd( 82.3073, 218.441, 81.8317, 0.66 ) }
    dend_13 { pt3dadd( 86.5986, 229.129, 89.3092, 0.66 ) }
    dend_13 { pt3dadd( 89.1835, 239.912, 97.4424, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_13 { pt3dadd( 93.5446, 249.749, 105.889, 0.66 ) }
    dend_13 { pt3dadd( 96.2526, 261.263, 112.991, 0.66 ) }
    dend_13 { pt3dadd( 97.3814, 272.021, 121.491, 0.66 ) }
    dend_13 { pt3dadd( 100.537, 282.667, 129.582, 0.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 4/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 64.2345, 58.4492, 7.35569, 0.52 ) }
    dend_12 { pt3dadd( 72.0145, 63.9737, 2.9763, 0.66 ) }
    dend_12 { pt3dadd( 79.5535, 70.8876, 0.285998, 0.66 ) }
    dend_12 { pt3dadd( 85.6708, 79.1064, -2.63386, 0.66 ) }
    dend_12 { pt3dadd( 92.8161, 86.7455, -4.511, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 9/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 89.174, -22.4897, 85.8007, 0.66 ) }
    dend_6 { pt3dadd( 89.447, -22.6623, 86.5045, 0.66 ) }
    dend_6 { pt3dadd( 89.7301, -22.8174, 87.1714, 0.66 ) }
    dend_6 { pt3dadd( 90.8152, -23.3546, 89.5607, 0.66 ) }
    dend_6 { pt3dadd( 91.6537, -23.7466, 91.3399, 0.66 ) }
    dend_6 { pt3dadd( 91.6851, -23.7621, 91.4024, 0.66 ) }
    dend_6 { pt3dadd( 92.8256, -24.4433, 93.4893, 0.66 ) }
    dend_6 { pt3dadd( 92.887, -24.4803, 93.5851, 0.66 ) }
    dend_6 { pt3dadd( 93.0374, -24.5876, 93.7916, 1.03 ) }
    dend_6 { pt3dadd( 93.0374, -24.5876, 93.7916, 1.03 ) }
    dend_6 { pt3dadd( 93.6325, -25.3391, 94.6234, 0.88 ) }
    dend_6 { pt3dadd( 94.7416, -27.0021, 96.2468, 0.74 ) }
    dend_6 { pt3dadd( 94.7747, -27.0606, 96.2994, 0.74 ) }
    dend_6 { pt3dadd( 95.6703, -28.7284, 97.8107, 0.59 ) }
    dend_6 { pt3dadd( 96.0031, -29.4269, 98.448, 0.44 ) }
    dend_6 { pt3dadd( 96.3637, -30.2204, 99.178, 0.29 ) }
    dend_6 { pt3dadd( 96.624, -30.8644, 99.7815, 0.29 ) }
    dend_6 { pt3dadd( 96.9945, -31.9717, 100.794, 0.29 ) }
    dend_6 { pt3dadd( 97.0138, -32.0332, 100.851, 0.29 ) }
    dend_6 { pt3dadd( 97.1875, -32.6884, 101.482, 0.29 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 29/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 89.174, -22.4897, 85.8007, 0.66 ) }
    dend_5 { pt3dadd( 88.5138, -21.8574, 85.912, 0.66 ) }
    dend_5 { pt3dadd( 87.6265, -20.9434, 85.9752, 0.37 ) }
    dend_5 { pt3dadd( 86.79, -19.8614, 85.8652, 0.37 ) }
    dend_5 { pt3dadd( 86.7298, -19.752, 85.8693, 0.37 ) }
    dend_5 { pt3dadd( 86.1135, -18.3571, 86.0081, 0.37 ) }
    dend_5 { pt3dadd( 86.0803, -18.2821, 86.0155, 0.37 ) }
    dend_5 { pt3dadd( 85.8856, -17.6681, 86.0805, 0.37 ) }
    dend_5 { pt3dadd( 85.5731, -16.0973, 86.2462, 0.22 ) }
    dend_5 { pt3dadd( 85.2835, -13.6745, 86.3187, 0.22 ) }
    dend_5 { pt3dadd( 85.2811, -13.5923, 86.3289, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 97.1875, -32.6884, 101.482, 0.15 ) }
    dend_8 { pt3dadd( 98.3029, -35.1667, 102.221, 0.15 ) }
    dend_8 { pt3dadd( 98.7752, -36.2164, 102.534, 0.15 ) }
    dend_8 { pt3dadd( 99.601, -38.0512, 103.081, 0.15 ) }
    dend_8 { pt3dadd( 99.7675, -38.4211, 103.191, 0.15 ) }
    dend_8 { pt3dadd( 100.516, -40.0856, 103.687, 0.15 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 46/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 97.1875, -32.6884, 101.482, 0.29 ) }
    dend_7 { pt3dadd( 96.5008, -32.6544, 101.022, 0.29 ) }
    dend_7 { pt3dadd( 95.9164, -32.6255, 100.63, 0.15 ) }
    dend_7 { pt3dadd( 94.6685, -32.5637, 99.7937, 0.15 ) }
    dend_7 { pt3dadd( 93.3514, -32.4986, 98.9108, 0.15 ) }
    dend_7 { pt3dadd( 91.8438, -32.424, 97.9003, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_21, dend_0, dend_50, dend_41, dend_31, dend_22, dend_9, dend_1, dend_58, dend_51, dend_49, dend_42, dend_35, dend_32, dend_26, dend_23, dend_14, dend_10, dend_2, dend_60, dend_59, dend_55, dend_52, dend_46, dend_43, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_25, dend_24, dend_18, dend_15, dend_11, dend_4, dend_3, dend_62, dend_61, dend_57, dend_56, dend_54, dend_53, dend_48, dend_47, dend_45, dend_44, dend_39, dend_38, dend_30, dend_29, dend_20, dend_19, dend_17, dend_16, dend_13, dend_12, dend_6, dend_5, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_40 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_21, dend_0, dend_50, dend_41, dend_31, dend_22, dend_9, dend_1, dend_58, dend_51, dend_49, dend_42, dend_35, dend_32, dend_26, dend_23, dend_14, dend_10, dend_2, dend_60, dend_59, dend_55, dend_52, dend_46, dend_43, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_25, dend_24, dend_18, dend_15, dend_11, dend_4, dend_3, dend_62, dend_61, dend_57, dend_56, dend_54, dend_53, dend_48, dend_47, dend_45, dend_44, dend_39, dend_38, dend_30, dend_29, dend_20, dend_19, dend_17, dend_16, dend_13, dend_12, dend_6, dend_5, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_40, dend_21, dend_0, axon_0, dend_50, dend_41, dend_31, dend_22, dend_9, dend_1, axon_1, dend_58, dend_51, dend_49, dend_42, dend_35, dend_32, dend_26, dend_23, dend_14, dend_10, dend_2, dend_60, dend_59, dend_55, dend_52, dend_46, dend_43, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_25, dend_24, dend_18, dend_15, dend_11, dend_4, dend_3, dend_62, dend_61, dend_57, dend_56, dend_54, dend_53, dend_48, dend_47, dend_45, dend_44, dend_39, dend_38, dend_30, dend_29, dend_20, dend_19, dend_17, dend_16, dend_13, dend_12, dend_6, dend_5, dend_8, dend_7]}
    ModelViewParmSubset_5 = new SectionList()
    dend_40 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_58 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_49 OneSecGrp_SectionRef_15.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_35 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_23 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_60 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_52 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_43 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_36 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_27 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_18 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_11 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_62 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_57 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_56 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_54 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_47 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_45 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_44 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_30 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_20 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_19 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_17 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_16 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_13 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_12 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_21 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_31 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_40 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_32 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_10 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_26 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_50 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_51 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_42 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_28 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_29 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_55 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_46 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_59 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_48 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_39 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_5 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_3 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_53 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_6 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_7 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_8 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_25 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_61 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_9 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_58 nseg = 3
    dend_49 nseg = 11
    dend_35 nseg = 3
    dend_23 nseg = 7
    dend_2 nseg = 5
    dend_60 nseg = 5
    dend_52 nseg = 3
    dend_43 nseg = 5
    dend_37 nseg = 3
    dend_36 nseg = 3
    dend_34 nseg = 15
    dend_27 nseg = 7
    dend_24 nseg = 11
    dend_18 nseg = 3
    dend_11 nseg = 3
    dend_62 nseg = 3
    dend_57 nseg = 3
    dend_56 nseg = 5
    dend_54 nseg = 5
    dend_47 nseg = 5
    dend_45 nseg = 13
    dend_44 nseg = 5
    dend_30 nseg = 5
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_17 nseg = 3
    dend_16 nseg = 9
    dend_13 nseg = 13
    dend_12 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_NBC_a3972c5d97_0_0


