// Cell: cSTUT189_L5_NBC_4126235f8b_0_0
/*
{
  "id" : "cSTUT189_L5_NBC_4126235f8b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-10.9016, -1.97873, -2.50057, 3.38117", "-9.79478, -1.80994, -2.24302, 5.67833", "-8.68798, -1.64115, -1.98548, 7.15072", "-7.58118, -1.47235, -1.72793, 8.64399", "-6.47438, -1.30356, -1.47039, 10.0299", "-5.36758, -1.13477, -1.21284, 11.2674", "-4.26078, -0.965972, -0.955299, 11.9107", "-3.15398, -0.797179, -0.697754, 12.2563", "-2.04718, -0.628385, -0.440209, 12.5208", "-0.940378, -0.459592, -0.182664, 12.7145", "0.166423, -0.290798, 0.0748807, 12.541", "1.27322, -0.122005, 0.332426, 12.2075", "2.38002, 0.0467885, 0.589971, 11.6554", "3.48682, 0.215582, 0.847516, 11.0225", "4.59362, 0.384375, 1.10506, 10.3416", "5.70042, 0.553169, 1.36261, 9.80603", "6.80722, 0.721962, 1.62015, 9.2712", "7.91403, 0.890756, 1.8777, 8.04801", "9.02083, 1.05955, 2.13524, 5.78101", "10.1276, 1.22834, 2.39279, 3.52734", "11.2344, 1.39714, 2.65033, 2.23302" ]
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "6.34928, -3.5777, -7.98898, 1.25", "7.26737, -3.98257, -8.29209, 1.25", "7.99777, -4.50202, -8.97663, 1.25", "8.59581, -5.05284, -9.72053, 0.88", "9.10697, -5.61252, -10.4289, 0.88", "9.58331, -6.21385, -11.1141, 0.88", "10.8216, -8.08489, -13.0037, 1.18", "11.6327, -9.83583, -14.6078, 1.18", "11.7854, -10.2533, -14.9356, 1.69", "11.9766, -10.8094, -15.2968, 1.84", "12.2774, -11.5687, -15.6911, 1.62", "12.8454, -12.6606, -16.0538, 1.11", "13.596, -13.6912, -16.1491, 1.11", "14.6346, -14.8787, -16.1231, 1.11", "15.5443, -15.8563, -16.0372, 1.11", "16.4778, -16.8536, -15.8932, 1.11", "17.3675, -17.8791, -15.6839, 1.11", "18.1692, -18.916, -15.415, 1.18", "18.6306, -19.6883, -15.1954, 1.33", "19.1094, -20.9936, -14.8305, 1.25", "19.3127, -22.128, -14.5434, 0.88", "19.37, -23.647, -14.2339, 1.25", "19.3283, -24.3609, -14.1341, 1.55", "19.2789, -25.1306, -14.0302, 1.55", "19.2609, -26.181, -13.8916, 1.33", "19.3381, -27.2639, -13.7401, 1.11", "19.6231, -28.6392, -13.4968, 0.81", "20.208, -30.1343, -13.1723, 0.59", "21.2721, -31.8666, -12.7032, 0.59", "21.9783, -32.5998, -12.4541, 0.74", "23.1094, -33.3435, -12.1346, 0.96", "23.9622, -33.7221, -11.943, 1.18", "24.6022, -33.9297, -11.8436, 1.18", "25.4477, -34.1656, -11.7685, 1.18", "26.4042, -34.4762, -11.7631, 0.88", "27.4331, -35.0191, -11.8206, 0.88", "27.9416, -35.4559, -11.8887, 1.11", "28.6537, -36.2795, -12.0051, 1.11", "29.1041, -36.8956, -12.0868, 0.96", "29.5272, -37.5173, -12.1671, 1.25", "30.3932, -38.7262, -12.3567, 0.66", "30.935, -39.3744, -12.4776, 0.66", "31.5358, -39.8981, -12.5947, 0.66", "32.1595, -40.2227, -12.7151, 0.74", "32.9811, -40.4631, -12.9211, 0.59", "34.0293, -40.6648, -13.2081, 0.88", "34.6096, -40.7646, -13.3771, 0.88", "35.1783, -40.8972, -13.5423, 1.11", "36.2715, -41.2763, -13.8613, 0.66", "37.2614, -41.7931, -14.1403, 0.59", "38.1482, -42.5135, -14.3607, 0.66", "38.9011, -43.3773, -14.4775, 0.81", "39.5582, -44.3181, -14.5559, 1.4", "39.8039, -44.7347, -14.571, 1.55", "40.2182, -45.5491, -14.5553, 0.96", "40.7269, -46.6129, -14.5029, 0.52", "41.1327, -47.3977, -14.4967, 0.52", "41.6578, -48.2801, -14.5176, 0.96", "42.0295, -48.8593, -14.5585, 1.03", "42.2895, -49.2447, -14.5818, 1.11", "42.5715, -49.6514, -14.5892, 1.11", "43.3407, -50.7738, -14.5902, 0.52", "43.9742, -51.787, -14.5181, 0.59", "44.5458, -52.7574, -14.3733, 0.59", "45.1015, -53.7093, -14.2083, 1.18", "45.5647, -54.4765, -14.0975, 1.55", "45.8446, -54.9138, -14.052, 1.55", "46.6346, -56.086, -14.1174, 0.81", "47.1664, -56.8161, -14.3266, 0.52", "47.7188, -57.5222, -14.667, 0.44", "48.4551, -58.4479, -15.2387, 0.81", "48.8935, -58.9947, -15.6102, 0.96", "50.0816, -60.4699, -16.6265, 0.52", "50.5715, -61.0795, -17.05, 0.96", "50.9659, -61.5943, -17.3361, 1.25", "51.3962, -62.1929, -17.5585, 1.03", "51.8623, -62.8656, -17.6901, 0.74", "52.1568, -63.2927, -17.7277, 0.74", "52.7165, -64.0436, -17.7206, 0.74", "53.347, -64.858, -17.7549, 0.44", "54.0674, -65.7669, -17.8057, 0.96", "54.512, -66.3241, -17.837, 1.55", "54.8743, -66.7818, -17.7943, 1.69", "55.2878, -67.3066, -17.6662, 1.25", "56.0745, -68.2878, -17.3885, 0.59", "56.8525, -69.2237, -17.105, 0.59", "57.7198, -70.2397, -16.8443, 1.25", "59.4384, -72.2743, -16.4673, 0.52", "60.3117, -73.3214, -16.3175, 0.44", "61.3563, -74.5934, -16.1814, 0.96", "61.7921, -75.1319, -16.1443, 0.96", "62.7518, -76.313, -16.1807, 0.52", "63.6405, -77.3712, -16.3228, 0.52", "64.5552, -78.4221, -16.5814, 1.11", "64.9404, -78.8549, -16.66, 1.55", "65.3437, -79.3178, -16.6866, 1.77", "65.6127, -79.6308, -16.7203, 1.84", "65.9907, -80.069, -16.8058, 1.47", "66.553, -80.7033, -17.0483, 1.11", "67.079, -81.2996, -17.3599, 0.81", "67.8623, -82.2693, -17.9216, 0.44", "68.7558, -83.4978, -18.6605, 0.96", "69.2184, -84.2035, -19.0762, 1.11", "69.5695, -84.7785, -19.4219, 0.81", "69.9731, -85.463, -19.7874, 0.29", "70.4365, -86.2082, -20.0721, 0.29", "70.8408, -86.7792, -20.1429, 0.59", "71.3869, -87.473, -20.0713, 0.88", "71.8189, -87.9807, -19.958, 1.03", "72.7637, -89.033, -19.6609, 1.03", "73.5555, -89.8349, -19.405, 0.59", "74.3933, -90.612, -19.1526, 0.59", "75.1413, -91.2873, -18.9426, 0.88", "75.8191, -91.9474, -18.7381, 1.25", "76.212, -92.3763, -18.6259, 1.47", "76.4554, -92.6964, -18.566, 1.47", "76.9907, -93.5751, -18.412, 0.37", "77.4275, -94.5124, -18.2466, 0.37", "77.8521, -95.7887, -18.0307, 0.74", "78.0265, -96.6106, -17.9069, 0.66", "78.2013, -97.6421, -17.7541, 0.52", "78.2765, -98.1372, -17.6643, 0.88", "78.3588, -98.713, -17.5299, 0.88", "78.5304, -99.3035, -17.2, 0.37", "78.96, -99.6809, -16.3631, 0.37", "79.3672, -99.9301, -15.5244, 0.37", "79.8658, -100.174, -14.5936, 0.37", "80.2676, -100.358, -13.897, 0.44", "81.7047, -100.958, -11.6264, 1.18", "82.3781, -101.25, -10.6539, 1.18", "83.1483, -101.595, -9.58541, 0.37", "83.7288, -101.913, -8.8125, 0.81", "84.0223, -102.101, -8.46609, 0.81", "84.4411, -102.399, -8.04153, 0.81", "85.2211, -102.974, -7.43097, 0.37", "86.4109, -103.763, -6.55924, 1.33", "86.8506, -104.005, -6.23297, 1.69", "87.6916, -104.418, -5.59012, 1.25", "88.3487, -104.693, -5.11673, 0.66", "89.1772, -104.979, -4.5927, 0.52", "89.9712, -105.195, -4.2146, 0.81", "90.3552, -105.315, -4.08073, 0.81", "90.7905, -105.472, -3.93881, 0.81", "91.3746, -105.736, -3.7609, 0.44", "91.9978, -106.098, -3.54147, 0.37", "92.3924, -106.5, -3.36616, 0.37", "93.0244, -107.658, -2.9935, 0.37", "93.2971, -108.268, -2.82583, 0.74", "93.5388, -108.836, -2.68745, 0.81", "93.7268, -109.273, -2.5919, 0.81", "94.0997, -110.04, -2.45543, 0.37", "94.5683, -110.797, -2.29268, 0.37", "95.3759, -111.775, -2.06113, 0.37", "95.9986, -112.406, -1.8768, 0.66", "96.3965, -112.764, -1.75509, 0.81", "97.0257, -113.279, -1.55991, 0.81", "98.2503, -114.199, -1.18048, 0.52", "98.6563, -114.508, -1.05125, 0.52", "99.4796, -115.245, -0.771585, 0.88", "99.7876, -115.596, -0.667457, 1.18", "100.039, -115.957, -0.602371, 1.18", "100.318, -116.477, -0.561756, 1.18", "100.568, -117.122, -0.58367, 0.96", "100.839, -118.024, -0.690616, 0.52", "101.162, -119.137, -0.924878, 0.52", "101.404, -119.856, -1.11435, 0.74", "101.567, -120.275, -1.23928, 0.74", "102.0, -121.152, -1.47349, 0.52", "102.759, -122.286, -1.74399, 0.52", "103.401, -122.963, -1.90006, 0.59", "104.225, -123.638, -2.03458, 0.81", "105.044, -124.212, -2.10971, 0.59", "106.249, -124.952, -2.23029, 0.37", "107.077, -125.413, -2.317, 0.37", "107.961, -125.912, -2.34535, 1.11", "108.173, -126.039, -2.34995, 1.4", "108.874, -126.453, -2.37496, 1.03", "109.879, -127.074, -2.42195, 0.52", "110.852, -127.754, -2.50619, 0.52", "111.851, -128.521, -2.56909, 1.18", "112.226, -128.832, -2.60426, 1.47", "112.601, -129.144, -2.66558, 1.47", "113.604, -130.048, -2.89042, 0.52", "114.36, -130.826, -3.1771, 0.88", "114.761, -131.317, -3.41898, 0.88", "115.498, -132.317, -4.10099, 0.59", "116.035, -133.103, -4.70517, 1.03", "116.421, -133.684, -5.18937, 1.03", "117.183, -134.84, -6.24796, 0.44", "117.492, -135.351, -6.72037, 0.44", "118.143, -136.603, -7.81463, 1.03", "118.357, -137.115, -8.1991, 1.18", "118.594, -137.791, -8.63212, 0.74", "118.975, -139.01, -9.29133, 0.44", "119.184, -139.881, -9.57331, 0.44", "119.383, -140.83, -9.76288, 0.44", "119.641, -142.123, -9.84625, 1.11", "119.768, -142.604, -9.84821, 1.47", "120.04, -143.339, -9.79706, 1.47", "120.763, -144.741, -9.57586, 0.44", "121.325, -145.57, -9.41964, 0.44", "122.075, -146.505, -9.2376, 0.44", "122.802, -147.34, -9.08631, 0.44", "123.301, -147.942, -9.01906, 0.29", "123.968, -148.834, -9.0134, 0.29", "124.275, -149.342, -9.07523, 1.4", "124.537, -149.945, -9.16956, 1.99", "124.8, -150.765, -9.3161, 1.47", "125.144, -152.115, -9.58589, 0.44", "125.418, -153.204, -9.75929, 0.37", "125.705, -154.215, -9.88181, 0.37", "125.974, -155.079, -9.94282, 0.74", "126.198, -155.674, -9.97304, 0.88", "126.446, -156.211, -9.97865, 0.37", "127.308, -157.728, -9.9047, 0.29", "127.737, -158.34, -9.83738, 0.29", "128.182, -158.879, -9.77023, 0.96", "129.21, -160.037, -9.76015, 0.37", "129.911, -160.817, -9.83853, 0.66", "130.201, -161.143, -9.90545, 0.66", "131.121, -162.243, -10.2875, 0.37", "131.372, -162.545, -10.4055, 0.81", "132.637, -163.982, -11.0112, 0.37", "132.936, -164.288, -11.1629, 0.88", "133.226, -164.551, -11.3284, 0.88", "133.969, -165.133, -11.7874, 0.44", "134.467, -165.496, -12.1167, 0.44", "135.181, -165.961, -12.5318, 0.81", "136.346, -166.605, -13.1478, 1.55", "136.777, -166.827, -13.375, 1.69", "137.95, -167.427, -14.0155, 0.37", "138.776, -167.859, -14.4771, 0.37", "139.602, -168.35, -14.972, 0.37", "140.497, -168.941, -15.5023, 0.44", "141.124, -169.381, -15.8425, 1.03", "141.598, -169.7, -16.084, 1.4", "141.988, -169.943, -16.2606, 1.4", "143.132, -170.566, -16.7204, 0.29", "143.981, -171.033, -16.9963, 0.29", "144.659, -171.396, -17.1629, 0.29", "145.174, -171.652, -17.2679, 0.29", "145.831, -171.957, -17.3797, 0.74", "146.38, -172.198, -17.464, 1.11", "147.509, -172.639, -17.6104, 0.52", "148.135, -172.888, -17.6936, 0.81", "148.855, -173.215, -17.7844, 0.66", "149.641, -173.603, -17.9031, 0.29", "150.326, -173.932, -18.0233, 0.29", "151.24, -174.344, -18.2, 0.29", "152.395, -174.803, -18.436, 0.44", "152.958, -175.017, -18.5379, 0.44", "153.807, -175.338, -18.6935, 0.29", "154.242, -175.51, -18.7659, 0.59", "154.552, -175.643, -18.8182, 0.59", "155.093, -175.91, -18.9214, 0.29", "155.835, -176.301, -19.0834, 0.29", "156.528, -176.693, -19.2459, 0.59", "156.892, -176.918, -19.3279, 0.74", "157.13, -177.08, -19.3864, 0.74", "158.203, -177.873, -19.6746, 0.29", "158.984, -178.506, -19.9112, 0.44", "159.481, -178.933, -20.0805, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "7.86928, -3.8192, 4.08102, 1.25", "7.86928, -3.8192, 4.08102, 1.25", "7.6168, -4.77959, 4.38054, 1.25", "7.20028, -6.43573, 4.83351, 1.4", "6.79228, -8.25777, 5.26729, 1.4", "6.49189, -9.97527, 5.62694, 1.18", "6.26758, -11.7265, 5.95883, 1.18", "6.18094, -13.1877, 6.19442, 1.4", "6.28014, -15.2619, 6.47304, 1.4", "6.49303, -17.5011, 6.70461, 1.4", "6.78893, -19.3737, 6.83973, 1.62", "7.08503, -20.6146, 6.92177, 1.47", "7.7474, -22.5991, 7.0174, 1.03", "8.71242, -24.7615, 7.12049, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-9.81072, -3.0422, -6.35898, 1.18", "-9.81072, -3.0422, -6.35898, 1.18", "-10.849, -4.2821, -6.46007, 1.18", "-12.2209, -6.20281, -6.74733, 1.11", "-12.9746, -7.39995, -6.9658, 1.18", "-13.675, -8.66925, -7.25119, 1.03", "-14.4994, -10.1633, -7.58711, 0.96", "-15.1871, -11.5254, -7.91995, 1.4", "-15.8482, -13.1468, -8.38192, 1.62", "-16.0859, -13.9889, -8.66533, 1.84", "-16.387, -15.4631, -9.2381, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-3.60072, -7.3787, -1.54898, 1.4", "-3.60072, -7.3787, -1.54898, 1.4", "-4.37895, -8.32599, -2.08865, 1.11", "-5.53731, -9.53313, -2.67236, 0.96", "-5.92054, -9.8764, -2.81221, 0.96", "-6.85177, -10.5732, -3.05333, 0.66", "-7.65491, -11.1023, -3.17138, 0.66", "-8.18349, -11.3788, -3.17915, 1.03", "-9.17429, -11.7924, -3.07904, 1.33", "-9.8497, -12.0679, -2.96873, 1.47", "-10.7554, -12.4919, -2.84557, 1.11", "-11.6498, -13.0332, -2.79482, 0.96", "-12.6572, -13.9067, -2.88522, 0.66", "-13.369, -14.7849, -3.08749, 0.52", "-13.8405, -15.6567, -3.42373, 0.44", "-14.174, -16.6968, -3.95888, 0.44", "-14.4532, -18.0172, -4.74192, 1.4", "-14.5454, -18.6355, -5.1268, 1.84", "-14.6063, -19.202, -5.47297, 2.14", "-14.7424, -20.5893, -6.2505, 1.99", "-14.9692, -22.7457, -7.25281, 1.03", "-15.1541, -24.3108, -7.82146, 0.88", "-15.3282, -25.4859, -7.98466, 0.81", "-15.4915, -26.3275, -7.85063, 0.66", "-15.8003, -27.607, -7.28909, 0.66", "-16.1046, -28.6519, -6.56689, 0.96", "-16.2758, -29.1619, -6.10636, 1.11", "-17.3672, -32.2208, -3.20366, 0.44", "-17.7224, -33.1605, -2.35104, 1.03", "-17.8136, -33.3934, -2.16777, 1.4", "-18.0695, -33.9764, -1.81407, 1.69", "-18.3012, -34.4475, -1.67031, 1.69", "-19.1688, -36.0049, -1.64531, 0.81", "-19.7012, -36.7588, -1.86965, 1.18", "-20.3962, -37.5253, -2.13864, 1.47", "-20.8805, -37.9855, -2.28582, 1.47", "-21.56, -38.5895, -2.40959, 1.4", "-22.4348, -39.3311, -2.46875, 1.11", "-23.8599, -40.4904, -2.39453, 0.52", "-24.7512, -41.2627, -2.27047, 0.52", "-25.7087, -42.265, -2.02256, 0.52", "-26.6137, -43.611, -1.6463, 1.18", "-26.874, -44.1954, -1.51477, 1.55", "-26.988, -44.6152, -1.46688, 1.69", "-27.1148, -45.2814, -1.47782, 1.92", "-27.3058, -46.3771, -1.66893, 0.74", "-27.5412, -47.8017, -1.93732, 0.44", "-27.8757, -49.6863, -2.29685, 0.44", "-28.1829, -51.2854, -2.55577, 0.44", "-28.5874, -53.1509, -2.79081, 0.74", "-28.929, -54.3787, -2.89221, 0.52", "-29.8428, -56.9882, -2.97185, 1.03", "-30.1007, -57.6462, -2.94121, 1.25", "-30.429, -58.4953, -2.82869, 0.66", "-30.7898, -59.5411, -2.61106, 0.29", "-31.1432, -60.7991, -2.30694, 0.29", "-31.3218, -61.5634, -2.13221, 0.59", "-31.5685, -63.0773, -1.85485, 0.59", "-31.6195, -64.1036, -1.6277, 1.03", "-31.5419, -65.8829, -1.23445, 1.4", "-31.4617, -66.6861, -1.06652, 1.77", "-31.385, -67.3473, -0.967052, 2.14", "-31.3131, -68.3594, -0.876678, 2.36", "-31.4027, -69.7798, -0.916687, 0.74", "-31.657, -70.8716, -1.05759, 0.44", "-31.9984, -71.7271, -1.28587, 0.44", "-32.6199, -72.9937, -1.61251, 0.74", "-32.9683, -73.6364, -1.74352, 0.74", "-33.5979, -74.7604, -1.90141, 0.66", "-34.0327, -75.5851, -1.91952, 0.44", "-34.4174, -76.5328, -1.81401, 0.44", "-34.8126, -77.9398, -1.53462, 0.59", "-35.029, -78.8997, -1.27883, 0.81", "-35.2381, -79.6886, -1.05982, 0.96", "-35.4987, -80.4275, -0.846882, 0.74", "-35.8741, -81.1635, -0.671666, 0.44", "-36.3927, -81.8644, -0.543111, 0.44", "-37.0557, -82.5562, -0.515139, 0.74", "-38.2848, -83.7332, -0.521166, 0.88", "-38.9203, -84.3352, -0.493634, 1.4", "-39.243, -84.674, -0.434323, 1.4", "-39.7714, -85.3918, -0.23924, 1.18", "-40.1231, -86.1169, 0.00162121, 0.81", "-40.4111, -87.2318, 0.396758, 0.52", "-40.527, -88.3139, 0.782673, 0.52", "-40.59, -89.8349, 1.31833, 0.74", "-40.6106, -90.9062, 1.66759, 0.52", "-40.6226, -91.4841, 1.84245, 1.11", "-40.6557, -92.1805, 2.04555, 1.4", "-40.7051, -92.7614, 2.18388, 1.55", "-40.8068, -93.6063, 2.33866, 0.74", "-41.0629, -95.1785, 2.56995, 0.44", "-41.3008, -96.3082, 2.78786, 0.81", "-41.632, -97.615, 3.08574, 1.11", "-41.9245, -98.5462, 3.32305, 1.33", "-42.2042, -99.2757, 3.52668, 1.55", "-42.5476, -99.9633, 3.75722, 1.18", "-43.4414, -101.212, 4.35521, 0.59", "-43.8536, -101.639, 4.63537, 0.96", "-44.3365, -102.061, 4.95156, 1.11", "-44.8358, -102.474, 5.28515, 1.11", "-45.7525, -103.228, 5.90307, 0.59", "-46.7437, -104.068, 6.55587, 0.81", "-47.6299, -104.871, 7.11013, 0.59", "-48.5604, -105.828, 7.69439, 0.59", "-49.4617, -106.916, 8.25518, 0.44", "-50.1168, -107.902, 8.59844, 0.81", "-50.4841, -108.63, 8.73187, 0.96", "-50.7047, -109.262, 8.75836, 0.96", "-50.8838, -110.14, 8.70592, 0.96", "-50.9829, -111.053, 8.60888, 0.66", "-51.0359, -112.897, 8.34736, 0.52", "-51.0187, -113.852, 8.20519, 0.66", "-50.975, -114.989, 8.05519, 1.33", "-50.9536, -115.797, 7.96694, 1.99", "-50.9943, -117.74, 7.81477, 0.44", "-51.1109, -118.782, 7.77945, 0.44", "-51.2775, -119.507, 7.79475, 0.74", "-51.4724, -120.077, 7.80738, 0.74", "-51.8401, -120.886, 7.84776, 0.74", "-52.3166, -121.753, 7.90155, 0.37", "-53.0628, -122.9, 7.98251, 0.29", "-53.6767, -123.669, 8.05705, 0.29", "-54.4229, -124.49, 8.15292, 0.29", "-55.0895, -125.161, 8.27696, 0.22", "-55.4625, -125.511, 8.36372, 0.22", "-56.0663, -126.092, 8.52725, 0.81", "-56.4187, -126.459, 8.63341, 0.96", "-57.2561, -127.343, 8.89811, 0.22", "-57.9672, -128.155, 9.12805, 1.33", "-58.4329, -128.771, 9.2719, 1.55", "-59.1041, -129.774, 9.50494, 1.11", "-59.4713, -130.39, 9.65643, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.23072, 4.7278, 5.70102, 1.33", "-2.23072, 4.7278, 5.70102, 1.33", "-3.55895, 5.73759, 5.70102, 1.55", "-4.91529, 6.68305, 5.70102, 1.4", "-6.43531, 7.64202, 5.70102, 1.18", "-7.53584, 8.2955, 5.70501, 1.47", "-9.00563, 9.1664, 5.75846, 1.77", "-10.0674, 9.78401, 5.84712, 1.99", "-11.231, 10.4767, 6.03967, 1.99", "-12.6141, 11.4076, 6.41618, 1.62", "-14.1768, 12.7426, 7.07627, 1.11", "-15.153, 13.8687, 7.69869, 1.11", "-15.8741, 15.0858, 8.40125, 1.25", "-16.4479, 16.6847, 9.32189, 1.47", "-16.6928, 18.234, 10.2216, 1.69", "-16.6575, 19.5147, 10.9553, 1.92", "-16.4173, 20.9876, 11.7609, 1.77", "-16.1262, 22.0889, 12.302, 1.4", "-15.6336, 23.5219, 12.9285, 1.18", "-15.0904, 24.9369, 13.4989, 1.11", "-14.2957, 26.7938, 14.2224, 1.62", "-13.9191, 27.6064, 14.5296, 1.99", "-13.3507, 28.7433, 14.9484, 2.21", "-12.8664, 29.6471, 15.2732, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-10.9007, 0.916297, -3.98898, 1.77", "-10.9691, 0.930216, -3.98898, 1.77", "-12.0794, 1.17586, -3.98898, 1.77", "-13.0977, 1.43623, -3.98898, 1.62", "-14.3082, 1.78737, -3.98898, 1.62", "-15.5793, 2.20433, -3.98898, 1.84", "-16.4781, 2.5445, -3.98898, 1.92", "-17.3339, 2.91301, -4.01146, 2.14", "-18.3383, 3.42102, -4.06417, 2.14", "-19.2144, 3.9468, -4.14274, 2.14", "-19.9443, 4.46351, -4.26293, 2.14", "-21.0299, 5.34334, -4.51524, 2.14", "-21.9031, 6.12785, -4.82464, 2.14", "-22.4184, 6.61857, -5.0387, 2.21", "-22.9991, 7.20054, -5.32608, 1.99", "-23.7132, 7.95245, -5.74585, 1.99", "-24.3255, 8.62173, -6.17186, 2.14", "-25.2734, 9.72694, -6.97566, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "11.2344, 1.39714, 2.65033, 3.17", "26.063, 3.65858, 2.65033, 3.17", "40.8915, 5.92002, 2.65033, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "8.71242, -24.7615, 7.12049, 1.25", "9.07786, -25.8352, 7.02337, 1.25", "9.09728, -27.2683, 6.91986, 1.03", "8.77652, -28.4457, 6.86324, 0.66", "8.47488, -29.3004, 6.83616, 0.96", "8.19061, -30.1903, 6.81579, 1.18", "7.86731, -31.4716, 6.79179, 1.18", "7.66414, -32.2844, 6.76164, 1.47", "7.34964, -33.5807, 6.73733, 0.81", "7.23761, -34.4506, 6.7424, 0.81", "7.41048, -35.5208, 6.73824, 0.96", "7.80929, -36.3999, 6.74634, 0.88", "8.35742, -37.3395, 6.79497, 1.33", "8.69023, -37.8955, 6.84465, 1.55", "9.05871, -38.5322, 6.92201, 1.33", "9.37447, -39.2132, 7.02521, 0.81", "9.74206, -40.4495, 7.23181, 0.66", "9.9607, -41.7052, 7.43223, 0.96", "10.0335, -42.5329, 7.54222, 1.4", "10.061, -43.21, 7.61179, 1.4", "10.0735, -43.8948, 7.69391, 1.4", "10.0555, -45.0686, 7.88705, 0.96", "10.0407, -45.6223, 8.0157, 0.81", "10.02, -46.641, 8.37323, 0.81", "10.0042, -47.3838, 8.69524, 0.74", "9.97823, -48.8944, 9.46027, 0.74", "9.97126, -50.0412, 10.0488, 0.88", "9.98847, -50.9834, 10.5122, 0.88", "10.0616, -52.0453, 10.9455, 1.47", "10.2155, -53.0492, 11.185, 0.81", "10.5126, -54.2344, 11.2047, 0.59", "10.9328, -55.5654, 11.0312, 0.88", "11.2527, -56.5165, 10.8841, 0.88", "11.6002, -57.6522, 10.73, 0.66", "11.923, -58.9009, 10.6192, 0.59", "12.1134, -59.9467, 10.6294, 0.59", "12.2274, -61.0814, 10.7619, 0.59", "12.2871, -62.1812, 11.023, 0.88", "12.2926, -63.4165, 11.4354, 0.66", "12.2643, -64.3979, 11.8278, 1.03", "12.1942, -65.6537, 12.3805, 1.25", "12.1048, -66.8993, 12.9338, 1.25", "12.0525, -67.716, 13.2695, 1.84", "12.0318, -68.5093, 13.5775, 2.28", "12.0406, -69.1989, 13.8929, 1.69" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "8.71242, -24.7615, 7.12049, 0.74", "7.94721, -28.3686, 11.2779, 0.74", "7.97084, -29.1144, 12.4851, 0.74", "8.03357, -29.7519, 13.6489, 0.74", "8.11563, -30.778, 15.4704, 1.11", "8.15909, -31.3081, 16.3162, 1.11", "8.29177, -32.6658, 18.1697, 0.66", "8.75514, -35.4484, 21.3353, 1.4", "8.91339, -36.6463, 22.6656, 0.96", "8.96069, -37.6465, 23.7023, 1.18", "8.89429, -39.0269, 24.9138, 0.88", "8.6116, -40.9202, 26.2542, 0.66", "8.08578, -43.0784, 27.3532, 0.66", "7.7186, -44.3705, 27.8546, 0.59", "7.15265, -46.2807, 28.569, 0.74", "6.73993, -47.4954, 29.0631, 1.03", "6.22509, -48.644, 29.5805, 1.18", "5.39598, -50.0944, 30.2389, 1.4" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-16.387, -15.4631, -9.2381, 0.81", "-17.7929, -16.3857, -9.14178, 0.81", "-18.6532, -16.9839, -8.94425, 0.88", "-19.4709, -17.6156, -8.67323, 1.03", "-20.1238, -18.1946, -8.40587, 1.03", "-20.7424, -18.8522, -8.09839, 0.52", "-21.2811, -19.5916, -7.71555, 0.52", "-21.7463, -20.6037, -7.06682, 0.74", "-21.8708, -21.0437, -6.7793, 0.96", "-21.9694, -21.5777, -6.4264, 0.59", "-22.0769, -22.2738, -5.98975, 0.44", "-22.2901, -23.6116, -5.29705, 0.44", "-22.4105, -24.1629, -5.02087, 0.81", "-22.6322, -24.7885, -4.69621, 0.96", "-23.0255, -25.6104, -4.22204, 1.03", "-23.3123, -26.1421, -3.91084, 0.96", "-23.7043, -26.8755, -3.50978, 0.37", "-24.3345, -28.2513, -2.82008, 0.37", "-24.6015, -28.9873, -2.46038, 0.29", "-24.7808, -29.6794, -2.15661, 0.37", "-24.9849, -30.659, -1.78449, 0.37", "-25.1563, -31.6682, -1.43514, 0.81", "-25.3097, -32.6415, -1.14068, 1.25", "-25.3596, -32.9347, -1.07715, 1.55", "-25.6153, -34.0656, -0.846037, 0.37", "-25.8786, -34.6925, -0.725707, 0.37", "-26.0929, -34.9746, -0.671045, 0.44", "-26.67, -35.534, -0.576479, 0.59", "-27.0505, -35.8682, -0.538713, 0.66", "-27.5234, -36.2676, -0.497563, 0.37", "-28.0672, -36.7236, -0.457505, 0.59", "-28.6305, -37.2592, -0.445495, 0.88", "-28.9498, -37.5984, -0.456135, 1.03", "-29.5157, -38.3085, -0.422379, 0.37", "-29.6977, -38.5533, -0.388469, 0.37", "-30.0374, -39.0033, -0.289943, 0.37", "-30.4897, -39.5805, -0.123397, 0.66", "-30.8372, -39.9846, 0.0152482, 0.88", "-32.0363, -41.2391, 0.467736, 0.29", "-32.5494, -41.7573, 0.647054, 0.29", "-33.0494, -42.3036, 0.810142, 0.96", "-33.312, -42.6188, 0.895212, 1.33", "-33.7833, -43.2735, 1.04285, 1.11", "-34.3278, -44.1365, 1.26172, 0.59", "-34.8027, -44.9566, 1.38669, 0.37", "-35.1833, -45.6889, 1.69812, 0.66", "-35.422, -46.1158, 1.99958, 0.52", "-35.7258, -46.5969, 2.47686, 0.29", "-36.4514, -47.6428, 3.75629, 0.29", "-37.0311, -48.3559, 4.82979, 0.81", "-38.5106, -49.7066, 7.58886, 0.88", "-38.8781, -49.9402, 8.23882, 0.29", "-39.0836, -50.0312, 8.58009, 0.29", "-39.5433, -50.1486, 9.33885, 0.66", "-39.7538, -50.173, 9.7075, 0.66", "-43.9831, -58.0987, 14.0184, 0.66", "-48.7236, -65.9003, 17.989, 0.66", "-53.699, -73.5854, 21.8773, 0.66", "-57.9359, -81.7731, 25.7094, 0.66", "-60.8149, -89.2683, 31.5583, 0.66", "-62.6056, -97.1583, 37.3702, 0.66", "-64.7776, -104.208, 43.9771, 0.66", "-65.1283, -112.068, 50.0834, 0.66", "-64.2864, -119.623, 56.4828, 0.66", "-61.8046, -127.422, 62.1481, 0.66", "-58.8092, -135.522, 67.1399, 0.66", "-56.1096, -143.576, 72.3632, 0.66" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-16.387, -15.4631, -9.2381, 1.03", "-15.4019, -16.6615, -10.3347, 1.03", "-13.6284, -18.4513, -11.844, 0.81", "-12.3875, -19.7472, -12.8398, 1.03", "-11.031, -21.3176, -13.9105, 0.88", "-10.0438, -22.5924, -14.7147, 1.11", "-9.27503, -23.7469, -15.3976, 0.74", "-8.52209, -25.1124, -16.0655, 0.52", "-7.84923, -27.0846, -16.8754, 0.88", "-7.70356, -28.5372, -17.4839, 1.47", "-7.76956, -29.5487, -17.8655, 1.25", "-7.99276, -31.1948, -18.4164, 1.25", "-8.21817, -32.5358, -18.8166, 0.81", "-8.58411, -34.7346, -19.3383, 0.66", "-8.79285, -36.7994, -19.6756, 0.66", "-8.87473, -39.2945, -19.9526, 0.96", "-8.83117, -40.591, -20.0211, 1.11", "-8.72114, -41.8116, -20.0313, 1.11", "-8.51124, -43.5254, -19.9885, 0.74", "-8.26667, -45.3157, -19.8974, 0.52", "-8.11896, -46.7055, -19.8337, 0.74", "-8.09995, -47.7125, -19.8421, 1.11", "-8.27719, -49.1842, -19.9127, 0.96", "-8.75804, -50.6776, -20.0217, 0.74", "-9.21687, -51.5805, -20.0889, 0.74", "-9.67619, -52.3664, -20.1105, 0.74", "-10.304, -53.4793, -20.0974, 0.59", "-11.0303, -54.8969, -20.0448, 0.52", "-11.6744, -56.4492, -19.9498, 0.52", "-12.1654, -58.0498, -19.8522, 0.74", "-12.5705, -60.2393, -19.7501, 0.88", "-12.6603, -61.556, -19.7113, 1.18", "-12.6187, -62.5583, -19.7248, 1.4", "-12.4726, -63.8801, -19.7942, 1.62", "-12.3671, -64.7005, -19.87, 1.77", "-12.2574, -65.8148, -20.026, 1.4", "-12.2054, -67.1736, -20.2543, 0.66", "-12.2748, -68.6974, -20.5275, 0.44", "-12.4712, -69.9378, -20.7511, 0.81", "-12.7041, -70.7858, -20.941, 1.25", "-12.8604, -71.2663, -21.093, 1.4", "-13.0256, -71.7065, -21.2862, 1.4", "-13.4116, -72.639, -21.7512, 0.88", "-14.0409, -74.1186, -22.5423, 0.59", "-14.6421, -75.5805, -23.3701, 0.59", "-15.3841, -77.4198, -24.4194, 0.88", "-16.0509, -79.1418, -25.4054, 0.52", "-16.5147, -80.4352, -26.1726, 0.52", "-16.7156, -81.127, -26.6062, 1.11", "-16.8759, -81.9317, -27.1241, 1.55", "-16.938, -82.7188, -27.5802, 1.77", "-16.8986, -83.5472, -28.0089, 1.4", "-16.5997, -85.1863, -28.8037, 0.66", "-16.1845, -86.7068, -29.5289, 0.44", "-15.7546, -88.0004, -30.1039, 0.44", "-15.1954, -89.4797, -30.7042, 0.44", "-14.942, -90.1339, -30.9341, 0.88", "-14.7254, -90.7132, -31.0783, 1.25", "-14.4938, -91.4043, -31.1836, 1.55", "-14.3724, -91.9223, -31.2341, 1.55", "-14.2262, -93.0261, -31.3218, 1.25", "-14.2063, -94.914, -31.4182, 0.59", "-14.3835, -96.5023, -31.514, 0.59", "-14.5613, -97.3179, -31.5277, 0.96", "-14.9133, -98.441, -31.501, 0.96", "-15.3496, -99.5215, -31.4282, 0.81", "-16.2786, -101.407, -31.2086, 0.37", "-17.2607, -103.063, -30.9465, 0.37", "-18.2627, -104.614, -30.6608, 1.18", "-18.6278, -105.168, -30.5229, 1.62", "-19.0236, -105.736, -30.3384, 1.62", "-19.6794, -106.654, -29.9465, 1.33", "-20.7129, -108.062, -29.1896, 0.44", "-21.6369, -109.283, -28.4294, 0.44", "-22.3668, -110.236, -27.847, 0.66", "-23.2301, -111.377, -27.1561, 0.66", "-24.0748, -112.529, -26.4896, 0.44", "-24.5909, -113.269, -26.0945, 0.81", "-24.9848, -113.863, -25.8251, 1.25", "-25.4556, -114.585, -25.5502, 1.55", "-25.9581, -115.376, -25.3135, 1.25", "-26.5396, -116.336, -25.0774, 0.52", "-27.1207, -117.295, -24.8886, 0.37", "-27.6937, -118.327, -24.6216, 0.29", "-28.4229, -119.735, -24.1171, 0.81", "-28.7778, -120.48, -23.7565, 1.25", "-29.0951, -121.278, -23.2485, 0.81", "-29.4644, -122.42, -22.4145, 0.37", "-29.9182, -124.205, -21.0183, 0.37", "-30.0849, -124.978, -20.4012, 0.74", "-30.3033, -126.022, -19.5968, 0.81", "-30.6217, -127.405, -18.5707, 0.29", "-30.8197, -128.245, -18.0026, 0.88", "-30.9192, -128.703, -17.7627, 1.18", "-31.1075, -129.601, -17.5179, 1.18", "-31.3081, -130.56, -17.4064, 0.81", "-31.6312, -132.042, -17.4069, 0.29", "-31.9146, -133.281, -17.4892, 0.29", "-32.1207, -134.32, -17.561, 0.29", "-32.2325, -135.027, -17.6349, 0.66", "-32.334, -135.911, -17.7477, 0.96", "-32.4324, -136.886, -17.9207, 0.96", "-32.5501, -137.959, -18.1521, 0.52", "-32.7712, -139.489, -18.5125, 0.37", "-32.936, -140.522, -18.8103, 0.74", "-33.1282, -141.632, -19.1779, 0.44", "-33.3487, -142.721, -19.5761, 1.11", "-33.5188, -143.383, -19.833, 1.11", "-33.7961, -144.146, -20.1267, 0.81", "-34.5318, -145.85, -20.7172, 0.37", "-35.0049, -146.812, -20.9539, 0.66", "-35.2497, -147.259, -21.0337, 0.96", "-35.6475, -147.993, -21.0482, 0.96", "-36.2843, -149.348, -20.6333, 0.29", "-36.5141, -150.201, -19.72, 0.29", "-36.5751, -150.849, -18.7573, 0.96", "-36.5544, -151.163, -18.2103, 1.25", "-36.4421, -152.091, -16.4843, 0.44", "-36.1199, -153.785, -13.0632, 0.81", "-35.4554, -156.245, -7.5889, 0.22", "-35.2147, -156.985, -5.77582, 1.18", "-34.9124, -157.708, -3.89494, 1.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-59.4713, -130.39, 9.65643, 0.29", "-57.7507, -131.069, 9.97589, 0.29", "-56.4506, -131.581, 10.2173, 0.29", "-54.8782, -132.202, 10.5092, 0.29", "-53.6508, -132.686, 10.7371, 0.15", "-52.6896, -133.065, 10.9156, 0.29", "-52.1595, -133.274, 11.014, 0.29", "-42.3105, -138.322, 11.7504, 0.29", "-33.4723, -144.925, 13.4912, 0.29", "-24.5469, -151.625, 14.0297, 0.29", "-16.362, -158.874, 16.4923, 0.29", "-8.64592, -166.994, 17.6485, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-59.4713, -130.39, 9.65643, 0.29", "-60.1685, -131.081, 9.64805, 0.29", "-60.879, -131.769, 9.63529, 0.29", "-61.5981, -132.465, 9.62238, 0.29", "-62.4596, -133.298, 9.60692, 0.29", "-62.9444, -133.768, 9.59822, 0.29", "-63.4529, -134.26, 9.58909, 0.81", "-63.7925, -134.544, 9.56709, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-12.8664, 29.6471, 15.2732, 0.66", "-14.6904, 30.6648, 15.4942, 0.66", "-15.6287, 31.1653, 15.5787, 0.66", "-16.5092, 31.6162, 15.5993, 0.59", "-17.2179, 31.9802, 15.6199, 1.11", "-17.7037, 32.2316, 15.6849, 1.4", "-18.043, 32.4202, 15.7587, 1.4", "-18.6623, 32.7968, 15.9317, 0.66", "-19.1497, 33.2228, 16.2937, 0.44", "-19.5116, 33.6684, 16.7639, 0.44", "-20.1578, 34.7144, 17.8867, 0.74", "-20.5297, 35.3885, 18.565, 0.52", "-20.7677, 35.7947, 18.9278, 0.44", "-21.0644, 36.2749, 19.3064, 0.74", "-21.4428, 36.7812, 19.6644, 0.74", "-21.7741, 37.1241, 19.8409, 0.74", "-22.2172, 37.4758, 20.0113, 0.29", "-23.0776, 37.9685, 20.4926, 0.29", "-23.237, 38.0485, 20.6092, 0.81", "-23.7323, 38.2939, 21.0305, 0.81", "-24.2089, 38.5639, 21.4732, 0.74", "-24.9135, 39.0123, 22.1554, 0.81", "-26.2976, 40.0107, 23.5337, 1.69", "-27.1754, 40.7236, 24.3907, 0.52", "-27.5028, 41.0173, 24.7092, 0.59", "-28.1384, 41.6246, 25.2885, 0.59", "-28.5737, 42.0441, 25.6571, 0.66", "-28.9105, 42.3768, 25.8928, 1.03", "-29.2293, 42.678, 26.0601, 1.03", "-30.1459, 43.4019, 26.5262, 0.81", "-30.6517, 43.7665, 26.7925, 0.59", "-31.3875, 44.2766, 27.1771, 0.52", "-31.8571, 44.6417, 27.4185, 0.52", "-32.411, 45.1526, 27.69, 0.59", "-32.8166, 45.5628, 27.8803, 0.88", "-33.1613, 45.9977, 28.0038, 1.03", "-33.5426, 46.6091, 28.1396, 0.59", "-33.8133, 47.164, 28.2132, 0.52", "-34.0163, 47.662, 28.2692, 0.81", "-38.8013, 53.3932, 31.5086, 0.81", "-43.9463, 58.3852, 35.266, 0.81", "-48.6897, 63.3254, 39.576, 0.81", "-52.3328, 68.4284, 44.7102, 0.81", "-56.1182, 74.0417, 49.2186, 0.81", "-59.5501, 79.1604, 54.4833, 0.81", "-61.9485, 84.4343, 60.1676, 0.81", "-62.9929, 88.9422, 66.7862, 0.81", "-63.5393, 93.5882, 73.3791, 0.81", "-64.7967, 98.4911, 79.699, 0.81", "-66.7187, 103.333, 85.8917, 0.81" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-12.8664, 29.6471, 15.2732, 1.11", "-12.702, 30.7047, 14.7758, 1.11", "-12.6704, 31.8771, 14.2413, 0.81", "-12.8215, 33.1065, 13.6444, 0.74", "-12.9704, 33.7319, 13.3377, 1.11", "-13.1471, 34.3003, 13.0766, 1.18", "-13.4477, 35.1605, 12.717, 1.47", "-13.7293, 35.7825, 12.4704, 1.47", "-14.2575, 36.8619, 12.0847, 1.18", "-14.7487, 37.9426, 11.7654, 0.96", "-15.1084, 38.8862, 11.5224, 1.03", "-15.3944, 39.872, 11.289, 1.4", "-15.6068, 40.985, 11.0528, 1.4", "-15.6996, 42.2803, 10.7937, 1.03", "-15.6426, 43.3561, 10.586, 1.03", "-15.5072, 44.2837, 10.3987, 1.25", "-15.2175, 45.6101, 10.0642, 1.11", "-14.9623, 46.5877, 9.78188, 1.11", "-14.6298, 47.8557, 9.33009, 1.11", "-14.2848, 49.2859, 8.70774, 1.11", "-14.104, 50.2576, 8.20756, 1.11", "-13.9707, 51.5937, 7.41165, 1.33", "-14.0324, 52.3861, 6.86406, 1.03", "-14.4391, 53.6847, 5.83333, 1.18", "-14.7186, 54.1573, 5.42643, 1.47", "-15.1253, 54.6249, 5.03141, 1.47", "-15.5656, 55.0257, 4.74087, 1.69", "-16.8884, 56.0673, 4.23538, 0.88", "-17.7143, 56.7013, 4.06715, 1.11", "-18.4638, 57.3525, 4.07423, 1.11", "-19.2301, 58.1497, 4.19246, 0.96", "-19.8801, 59.0257, 4.39305, 0.88", "-20.443, 60.0864, 4.66765, 1.18", "-20.829, 61.146, 4.96827, 1.47", "-21.2305, 62.7603, 5.41337, 1.4", "-21.4114, 63.8771, 5.69146, 0.88", "-21.5689, 65.386, 6.00847, 0.81", "-21.6443, 66.8377, 6.27874, 1.69", "-21.6448, 67.4654, 6.39074, 1.99", "-21.6275, 68.1407, 6.50097, 1.99", "-21.6257, 68.6796, 6.5626, 2.21", "-21.6483, 69.6838, 6.71789, 1.99" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-25.2734, 9.72694, -6.97566, 1.4", "-25.359, 11.3436, -8.26729, 1.4", "-25.2921, 11.8275, -9.4661, 1.4", "-25.241, 12.1341, -10.2921, 1.33", "-25.1891, 12.8049, -11.9386, 1.62", "-25.185, 13.4326, -13.247, 1.25", "-25.265, 14.8938, -15.8601, 1.03", "-25.5346, 16.7381, -19.226, 1.4", "-25.6554, 17.3008, -20.1282, 1.4", "-25.8597, 17.9913, -21.0461, 1.11", "-26.1929, 18.9297, -21.963, 1.33", "-26.5724, 19.7612, -22.5977, 1.69", "-27.1098, 20.6688, -23.1334, 1.69", "-27.5755, 21.3216, -23.4996, 1.69", "-28.5641, 22.6052, -24.4815, 0.74", "-28.9493, 23.1243, -24.9747, 0.74", "-29.4222, 23.8098, -25.7825, 0.59", "-30.0618, 24.9216, -27.2179, 1.18", "-30.4759, 25.8523, -28.5752, 1.18", "-30.7641, 26.7228, -29.8789, 1.18", "-30.8925, 27.3653, -30.8495, 1.18", "-30.9694, 28.3604, -32.441, 0.81", "-30.9889, 28.9534, -33.3604, 0.66", "-31.0626, 30.5418, -35.6865, 0.66", "-31.1114, 30.8732, -36.1469, 1.25", "-31.439, 31.9746, -37.5659, 1.47", "-32.0695, 33.2209, -38.9873, 0.59", "-32.8695, 34.4501, -40.0687, 1.03", "-33.3621, 35.1232, -40.5221, 1.4", "-33.8275, 35.7371, -40.8128, 1.47", "-34.6674, 36.9036, -41.2767, 1.11", "-35.5716, 38.3366, -41.6893, 0.81", "-36.1795, 39.6479, -42.0723, 0.96", "-36.3543, 40.5971, -42.4332, 1.25", "-36.3671, 41.3607, -42.7597, 1.55", "-36.3056, 42.3541, -43.2061, 1.55", "-36.1888, 43.4466, -43.7091, 0.96", "-36.0259, 45.0631, -44.4583, 0.66", "-36.0395, 46.196, -44.9709, 0.66", "-36.2249, 46.945, -45.2637, 0.74", "-36.8409, 48.0117, -45.6473, 1.03", "-37.412, 48.6333, -45.877, 1.47", "-37.8493, 49.0135, -46.0383, 1.77", "-38.4044, 49.4409, -46.2492, 1.62", "-39.6967, 50.4342, -46.8443, 0.88", "-40.619, 51.2161, -47.3571, 0.66", "-41.5814, 52.1769, -48.0096, 0.59", "-42.3944, 53.187, -48.679, 0.81", "-42.8281, 53.9123, -49.1201, 0.59", "-43.2648, 54.9675, -49.6933, 0.81", "-43.4347, 55.6315, -49.9987, 1.03", "-43.5633, 56.3279, -50.2536, 1.03", "-43.6876, 57.1632, -50.4662, 0.74", "-43.8544, 58.2273, -50.6277, 0.52", "-43.9957, 58.9812, -50.6962, 0.52", "-44.2559, 60.0353, -50.7635, 1.11", "-44.5207, 60.8683, -50.8125, 1.4", "-44.9704, 62.0956, -50.8932, 1.4", "-45.2344, 62.8288, -50.9523, 1.03", "-45.4188, 63.4396, -51.0295, 0.74", "-45.6379, 64.4851, -51.2407, 0.59", "-45.6954, 65.1663, -51.4551, 0.52", "-45.6773, 66.0154, -51.8175, 0.52", "-45.5823, 67.2022, -52.4606, 0.52", "-45.4901, 68.102, -52.9869, 0.52", "-45.4158, 68.8323, -53.4928, 0.52", "-45.3847, 69.5092, -54.0747, 0.52", "-45.4554, 69.9148, -54.4724, 0.52", "-45.6831, 70.3095, -54.9148, 0.81", "-46.0901, 70.6795, -55.3601, 0.96", "-46.9455, 71.2001, -56.0041, 0.96", "-47.7758, 71.6183, -56.494, 0.52", "-48.7173, 72.0671, -56.9935, 0.81", "-49.1867, 72.3048, -57.2488, 1.18", "-49.6886, 72.6015, -57.5375, 1.18", "-50.5133, 73.2518, -58.0492, 0.44", "-50.9919, 73.8078, -58.4018, 0.44", "-51.3233, 74.4706, -58.7899, 0.74", "-51.4541, 75.1054, -59.1938, 0.74", "-51.4774, 75.6797, -59.5526, 0.44", "-51.4282, 76.6319, -60.1109, 0.66", "-51.321, 77.6303, -60.6576, 0.96", "-51.2343, 78.4033, -61.0675, 0.74", "-51.1427, 79.6159, -61.6678, 0.37", "-51.118, 80.6064, -62.1074, 0.37", "-51.1682, 81.5672, -62.4904, 0.88", "-51.2425, 81.9873, -62.618, 1.18", "-51.4719, 82.5307, -62.7143, 1.18", "-51.8473, 83.0511, -62.7869, 1.18", "-52.2309, 83.4958, -62.8358, 1.11", "-52.6912, 84.0129, -62.9015, 0.44", "-53.4106, 84.8623, -63.0236, 0.44", "-54.5679, 86.3567, -63.2587, 0.44", "-55.338, 87.442, -63.4671, 0.44", "-56.0847, 88.6081, -63.7222, 0.44", "-56.5416, 89.4453, -63.9602, 0.44", "-56.9023, 90.2797, -64.2409, 1.47", "-57.1177, 90.9738, -64.5238, 1.47", "-57.3175, 91.8895, -64.9557, 1.18", "-57.5125, 92.7674, -65.4889, 0.66", "-57.73, 93.8254, -66.4806, 0.44", "-57.7999, 94.4118, -67.1559, 0.59", "-57.8204, 95.104, -68.1379, 0.59", "-57.7969, 95.6654, -69.0603, 0.74", "-57.7034, 96.6059, -70.9268, 1.25", "-57.5739, 97.7991, -73.6702, 0.66", "-57.5432, 98.2882, -74.9251, 0.66", "-57.5223, 98.9614, -76.7784, 1.25", "-57.5266, 99.3127, -77.7185, 1.62", "-57.5878, 100.565, -80.711, 1.4", "-57.616, 101.127, -81.9076, 1.11", "-57.6813, 101.888, -83.4005, 1.25", "-57.7165, 102.593, -84.7051, 0.96", "-57.6921, 103.212, -85.6575, 1.18", "-57.6242, 103.957, -86.6345, 1.4", "-57.5308, 104.915, -87.6848, 0.37", "-57.4791, 105.706, -88.6067, 0.37", "-57.445, 106.405, -89.4723, 0.88", "-57.4474, 106.952, -90.2154, 0.88", "-57.464, 107.473, -91.0069, 0.88", "-57.5486, 108.373, -92.5292, 0.37", "-57.7605, 109.43, -94.2967, 1.03", "-57.9125, 109.917, -95.1971, 1.03", "-58.0399, 110.188, -95.7958, 1.03", "-58.4656, 110.806, -97.3868, 0.29", "-58.8819, 111.352, -98.9227, 0.29", "-59.2608, 111.8, -100.3, 0.29", "-59.7844, 112.353, -102.093, 1.25", "-60.4756, 112.974, -104.2, 1.25", "-61.0494, 113.433, -105.851, 0.96", "-61.8001, 114.041, -107.912, 0.37", "-62.0169, 114.268, -108.568, 0.66", "-62.2772, 114.593, -109.465, 1.03", "-62.5146, 115.049, -110.485, 1.03", "-62.8564, 116.13, -112.532, 0.52", "-62.9759, 116.668, -113.436, 1.03", "-63.2524, 117.345, -114.469, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-25.2734, 9.72694, -6.97566, 0.74", "-25.9919, 9.18301, -7.02838, 0.74", "-26.6782, 8.58953, -7.09365, 0.74", "-27.377, 7.98535, -7.16011, 1.03", "-27.8331, 7.59098, -7.20348, 1.4", "-28.5048, 7.01021, -7.26736, 1.84", "-28.939, 6.63471, -7.30866, 2.14", "-29.231, 6.28473, -7.34455, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "40.8915, 5.92002, 2.65033, 0.29", "55.72, 8.18146, 2.65033, 0.29", "70.5486, 10.4429, 2.65033, 0.29" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "12.0406, -69.1989, 13.8929, 0.52", "10.2694, -67.7978, 14.3629, 0.52", "9.579, -67.2516, 14.546, 0.52", "8.70408, -66.5595, 14.7782, 1.25", "8.28268, -66.2262, 14.89, 1.4", "7.49606, -65.604, 15.0987, 0.37", "7.0081, -65.218, 15.2281, 0.29", "1.06995, -59.0065, 16.3534, 0.29", "-5.08598, -52.9368, 15.918, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "12.0406, -69.1989, 13.8929, 0.66", "12.8387, -70.1052, 13.8985, 0.66", "13.5786, -70.8956, 13.9386, 0.59", "14.5107, -71.9126, 14.0101, 0.59", "14.9402, -72.4087, 14.0578, 0.88", "15.4288, -73.0153, 14.1204, 0.88", "16.0236, -73.8359, 14.1713, 0.52", "16.4762, -74.5477, 14.189, 0.52", "16.7035, -75.066, 14.2008, 1.11", "16.7979, -75.6751, 14.1813, 1.47", "16.7578, -76.1456, 14.1443, 1.18", "16.3967, -77.1916, 14.0177, 0.59", "16.0659, -77.7572, 13.9721, 0.59", "15.6121, -78.3578, 13.9776, 0.37", "15.3638, -78.6686, 14.0168, 0.59", "15.0656, -79.0629, 14.1069, 0.59", "14.5819, -79.8532, 14.3761, 0.44", "14.2139, -80.9552, 14.8682, 0.37", "14.2231, -81.6307, 15.1768, 0.66", "14.4105, -82.3339, 15.4984, 0.96", "14.6751, -82.9434, 15.7836, 0.74", "15.1063, -83.6784, 16.1163, 0.52", "15.7284, -84.536, 16.4783, 0.81", "16.2363, -85.1399, 16.7023, 0.96", "16.598, -85.5513, 16.8476, 1.03", "17.1602, -86.2068, 17.0475, 0.81", "17.6632, -86.8139, 17.1999, 0.74", "18.0507, -87.2699, 17.2843, 1.11", "18.4462, -87.7111, 17.3185, 1.11", "18.9998, -88.3102, 17.3059, 0.81", "19.4886, -88.8382, 17.2545, 0.52", "19.851, -89.2806, 17.1916, 0.74", "20.1953, -89.794, 17.1378, 0.74", "20.5743, -90.5014, 17.0911, 0.52", "20.7867, -91.0194, 17.0773, 0.81", "20.9453, -91.455, 17.0802, 0.81", "21.2823, -92.4163, 17.1593, 0.59", "21.5401, -93.1027, 17.2587, 0.81", "21.768, -93.6639, 17.4108, 0.81", "22.0719, -94.3395, 17.6728, 0.44", "22.4134, -94.9979, 17.9945, 0.81", "22.8514, -95.6946, 18.3883, 0.66", "23.3559, -96.3414, 18.7828, 0.29", "24.2751, -97.4034, 19.391, 0.74", "24.6251, -97.7924, 19.5972, 1.25", "24.9328, -98.132, 19.7768, 1.25", "25.6092, -98.9381, 20.1625, 0.37", "26.1902, -99.6752, 20.435, 0.37", "26.8257, -100.473, 20.6656, 0.37", "27.1868, -100.892, 20.7076, 0.37" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "5.39598, -50.0944, 30.2389, 0.44", "6.4078, -49.9632, 31.003, 0.44", "6.90128, -49.8993, 31.3756, 0.29", "7.54962, -49.8155, 31.8652, 0.52", "7.88544, -49.7719, 32.1188, 0.74", "8.05144, -49.7505, 32.2442, 0.74", "13.3008, -49.0658, 35.6914, 0.74", "19.0457, -47.9085, 38.0696, 0.74", "24.4658, -47.6658, 41.2976, 0.74", "29.8484, -46.9262, 44.5219, 0.74", "35.1337, -46.4924, 47.9501, 0.74", "40.8058, -46.9677, 50.6799, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "5.39598, -50.0944, 30.2389, 0.44", "4.77378, -51.8046, 31.4826, 0.44", "4.40558, -52.8167, 32.2186, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-56.1096, -143.576, 72.3632, 0.29", "-52.0862, -155.12, 74.7406, 0.29", "-47.4296, -166.675, 74.9057, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-56.1096, -143.576, 72.3632, 0.22", "-62.6523, -146.198, 77.4598, 0.29", "-70.0413, -148.78, 81.2671, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-8.64592, -166.994, 17.6485, 0.37", "0.708663, -174.744, 14.2813, 0.37", "11.1786, -180.433, 10.4801, 0.37", "22.0319, -185.634, 7.14749, 0.37", "31.2277, -192.612, 2.17971, 0.37", "39.8706, -199.689, -3.5909, 0.37", "47.208, -208.369, -9.18055, 0.37", "54.615, -217.607, -13.7745, 0.37", "61.9836, -227.739, -16.2019, 0.37", "68.8238, -238.373, -18.1895, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-8.64592, -166.994, 17.6485, 0.22", "1.21269, -174.015, 20.4626, 0.37", "12.0998, -179.813, 21.3301, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-63.7925, -134.544, 9.56709, 0.22", "-63.5376, -136.024, 9.3936, 0.22", "-63.342, -137.16, 9.2605, 0.22", "-63.1916, -138.033, 9.15819, 0.37", "-62.9646, -139.352, 9.00371, 0.37", "-60.135, -149.656, 9.24728, 0.37", "-56.216, -159.561, 9.12382, 0.37", "-53.03, -169.74, 8.72667, 0.37" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-63.7925, -134.544, 9.56709, 0.22", "-64.7317, -136.111, 10.2618, 0.22", "-64.7777, -136.17, 10.2923, 0.44", "-65.3195, -136.727, 10.5699, 0.15", "-65.5127, -136.896, 10.6458, 0.37", "-66.1505, -137.426, 10.8599, 0.15", "-66.961, -138.095, 11.063, 0.22", "-67.6599, -138.627, 11.2367, 0.22", "-68.2356, -139.122, 11.5131, 0.66", "-68.951, -139.718, 11.8913, 0.22", "-69.2232, -139.95, 12.0503, 0.88", "-69.8077, -140.485, 12.4606, 0.74", "-70.8816, -141.776, 13.4653, 1.4", "-71.5195, -142.997, 14.6316, 1.18", "-76.7844, -149.919, 19.7325, 1.18", "-81.1206, -157.235, 25.1924, 1.18", "-86.7612, -163.728, 30.4038, 1.18", "-92.8978, -170.78, 34.2131, 1.18", "-98.2293, -177.965, 38.8992, 1.18", "-104.08, -184.287, 44.07, 1.18", "-109.07, -191.02, 49.6523, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-66.7187, 103.333, 85.8917, 0.37", "-70.6891, 108.733, 91.0085, 0.37", "-75.2361, 112.545, 96.8853, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-66.7187, 103.333, 85.8917, 0.29", "-73.0929, 112.027, 94.3759, 0.37", "-78.7393, 121.188, 102.935, 0.37", "-84.7336, 128.155, 113.006, 0.37", "-89.4388, 136.453, 122.852, 0.37", "-94.5253, 142.15, 134.087, 0.37", "-99.3565, 148.535, 145.098, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-21.6483, 69.6838, 6.71789, 0.96", "-21.9656, 72.2097, 5.98128, 0.96", "-22.2948, 73.8246, 5.43346, 0.81", "-22.6501, 75.095, 4.98951, 0.81", "-23.0847, 76.4049, 4.40263, 1.18", "-24.0956, 79.3256, 2.99746, 1.18", "-24.3484, 80.0681, 2.64199, 1.18", "-24.7859, 81.1996, 2.03101, 0.81", "-25.1256, 82.121, 1.59984, 0.81", "-25.8234, 84.4557, 0.943931, 0.66", "-26.0668, 85.7372, 0.938175, 0.96", "-26.1738, 86.9952, 1.25359, 1.11", "-26.1974, 88.2867, 1.77169, 0.81", "-26.1344, 90.4483, 2.83126, 0.59", "-26.0049, 92.7166, 3.9879, 0.81", "-25.8788, 94.6211, 4.97808, 1.11", "-25.7884, 96.024, 5.57553, 1.25", "-25.6896, 98.1906, 6.26759, 0.59", "-25.686, 99.2785, 6.41805, 0.59", "-25.8931, 101.359, 6.06299, 0.59", "-26.2002, 102.538, 5.45103, 0.44", "-26.9496, 104.537, 3.93789, 1.11", "-27.2065, 105.112, 3.4168, 1.4", "-27.8911, 106.56, 1.9649, 0.88", "-28.4332, 107.692, 0.853289, 0.52", "-28.835, 108.595, 0.0648105, 0.52", "-29.1501, 109.794, -0.77991, 0.74", "-29.1116, 110.745, -1.19834, 1.11", "-28.7656, 111.908, -1.50732, 1.33", "-28.4314, 112.583, -1.60142, 1.62", "-27.8377, 113.472, -1.68343, 1.47", "-26.648, 114.93, -1.76969, 0.96", "-25.8125, 115.853, -1.82074, 0.81", "-24.9851, 116.771, -1.86269, 0.81", "-24.0565, 117.864, -1.90043, 0.66", "-23.1606, 119.054, -1.96833, 0.59", "-22.6724, 119.851, -2.05115, 0.59", "-22.122, 121.026, -2.21385, 0.44", "-21.6642, 122.338, -2.42134, 0.81", "-21.3034, 123.721, -2.69508, 0.81", "-20.9683, 125.314, -3.05111, 1.03", "-20.6542, 126.932, -3.54917, 1.25", "-20.5091, 127.658, -3.87294, 1.25", "-20.2897, 128.516, -4.49913, 1.18", "-19.8969, 129.772, -5.64459, 0.66", "-19.677, 130.429, -6.23807, 0.59", "-19.038, 132.301, -7.83443, 1.25", "-18.5009, 133.876, -9.0276, 1.99", "-17.3102, 137.65, -11.3741, 0.59", "-17.0028, 138.736, -11.8684, 0.66", "-16.2796, 141.833, -12.6456, 0.52", "-16.0303, 143.111, -12.7337, 1.03", "-15.7789, 144.645, -12.5954, 1.25", "-15.5299, 146.43, -12.2864, 0.74", "-15.3868, 147.757, -12.0024, 0.59", "-15.2837, 148.862, -11.8905, 0.59", "-15.099, 150.399, -11.9362, 0.88", "-14.8583, 151.677, -12.0414, 1.11", "-14.5607, 152.753, -12.1833, 1.11", "-14.0952, 154.011, -12.3741, 1.03", "-13.279, 155.706, -12.6257, 0.66", "-12.4872, 156.936, -12.7969, 0.66", "-11.0763, 158.589, -12.9903, 0.96", "-9.96418, 159.635, -13.1571, 1.4", "-9.29729, 160.19, -13.2723, 1.4", "-8.53136, 160.784, -13.4422, 1.4", "-7.39144, 161.674, -13.8132, 0.74", "-6.36852, 162.656, -14.4235, 0.37", "-5.18976, 164.121, -15.6698, 0.37", "-4.7103, 164.806, -16.3607, 0.96", "-4.31053, 165.403, -17.0147, 0.96", "-3.71059, 166.302, -18.1001, 0.66", "-2.83452, 167.607, -19.7392, 0.52", "-2.33701, 168.362, -20.6369, 0.37", "-1.77709, 169.213, -21.4675, 0.81", "-1.31063, 169.997, -22.1244, 0.52", "-0.710124, 171.309, -23.0553, 0.52", "-0.440608, 172.202, -23.647, 0.66", "-0.284289, 173.66, -24.5303, 0.66", "-0.403462, 174.909, -25.3344, 0.66", "-0.713189, 176.365, -26.3316, 0.66", "-1.10623, 177.877, -27.4155, 0.81", "-1.50195, 179.443, -28.6039, 1.03", "-1.65771, 180.239, -29.2847, 1.25", "-1.78531, 181.608, -30.5698, 0.52", "-1.74258, 182.495, -31.4592, 0.37", "-1.4314, 183.446, -32.4473, 0.37", "-0.629542, 184.78, -33.8887, 1.11", "0.0428543, 185.609, -34.8656, 1.62", "0.373472, 185.949, -35.3049, 1.69", "0.988548, 186.571, -36.1353, 1.69", "2.33715, 188.185, -38.2605, 0.44", "2.96886, 189.175, -39.5056, 0.96", "3.48408, 190.263, -40.7554, 1.03", "3.71745, 191.038, -41.5027, 0.88", "3.95674, 192.46, -42.7077, 0.44", "4.09435, 193.978, -43.8178, 0.74", "4.10657, 194.912, -44.3842, 1.03", "4.21843, 195.791, -44.9241, 1.03", "4.64276, 197.02, -45.7928, 0.59", "5.35904, 198.091, -46.726, 0.59", "6.26772, 198.97, -47.6242, 0.59", "6.94873, 199.537, -48.2567, 0.74", "8.57332, 201.012, -49.8817, 0.74", "9.08517, 201.62, -50.5191, 0.96", "9.47743, 202.408, -51.1239, 1.11", "9.63916, 203.139, -51.4676, 1.11", "9.76619, 204.589, -51.9203, 0.66", "9.84469, 206.394, -52.2465, 0.52", "9.9535, 208.298, -52.3555, 0.52", "10.2398, 211.355, -52.3659, 1.11", "10.3579, 212.472, -52.334, 1.33", "10.4713, 213.553, -52.2687, 1.33", "10.6331, 215.439, -52.1008, 0.44", "10.7577, 216.95, -51.9831, 0.44", "10.8487, 218.252, -51.9626, 0.74", "10.8721, 219.233, -52.0345, 0.74", "10.8388, 220.812, -52.1721, 0.52", "10.7264, 222.755, -52.357, 0.44", "10.5144, 224.567, -52.56, 0.44", "10.2228, 226.409, -52.8046, 1.18", "10.026, 227.507, -52.9885, 1.18", "9.76235, 228.96, -53.2941, 0.96", "9.50346, 230.395, -53.6705, 0.44", "9.19558, 232.503, -54.3586, 0.37", "9.11241, 233.32, -54.6866, 0.37", "9.07992, 235.042, -55.4863, 0.88", "9.19577, 236.352, -56.0569, 1.18", "9.40729, 237.324, -56.3904, 1.18", "10.047, 239.249, -56.7577, 0.59", "10.776, 241.062, -56.8135, 0.52", "11.2913, 242.312, -56.7054, 0.44", "12.4226, 244.985, -56.101, 0.74", "13.0801, 246.558, -55.6098, 1.25", "13.6446, 247.961, -55.105, 1.55", "14.0873, 249.192, -54.6081, 1.62", "14.6064, 250.754, -53.9363, 0.81", "15.1879, 252.579, -53.1826, 0.37", "15.6528, 254.054, -52.6495, 0.37", "15.9524, 255.164, -52.2655, 0.37", "16.1903, 256.474, -51.8417, 0.37", "16.2389, 257.284, -51.6177, 0.37", "16.206, 258.398, -51.4214, 0.66", "16.1582, 259.561, -51.2223, 0.96", "16.1673, 260.48, -50.9728, 1.18", "16.3106, 261.953, -50.4924, 0.52", "16.6386, 263.726, -49.8994, 0.66", "16.9898, 265.291, -49.3924, 0.59", "17.7683, 268.405, -48.3828, 0.52", "18.3485, 270.308, -47.7597, 0.96", "18.7847, 271.495, -47.3628, 0.96", "19.4368, 272.884, -46.916, 0.66", "20.4141, 274.664, -46.3645, 0.44", "21.2154, 276.04, -46.0129, 0.44", "22.0172, 277.373, -45.8337, 0.52", "22.744, 278.573, -45.7045, 0.52", "24.0595, 280.695, -45.4077, 0.81", "24.956, 282.223, -45.1543, 0.52", "25.7289, 283.838, -44.8221, 0.52", "26.2458, 285.323, -44.4913, 1.47", "26.4811, 286.222, -44.2838, 1.77", "26.6472, 286.957, -44.1218, 1.77", "26.9719, 288.481, -43.8092, 0.66", "27.5001, 290.425, -43.5019, 0.52", "28.1021, 292.109, -43.2745, 0.52", "28.8027, 293.762, -43.1049, 0.52", "29.2806, 294.856, -43.0391, 0.52", "29.6222, 295.67, -43.0194, 0.81", "30.1536, 297.004, -43.0247, 1.03", "30.5906, 298.442, -43.0745, 1.55", "30.7538, 299.121, -43.095, 1.33", "31.0899, 300.494, -43.1248, 0.88", "31.4628, 301.622, -43.1366, 0.81", "31.9659, 302.613, -43.1465, 0.59", "33.2271, 304.225, -43.1748, 0.44", "34.3418, 305.22, -43.1432, 0.66", "35.4378, 306.043, -43.0795, 0.81", "36.6112, 306.836, -42.9878, 0.44", "37.6587, 307.538, -42.8423, 0.81", "38.4533, 308.112, -42.69, 0.81", "39.6375, 309.022, -42.4194, 0.52", "40.5227, 309.821, -42.2147, 0.52", "41.4673, 310.759, -42.0014, 0.52", "42.4459, 311.755, -41.8056, 0.37", "43.7199, 313.023, -41.6656, 0.37", "44.7407, 313.992, -41.6781, 0.59", "45.7799, 314.941, -41.7322, 1.18", "46.146, 315.277, -41.7256, 1.47", "46.9027, 316.026, -41.6668, 1.47", "48.0848, 317.298, -41.5267, 0.52", "48.9562, 318.31, -41.3784, 0.52", "50.4998, 320.184, -41.1052, 0.96", "51.8222, 321.732, -40.8931, 0.52", "53.0544, 323.082, -40.7712, 0.96", "53.7415, 323.788, -40.7526, 0.96", "55.0898, 324.977, -40.8216, 0.52", "55.8406, 325.539, -40.9784, 0.37", "57.0482, 326.222, -41.4177, 0.37", "57.952, 326.586, -41.7829, 0.81", "58.7579, 326.821, -42.0792, 0.81", "60.0136, 327.15, -42.509, 0.52", "60.9252, 327.401, -42.7871, 0.74", "62.3063, 327.844, -43.1601, 0.74", "63.4725, 328.277, -43.4523, 0.52", "64.8036, 328.956, -43.8237, 0.52", "66.0601, 329.884, -44.2252, 0.96", "66.6512, 330.507, -44.4516, 1.55", "67.118, 331.125, -44.6374, 1.69", "67.3872, 331.542, -44.7461, 1.69", "68.7302, 333.614, -45.2243, 0.52", "69.7191, 334.989, -45.5084, 0.66", "70.3725, 335.73, -45.635, 0.74", "71.6051, 336.856, -45.8622, 0.44", "72.9346, 337.945, -46.0934, 0.37", "74.1777, 338.878, -46.2846, 1.11", "75.1378, 339.557, -46.3986, 1.55", "76.218, 340.387, -46.5914, 0.81", "77.5237, 341.732, -46.9711, 0.52", "78.1133, 342.712, -47.2649, 0.66", "78.3564, 343.305, -47.4701, 0.66", "78.802, 344.781, -48.0013, 0.44", "79.1729, 346.116, -48.4901, 0.44", "79.6663, 347.382, -49.0375, 0.52", "80.5449, 348.643, -49.7527, 0.74", "81.4676, 349.427, -50.4615, 1.11", "81.6106, 349.513, -50.5677, 1.33", "82.2042, 349.786, -50.9869, 1.33", "83.9872, 350.524, -52.3045, 0.37", "84.7848, 350.861, -52.9319, 0.37", "86.0833, 351.515, -54.0013, 0.66", "87.0452, 352.143, -54.8326, 0.44", "87.5805, 352.566, -55.3106, 0.44", "88.7695, 353.618, -56.3458, 1.18", "89.3553, 354.16, -56.7538, 1.47", "90.129, 354.873, -57.1369, 1.47", "91.6309, 356.299, -57.5899, 0.52", "92.3676, 357.075, -57.6957, 0.52", "93.5505, 358.502, -57.7, 0.52", "94.8616, 360.324, -57.4959, 0.88", "95.6872, 361.675, -57.2816, 0.66", "96.6218, 363.463, -56.9308, 0.96", "97.3724, 365.099, -56.5642, 0.96", "98.0514, 366.628, -56.2513, 0.96", "98.5797, 367.781, -56.0495, 0.96", "99.1871, 368.882, -55.9328, 0.96", "99.9286, 369.82, -55.857, 0.96", "101.127, 370.872, -55.8018, 0.37", "102.501, 371.847, -55.7987, 0.37", "103.761, 372.655, -55.7976, 0.66", "104.861, 373.378, -55.7994, 1.33", "105.644, 373.96, -55.804, 1.33", "106.632, 374.934, -55.8164, 0.52", "107.673, 376.196, -55.8367, 0.52", "108.14, 376.829, -55.8482, 0.88", "108.74, 377.606, -55.9027, 0.88", "109.596, 378.549, -56.032, 0.88", "110.814, 379.582, -56.2167, 0.44", "112.083, 380.452, -56.4246, 0.44", "113.545, 381.197, -56.6757, 0.81", "115.246, 381.851, -56.9743, 1.47", "116.027, 382.05, -57.1153, 1.77", "117.413, 382.228, -57.3801, 1.77" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-21.6483, 69.6838, 6.71789, 0.52", "-22.5569, 70.0277, 6.32599, 0.52", "-23.2475, 70.3508, 6.04598, 0.52", "-24.0506, 70.8251, 5.72947, 0.52", "-24.6159, 71.242, 5.50556, 0.74", "-24.9988, 71.6059, 5.32819, 0.74", "-25.3618, 72.0525, 5.09172, 0.59", "-25.5003, 72.3932, 4.92375, 0.37", "-25.6076, 72.9158, 4.67895, 0.37", "-25.6659, 73.4631, 4.44982, 0.37", "-25.7352, 74.2225, 4.16161, 0.37", "-25.8854, 75.118, 3.84817, 0.37", "-26.0355, 75.4529, 3.7541, 0.44", "-26.3393, 75.7643, 3.71088, 0.59", "-26.6436, 75.9632, 3.707, 0.59", "-27.6562, 76.4893, 3.74761, 0.88", "-28.1324, 76.6957, 3.78695, 1.03", "-29.0533, 77.0541, 3.85779, 0.37", "-29.7085, 77.2953, 3.86693, 0.44", "-30.1787, 77.4755, 3.82814, 0.74", "-30.6109, 77.6605, 3.74883, 0.74", "-31.2513, 77.9968, 3.54685, 0.44", "-31.7617, 78.3501, 3.32335, 0.29", "-32.0305, 78.6577, 3.11034, 0.29", "-32.3245, 79.2544, 2.67338, 1.03", "-32.4101, 79.6157, 2.39461, 1.4", "-32.4426, 79.9214, 2.15602, 1.4", "-32.4714, 80.5285, 1.6818, 0.96", "-32.5264, 81.5714, 0.910149, 0.52", "-32.5726, 82.039, 0.579325, 0.52", "-32.6946, 82.7329, 0.127776, 0.52", "-32.8317, 83.075, -0.0537792, 0.52", "-33.2276, 83.5387, -0.151362, 0.52", "-33.7804, 83.9763, -0.130785, 0.88", "-34.1147, 84.2087, -0.0917502, 1.25", "-34.5271, 84.4977, -0.0359311, 1.47", "-35.2263, 85.031, 0.0604763, 0.59", "-35.8078, 85.562, 0.0988545, 0.37", "-36.4076, 86.2365, 0.0878272, 0.29", "-36.6986, 86.6292, 0.0470085, 0.59", "-37.0197, 87.1314, -0.0418029, 0.88", "-37.3412, 87.6656, -0.16731, 1.11", "-37.7062, 88.2699, -0.326396, 1.33", "-37.9681, 88.6837, -0.432534, 1.03", "-38.3341, 89.2276, -0.560385, 0.81", "-38.7278, 89.7606, -0.676183, 0.52", "-39.4225, 90.6787, -0.849694, 0.52", "-39.8963, 91.3225, -0.966399, 0.52", "-40.1249, 91.6472, -1.01988, 0.66", "-40.375, 92.0499, -1.08988, 0.66", "-40.7146, 92.7237, -1.20497, 0.37", "-40.9898, 93.4538, -1.32013, 0.37", "-41.1786, 94.136, -1.43069, 0.88", "-41.2759, 94.5154, -1.48472, 0.88", "-41.4896, 95.269, -1.58938, 0.37", "-41.6857, 95.8205, -1.66196, 0.29", "-42.0233, 96.6044, -1.75019, 0.81", "-42.1806, 96.9365, -1.75982, 1.18", "-42.4658, 97.524, -1.73078, 1.18", "-42.7205, 98.0832, -1.67815, 0.59", "-43.0382, 98.8998, -1.59258, 0.44", "-43.2837, 99.8022, -1.51124, 0.44", "-43.4329, 100.776, -1.45639, 1.11", "-43.4563, 101.123, -1.45551, 1.11", "-43.4635, 101.663, -1.48246, 0.81", "-43.4619, 102.489, -1.55338, 0.52", "-43.4852, 103.124, -1.66125, 0.52", "-43.5764, 103.706, -1.81364, 0.44", "-43.7218, 104.187, -1.96877, 0.44", "-43.918, 104.644, -2.11596, 0.52", "-44.135, 105.06, -2.24433, 0.81", "-44.5444, 105.784, -2.4344, 1.11", "-44.7815, 106.187, -2.5328, 1.11", "-45.102, 106.75, -2.62769, 0.81", "-45.4285, 107.348, -2.69183, 0.37", "-45.8064, 108.072, -2.72308, 0.37", "-46.17, 108.798, -2.70315, 0.29", "-46.4294, 109.336, -2.63507, 0.88", "-46.7593, 110.069, -2.50245, 1.55", "-46.9113, 110.434, -2.42224, 1.55", "-47.1365, 111.009, -2.29472, 1.18", "-47.3849, 111.651, -2.19049, 0.81", "-47.7668, 112.601, -2.05425, 0.44", "-48.1929, 113.584, -1.92086, 0.29", "-48.497, 114.185, -1.84583, 0.29", "-48.8818, 114.867, -1.75575, 1.25", "-49.4606, 115.729, -1.59509, 0.29", "-50.0795, 116.504, -1.38786, 0.29", "-50.5485, 117.0, -1.21186, 0.29", "-51.0242, 117.442, -0.997507, 0.59", "-51.2726, 117.66, -0.869703, 0.88", "-52.0285, 118.365, -0.406885, 0.44", "-52.267, 118.634, -0.247391, 0.29", "-52.5097, 119.004, -0.101752, 0.44", "-52.6849, 119.378, 0.00918483, 0.29", "-52.9049, 120.114, 0.218003, 0.29", "-52.9953, 120.632, 0.367163, 0.29", "-53.057, 121.193, 0.505914, 0.66", "-53.1002, 121.53, 0.593192, 0.81", "-53.1716, 121.973, 0.712998, 0.81", "-53.3335, 122.797, 0.929634, 0.29", "-53.4974, 123.487, 1.09857, 0.37", "-53.8001, 124.422, 1.31964, 0.37", "-54.0293, 124.985, 1.40333, 0.37", "-54.3616, 125.737, 1.44476, 1.33", "-54.5292, 126.107, 1.43373, 1.55", "-54.6386, 126.364, 1.39661, 1.55", "-54.7875, 126.739, 1.30615, 1.18", "-55.2532, 127.932, 0.908209, 0.37", "-55.4533, 128.365, 0.694866, 0.59", "-55.6892, 128.779, 0.408732, 0.59", "-55.9697, 129.188, 0.051825, 0.29", "-56.2202, 129.512, -0.348951, 0.29", "-56.4761, 129.826, -0.811006, 0.29", "-56.8598, 130.274, -1.53462, 0.59", "-57.0415, 130.487, -1.88448, 0.59", "-57.5558, 131.147, -2.94147, 0.88", "-58.109, 132.038, -4.2288, 0.44", "-58.3457, 132.591, -4.92542, 0.29", "-58.4063, 132.785, -5.14841, 0.81", "-58.4586, 132.985, -5.35875, 1.11", "-58.5919, 133.488, -5.87183, 0.81", "-58.8283, 134.138, -6.56643, 0.15", "-59.0059, 134.43, -6.94108, 0.15", "-59.1725, 134.63, -7.32029, 0.15", "-59.2994, 134.776, -7.67409, 0.66", "-59.3883, 134.885, -7.97596, 0.81", "-59.6726, 135.276, -9.00398, 0.15", "-60.0543, 135.824, -10.359, 0.66", "-60.1543, 135.98, -10.7092, 0.96", "-60.3408, 136.331, -11.4027, 0.81", "-60.6621, 136.976, -12.5803, 0.29", "-60.8294, 137.312, -13.1331, 0.29", "-61.0655, 137.746, -13.7657, 0.29", "-61.4522, 138.23, -14.4621, 1.18", "-61.7174, 138.475, -14.8226, 1.18", "-62.3613, 138.965, -15.5134, 0.37", "-62.7219, 139.212, -15.8434, 0.37", "-63.1203, 139.488, -16.1968, 0.88", "-63.6239, 139.899, -16.6476, 0.96", "-64.3558, 140.606, -17.3296, 0.44", "-64.6978, 140.963, -17.661, 0.66", "-64.985, 141.271, -17.9398, 0.37", "-65.308, 141.587, -18.2533, 0.37", "-65.8046, 142.071, -18.7481, 0.44", "-66.2688, 142.543, -19.2178, 0.37", "-66.9571, 143.231, -19.902, 0.66", "-67.3049, 143.524, -20.227, 0.66", "-67.8163, 143.86, -20.6799, 0.29", "-68.3072, 144.095, -21.0694, 0.52", "-68.7333, 144.253, -21.3719, 0.59", "-69.4179, 144.486, -21.8414, 0.29", "-69.9243, 144.67, -22.2078, 0.29", "-70.5982, 144.944, -22.686, 0.29", "-71.1012, 145.157, -23.0608, 0.44", "-71.4426, 145.282, -23.3142, 0.74", "-71.9699, 145.475, -23.6909, 0.74", "-72.6728, 145.731, -24.1629, 1.11", "-73.1617, 145.93, -24.4812, 1.62", "-74.151, 146.358, -25.0897, 0.88", "-74.9263, 146.687, -25.5586, 0.37", "-75.594, 146.946, -25.9569, 0.29", "-76.0861, 147.115, -26.2387, 0.29", "-76.463, 147.238, -26.4346, 0.81", "-76.7617, 147.336, -26.579, 1.18", "-77.1309, 147.476, -26.7248, 0.88", "-77.8728, 147.852, -27.0132, 0.29", "-78.2509, 148.122, -27.209, 0.29", "-78.5959, 148.456, -27.4236, 0.59", "-78.7491, 148.637, -27.5579, 0.88", "-78.9008, 148.863, -27.7503, 0.59", "-79.0459, 149.134, -28.0777, 0.37", "-79.2524, 149.579, -28.7683, 0.37", "-79.3626, 149.815, -29.1955, 0.74", "-79.5808, 150.244, -30.0864, 0.52", "-79.7607, 150.565, -30.8154, 1.11", "-80.263, 151.308, -32.761, 1.25", "-80.6338, 151.77, -34.165, 0.66", "-80.9098, 152.049, -35.1467, 0.44", "-81.2399, 152.325, -36.2491, 1.03", "-81.557, 152.526, -37.1669, 1.03", "-82.2255, 152.796, -38.7963, 0.29", "-82.6297, 152.88, -39.6036, 0.29", "-82.9507, 152.919, -40.1708, 1.25", "-83.0634, 152.933, -40.3532, 1.69", "-83.3414, 152.979, -40.7691, 1.69", "-84.1186, 153.144, -41.83, 0.29", "-84.7205, 153.344, -42.589, 0.29", "-85.0445, 153.497, -42.9971, 0.29", "-85.4793, 153.755, -43.5746, 0.29", "-85.9365, 154.034, -44.1947, 0.81", "-86.2027, 154.195, -44.5427, 0.88", "-86.7496, 154.518, -45.1906, 0.29", "-87.2959, 154.797, -45.8049, 0.81", "-87.5712, 154.907, -46.0964, 0.81", "-87.9964, 155.048, -46.5337, 0.22", "-88.2679, 155.15, -46.7946, 0.52", "-88.3859, 155.199, -46.9094, 0.59", "-89.0054, 155.42, -47.4227, 0.22", "-89.2408, 155.472, -47.5951, 0.29" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-63.2524, 117.345, -114.469, 0.52", "-62.5421, 118.761, -115.638, 0.52", "-62.0741, 119.767, -116.477, 0.81", "-61.7611, 120.454, -117.124, 0.59", "-61.0306, 121.882, -118.556, 0.96", "-60.5475, 122.749, -119.5, 0.96", "-59.9831, 123.774, -120.635, 0.52", "-59.6545, 124.408, -121.417, 0.52", "-59.104, 125.474, -122.862, 0.52", "-58.7693, 126.12, -123.73, 0.52", "-58.338, 126.969, -124.746, 0.66", "-58.0968, 127.543, -125.401, 0.96", "-57.8169, 128.327, -126.249, 0.96", "-57.569, 129.278, -127.272, 0.37", "-57.429, 130.151, -128.141, 0.37", "-57.3623, 131.02, -128.969, 0.37", "-57.3279, 132.677, -130.562, 0.44", "-57.3323, 133.021, -130.916, 0.74", "-57.3494, 133.804, -131.724, 0.74", "-57.3922, 134.542, -132.494, 0.37", "-57.4009, 135.201, -133.2, 0.37", "-57.308, 135.985, -133.985, 0.37", "-57.1172, 136.579, -134.496, 0.37", "-56.7522, 137.51, -135.291, 0.37", "-56.6285, 137.771, -135.501, 0.81", "-56.2113, 138.51, -136.092, 0.37", "-55.8262, 139.078, -136.544, 0.37", "-55.2668, 139.824, -137.05, 0.66", "-54.8642, 140.368, -137.405, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-63.2524, 117.345, -114.469, 0.44", "-63.415, 118.4, -114.558, 0.44", "-63.6737, 119.211, -114.657, 0.37", "-64.0065, 119.956, -114.781, 0.88", "-64.2126, 120.357, -114.878, 0.88", "-64.5668, 120.996, -115.065, 0.52", "-64.9207, 121.632, -115.406, 0.29", "-65.3617, 122.339, -115.961, 0.22", "-65.6259, 122.718, -116.311, 0.22", "-66.0393, 123.263, -116.871, 0.88", "-66.3205, 123.627, -117.283, 1.25", "-67.4754, 125.159, -119.22, 0.44", "-67.8666, 125.731, -120.007, 0.96", "-68.0048, 125.972, -120.364, 1.18" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-29.231, 6.28473, -7.34455, 0.81", "-30.1665, 5.98952, -9.60236, 0.81", "-30.6478, 5.88945, -10.5923, 0.81", "-33.7598, 5.62258, -15.9274, 1.62", "-36.0305, 5.68316, -19.2312, 0.66", "-37.4352, 5.78766, -21.0482, 0.66", "-38.3734, 5.838, -22.1695, 0.88", "-39.4701, 5.92297, -23.3, 0.96", "-41.2855, 6.00163, -24.8936, 0.81", "-43.1115, 5.86737, -26.0126, 0.52", "-44.72, 5.44968, -26.896, 0.52", "-46.4531, 4.58382, -27.8477, 0.74", "-47.9839, 3.43854, -28.6782, 1.11", "-48.4768, 2.94203, -28.9211, 1.25", "-49.5281, 1.63535, -29.4151, 0.96", "-50.7799, -0.0729057, -29.9687, 0.66", "-51.9576, -1.65655, -30.4611, 0.88", "-53.1877, -3.18865, -30.9768, 0.81", "-54.4911, -4.66717, -31.5843, 0.96", "-55.5177, -5.77722, -32.1518, 1.18", "-56.6437, -7.00649, -32.8865, 1.11", "-57.5898, -8.08961, -33.6536, 1.18", "-58.5271, -9.21766, -34.6127, 1.33", "-60.0254, -10.9807, -36.3132, 0.66", "-61.1366, -12.184, -37.5724, 0.88", "-62.0587, -13.0963, -38.5519, 0.88", "-63.5693, -14.455, -40.045, 0.59", "-64.49, -15.1588, -40.8148, 0.59", "-65.3196, -15.6152, -41.3223, 0.81", "-66.6753, -16.0442, -41.6836, 1.33", "-67.8643, -16.2995, -41.7189, 1.4", "-68.6398, -16.4903, -41.6329, 1.25", "-70.1577, -17.0514, -41.2794, 0.52", "-71.019, -17.5532, -41.0578, 0.52", "-72.0967, -18.5186, -40.8878, 0.66", "-73.0415, -19.6126, -40.8338, 0.81", "-74.0508, -20.8755, -40.8449, 0.81", "-74.7056, -21.7498, -40.9426, 1.11", "-75.2344, -22.5319, -41.1118, 1.33", "-75.9843, -23.7154, -41.5341, 1.33", "-76.3716, -24.3535, -41.8815, 1.33", "-77.1291, -25.6178, -42.843, 0.81", "-77.9676, -27.0025, -44.0668, 0.52", "-78.6081, -28.0269, -45.0305, 0.74", "-79.5367, -29.4783, -46.4102, 0.96", "-80.2809, -30.591, -47.4269, 0.81", "-81.3358, -32.0518, -48.7614, 0.66", "-82.2445, -33.2175, -49.7619, 0.59", "-82.8974, -33.9892, -50.348, 1.03", "-83.4392, -34.64, -50.7751, 1.25", "-84.2119, -35.6524, -51.2988, 1.25", "-85.3, -37.3204, -52.1336, 0.81", "-85.8623, -38.374, -52.6995, 0.52", "-86.6469, -39.866, -53.7624, 0.52", "-87.2393, -40.8738, -54.5733, 0.44", "-87.5942, -41.424, -55.0697, 0.44", "-88.6614, -43.0285, -56.5945, 0.96", "-89.1151, -43.6904, -57.2287, 1.4", "-90.2866, -45.1889, -58.9098, 0.88", "-91.3208, -46.4361, -60.3448, 0.66", "-92.7803, -48.2388, -62.33, 0.66", "-93.7637, -49.6449, -63.852, 0.59", "-94.7176, -51.2996, -65.5648, 1.77", "-95.9963, -54.0464, -68.2625, 0.59", "-96.3745, -55.0064, -69.1504, 0.74", "-96.8027, -56.1132, -70.1485, 0.74", "-97.8621, -58.5567, -72.2106, 0.59", "-98.4157, -59.6448, -73.0419, 0.59", "-99.0353, -60.7462, -73.7431, 0.74", "-99.9783, -62.3094, -74.5079, 0.74", "-100.913, -63.6334, -75.1045, 0.74", "-101.99, -65.0299, -75.8454, 0.52", "-102.985, -66.1639, -76.4641, 0.37", "-103.555, -66.7701, -76.865, 1.11", "-103.939, -67.1316, -77.1714, 1.11", "-104.638, -67.7168, -77.7715, 0.96", "-107.66, -69.8186, -80.3036, 0.59", "-108.426, -70.2236, -80.8466, 0.52", "-109.207, -70.5173, -81.4075, 0.81", "-110.478, -70.9302, -82.3136, 0.81", "-111.606, -71.2597, -83.0954, 1.11", "-112.822, -71.6205, -83.8855, 1.25", "-114.008, -72.0089, -84.5489, 0.96", "-116.622, -73.102, -86.2377, 0.52", "-117.731, -73.6844, -87.022, 0.52", "-118.606, -74.3005, -87.6974, 0.81", "-119.46, -75.1527, -88.4692, 0.88", "-119.883, -75.7533, -88.9361, 1.03", "-120.437, -76.7868, -89.6328, 0.88", "-120.934, -77.9216, -90.2733, 0.44", "-121.434, -79.2208, -90.9664, 0.44", "-122.241, -81.8918, -92.3339, 1.33", "-122.985, -84.6732, -93.7308, 0.59", "-123.243, -85.6745, -94.2655, 1.03", "-123.426, -86.4004, -94.6599, 1.18", "-123.712, -87.4715, -95.267, 0.81", "-124.34, -89.452, -96.3989, 0.59", "-124.852, -90.7292, -97.1443, 0.37", "-125.819, -92.6181, -98.4273, 0.37", "-126.12, -93.0655, -98.7878, 0.96", "-126.384, -93.3859, -99.0767, 1.25", "-126.769, -93.759, -99.4453, 1.25", "-128.302, -94.9651, -100.657, 0.52", "-129.378, -95.7519, -101.38, 0.52", "-130.577, -96.6052, -102.016, 0.52", "-130.917, -96.838, -102.185, 1.18", "-131.494, -97.2327, -102.528, 1.18", "-132.013, -97.5986, -102.852, 1.18", "-132.87, -98.2389, -103.285, 0.88", "-134.553, -99.4501, -104.358, 0.44", "-134.793, -99.6205, -104.558, 0.81", "-137.225, -101.345, -106.83, 0.52", "-138.065, -101.964, -107.696, 0.81", "-139.513, -103.078, -109.257, 0.44", "-141.905, -105.037, -112.015, 0.74", "-142.946, -105.944, -113.228, 0.44", "-143.434, -106.417, -113.773, 1.33", "-143.763, -106.788, -114.146, 1.33", "-144.445, -107.608, -114.997, 0.74", "-145.696, -109.068, -116.57, 0.44", "-146.064, -109.479, -116.935, 0.74", "-146.686, -110.067, -117.552, 0.74", "-148.169, -111.004, -119.181, 0.37", "-148.818, -111.157, -119.939, 0.37", "-149.537, -111.062, -120.842, 0.66", "-150.071, -110.896, -121.488, 0.88", "-150.546, -110.728, -122.047, 0.88", "-151.982, -110.266, -123.67, 0.59", "-152.797, -110.058, -124.486, 0.29", "-153.549, -109.976, -125.185, 0.29", "-154.973, -110.083, -126.371, 0.96", "-155.33, -110.174, -126.623, 1.18", "-157.136, -111.018, -127.812, 0.59", "-157.899, -111.54, -128.436, 0.81", "-158.501, -112.005, -129.0, 0.81", "-159.304, -112.629, -129.789, 0.37", "-160.228, -113.35, -130.733, 0.37", "-161.609, -114.442, -132.217, 1.11", "-164.292, -116.607, -135.123, 0.52", "-164.769, -116.996, -135.655, 0.52", "-165.79, -117.797, -136.795, 0.44", "-166.324, -118.182, -137.423, 1.47", "-168.67, -119.67, -140.241, 0.59", "-169.334, -120.035, -141.015, 0.88", "-170.121, -120.454, -141.992, 0.88", "-171.552, -121.186, -144.062, 0.52", "-172.806, -121.774, -146.047, 0.74", "-173.327, -121.972, -146.894, 0.96", "-173.664, -122.084, -147.429, 0.96", "-175.325, -122.705, -150.031, 0.29", "-176.761, -123.287, -152.429, 0.96", "-177.239, -123.491, -153.215, 1.18", "-178.792, -124.213, -155.772, 0.37", "-179.469, -124.579, -156.931, 0.37", "-179.971, -124.864, -157.8, 0.74", "-182.521, -126.218, -162.261, 0.88", "-182.979, -126.413, -163.07, 0.88", "-184.311, -126.891, -165.439, 0.37", "-184.812, -127.05, -166.293, 0.37", "-185.463, -127.231, -167.327, 0.37", "-186.357, -127.486, -168.563, 0.37", "-187.763, -128.027, -170.096, 0.74", "-189.953, -128.999, -172.419, 0.44", "-190.522, -129.254, -172.955, 1.03", "-191.068, -129.541, -173.472, 1.03", "-191.48, -129.836, -173.875, 1.03", "-192.602, -130.922, -174.915, 0.44", "-193.364, -131.804, -175.58, 0.59", "-194.216, -132.766, -176.23, 0.37", "-195.156, -133.758, -176.981, 0.29", "-195.663, -134.267, -177.454, 0.44", "-196.041, -134.67, -177.853, 0.44", "-197.201, -135.971, -179.164, 0.29", "-197.678, -136.513, -179.725, 0.52", "-197.945, -136.787, -180.065, 0.74", "-199.233, -137.692, -181.647, 0.29", "-199.775, -138.0, -182.31, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-29.231, 6.28473, -7.34455, 0.88", "-30.0055, 9.04609, -7.81626, 0.88", "-30.3927, 10.3283, -7.93203, 0.52", "-30.6491, 11.0773, -7.96917, 0.88", "-31.1794, 12.4509, -8.00746, 0.88", "-32.1418, 14.6635, -8.04272, 0.52", "-32.7678, 15.8554, -8.05279, 0.52", "-33.6023, 17.2457, -7.94089, 0.44", "-34.3143, 18.1764, -7.85083, 0.59", "-35.0772, 19.0284, -7.72553, 0.74", "-35.728, 19.6525, -7.5997, 0.74", "-37.2517, 20.8964, -7.35531, 1.25", "-37.7621, 21.2593, -7.29608, 1.25", "-38.8267, 21.8846, -7.24495, 0.66", "-40.1691, 22.5749, -7.25916, 0.81", "-40.7251, 22.8311, -7.2761, 0.66", "-41.9886, 23.3735, -7.34527, 0.88", "-44.1425, 24.2263, -7.51509, 0.88", "-45.0414, 24.5428, -7.60639, 0.66", "-45.6183, 24.7157, -7.68575, 0.52", "-46.8405, 25.0162, -7.85468, 1.03", "-47.3239, 25.1618, -7.84228, 1.33", "-47.6604, 25.2986, -7.77918, 1.55", "-47.9935, 25.4591, -7.69396, 1.55", "-48.5228, 25.741, -7.56857, 1.33", "-49.4039, 26.2529, -7.4013, 0.74", "-50.449, 26.918, -7.24241, 0.59", "-51.4948, 27.7205, -7.10099, 0.59", "-52.1604, 28.3466, -7.03047, 0.59", "-52.5105, 28.7588, -7.00237, 1.11", "-53.0966, 29.6625, -7.0124, 1.55", "-53.301, 30.1103, -7.05101, 1.77", "-53.6983, 31.5295, -7.14704, 0.74", "-53.8489, 32.4335, -7.17934, 0.96", "-53.9217, 33.1299, -7.18725, 0.74", "-54.003, 34.1197, -7.16211, 0.52", "-54.0676, 34.8745, -7.11278, 0.44", "-54.3784, 37.0005, -6.85719, 0.88", "-54.5006, 37.6065, -6.78026, 1.11", "-54.6353, 38.1606, -6.72324, 1.11", "-54.8966, 39.1423, -6.66101, 0.74", "-55.162, 40.0201, -6.64249, 0.44", "-55.4906, 40.9728, -6.72839, 0.29", "-55.9037, 42.0935, -6.9746, 0.59", "-56.1583, 42.8242, -7.14057, 0.44", "-56.4085, 43.5835, -7.32036, 1.25", "-56.5196, 43.9531, -7.4095, 1.25", "-56.6504, 44.4436, -7.50506, 0.81", "-56.8405, 45.1563, -7.59779, 0.29", "-57.0993, 45.9613, -7.64677, 0.59", "-57.2694, 46.4273, -7.67926, 0.74", "-57.4392, 46.8279, -7.71415, 0.88", "-57.6773, 47.318, -7.76556, 0.88", "-58.0145, 47.93, -7.84526, 0.44", "-58.3559, 48.5043, -7.93687, 0.81", "-58.6837, 49.0331, -8.02091, 0.81", "-59.1937, 49.8349, -8.14805, 0.37", "-59.5005, 50.3135, -8.2141, 0.37", "-60.1193, 51.2847, -8.31008, 0.29", "-60.7699, 52.3079, -8.36048, 0.29", "-61.0279, 52.7204, -8.36468, 0.29", "-61.4289, 53.3799, -8.35262, 0.88", "-61.6884, 53.8363, -8.33401, 1.18", "-62.0695, 54.5336, -8.28669, 1.18", "-62.4336, 55.1789, -8.20694, 0.59", "-62.8062, 55.8187, -8.09046, 0.59", "-63.1729, 56.4508, -7.96119, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "27.1868, -100.892, 20.7076, 0.29", "26.6594, -101.514, 20.9255, 0.29", "26.1025, -102.17, 21.1556, 0.15", "25.8408, -102.478, 21.2638, 0.15", "25.2773, -103.142, 21.4966, 0.44", "24.9425, -103.536, 21.635, 0.44", "24.5031, -104.054, 21.8166, 0.74", "19.7723, -111.084, 23.006, 0.74", "15.8567, -118.28, 25.5488, 0.74", "13.2006, -126.283, 27.406, 0.74", "11.0133, -134.587, 28.4765, 0.74", "9.47991, -143.073, 27.7942, 0.74", "9.23574, -151.413, 25.6287, 0.74", "9.524, -159.41, 22.5329, 0.74", "9.49937, -167.706, 20.2149, 0.74", "8.15477, -176.076, 18.5911, 0.74", "7.10187, -184.137, 15.8024, 0.74", "6.35054, -192.189, 12.9018, 0.74", "5.5525, -200.682, 11.5184, 0.74", "3.68307, -209.049, 10.4549, 0.74" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "27.1868, -100.892, 20.7076, 0.22", "28.0049, -100.404, 20.6428, 0.22", "28.9221, -99.8568, 20.5703, 0.59", "29.3011, -99.6306, 20.5403, 0.59", "30.1032, -99.152, 20.4769, 0.37", "30.6377, -98.8332, 20.4346, 0.37", "39.7409, -94.7973, 21.0458, 0.37", "47.8141, -88.8085, 20.4477, 0.37", "56.3693, -83.6235, 21.121, 0.37", "64.7453, -78.6028, 23.3518, 0.37", "72.2868, -72.5358, 26.1308, 0.37", "78.9775, -66.4424, 30.5459, 0.37" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "4.40558, -52.8167, 32.2186, 0.52", "3.85811, -53.8839, 31.7525, 0.52", "3.35998, -54.8549, 31.3283, 0.52", "2.85854, -55.8324, 30.9014, 0.44", "2.50631, -56.519, 30.6015, 0.29", "2.19308, -57.1296, 30.3348, 0.74", "-2.82748, -66.4035, 26.8405, 0.74", "-7.67333, -75.7346, 23.234, 0.74", "-12.4443, -84.4252, 18.2995, 0.74", "-18.0382, -92.4526, 13.2187, 0.74", "-24.1851, -99.1905, 7.16129, 0.74", "-31.3717, -104.786, 1.19373, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "4.40558, -52.8167, 32.2186, 0.29", "5.12024, -52.8823, 31.7313, 0.29", "6.27655, -52.9151, 31.0152, 0.29", "6.78542, -52.8972, 30.7238, 0.44", "7.56097, -52.8049, 30.2905, 0.44", "8.20501, -52.6584, 29.9342, 0.37", "8.61564, -52.5209, 29.7001, 0.22", "8.89969, -52.2589, 29.5395, 0.59", "8.98013, -51.8907, 29.4839, 0.74", "8.9006, -51.0647, 29.4529, 0.22", "8.68058, -50.3013, 29.4728, 0.22", "8.29071, -49.3745, 29.5201, 0.22", "7.81383, -48.4989, 29.5608, 0.81", "13.3936, -42.9706, 26.2647, 0.81", "18.6106, -36.7013, 23.6484, 0.81" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "12.0998, -179.813, 21.3301, 0.37", "21.2238, -184.982, 21.526, 0.37", "29.6769, -191.288, 21.4556, 0.37", "38.6187, -196.765, 20.8703, 0.37", "47.3566, -202.611, 20.4637, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "12.0998, -179.813, 21.3301, 0.22", "22.3668, -186.482, 26.1871, 0.37", "31.3373, -193.714, 32.6271, 0.37", "40.6161, -202.316, 36.6474, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-53.03, -169.74, 8.72667, 0.37", "-50.7015, -178.269, 7.24678, 0.37", "-47.5034, -186.367, 5.28184, 0.37", "-45.4108, -195.068, 4.50691, 0.37", "-42.4981, -203.388, 2.98205, 0.37", "-39.8797, -211.969, 2.81514, 0.37", "-36.3201, -220.158, 2.39222, 0.37", "-32.6516, -228.308, 2.46653, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-53.03, -169.74, 8.72667, 0.22", "-51.334, -175.52, 8.04036, 0.37", "-48.6463, -180.909, 7.7656, 0.37", "-46.7369, -186.497, 6.46675, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "117.413, 382.228, -57.3801, 0.37", "118.822, 384.078, -56.8019, 0.37", "119.383, 384.668, -56.6424, 0.37", "120.37, 385.476, -56.4543, 0.29", "121.094, 385.959, -56.3338, 0.29", "122.037, 386.539, -56.1567, 0.74", "122.911, 387.109, -55.9719, 0.96", "123.598, 387.545, -55.8641, 0.52", "124.71, 388.302, -55.6844, 0.44", "125.774, 389.105, -55.4668, 0.37", "126.353, 389.702, -55.303, 0.29", "126.969, 390.597, -55.0696, 0.29", "127.329, 391.266, -54.9212, 0.29", "127.92, 392.342, -54.7064, 0.74", "128.587, 393.447, -54.5116, 1.11", "129.243, 394.409, -54.3751, 1.11", "129.888, 395.216, -54.2795, 0.81", "131.23, 396.686, -54.1168, 0.37", "132.381, 397.861, -53.9931, 0.37", "133.137, 398.625, -53.8859, 0.37", "133.788, 399.313, -53.8015, 0.37", "134.189, 399.769, -53.7422, 1.03", "134.829, 400.584, -53.6095, 1.33", "135.122, 401.014, -53.5098, 1.33", "136.206, 402.927, -52.8634, 0.29", "136.847, 404.222, -52.3326, 0.29", "137.483, 405.62, -51.6993, 0.88", "137.841, 406.49, -51.2942, 0.88", "138.353, 407.803, -50.6867, 0.74", "139.158, 409.803, -49.8283, 0.66", "139.548, 410.796, -49.5005, 0.74", "140.058, 412.219, -49.1788, 0.44", "140.382, 413.298, -49.1018, 0.44", "140.723, 414.647, -49.2242, 0.37", "141.195, 416.878, -49.7225, 0.37", "141.587, 418.744, -50.3129, 0.37", "141.896, 420.295, -50.8824, 0.37", "142.176, 422.135, -51.6599, 1.77", "142.262, 423.174, -52.1493, 1.77", "142.219, 424.041, -52.5997, 1.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "117.413, 382.228, -57.3801, 1.11", "118.502, 383.662, -60.0763, 1.11", "119.727, 384.938, -62.7862, 0.74", "120.373, 385.381, -64.0921, 0.29", "121.059, 385.814, -65.5718, 0.44", "121.732, 386.327, -67.1937, 0.37", "122.546, 387.074, -69.245, 0.74", "122.86, 387.472, -70.0649, 0.88", "123.687, 388.44, -72.0279, 0.29", "124.424, 389.194, -73.604, 0.44", "125.277, 389.977, -75.1223, 0.29", "125.811, 390.484, -76.0266, 0.96", "126.264, 390.991, -76.7201, 1.25", "126.578, 391.342, -77.144, 1.25", "127.941, 392.792, -78.6557, 0.37", "128.736, 393.509, -79.3788, 0.74", "130.483, 394.873, -80.7848, 0.88", "131.092, 395.322, -81.2508, 1.11", "131.98, 395.983, -81.882, 0.52", "132.596, 396.461, -82.2718, 0.52", "133.29, 397.022, -82.634, 0.29", "133.894, 397.487, -82.92, 0.29", "134.904, 398.167, -83.2953, 1.25", "135.15, 398.323, -83.3947, 1.55", "135.594, 398.592, -83.5804, 1.55", "136.731, 399.24, -84.0675, 0.37", "138.044, 399.913, -84.5974, 0.44", "139.133, 400.41, -84.9875, 0.81", "139.383, 400.5, -85.0594, 1.11", "140.194, 400.77, -85.2785, 1.11", "141.633, 401.182, -85.6059, 0.29", "142.919, 401.466, -85.79, 0.37", "143.777, 401.561, -85.8688, 0.37", "144.71, 401.58, -85.9572, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-68.0048, 125.972, -120.364, 0.44", "-67.3543, 126.603, -120.578, 0.44", "-66.7889, 127.191, -120.878, 0.29", "-66.4778, 127.555, -121.099, 0.44", "-66.137, 128.016, -121.388, 0.44", "-65.9185, 128.358, -121.596, 0.81", "-65.6405, 128.847, -121.895, 0.81", "-65.371, 129.427, -122.319, 0.52", "-65.2721, 129.793, -122.621, 0.37", "-65.2177, 130.18, -122.949, 0.37", "-65.1913, 130.563, -123.287, 0.81", "-65.1662, 130.916, -123.595, 0.88", "-65.0881, 131.472, -124.063, 0.88", "-64.8957, 132.043, -124.598, 0.52", "-64.7533, 132.269, -124.86, 0.81", "-64.2968, 132.707, -125.487, 0.52", "-63.9763, 132.925, -125.834, 0.52", "-63.5193, 133.169, -126.223, 0.52", "-62.5488, 133.609, -126.91, 0.52", "-62.0621, 133.81, -127.265, 0.52", "-61.6105, 133.983, -127.615, 0.81", "-61.2712, 134.114, -127.883, 1.03", "-60.9348, 134.251, -128.16, 0.59", "-60.2547, 134.569, -128.732, 0.66", "-59.1319, 135.217, -129.653, 0.52", "-58.7115, 135.5, -130.001, 0.52", "-58.2321, 135.877, -130.436, 1.11", "-58.0099, 136.098, -130.656, 1.11", "-57.8299, 136.298, -130.838, 1.25", "-57.501, 136.778, -131.151, 0.66", "-57.2688, 137.357, -131.349, 0.44", "-57.1681, 137.846, -131.491, 0.44", "-57.1413, 138.662, -131.729, 0.81" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-68.0048, 125.972, -120.364, 0.44", "-69.2034, 127.421, -122.91, 0.44", "-69.7557, 128.03, -124.08, 0.37", "-70.3689, 128.688, -125.366, 0.37", "-70.9086, 129.22, -126.345, 0.88", "-71.5497, 129.819, -127.366, 0.88", "-72.7177, 130.8, -128.987, 0.59", "-73.8641, 131.738, -130.404, 0.22", "-74.5371, 132.235, -131.287, 0.66", "-75.502, 132.882, -132.579, 0.37", "-76.0478, 133.237, -133.305, 0.29", "-77.0093, 133.946, -134.778, 0.29", "-77.9056, 134.799, -136.541, 0.66", "-78.743, 135.885, -138.902, 1.03", "-78.9434, 136.209, -139.606, 1.33", "-79.0648, 136.444, -140.117, 1.33", "-79.5674, 137.536, -142.426, 0.44", "-80.0538, 138.667, -144.825, 0.29", "-80.3433, 139.373, -146.269, 0.59", "-80.5727, 139.965, -147.487, 0.59", "-80.6824, 140.29, -148.155, 0.88", "-80.8748, 140.867, -149.323, 0.88", "-81.4612, 142.258, -152.157, 0.29", "-81.6336, 142.76, -153.135, 0.29", "-81.7479, 143.199, -153.949, 0.29", "-81.8891, 143.889, -155.228, 0.96", "-82.0045, 144.411, -156.147, 0.96", "-82.4936, 146.077, -158.74, 0.29", "-82.8912, 147.013, -159.988, 0.29", "-83.1081, 147.383, -160.466, 0.29", "-83.5924, 148.118, -161.324, 0.29", "-84.0334, 148.759, -162.019, 0.29", "-84.5235, 149.508, -162.752, 0.81", "-84.9294, 150.169, -163.37, 0.88", "-85.9114, 151.79, -165.028, 0.29", "-86.4102, 152.643, -165.92, 0.59", "-86.7778, 153.303, -166.597, 0.59", "-87.1588, 154.01, -167.3, 0.29", "-87.7432, 155.156, -168.419, 0.29", "-88.1223, 156.024, -169.24, 0.29", "-88.5201, 157.026, -170.135, 0.29", "-88.8408, 157.829, -170.892, 0.29", "-89.2398, 158.866, -171.828, 0.29", "-89.4349, 159.373, -172.244, 0.29", "-89.9796, 160.729, -173.261, 0.88", "-90.2013, 161.341, -173.688, 1.11", "-90.8517, 163.613, -175.192, 0.29", "-91.0664, 164.479, -175.807, 0.59", "-91.3363, 165.613, -176.685, 0.29", "-91.4953, 166.179, -177.138, 0.29", "-91.7506, 167.062, -177.804, 0.29", "-91.9413, 167.802, -178.319, 0.29", "-92.4037, 169.433, -179.476, 0.66", "-92.7089, 170.192, -180.106, 0.66", "-93.3497, 171.634, -181.548, 0.37", "-93.7428, 172.463, -182.46, 0.37", "-94.3934, 173.526, -183.747, 0.37", "-95.2047, 174.642, -185.15, 0.37", "-96.0676, 175.752, -186.45, 0.37", "-97.3718, 177.352, -188.294, 0.29", "-97.753, 177.786, -188.84, 0.29", "-98.7221, 178.796, -190.236, 0.29", "-99.1696, 179.252, -190.889, 0.29", "-100.117, 180.411, -192.253, 1.4", "-100.327, 180.713, -192.525, 1.4" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "47.3566, -202.611, 20.4637, 0.37", "56.3562, -208.299, 21.7256, 0.37", "64.9812, -214.727, 22.0381, 0.37", "74.029, -220.456, 22.5875, 0.37", "82.8104, -226.605, 21.8425, 0.37", "91.1579, -233.433, 21.8636, 0.37", "100.458, -238.656, 21.033, 0.37", "109.322, -244.044, 18.3808, 0.37", "117.708, -250.704, 17.1974, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "47.3566, -202.611, 20.4637, 0.22", "56.7689, -209.111, 18.5151, 0.37", "67.1186, -214.084, 17.4137, 0.37", "76.9595, -219.312, 14.4056, 0.37", "86.9158, -223.012, 10.0326, 0.37", "96.2698, -227.897, 5.39824, 0.37", "105.903, -233.507, 2.34566, 0.37", "115.051, -240.663, 1.55049, 0.37", "124.159, -247.599, -0.479411, 0.37", "134.797, -251.929, -1.26509, 0.37", "144.967, -257.418, -1.0179, 0.37", "155.875, -260.345, 1.00437, 0.37", "166.891, -262.277, 3.47551, 0.37", "177.492, -262.346, 7.76692, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "40.6161, -202.316, 36.6474, 0.37", "49.1731, -208.734, 38.9974, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "40.6161, -202.316, 36.6474, 0.22", "48.8198, -208.646, 37.7004, 0.37", "56.6835, -215.114, 39.9431, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-46.7369, -186.497, 6.46675, 0.37", "-43.7963, -193.68, 6.31464, 0.37", "-39.1643, -199.755, 7.03969, 0.37", "-34.6535, -205.797, 8.45304, 0.37", "-29.8843, -211.569, 10.0279, 0.37", "-24.8032, -216.382, 12.961, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-46.7369, -186.497, 6.46675, 0.22", "-43.7767, -196.425, 3.3018, 0.37", "-42.1378, -206.287, -0.875476, 0.37", "-41.0378, -216.791, -3.5046, 0.37", "-40.6599, -227.421, -5.8565, 0.37", "-38.2782, -237.884, -7.60774, 0.37", "-34.547, -248.044, -8.1253, 0.37", "-30.4311, -257.944, -6.79958, 0.37", "-27.316, -267.929, -4.09668, 0.37", "-24.8453, -277.319, 0.508269, 0.37", "-24.2657, -287.225, 4.74996, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "142.219, 424.041, -52.5997, 0.29", "142.965, 425.915, -54.3386, 0.29", "143.228, 426.584, -54.8919, 0.29", "143.442, 427.193, -55.2997, 0.29", "143.576, 427.637, -55.5404, 0.29", "143.793, 428.477, -55.9276, 0.74", "143.857, 428.746, -56.0331, 0.74", "144.097, 429.917, -56.2929, 0.22", "144.305, 430.988, -56.5293, 0.22", "144.434, 431.903, -56.7102, 0.22", "144.495, 432.438, -56.7974, 0.52", "144.595, 433.311, -56.8833, 0.22", "144.631, 433.66, -56.9074, 0.66" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "142.219, 424.041, -52.5997, 0.44", "142.076, 425.195, -51.9544, 0.44", "142.034, 426.072, -51.4941, 0.44", "142.004, 427.018, -51.0228, 0.44", "141.99, 427.656, -50.7197, 0.44", "141.966, 428.427, -50.3774, 0.37", "141.949, 428.882, -50.1887, 0.37", "141.975, 429.693, -49.8117, 0.88", "141.999, 429.998, -49.689, 1.47", "142.018, 430.331, -49.5869, 1.47", "142.017, 431.213, -49.3722, 0.37", "141.964, 431.714, -49.2678, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "144.71, 401.58, -85.9572, 0.29", "145.289, 402.147, -86.1905, 0.29", "146.171, 402.936, -86.6129, 0.81", "146.805, 403.442, -86.9418, 0.81", "147.679, 404.036, -87.4533, 0.22", "148.175, 404.335, -87.777, 0.59", "149.815, 405.201, -88.9004, 0.22", "150.928, 405.702, -89.748, 0.81", "151.489, 405.937, -90.2244, 0.81", "152.566, 406.424, -91.2446, 0.29", "153.687, 407.017, -92.3836, 0.29", "154.911, 407.81, -93.6918, 0.22", "155.628, 408.371, -94.4668, 0.22", "156.5, 409.255, -95.4996, 0.81", "157.511, 410.533, -96.7255, 0.22", "158.18, 411.596, -97.5433, 0.22", "158.741, 412.657, -98.2639, 0.44", "159.089, 413.466, -98.7428, 0.15", "159.382, 414.214, -99.1259, 0.22", "159.806, 415.394, -99.6272, 0.15", "160.113, 416.21, -99.9156, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "144.71, 401.58, -85.9572, 0.22", "146.383, 402.339, -87.0634, 0.22", "147.002, 402.621, -87.4732, 0.81", "147.671, 402.925, -87.9156, 0.52", "149.056, 403.554, -88.8319, 1.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-57.1413, 138.662, -131.729, 0.37", "-56.364, 140.038, -132.664, 0.37", "-55.8225, 141.16, -133.53, 0.37", "-55.4109, 142.012, -134.188, 0.37", "-54.9732, 142.919, -134.888, 0.81", "-54.7698, 143.34, -135.213, 0.81", "-54.2438, 144.43, -136.054, 0.52", "-54.0041, 145.32, -136.766, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-57.1413, 138.662, -131.729, 0.29", "-56.8986, 140.19, -132.135, 0.29", "-56.7251, 141.284, -132.425, 0.88", "-56.5384, 142.46, -132.738, 0.29", "-56.4025, 143.316, -132.965, 0.88", "-56.2462, 144.301, -133.227, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "56.6835, -215.114, 39.9431, 0.37", "64.0162, -220.861, 40.6308, 0.37", "71.3278, -226.68, 40.7111, 0.37", "77.4818, -233.799, 41.3143, 0.37", "83.2913, -241.222, 42.0027, 0.37", "88.6086, -248.914, 43.5185, 0.37", "93.7967, -256.187, 46.5874, 0.37", "99.1778, -263.193, 49.8805, 0.37", "104.046, -269.883, 54.3604, 0.37", "109.341, -276.381, 58.6059, 0.37" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "56.6835, -215.114, 39.9431, 0.22", "65.8604, -222.513, 43.9239, 0.37", "73.7586, -231.692, 47.2299, 0.37", "82.0498, -240.449, 50.6092, 0.37", "90.1698, -249.008, 54.7747, 0.37", "99.2207, -256.81, 58.3234, 0.37", "108.83, -262.86, 63.238, 0.37", "117.241, -268.74, 70.1361, 0.37", "125.662, -272.122, 78.4014, 0.37", "133.532, -273.081, 87.7156, 0.37", "140.401, -275.488, 97.571, 0.37", "147.593, -279.465, 106.711, 0.37" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "141.964, 431.714, -49.2678, 0.29", "141.392, 433.347, -48.7163, 0.29", "140.972, 434.419, -48.3319, 0.29", "140.7, 435.095, -48.0856, 0.66", "140.608, 435.333, -47.9997, 0.66", "140.322, 436.209, -47.707, 0.22", "140.05, 437.207, -47.3987, 0.22", "139.892, 437.98, -47.184, 0.22", "139.836, 438.416, -47.0799, 0.59", "139.821, 438.96, -46.978, 0.59", "139.858, 440.152, -46.7927, 0.29", "139.936, 440.952, -46.6639, 0.88", "140.027, 441.652, -46.5471, 0.88", "140.319, 443.803, -46.1819, 0.29", "140.473, 444.913, -45.9879, 0.29", "140.559, 445.552, -45.8696, 0.59", "140.822, 447.535, -45.4613, 0.29", "140.964, 448.517, -45.2427, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "141.964, 431.714, -49.2678, 0.29", "142.022, 432.593, -49.2126, 0.29", "142.161, 433.424, -49.1069, 0.29", "142.287, 434.01, -49.0201, 0.29", "142.523, 434.962, -48.8818, 0.29", "142.656, 435.466, -48.8102, 0.29", "142.878, 436.268, -48.6992, 0.29", "143.132, 437.142, -48.5742, 1.03", "143.352, 437.798, -48.4607, 1.69", "143.682, 438.667, -48.295, 0.22", "143.85, 439.077, -48.2144, 0.52", "143.937, 439.293, -48.172, 0.59", "144.172, 439.929, -48.0163, 0.22", "144.395, 440.542, -47.8198, 0.52", "144.528, 440.896, -47.653, 0.66", "144.707, 441.338, -47.3588, 0.22", "144.831, 441.596, -47.156, 0.22", "145.257, 442.347, -46.5082, 0.66", "145.517, 442.725, -46.1399, 1.03", "145.831, 443.097, -45.7418, 1.03", "146.297, 443.622, -45.1967, 0.29", "146.597, 443.973, -44.862, 0.37", "146.842, 444.289, -44.6039, 0.37", "147.21, 444.79, -44.2746, 0.29", "147.512, 445.188, -44.0424, 0.29", "147.794, 445.571, -43.8421, 0.29", "148.028, 445.956, -43.6835, 0.66", "148.207, 446.337, -43.5421, 0.66", "148.423, 446.976, -43.3229, 0.29", "148.524, 447.49, -43.1785, 0.29", "148.563, 447.832, -43.0926, 0.29", "148.608, 448.452, -42.9578, 0.66", "148.624, 448.869, -42.872, 0.74", "148.643, 449.937, -42.7244, 0.29", "148.648, 450.808, -42.6509, 0.29", "148.656, 451.505, -42.6336, 0.88", "148.669, 451.823, -42.6443, 1.03", "148.721, 452.409, -42.7008, 0.74", "148.851, 453.376, -42.8571, 0.29", "148.93, 453.86, -42.999, 0.59", "149.033, 454.466, -43.2275, 0.29", "149.104, 454.99, -43.46, 0.59", "149.134, 455.334, -43.6358, 0.29", "149.147, 455.796, -43.8828, 0.81", "149.12, 456.774, -44.3598, 0.29", "149.08, 457.388, -44.6453, 0.29", "149.04, 457.878, -44.8646, 0.29", "148.985, 458.505, -45.1471, 0.22", "148.885, 459.601, -45.6125, 0.22", "148.733, 461.027, -46.1531, 0.22", "148.602, 462.21, -46.5612, 0.22", "148.482, 463.296, -46.913, 0.74", "148.426, 463.827, -47.0735, 0.96", "148.315, 464.889, -47.3665, 0.22", "148.196, 465.962, -47.6626, 0.22" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "149.056, 403.554, -88.8319, 0.22", "149.224, 404.716, -88.6632, 0.22", "149.286, 405.149, -88.6004, 0.37", "149.408, 406.001, -88.4767, 0.22", "149.501, 406.642, -88.3838, 0.22", "149.621, 407.476, -88.2627, 0.22", "149.748, 408.362, -88.1341, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "149.056, 403.554, -88.8319, 0.22", "149.822, 403.122, -91.0199, 0.22", "150.096, 402.967, -91.8047, 0.22", "150.415, 402.786, -92.7176, 0.52", "150.783, 402.579, -93.7676, 1.11", "151.141, 402.376, -94.7935, 0.81", "151.533, 402.155, -95.9124, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-54.0041, 145.32, -136.766, 0.59", "-54.3066, 147.009, -137.224, 0.59", "-54.3737, 147.508, -137.397, 0.88", "-54.508, 148.48, -137.764, 0.29", "-54.6152, 149.237, -138.056, 0.29", "-54.7402, 150.019, -138.356, 0.37", "-54.8692, 150.742, -138.629, 0.37", "-55.1488, 152.045, -139.086, 0.29", "-55.2852, 152.606, -139.307, 0.29", "-55.5187, 153.553, -139.704, 0.29", "-55.6627, 154.209, -139.972, 0.96", "-55.7618, 154.66, -140.145, 0.96", "-55.8614, 155.126, -140.301, 0.74", "-56.0944, 156.242, -140.6, 0.29", "-56.2785, 157.213, -140.863, 0.29", "-56.3944, 157.863, -141.035, 0.29", "-56.516, 158.628, -141.218, 0.74", "-56.5632, 158.938, -141.284, 0.74", "-56.6242, 159.35, -141.362, 0.44", "-56.7937, 160.327, -141.529, 0.29", "-56.963, 161.082, -141.654, 0.29", "-57.3234, 162.649, -141.859, 0.29", "-57.4724, 163.352, -141.924, 0.96", "-57.5652, 163.865, -141.941, 0.59", "-57.6604, 164.558, -141.917, 0.29", "-57.767, 165.543, -141.815, 0.22", "-57.8563, 166.493, -141.672, 0.22", "-57.902, 167.041, -141.563, 0.22", "-57.9828, 167.889, -141.414, 0.22", "-58.0561, 168.649, -141.313, 0.22", "-58.0975, 169.37, -141.254, 0.81", "-58.1025, 169.565, -141.255, 1.18", "-58.1148, 170.034, -141.325, 1.18", "-58.1493, 171.089, -141.602, 0.29", "-58.1568, 171.658, -141.802, 0.29", "-58.1315, 172.346, -142.064, 0.66", "-58.108, 172.586, -142.154, 0.66", "-57.9617, 173.6, -142.579, 0.37", "-57.8762, 174.193, -142.849, 0.37", "-57.8273, 174.791, -143.137, 0.37", "-57.8347, 175.249, -143.389, 0.74", "-57.8773, 175.719, -143.674, 0.74", "-57.9829, 176.712, -144.305, 0.29", "-58.0298, 177.333, -144.705, 0.29", "-58.0576, 178.137, -145.27, 0.29", "-58.0747, 178.944, -145.849, 0.88", "-58.0805, 179.4, -146.166, 0.88", "-58.0825, 180.04, -146.596, 0.29", "-58.0838, 180.845, -147.079, 0.29", "-58.0756, 181.258, -147.323, 0.29", "-58.0934, 181.951, -147.715, 0.74", "-58.136, 182.388, -147.944, 0.74", "-58.2636, 183.249, -148.372, 0.37", "-58.3914, 183.952, -148.707, 0.59", "-58.4907, 184.447, -148.93, 0.59", "-58.6079, 185.157, -149.235, 0.29", "-58.6973, 185.992, -149.583, 0.29", "-58.7308, 186.435, -149.746, 0.29", "-58.7609, 186.971, -149.912, 0.52", "-58.7779, 187.416, -150.036, 1.03", "-58.7734, 188.044, -150.182, 1.03", "-58.7209, 189.188, -150.407, 0.22", "-58.6258, 190.621, -150.643, 0.22", "-58.5457, 191.641, -150.791, 0.96", "-58.4972, 192.253, -150.869, 0.96", "-58.35, 193.771, -151.031, 0.29", "-58.2132, 194.951, -151.13, 0.29", "-58.1161, 195.735, -151.185, 0.88", "-58.045, 196.331, -151.228, 1.18", "-57.9101, 197.741, -151.364, 0.37", "-57.8424, 198.968, -151.414, 0.37", "-57.801, 200.652, -151.403, 0.37", "-57.769, 201.687, -151.318, 0.37", "-57.727, 202.422, -151.204, 0.96", "-57.6381, 203.278, -151.002, 0.96", "-57.1882, 205.625, -150.193, 0.29", "-57.0566, 206.067, -150.015, 0.29", "-56.7292, 206.858, -149.679, 0.88", "-56.4526, 207.414, -149.456, 0.88", "-56.2191, 207.849, -149.305, 0.59", "-55.3503, 209.463, -148.883, 0.29", "-54.6988, 210.759, -148.734, 0.29", "-54.3433, 211.566, -148.689, 0.81", "-54.1942, 211.945, -148.692, 0.81", "-54.0011, 212.574, -148.726, 0.52", "-53.7856, 213.515, -148.82, 0.22", "-53.5813, 215.195, -149.083, 0.22", "-53.5435, 216.168, -149.261, 0.74", "-53.5543, 216.668, -149.36, 0.74", "-53.656, 218.045, -149.641, 0.22", "-53.7275, 218.617, -149.756, 0.22", "-53.8618, 219.352, -149.9, 0.52", "-53.905, 219.54, -149.935, 0.59", "-54.1396, 220.472, -150.131, 0.22", "-54.3335, 221.203, -150.342, 0.44", "-54.7531, 222.544, -150.863, 0.22", "-54.9711, 223.096, -151.149, 0.66", "-55.3494, 223.862, -151.634, 0.22", "-55.8505, 224.726, -152.284, 0.74", "-56.3725, 225.507, -152.967, 0.59", "-56.8294, 226.169, -153.579, 0.29", "-57.2064, 226.715, -154.087, 0.52", "-57.8357, 227.604, -154.925, 0.22", "-58.2483, 228.189, -155.447, 0.59", "-58.3966, 228.432, -155.615, 0.59", "-58.8125, 229.324, -156.068, 0.22", "-58.9954, 229.958, -156.329, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-54.0041, 145.32, -136.766, 0.52", "-53.3257, 146.065, -138.308, 0.52", "-52.9173, 146.527, -139.224, 0.29", "-52.5042, 147.031, -140.116, 0.29", "-51.9103, 147.765, -141.343, 0.29", "-51.4792, 148.277, -142.204, 0.59", "-51.3173, 148.451, -142.524, 0.66", "-50.7758, 148.953, -143.473, 0.29", "-50.4096, 149.215, -144.092, 0.81", "-50.3038, 149.291, -144.266, 0.81", "-49.7736, 149.63, -145.045, 0.29", "-49.2673, 149.9, -145.899, 0.44", "-49.1125, 149.952, -146.156, 0.66", "-48.8161, 149.953, -146.589, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "151.533, 402.155, -95.9124, 0.37", "151.046, 402.387, -98.2171, 0.37", "150.869, 402.539, -99.1758, 0.22", "150.643, 402.734, -100.405, 0.22", "150.594, 402.776, -100.668, 0.66", "150.345, 402.991, -102.019, 0.22", "150.123, 403.183, -103.228, 0.22", "150.105, 403.24, -103.517, 0.37" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "151.533, 402.155, -95.9124, 0.22", "151.851, 402.798, -98.1712, 0.22", "151.934, 402.93, -98.6462, 0.88", "152.13, 403.241, -99.765, 0.22", "152.213, 403.373, -100.243, 0.74", "152.51, 403.845, -101.941, 0.22", "152.636, 404.044, -102.658, 0.44", "152.93, 404.211, -103.533, 0.22" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_55", "dend_55", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L5_NBC_4126235f8b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_67, id: dend_67, parent: soma_0
create dend_67
public dend_67
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_13
create dend_29
public dend_29
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_57
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_40
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_41
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_16
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_65
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_55, dend_55, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_67(0), soma_0(0.45000090983035473)
    connect dend_56(0), soma_0(0.45000090983035473)
    connect dend_51(0), soma_0(0.45000090983035473)
    connect dend_32(0), soma_0(0.45000090983035473)
    connect dend_13(0), soma_0(0.45000090983035473)
    connect dend_0(0), soma_0(0.45000090983035473)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -10.9016, -1.97873, -2.50057, 3.38117 ) }
    soma_0 { pt3dadd( -9.79478, -1.80994, -2.24302, 5.67833 ) }
    soma_0 { pt3dadd( -8.68798, -1.64115, -1.98548, 7.15072 ) }
    soma_0 { pt3dadd( -7.58118, -1.47235, -1.72793, 8.64399 ) }
    soma_0 { pt3dadd( -6.47438, -1.30356, -1.47039, 10.0299 ) }
    soma_0 { pt3dadd( -5.36758, -1.13477, -1.21284, 11.2674 ) }
    soma_0 { pt3dadd( -4.26078, -0.965972, -0.955299, 11.9107 ) }
    soma_0 { pt3dadd( -3.15398, -0.797179, -0.697754, 12.2563 ) }
    soma_0 { pt3dadd( -2.04718, -0.628385, -0.440209, 12.5208 ) }
    soma_0 { pt3dadd( -0.940378, -0.459592, -0.182664, 12.7145 ) }
    soma_0 { pt3dadd( 0.166423, -0.290798, 0.0748807, 12.541 ) }
    soma_0 { pt3dadd( 1.27322, -0.122005, 0.332426, 12.2075 ) }
    soma_0 { pt3dadd( 2.38002, 0.0467885, 0.589971, 11.6554 ) }
    soma_0 { pt3dadd( 3.48682, 0.215582, 0.847516, 11.0225 ) }
    soma_0 { pt3dadd( 4.59362, 0.384375, 1.10506, 10.3416 ) }
    soma_0 { pt3dadd( 5.70042, 0.553169, 1.36261, 9.80603 ) }
    soma_0 { pt3dadd( 6.80722, 0.721962, 1.62015, 9.2712 ) }
    soma_0 { pt3dadd( 7.91403, 0.890756, 1.8777, 8.04801 ) }
    soma_0 { pt3dadd( 9.02083, 1.05955, 2.13524, 5.78101 ) }
    soma_0 { pt3dadd( 10.1276, 1.22834, 2.39279, 3.52734 ) }
    soma_0 { pt3dadd( 11.2344, 1.39714, 2.65033, 2.23302 ) }
    // Section: dend_67, id: dend_67, parent: soma_0 (entry count 21/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 6.34928, -3.5777, -7.98898, 1.25 ) }
    dend_67 { pt3dadd( 7.26737, -3.98257, -8.29209, 1.25 ) }
    dend_67 { pt3dadd( 7.99777, -4.50202, -8.97663, 1.25 ) }
    dend_67 { pt3dadd( 8.59581, -5.05284, -9.72053, 0.88 ) }
    dend_67 { pt3dadd( 9.10697, -5.61252, -10.4289, 0.88 ) }
    dend_67 { pt3dadd( 9.58331, -6.21385, -11.1141, 0.88 ) }
    dend_67 { pt3dadd( 10.8216, -8.08489, -13.0037, 1.18 ) }
    dend_67 { pt3dadd( 11.6327, -9.83583, -14.6078, 1.18 ) }
    dend_67 { pt3dadd( 11.7854, -10.2533, -14.9356, 1.69 ) }
    dend_67 { pt3dadd( 11.9766, -10.8094, -15.2968, 1.84 ) }
    dend_67 { pt3dadd( 12.2774, -11.5687, -15.6911, 1.62 ) }
    dend_67 { pt3dadd( 12.8454, -12.6606, -16.0538, 1.11 ) }
    dend_67 { pt3dadd( 13.596, -13.6912, -16.1491, 1.11 ) }
    dend_67 { pt3dadd( 14.6346, -14.8787, -16.1231, 1.11 ) }
    dend_67 { pt3dadd( 15.5443, -15.8563, -16.0372, 1.11 ) }
    dend_67 { pt3dadd( 16.4778, -16.8536, -15.8932, 1.11 ) }
    dend_67 { pt3dadd( 17.3675, -17.8791, -15.6839, 1.11 ) }
    dend_67 { pt3dadd( 18.1692, -18.916, -15.415, 1.18 ) }
    dend_67 { pt3dadd( 18.6306, -19.6883, -15.1954, 1.33 ) }
    dend_67 { pt3dadd( 19.1094, -20.9936, -14.8305, 1.25 ) }
    dend_67 { pt3dadd( 19.3127, -22.128, -14.5434, 0.88 ) }
    dend_67 { pt3dadd( 19.37, -23.647, -14.2339, 1.25 ) }
    dend_67 { pt3dadd( 19.3283, -24.3609, -14.1341, 1.55 ) }
    dend_67 { pt3dadd( 19.2789, -25.1306, -14.0302, 1.55 ) }
    dend_67 { pt3dadd( 19.2609, -26.181, -13.8916, 1.33 ) }
    dend_67 { pt3dadd( 19.3381, -27.2639, -13.7401, 1.11 ) }
    dend_67 { pt3dadd( 19.6231, -28.6392, -13.4968, 0.81 ) }
    dend_67 { pt3dadd( 20.208, -30.1343, -13.1723, 0.59 ) }
    dend_67 { pt3dadd( 21.2721, -31.8666, -12.7032, 0.59 ) }
    dend_67 { pt3dadd( 21.9783, -32.5998, -12.4541, 0.74 ) }
    dend_67 { pt3dadd( 23.1094, -33.3435, -12.1346, 0.96 ) }
    dend_67 { pt3dadd( 23.9622, -33.7221, -11.943, 1.18 ) }
    dend_67 { pt3dadd( 24.6022, -33.9297, -11.8436, 1.18 ) }
    dend_67 { pt3dadd( 25.4477, -34.1656, -11.7685, 1.18 ) }
    dend_67 { pt3dadd( 26.4042, -34.4762, -11.7631, 0.88 ) }
    dend_67 { pt3dadd( 27.4331, -35.0191, -11.8206, 0.88 ) }
    dend_67 { pt3dadd( 27.9416, -35.4559, -11.8887, 1.11 ) }
    dend_67 { pt3dadd( 28.6537, -36.2795, -12.0051, 1.11 ) }
    dend_67 { pt3dadd( 29.1041, -36.8956, -12.0868, 0.96 ) }
    dend_67 { pt3dadd( 29.5272, -37.5173, -12.1671, 1.25 ) }
    dend_67 { pt3dadd( 30.3932, -38.7262, -12.3567, 0.66 ) }
    dend_67 { pt3dadd( 30.935, -39.3744, -12.4776, 0.66 ) }
    dend_67 { pt3dadd( 31.5358, -39.8981, -12.5947, 0.66 ) }
    dend_67 { pt3dadd( 32.1595, -40.2227, -12.7151, 0.74 ) }
    dend_67 { pt3dadd( 32.9811, -40.4631, -12.9211, 0.59 ) }
    dend_67 { pt3dadd( 34.0293, -40.6648, -13.2081, 0.88 ) }
    dend_67 { pt3dadd( 34.6096, -40.7646, -13.3771, 0.88 ) }
    dend_67 { pt3dadd( 35.1783, -40.8972, -13.5423, 1.11 ) }
    dend_67 { pt3dadd( 36.2715, -41.2763, -13.8613, 0.66 ) }
    dend_67 { pt3dadd( 37.2614, -41.7931, -14.1403, 0.59 ) }
    dend_67 { pt3dadd( 38.1482, -42.5135, -14.3607, 0.66 ) }
    dend_67 { pt3dadd( 38.9011, -43.3773, -14.4775, 0.81 ) }
    dend_67 { pt3dadd( 39.5582, -44.3181, -14.5559, 1.4 ) }
    dend_67 { pt3dadd( 39.8039, -44.7347, -14.571, 1.55 ) }
    dend_67 { pt3dadd( 40.2182, -45.5491, -14.5553, 0.96 ) }
    dend_67 { pt3dadd( 40.7269, -46.6129, -14.5029, 0.52 ) }
    dend_67 { pt3dadd( 41.1327, -47.3977, -14.4967, 0.52 ) }
    dend_67 { pt3dadd( 41.6578, -48.2801, -14.5176, 0.96 ) }
    dend_67 { pt3dadd( 42.0295, -48.8593, -14.5585, 1.03 ) }
    dend_67 { pt3dadd( 42.2895, -49.2447, -14.5818, 1.11 ) }
    dend_67 { pt3dadd( 42.5715, -49.6514, -14.5892, 1.11 ) }
    dend_67 { pt3dadd( 43.3407, -50.7738, -14.5902, 0.52 ) }
    dend_67 { pt3dadd( 43.9742, -51.787, -14.5181, 0.59 ) }
    dend_67 { pt3dadd( 44.5458, -52.7574, -14.3733, 0.59 ) }
    dend_67 { pt3dadd( 45.1015, -53.7093, -14.2083, 1.18 ) }
    dend_67 { pt3dadd( 45.5647, -54.4765, -14.0975, 1.55 ) }
    dend_67 { pt3dadd( 45.8446, -54.9138, -14.052, 1.55 ) }
    dend_67 { pt3dadd( 46.6346, -56.086, -14.1174, 0.81 ) }
    dend_67 { pt3dadd( 47.1664, -56.8161, -14.3266, 0.52 ) }
    dend_67 { pt3dadd( 47.7188, -57.5222, -14.667, 0.44 ) }
    dend_67 { pt3dadd( 48.4551, -58.4479, -15.2387, 0.81 ) }
    dend_67 { pt3dadd( 48.8935, -58.9947, -15.6102, 0.96 ) }
    dend_67 { pt3dadd( 50.0816, -60.4699, -16.6265, 0.52 ) }
    dend_67 { pt3dadd( 50.5715, -61.0795, -17.05, 0.96 ) }
    dend_67 { pt3dadd( 50.9659, -61.5943, -17.3361, 1.25 ) }
    dend_67 { pt3dadd( 51.3962, -62.1929, -17.5585, 1.03 ) }
    dend_67 { pt3dadd( 51.8623, -62.8656, -17.6901, 0.74 ) }
    dend_67 { pt3dadd( 52.1568, -63.2927, -17.7277, 0.74 ) }
    dend_67 { pt3dadd( 52.7165, -64.0436, -17.7206, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_67 { pt3dadd( 53.347, -64.858, -17.7549, 0.44 ) }
    dend_67 { pt3dadd( 54.0674, -65.7669, -17.8057, 0.96 ) }
    dend_67 { pt3dadd( 54.512, -66.3241, -17.837, 1.55 ) }
    dend_67 { pt3dadd( 54.8743, -66.7818, -17.7943, 1.69 ) }
    dend_67 { pt3dadd( 55.2878, -67.3066, -17.6662, 1.25 ) }
    dend_67 { pt3dadd( 56.0745, -68.2878, -17.3885, 0.59 ) }
    dend_67 { pt3dadd( 56.8525, -69.2237, -17.105, 0.59 ) }
    dend_67 { pt3dadd( 57.7198, -70.2397, -16.8443, 1.25 ) }
    dend_67 { pt3dadd( 59.4384, -72.2743, -16.4673, 0.52 ) }
    dend_67 { pt3dadd( 60.3117, -73.3214, -16.3175, 0.44 ) }
    dend_67 { pt3dadd( 61.3563, -74.5934, -16.1814, 0.96 ) }
    dend_67 { pt3dadd( 61.7921, -75.1319, -16.1443, 0.96 ) }
    dend_67 { pt3dadd( 62.7518, -76.313, -16.1807, 0.52 ) }
    dend_67 { pt3dadd( 63.6405, -77.3712, -16.3228, 0.52 ) }
    dend_67 { pt3dadd( 64.5552, -78.4221, -16.5814, 1.11 ) }
    dend_67 { pt3dadd( 64.9404, -78.8549, -16.66, 1.55 ) }
    dend_67 { pt3dadd( 65.3437, -79.3178, -16.6866, 1.77 ) }
    dend_67 { pt3dadd( 65.6127, -79.6308, -16.7203, 1.84 ) }
    dend_67 { pt3dadd( 65.9907, -80.069, -16.8058, 1.47 ) }
    dend_67 { pt3dadd( 66.553, -80.7033, -17.0483, 1.11 ) }
    dend_67 { pt3dadd( 67.079, -81.2996, -17.3599, 0.81 ) }
    dend_67 { pt3dadd( 67.8623, -82.2693, -17.9216, 0.44 ) }
    dend_67 { pt3dadd( 68.7558, -83.4978, -18.6605, 0.96 ) }
    dend_67 { pt3dadd( 69.2184, -84.2035, -19.0762, 1.11 ) }
    dend_67 { pt3dadd( 69.5695, -84.7785, -19.4219, 0.81 ) }
    dend_67 { pt3dadd( 69.9731, -85.463, -19.7874, 0.29 ) }
    dend_67 { pt3dadd( 70.4365, -86.2082, -20.0721, 0.29 ) }
    dend_67 { pt3dadd( 70.8408, -86.7792, -20.1429, 0.59 ) }
    dend_67 { pt3dadd( 71.3869, -87.473, -20.0713, 0.88 ) }
    dend_67 { pt3dadd( 71.8189, -87.9807, -19.958, 1.03 ) }
    dend_67 { pt3dadd( 72.7637, -89.033, -19.6609, 1.03 ) }
    dend_67 { pt3dadd( 73.5555, -89.8349, -19.405, 0.59 ) }
    dend_67 { pt3dadd( 74.3933, -90.612, -19.1526, 0.59 ) }
    dend_67 { pt3dadd( 75.1413, -91.2873, -18.9426, 0.88 ) }
    dend_67 { pt3dadd( 75.8191, -91.9474, -18.7381, 1.25 ) }
    dend_67 { pt3dadd( 76.212, -92.3763, -18.6259, 1.47 ) }
    dend_67 { pt3dadd( 76.4554, -92.6964, -18.566, 1.47 ) }
    dend_67 { pt3dadd( 76.9907, -93.5751, -18.412, 0.37 ) }
    dend_67 { pt3dadd( 77.4275, -94.5124, -18.2466, 0.37 ) }
    dend_67 { pt3dadd( 77.8521, -95.7887, -18.0307, 0.74 ) }
    dend_67 { pt3dadd( 78.0265, -96.6106, -17.9069, 0.66 ) }
    dend_67 { pt3dadd( 78.2013, -97.6421, -17.7541, 0.52 ) }
    dend_67 { pt3dadd( 78.2765, -98.1372, -17.6643, 0.88 ) }
    dend_67 { pt3dadd( 78.3588, -98.713, -17.5299, 0.88 ) }
    dend_67 { pt3dadd( 78.5304, -99.3035, -17.2, 0.37 ) }
    dend_67 { pt3dadd( 78.96, -99.6809, -16.3631, 0.37 ) }
    dend_67 { pt3dadd( 79.3672, -99.9301, -15.5244, 0.37 ) }
    dend_67 { pt3dadd( 79.8658, -100.174, -14.5936, 0.37 ) }
    dend_67 { pt3dadd( 80.2676, -100.358, -13.897, 0.44 ) }
    dend_67 { pt3dadd( 81.7047, -100.958, -11.6264, 1.18 ) }
    dend_67 { pt3dadd( 82.3781, -101.25, -10.6539, 1.18 ) }
    dend_67 { pt3dadd( 83.1483, -101.595, -9.58541, 0.37 ) }
    dend_67 { pt3dadd( 83.7288, -101.913, -8.8125, 0.81 ) }
    dend_67 { pt3dadd( 84.0223, -102.101, -8.46609, 0.81 ) }
    dend_67 { pt3dadd( 84.4411, -102.399, -8.04153, 0.81 ) }
    dend_67 { pt3dadd( 85.2211, -102.974, -7.43097, 0.37 ) }
    dend_67 { pt3dadd( 86.4109, -103.763, -6.55924, 1.33 ) }
    dend_67 { pt3dadd( 86.8506, -104.005, -6.23297, 1.69 ) }
    dend_67 { pt3dadd( 87.6916, -104.418, -5.59012, 1.25 ) }
    dend_67 { pt3dadd( 88.3487, -104.693, -5.11673, 0.66 ) }
    dend_67 { pt3dadd( 89.1772, -104.979, -4.5927, 0.52 ) }
    dend_67 { pt3dadd( 89.9712, -105.195, -4.2146, 0.81 ) }
    dend_67 { pt3dadd( 90.3552, -105.315, -4.08073, 0.81 ) }
    dend_67 { pt3dadd( 90.7905, -105.472, -3.93881, 0.81 ) }
    dend_67 { pt3dadd( 91.3746, -105.736, -3.7609, 0.44 ) }
    dend_67 { pt3dadd( 91.9978, -106.098, -3.54147, 0.37 ) }
    dend_67 { pt3dadd( 92.3924, -106.5, -3.36616, 0.37 ) }
    dend_67 { pt3dadd( 93.0244, -107.658, -2.9935, 0.37 ) }
    dend_67 { pt3dadd( 93.2971, -108.268, -2.82583, 0.74 ) }
    dend_67 { pt3dadd( 93.5388, -108.836, -2.68745, 0.81 ) }
    dend_67 { pt3dadd( 93.7268, -109.273, -2.5919, 0.81 ) }
    dend_67 { pt3dadd( 94.0997, -110.04, -2.45543, 0.37 ) }
    dend_67 { pt3dadd( 94.5683, -110.797, -2.29268, 0.37 ) }
    dend_67 { pt3dadd( 95.3759, -111.775, -2.06113, 0.37 ) }
    dend_67 { pt3dadd( 95.9986, -112.406, -1.8768, 0.66 ) }
    dend_67 { pt3dadd( 96.3965, -112.764, -1.75509, 0.81 ) }
    dend_67 { pt3dadd( 97.0257, -113.279, -1.55991, 0.81 ) }
    dend_67 { pt3dadd( 98.2503, -114.199, -1.18048, 0.52 ) }
    dend_67 { pt3dadd( 98.6563, -114.508, -1.05125, 0.52 ) }
    dend_67 { pt3dadd( 99.4796, -115.245, -0.771585, 0.88 ) }
    dend_67 { pt3dadd( 99.7876, -115.596, -0.667457, 1.18 ) }
    dend_67 { pt3dadd( 100.039, -115.957, -0.602371, 1.18 ) }
    dend_67 { pt3dadd( 100.318, -116.477, -0.561756, 1.18 ) }
    dend_67 { pt3dadd( 100.568, -117.122, -0.58367, 0.96 ) }
    dend_67 { pt3dadd( 100.839, -118.024, -0.690616, 0.52 ) }
    dend_67 { pt3dadd( 101.162, -119.137, -0.924878, 0.52 ) }
    dend_67 { pt3dadd( 101.404, -119.856, -1.11435, 0.74 ) }
    dend_67 { pt3dadd( 101.567, -120.275, -1.23928, 0.74 ) }
    dend_67 { pt3dadd( 102.0, -121.152, -1.47349, 0.52 ) }
    dend_67 { pt3dadd( 102.759, -122.286, -1.74399, 0.52 ) }
    dend_67 { pt3dadd( 103.401, -122.963, -1.90006, 0.59 ) }
    dend_67 { pt3dadd( 104.225, -123.638, -2.03458, 0.81 ) }
    dend_67 { pt3dadd( 105.044, -124.212, -2.10971, 0.59 ) }
    dend_67 { pt3dadd( 106.249, -124.952, -2.23029, 0.37 ) }
    dend_67 { pt3dadd( 107.077, -125.413, -2.317, 0.37 ) }
    dend_67 { pt3dadd( 107.961, -125.912, -2.34535, 1.11 ) }
    dend_67 { pt3dadd( 108.173, -126.039, -2.34995, 1.4 ) }
    dend_67 { pt3dadd( 108.874, -126.453, -2.37496, 1.03 ) }
    dend_67 { pt3dadd( 109.879, -127.074, -2.42195, 0.52 ) }
    dend_67 { pt3dadd( 110.852, -127.754, -2.50619, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_67 { pt3dadd( 111.851, -128.521, -2.56909, 1.18 ) }
    dend_67 { pt3dadd( 112.226, -128.832, -2.60426, 1.47 ) }
    dend_67 { pt3dadd( 112.601, -129.144, -2.66558, 1.47 ) }
    dend_67 { pt3dadd( 113.604, -130.048, -2.89042, 0.52 ) }
    dend_67 { pt3dadd( 114.36, -130.826, -3.1771, 0.88 ) }
    dend_67 { pt3dadd( 114.761, -131.317, -3.41898, 0.88 ) }
    dend_67 { pt3dadd( 115.498, -132.317, -4.10099, 0.59 ) }
    dend_67 { pt3dadd( 116.035, -133.103, -4.70517, 1.03 ) }
    dend_67 { pt3dadd( 116.421, -133.684, -5.18937, 1.03 ) }
    dend_67 { pt3dadd( 117.183, -134.84, -6.24796, 0.44 ) }
    dend_67 { pt3dadd( 117.492, -135.351, -6.72037, 0.44 ) }
    dend_67 { pt3dadd( 118.143, -136.603, -7.81463, 1.03 ) }
    dend_67 { pt3dadd( 118.357, -137.115, -8.1991, 1.18 ) }
    dend_67 { pt3dadd( 118.594, -137.791, -8.63212, 0.74 ) }
    dend_67 { pt3dadd( 118.975, -139.01, -9.29133, 0.44 ) }
    dend_67 { pt3dadd( 119.184, -139.881, -9.57331, 0.44 ) }
    dend_67 { pt3dadd( 119.383, -140.83, -9.76288, 0.44 ) }
    dend_67 { pt3dadd( 119.641, -142.123, -9.84625, 1.11 ) }
    dend_67 { pt3dadd( 119.768, -142.604, -9.84821, 1.47 ) }
    dend_67 { pt3dadd( 120.04, -143.339, -9.79706, 1.47 ) }
    dend_67 { pt3dadd( 120.763, -144.741, -9.57586, 0.44 ) }
    dend_67 { pt3dadd( 121.325, -145.57, -9.41964, 0.44 ) }
    dend_67 { pt3dadd( 122.075, -146.505, -9.2376, 0.44 ) }
    dend_67 { pt3dadd( 122.802, -147.34, -9.08631, 0.44 ) }
    dend_67 { pt3dadd( 123.301, -147.942, -9.01906, 0.29 ) }
    dend_67 { pt3dadd( 123.968, -148.834, -9.0134, 0.29 ) }
    dend_67 { pt3dadd( 124.275, -149.342, -9.07523, 1.4 ) }
    dend_67 { pt3dadd( 124.537, -149.945, -9.16956, 1.99 ) }
    dend_67 { pt3dadd( 124.8, -150.765, -9.3161, 1.47 ) }
    dend_67 { pt3dadd( 125.144, -152.115, -9.58589, 0.44 ) }
    dend_67 { pt3dadd( 125.418, -153.204, -9.75929, 0.37 ) }
    dend_67 { pt3dadd( 125.705, -154.215, -9.88181, 0.37 ) }
    dend_67 { pt3dadd( 125.974, -155.079, -9.94282, 0.74 ) }
    dend_67 { pt3dadd( 126.198, -155.674, -9.97304, 0.88 ) }
    dend_67 { pt3dadd( 126.446, -156.211, -9.97865, 0.37 ) }
    dend_67 { pt3dadd( 127.308, -157.728, -9.9047, 0.29 ) }
    dend_67 { pt3dadd( 127.737, -158.34, -9.83738, 0.29 ) }
    dend_67 { pt3dadd( 128.182, -158.879, -9.77023, 0.96 ) }
    dend_67 { pt3dadd( 129.21, -160.037, -9.76015, 0.37 ) }
    dend_67 { pt3dadd( 129.911, -160.817, -9.83853, 0.66 ) }
    dend_67 { pt3dadd( 130.201, -161.143, -9.90545, 0.66 ) }
    dend_67 { pt3dadd( 131.121, -162.243, -10.2875, 0.37 ) }
    dend_67 { pt3dadd( 131.372, -162.545, -10.4055, 0.81 ) }
    dend_67 { pt3dadd( 132.637, -163.982, -11.0112, 0.37 ) }
    dend_67 { pt3dadd( 132.936, -164.288, -11.1629, 0.88 ) }
    dend_67 { pt3dadd( 133.226, -164.551, -11.3284, 0.88 ) }
    dend_67 { pt3dadd( 133.969, -165.133, -11.7874, 0.44 ) }
    dend_67 { pt3dadd( 134.467, -165.496, -12.1167, 0.44 ) }
    dend_67 { pt3dadd( 135.181, -165.961, -12.5318, 0.81 ) }
    dend_67 { pt3dadd( 136.346, -166.605, -13.1478, 1.55 ) }
    dend_67 { pt3dadd( 136.777, -166.827, -13.375, 1.69 ) }
    dend_67 { pt3dadd( 137.95, -167.427, -14.0155, 0.37 ) }
    dend_67 { pt3dadd( 138.776, -167.859, -14.4771, 0.37 ) }
    dend_67 { pt3dadd( 139.602, -168.35, -14.972, 0.37 ) }
    dend_67 { pt3dadd( 140.497, -168.941, -15.5023, 0.44 ) }
    dend_67 { pt3dadd( 141.124, -169.381, -15.8425, 1.03 ) }
    dend_67 { pt3dadd( 141.598, -169.7, -16.084, 1.4 ) }
    dend_67 { pt3dadd( 141.988, -169.943, -16.2606, 1.4 ) }
    dend_67 { pt3dadd( 143.132, -170.566, -16.7204, 0.29 ) }
    dend_67 { pt3dadd( 143.981, -171.033, -16.9963, 0.29 ) }
    dend_67 { pt3dadd( 144.659, -171.396, -17.1629, 0.29 ) }
    dend_67 { pt3dadd( 145.174, -171.652, -17.2679, 0.29 ) }
    dend_67 { pt3dadd( 145.831, -171.957, -17.3797, 0.74 ) }
    dend_67 { pt3dadd( 146.38, -172.198, -17.464, 1.11 ) }
    dend_67 { pt3dadd( 147.509, -172.639, -17.6104, 0.52 ) }
    dend_67 { pt3dadd( 148.135, -172.888, -17.6936, 0.81 ) }
    dend_67 { pt3dadd( 148.855, -173.215, -17.7844, 0.66 ) }
    dend_67 { pt3dadd( 149.641, -173.603, -17.9031, 0.29 ) }
    dend_67 { pt3dadd( 150.326, -173.932, -18.0233, 0.29 ) }
    dend_67 { pt3dadd( 151.24, -174.344, -18.2, 0.29 ) }
    dend_67 { pt3dadd( 152.395, -174.803, -18.436, 0.44 ) }
    dend_67 { pt3dadd( 152.958, -175.017, -18.5379, 0.44 ) }
    dend_67 { pt3dadd( 153.807, -175.338, -18.6935, 0.29 ) }
    dend_67 { pt3dadd( 154.242, -175.51, -18.7659, 0.59 ) }
    dend_67 { pt3dadd( 154.552, -175.643, -18.8182, 0.59 ) }
    dend_67 { pt3dadd( 155.093, -175.91, -18.9214, 0.29 ) }
    dend_67 { pt3dadd( 155.835, -176.301, -19.0834, 0.29 ) }
    dend_67 { pt3dadd( 156.528, -176.693, -19.2459, 0.59 ) }
    dend_67 { pt3dadd( 156.892, -176.918, -19.3279, 0.74 ) }
    dend_67 { pt3dadd( 157.13, -177.08, -19.3864, 0.74 ) }
    dend_67 { pt3dadd( 158.203, -177.873, -19.6746, 0.29 ) }
    dend_67 { pt3dadd( 158.984, -178.506, -19.9112, 0.44 ) }
    dend_67 { pt3dadd( 159.481, -178.933, -20.0805, 1.11 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 7.86928, -3.8192, 4.08102, 1.25 ) }
    dend_56 { pt3dadd( 7.86928, -3.8192, 4.08102, 1.25 ) }
    dend_56 { pt3dadd( 7.6168, -4.77959, 4.38054, 1.25 ) }
    dend_56 { pt3dadd( 7.20028, -6.43573, 4.83351, 1.4 ) }
    dend_56 { pt3dadd( 6.79228, -8.25777, 5.26729, 1.4 ) }
    dend_56 { pt3dadd( 6.49189, -9.97527, 5.62694, 1.18 ) }
    dend_56 { pt3dadd( 6.26758, -11.7265, 5.95883, 1.18 ) }
    dend_56 { pt3dadd( 6.18094, -13.1877, 6.19442, 1.4 ) }
    dend_56 { pt3dadd( 6.28014, -15.2619, 6.47304, 1.4 ) }
    dend_56 { pt3dadd( 6.49303, -17.5011, 6.70461, 1.4 ) }
    dend_56 { pt3dadd( 6.78893, -19.3737, 6.83973, 1.62 ) }
    dend_56 { pt3dadd( 7.08503, -20.6146, 6.92177, 1.47 ) }
    dend_56 { pt3dadd( 7.7474, -22.5991, 7.0174, 1.03 ) }
    dend_56 { pt3dadd( 8.71242, -24.7615, 7.12049, 1.03 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 97/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -9.81072, -3.0422, -6.35898, 1.18 ) }
    dend_51 { pt3dadd( -9.81072, -3.0422, -6.35898, 1.18 ) }
    dend_51 { pt3dadd( -10.849, -4.2821, -6.46007, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( -12.2209, -6.20281, -6.74733, 1.11 ) }
    dend_51 { pt3dadd( -12.9746, -7.39995, -6.9658, 1.18 ) }
    dend_51 { pt3dadd( -13.675, -8.66925, -7.25119, 1.03 ) }
    dend_51 { pt3dadd( -14.4994, -10.1633, -7.58711, 0.96 ) }
    dend_51 { pt3dadd( -15.1871, -11.5254, -7.91995, 1.4 ) }
    dend_51 { pt3dadd( -15.8482, -13.1468, -8.38192, 1.62 ) }
    dend_51 { pt3dadd( -16.0859, -13.9889, -8.66533, 1.84 ) }
    dend_51 { pt3dadd( -16.387, -15.4631, -9.2381, 1.84 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 8/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -3.60072, -7.3787, -1.54898, 1.4 ) }
    dend_32 { pt3dadd( -3.60072, -7.3787, -1.54898, 1.4 ) }
    dend_32 { pt3dadd( -4.37895, -8.32599, -2.08865, 1.11 ) }
    dend_32 { pt3dadd( -5.53731, -9.53313, -2.67236, 0.96 ) }
    dend_32 { pt3dadd( -5.92054, -9.8764, -2.81221, 0.96 ) }
    dend_32 { pt3dadd( -6.85177, -10.5732, -3.05333, 0.66 ) }
    dend_32 { pt3dadd( -7.65491, -11.1023, -3.17138, 0.66 ) }
    dend_32 { pt3dadd( -8.18349, -11.3788, -3.17915, 1.03 ) }
    dend_32 { pt3dadd( -9.17429, -11.7924, -3.07904, 1.33 ) }
    dend_32 { pt3dadd( -9.8497, -12.0679, -2.96873, 1.47 ) }
    dend_32 { pt3dadd( -10.7554, -12.4919, -2.84557, 1.11 ) }
    dend_32 { pt3dadd( -11.6498, -13.0332, -2.79482, 0.96 ) }
    dend_32 { pt3dadd( -12.6572, -13.9067, -2.88522, 0.66 ) }
    dend_32 { pt3dadd( -13.369, -14.7849, -3.08749, 0.52 ) }
    dend_32 { pt3dadd( -13.8405, -15.6567, -3.42373, 0.44 ) }
    dend_32 { pt3dadd( -14.174, -16.6968, -3.95888, 0.44 ) }
    dend_32 { pt3dadd( -14.4532, -18.0172, -4.74192, 1.4 ) }
    dend_32 { pt3dadd( -14.5454, -18.6355, -5.1268, 1.84 ) }
    dend_32 { pt3dadd( -14.6063, -19.202, -5.47297, 2.14 ) }
    dend_32 { pt3dadd( -14.7424, -20.5893, -6.2505, 1.99 ) }
    dend_32 { pt3dadd( -14.9692, -22.7457, -7.25281, 1.03 ) }
    dend_32 { pt3dadd( -15.1541, -24.3108, -7.82146, 0.88 ) }
    dend_32 { pt3dadd( -15.3282, -25.4859, -7.98466, 0.81 ) }
    dend_32 { pt3dadd( -15.4915, -26.3275, -7.85063, 0.66 ) }
    dend_32 { pt3dadd( -15.8003, -27.607, -7.28909, 0.66 ) }
    dend_32 { pt3dadd( -16.1046, -28.6519, -6.56689, 0.96 ) }
    dend_32 { pt3dadd( -16.2758, -29.1619, -6.10636, 1.11 ) }
    dend_32 { pt3dadd( -17.3672, -32.2208, -3.20366, 0.44 ) }
    dend_32 { pt3dadd( -17.7224, -33.1605, -2.35104, 1.03 ) }
    dend_32 { pt3dadd( -17.8136, -33.3934, -2.16777, 1.4 ) }
    dend_32 { pt3dadd( -18.0695, -33.9764, -1.81407, 1.69 ) }
    dend_32 { pt3dadd( -18.3012, -34.4475, -1.67031, 1.69 ) }
    dend_32 { pt3dadd( -19.1688, -36.0049, -1.64531, 0.81 ) }
    dend_32 { pt3dadd( -19.7012, -36.7588, -1.86965, 1.18 ) }
    dend_32 { pt3dadd( -20.3962, -37.5253, -2.13864, 1.47 ) }
    dend_32 { pt3dadd( -20.8805, -37.9855, -2.28582, 1.47 ) }
    dend_32 { pt3dadd( -21.56, -38.5895, -2.40959, 1.4 ) }
    dend_32 { pt3dadd( -22.4348, -39.3311, -2.46875, 1.11 ) }
    dend_32 { pt3dadd( -23.8599, -40.4904, -2.39453, 0.52 ) }
    dend_32 { pt3dadd( -24.7512, -41.2627, -2.27047, 0.52 ) }
    dend_32 { pt3dadd( -25.7087, -42.265, -2.02256, 0.52 ) }
    dend_32 { pt3dadd( -26.6137, -43.611, -1.6463, 1.18 ) }
    dend_32 { pt3dadd( -26.874, -44.1954, -1.51477, 1.55 ) }
    dend_32 { pt3dadd( -26.988, -44.6152, -1.46688, 1.69 ) }
    dend_32 { pt3dadd( -27.1148, -45.2814, -1.47782, 1.92 ) }
    dend_32 { pt3dadd( -27.3058, -46.3771, -1.66893, 0.74 ) }
    dend_32 { pt3dadd( -27.5412, -47.8017, -1.93732, 0.44 ) }
    dend_32 { pt3dadd( -27.8757, -49.6863, -2.29685, 0.44 ) }
    dend_32 { pt3dadd( -28.1829, -51.2854, -2.55577, 0.44 ) }
    dend_32 { pt3dadd( -28.5874, -53.1509, -2.79081, 0.74 ) }
    dend_32 { pt3dadd( -28.929, -54.3787, -2.89221, 0.52 ) }
    dend_32 { pt3dadd( -29.8428, -56.9882, -2.97185, 1.03 ) }
    dend_32 { pt3dadd( -30.1007, -57.6462, -2.94121, 1.25 ) }
    dend_32 { pt3dadd( -30.429, -58.4953, -2.82869, 0.66 ) }
    dend_32 { pt3dadd( -30.7898, -59.5411, -2.61106, 0.29 ) }
    dend_32 { pt3dadd( -31.1432, -60.7991, -2.30694, 0.29 ) }
    dend_32 { pt3dadd( -31.3218, -61.5634, -2.13221, 0.59 ) }
    dend_32 { pt3dadd( -31.5685, -63.0773, -1.85485, 0.59 ) }
    dend_32 { pt3dadd( -31.6195, -64.1036, -1.6277, 1.03 ) }
    dend_32 { pt3dadd( -31.5419, -65.8829, -1.23445, 1.4 ) }
    dend_32 { pt3dadd( -31.4617, -66.6861, -1.06652, 1.77 ) }
    dend_32 { pt3dadd( -31.385, -67.3473, -0.967052, 2.14 ) }
    dend_32 { pt3dadd( -31.3131, -68.3594, -0.876678, 2.36 ) }
    dend_32 { pt3dadd( -31.4027, -69.7798, -0.916687, 0.74 ) }
    dend_32 { pt3dadd( -31.657, -70.8716, -1.05759, 0.44 ) }
    dend_32 { pt3dadd( -31.9984, -71.7271, -1.28587, 0.44 ) }
    dend_32 { pt3dadd( -32.6199, -72.9937, -1.61251, 0.74 ) }
    dend_32 { pt3dadd( -32.9683, -73.6364, -1.74352, 0.74 ) }
    dend_32 { pt3dadd( -33.5979, -74.7604, -1.90141, 0.66 ) }
    dend_32 { pt3dadd( -34.0327, -75.5851, -1.91952, 0.44 ) }
    dend_32 { pt3dadd( -34.4174, -76.5328, -1.81401, 0.44 ) }
    dend_32 { pt3dadd( -34.8126, -77.9398, -1.53462, 0.59 ) }
    dend_32 { pt3dadd( -35.029, -78.8997, -1.27883, 0.81 ) }
    dend_32 { pt3dadd( -35.2381, -79.6886, -1.05982, 0.96 ) }
    dend_32 { pt3dadd( -35.4987, -80.4275, -0.846882, 0.74 ) }
    dend_32 { pt3dadd( -35.8741, -81.1635, -0.671666, 0.44 ) }
    dend_32 { pt3dadd( -36.3927, -81.8644, -0.543111, 0.44 ) }
    dend_32 { pt3dadd( -37.0557, -82.5562, -0.515139, 0.74 ) }
    dend_32 { pt3dadd( -38.2848, -83.7332, -0.521166, 0.88 ) }
    dend_32 { pt3dadd( -38.9203, -84.3352, -0.493634, 1.4 ) }
    dend_32 { pt3dadd( -39.243, -84.674, -0.434323, 1.4 ) }
    dend_32 { pt3dadd( -39.7714, -85.3918, -0.23924, 1.18 ) }
    dend_32 { pt3dadd( -40.1231, -86.1169, 0.00162121, 0.81 ) }
    dend_32 { pt3dadd( -40.4111, -87.2318, 0.396758, 0.52 ) }
    dend_32 { pt3dadd( -40.527, -88.3139, 0.782673, 0.52 ) }
    dend_32 { pt3dadd( -40.59, -89.8349, 1.31833, 0.74 ) }
    dend_32 { pt3dadd( -40.6106, -90.9062, 1.66759, 0.52 ) }
    dend_32 { pt3dadd( -40.6226, -91.4841, 1.84245, 1.11 ) }
    dend_32 { pt3dadd( -40.6557, -92.1805, 2.04555, 1.4 ) }
    dend_32 { pt3dadd( -40.7051, -92.7614, 2.18388, 1.55 ) }
    dend_32 { pt3dadd( -40.8068, -93.6063, 2.33866, 0.74 ) }
    dend_32 { pt3dadd( -41.0629, -95.1785, 2.56995, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -41.3008, -96.3082, 2.78786, 0.81 ) }
    dend_32 { pt3dadd( -41.632, -97.615, 3.08574, 1.11 ) }
    dend_32 { pt3dadd( -41.9245, -98.5462, 3.32305, 1.33 ) }
    dend_32 { pt3dadd( -42.2042, -99.2757, 3.52668, 1.55 ) }
    dend_32 { pt3dadd( -42.5476, -99.9633, 3.75722, 1.18 ) }
    dend_32 { pt3dadd( -43.4414, -101.212, 4.35521, 0.59 ) }
    dend_32 { pt3dadd( -43.8536, -101.639, 4.63537, 0.96 ) }
    dend_32 { pt3dadd( -44.3365, -102.061, 4.95156, 1.11 ) }
    dend_32 { pt3dadd( -44.8358, -102.474, 5.28515, 1.11 ) }
    dend_32 { pt3dadd( -45.7525, -103.228, 5.90307, 0.59 ) }
    dend_32 { pt3dadd( -46.7437, -104.068, 6.55587, 0.81 ) }
    dend_32 { pt3dadd( -47.6299, -104.871, 7.11013, 0.59 ) }
    dend_32 { pt3dadd( -48.5604, -105.828, 7.69439, 0.59 ) }
    dend_32 { pt3dadd( -49.4617, -106.916, 8.25518, 0.44 ) }
    dend_32 { pt3dadd( -50.1168, -107.902, 8.59844, 0.81 ) }
    dend_32 { pt3dadd( -50.4841, -108.63, 8.73187, 0.96 ) }
    dend_32 { pt3dadd( -50.7047, -109.262, 8.75836, 0.96 ) }
    dend_32 { pt3dadd( -50.8838, -110.14, 8.70592, 0.96 ) }
    dend_32 { pt3dadd( -50.9829, -111.053, 8.60888, 0.66 ) }
    dend_32 { pt3dadd( -51.0359, -112.897, 8.34736, 0.52 ) }
    dend_32 { pt3dadd( -51.0187, -113.852, 8.20519, 0.66 ) }
    dend_32 { pt3dadd( -50.975, -114.989, 8.05519, 1.33 ) }
    dend_32 { pt3dadd( -50.9536, -115.797, 7.96694, 1.99 ) }
    dend_32 { pt3dadd( -50.9943, -117.74, 7.81477, 0.44 ) }
    dend_32 { pt3dadd( -51.1109, -118.782, 7.77945, 0.44 ) }
    dend_32 { pt3dadd( -51.2775, -119.507, 7.79475, 0.74 ) }
    dend_32 { pt3dadd( -51.4724, -120.077, 7.80738, 0.74 ) }
    dend_32 { pt3dadd( -51.8401, -120.886, 7.84776, 0.74 ) }
    dend_32 { pt3dadd( -52.3166, -121.753, 7.90155, 0.37 ) }
    dend_32 { pt3dadd( -53.0628, -122.9, 7.98251, 0.29 ) }
    dend_32 { pt3dadd( -53.6767, -123.669, 8.05705, 0.29 ) }
    dend_32 { pt3dadd( -54.4229, -124.49, 8.15292, 0.29 ) }
    dend_32 { pt3dadd( -55.0895, -125.161, 8.27696, 0.22 ) }
    dend_32 { pt3dadd( -55.4625, -125.511, 8.36372, 0.22 ) }
    dend_32 { pt3dadd( -56.0663, -126.092, 8.52725, 0.81 ) }
    dend_32 { pt3dadd( -56.4187, -126.459, 8.63341, 0.96 ) }
    dend_32 { pt3dadd( -57.2561, -127.343, 8.89811, 0.22 ) }
    dend_32 { pt3dadd( -57.9672, -128.155, 9.12805, 1.33 ) }
    dend_32 { pt3dadd( -58.4329, -128.771, 9.2719, 1.55 ) }
    dend_32 { pt3dadd( -59.1041, -129.774, 9.50494, 1.11 ) }
    dend_32 { pt3dadd( -59.4713, -130.39, 9.65643, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 41/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.23072, 4.7278, 5.70102, 1.33 ) }
    dend_13 { pt3dadd( -2.23072, 4.7278, 5.70102, 1.33 ) }
    dend_13 { pt3dadd( -3.55895, 5.73759, 5.70102, 1.55 ) }
    dend_13 { pt3dadd( -4.91529, 6.68305, 5.70102, 1.4 ) }
    dend_13 { pt3dadd( -6.43531, 7.64202, 5.70102, 1.18 ) }
    dend_13 { pt3dadd( -7.53584, 8.2955, 5.70501, 1.47 ) }
    dend_13 { pt3dadd( -9.00563, 9.1664, 5.75846, 1.77 ) }
    dend_13 { pt3dadd( -10.0674, 9.78401, 5.84712, 1.99 ) }
    dend_13 { pt3dadd( -11.231, 10.4767, 6.03967, 1.99 ) }
    dend_13 { pt3dadd( -12.6141, 11.4076, 6.41618, 1.62 ) }
    dend_13 { pt3dadd( -14.1768, 12.7426, 7.07627, 1.11 ) }
    dend_13 { pt3dadd( -15.153, 13.8687, 7.69869, 1.11 ) }
    dend_13 { pt3dadd( -15.8741, 15.0858, 8.40125, 1.25 ) }
    dend_13 { pt3dadd( -16.4479, 16.6847, 9.32189, 1.47 ) }
    dend_13 { pt3dadd( -16.6928, 18.234, 10.2216, 1.69 ) }
    dend_13 { pt3dadd( -16.6575, 19.5147, 10.9553, 1.92 ) }
    dend_13 { pt3dadd( -16.4173, 20.9876, 11.7609, 1.77 ) }
    dend_13 { pt3dadd( -16.1262, 22.0889, 12.302, 1.4 ) }
    dend_13 { pt3dadd( -15.6336, 23.5219, 12.9285, 1.18 ) }
    dend_13 { pt3dadd( -15.0904, 24.9369, 13.4989, 1.11 ) }
    dend_13 { pt3dadd( -14.2957, 26.7938, 14.2224, 1.62 ) }
    dend_13 { pt3dadd( -13.9191, 27.6064, 14.5296, 1.99 ) }
    dend_13 { pt3dadd( -13.3507, 28.7433, 14.9484, 2.21 ) }
    dend_13 { pt3dadd( -12.8664, 29.6471, 15.2732, 2.43 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 65/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -10.9007, 0.916297, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -10.9691, 0.930216, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -12.0794, 1.17586, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -13.0977, 1.43623, -3.98898, 1.62 ) }
    dend_0 { pt3dadd( -14.3082, 1.78737, -3.98898, 1.62 ) }
    dend_0 { pt3dadd( -15.5793, 2.20433, -3.98898, 1.84 ) }
    dend_0 { pt3dadd( -16.4781, 2.5445, -3.98898, 1.92 ) }
    dend_0 { pt3dadd( -17.3339, 2.91301, -4.01146, 2.14 ) }
    dend_0 { pt3dadd( -18.3383, 3.42102, -4.06417, 2.14 ) }
    dend_0 { pt3dadd( -19.2144, 3.9468, -4.14274, 2.14 ) }
    dend_0 { pt3dadd( -19.9443, 4.46351, -4.26293, 2.14 ) }
    dend_0 { pt3dadd( -21.0299, 5.34334, -4.51524, 2.14 ) }
    dend_0 { pt3dadd( -21.9031, 6.12785, -4.82464, 2.14 ) }
    dend_0 { pt3dadd( -22.4184, 6.61857, -5.0387, 2.21 ) }
    dend_0 { pt3dadd( -22.9991, 7.20054, -5.32608, 1.99 ) }
    dend_0 { pt3dadd( -23.7132, 7.95245, -5.74585, 1.99 ) }
    dend_0 { pt3dadd( -24.3255, 8.62173, -6.17186, 2.14 ) }
    dend_0 { pt3dadd( -25.2734, 9.72694, -6.97566, 2.36 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 11.2344, 1.39714, 2.65033, 3.17 ) }
    axon_0 { pt3dadd( 26.063, 3.65858, 2.65033, 3.17 ) }
    axon_0 { pt3dadd( 40.8915, 5.92002, 2.65033, 3.17 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 86/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 8.71242, -24.7615, 7.12049, 1.25 ) }
    dend_62 { pt3dadd( 9.07786, -25.8352, 7.02337, 1.25 ) }
    dend_62 { pt3dadd( 9.09728, -27.2683, 6.91986, 1.03 ) }
    dend_62 { pt3dadd( 8.77652, -28.4457, 6.86324, 0.66 ) }
    dend_62 { pt3dadd( 8.47488, -29.3004, 6.83616, 0.96 ) }
    dend_62 { pt3dadd( 8.19061, -30.1903, 6.81579, 1.18 ) }
    dend_62 { pt3dadd( 7.86731, -31.4716, 6.79179, 1.18 ) }
    dend_62 { pt3dadd( 7.66414, -32.2844, 6.76164, 1.47 ) }
    dend_62 { pt3dadd( 7.34964, -33.5807, 6.73733, 0.81 ) }
    dend_62 { pt3dadd( 7.23761, -34.4506, 6.7424, 0.81 ) }
    dend_62 { pt3dadd( 7.41048, -35.5208, 6.73824, 0.96 ) }
    dend_62 { pt3dadd( 7.80929, -36.3999, 6.74634, 0.88 ) }
    dend_62 { pt3dadd( 8.35742, -37.3395, 6.79497, 1.33 ) }
    dend_62 { pt3dadd( 8.69023, -37.8955, 6.84465, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_62 { pt3dadd( 9.05871, -38.5322, 6.92201, 1.33 ) }
    dend_62 { pt3dadd( 9.37447, -39.2132, 7.02521, 0.81 ) }
    dend_62 { pt3dadd( 9.74206, -40.4495, 7.23181, 0.66 ) }
    dend_62 { pt3dadd( 9.9607, -41.7052, 7.43223, 0.96 ) }
    dend_62 { pt3dadd( 10.0335, -42.5329, 7.54222, 1.4 ) }
    dend_62 { pt3dadd( 10.061, -43.21, 7.61179, 1.4 ) }
    dend_62 { pt3dadd( 10.0735, -43.8948, 7.69391, 1.4 ) }
    dend_62 { pt3dadd( 10.0555, -45.0686, 7.88705, 0.96 ) }
    dend_62 { pt3dadd( 10.0407, -45.6223, 8.0157, 0.81 ) }
    dend_62 { pt3dadd( 10.02, -46.641, 8.37323, 0.81 ) }
    dend_62 { pt3dadd( 10.0042, -47.3838, 8.69524, 0.74 ) }
    dend_62 { pt3dadd( 9.97823, -48.8944, 9.46027, 0.74 ) }
    dend_62 { pt3dadd( 9.97126, -50.0412, 10.0488, 0.88 ) }
    dend_62 { pt3dadd( 9.98847, -50.9834, 10.5122, 0.88 ) }
    dend_62 { pt3dadd( 10.0616, -52.0453, 10.9455, 1.47 ) }
    dend_62 { pt3dadd( 10.2155, -53.0492, 11.185, 0.81 ) }
    dend_62 { pt3dadd( 10.5126, -54.2344, 11.2047, 0.59 ) }
    dend_62 { pt3dadd( 10.9328, -55.5654, 11.0312, 0.88 ) }
    dend_62 { pt3dadd( 11.2527, -56.5165, 10.8841, 0.88 ) }
    dend_62 { pt3dadd( 11.6002, -57.6522, 10.73, 0.66 ) }
    dend_62 { pt3dadd( 11.923, -58.9009, 10.6192, 0.59 ) }
    dend_62 { pt3dadd( 12.1134, -59.9467, 10.6294, 0.59 ) }
    dend_62 { pt3dadd( 12.2274, -61.0814, 10.7619, 0.59 ) }
    dend_62 { pt3dadd( 12.2871, -62.1812, 11.023, 0.88 ) }
    dend_62 { pt3dadd( 12.2926, -63.4165, 11.4354, 0.66 ) }
    dend_62 { pt3dadd( 12.2643, -64.3979, 11.8278, 1.03 ) }
    dend_62 { pt3dadd( 12.1942, -65.6537, 12.3805, 1.25 ) }
    dend_62 { pt3dadd( 12.1048, -66.8993, 12.9338, 1.25 ) }
    dend_62 { pt3dadd( 12.0525, -67.716, 13.2695, 1.84 ) }
    dend_62 { pt3dadd( 12.0318, -68.5093, 13.5775, 2.28 ) }
    dend_62 { pt3dadd( 12.0406, -69.1989, 13.8929, 1.69 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 31/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 8.71242, -24.7615, 7.12049, 0.74 ) }
    dend_57 { pt3dadd( 7.94721, -28.3686, 11.2779, 0.74 ) }
    dend_57 { pt3dadd( 7.97084, -29.1144, 12.4851, 0.74 ) }
    dend_57 { pt3dadd( 8.03357, -29.7519, 13.6489, 0.74 ) }
    dend_57 { pt3dadd( 8.11563, -30.778, 15.4704, 1.11 ) }
    dend_57 { pt3dadd( 8.15909, -31.3081, 16.3162, 1.11 ) }
    dend_57 { pt3dadd( 8.29177, -32.6658, 18.1697, 0.66 ) }
    dend_57 { pt3dadd( 8.75514, -35.4484, 21.3353, 1.4 ) }
    dend_57 { pt3dadd( 8.91339, -36.6463, 22.6656, 0.96 ) }
    dend_57 { pt3dadd( 8.96069, -37.6465, 23.7023, 1.18 ) }
    dend_57 { pt3dadd( 8.89429, -39.0269, 24.9138, 0.88 ) }
    dend_57 { pt3dadd( 8.6116, -40.9202, 26.2542, 0.66 ) }
    dend_57 { pt3dadd( 8.08578, -43.0784, 27.3532, 0.66 ) }
    dend_57 { pt3dadd( 7.7186, -44.3705, 27.8546, 0.59 ) }
    dend_57 { pt3dadd( 7.15265, -46.2807, 28.569, 0.74 ) }
    dend_57 { pt3dadd( 6.73993, -47.4954, 29.0631, 1.03 ) }
    dend_57 { pt3dadd( 6.22509, -48.644, 29.5805, 1.18 ) }
    dend_57 { pt3dadd( 5.39598, -50.0944, 30.2389, 1.4 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 49/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -16.387, -15.4631, -9.2381, 0.81 ) }
    dend_53 { pt3dadd( -17.7929, -16.3857, -9.14178, 0.81 ) }
    dend_53 { pt3dadd( -18.6532, -16.9839, -8.94425, 0.88 ) }
    dend_53 { pt3dadd( -19.4709, -17.6156, -8.67323, 1.03 ) }
    dend_53 { pt3dadd( -20.1238, -18.1946, -8.40587, 1.03 ) }
    dend_53 { pt3dadd( -20.7424, -18.8522, -8.09839, 0.52 ) }
    dend_53 { pt3dadd( -21.2811, -19.5916, -7.71555, 0.52 ) }
    dend_53 { pt3dadd( -21.7463, -20.6037, -7.06682, 0.74 ) }
    dend_53 { pt3dadd( -21.8708, -21.0437, -6.7793, 0.96 ) }
    dend_53 { pt3dadd( -21.9694, -21.5777, -6.4264, 0.59 ) }
    dend_53 { pt3dadd( -22.0769, -22.2738, -5.98975, 0.44 ) }
    dend_53 { pt3dadd( -22.2901, -23.6116, -5.29705, 0.44 ) }
    dend_53 { pt3dadd( -22.4105, -24.1629, -5.02087, 0.81 ) }
    dend_53 { pt3dadd( -22.6322, -24.7885, -4.69621, 0.96 ) }
    dend_53 { pt3dadd( -23.0255, -25.6104, -4.22204, 1.03 ) }
    dend_53 { pt3dadd( -23.3123, -26.1421, -3.91084, 0.96 ) }
    dend_53 { pt3dadd( -23.7043, -26.8755, -3.50978, 0.37 ) }
    dend_53 { pt3dadd( -24.3345, -28.2513, -2.82008, 0.37 ) }
    dend_53 { pt3dadd( -24.6015, -28.9873, -2.46038, 0.29 ) }
    dend_53 { pt3dadd( -24.7808, -29.6794, -2.15661, 0.37 ) }
    dend_53 { pt3dadd( -24.9849, -30.659, -1.78449, 0.37 ) }
    dend_53 { pt3dadd( -25.1563, -31.6682, -1.43514, 0.81 ) }
    dend_53 { pt3dadd( -25.3097, -32.6415, -1.14068, 1.25 ) }
    dend_53 { pt3dadd( -25.3596, -32.9347, -1.07715, 1.55 ) }
    dend_53 { pt3dadd( -25.6153, -34.0656, -0.846037, 0.37 ) }
    dend_53 { pt3dadd( -25.8786, -34.6925, -0.725707, 0.37 ) }
    dend_53 { pt3dadd( -26.0929, -34.9746, -0.671045, 0.44 ) }
    dend_53 { pt3dadd( -26.67, -35.534, -0.576479, 0.59 ) }
    dend_53 { pt3dadd( -27.0505, -35.8682, -0.538713, 0.66 ) }
    dend_53 { pt3dadd( -27.5234, -36.2676, -0.497563, 0.37 ) }
    dend_53 { pt3dadd( -28.0672, -36.7236, -0.457505, 0.59 ) }
    dend_53 { pt3dadd( -28.6305, -37.2592, -0.445495, 0.88 ) }
    dend_53 { pt3dadd( -28.9498, -37.5984, -0.456135, 1.03 ) }
    dend_53 { pt3dadd( -29.5157, -38.3085, -0.422379, 0.37 ) }
    dend_53 { pt3dadd( -29.6977, -38.5533, -0.388469, 0.37 ) }
    dend_53 { pt3dadd( -30.0374, -39.0033, -0.289943, 0.37 ) }
    dend_53 { pt3dadd( -30.4897, -39.5805, -0.123397, 0.66 ) }
    dend_53 { pt3dadd( -30.8372, -39.9846, 0.0152482, 0.88 ) }
    dend_53 { pt3dadd( -32.0363, -41.2391, 0.467736, 0.29 ) }
    dend_53 { pt3dadd( -32.5494, -41.7573, 0.647054, 0.29 ) }
    dend_53 { pt3dadd( -33.0494, -42.3036, 0.810142, 0.96 ) }
    dend_53 { pt3dadd( -33.312, -42.6188, 0.895212, 1.33 ) }
    dend_53 { pt3dadd( -33.7833, -43.2735, 1.04285, 1.11 ) }
    dend_53 { pt3dadd( -34.3278, -44.1365, 1.26172, 0.59 ) }
    dend_53 { pt3dadd( -34.8027, -44.9566, 1.38669, 0.37 ) }
    dend_53 { pt3dadd( -35.1833, -45.6889, 1.69812, 0.66 ) }
    dend_53 { pt3dadd( -35.422, -46.1158, 1.99958, 0.52 ) }
    dend_53 { pt3dadd( -35.7258, -46.5969, 2.47686, 0.29 ) }
    dend_53 { pt3dadd( -36.4514, -47.6428, 3.75629, 0.29 ) }
    dend_53 { pt3dadd( -37.0311, -48.3559, 4.82979, 0.81 ) }
    dend_53 { pt3dadd( -38.5106, -49.7066, 7.58886, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_53 { pt3dadd( -38.8781, -49.9402, 8.23882, 0.29 ) }
    dend_53 { pt3dadd( -39.0836, -50.0312, 8.58009, 0.29 ) }
    dend_53 { pt3dadd( -39.5433, -50.1486, 9.33885, 0.66 ) }
    dend_53 { pt3dadd( -39.7538, -50.173, 9.7075, 0.66 ) }
    dend_53 { pt3dadd( -43.9831, -58.0987, 14.0184, 0.66 ) }
    dend_53 { pt3dadd( -48.7236, -65.9003, 17.989, 0.66 ) }
    dend_53 { pt3dadd( -53.699, -73.5854, 21.8773, 0.66 ) }
    dend_53 { pt3dadd( -57.9359, -81.7731, 25.7094, 0.66 ) }
    dend_53 { pt3dadd( -60.8149, -89.2683, 31.5583, 0.66 ) }
    dend_53 { pt3dadd( -62.6056, -97.1583, 37.3702, 0.66 ) }
    dend_53 { pt3dadd( -64.7776, -104.208, 43.9771, 0.66 ) }
    dend_53 { pt3dadd( -65.1283, -112.068, 50.0834, 0.66 ) }
    dend_53 { pt3dadd( -64.2864, -119.623, 56.4828, 0.66 ) }
    dend_53 { pt3dadd( -61.8046, -127.422, 62.1481, 0.66 ) }
    dend_53 { pt3dadd( -58.8092, -135.522, 67.1399, 0.66 ) }
    dend_53 { pt3dadd( -56.1096, -143.576, 72.3632, 0.66 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 16/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -16.387, -15.4631, -9.2381, 1.03 ) }
    dend_52 { pt3dadd( -15.4019, -16.6615, -10.3347, 1.03 ) }
    dend_52 { pt3dadd( -13.6284, -18.4513, -11.844, 0.81 ) }
    dend_52 { pt3dadd( -12.3875, -19.7472, -12.8398, 1.03 ) }
    dend_52 { pt3dadd( -11.031, -21.3176, -13.9105, 0.88 ) }
    dend_52 { pt3dadd( -10.0438, -22.5924, -14.7147, 1.11 ) }
    dend_52 { pt3dadd( -9.27503, -23.7469, -15.3976, 0.74 ) }
    dend_52 { pt3dadd( -8.52209, -25.1124, -16.0655, 0.52 ) }
    dend_52 { pt3dadd( -7.84923, -27.0846, -16.8754, 0.88 ) }
    dend_52 { pt3dadd( -7.70356, -28.5372, -17.4839, 1.47 ) }
    dend_52 { pt3dadd( -7.76956, -29.5487, -17.8655, 1.25 ) }
    dend_52 { pt3dadd( -7.99276, -31.1948, -18.4164, 1.25 ) }
    dend_52 { pt3dadd( -8.21817, -32.5358, -18.8166, 0.81 ) }
    dend_52 { pt3dadd( -8.58411, -34.7346, -19.3383, 0.66 ) }
    dend_52 { pt3dadd( -8.79285, -36.7994, -19.6756, 0.66 ) }
    dend_52 { pt3dadd( -8.87473, -39.2945, -19.9526, 0.96 ) }
    dend_52 { pt3dadd( -8.83117, -40.591, -20.0211, 1.11 ) }
    dend_52 { pt3dadd( -8.72114, -41.8116, -20.0313, 1.11 ) }
    dend_52 { pt3dadd( -8.51124, -43.5254, -19.9885, 0.74 ) }
    dend_52 { pt3dadd( -8.26667, -45.3157, -19.8974, 0.52 ) }
    dend_52 { pt3dadd( -8.11896, -46.7055, -19.8337, 0.74 ) }
    dend_52 { pt3dadd( -8.09995, -47.7125, -19.8421, 1.11 ) }
    dend_52 { pt3dadd( -8.27719, -49.1842, -19.9127, 0.96 ) }
    dend_52 { pt3dadd( -8.75804, -50.6776, -20.0217, 0.74 ) }
    dend_52 { pt3dadd( -9.21687, -51.5805, -20.0889, 0.74 ) }
    dend_52 { pt3dadd( -9.67619, -52.3664, -20.1105, 0.74 ) }
    dend_52 { pt3dadd( -10.304, -53.4793, -20.0974, 0.59 ) }
    dend_52 { pt3dadd( -11.0303, -54.8969, -20.0448, 0.52 ) }
    dend_52 { pt3dadd( -11.6744, -56.4492, -19.9498, 0.52 ) }
    dend_52 { pt3dadd( -12.1654, -58.0498, -19.8522, 0.74 ) }
    dend_52 { pt3dadd( -12.5705, -60.2393, -19.7501, 0.88 ) }
    dend_52 { pt3dadd( -12.6603, -61.556, -19.7113, 1.18 ) }
    dend_52 { pt3dadd( -12.6187, -62.5583, -19.7248, 1.4 ) }
    dend_52 { pt3dadd( -12.4726, -63.8801, -19.7942, 1.62 ) }
    dend_52 { pt3dadd( -12.3671, -64.7005, -19.87, 1.77 ) }
    dend_52 { pt3dadd( -12.2574, -65.8148, -20.026, 1.4 ) }
    dend_52 { pt3dadd( -12.2054, -67.1736, -20.2543, 0.66 ) }
    dend_52 { pt3dadd( -12.2748, -68.6974, -20.5275, 0.44 ) }
    dend_52 { pt3dadd( -12.4712, -69.9378, -20.7511, 0.81 ) }
    dend_52 { pt3dadd( -12.7041, -70.7858, -20.941, 1.25 ) }
    dend_52 { pt3dadd( -12.8604, -71.2663, -21.093, 1.4 ) }
    dend_52 { pt3dadd( -13.0256, -71.7065, -21.2862, 1.4 ) }
    dend_52 { pt3dadd( -13.4116, -72.639, -21.7512, 0.88 ) }
    dend_52 { pt3dadd( -14.0409, -74.1186, -22.5423, 0.59 ) }
    dend_52 { pt3dadd( -14.6421, -75.5805, -23.3701, 0.59 ) }
    dend_52 { pt3dadd( -15.3841, -77.4198, -24.4194, 0.88 ) }
    dend_52 { pt3dadd( -16.0509, -79.1418, -25.4054, 0.52 ) }
    dend_52 { pt3dadd( -16.5147, -80.4352, -26.1726, 0.52 ) }
    dend_52 { pt3dadd( -16.7156, -81.127, -26.6062, 1.11 ) }
    dend_52 { pt3dadd( -16.8759, -81.9317, -27.1241, 1.55 ) }
    dend_52 { pt3dadd( -16.938, -82.7188, -27.5802, 1.77 ) }
    dend_52 { pt3dadd( -16.8986, -83.5472, -28.0089, 1.4 ) }
    dend_52 { pt3dadd( -16.5997, -85.1863, -28.8037, 0.66 ) }
    dend_52 { pt3dadd( -16.1845, -86.7068, -29.5289, 0.44 ) }
    dend_52 { pt3dadd( -15.7546, -88.0004, -30.1039, 0.44 ) }
    dend_52 { pt3dadd( -15.1954, -89.4797, -30.7042, 0.44 ) }
    dend_52 { pt3dadd( -14.942, -90.1339, -30.9341, 0.88 ) }
    dend_52 { pt3dadd( -14.7254, -90.7132, -31.0783, 1.25 ) }
    dend_52 { pt3dadd( -14.4938, -91.4043, -31.1836, 1.55 ) }
    dend_52 { pt3dadd( -14.3724, -91.9223, -31.2341, 1.55 ) }
    dend_52 { pt3dadd( -14.2262, -93.0261, -31.3218, 1.25 ) }
    dend_52 { pt3dadd( -14.2063, -94.914, -31.4182, 0.59 ) }
    dend_52 { pt3dadd( -14.3835, -96.5023, -31.514, 0.59 ) }
    dend_52 { pt3dadd( -14.5613, -97.3179, -31.5277, 0.96 ) }
    dend_52 { pt3dadd( -14.9133, -98.441, -31.501, 0.96 ) }
    dend_52 { pt3dadd( -15.3496, -99.5215, -31.4282, 0.81 ) }
    dend_52 { pt3dadd( -16.2786, -101.407, -31.2086, 0.37 ) }
    dend_52 { pt3dadd( -17.2607, -103.063, -30.9465, 0.37 ) }
    dend_52 { pt3dadd( -18.2627, -104.614, -30.6608, 1.18 ) }
    dend_52 { pt3dadd( -18.6278, -105.168, -30.5229, 1.62 ) }
    dend_52 { pt3dadd( -19.0236, -105.736, -30.3384, 1.62 ) }
    dend_52 { pt3dadd( -19.6794, -106.654, -29.9465, 1.33 ) }
    dend_52 { pt3dadd( -20.7129, -108.062, -29.1896, 0.44 ) }
    dend_52 { pt3dadd( -21.6369, -109.283, -28.4294, 0.44 ) }
    dend_52 { pt3dadd( -22.3668, -110.236, -27.847, 0.66 ) }
    dend_52 { pt3dadd( -23.2301, -111.377, -27.1561, 0.66 ) }
    dend_52 { pt3dadd( -24.0748, -112.529, -26.4896, 0.44 ) }
    dend_52 { pt3dadd( -24.5909, -113.269, -26.0945, 0.81 ) }
    dend_52 { pt3dadd( -24.9848, -113.863, -25.8251, 1.25 ) }
    dend_52 { pt3dadd( -25.4556, -114.585, -25.5502, 1.55 ) }
    dend_52 { pt3dadd( -25.9581, -115.376, -25.3135, 1.25 ) }
    dend_52 { pt3dadd( -26.5396, -116.336, -25.0774, 0.52 ) }
    dend_52 { pt3dadd( -27.1207, -117.295, -24.8886, 0.37 ) }
    dend_52 { pt3dadd( -27.6937, -118.327, -24.6216, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_52 { pt3dadd( -28.4229, -119.735, -24.1171, 0.81 ) }
    dend_52 { pt3dadd( -28.7778, -120.48, -23.7565, 1.25 ) }
    dend_52 { pt3dadd( -29.0951, -121.278, -23.2485, 0.81 ) }
    dend_52 { pt3dadd( -29.4644, -122.42, -22.4145, 0.37 ) }
    dend_52 { pt3dadd( -29.9182, -124.205, -21.0183, 0.37 ) }
    dend_52 { pt3dadd( -30.0849, -124.978, -20.4012, 0.74 ) }
    dend_52 { pt3dadd( -30.3033, -126.022, -19.5968, 0.81 ) }
    dend_52 { pt3dadd( -30.6217, -127.405, -18.5707, 0.29 ) }
    dend_52 { pt3dadd( -30.8197, -128.245, -18.0026, 0.88 ) }
    dend_52 { pt3dadd( -30.9192, -128.703, -17.7627, 1.18 ) }
    dend_52 { pt3dadd( -31.1075, -129.601, -17.5179, 1.18 ) }
    dend_52 { pt3dadd( -31.3081, -130.56, -17.4064, 0.81 ) }
    dend_52 { pt3dadd( -31.6312, -132.042, -17.4069, 0.29 ) }
    dend_52 { pt3dadd( -31.9146, -133.281, -17.4892, 0.29 ) }
    dend_52 { pt3dadd( -32.1207, -134.32, -17.561, 0.29 ) }
    dend_52 { pt3dadd( -32.2325, -135.027, -17.6349, 0.66 ) }
    dend_52 { pt3dadd( -32.334, -135.911, -17.7477, 0.96 ) }
    dend_52 { pt3dadd( -32.4324, -136.886, -17.9207, 0.96 ) }
    dend_52 { pt3dadd( -32.5501, -137.959, -18.1521, 0.52 ) }
    dend_52 { pt3dadd( -32.7712, -139.489, -18.5125, 0.37 ) }
    dend_52 { pt3dadd( -32.936, -140.522, -18.8103, 0.74 ) }
    dend_52 { pt3dadd( -33.1282, -141.632, -19.1779, 0.44 ) }
    dend_52 { pt3dadd( -33.3487, -142.721, -19.5761, 1.11 ) }
    dend_52 { pt3dadd( -33.5188, -143.383, -19.833, 1.11 ) }
    dend_52 { pt3dadd( -33.7961, -144.146, -20.1267, 0.81 ) }
    dend_52 { pt3dadd( -34.5318, -145.85, -20.7172, 0.37 ) }
    dend_52 { pt3dadd( -35.0049, -146.812, -20.9539, 0.66 ) }
    dend_52 { pt3dadd( -35.2497, -147.259, -21.0337, 0.96 ) }
    dend_52 { pt3dadd( -35.6475, -147.993, -21.0482, 0.96 ) }
    dend_52 { pt3dadd( -36.2843, -149.348, -20.6333, 0.29 ) }
    dend_52 { pt3dadd( -36.5141, -150.201, -19.72, 0.29 ) }
    dend_52 { pt3dadd( -36.5751, -150.849, -18.7573, 0.96 ) }
    dend_52 { pt3dadd( -36.5544, -151.163, -18.2103, 1.25 ) }
    dend_52 { pt3dadd( -36.4421, -152.091, -16.4843, 0.44 ) }
    dend_52 { pt3dadd( -36.1199, -153.785, -13.0632, 0.81 ) }
    dend_52 { pt3dadd( -35.4554, -156.245, -7.5889, 0.22 ) }
    dend_52 { pt3dadd( -35.2147, -156.985, -5.77582, 1.18 ) }
    dend_52 { pt3dadd( -34.9124, -157.708, -3.89494, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 38/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -59.4713, -130.39, 9.65643, 0.29 ) }
    dend_40 { pt3dadd( -57.7507, -131.069, 9.97589, 0.29 ) }
    dend_40 { pt3dadd( -56.4506, -131.581, 10.2173, 0.29 ) }
    dend_40 { pt3dadd( -54.8782, -132.202, 10.5092, 0.29 ) }
    dend_40 { pt3dadd( -53.6508, -132.686, 10.7371, 0.15 ) }
    dend_40 { pt3dadd( -52.6896, -133.065, 10.9156, 0.29 ) }
    dend_40 { pt3dadd( -52.1595, -133.274, 11.014, 0.29 ) }
    dend_40 { pt3dadd( -42.3105, -138.322, 11.7504, 0.29 ) }
    dend_40 { pt3dadd( -33.4723, -144.925, 13.4912, 0.29 ) }
    dend_40 { pt3dadd( -24.5469, -151.625, 14.0297, 0.29 ) }
    dend_40 { pt3dadd( -16.362, -158.874, 16.4923, 0.29 ) }
    dend_40 { pt3dadd( -8.64592, -166.994, 17.6485, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 50/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -59.4713, -130.39, 9.65643, 0.29 ) }
    dend_33 { pt3dadd( -60.1685, -131.081, 9.64805, 0.29 ) }
    dend_33 { pt3dadd( -60.879, -131.769, 9.63529, 0.29 ) }
    dend_33 { pt3dadd( -61.5981, -132.465, 9.62238, 0.29 ) }
    dend_33 { pt3dadd( -62.4596, -133.298, 9.60692, 0.29 ) }
    dend_33 { pt3dadd( -62.9444, -133.768, 9.59822, 0.29 ) }
    dend_33 { pt3dadd( -63.4529, -134.26, 9.58909, 0.81 ) }
    dend_33 { pt3dadd( -63.7925, -134.544, 9.56709, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_13 (entry count 58/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -12.8664, 29.6471, 15.2732, 0.66 ) }
    dend_29 { pt3dadd( -14.6904, 30.6648, 15.4942, 0.66 ) }
    dend_29 { pt3dadd( -15.6287, 31.1653, 15.5787, 0.66 ) }
    dend_29 { pt3dadd( -16.5092, 31.6162, 15.5993, 0.59 ) }
    dend_29 { pt3dadd( -17.2179, 31.9802, 15.6199, 1.11 ) }
    dend_29 { pt3dadd( -17.7037, 32.2316, 15.6849, 1.4 ) }
    dend_29 { pt3dadd( -18.043, 32.4202, 15.7587, 1.4 ) }
    dend_29 { pt3dadd( -18.6623, 32.7968, 15.9317, 0.66 ) }
    dend_29 { pt3dadd( -19.1497, 33.2228, 16.2937, 0.44 ) }
    dend_29 { pt3dadd( -19.5116, 33.6684, 16.7639, 0.44 ) }
    dend_29 { pt3dadd( -20.1578, 34.7144, 17.8867, 0.74 ) }
    dend_29 { pt3dadd( -20.5297, 35.3885, 18.565, 0.52 ) }
    dend_29 { pt3dadd( -20.7677, 35.7947, 18.9278, 0.44 ) }
    dend_29 { pt3dadd( -21.0644, 36.2749, 19.3064, 0.74 ) }
    dend_29 { pt3dadd( -21.4428, 36.7812, 19.6644, 0.74 ) }
    dend_29 { pt3dadd( -21.7741, 37.1241, 19.8409, 0.74 ) }
    dend_29 { pt3dadd( -22.2172, 37.4758, 20.0113, 0.29 ) }
    dend_29 { pt3dadd( -23.0776, 37.9685, 20.4926, 0.29 ) }
    dend_29 { pt3dadd( -23.237, 38.0485, 20.6092, 0.81 ) }
    dend_29 { pt3dadd( -23.7323, 38.2939, 21.0305, 0.81 ) }
    dend_29 { pt3dadd( -24.2089, 38.5639, 21.4732, 0.74 ) }
    dend_29 { pt3dadd( -24.9135, 39.0123, 22.1554, 0.81 ) }
    dend_29 { pt3dadd( -26.2976, 40.0107, 23.5337, 1.69 ) }
    dend_29 { pt3dadd( -27.1754, 40.7236, 24.3907, 0.52 ) }
    dend_29 { pt3dadd( -27.5028, 41.0173, 24.7092, 0.59 ) }
    dend_29 { pt3dadd( -28.1384, 41.6246, 25.2885, 0.59 ) }
    dend_29 { pt3dadd( -28.5737, 42.0441, 25.6571, 0.66 ) }
    dend_29 { pt3dadd( -28.9105, 42.3768, 25.8928, 1.03 ) }
    dend_29 { pt3dadd( -29.2293, 42.678, 26.0601, 1.03 ) }
    dend_29 { pt3dadd( -30.1459, 43.4019, 26.5262, 0.81 ) }
    dend_29 { pt3dadd( -30.6517, 43.7665, 26.7925, 0.59 ) }
    dend_29 { pt3dadd( -31.3875, 44.2766, 27.1771, 0.52 ) }
    dend_29 { pt3dadd( -31.8571, 44.6417, 27.4185, 0.52 ) }
    dend_29 { pt3dadd( -32.411, 45.1526, 27.69, 0.59 ) }
    dend_29 { pt3dadd( -32.8166, 45.5628, 27.8803, 0.88 ) }
    dend_29 { pt3dadd( -33.1613, 45.9977, 28.0038, 1.03 ) }
    dend_29 { pt3dadd( -33.5426, 46.6091, 28.1396, 0.59 ) }
    dend_29 { pt3dadd( -33.8133, 47.164, 28.2132, 0.52 ) }
    dend_29 { pt3dadd( -34.0163, 47.662, 28.2692, 0.81 ) }
    dend_29 { pt3dadd( -38.8013, 53.3932, 31.5086, 0.81 ) }
    dend_29 { pt3dadd( -43.9463, 58.3852, 35.266, 0.81 ) }
    dend_29 { pt3dadd( -48.6897, 63.3254, 39.576, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_29 { pt3dadd( -52.3328, 68.4284, 44.7102, 0.81 ) }
    dend_29 { pt3dadd( -56.1182, 74.0417, 49.2186, 0.81 ) }
    dend_29 { pt3dadd( -59.5501, 79.1604, 54.4833, 0.81 ) }
    dend_29 { pt3dadd( -61.9485, 84.4343, 60.1676, 0.81 ) }
    dend_29 { pt3dadd( -62.9929, 88.9422, 66.7862, 0.81 ) }
    dend_29 { pt3dadd( -63.5393, 93.5882, 73.3791, 0.81 ) }
    dend_29 { pt3dadd( -64.7967, 98.4911, 79.699, 0.81 ) }
    dend_29 { pt3dadd( -66.7187, 103.333, 85.8917, 0.81 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 8/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -12.8664, 29.6471, 15.2732, 1.11 ) }
    dend_14 { pt3dadd( -12.702, 30.7047, 14.7758, 1.11 ) }
    dend_14 { pt3dadd( -12.6704, 31.8771, 14.2413, 0.81 ) }
    dend_14 { pt3dadd( -12.8215, 33.1065, 13.6444, 0.74 ) }
    dend_14 { pt3dadd( -12.9704, 33.7319, 13.3377, 1.11 ) }
    dend_14 { pt3dadd( -13.1471, 34.3003, 13.0766, 1.18 ) }
    dend_14 { pt3dadd( -13.4477, 35.1605, 12.717, 1.47 ) }
    dend_14 { pt3dadd( -13.7293, 35.7825, 12.4704, 1.47 ) }
    dend_14 { pt3dadd( -14.2575, 36.8619, 12.0847, 1.18 ) }
    dend_14 { pt3dadd( -14.7487, 37.9426, 11.7654, 0.96 ) }
    dend_14 { pt3dadd( -15.1084, 38.8862, 11.5224, 1.03 ) }
    dend_14 { pt3dadd( -15.3944, 39.872, 11.289, 1.4 ) }
    dend_14 { pt3dadd( -15.6068, 40.985, 11.0528, 1.4 ) }
    dend_14 { pt3dadd( -15.6996, 42.2803, 10.7937, 1.03 ) }
    dend_14 { pt3dadd( -15.6426, 43.3561, 10.586, 1.03 ) }
    dend_14 { pt3dadd( -15.5072, 44.2837, 10.3987, 1.25 ) }
    dend_14 { pt3dadd( -15.2175, 45.6101, 10.0642, 1.11 ) }
    dend_14 { pt3dadd( -14.9623, 46.5877, 9.78188, 1.11 ) }
    dend_14 { pt3dadd( -14.6298, 47.8557, 9.33009, 1.11 ) }
    dend_14 { pt3dadd( -14.2848, 49.2859, 8.70774, 1.11 ) }
    dend_14 { pt3dadd( -14.104, 50.2576, 8.20756, 1.11 ) }
    dend_14 { pt3dadd( -13.9707, 51.5937, 7.41165, 1.33 ) }
    dend_14 { pt3dadd( -14.0324, 52.3861, 6.86406, 1.03 ) }
    dend_14 { pt3dadd( -14.4391, 53.6847, 5.83333, 1.18 ) }
    dend_14 { pt3dadd( -14.7186, 54.1573, 5.42643, 1.47 ) }
    dend_14 { pt3dadd( -15.1253, 54.6249, 5.03141, 1.47 ) }
    dend_14 { pt3dadd( -15.5656, 55.0257, 4.74087, 1.69 ) }
    dend_14 { pt3dadd( -16.8884, 56.0673, 4.23538, 0.88 ) }
    dend_14 { pt3dadd( -17.7143, 56.7013, 4.06715, 1.11 ) }
    dend_14 { pt3dadd( -18.4638, 57.3525, 4.07423, 1.11 ) }
    dend_14 { pt3dadd( -19.2301, 58.1497, 4.19246, 0.96 ) }
    dend_14 { pt3dadd( -19.8801, 59.0257, 4.39305, 0.88 ) }
    dend_14 { pt3dadd( -20.443, 60.0864, 4.66765, 1.18 ) }
    dend_14 { pt3dadd( -20.829, 61.146, 4.96827, 1.47 ) }
    dend_14 { pt3dadd( -21.2305, 62.7603, 5.41337, 1.4 ) }
    dend_14 { pt3dadd( -21.4114, 63.8771, 5.69146, 0.88 ) }
    dend_14 { pt3dadd( -21.5689, 65.386, 6.00847, 0.81 ) }
    dend_14 { pt3dadd( -21.6443, 66.8377, 6.27874, 1.69 ) }
    dend_14 { pt3dadd( -21.6448, 67.4654, 6.39074, 1.99 ) }
    dend_14 { pt3dadd( -21.6275, 68.1407, 6.50097, 1.99 ) }
    dend_14 { pt3dadd( -21.6257, 68.6796, 6.5626, 2.21 ) }
    dend_14 { pt3dadd( -21.6483, 69.6838, 6.71789, 1.99 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 50/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -25.2734, 9.72694, -6.97566, 1.4 ) }
    dend_4 { pt3dadd( -25.359, 11.3436, -8.26729, 1.4 ) }
    dend_4 { pt3dadd( -25.2921, 11.8275, -9.4661, 1.4 ) }
    dend_4 { pt3dadd( -25.241, 12.1341, -10.2921, 1.33 ) }
    dend_4 { pt3dadd( -25.1891, 12.8049, -11.9386, 1.62 ) }
    dend_4 { pt3dadd( -25.185, 13.4326, -13.247, 1.25 ) }
    dend_4 { pt3dadd( -25.265, 14.8938, -15.8601, 1.03 ) }
    dend_4 { pt3dadd( -25.5346, 16.7381, -19.226, 1.4 ) }
    dend_4 { pt3dadd( -25.6554, 17.3008, -20.1282, 1.4 ) }
    dend_4 { pt3dadd( -25.8597, 17.9913, -21.0461, 1.11 ) }
    dend_4 { pt3dadd( -26.1929, 18.9297, -21.963, 1.33 ) }
    dend_4 { pt3dadd( -26.5724, 19.7612, -22.5977, 1.69 ) }
    dend_4 { pt3dadd( -27.1098, 20.6688, -23.1334, 1.69 ) }
    dend_4 { pt3dadd( -27.5755, 21.3216, -23.4996, 1.69 ) }
    dend_4 { pt3dadd( -28.5641, 22.6052, -24.4815, 0.74 ) }
    dend_4 { pt3dadd( -28.9493, 23.1243, -24.9747, 0.74 ) }
    dend_4 { pt3dadd( -29.4222, 23.8098, -25.7825, 0.59 ) }
    dend_4 { pt3dadd( -30.0618, 24.9216, -27.2179, 1.18 ) }
    dend_4 { pt3dadd( -30.4759, 25.8523, -28.5752, 1.18 ) }
    dend_4 { pt3dadd( -30.7641, 26.7228, -29.8789, 1.18 ) }
    dend_4 { pt3dadd( -30.8925, 27.3653, -30.8495, 1.18 ) }
    dend_4 { pt3dadd( -30.9694, 28.3604, -32.441, 0.81 ) }
    dend_4 { pt3dadd( -30.9889, 28.9534, -33.3604, 0.66 ) }
    dend_4 { pt3dadd( -31.0626, 30.5418, -35.6865, 0.66 ) }
    dend_4 { pt3dadd( -31.1114, 30.8732, -36.1469, 1.25 ) }
    dend_4 { pt3dadd( -31.439, 31.9746, -37.5659, 1.47 ) }
    dend_4 { pt3dadd( -32.0695, 33.2209, -38.9873, 0.59 ) }
    dend_4 { pt3dadd( -32.8695, 34.4501, -40.0687, 1.03 ) }
    dend_4 { pt3dadd( -33.3621, 35.1232, -40.5221, 1.4 ) }
    dend_4 { pt3dadd( -33.8275, 35.7371, -40.8128, 1.47 ) }
    dend_4 { pt3dadd( -34.6674, 36.9036, -41.2767, 1.11 ) }
    dend_4 { pt3dadd( -35.5716, 38.3366, -41.6893, 0.81 ) }
    dend_4 { pt3dadd( -36.1795, 39.6479, -42.0723, 0.96 ) }
    dend_4 { pt3dadd( -36.3543, 40.5971, -42.4332, 1.25 ) }
    dend_4 { pt3dadd( -36.3671, 41.3607, -42.7597, 1.55 ) }
    dend_4 { pt3dadd( -36.3056, 42.3541, -43.2061, 1.55 ) }
    dend_4 { pt3dadd( -36.1888, 43.4466, -43.7091, 0.96 ) }
    dend_4 { pt3dadd( -36.0259, 45.0631, -44.4583, 0.66 ) }
    dend_4 { pt3dadd( -36.0395, 46.196, -44.9709, 0.66 ) }
    dend_4 { pt3dadd( -36.2249, 46.945, -45.2637, 0.74 ) }
    dend_4 { pt3dadd( -36.8409, 48.0117, -45.6473, 1.03 ) }
    dend_4 { pt3dadd( -37.412, 48.6333, -45.877, 1.47 ) }
    dend_4 { pt3dadd( -37.8493, 49.0135, -46.0383, 1.77 ) }
    dend_4 { pt3dadd( -38.4044, 49.4409, -46.2492, 1.62 ) }
    dend_4 { pt3dadd( -39.6967, 50.4342, -46.8443, 0.88 ) }
    dend_4 { pt3dadd( -40.619, 51.2161, -47.3571, 0.66 ) }
    dend_4 { pt3dadd( -41.5814, 52.1769, -48.0096, 0.59 ) }
    dend_4 { pt3dadd( -42.3944, 53.187, -48.679, 0.81 ) }
    dend_4 { pt3dadd( -42.8281, 53.9123, -49.1201, 0.59 ) }
    dend_4 { pt3dadd( -43.2648, 54.9675, -49.6933, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_4 { pt3dadd( -43.4347, 55.6315, -49.9987, 1.03 ) }
    dend_4 { pt3dadd( -43.5633, 56.3279, -50.2536, 1.03 ) }
    dend_4 { pt3dadd( -43.6876, 57.1632, -50.4662, 0.74 ) }
    dend_4 { pt3dadd( -43.8544, 58.2273, -50.6277, 0.52 ) }
    dend_4 { pt3dadd( -43.9957, 58.9812, -50.6962, 0.52 ) }
    dend_4 { pt3dadd( -44.2559, 60.0353, -50.7635, 1.11 ) }
    dend_4 { pt3dadd( -44.5207, 60.8683, -50.8125, 1.4 ) }
    dend_4 { pt3dadd( -44.9704, 62.0956, -50.8932, 1.4 ) }
    dend_4 { pt3dadd( -45.2344, 62.8288, -50.9523, 1.03 ) }
    dend_4 { pt3dadd( -45.4188, 63.4396, -51.0295, 0.74 ) }
    dend_4 { pt3dadd( -45.6379, 64.4851, -51.2407, 0.59 ) }
    dend_4 { pt3dadd( -45.6954, 65.1663, -51.4551, 0.52 ) }
    dend_4 { pt3dadd( -45.6773, 66.0154, -51.8175, 0.52 ) }
    dend_4 { pt3dadd( -45.5823, 67.2022, -52.4606, 0.52 ) }
    dend_4 { pt3dadd( -45.4901, 68.102, -52.9869, 0.52 ) }
    dend_4 { pt3dadd( -45.4158, 68.8323, -53.4928, 0.52 ) }
    dend_4 { pt3dadd( -45.3847, 69.5092, -54.0747, 0.52 ) }
    dend_4 { pt3dadd( -45.4554, 69.9148, -54.4724, 0.52 ) }
    dend_4 { pt3dadd( -45.6831, 70.3095, -54.9148, 0.81 ) }
    dend_4 { pt3dadd( -46.0901, 70.6795, -55.3601, 0.96 ) }
    dend_4 { pt3dadd( -46.9455, 71.2001, -56.0041, 0.96 ) }
    dend_4 { pt3dadd( -47.7758, 71.6183, -56.494, 0.52 ) }
    dend_4 { pt3dadd( -48.7173, 72.0671, -56.9935, 0.81 ) }
    dend_4 { pt3dadd( -49.1867, 72.3048, -57.2488, 1.18 ) }
    dend_4 { pt3dadd( -49.6886, 72.6015, -57.5375, 1.18 ) }
    dend_4 { pt3dadd( -50.5133, 73.2518, -58.0492, 0.44 ) }
    dend_4 { pt3dadd( -50.9919, 73.8078, -58.4018, 0.44 ) }
    dend_4 { pt3dadd( -51.3233, 74.4706, -58.7899, 0.74 ) }
    dend_4 { pt3dadd( -51.4541, 75.1054, -59.1938, 0.74 ) }
    dend_4 { pt3dadd( -51.4774, 75.6797, -59.5526, 0.44 ) }
    dend_4 { pt3dadd( -51.4282, 76.6319, -60.1109, 0.66 ) }
    dend_4 { pt3dadd( -51.321, 77.6303, -60.6576, 0.96 ) }
    dend_4 { pt3dadd( -51.2343, 78.4033, -61.0675, 0.74 ) }
    dend_4 { pt3dadd( -51.1427, 79.6159, -61.6678, 0.37 ) }
    dend_4 { pt3dadd( -51.118, 80.6064, -62.1074, 0.37 ) }
    dend_4 { pt3dadd( -51.1682, 81.5672, -62.4904, 0.88 ) }
    dend_4 { pt3dadd( -51.2425, 81.9873, -62.618, 1.18 ) }
    dend_4 { pt3dadd( -51.4719, 82.5307, -62.7143, 1.18 ) }
    dend_4 { pt3dadd( -51.8473, 83.0511, -62.7869, 1.18 ) }
    dend_4 { pt3dadd( -52.2309, 83.4958, -62.8358, 1.11 ) }
    dend_4 { pt3dadd( -52.6912, 84.0129, -62.9015, 0.44 ) }
    dend_4 { pt3dadd( -53.4106, 84.8623, -63.0236, 0.44 ) }
    dend_4 { pt3dadd( -54.5679, 86.3567, -63.2587, 0.44 ) }
    dend_4 { pt3dadd( -55.338, 87.442, -63.4671, 0.44 ) }
    dend_4 { pt3dadd( -56.0847, 88.6081, -63.7222, 0.44 ) }
    dend_4 { pt3dadd( -56.5416, 89.4453, -63.9602, 0.44 ) }
    dend_4 { pt3dadd( -56.9023, 90.2797, -64.2409, 1.47 ) }
    dend_4 { pt3dadd( -57.1177, 90.9738, -64.5238, 1.47 ) }
    dend_4 { pt3dadd( -57.3175, 91.8895, -64.9557, 1.18 ) }
    dend_4 { pt3dadd( -57.5125, 92.7674, -65.4889, 0.66 ) }
    dend_4 { pt3dadd( -57.73, 93.8254, -66.4806, 0.44 ) }
    dend_4 { pt3dadd( -57.7999, 94.4118, -67.1559, 0.59 ) }
    dend_4 { pt3dadd( -57.8204, 95.104, -68.1379, 0.59 ) }
    dend_4 { pt3dadd( -57.7969, 95.6654, -69.0603, 0.74 ) }
    dend_4 { pt3dadd( -57.7034, 96.6059, -70.9268, 1.25 ) }
    dend_4 { pt3dadd( -57.5739, 97.7991, -73.6702, 0.66 ) }
    dend_4 { pt3dadd( -57.5432, 98.2882, -74.9251, 0.66 ) }
    dend_4 { pt3dadd( -57.5223, 98.9614, -76.7784, 1.25 ) }
    dend_4 { pt3dadd( -57.5266, 99.3127, -77.7185, 1.62 ) }
    dend_4 { pt3dadd( -57.5878, 100.565, -80.711, 1.4 ) }
    dend_4 { pt3dadd( -57.616, 101.127, -81.9076, 1.11 ) }
    dend_4 { pt3dadd( -57.6813, 101.888, -83.4005, 1.25 ) }
    dend_4 { pt3dadd( -57.7165, 102.593, -84.7051, 0.96 ) }
    dend_4 { pt3dadd( -57.6921, 103.212, -85.6575, 1.18 ) }
    dend_4 { pt3dadd( -57.6242, 103.957, -86.6345, 1.4 ) }
    dend_4 { pt3dadd( -57.5308, 104.915, -87.6848, 0.37 ) }
    dend_4 { pt3dadd( -57.4791, 105.706, -88.6067, 0.37 ) }
    dend_4 { pt3dadd( -57.445, 106.405, -89.4723, 0.88 ) }
    dend_4 { pt3dadd( -57.4474, 106.952, -90.2154, 0.88 ) }
    dend_4 { pt3dadd( -57.464, 107.473, -91.0069, 0.88 ) }
    dend_4 { pt3dadd( -57.5486, 108.373, -92.5292, 0.37 ) }
    dend_4 { pt3dadd( -57.7605, 109.43, -94.2967, 1.03 ) }
    dend_4 { pt3dadd( -57.9125, 109.917, -95.1971, 1.03 ) }
    dend_4 { pt3dadd( -58.0399, 110.188, -95.7958, 1.03 ) }
    dend_4 { pt3dadd( -58.4656, 110.806, -97.3868, 0.29 ) }
    dend_4 { pt3dadd( -58.8819, 111.352, -98.9227, 0.29 ) }
    dend_4 { pt3dadd( -59.2608, 111.8, -100.3, 0.29 ) }
    dend_4 { pt3dadd( -59.7844, 112.353, -102.093, 1.25 ) }
    dend_4 { pt3dadd( -60.4756, 112.974, -104.2, 1.25 ) }
    dend_4 { pt3dadd( -61.0494, 113.433, -105.851, 0.96 ) }
    dend_4 { pt3dadd( -61.8001, 114.041, -107.912, 0.37 ) }
    dend_4 { pt3dadd( -62.0169, 114.268, -108.568, 0.66 ) }
    dend_4 { pt3dadd( -62.2772, 114.593, -109.465, 1.03 ) }
    dend_4 { pt3dadd( -62.5146, 115.049, -110.485, 1.03 ) }
    dend_4 { pt3dadd( -62.8564, 116.13, -112.532, 0.52 ) }
    dend_4 { pt3dadd( -62.9759, 116.668, -113.436, 1.03 ) }
    dend_4 { pt3dadd( -63.2524, 117.345, -114.469, 1.03 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 87/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -25.2734, 9.72694, -6.97566, 0.74 ) }
    dend_1 { pt3dadd( -25.9919, 9.18301, -7.02838, 0.74 ) }
    dend_1 { pt3dadd( -26.6782, 8.58953, -7.09365, 0.74 ) }
    dend_1 { pt3dadd( -27.377, 7.98535, -7.16011, 1.03 ) }
    dend_1 { pt3dadd( -27.8331, 7.59098, -7.20348, 1.4 ) }
    dend_1 { pt3dadd( -28.5048, 7.01021, -7.26736, 1.84 ) }
    dend_1 { pt3dadd( -28.939, 6.63471, -7.30866, 2.14 ) }
    dend_1 { pt3dadd( -29.231, 6.28473, -7.34455, 2.36 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 95/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 40.8915, 5.92002, 2.65033, 0.29 ) }
    axon_1 { pt3dadd( 55.72, 8.18146, 2.65033, 0.29 ) }
    axon_1 { pt3dadd( 70.5486, 10.4429, 2.65033, 0.29 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 98/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 12.0406, -69.1989, 13.8929, 0.52 ) }
    dend_66 { pt3dadd( 10.2694, -67.7978, 14.3629, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_66 { pt3dadd( 9.579, -67.2516, 14.546, 0.52 ) }
    dend_66 { pt3dadd( 8.70408, -66.5595, 14.7782, 1.25 ) }
    dend_66 { pt3dadd( 8.28268, -66.2262, 14.89, 1.4 ) }
    dend_66 { pt3dadd( 7.49606, -65.604, 15.0987, 0.37 ) }
    dend_66 { pt3dadd( 7.0081, -65.218, 15.2281, 0.29 ) }
    dend_66 { pt3dadd( 1.06995, -59.0065, 16.3534, 0.29 ) }
    dend_66 { pt3dadd( -5.08598, -52.9368, 15.918, 0.29 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 7/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 12.0406, -69.1989, 13.8929, 0.66 ) }
    dend_63 { pt3dadd( 12.8387, -70.1052, 13.8985, 0.66 ) }
    dend_63 { pt3dadd( 13.5786, -70.8956, 13.9386, 0.59 ) }
    dend_63 { pt3dadd( 14.5107, -71.9126, 14.0101, 0.59 ) }
    dend_63 { pt3dadd( 14.9402, -72.4087, 14.0578, 0.88 ) }
    dend_63 { pt3dadd( 15.4288, -73.0153, 14.1204, 0.88 ) }
    dend_63 { pt3dadd( 16.0236, -73.8359, 14.1713, 0.52 ) }
    dend_63 { pt3dadd( 16.4762, -74.5477, 14.189, 0.52 ) }
    dend_63 { pt3dadd( 16.7035, -75.066, 14.2008, 1.11 ) }
    dend_63 { pt3dadd( 16.7979, -75.6751, 14.1813, 1.47 ) }
    dend_63 { pt3dadd( 16.7578, -76.1456, 14.1443, 1.18 ) }
    dend_63 { pt3dadd( 16.3967, -77.1916, 14.0177, 0.59 ) }
    dend_63 { pt3dadd( 16.0659, -77.7572, 13.9721, 0.59 ) }
    dend_63 { pt3dadd( 15.6121, -78.3578, 13.9776, 0.37 ) }
    dend_63 { pt3dadd( 15.3638, -78.6686, 14.0168, 0.59 ) }
    dend_63 { pt3dadd( 15.0656, -79.0629, 14.1069, 0.59 ) }
    dend_63 { pt3dadd( 14.5819, -79.8532, 14.3761, 0.44 ) }
    dend_63 { pt3dadd( 14.2139, -80.9552, 14.8682, 0.37 ) }
    dend_63 { pt3dadd( 14.2231, -81.6307, 15.1768, 0.66 ) }
    dend_63 { pt3dadd( 14.4105, -82.3339, 15.4984, 0.96 ) }
    dend_63 { pt3dadd( 14.6751, -82.9434, 15.7836, 0.74 ) }
    dend_63 { pt3dadd( 15.1063, -83.6784, 16.1163, 0.52 ) }
    dend_63 { pt3dadd( 15.7284, -84.536, 16.4783, 0.81 ) }
    dend_63 { pt3dadd( 16.2363, -85.1399, 16.7023, 0.96 ) }
    dend_63 { pt3dadd( 16.598, -85.5513, 16.8476, 1.03 ) }
    dend_63 { pt3dadd( 17.1602, -86.2068, 17.0475, 0.81 ) }
    dend_63 { pt3dadd( 17.6632, -86.8139, 17.1999, 0.74 ) }
    dend_63 { pt3dadd( 18.0507, -87.2699, 17.2843, 1.11 ) }
    dend_63 { pt3dadd( 18.4462, -87.7111, 17.3185, 1.11 ) }
    dend_63 { pt3dadd( 18.9998, -88.3102, 17.3059, 0.81 ) }
    dend_63 { pt3dadd( 19.4886, -88.8382, 17.2545, 0.52 ) }
    dend_63 { pt3dadd( 19.851, -89.2806, 17.1916, 0.74 ) }
    dend_63 { pt3dadd( 20.1953, -89.794, 17.1378, 0.74 ) }
    dend_63 { pt3dadd( 20.5743, -90.5014, 17.0911, 0.52 ) }
    dend_63 { pt3dadd( 20.7867, -91.0194, 17.0773, 0.81 ) }
    dend_63 { pt3dadd( 20.9453, -91.455, 17.0802, 0.81 ) }
    dend_63 { pt3dadd( 21.2823, -92.4163, 17.1593, 0.59 ) }
    dend_63 { pt3dadd( 21.5401, -93.1027, 17.2587, 0.81 ) }
    dend_63 { pt3dadd( 21.768, -93.6639, 17.4108, 0.81 ) }
    dend_63 { pt3dadd( 22.0719, -94.3395, 17.6728, 0.44 ) }
    dend_63 { pt3dadd( 22.4134, -94.9979, 17.9945, 0.81 ) }
    dend_63 { pt3dadd( 22.8514, -95.6946, 18.3883, 0.66 ) }
    dend_63 { pt3dadd( 23.3559, -96.3414, 18.7828, 0.29 ) }
    dend_63 { pt3dadd( 24.2751, -97.4034, 19.391, 0.74 ) }
    dend_63 { pt3dadd( 24.6251, -97.7924, 19.5972, 1.25 ) }
    dend_63 { pt3dadd( 24.9328, -98.132, 19.7768, 1.25 ) }
    dend_63 { pt3dadd( 25.6092, -98.9381, 20.1625, 0.37 ) }
    dend_63 { pt3dadd( 26.1902, -99.6752, 20.435, 0.37 ) }
    dend_63 { pt3dadd( 26.8257, -100.473, 20.6656, 0.37 ) }
    dend_63 { pt3dadd( 27.1868, -100.892, 20.7076, 0.37 ) }
    // Section: dend_61, id: dend_61, parent: dend_57 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 5.39598, -50.0944, 30.2389, 0.44 ) }
    dend_61 { pt3dadd( 6.4078, -49.9632, 31.003, 0.44 ) }
    dend_61 { pt3dadd( 6.90128, -49.8993, 31.3756, 0.29 ) }
    dend_61 { pt3dadd( 7.54962, -49.8155, 31.8652, 0.52 ) }
    dend_61 { pt3dadd( 7.88544, -49.7719, 32.1188, 0.74 ) }
    dend_61 { pt3dadd( 8.05144, -49.7505, 32.2442, 0.74 ) }
    dend_61 { pt3dadd( 13.3008, -49.0658, 35.6914, 0.74 ) }
    dend_61 { pt3dadd( 19.0457, -47.9085, 38.0696, 0.74 ) }
    dend_61 { pt3dadd( 24.4658, -47.6658, 41.2976, 0.74 ) }
    dend_61 { pt3dadd( 29.8484, -46.9262, 44.5219, 0.74 ) }
    dend_61 { pt3dadd( 35.1337, -46.4924, 47.9501, 0.74 ) }
    dend_61 { pt3dadd( 40.8058, -46.9677, 50.6799, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 69/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 5.39598, -50.0944, 30.2389, 0.44 ) }
    dend_58 { pt3dadd( 4.77378, -51.8046, 31.4826, 0.44 ) }
    dend_58 { pt3dadd( 4.40558, -52.8167, 32.2186, 0.74 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 72/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -56.1096, -143.576, 72.3632, 0.29 ) }
    dend_55 { pt3dadd( -52.0862, -155.12, 74.7406, 0.29 ) }
    dend_55 { pt3dadd( -47.4296, -166.675, 74.9057, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 75/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -56.1096, -143.576, 72.3632, 0.22 ) }
    dend_54 { pt3dadd( -62.6523, -146.198, 77.4598, 0.29 ) }
    dend_54 { pt3dadd( -70.0413, -148.78, 81.2671, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_40 (entry count 78/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -8.64592, -166.994, 17.6485, 0.37 ) }
    dend_50 { pt3dadd( 0.708663, -174.744, 14.2813, 0.37 ) }
    dend_50 { pt3dadd( 11.1786, -180.433, 10.4801, 0.37 ) }
    dend_50 { pt3dadd( 22.0319, -185.634, 7.14749, 0.37 ) }
    dend_50 { pt3dadd( 31.2277, -192.612, 2.17971, 0.37 ) }
    dend_50 { pt3dadd( 39.8706, -199.689, -3.5909, 0.37 ) }
    dend_50 { pt3dadd( 47.208, -208.369, -9.18055, 0.37 ) }
    dend_50 { pt3dadd( 54.615, -217.607, -13.7745, 0.37 ) }
    dend_50 { pt3dadd( 61.9836, -227.739, -16.2019, 0.37 ) }
    dend_50 { pt3dadd( 68.8238, -238.373, -18.1895, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 88/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -8.64592, -166.994, 17.6485, 0.22 ) }
    dend_41 { pt3dadd( 1.21269, -174.015, 20.4626, 0.37 ) }
    dend_41 { pt3dadd( 12.0998, -179.813, 21.3301, 0.37 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 91/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -63.7925, -134.544, 9.56709, 0.22 ) }
    dend_35 { pt3dadd( -63.5376, -136.024, 9.3936, 0.22 ) }
    dend_35 { pt3dadd( -63.342, -137.16, 9.2605, 0.22 ) }
    dend_35 { pt3dadd( -63.1916, -138.033, 9.15819, 0.37 ) }
    dend_35 { pt3dadd( -62.9646, -139.352, 9.00371, 0.37 ) }
    dend_35 { pt3dadd( -60.135, -149.656, 9.24728, 0.37 ) }
    dend_35 { pt3dadd( -56.216, -159.561, 9.12382, 0.37 ) }
    dend_35 { pt3dadd( -53.03, -169.74, 8.72667, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 99/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -63.7925, -134.544, 9.56709, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( -64.7317, -136.111, 10.2618, 0.22 ) }
    dend_34 { pt3dadd( -64.7777, -136.17, 10.2923, 0.44 ) }
    dend_34 { pt3dadd( -65.3195, -136.727, 10.5699, 0.15 ) }
    dend_34 { pt3dadd( -65.5127, -136.896, 10.6458, 0.37 ) }
    dend_34 { pt3dadd( -66.1505, -137.426, 10.8599, 0.15 ) }
    dend_34 { pt3dadd( -66.961, -138.095, 11.063, 0.22 ) }
    dend_34 { pt3dadd( -67.6599, -138.627, 11.2367, 0.22 ) }
    dend_34 { pt3dadd( -68.2356, -139.122, 11.5131, 0.66 ) }
    dend_34 { pt3dadd( -68.951, -139.718, 11.8913, 0.22 ) }
    dend_34 { pt3dadd( -69.2232, -139.95, 12.0503, 0.88 ) }
    dend_34 { pt3dadd( -69.8077, -140.485, 12.4606, 0.74 ) }
    dend_34 { pt3dadd( -70.8816, -141.776, 13.4653, 1.4 ) }
    dend_34 { pt3dadd( -71.5195, -142.997, 14.6316, 1.18 ) }
    dend_34 { pt3dadd( -76.7844, -149.919, 19.7325, 1.18 ) }
    dend_34 { pt3dadd( -81.1206, -157.235, 25.1924, 1.18 ) }
    dend_34 { pt3dadd( -86.7612, -163.728, 30.4038, 1.18 ) }
    dend_34 { pt3dadd( -92.8978, -170.78, 34.2131, 1.18 ) }
    dend_34 { pt3dadd( -98.2293, -177.965, 38.8992, 1.18 ) }
    dend_34 { pt3dadd( -104.08, -184.287, 44.07, 1.18 ) }
    dend_34 { pt3dadd( -109.07, -191.02, 49.6523, 1.18 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 20/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -66.7187, 103.333, 85.8917, 0.37 ) }
    dend_31 { pt3dadd( -70.6891, 108.733, 91.0085, 0.37 ) }
    dend_31 { pt3dadd( -75.2361, 112.545, 96.8853, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 23/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -66.7187, 103.333, 85.8917, 0.29 ) }
    dend_30 { pt3dadd( -73.0929, 112.027, 94.3759, 0.37 ) }
    dend_30 { pt3dadd( -78.7393, 121.188, 102.935, 0.37 ) }
    dend_30 { pt3dadd( -84.7336, 128.155, 113.006, 0.37 ) }
    dend_30 { pt3dadd( -89.4388, 136.453, 122.852, 0.37 ) }
    dend_30 { pt3dadd( -94.5253, 142.15, 134.087, 0.37 ) }
    dend_30 { pt3dadd( -99.3565, 148.535, 145.098, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 30/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -21.6483, 69.6838, 6.71789, 0.96 ) }
    dend_16 { pt3dadd( -21.9656, 72.2097, 5.98128, 0.96 ) }
    dend_16 { pt3dadd( -22.2948, 73.8246, 5.43346, 0.81 ) }
    dend_16 { pt3dadd( -22.6501, 75.095, 4.98951, 0.81 ) }
    dend_16 { pt3dadd( -23.0847, 76.4049, 4.40263, 1.18 ) }
    dend_16 { pt3dadd( -24.0956, 79.3256, 2.99746, 1.18 ) }
    dend_16 { pt3dadd( -24.3484, 80.0681, 2.64199, 1.18 ) }
    dend_16 { pt3dadd( -24.7859, 81.1996, 2.03101, 0.81 ) }
    dend_16 { pt3dadd( -25.1256, 82.121, 1.59984, 0.81 ) }
    dend_16 { pt3dadd( -25.8234, 84.4557, 0.943931, 0.66 ) }
    dend_16 { pt3dadd( -26.0668, 85.7372, 0.938175, 0.96 ) }
    dend_16 { pt3dadd( -26.1738, 86.9952, 1.25359, 1.11 ) }
    dend_16 { pt3dadd( -26.1974, 88.2867, 1.77169, 0.81 ) }
    dend_16 { pt3dadd( -26.1344, 90.4483, 2.83126, 0.59 ) }
    dend_16 { pt3dadd( -26.0049, 92.7166, 3.9879, 0.81 ) }
    dend_16 { pt3dadd( -25.8788, 94.6211, 4.97808, 1.11 ) }
    dend_16 { pt3dadd( -25.7884, 96.024, 5.57553, 1.25 ) }
    dend_16 { pt3dadd( -25.6896, 98.1906, 6.26759, 0.59 ) }
    dend_16 { pt3dadd( -25.686, 99.2785, 6.41805, 0.59 ) }
    dend_16 { pt3dadd( -25.8931, 101.359, 6.06299, 0.59 ) }
    dend_16 { pt3dadd( -26.2002, 102.538, 5.45103, 0.44 ) }
    dend_16 { pt3dadd( -26.9496, 104.537, 3.93789, 1.11 ) }
    dend_16 { pt3dadd( -27.2065, 105.112, 3.4168, 1.4 ) }
    dend_16 { pt3dadd( -27.8911, 106.56, 1.9649, 0.88 ) }
    dend_16 { pt3dadd( -28.4332, 107.692, 0.853289, 0.52 ) }
    dend_16 { pt3dadd( -28.835, 108.595, 0.0648105, 0.52 ) }
    dend_16 { pt3dadd( -29.1501, 109.794, -0.77991, 0.74 ) }
    dend_16 { pt3dadd( -29.1116, 110.745, -1.19834, 1.11 ) }
    dend_16 { pt3dadd( -28.7656, 111.908, -1.50732, 1.33 ) }
    dend_16 { pt3dadd( -28.4314, 112.583, -1.60142, 1.62 ) }
    dend_16 { pt3dadd( -27.8377, 113.472, -1.68343, 1.47 ) }
    dend_16 { pt3dadd( -26.648, 114.93, -1.76969, 0.96 ) }
    dend_16 { pt3dadd( -25.8125, 115.853, -1.82074, 0.81 ) }
    dend_16 { pt3dadd( -24.9851, 116.771, -1.86269, 0.81 ) }
    dend_16 { pt3dadd( -24.0565, 117.864, -1.90043, 0.66 ) }
    dend_16 { pt3dadd( -23.1606, 119.054, -1.96833, 0.59 ) }
    dend_16 { pt3dadd( -22.6724, 119.851, -2.05115, 0.59 ) }
    dend_16 { pt3dadd( -22.122, 121.026, -2.21385, 0.44 ) }
    dend_16 { pt3dadd( -21.6642, 122.338, -2.42134, 0.81 ) }
    dend_16 { pt3dadd( -21.3034, 123.721, -2.69508, 0.81 ) }
    dend_16 { pt3dadd( -20.9683, 125.314, -3.05111, 1.03 ) }
    dend_16 { pt3dadd( -20.6542, 126.932, -3.54917, 1.25 ) }
    dend_16 { pt3dadd( -20.5091, 127.658, -3.87294, 1.25 ) }
    dend_16 { pt3dadd( -20.2897, 128.516, -4.49913, 1.18 ) }
    dend_16 { pt3dadd( -19.8969, 129.772, -5.64459, 0.66 ) }
    dend_16 { pt3dadd( -19.677, 130.429, -6.23807, 0.59 ) }
    dend_16 { pt3dadd( -19.038, 132.301, -7.83443, 1.25 ) }
    dend_16 { pt3dadd( -18.5009, 133.876, -9.0276, 1.99 ) }
    dend_16 { pt3dadd( -17.3102, 137.65, -11.3741, 0.59 ) }
    dend_16 { pt3dadd( -17.0028, 138.736, -11.8684, 0.66 ) }
    dend_16 { pt3dadd( -16.2796, 141.833, -12.6456, 0.52 ) }
    dend_16 { pt3dadd( -16.0303, 143.111, -12.7337, 1.03 ) }
    dend_16 { pt3dadd( -15.7789, 144.645, -12.5954, 1.25 ) }
    dend_16 { pt3dadd( -15.5299, 146.43, -12.2864, 0.74 ) }
    dend_16 { pt3dadd( -15.3868, 147.757, -12.0024, 0.59 ) }
    dend_16 { pt3dadd( -15.2837, 148.862, -11.8905, 0.59 ) }
    dend_16 { pt3dadd( -15.099, 150.399, -11.9362, 0.88 ) }
    dend_16 { pt3dadd( -14.8583, 151.677, -12.0414, 1.11 ) }
    dend_16 { pt3dadd( -14.5607, 152.753, -12.1833, 1.11 ) }
    dend_16 { pt3dadd( -14.0952, 154.011, -12.3741, 1.03 ) }
    dend_16 { pt3dadd( -13.279, 155.706, -12.6257, 0.66 ) }
    dend_16 { pt3dadd( -12.4872, 156.936, -12.7969, 0.66 ) }
    dend_16 { pt3dadd( -11.0763, 158.589, -12.9903, 0.96 ) }
    dend_16 { pt3dadd( -9.96418, 159.635, -13.1571, 1.4 ) }
    dend_16 { pt3dadd( -9.29729, 160.19, -13.2723, 1.4 ) }
    dend_16 { pt3dadd( -8.53136, 160.784, -13.4422, 1.4 ) }
    dend_16 { pt3dadd( -7.39144, 161.674, -13.8132, 0.74 ) }
    dend_16 { pt3dadd( -6.36852, 162.656, -14.4235, 0.37 ) }
    dend_16 { pt3dadd( -5.18976, 164.121, -15.6698, 0.37 ) }
    dend_16 { pt3dadd( -4.7103, 164.806, -16.3607, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_16 { pt3dadd( -4.31053, 165.403, -17.0147, 0.96 ) }
    dend_16 { pt3dadd( -3.71059, 166.302, -18.1001, 0.66 ) }
    dend_16 { pt3dadd( -2.83452, 167.607, -19.7392, 0.52 ) }
    dend_16 { pt3dadd( -2.33701, 168.362, -20.6369, 0.37 ) }
    dend_16 { pt3dadd( -1.77709, 169.213, -21.4675, 0.81 ) }
    dend_16 { pt3dadd( -1.31063, 169.997, -22.1244, 0.52 ) }
    dend_16 { pt3dadd( -0.710124, 171.309, -23.0553, 0.52 ) }
    dend_16 { pt3dadd( -0.440608, 172.202, -23.647, 0.66 ) }
    dend_16 { pt3dadd( -0.284289, 173.66, -24.5303, 0.66 ) }
    dend_16 { pt3dadd( -0.403462, 174.909, -25.3344, 0.66 ) }
    dend_16 { pt3dadd( -0.713189, 176.365, -26.3316, 0.66 ) }
    dend_16 { pt3dadd( -1.10623, 177.877, -27.4155, 0.81 ) }
    dend_16 { pt3dadd( -1.50195, 179.443, -28.6039, 1.03 ) }
    dend_16 { pt3dadd( -1.65771, 180.239, -29.2847, 1.25 ) }
    dend_16 { pt3dadd( -1.78531, 181.608, -30.5698, 0.52 ) }
    dend_16 { pt3dadd( -1.74258, 182.495, -31.4592, 0.37 ) }
    dend_16 { pt3dadd( -1.4314, 183.446, -32.4473, 0.37 ) }
    dend_16 { pt3dadd( -0.629542, 184.78, -33.8887, 1.11 ) }
    dend_16 { pt3dadd( 0.0428543, 185.609, -34.8656, 1.62 ) }
    dend_16 { pt3dadd( 0.373472, 185.949, -35.3049, 1.69 ) }
    dend_16 { pt3dadd( 0.988548, 186.571, -36.1353, 1.69 ) }
    dend_16 { pt3dadd( 2.33715, 188.185, -38.2605, 0.44 ) }
    dend_16 { pt3dadd( 2.96886, 189.175, -39.5056, 0.96 ) }
    dend_16 { pt3dadd( 3.48408, 190.263, -40.7554, 1.03 ) }
    dend_16 { pt3dadd( 3.71745, 191.038, -41.5027, 0.88 ) }
    dend_16 { pt3dadd( 3.95674, 192.46, -42.7077, 0.44 ) }
    dend_16 { pt3dadd( 4.09435, 193.978, -43.8178, 0.74 ) }
    dend_16 { pt3dadd( 4.10657, 194.912, -44.3842, 1.03 ) }
    dend_16 { pt3dadd( 4.21843, 195.791, -44.9241, 1.03 ) }
    dend_16 { pt3dadd( 4.64276, 197.02, -45.7928, 0.59 ) }
    dend_16 { pt3dadd( 5.35904, 198.091, -46.726, 0.59 ) }
    dend_16 { pt3dadd( 6.26772, 198.97, -47.6242, 0.59 ) }
    dend_16 { pt3dadd( 6.94873, 199.537, -48.2567, 0.74 ) }
    dend_16 { pt3dadd( 8.57332, 201.012, -49.8817, 0.74 ) }
    dend_16 { pt3dadd( 9.08517, 201.62, -50.5191, 0.96 ) }
    dend_16 { pt3dadd( 9.47743, 202.408, -51.1239, 1.11 ) }
    dend_16 { pt3dadd( 9.63916, 203.139, -51.4676, 1.11 ) }
    dend_16 { pt3dadd( 9.76619, 204.589, -51.9203, 0.66 ) }
    dend_16 { pt3dadd( 9.84469, 206.394, -52.2465, 0.52 ) }
    dend_16 { pt3dadd( 9.9535, 208.298, -52.3555, 0.52 ) }
    dend_16 { pt3dadd( 10.2398, 211.355, -52.3659, 1.11 ) }
    dend_16 { pt3dadd( 10.3579, 212.472, -52.334, 1.33 ) }
    dend_16 { pt3dadd( 10.4713, 213.553, -52.2687, 1.33 ) }
    dend_16 { pt3dadd( 10.6331, 215.439, -52.1008, 0.44 ) }
    dend_16 { pt3dadd( 10.7577, 216.95, -51.9831, 0.44 ) }
    dend_16 { pt3dadd( 10.8487, 218.252, -51.9626, 0.74 ) }
    dend_16 { pt3dadd( 10.8721, 219.233, -52.0345, 0.74 ) }
    dend_16 { pt3dadd( 10.8388, 220.812, -52.1721, 0.52 ) }
    dend_16 { pt3dadd( 10.7264, 222.755, -52.357, 0.44 ) }
    dend_16 { pt3dadd( 10.5144, 224.567, -52.56, 0.44 ) }
    dend_16 { pt3dadd( 10.2228, 226.409, -52.8046, 1.18 ) }
    dend_16 { pt3dadd( 10.026, 227.507, -52.9885, 1.18 ) }
    dend_16 { pt3dadd( 9.76235, 228.96, -53.2941, 0.96 ) }
    dend_16 { pt3dadd( 9.50346, 230.395, -53.6705, 0.44 ) }
    dend_16 { pt3dadd( 9.19558, 232.503, -54.3586, 0.37 ) }
    dend_16 { pt3dadd( 9.11241, 233.32, -54.6866, 0.37 ) }
    dend_16 { pt3dadd( 9.07992, 235.042, -55.4863, 0.88 ) }
    dend_16 { pt3dadd( 9.19577, 236.352, -56.0569, 1.18 ) }
    dend_16 { pt3dadd( 9.40729, 237.324, -56.3904, 1.18 ) }
    dend_16 { pt3dadd( 10.047, 239.249, -56.7577, 0.59 ) }
    dend_16 { pt3dadd( 10.776, 241.062, -56.8135, 0.52 ) }
    dend_16 { pt3dadd( 11.2913, 242.312, -56.7054, 0.44 ) }
    dend_16 { pt3dadd( 12.4226, 244.985, -56.101, 0.74 ) }
    dend_16 { pt3dadd( 13.0801, 246.558, -55.6098, 1.25 ) }
    dend_16 { pt3dadd( 13.6446, 247.961, -55.105, 1.55 ) }
    dend_16 { pt3dadd( 14.0873, 249.192, -54.6081, 1.62 ) }
    dend_16 { pt3dadd( 14.6064, 250.754, -53.9363, 0.81 ) }
    dend_16 { pt3dadd( 15.1879, 252.579, -53.1826, 0.37 ) }
    dend_16 { pt3dadd( 15.6528, 254.054, -52.6495, 0.37 ) }
    dend_16 { pt3dadd( 15.9524, 255.164, -52.2655, 0.37 ) }
    dend_16 { pt3dadd( 16.1903, 256.474, -51.8417, 0.37 ) }
    dend_16 { pt3dadd( 16.2389, 257.284, -51.6177, 0.37 ) }
    dend_16 { pt3dadd( 16.206, 258.398, -51.4214, 0.66 ) }
    dend_16 { pt3dadd( 16.1582, 259.561, -51.2223, 0.96 ) }
    dend_16 { pt3dadd( 16.1673, 260.48, -50.9728, 1.18 ) }
    dend_16 { pt3dadd( 16.3106, 261.953, -50.4924, 0.52 ) }
    dend_16 { pt3dadd( 16.6386, 263.726, -49.8994, 0.66 ) }
    dend_16 { pt3dadd( 16.9898, 265.291, -49.3924, 0.59 ) }
    dend_16 { pt3dadd( 17.7683, 268.405, -48.3828, 0.52 ) }
    dend_16 { pt3dadd( 18.3485, 270.308, -47.7597, 0.96 ) }
    dend_16 { pt3dadd( 18.7847, 271.495, -47.3628, 0.96 ) }
    dend_16 { pt3dadd( 19.4368, 272.884, -46.916, 0.66 ) }
    dend_16 { pt3dadd( 20.4141, 274.664, -46.3645, 0.44 ) }
    dend_16 { pt3dadd( 21.2154, 276.04, -46.0129, 0.44 ) }
    dend_16 { pt3dadd( 22.0172, 277.373, -45.8337, 0.52 ) }
    dend_16 { pt3dadd( 22.744, 278.573, -45.7045, 0.52 ) }
    dend_16 { pt3dadd( 24.0595, 280.695, -45.4077, 0.81 ) }
    dend_16 { pt3dadd( 24.956, 282.223, -45.1543, 0.52 ) }
    dend_16 { pt3dadd( 25.7289, 283.838, -44.8221, 0.52 ) }
    dend_16 { pt3dadd( 26.2458, 285.323, -44.4913, 1.47 ) }
    dend_16 { pt3dadd( 26.4811, 286.222, -44.2838, 1.77 ) }
    dend_16 { pt3dadd( 26.6472, 286.957, -44.1218, 1.77 ) }
    dend_16 { pt3dadd( 26.9719, 288.481, -43.8092, 0.66 ) }
    dend_16 { pt3dadd( 27.5001, 290.425, -43.5019, 0.52 ) }
    dend_16 { pt3dadd( 28.1021, 292.109, -43.2745, 0.52 ) }
    dend_16 { pt3dadd( 28.8027, 293.762, -43.1049, 0.52 ) }
    dend_16 { pt3dadd( 29.2806, 294.856, -43.0391, 0.52 ) }
    dend_16 { pt3dadd( 29.6222, 295.67, -43.0194, 0.81 ) }
    dend_16 { pt3dadd( 30.1536, 297.004, -43.0247, 1.03 ) }
    dend_16 { pt3dadd( 30.5906, 298.442, -43.0745, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 30.7538, 299.121, -43.095, 1.33 ) }
    dend_16 { pt3dadd( 31.0899, 300.494, -43.1248, 0.88 ) }
    dend_16 { pt3dadd( 31.4628, 301.622, -43.1366, 0.81 ) }
    dend_16 { pt3dadd( 31.9659, 302.613, -43.1465, 0.59 ) }
    dend_16 { pt3dadd( 33.2271, 304.225, -43.1748, 0.44 ) }
    dend_16 { pt3dadd( 34.3418, 305.22, -43.1432, 0.66 ) }
    dend_16 { pt3dadd( 35.4378, 306.043, -43.0795, 0.81 ) }
    dend_16 { pt3dadd( 36.6112, 306.836, -42.9878, 0.44 ) }
    dend_16 { pt3dadd( 37.6587, 307.538, -42.8423, 0.81 ) }
    dend_16 { pt3dadd( 38.4533, 308.112, -42.69, 0.81 ) }
    dend_16 { pt3dadd( 39.6375, 309.022, -42.4194, 0.52 ) }
    dend_16 { pt3dadd( 40.5227, 309.821, -42.2147, 0.52 ) }
    dend_16 { pt3dadd( 41.4673, 310.759, -42.0014, 0.52 ) }
    dend_16 { pt3dadd( 42.4459, 311.755, -41.8056, 0.37 ) }
    dend_16 { pt3dadd( 43.7199, 313.023, -41.6656, 0.37 ) }
    dend_16 { pt3dadd( 44.7407, 313.992, -41.6781, 0.59 ) }
    dend_16 { pt3dadd( 45.7799, 314.941, -41.7322, 1.18 ) }
    dend_16 { pt3dadd( 46.146, 315.277, -41.7256, 1.47 ) }
    dend_16 { pt3dadd( 46.9027, 316.026, -41.6668, 1.47 ) }
    dend_16 { pt3dadd( 48.0848, 317.298, -41.5267, 0.52 ) }
    dend_16 { pt3dadd( 48.9562, 318.31, -41.3784, 0.52 ) }
    dend_16 { pt3dadd( 50.4998, 320.184, -41.1052, 0.96 ) }
    dend_16 { pt3dadd( 51.8222, 321.732, -40.8931, 0.52 ) }
    dend_16 { pt3dadd( 53.0544, 323.082, -40.7712, 0.96 ) }
    dend_16 { pt3dadd( 53.7415, 323.788, -40.7526, 0.96 ) }
    dend_16 { pt3dadd( 55.0898, 324.977, -40.8216, 0.52 ) }
    dend_16 { pt3dadd( 55.8406, 325.539, -40.9784, 0.37 ) }
    dend_16 { pt3dadd( 57.0482, 326.222, -41.4177, 0.37 ) }
    dend_16 { pt3dadd( 57.952, 326.586, -41.7829, 0.81 ) }
    dend_16 { pt3dadd( 58.7579, 326.821, -42.0792, 0.81 ) }
    dend_16 { pt3dadd( 60.0136, 327.15, -42.509, 0.52 ) }
    dend_16 { pt3dadd( 60.9252, 327.401, -42.7871, 0.74 ) }
    dend_16 { pt3dadd( 62.3063, 327.844, -43.1601, 0.74 ) }
    dend_16 { pt3dadd( 63.4725, 328.277, -43.4523, 0.52 ) }
    dend_16 { pt3dadd( 64.8036, 328.956, -43.8237, 0.52 ) }
    dend_16 { pt3dadd( 66.0601, 329.884, -44.2252, 0.96 ) }
    dend_16 { pt3dadd( 66.6512, 330.507, -44.4516, 1.55 ) }
    dend_16 { pt3dadd( 67.118, 331.125, -44.6374, 1.69 ) }
    dend_16 { pt3dadd( 67.3872, 331.542, -44.7461, 1.69 ) }
    dend_16 { pt3dadd( 68.7302, 333.614, -45.2243, 0.52 ) }
    dend_16 { pt3dadd( 69.7191, 334.989, -45.5084, 0.66 ) }
    dend_16 { pt3dadd( 70.3725, 335.73, -45.635, 0.74 ) }
    dend_16 { pt3dadd( 71.6051, 336.856, -45.8622, 0.44 ) }
    dend_16 { pt3dadd( 72.9346, 337.945, -46.0934, 0.37 ) }
    dend_16 { pt3dadd( 74.1777, 338.878, -46.2846, 1.11 ) }
    dend_16 { pt3dadd( 75.1378, 339.557, -46.3986, 1.55 ) }
    dend_16 { pt3dadd( 76.218, 340.387, -46.5914, 0.81 ) }
    dend_16 { pt3dadd( 77.5237, 341.732, -46.9711, 0.52 ) }
    dend_16 { pt3dadd( 78.1133, 342.712, -47.2649, 0.66 ) }
    dend_16 { pt3dadd( 78.3564, 343.305, -47.4701, 0.66 ) }
    dend_16 { pt3dadd( 78.802, 344.781, -48.0013, 0.44 ) }
    dend_16 { pt3dadd( 79.1729, 346.116, -48.4901, 0.44 ) }
    dend_16 { pt3dadd( 79.6663, 347.382, -49.0375, 0.52 ) }
    dend_16 { pt3dadd( 80.5449, 348.643, -49.7527, 0.74 ) }
    dend_16 { pt3dadd( 81.4676, 349.427, -50.4615, 1.11 ) }
    dend_16 { pt3dadd( 81.6106, 349.513, -50.5677, 1.33 ) }
    dend_16 { pt3dadd( 82.2042, 349.786, -50.9869, 1.33 ) }
    dend_16 { pt3dadd( 83.9872, 350.524, -52.3045, 0.37 ) }
    dend_16 { pt3dadd( 84.7848, 350.861, -52.9319, 0.37 ) }
    dend_16 { pt3dadd( 86.0833, 351.515, -54.0013, 0.66 ) }
    dend_16 { pt3dadd( 87.0452, 352.143, -54.8326, 0.44 ) }
    dend_16 { pt3dadd( 87.5805, 352.566, -55.3106, 0.44 ) }
    dend_16 { pt3dadd( 88.7695, 353.618, -56.3458, 1.18 ) }
    dend_16 { pt3dadd( 89.3553, 354.16, -56.7538, 1.47 ) }
    dend_16 { pt3dadd( 90.129, 354.873, -57.1369, 1.47 ) }
    dend_16 { pt3dadd( 91.6309, 356.299, -57.5899, 0.52 ) }
    dend_16 { pt3dadd( 92.3676, 357.075, -57.6957, 0.52 ) }
    dend_16 { pt3dadd( 93.5505, 358.502, -57.7, 0.52 ) }
    dend_16 { pt3dadd( 94.8616, 360.324, -57.4959, 0.88 ) }
    dend_16 { pt3dadd( 95.6872, 361.675, -57.2816, 0.66 ) }
    dend_16 { pt3dadd( 96.6218, 363.463, -56.9308, 0.96 ) }
    dend_16 { pt3dadd( 97.3724, 365.099, -56.5642, 0.96 ) }
    dend_16 { pt3dadd( 98.0514, 366.628, -56.2513, 0.96 ) }
    dend_16 { pt3dadd( 98.5797, 367.781, -56.0495, 0.96 ) }
    dend_16 { pt3dadd( 99.1871, 368.882, -55.9328, 0.96 ) }
    dend_16 { pt3dadd( 99.9286, 369.82, -55.857, 0.96 ) }
    dend_16 { pt3dadd( 101.127, 370.872, -55.8018, 0.37 ) }
    dend_16 { pt3dadd( 102.501, 371.847, -55.7987, 0.37 ) }
    dend_16 { pt3dadd( 103.761, 372.655, -55.7976, 0.66 ) }
    dend_16 { pt3dadd( 104.861, 373.378, -55.7994, 1.33 ) }
    dend_16 { pt3dadd( 105.644, 373.96, -55.804, 1.33 ) }
    dend_16 { pt3dadd( 106.632, 374.934, -55.8164, 0.52 ) }
    dend_16 { pt3dadd( 107.673, 376.196, -55.8367, 0.52 ) }
    dend_16 { pt3dadd( 108.14, 376.829, -55.8482, 0.88 ) }
    dend_16 { pt3dadd( 108.74, 377.606, -55.9027, 0.88 ) }
    dend_16 { pt3dadd( 109.596, 378.549, -56.032, 0.88 ) }
    dend_16 { pt3dadd( 110.814, 379.582, -56.2167, 0.44 ) }
    dend_16 { pt3dadd( 112.083, 380.452, -56.4246, 0.44 ) }
    dend_16 { pt3dadd( 113.545, 381.197, -56.6757, 0.81 ) }
    dend_16 { pt3dadd( 115.246, 381.851, -56.9743, 1.47 ) }
    dend_16 { pt3dadd( 116.027, 382.05, -57.1153, 1.77 ) }
    dend_16 { pt3dadd( 117.413, 382.228, -57.3801, 1.77 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 92/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -21.6483, 69.6838, 6.71789, 0.52 ) }
    dend_15 { pt3dadd( -22.5569, 70.0277, 6.32599, 0.52 ) }
    dend_15 { pt3dadd( -23.2475, 70.3508, 6.04598, 0.52 ) }
    dend_15 { pt3dadd( -24.0506, 70.8251, 5.72947, 0.52 ) }
    dend_15 { pt3dadd( -24.6159, 71.242, 5.50556, 0.74 ) }
    dend_15 { pt3dadd( -24.9988, 71.6059, 5.32819, 0.74 ) }
    dend_15 { pt3dadd( -25.3618, 72.0525, 5.09172, 0.59 ) }
    dend_15 { pt3dadd( -25.5003, 72.3932, 4.92375, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_15 { pt3dadd( -25.6076, 72.9158, 4.67895, 0.37 ) }
    dend_15 { pt3dadd( -25.6659, 73.4631, 4.44982, 0.37 ) }
    dend_15 { pt3dadd( -25.7352, 74.2225, 4.16161, 0.37 ) }
    dend_15 { pt3dadd( -25.8854, 75.118, 3.84817, 0.37 ) }
    dend_15 { pt3dadd( -26.0355, 75.4529, 3.7541, 0.44 ) }
    dend_15 { pt3dadd( -26.3393, 75.7643, 3.71088, 0.59 ) }
    dend_15 { pt3dadd( -26.6436, 75.9632, 3.707, 0.59 ) }
    dend_15 { pt3dadd( -27.6562, 76.4893, 3.74761, 0.88 ) }
    dend_15 { pt3dadd( -28.1324, 76.6957, 3.78695, 1.03 ) }
    dend_15 { pt3dadd( -29.0533, 77.0541, 3.85779, 0.37 ) }
    dend_15 { pt3dadd( -29.7085, 77.2953, 3.86693, 0.44 ) }
    dend_15 { pt3dadd( -30.1787, 77.4755, 3.82814, 0.74 ) }
    dend_15 { pt3dadd( -30.6109, 77.6605, 3.74883, 0.74 ) }
    dend_15 { pt3dadd( -31.2513, 77.9968, 3.54685, 0.44 ) }
    dend_15 { pt3dadd( -31.7617, 78.3501, 3.32335, 0.29 ) }
    dend_15 { pt3dadd( -32.0305, 78.6577, 3.11034, 0.29 ) }
    dend_15 { pt3dadd( -32.3245, 79.2544, 2.67338, 1.03 ) }
    dend_15 { pt3dadd( -32.4101, 79.6157, 2.39461, 1.4 ) }
    dend_15 { pt3dadd( -32.4426, 79.9214, 2.15602, 1.4 ) }
    dend_15 { pt3dadd( -32.4714, 80.5285, 1.6818, 0.96 ) }
    dend_15 { pt3dadd( -32.5264, 81.5714, 0.910149, 0.52 ) }
    dend_15 { pt3dadd( -32.5726, 82.039, 0.579325, 0.52 ) }
    dend_15 { pt3dadd( -32.6946, 82.7329, 0.127776, 0.52 ) }
    dend_15 { pt3dadd( -32.8317, 83.075, -0.0537792, 0.52 ) }
    dend_15 { pt3dadd( -33.2276, 83.5387, -0.151362, 0.52 ) }
    dend_15 { pt3dadd( -33.7804, 83.9763, -0.130785, 0.88 ) }
    dend_15 { pt3dadd( -34.1147, 84.2087, -0.0917502, 1.25 ) }
    dend_15 { pt3dadd( -34.5271, 84.4977, -0.0359311, 1.47 ) }
    dend_15 { pt3dadd( -35.2263, 85.031, 0.0604763, 0.59 ) }
    dend_15 { pt3dadd( -35.8078, 85.562, 0.0988545, 0.37 ) }
    dend_15 { pt3dadd( -36.4076, 86.2365, 0.0878272, 0.29 ) }
    dend_15 { pt3dadd( -36.6986, 86.6292, 0.0470085, 0.59 ) }
    dend_15 { pt3dadd( -37.0197, 87.1314, -0.0418029, 0.88 ) }
    dend_15 { pt3dadd( -37.3412, 87.6656, -0.16731, 1.11 ) }
    dend_15 { pt3dadd( -37.7062, 88.2699, -0.326396, 1.33 ) }
    dend_15 { pt3dadd( -37.9681, 88.6837, -0.432534, 1.03 ) }
    dend_15 { pt3dadd( -38.3341, 89.2276, -0.560385, 0.81 ) }
    dend_15 { pt3dadd( -38.7278, 89.7606, -0.676183, 0.52 ) }
    dend_15 { pt3dadd( -39.4225, 90.6787, -0.849694, 0.52 ) }
    dend_15 { pt3dadd( -39.8963, 91.3225, -0.966399, 0.52 ) }
    dend_15 { pt3dadd( -40.1249, 91.6472, -1.01988, 0.66 ) }
    dend_15 { pt3dadd( -40.375, 92.0499, -1.08988, 0.66 ) }
    dend_15 { pt3dadd( -40.7146, 92.7237, -1.20497, 0.37 ) }
    dend_15 { pt3dadd( -40.9898, 93.4538, -1.32013, 0.37 ) }
    dend_15 { pt3dadd( -41.1786, 94.136, -1.43069, 0.88 ) }
    dend_15 { pt3dadd( -41.2759, 94.5154, -1.48472, 0.88 ) }
    dend_15 { pt3dadd( -41.4896, 95.269, -1.58938, 0.37 ) }
    dend_15 { pt3dadd( -41.6857, 95.8205, -1.66196, 0.29 ) }
    dend_15 { pt3dadd( -42.0233, 96.6044, -1.75019, 0.81 ) }
    dend_15 { pt3dadd( -42.1806, 96.9365, -1.75982, 1.18 ) }
    dend_15 { pt3dadd( -42.4658, 97.524, -1.73078, 1.18 ) }
    dend_15 { pt3dadd( -42.7205, 98.0832, -1.67815, 0.59 ) }
    dend_15 { pt3dadd( -43.0382, 98.8998, -1.59258, 0.44 ) }
    dend_15 { pt3dadd( -43.2837, 99.8022, -1.51124, 0.44 ) }
    dend_15 { pt3dadd( -43.4329, 100.776, -1.45639, 1.11 ) }
    dend_15 { pt3dadd( -43.4563, 101.123, -1.45551, 1.11 ) }
    dend_15 { pt3dadd( -43.4635, 101.663, -1.48246, 0.81 ) }
    dend_15 { pt3dadd( -43.4619, 102.489, -1.55338, 0.52 ) }
    dend_15 { pt3dadd( -43.4852, 103.124, -1.66125, 0.52 ) }
    dend_15 { pt3dadd( -43.5764, 103.706, -1.81364, 0.44 ) }
    dend_15 { pt3dadd( -43.7218, 104.187, -1.96877, 0.44 ) }
    dend_15 { pt3dadd( -43.918, 104.644, -2.11596, 0.52 ) }
    dend_15 { pt3dadd( -44.135, 105.06, -2.24433, 0.81 ) }
    dend_15 { pt3dadd( -44.5444, 105.784, -2.4344, 1.11 ) }
    dend_15 { pt3dadd( -44.7815, 106.187, -2.5328, 1.11 ) }
    dend_15 { pt3dadd( -45.102, 106.75, -2.62769, 0.81 ) }
    dend_15 { pt3dadd( -45.4285, 107.348, -2.69183, 0.37 ) }
    dend_15 { pt3dadd( -45.8064, 108.072, -2.72308, 0.37 ) }
    dend_15 { pt3dadd( -46.17, 108.798, -2.70315, 0.29 ) }
    dend_15 { pt3dadd( -46.4294, 109.336, -2.63507, 0.88 ) }
    dend_15 { pt3dadd( -46.7593, 110.069, -2.50245, 1.55 ) }
    dend_15 { pt3dadd( -46.9113, 110.434, -2.42224, 1.55 ) }
    dend_15 { pt3dadd( -47.1365, 111.009, -2.29472, 1.18 ) }
    dend_15 { pt3dadd( -47.3849, 111.651, -2.19049, 0.81 ) }
    dend_15 { pt3dadd( -47.7668, 112.601, -2.05425, 0.44 ) }
    dend_15 { pt3dadd( -48.1929, 113.584, -1.92086, 0.29 ) }
    dend_15 { pt3dadd( -48.497, 114.185, -1.84583, 0.29 ) }
    dend_15 { pt3dadd( -48.8818, 114.867, -1.75575, 1.25 ) }
    dend_15 { pt3dadd( -49.4606, 115.729, -1.59509, 0.29 ) }
    dend_15 { pt3dadd( -50.0795, 116.504, -1.38786, 0.29 ) }
    dend_15 { pt3dadd( -50.5485, 117.0, -1.21186, 0.29 ) }
    dend_15 { pt3dadd( -51.0242, 117.442, -0.997507, 0.59 ) }
    dend_15 { pt3dadd( -51.2726, 117.66, -0.869703, 0.88 ) }
    dend_15 { pt3dadd( -52.0285, 118.365, -0.406885, 0.44 ) }
    dend_15 { pt3dadd( -52.267, 118.634, -0.247391, 0.29 ) }
    dend_15 { pt3dadd( -52.5097, 119.004, -0.101752, 0.44 ) }
    dend_15 { pt3dadd( -52.6849, 119.378, 0.00918483, 0.29 ) }
    dend_15 { pt3dadd( -52.9049, 120.114, 0.218003, 0.29 ) }
    dend_15 { pt3dadd( -52.9953, 120.632, 0.367163, 0.29 ) }
    dend_15 { pt3dadd( -53.057, 121.193, 0.505914, 0.66 ) }
    dend_15 { pt3dadd( -53.1002, 121.53, 0.593192, 0.81 ) }
    dend_15 { pt3dadd( -53.1716, 121.973, 0.712998, 0.81 ) }
    dend_15 { pt3dadd( -53.3335, 122.797, 0.929634, 0.29 ) }
    dend_15 { pt3dadd( -53.4974, 123.487, 1.09857, 0.37 ) }
    dend_15 { pt3dadd( -53.8001, 124.422, 1.31964, 0.37 ) }
    dend_15 { pt3dadd( -54.0293, 124.985, 1.40333, 0.37 ) }
    dend_15 { pt3dadd( -54.3616, 125.737, 1.44476, 1.33 ) }
    dend_15 { pt3dadd( -54.5292, 126.107, 1.43373, 1.55 ) }
    dend_15 { pt3dadd( -54.6386, 126.364, 1.39661, 1.55 ) }
    dend_15 { pt3dadd( -54.7875, 126.739, 1.30615, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -55.2532, 127.932, 0.908209, 0.37 ) }
    dend_15 { pt3dadd( -55.4533, 128.365, 0.694866, 0.59 ) }
    dend_15 { pt3dadd( -55.6892, 128.779, 0.408732, 0.59 ) }
    dend_15 { pt3dadd( -55.9697, 129.188, 0.051825, 0.29 ) }
    dend_15 { pt3dadd( -56.2202, 129.512, -0.348951, 0.29 ) }
    dend_15 { pt3dadd( -56.4761, 129.826, -0.811006, 0.29 ) }
    dend_15 { pt3dadd( -56.8598, 130.274, -1.53462, 0.59 ) }
    dend_15 { pt3dadd( -57.0415, 130.487, -1.88448, 0.59 ) }
    dend_15 { pt3dadd( -57.5558, 131.147, -2.94147, 0.88 ) }
    dend_15 { pt3dadd( -58.109, 132.038, -4.2288, 0.44 ) }
    dend_15 { pt3dadd( -58.3457, 132.591, -4.92542, 0.29 ) }
    dend_15 { pt3dadd( -58.4063, 132.785, -5.14841, 0.81 ) }
    dend_15 { pt3dadd( -58.4586, 132.985, -5.35875, 1.11 ) }
    dend_15 { pt3dadd( -58.5919, 133.488, -5.87183, 0.81 ) }
    dend_15 { pt3dadd( -58.8283, 134.138, -6.56643, 0.15 ) }
    dend_15 { pt3dadd( -59.0059, 134.43, -6.94108, 0.15 ) }
    dend_15 { pt3dadd( -59.1725, 134.63, -7.32029, 0.15 ) }
    dend_15 { pt3dadd( -59.2994, 134.776, -7.67409, 0.66 ) }
    dend_15 { pt3dadd( -59.3883, 134.885, -7.97596, 0.81 ) }
    dend_15 { pt3dadd( -59.6726, 135.276, -9.00398, 0.15 ) }
    dend_15 { pt3dadd( -60.0543, 135.824, -10.359, 0.66 ) }
    dend_15 { pt3dadd( -60.1543, 135.98, -10.7092, 0.96 ) }
    dend_15 { pt3dadd( -60.3408, 136.331, -11.4027, 0.81 ) }
    dend_15 { pt3dadd( -60.6621, 136.976, -12.5803, 0.29 ) }
    dend_15 { pt3dadd( -60.8294, 137.312, -13.1331, 0.29 ) }
    dend_15 { pt3dadd( -61.0655, 137.746, -13.7657, 0.29 ) }
    dend_15 { pt3dadd( -61.4522, 138.23, -14.4621, 1.18 ) }
    dend_15 { pt3dadd( -61.7174, 138.475, -14.8226, 1.18 ) }
    dend_15 { pt3dadd( -62.3613, 138.965, -15.5134, 0.37 ) }
    dend_15 { pt3dadd( -62.7219, 139.212, -15.8434, 0.37 ) }
    dend_15 { pt3dadd( -63.1203, 139.488, -16.1968, 0.88 ) }
    dend_15 { pt3dadd( -63.6239, 139.899, -16.6476, 0.96 ) }
    dend_15 { pt3dadd( -64.3558, 140.606, -17.3296, 0.44 ) }
    dend_15 { pt3dadd( -64.6978, 140.963, -17.661, 0.66 ) }
    dend_15 { pt3dadd( -64.985, 141.271, -17.9398, 0.37 ) }
    dend_15 { pt3dadd( -65.308, 141.587, -18.2533, 0.37 ) }
    dend_15 { pt3dadd( -65.8046, 142.071, -18.7481, 0.44 ) }
    dend_15 { pt3dadd( -66.2688, 142.543, -19.2178, 0.37 ) }
    dend_15 { pt3dadd( -66.9571, 143.231, -19.902, 0.66 ) }
    dend_15 { pt3dadd( -67.3049, 143.524, -20.227, 0.66 ) }
    dend_15 { pt3dadd( -67.8163, 143.86, -20.6799, 0.29 ) }
    dend_15 { pt3dadd( -68.3072, 144.095, -21.0694, 0.52 ) }
    dend_15 { pt3dadd( -68.7333, 144.253, -21.3719, 0.59 ) }
    dend_15 { pt3dadd( -69.4179, 144.486, -21.8414, 0.29 ) }
    dend_15 { pt3dadd( -69.9243, 144.67, -22.2078, 0.29 ) }
    dend_15 { pt3dadd( -70.5982, 144.944, -22.686, 0.29 ) }
    dend_15 { pt3dadd( -71.1012, 145.157, -23.0608, 0.44 ) }
    dend_15 { pt3dadd( -71.4426, 145.282, -23.3142, 0.74 ) }
    dend_15 { pt3dadd( -71.9699, 145.475, -23.6909, 0.74 ) }
    dend_15 { pt3dadd( -72.6728, 145.731, -24.1629, 1.11 ) }
    dend_15 { pt3dadd( -73.1617, 145.93, -24.4812, 1.62 ) }
    dend_15 { pt3dadd( -74.151, 146.358, -25.0897, 0.88 ) }
    dend_15 { pt3dadd( -74.9263, 146.687, -25.5586, 0.37 ) }
    dend_15 { pt3dadd( -75.594, 146.946, -25.9569, 0.29 ) }
    dend_15 { pt3dadd( -76.0861, 147.115, -26.2387, 0.29 ) }
    dend_15 { pt3dadd( -76.463, 147.238, -26.4346, 0.81 ) }
    dend_15 { pt3dadd( -76.7617, 147.336, -26.579, 1.18 ) }
    dend_15 { pt3dadd( -77.1309, 147.476, -26.7248, 0.88 ) }
    dend_15 { pt3dadd( -77.8728, 147.852, -27.0132, 0.29 ) }
    dend_15 { pt3dadd( -78.2509, 148.122, -27.209, 0.29 ) }
    dend_15 { pt3dadd( -78.5959, 148.456, -27.4236, 0.59 ) }
    dend_15 { pt3dadd( -78.7491, 148.637, -27.5579, 0.88 ) }
    dend_15 { pt3dadd( -78.9008, 148.863, -27.7503, 0.59 ) }
    dend_15 { pt3dadd( -79.0459, 149.134, -28.0777, 0.37 ) }
    dend_15 { pt3dadd( -79.2524, 149.579, -28.7683, 0.37 ) }
    dend_15 { pt3dadd( -79.3626, 149.815, -29.1955, 0.74 ) }
    dend_15 { pt3dadd( -79.5808, 150.244, -30.0864, 0.52 ) }
    dend_15 { pt3dadd( -79.7607, 150.565, -30.8154, 1.11 ) }
    dend_15 { pt3dadd( -80.263, 151.308, -32.761, 1.25 ) }
    dend_15 { pt3dadd( -80.6338, 151.77, -34.165, 0.66 ) }
    dend_15 { pt3dadd( -80.9098, 152.049, -35.1467, 0.44 ) }
    dend_15 { pt3dadd( -81.2399, 152.325, -36.2491, 1.03 ) }
    dend_15 { pt3dadd( -81.557, 152.526, -37.1669, 1.03 ) }
    dend_15 { pt3dadd( -82.2255, 152.796, -38.7963, 0.29 ) }
    dend_15 { pt3dadd( -82.6297, 152.88, -39.6036, 0.29 ) }
    dend_15 { pt3dadd( -82.9507, 152.919, -40.1708, 1.25 ) }
    dend_15 { pt3dadd( -83.0634, 152.933, -40.3532, 1.69 ) }
    dend_15 { pt3dadd( -83.3414, 152.979, -40.7691, 1.69 ) }
    dend_15 { pt3dadd( -84.1186, 153.144, -41.83, 0.29 ) }
    dend_15 { pt3dadd( -84.7205, 153.344, -42.589, 0.29 ) }
    dend_15 { pt3dadd( -85.0445, 153.497, -42.9971, 0.29 ) }
    dend_15 { pt3dadd( -85.4793, 153.755, -43.5746, 0.29 ) }
    dend_15 { pt3dadd( -85.9365, 154.034, -44.1947, 0.81 ) }
    dend_15 { pt3dadd( -86.2027, 154.195, -44.5427, 0.88 ) }
    dend_15 { pt3dadd( -86.7496, 154.518, -45.1906, 0.29 ) }
    dend_15 { pt3dadd( -87.2959, 154.797, -45.8049, 0.81 ) }
    dend_15 { pt3dadd( -87.5712, 154.907, -46.0964, 0.81 ) }
    dend_15 { pt3dadd( -87.9964, 155.048, -46.5337, 0.22 ) }
    dend_15 { pt3dadd( -88.2679, 155.15, -46.7946, 0.52 ) }
    dend_15 { pt3dadd( -88.3859, 155.199, -46.9094, 0.59 ) }
    dend_15 { pt3dadd( -89.0054, 155.42, -47.4227, 0.22 ) }
    dend_15 { pt3dadd( -89.2408, 155.472, -47.5951, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 92/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -63.2524, 117.345, -114.469, 0.52 ) }
    dend_12 { pt3dadd( -62.5421, 118.761, -115.638, 0.52 ) }
    dend_12 { pt3dadd( -62.0741, 119.767, -116.477, 0.81 ) }
    dend_12 { pt3dadd( -61.7611, 120.454, -117.124, 0.59 ) }
    dend_12 { pt3dadd( -61.0306, 121.882, -118.556, 0.96 ) }
    dend_12 { pt3dadd( -60.5475, 122.749, -119.5, 0.96 ) }
    dend_12 { pt3dadd( -59.9831, 123.774, -120.635, 0.52 ) }
    dend_12 { pt3dadd( -59.6545, 124.408, -121.417, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( -59.104, 125.474, -122.862, 0.52 ) }
    dend_12 { pt3dadd( -58.7693, 126.12, -123.73, 0.52 ) }
    dend_12 { pt3dadd( -58.338, 126.969, -124.746, 0.66 ) }
    dend_12 { pt3dadd( -58.0968, 127.543, -125.401, 0.96 ) }
    dend_12 { pt3dadd( -57.8169, 128.327, -126.249, 0.96 ) }
    dend_12 { pt3dadd( -57.569, 129.278, -127.272, 0.37 ) }
    dend_12 { pt3dadd( -57.429, 130.151, -128.141, 0.37 ) }
    dend_12 { pt3dadd( -57.3623, 131.02, -128.969, 0.37 ) }
    dend_12 { pt3dadd( -57.3279, 132.677, -130.562, 0.44 ) }
    dend_12 { pt3dadd( -57.3323, 133.021, -130.916, 0.74 ) }
    dend_12 { pt3dadd( -57.3494, 133.804, -131.724, 0.74 ) }
    dend_12 { pt3dadd( -57.3922, 134.542, -132.494, 0.37 ) }
    dend_12 { pt3dadd( -57.4009, 135.201, -133.2, 0.37 ) }
    dend_12 { pt3dadd( -57.308, 135.985, -133.985, 0.37 ) }
    dend_12 { pt3dadd( -57.1172, 136.579, -134.496, 0.37 ) }
    dend_12 { pt3dadd( -56.7522, 137.51, -135.291, 0.37 ) }
    dend_12 { pt3dadd( -56.6285, 137.771, -135.501, 0.81 ) }
    dend_12 { pt3dadd( -56.2113, 138.51, -136.092, 0.37 ) }
    dend_12 { pt3dadd( -55.8262, 139.078, -136.544, 0.37 ) }
    dend_12 { pt3dadd( -55.2668, 139.824, -137.05, 0.66 ) }
    dend_12 { pt3dadd( -54.8642, 140.368, -137.405, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -63.2524, 117.345, -114.469, 0.44 ) }
    dend_5 { pt3dadd( -63.415, 118.4, -114.558, 0.44 ) }
    dend_5 { pt3dadd( -63.6737, 119.211, -114.657, 0.37 ) }
    dend_5 { pt3dadd( -64.0065, 119.956, -114.781, 0.88 ) }
    dend_5 { pt3dadd( -64.2126, 120.357, -114.878, 0.88 ) }
    dend_5 { pt3dadd( -64.5668, 120.996, -115.065, 0.52 ) }
    dend_5 { pt3dadd( -64.9207, 121.632, -115.406, 0.29 ) }
    dend_5 { pt3dadd( -65.3617, 122.339, -115.961, 0.22 ) }
    dend_5 { pt3dadd( -65.6259, 122.718, -116.311, 0.22 ) }
    dend_5 { pt3dadd( -66.0393, 123.263, -116.871, 0.88 ) }
    dend_5 { pt3dadd( -66.3205, 123.627, -117.283, 1.25 ) }
    dend_5 { pt3dadd( -67.4754, 125.159, -119.22, 0.44 ) }
    dend_5 { pt3dadd( -67.8666, 125.731, -120.007, 0.96 ) }
    dend_5 { pt3dadd( -68.0048, 125.972, -120.364, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 35/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -29.231, 6.28473, -7.34455, 0.81 ) }
    dend_3 { pt3dadd( -30.1665, 5.98952, -9.60236, 0.81 ) }
    dend_3 { pt3dadd( -30.6478, 5.88945, -10.5923, 0.81 ) }
    dend_3 { pt3dadd( -33.7598, 5.62258, -15.9274, 1.62 ) }
    dend_3 { pt3dadd( -36.0305, 5.68316, -19.2312, 0.66 ) }
    dend_3 { pt3dadd( -37.4352, 5.78766, -21.0482, 0.66 ) }
    dend_3 { pt3dadd( -38.3734, 5.838, -22.1695, 0.88 ) }
    dend_3 { pt3dadd( -39.4701, 5.92297, -23.3, 0.96 ) }
    dend_3 { pt3dadd( -41.2855, 6.00163, -24.8936, 0.81 ) }
    dend_3 { pt3dadd( -43.1115, 5.86737, -26.0126, 0.52 ) }
    dend_3 { pt3dadd( -44.72, 5.44968, -26.896, 0.52 ) }
    dend_3 { pt3dadd( -46.4531, 4.58382, -27.8477, 0.74 ) }
    dend_3 { pt3dadd( -47.9839, 3.43854, -28.6782, 1.11 ) }
    dend_3 { pt3dadd( -48.4768, 2.94203, -28.9211, 1.25 ) }
    dend_3 { pt3dadd( -49.5281, 1.63535, -29.4151, 0.96 ) }
    dend_3 { pt3dadd( -50.7799, -0.0729057, -29.9687, 0.66 ) }
    dend_3 { pt3dadd( -51.9576, -1.65655, -30.4611, 0.88 ) }
    dend_3 { pt3dadd( -53.1877, -3.18865, -30.9768, 0.81 ) }
    dend_3 { pt3dadd( -54.4911, -4.66717, -31.5843, 0.96 ) }
    dend_3 { pt3dadd( -55.5177, -5.77722, -32.1518, 1.18 ) }
    dend_3 { pt3dadd( -56.6437, -7.00649, -32.8865, 1.11 ) }
    dend_3 { pt3dadd( -57.5898, -8.08961, -33.6536, 1.18 ) }
    dend_3 { pt3dadd( -58.5271, -9.21766, -34.6127, 1.33 ) }
    dend_3 { pt3dadd( -60.0254, -10.9807, -36.3132, 0.66 ) }
    dend_3 { pt3dadd( -61.1366, -12.184, -37.5724, 0.88 ) }
    dend_3 { pt3dadd( -62.0587, -13.0963, -38.5519, 0.88 ) }
    dend_3 { pt3dadd( -63.5693, -14.455, -40.045, 0.59 ) }
    dend_3 { pt3dadd( -64.49, -15.1588, -40.8148, 0.59 ) }
    dend_3 { pt3dadd( -65.3196, -15.6152, -41.3223, 0.81 ) }
    dend_3 { pt3dadd( -66.6753, -16.0442, -41.6836, 1.33 ) }
    dend_3 { pt3dadd( -67.8643, -16.2995, -41.7189, 1.4 ) }
    dend_3 { pt3dadd( -68.6398, -16.4903, -41.6329, 1.25 ) }
    dend_3 { pt3dadd( -70.1577, -17.0514, -41.2794, 0.52 ) }
    dend_3 { pt3dadd( -71.019, -17.5532, -41.0578, 0.52 ) }
    dend_3 { pt3dadd( -72.0967, -18.5186, -40.8878, 0.66 ) }
    dend_3 { pt3dadd( -73.0415, -19.6126, -40.8338, 0.81 ) }
    dend_3 { pt3dadd( -74.0508, -20.8755, -40.8449, 0.81 ) }
    dend_3 { pt3dadd( -74.7056, -21.7498, -40.9426, 1.11 ) }
    dend_3 { pt3dadd( -75.2344, -22.5319, -41.1118, 1.33 ) }
    dend_3 { pt3dadd( -75.9843, -23.7154, -41.5341, 1.33 ) }
    dend_3 { pt3dadd( -76.3716, -24.3535, -41.8815, 1.33 ) }
    dend_3 { pt3dadd( -77.1291, -25.6178, -42.843, 0.81 ) }
    dend_3 { pt3dadd( -77.9676, -27.0025, -44.0668, 0.52 ) }
    dend_3 { pt3dadd( -78.6081, -28.0269, -45.0305, 0.74 ) }
    dend_3 { pt3dadd( -79.5367, -29.4783, -46.4102, 0.96 ) }
    dend_3 { pt3dadd( -80.2809, -30.591, -47.4269, 0.81 ) }
    dend_3 { pt3dadd( -81.3358, -32.0518, -48.7614, 0.66 ) }
    dend_3 { pt3dadd( -82.2445, -33.2175, -49.7619, 0.59 ) }
    dend_3 { pt3dadd( -82.8974, -33.9892, -50.348, 1.03 ) }
    dend_3 { pt3dadd( -83.4392, -34.64, -50.7751, 1.25 ) }
    dend_3 { pt3dadd( -84.2119, -35.6524, -51.2988, 1.25 ) }
    dend_3 { pt3dadd( -85.3, -37.3204, -52.1336, 0.81 ) }
    dend_3 { pt3dadd( -85.8623, -38.374, -52.6995, 0.52 ) }
    dend_3 { pt3dadd( -86.6469, -39.866, -53.7624, 0.52 ) }
    dend_3 { pt3dadd( -87.2393, -40.8738, -54.5733, 0.44 ) }
    dend_3 { pt3dadd( -87.5942, -41.424, -55.0697, 0.44 ) }
    dend_3 { pt3dadd( -88.6614, -43.0285, -56.5945, 0.96 ) }
    dend_3 { pt3dadd( -89.1151, -43.6904, -57.2287, 1.4 ) }
    dend_3 { pt3dadd( -90.2866, -45.1889, -58.9098, 0.88 ) }
    dend_3 { pt3dadd( -91.3208, -46.4361, -60.3448, 0.66 ) }
    dend_3 { pt3dadd( -92.7803, -48.2388, -62.33, 0.66 ) }
    dend_3 { pt3dadd( -93.7637, -49.6449, -63.852, 0.59 ) }
    dend_3 { pt3dadd( -94.7176, -51.2996, -65.5648, 1.77 ) }
    dend_3 { pt3dadd( -95.9963, -54.0464, -68.2625, 0.59 ) }
    dend_3 { pt3dadd( -96.3745, -55.0064, -69.1504, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_3 { pt3dadd( -96.8027, -56.1132, -70.1485, 0.74 ) }
    dend_3 { pt3dadd( -97.8621, -58.5567, -72.2106, 0.59 ) }
    dend_3 { pt3dadd( -98.4157, -59.6448, -73.0419, 0.59 ) }
    dend_3 { pt3dadd( -99.0353, -60.7462, -73.7431, 0.74 ) }
    dend_3 { pt3dadd( -99.9783, -62.3094, -74.5079, 0.74 ) }
    dend_3 { pt3dadd( -100.913, -63.6334, -75.1045, 0.74 ) }
    dend_3 { pt3dadd( -101.99, -65.0299, -75.8454, 0.52 ) }
    dend_3 { pt3dadd( -102.985, -66.1639, -76.4641, 0.37 ) }
    dend_3 { pt3dadd( -103.555, -66.7701, -76.865, 1.11 ) }
    dend_3 { pt3dadd( -103.939, -67.1316, -77.1714, 1.11 ) }
    dend_3 { pt3dadd( -104.638, -67.7168, -77.7715, 0.96 ) }
    dend_3 { pt3dadd( -107.66, -69.8186, -80.3036, 0.59 ) }
    dend_3 { pt3dadd( -108.426, -70.2236, -80.8466, 0.52 ) }
    dend_3 { pt3dadd( -109.207, -70.5173, -81.4075, 0.81 ) }
    dend_3 { pt3dadd( -110.478, -70.9302, -82.3136, 0.81 ) }
    dend_3 { pt3dadd( -111.606, -71.2597, -83.0954, 1.11 ) }
    dend_3 { pt3dadd( -112.822, -71.6205, -83.8855, 1.25 ) }
    dend_3 { pt3dadd( -114.008, -72.0089, -84.5489, 0.96 ) }
    dend_3 { pt3dadd( -116.622, -73.102, -86.2377, 0.52 ) }
    dend_3 { pt3dadd( -117.731, -73.6844, -87.022, 0.52 ) }
    dend_3 { pt3dadd( -118.606, -74.3005, -87.6974, 0.81 ) }
    dend_3 { pt3dadd( -119.46, -75.1527, -88.4692, 0.88 ) }
    dend_3 { pt3dadd( -119.883, -75.7533, -88.9361, 1.03 ) }
    dend_3 { pt3dadd( -120.437, -76.7868, -89.6328, 0.88 ) }
    dend_3 { pt3dadd( -120.934, -77.9216, -90.2733, 0.44 ) }
    dend_3 { pt3dadd( -121.434, -79.2208, -90.9664, 0.44 ) }
    dend_3 { pt3dadd( -122.241, -81.8918, -92.3339, 1.33 ) }
    dend_3 { pt3dadd( -122.985, -84.6732, -93.7308, 0.59 ) }
    dend_3 { pt3dadd( -123.243, -85.6745, -94.2655, 1.03 ) }
    dend_3 { pt3dadd( -123.426, -86.4004, -94.6599, 1.18 ) }
    dend_3 { pt3dadd( -123.712, -87.4715, -95.267, 0.81 ) }
    dend_3 { pt3dadd( -124.34, -89.452, -96.3989, 0.59 ) }
    dend_3 { pt3dadd( -124.852, -90.7292, -97.1443, 0.37 ) }
    dend_3 { pt3dadd( -125.819, -92.6181, -98.4273, 0.37 ) }
    dend_3 { pt3dadd( -126.12, -93.0655, -98.7878, 0.96 ) }
    dend_3 { pt3dadd( -126.384, -93.3859, -99.0767, 1.25 ) }
    dend_3 { pt3dadd( -126.769, -93.759, -99.4453, 1.25 ) }
    dend_3 { pt3dadd( -128.302, -94.9651, -100.657, 0.52 ) }
    dend_3 { pt3dadd( -129.378, -95.7519, -101.38, 0.52 ) }
    dend_3 { pt3dadd( -130.577, -96.6052, -102.016, 0.52 ) }
    dend_3 { pt3dadd( -130.917, -96.838, -102.185, 1.18 ) }
    dend_3 { pt3dadd( -131.494, -97.2327, -102.528, 1.18 ) }
    dend_3 { pt3dadd( -132.013, -97.5986, -102.852, 1.18 ) }
    dend_3 { pt3dadd( -132.87, -98.2389, -103.285, 0.88 ) }
    dend_3 { pt3dadd( -134.553, -99.4501, -104.358, 0.44 ) }
    dend_3 { pt3dadd( -134.793, -99.6205, -104.558, 0.81 ) }
    dend_3 { pt3dadd( -137.225, -101.345, -106.83, 0.52 ) }
    dend_3 { pt3dadd( -138.065, -101.964, -107.696, 0.81 ) }
    dend_3 { pt3dadd( -139.513, -103.078, -109.257, 0.44 ) }
    dend_3 { pt3dadd( -141.905, -105.037, -112.015, 0.74 ) }
    dend_3 { pt3dadd( -142.946, -105.944, -113.228, 0.44 ) }
    dend_3 { pt3dadd( -143.434, -106.417, -113.773, 1.33 ) }
    dend_3 { pt3dadd( -143.763, -106.788, -114.146, 1.33 ) }
    dend_3 { pt3dadd( -144.445, -107.608, -114.997, 0.74 ) }
    dend_3 { pt3dadd( -145.696, -109.068, -116.57, 0.44 ) }
    dend_3 { pt3dadd( -146.064, -109.479, -116.935, 0.74 ) }
    dend_3 { pt3dadd( -146.686, -110.067, -117.552, 0.74 ) }
    dend_3 { pt3dadd( -148.169, -111.004, -119.181, 0.37 ) }
    dend_3 { pt3dadd( -148.818, -111.157, -119.939, 0.37 ) }
    dend_3 { pt3dadd( -149.537, -111.062, -120.842, 0.66 ) }
    dend_3 { pt3dadd( -150.071, -110.896, -121.488, 0.88 ) }
    dend_3 { pt3dadd( -150.546, -110.728, -122.047, 0.88 ) }
    dend_3 { pt3dadd( -151.982, -110.266, -123.67, 0.59 ) }
    dend_3 { pt3dadd( -152.797, -110.058, -124.486, 0.29 ) }
    dend_3 { pt3dadd( -153.549, -109.976, -125.185, 0.29 ) }
    dend_3 { pt3dadd( -154.973, -110.083, -126.371, 0.96 ) }
    dend_3 { pt3dadd( -155.33, -110.174, -126.623, 1.18 ) }
    dend_3 { pt3dadd( -157.136, -111.018, -127.812, 0.59 ) }
    dend_3 { pt3dadd( -157.899, -111.54, -128.436, 0.81 ) }
    dend_3 { pt3dadd( -158.501, -112.005, -129.0, 0.81 ) }
    dend_3 { pt3dadd( -159.304, -112.629, -129.789, 0.37 ) }
    dend_3 { pt3dadd( -160.228, -113.35, -130.733, 0.37 ) }
    dend_3 { pt3dadd( -161.609, -114.442, -132.217, 1.11 ) }
    dend_3 { pt3dadd( -164.292, -116.607, -135.123, 0.52 ) }
    dend_3 { pt3dadd( -164.769, -116.996, -135.655, 0.52 ) }
    dend_3 { pt3dadd( -165.79, -117.797, -136.795, 0.44 ) }
    dend_3 { pt3dadd( -166.324, -118.182, -137.423, 1.47 ) }
    dend_3 { pt3dadd( -168.67, -119.67, -140.241, 0.59 ) }
    dend_3 { pt3dadd( -169.334, -120.035, -141.015, 0.88 ) }
    dend_3 { pt3dadd( -170.121, -120.454, -141.992, 0.88 ) }
    dend_3 { pt3dadd( -171.552, -121.186, -144.062, 0.52 ) }
    dend_3 { pt3dadd( -172.806, -121.774, -146.047, 0.74 ) }
    dend_3 { pt3dadd( -173.327, -121.972, -146.894, 0.96 ) }
    dend_3 { pt3dadd( -173.664, -122.084, -147.429, 0.96 ) }
    dend_3 { pt3dadd( -175.325, -122.705, -150.031, 0.29 ) }
    dend_3 { pt3dadd( -176.761, -123.287, -152.429, 0.96 ) }
    dend_3 { pt3dadd( -177.239, -123.491, -153.215, 1.18 ) }
    dend_3 { pt3dadd( -178.792, -124.213, -155.772, 0.37 ) }
    dend_3 { pt3dadd( -179.469, -124.579, -156.931, 0.37 ) }
    dend_3 { pt3dadd( -179.971, -124.864, -157.8, 0.74 ) }
    dend_3 { pt3dadd( -182.521, -126.218, -162.261, 0.88 ) }
    dend_3 { pt3dadd( -182.979, -126.413, -163.07, 0.88 ) }
    dend_3 { pt3dadd( -184.311, -126.891, -165.439, 0.37 ) }
    dend_3 { pt3dadd( -184.812, -127.05, -166.293, 0.37 ) }
    dend_3 { pt3dadd( -185.463, -127.231, -167.327, 0.37 ) }
    dend_3 { pt3dadd( -186.357, -127.486, -168.563, 0.37 ) }
    dend_3 { pt3dadd( -187.763, -128.027, -170.096, 0.74 ) }
    dend_3 { pt3dadd( -189.953, -128.999, -172.419, 0.44 ) }
    dend_3 { pt3dadd( -190.522, -129.254, -172.955, 1.03 ) }
    dend_3 { pt3dadd( -191.068, -129.541, -173.472, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_3 { pt3dadd( -191.48, -129.836, -173.875, 1.03 ) }
    dend_3 { pt3dadd( -192.602, -130.922, -174.915, 0.44 ) }
    dend_3 { pt3dadd( -193.364, -131.804, -175.58, 0.59 ) }
    dend_3 { pt3dadd( -194.216, -132.766, -176.23, 0.37 ) }
    dend_3 { pt3dadd( -195.156, -133.758, -176.981, 0.29 ) }
    dend_3 { pt3dadd( -195.663, -134.267, -177.454, 0.44 ) }
    dend_3 { pt3dadd( -196.041, -134.67, -177.853, 0.44 ) }
    dend_3 { pt3dadd( -197.201, -135.971, -179.164, 0.29 ) }
    dend_3 { pt3dadd( -197.678, -136.513, -179.725, 0.52 ) }
    dend_3 { pt3dadd( -197.945, -136.787, -180.065, 0.74 ) }
    dend_3 { pt3dadd( -199.233, -137.692, -181.647, 0.29 ) }
    dend_3 { pt3dadd( -199.775, -138.0, -182.31, 0.88 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 12/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -29.231, 6.28473, -7.34455, 0.88 ) }
    dend_2 { pt3dadd( -30.0055, 9.04609, -7.81626, 0.88 ) }
    dend_2 { pt3dadd( -30.3927, 10.3283, -7.93203, 0.52 ) }
    dend_2 { pt3dadd( -30.6491, 11.0773, -7.96917, 0.88 ) }
    dend_2 { pt3dadd( -31.1794, 12.4509, -8.00746, 0.88 ) }
    dend_2 { pt3dadd( -32.1418, 14.6635, -8.04272, 0.52 ) }
    dend_2 { pt3dadd( -32.7678, 15.8554, -8.05279, 0.52 ) }
    dend_2 { pt3dadd( -33.6023, 17.2457, -7.94089, 0.44 ) }
    dend_2 { pt3dadd( -34.3143, 18.1764, -7.85083, 0.59 ) }
    dend_2 { pt3dadd( -35.0772, 19.0284, -7.72553, 0.74 ) }
    dend_2 { pt3dadd( -35.728, 19.6525, -7.5997, 0.74 ) }
    dend_2 { pt3dadd( -37.2517, 20.8964, -7.35531, 1.25 ) }
    dend_2 { pt3dadd( -37.7621, 21.2593, -7.29608, 1.25 ) }
    dend_2 { pt3dadd( -38.8267, 21.8846, -7.24495, 0.66 ) }
    dend_2 { pt3dadd( -40.1691, 22.5749, -7.25916, 0.81 ) }
    dend_2 { pt3dadd( -40.7251, 22.8311, -7.2761, 0.66 ) }
    dend_2 { pt3dadd( -41.9886, 23.3735, -7.34527, 0.88 ) }
    dend_2 { pt3dadd( -44.1425, 24.2263, -7.51509, 0.88 ) }
    dend_2 { pt3dadd( -45.0414, 24.5428, -7.60639, 0.66 ) }
    dend_2 { pt3dadd( -45.6183, 24.7157, -7.68575, 0.52 ) }
    dend_2 { pt3dadd( -46.8405, 25.0162, -7.85468, 1.03 ) }
    dend_2 { pt3dadd( -47.3239, 25.1618, -7.84228, 1.33 ) }
    dend_2 { pt3dadd( -47.6604, 25.2986, -7.77918, 1.55 ) }
    dend_2 { pt3dadd( -47.9935, 25.4591, -7.69396, 1.55 ) }
    dend_2 { pt3dadd( -48.5228, 25.741, -7.56857, 1.33 ) }
    dend_2 { pt3dadd( -49.4039, 26.2529, -7.4013, 0.74 ) }
    dend_2 { pt3dadd( -50.449, 26.918, -7.24241, 0.59 ) }
    dend_2 { pt3dadd( -51.4948, 27.7205, -7.10099, 0.59 ) }
    dend_2 { pt3dadd( -52.1604, 28.3466, -7.03047, 0.59 ) }
    dend_2 { pt3dadd( -52.5105, 28.7588, -7.00237, 1.11 ) }
    dend_2 { pt3dadd( -53.0966, 29.6625, -7.0124, 1.55 ) }
    dend_2 { pt3dadd( -53.301, 30.1103, -7.05101, 1.77 ) }
    dend_2 { pt3dadd( -53.6983, 31.5295, -7.14704, 0.74 ) }
    dend_2 { pt3dadd( -53.8489, 32.4335, -7.17934, 0.96 ) }
    dend_2 { pt3dadd( -53.9217, 33.1299, -7.18725, 0.74 ) }
    dend_2 { pt3dadd( -54.003, 34.1197, -7.16211, 0.52 ) }
    dend_2 { pt3dadd( -54.0676, 34.8745, -7.11278, 0.44 ) }
    dend_2 { pt3dadd( -54.3784, 37.0005, -6.85719, 0.88 ) }
    dend_2 { pt3dadd( -54.5006, 37.6065, -6.78026, 1.11 ) }
    dend_2 { pt3dadd( -54.6353, 38.1606, -6.72324, 1.11 ) }
    dend_2 { pt3dadd( -54.8966, 39.1423, -6.66101, 0.74 ) }
    dend_2 { pt3dadd( -55.162, 40.0201, -6.64249, 0.44 ) }
    dend_2 { pt3dadd( -55.4906, 40.9728, -6.72839, 0.29 ) }
    dend_2 { pt3dadd( -55.9037, 42.0935, -6.9746, 0.59 ) }
    dend_2 { pt3dadd( -56.1583, 42.8242, -7.14057, 0.44 ) }
    dend_2 { pt3dadd( -56.4085, 43.5835, -7.32036, 1.25 ) }
    dend_2 { pt3dadd( -56.5196, 43.9531, -7.4095, 1.25 ) }
    dend_2 { pt3dadd( -56.6504, 44.4436, -7.50506, 0.81 ) }
    dend_2 { pt3dadd( -56.8405, 45.1563, -7.59779, 0.29 ) }
    dend_2 { pt3dadd( -57.0993, 45.9613, -7.64677, 0.59 ) }
    dend_2 { pt3dadd( -57.2694, 46.4273, -7.67926, 0.74 ) }
    dend_2 { pt3dadd( -57.4392, 46.8279, -7.71415, 0.88 ) }
    dend_2 { pt3dadd( -57.6773, 47.318, -7.76556, 0.88 ) }
    dend_2 { pt3dadd( -58.0145, 47.93, -7.84526, 0.44 ) }
    dend_2 { pt3dadd( -58.3559, 48.5043, -7.93687, 0.81 ) }
    dend_2 { pt3dadd( -58.6837, 49.0331, -8.02091, 0.81 ) }
    dend_2 { pt3dadd( -59.1937, 49.8349, -8.14805, 0.37 ) }
    dend_2 { pt3dadd( -59.5005, 50.3135, -8.2141, 0.37 ) }
    dend_2 { pt3dadd( -60.1193, 51.2847, -8.31008, 0.29 ) }
    dend_2 { pt3dadd( -60.7699, 52.3079, -8.36048, 0.29 ) }
    dend_2 { pt3dadd( -61.0279, 52.7204, -8.36468, 0.29 ) }
    dend_2 { pt3dadd( -61.4289, 53.3799, -8.35262, 0.88 ) }
    dend_2 { pt3dadd( -61.6884, 53.8363, -8.33401, 1.18 ) }
    dend_2 { pt3dadd( -62.0695, 54.5336, -8.28669, 1.18 ) }
    dend_2 { pt3dadd( -62.4336, 55.1789, -8.20694, 0.59 ) }
    dend_2 { pt3dadd( -62.8062, 55.8187, -8.09046, 0.59 ) }
    dend_2 { pt3dadd( -63.1729, 56.4508, -7.96119, 0.52 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 79/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 27.1868, -100.892, 20.7076, 0.29 ) }
    dend_65 { pt3dadd( 26.6594, -101.514, 20.9255, 0.29 ) }
    dend_65 { pt3dadd( 26.1025, -102.17, 21.1556, 0.15 ) }
    dend_65 { pt3dadd( 25.8408, -102.478, 21.2638, 0.15 ) }
    dend_65 { pt3dadd( 25.2773, -103.142, 21.4966, 0.44 ) }
    dend_65 { pt3dadd( 24.9425, -103.536, 21.635, 0.44 ) }
    dend_65 { pt3dadd( 24.5031, -104.054, 21.8166, 0.74 ) }
    dend_65 { pt3dadd( 19.7723, -111.084, 23.006, 0.74 ) }
    dend_65 { pt3dadd( 15.8567, -118.28, 25.5488, 0.74 ) }
    dend_65 { pt3dadd( 13.2006, -126.283, 27.406, 0.74 ) }
    dend_65 { pt3dadd( 11.0133, -134.587, 28.4765, 0.74 ) }
    dend_65 { pt3dadd( 9.47991, -143.073, 27.7942, 0.74 ) }
    dend_65 { pt3dadd( 9.23574, -151.413, 25.6287, 0.74 ) }
    dend_65 { pt3dadd( 9.524, -159.41, 22.5329, 0.74 ) }
    dend_65 { pt3dadd( 9.49937, -167.706, 20.2149, 0.74 ) }
    dend_65 { pt3dadd( 8.15477, -176.076, 18.5911, 0.74 ) }
    dend_65 { pt3dadd( 7.10187, -184.137, 15.8024, 0.74 ) }
    dend_65 { pt3dadd( 6.35054, -192.189, 12.9018, 0.74 ) }
    dend_65 { pt3dadd( 5.5525, -200.682, 11.5184, 0.74 ) }
    dend_65 { pt3dadd( 3.68307, -209.049, 10.4549, 0.74 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 99/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 27.1868, -100.892, 20.7076, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_64 { pt3dadd( 28.0049, -100.404, 20.6428, 0.22 ) }
    dend_64 { pt3dadd( 28.9221, -99.8568, 20.5703, 0.59 ) }
    dend_64 { pt3dadd( 29.3011, -99.6306, 20.5403, 0.59 ) }
    dend_64 { pt3dadd( 30.1032, -99.152, 20.4769, 0.37 ) }
    dend_64 { pt3dadd( 30.6377, -98.8332, 20.4346, 0.37 ) }
    dend_64 { pt3dadd( 39.7409, -94.7973, 21.0458, 0.37 ) }
    dend_64 { pt3dadd( 47.8141, -88.8085, 20.4477, 0.37 ) }
    dend_64 { pt3dadd( 56.3693, -83.6235, 21.121, 0.37 ) }
    dend_64 { pt3dadd( 64.7453, -78.6028, 23.3518, 0.37 ) }
    dend_64 { pt3dadd( 72.2868, -72.5358, 26.1308, 0.37 ) }
    dend_64 { pt3dadd( 78.9775, -66.4424, 30.5459, 0.37 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 11/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 4.40558, -52.8167, 32.2186, 0.52 ) }
    dend_60 { pt3dadd( 3.85811, -53.8839, 31.7525, 0.52 ) }
    dend_60 { pt3dadd( 3.35998, -54.8549, 31.3283, 0.52 ) }
    dend_60 { pt3dadd( 2.85854, -55.8324, 30.9014, 0.44 ) }
    dend_60 { pt3dadd( 2.50631, -56.519, 30.6015, 0.29 ) }
    dend_60 { pt3dadd( 2.19308, -57.1296, 30.3348, 0.74 ) }
    dend_60 { pt3dadd( -2.82748, -66.4035, 26.8405, 0.74 ) }
    dend_60 { pt3dadd( -7.67333, -75.7346, 23.234, 0.74 ) }
    dend_60 { pt3dadd( -12.4443, -84.4252, 18.2995, 0.74 ) }
    dend_60 { pt3dadd( -18.0382, -92.4526, 13.2187, 0.74 ) }
    dend_60 { pt3dadd( -24.1851, -99.1905, 7.16129, 0.74 ) }
    dend_60 { pt3dadd( -31.3717, -104.786, 1.19373, 0.74 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 23/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 4.40558, -52.8167, 32.2186, 0.29 ) }
    dend_59 { pt3dadd( 5.12024, -52.8823, 31.7313, 0.29 ) }
    dend_59 { pt3dadd( 6.27655, -52.9151, 31.0152, 0.29 ) }
    dend_59 { pt3dadd( 6.78542, -52.8972, 30.7238, 0.44 ) }
    dend_59 { pt3dadd( 7.56097, -52.8049, 30.2905, 0.44 ) }
    dend_59 { pt3dadd( 8.20501, -52.6584, 29.9342, 0.37 ) }
    dend_59 { pt3dadd( 8.61564, -52.5209, 29.7001, 0.22 ) }
    dend_59 { pt3dadd( 8.89969, -52.2589, 29.5395, 0.59 ) }
    dend_59 { pt3dadd( 8.98013, -51.8907, 29.4839, 0.74 ) }
    dend_59 { pt3dadd( 8.9006, -51.0647, 29.4529, 0.22 ) }
    dend_59 { pt3dadd( 8.68058, -50.3013, 29.4728, 0.22 ) }
    dend_59 { pt3dadd( 8.29071, -49.3745, 29.5201, 0.22 ) }
    dend_59 { pt3dadd( 7.81383, -48.4989, 29.5608, 0.81 ) }
    dend_59 { pt3dadd( 13.3936, -42.9706, 26.2647, 0.81 ) }
    dend_59 { pt3dadd( 18.6106, -36.7013, 23.6484, 0.81 ) }
    // Section: dend_47, id: dend_47, parent: dend_41 (entry count 38/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 12.0998, -179.813, 21.3301, 0.37 ) }
    dend_47 { pt3dadd( 21.2238, -184.982, 21.526, 0.37 ) }
    dend_47 { pt3dadd( 29.6769, -191.288, 21.4556, 0.37 ) }
    dend_47 { pt3dadd( 38.6187, -196.765, 20.8703, 0.37 ) }
    dend_47 { pt3dadd( 47.3566, -202.611, 20.4637, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 43/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 12.0998, -179.813, 21.3301, 0.22 ) }
    dend_42 { pt3dadd( 22.3668, -186.482, 26.1871, 0.37 ) }
    dend_42 { pt3dadd( 31.3373, -193.714, 32.6271, 0.37 ) }
    dend_42 { pt3dadd( 40.6161, -202.316, 36.6474, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 47/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -53.03, -169.74, 8.72667, 0.37 ) }
    dend_39 { pt3dadd( -50.7015, -178.269, 7.24678, 0.37 ) }
    dend_39 { pt3dadd( -47.5034, -186.367, 5.28184, 0.37 ) }
    dend_39 { pt3dadd( -45.4108, -195.068, 4.50691, 0.37 ) }
    dend_39 { pt3dadd( -42.4981, -203.388, 2.98205, 0.37 ) }
    dend_39 { pt3dadd( -39.8797, -211.969, 2.81514, 0.37 ) }
    dend_39 { pt3dadd( -36.3201, -220.158, 2.39222, 0.37 ) }
    dend_39 { pt3dadd( -32.6516, -228.308, 2.46653, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -53.03, -169.74, 8.72667, 0.22 ) }
    dend_36 { pt3dadd( -51.334, -175.52, 8.04036, 0.37 ) }
    dend_36 { pt3dadd( -48.6463, -180.909, 7.7656, 0.37 ) }
    dend_36 { pt3dadd( -46.7369, -186.497, 6.46675, 0.37 ) }
    // Section: dend_24, id: dend_24, parent: dend_16 (entry count 59/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 117.413, 382.228, -57.3801, 0.37 ) }
    dend_24 { pt3dadd( 118.822, 384.078, -56.8019, 0.37 ) }
    dend_24 { pt3dadd( 119.383, 384.668, -56.6424, 0.37 ) }
    dend_24 { pt3dadd( 120.37, 385.476, -56.4543, 0.29 ) }
    dend_24 { pt3dadd( 121.094, 385.959, -56.3338, 0.29 ) }
    dend_24 { pt3dadd( 122.037, 386.539, -56.1567, 0.74 ) }
    dend_24 { pt3dadd( 122.911, 387.109, -55.9719, 0.96 ) }
    dend_24 { pt3dadd( 123.598, 387.545, -55.8641, 0.52 ) }
    dend_24 { pt3dadd( 124.71, 388.302, -55.6844, 0.44 ) }
    dend_24 { pt3dadd( 125.774, 389.105, -55.4668, 0.37 ) }
    dend_24 { pt3dadd( 126.353, 389.702, -55.303, 0.29 ) }
    dend_24 { pt3dadd( 126.969, 390.597, -55.0696, 0.29 ) }
    dend_24 { pt3dadd( 127.329, 391.266, -54.9212, 0.29 ) }
    dend_24 { pt3dadd( 127.92, 392.342, -54.7064, 0.74 ) }
    dend_24 { pt3dadd( 128.587, 393.447, -54.5116, 1.11 ) }
    dend_24 { pt3dadd( 129.243, 394.409, -54.3751, 1.11 ) }
    dend_24 { pt3dadd( 129.888, 395.216, -54.2795, 0.81 ) }
    dend_24 { pt3dadd( 131.23, 396.686, -54.1168, 0.37 ) }
    dend_24 { pt3dadd( 132.381, 397.861, -53.9931, 0.37 ) }
    dend_24 { pt3dadd( 133.137, 398.625, -53.8859, 0.37 ) }
    dend_24 { pt3dadd( 133.788, 399.313, -53.8015, 0.37 ) }
    dend_24 { pt3dadd( 134.189, 399.769, -53.7422, 1.03 ) }
    dend_24 { pt3dadd( 134.829, 400.584, -53.6095, 1.33 ) }
    dend_24 { pt3dadd( 135.122, 401.014, -53.5098, 1.33 ) }
    dend_24 { pt3dadd( 136.206, 402.927, -52.8634, 0.29 ) }
    dend_24 { pt3dadd( 136.847, 404.222, -52.3326, 0.29 ) }
    dend_24 { pt3dadd( 137.483, 405.62, -51.6993, 0.88 ) }
    dend_24 { pt3dadd( 137.841, 406.49, -51.2942, 0.88 ) }
    dend_24 { pt3dadd( 138.353, 407.803, -50.6867, 0.74 ) }
    dend_24 { pt3dadd( 139.158, 409.803, -49.8283, 0.66 ) }
    dend_24 { pt3dadd( 139.548, 410.796, -49.5005, 0.74 ) }
    dend_24 { pt3dadd( 140.058, 412.219, -49.1788, 0.44 ) }
    dend_24 { pt3dadd( 140.382, 413.298, -49.1018, 0.44 ) }
    dend_24 { pt3dadd( 140.723, 414.647, -49.2242, 0.37 ) }
    dend_24 { pt3dadd( 141.195, 416.878, -49.7225, 0.37 ) }
    dend_24 { pt3dadd( 141.587, 418.744, -50.3129, 0.37 ) }
    dend_24 { pt3dadd( 141.896, 420.295, -50.8824, 0.37 ) }
    dend_24 { pt3dadd( 142.176, 422.135, -51.6599, 1.77 ) }
    dend_24 { pt3dadd( 142.262, 423.174, -52.1493, 1.77 ) }
    dend_24 { pt3dadd( 142.219, 424.041, -52.5997, 1.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 99/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 117.413, 382.228, -57.3801, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_17 { pt3dadd( 118.502, 383.662, -60.0763, 1.11 ) }
    dend_17 { pt3dadd( 119.727, 384.938, -62.7862, 0.74 ) }
    dend_17 { pt3dadd( 120.373, 385.381, -64.0921, 0.29 ) }
    dend_17 { pt3dadd( 121.059, 385.814, -65.5718, 0.44 ) }
    dend_17 { pt3dadd( 121.732, 386.327, -67.1937, 0.37 ) }
    dend_17 { pt3dadd( 122.546, 387.074, -69.245, 0.74 ) }
    dend_17 { pt3dadd( 122.86, 387.472, -70.0649, 0.88 ) }
    dend_17 { pt3dadd( 123.687, 388.44, -72.0279, 0.29 ) }
    dend_17 { pt3dadd( 124.424, 389.194, -73.604, 0.44 ) }
    dend_17 { pt3dadd( 125.277, 389.977, -75.1223, 0.29 ) }
    dend_17 { pt3dadd( 125.811, 390.484, -76.0266, 0.96 ) }
    dend_17 { pt3dadd( 126.264, 390.991, -76.7201, 1.25 ) }
    dend_17 { pt3dadd( 126.578, 391.342, -77.144, 1.25 ) }
    dend_17 { pt3dadd( 127.941, 392.792, -78.6557, 0.37 ) }
    dend_17 { pt3dadd( 128.736, 393.509, -79.3788, 0.74 ) }
    dend_17 { pt3dadd( 130.483, 394.873, -80.7848, 0.88 ) }
    dend_17 { pt3dadd( 131.092, 395.322, -81.2508, 1.11 ) }
    dend_17 { pt3dadd( 131.98, 395.983, -81.882, 0.52 ) }
    dend_17 { pt3dadd( 132.596, 396.461, -82.2718, 0.52 ) }
    dend_17 { pt3dadd( 133.29, 397.022, -82.634, 0.29 ) }
    dend_17 { pt3dadd( 133.894, 397.487, -82.92, 0.29 ) }
    dend_17 { pt3dadd( 134.904, 398.167, -83.2953, 1.25 ) }
    dend_17 { pt3dadd( 135.15, 398.323, -83.3947, 1.55 ) }
    dend_17 { pt3dadd( 135.594, 398.592, -83.5804, 1.55 ) }
    dend_17 { pt3dadd( 136.731, 399.24, -84.0675, 0.37 ) }
    dend_17 { pt3dadd( 138.044, 399.913, -84.5974, 0.44 ) }
    dend_17 { pt3dadd( 139.133, 400.41, -84.9875, 0.81 ) }
    dend_17 { pt3dadd( 139.383, 400.5, -85.0594, 1.11 ) }
    dend_17 { pt3dadd( 140.194, 400.77, -85.2785, 1.11 ) }
    dend_17 { pt3dadd( 141.633, 401.182, -85.6059, 0.29 ) }
    dend_17 { pt3dadd( 142.919, 401.466, -85.79, 0.37 ) }
    dend_17 { pt3dadd( 143.777, 401.561, -85.8688, 0.37 ) }
    dend_17 { pt3dadd( 144.71, 401.58, -85.9572, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -68.0048, 125.972, -120.364, 0.44 ) }
    dend_7 { pt3dadd( -67.3543, 126.603, -120.578, 0.44 ) }
    dend_7 { pt3dadd( -66.7889, 127.191, -120.878, 0.29 ) }
    dend_7 { pt3dadd( -66.4778, 127.555, -121.099, 0.44 ) }
    dend_7 { pt3dadd( -66.137, 128.016, -121.388, 0.44 ) }
    dend_7 { pt3dadd( -65.9185, 128.358, -121.596, 0.81 ) }
    dend_7 { pt3dadd( -65.6405, 128.847, -121.895, 0.81 ) }
    dend_7 { pt3dadd( -65.371, 129.427, -122.319, 0.52 ) }
    dend_7 { pt3dadd( -65.2721, 129.793, -122.621, 0.37 ) }
    dend_7 { pt3dadd( -65.2177, 130.18, -122.949, 0.37 ) }
    dend_7 { pt3dadd( -65.1913, 130.563, -123.287, 0.81 ) }
    dend_7 { pt3dadd( -65.1662, 130.916, -123.595, 0.88 ) }
    dend_7 { pt3dadd( -65.0881, 131.472, -124.063, 0.88 ) }
    dend_7 { pt3dadd( -64.8957, 132.043, -124.598, 0.52 ) }
    dend_7 { pt3dadd( -64.7533, 132.269, -124.86, 0.81 ) }
    dend_7 { pt3dadd( -64.2968, 132.707, -125.487, 0.52 ) }
    dend_7 { pt3dadd( -63.9763, 132.925, -125.834, 0.52 ) }
    dend_7 { pt3dadd( -63.5193, 133.169, -126.223, 0.52 ) }
    dend_7 { pt3dadd( -62.5488, 133.609, -126.91, 0.52 ) }
    dend_7 { pt3dadd( -62.0621, 133.81, -127.265, 0.52 ) }
    dend_7 { pt3dadd( -61.6105, 133.983, -127.615, 0.81 ) }
    dend_7 { pt3dadd( -61.2712, 134.114, -127.883, 1.03 ) }
    dend_7 { pt3dadd( -60.9348, 134.251, -128.16, 0.59 ) }
    dend_7 { pt3dadd( -60.2547, 134.569, -128.732, 0.66 ) }
    dend_7 { pt3dadd( -59.1319, 135.217, -129.653, 0.52 ) }
    dend_7 { pt3dadd( -58.7115, 135.5, -130.001, 0.52 ) }
    dend_7 { pt3dadd( -58.2321, 135.877, -130.436, 1.11 ) }
    dend_7 { pt3dadd( -58.0099, 136.098, -130.656, 1.11 ) }
    dend_7 { pt3dadd( -57.8299, 136.298, -130.838, 1.25 ) }
    dend_7 { pt3dadd( -57.501, 136.778, -131.151, 0.66 ) }
    dend_7 { pt3dadd( -57.2688, 137.357, -131.349, 0.44 ) }
    dend_7 { pt3dadd( -57.1681, 137.846, -131.491, 0.44 ) }
    dend_7 { pt3dadd( -57.1413, 138.662, -131.729, 0.81 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 66/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -68.0048, 125.972, -120.364, 0.44 ) }
    dend_6 { pt3dadd( -69.2034, 127.421, -122.91, 0.44 ) }
    dend_6 { pt3dadd( -69.7557, 128.03, -124.08, 0.37 ) }
    dend_6 { pt3dadd( -70.3689, 128.688, -125.366, 0.37 ) }
    dend_6 { pt3dadd( -70.9086, 129.22, -126.345, 0.88 ) }
    dend_6 { pt3dadd( -71.5497, 129.819, -127.366, 0.88 ) }
    dend_6 { pt3dadd( -72.7177, 130.8, -128.987, 0.59 ) }
    dend_6 { pt3dadd( -73.8641, 131.738, -130.404, 0.22 ) }
    dend_6 { pt3dadd( -74.5371, 132.235, -131.287, 0.66 ) }
    dend_6 { pt3dadd( -75.502, 132.882, -132.579, 0.37 ) }
    dend_6 { pt3dadd( -76.0478, 133.237, -133.305, 0.29 ) }
    dend_6 { pt3dadd( -77.0093, 133.946, -134.778, 0.29 ) }
    dend_6 { pt3dadd( -77.9056, 134.799, -136.541, 0.66 ) }
    dend_6 { pt3dadd( -78.743, 135.885, -138.902, 1.03 ) }
    dend_6 { pt3dadd( -78.9434, 136.209, -139.606, 1.33 ) }
    dend_6 { pt3dadd( -79.0648, 136.444, -140.117, 1.33 ) }
    dend_6 { pt3dadd( -79.5674, 137.536, -142.426, 0.44 ) }
    dend_6 { pt3dadd( -80.0538, 138.667, -144.825, 0.29 ) }
    dend_6 { pt3dadd( -80.3433, 139.373, -146.269, 0.59 ) }
    dend_6 { pt3dadd( -80.5727, 139.965, -147.487, 0.59 ) }
    dend_6 { pt3dadd( -80.6824, 140.29, -148.155, 0.88 ) }
    dend_6 { pt3dadd( -80.8748, 140.867, -149.323, 0.88 ) }
    dend_6 { pt3dadd( -81.4612, 142.258, -152.157, 0.29 ) }
    dend_6 { pt3dadd( -81.6336, 142.76, -153.135, 0.29 ) }
    dend_6 { pt3dadd( -81.7479, 143.199, -153.949, 0.29 ) }
    dend_6 { pt3dadd( -81.8891, 143.889, -155.228, 0.96 ) }
    dend_6 { pt3dadd( -82.0045, 144.411, -156.147, 0.96 ) }
    dend_6 { pt3dadd( -82.4936, 146.077, -158.74, 0.29 ) }
    dend_6 { pt3dadd( -82.8912, 147.013, -159.988, 0.29 ) }
    dend_6 { pt3dadd( -83.1081, 147.383, -160.466, 0.29 ) }
    dend_6 { pt3dadd( -83.5924, 148.118, -161.324, 0.29 ) }
    dend_6 { pt3dadd( -84.0334, 148.759, -162.019, 0.29 ) }
    dend_6 { pt3dadd( -84.5235, 149.508, -162.752, 0.81 ) }
    dend_6 { pt3dadd( -84.9294, 150.169, -163.37, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_6 { pt3dadd( -85.9114, 151.79, -165.028, 0.29 ) }
    dend_6 { pt3dadd( -86.4102, 152.643, -165.92, 0.59 ) }
    dend_6 { pt3dadd( -86.7778, 153.303, -166.597, 0.59 ) }
    dend_6 { pt3dadd( -87.1588, 154.01, -167.3, 0.29 ) }
    dend_6 { pt3dadd( -87.7432, 155.156, -168.419, 0.29 ) }
    dend_6 { pt3dadd( -88.1223, 156.024, -169.24, 0.29 ) }
    dend_6 { pt3dadd( -88.5201, 157.026, -170.135, 0.29 ) }
    dend_6 { pt3dadd( -88.8408, 157.829, -170.892, 0.29 ) }
    dend_6 { pt3dadd( -89.2398, 158.866, -171.828, 0.29 ) }
    dend_6 { pt3dadd( -89.4349, 159.373, -172.244, 0.29 ) }
    dend_6 { pt3dadd( -89.9796, 160.729, -173.261, 0.88 ) }
    dend_6 { pt3dadd( -90.2013, 161.341, -173.688, 1.11 ) }
    dend_6 { pt3dadd( -90.8517, 163.613, -175.192, 0.29 ) }
    dend_6 { pt3dadd( -91.0664, 164.479, -175.807, 0.59 ) }
    dend_6 { pt3dadd( -91.3363, 165.613, -176.685, 0.29 ) }
    dend_6 { pt3dadd( -91.4953, 166.179, -177.138, 0.29 ) }
    dend_6 { pt3dadd( -91.7506, 167.062, -177.804, 0.29 ) }
    dend_6 { pt3dadd( -91.9413, 167.802, -178.319, 0.29 ) }
    dend_6 { pt3dadd( -92.4037, 169.433, -179.476, 0.66 ) }
    dend_6 { pt3dadd( -92.7089, 170.192, -180.106, 0.66 ) }
    dend_6 { pt3dadd( -93.3497, 171.634, -181.548, 0.37 ) }
    dend_6 { pt3dadd( -93.7428, 172.463, -182.46, 0.37 ) }
    dend_6 { pt3dadd( -94.3934, 173.526, -183.747, 0.37 ) }
    dend_6 { pt3dadd( -95.2047, 174.642, -185.15, 0.37 ) }
    dend_6 { pt3dadd( -96.0676, 175.752, -186.45, 0.37 ) }
    dend_6 { pt3dadd( -97.3718, 177.352, -188.294, 0.29 ) }
    dend_6 { pt3dadd( -97.753, 177.786, -188.84, 0.29 ) }
    dend_6 { pt3dadd( -98.7221, 178.796, -190.236, 0.29 ) }
    dend_6 { pt3dadd( -99.1696, 179.252, -190.889, 0.29 ) }
    dend_6 { pt3dadd( -100.117, 180.411, -192.253, 1.4 ) }
    dend_6 { pt3dadd( -100.327, 180.713, -192.525, 1.4 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 31/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 47.3566, -202.611, 20.4637, 0.37 ) }
    dend_49 { pt3dadd( 56.3562, -208.299, 21.7256, 0.37 ) }
    dend_49 { pt3dadd( 64.9812, -214.727, 22.0381, 0.37 ) }
    dend_49 { pt3dadd( 74.029, -220.456, 22.5875, 0.37 ) }
    dend_49 { pt3dadd( 82.8104, -226.605, 21.8425, 0.37 ) }
    dend_49 { pt3dadd( 91.1579, -233.433, 21.8636, 0.37 ) }
    dend_49 { pt3dadd( 100.458, -238.656, 21.033, 0.37 ) }
    dend_49 { pt3dadd( 109.322, -244.044, 18.3808, 0.37 ) }
    dend_49 { pt3dadd( 117.708, -250.704, 17.1974, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 47.3566, -202.611, 20.4637, 0.22 ) }
    dend_48 { pt3dadd( 56.7689, -209.111, 18.5151, 0.37 ) }
    dend_48 { pt3dadd( 67.1186, -214.084, 17.4137, 0.37 ) }
    dend_48 { pt3dadd( 76.9595, -219.312, 14.4056, 0.37 ) }
    dend_48 { pt3dadd( 86.9158, -223.012, 10.0326, 0.37 ) }
    dend_48 { pt3dadd( 96.2698, -227.897, 5.39824, 0.37 ) }
    dend_48 { pt3dadd( 105.903, -233.507, 2.34566, 0.37 ) }
    dend_48 { pt3dadd( 115.051, -240.663, 1.55049, 0.37 ) }
    dend_48 { pt3dadd( 124.159, -247.599, -0.479411, 0.37 ) }
    dend_48 { pt3dadd( 134.797, -251.929, -1.26509, 0.37 ) }
    dend_48 { pt3dadd( 144.967, -257.418, -1.0179, 0.37 ) }
    dend_48 { pt3dadd( 155.875, -260.345, 1.00437, 0.37 ) }
    dend_48 { pt3dadd( 166.891, -262.277, 3.47551, 0.37 ) }
    dend_48 { pt3dadd( 177.492, -262.346, 7.76692, 0.37 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 54/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 40.6161, -202.316, 36.6474, 0.37 ) }
    dend_46 { pt3dadd( 49.1731, -208.734, 38.9974, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 56/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 40.6161, -202.316, 36.6474, 0.22 ) }
    dend_43 { pt3dadd( 48.8198, -208.646, 37.7004, 0.37 ) }
    dend_43 { pt3dadd( 56.6835, -215.114, 39.9431, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 59/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -46.7369, -186.497, 6.46675, 0.37 ) }
    dend_38 { pt3dadd( -43.7963, -193.68, 6.31464, 0.37 ) }
    dend_38 { pt3dadd( -39.1643, -199.755, 7.03969, 0.37 ) }
    dend_38 { pt3dadd( -34.6535, -205.797, 8.45304, 0.37 ) }
    dend_38 { pt3dadd( -29.8843, -211.569, 10.0279, 0.37 ) }
    dend_38 { pt3dadd( -24.8032, -216.382, 12.961, 0.37 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -46.7369, -186.497, 6.46675, 0.22 ) }
    dend_37 { pt3dadd( -43.7767, -196.425, 3.3018, 0.37 ) }
    dend_37 { pt3dadd( -42.1378, -206.287, -0.875476, 0.37 ) }
    dend_37 { pt3dadd( -41.0378, -216.791, -3.5046, 0.37 ) }
    dend_37 { pt3dadd( -40.6599, -227.421, -5.8565, 0.37 ) }
    dend_37 { pt3dadd( -38.2782, -237.884, -7.60774, 0.37 ) }
    dend_37 { pt3dadd( -34.547, -248.044, -8.1253, 0.37 ) }
    dend_37 { pt3dadd( -30.4311, -257.944, -6.79958, 0.37 ) }
    dend_37 { pt3dadd( -27.316, -267.929, -4.09668, 0.37 ) }
    dend_37 { pt3dadd( -24.8453, -277.319, 0.508269, 0.37 ) }
    dend_37 { pt3dadd( -24.2657, -287.225, 4.74996, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 142.219, 424.041, -52.5997, 0.29 ) }
    dend_28 { pt3dadd( 142.965, 425.915, -54.3386, 0.29 ) }
    dend_28 { pt3dadd( 143.228, 426.584, -54.8919, 0.29 ) }
    dend_28 { pt3dadd( 143.442, 427.193, -55.2997, 0.29 ) }
    dend_28 { pt3dadd( 143.576, 427.637, -55.5404, 0.29 ) }
    dend_28 { pt3dadd( 143.793, 428.477, -55.9276, 0.74 ) }
    dend_28 { pt3dadd( 143.857, 428.746, -56.0331, 0.74 ) }
    dend_28 { pt3dadd( 144.097, 429.917, -56.2929, 0.22 ) }
    dend_28 { pt3dadd( 144.305, 430.988, -56.5293, 0.22 ) }
    dend_28 { pt3dadd( 144.434, 431.903, -56.7102, 0.22 ) }
    dend_28 { pt3dadd( 144.495, 432.438, -56.7974, 0.52 ) }
    dend_28 { pt3dadd( 144.595, 433.311, -56.8833, 0.22 ) }
    dend_28 { pt3dadd( 144.631, 433.66, -56.9074, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 89/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 142.219, 424.041, -52.5997, 0.44 ) }
    dend_25 { pt3dadd( 142.076, 425.195, -51.9544, 0.44 ) }
    dend_25 { pt3dadd( 142.034, 426.072, -51.4941, 0.44 ) }
    dend_25 { pt3dadd( 142.004, 427.018, -51.0228, 0.44 ) }
    dend_25 { pt3dadd( 141.99, 427.656, -50.7197, 0.44 ) }
    dend_25 { pt3dadd( 141.966, 428.427, -50.3774, 0.37 ) }
    dend_25 { pt3dadd( 141.949, 428.882, -50.1887, 0.37 ) }
    dend_25 { pt3dadd( 141.975, 429.693, -49.8117, 0.88 ) }
    dend_25 { pt3dadd( 141.999, 429.998, -49.689, 1.47 ) }
    dend_25 { pt3dadd( 142.018, 430.331, -49.5869, 1.47 ) }
    dend_25 { pt3dadd( 142.017, 431.213, -49.3722, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( 141.964, 431.714, -49.2678, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 144.71, 401.58, -85.9572, 0.29 ) }
    dend_23 { pt3dadd( 145.289, 402.147, -86.1905, 0.29 ) }
    dend_23 { pt3dadd( 146.171, 402.936, -86.6129, 0.81 ) }
    dend_23 { pt3dadd( 146.805, 403.442, -86.9418, 0.81 ) }
    dend_23 { pt3dadd( 147.679, 404.036, -87.4533, 0.22 ) }
    dend_23 { pt3dadd( 148.175, 404.335, -87.777, 0.59 ) }
    dend_23 { pt3dadd( 149.815, 405.201, -88.9004, 0.22 ) }
    dend_23 { pt3dadd( 150.928, 405.702, -89.748, 0.81 ) }
    dend_23 { pt3dadd( 151.489, 405.937, -90.2244, 0.81 ) }
    dend_23 { pt3dadd( 152.566, 406.424, -91.2446, 0.29 ) }
    dend_23 { pt3dadd( 153.687, 407.017, -92.3836, 0.29 ) }
    dend_23 { pt3dadd( 154.911, 407.81, -93.6918, 0.22 ) }
    dend_23 { pt3dadd( 155.628, 408.371, -94.4668, 0.22 ) }
    dend_23 { pt3dadd( 156.5, 409.255, -95.4996, 0.81 ) }
    dend_23 { pt3dadd( 157.511, 410.533, -96.7255, 0.22 ) }
    dend_23 { pt3dadd( 158.18, 411.596, -97.5433, 0.22 ) }
    dend_23 { pt3dadd( 158.741, 412.657, -98.2639, 0.44 ) }
    dend_23 { pt3dadd( 159.089, 413.466, -98.7428, 0.15 ) }
    dend_23 { pt3dadd( 159.382, 414.214, -99.1259, 0.22 ) }
    dend_23 { pt3dadd( 159.806, 415.394, -99.6272, 0.15 ) }
    dend_23 { pt3dadd( 160.113, 416.21, -99.9156, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 144.71, 401.58, -85.9572, 0.22 ) }
    dend_18 { pt3dadd( 146.383, 402.339, -87.0634, 0.22 ) }
    dend_18 { pt3dadd( 147.002, 402.621, -87.4732, 0.81 ) }
    dend_18 { pt3dadd( 147.671, 402.925, -87.9156, 0.52 ) }
    dend_18 { pt3dadd( 149.056, 403.554, -88.8319, 1.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 27/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -57.1413, 138.662, -131.729, 0.37 ) }
    dend_9 { pt3dadd( -56.364, 140.038, -132.664, 0.37 ) }
    dend_9 { pt3dadd( -55.8225, 141.16, -133.53, 0.37 ) }
    dend_9 { pt3dadd( -55.4109, 142.012, -134.188, 0.37 ) }
    dend_9 { pt3dadd( -54.9732, 142.919, -134.888, 0.81 ) }
    dend_9 { pt3dadd( -54.7698, 143.34, -135.213, 0.81 ) }
    dend_9 { pt3dadd( -54.2438, 144.43, -136.054, 0.52 ) }
    dend_9 { pt3dadd( -54.0041, 145.32, -136.766, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -57.1413, 138.662, -131.729, 0.29 ) }
    dend_8 { pt3dadd( -56.8986, 140.19, -132.135, 0.29 ) }
    dend_8 { pt3dadd( -56.7251, 141.284, -132.425, 0.88 ) }
    dend_8 { pt3dadd( -56.5384, 142.46, -132.738, 0.29 ) }
    dend_8 { pt3dadd( -56.4025, 143.316, -132.965, 0.88 ) }
    dend_8 { pt3dadd( -56.2462, 144.301, -133.227, 0.88 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 41/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 56.6835, -215.114, 39.9431, 0.37 ) }
    dend_45 { pt3dadd( 64.0162, -220.861, 40.6308, 0.37 ) }
    dend_45 { pt3dadd( 71.3278, -226.68, 40.7111, 0.37 ) }
    dend_45 { pt3dadd( 77.4818, -233.799, 41.3143, 0.37 ) }
    dend_45 { pt3dadd( 83.2913, -241.222, 42.0027, 0.37 ) }
    dend_45 { pt3dadd( 88.6086, -248.914, 43.5185, 0.37 ) }
    dend_45 { pt3dadd( 93.7967, -256.187, 46.5874, 0.37 ) }
    dend_45 { pt3dadd( 99.1778, -263.193, 49.8805, 0.37 ) }
    dend_45 { pt3dadd( 104.046, -269.883, 54.3604, 0.37 ) }
    dend_45 { pt3dadd( 109.341, -276.381, 58.6059, 0.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 51/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 56.6835, -215.114, 39.9431, 0.22 ) }
    dend_44 { pt3dadd( 65.8604, -222.513, 43.9239, 0.37 ) }
    dend_44 { pt3dadd( 73.7586, -231.692, 47.2299, 0.37 ) }
    dend_44 { pt3dadd( 82.0498, -240.449, 50.6092, 0.37 ) }
    dend_44 { pt3dadd( 90.1698, -249.008, 54.7747, 0.37 ) }
    dend_44 { pt3dadd( 99.2207, -256.81, 58.3234, 0.37 ) }
    dend_44 { pt3dadd( 108.83, -262.86, 63.238, 0.37 ) }
    dend_44 { pt3dadd( 117.241, -268.74, 70.1361, 0.37 ) }
    dend_44 { pt3dadd( 125.662, -272.122, 78.4014, 0.37 ) }
    dend_44 { pt3dadd( 133.532, -273.081, 87.7156, 0.37 ) }
    dend_44 { pt3dadd( 140.401, -275.488, 97.571, 0.37 ) }
    dend_44 { pt3dadd( 147.593, -279.465, 106.711, 0.37 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 141.964, 431.714, -49.2678, 0.29 ) }
    dend_27 { pt3dadd( 141.392, 433.347, -48.7163, 0.29 ) }
    dend_27 { pt3dadd( 140.972, 434.419, -48.3319, 0.29 ) }
    dend_27 { pt3dadd( 140.7, 435.095, -48.0856, 0.66 ) }
    dend_27 { pt3dadd( 140.608, 435.333, -47.9997, 0.66 ) }
    dend_27 { pt3dadd( 140.322, 436.209, -47.707, 0.22 ) }
    dend_27 { pt3dadd( 140.05, 437.207, -47.3987, 0.22 ) }
    dend_27 { pt3dadd( 139.892, 437.98, -47.184, 0.22 ) }
    dend_27 { pt3dadd( 139.836, 438.416, -47.0799, 0.59 ) }
    dend_27 { pt3dadd( 139.821, 438.96, -46.978, 0.59 ) }
    dend_27 { pt3dadd( 139.858, 440.152, -46.7927, 0.29 ) }
    dend_27 { pt3dadd( 139.936, 440.952, -46.6639, 0.88 ) }
    dend_27 { pt3dadd( 140.027, 441.652, -46.5471, 0.88 ) }
    dend_27 { pt3dadd( 140.319, 443.803, -46.1819, 0.29 ) }
    dend_27 { pt3dadd( 140.473, 444.913, -45.9879, 0.29 ) }
    dend_27 { pt3dadd( 140.559, 445.552, -45.8696, 0.59 ) }
    dend_27 { pt3dadd( 140.822, 447.535, -45.4613, 0.29 ) }
    dend_27 { pt3dadd( 140.964, 448.517, -45.2427, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 81/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 141.964, 431.714, -49.2678, 0.29 ) }
    dend_26 { pt3dadd( 142.022, 432.593, -49.2126, 0.29 ) }
    dend_26 { pt3dadd( 142.161, 433.424, -49.1069, 0.29 ) }
    dend_26 { pt3dadd( 142.287, 434.01, -49.0201, 0.29 ) }
    dend_26 { pt3dadd( 142.523, 434.962, -48.8818, 0.29 ) }
    dend_26 { pt3dadd( 142.656, 435.466, -48.8102, 0.29 ) }
    dend_26 { pt3dadd( 142.878, 436.268, -48.6992, 0.29 ) }
    dend_26 { pt3dadd( 143.132, 437.142, -48.5742, 1.03 ) }
    dend_26 { pt3dadd( 143.352, 437.798, -48.4607, 1.69 ) }
    dend_26 { pt3dadd( 143.682, 438.667, -48.295, 0.22 ) }
    dend_26 { pt3dadd( 143.85, 439.077, -48.2144, 0.52 ) }
    dend_26 { pt3dadd( 143.937, 439.293, -48.172, 0.59 ) }
    dend_26 { pt3dadd( 144.172, 439.929, -48.0163, 0.22 ) }
    dend_26 { pt3dadd( 144.395, 440.542, -47.8198, 0.52 ) }
    dend_26 { pt3dadd( 144.528, 440.896, -47.653, 0.66 ) }
    dend_26 { pt3dadd( 144.707, 441.338, -47.3588, 0.22 ) }
    dend_26 { pt3dadd( 144.831, 441.596, -47.156, 0.22 ) }
    dend_26 { pt3dadd( 145.257, 442.347, -46.5082, 0.66 ) }
    dend_26 { pt3dadd( 145.517, 442.725, -46.1399, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_26 { pt3dadd( 145.831, 443.097, -45.7418, 1.03 ) }
    dend_26 { pt3dadd( 146.297, 443.622, -45.1967, 0.29 ) }
    dend_26 { pt3dadd( 146.597, 443.973, -44.862, 0.37 ) }
    dend_26 { pt3dadd( 146.842, 444.289, -44.6039, 0.37 ) }
    dend_26 { pt3dadd( 147.21, 444.79, -44.2746, 0.29 ) }
    dend_26 { pt3dadd( 147.512, 445.188, -44.0424, 0.29 ) }
    dend_26 { pt3dadd( 147.794, 445.571, -43.8421, 0.29 ) }
    dend_26 { pt3dadd( 148.028, 445.956, -43.6835, 0.66 ) }
    dend_26 { pt3dadd( 148.207, 446.337, -43.5421, 0.66 ) }
    dend_26 { pt3dadd( 148.423, 446.976, -43.3229, 0.29 ) }
    dend_26 { pt3dadd( 148.524, 447.49, -43.1785, 0.29 ) }
    dend_26 { pt3dadd( 148.563, 447.832, -43.0926, 0.29 ) }
    dend_26 { pt3dadd( 148.608, 448.452, -42.9578, 0.66 ) }
    dend_26 { pt3dadd( 148.624, 448.869, -42.872, 0.74 ) }
    dend_26 { pt3dadd( 148.643, 449.937, -42.7244, 0.29 ) }
    dend_26 { pt3dadd( 148.648, 450.808, -42.6509, 0.29 ) }
    dend_26 { pt3dadd( 148.656, 451.505, -42.6336, 0.88 ) }
    dend_26 { pt3dadd( 148.669, 451.823, -42.6443, 1.03 ) }
    dend_26 { pt3dadd( 148.721, 452.409, -42.7008, 0.74 ) }
    dend_26 { pt3dadd( 148.851, 453.376, -42.8571, 0.29 ) }
    dend_26 { pt3dadd( 148.93, 453.86, -42.999, 0.59 ) }
    dend_26 { pt3dadd( 149.033, 454.466, -43.2275, 0.29 ) }
    dend_26 { pt3dadd( 149.104, 454.99, -43.46, 0.59 ) }
    dend_26 { pt3dadd( 149.134, 455.334, -43.6358, 0.29 ) }
    dend_26 { pt3dadd( 149.147, 455.796, -43.8828, 0.81 ) }
    dend_26 { pt3dadd( 149.12, 456.774, -44.3598, 0.29 ) }
    dend_26 { pt3dadd( 149.08, 457.388, -44.6453, 0.29 ) }
    dend_26 { pt3dadd( 149.04, 457.878, -44.8646, 0.29 ) }
    dend_26 { pt3dadd( 148.985, 458.505, -45.1471, 0.22 ) }
    dend_26 { pt3dadd( 148.885, 459.601, -45.6125, 0.22 ) }
    dend_26 { pt3dadd( 148.733, 461.027, -46.1531, 0.22 ) }
    dend_26 { pt3dadd( 148.602, 462.21, -46.5612, 0.22 ) }
    dend_26 { pt3dadd( 148.482, 463.296, -46.913, 0.74 ) }
    dend_26 { pt3dadd( 148.426, 463.827, -47.0735, 0.96 ) }
    dend_26 { pt3dadd( 148.315, 464.889, -47.3665, 0.22 ) }
    dend_26 { pt3dadd( 148.196, 465.962, -47.6626, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 149.056, 403.554, -88.8319, 0.22 ) }
    dend_22 { pt3dadd( 149.224, 404.716, -88.6632, 0.22 ) }
    dend_22 { pt3dadd( 149.286, 405.149, -88.6004, 0.37 ) }
    dend_22 { pt3dadd( 149.408, 406.001, -88.4767, 0.22 ) }
    dend_22 { pt3dadd( 149.501, 406.642, -88.3838, 0.22 ) }
    dend_22 { pt3dadd( 149.621, 407.476, -88.2627, 0.22 ) }
    dend_22 { pt3dadd( 149.748, 408.362, -88.1341, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 43/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 149.056, 403.554, -88.8319, 0.22 ) }
    dend_19 { pt3dadd( 149.822, 403.122, -91.0199, 0.22 ) }
    dend_19 { pt3dadd( 150.096, 402.967, -91.8047, 0.22 ) }
    dend_19 { pt3dadd( 150.415, 402.786, -92.7176, 0.52 ) }
    dend_19 { pt3dadd( 150.783, 402.579, -93.7676, 1.11 ) }
    dend_19 { pt3dadd( 151.141, 402.376, -94.7935, 0.81 ) }
    dend_19 { pt3dadd( 151.533, 402.155, -95.9124, 0.29 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -54.0041, 145.32, -136.766, 0.59 ) }
    dend_11 { pt3dadd( -54.3066, 147.009, -137.224, 0.59 ) }
    dend_11 { pt3dadd( -54.3737, 147.508, -137.397, 0.88 ) }
    dend_11 { pt3dadd( -54.508, 148.48, -137.764, 0.29 ) }
    dend_11 { pt3dadd( -54.6152, 149.237, -138.056, 0.29 ) }
    dend_11 { pt3dadd( -54.7402, 150.019, -138.356, 0.37 ) }
    dend_11 { pt3dadd( -54.8692, 150.742, -138.629, 0.37 ) }
    dend_11 { pt3dadd( -55.1488, 152.045, -139.086, 0.29 ) }
    dend_11 { pt3dadd( -55.2852, 152.606, -139.307, 0.29 ) }
    dend_11 { pt3dadd( -55.5187, 153.553, -139.704, 0.29 ) }
    dend_11 { pt3dadd( -55.6627, 154.209, -139.972, 0.96 ) }
    dend_11 { pt3dadd( -55.7618, 154.66, -140.145, 0.96 ) }
    dend_11 { pt3dadd( -55.8614, 155.126, -140.301, 0.74 ) }
    dend_11 { pt3dadd( -56.0944, 156.242, -140.6, 0.29 ) }
    dend_11 { pt3dadd( -56.2785, 157.213, -140.863, 0.29 ) }
    dend_11 { pt3dadd( -56.3944, 157.863, -141.035, 0.29 ) }
    dend_11 { pt3dadd( -56.516, 158.628, -141.218, 0.74 ) }
    dend_11 { pt3dadd( -56.5632, 158.938, -141.284, 0.74 ) }
    dend_11 { pt3dadd( -56.6242, 159.35, -141.362, 0.44 ) }
    dend_11 { pt3dadd( -56.7937, 160.327, -141.529, 0.29 ) }
    dend_11 { pt3dadd( -56.963, 161.082, -141.654, 0.29 ) }
    dend_11 { pt3dadd( -57.3234, 162.649, -141.859, 0.29 ) }
    dend_11 { pt3dadd( -57.4724, 163.352, -141.924, 0.96 ) }
    dend_11 { pt3dadd( -57.5652, 163.865, -141.941, 0.59 ) }
    dend_11 { pt3dadd( -57.6604, 164.558, -141.917, 0.29 ) }
    dend_11 { pt3dadd( -57.767, 165.543, -141.815, 0.22 ) }
    dend_11 { pt3dadd( -57.8563, 166.493, -141.672, 0.22 ) }
    dend_11 { pt3dadd( -57.902, 167.041, -141.563, 0.22 ) }
    dend_11 { pt3dadd( -57.9828, 167.889, -141.414, 0.22 ) }
    dend_11 { pt3dadd( -58.0561, 168.649, -141.313, 0.22 ) }
    dend_11 { pt3dadd( -58.0975, 169.37, -141.254, 0.81 ) }
    dend_11 { pt3dadd( -58.1025, 169.565, -141.255, 1.18 ) }
    dend_11 { pt3dadd( -58.1148, 170.034, -141.325, 1.18 ) }
    dend_11 { pt3dadd( -58.1493, 171.089, -141.602, 0.29 ) }
    dend_11 { pt3dadd( -58.1568, 171.658, -141.802, 0.29 ) }
    dend_11 { pt3dadd( -58.1315, 172.346, -142.064, 0.66 ) }
    dend_11 { pt3dadd( -58.108, 172.586, -142.154, 0.66 ) }
    dend_11 { pt3dadd( -57.9617, 173.6, -142.579, 0.37 ) }
    dend_11 { pt3dadd( -57.8762, 174.193, -142.849, 0.37 ) }
    dend_11 { pt3dadd( -57.8273, 174.791, -143.137, 0.37 ) }
    dend_11 { pt3dadd( -57.8347, 175.249, -143.389, 0.74 ) }
    dend_11 { pt3dadd( -57.8773, 175.719, -143.674, 0.74 ) }
    dend_11 { pt3dadd( -57.9829, 176.712, -144.305, 0.29 ) }
    dend_11 { pt3dadd( -58.0298, 177.333, -144.705, 0.29 ) }
    dend_11 { pt3dadd( -58.0576, 178.137, -145.27, 0.29 ) }
    dend_11 { pt3dadd( -58.0747, 178.944, -145.849, 0.88 ) }
    dend_11 { pt3dadd( -58.0805, 179.4, -146.166, 0.88 ) }
    dend_11 { pt3dadd( -58.0825, 180.04, -146.596, 0.29 ) }
    dend_11 { pt3dadd( -58.0838, 180.845, -147.079, 0.29 ) }
    dend_11 { pt3dadd( -58.0756, 181.258, -147.323, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_11 { pt3dadd( -58.0934, 181.951, -147.715, 0.74 ) }
    dend_11 { pt3dadd( -58.136, 182.388, -147.944, 0.74 ) }
    dend_11 { pt3dadd( -58.2636, 183.249, -148.372, 0.37 ) }
    dend_11 { pt3dadd( -58.3914, 183.952, -148.707, 0.59 ) }
    dend_11 { pt3dadd( -58.4907, 184.447, -148.93, 0.59 ) }
    dend_11 { pt3dadd( -58.6079, 185.157, -149.235, 0.29 ) }
    dend_11 { pt3dadd( -58.6973, 185.992, -149.583, 0.29 ) }
    dend_11 { pt3dadd( -58.7308, 186.435, -149.746, 0.29 ) }
    dend_11 { pt3dadd( -58.7609, 186.971, -149.912, 0.52 ) }
    dend_11 { pt3dadd( -58.7779, 187.416, -150.036, 1.03 ) }
    dend_11 { pt3dadd( -58.7734, 188.044, -150.182, 1.03 ) }
    dend_11 { pt3dadd( -58.7209, 189.188, -150.407, 0.22 ) }
    dend_11 { pt3dadd( -58.6258, 190.621, -150.643, 0.22 ) }
    dend_11 { pt3dadd( -58.5457, 191.641, -150.791, 0.96 ) }
    dend_11 { pt3dadd( -58.4972, 192.253, -150.869, 0.96 ) }
    dend_11 { pt3dadd( -58.35, 193.771, -151.031, 0.29 ) }
    dend_11 { pt3dadd( -58.2132, 194.951, -151.13, 0.29 ) }
    dend_11 { pt3dadd( -58.1161, 195.735, -151.185, 0.88 ) }
    dend_11 { pt3dadd( -58.045, 196.331, -151.228, 1.18 ) }
    dend_11 { pt3dadd( -57.9101, 197.741, -151.364, 0.37 ) }
    dend_11 { pt3dadd( -57.8424, 198.968, -151.414, 0.37 ) }
    dend_11 { pt3dadd( -57.801, 200.652, -151.403, 0.37 ) }
    dend_11 { pt3dadd( -57.769, 201.687, -151.318, 0.37 ) }
    dend_11 { pt3dadd( -57.727, 202.422, -151.204, 0.96 ) }
    dend_11 { pt3dadd( -57.6381, 203.278, -151.002, 0.96 ) }
    dend_11 { pt3dadd( -57.1882, 205.625, -150.193, 0.29 ) }
    dend_11 { pt3dadd( -57.0566, 206.067, -150.015, 0.29 ) }
    dend_11 { pt3dadd( -56.7292, 206.858, -149.679, 0.88 ) }
    dend_11 { pt3dadd( -56.4526, 207.414, -149.456, 0.88 ) }
    dend_11 { pt3dadd( -56.2191, 207.849, -149.305, 0.59 ) }
    dend_11 { pt3dadd( -55.3503, 209.463, -148.883, 0.29 ) }
    dend_11 { pt3dadd( -54.6988, 210.759, -148.734, 0.29 ) }
    dend_11 { pt3dadd( -54.3433, 211.566, -148.689, 0.81 ) }
    dend_11 { pt3dadd( -54.1942, 211.945, -148.692, 0.81 ) }
    dend_11 { pt3dadd( -54.0011, 212.574, -148.726, 0.52 ) }
    dend_11 { pt3dadd( -53.7856, 213.515, -148.82, 0.22 ) }
    dend_11 { pt3dadd( -53.5813, 215.195, -149.083, 0.22 ) }
    dend_11 { pt3dadd( -53.5435, 216.168, -149.261, 0.74 ) }
    dend_11 { pt3dadd( -53.5543, 216.668, -149.36, 0.74 ) }
    dend_11 { pt3dadd( -53.656, 218.045, -149.641, 0.22 ) }
    dend_11 { pt3dadd( -53.7275, 218.617, -149.756, 0.22 ) }
    dend_11 { pt3dadd( -53.8618, 219.352, -149.9, 0.52 ) }
    dend_11 { pt3dadd( -53.905, 219.54, -149.935, 0.59 ) }
    dend_11 { pt3dadd( -54.1396, 220.472, -150.131, 0.22 ) }
    dend_11 { pt3dadd( -54.3335, 221.203, -150.342, 0.44 ) }
    dend_11 { pt3dadd( -54.7531, 222.544, -150.863, 0.22 ) }
    dend_11 { pt3dadd( -54.9711, 223.096, -151.149, 0.66 ) }
    dend_11 { pt3dadd( -55.3494, 223.862, -151.634, 0.22 ) }
    dend_11 { pt3dadd( -55.8505, 224.726, -152.284, 0.74 ) }
    dend_11 { pt3dadd( -56.3725, 225.507, -152.967, 0.59 ) }
    dend_11 { pt3dadd( -56.8294, 226.169, -153.579, 0.29 ) }
    dend_11 { pt3dadd( -57.2064, 226.715, -154.087, 0.52 ) }
    dend_11 { pt3dadd( -57.8357, 227.604, -154.925, 0.22 ) }
    dend_11 { pt3dadd( -58.2483, 228.189, -155.447, 0.59 ) }
    dend_11 { pt3dadd( -58.3966, 228.432, -155.615, 0.59 ) }
    dend_11 { pt3dadd( -58.8125, 229.324, -156.068, 0.22 ) }
    dend_11 { pt3dadd( -58.9954, 229.958, -156.329, 0.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 57/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -54.0041, 145.32, -136.766, 0.52 ) }
    dend_10 { pt3dadd( -53.3257, 146.065, -138.308, 0.52 ) }
    dend_10 { pt3dadd( -52.9173, 146.527, -139.224, 0.29 ) }
    dend_10 { pt3dadd( -52.5042, 147.031, -140.116, 0.29 ) }
    dend_10 { pt3dadd( -51.9103, 147.765, -141.343, 0.29 ) }
    dend_10 { pt3dadd( -51.4792, 148.277, -142.204, 0.59 ) }
    dend_10 { pt3dadd( -51.3173, 148.451, -142.524, 0.66 ) }
    dend_10 { pt3dadd( -50.7758, 148.953, -143.473, 0.29 ) }
    dend_10 { pt3dadd( -50.4096, 149.215, -144.092, 0.81 ) }
    dend_10 { pt3dadd( -50.3038, 149.291, -144.266, 0.81 ) }
    dend_10 { pt3dadd( -49.7736, 149.63, -145.045, 0.29 ) }
    dend_10 { pt3dadd( -49.2673, 149.9, -145.899, 0.44 ) }
    dend_10 { pt3dadd( -49.1125, 149.952, -146.156, 0.66 ) }
    dend_10 { pt3dadd( -48.8161, 149.953, -146.589, 0.66 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 151.533, 402.155, -95.9124, 0.37 ) }
    dend_21 { pt3dadd( 151.046, 402.387, -98.2171, 0.37 ) }
    dend_21 { pt3dadd( 150.869, 402.539, -99.1758, 0.22 ) }
    dend_21 { pt3dadd( 150.643, 402.734, -100.405, 0.22 ) }
    dend_21 { pt3dadd( 150.594, 402.776, -100.668, 0.66 ) }
    dend_21 { pt3dadd( 150.345, 402.991, -102.019, 0.22 ) }
    dend_21 { pt3dadd( 150.123, 403.183, -103.228, 0.22 ) }
    dend_21 { pt3dadd( 150.105, 403.24, -103.517, 0.37 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 79/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 151.533, 402.155, -95.9124, 0.22 ) }
    dend_20 { pt3dadd( 151.851, 402.798, -98.1712, 0.22 ) }
    dend_20 { pt3dadd( 151.934, 402.93, -98.6462, 0.88 ) }
    dend_20 { pt3dadd( 152.13, 403.241, -99.765, 0.22 ) }
    dend_20 { pt3dadd( 152.213, 403.373, -100.243, 0.74 ) }
    dend_20 { pt3dadd( 152.51, 403.845, -101.941, 0.22 ) }
    dend_20 { pt3dadd( 152.636, 404.044, -102.658, 0.44 ) }
    dend_20 { pt3dadd( 152.93, 404.211, -103.533, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_2 = new SectionList()
    dend_67 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_67 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_32 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_62 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_53 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_52 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_29 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_14 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_4 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_61 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_34 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_30 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_15 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_65 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_64 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_60 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_47 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_39 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_6 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_49 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_48 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_11 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_51 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_56 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_13 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_57 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_58 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_59 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_66 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_63 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_35 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_54 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_55 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_36 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_41 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_10 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_42 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_46 OneSecGrp_SectionRef_52.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_43 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_22 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_19 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_25 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_28 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_21 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_20 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_23 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_27 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_26 OneSecGrp_SectionRef_65.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_55, dend_55, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_67 nseg = 13
    dend_32 nseg = 7
    dend_62 nseg = 3
    dend_53 nseg = 9
    dend_52 nseg = 9
    dend_40 nseg = 3
    dend_29 nseg = 7
    dend_14 nseg = 3
    dend_4 nseg = 9
    dend_61 nseg = 3
    dend_50 nseg = 5
    dend_34 nseg = 5
    dend_30 nseg = 5
    dend_16 nseg = 19
    dend_15 nseg = 7
    dend_3 nseg = 15
    dend_2 nseg = 3
    dend_65 nseg = 5
    dend_64 nseg = 3
    dend_60 nseg = 3
    dend_47 nseg = 3
    dend_39 nseg = 3
    dend_24 nseg = 3
    dend_17 nseg = 3
    dend_6 nseg = 5
    dend_49 nseg = 5
    dend_48 nseg = 7
    dend_37 nseg = 5
    dend_45 nseg = 5
    dend_44 nseg = 7
    dend_11 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L5_NBC_4126235f8b_0_0


