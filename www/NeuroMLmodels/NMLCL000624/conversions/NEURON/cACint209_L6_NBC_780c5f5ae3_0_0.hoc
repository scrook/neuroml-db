// Cell: cACint209_L6_NBC_780c5f5ae3_0_0
/*
{
  "id" : "cACint209_L6_NBC_780c5f5ae3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.18133, 10.1802, -0.0136132, 4.51632", "-3.71511, 9.17715, -0.012728, 5.89932", "-3.24888, 8.1741, -0.0118428, 6.73586", "-2.78266, 7.17105, -0.0109576, 7.77662", "-2.31644, 6.16799, -0.0100724, 8.83653", "-1.85022, 5.16494, -0.00918717, 9.98865", "-1.384, 4.16189, -0.00830196, 11.1793", "-0.917776, 3.15884, -0.00741676, 12.3766", "-0.451555, 2.15579, -0.00653155, 13.3418", "0.0146667, 1.15274, -0.00564635, 14.1684", "0.480888, 0.149684, -0.00476114, 14.5557", "0.94711, -0.853367, -0.00387593, 14.9116", "1.41333, -1.85642, -0.00299073, 14.9294", "1.87955, -2.85947, -0.00210552, 14.4593", "2.34577, -3.86252, -0.00122032, 13.9684", "2.812, -4.86557, -3.35112E-4, 13.2352", "3.27822, -5.86863, 5.50094E-4, 12.4898", "3.74444, -6.87168, 0.0014353, 11.1742", "4.21066, -7.87473, 0.0023205, 8.60206", "4.67688, -8.87778, 0.00320571, 5.94918", "5.1431, -9.88083, 0.00409092, 3.45007" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-4.86983, -2.7323, 10.4413, 1.08", "-7.50904, -3.8542, 10.4634, 1.08", "-9.61771, -4.8626, 10.4787, 0.96", "-10.694, -5.4348, 10.4855, 0.96", "-13.1927, -6.83622, 10.6791, 0.84", "-15.5093, -8.26141, 11.0183, 0.84", "-18.1945, -10.0931, 11.4584, 0.84", "-20.5554, -11.6929, 11.8995, 0.84", "-22.5136, -13.0792, 12.3198, 0.84", "-25.1622, -15.1617, 12.9854, 0.84", "-26.9503, -16.8386, 13.5554, 0.84", "-29.4498, -19.5938, 14.5972, 0.84", "-39.6764, -25.256, 16.7795, 0.84", "-48.3687, -33.4676, 17.1312, 0.84", "-56.1863, -42.5069, 16.1436, 0.84", "-63.2015, -52.1647, 14.7767, 0.84", "-70.1054, -61.9988, 15.1608, 0.84", "-75.7645, -72.6273, 15.7199, 0.84", "-82.5427, -82.5476, 16.217, 0.84", "-88.9637, -92.6898, 15.3663, 0.84", "-94.9197, -103.12, 16.2877, 0.84", "-100.876, -113.585, 16.6518, 0.84", "-106.709, -124.085, 17.6028, 0.84", "-112.309, -134.632, 19.223, 0.84", "-118.923, -144.124, 22.4397, 0.84", "-125.228, -153.734, 25.9337, 0.84", "-131.336, -163.962, 27.6592, 0.84", "-136.778, -174.702, 26.983, 0.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "4.44017, -9.1796, -1.30865, 2.77", "4.78345, -10.2145, -1.29446, 2.77", "5.13697, -11.2804, -1.27986, 1.69", "5.53651, -12.485, -1.26335, 1.69", "5.86962, -13.4892, -1.24958, 2.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "8.18017, -1.3793, -14.5587, 2.65", "10.1313, -2.81639, -15.8989, 2.05", "14.575, -6.08952, -18.9516, 2.41" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.00983, 12.1302, 0.0313539, 4.22", "-5.96835, 16.3935, 0.0313539, 4.22", "-6.48877, 17.5264, 0.0313539, 4.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.1431, -9.88083, 0.00409092, 1.16336", "11.4656, -23.4833, 0.00409092, 1.16336", "17.788, -37.0857, 0.00409092, 1.16336" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-136.778, -174.702, 26.983, 0.24", "-148.591, -176.248, 22.1872, 0.24", "-160.791, -177.475, 18.3773, 0.24", "-173.203, -177.905, 15.1332, 0.24", "-185.483, -175.997, 11.9002, 0.24", "-197.539, -174.583, 7.72095, 0.24", "-209.274, -172.337, 3.01134, 0.24", "-220.346, -170.815, -3.30578, 0.24", "-230.63, -168.589, -10.6671, 0.24", "-240.033, -164.31, -18.3319, 0.24", "-249.694, -159.427, -25.2983, 0.24", "-259.265, -156.304, -33.2833, 0.24", "-268.62, -151.215, -40.5218, 0.24", "-276.76, -143.493, -46.9609, 0.24", "-284.848, -137.195, -54.7925, 0.24", "-293.87, -131.885, -62.2977, 0.24", "-301.823, -124.978, -69.7696, 0.24", "-311.402, -120.135, -76.8759, 0.24", "-319.371, -117.193, -86.5134, 0.24", "-325.751, -113.924, -97.1775, 0.24", "-330.604, -112.2, -108.938, 0.24", "-333.717, -109.439, -121.09, 0.24", "-336.574, -105.161, -132.878, 0.24", "-341.792, -98.873, -142.859, 0.24", "-348.351, -94.3228, -152.95, 0.24", "-355.615, -89.2835, -162.309, 0.24" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-136.778, -174.702, 26.983, 0.24", "-138.765, -182.192, 29.1051, 0.24", "-139.827, -189.266, 32.7062, 0.24", "-140.855, -195.971, 36.9329, 0.24", "-140.565, -203.372, 40.0164, 0.24" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "5.86962, -13.4892, -1.24958, 0.84", "3.94382, -21.4203, -0.466312, 0.84", "3.31344, -24.1734, -0.279554, 0.84", "2.6959, -27.0713, -0.132064, 0.84", "2.30245, -29.3098, -0.41283, 0.84", "2.06222, -31.5943, -0.984211, 0.72", "1.9266, -34.5364, -1.92216, 0.72", "2.03965, -36.1611, -2.948, 0.72", "2.19028, -37.1695, -3.72337, 0.72", "3.48297, -43.641, -9.39745, 0.72", "3.96575, -45.9882, -11.62, 0.72", "4.17406, -47.0687, -12.701, 0.72", "4.71864, -50.5047, -16.1821, 0.6", "5.02324, -53.0964, -18.6906, 0.6", "5.23209, -55.5499, -20.8902, 0.6", "5.39859, -57.6959, -22.483, 0.6", "5.59231, -59.0122, -23.5592, 0.6", "5.87434, -60.2126, -24.6716, 0.6", "6.12501, -61.0505, -25.4723, 0.6", "7.13982, -64.0852, -28.5312, 0.6", "7.87082, -66.0242, -30.5478, 0.6", "9.20548, -69.4218, -34.3083, 0.6", "10.3237, -72.6567, -38.0138, 0.6", "10.7185, -74.1202, -39.6659, 0.6", "10.8621, -74.9696, -40.6655, 0.48", "10.9408, -75.9605, -41.793, 0.48", "10.8423, -79.1286, -45.2385, 0.48", "10.7323, -80.474, -46.5553, 0.48", "10.5892, -82.4803, -48.3379, 0.48", "10.267, -87.5269, -52.6639, 0.24", "10.2309, -88.9954, -53.8429, 0.24", "10.2223, -91.7873, -55.9079, 0.24", "10.2736, -93.664, -57.1486, 0.24", "10.421, -96.0478, -58.5236, 0.24", "10.5655, -97.4845, -59.4098, 0.36", "11.3633, -102.762, -62.8537, 0.36", "11.4219, -103.059, -63.0725, 0.36", "11.703, -104.195, -64.0448, 0.96", "12.6311, -107.586, -67.1439, 0.36", "14.5929, -114.009, -73.5405, 1.81", "15.6517, -117.23, -76.8722, 0.6", "16.5364, -119.863, -79.7061, 0.6", "17.8634, -123.729, -83.818, 0.36", "18.5322, -125.276, -85.9424, 0.96", "19.6397, -127.476, -89.308, 0.36", "20.3421, -128.789, -91.3768, 0.96", "22.372, -132.391, -97.3829, 0.36", "23.181, -133.757, -99.8164, 1.57", "29.053, -143.289, -117.638, 0.72", "29.9575, -144.712, -120.55, 0.72", "30.0617, -144.868, -120.896, 1.45" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "5.86962, -13.4892, -1.24958, 1.45", "7.97172, -14.4604, -0.807575, 1.45", "9.77486, -15.2934, -0.428434, 1.45", "11.5434, -16.1104, -0.0565639, 1.45", "12.9141, -16.7436, 0.231643, 1.45" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "14.575, -6.08952, -18.9516, 1.33", "17.8524, -5.7736, -19.3446, 1.33", "23.4217, -5.23677, -20.0126, 1.33", "29.1505, -4.68455, -20.6997, 1.81" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "14.575, -6.08952, -18.9516, 0.72", "15.5395, -8.72355, -20.1331, 0.72", "16.2785, -11.355, -21.1725, 0.72", "17.074, -13.7774, -22.0736, 0.72", "17.8397, -15.7725, -22.7862, 0.6", "18.8851, -18.5045, -23.787, 0.6", "19.8884, -21.0528, -24.7417, 0.6", "20.7289, -23.0518, -25.4662, 0.36", "22.0441, -26.1571, -26.613, 0.48", "22.8646, -28.103, -27.3167, 0.36", "24.5398, -32.1032, -28.9958, 0.36", "26.0708, -35.6421, -30.9064, 0.36", "27.1394, -38.3851, -32.3945, 0.36", "28.1299, -41.0304, -33.893, 0.36", "30.0402, -46.6837, -37.2033, 0.36", "31.8145, -52.2409, -40.5857, 0.36", "33.5334, -57.7042, -44.0915, 0.24", "34.7876, -62.3117, -47.2713, 0.24" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.48877, 17.5264, 0.0313539, 1.81", "-8.20154, 19.4693, 6.89903, 1.81" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.48877, 17.5264, 0.0313539, 2.65", "-6.04852, 21.5672, -0.290467, 2.65", "-5.84977, 23.3914, -0.435749, 2.65" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "17.788, -37.0857, 0.00409092, 0.48", "24.1105, -50.6882, 0.00409092, 0.48", "30.4329, -64.2906, 0.00409092, 0.48" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-140.565, -203.372, 40.0164, 0.24", "-141.423, -212.957, 42.5861, 0.24", "-144.413, -222.208, 44.7557, 0.24", "-146.054, -231.594, 47.6332, 0.24", "-147.896, -241.373, 48.5233, 0.24", "-148.352, -251.258, 49.8477, 0.24", "-149.776, -261.053, 51.1595, 0.24", "-153.044, -270.489, 51.4336, 0.24", "-157.621, -279.319, 50.5762, 0.24", "-163.328, -287.26, 52.2829, 0.24", "-168.24, -295.923, 52.6098, 0.24", "-174.136, -303.886, 53.3658, 0.24" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-140.565, -203.372, 40.0164, 0.24", "-141.007, -209.806, 41.4139, 0.24", "-140.991, -216.135, 43.234, 0.24", "-141.395, -221.911, 46.3095, 0.24", "-141.403, -228.261, 48.0611, 0.24", "-142.487, -234.491, 49.9192, 0.24", "-144.899, -240.182, 52.1753, 0.24", "-147.588, -245.494, 54.9383, 0.24", "-151.632, -249.965, 57.5036, 0.24", "-156.013, -254.365, 59.6123, 0.24", "-160.507, -259.014, 60.8127, 0.24", "-164.872, -263.398, 62.983, 0.24" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "12.9141, -16.7436, 0.231643, 0.36", "14.0563, -18.0102, -0.207134, 0.36", "15.8549, -20.0047, -0.898076, 0.36", "17.5802, -21.9179, -1.56085, 0.36", "18.8893, -23.3696, -2.06377, 0.6", "21.6116, -26.3884, -3.10955, 0.6", "23.0431, -27.9758, -3.65946, 1.08" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "12.9141, -16.7436, 0.231643, 0.84", "14.6141, -17.4849, 1.57188, 0.84", "16.5166, -18.3742, 3.02457, 0.84", "17.8679, -19.0407, 3.98676, 0.72", "20.0835, -20.1645, 5.46196, 0.72", "24.3601, -22.4759, 8.14353, 0.72", "26.3607, -23.6631, 9.33452, 0.6", "27.8759, -24.6847, 10.2355, 0.6", "29.2051, -25.7312, 10.9476, 0.6", "29.9809, -26.4679, 11.317, 0.6", "31.3274, -27.9336, 11.7491, 0.36", "32.6931, -29.4813, 11.8907, 0.36", "33.7861, -30.655, 12.0686, 0.36", "34.9751, -31.9146, 12.4577, 0.36", "35.9144, -32.7821, 12.8745, 0.36", "37.1636, -33.7258, 13.5216, 0.36", "37.9553, -34.1811, 13.9637, 0.36", "40.7935, -35.3525, 15.5677, 0.36", "42.6664, -36.0011, 16.5841, 0.36", "44.474, -36.5442, 17.6217, 0.36", "45.6518, -36.8897, 18.3332, 0.36", "46.2925, -37.0974, 18.7287, 0.36", "47.2938, -37.4676, 19.2642, 0.36", "48.9326, -37.9885, 19.6237, 0.36", "56.6693, -42.4745, 25.0981, 0.36", "63.6169, -46.3896, 31.8922, 0.36", "70.3185, -49.7627, 39.1901, 0.36", "75.7953, -54.3142, 46.8975, 0.36", "80.0311, -59.9282, 54.7249, 0.36", "85.365, -64.2396, 62.6601, 0.36", "90.6298, -69.2953, 70.2166, 0.36", "96.2855, -75.6852, 76.4046, 0.36", "100.882, -82.4456, 83.0806, 0.36", "104.464, -90.3072, 89.2094, 0.36", "108.031, -98.1406, 95.3818, 0.36", "111.103, -105.697, 102.125, 0.36" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "29.1505, -4.68455, -20.6997, 1.32", "30.728, -3.11618, -22.3097, 1.32", "31.9569, -2.03343, -23.5791, 1.32", "33.3521, -0.983826, -25.0071, 1.2", "35.2243, 0.214395, -27.0147, 1.08", "37.2626, 1.56493, -29.5894, 0.96", "39.2488, 2.96794, -32.3122, 0.96", "39.7892, 3.36649, -33.183, 0.96", "40.5197, 3.96196, -34.4934, 0.96", "41.3429, 4.8031, -36.209, 0.96", "43.103, 7.23895, -40.4862, 0.96", "43.5931, 8.13174, -41.85, 0.96", "44.2241, 9.41285, -43.5927, 0.96", "44.6186, 10.0941, -44.4923, 0.84", "45.7083, 11.5524, -46.4077, 0.72", "46.2145, 12.0495, -47.0743, 0.72", "48.2156, 13.4605, -49.1566, 0.84", "49.4227, 14.2443, -50.324, 1.08", "51.47, 15.5225, -52.1272, 1.08", "53.8876, 16.9545, -54.0695, 1.08", "54.8555, 17.48, -54.8092, 0.96", "56.5904, 18.4211, -56.2847, 0.84", "57.5118, 18.9694, -57.2039, 0.84", "58.4572, 19.5676, -58.2712, 0.84", "58.9775, 19.8958, -58.9138, 0.84", "61.0939, 21.1246, -61.5123, 0.84", "63.296, 22.367, -64.3614, 0.84", "65.3505, 23.5167, -67.112, 2.16", "65.9223, 23.8488, -67.8845, 2.16", "67.9876, 25.1536, -70.5864, 0.72", "68.7591, 25.7034, -71.5026, 0.72", "70.4911, 27.1193, -73.2811, 0.72", "71.9967, 28.3869, -74.6055, 0.72", "72.6416, 28.9342, -75.1324, 0.72", "74.9806, 30.9108, -77.1492, 2.16", "76.2514, 31.9869, -78.2418, 1.44", "77.9318, 33.4429, -79.5458, 0.48", "78.8717, 34.3347, -80.3827, 0.48", "80.4566, 36.0007, -81.9666, 1.32", "81.9006, 37.7742, -84.3037, 1.32", "81.996, 37.9058, -84.4966, 1.32", "83.4791, 40.0327, -87.7572, 0.72", "86.6135, 44.5517, -94.5304, 0.6", "87.3323, 45.5872, -96.0095, 0.6", "91.8499, 51.7343, -104.267, 0.12", "92.6329, 52.7314, -105.546, 0.96", "93.3111, 53.5391, -106.55, 0.48", "94.7939, 55.19, -108.524, 0.36", "96.7755, 57.233, -110.374, 0.24", "98.3005, 58.7905, -111.595, 0.24", "100.763, 61.2727, -112.933, 1.2", "101.696, 62.2454, -113.524, 0.72", "103.718, 64.4774, -114.932, 0.24", "104.498, 65.4024, -115.499, 0.24", "105.9, 67.213, -116.482, 1.08", "106.372, 67.8786, -116.811, 0.6", "108.372, 70.8319, -118.006, 0.48", "109.085, 71.9016, -118.423, 0.48", "109.869, 73.024, -118.812, 1.2", "110.65, 74.0711, -119.193, 0.6", "112.764, 76.5799, -120.12, 0.24", "113.702, 77.5836, -120.593, 0.24", "114.937, 78.768, -121.23, 1.32", "115.977, 79.6799, -121.752, 0.72", "118.201, 81.563, -122.909, 0.48", "120.205, 83.2586, -124.048, 0.48", "122.295, 85.0331, -125.26, 1.08", "123.141, 85.7759, -125.761, 0.36", "125.1, 87.5824, -126.881, 0.12", "127.591, 90.0498, -128.269, 0.12", "129.481, 92.0157, -129.296, 0.12", "130.017, 92.5961, -129.574, 0.48", "130.48, 93.1079, -129.815, 0.12", "131.326, 94.0685, -130.368, 0.12", "131.732, 94.5516, -130.669, 0.48", "132.924, 96.1018, -131.537, 0.48", "133.604, 97.1369, -132.029, 0.24", "134.604, 98.8405, -132.729, 0.6", "135.386, 100.297, -133.226, 1.08", "136.124, 101.757, -133.633, 0.48", "137.49, 104.418, -134.312, 0.36", "138.369, 106.04, -134.787, 0.36", "139.572, 108.092, -135.545, 0.36", "140.295, 109.212, -136.011, 0.96", "140.792, 109.919, -136.344, 0.24", "142.68, 112.335, -137.563, 0.12", "144.984, 114.955, -138.875, 0.24", "146.347, 116.407, -139.708, 0.24", "147.209, 117.316, -140.253, 0.24", "148.161, 118.317, -140.79, 0.24", "149.662, 119.91, -141.458, 0.24", "150.424, 120.72, -141.682, 0.24", "153.044, 123.44, -142.357, 1.44", "153.676, 124.095, -142.558, 1.08", "154.86, 125.292, -143.009, 0.12", "155.558, 126.003, -143.4, 0.12", "156.92, 127.378, -144.351, 0.12", "158.52, 128.881, -145.472, 0.6", "159.302, 129.539, -145.962, 0.6", "160.085, 130.16, -146.565, 0.24", "162.49, 132.032, -148.584, 0.72", "163.056, 132.48, -149.109, 0.12", "164.136, 133.346, -150.096, 0.24", "165.121, 134.168, -150.959, 0.24", "168.729, 137.34, -154.117, 0.24", "169.591, 138.17, -154.855, 0.12", "172.015, 140.673, -156.766, 0.24", "173.061, 141.868, -157.592, 0.24", "174.512, 143.718, -158.683, 0.24", "175.25, 144.8, -159.276, 0.72", "176.272, 146.481, -160.017, 0.36", "176.782, 147.354, -160.402, 0.36", "177.474, 148.582, -160.906, 1.08", "178.266, 150.002, -161.554, 0.36", "180.233, 153.613, -163.247, 0.36", "180.666, 154.437, -163.689, 0.36", "181.342, 155.805, -164.595, 1.2", "181.538, 156.212, -164.885, 0.72", "181.949, 157.04, -165.519, 0.36", "182.28, 157.72, -166.059, 0.36", "183.448, 160.173, -167.613, 0.36", "184.266, 162.496, -169.408, 0.84" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "29.1505, -4.68455, -20.6997, 0.84", "31.5957, -6.89442, -20.5535, 0.84", "33.3619, -8.6303, -20.5872, 0.84", "36.1807, -11.4844, -20.8992, 0.6", "38.1486, -13.5215, -21.2221, 0.6", "40.8723, -16.4464, -21.8513, 0.6", "42.6445, -18.3934, -22.3317, 0.48", "44.5344, -20.4965, -23.0119, 0.48", "46.3446, -22.5884, -23.7364, 0.48", "48.2938, -24.9553, -24.5463, 0.84", "49.8876, -26.8367, -25.1743, 0.72", "51.6846, -28.889, -25.7681, 0.72", "54.4394, -31.8739, -26.4074, 0.72", "55.3814, -32.9133, -26.5222, 0.6", "56.7259, -34.4307, -26.5955, 0.6", "59.603, -37.7612, -26.7072, 0.84", "61.3535, -39.8572, -26.7549, 0.48", "63.5451, -42.5391, -26.9939, 0.48", "66.6215, -46.3931, -27.5553, 0.48", "68.1321, -48.2468, -27.8843, 0.48", "70.4445, -51.0233, -28.4526, 0.84", "72.6564, -53.6313, -29.0155, 0.84", "76.3607, -57.9056, -30.0087, 0.84", "79.3505, -61.3009, -30.7963, 0.72", "82.0655, -64.3098, -31.4846, 0.6", "85.3403, -67.901, -32.221, 0.6", "87.3972, -70.1125, -32.5968, 0.6", "89.0567, -71.8945, -32.8573, 0.48", "91.3107, -74.3526, -33.1184, 0.48", "92.7462, -75.8838, -33.3063, 0.48", "94.6598, -77.9248, -33.6021, 0.48", "96.9651, -80.3636, -33.9759, 0.48", "98.7911, -82.1874, -34.2615, 0.36", "100.516, -83.7688, -34.5062, 0.36", "102.377, -85.329, -34.6207, 0.36", "104.125, -86.6582, -34.6125, 0.36", "104.614, -86.9998, -34.5683, 0.36", "106.714, -88.4079, -34.2339, 0.36", "109.738, -90.3724, -33.6104, 0.24", "113.35, -92.8165, -32.8145, 0.24", "115.069, -94.0589, -32.4308, 0.24", "116.6, -95.2406, -32.1061, 0.72", "118.622, -96.9633, -31.7259, 0.36", "120.327, -98.677, -31.4775, 0.36", "122.127, -100.842, -31.3562, 0.72", "123.13, -102.285, -31.4264, 0.48", "124.201, -103.997, -31.5662, 0.84", "125.009, -105.352, -31.7253, 0.48", "126.198, -107.411, -31.9703, 0.84", "126.849, -108.504, -32.1001, 0.48", "128.066, -110.397, -32.2688, 0.96", "129.234, -112.067, -32.376, 0.36", "130.699, -114.082, -32.5032, 0.36", "131.698, -115.379, -32.5631, 0.36", "133.928, -118.17, -32.6473, 0.84", "135.101, -119.552, -32.701, 0.48", "137.243, -122.026, -32.7826, 0.48", "140.002, -125.202, -32.8746, 0.48", "141.489, -126.889, -32.9235, 0.48", "141.638, -127.057, -32.9299, 0.48", "146.228, -132.383, -33.2656, 0.72" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-8.20154, 19.4693, 6.89903, 0.6", "-8.38273, 21.0832, 8.61516, 0.6", "-8.60837, 22.2476, 9.88095, 0.6", "-8.9396, 23.7345, 11.3827, 0.6", "-9.20715, 24.6252, 12.2204, 0.48", "-9.45935, 25.2999, 12.8293, 0.48", "-9.85735, 26.3646, 13.7902, 0.48", "-10.7254, 28.1463, 15.361, 0.24", "-11.2085, 28.9576, 16.0238, 0.24", "-11.9279, 30.0301, 16.7897, 0.12", "-12.3942, 30.6891, 17.2806, 0.12", "-15.2382, 35.5942, 21.8473, 0.12", "-19.6025, 40.1413, 25.4937, 0.12", "-23.7316, 44.1794, 29.8995, 0.12", "-26.819, 48.5085, 34.8497, 0.12", "-29.71, 53.6432, 39.139, 0.12", "-32.6167, 58.1779, 44.0208, 0.12", "-35.4759, 62.9562, 48.7046, 0.12", "-37.5378, 68.4079, 53.0896, 0.12", "-40.1267, 72.3556, 58.5957, 0.12", "-42.3567, 76.8272, 63.868, 0.12", "-45.8319, 79.4812, 69.6307, 0.12", "-49.7756, 83.1197, 74.5108, 0.12", "-53.0766, 87.7051, 79.0913, 0.12", "-56.5004, 92.2932, 83.5797, 0.12", "-58.5609, 97.4782, 88.2629, 0.12" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-8.20154, 19.4693, 6.89903, 0.72", "-9.30394, 16.9839, 9.92557, 0.72", "-9.78879, 16.0419, 10.9318, 0.72", "-10.3442, 15.0094, 12.0268, 0.6", "-10.6434, 14.453, 12.6169, 0.6", "-11.8955, 12.1252, 15.0854, 0.6", "-12.4936, 11.0132, 16.2647, 0.6", "-13.8436, 8.77649, 18.6252, 0.6", "-14.3779, 8.03405, 19.5156, 0.6" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.84977, 23.3914, -0.435749, 0.72", "-5.13204, 24.9216, -0.11635, 0.72", "-4.12474, 27.1671, 0.305439, 0.6", "-3.08433, 29.6588, 0.727358, 0.6", "-2.46612, 31.1952, 0.952485, 0.6", "-1.57604, 33.4901, 1.26669, 0.6", "-0.93726, 35.2474, 1.48462, 0.6", "-0.327925, 37.1583, 1.6806, 0.6", "0.0138777, 38.366, 1.77986, 0.6", "0.598441, 40.441, 2.0237, 0.6", "1.20336, 42.5713, 2.40062, 0.6", "1.76976, 44.5639, 2.80784, 0.48", "2.19022, 46.048, 3.16825, 0.48", "2.90266, 48.5649, 3.84632, 0.48", "3.75383, 51.5167, 4.67369, 0.48", "4.93868, 55.5839, 5.8409, 0.48", "5.47745, 57.3977, 6.37542, 0.48", "5.87654, 58.6768, 6.75829, 0.48", "6.32034, 60.1072, 7.18415, 0.48", "6.83982, 61.7852, 7.63461, 0.48", "7.1368, 62.8519, 7.83697, 0.48", "7.61455, 64.3167, 7.99727, 0.48", "7.93506, 65.197, 8.11239, 0.48" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.84977, 23.3914, -0.435749, 2.17", "-6.4802, 29.4926, -2.5316, 2.17", "-6.70308, 31.6496, -3.27255, 1.81", "-6.8756, 33.3192, -3.8461, 1.81", "-7.15656, 36.0383, -4.78015, 2.65" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "23.0431, -27.9758, -3.65946, 0.72", "24.6269, -32.2359, -8.27162, 0.72", "25.9935, -34.7999, -11.2685, 0.72", "27.3999, -37.0787, -14.0742, 0.72", "28.6948, -39.2369, -16.6275, 0.72", "30.0581, -41.6614, -19.458, 0.72", "31.8202, -45.2073, -23.3657, 0.72", "32.8965, -47.5788, -25.6793, 1.08", "33.8968, -49.8505, -27.8006, 1.08", "34.6579, -52.2656, -29.8932, 0.48", "34.9274, -53.787, -31.056, 0.48", "35.1564, -56.8055, -33.0353, 0.48", "35.3017, -58.3262, -34.1403, 0.48", "35.5501, -60.4322, -36.0177, 0.96", "35.9444, -63.0553, -38.6367, 0.6", "36.5702, -65.3398, -41.3826, 0.48", "37.1057, -66.8978, -43.4441, 0.48", "39.6518, -73.2742, -52.886, 0.48", "40.4913, -75.0625, -55.8887, 0.36", "41.0322, -76.1446, -57.9445, 0.36", "42.3361, -78.9211, -63.6021, 0.36", "42.8469, -80.2503, -66.3595, 0.36", "43.5514, -82.8742, -71.8487, 0.36", "44.1673, -85.0433, -76.3799, 0.36", "44.9945, -87.1379, -80.4886, 0.36", "45.645, -88.3488, -82.8617, 0.36", "46.251, -89.3071, -84.5894, 0.36", "47.0005, -90.327, -86.3422, 0.36", "53.7817, -99.388, -100.032, 0.36", "55.7623, -102.067, -103.785, 0.36", "58.1756, -105.3, -108.284, 0.36", "60.6638, -108.605, -113.28, 0.36", "61.2882, -109.915, -115.09, 0.36", "61.8804, -113.329, -119.201, 0.36", "61.4132, -117.589, -124.185, 0.36", "60.9495, -120.239, -127.475, 0.36", "60.1363, -124.596, -132.711, 0.36", "58.4622, -135.81, -145.467, 0.36", "58.2512, -138.894, -148.756, 0.36", "58.5449, -149.233, -159.405, 0.36", "59.0733, -153.655, -163.686, 0.36", "59.8604, -157.368, -167.129, 0.36", "61.0077, -161.27, -170.583, 0.36", "62.2743, -164.462, -173.552, 0.36", "64.9281, -171.79, -180.024, 0.36", "66.4727, -177.64, -184.395, 0.36", "67.4135, -182.553, -188.02, 0.36", "67.8863, -186.514, -191.136, 0.36", "67.9581, -189.343, -193.678, 0.36", "67.7998, -191.246, -195.501, 0.36", "67.0389, -195.7, -200.011, 0.36", "66.4596, -198.183, -202.777, 0.36", "64.9782, -203.357, -209.389, 0.36", "63.2396, -208.776, -217.125, 0.36", "62.2163, -211.924, -221.853, 0.36", "61.5627, -214.314, -225.822, 0.36", "61.2703, -215.701, -228.391, 0.36", "61.1275, -217.892, -232.543, 0.36", "61.3049, -219.231, -234.844, 0.36", "61.8131, -221.238, -238.091, 0.36", "63.5197, -226.054, -246.307, 0.36", "64.178, -227.592, -248.977, 0.36", "66.0112, -231.228, -255.321, 0.36", "67.7175, -234.235, -260.284, 0.36" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "23.0431, -27.9758, -3.65946, 0.6", "24.6792, -29.2744, -3.62452, 0.6", "26.4569, -30.8554, -3.71513, 0.6", "27.7482, -32.0706, -3.84053, 0.48", "29.5952, -33.8069, -4.03579, 0.84", "30.8183, -34.944, -4.15932, 0.84", "31.9209, -35.9782, -4.26415, 0.72", "33.6514, -37.7136, -4.41353, 0.72", "34.6899, -38.8056, -4.45589, 0.72", "35.5205, -39.6814, -4.46402, 1.2", "36.5815, -40.738, -4.4276, 0.84", "37.7137, -41.7879, -4.41456, 0.84", "38.8216, -42.7858, -4.41219, 0.6", "40.2538, -44.0193, -4.38941, 0.6", "40.9447, -44.5998, -4.39054, 0.6", "42.4469, -45.8766, -4.43331, 0.96", "44.3003, -47.4423, -4.51148, 0.72", "45.4278, -48.3886, -4.57467, 0.48", "46.4244, -49.2315, -4.64473, 1.33", "47.7534, -50.4104, -4.68244, 0.72", "49.2019, -51.7663, -4.62778, 0.6", "50.1687, -52.7049, -4.58599, 0.48", "50.756, -53.275, -4.55141, 0.48", "51.3019, -53.778, -4.52163, 0.36", "52.4156, -54.7898, -4.46794, 0.24", "53.6354, -55.8654, -4.37329, 0.96", "56.5657, -58.3426, -4.05226, 0.24", "57.9293, -59.4978, -3.80912, 1.57", "60.3919, -61.6425, -3.22802, 0.36", "61.1166, -62.3018, -3.02353, 0.36", "62.6031, -63.692, -2.52415, 0.36", "63.8211, -64.9033, -1.99559, 1.08", "65.263, -66.506, -1.12761, 0.6", "65.8059, -67.1815, -0.776205, 0.48", "66.4963, -68.1323, -0.45824, 0.96", "67.3606, -69.3812, -0.259956, 0.36", "68.0152, -70.3805, -0.253534, 0.84", "68.5557, -71.2065, -0.310516, 0.36", "69.0717, -71.9743, -0.435116, 0.96", "71.5228, -75.5496, -1.15656, 0.24", "72.7274, -77.3516, -1.60533, 0.24", "73.2501, -78.1757, -1.86403, 1.69" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "111.103, -105.697, 102.125, 0.24", "114.583, -109.29, 106.077, 0.24", "117.829, -112.848, 110.254, 0.24", "120.68, -116.275, 114.807, 0.24", "123.223, -119.478, 119.688, 0.24", "125.732, -122.144, 124.88, 0.24", "128.421, -125.919, 129.268, 0.24", "131.758, -129.25, 133.549, 0.24", "134.762, -133.065, 137.692, 0.24", "138.686, -136.655, 141.203, 0.24" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "111.103, -105.697, 102.125, 0.24", "117.382, -110.447, 107.806, 0.24", "124.107, -114.411, 113.547, 0.24", "130.603, -117.524, 120.005, 0.24", "137.666, -119.745, 126.207, 0.24", "143.668, -123.138, 133.005, 0.24" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "146.228, -132.383, -33.2656, 0.24", "152.774, -132.912, -40.5707, 0.24", "154.873, -133.199, -42.772, 0.24", "161.325, -134.271, -49.3353, 0.24", "164.441, -134.912, -52.4567, 0.24", "167.746, -135.738, -55.5897, 0.24", "170.911, -136.61, -58.4994, 0.24", "173.086, -137.377, -60.2643, 0.24", "174.627, -137.996, -61.4774, 0.24", "176.733, -139.008, -62.9425, 0.24", "180.24, -140.809, -65.347, 0.24", "184.118, -142.986, -67.9847, 0.24", "186.624, -144.437, -69.7497, 0.24", "188.301, -145.373, -70.868, 0.24" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "146.228, -132.383, -33.2656, 0.24", "148.034, -135.805, -33.5112, 0.24", "150.38, -140.367, -33.7288, 0.24", "152.031, -143.652, -34.2505, 0.24", "154.452, -148.861, -36.4283, 0.24", "155.613, -151.694, -38.1799, 0.24", "156.237, -153.396, -39.3972, 0.24", "157.059, -156.011, -41.7975, 0.24", "158.322, -161.09, -47.4524, 0.24", "159.737, -168.034, -56.3484, 0.24", "160.19, -170.688, -60.068, 0.24", "160.362, -171.628, -61.4156, 0.24", "160.882, -174.116, -64.9067, 0.24", "161.268, -175.595, -66.8805, 0.24", "162.641, -179.839, -71.4329, 0.24", "163.31, -181.378, -72.7299, 0.24", "165.09, -184.499, -75.3939, 0.24", "166.241, -186.151, -76.7896, 0.24", "167.199, -187.338, -77.7448, 0.24", "169.265, -189.582, -79.5263, 0.24", "171.1, -191.457, -80.9736, 0.24", "175.571, -195.904, -84.4545, 0.24", "178.655, -198.864, -86.7477, 0.24", "181.462, -201.45, -88.7901, 0.24", "183.578, -203.333, -90.2828, 0.24", "186.495, -205.784, -92.2618, 0.24" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-58.5609, 97.4782, 88.2629, 0.12", "-60.1093, 103.568, 94.7395, 0.12", "-60.8311, 110.546, 100.454, 0.12", "-61.2599, 117.844, 105.803, 0.12", "-60.8169, 124.083, 112.302, 0.12", "-59.9524, 131.106, 117.932, 0.12", "-58.2628, 136.792, 124.705, 0.12", "-56.5411, 142.834, 131.164, 0.12", "-56.4207, 148.959, 137.781, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-58.5609, 97.4782, 88.2629, 0.12", "-62.8097, 102.293, 93.1799, 0.12", "-65.9355, 107.614, 98.4176, 0.12", "-67.273, 113.407, 103.917, 0.12", "-67.9957, 119.716, 108.965, 0.12", "-67.7381, 125.902, 114.195, 0.12", "-67.9413, 132.437, 119.01, 0.12", "-67.1556, 139.209, 123.429, 0.12", "-66.5487, 146.383, 127.235, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-14.3779, 8.03405, 19.5156, 0.24", "-16.3351, 7.11257, 19.5771, 0.24", "-17.7279, 6.48958, 19.666, 0.24", "-19.8403, 5.54468, 19.801, 0.24", "-21.0947, 4.9836, 19.8811, 0.24", "-21.8574, 4.64242, 19.9298, 0.24", "-22.8786, 4.18565, 19.995, 0.24", "-23.7433, 3.84345, 20.2071, 0.24", "-30.4723, -0.632875, 20.9769, 0.24", "-36.8407, -5.12754, 23.1998, 0.24", "-43.6926, -8.39863, 25.9385, 0.24", "-49.711, -11.6857, 30.1678, 0.24", "-55.8854, -15.8064, 33.3738, 0.24" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-14.3779, 8.03405, 19.5156, 0.6", "-15.8236, 7.7964, 20.4206, 0.6", "-17.4747, 7.70437, 21.613, 0.6", "-18.3385, 7.73289, 22.2538, 0.6", "-18.9522, 7.79125, 22.7016, 0.6", "-20.2599, 7.96397, 23.6094, 0.48", "-22.5221, 8.26278, 25.18, 0.48", "-23.7761, 8.48714, 26.1086, 0.48", "-25.1299, 8.81369, 27.1318, 0.48", "-26.1508, 9.12784, 27.9245, 0.48", "-27.5523, 9.6711, 29.0091, 0.48" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "7.93506, 65.197, 8.11239, 0.36", "10.5145, 68.0612, 5.22983, 0.36", "11.5145, 69.1716, 4.11228, 0.36", "14.2317, 72.1888, 1.07571, 0.36", "20.7773, 77.2933, -3.88774, 0.36", "27.6392, 82.5059, -8.28485, 0.36", "34.8358, 87.5928, -12.2685, 0.36", "42.5574, 92.9258, -14.6367, 0.36", "49.493, 98.6719, -18.2063, 0.36", "55.4412, 104.58, -23.0693, 0.36", "60.0937, 110.572, -29.1052, 0.36", "66.0554, 114.994, -35.2819, 0.36", "72.7237, 118.632, -41.222, 0.36", "80.4436, 122.337, -45.6594, 0.36", "88.7473, 125.85, -49.0754, 0.36", "97.1518, 128.186, -53.1492, 0.36", "106.43, 128.539, -55.6661, 0.36", "115.852, 127.632, -57.4126, 0.36", "124.688, 126.374, -61.0254, 0.36", "132.776, 123.548, -65.4642, 0.36", "141.83, 122.758, -68.6315, 0.36", "151.113, 121.492, -70.8512, 0.36", "159.821, 120.507, -74.8352, 0.36", "169.113, 121.139, -77.2449, 0.36", "178.453, 122.675, -78.9738, 0.36", "187.828, 122.841, -81.1254, 0.36" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.93506, 65.197, 8.11239, 0.36", "8.71312, 68.2977, 8.96481, 0.36", "9.39572, 71.0179, 9.71264, 0.36", "13.0016, 80.8066, 10.9792, 0.36", "16.6376, 90.5875, 12.215, 0.36", "21.8523, 99.387, 14.4286, 0.36", "27.7515, 107.461, 17.4205, 0.36", "32.3156, 115.745, 21.8658, 0.36", "37.7346, 124.027, 25.2086, 0.36", "41.869, 133.229, 28.0642, 0.36", "45.3069, 142.701, 31.0096, 0.36", "49.2206, 151.219, 35.6517, 0.36" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-7.15656, 36.0383, -4.78015, 1.45", "-7.04851, 39.9207, -5.09953, 1.45", "-7.23055, 43.7109, -5.44653, 1.45", "-7.44626, 46.4016, -5.65286, 1.45", "-7.68897, 48.9891, -5.81629, 1.45", "-8.08406, 53.028, -6.02774, 1.08", "-8.31886, 55.537, -6.28303, 1.08", "-8.90806, 60.573, -7.01214, 0.96", "-9.37665, 64.8653, -7.72033, 0.96", "-9.68865, 68.2999, -8.31376, 0.96", "-9.90786, 71.8623, -8.9216, 0.96", "-10.082, 77.8315, -9.87258, 0.96", "-10.0804, 82.4327, -10.5854, 0.96", "-9.99678, 86.5179, -11.296, 0.96", "-9.92901, 90.5532, -12.2161, 0.96", "-9.93375, 95.2419, -13.4974, 0.96", "-10.0138, 98.765, -14.5706, 0.96", "-10.1667, 102.186, -15.7344, 0.96", "-10.4663, 106.852, -17.611, 0.96", "-10.9101, 112.65, -20.3666, 0.96", "-11.3572, 117.602, -22.8028, 0.96", "-11.7783, 121.264, -24.6161, 0.96", "-12.1976, 124.556, -26.1563, 0.96", "-12.5973, 128.001, -27.5846, 0.96", "-13.0119, 132.117, -28.9309, 0.96", "-13.3778, 137.043, -30.2, 0.96", "-13.5545, 140.498, -31.0587, 0.96", "-13.7745, 145.258, -32.133, 0.96", "-13.9801, 150.039, -33.0949, 0.96", "-14.0869, 152.591, -33.5968, 0.96", "-14.3677, 159.372, -34.8123, 0.96", "-14.4582, 163.701, -35.6994, 0.96", "-14.4866, 167.1, -36.3358, 0.96", "-14.4911, 170.527, -36.9937, 0.96", "-14.483, 173.833, -37.6547, 0.96", "-14.4308, 178.132, -38.5148, 0.96", "-14.3558, 184.278, -39.6607, 0.96", "-14.2883, 186.977, -40.1904, 0.96", "-14.1273, 191.695, -41.2794, 0.96", "-14.0689, 193.644, -41.7783, 0.96", "-13.8956, 199.873, -43.4688, 1.2", "-13.8151, 203.381, -44.4455, 1.08", "-13.7772, 206.152, -45.1796, 1.33", "-13.6891, 211.366, -46.4995, 1.08", "-13.6438, 214.954, -47.3164, 1.08", "-13.5969, 218.22, -48.06, 0.96", "-13.581, 218.981, -48.2322, 0.96", "-13.515, 222.171, -48.855, 0.96", "-13.4917, 224.92, -49.2752, 0.96", "-13.428, 229.143, -49.8169, 0.72", "-13.37, 232.43, -50.1787, 0.72", "-13.3242, 237.323, -50.6984, 0.72", "-13.3179, 240.224, -51.0094, 0.96", "-13.3447, 242.812, -51.2869, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.15656, 36.0383, -4.78015, 0.72", "-13.8035, 38.3985, -7.09087, 0.72", "-16.1337, 39.2754, -8.00145, 0.72", "-18.6226, 40.201, -8.88816, 0.72", "-20.6217, 40.9649, -9.52887, 0.72", "-23.2959, 42.1578, -10.4238, 0.6", "-27.6858, 44.5001, -11.9838, 0.6", "-30.4754, 46.3172, -12.9659, 0.6", "-33.2201, 48.4773, -14.1015, 0.6", "-34.7298, 49.7396, -14.7954, 0.36", "-38.3929, 52.8809, -16.4895, 0.6", "-40.9762, 55.1801, -17.6139, 0.6", "-43.2795, 57.1556, -18.4989, 0.6", "-44.5393, 58.1685, -18.9773, 0.48", "-50.4934, 62.83, -21.3848, 1.08", "-51.7069, 63.6673, -21.8511, 0.72", "-52.9857, 64.3438, -22.2459, 0.48", "-56.3308, 65.7039, -23.1609, 0.84", "-59.2597, 66.6948, -23.8862, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "143.668, -123.138, 133.005, 0.24", "149.488, -126.65, 141.264, 0.24", "155.467, -128.761, 149.847, 0.24", "160.198, -130.159, 159.306, 0.24", "165.198, -132.532, 168.441, 0.24", "169.643, -135.801, 177.611, 0.24" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "143.668, -123.138, 133.005, 0.24", "151.418, -126.244, 137.361, 0.24", "158.874, -130.635, 141.14, 0.24", "166.174, -135.636, 144.477, 0.24", "172.093, -142.227, 147.924, 0.24", "179.043, -148.339, 149.992, 0.24" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "188.301, -145.373, -70.868, 0.24", "190.998, -146.938, -72.5384, 0.24", "192.796, -147.914, -73.7941, 0.24", "196.193, -149.766, -76.2519, 0.24", "196.934, -150.173, -76.7756, 0.24", "198.133, -150.788, -77.6131, 0.24", "201.381, -152.478, -79.897, 0.24", "204.515, -154.091, -82.154, 0.24", "205.741, -154.718, -83.0262, 0.24", "208.136, -155.936, -84.6975, 0.24", "210.977, -157.247, -86.6691, 0.24", "212.837, -158.016, -87.916, 0.24", "215.093, -158.887, -89.4146, 0.24", "217.434, -159.8, -90.9626, 0.24", "220.016, -160.734, -92.7761, 0.24", "222.947, -161.83, -94.81, 0.24", "224.772, -162.482, -96.1296, 0.24", "226.727, -163.074, -97.526, 0.24", "228.805, -163.685, -99.0417, 0.24", "232.822, -164.844, -102.004, 0.24", "235.355, -165.625, -103.856, 0.24", "240.718, -167.367, -107.775, 0.24", "244.475, -168.476, -110.506, 0.24" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "188.301, -145.373, -70.868, 0.24", "188.366, -148.185, -71.1122, 0.24", "188.414, -150.299, -71.2957, 0.24", "188.47, -152.701, -71.5042, 0.24" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-27.5523, 9.6711, 29.0091, 0.24", "-30.5061, 8.86972, 29.0112, 0.24", "-33.6929, 8.20761, 29.0507, 0.24", "-35.3743, 7.85826, 29.0715, 0.24", "-38.7058, 7.1661, 29.1127, 0.24", "-42.075, 6.46607, 29.1544, 0.24", "-44.942, 5.87039, 29.1899, 0.24", "-46.5071, 5.55358, 29.2814, 0.24" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-27.5523, 9.6711, 29.0091, 0.48", "-28.5569, 8.33555, 29.7949, 0.48", "-29.3058, 7.33992, 30.3808, 0.48", "-30.3067, 6.00935, 31.1638, 0.24", "-31.7824, 4.04746, 32.3182, 0.24", "-34.4668, 0.478654, 34.4183, 0.24", "-40.9315, -8.10618, 38.1928, 0.24", "-49.3461, -15.0535, 41.2453, 0.24", "-58.7844, -19.6696, 45.3968, 0.24" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "49.2206, 151.219, 35.6517, 0.24", "49.5156, 155.181, 45.6561, 0.24", "48.8654, 157.493, 56.1283, 0.24", "49.5304, 158.318, 66.8124, 0.24", "47.9561, 161.532, 76.953, 0.24", "45.4734, 163.381, 87.2379, 0.24", "44.39, 165.614, 97.6905, 0.24" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "49.2206, 151.219, 35.6517, 0.24", "53.6351, 160.877, 34.6582, 0.24", "58.8131, 170.17, 34.1711, 0.24", "64.7095, 178.855, 32.5431, 0.24" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-13.3447, 242.812, -51.2869, 0.84", "-13.0448, 247.378, -52.5637, 0.84", "-12.8555, 250.377, -53.3028, 0.84", "-12.5589, 254.752, -54.2954, 0.72", "-12.3595, 257.723, -54.9798, 0.6", "-11.8781, 265.366, -56.6867, 0.84", "-11.6549, 269.103, -57.4856, 0.84", "-11.475, 272.782, -58.1667, 0.6", "-11.3748, 275.735, -58.711, 0.6", "-11.3253, 278.561, -59.2128, 0.6", "-11.3593, 282.747, -59.9866, 0.6", "-11.5442, 288.439, -61.1236, 0.6", "-11.7932, 293.885, -62.1914, 0.6", "-11.9376, 296.794, -62.7217, 0.6", "-12.1438, 300.851, -63.3804, 0.6", "-12.4441, 306.841, -64.2506, 0.6", "-12.6515, 311.3, -64.8622, 0.6", "-12.8637, 316.396, -65.5379, 0.6", "-12.9889, 320.148, -66.0538, 0.48", "-13.1564, 324.226, -66.6261, 0.48", "-13.3252, 327.518, -67.0651, 0.48", "-13.5164, 330.456, -67.4139, 0.36", "-14.0684, 335.751, -68.1378, 0.36", "-14.6653, 340.345, -68.816, 0.36", "-15.2923, 344.393, -69.516, 0.36", "-15.8867, 348.068, -70.1636, 0.36", "-16.5911, 352.73, -71.0024, 0.36", "-17.5498, 359.435, -72.2025, 0.36", "-18.0198, 363.21, -72.8617, 0.36", "-18.5087, 368.237, -73.7306, 0.36", "-18.815, 372.985, -74.5914, 0.36", "-19.0168, 378.815, -75.6341, 0.36", "-19.0912, 383.17, -76.44, 0.36", "-19.1116, 385.411, -76.8314, 0.36", "-19.1467, 391.38, -77.8701, 0.36", "-19.2593, 394.785, -78.6375, 0.36", "-19.5768, 399.389, -79.8347, 0.36", "-20.1363, 404.472, -81.2845, 0.36", "-20.7306, 408.049, -82.4989, 0.36", "-21.5957, 412.032, -83.9306, 0.36", "-23.6163, 419.614, -86.821, 0.36", "-24.8799, 423.983, -88.4173, 0.36", "-26.0027, 427.983, -89.7377, 0.36", "-27.6576, 434.428, -91.5626, 0.36", "-28.7415, 439.344, -92.7345, 0.36", "-29.6055, 444.083, -93.616, 0.12", "-30.2629, 449.711, -94.36, 0.12", "-30.6958, 455.951, -95.1543, 0.12", "-30.8039, 460.736, -95.7113, 0.12", "-30.6861, 468.286, -96.5598, 0.12", "-30.5072, 473.127, -97.2362, 0.12", "-30.1326, 481.771, -98.661, 0.12", "-29.7727, 489.5, -100.231, 0.12", "-29.4576, 496.175, -101.891, 0.12", "-29.2821, 499.171, -102.752, 0.12", "-28.7535, 506.944, -105.342, 0.12", "-28.3389, 511.666, -107.12, 0.12", "-27.876, 515.908, -108.98, 0.12", "-26.8821, 522.2, -112.123, 0.12", "-25.7022, 527.399, -115.032, 0.12", "-24.2591, 532.384, -118.213, 0.12", "-23.1631, 535.383, -120.37, 0.12", "-21.6844, 538.982, -123.238, 0.12", "-20.2994, 542.399, -126.093, 0.12", "-19.0669, 545.549, -128.976, 0.12", "-17.9678, 548.891, -132.191, 0.12", "-17.5585, 550.911, -133.93, 0.12", "-17.1989, 553.92, -135.946, 0.12", "-16.8206, 558.949, -138.26, 0.12", "-16.8369, 563.719, -140.003, 0.12", "-16.955, 565.989, -140.648, 0.12", "-17.3858, 573.734, -142.53, 0.12", "-17.7787, 580.521, -144.019, 0.12", "-18.1557, 587.631, -145.275, 0.12", "-18.587, 594.39, -146.214, 0.12", "-19.0252, 600.458, -146.681, 0.12" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.3447, 242.812, -51.2869, 0.36", "-13.6099, 246.197, -52.3079, 0.36", "-13.8107, 249.53, -53.2272, 0.36", "-13.9443, 253.861, -54.2888, 0.36", "-13.9874, 258.67, -55.3421, 0.36", "-13.9692, 264.106, -56.4759, 0.36", "-13.9069, 266.81, -57.0052, 0.36", "-13.5969, 271.83, -58.0249, 0.36", "-13.1683, 277.161, -59.1227, 0.36", "-12.7556, 281.821, -60.0382, 0.36", "-12.3294, 286.479, -60.8769, 0.36", "-11.8119, 292.442, -61.8795, 0.36", "-11.2672, 300.972, -63.3368, 0.36", "-11.0847, 306.898, -64.3155, 0.24", "-11.0805, 311.019, -65.0149, 0.24", "-11.1679, 316.461, -65.9187, 0.24", "-11.242, 318.439, -66.2238, 0.24", "-11.5574, 323.146, -66.934, 0.24", "-12.3029, 331.129, -67.9989, 0.24", "-12.5712, 333.39, -68.3274, 0.24", "-13.0425, 337.263, -68.893, 0.24", "-13.4553, 341.114, -69.4279, 0.24", "-13.8831, 345.986, -70.0742, 0.24", "-14.2764, 351.793, -70.7764, 0.24", "-14.6255, 357.46, -71.4302, 0.24", "-14.9206, 363.285, -72.1343, 0.24", "-15.1088, 368.362, -72.81, 0.24", "-15.1495, 370.458, -73.0923, 0.24", "-15.1259, 374.823, -73.6882, 0.24", "-14.9558, 378.65, -74.2967, 0.24", "-14.5143, 384.035, -75.3093, 0.24", "-14.154, 388.281, -76.246, 0.24" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-59.2597, 66.6948, -23.8862, 0.48", "-59.8243, 68.1705, -25.1849, 0.48", "-60.8723, 70.9231, -27.0906, 0.48", "-61.9944, 73.6999, -28.613, 0.48", "-62.6934, 75.3214, -29.5247, 0.48", "-63.4981, 76.9304, -30.4764, 0.48", "-64.5329, 78.982, -31.5849, 0.36", "-65.7795, 81.31, -32.8034, 0.6", "-66.938, 83.3915, -33.8127, 0.36", "-68.5847, 86.6448, -35.4164, 0.36", "-69.8745, 89.5091, -36.8773, 0.36", "-71.015, 92.1972, -38.4681, 0.84", "-72.205, 95.2509, -40.3972, 0.48", "-72.6005, 96.3426, -41.1869, 0.48", "-73.0999, 97.9149, -42.3878, 0.36", "-73.7602, 99.8888, -43.9161, 1.08", "-75.1605, 103.683, -47.153, 0.6", "-75.5757, 104.682, -48.0377, 0.6", "-77.1935, 108.328, -51.2411, 0.36", "-78.3119, 110.712, -53.3173, 0.72", "-79.62, 113.545, -55.6543, 0.72", "-80.8903, 116.443, -57.9158, 0.36", "-81.8956, 118.765, -59.6206, 0.84", "-83.4544, 122.175, -62.0112, 0.36", "-84.1477, 123.722, -63.0392, 0.96", "-86.7638, 129.654, -66.8602, 0.24", "-87.8159, 132.216, -68.4263, 0.72", "-89.5326, 136.304, -70.8047, 0.36", "-90.5157, 138.448, -72.0939, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-59.2597, 66.6948, -23.8862, 0.36", "-60.9084, 67.486, -24.6697, 0.36", "-63.4431, 68.9953, -25.961, 0.36", "-65.5858, 70.4392, -27.3721, 0.36", "-69.4999, 73.3044, -29.7184, 0.36", "-72.6875, 75.7178, -31.6342, 0.24", "-74.7304, 77.254, -32.8327, 0.12", "-77.5264, 79.4566, -34.4411, 0.12", "-83.4804, 84.2878, -37.8048, 0.12", "-87.7223, 87.123, -39.8782, 0.12", "-91.1053, 89.1155, -41.4677, 0.12", "-92.9778, 90.1731, -42.2218, 0.12", "-94.9544, 91.2579, -42.9766, 0.12", "-95.8535, 91.7362, -43.3039, 0.12", "-111.799, 100.068, -48.8961, 0.12", "-117.881, 103.216, -51.2004, 0.12", "-125.099, 107.035, -53.8355, 0.12", "-133.097, 111.402, -56.8558, 0.12" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-46.5071, 5.55358, 29.2814, 0.24", "-48.5591, 5.56636, 30.4794, 0.24", "-49.7005, 5.60543, 31.1294, 0.24", "-51.5986, 5.68532, 32.098, 0.36", "-52.9231, 5.76006, 32.7057, 0.36", "-54.3394, 5.96307, 33.3927, 0.36", "-55.1117, 6.09994, 33.7775, 0.36", "-56.6126, 6.41095, 34.4713, 0.36", "-58.7182, 6.86619, 35.4681, 0.36", "-60.2227, 7.17913, 36.1849, 0.36", "-63.4754, 7.78496, 37.7239, 0.36", "-64.3755, 7.95217, 38.15, 0.36", "-66.3988, 8.30276, 39.1188, 0.36", "-67.7312, 8.52445, 39.7698, 0.36", "-69.6072, 8.79692, 40.7443, 0.36", "-70.9525, 8.87835, 41.4184, 0.36", "-78.4657, 8.38031, 44.2405, 0.36", "-85.8957, 7.07002, 47.0415, 0.36", "-93.7862, 6.28567, 48.3781, 0.36", "-101.781, 7.08349, 48.6765, 0.36", "-109.535, 9.0147, 47.6875, 0.36", "-117.482, 9.41185, 48.8275, 0.36", "-125.403, 8.67572, 49.9984, 0.36", "-133.247, 7.34598, 51.1952, 0.36", "-141.238, 6.4621, 51.125, 0.36", "-149.046, 5.01112, 52.4193, 0.36" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-46.5071, 5.55358, 29.2814, 0.24", "-45.9065, 9.00791, 27.2912, 0.24", "-45.7818, 10.0084, 26.7935, 0.24", "-45.4531, 12.0967, 25.7985, 0.24", "-45.2753, 13.0687, 25.3591, 0.24", "-44.1248, 18.4597, 22.9439, 0.24", "-43.4878, 21.0574, 21.7859, 0.24", "-42.7517, 23.8239, 20.6253, 0.24", "-41.5226, 27.9865, 18.898, 0.24", "-40.6431, 30.621, 17.8322, 0.24", "-39.7368, 33.2353, 16.7408, 0.24", "-39.1503, 34.8396, 16.0816, 0.24", "-38.7554, 35.9197, 15.6189, 0.24", "-38.1814, 37.5057, 14.8508, 0.24", "-37.1949, 40.2612, 13.4915, 0.24", "-35.2162, 45.5428, 10.8268, 0.24", "-33.9736, 48.6893, 9.28156, 0.24", "-32.7145, 51.6993, 7.74561, 0.24", "-30.7729, 56.2052, 5.41213, 0.24", "-28.6521, 60.9736, 2.92016, 0.24", "-27.674, 62.9893, 1.86212, 0.24", "-26.0921, 65.7219, 0.449892, 0.24", "-23.7249, 69.5979, -1.67458, 0.24" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-14.154, 388.281, -76.246, 0.24", "-13.7906, 392.431, -76.6859, 0.24", "-13.5827, 395.28, -76.9491, 0.24", "-13.3992, 398.244, -77.189, 0.24", "-13.1043, 403.31, -77.5539, 0.24", "-12.8271, 408.125, -77.8689, 0.24", "-12.6643, 410.757, -78.0248, 0.24", "-12.4616, 414.155, -78.0915, 0.24", "-12.1735, 418.223, -78.09, 0.24", "-11.9497, 421.562, -78.0334, 0.24", "-11.8124, 424.232, -77.9713, 0.24", "-11.7876, 427.755, -77.8977, 0.24", "-11.943, 430.973, -77.8886, 0.24", "-12.2687, 433.927, -77.9427, 0.24", "-12.677, 436.202, -78.0395, 0.24", "-13.3955, 439.297, -78.341, 0.24", "-14.4783, 443.29, -78.8991, 0.24", "-15.8593, 447.99, -79.4673, 0.24", "-16.837, 451.409, -79.8228, 0.24", "-18.3558, 457.073, -79.9694, 0.24", "-19.1972, 460.513, -79.8421, 0.24", "-19.8686, 464.154, -79.6266, 0.24", "-20.8303, 470.983, -78.8633, 0.24", "-21.2712, 475.336, -78.2234, 0.24", "-21.6135, 480.432, -77.481, 0.24", "-21.6966, 482.462, -77.2028, 0.24", "-21.9773, 489.296, -76.1821, 0.24", "-22.103, 493.815, -75.6733, 0.24", "-22.1718, 496.936, -75.6012, 0.24", "-22.3262, 501.332, -75.7338, 0.24", "-22.4719, 504.44, -76.0952, 0.24", "-22.704, 508.184, -76.458, 0.24" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-14.154, 388.281, -76.246, 0.24", "-15.2226, 394.219, -77.774, 0.24", "-16.0166, 398.631, -78.9093, 0.24", "-16.9079, 403.584, -80.1838, 0.24", "-18.1043, 410.233, -81.8945, 0.24", "-19.7924, 419.614, -84.3084, 0.24", "-20.6547, 424.406, -85.5415, 0.24" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-90.5157, 138.448, -72.0939, 0.48", "-99.9898, 143.404, -77.9394, 0.48", "-115.168, 151.157, -85.5751, 0.12", "-127.036, 157.065, -90.6465, 0.24", "-134.35, 160.694, -93.1295, 0.24", "-138.931, 163.088, -94.2889, 0.24", "-144.712, 166.196, -95.6192, 0.24", "-150.012, 169.205, -96.0624, 0.24", "-153.178, 170.871, -96.1799, 0.24", "-160.949, 174.662, -97.6631, 0.24", "-170.386, 179.353, -100.458, 0.24", "-175.48, 182.114, -102.493, 0.24", "-179.849, 184.829, -104.763, 0.24", "-190.573, 192.03, -111.705, 0.24", "-199.219, 197.723, -117.987, 0.24", "-201.667, 199.23, -119.836, 0.24", "-205.805, 201.572, -122.903, 0.24", "-211.368, 204.684, -126.515, 0.24", "-215.692, 207.11, -129.02, 0.24", "-225.756, 212.507, -133.543, 0.24", "-231.381, 215.13, -135.785, 0.24", "-237.667, 217.731, -138.221, 0.24", "-242.264, 219.364, -139.898, 0.24", "-248.057, 221.249, -141.768, 0.24", "-253.729, 223.327, -143.557, 0.24", "-260.01, 226.334, -145.807, 0.24" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-90.5157, 138.448, -72.0939, 0.48", "-90.9387, 140.847, -75.4567, 0.48", "-91.4864, 144.188, -80.2131, 0.24", "-91.9726, 147.157, -84.2877, 0.24", "-92.555, 150.301, -88.5032, 0.24", "-92.9283, 152.094, -90.8493, 0.24", "-93.3558, 154.148, -93.5362, 0.24", "-93.8922, 156.613, -96.6921, 0.24", "-94.1241, 157.774, -98.181, 0.24", "-94.5186, 159.908, -100.88, 0.24", "-95.2966, 162.672, -104.132, 0.24" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-149.046, 5.01112, 52.4193, 0.24", "-159.208, 4.0982, 55.1479, 0.24", "-169.156, 1.69817, 57.8133, 0.24", "-179.39, -0.365555, 59.4477, 0.24" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-149.046, 5.01112, 52.4193, 0.24", "-158.268, 6.16287, 53.9274, 0.24", "-167.015, 8.45148, 56.573, 0.24", "-174.681, 12.5038, 60.3006, 0.24", "-181.118, 18.481, 63.8577, 0.24" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-20.6547, 424.406, -85.5415, 0.24", "-21.9403, 431.041, -85.6717, 0.24", "-22.9221, 436.108, -85.7712, 0.24", "-23.6481, 439.856, -85.8447, 0.24", "-24.2371, 442.896, -85.9044, 0.24", "-25.2867, 448.313, -86.0107, 0.24" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-20.6547, 424.406, -85.5415, 0.24", "-21.697, 429.628, -85.5731, 0.24", "-23.2521, 434.511, -86.0105, 0.24", "-24.7923, 438.733, -86.8291, 0.24", "-26.1911, 442.079, -87.5547, 0.24", "-27.3759, 445.028, -88.3636, 0.24", "-28.5942, 448.296, -89.3226, 0.24", "-31.1732, 454.752, -91.3181, 0.24", "-33.2218, 459.934, -93.1965, 0.24", "-34.7821, 464.244, -94.8895, 0.24", "-36.1306, 469.446, -96.939, 0.24", "-36.6798, 472.69, -98.0785, 0.24", "-36.9369, 474.188, -98.5392, 0.24", "-37.5175, 477.395, -99.4174, 0.24", "-38.0656, 480.074, -100.08, 0.24", "-40.1109, 489.004, -102.21, 0.24", "-41.0579, 492.598, -102.988, 0.24", "-45.249, 507.744, -106.322, 0.24", "-46.377, 511.941, -107.203, 0.24", "-47.5627, 516.712, -108.173, 0.24", "-48.5402, 521.273, -109.098, 0.24", "-49.0982, 524.407, -109.691, 0.24", "-49.6197, 529.563, -110.581, 0.24", "-49.6806, 534.21, -111.229, 0.24", "-49.6344, 540.167, -112.068, 0.24", "-49.4403, 547.911, -113.188, 0.24", "-49.1082, 555.92, -114.352, 0.24", "-48.6861, 565.273, -115.716, 0.24", "-48.3921, 572.717, -116.758, 0.24" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-181.118, 18.481, 63.8577, 0.24", "-188.169, 21.28, 65.8636, 0.24", "-194.859, 24.841, 67.9368, 0.24", "-201.429, 28.4717, 70.2559, 0.24", "-208.265, 32.1793, 71.445, 0.24", "-214.444, 36.9703, 72.5111, 0.24", "-221.326, 40.647, 73.5223, 0.24" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-181.118, 18.481, 63.8577, 0.24", "-190.093, 22.0435, 68.6872, 0.24", "-199.425, 26.0414, 72.3661, 0.24", "-208.741, 30.6376, 75.3428, 0.24", "-218.706, 33.0327, 78.6815, 0.24", "-227.93, 35.1212, 83.8567, 0.24", "-237.447, 38.5218, 87.637, 0.24", "-246.208, 43.6694, 91.3532, 0.24", "-254.479, 49.7479, 94.8424, 0.24", "-262.269, 55.5325, 99.6782, 0.24", "-269.854, 61.6009, 104.51, 0.24", "-277.58, 66.9129, 109.937, 0.24" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_44", "dend_35", "dend_0", "dend_59", "dend_56", "dend_54", "dend_45", "dend_37", "dend_36", "dend_20", "dend_1", "dend_58", "dend_57", "dend_51", "dend_46", "dend_43", "dend_38", "dend_32", "dend_21", "dend_15", "dend_2", "dend_53", "dend_52", "dend_50", "dend_47", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_22", "dend_19", "dend_16", "dend_8", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_24", "dend_23", "dend_18", "dend_17", "dend_14", "dend_9", "dend_5", "dend_4", "dend_26", "dend_25", "dend_13", "dend_10", "dend_7", "dend_6", "dend_30", "dend_27", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_44", "dend_35", "dend_0", "dend_59", "dend_56", "dend_54", "dend_45", "dend_37", "dend_36", "dend_20", "dend_1", "dend_58", "dend_57", "dend_51", "dend_46", "dend_43", "dend_38", "dend_32", "dend_21", "dend_15", "dend_2", "dend_53", "dend_52", "dend_50", "dend_47", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_22", "dend_19", "dend_16", "dend_8", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_24", "dend_23", "dend_18", "dend_17", "dend_14", "dend_9", "dend_5", "dend_4", "dend_26", "dend_25", "dend_13", "dend_10", "dend_7", "dend_6", "dend_30", "dend_27", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_44", "dend_35", "dend_0", "axon_0", "dend_59", "dend_56", "dend_54", "dend_45", "dend_37", "dend_36", "dend_20", "dend_1", "axon_1", "dend_58", "dend_57", "dend_51", "dend_46", "dend_43", "dend_38", "dend_32", "dend_21", "dend_15", "dend_2", "dend_53", "dend_52", "dend_50", "dend_47", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_22", "dend_19", "dend_16", "dend_8", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_24", "dend_23", "dend_18", "dend_17", "dend_14", "dend_9", "dend_5", "dend_4", "dend_26", "dend_25", "dend_13", "dend_10", "dend_7", "dend_6", "dend_30", "dend_27", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_0", "dend_0", "axon_0", "axon_0", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_45", "dend_45", "dend_45", "dend_45", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_20", "dend_1", "dend_1", "axon_1", "axon_1", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_2", "dend_2", "dend_2", "dend_2", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_NBC_780c5f5ae3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_44
create dend_54
public dend_54
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_20
create dend_32
public dend_32
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_1
create dend_15
public dend_15
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_21
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, axon_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, axon_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.4499999174985625)
    connect dend_44(0), soma_0(0.4499999174985625)
    connect dend_35(0), soma_0(0.4499999174985625)
    connect dend_0(0), soma_0(0.4499999174985625)
    connect axon_0(0), soma_0(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.18133, 10.1802, -0.0136132, 4.51632 ) }
    soma_0 { pt3dadd( -3.71511, 9.17715, -0.012728, 5.89932 ) }
    soma_0 { pt3dadd( -3.24888, 8.1741, -0.0118428, 6.73586 ) }
    soma_0 { pt3dadd( -2.78266, 7.17105, -0.0109576, 7.77662 ) }
    soma_0 { pt3dadd( -2.31644, 6.16799, -0.0100724, 8.83653 ) }
    soma_0 { pt3dadd( -1.85022, 5.16494, -0.00918717, 9.98865 ) }
    soma_0 { pt3dadd( -1.384, 4.16189, -0.00830196, 11.1793 ) }
    soma_0 { pt3dadd( -0.917776, 3.15884, -0.00741676, 12.3766 ) }
    soma_0 { pt3dadd( -0.451555, 2.15579, -0.00653155, 13.3418 ) }
    soma_0 { pt3dadd( 0.0146667, 1.15274, -0.00564635, 14.1684 ) }
    soma_0 { pt3dadd( 0.480888, 0.149684, -0.00476114, 14.5557 ) }
    soma_0 { pt3dadd( 0.94711, -0.853367, -0.00387593, 14.9116 ) }
    soma_0 { pt3dadd( 1.41333, -1.85642, -0.00299073, 14.9294 ) }
    soma_0 { pt3dadd( 1.87955, -2.85947, -0.00210552, 14.4593 ) }
    soma_0 { pt3dadd( 2.34577, -3.86252, -0.00122032, 13.9684 ) }
    soma_0 { pt3dadd( 2.812, -4.86557, -3.35112E-4, 13.2352 ) }
    soma_0 { pt3dadd( 3.27822, -5.86863, 5.50094E-4, 12.4898 ) }
    soma_0 { pt3dadd( 3.74444, -6.87168, 0.0014353, 11.1742 ) }
    soma_0 { pt3dadd( 4.21066, -7.87473, 0.0023205, 8.60206 ) }
    soma_0 { pt3dadd( 4.67688, -8.87778, 0.00320571, 5.94918 ) }
    soma_0 { pt3dadd( 5.1431, -9.88083, 0.00409092, 3.45007 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -4.86983, -2.7323, 10.4413, 1.08 ) }
    dend_55 { pt3dadd( -7.50904, -3.8542, 10.4634, 1.08 ) }
    dend_55 { pt3dadd( -9.61771, -4.8626, 10.4787, 0.96 ) }
    dend_55 { pt3dadd( -10.694, -5.4348, 10.4855, 0.96 ) }
    dend_55 { pt3dadd( -13.1927, -6.83622, 10.6791, 0.84 ) }
    dend_55 { pt3dadd( -15.5093, -8.26141, 11.0183, 0.84 ) }
    dend_55 { pt3dadd( -18.1945, -10.0931, 11.4584, 0.84 ) }
    dend_55 { pt3dadd( -20.5554, -11.6929, 11.8995, 0.84 ) }
    dend_55 { pt3dadd( -22.5136, -13.0792, 12.3198, 0.84 ) }
    dend_55 { pt3dadd( -25.1622, -15.1617, 12.9854, 0.84 ) }
    dend_55 { pt3dadd( -26.9503, -16.8386, 13.5554, 0.84 ) }
    dend_55 { pt3dadd( -29.4498, -19.5938, 14.5972, 0.84 ) }
    dend_55 { pt3dadd( -39.6764, -25.256, 16.7795, 0.84 ) }
    dend_55 { pt3dadd( -48.3687, -33.4676, 17.1312, 0.84 ) }
    dend_55 { pt3dadd( -56.1863, -42.5069, 16.1436, 0.84 ) }
    dend_55 { pt3dadd( -63.2015, -52.1647, 14.7767, 0.84 ) }
    dend_55 { pt3dadd( -70.1054, -61.9988, 15.1608, 0.84 ) }
    dend_55 { pt3dadd( -75.7645, -72.6273, 15.7199, 0.84 ) }
    dend_55 { pt3dadd( -82.5427, -82.5476, 16.217, 0.84 ) }
    dend_55 { pt3dadd( -88.9637, -92.6898, 15.3663, 0.84 ) }
    dend_55 { pt3dadd( -94.9197, -103.12, 16.2877, 0.84 ) }
    dend_55 { pt3dadd( -100.876, -113.585, 16.6518, 0.84 ) }
    dend_55 { pt3dadd( -106.709, -124.085, 17.6028, 0.84 ) }
    dend_55 { pt3dadd( -112.309, -134.632, 19.223, 0.84 ) }
    dend_55 { pt3dadd( -118.923, -144.124, 22.4397, 0.84 ) }
    dend_55 { pt3dadd( -125.228, -153.734, 25.9337, 0.84 ) }
    dend_55 { pt3dadd( -131.336, -163.962, 27.6592, 0.84 ) }
    dend_55 { pt3dadd( -136.778, -174.702, 26.983, 0.84 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 49/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 4.44017, -9.1796, -1.30865, 2.77 ) }
    dend_44 { pt3dadd( 4.78345, -10.2145, -1.29446, 2.77 ) }
    dend_44 { pt3dadd( 5.13697, -11.2804, -1.27986, 1.69 ) }
    dend_44 { pt3dadd( 5.53651, -12.485, -1.26335, 1.69 ) }
    dend_44 { pt3dadd( 5.86962, -13.4892, -1.24958, 2.29 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 54/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 8.18017, -1.3793, -14.5587, 2.65 ) }
    dend_35 { pt3dadd( 10.1313, -2.81639, -15.8989, 2.05 ) }
    dend_35 { pt3dadd( 14.575, -6.08952, -18.9516, 2.41 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 57/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.00983, 12.1302, 0.0313539, 4.22 ) }
    dend_0 { pt3dadd( -5.96835, 16.3935, 0.0313539, 4.22 ) }
    dend_0 { pt3dadd( -6.48877, 17.5264, 0.0313539, 4.22 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 60/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.1431, -9.88083, 0.00409092, 1.16336 ) }
    axon_0 { pt3dadd( 11.4656, -23.4833, 0.00409092, 1.16336 ) }
    axon_0 { pt3dadd( 17.788, -37.0857, 0.00409092, 1.16336 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 63/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -136.778, -174.702, 26.983, 0.24 ) }
    dend_59 { pt3dadd( -148.591, -176.248, 22.1872, 0.24 ) }
    dend_59 { pt3dadd( -160.791, -177.475, 18.3773, 0.24 ) }
    dend_59 { pt3dadd( -173.203, -177.905, 15.1332, 0.24 ) }
    dend_59 { pt3dadd( -185.483, -175.997, 11.9002, 0.24 ) }
    dend_59 { pt3dadd( -197.539, -174.583, 7.72095, 0.24 ) }
    dend_59 { pt3dadd( -209.274, -172.337, 3.01134, 0.24 ) }
    dend_59 { pt3dadd( -220.346, -170.815, -3.30578, 0.24 ) }
    dend_59 { pt3dadd( -230.63, -168.589, -10.6671, 0.24 ) }
    dend_59 { pt3dadd( -240.033, -164.31, -18.3319, 0.24 ) }
    dend_59 { pt3dadd( -249.694, -159.427, -25.2983, 0.24 ) }
    dend_59 { pt3dadd( -259.265, -156.304, -33.2833, 0.24 ) }
    dend_59 { pt3dadd( -268.62, -151.215, -40.5218, 0.24 ) }
    dend_59 { pt3dadd( -276.76, -143.493, -46.9609, 0.24 ) }
    dend_59 { pt3dadd( -284.848, -137.195, -54.7925, 0.24 ) }
    dend_59 { pt3dadd( -293.87, -131.885, -62.2977, 0.24 ) }
    dend_59 { pt3dadd( -301.823, -124.978, -69.7696, 0.24 ) }
    dend_59 { pt3dadd( -311.402, -120.135, -76.8759, 0.24 ) }
    dend_59 { pt3dadd( -319.371, -117.193, -86.5134, 0.24 ) }
    dend_59 { pt3dadd( -325.751, -113.924, -97.1775, 0.24 ) }
    dend_59 { pt3dadd( -330.604, -112.2, -108.938, 0.24 ) }
    dend_59 { pt3dadd( -333.717, -109.439, -121.09, 0.24 ) }
    dend_59 { pt3dadd( -336.574, -105.161, -132.878, 0.24 ) }
    dend_59 { pt3dadd( -341.792, -98.873, -142.859, 0.24 ) }
    dend_59 { pt3dadd( -348.351, -94.3228, -152.95, 0.24 ) }
    dend_59 { pt3dadd( -355.615, -89.2835, -162.309, 0.24 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -136.778, -174.702, 26.983, 0.24 ) }
    dend_56 { pt3dadd( -138.765, -182.192, 29.1051, 0.24 ) }
    dend_56 { pt3dadd( -139.827, -189.266, 32.7062, 0.24 ) }
    dend_56 { pt3dadd( -140.855, -195.971, 36.9329, 0.24 ) }
    dend_56 { pt3dadd( -140.565, -203.372, 40.0164, 0.24 ) }
    // Section: dend_54, id: dend_54, parent: dend_44 (entry count 94/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 5.86962, -13.4892, -1.24958, 0.84 ) }
    dend_54 { pt3dadd( 3.94382, -21.4203, -0.466312, 0.84 ) }
    dend_54 { pt3dadd( 3.31344, -24.1734, -0.279554, 0.84 ) }
    dend_54 { pt3dadd( 2.6959, -27.0713, -0.132064, 0.84 ) }
    dend_54 { pt3dadd( 2.30245, -29.3098, -0.41283, 0.84 ) }
    dend_54 { pt3dadd( 2.06222, -31.5943, -0.984211, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_54 { pt3dadd( 1.9266, -34.5364, -1.92216, 0.72 ) }
    dend_54 { pt3dadd( 2.03965, -36.1611, -2.948, 0.72 ) }
    dend_54 { pt3dadd( 2.19028, -37.1695, -3.72337, 0.72 ) }
    dend_54 { pt3dadd( 3.48297, -43.641, -9.39745, 0.72 ) }
    dend_54 { pt3dadd( 3.96575, -45.9882, -11.62, 0.72 ) }
    dend_54 { pt3dadd( 4.17406, -47.0687, -12.701, 0.72 ) }
    dend_54 { pt3dadd( 4.71864, -50.5047, -16.1821, 0.6 ) }
    dend_54 { pt3dadd( 5.02324, -53.0964, -18.6906, 0.6 ) }
    dend_54 { pt3dadd( 5.23209, -55.5499, -20.8902, 0.6 ) }
    dend_54 { pt3dadd( 5.39859, -57.6959, -22.483, 0.6 ) }
    dend_54 { pt3dadd( 5.59231, -59.0122, -23.5592, 0.6 ) }
    dend_54 { pt3dadd( 5.87434, -60.2126, -24.6716, 0.6 ) }
    dend_54 { pt3dadd( 6.12501, -61.0505, -25.4723, 0.6 ) }
    dend_54 { pt3dadd( 7.13982, -64.0852, -28.5312, 0.6 ) }
    dend_54 { pt3dadd( 7.87082, -66.0242, -30.5478, 0.6 ) }
    dend_54 { pt3dadd( 9.20548, -69.4218, -34.3083, 0.6 ) }
    dend_54 { pt3dadd( 10.3237, -72.6567, -38.0138, 0.6 ) }
    dend_54 { pt3dadd( 10.7185, -74.1202, -39.6659, 0.6 ) }
    dend_54 { pt3dadd( 10.8621, -74.9696, -40.6655, 0.48 ) }
    dend_54 { pt3dadd( 10.9408, -75.9605, -41.793, 0.48 ) }
    dend_54 { pt3dadd( 10.8423, -79.1286, -45.2385, 0.48 ) }
    dend_54 { pt3dadd( 10.7323, -80.474, -46.5553, 0.48 ) }
    dend_54 { pt3dadd( 10.5892, -82.4803, -48.3379, 0.48 ) }
    dend_54 { pt3dadd( 10.267, -87.5269, -52.6639, 0.24 ) }
    dend_54 { pt3dadd( 10.2309, -88.9954, -53.8429, 0.24 ) }
    dend_54 { pt3dadd( 10.2223, -91.7873, -55.9079, 0.24 ) }
    dend_54 { pt3dadd( 10.2736, -93.664, -57.1486, 0.24 ) }
    dend_54 { pt3dadd( 10.421, -96.0478, -58.5236, 0.24 ) }
    dend_54 { pt3dadd( 10.5655, -97.4845, -59.4098, 0.36 ) }
    dend_54 { pt3dadd( 11.3633, -102.762, -62.8537, 0.36 ) }
    dend_54 { pt3dadd( 11.4219, -103.059, -63.0725, 0.36 ) }
    dend_54 { pt3dadd( 11.703, -104.195, -64.0448, 0.96 ) }
    dend_54 { pt3dadd( 12.6311, -107.586, -67.1439, 0.36 ) }
    dend_54 { pt3dadd( 14.5929, -114.009, -73.5405, 1.81 ) }
    dend_54 { pt3dadd( 15.6517, -117.23, -76.8722, 0.6 ) }
    dend_54 { pt3dadd( 16.5364, -119.863, -79.7061, 0.6 ) }
    dend_54 { pt3dadd( 17.8634, -123.729, -83.818, 0.36 ) }
    dend_54 { pt3dadd( 18.5322, -125.276, -85.9424, 0.96 ) }
    dend_54 { pt3dadd( 19.6397, -127.476, -89.308, 0.36 ) }
    dend_54 { pt3dadd( 20.3421, -128.789, -91.3768, 0.96 ) }
    dend_54 { pt3dadd( 22.372, -132.391, -97.3829, 0.36 ) }
    dend_54 { pt3dadd( 23.181, -133.757, -99.8164, 1.57 ) }
    dend_54 { pt3dadd( 29.053, -143.289, -117.638, 0.72 ) }
    dend_54 { pt3dadd( 29.9575, -144.712, -120.55, 0.72 ) }
    dend_54 { pt3dadd( 30.0617, -144.868, -120.896, 1.45 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 45/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 5.86962, -13.4892, -1.24958, 1.45 ) }
    dend_45 { pt3dadd( 7.97172, -14.4604, -0.807575, 1.45 ) }
    dend_45 { pt3dadd( 9.77486, -15.2934, -0.428434, 1.45 ) }
    dend_45 { pt3dadd( 11.5434, -16.1104, -0.0565639, 1.45 ) }
    dend_45 { pt3dadd( 12.9141, -16.7436, 0.231643, 1.45 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 50/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 14.575, -6.08952, -18.9516, 1.33 ) }
    dend_37 { pt3dadd( 17.8524, -5.7736, -19.3446, 1.33 ) }
    dend_37 { pt3dadd( 23.4217, -5.23677, -20.0126, 1.33 ) }
    dend_37 { pt3dadd( 29.1505, -4.68455, -20.6997, 1.81 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 54/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 14.575, -6.08952, -18.9516, 0.72 ) }
    dend_36 { pt3dadd( 15.5395, -8.72355, -20.1331, 0.72 ) }
    dend_36 { pt3dadd( 16.2785, -11.355, -21.1725, 0.72 ) }
    dend_36 { pt3dadd( 17.074, -13.7774, -22.0736, 0.72 ) }
    dend_36 { pt3dadd( 17.8397, -15.7725, -22.7862, 0.6 ) }
    dend_36 { pt3dadd( 18.8851, -18.5045, -23.787, 0.6 ) }
    dend_36 { pt3dadd( 19.8884, -21.0528, -24.7417, 0.6 ) }
    dend_36 { pt3dadd( 20.7289, -23.0518, -25.4662, 0.36 ) }
    dend_36 { pt3dadd( 22.0441, -26.1571, -26.613, 0.48 ) }
    dend_36 { pt3dadd( 22.8646, -28.103, -27.3167, 0.36 ) }
    dend_36 { pt3dadd( 24.5398, -32.1032, -28.9958, 0.36 ) }
    dend_36 { pt3dadd( 26.0708, -35.6421, -30.9064, 0.36 ) }
    dend_36 { pt3dadd( 27.1394, -38.3851, -32.3945, 0.36 ) }
    dend_36 { pt3dadd( 28.1299, -41.0304, -33.893, 0.36 ) }
    dend_36 { pt3dadd( 30.0402, -46.6837, -37.2033, 0.36 ) }
    dend_36 { pt3dadd( 31.8145, -52.2409, -40.5857, 0.36 ) }
    dend_36 { pt3dadd( 33.5334, -57.7042, -44.0915, 0.24 ) }
    dend_36 { pt3dadd( 34.7876, -62.3117, -47.2713, 0.24 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.48877, 17.5264, 0.0313539, 1.81 ) }
    dend_20 { pt3dadd( -8.20154, 19.4693, 6.89903, 1.81 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 74/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.48877, 17.5264, 0.0313539, 2.65 ) }
    dend_1 { pt3dadd( -6.04852, 21.5672, -0.290467, 2.65 ) }
    dend_1 { pt3dadd( -5.84977, 23.3914, -0.435749, 2.65 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 77/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 17.788, -37.0857, 0.00409092, 0.48 ) }
    axon_1 { pt3dadd( 24.1105, -50.6882, 0.00409092, 0.48 ) }
    axon_1 { pt3dadd( 30.4329, -64.2906, 0.00409092, 0.48 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 80/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -140.565, -203.372, 40.0164, 0.24 ) }
    dend_58 { pt3dadd( -141.423, -212.957, 42.5861, 0.24 ) }
    dend_58 { pt3dadd( -144.413, -222.208, 44.7557, 0.24 ) }
    dend_58 { pt3dadd( -146.054, -231.594, 47.6332, 0.24 ) }
    dend_58 { pt3dadd( -147.896, -241.373, 48.5233, 0.24 ) }
    dend_58 { pt3dadd( -148.352, -251.258, 49.8477, 0.24 ) }
    dend_58 { pt3dadd( -149.776, -261.053, 51.1595, 0.24 ) }
    dend_58 { pt3dadd( -153.044, -270.489, 51.4336, 0.24 ) }
    dend_58 { pt3dadd( -157.621, -279.319, 50.5762, 0.24 ) }
    dend_58 { pt3dadd( -163.328, -287.26, 52.2829, 0.24 ) }
    dend_58 { pt3dadd( -168.24, -295.923, 52.6098, 0.24 ) }
    dend_58 { pt3dadd( -174.136, -303.886, 53.3658, 0.24 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 92/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -140.565, -203.372, 40.0164, 0.24 ) }
    dend_57 { pt3dadd( -141.007, -209.806, 41.4139, 0.24 ) }
    dend_57 { pt3dadd( -140.991, -216.135, 43.234, 0.24 ) }
    dend_57 { pt3dadd( -141.395, -221.911, 46.3095, 0.24 ) }
    dend_57 { pt3dadd( -141.403, -228.261, 48.0611, 0.24 ) }
    dend_57 { pt3dadd( -142.487, -234.491, 49.9192, 0.24 ) }
    dend_57 { pt3dadd( -144.899, -240.182, 52.1753, 0.24 ) }
    dend_57 { pt3dadd( -147.588, -245.494, 54.9383, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_57 { pt3dadd( -151.632, -249.965, 57.5036, 0.24 ) }
    dend_57 { pt3dadd( -156.013, -254.365, 59.6123, 0.24 ) }
    dend_57 { pt3dadd( -160.507, -259.014, 60.8127, 0.24 ) }
    dend_57 { pt3dadd( -164.872, -263.398, 62.983, 0.24 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 4/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 12.9141, -16.7436, 0.231643, 0.36 ) }
    dend_51 { pt3dadd( 14.0563, -18.0102, -0.207134, 0.36 ) }
    dend_51 { pt3dadd( 15.8549, -20.0047, -0.898076, 0.36 ) }
    dend_51 { pt3dadd( 17.5802, -21.9179, -1.56085, 0.36 ) }
    dend_51 { pt3dadd( 18.8893, -23.3696, -2.06377, 0.6 ) }
    dend_51 { pt3dadd( 21.6116, -26.3884, -3.10955, 0.6 ) }
    dend_51 { pt3dadd( 23.0431, -27.9758, -3.65946, 1.08 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 11/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 12.9141, -16.7436, 0.231643, 0.84 ) }
    dend_46 { pt3dadd( 14.6141, -17.4849, 1.57188, 0.84 ) }
    dend_46 { pt3dadd( 16.5166, -18.3742, 3.02457, 0.84 ) }
    dend_46 { pt3dadd( 17.8679, -19.0407, 3.98676, 0.72 ) }
    dend_46 { pt3dadd( 20.0835, -20.1645, 5.46196, 0.72 ) }
    dend_46 { pt3dadd( 24.3601, -22.4759, 8.14353, 0.72 ) }
    dend_46 { pt3dadd( 26.3607, -23.6631, 9.33452, 0.6 ) }
    dend_46 { pt3dadd( 27.8759, -24.6847, 10.2355, 0.6 ) }
    dend_46 { pt3dadd( 29.2051, -25.7312, 10.9476, 0.6 ) }
    dend_46 { pt3dadd( 29.9809, -26.4679, 11.317, 0.6 ) }
    dend_46 { pt3dadd( 31.3274, -27.9336, 11.7491, 0.36 ) }
    dend_46 { pt3dadd( 32.6931, -29.4813, 11.8907, 0.36 ) }
    dend_46 { pt3dadd( 33.7861, -30.655, 12.0686, 0.36 ) }
    dend_46 { pt3dadd( 34.9751, -31.9146, 12.4577, 0.36 ) }
    dend_46 { pt3dadd( 35.9144, -32.7821, 12.8745, 0.36 ) }
    dend_46 { pt3dadd( 37.1636, -33.7258, 13.5216, 0.36 ) }
    dend_46 { pt3dadd( 37.9553, -34.1811, 13.9637, 0.36 ) }
    dend_46 { pt3dadd( 40.7935, -35.3525, 15.5677, 0.36 ) }
    dend_46 { pt3dadd( 42.6664, -36.0011, 16.5841, 0.36 ) }
    dend_46 { pt3dadd( 44.474, -36.5442, 17.6217, 0.36 ) }
    dend_46 { pt3dadd( 45.6518, -36.8897, 18.3332, 0.36 ) }
    dend_46 { pt3dadd( 46.2925, -37.0974, 18.7287, 0.36 ) }
    dend_46 { pt3dadd( 47.2938, -37.4676, 19.2642, 0.36 ) }
    dend_46 { pt3dadd( 48.9326, -37.9885, 19.6237, 0.36 ) }
    dend_46 { pt3dadd( 56.6693, -42.4745, 25.0981, 0.36 ) }
    dend_46 { pt3dadd( 63.6169, -46.3896, 31.8922, 0.36 ) }
    dend_46 { pt3dadd( 70.3185, -49.7627, 39.1901, 0.36 ) }
    dend_46 { pt3dadd( 75.7953, -54.3142, 46.8975, 0.36 ) }
    dend_46 { pt3dadd( 80.0311, -59.9282, 54.7249, 0.36 ) }
    dend_46 { pt3dadd( 85.365, -64.2396, 62.6601, 0.36 ) }
    dend_46 { pt3dadd( 90.6298, -69.2953, 70.2166, 0.36 ) }
    dend_46 { pt3dadd( 96.2855, -75.6852, 76.4046, 0.36 ) }
    dend_46 { pt3dadd( 100.882, -82.4456, 83.0806, 0.36 ) }
    dend_46 { pt3dadd( 104.464, -90.3072, 89.2094, 0.36 ) }
    dend_46 { pt3dadd( 108.031, -98.1406, 95.3818, 0.36 ) }
    dend_46 { pt3dadd( 111.103, -105.697, 102.125, 0.36 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 47/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 29.1505, -4.68455, -20.6997, 1.32 ) }
    dend_43 { pt3dadd( 30.728, -3.11618, -22.3097, 1.32 ) }
    dend_43 { pt3dadd( 31.9569, -2.03343, -23.5791, 1.32 ) }
    dend_43 { pt3dadd( 33.3521, -0.983826, -25.0071, 1.2 ) }
    dend_43 { pt3dadd( 35.2243, 0.214395, -27.0147, 1.08 ) }
    dend_43 { pt3dadd( 37.2626, 1.56493, -29.5894, 0.96 ) }
    dend_43 { pt3dadd( 39.2488, 2.96794, -32.3122, 0.96 ) }
    dend_43 { pt3dadd( 39.7892, 3.36649, -33.183, 0.96 ) }
    dend_43 { pt3dadd( 40.5197, 3.96196, -34.4934, 0.96 ) }
    dend_43 { pt3dadd( 41.3429, 4.8031, -36.209, 0.96 ) }
    dend_43 { pt3dadd( 43.103, 7.23895, -40.4862, 0.96 ) }
    dend_43 { pt3dadd( 43.5931, 8.13174, -41.85, 0.96 ) }
    dend_43 { pt3dadd( 44.2241, 9.41285, -43.5927, 0.96 ) }
    dend_43 { pt3dadd( 44.6186, 10.0941, -44.4923, 0.84 ) }
    dend_43 { pt3dadd( 45.7083, 11.5524, -46.4077, 0.72 ) }
    dend_43 { pt3dadd( 46.2145, 12.0495, -47.0743, 0.72 ) }
    dend_43 { pt3dadd( 48.2156, 13.4605, -49.1566, 0.84 ) }
    dend_43 { pt3dadd( 49.4227, 14.2443, -50.324, 1.08 ) }
    dend_43 { pt3dadd( 51.47, 15.5225, -52.1272, 1.08 ) }
    dend_43 { pt3dadd( 53.8876, 16.9545, -54.0695, 1.08 ) }
    dend_43 { pt3dadd( 54.8555, 17.48, -54.8092, 0.96 ) }
    dend_43 { pt3dadd( 56.5904, 18.4211, -56.2847, 0.84 ) }
    dend_43 { pt3dadd( 57.5118, 18.9694, -57.2039, 0.84 ) }
    dend_43 { pt3dadd( 58.4572, 19.5676, -58.2712, 0.84 ) }
    dend_43 { pt3dadd( 58.9775, 19.8958, -58.9138, 0.84 ) }
    dend_43 { pt3dadd( 61.0939, 21.1246, -61.5123, 0.84 ) }
    dend_43 { pt3dadd( 63.296, 22.367, -64.3614, 0.84 ) }
    dend_43 { pt3dadd( 65.3505, 23.5167, -67.112, 2.16 ) }
    dend_43 { pt3dadd( 65.9223, 23.8488, -67.8845, 2.16 ) }
    dend_43 { pt3dadd( 67.9876, 25.1536, -70.5864, 0.72 ) }
    dend_43 { pt3dadd( 68.7591, 25.7034, -71.5026, 0.72 ) }
    dend_43 { pt3dadd( 70.4911, 27.1193, -73.2811, 0.72 ) }
    dend_43 { pt3dadd( 71.9967, 28.3869, -74.6055, 0.72 ) }
    dend_43 { pt3dadd( 72.6416, 28.9342, -75.1324, 0.72 ) }
    dend_43 { pt3dadd( 74.9806, 30.9108, -77.1492, 2.16 ) }
    dend_43 { pt3dadd( 76.2514, 31.9869, -78.2418, 1.44 ) }
    dend_43 { pt3dadd( 77.9318, 33.4429, -79.5458, 0.48 ) }
    dend_43 { pt3dadd( 78.8717, 34.3347, -80.3827, 0.48 ) }
    dend_43 { pt3dadd( 80.4566, 36.0007, -81.9666, 1.32 ) }
    dend_43 { pt3dadd( 81.9006, 37.7742, -84.3037, 1.32 ) }
    dend_43 { pt3dadd( 81.996, 37.9058, -84.4966, 1.32 ) }
    dend_43 { pt3dadd( 83.4791, 40.0327, -87.7572, 0.72 ) }
    dend_43 { pt3dadd( 86.6135, 44.5517, -94.5304, 0.6 ) }
    dend_43 { pt3dadd( 87.3323, 45.5872, -96.0095, 0.6 ) }
    dend_43 { pt3dadd( 91.8499, 51.7343, -104.267, 0.12 ) }
    dend_43 { pt3dadd( 92.6329, 52.7314, -105.546, 0.96 ) }
    dend_43 { pt3dadd( 93.3111, 53.5391, -106.55, 0.48 ) }
    dend_43 { pt3dadd( 94.7939, 55.19, -108.524, 0.36 ) }
    dend_43 { pt3dadd( 96.7755, 57.233, -110.374, 0.24 ) }
    dend_43 { pt3dadd( 98.3005, 58.7905, -111.595, 0.24 ) }
    dend_43 { pt3dadd( 100.763, 61.2727, -112.933, 1.2 ) }
    dend_43 { pt3dadd( 101.696, 62.2454, -113.524, 0.72 ) }
    dend_43 { pt3dadd( 103.718, 64.4774, -114.932, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_43 { pt3dadd( 104.498, 65.4024, -115.499, 0.24 ) }
    dend_43 { pt3dadd( 105.9, 67.213, -116.482, 1.08 ) }
    dend_43 { pt3dadd( 106.372, 67.8786, -116.811, 0.6 ) }
    dend_43 { pt3dadd( 108.372, 70.8319, -118.006, 0.48 ) }
    dend_43 { pt3dadd( 109.085, 71.9016, -118.423, 0.48 ) }
    dend_43 { pt3dadd( 109.869, 73.024, -118.812, 1.2 ) }
    dend_43 { pt3dadd( 110.65, 74.0711, -119.193, 0.6 ) }
    dend_43 { pt3dadd( 112.764, 76.5799, -120.12, 0.24 ) }
    dend_43 { pt3dadd( 113.702, 77.5836, -120.593, 0.24 ) }
    dend_43 { pt3dadd( 114.937, 78.768, -121.23, 1.32 ) }
    dend_43 { pt3dadd( 115.977, 79.6799, -121.752, 0.72 ) }
    dend_43 { pt3dadd( 118.201, 81.563, -122.909, 0.48 ) }
    dend_43 { pt3dadd( 120.205, 83.2586, -124.048, 0.48 ) }
    dend_43 { pt3dadd( 122.295, 85.0331, -125.26, 1.08 ) }
    dend_43 { pt3dadd( 123.141, 85.7759, -125.761, 0.36 ) }
    dend_43 { pt3dadd( 125.1, 87.5824, -126.881, 0.12 ) }
    dend_43 { pt3dadd( 127.591, 90.0498, -128.269, 0.12 ) }
    dend_43 { pt3dadd( 129.481, 92.0157, -129.296, 0.12 ) }
    dend_43 { pt3dadd( 130.017, 92.5961, -129.574, 0.48 ) }
    dend_43 { pt3dadd( 130.48, 93.1079, -129.815, 0.12 ) }
    dend_43 { pt3dadd( 131.326, 94.0685, -130.368, 0.12 ) }
    dend_43 { pt3dadd( 131.732, 94.5516, -130.669, 0.48 ) }
    dend_43 { pt3dadd( 132.924, 96.1018, -131.537, 0.48 ) }
    dend_43 { pt3dadd( 133.604, 97.1369, -132.029, 0.24 ) }
    dend_43 { pt3dadd( 134.604, 98.8405, -132.729, 0.6 ) }
    dend_43 { pt3dadd( 135.386, 100.297, -133.226, 1.08 ) }
    dend_43 { pt3dadd( 136.124, 101.757, -133.633, 0.48 ) }
    dend_43 { pt3dadd( 137.49, 104.418, -134.312, 0.36 ) }
    dend_43 { pt3dadd( 138.369, 106.04, -134.787, 0.36 ) }
    dend_43 { pt3dadd( 139.572, 108.092, -135.545, 0.36 ) }
    dend_43 { pt3dadd( 140.295, 109.212, -136.011, 0.96 ) }
    dend_43 { pt3dadd( 140.792, 109.919, -136.344, 0.24 ) }
    dend_43 { pt3dadd( 142.68, 112.335, -137.563, 0.12 ) }
    dend_43 { pt3dadd( 144.984, 114.955, -138.875, 0.24 ) }
    dend_43 { pt3dadd( 146.347, 116.407, -139.708, 0.24 ) }
    dend_43 { pt3dadd( 147.209, 117.316, -140.253, 0.24 ) }
    dend_43 { pt3dadd( 148.161, 118.317, -140.79, 0.24 ) }
    dend_43 { pt3dadd( 149.662, 119.91, -141.458, 0.24 ) }
    dend_43 { pt3dadd( 150.424, 120.72, -141.682, 0.24 ) }
    dend_43 { pt3dadd( 153.044, 123.44, -142.357, 1.44 ) }
    dend_43 { pt3dadd( 153.676, 124.095, -142.558, 1.08 ) }
    dend_43 { pt3dadd( 154.86, 125.292, -143.009, 0.12 ) }
    dend_43 { pt3dadd( 155.558, 126.003, -143.4, 0.12 ) }
    dend_43 { pt3dadd( 156.92, 127.378, -144.351, 0.12 ) }
    dend_43 { pt3dadd( 158.52, 128.881, -145.472, 0.6 ) }
    dend_43 { pt3dadd( 159.302, 129.539, -145.962, 0.6 ) }
    dend_43 { pt3dadd( 160.085, 130.16, -146.565, 0.24 ) }
    dend_43 { pt3dadd( 162.49, 132.032, -148.584, 0.72 ) }
    dend_43 { pt3dadd( 163.056, 132.48, -149.109, 0.12 ) }
    dend_43 { pt3dadd( 164.136, 133.346, -150.096, 0.24 ) }
    dend_43 { pt3dadd( 165.121, 134.168, -150.959, 0.24 ) }
    dend_43 { pt3dadd( 168.729, 137.34, -154.117, 0.24 ) }
    dend_43 { pt3dadd( 169.591, 138.17, -154.855, 0.12 ) }
    dend_43 { pt3dadd( 172.015, 140.673, -156.766, 0.24 ) }
    dend_43 { pt3dadd( 173.061, 141.868, -157.592, 0.24 ) }
    dend_43 { pt3dadd( 174.512, 143.718, -158.683, 0.24 ) }
    dend_43 { pt3dadd( 175.25, 144.8, -159.276, 0.72 ) }
    dend_43 { pt3dadd( 176.272, 146.481, -160.017, 0.36 ) }
    dend_43 { pt3dadd( 176.782, 147.354, -160.402, 0.36 ) }
    dend_43 { pt3dadd( 177.474, 148.582, -160.906, 1.08 ) }
    dend_43 { pt3dadd( 178.266, 150.002, -161.554, 0.36 ) }
    dend_43 { pt3dadd( 180.233, 153.613, -163.247, 0.36 ) }
    dend_43 { pt3dadd( 180.666, 154.437, -163.689, 0.36 ) }
    dend_43 { pt3dadd( 181.342, 155.805, -164.595, 1.2 ) }
    dend_43 { pt3dadd( 181.538, 156.212, -164.885, 0.72 ) }
    dend_43 { pt3dadd( 181.949, 157.04, -165.519, 0.36 ) }
    dend_43 { pt3dadd( 182.28, 157.72, -166.059, 0.36 ) }
    dend_43 { pt3dadd( 183.448, 160.173, -167.613, 0.36 ) }
    dend_43 { pt3dadd( 184.266, 162.496, -169.408, 0.84 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 69/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 29.1505, -4.68455, -20.6997, 0.84 ) }
    dend_38 { pt3dadd( 31.5957, -6.89442, -20.5535, 0.84 ) }
    dend_38 { pt3dadd( 33.3619, -8.6303, -20.5872, 0.84 ) }
    dend_38 { pt3dadd( 36.1807, -11.4844, -20.8992, 0.6 ) }
    dend_38 { pt3dadd( 38.1486, -13.5215, -21.2221, 0.6 ) }
    dend_38 { pt3dadd( 40.8723, -16.4464, -21.8513, 0.6 ) }
    dend_38 { pt3dadd( 42.6445, -18.3934, -22.3317, 0.48 ) }
    dend_38 { pt3dadd( 44.5344, -20.4965, -23.0119, 0.48 ) }
    dend_38 { pt3dadd( 46.3446, -22.5884, -23.7364, 0.48 ) }
    dend_38 { pt3dadd( 48.2938, -24.9553, -24.5463, 0.84 ) }
    dend_38 { pt3dadd( 49.8876, -26.8367, -25.1743, 0.72 ) }
    dend_38 { pt3dadd( 51.6846, -28.889, -25.7681, 0.72 ) }
    dend_38 { pt3dadd( 54.4394, -31.8739, -26.4074, 0.72 ) }
    dend_38 { pt3dadd( 55.3814, -32.9133, -26.5222, 0.6 ) }
    dend_38 { pt3dadd( 56.7259, -34.4307, -26.5955, 0.6 ) }
    dend_38 { pt3dadd( 59.603, -37.7612, -26.7072, 0.84 ) }
    dend_38 { pt3dadd( 61.3535, -39.8572, -26.7549, 0.48 ) }
    dend_38 { pt3dadd( 63.5451, -42.5391, -26.9939, 0.48 ) }
    dend_38 { pt3dadd( 66.6215, -46.3931, -27.5553, 0.48 ) }
    dend_38 { pt3dadd( 68.1321, -48.2468, -27.8843, 0.48 ) }
    dend_38 { pt3dadd( 70.4445, -51.0233, -28.4526, 0.84 ) }
    dend_38 { pt3dadd( 72.6564, -53.6313, -29.0155, 0.84 ) }
    dend_38 { pt3dadd( 76.3607, -57.9056, -30.0087, 0.84 ) }
    dend_38 { pt3dadd( 79.3505, -61.3009, -30.7963, 0.72 ) }
    dend_38 { pt3dadd( 82.0655, -64.3098, -31.4846, 0.6 ) }
    dend_38 { pt3dadd( 85.3403, -67.901, -32.221, 0.6 ) }
    dend_38 { pt3dadd( 87.3972, -70.1125, -32.5968, 0.6 ) }
    dend_38 { pt3dadd( 89.0567, -71.8945, -32.8573, 0.48 ) }
    dend_38 { pt3dadd( 91.3107, -74.3526, -33.1184, 0.48 ) }
    dend_38 { pt3dadd( 92.7462, -75.8838, -33.3063, 0.48 ) }
    dend_38 { pt3dadd( 94.6598, -77.9248, -33.6021, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_38 { pt3dadd( 96.9651, -80.3636, -33.9759, 0.48 ) }
    dend_38 { pt3dadd( 98.7911, -82.1874, -34.2615, 0.36 ) }
    dend_38 { pt3dadd( 100.516, -83.7688, -34.5062, 0.36 ) }
    dend_38 { pt3dadd( 102.377, -85.329, -34.6207, 0.36 ) }
    dend_38 { pt3dadd( 104.125, -86.6582, -34.6125, 0.36 ) }
    dend_38 { pt3dadd( 104.614, -86.9998, -34.5683, 0.36 ) }
    dend_38 { pt3dadd( 106.714, -88.4079, -34.2339, 0.36 ) }
    dend_38 { pt3dadd( 109.738, -90.3724, -33.6104, 0.24 ) }
    dend_38 { pt3dadd( 113.35, -92.8165, -32.8145, 0.24 ) }
    dend_38 { pt3dadd( 115.069, -94.0589, -32.4308, 0.24 ) }
    dend_38 { pt3dadd( 116.6, -95.2406, -32.1061, 0.72 ) }
    dend_38 { pt3dadd( 118.622, -96.9633, -31.7259, 0.36 ) }
    dend_38 { pt3dadd( 120.327, -98.677, -31.4775, 0.36 ) }
    dend_38 { pt3dadd( 122.127, -100.842, -31.3562, 0.72 ) }
    dend_38 { pt3dadd( 123.13, -102.285, -31.4264, 0.48 ) }
    dend_38 { pt3dadd( 124.201, -103.997, -31.5662, 0.84 ) }
    dend_38 { pt3dadd( 125.009, -105.352, -31.7253, 0.48 ) }
    dend_38 { pt3dadd( 126.198, -107.411, -31.9703, 0.84 ) }
    dend_38 { pt3dadd( 126.849, -108.504, -32.1001, 0.48 ) }
    dend_38 { pt3dadd( 128.066, -110.397, -32.2688, 0.96 ) }
    dend_38 { pt3dadd( 129.234, -112.067, -32.376, 0.36 ) }
    dend_38 { pt3dadd( 130.699, -114.082, -32.5032, 0.36 ) }
    dend_38 { pt3dadd( 131.698, -115.379, -32.5631, 0.36 ) }
    dend_38 { pt3dadd( 133.928, -118.17, -32.6473, 0.84 ) }
    dend_38 { pt3dadd( 135.101, -119.552, -32.701, 0.48 ) }
    dend_38 { pt3dadd( 137.243, -122.026, -32.7826, 0.48 ) }
    dend_38 { pt3dadd( 140.002, -125.202, -32.8746, 0.48 ) }
    dend_38 { pt3dadd( 141.489, -126.889, -32.9235, 0.48 ) }
    dend_38 { pt3dadd( 141.638, -127.057, -32.9299, 0.48 ) }
    dend_38 { pt3dadd( 146.228, -132.383, -33.2656, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_20 (entry count 30/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -8.20154, 19.4693, 6.89903, 0.6 ) }
    dend_32 { pt3dadd( -8.38273, 21.0832, 8.61516, 0.6 ) }
    dend_32 { pt3dadd( -8.60837, 22.2476, 9.88095, 0.6 ) }
    dend_32 { pt3dadd( -8.9396, 23.7345, 11.3827, 0.6 ) }
    dend_32 { pt3dadd( -9.20715, 24.6252, 12.2204, 0.48 ) }
    dend_32 { pt3dadd( -9.45935, 25.2999, 12.8293, 0.48 ) }
    dend_32 { pt3dadd( -9.85735, 26.3646, 13.7902, 0.48 ) }
    dend_32 { pt3dadd( -10.7254, 28.1463, 15.361, 0.24 ) }
    dend_32 { pt3dadd( -11.2085, 28.9576, 16.0238, 0.24 ) }
    dend_32 { pt3dadd( -11.9279, 30.0301, 16.7897, 0.12 ) }
    dend_32 { pt3dadd( -12.3942, 30.6891, 17.2806, 0.12 ) }
    dend_32 { pt3dadd( -15.2382, 35.5942, 21.8473, 0.12 ) }
    dend_32 { pt3dadd( -19.6025, 40.1413, 25.4937, 0.12 ) }
    dend_32 { pt3dadd( -23.7316, 44.1794, 29.8995, 0.12 ) }
    dend_32 { pt3dadd( -26.819, 48.5085, 34.8497, 0.12 ) }
    dend_32 { pt3dadd( -29.71, 53.6432, 39.139, 0.12 ) }
    dend_32 { pt3dadd( -32.6167, 58.1779, 44.0208, 0.12 ) }
    dend_32 { pt3dadd( -35.4759, 62.9562, 48.7046, 0.12 ) }
    dend_32 { pt3dadd( -37.5378, 68.4079, 53.0896, 0.12 ) }
    dend_32 { pt3dadd( -40.1267, 72.3556, 58.5957, 0.12 ) }
    dend_32 { pt3dadd( -42.3567, 76.8272, 63.868, 0.12 ) }
    dend_32 { pt3dadd( -45.8319, 79.4812, 69.6307, 0.12 ) }
    dend_32 { pt3dadd( -49.7756, 83.1197, 74.5108, 0.12 ) }
    dend_32 { pt3dadd( -53.0766, 87.7051, 79.0913, 0.12 ) }
    dend_32 { pt3dadd( -56.5004, 92.2932, 83.5797, 0.12 ) }
    dend_32 { pt3dadd( -58.5609, 97.4782, 88.2629, 0.12 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -8.20154, 19.4693, 6.89903, 0.72 ) }
    dend_21 { pt3dadd( -9.30394, 16.9839, 9.92557, 0.72 ) }
    dend_21 { pt3dadd( -9.78879, 16.0419, 10.9318, 0.72 ) }
    dend_21 { pt3dadd( -10.3442, 15.0094, 12.0268, 0.6 ) }
    dend_21 { pt3dadd( -10.6434, 14.453, 12.6169, 0.6 ) }
    dend_21 { pt3dadd( -11.8955, 12.1252, 15.0854, 0.6 ) }
    dend_21 { pt3dadd( -12.4936, 11.0132, 16.2647, 0.6 ) }
    dend_21 { pt3dadd( -13.8436, 8.77649, 18.6252, 0.6 ) }
    dend_21 { pt3dadd( -14.3779, 8.03405, 19.5156, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: dend_1 (entry count 65/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.84977, 23.3914, -0.435749, 0.72 ) }
    dend_15 { pt3dadd( -5.13204, 24.9216, -0.11635, 0.72 ) }
    dend_15 { pt3dadd( -4.12474, 27.1671, 0.305439, 0.6 ) }
    dend_15 { pt3dadd( -3.08433, 29.6588, 0.727358, 0.6 ) }
    dend_15 { pt3dadd( -2.46612, 31.1952, 0.952485, 0.6 ) }
    dend_15 { pt3dadd( -1.57604, 33.4901, 1.26669, 0.6 ) }
    dend_15 { pt3dadd( -0.93726, 35.2474, 1.48462, 0.6 ) }
    dend_15 { pt3dadd( -0.327925, 37.1583, 1.6806, 0.6 ) }
    dend_15 { pt3dadd( 0.0138777, 38.366, 1.77986, 0.6 ) }
    dend_15 { pt3dadd( 0.598441, 40.441, 2.0237, 0.6 ) }
    dend_15 { pt3dadd( 1.20336, 42.5713, 2.40062, 0.6 ) }
    dend_15 { pt3dadd( 1.76976, 44.5639, 2.80784, 0.48 ) }
    dend_15 { pt3dadd( 2.19022, 46.048, 3.16825, 0.48 ) }
    dend_15 { pt3dadd( 2.90266, 48.5649, 3.84632, 0.48 ) }
    dend_15 { pt3dadd( 3.75383, 51.5167, 4.67369, 0.48 ) }
    dend_15 { pt3dadd( 4.93868, 55.5839, 5.8409, 0.48 ) }
    dend_15 { pt3dadd( 5.47745, 57.3977, 6.37542, 0.48 ) }
    dend_15 { pt3dadd( 5.87654, 58.6768, 6.75829, 0.48 ) }
    dend_15 { pt3dadd( 6.32034, 60.1072, 7.18415, 0.48 ) }
    dend_15 { pt3dadd( 6.83982, 61.7852, 7.63461, 0.48 ) }
    dend_15 { pt3dadd( 7.1368, 62.8519, 7.83697, 0.48 ) }
    dend_15 { pt3dadd( 7.61455, 64.3167, 7.99727, 0.48 ) }
    dend_15 { pt3dadd( 7.93506, 65.197, 8.11239, 0.48 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 88/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.84977, 23.3914, -0.435749, 2.17 ) }
    dend_2 { pt3dadd( -6.4802, 29.4926, -2.5316, 2.17 ) }
    dend_2 { pt3dadd( -6.70308, 31.6496, -3.27255, 1.81 ) }
    dend_2 { pt3dadd( -6.8756, 33.3192, -3.8461, 1.81 ) }
    dend_2 { pt3dadd( -7.15656, 36.0383, -4.78015, 2.65 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 93/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 23.0431, -27.9758, -3.65946, 0.72 ) }
    dend_53 { pt3dadd( 24.6269, -32.2359, -8.27162, 0.72 ) }
    dend_53 { pt3dadd( 25.9935, -34.7999, -11.2685, 0.72 ) }
    dend_53 { pt3dadd( 27.3999, -37.0787, -14.0742, 0.72 ) }
    dend_53 { pt3dadd( 28.6948, -39.2369, -16.6275, 0.72 ) }
    dend_53 { pt3dadd( 30.0581, -41.6614, -19.458, 0.72 ) }
    dend_53 { pt3dadd( 31.8202, -45.2073, -23.3657, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_53 { pt3dadd( 32.8965, -47.5788, -25.6793, 1.08 ) }
    dend_53 { pt3dadd( 33.8968, -49.8505, -27.8006, 1.08 ) }
    dend_53 { pt3dadd( 34.6579, -52.2656, -29.8932, 0.48 ) }
    dend_53 { pt3dadd( 34.9274, -53.787, -31.056, 0.48 ) }
    dend_53 { pt3dadd( 35.1564, -56.8055, -33.0353, 0.48 ) }
    dend_53 { pt3dadd( 35.3017, -58.3262, -34.1403, 0.48 ) }
    dend_53 { pt3dadd( 35.5501, -60.4322, -36.0177, 0.96 ) }
    dend_53 { pt3dadd( 35.9444, -63.0553, -38.6367, 0.6 ) }
    dend_53 { pt3dadd( 36.5702, -65.3398, -41.3826, 0.48 ) }
    dend_53 { pt3dadd( 37.1057, -66.8978, -43.4441, 0.48 ) }
    dend_53 { pt3dadd( 39.6518, -73.2742, -52.886, 0.48 ) }
    dend_53 { pt3dadd( 40.4913, -75.0625, -55.8887, 0.36 ) }
    dend_53 { pt3dadd( 41.0322, -76.1446, -57.9445, 0.36 ) }
    dend_53 { pt3dadd( 42.3361, -78.9211, -63.6021, 0.36 ) }
    dend_53 { pt3dadd( 42.8469, -80.2503, -66.3595, 0.36 ) }
    dend_53 { pt3dadd( 43.5514, -82.8742, -71.8487, 0.36 ) }
    dend_53 { pt3dadd( 44.1673, -85.0433, -76.3799, 0.36 ) }
    dend_53 { pt3dadd( 44.9945, -87.1379, -80.4886, 0.36 ) }
    dend_53 { pt3dadd( 45.645, -88.3488, -82.8617, 0.36 ) }
    dend_53 { pt3dadd( 46.251, -89.3071, -84.5894, 0.36 ) }
    dend_53 { pt3dadd( 47.0005, -90.327, -86.3422, 0.36 ) }
    dend_53 { pt3dadd( 53.7817, -99.388, -100.032, 0.36 ) }
    dend_53 { pt3dadd( 55.7623, -102.067, -103.785, 0.36 ) }
    dend_53 { pt3dadd( 58.1756, -105.3, -108.284, 0.36 ) }
    dend_53 { pt3dadd( 60.6638, -108.605, -113.28, 0.36 ) }
    dend_53 { pt3dadd( 61.2882, -109.915, -115.09, 0.36 ) }
    dend_53 { pt3dadd( 61.8804, -113.329, -119.201, 0.36 ) }
    dend_53 { pt3dadd( 61.4132, -117.589, -124.185, 0.36 ) }
    dend_53 { pt3dadd( 60.9495, -120.239, -127.475, 0.36 ) }
    dend_53 { pt3dadd( 60.1363, -124.596, -132.711, 0.36 ) }
    dend_53 { pt3dadd( 58.4622, -135.81, -145.467, 0.36 ) }
    dend_53 { pt3dadd( 58.2512, -138.894, -148.756, 0.36 ) }
    dend_53 { pt3dadd( 58.5449, -149.233, -159.405, 0.36 ) }
    dend_53 { pt3dadd( 59.0733, -153.655, -163.686, 0.36 ) }
    dend_53 { pt3dadd( 59.8604, -157.368, -167.129, 0.36 ) }
    dend_53 { pt3dadd( 61.0077, -161.27, -170.583, 0.36 ) }
    dend_53 { pt3dadd( 62.2743, -164.462, -173.552, 0.36 ) }
    dend_53 { pt3dadd( 64.9281, -171.79, -180.024, 0.36 ) }
    dend_53 { pt3dadd( 66.4727, -177.64, -184.395, 0.36 ) }
    dend_53 { pt3dadd( 67.4135, -182.553, -188.02, 0.36 ) }
    dend_53 { pt3dadd( 67.8863, -186.514, -191.136, 0.36 ) }
    dend_53 { pt3dadd( 67.9581, -189.343, -193.678, 0.36 ) }
    dend_53 { pt3dadd( 67.7998, -191.246, -195.501, 0.36 ) }
    dend_53 { pt3dadd( 67.0389, -195.7, -200.011, 0.36 ) }
    dend_53 { pt3dadd( 66.4596, -198.183, -202.777, 0.36 ) }
    dend_53 { pt3dadd( 64.9782, -203.357, -209.389, 0.36 ) }
    dend_53 { pt3dadd( 63.2396, -208.776, -217.125, 0.36 ) }
    dend_53 { pt3dadd( 62.2163, -211.924, -221.853, 0.36 ) }
    dend_53 { pt3dadd( 61.5627, -214.314, -225.822, 0.36 ) }
    dend_53 { pt3dadd( 61.2703, -215.701, -228.391, 0.36 ) }
    dend_53 { pt3dadd( 61.1275, -217.892, -232.543, 0.36 ) }
    dend_53 { pt3dadd( 61.3049, -219.231, -234.844, 0.36 ) }
    dend_53 { pt3dadd( 61.8131, -221.238, -238.091, 0.36 ) }
    dend_53 { pt3dadd( 63.5197, -226.054, -246.307, 0.36 ) }
    dend_53 { pt3dadd( 64.178, -227.592, -248.977, 0.36 ) }
    dend_53 { pt3dadd( 66.0112, -231.228, -255.321, 0.36 ) }
    dend_53 { pt3dadd( 67.7175, -234.235, -260.284, 0.36 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 57/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 23.0431, -27.9758, -3.65946, 0.6 ) }
    dend_52 { pt3dadd( 24.6792, -29.2744, -3.62452, 0.6 ) }
    dend_52 { pt3dadd( 26.4569, -30.8554, -3.71513, 0.6 ) }
    dend_52 { pt3dadd( 27.7482, -32.0706, -3.84053, 0.48 ) }
    dend_52 { pt3dadd( 29.5952, -33.8069, -4.03579, 0.84 ) }
    dend_52 { pt3dadd( 30.8183, -34.944, -4.15932, 0.84 ) }
    dend_52 { pt3dadd( 31.9209, -35.9782, -4.26415, 0.72 ) }
    dend_52 { pt3dadd( 33.6514, -37.7136, -4.41353, 0.72 ) }
    dend_52 { pt3dadd( 34.6899, -38.8056, -4.45589, 0.72 ) }
    dend_52 { pt3dadd( 35.5205, -39.6814, -4.46402, 1.2 ) }
    dend_52 { pt3dadd( 36.5815, -40.738, -4.4276, 0.84 ) }
    dend_52 { pt3dadd( 37.7137, -41.7879, -4.41456, 0.84 ) }
    dend_52 { pt3dadd( 38.8216, -42.7858, -4.41219, 0.6 ) }
    dend_52 { pt3dadd( 40.2538, -44.0193, -4.38941, 0.6 ) }
    dend_52 { pt3dadd( 40.9447, -44.5998, -4.39054, 0.6 ) }
    dend_52 { pt3dadd( 42.4469, -45.8766, -4.43331, 0.96 ) }
    dend_52 { pt3dadd( 44.3003, -47.4423, -4.51148, 0.72 ) }
    dend_52 { pt3dadd( 45.4278, -48.3886, -4.57467, 0.48 ) }
    dend_52 { pt3dadd( 46.4244, -49.2315, -4.64473, 1.33 ) }
    dend_52 { pt3dadd( 47.7534, -50.4104, -4.68244, 0.72 ) }
    dend_52 { pt3dadd( 49.2019, -51.7663, -4.62778, 0.6 ) }
    dend_52 { pt3dadd( 50.1687, -52.7049, -4.58599, 0.48 ) }
    dend_52 { pt3dadd( 50.756, -53.275, -4.55141, 0.48 ) }
    dend_52 { pt3dadd( 51.3019, -53.778, -4.52163, 0.36 ) }
    dend_52 { pt3dadd( 52.4156, -54.7898, -4.46794, 0.24 ) }
    dend_52 { pt3dadd( 53.6354, -55.8654, -4.37329, 0.96 ) }
    dend_52 { pt3dadd( 56.5657, -58.3426, -4.05226, 0.24 ) }
    dend_52 { pt3dadd( 57.9293, -59.4978, -3.80912, 1.57 ) }
    dend_52 { pt3dadd( 60.3919, -61.6425, -3.22802, 0.36 ) }
    dend_52 { pt3dadd( 61.1166, -62.3018, -3.02353, 0.36 ) }
    dend_52 { pt3dadd( 62.6031, -63.692, -2.52415, 0.36 ) }
    dend_52 { pt3dadd( 63.8211, -64.9033, -1.99559, 1.08 ) }
    dend_52 { pt3dadd( 65.263, -66.506, -1.12761, 0.6 ) }
    dend_52 { pt3dadd( 65.8059, -67.1815, -0.776205, 0.48 ) }
    dend_52 { pt3dadd( 66.4963, -68.1323, -0.45824, 0.96 ) }
    dend_52 { pt3dadd( 67.3606, -69.3812, -0.259956, 0.36 ) }
    dend_52 { pt3dadd( 68.0152, -70.3805, -0.253534, 0.84 ) }
    dend_52 { pt3dadd( 68.5557, -71.2065, -0.310516, 0.36 ) }
    dend_52 { pt3dadd( 69.0717, -71.9743, -0.435116, 0.96 ) }
    dend_52 { pt3dadd( 71.5228, -75.5496, -1.15656, 0.24 ) }
    dend_52 { pt3dadd( 72.7274, -77.3516, -1.60533, 0.24 ) }
    dend_52 { pt3dadd( 73.2501, -78.1757, -1.86403, 1.69 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 99/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 111.103, -105.697, 102.125, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( 114.583, -109.29, 106.077, 0.24 ) }
    dend_50 { pt3dadd( 117.829, -112.848, 110.254, 0.24 ) }
    dend_50 { pt3dadd( 120.68, -116.275, 114.807, 0.24 ) }
    dend_50 { pt3dadd( 123.223, -119.478, 119.688, 0.24 ) }
    dend_50 { pt3dadd( 125.732, -122.144, 124.88, 0.24 ) }
    dend_50 { pt3dadd( 128.421, -125.919, 129.268, 0.24 ) }
    dend_50 { pt3dadd( 131.758, -129.25, 133.549, 0.24 ) }
    dend_50 { pt3dadd( 134.762, -133.065, 137.692, 0.24 ) }
    dend_50 { pt3dadd( 138.686, -136.655, 141.203, 0.24 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 9/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 111.103, -105.697, 102.125, 0.24 ) }
    dend_47 { pt3dadd( 117.382, -110.447, 107.806, 0.24 ) }
    dend_47 { pt3dadd( 124.107, -114.411, 113.547, 0.24 ) }
    dend_47 { pt3dadd( 130.603, -117.524, 120.005, 0.24 ) }
    dend_47 { pt3dadd( 137.666, -119.745, 126.207, 0.24 ) }
    dend_47 { pt3dadd( 143.668, -123.138, 133.005, 0.24 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 15/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 146.228, -132.383, -33.2656, 0.24 ) }
    dend_40 { pt3dadd( 152.774, -132.912, -40.5707, 0.24 ) }
    dend_40 { pt3dadd( 154.873, -133.199, -42.772, 0.24 ) }
    dend_40 { pt3dadd( 161.325, -134.271, -49.3353, 0.24 ) }
    dend_40 { pt3dadd( 164.441, -134.912, -52.4567, 0.24 ) }
    dend_40 { pt3dadd( 167.746, -135.738, -55.5897, 0.24 ) }
    dend_40 { pt3dadd( 170.911, -136.61, -58.4994, 0.24 ) }
    dend_40 { pt3dadd( 173.086, -137.377, -60.2643, 0.24 ) }
    dend_40 { pt3dadd( 174.627, -137.996, -61.4774, 0.24 ) }
    dend_40 { pt3dadd( 176.733, -139.008, -62.9425, 0.24 ) }
    dend_40 { pt3dadd( 180.24, -140.809, -65.347, 0.24 ) }
    dend_40 { pt3dadd( 184.118, -142.986, -67.9847, 0.24 ) }
    dend_40 { pt3dadd( 186.624, -144.437, -69.7497, 0.24 ) }
    dend_40 { pt3dadd( 188.301, -145.373, -70.868, 0.24 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 29/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 146.228, -132.383, -33.2656, 0.24 ) }
    dend_39 { pt3dadd( 148.034, -135.805, -33.5112, 0.24 ) }
    dend_39 { pt3dadd( 150.38, -140.367, -33.7288, 0.24 ) }
    dend_39 { pt3dadd( 152.031, -143.652, -34.2505, 0.24 ) }
    dend_39 { pt3dadd( 154.452, -148.861, -36.4283, 0.24 ) }
    dend_39 { pt3dadd( 155.613, -151.694, -38.1799, 0.24 ) }
    dend_39 { pt3dadd( 156.237, -153.396, -39.3972, 0.24 ) }
    dend_39 { pt3dadd( 157.059, -156.011, -41.7975, 0.24 ) }
    dend_39 { pt3dadd( 158.322, -161.09, -47.4524, 0.24 ) }
    dend_39 { pt3dadd( 159.737, -168.034, -56.3484, 0.24 ) }
    dend_39 { pt3dadd( 160.19, -170.688, -60.068, 0.24 ) }
    dend_39 { pt3dadd( 160.362, -171.628, -61.4156, 0.24 ) }
    dend_39 { pt3dadd( 160.882, -174.116, -64.9067, 0.24 ) }
    dend_39 { pt3dadd( 161.268, -175.595, -66.8805, 0.24 ) }
    dend_39 { pt3dadd( 162.641, -179.839, -71.4329, 0.24 ) }
    dend_39 { pt3dadd( 163.31, -181.378, -72.7299, 0.24 ) }
    dend_39 { pt3dadd( 165.09, -184.499, -75.3939, 0.24 ) }
    dend_39 { pt3dadd( 166.241, -186.151, -76.7896, 0.24 ) }
    dend_39 { pt3dadd( 167.199, -187.338, -77.7448, 0.24 ) }
    dend_39 { pt3dadd( 169.265, -189.582, -79.5263, 0.24 ) }
    dend_39 { pt3dadd( 171.1, -191.457, -80.9736, 0.24 ) }
    dend_39 { pt3dadd( 175.571, -195.904, -84.4545, 0.24 ) }
    dend_39 { pt3dadd( 178.655, -198.864, -86.7477, 0.24 ) }
    dend_39 { pt3dadd( 181.462, -201.45, -88.7901, 0.24 ) }
    dend_39 { pt3dadd( 183.578, -203.333, -90.2828, 0.24 ) }
    dend_39 { pt3dadd( 186.495, -205.784, -92.2618, 0.24 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -58.5609, 97.4782, 88.2629, 0.12 ) }
    dend_34 { pt3dadd( -60.1093, 103.568, 94.7395, 0.12 ) }
    dend_34 { pt3dadd( -60.8311, 110.546, 100.454, 0.12 ) }
    dend_34 { pt3dadd( -61.2599, 117.844, 105.803, 0.12 ) }
    dend_34 { pt3dadd( -60.8169, 124.083, 112.302, 0.12 ) }
    dend_34 { pt3dadd( -59.9524, 131.106, 117.932, 0.12 ) }
    dend_34 { pt3dadd( -58.2628, 136.792, 124.705, 0.12 ) }
    dend_34 { pt3dadd( -56.5411, 142.834, 131.164, 0.12 ) }
    dend_34 { pt3dadd( -56.4207, 148.959, 137.781, 0.12 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 64/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -58.5609, 97.4782, 88.2629, 0.12 ) }
    dend_33 { pt3dadd( -62.8097, 102.293, 93.1799, 0.12 ) }
    dend_33 { pt3dadd( -65.9355, 107.614, 98.4176, 0.12 ) }
    dend_33 { pt3dadd( -67.273, 113.407, 103.917, 0.12 ) }
    dend_33 { pt3dadd( -67.9957, 119.716, 108.965, 0.12 ) }
    dend_33 { pt3dadd( -67.7381, 125.902, 114.195, 0.12 ) }
    dend_33 { pt3dadd( -67.9413, 132.437, 119.01, 0.12 ) }
    dend_33 { pt3dadd( -67.1556, 139.209, 123.429, 0.12 ) }
    dend_33 { pt3dadd( -66.5487, 146.383, 127.235, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_21 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -14.3779, 8.03405, 19.5156, 0.24 ) }
    dend_31 { pt3dadd( -16.3351, 7.11257, 19.5771, 0.24 ) }
    dend_31 { pt3dadd( -17.7279, 6.48958, 19.666, 0.24 ) }
    dend_31 { pt3dadd( -19.8403, 5.54468, 19.801, 0.24 ) }
    dend_31 { pt3dadd( -21.0947, 4.9836, 19.8811, 0.24 ) }
    dend_31 { pt3dadd( -21.8574, 4.64242, 19.9298, 0.24 ) }
    dend_31 { pt3dadd( -22.8786, 4.18565, 19.995, 0.24 ) }
    dend_31 { pt3dadd( -23.7433, 3.84345, 20.2071, 0.24 ) }
    dend_31 { pt3dadd( -30.4723, -0.632875, 20.9769, 0.24 ) }
    dend_31 { pt3dadd( -36.8407, -5.12754, 23.1998, 0.24 ) }
    dend_31 { pt3dadd( -43.6926, -8.39863, 25.9385, 0.24 ) }
    dend_31 { pt3dadd( -49.711, -11.6857, 30.1678, 0.24 ) }
    dend_31 { pt3dadd( -55.8854, -15.8064, 33.3738, 0.24 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 86/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -14.3779, 8.03405, 19.5156, 0.6 ) }
    dend_22 { pt3dadd( -15.8236, 7.7964, 20.4206, 0.6 ) }
    dend_22 { pt3dadd( -17.4747, 7.70437, 21.613, 0.6 ) }
    dend_22 { pt3dadd( -18.3385, 7.73289, 22.2538, 0.6 ) }
    dend_22 { pt3dadd( -18.9522, 7.79125, 22.7016, 0.6 ) }
    dend_22 { pt3dadd( -20.2599, 7.96397, 23.6094, 0.48 ) }
    dend_22 { pt3dadd( -22.5221, 8.26278, 25.18, 0.48 ) }
    dend_22 { pt3dadd( -23.7761, 8.48714, 26.1086, 0.48 ) }
    dend_22 { pt3dadd( -25.1299, 8.81369, 27.1318, 0.48 ) }
    dend_22 { pt3dadd( -26.1508, 9.12784, 27.9245, 0.48 ) }
    dend_22 { pt3dadd( -27.5523, 9.6711, 29.0091, 0.48 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 7.93506, 65.197, 8.11239, 0.36 ) }
    dend_19 { pt3dadd( 10.5145, 68.0612, 5.22983, 0.36 ) }
    dend_19 { pt3dadd( 11.5145, 69.1716, 4.11228, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_19 { pt3dadd( 14.2317, 72.1888, 1.07571, 0.36 ) }
    dend_19 { pt3dadd( 20.7773, 77.2933, -3.88774, 0.36 ) }
    dend_19 { pt3dadd( 27.6392, 82.5059, -8.28485, 0.36 ) }
    dend_19 { pt3dadd( 34.8358, 87.5928, -12.2685, 0.36 ) }
    dend_19 { pt3dadd( 42.5574, 92.9258, -14.6367, 0.36 ) }
    dend_19 { pt3dadd( 49.493, 98.6719, -18.2063, 0.36 ) }
    dend_19 { pt3dadd( 55.4412, 104.58, -23.0693, 0.36 ) }
    dend_19 { pt3dadd( 60.0937, 110.572, -29.1052, 0.36 ) }
    dend_19 { pt3dadd( 66.0554, 114.994, -35.2819, 0.36 ) }
    dend_19 { pt3dadd( 72.7237, 118.632, -41.222, 0.36 ) }
    dend_19 { pt3dadd( 80.4436, 122.337, -45.6594, 0.36 ) }
    dend_19 { pt3dadd( 88.7473, 125.85, -49.0754, 0.36 ) }
    dend_19 { pt3dadd( 97.1518, 128.186, -53.1492, 0.36 ) }
    dend_19 { pt3dadd( 106.43, 128.539, -55.6661, 0.36 ) }
    dend_19 { pt3dadd( 115.852, 127.632, -57.4126, 0.36 ) }
    dend_19 { pt3dadd( 124.688, 126.374, -61.0254, 0.36 ) }
    dend_19 { pt3dadd( 132.776, 123.548, -65.4642, 0.36 ) }
    dend_19 { pt3dadd( 141.83, 122.758, -68.6315, 0.36 ) }
    dend_19 { pt3dadd( 151.113, 121.492, -70.8512, 0.36 ) }
    dend_19 { pt3dadd( 159.821, 120.507, -74.8352, 0.36 ) }
    dend_19 { pt3dadd( 169.113, 121.139, -77.2449, 0.36 ) }
    dend_19 { pt3dadd( 178.453, 122.675, -78.9738, 0.36 ) }
    dend_19 { pt3dadd( 187.828, 122.841, -81.1254, 0.36 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.93506, 65.197, 8.11239, 0.36 ) }
    dend_16 { pt3dadd( 8.71312, 68.2977, 8.96481, 0.36 ) }
    dend_16 { pt3dadd( 9.39572, 71.0179, 9.71264, 0.36 ) }
    dend_16 { pt3dadd( 13.0016, 80.8066, 10.9792, 0.36 ) }
    dend_16 { pt3dadd( 16.6376, 90.5875, 12.215, 0.36 ) }
    dend_16 { pt3dadd( 21.8523, 99.387, 14.4286, 0.36 ) }
    dend_16 { pt3dadd( 27.7515, 107.461, 17.4205, 0.36 ) }
    dend_16 { pt3dadd( 32.3156, 115.745, 21.8658, 0.36 ) }
    dend_16 { pt3dadd( 37.7346, 124.027, 25.2086, 0.36 ) }
    dend_16 { pt3dadd( 41.869, 133.229, 28.0642, 0.36 ) }
    dend_16 { pt3dadd( 45.3069, 142.701, 31.0096, 0.36 ) }
    dend_16 { pt3dadd( 49.2206, 151.219, 35.6517, 0.36 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -7.15656, 36.0383, -4.78015, 1.45 ) }
    dend_8 { pt3dadd( -7.04851, 39.9207, -5.09953, 1.45 ) }
    dend_8 { pt3dadd( -7.23055, 43.7109, -5.44653, 1.45 ) }
    dend_8 { pt3dadd( -7.44626, 46.4016, -5.65286, 1.45 ) }
    dend_8 { pt3dadd( -7.68897, 48.9891, -5.81629, 1.45 ) }
    dend_8 { pt3dadd( -8.08406, 53.028, -6.02774, 1.08 ) }
    dend_8 { pt3dadd( -8.31886, 55.537, -6.28303, 1.08 ) }
    dend_8 { pt3dadd( -8.90806, 60.573, -7.01214, 0.96 ) }
    dend_8 { pt3dadd( -9.37665, 64.8653, -7.72033, 0.96 ) }
    dend_8 { pt3dadd( -9.68865, 68.2999, -8.31376, 0.96 ) }
    dend_8 { pt3dadd( -9.90786, 71.8623, -8.9216, 0.96 ) }
    dend_8 { pt3dadd( -10.082, 77.8315, -9.87258, 0.96 ) }
    dend_8 { pt3dadd( -10.0804, 82.4327, -10.5854, 0.96 ) }
    dend_8 { pt3dadd( -9.99678, 86.5179, -11.296, 0.96 ) }
    dend_8 { pt3dadd( -9.92901, 90.5532, -12.2161, 0.96 ) }
    dend_8 { pt3dadd( -9.93375, 95.2419, -13.4974, 0.96 ) }
    dend_8 { pt3dadd( -10.0138, 98.765, -14.5706, 0.96 ) }
    dend_8 { pt3dadd( -10.1667, 102.186, -15.7344, 0.96 ) }
    dend_8 { pt3dadd( -10.4663, 106.852, -17.611, 0.96 ) }
    dend_8 { pt3dadd( -10.9101, 112.65, -20.3666, 0.96 ) }
    dend_8 { pt3dadd( -11.3572, 117.602, -22.8028, 0.96 ) }
    dend_8 { pt3dadd( -11.7783, 121.264, -24.6161, 0.96 ) }
    dend_8 { pt3dadd( -12.1976, 124.556, -26.1563, 0.96 ) }
    dend_8 { pt3dadd( -12.5973, 128.001, -27.5846, 0.96 ) }
    dend_8 { pt3dadd( -13.0119, 132.117, -28.9309, 0.96 ) }
    dend_8 { pt3dadd( -13.3778, 137.043, -30.2, 0.96 ) }
    dend_8 { pt3dadd( -13.5545, 140.498, -31.0587, 0.96 ) }
    dend_8 { pt3dadd( -13.7745, 145.258, -32.133, 0.96 ) }
    dend_8 { pt3dadd( -13.9801, 150.039, -33.0949, 0.96 ) }
    dend_8 { pt3dadd( -14.0869, 152.591, -33.5968, 0.96 ) }
    dend_8 { pt3dadd( -14.3677, 159.372, -34.8123, 0.96 ) }
    dend_8 { pt3dadd( -14.4582, 163.701, -35.6994, 0.96 ) }
    dend_8 { pt3dadd( -14.4866, 167.1, -36.3358, 0.96 ) }
    dend_8 { pt3dadd( -14.4911, 170.527, -36.9937, 0.96 ) }
    dend_8 { pt3dadd( -14.483, 173.833, -37.6547, 0.96 ) }
    dend_8 { pt3dadd( -14.4308, 178.132, -38.5148, 0.96 ) }
    dend_8 { pt3dadd( -14.3558, 184.278, -39.6607, 0.96 ) }
    dend_8 { pt3dadd( -14.2883, 186.977, -40.1904, 0.96 ) }
    dend_8 { pt3dadd( -14.1273, 191.695, -41.2794, 0.96 ) }
    dend_8 { pt3dadd( -14.0689, 193.644, -41.7783, 0.96 ) }
    dend_8 { pt3dadd( -13.8956, 199.873, -43.4688, 1.2 ) }
    dend_8 { pt3dadd( -13.8151, 203.381, -44.4455, 1.08 ) }
    dend_8 { pt3dadd( -13.7772, 206.152, -45.1796, 1.33 ) }
    dend_8 { pt3dadd( -13.6891, 211.366, -46.4995, 1.08 ) }
    dend_8 { pt3dadd( -13.6438, 214.954, -47.3164, 1.08 ) }
    dend_8 { pt3dadd( -13.5969, 218.22, -48.06, 0.96 ) }
    dend_8 { pt3dadd( -13.581, 218.981, -48.2322, 0.96 ) }
    dend_8 { pt3dadd( -13.515, 222.171, -48.855, 0.96 ) }
    dend_8 { pt3dadd( -13.4917, 224.92, -49.2752, 0.96 ) }
    dend_8 { pt3dadd( -13.428, 229.143, -49.8169, 0.72 ) }
    dend_8 { pt3dadd( -13.37, 232.43, -50.1787, 0.72 ) }
    dend_8 { pt3dadd( -13.3242, 237.323, -50.6984, 0.72 ) }
    dend_8 { pt3dadd( -13.3179, 240.224, -51.0094, 0.96 ) }
    dend_8 { pt3dadd( -13.3447, 242.812, -51.2869, 1.2 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.15656, 36.0383, -4.78015, 0.72 ) }
    dend_3 { pt3dadd( -13.8035, 38.3985, -7.09087, 0.72 ) }
    dend_3 { pt3dadd( -16.1337, 39.2754, -8.00145, 0.72 ) }
    dend_3 { pt3dadd( -18.6226, 40.201, -8.88816, 0.72 ) }
    dend_3 { pt3dadd( -20.6217, 40.9649, -9.52887, 0.72 ) }
    dend_3 { pt3dadd( -23.2959, 42.1578, -10.4238, 0.6 ) }
    dend_3 { pt3dadd( -27.6858, 44.5001, -11.9838, 0.6 ) }
    dend_3 { pt3dadd( -30.4754, 46.3172, -12.9659, 0.6 ) }
    dend_3 { pt3dadd( -33.2201, 48.4773, -14.1015, 0.6 ) }
    dend_3 { pt3dadd( -34.7298, 49.7396, -14.7954, 0.36 ) }
    dend_3 { pt3dadd( -38.3929, 52.8809, -16.4895, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( -40.9762, 55.1801, -17.6139, 0.6 ) }
    dend_3 { pt3dadd( -43.2795, 57.1556, -18.4989, 0.6 ) }
    dend_3 { pt3dadd( -44.5393, 58.1685, -18.9773, 0.48 ) }
    dend_3 { pt3dadd( -50.4934, 62.83, -21.3848, 1.08 ) }
    dend_3 { pt3dadd( -51.7069, 63.6673, -21.8511, 0.72 ) }
    dend_3 { pt3dadd( -52.9857, 64.3438, -22.2459, 0.48 ) }
    dend_3 { pt3dadd( -56.3308, 65.7039, -23.1609, 0.84 ) }
    dend_3 { pt3dadd( -59.2597, 66.6948, -23.8862, 1.2 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 8/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 143.668, -123.138, 133.005, 0.24 ) }
    dend_49 { pt3dadd( 149.488, -126.65, 141.264, 0.24 ) }
    dend_49 { pt3dadd( 155.467, -128.761, 149.847, 0.24 ) }
    dend_49 { pt3dadd( 160.198, -130.159, 159.306, 0.24 ) }
    dend_49 { pt3dadd( 165.198, -132.532, 168.441, 0.24 ) }
    dend_49 { pt3dadd( 169.643, -135.801, 177.611, 0.24 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 14/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 143.668, -123.138, 133.005, 0.24 ) }
    dend_48 { pt3dadd( 151.418, -126.244, 137.361, 0.24 ) }
    dend_48 { pt3dadd( 158.874, -130.635, 141.14, 0.24 ) }
    dend_48 { pt3dadd( 166.174, -135.636, 144.477, 0.24 ) }
    dend_48 { pt3dadd( 172.093, -142.227, 147.924, 0.24 ) }
    dend_48 { pt3dadd( 179.043, -148.339, 149.992, 0.24 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 20/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 188.301, -145.373, -70.868, 0.24 ) }
    dend_42 { pt3dadd( 190.998, -146.938, -72.5384, 0.24 ) }
    dend_42 { pt3dadd( 192.796, -147.914, -73.7941, 0.24 ) }
    dend_42 { pt3dadd( 196.193, -149.766, -76.2519, 0.24 ) }
    dend_42 { pt3dadd( 196.934, -150.173, -76.7756, 0.24 ) }
    dend_42 { pt3dadd( 198.133, -150.788, -77.6131, 0.24 ) }
    dend_42 { pt3dadd( 201.381, -152.478, -79.897, 0.24 ) }
    dend_42 { pt3dadd( 204.515, -154.091, -82.154, 0.24 ) }
    dend_42 { pt3dadd( 205.741, -154.718, -83.0262, 0.24 ) }
    dend_42 { pt3dadd( 208.136, -155.936, -84.6975, 0.24 ) }
    dend_42 { pt3dadd( 210.977, -157.247, -86.6691, 0.24 ) }
    dend_42 { pt3dadd( 212.837, -158.016, -87.916, 0.24 ) }
    dend_42 { pt3dadd( 215.093, -158.887, -89.4146, 0.24 ) }
    dend_42 { pt3dadd( 217.434, -159.8, -90.9626, 0.24 ) }
    dend_42 { pt3dadd( 220.016, -160.734, -92.7761, 0.24 ) }
    dend_42 { pt3dadd( 222.947, -161.83, -94.81, 0.24 ) }
    dend_42 { pt3dadd( 224.772, -162.482, -96.1296, 0.24 ) }
    dend_42 { pt3dadd( 226.727, -163.074, -97.526, 0.24 ) }
    dend_42 { pt3dadd( 228.805, -163.685, -99.0417, 0.24 ) }
    dend_42 { pt3dadd( 232.822, -164.844, -102.004, 0.24 ) }
    dend_42 { pt3dadd( 235.355, -165.625, -103.856, 0.24 ) }
    dend_42 { pt3dadd( 240.718, -167.367, -107.775, 0.24 ) }
    dend_42 { pt3dadd( 244.475, -168.476, -110.506, 0.24 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 43/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 188.301, -145.373, -70.868, 0.24 ) }
    dend_41 { pt3dadd( 188.366, -148.185, -71.1122, 0.24 ) }
    dend_41 { pt3dadd( 188.414, -150.299, -71.2957, 0.24 ) }
    dend_41 { pt3dadd( 188.47, -152.701, -71.5042, 0.24 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 47/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -27.5523, 9.6711, 29.0091, 0.24 ) }
    dend_24 { pt3dadd( -30.5061, 8.86972, 29.0112, 0.24 ) }
    dend_24 { pt3dadd( -33.6929, 8.20761, 29.0507, 0.24 ) }
    dend_24 { pt3dadd( -35.3743, 7.85826, 29.0715, 0.24 ) }
    dend_24 { pt3dadd( -38.7058, 7.1661, 29.1127, 0.24 ) }
    dend_24 { pt3dadd( -42.075, 6.46607, 29.1544, 0.24 ) }
    dend_24 { pt3dadd( -44.942, 5.87039, 29.1899, 0.24 ) }
    dend_24 { pt3dadd( -46.5071, 5.55358, 29.2814, 0.24 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 55/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -27.5523, 9.6711, 29.0091, 0.48 ) }
    dend_23 { pt3dadd( -28.5569, 8.33555, 29.7949, 0.48 ) }
    dend_23 { pt3dadd( -29.3058, 7.33992, 30.3808, 0.48 ) }
    dend_23 { pt3dadd( -30.3067, 6.00935, 31.1638, 0.24 ) }
    dend_23 { pt3dadd( -31.7824, 4.04746, 32.3182, 0.24 ) }
    dend_23 { pt3dadd( -34.4668, 0.478654, 34.4183, 0.24 ) }
    dend_23 { pt3dadd( -40.9315, -8.10618, 38.1928, 0.24 ) }
    dend_23 { pt3dadd( -49.3461, -15.0535, 41.2453, 0.24 ) }
    dend_23 { pt3dadd( -58.7844, -19.6696, 45.3968, 0.24 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 49.2206, 151.219, 35.6517, 0.24 ) }
    dend_18 { pt3dadd( 49.5156, 155.181, 45.6561, 0.24 ) }
    dend_18 { pt3dadd( 48.8654, 157.493, 56.1283, 0.24 ) }
    dend_18 { pt3dadd( 49.5304, 158.318, 66.8124, 0.24 ) }
    dend_18 { pt3dadd( 47.9561, 161.532, 76.953, 0.24 ) }
    dend_18 { pt3dadd( 45.4734, 163.381, 87.2379, 0.24 ) }
    dend_18 { pt3dadd( 44.39, 165.614, 97.6905, 0.24 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 49.2206, 151.219, 35.6517, 0.24 ) }
    dend_17 { pt3dadd( 53.6351, 160.877, 34.6582, 0.24 ) }
    dend_17 { pt3dadd( 58.8131, 170.17, 34.1711, 0.24 ) }
    dend_17 { pt3dadd( 64.7095, 178.855, 32.5431, 0.24 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -13.3447, 242.812, -51.2869, 0.84 ) }
    dend_14 { pt3dadd( -13.0448, 247.378, -52.5637, 0.84 ) }
    dend_14 { pt3dadd( -12.8555, 250.377, -53.3028, 0.84 ) }
    dend_14 { pt3dadd( -12.5589, 254.752, -54.2954, 0.72 ) }
    dend_14 { pt3dadd( -12.3595, 257.723, -54.9798, 0.6 ) }
    dend_14 { pt3dadd( -11.8781, 265.366, -56.6867, 0.84 ) }
    dend_14 { pt3dadd( -11.6549, 269.103, -57.4856, 0.84 ) }
    dend_14 { pt3dadd( -11.475, 272.782, -58.1667, 0.6 ) }
    dend_14 { pt3dadd( -11.3748, 275.735, -58.711, 0.6 ) }
    dend_14 { pt3dadd( -11.3253, 278.561, -59.2128, 0.6 ) }
    dend_14 { pt3dadd( -11.3593, 282.747, -59.9866, 0.6 ) }
    dend_14 { pt3dadd( -11.5442, 288.439, -61.1236, 0.6 ) }
    dend_14 { pt3dadd( -11.7932, 293.885, -62.1914, 0.6 ) }
    dend_14 { pt3dadd( -11.9376, 296.794, -62.7217, 0.6 ) }
    dend_14 { pt3dadd( -12.1438, 300.851, -63.3804, 0.6 ) }
    dend_14 { pt3dadd( -12.4441, 306.841, -64.2506, 0.6 ) }
    dend_14 { pt3dadd( -12.6515, 311.3, -64.8622, 0.6 ) }
    dend_14 { pt3dadd( -12.8637, 316.396, -65.5379, 0.6 ) }
    dend_14 { pt3dadd( -12.9889, 320.148, -66.0538, 0.48 ) }
    dend_14 { pt3dadd( -13.1564, 324.226, -66.6261, 0.48 ) }
    dend_14 { pt3dadd( -13.3252, 327.518, -67.0651, 0.48 ) }
    dend_14 { pt3dadd( -13.5164, 330.456, -67.4139, 0.36 ) }
    dend_14 { pt3dadd( -14.0684, 335.751, -68.1378, 0.36 ) }
    dend_14 { pt3dadd( -14.6653, 340.345, -68.816, 0.36 ) }
    dend_14 { pt3dadd( -15.2923, 344.393, -69.516, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -15.8867, 348.068, -70.1636, 0.36 ) }
    dend_14 { pt3dadd( -16.5911, 352.73, -71.0024, 0.36 ) }
    dend_14 { pt3dadd( -17.5498, 359.435, -72.2025, 0.36 ) }
    dend_14 { pt3dadd( -18.0198, 363.21, -72.8617, 0.36 ) }
    dend_14 { pt3dadd( -18.5087, 368.237, -73.7306, 0.36 ) }
    dend_14 { pt3dadd( -18.815, 372.985, -74.5914, 0.36 ) }
    dend_14 { pt3dadd( -19.0168, 378.815, -75.6341, 0.36 ) }
    dend_14 { pt3dadd( -19.0912, 383.17, -76.44, 0.36 ) }
    dend_14 { pt3dadd( -19.1116, 385.411, -76.8314, 0.36 ) }
    dend_14 { pt3dadd( -19.1467, 391.38, -77.8701, 0.36 ) }
    dend_14 { pt3dadd( -19.2593, 394.785, -78.6375, 0.36 ) }
    dend_14 { pt3dadd( -19.5768, 399.389, -79.8347, 0.36 ) }
    dend_14 { pt3dadd( -20.1363, 404.472, -81.2845, 0.36 ) }
    dend_14 { pt3dadd( -20.7306, 408.049, -82.4989, 0.36 ) }
    dend_14 { pt3dadd( -21.5957, 412.032, -83.9306, 0.36 ) }
    dend_14 { pt3dadd( -23.6163, 419.614, -86.821, 0.36 ) }
    dend_14 { pt3dadd( -24.8799, 423.983, -88.4173, 0.36 ) }
    dend_14 { pt3dadd( -26.0027, 427.983, -89.7377, 0.36 ) }
    dend_14 { pt3dadd( -27.6576, 434.428, -91.5626, 0.36 ) }
    dend_14 { pt3dadd( -28.7415, 439.344, -92.7345, 0.36 ) }
    dend_14 { pt3dadd( -29.6055, 444.083, -93.616, 0.12 ) }
    dend_14 { pt3dadd( -30.2629, 449.711, -94.36, 0.12 ) }
    dend_14 { pt3dadd( -30.6958, 455.951, -95.1543, 0.12 ) }
    dend_14 { pt3dadd( -30.8039, 460.736, -95.7113, 0.12 ) }
    dend_14 { pt3dadd( -30.6861, 468.286, -96.5598, 0.12 ) }
    dend_14 { pt3dadd( -30.5072, 473.127, -97.2362, 0.12 ) }
    dend_14 { pt3dadd( -30.1326, 481.771, -98.661, 0.12 ) }
    dend_14 { pt3dadd( -29.7727, 489.5, -100.231, 0.12 ) }
    dend_14 { pt3dadd( -29.4576, 496.175, -101.891, 0.12 ) }
    dend_14 { pt3dadd( -29.2821, 499.171, -102.752, 0.12 ) }
    dend_14 { pt3dadd( -28.7535, 506.944, -105.342, 0.12 ) }
    dend_14 { pt3dadd( -28.3389, 511.666, -107.12, 0.12 ) }
    dend_14 { pt3dadd( -27.876, 515.908, -108.98, 0.12 ) }
    dend_14 { pt3dadd( -26.8821, 522.2, -112.123, 0.12 ) }
    dend_14 { pt3dadd( -25.7022, 527.399, -115.032, 0.12 ) }
    dend_14 { pt3dadd( -24.2591, 532.384, -118.213, 0.12 ) }
    dend_14 { pt3dadd( -23.1631, 535.383, -120.37, 0.12 ) }
    dend_14 { pt3dadd( -21.6844, 538.982, -123.238, 0.12 ) }
    dend_14 { pt3dadd( -20.2994, 542.399, -126.093, 0.12 ) }
    dend_14 { pt3dadd( -19.0669, 545.549, -128.976, 0.12 ) }
    dend_14 { pt3dadd( -17.9678, 548.891, -132.191, 0.12 ) }
    dend_14 { pt3dadd( -17.5585, 550.911, -133.93, 0.12 ) }
    dend_14 { pt3dadd( -17.1989, 553.92, -135.946, 0.12 ) }
    dend_14 { pt3dadd( -16.8206, 558.949, -138.26, 0.12 ) }
    dend_14 { pt3dadd( -16.8369, 563.719, -140.003, 0.12 ) }
    dend_14 { pt3dadd( -16.955, 565.989, -140.648, 0.12 ) }
    dend_14 { pt3dadd( -17.3858, 573.734, -142.53, 0.12 ) }
    dend_14 { pt3dadd( -17.7787, 580.521, -144.019, 0.12 ) }
    dend_14 { pt3dadd( -18.1557, 587.631, -145.275, 0.12 ) }
    dend_14 { pt3dadd( -18.587, 594.39, -146.214, 0.12 ) }
    dend_14 { pt3dadd( -19.0252, 600.458, -146.681, 0.12 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 51/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.3447, 242.812, -51.2869, 0.36 ) }
    dend_9 { pt3dadd( -13.6099, 246.197, -52.3079, 0.36 ) }
    dend_9 { pt3dadd( -13.8107, 249.53, -53.2272, 0.36 ) }
    dend_9 { pt3dadd( -13.9443, 253.861, -54.2888, 0.36 ) }
    dend_9 { pt3dadd( -13.9874, 258.67, -55.3421, 0.36 ) }
    dend_9 { pt3dadd( -13.9692, 264.106, -56.4759, 0.36 ) }
    dend_9 { pt3dadd( -13.9069, 266.81, -57.0052, 0.36 ) }
    dend_9 { pt3dadd( -13.5969, 271.83, -58.0249, 0.36 ) }
    dend_9 { pt3dadd( -13.1683, 277.161, -59.1227, 0.36 ) }
    dend_9 { pt3dadd( -12.7556, 281.821, -60.0382, 0.36 ) }
    dend_9 { pt3dadd( -12.3294, 286.479, -60.8769, 0.36 ) }
    dend_9 { pt3dadd( -11.8119, 292.442, -61.8795, 0.36 ) }
    dend_9 { pt3dadd( -11.2672, 300.972, -63.3368, 0.36 ) }
    dend_9 { pt3dadd( -11.0847, 306.898, -64.3155, 0.24 ) }
    dend_9 { pt3dadd( -11.0805, 311.019, -65.0149, 0.24 ) }
    dend_9 { pt3dadd( -11.1679, 316.461, -65.9187, 0.24 ) }
    dend_9 { pt3dadd( -11.242, 318.439, -66.2238, 0.24 ) }
    dend_9 { pt3dadd( -11.5574, 323.146, -66.934, 0.24 ) }
    dend_9 { pt3dadd( -12.3029, 331.129, -67.9989, 0.24 ) }
    dend_9 { pt3dadd( -12.5712, 333.39, -68.3274, 0.24 ) }
    dend_9 { pt3dadd( -13.0425, 337.263, -68.893, 0.24 ) }
    dend_9 { pt3dadd( -13.4553, 341.114, -69.4279, 0.24 ) }
    dend_9 { pt3dadd( -13.8831, 345.986, -70.0742, 0.24 ) }
    dend_9 { pt3dadd( -14.2764, 351.793, -70.7764, 0.24 ) }
    dend_9 { pt3dadd( -14.6255, 357.46, -71.4302, 0.24 ) }
    dend_9 { pt3dadd( -14.9206, 363.285, -72.1343, 0.24 ) }
    dend_9 { pt3dadd( -15.1088, 368.362, -72.81, 0.24 ) }
    dend_9 { pt3dadd( -15.1495, 370.458, -73.0923, 0.24 ) }
    dend_9 { pt3dadd( -15.1259, 374.823, -73.6882, 0.24 ) }
    dend_9 { pt3dadd( -14.9558, 378.65, -74.2967, 0.24 ) }
    dend_9 { pt3dadd( -14.5143, 384.035, -75.3093, 0.24 ) }
    dend_9 { pt3dadd( -14.154, 388.281, -76.246, 0.24 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 83/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -59.2597, 66.6948, -23.8862, 0.48 ) }
    dend_5 { pt3dadd( -59.8243, 68.1705, -25.1849, 0.48 ) }
    dend_5 { pt3dadd( -60.8723, 70.9231, -27.0906, 0.48 ) }
    dend_5 { pt3dadd( -61.9944, 73.6999, -28.613, 0.48 ) }
    dend_5 { pt3dadd( -62.6934, 75.3214, -29.5247, 0.48 ) }
    dend_5 { pt3dadd( -63.4981, 76.9304, -30.4764, 0.48 ) }
    dend_5 { pt3dadd( -64.5329, 78.982, -31.5849, 0.36 ) }
    dend_5 { pt3dadd( -65.7795, 81.31, -32.8034, 0.6 ) }
    dend_5 { pt3dadd( -66.938, 83.3915, -33.8127, 0.36 ) }
    dend_5 { pt3dadd( -68.5847, 86.6448, -35.4164, 0.36 ) }
    dend_5 { pt3dadd( -69.8745, 89.5091, -36.8773, 0.36 ) }
    dend_5 { pt3dadd( -71.015, 92.1972, -38.4681, 0.84 ) }
    dend_5 { pt3dadd( -72.205, 95.2509, -40.3972, 0.48 ) }
    dend_5 { pt3dadd( -72.6005, 96.3426, -41.1869, 0.48 ) }
    dend_5 { pt3dadd( -73.0999, 97.9149, -42.3878, 0.36 ) }
    dend_5 { pt3dadd( -73.7602, 99.8888, -43.9161, 1.08 ) }
    dend_5 { pt3dadd( -75.1605, 103.683, -47.153, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_5 { pt3dadd( -75.5757, 104.682, -48.0377, 0.6 ) }
    dend_5 { pt3dadd( -77.1935, 108.328, -51.2411, 0.36 ) }
    dend_5 { pt3dadd( -78.3119, 110.712, -53.3173, 0.72 ) }
    dend_5 { pt3dadd( -79.62, 113.545, -55.6543, 0.72 ) }
    dend_5 { pt3dadd( -80.8903, 116.443, -57.9158, 0.36 ) }
    dend_5 { pt3dadd( -81.8956, 118.765, -59.6206, 0.84 ) }
    dend_5 { pt3dadd( -83.4544, 122.175, -62.0112, 0.36 ) }
    dend_5 { pt3dadd( -84.1477, 123.722, -63.0392, 0.96 ) }
    dend_5 { pt3dadd( -86.7638, 129.654, -66.8602, 0.24 ) }
    dend_5 { pt3dadd( -87.8159, 132.216, -68.4263, 0.72 ) }
    dend_5 { pt3dadd( -89.5326, 136.304, -70.8047, 0.36 ) }
    dend_5 { pt3dadd( -90.5157, 138.448, -72.0939, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 12/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -59.2597, 66.6948, -23.8862, 0.36 ) }
    dend_4 { pt3dadd( -60.9084, 67.486, -24.6697, 0.36 ) }
    dend_4 { pt3dadd( -63.4431, 68.9953, -25.961, 0.36 ) }
    dend_4 { pt3dadd( -65.5858, 70.4392, -27.3721, 0.36 ) }
    dend_4 { pt3dadd( -69.4999, 73.3044, -29.7184, 0.36 ) }
    dend_4 { pt3dadd( -72.6875, 75.7178, -31.6342, 0.24 ) }
    dend_4 { pt3dadd( -74.7304, 77.254, -32.8327, 0.12 ) }
    dend_4 { pt3dadd( -77.5264, 79.4566, -34.4411, 0.12 ) }
    dend_4 { pt3dadd( -83.4804, 84.2878, -37.8048, 0.12 ) }
    dend_4 { pt3dadd( -87.7223, 87.123, -39.8782, 0.12 ) }
    dend_4 { pt3dadd( -91.1053, 89.1155, -41.4677, 0.12 ) }
    dend_4 { pt3dadd( -92.9778, 90.1731, -42.2218, 0.12 ) }
    dend_4 { pt3dadd( -94.9544, 91.2579, -42.9766, 0.12 ) }
    dend_4 { pt3dadd( -95.8535, 91.7362, -43.3039, 0.12 ) }
    dend_4 { pt3dadd( -111.799, 100.068, -48.8961, 0.12 ) }
    dend_4 { pt3dadd( -117.881, 103.216, -51.2004, 0.12 ) }
    dend_4 { pt3dadd( -125.099, 107.035, -53.8355, 0.12 ) }
    dend_4 { pt3dadd( -133.097, 111.402, -56.8558, 0.12 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -46.5071, 5.55358, 29.2814, 0.24 ) }
    dend_26 { pt3dadd( -48.5591, 5.56636, 30.4794, 0.24 ) }
    dend_26 { pt3dadd( -49.7005, 5.60543, 31.1294, 0.24 ) }
    dend_26 { pt3dadd( -51.5986, 5.68532, 32.098, 0.36 ) }
    dend_26 { pt3dadd( -52.9231, 5.76006, 32.7057, 0.36 ) }
    dend_26 { pt3dadd( -54.3394, 5.96307, 33.3927, 0.36 ) }
    dend_26 { pt3dadd( -55.1117, 6.09994, 33.7775, 0.36 ) }
    dend_26 { pt3dadd( -56.6126, 6.41095, 34.4713, 0.36 ) }
    dend_26 { pt3dadd( -58.7182, 6.86619, 35.4681, 0.36 ) }
    dend_26 { pt3dadd( -60.2227, 7.17913, 36.1849, 0.36 ) }
    dend_26 { pt3dadd( -63.4754, 7.78496, 37.7239, 0.36 ) }
    dend_26 { pt3dadd( -64.3755, 7.95217, 38.15, 0.36 ) }
    dend_26 { pt3dadd( -66.3988, 8.30276, 39.1188, 0.36 ) }
    dend_26 { pt3dadd( -67.7312, 8.52445, 39.7698, 0.36 ) }
    dend_26 { pt3dadd( -69.6072, 8.79692, 40.7443, 0.36 ) }
    dend_26 { pt3dadd( -70.9525, 8.87835, 41.4184, 0.36 ) }
    dend_26 { pt3dadd( -78.4657, 8.38031, 44.2405, 0.36 ) }
    dend_26 { pt3dadd( -85.8957, 7.07002, 47.0415, 0.36 ) }
    dend_26 { pt3dadd( -93.7862, 6.28567, 48.3781, 0.36 ) }
    dend_26 { pt3dadd( -101.781, 7.08349, 48.6765, 0.36 ) }
    dend_26 { pt3dadd( -109.535, 9.0147, 47.6875, 0.36 ) }
    dend_26 { pt3dadd( -117.482, 9.41185, 48.8275, 0.36 ) }
    dend_26 { pt3dadd( -125.403, 8.67572, 49.9984, 0.36 ) }
    dend_26 { pt3dadd( -133.247, 7.34598, 51.1952, 0.36 ) }
    dend_26 { pt3dadd( -141.238, 6.4621, 51.125, 0.36 ) }
    dend_26 { pt3dadd( -149.046, 5.01112, 52.4193, 0.36 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 56/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -46.5071, 5.55358, 29.2814, 0.24 ) }
    dend_25 { pt3dadd( -45.9065, 9.00791, 27.2912, 0.24 ) }
    dend_25 { pt3dadd( -45.7818, 10.0084, 26.7935, 0.24 ) }
    dend_25 { pt3dadd( -45.4531, 12.0967, 25.7985, 0.24 ) }
    dend_25 { pt3dadd( -45.2753, 13.0687, 25.3591, 0.24 ) }
    dend_25 { pt3dadd( -44.1248, 18.4597, 22.9439, 0.24 ) }
    dend_25 { pt3dadd( -43.4878, 21.0574, 21.7859, 0.24 ) }
    dend_25 { pt3dadd( -42.7517, 23.8239, 20.6253, 0.24 ) }
    dend_25 { pt3dadd( -41.5226, 27.9865, 18.898, 0.24 ) }
    dend_25 { pt3dadd( -40.6431, 30.621, 17.8322, 0.24 ) }
    dend_25 { pt3dadd( -39.7368, 33.2353, 16.7408, 0.24 ) }
    dend_25 { pt3dadd( -39.1503, 34.8396, 16.0816, 0.24 ) }
    dend_25 { pt3dadd( -38.7554, 35.9197, 15.6189, 0.24 ) }
    dend_25 { pt3dadd( -38.1814, 37.5057, 14.8508, 0.24 ) }
    dend_25 { pt3dadd( -37.1949, 40.2612, 13.4915, 0.24 ) }
    dend_25 { pt3dadd( -35.2162, 45.5428, 10.8268, 0.24 ) }
    dend_25 { pt3dadd( -33.9736, 48.6893, 9.28156, 0.24 ) }
    dend_25 { pt3dadd( -32.7145, 51.6993, 7.74561, 0.24 ) }
    dend_25 { pt3dadd( -30.7729, 56.2052, 5.41213, 0.24 ) }
    dend_25 { pt3dadd( -28.6521, 60.9736, 2.92016, 0.24 ) }
    dend_25 { pt3dadd( -27.674, 62.9893, 1.86212, 0.24 ) }
    dend_25 { pt3dadd( -26.0921, 65.7219, 0.449892, 0.24 ) }
    dend_25 { pt3dadd( -23.7249, 69.5979, -1.67458, 0.24 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 79/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -14.154, 388.281, -76.246, 0.24 ) }
    dend_13 { pt3dadd( -13.7906, 392.431, -76.6859, 0.24 ) }
    dend_13 { pt3dadd( -13.5827, 395.28, -76.9491, 0.24 ) }
    dend_13 { pt3dadd( -13.3992, 398.244, -77.189, 0.24 ) }
    dend_13 { pt3dadd( -13.1043, 403.31, -77.5539, 0.24 ) }
    dend_13 { pt3dadd( -12.8271, 408.125, -77.8689, 0.24 ) }
    dend_13 { pt3dadd( -12.6643, 410.757, -78.0248, 0.24 ) }
    dend_13 { pt3dadd( -12.4616, 414.155, -78.0915, 0.24 ) }
    dend_13 { pt3dadd( -12.1735, 418.223, -78.09, 0.24 ) }
    dend_13 { pt3dadd( -11.9497, 421.562, -78.0334, 0.24 ) }
    dend_13 { pt3dadd( -11.8124, 424.232, -77.9713, 0.24 ) }
    dend_13 { pt3dadd( -11.7876, 427.755, -77.8977, 0.24 ) }
    dend_13 { pt3dadd( -11.943, 430.973, -77.8886, 0.24 ) }
    dend_13 { pt3dadd( -12.2687, 433.927, -77.9427, 0.24 ) }
    dend_13 { pt3dadd( -12.677, 436.202, -78.0395, 0.24 ) }
    dend_13 { pt3dadd( -13.3955, 439.297, -78.341, 0.24 ) }
    dend_13 { pt3dadd( -14.4783, 443.29, -78.8991, 0.24 ) }
    dend_13 { pt3dadd( -15.8593, 447.99, -79.4673, 0.24 ) }
    dend_13 { pt3dadd( -16.837, 451.409, -79.8228, 0.24 ) }
    dend_13 { pt3dadd( -18.3558, 457.073, -79.9694, 0.24 ) }
    dend_13 { pt3dadd( -19.1972, 460.513, -79.8421, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -19.8686, 464.154, -79.6266, 0.24 ) }
    dend_13 { pt3dadd( -20.8303, 470.983, -78.8633, 0.24 ) }
    dend_13 { pt3dadd( -21.2712, 475.336, -78.2234, 0.24 ) }
    dend_13 { pt3dadd( -21.6135, 480.432, -77.481, 0.24 ) }
    dend_13 { pt3dadd( -21.6966, 482.462, -77.2028, 0.24 ) }
    dend_13 { pt3dadd( -21.9773, 489.296, -76.1821, 0.24 ) }
    dend_13 { pt3dadd( -22.103, 493.815, -75.6733, 0.24 ) }
    dend_13 { pt3dadd( -22.1718, 496.936, -75.6012, 0.24 ) }
    dend_13 { pt3dadd( -22.3262, 501.332, -75.7338, 0.24 ) }
    dend_13 { pt3dadd( -22.4719, 504.44, -76.0952, 0.24 ) }
    dend_13 { pt3dadd( -22.704, 508.184, -76.458, 0.24 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 11/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -14.154, 388.281, -76.246, 0.24 ) }
    dend_10 { pt3dadd( -15.2226, 394.219, -77.774, 0.24 ) }
    dend_10 { pt3dadd( -16.0166, 398.631, -78.9093, 0.24 ) }
    dend_10 { pt3dadd( -16.9079, 403.584, -80.1838, 0.24 ) }
    dend_10 { pt3dadd( -18.1043, 410.233, -81.8945, 0.24 ) }
    dend_10 { pt3dadd( -19.7924, 419.614, -84.3084, 0.24 ) }
    dend_10 { pt3dadd( -20.6547, 424.406, -85.5415, 0.24 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 18/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -90.5157, 138.448, -72.0939, 0.48 ) }
    dend_7 { pt3dadd( -99.9898, 143.404, -77.9394, 0.48 ) }
    dend_7 { pt3dadd( -115.168, 151.157, -85.5751, 0.12 ) }
    dend_7 { pt3dadd( -127.036, 157.065, -90.6465, 0.24 ) }
    dend_7 { pt3dadd( -134.35, 160.694, -93.1295, 0.24 ) }
    dend_7 { pt3dadd( -138.931, 163.088, -94.2889, 0.24 ) }
    dend_7 { pt3dadd( -144.712, 166.196, -95.6192, 0.24 ) }
    dend_7 { pt3dadd( -150.012, 169.205, -96.0624, 0.24 ) }
    dend_7 { pt3dadd( -153.178, 170.871, -96.1799, 0.24 ) }
    dend_7 { pt3dadd( -160.949, 174.662, -97.6631, 0.24 ) }
    dend_7 { pt3dadd( -170.386, 179.353, -100.458, 0.24 ) }
    dend_7 { pt3dadd( -175.48, 182.114, -102.493, 0.24 ) }
    dend_7 { pt3dadd( -179.849, 184.829, -104.763, 0.24 ) }
    dend_7 { pt3dadd( -190.573, 192.03, -111.705, 0.24 ) }
    dend_7 { pt3dadd( -199.219, 197.723, -117.987, 0.24 ) }
    dend_7 { pt3dadd( -201.667, 199.23, -119.836, 0.24 ) }
    dend_7 { pt3dadd( -205.805, 201.572, -122.903, 0.24 ) }
    dend_7 { pt3dadd( -211.368, 204.684, -126.515, 0.24 ) }
    dend_7 { pt3dadd( -215.692, 207.11, -129.02, 0.24 ) }
    dend_7 { pt3dadd( -225.756, 212.507, -133.543, 0.24 ) }
    dend_7 { pt3dadd( -231.381, 215.13, -135.785, 0.24 ) }
    dend_7 { pt3dadd( -237.667, 217.731, -138.221, 0.24 ) }
    dend_7 { pt3dadd( -242.264, 219.364, -139.898, 0.24 ) }
    dend_7 { pt3dadd( -248.057, 221.249, -141.768, 0.24 ) }
    dend_7 { pt3dadd( -253.729, 223.327, -143.557, 0.24 ) }
    dend_7 { pt3dadd( -260.01, 226.334, -145.807, 0.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 44/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -90.5157, 138.448, -72.0939, 0.48 ) }
    dend_6 { pt3dadd( -90.9387, 140.847, -75.4567, 0.48 ) }
    dend_6 { pt3dadd( -91.4864, 144.188, -80.2131, 0.24 ) }
    dend_6 { pt3dadd( -91.9726, 147.157, -84.2877, 0.24 ) }
    dend_6 { pt3dadd( -92.555, 150.301, -88.5032, 0.24 ) }
    dend_6 { pt3dadd( -92.9283, 152.094, -90.8493, 0.24 ) }
    dend_6 { pt3dadd( -93.3558, 154.148, -93.5362, 0.24 ) }
    dend_6 { pt3dadd( -93.8922, 156.613, -96.6921, 0.24 ) }
    dend_6 { pt3dadd( -94.1241, 157.774, -98.181, 0.24 ) }
    dend_6 { pt3dadd( -94.5186, 159.908, -100.88, 0.24 ) }
    dend_6 { pt3dadd( -95.2966, 162.672, -104.132, 0.24 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 55/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -149.046, 5.01112, 52.4193, 0.24 ) }
    dend_30 { pt3dadd( -159.208, 4.0982, 55.1479, 0.24 ) }
    dend_30 { pt3dadd( -169.156, 1.69817, 57.8133, 0.24 ) }
    dend_30 { pt3dadd( -179.39, -0.365555, 59.4477, 0.24 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 59/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -149.046, 5.01112, 52.4193, 0.24 ) }
    dend_27 { pt3dadd( -158.268, 6.16287, 53.9274, 0.24 ) }
    dend_27 { pt3dadd( -167.015, 8.45148, 56.573, 0.24 ) }
    dend_27 { pt3dadd( -174.681, 12.5038, 60.3006, 0.24 ) }
    dend_27 { pt3dadd( -181.118, 18.481, 63.8577, 0.24 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 64/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -20.6547, 424.406, -85.5415, 0.24 ) }
    dend_12 { pt3dadd( -21.9403, 431.041, -85.6717, 0.24 ) }
    dend_12 { pt3dadd( -22.9221, 436.108, -85.7712, 0.24 ) }
    dend_12 { pt3dadd( -23.6481, 439.856, -85.8447, 0.24 ) }
    dend_12 { pt3dadd( -24.2371, 442.896, -85.9044, 0.24 ) }
    dend_12 { pt3dadd( -25.2867, 448.313, -86.0107, 0.24 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -20.6547, 424.406, -85.5415, 0.24 ) }
    dend_11 { pt3dadd( -21.697, 429.628, -85.5731, 0.24 ) }
    dend_11 { pt3dadd( -23.2521, 434.511, -86.0105, 0.24 ) }
    dend_11 { pt3dadd( -24.7923, 438.733, -86.8291, 0.24 ) }
    dend_11 { pt3dadd( -26.1911, 442.079, -87.5547, 0.24 ) }
    dend_11 { pt3dadd( -27.3759, 445.028, -88.3636, 0.24 ) }
    dend_11 { pt3dadd( -28.5942, 448.296, -89.3226, 0.24 ) }
    dend_11 { pt3dadd( -31.1732, 454.752, -91.3181, 0.24 ) }
    dend_11 { pt3dadd( -33.2218, 459.934, -93.1965, 0.24 ) }
    dend_11 { pt3dadd( -34.7821, 464.244, -94.8895, 0.24 ) }
    dend_11 { pt3dadd( -36.1306, 469.446, -96.939, 0.24 ) }
    dend_11 { pt3dadd( -36.6798, 472.69, -98.0785, 0.24 ) }
    dend_11 { pt3dadd( -36.9369, 474.188, -98.5392, 0.24 ) }
    dend_11 { pt3dadd( -37.5175, 477.395, -99.4174, 0.24 ) }
    dend_11 { pt3dadd( -38.0656, 480.074, -100.08, 0.24 ) }
    dend_11 { pt3dadd( -40.1109, 489.004, -102.21, 0.24 ) }
    dend_11 { pt3dadd( -41.0579, 492.598, -102.988, 0.24 ) }
    dend_11 { pt3dadd( -45.249, 507.744, -106.322, 0.24 ) }
    dend_11 { pt3dadd( -46.377, 511.941, -107.203, 0.24 ) }
    dend_11 { pt3dadd( -47.5627, 516.712, -108.173, 0.24 ) }
    dend_11 { pt3dadd( -48.5402, 521.273, -109.098, 0.24 ) }
    dend_11 { pt3dadd( -49.0982, 524.407, -109.691, 0.24 ) }
    dend_11 { pt3dadd( -49.6197, 529.563, -110.581, 0.24 ) }
    dend_11 { pt3dadd( -49.6806, 534.21, -111.229, 0.24 ) }
    dend_11 { pt3dadd( -49.6344, 540.167, -112.068, 0.24 ) }
    dend_11 { pt3dadd( -49.4403, 547.911, -113.188, 0.24 ) }
    dend_11 { pt3dadd( -49.1082, 555.92, -114.352, 0.24 ) }
    dend_11 { pt3dadd( -48.6861, 565.273, -115.716, 0.24 ) }
    dend_11 { pt3dadd( -48.3921, 572.717, -116.758, 0.24 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 99/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -181.118, 18.481, 63.8577, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_29 { pt3dadd( -188.169, 21.28, 65.8636, 0.24 ) }
    dend_29 { pt3dadd( -194.859, 24.841, 67.9368, 0.24 ) }
    dend_29 { pt3dadd( -201.429, 28.4717, 70.2559, 0.24 ) }
    dend_29 { pt3dadd( -208.265, 32.1793, 71.445, 0.24 ) }
    dend_29 { pt3dadd( -214.444, 36.9703, 72.5111, 0.24 ) }
    dend_29 { pt3dadd( -221.326, 40.647, 73.5223, 0.24 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 6/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -181.118, 18.481, 63.8577, 0.24 ) }
    dend_28 { pt3dadd( -190.093, 22.0435, 68.6872, 0.24 ) }
    dend_28 { pt3dadd( -199.425, 26.0414, 72.3661, 0.24 ) }
    dend_28 { pt3dadd( -208.741, 30.6376, 75.3428, 0.24 ) }
    dend_28 { pt3dadd( -218.706, 33.0327, 78.6815, 0.24 ) }
    dend_28 { pt3dadd( -227.93, 35.1212, 83.8567, 0.24 ) }
    dend_28 { pt3dadd( -237.447, 38.5218, 87.637, 0.24 ) }
    dend_28 { pt3dadd( -246.208, 43.6694, 91.3532, 0.24 ) }
    dend_28 { pt3dadd( -254.479, 49.7479, 94.8424, 0.24 ) }
    dend_28 { pt3dadd( -262.269, 55.5325, 99.6782, 0.24 ) }
    dend_28 { pt3dadd( -269.854, 61.6009, 104.51, 0.24 ) }
    dend_28 { pt3dadd( -277.58, 66.9129, 109.937, 0.24 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, axon_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, axon_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_5 = new SectionList()
    dend_55 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_54 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_58 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_57 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_46 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_43 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_32 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_53 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_52 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_50 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_47 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_40 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_39 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_19 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_3 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_49 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_48 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_42 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_23 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_5 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_4 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_26 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_25 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_13 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_7 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_6 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_11 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_29 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_28 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_44 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_20 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_37 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_51 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_24 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_30 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_27 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_41 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_10 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_55 nseg = 11
    dend_59 nseg = 17
    dend_54 nseg = 9
    dend_36 nseg = 3
    dend_58 nseg = 5
    dend_57 nseg = 3
    dend_46 nseg = 9
    dend_43 nseg = 15
    dend_38 nseg = 9
    dend_32 nseg = 7
    dend_15 nseg = 3
    dend_53 nseg = 17
    dend_52 nseg = 3
    dend_50 nseg = 3
    dend_47 nseg = 3
    dend_40 nseg = 3
    dend_39 nseg = 5
    dend_34 nseg = 3
    dend_33 nseg = 3
    dend_31 nseg = 3
    dend_19 nseg = 11
    dend_16 nseg = 5
    dend_8 nseg = 11
    dend_3 nseg = 3
    dend_49 nseg = 3
    dend_48 nseg = 3
    dend_42 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_14 nseg = 19
    dend_9 nseg = 7
    dend_5 nseg = 5
    dend_4 nseg = 5
    dend_26 nseg = 5
    dend_25 nseg = 3
    dend_13 nseg = 7
    dend_7 nseg = 11
    dend_6 nseg = 3
    dend_11 nseg = 7
    dend_29 nseg = 3
    dend_28 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_NBC_780c5f5ae3_0_0


