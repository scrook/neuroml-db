// Cell: cACint209_L4_DBC_280e20a247_0_0
/*
{
  "id" : "cACint209_L4_DBC_280e20a247_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.7707, 14.3445, 1.63673, 2.6356", "1.65855, 13.0663, 1.48326, 4.68599", "1.5464, 11.788, 1.32978, 5.81905", "1.43425, 10.5097, 1.1763, 6.95808", "1.32209, 9.23142, 1.02283, 8.17562", "1.20994, 7.95314, 0.869351, 9.23498", "1.09779, 6.67486, 0.715875, 9.66374", "0.985636, 5.39658, 0.562399, 9.75915", "0.873483, 4.1183, 0.408922, 9.85456", "0.76133, 2.84002, 0.255446, 9.99274", "0.649178, 1.56175, 0.101969, 10.3671", "0.537025, 0.283466, -0.051507, 11.1059", "0.424873, -0.994813, -0.204983, 11.9164", "0.31272, -2.27309, -0.35846, 12.7207", "0.200568, -3.55137, -0.511936, 12.9931", "0.0884149, -4.82965, -0.665413, 12.8706", "-0.0237377, -6.10793, -0.818889, 12.7481", "-0.13589, -7.38621, -0.972365, 11.5655", "-0.248043, -8.66449, -1.12584, 9.82802", "-0.360195, -9.94277, -1.27932, 4.98087", "-0.472348, -11.221, -1.43279, 2.92263" ]
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.24391, 15.5458, 5.96094, 3.33", "1.02634, 20.7633, 6.79168, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.08609, -3.14072, 6.39094, 1.33", "-9.69212, -3.2923, 6.71915, 0.67", "-11.121, -3.62587, 6.84965, 0.67", "-12.7131, -4.00863, 6.96876, 0.67", "-15.7054, -4.46002, 7.16202, 0.67", "-17.6239, -4.63775, 7.27221, 0.67", "-21.2311, -4.75877, 7.45654, 0.67", "-25.9974, -4.7122, 7.64615, 0.67", "-27.6415, -4.69969, 7.73391, 0.67", "-30.3017, -4.72588, 7.90862, 0.67", "-31.6581, -4.83789, 7.88512, 0.67", "-33.5457, -5.05665, 7.55135, 0.67", "-34.8446, -5.15232, 7.15503, 0.67", "-36.724, -5.19505, 6.52158, 0.67", "-38.9353, -5.35281, 5.79283, 0.67", "-44.3489, -5.68587, 4.31075, 0.67", "-46.9699, -5.67662, 3.80966, 0.67", "-49.7101, -5.40978, 3.58824, 0.67", "-52.0941, -5.00948, 3.65896, 0.67", "-53.4511, -4.69894, 3.79788, 0.67", "-56.8583, -3.69206, 4.3944, 0.67", "-60.8206, -2.36704, 5.34752, 0.67", "-65.0614, -0.835049, 6.34414, 0.67", "-68.2154, 0.421431, 7.04789, 0.33", "-69.1441, 0.843111, 7.24269, 0.67", "-71.3758, 1.87303, 7.65433, 1.33", "-76.5458, 4.2347, 8.38821, 0.67", "-77.6196, 4.72813, 8.44033, 0.67", "-80.448, 5.97567, 8.25338, 1.33", "-82.9911, 7.0792, 7.94217, 0.67", "-86.8068, 8.61676, 7.39125, 0.67", "-89.9982, 9.68987, 6.86385, 0.67", "-93.9152, 10.799, 6.03787, 0.67", "-95.4022, 11.1675, 5.70855, 1.33", "-97.9629, 11.6902, 5.10154, 0.33", "-99.5834, 11.9935, 4.74145, 1.33", "-103.271, 12.8, 3.90364, 0.67", "-106.538, 13.2123, 3.36328, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.04391, -8.90719, 0.670944, 2.67", "7.10102, -12.1819, 2.99263, 2.0", "10.8209, -18.1036, 7.19102, 2.0", "14.2441, -23.5529, 11.0544, 2.0", "15.618, -25.74, 12.605, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.472348, -11.221, -1.43279, 0.67", "-1.78337, -26.1636, -1.43279, 0.67", "-3.0944, -41.1062, -1.43279, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "1.02634, 20.7633, 6.79168, 2.67", "0.351299, 22.5224, 8.27648, 2.67" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "1.02634, 20.7633, 6.79168, 1.33", "-2.9009, 19.568, -10.2438, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-106.538, 13.2123, 3.36328, 0.67", "-110.997, 15.3374, 3.43272, 0.67", "-116.501, 17.2234, 2.381, 0.67", "-119.447, 17.845, 1.49985, 0.33", "-120.608, 18.0738, 1.12081, 0.67", "-122.311, 18.3381, 0.41556, 0.67", "-124.836, 18.6787, -0.698978, 0.67", "-131.079, 19.1744, -3.95403, 0.67", "-135.014, 19.5296, -6.2421, 0.67", "-137.28, 19.8056, -7.59857, 0.67", "-141.866, 20.6075, -10.2346, 2.0", "-144.005, 21.1141, -11.4618, 0.33", "-146.049, 21.7652, -12.5701, 0.67", "-147.519, 22.3302, -13.2005, 1.33", "-150.695, 23.8123, -14.796, 0.33", "-152.169, 24.5186, -15.5048, 2.0" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-106.538, 13.2123, 3.36328, 0.33", "-106.396, 12.2653, 3.06691, 0.33", "-106.283, 11.5132, 2.83155, 0.67" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "15.618, -25.74, 12.605, 1.33", "17.5209, -30.9768, 3.31164, 1.33", "18.2574, -33.0036, -0.28521, 0.67", "18.7383, -34.3272, -2.6342, 0.67", "19.111, -35.3528, -4.45431, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "15.618, -25.74, 12.605, 0.67", "15.0671, -30.3017, 13.1251, 0.67", "14.986, -33.5867, 13.7898, 0.67", "14.9592, -38.1279, 14.8674, 0.67", "15.1037, -43.4669, 16.1549, 1.33", "15.2443, -48.0822, 17.2555, 1.33", "15.6659, -56.3028, 19.1203, 1.33", "16.0979, -59.4794, 19.7986, 1.33", "16.7832, -63.5229, 20.6621, 1.33", "17.285, -66.6579, 21.2939, 1.33", "17.7986, -70.0599, 22.0235, 1.33", "18.2408, -73.9095, 22.7181, 1.33", "18.8382, -80.9024, 23.4169, 0.67", "19.064, -84.1154, 23.7417, 1.33", "19.241, -86.3636, 23.9602, 1.33", "19.5941, -92.4643, 24.8785, 1.33", "19.6996, -95.8901, 25.395, 1.33", "19.5807, -100.223, 26.098, 0.67", "19.2242, -105.457, 27.0478, 1.33", "18.9576, -108.791, 27.6013, 0.67", "18.0265, -118.367, 29.052, 1.33", "17.5287, -122.927, 29.7639, 1.33", "17.2875, -126.202, 30.2131, 1.33", "17.121, -129.342, 30.5866, 1.33", "17.0247, -133.72, 31.1913, 1.33", "17.0605, -136.079, 31.5385, 1.33", "17.5609, -142.469, 32.3055, 2.0", "18.1869, -146.957, 33.0659, 1.33", "18.5579, -148.881, 33.3951, 2.0", "19.7671, -154.55, 34.5331, 2.0", "20.2728, -156.689, 35.1853, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-3.0944, -41.1062, -1.43279, 0.33", "-4.40542, -56.0488, -1.43279, 0.33", "-5.71644, -70.9914, -1.43279, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "0.351299, 22.5224, 8.27648, 0.67", "1.0256, 24.5579, 9.60198, 0.67", "2.17826, 28.0375, 11.8678, 0.67", "4.91285, 36.2925, 17.2433, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "0.351299, 22.5224, 8.27648, 2.67", "1.26172, 26.3694, 4.51093, 2.67", "1.87338, 28.954, 1.98109, 2.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.9009, 19.568, -10.2438, 1.33", "-4.47555, 22.5865, -15.7074, 1.33", "-5.41951, 24.396, -18.9827, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.9009, 19.568, -10.2438, 0.67", "-0.144027, 17.4599, -9.80986, 0.67", "2.82089, 15.3955, -8.96761, 0.33", "4.69449, 14.2468, -8.33873, 0.67", "6.22001, 13.395, -7.8125, 0.67", "7.7268, 12.5421, -7.28839, 0.33", "8.69162, 12.0258, -6.96237, 0.67", "12.1421, 10.6291, -6.11825, 0.33", "13.3395, 10.2137, -5.858, 0.67", "15.8192, 9.3563, -5.47501, 0.33", "17.1989, 8.94154, -5.37696, 0.67", "18.7083, 8.55689, -5.41258, 0.33", "20.9158, 8.17077, -5.65037, 0.67", "22.7109, 7.96277, -6.09563, 0.33", "24.1021, 7.81788, -6.45129, 0.67", "24.9884, 7.79869, -6.68451, 0.33", "26.2505, 7.82912, -6.99847, 1.33", "29.665, 7.89933, -7.74302, 0.33", "31.6362, 8.03912, -8.00684, 0.67" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-152.169, 24.5186, -15.5048, 0.33", "-153.622, 21.9021, -14.3914, 0.33", "-154.735, 19.8979, -13.5384, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-152.169, 24.5186, -15.5048, 0.33", "-155.271, 25.3846, -14.448, 0.33", "-156.306, 25.6734, -14.0956, 0.67", "-159.308, 26.5116, -13.0728, 0.33", "-161.91, 27.2378, -12.1866, 0.67", "-163.768, 27.7566, -11.5536, 0.33", "-164.905, 28.0739, -11.1664, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "19.111, -35.3528, -4.45431, 0.67", "19.9011, -36.9678, -7.15115, 0.67", "20.6052, -38.1086, -8.91991, 0.67", "22.3838, -40.1595, -12.5816, 1.33", "23.056, -40.5998, -13.735, 0.67", "24.8109, -41.2553, -16.3101, 0.67", "25.8539, -41.5047, -17.5353, 1.33", "27.2609, -41.7107, -19.0606, 0.67", "29.0631, -41.7053, -20.5531, 0.67", "31.9121, -41.133, -22.4806, 0.67", "33.1015, -40.7489, -23.2361, 0.67", "35.3915, -39.801, -24.5172, 0.67", "38.611, -38.1039, -26.3655, 1.33", "40.2405, -37.1276, -27.3585, 0.67", "42.068, -35.8762, -28.5706, 1.33", "42.824, -35.2703, -29.3068, 0.67", "43.2656, -34.8592, -29.9143, 1.33", "43.7638, -34.2655, -30.855, 0.67", "44.5593, -33.2559, -32.5685, 0.67", "45.4602, -32.2306, -34.5863, 1.33", "47.2126, -30.6644, -38.1337, 0.67", "48.137, -29.913, -39.8959, 0.33", "48.9323, -29.2909, -41.5297, 0.33", "49.5147, -28.9286, -42.8993, 0.67", "50.1341, -28.606, -44.6982, 0.67", "50.7557, -28.3706, -46.5175, 0.67", "51.0397, -28.2613, -47.3301, 0.67", "52.4547, -27.7269, -51.546, 2.0", "53.796, -27.3445, -55.7256, 0.33", "54.5462, -27.1633, -58.3891, 0.67", "54.7952, -27.1351, -59.3842, 0.33", "55.0185, -27.1109, -60.4107, 0.67", "55.23, -27.0956, -61.415, 0.33", "56.0271, -26.9292, -64.1265, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "19.111, -35.3528, -4.45431, 0.67", "20.0857, -40.7016, -6.09245, 0.67", "20.9552, -45.0518, -7.56554, 0.67", "21.3685, -46.8947, -8.18515, 0.67", "22.6997, -53.0388, -10.0839, 1.33", "23.1473, -55.1195, -10.6615, 2.0", "23.9062, -58.71, -11.5703, 0.67", "24.3847, -61.2531, -12.2769, 1.33", "24.779, -63.9542, -12.9259, 0.67", "25.3558, -68.2268, -13.6882, 0.67", "25.7658, -71.4647, -13.9601, 1.33", "26.0191, -73.6486, -14.1845, 0.33", "26.2027, -75.6313, -14.4041, 0.33", "26.3144, -78.1691, -14.6752, 0.67", "26.345, -79.7399, -14.9027, 1.33", "26.4369, -82.8424, -15.4359, 0.67", "26.5931, -86.7532, -15.8856, 0.67", "26.805, -91.1296, -16.1528, 1.33", "27.0095, -95.1957, -16.1978, 0.67", "27.0599, -97.4228, -16.1133, 2.67", "27.0603, -99.9077, -15.6995, 0.67", "26.8601, -105.267, -14.5116, 0.67", "26.7026, -107.171, -13.983, 0.33", "26.4995, -109.357, -13.3588, 0.67", "26.3567, -110.902, -12.9635, 0.33", "25.7932, -116.563, -11.8332, 2.0", "25.224, -122.793, -11.2208, 0.67", "25.1175, -124.193, -11.225, 0.67", "25.0733, -126.449, -11.2695, 0.67", "25.1104, -129.258, -11.3808, 1.33", "25.1595, -131.767, -11.5388, 0.67", "25.2574, -135.604, -12.0026, 0.67", "25.3163, -137.572, -12.1502, 1.33", "25.3917, -140.445, -12.4175, 0.67", "25.4426, -144.817, -13.0331, 0.67", "25.4684, -146.374, -13.2181, 0.67", "25.5319, -148.765, -13.4265, 0.67", "25.5462, -151.042, -13.5623, 0.67", "25.5341, -152.283, -13.6911, 1.33", "25.354, -155.443, -14.1225, 0.67", "25.2632, -159.938, -14.7992, 2.0", "25.2687, -163.725, -15.138, 0.67", "25.2703, -165.05, -15.1781, 0.67", "25.1986, -170.096, -15.0802, 1.33", "25.1874, -172.189, -14.9651, 0.67", "25.1668, -175.496, -14.6359, 0.67", "25.0752, -179.484, -14.1699, 1.33", "25.0487, -183.484, -13.439, 0.67", "25.0283, -186.382, -12.8049, 0.67", "24.9984, -189.289, -12.1757, 0.67", "24.9449, -191.72, -11.867, 0.67", "24.8292, -194.548, -11.7559, 2.0", "24.7659, -198.734, -11.9569, 0.67", "24.7668, -202.962, -12.3503, 0.67", "24.8304, -206.58, -12.6636, 2.0", "24.9954, -211.369, -12.9762, 0.67", "25.2479, -214.237, -13.1242, 1.33", "25.5981, -217.296, -13.183, 0.67", "25.7386, -218.685, -13.1384, 0.67", "26.3946, -223.322, -12.7272, 2.0", "26.8317, -226.237, -12.3156, 0.67", "27.2097, -228.566, -11.9744, 0.67", "28.2139, -235.089, -11.1929, 0.67", "28.4507, -236.887, -11.0495, 0.67", "28.804, -239.971, -10.9437, 0.67", "29.0503, -242.466, -11.1376, 0.67", "29.2341, -245.334, -11.3627, 2.0", "29.317, -247.518, -11.5598, 0.67", "29.5367, -251.256, -11.9523, 1.33", "29.6441, -253.446, -12.2044, 0.67", "29.618, -257.853, -12.7845, 0.67", "29.5337, -261.903, -13.3917, 1.33", "29.4233, -264.795, -13.8898, 2.0" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "20.2728, -156.689, 35.1853, 1.33", "18.4397, -158.116, 35.1758, 1.33", "17.0406, -159.205, 35.1687, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "20.2728, -156.689, 35.1853, 0.67", "20.6647, -160.742, 34.2083, 0.67", "21.0694, -164.928, 33.1993, 2.0" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "4.91285, 36.2925, 17.2433, 0.33", "5.86727, 37.3659, 17.6676, 0.33", "6.34464, 37.8618, 17.8541, 0.67", "7.90301, 39.2616, 18.3688, 0.67", "8.63405, 39.9182, 18.6102, 0.33", "9.12287, 40.3573, 18.7716, 0.33", "10.3633, 41.4716, 19.1813, 0.67", "10.8979, 41.9444, 19.4245, 0.33", "11.9672, 42.782, 19.8677, 0.33" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "4.91285, 36.2925, 17.2433, 0.67", "5.77298, 38.3392, 18.8427, 0.67", "6.47554, 40.0109, 20.1492, 0.33", "6.98954, 41.234, 21.105, 0.67", "8.422, 44.6424, 23.7686, 0.33" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "1.87338, 28.954, 1.98109, 0.67", "3.78565, 31.5451, -2.42633, 0.67", "4.50672, 32.5221, -4.08826, 0.67", "6.09899, 34.6796, -7.75817, 0.67", "6.69674, 35.4896, -9.13585, 1.33" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "1.87338, 28.954, 1.98109, 2.0", "-0.068447, 34.8676, 1.33633, 2.0" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-5.41951, 24.396, -18.9827, 0.67", "-3.32461, 32.2349, -15.4002, 0.67", "-2.43026, 34.7764, -14.281, 0.67", "0.954969, 42.5587, -11.1279, 0.33", "1.87781, 44.4805, -10.4101, 0.33", "3.62269, 48.0292, -9.17134, 1.33", "4.66711, 50.1062, -8.57774, 0.67", "6.49701, 54.089, -7.40024, 0.33", "8.17388, 57.0835, -6.95502, 1.33", "9.42483, 58.8895, -6.99447, 0.33", "10.3252, 60.0933, -7.0458, 0.67", "12.4774, 62.8882, -7.50674, 0.33", "14.2575, 65.2757, -8.10513, 0.67", "16.6611, 68.582, -9.14718, 1.33", "18.5108, 71.3313, -9.78226, 0.33", "19.6279, 73.0059, -10.0505, 0.67", "23.6675, 79.2296, -10.6329, 0.33", "25.0111, 81.5028, -10.6779, 0.33", "26.2445, 83.9053, -10.6533, 0.67", "28.8165, 89.9108, -10.4093, 0.33", "29.7296, 92.2317, -10.2574, 0.33", "30.3579, 94.002, -10.0546, 0.67", "31.2189, 96.804, -9.52392, 2.0", "31.9936, 99.6765, -9.15741, 0.33", "32.4605, 101.603, -9.01046, 0.33", "32.8756, 102.959, -8.8778, 0.67", "33.5971, 105.092, -8.64915, 0.33", "33.9629, 106.068, -8.52069, 0.67", "35.3067, 109.218, -7.99086, 0.33", "36.3476, 111.466, -7.50952, 0.33", "39.4766, 118.062, -5.77934, 0.33", "41.0867, 121.399, -4.71149, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-5.41951, 24.396, -18.9827, 0.67", "-6.81393, 26.4247, -23.8019, 0.67", "-7.55219, 27.4988, -26.3534, 0.67", "-10.1841, 31.3279, -35.4494, 2.0" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "56.0271, -26.9292, -64.1265, 0.33", "55.4734, -26.3251, -66.7447, 0.33", "55.3188, -26.1565, -67.4755, 0.67", "54.0718, -24.7961, -73.3716, 0.33", "53.4894, -24.1608, -76.1254, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "56.0271, -26.9292, -64.1265, 0.33", "57.5019, -26.9909, -64.2239, 0.33", "57.7426, -27.0034, -64.2439, 0.67", "59.3537, -27.2839, -64.8103, 0.33", "60.4898, -27.6087, -65.374, 1.33", "62.4262, -28.2927, -66.3151, 0.33", "63.1693, -28.6048, -66.6614, 0.33", "64.7606, -29.5523, -67.4058, 1.33", "68.0134, -32.2503, -69.1889, 0.33", "68.6149, -33.0559, -69.5437, 0.33", "69.4923, -34.5968, -70.1004, 0.67", "69.9794, -35.6279, -70.3904, 0.67", "70.675, -37.1364, -70.6183, 0.33", "71.4592, -38.9678, -70.7348, 0.67", "73.0847, -42.5307, -70.5481, 0.33", "73.1793, -42.742, -70.5462, 0.67", "74.1554, -44.9434, -70.679, 0.33", "74.8181, -46.4108, -70.7496, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "29.4233, -264.795, -13.8898, 0.33", "31.7191, -265.738, -13.0303, 0.33", "32.5135, -266.108, -12.7041, 0.67", "33.2047, -266.59, -12.3107, 0.67", "34.3732, -267.448, -11.6356, 0.33", "36.1992, -268.787, -10.6857, 2.0", "38.6949, -270.559, -9.23677, 0.33", "39.3748, -271.088, -8.77416, 1.33", "44.2442, -275.147, -5.15067, 0.67", "45.2523, -276.056, -4.34681, 0.33", "46.4226, -277.175, -3.34819, 1.33", "49.6452, -280.391, -0.467871, 0.67", "50.6506, -281.301, 0.666806, 0.67", "51.1804, -281.678, 1.40679, 1.33", "51.8921, -282.031, 2.76001, 0.33", "52.6664, -282.573, 4.63952, 0.33", "53.2049, -283.236, 6.44805, 0.33", "54.8327, -285.294, 12.0091, 0.67", "55.154, -285.637, 13.0293, 0.67", "55.6702, -286.216, 14.7663, 0.67", "56.2254, -287.041, 16.9782, 0.33", "56.7106, -288.539, 19.8138, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "29.4233, -264.795, -13.8898, 0.67", "29.363, -267.45, -14.7332, 0.67", "29.2806, -271.073, -15.8842, 0.67", "29.1684, -276.015, -17.4542, 0.33", "29.1077, -278.685, -18.3025, 2.0", "29.015, -282.764, -19.5984, 0.33", "28.9714, -284.685, -20.2086, 0.33" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "21.0694, -164.928, 33.1993, 0.33", "18.1205, -166.533, 35.4769, 0.33", "17.2125, -167.114, 36.0588, 0.33", "15.6019, -168.316, 36.919, 0.33", "14.9115, -168.913, 37.251, 0.33", "13.3644, -170.249, 37.7214, 0.67", "12.3913, -171.096, 37.9454, 0.67", "11.1842, -172.187, 38.034, 1.33", "9.92667, -173.398, 38.1093, 0.33", "9.07102, -174.292, 38.1107, 0.33", "6.72374, -176.823, 38.0321, 0.33", "5.94352, -177.74, 37.8838, 1.33", "4.95424, -178.998, 37.6376, 0.33", "4.07579, -180.21, 37.3507, 0.33", "2.48635, -182.545, 36.6887, 0.67", "1.51806, -184.126, 36.1785, 1.33", "0.0319792, -187.543, 34.9606, 0.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "21.0694, -164.928, 33.1993, 0.67", "21.1815, -168.774, 33.7845, 0.67", "21.2251, -171.152, 34.2614, 1.33", "21.293, -179.176, 36.0448, 0.67", "21.3713, -180.962, 36.4556, 0.67", "21.4481, -182.676, 36.7845, 0.67", "21.5784, -186.511, 37.314, 0.67", "21.626, -188.571, 37.5984, 1.33", "21.7114, -191.621, 38.0006, 0.67", "21.9427, -196.054, 38.4718, 0.67", "22.0995, -199.405, 38.6262, 0.67", "22.2801, -202.266, 38.4525, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "6.69674, 35.4896, -9.13585, 1.33", "9.127, 37.0234, -7.85402, 0.33", "9.96953, 37.5551, -7.40963, 1.33", "12.5899, 39.2089, -6.02751, 0.33", "14.4164, 40.3617, -5.06412, 0.67" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "6.69674, 35.4896, -9.13585, 1.33", "6.66969, 35.8301, -11.0351, 1.33", "6.97411, 36.7132, -14.8513, 0.67", "7.54977, 37.9072, -19.3748, 1.33", "7.83136, 38.3196, -21.209, 1.33", "8.90838, 39.6065, -26.8886, 0.67", "9.36834, 40.0213, -28.8397, 1.33", "10.8536, 41.1884, -34.145, 0.67", "11.1818, 41.4109, -34.997, 1.33", "12.827, 42.2365, -38.3243, 0.67", "13.7658, 42.5505, -39.9256, 1.33", "16.6239, 43.0802, -44.1499, 0.67", "17.1229, 43.1268, -44.8028, 1.33", "18.3746, 43.1786, -45.9999, 0.67", "19.2812, 43.1924, -46.7041, 1.33", "21.6081, 43.1819, -47.7669, 0.33", "22.4528, 43.123, -48.0223, 0.67", "23.574, 43.0989, -48.1579, 0.33", "24.0111, 43.1036, -48.2083, 0.33", "26.018, 43.1187, -48.4498, 2.0", "28.2044, 43.2415, -48.7073, 0.67", "30.6906, 43.5952, -49.0422, 0.33", "32.6155, 43.9879, -49.3393, 1.33", "33.7835, 44.3089, -49.5292, 1.33", "35.4996, 44.864, -49.822, 0.33", "36.3873, 45.2325, -50.0264, 1.33", "38.6924, 46.3988, -50.6866, 0.33", "39.1181, 46.6343, -50.7779, 1.33", "40.122, 47.221, -50.9677, 0.33", "40.5173, 47.4967, -51.0353, 0.67", "42.3341, 48.9431, -51.3222, 0.33", "42.7013, 49.2527, -51.3553, 0.67", "44.6477, 50.9257, -51.3662, 0.33", "45.3283, 51.5049, -51.3414, 1.33", "46.2343, 52.2518, -51.2721, 0.33", "46.4088, 52.3892, -51.2767, 0.67", "48.0559, 53.6326, -51.5622, 0.33", "48.6023, 54.0365, -51.6797, 1.33", "50.1474, 55.0048, -52.0421, 0.33", "50.8586, 55.3511, -52.1163, 0.67", "54.1251, 56.3835, -52.0587, 0.67", "55.6254, 56.517, -51.8061, 0.33", "59.3441, 56.4576, -50.9445, 2.0", "61.8748, 56.236, -50.1148, 0.33", "63.4039, 55.9669, -49.4153, 0.33", "64.5085, 55.7278, -48.7694, 0.67", "66.9985, 55.1221, -46.9449, 0.33" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-0.068447, 34.8676, 1.33633, 2.0", "1.86622, 38.6526, -2.89617, 2.0" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-0.068447, 34.8676, 1.33633, 0.67", "-0.248208, 40.5868, 2.44098, 0.67", "-0.280024, 44.8455, 3.17679, 0.67", "-0.371227, 48.7232, 3.76037, 0.67", "-0.451549, 53.2955, 4.27474, 0.67", "-0.600614, 59.3854, 4.76832, 0.67", "-0.655777, 63.2414, 5.02243, 1.33", "-0.833729, 73.0177, 5.4805, 0.67", "-0.878436, 76.8628, 5.37821, 0.67", "-0.839697, 82.8947, 5.1163, 0.67", "-0.699775, 86.0525, 4.99032, 0.67", "-0.473026, 88.4706, 4.8738, 1.33", "-0.057991, 92.2987, 4.99914, 0.67", "0.668472, 99.9112, 6.17722, 0.67", "1.41386, 105.885, 7.61379, 0.67", "1.85207, 109.43, 8.97393, 1.33", "2.13872, 111.646, 10.1077, 0.67", "2.42379, 115.132, 12.4476, 0.67", "2.53217, 116.769, 14.1552, 0.67" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "41.0867, 121.399, -4.71149, 0.33", "42.1431, 121.547, -5.5403, 0.33", "43.7101, 121.766, -6.76966, 0.67", "44.7586, 121.912, -7.59229, 0.33", "45.3474, 121.994, -8.05424, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "41.0867, 121.399, -4.71149, 1.33", "41.3242, 123.087, -5.63923, 1.33", "41.6852, 125.786, -7.40846, 0.33", "41.7483, 126.217, -7.74703, 0.67", "42.0349, 128.398, -9.68108, 0.33", "42.182, 129.245, -10.3177, 0.67", "43.3824, 134.718, -13.8302, 0.33", "43.5915, 135.367, -14.2028, 0.67", "44.7346, 138.172, -15.6757, 0.33", "45.8827, 140.954, -16.7507, 0.67", "48.771, 147.958, -18.5532, 0.33", "49.0953, 148.738, -18.6574, 0.67", "51.1934, 152.891, -18.3209, 0.33", "54.4541, 159.57, -17.9597, 1.33", "55.3229, 161.406, -17.8346, 0.33", "55.5397, 162.094, -18.0776, 0.67", "56.2646, 165.426, -20.0911, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-10.1841, 31.3279, -35.4494, 0.33", "-10.4958, 34.1664, -38.053, 0.33", "-10.9484, 36.5331, -40.0668, 0.33", "-11.7669, 39.7641, -42.5747, 0.67", "-12.0473, 41.2475, -43.7052, 0.33", "-12.5859, 43.8222, -45.6629, 1.33", "-13.8068, 48.8392, -49.7159, 0.33", "-14.625, 51.6976, -51.9649, 1.33", "-15.3611, 53.6131, -53.5354, 0.33", "-17.8384, 58.7997, -57.6689, 0.33", "-19.1034, 61.0653, -59.4484, 0.33", "-21.4257, 64.4916, -61.9564, 1.33", "-23.4185, 67.0244, -63.6821, 0.33", "-24.9814, 68.9116, -65.0089, 0.33", "-25.6787, 69.678, -65.5187, 1.33", "-27.7411, 71.6719, -66.6991, 0.33", "-29.1199, 73.1478, -67.5235, 2.0", "-33.2483, 77.8633, -69.9832, 0.33", "-33.9334, 78.5819, -70.2582, 0.67", "-35.7868, 80.408, -70.6304, 0.33", "-36.3906, 80.949, -70.6147, 0.67", "-38.2916, 82.5572, -70.2742, 0.33", "-39.4438, 83.4927, -70.0264, 0.67", "-47.0677, 89.2909, -67.9147, 0.33", "-48.7205, 90.7132, -67.5782, 2.67", "-53.9519, 95.6667, -66.8455, 0.33", "-54.7423, 96.4941, -66.8004, 0.67", "-57.6944, 99.8772, -66.9488, 0.33", "-58.8255, 101.37, -67.2036, 0.67", "-62.1412, 106.605, -68.8486, 0.33", "-63.0538, 108.098, -69.3514, 0.67", "-64.0235, 109.761, -69.9764, 2.0", "-65.238, 111.899, -70.7475, 0.33", "-66.0728, 113.501, -71.2183, 2.0", "-67.3203, 116.013, -71.9672, 0.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-10.1841, 31.3279, -35.4494, 0.67", "-10.8437, 31.8955, -37.3308, 0.67", "-11.8672, 32.481, -38.9259, 0.33", "-15.1073, 33.8812, -42.4036, 0.67", "-16.5684, 34.3616, -43.6409, 0.67", "-17.4903, 34.5866, -44.2956, 0.33", "-18.6197, 34.8094, -45.0153, 0.33", "-21.3502, 35.2844, -46.4505, 0.33", "-23.2458, 35.5008, -47.266, 1.33", "-25.0816, 35.4743, -47.8603, 0.33", "-27.1718, 35.2788, -48.5473, 0.67", "-28.2331, 35.1325, -48.8934, 0.33", "-30.0482, 34.8628, -49.4679, 0.33", "-30.8436, 34.7915, -49.7993, 0.67", "-32.3558, 34.7328, -50.6335, 0.33", "-33.0618, 34.7517, -51.1301, 0.33", "-33.7462, 34.7733, -51.8463, 1.33", "-34.8159, 34.7533, -53.3399, 1.33", "-36.7952, 34.4184, -57.0891, 0.33", "-37.4882, 34.2985, -58.5274, 0.33", "-37.7221, 34.238, -59.0961, 0.67", "-38.9365, 33.6638, -62.4552, 0.33", "-39.1997, 33.4521, -63.3256, 1.33", "-40.1185, 32.1355, -66.979, 1.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "53.4894, -24.1608, -76.1254, 0.33", "54.24, -23.2866, -76.5459, 0.33", "54.7709, -22.6685, -76.8434, 0.67", "55.4276, -21.9037, -77.2113, 0.33", "55.9912, -21.2474, -77.5271, 0.67", "56.9789, -20.0972, -78.0805, 0.33", "56.9789, -20.0972, -78.0805, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "53.4894, -24.1608, -76.1254, 0.33", "53.1633, -23.8797, -76.8358, 0.33", "52.9132, -23.6589, -77.3631, 1.33", "50.6966, -21.5099, -81.8373, 0.33", "50.3355, -21.2236, -82.5096, 2.0", "48.6272, -19.9093, -85.5855, 0.33", "47.9628, -19.3982, -86.7817, 1.33", "46.6513, -18.4595, -89.093, 0.33", "45.7586, -17.8518, -90.5969, 1.33", "42.8056, -15.8304, -94.8891, 0.33", "42.1165, -15.4447, -95.8634, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "28.9714, -284.685, -20.2086, 0.33", "27.1082, -284.129, -17.629, 0.33", "23.7289, -283.119, -12.9503, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "28.9714, -284.685, -20.2086, 0.33", "29.4238, -287.098, -19.7797, 0.33", "29.7448, -289.216, -19.3952, 0.67", "30.232, -292.846, -18.77, 0.33", "30.6618, -297.012, -18.116, 1.33", "30.7473, -298.701, -17.8984, 1.33", "30.8269, -301.722, -17.5844, 0.67", "30.752, -303.262, -17.3945, 0.67", "30.5724, -304.967, -17.187, 0.33", "30.3739, -306.167, -17.0587, 0.67", "29.8564, -308.71, -17.0087, 0.33", "29.1579, -311.42, -16.9953, 0.67", "28.3858, -313.915, -16.8937, 0.33", "27.7867, -315.888, -16.9669, 1.33", "27.0665, -318.189, -17.0615, 1.33", "26.3573, -320.484, -17.1675, 0.67", "25.3513, -323.678, -17.3636, 0.67", "23.5757, -328.888, -17.877, 0.67", "21.9164, -334.04, -18.6628, 2.0" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "0.0319792, -187.543, 34.9606, 0.33", "6.52097, -186.061, 38.8434, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "0.0319792, -187.543, 34.9606, 0.33", "-0.789631, -189.548, 36.0444, 0.33", "-1.5758, -191.339, 36.9888, 1.33", "-3.20882, -194.556, 38.6598, 0.33", "-6.54256, -200.791, 41.7676, 0.33", "-7.38551, -202.321, 42.5612, 2.0", "-8.71292, -204.914, 44.1372, 0.33", "-8.87224, -205.199, 44.3353, 0.67", "-9.67268, -206.606, 45.4666, 0.33", "-10.3347, -207.644, 46.4238, 0.33", "-11.2605, -209.249, 47.5333, 1.33", "-13.3936, -213.878, 51.5219, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "22.2801, -202.266, 38.4525, 0.33", "19.6809, -200.627, 37.676, 0.33", "17.1182, -199.012, 36.9105, 0.33", "13.3822, -196.657, 35.7945, 0.33", "11.9602, -195.76, 35.3698, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "22.2801, -202.266, 38.4525, 0.67", "20.5132, -204.597, 43.7073, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "14.4164, 40.3617, -5.06412, 0.67", "14.5353, 42.4075, -8.27314, 0.67" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "14.4164, 40.3617, -5.06412, 0.67", "16.2336, 39.8146, -3.19782, 0.67", "18.9298, 39.2401, -0.469801, 0.33", "20.3764, 39.1598, 1.09358, 0.67", "22.1065, 39.3014, 2.92097, 0.33", "25.9264, 39.9262, 6.52715, 1.33", "27.686, 40.3853, 8.26966, 0.33", "29.241, 40.9145, 9.76327, 0.67", "31.8272, 42.0666, 12.1084, 0.33", "33.344, 42.8774, 13.5382, 1.33", "35.76, 44.3604, 15.73, 0.33", "39.4566, 46.854, 18.7972, 1.33", "41.8657, 48.5633, 20.8053, 0.67", "42.7139, 49.1841, 21.4724, 0.67", "45.3398, 51.2414, 23.6449, 0.33", "46.5608, 52.3292, 24.7466, 0.33", "47.7055, 53.4331, 25.7718, 0.33", "49.0998, 54.6457, 26.8086, 0.33", "50.0226, 55.4871, 27.4751, 1.33", "53.054, 58.2704, 29.6182, 0.33", "54.509, 59.6502, 30.5583, 0.67", "56.3362, 61.2653, 31.8355, 0.67", "58.2281, 62.7187, 33.2598, 0.33", "60.6958, 64.491, 35.1312, 1.33", "63.4254, 66.3615, 37.1619, 0.67", "65.6633, 67.8218, 38.7005, 0.67", "68.3581, 69.6269, 40.8513, 0.67", "70.9387, 71.5655, 43.3511, 0.67" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "1.86622, 38.6526, -2.89617, 0.67", "5.9819, 45.3975, -5.79807, 0.67", "7.33842, 47.337, -6.71652, 0.67", "12.212, 53.6152, -9.13118, 1.33", "16.0126, 58.5111, -11.0142, 1.33", "18.0094, 61.0833, -12.0035, 0.67", "20.3424, 64.0887, -13.1594, 1.33", "23.1592, 67.3155, -14.4536, 0.33", "27.9419, 71.935, -16.0309, 1.33" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "1.86622, 38.6526, -2.89617, 1.33", "-0.329124, 40.5268, -2.01487, 1.33", "-5.19942, 44.6846, -0.0597547, 0.67", "-6.78012, 46.034, 0.574797, 0.67", "-10.0828, 48.8535, 1.90061, 1.33" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "56.2646, 165.426, -20.0911, 0.33", "55.5466, 166.42, -19.42, 0.33", "55.4006, 166.623, -19.2835, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "56.2646, 165.426, -20.0911, 0.33", "56.7274, 167.989, -20.4299, 0.33", "56.9223, 168.984, -20.8519, 0.67", "57.367, 171.533, -22.0738, 0.33", "57.5849, 172.762, -22.7107, 0.67", "57.9494, 174.517, -23.6597, 0.33", "58.7127, 177.536, -25.3686, 0.67", "59.6377, 180.75, -27.5317, 0.33", "60.178, 182.429, -28.7365, 0.33", "60.4057, 183.028, -29.1975, 0.67", "60.8293, 184.384, -30.2443, 0.33", "61.0881, 185.551, -31.066, 0.67", "61.5331, 188.561, -32.71, 0.33", "61.6239, 189.826, -33.2686, 0.67", "61.6625, 190.536, -33.5966, 0.67", "61.7074, 195.038, -35.5911, 0.33", "61.6529, 195.943, -35.9802, 0.33", "61.3409, 198.582, -37.0518, 0.67", "61.18, 199.592, -37.4473, 0.33", "60.7725, 201.929, -38.3874, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-67.3203, 116.013, -71.9672, 0.33", "-67.8643, 117.506, -72.5054, 0.33", "-68.278, 118.641, -72.9148, 0.67", "-69.4517, 121.862, -74.0762, 0.33", "-70.2281, 123.992, -74.8446, 1.33", "-71.2212, 126.718, -75.8273, 0.33", "-72.1332, 129.22, -76.7297, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-67.3203, 116.013, -71.9672, 0.33", "-69.0648, 116.643, -71.5952, 0.33", "-71.6027, 117.875, -71.3721, 0.67", "-72.5181, 118.404, -71.3386, 0.33", "-73.1268, 118.897, -71.4574, 0.67", "-73.8828, 119.588, -71.7097, 0.33", "-74.6368, 120.325, -72.0134, 1.33", "-76.8893, 122.881, -73.2189, 0.33", "-78.1142, 124.42, -74.0212, 0.67", "-80.7559, 127.816, -75.8155, 0.33", "-81.0545, 128.196, -76.0208, 0.67", "-81.9585, 129.371, -76.6423, 0.33", "-82.4147, 129.999, -76.9585, 0.67", "-83.4873, 131.532, -77.7157, 0.33", "-84.0543, 132.213, -77.9816, 0.67", "-85.3256, 133.412, -78.2713, 0.33", "-85.8724, 133.908, -78.4086, 0.33", "-86.4136, 134.388, -78.5631, 0.67", "-87.2583, 135.112, -78.8214, 0.33", "-88.4821, 136.143, -79.204, 0.67", "-89.6628, 137.042, -79.6145, 0.33", "-90.1406, 137.379, -79.7791, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-40.1185, 32.1355, -66.979, 0.33", "-44.9373, 35.5235, -71.6431, 0.33", "-45.8938, 36.1693, -72.6402, 2.0", "-49.9338, 38.8905, -76.9288, 0.33", "-50.4356, 39.21, -77.4135, 0.67", "-51.2707, 39.7305, -78.1624, 0.33", "-54.2702, 41.6966, -80.6675, 1.33", "-55.6829, 42.5617, -81.7852, 0.33", "-56.5796, 43.1583, -82.3719, 0.67", "-59.7082, 45.596, -83.9182, 0.33", "-61.1238, 46.7738, -84.5335, 1.33", "-63.4804, 48.9557, -85.4228, 0.33", "-65.305, 50.7633, -85.9809, 0.33", "-67.2172, 52.7967, -86.5821, 0.67", "-69.6409, 55.5548, -87.3898, 0.33", "-70.7392, 56.9341, -87.7802, 1.33", "-72.8258, 59.6576, -88.5408, 0.33", "-73.2932, 60.2763, -88.7704, 0.67", "-74.0716, 61.3588, -89.2651, 0.33", "-74.7033, 62.2543, -89.7627, 0.67", "-75.3452, 63.0994, -90.344, 0.33", "-75.915, 63.81, -90.9041, 0.67", "-78.4433, 66.7597, -93.6613, 0.33", "-78.4433, 66.7597, -93.6613, 0.67", "-79.347, 67.8448, -94.826, 0.33", "-79.6827, 68.2262, -95.2665, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-40.1185, 32.1355, -66.979, 0.33", "-41.0539, 31.8817, -69.3697, 0.33", "-42.2936, 31.6107, -71.8654, 0.67", "-44.1053, 31.2106, -75.2371, 0.33", "-44.4673, 31.1168, -75.8378, 0.67", "-47.0385, 30.3587, -79.8437, 0.33", "-50.0518, 29.2446, -84.2268, 2.67", "-52.7671, 27.9617, -88.4076, 0.33", "-53.0104, 27.8103, -88.7677, 0.67", "-54.335, 26.7213, -90.8718, 0.33", "-54.6769, 26.3582, -91.3721, 1.33", "-56.1124, 24.4717, -93.0623, 0.33", "-57.9183, 21.6794, -94.8838, 2.0", "-58.7997, 19.7968, -96.1648, 0.33", "-58.9716, 19.4656, -96.4072, 0.67", "-59.9125, 17.8419, -97.6768, 0.33", "-60.1492, 17.5535, -97.9129, 0.67", "-61.4151, 16.4449, -98.8522, 0.33", "-62.8855, 15.5204, -99.5923, 0.67", "-65.4946, 14.2677, -100.812, 0.33", "-66.3873, 13.9093, -101.116, 0.67", "-69.0017, 12.982, -101.939, 0.33", "-69.5871, 12.7758, -102.104, 0.67", "-72.8502, 11.6993, -102.812, 0.33", "-73.8126, 11.4072, -102.93, 0.67", "-77.3899, 10.6618, -103.14, 0.67" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "21.9164, -334.04, -18.6628, 0.33", "18.0878, -338.876, -12.4941, 0.33", "16.1634, -341.237, -9.98016, 0.67", "15.2957, -342.247, -9.04919, 0.33", "14.1447, -343.473, -8.38042, 0.33", "12.4169, -345.393, -7.95413, 0.33", "11.593, -346.334, -8.04118, 0.67", "9.7972, -348.36, -9.04692, 0.33", "8.50525, -349.956, -9.94726, 0.67", "4.42407, -355.637, -14.0151, 0.33", "3.19977, -357.647, -15.6047, 0.67", "1.32769, -361.15, -18.5825, 0.33", "0.836559, -362.146, -19.4701, 0.67", "-0.684887, -365.653, -22.7491, 0.33", "-2.20735, -369.945, -26.6468, 0.67", "-2.65594, -371.762, -27.9511, 0.33", "-2.81599, -372.436, -28.5048, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "21.9164, -334.04, -18.6628, 0.67", "21.8387, -336.645, -17.9988, 0.67", "21.7954, -339.062, -17.4975, 0.67", "21.818, -340.729, -17.2218, 0.33", "21.9538, -345.9, -16.6037, 2.67", "22.2059, -350.35, -16.4103, 0.67", "22.4754, -353.664, -16.3925, 0.33", "22.5521, -354.45, -16.4259, 0.67", "22.841, -357.43, -16.689, 0.33", "23.2969, -362.297, -17.4212, 0.33", "23.6079, -365.773, -18.1878, 0.67", "23.8316, -368.699, -18.839, 0.33", "24.1635, -372.727, -19.6535, 0.33", "24.3493, -375.85, -20.3014, 0.33", "24.382, -377.651, -20.685, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "20.5132, -204.597, 43.7073, 0.33", "19.1682, -206.629, 43.602, 0.33", "18.1219, -208.209, 43.52, 0.33", "16.9677, -209.952, 43.4296, 0.33", "16.2252, -211.074, 43.3715, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "20.5132, -204.597, 43.7073, 0.67", "21.202, -207.047, 45.041, 0.67", "22.2996, -210.951, 47.1662, 1.33", "22.9273, -213.183, 48.3816, 0.67", "24.082, -217.29, 50.6175, 1.33", "24.7585, -219.696, 51.9275, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "70.9387, 71.5655, 43.3511, 0.33", "73.3949, 70.8754, 44.961, 0.33", "76.3105, 70.0562, 46.872, 0.33", "81.5441, 68.5857, 50.3023, 0.33", "84.0331, 67.8863, 51.9338, 0.33", "85.4345, 67.4925, 52.8523, 0.33", "87.265, 66.9782, 54.0521, 0.67" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "70.9387, 71.5655, 43.3511, 0.67", "73.4604, 72.8966, 45.3684, 0.67", "76.3605, 74.4273, 47.6884, 0.67", "78.1369, 75.365, 49.1095, 0.67", "79.7142, 76.1974, 50.3712, 0.67", "86.6001, 79.8321, 55.8797, 0.67" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "27.9419, 71.935, -16.0309, 0.33", "30.7422, 73.4059, -16.2133, 0.33", "32.0025, 74.1819, -16.2241, 0.33", "32.9172, 74.4, -15.3677, 0.33", "34.0619, 74.6036, -14.2508, 0.33", "35.4346, 74.8951, -12.9066, 1.33", "36.7833, 75.2304, -11.6161, 0.33", "37.8368, 75.4987, -10.5882, 0.67", "44.5809, 77.5376, -3.74356, 0.33", "45.6251, 77.9039, -2.69119, 0.67", "46.6557, 78.2783, -1.67142, 0.33", "47.4283, 78.6019, -1.00271, 0.67", "48.7563, 79.2459, -0.105037, 0.33", "49.2813, 79.5924, 0.108149, 0.67", "50.1453, 80.4247, 0.126609, 0.33", "50.6072, 80.892, 0.132032, 0.67", "52.8151, 83.0939, 0.0988264, 0.33", "54.3769, 84.7427, 0.0583513, 0.33", "54.8377, 85.2053, 0.0297803, 0.67", "57.1647, 87.3104, -0.210732, 0.33", "57.8977, 87.8376, -0.289165, 1.33", "59.5307, 88.7607, -0.50362, 0.33", "60.6224, 89.2171, -0.681012, 1.33", "63.5425, 90.0584, -0.857447, 0.67", "65.4159, 90.3535, -0.862487, 0.67", "69.1173, 90.5295, -0.757961, 0.67", "70.4453, 90.562, -0.690688, 1.33", "71.5309, 90.5688, -0.622707, 0.33", "75.5987, 90.6176, -0.342658, 1.33", "79.2003, 90.8025, -0.0345517, 0.33", "81.8958, 91.1274, 0.148642, 0.67", "83.2018, 91.3996, 0.188737, 0.33", "83.853, 91.5734, 0.189082, 0.67", "84.847, 91.9629, 0.113699, 0.33", "85.5489, 92.3911, -0.0261357, 1.33", "86.9226, 93.6499, -0.224634, 0.33", "87.9962, 94.7922, -0.358013, 0.33", "88.3933, 95.2163, -0.436629, 0.67", "89.4941, 96.407, -0.721069, 0.33", "90.0637, 97.0478, -0.896297, 0.67", "90.6598, 97.7246, -1.09957, 0.33", "91.4985, 98.6681, -1.42918, 0.33", "92.4993, 99.6774, -1.86272, 0.67", "93.4459, 100.693, -2.31995, 0.33", "93.6299, 100.89, -2.4285, 0.67" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "27.9419, 71.935, -16.0309, 0.33", "32.9676, 72.1251, -13.2558, 0.33", "34.8828, 72.2743, -12.2568, 0.67", "40.5432, 72.9407, -9.02794, 0.33", "41.9866, 73.1555, -8.2393, 1.33", "43.7606, 73.4619, -7.29403, 0.33", "44.8632, 73.6888, -6.71016, 0.67", "46.0759, 74.0947, -6.04718, 0.33", "50.2459, 75.9639, -4.63741, 1.33", "52.0458, 77.2061, -4.59456, 0.33", "52.3546, 77.4494, -4.66961, 0.67", "53.3815, 78.3215, -5.08651, 0.33", "54.7625, 79.5213, -5.78907, 0.67", "58.6754, 83.1265, -8.34806, 0.33", "60.5991, 85.0132, -9.95446, 0.67", "63.0992, 87.4634, -12.0644, 0.33", "65.221, 89.429, -13.8623, 1.33" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-10.0828, 48.8535, 1.90061, 0.33", "-11.9253, 49.429, 1.77976, 0.33", "-14.6106, 50.139, 1.69603, 0.33", "-15.1489, 50.2792, 1.68475, 0.67", "-19.7327, 51.3529, 1.51034, 0.33", "-21.3741, 51.7381, 1.41692, 0.67", "-23.2685, 52.1903, 1.29508, 0.33", "-23.5437, 52.2484, 1.26718, 0.67", "-24.9123, 52.4225, 1.15189, 0.33", "-27.1382, 52.6019, 0.992153, 0.33", "-29.2486, 52.7756, 0.857039, 0.33", "-29.9094, 52.8315, 0.788296, 1.33", "-33.192, 53.1489, 0.337938, 0.33", "-35.2629, 53.3153, 0.0836483, 0.33", "-36.6385, 53.3392, -0.0391207, 1.33" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-10.0828, 48.8535, 1.90061, 0.67", "-10.5378, 51.7462, 1.87366, 0.67", "-11.0671, 55.4362, 1.74924, 0.67", "-11.301, 57.8653, 1.58606, 0.67", "-11.5428, 61.8764, 1.26643, 0.67", "-11.6344, 63.9364, 1.08936, 0.67", "-11.6064, 66.5615, 0.741561, 0.67", "-11.4824, 68.1581, 0.435141, 1.33", "-11.1527, 70.4449, -0.0942607, 0.67", "-10.8117, 72.7751, -0.523199, 2.0", "-10.5542, 74.4029, -0.857597, 1.33", "-9.82208, 78.6126, -1.67631, 1.33", "-9.53168, 80.4958, -2.00876, 0.67", "-9.14382, 83.7176, -2.53644, 0.67", "-8.86895, 88.5621, -3.1812, 1.33", "-8.8153, 91.9612, -3.58267, 1.33" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-72.1332, 129.22, -76.7297, 0.33", "-66.7871, 135.232, -78.6144, 0.33", "-66.504, 135.551, -78.7142, 0.67", "-65.7285, 136.423, -78.9876, 0.33", "-65.2444, 136.967, -79.1583, 0.67", "-63.001, 139.49, -79.9491, 0.33", "-60.8884, 141.866, -80.6939, 2.0" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-72.1332, 129.22, -76.7297, 0.33", "-73.8049, 129.86, -77.9492, 0.33", "-74.1466, 129.991, -78.1983, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "65.221, 89.429, -13.8623, 0.33", "65.4853, 88.6186, -11.8486, 0.33", "65.5313, 88.4776, -11.4982, 0.67", "65.7322, 87.8617, -9.96796, 0.33", "65.7782, 87.7207, -9.61756, 0.67", "66.226, 86.3479, -6.20669, 0.33", "66.6414, 85.0746, -3.04267, 0.67" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "65.221, 89.429, -13.8623, 0.67", "67.8585, 92.5343, -19.6106, 0.67", "68.514, 93.321, -20.7632, 1.33", "69.3784, 94.3121, -21.8992, 0.33", "69.8011, 94.7785, -22.3564, 0.67", "70.5404, 95.6388, -23.0823, 0.67", "72.3625, 97.7369, -24.5727, 0.67", "73.7364, 99.183, -24.9826, 0.33", "74.8551, 100.269, -25.2878, 0.33", "75.4758, 100.849, -25.4102, 0.67", "76.2414, 101.599, -25.5943, 0.67", "77.4523, 102.835, -25.8896, 0.33", "78.5745, 104.021, -26.1998, 1.33", "79.9672, 105.657, -26.8359, 0.33", "80.3899, 106.235, -27.0697, 0.67", "81.681, 108.134, -27.7161, 0.33", "81.9221, 108.531, -27.8294, 0.67", "83.133, 111.093, -28.3794, 0.33", "83.2501, 111.406, -28.3508, 0.67", "83.5587, 112.482, -27.841, 0.33", "84.0131, 114.159, -26.5556, 0.67", "84.246, 115.059, -25.7622, 0.33", "84.354, 115.475, -25.3937, 0.67", "85.0454, 118.256, -22.9641, 0.67", "85.4194, 119.647, -21.9456, 0.33", "86.1457, 122.084, -20.4996, 0.33", "86.4948, 123.162, -20.0217, 0.67", "87.1962, 125.222, -19.2188, 0.33", "87.6321, 126.456, -18.8769, 0.67", "88.4149, 128.445, -18.7091, 0.67", "89.0045, 129.664, -18.6799, 0.33", "89.154, 129.936, -18.7246, 0.67" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-36.6385, 53.3392, -0.0391207, 0.67", "-41.8523, 51.9019, 0.347822, 0.67", "-43.0093, 51.5576, 0.421591, 0.67", "-45.0621, 50.8893, 0.554403, 0.33", "-47.2603, 50.1463, 0.669986, 0.67", "-48.9477, 49.5327, 0.747974, 0.33", "-49.687, 49.2546, 0.846615, 0.67", "-51.6789, 48.5275, 1.31368, 0.33", "-52.4894, 48.1951, 1.51907, 0.67", "-54.2547, 47.3543, 2.13167, 0.33", "-54.9002, 46.9972, 2.41931, 0.67", "-58.6767, 44.9168, 4.25143, 0.33", "-60.3062, 44.033, 5.08351, 0.67", "-63.4294, 42.3059, 6.80898, 0.67", "-66.6067, 40.5515, 8.59415, 0.67", "-68.9226, 39.1699, 10.0175, 0.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-36.6385, 53.3392, -0.0391207, 1.33", "-39.2161, 51.4793, -0.724581, 1.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-8.8153, 91.9612, -3.58267, 0.67", "-8.72394, 93.7371, -2.58597, 0.67", "-8.59383, 96.2661, -1.16656, 0.67" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-8.8153, 91.9612, -3.58267, 0.67", "-10.0206, 93.1852, -3.93625, 0.67", "-11.0708, 94.409, -4.34542, 0.33", "-11.9353, 95.684, -4.63342, 0.67", "-12.8545, 97.1915, -4.90916, 0.33", "-14.9558, 100.859, -5.48446, 0.67", "-16.5318, 103.78, -5.87911, 0.33", "-17.4027, 105.895, -6.21096, 0.67", "-18.5574, 109.62, -6.8353, 0.33", "-18.6587, 110.033, -6.90427, 0.67", "-18.9604, 111.497, -7.15235, 0.33", "-19.3669, 113.74, -7.42451, 2.0", "-20.3596, 118.95, -7.74443, 0.67", "-21.2091, 123.368, -7.88314, 1.33", "-21.6053, 125.495, -8.0997, 0.33", "-21.6749, 125.909, -8.15307, 0.67", "-22.3484, 129.407, -8.46055, 0.33", "-22.5216, 130.061, -8.4748, 0.67", "-23.2453, 132.079, -8.28494, 0.33", "-25.3676, 137.637, -7.63566, 0.67", "-25.854, 138.891, -7.51682, 0.33", "-27.5567, 143.026, -7.35854, 0.67", "-28.8652, 145.862, -7.61014, 0.67", "-29.6018, 147.233, -7.59981, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-39.2161, 51.4793, -0.724581, 0.67", "-43.2668, 49.1484, 7.27249, 0.67", "-43.7418, 48.8752, 8.21014, 0.67", "-45.5849, 47.8146, 11.8489, 0.67" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-39.2161, 51.4793, -0.724581, 0.33", "-40.1175, 50.3782, 0.302716, 0.33", "-41.3322, 48.5038, 1.84826, 0.33", "-42.8515, 45.7222, 3.80886, 0.67", "-43.9526, 43.6585, 5.15975, 0.33", "-45.7957, 40.3703, 7.26161, 0.33", "-46.6582, 38.8316, 8.24515, 0.33", "-48.4102, 36.1424, 9.97881, 0.67", "-49.6965, 34.4227, 10.9957, 0.67", "-50.7226, 32.9138, 11.6676, 0.67", "-51.1272, 32.123, 12.0494, 0.67" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-8.59383, 96.2661, -1.16656, 0.33", "-9.78622, 97.7441, -1.58564, 0.33", "-10.118, 98.1553, -1.70223, 0.67", "-11.8024, 100.243, -2.29423, 0.33", "-13.0193, 101.751, -2.7219, 0.67" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-8.59383, 96.2661, -1.16656, 0.67", "-8.97016, 97.2045, 0.341661, 0.67", "-10.7036, 100.772, 6.11708, 0.67", "-11.6036, 102.604, 9.3701, 0.33", "-12.0954, 103.632, 11.1554, 0.67", "-13.0327, 105.554, 14.4435, 0.33", "-13.6699, 106.86, 16.6788, 0.33", "-14.6337, 108.518, 19.5594, 0.67", "-15.3876, 109.675, 21.8249, 0.33", "-15.9826, 110.579, 23.3783, 0.33", "-16.289, 111.099, 24.4229, 0.33" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-29.6018, 147.233, -7.59981, 0.67", "-28.9872, 150.252, -10.2386, 0.67" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-29.6018, 147.233, -7.59981, 0.67", "-30.344, 147.846, -9.32512, 0.67", "-30.9552, 148.351, -10.746, 0.67", "-31.9944, 149.21, -13.1618, 0.33", "-33.2997, 150.288, -16.1961, 1.33", "-36.3944, 152.845, -23.3904, 0.33", "-36.6058, 153.02, -23.8816, 0.67" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-36.6058, 153.02, -23.8816, 0.33", "-37.3487, 152.968, -26.6069, 0.33", "-37.4758, 152.967, -27.0494, 0.67", "-38.3091, 152.957, -29.9499, 0.33", "-38.7707, 152.952, -31.5566, 0.67", "-40.0724, 152.937, -36.0876, 0.67", "-41.2811, 152.923, -40.2946, 0.33", "-41.3617, 152.93, -40.61, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-36.6058, 153.02, -23.8816, 0.67", "-42.6444, 159.662, -20.5196, 0.67", "-46.3522, 163.741, -18.4553, 0.33", "-47.0624, 164.522, -18.0599, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_25", "dend_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_30", "dend_25", "dend_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_25", "dend_0", "axon_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "axon_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_80", "dend_80", "dend_80", "dend_49", "dend_49", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_2", "dend_2", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_73", "dend_73", "dend_73", "dend_73", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_79", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_DBC_280e20a247_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_30
create dend_48
public dend_48
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_80, id: dend_80, parent: dend_48
create dend_80
public dend_80
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_12
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_73, id: dend_73, parent: dend_49
create dend_73
public dend_73
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_79, id: dend_79, parent: dend_75
create dend_79
public dend_79
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_68, id: dend_68, parent: dend_52
create dend_68
public dend_68
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_63, id: dend_63, parent: dend_53
create dend_63
public dend_63
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_54
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_30, dend_25, dend_0, axon_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, axon_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_80, dend_80, dend_80, dend_49, dend_49, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_2, dend_2, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_73, dend_73, dend_73, dend_73, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_30(0), soma_0(0.49999999788066063)
    connect dend_25(0), soma_0(0.49999999788066063)
    connect dend_0(0), soma_0(0.49999999788066063)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_80(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_73(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_79(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_68(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_63(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.7707, 14.3445, 1.63673, 2.6356 ) }
    soma_0 { pt3dadd( 1.65855, 13.0663, 1.48326, 4.68599 ) }
    soma_0 { pt3dadd( 1.5464, 11.788, 1.32978, 5.81905 ) }
    soma_0 { pt3dadd( 1.43425, 10.5097, 1.1763, 6.95808 ) }
    soma_0 { pt3dadd( 1.32209, 9.23142, 1.02283, 8.17562 ) }
    soma_0 { pt3dadd( 1.20994, 7.95314, 0.869351, 9.23498 ) }
    soma_0 { pt3dadd( 1.09779, 6.67486, 0.715875, 9.66374 ) }
    soma_0 { pt3dadd( 0.985636, 5.39658, 0.562399, 9.75915 ) }
    soma_0 { pt3dadd( 0.873483, 4.1183, 0.408922, 9.85456 ) }
    soma_0 { pt3dadd( 0.76133, 2.84002, 0.255446, 9.99274 ) }
    soma_0 { pt3dadd( 0.649178, 1.56175, 0.101969, 10.3671 ) }
    soma_0 { pt3dadd( 0.537025, 0.283466, -0.051507, 11.1059 ) }
    soma_0 { pt3dadd( 0.424873, -0.994813, -0.204983, 11.9164 ) }
    soma_0 { pt3dadd( 0.31272, -2.27309, -0.35846, 12.7207 ) }
    soma_0 { pt3dadd( 0.200568, -3.55137, -0.511936, 12.9931 ) }
    soma_0 { pt3dadd( 0.0884149, -4.82965, -0.665413, 12.8706 ) }
    soma_0 { pt3dadd( -0.0237377, -6.10793, -0.818889, 12.7481 ) }
    soma_0 { pt3dadd( -0.13589, -7.38621, -0.972365, 11.5655 ) }
    soma_0 { pt3dadd( -0.248043, -8.66449, -1.12584, 9.82802 ) }
    soma_0 { pt3dadd( -0.360195, -9.94277, -1.27932, 4.98087 ) }
    soma_0 { pt3dadd( -0.472348, -11.221, -1.43279, 2.92263 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.24391, 15.5458, 5.96094, 3.33 ) }
    dend_30 { pt3dadd( 1.02634, 20.7633, 6.79168, 3.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.08609, -3.14072, 6.39094, 1.33 ) }
    dend_25 { pt3dadd( -9.69212, -3.2923, 6.71915, 0.67 ) }
    dend_25 { pt3dadd( -11.121, -3.62587, 6.84965, 0.67 ) }
    dend_25 { pt3dadd( -12.7131, -4.00863, 6.96876, 0.67 ) }
    dend_25 { pt3dadd( -15.7054, -4.46002, 7.16202, 0.67 ) }
    dend_25 { pt3dadd( -17.6239, -4.63775, 7.27221, 0.67 ) }
    dend_25 { pt3dadd( -21.2311, -4.75877, 7.45654, 0.67 ) }
    dend_25 { pt3dadd( -25.9974, -4.7122, 7.64615, 0.67 ) }
    dend_25 { pt3dadd( -27.6415, -4.69969, 7.73391, 0.67 ) }
    dend_25 { pt3dadd( -30.3017, -4.72588, 7.90862, 0.67 ) }
    dend_25 { pt3dadd( -31.6581, -4.83789, 7.88512, 0.67 ) }
    dend_25 { pt3dadd( -33.5457, -5.05665, 7.55135, 0.67 ) }
    dend_25 { pt3dadd( -34.8446, -5.15232, 7.15503, 0.67 ) }
    dend_25 { pt3dadd( -36.724, -5.19505, 6.52158, 0.67 ) }
    dend_25 { pt3dadd( -38.9353, -5.35281, 5.79283, 0.67 ) }
    dend_25 { pt3dadd( -44.3489, -5.68587, 4.31075, 0.67 ) }
    dend_25 { pt3dadd( -46.9699, -5.67662, 3.80966, 0.67 ) }
    dend_25 { pt3dadd( -49.7101, -5.40978, 3.58824, 0.67 ) }
    dend_25 { pt3dadd( -52.0941, -5.00948, 3.65896, 0.67 ) }
    dend_25 { pt3dadd( -53.4511, -4.69894, 3.79788, 0.67 ) }
    dend_25 { pt3dadd( -56.8583, -3.69206, 4.3944, 0.67 ) }
    dend_25 { pt3dadd( -60.8206, -2.36704, 5.34752, 0.67 ) }
    dend_25 { pt3dadd( -65.0614, -0.835049, 6.34414, 0.67 ) }
    dend_25 { pt3dadd( -68.2154, 0.421431, 7.04789, 0.33 ) }
    dend_25 { pt3dadd( -69.1441, 0.843111, 7.24269, 0.67 ) }
    dend_25 { pt3dadd( -71.3758, 1.87303, 7.65433, 1.33 ) }
    dend_25 { pt3dadd( -76.5458, 4.2347, 8.38821, 0.67 ) }
    dend_25 { pt3dadd( -77.6196, 4.72813, 8.44033, 0.67 ) }
    dend_25 { pt3dadd( -80.448, 5.97567, 8.25338, 1.33 ) }
    dend_25 { pt3dadd( -82.9911, 7.0792, 7.94217, 0.67 ) }
    dend_25 { pt3dadd( -86.8068, 8.61676, 7.39125, 0.67 ) }
    dend_25 { pt3dadd( -89.9982, 9.68987, 6.86385, 0.67 ) }
    dend_25 { pt3dadd( -93.9152, 10.799, 6.03787, 0.67 ) }
    dend_25 { pt3dadd( -95.4022, 11.1675, 5.70855, 1.33 ) }
    dend_25 { pt3dadd( -97.9629, 11.6902, 5.10154, 0.33 ) }
    dend_25 { pt3dadd( -99.5834, 11.9935, 4.74145, 1.33 ) }
    dend_25 { pt3dadd( -103.271, 12.8, 3.90364, 0.67 ) }
    dend_25 { pt3dadd( -106.538, 13.2123, 3.36328, 0.67 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.04391, -8.90719, 0.670944, 2.67 ) }
    dend_0 { pt3dadd( 7.10102, -12.1819, 2.99263, 2.0 ) }
    dend_0 { pt3dadd( 10.8209, -18.1036, 7.19102, 2.0 ) }
    dend_0 { pt3dadd( 14.2441, -23.5529, 11.0544, 2.0 ) }
    dend_0 { pt3dadd( 15.618, -25.74, 12.605, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 66/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.472348, -11.221, -1.43279, 0.67 ) }
    axon_0 { pt3dadd( -1.78337, -26.1636, -1.43279, 0.67 ) }
    axon_0 { pt3dadd( -3.0944, -41.1062, -1.43279, 0.67 ) }
    // Section: dend_48, id: dend_48, parent: dend_30 (entry count 69/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 1.02634, 20.7633, 6.79168, 2.67 ) }
    dend_48 { pt3dadd( 0.351299, 22.5224, 8.27648, 2.67 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 71/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 1.02634, 20.7633, 6.79168, 1.33 ) }
    dend_31 { pt3dadd( -2.9009, 19.568, -10.2438, 1.33 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 73/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -106.538, 13.2123, 3.36328, 0.67 ) }
    dend_27 { pt3dadd( -110.997, 15.3374, 3.43272, 0.67 ) }
    dend_27 { pt3dadd( -116.501, 17.2234, 2.381, 0.67 ) }
    dend_27 { pt3dadd( -119.447, 17.845, 1.49985, 0.33 ) }
    dend_27 { pt3dadd( -120.608, 18.0738, 1.12081, 0.67 ) }
    dend_27 { pt3dadd( -122.311, 18.3381, 0.41556, 0.67 ) }
    dend_27 { pt3dadd( -124.836, 18.6787, -0.698978, 0.67 ) }
    dend_27 { pt3dadd( -131.079, 19.1744, -3.95403, 0.67 ) }
    dend_27 { pt3dadd( -135.014, 19.5296, -6.2421, 0.67 ) }
    dend_27 { pt3dadd( -137.28, 19.8056, -7.59857, 0.67 ) }
    dend_27 { pt3dadd( -141.866, 20.6075, -10.2346, 2.0 ) }
    dend_27 { pt3dadd( -144.005, 21.1141, -11.4618, 0.33 ) }
    dend_27 { pt3dadd( -146.049, 21.7652, -12.5701, 0.67 ) }
    dend_27 { pt3dadd( -147.519, 22.3302, -13.2005, 1.33 ) }
    dend_27 { pt3dadd( -150.695, 23.8123, -14.796, 0.33 ) }
    dend_27 { pt3dadd( -152.169, 24.5186, -15.5048, 2.0 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 89/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -106.538, 13.2123, 3.36328, 0.33 ) }
    dend_26 { pt3dadd( -106.396, 12.2653, 3.06691, 0.33 ) }
    dend_26 { pt3dadd( -106.283, 11.5132, 2.83155, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 92/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 15.618, -25.74, 12.605, 1.33 ) }
    dend_12 { pt3dadd( 17.5209, -30.9768, 3.31164, 1.33 ) }
    dend_12 { pt3dadd( 18.2574, -33.0036, -0.28521, 0.67 ) }
    dend_12 { pt3dadd( 18.7383, -34.3272, -2.6342, 0.67 ) }
    dend_12 { pt3dadd( 19.111, -35.3528, -4.45431, 2.0 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 97/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 15.618, -25.74, 12.605, 0.67 ) }
    dend_1 { pt3dadd( 15.0671, -30.3017, 13.1251, 0.67 ) }
    dend_1 { pt3dadd( 14.986, -33.5867, 13.7898, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 14.9592, -38.1279, 14.8674, 0.67 ) }
    dend_1 { pt3dadd( 15.1037, -43.4669, 16.1549, 1.33 ) }
    dend_1 { pt3dadd( 15.2443, -48.0822, 17.2555, 1.33 ) }
    dend_1 { pt3dadd( 15.6659, -56.3028, 19.1203, 1.33 ) }
    dend_1 { pt3dadd( 16.0979, -59.4794, 19.7986, 1.33 ) }
    dend_1 { pt3dadd( 16.7832, -63.5229, 20.6621, 1.33 ) }
    dend_1 { pt3dadd( 17.285, -66.6579, 21.2939, 1.33 ) }
    dend_1 { pt3dadd( 17.7986, -70.0599, 22.0235, 1.33 ) }
    dend_1 { pt3dadd( 18.2408, -73.9095, 22.7181, 1.33 ) }
    dend_1 { pt3dadd( 18.8382, -80.9024, 23.4169, 0.67 ) }
    dend_1 { pt3dadd( 19.064, -84.1154, 23.7417, 1.33 ) }
    dend_1 { pt3dadd( 19.241, -86.3636, 23.9602, 1.33 ) }
    dend_1 { pt3dadd( 19.5941, -92.4643, 24.8785, 1.33 ) }
    dend_1 { pt3dadd( 19.6996, -95.8901, 25.395, 1.33 ) }
    dend_1 { pt3dadd( 19.5807, -100.223, 26.098, 0.67 ) }
    dend_1 { pt3dadd( 19.2242, -105.457, 27.0478, 1.33 ) }
    dend_1 { pt3dadd( 18.9576, -108.791, 27.6013, 0.67 ) }
    dend_1 { pt3dadd( 18.0265, -118.367, 29.052, 1.33 ) }
    dend_1 { pt3dadd( 17.5287, -122.927, 29.7639, 1.33 ) }
    dend_1 { pt3dadd( 17.2875, -126.202, 30.2131, 1.33 ) }
    dend_1 { pt3dadd( 17.121, -129.342, 30.5866, 1.33 ) }
    dend_1 { pt3dadd( 17.0247, -133.72, 31.1913, 1.33 ) }
    dend_1 { pt3dadd( 17.0605, -136.079, 31.5385, 1.33 ) }
    dend_1 { pt3dadd( 17.5609, -142.469, 32.3055, 2.0 ) }
    dend_1 { pt3dadd( 18.1869, -146.957, 33.0659, 1.33 ) }
    dend_1 { pt3dadd( 18.5579, -148.881, 33.3951, 2.0 ) }
    dend_1 { pt3dadd( 19.7671, -154.55, 34.5331, 2.0 ) }
    dend_1 { pt3dadd( 20.2728, -156.689, 35.1853, 2.0 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 28/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -3.0944, -41.1062, -1.43279, 0.33 ) }
    axon_1 { pt3dadd( -4.40542, -56.0488, -1.43279, 0.33 ) }
    axon_1 { pt3dadd( -5.71644, -70.9914, -1.43279, 0.33 ) }
    // Section: dend_80, id: dend_80, parent: dend_48 (entry count 31/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 0.351299, 22.5224, 8.27648, 0.67 ) }
    dend_80 { pt3dadd( 1.0256, 24.5579, 9.60198, 0.67 ) }
    dend_80 { pt3dadd( 2.17826, 28.0375, 11.8678, 0.67 ) }
    dend_80 { pt3dadd( 4.91285, 36.2925, 17.2433, 0.67 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 35/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 0.351299, 22.5224, 8.27648, 2.67 ) }
    dend_49 { pt3dadd( 1.26172, 26.3694, 4.51093, 2.67 ) }
    dend_49 { pt3dadd( 1.87338, 28.954, 1.98109, 2.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 38/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.9009, 19.568, -10.2438, 1.33 ) }
    dend_33 { pt3dadd( -4.47555, 22.5865, -15.7074, 1.33 ) }
    dend_33 { pt3dadd( -5.41951, 24.396, -18.9827, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.9009, 19.568, -10.2438, 0.67 ) }
    dend_32 { pt3dadd( -0.144027, 17.4599, -9.80986, 0.67 ) }
    dend_32 { pt3dadd( 2.82089, 15.3955, -8.96761, 0.33 ) }
    dend_32 { pt3dadd( 4.69449, 14.2468, -8.33873, 0.67 ) }
    dend_32 { pt3dadd( 6.22001, 13.395, -7.8125, 0.67 ) }
    dend_32 { pt3dadd( 7.7268, 12.5421, -7.28839, 0.33 ) }
    dend_32 { pt3dadd( 8.69162, 12.0258, -6.96237, 0.67 ) }
    dend_32 { pt3dadd( 12.1421, 10.6291, -6.11825, 0.33 ) }
    dend_32 { pt3dadd( 13.3395, 10.2137, -5.858, 0.67 ) }
    dend_32 { pt3dadd( 15.8192, 9.3563, -5.47501, 0.33 ) }
    dend_32 { pt3dadd( 17.1989, 8.94154, -5.37696, 0.67 ) }
    dend_32 { pt3dadd( 18.7083, 8.55689, -5.41258, 0.33 ) }
    dend_32 { pt3dadd( 20.9158, 8.17077, -5.65037, 0.67 ) }
    dend_32 { pt3dadd( 22.7109, 7.96277, -6.09563, 0.33 ) }
    dend_32 { pt3dadd( 24.1021, 7.81788, -6.45129, 0.67 ) }
    dend_32 { pt3dadd( 24.9884, 7.79869, -6.68451, 0.33 ) }
    dend_32 { pt3dadd( 26.2505, 7.82912, -6.99847, 1.33 ) }
    dend_32 { pt3dadd( 29.665, 7.89933, -7.74302, 0.33 ) }
    dend_32 { pt3dadd( 31.6362, 8.03912, -8.00684, 0.67 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -152.169, 24.5186, -15.5048, 0.33 ) }
    dend_29 { pt3dadd( -153.622, 21.9021, -14.3914, 0.33 ) }
    dend_29 { pt3dadd( -154.735, 19.8979, -13.5384, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 63/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -152.169, 24.5186, -15.5048, 0.33 ) }
    dend_28 { pt3dadd( -155.271, 25.3846, -14.448, 0.33 ) }
    dend_28 { pt3dadd( -156.306, 25.6734, -14.0956, 0.67 ) }
    dend_28 { pt3dadd( -159.308, 26.5116, -13.0728, 0.33 ) }
    dend_28 { pt3dadd( -161.91, 27.2378, -12.1866, 0.67 ) }
    dend_28 { pt3dadd( -163.768, 27.7566, -11.5536, 0.33 ) }
    dend_28 { pt3dadd( -164.905, 28.0739, -11.1664, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_12 (entry count 70/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 19.111, -35.3528, -4.45431, 0.67 ) }
    dend_20 { pt3dadd( 19.9011, -36.9678, -7.15115, 0.67 ) }
    dend_20 { pt3dadd( 20.6052, -38.1086, -8.91991, 0.67 ) }
    dend_20 { pt3dadd( 22.3838, -40.1595, -12.5816, 1.33 ) }
    dend_20 { pt3dadd( 23.056, -40.5998, -13.735, 0.67 ) }
    dend_20 { pt3dadd( 24.8109, -41.2553, -16.3101, 0.67 ) }
    dend_20 { pt3dadd( 25.8539, -41.5047, -17.5353, 1.33 ) }
    dend_20 { pt3dadd( 27.2609, -41.7107, -19.0606, 0.67 ) }
    dend_20 { pt3dadd( 29.0631, -41.7053, -20.5531, 0.67 ) }
    dend_20 { pt3dadd( 31.9121, -41.133, -22.4806, 0.67 ) }
    dend_20 { pt3dadd( 33.1015, -40.7489, -23.2361, 0.67 ) }
    dend_20 { pt3dadd( 35.3915, -39.801, -24.5172, 0.67 ) }
    dend_20 { pt3dadd( 38.611, -38.1039, -26.3655, 1.33 ) }
    dend_20 { pt3dadd( 40.2405, -37.1276, -27.3585, 0.67 ) }
    dend_20 { pt3dadd( 42.068, -35.8762, -28.5706, 1.33 ) }
    dend_20 { pt3dadd( 42.824, -35.2703, -29.3068, 0.67 ) }
    dend_20 { pt3dadd( 43.2656, -34.8592, -29.9143, 1.33 ) }
    dend_20 { pt3dadd( 43.7638, -34.2655, -30.855, 0.67 ) }
    dend_20 { pt3dadd( 44.5593, -33.2559, -32.5685, 0.67 ) }
    dend_20 { pt3dadd( 45.4602, -32.2306, -34.5863, 1.33 ) }
    dend_20 { pt3dadd( 47.2126, -30.6644, -38.1337, 0.67 ) }
    dend_20 { pt3dadd( 48.137, -29.913, -39.8959, 0.33 ) }
    dend_20 { pt3dadd( 48.9323, -29.2909, -41.5297, 0.33 ) }
    dend_20 { pt3dadd( 49.5147, -28.9286, -42.8993, 0.67 ) }
    dend_20 { pt3dadd( 50.1341, -28.606, -44.6982, 0.67 ) }
    dend_20 { pt3dadd( 50.7557, -28.3706, -46.5175, 0.67 ) }
    dend_20 { pt3dadd( 51.0397, -28.2613, -47.3301, 0.67 ) }
    dend_20 { pt3dadd( 52.4547, -27.7269, -51.546, 2.0 ) }
    dend_20 { pt3dadd( 53.796, -27.3445, -55.7256, 0.33 ) }
    dend_20 { pt3dadd( 54.5462, -27.1633, -58.3891, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_20 { pt3dadd( 54.7952, -27.1351, -59.3842, 0.33 ) }
    dend_20 { pt3dadd( 55.0185, -27.1109, -60.4107, 0.67 ) }
    dend_20 { pt3dadd( 55.23, -27.0956, -61.415, 0.33 ) }
    dend_20 { pt3dadd( 56.0271, -26.9292, -64.1265, 1.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 4/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 19.111, -35.3528, -4.45431, 0.67 ) }
    dend_13 { pt3dadd( 20.0857, -40.7016, -6.09245, 0.67 ) }
    dend_13 { pt3dadd( 20.9552, -45.0518, -7.56554, 0.67 ) }
    dend_13 { pt3dadd( 21.3685, -46.8947, -8.18515, 0.67 ) }
    dend_13 { pt3dadd( 22.6997, -53.0388, -10.0839, 1.33 ) }
    dend_13 { pt3dadd( 23.1473, -55.1195, -10.6615, 2.0 ) }
    dend_13 { pt3dadd( 23.9062, -58.71, -11.5703, 0.67 ) }
    dend_13 { pt3dadd( 24.3847, -61.2531, -12.2769, 1.33 ) }
    dend_13 { pt3dadd( 24.779, -63.9542, -12.9259, 0.67 ) }
    dend_13 { pt3dadd( 25.3558, -68.2268, -13.6882, 0.67 ) }
    dend_13 { pt3dadd( 25.7658, -71.4647, -13.9601, 1.33 ) }
    dend_13 { pt3dadd( 26.0191, -73.6486, -14.1845, 0.33 ) }
    dend_13 { pt3dadd( 26.2027, -75.6313, -14.4041, 0.33 ) }
    dend_13 { pt3dadd( 26.3144, -78.1691, -14.6752, 0.67 ) }
    dend_13 { pt3dadd( 26.345, -79.7399, -14.9027, 1.33 ) }
    dend_13 { pt3dadd( 26.4369, -82.8424, -15.4359, 0.67 ) }
    dend_13 { pt3dadd( 26.5931, -86.7532, -15.8856, 0.67 ) }
    dend_13 { pt3dadd( 26.805, -91.1296, -16.1528, 1.33 ) }
    dend_13 { pt3dadd( 27.0095, -95.1957, -16.1978, 0.67 ) }
    dend_13 { pt3dadd( 27.0599, -97.4228, -16.1133, 2.67 ) }
    dend_13 { pt3dadd( 27.0603, -99.9077, -15.6995, 0.67 ) }
    dend_13 { pt3dadd( 26.8601, -105.267, -14.5116, 0.67 ) }
    dend_13 { pt3dadd( 26.7026, -107.171, -13.983, 0.33 ) }
    dend_13 { pt3dadd( 26.4995, -109.357, -13.3588, 0.67 ) }
    dend_13 { pt3dadd( 26.3567, -110.902, -12.9635, 0.33 ) }
    dend_13 { pt3dadd( 25.7932, -116.563, -11.8332, 2.0 ) }
    dend_13 { pt3dadd( 25.224, -122.793, -11.2208, 0.67 ) }
    dend_13 { pt3dadd( 25.1175, -124.193, -11.225, 0.67 ) }
    dend_13 { pt3dadd( 25.0733, -126.449, -11.2695, 0.67 ) }
    dend_13 { pt3dadd( 25.1104, -129.258, -11.3808, 1.33 ) }
    dend_13 { pt3dadd( 25.1595, -131.767, -11.5388, 0.67 ) }
    dend_13 { pt3dadd( 25.2574, -135.604, -12.0026, 0.67 ) }
    dend_13 { pt3dadd( 25.3163, -137.572, -12.1502, 1.33 ) }
    dend_13 { pt3dadd( 25.3917, -140.445, -12.4175, 0.67 ) }
    dend_13 { pt3dadd( 25.4426, -144.817, -13.0331, 0.67 ) }
    dend_13 { pt3dadd( 25.4684, -146.374, -13.2181, 0.67 ) }
    dend_13 { pt3dadd( 25.5319, -148.765, -13.4265, 0.67 ) }
    dend_13 { pt3dadd( 25.5462, -151.042, -13.5623, 0.67 ) }
    dend_13 { pt3dadd( 25.5341, -152.283, -13.6911, 1.33 ) }
    dend_13 { pt3dadd( 25.354, -155.443, -14.1225, 0.67 ) }
    dend_13 { pt3dadd( 25.2632, -159.938, -14.7992, 2.0 ) }
    dend_13 { pt3dadd( 25.2687, -163.725, -15.138, 0.67 ) }
    dend_13 { pt3dadd( 25.2703, -165.05, -15.1781, 0.67 ) }
    dend_13 { pt3dadd( 25.1986, -170.096, -15.0802, 1.33 ) }
    dend_13 { pt3dadd( 25.1874, -172.189, -14.9651, 0.67 ) }
    dend_13 { pt3dadd( 25.1668, -175.496, -14.6359, 0.67 ) }
    dend_13 { pt3dadd( 25.0752, -179.484, -14.1699, 1.33 ) }
    dend_13 { pt3dadd( 25.0487, -183.484, -13.439, 0.67 ) }
    dend_13 { pt3dadd( 25.0283, -186.382, -12.8049, 0.67 ) }
    dend_13 { pt3dadd( 24.9984, -189.289, -12.1757, 0.67 ) }
    dend_13 { pt3dadd( 24.9449, -191.72, -11.867, 0.67 ) }
    dend_13 { pt3dadd( 24.8292, -194.548, -11.7559, 2.0 ) }
    dend_13 { pt3dadd( 24.7659, -198.734, -11.9569, 0.67 ) }
    dend_13 { pt3dadd( 24.7668, -202.962, -12.3503, 0.67 ) }
    dend_13 { pt3dadd( 24.8304, -206.58, -12.6636, 2.0 ) }
    dend_13 { pt3dadd( 24.9954, -211.369, -12.9762, 0.67 ) }
    dend_13 { pt3dadd( 25.2479, -214.237, -13.1242, 1.33 ) }
    dend_13 { pt3dadd( 25.5981, -217.296, -13.183, 0.67 ) }
    dend_13 { pt3dadd( 25.7386, -218.685, -13.1384, 0.67 ) }
    dend_13 { pt3dadd( 26.3946, -223.322, -12.7272, 2.0 ) }
    dend_13 { pt3dadd( 26.8317, -226.237, -12.3156, 0.67 ) }
    dend_13 { pt3dadd( 27.2097, -228.566, -11.9744, 0.67 ) }
    dend_13 { pt3dadd( 28.2139, -235.089, -11.1929, 0.67 ) }
    dend_13 { pt3dadd( 28.4507, -236.887, -11.0495, 0.67 ) }
    dend_13 { pt3dadd( 28.804, -239.971, -10.9437, 0.67 ) }
    dend_13 { pt3dadd( 29.0503, -242.466, -11.1376, 0.67 ) }
    dend_13 { pt3dadd( 29.2341, -245.334, -11.3627, 2.0 ) }
    dend_13 { pt3dadd( 29.317, -247.518, -11.5598, 0.67 ) }
    dend_13 { pt3dadd( 29.5367, -251.256, -11.9523, 1.33 ) }
    dend_13 { pt3dadd( 29.6441, -253.446, -12.2044, 0.67 ) }
    dend_13 { pt3dadd( 29.618, -257.853, -12.7845, 0.67 ) }
    dend_13 { pt3dadd( 29.5337, -261.903, -13.3917, 1.33 ) }
    dend_13 { pt3dadd( 29.4233, -264.795, -13.8898, 2.0 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 77/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 20.2728, -156.689, 35.1853, 1.33 ) }
    dend_11 { pt3dadd( 18.4397, -158.116, 35.1758, 1.33 ) }
    dend_11 { pt3dadd( 17.0406, -159.205, 35.1687, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 20.2728, -156.689, 35.1853, 0.67 ) }
    dend_2 { pt3dadd( 20.6647, -160.742, 34.2083, 0.67 ) }
    dend_2 { pt3dadd( 21.0694, -164.928, 33.1993, 2.0 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 83/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 4.91285, 36.2925, 17.2433, 0.33 ) }
    dend_82 { pt3dadd( 5.86727, 37.3659, 17.6676, 0.33 ) }
    dend_82 { pt3dadd( 6.34464, 37.8618, 17.8541, 0.67 ) }
    dend_82 { pt3dadd( 7.90301, 39.2616, 18.3688, 0.67 ) }
    dend_82 { pt3dadd( 8.63405, 39.9182, 18.6102, 0.33 ) }
    dend_82 { pt3dadd( 9.12287, 40.3573, 18.7716, 0.33 ) }
    dend_82 { pt3dadd( 10.3633, 41.4716, 19.1813, 0.67 ) }
    dend_82 { pt3dadd( 10.8979, 41.9444, 19.4245, 0.33 ) }
    dend_82 { pt3dadd( 11.9672, 42.782, 19.8677, 0.33 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 4.91285, 36.2925, 17.2433, 0.67 ) }
    dend_81 { pt3dadd( 5.77298, 38.3392, 18.8427, 0.67 ) }
    dend_81 { pt3dadd( 6.47554, 40.0109, 20.1492, 0.33 ) }
    dend_81 { pt3dadd( 6.98954, 41.234, 21.105, 0.67 ) }
    dend_81 { pt3dadd( 8.422, 44.6424, 23.7686, 0.33 ) }
    // Section: dend_73, id: dend_73, parent: dend_49 (entry count 97/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 1.87338, 28.954, 1.98109, 0.67 ) }
    dend_73 { pt3dadd( 3.78565, 31.5451, -2.42633, 0.67 ) }
    dend_73 { pt3dadd( 4.50672, 32.5221, -4.08826, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_73 { pt3dadd( 6.09899, 34.6796, -7.75817, 0.67 ) }
    dend_73 { pt3dadd( 6.69674, 35.4896, -9.13585, 1.33 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 2/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 1.87338, 28.954, 1.98109, 2.0 ) }
    dend_50 { pt3dadd( -0.068447, 34.8676, 1.33633, 2.0 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 4/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -5.41951, 24.396, -18.9827, 0.67 ) }
    dend_43 { pt3dadd( -3.32461, 32.2349, -15.4002, 0.67 ) }
    dend_43 { pt3dadd( -2.43026, 34.7764, -14.281, 0.67 ) }
    dend_43 { pt3dadd( 0.954969, 42.5587, -11.1279, 0.33 ) }
    dend_43 { pt3dadd( 1.87781, 44.4805, -10.4101, 0.33 ) }
    dend_43 { pt3dadd( 3.62269, 48.0292, -9.17134, 1.33 ) }
    dend_43 { pt3dadd( 4.66711, 50.1062, -8.57774, 0.67 ) }
    dend_43 { pt3dadd( 6.49701, 54.089, -7.40024, 0.33 ) }
    dend_43 { pt3dadd( 8.17388, 57.0835, -6.95502, 1.33 ) }
    dend_43 { pt3dadd( 9.42483, 58.8895, -6.99447, 0.33 ) }
    dend_43 { pt3dadd( 10.3252, 60.0933, -7.0458, 0.67 ) }
    dend_43 { pt3dadd( 12.4774, 62.8882, -7.50674, 0.33 ) }
    dend_43 { pt3dadd( 14.2575, 65.2757, -8.10513, 0.67 ) }
    dend_43 { pt3dadd( 16.6611, 68.582, -9.14718, 1.33 ) }
    dend_43 { pt3dadd( 18.5108, 71.3313, -9.78226, 0.33 ) }
    dend_43 { pt3dadd( 19.6279, 73.0059, -10.0505, 0.67 ) }
    dend_43 { pt3dadd( 23.6675, 79.2296, -10.6329, 0.33 ) }
    dend_43 { pt3dadd( 25.0111, 81.5028, -10.6779, 0.33 ) }
    dend_43 { pt3dadd( 26.2445, 83.9053, -10.6533, 0.67 ) }
    dend_43 { pt3dadd( 28.8165, 89.9108, -10.4093, 0.33 ) }
    dend_43 { pt3dadd( 29.7296, 92.2317, -10.2574, 0.33 ) }
    dend_43 { pt3dadd( 30.3579, 94.002, -10.0546, 0.67 ) }
    dend_43 { pt3dadd( 31.2189, 96.804, -9.52392, 2.0 ) }
    dend_43 { pt3dadd( 31.9936, 99.6765, -9.15741, 0.33 ) }
    dend_43 { pt3dadd( 32.4605, 101.603, -9.01046, 0.33 ) }
    dend_43 { pt3dadd( 32.8756, 102.959, -8.8778, 0.67 ) }
    dend_43 { pt3dadd( 33.5971, 105.092, -8.64915, 0.33 ) }
    dend_43 { pt3dadd( 33.9629, 106.068, -8.52069, 0.67 ) }
    dend_43 { pt3dadd( 35.3067, 109.218, -7.99086, 0.33 ) }
    dend_43 { pt3dadd( 36.3476, 111.466, -7.50952, 0.33 ) }
    dend_43 { pt3dadd( 39.4766, 118.062, -5.77934, 0.33 ) }
    dend_43 { pt3dadd( 41.0867, 121.399, -4.71149, 1.33 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -5.41951, 24.396, -18.9827, 0.67 ) }
    dend_34 { pt3dadd( -6.81393, 26.4247, -23.8019, 0.67 ) }
    dend_34 { pt3dadd( -7.55219, 27.4988, -26.3534, 0.67 ) }
    dend_34 { pt3dadd( -10.1841, 31.3279, -35.4494, 2.0 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 40/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 56.0271, -26.9292, -64.1265, 0.33 ) }
    dend_22 { pt3dadd( 55.4734, -26.3251, -66.7447, 0.33 ) }
    dend_22 { pt3dadd( 55.3188, -26.1565, -67.4755, 0.67 ) }
    dend_22 { pt3dadd( 54.0718, -24.7961, -73.3716, 0.33 ) }
    dend_22 { pt3dadd( 53.4894, -24.1608, -76.1254, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 56.0271, -26.9292, -64.1265, 0.33 ) }
    dend_21 { pt3dadd( 57.5019, -26.9909, -64.2239, 0.33 ) }
    dend_21 { pt3dadd( 57.7426, -27.0034, -64.2439, 0.67 ) }
    dend_21 { pt3dadd( 59.3537, -27.2839, -64.8103, 0.33 ) }
    dend_21 { pt3dadd( 60.4898, -27.6087, -65.374, 1.33 ) }
    dend_21 { pt3dadd( 62.4262, -28.2927, -66.3151, 0.33 ) }
    dend_21 { pt3dadd( 63.1693, -28.6048, -66.6614, 0.33 ) }
    dend_21 { pt3dadd( 64.7606, -29.5523, -67.4058, 1.33 ) }
    dend_21 { pt3dadd( 68.0134, -32.2503, -69.1889, 0.33 ) }
    dend_21 { pt3dadd( 68.6149, -33.0559, -69.5437, 0.33 ) }
    dend_21 { pt3dadd( 69.4923, -34.5968, -70.1004, 0.67 ) }
    dend_21 { pt3dadd( 69.9794, -35.6279, -70.3904, 0.67 ) }
    dend_21 { pt3dadd( 70.675, -37.1364, -70.6183, 0.33 ) }
    dend_21 { pt3dadd( 71.4592, -38.9678, -70.7348, 0.67 ) }
    dend_21 { pt3dadd( 73.0847, -42.5307, -70.5481, 0.33 ) }
    dend_21 { pt3dadd( 73.1793, -42.742, -70.5462, 0.67 ) }
    dend_21 { pt3dadd( 74.1554, -44.9434, -70.679, 0.33 ) }
    dend_21 { pt3dadd( 74.8181, -46.4108, -70.7496, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 63/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 29.4233, -264.795, -13.8898, 0.33 ) }
    dend_19 { pt3dadd( 31.7191, -265.738, -13.0303, 0.33 ) }
    dend_19 { pt3dadd( 32.5135, -266.108, -12.7041, 0.67 ) }
    dend_19 { pt3dadd( 33.2047, -266.59, -12.3107, 0.67 ) }
    dend_19 { pt3dadd( 34.3732, -267.448, -11.6356, 0.33 ) }
    dend_19 { pt3dadd( 36.1992, -268.787, -10.6857, 2.0 ) }
    dend_19 { pt3dadd( 38.6949, -270.559, -9.23677, 0.33 ) }
    dend_19 { pt3dadd( 39.3748, -271.088, -8.77416, 1.33 ) }
    dend_19 { pt3dadd( 44.2442, -275.147, -5.15067, 0.67 ) }
    dend_19 { pt3dadd( 45.2523, -276.056, -4.34681, 0.33 ) }
    dend_19 { pt3dadd( 46.4226, -277.175, -3.34819, 1.33 ) }
    dend_19 { pt3dadd( 49.6452, -280.391, -0.467871, 0.67 ) }
    dend_19 { pt3dadd( 50.6506, -281.301, 0.666806, 0.67 ) }
    dend_19 { pt3dadd( 51.1804, -281.678, 1.40679, 1.33 ) }
    dend_19 { pt3dadd( 51.8921, -282.031, 2.76001, 0.33 ) }
    dend_19 { pt3dadd( 52.6664, -282.573, 4.63952, 0.33 ) }
    dend_19 { pt3dadd( 53.2049, -283.236, 6.44805, 0.33 ) }
    dend_19 { pt3dadd( 54.8327, -285.294, 12.0091, 0.67 ) }
    dend_19 { pt3dadd( 55.154, -285.637, 13.0293, 0.67 ) }
    dend_19 { pt3dadd( 55.6702, -286.216, 14.7663, 0.67 ) }
    dend_19 { pt3dadd( 56.2254, -287.041, 16.9782, 0.33 ) }
    dend_19 { pt3dadd( 56.7106, -288.539, 19.8138, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 29.4233, -264.795, -13.8898, 0.67 ) }
    dend_14 { pt3dadd( 29.363, -267.45, -14.7332, 0.67 ) }
    dend_14 { pt3dadd( 29.2806, -271.073, -15.8842, 0.67 ) }
    dend_14 { pt3dadd( 29.1684, -276.015, -17.4542, 0.33 ) }
    dend_14 { pt3dadd( 29.1077, -278.685, -18.3025, 2.0 ) }
    dend_14 { pt3dadd( 29.015, -282.764, -19.5984, 0.33 ) }
    dend_14 { pt3dadd( 28.9714, -284.685, -20.2086, 0.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 92/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 21.0694, -164.928, 33.1993, 0.33 ) }
    dend_8 { pt3dadd( 18.1205, -166.533, 35.4769, 0.33 ) }
    dend_8 { pt3dadd( 17.2125, -167.114, 36.0588, 0.33 ) }
    dend_8 { pt3dadd( 15.6019, -168.316, 36.919, 0.33 ) }
    dend_8 { pt3dadd( 14.9115, -168.913, 37.251, 0.33 ) }
    dend_8 { pt3dadd( 13.3644, -170.249, 37.7214, 0.67 ) }
    dend_8 { pt3dadd( 12.3913, -171.096, 37.9454, 0.67 ) }
    dend_8 { pt3dadd( 11.1842, -172.187, 38.034, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 9.92667, -173.398, 38.1093, 0.33 ) }
    dend_8 { pt3dadd( 9.07102, -174.292, 38.1107, 0.33 ) }
    dend_8 { pt3dadd( 6.72374, -176.823, 38.0321, 0.33 ) }
    dend_8 { pt3dadd( 5.94352, -177.74, 37.8838, 1.33 ) }
    dend_8 { pt3dadd( 4.95424, -178.998, 37.6376, 0.33 ) }
    dend_8 { pt3dadd( 4.07579, -180.21, 37.3507, 0.33 ) }
    dend_8 { pt3dadd( 2.48635, -182.545, 36.6887, 0.67 ) }
    dend_8 { pt3dadd( 1.51806, -184.126, 36.1785, 1.33 ) }
    dend_8 { pt3dadd( 0.0319792, -187.543, 34.9606, 0.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 9/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 21.0694, -164.928, 33.1993, 0.67 ) }
    dend_3 { pt3dadd( 21.1815, -168.774, 33.7845, 0.67 ) }
    dend_3 { pt3dadd( 21.2251, -171.152, 34.2614, 1.33 ) }
    dend_3 { pt3dadd( 21.293, -179.176, 36.0448, 0.67 ) }
    dend_3 { pt3dadd( 21.3713, -180.962, 36.4556, 0.67 ) }
    dend_3 { pt3dadd( 21.4481, -182.676, 36.7845, 0.67 ) }
    dend_3 { pt3dadd( 21.5784, -186.511, 37.314, 0.67 ) }
    dend_3 { pt3dadd( 21.626, -188.571, 37.5984, 1.33 ) }
    dend_3 { pt3dadd( 21.7114, -191.621, 38.0006, 0.67 ) }
    dend_3 { pt3dadd( 21.9427, -196.054, 38.4718, 0.67 ) }
    dend_3 { pt3dadd( 22.0995, -199.405, 38.6262, 0.67 ) }
    dend_3 { pt3dadd( 22.2801, -202.266, 38.4525, 1.33 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 6.69674, 35.4896, -9.13585, 1.33 ) }
    dend_75 { pt3dadd( 9.127, 37.0234, -7.85402, 0.33 ) }
    dend_75 { pt3dadd( 9.96953, 37.5551, -7.40963, 1.33 ) }
    dend_75 { pt3dadd( 12.5899, 39.2089, -6.02751, 0.33 ) }
    dend_75 { pt3dadd( 14.4164, 40.3617, -5.06412, 0.67 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 6.69674, 35.4896, -9.13585, 1.33 ) }
    dend_74 { pt3dadd( 6.66969, 35.8301, -11.0351, 1.33 ) }
    dend_74 { pt3dadd( 6.97411, 36.7132, -14.8513, 0.67 ) }
    dend_74 { pt3dadd( 7.54977, 37.9072, -19.3748, 1.33 ) }
    dend_74 { pt3dadd( 7.83136, 38.3196, -21.209, 1.33 ) }
    dend_74 { pt3dadd( 8.90838, 39.6065, -26.8886, 0.67 ) }
    dend_74 { pt3dadd( 9.36834, 40.0213, -28.8397, 1.33 ) }
    dend_74 { pt3dadd( 10.8536, 41.1884, -34.145, 0.67 ) }
    dend_74 { pt3dadd( 11.1818, 41.4109, -34.997, 1.33 ) }
    dend_74 { pt3dadd( 12.827, 42.2365, -38.3243, 0.67 ) }
    dend_74 { pt3dadd( 13.7658, 42.5505, -39.9256, 1.33 ) }
    dend_74 { pt3dadd( 16.6239, 43.0802, -44.1499, 0.67 ) }
    dend_74 { pt3dadd( 17.1229, 43.1268, -44.8028, 1.33 ) }
    dend_74 { pt3dadd( 18.3746, 43.1786, -45.9999, 0.67 ) }
    dend_74 { pt3dadd( 19.2812, 43.1924, -46.7041, 1.33 ) }
    dend_74 { pt3dadd( 21.6081, 43.1819, -47.7669, 0.33 ) }
    dend_74 { pt3dadd( 22.4528, 43.123, -48.0223, 0.67 ) }
    dend_74 { pt3dadd( 23.574, 43.0989, -48.1579, 0.33 ) }
    dend_74 { pt3dadd( 24.0111, 43.1036, -48.2083, 0.33 ) }
    dend_74 { pt3dadd( 26.018, 43.1187, -48.4498, 2.0 ) }
    dend_74 { pt3dadd( 28.2044, 43.2415, -48.7073, 0.67 ) }
    dend_74 { pt3dadd( 30.6906, 43.5952, -49.0422, 0.33 ) }
    dend_74 { pt3dadd( 32.6155, 43.9879, -49.3393, 1.33 ) }
    dend_74 { pt3dadd( 33.7835, 44.3089, -49.5292, 1.33 ) }
    dend_74 { pt3dadd( 35.4996, 44.864, -49.822, 0.33 ) }
    dend_74 { pt3dadd( 36.3873, 45.2325, -50.0264, 1.33 ) }
    dend_74 { pt3dadd( 38.6924, 46.3988, -50.6866, 0.33 ) }
    dend_74 { pt3dadd( 39.1181, 46.6343, -50.7779, 1.33 ) }
    dend_74 { pt3dadd( 40.122, 47.221, -50.9677, 0.33 ) }
    dend_74 { pt3dadd( 40.5173, 47.4967, -51.0353, 0.67 ) }
    dend_74 { pt3dadd( 42.3341, 48.9431, -51.3222, 0.33 ) }
    dend_74 { pt3dadd( 42.7013, 49.2527, -51.3553, 0.67 ) }
    dend_74 { pt3dadd( 44.6477, 50.9257, -51.3662, 0.33 ) }
    dend_74 { pt3dadd( 45.3283, 51.5049, -51.3414, 1.33 ) }
    dend_74 { pt3dadd( 46.2343, 52.2518, -51.2721, 0.33 ) }
    dend_74 { pt3dadd( 46.4088, 52.3892, -51.2767, 0.67 ) }
    dend_74 { pt3dadd( 48.0559, 53.6326, -51.5622, 0.33 ) }
    dend_74 { pt3dadd( 48.6023, 54.0365, -51.6797, 1.33 ) }
    dend_74 { pt3dadd( 50.1474, 55.0048, -52.0421, 0.33 ) }
    dend_74 { pt3dadd( 50.8586, 55.3511, -52.1163, 0.67 ) }
    dend_74 { pt3dadd( 54.1251, 56.3835, -52.0587, 0.67 ) }
    dend_74 { pt3dadd( 55.6254, 56.517, -51.8061, 0.33 ) }
    dend_74 { pt3dadd( 59.3441, 56.4576, -50.9445, 2.0 ) }
    dend_74 { pt3dadd( 61.8748, 56.236, -50.1148, 0.33 ) }
    dend_74 { pt3dadd( 63.4039, 55.9669, -49.4153, 0.33 ) }
    dend_74 { pt3dadd( 64.5085, 55.7278, -48.7694, 0.67 ) }
    dend_74 { pt3dadd( 66.9985, 55.1221, -46.9449, 0.33 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 73/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -0.068447, 34.8676, 1.33633, 2.0 ) }
    dend_52 { pt3dadd( 1.86622, 38.6526, -2.89617, 2.0 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 75/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -0.068447, 34.8676, 1.33633, 0.67 ) }
    dend_51 { pt3dadd( -0.248208, 40.5868, 2.44098, 0.67 ) }
    dend_51 { pt3dadd( -0.280024, 44.8455, 3.17679, 0.67 ) }
    dend_51 { pt3dadd( -0.371227, 48.7232, 3.76037, 0.67 ) }
    dend_51 { pt3dadd( -0.451549, 53.2955, 4.27474, 0.67 ) }
    dend_51 { pt3dadd( -0.600614, 59.3854, 4.76832, 0.67 ) }
    dend_51 { pt3dadd( -0.655777, 63.2414, 5.02243, 1.33 ) }
    dend_51 { pt3dadd( -0.833729, 73.0177, 5.4805, 0.67 ) }
    dend_51 { pt3dadd( -0.878436, 76.8628, 5.37821, 0.67 ) }
    dend_51 { pt3dadd( -0.839697, 82.8947, 5.1163, 0.67 ) }
    dend_51 { pt3dadd( -0.699775, 86.0525, 4.99032, 0.67 ) }
    dend_51 { pt3dadd( -0.473026, 88.4706, 4.8738, 1.33 ) }
    dend_51 { pt3dadd( -0.057991, 92.2987, 4.99914, 0.67 ) }
    dend_51 { pt3dadd( 0.668472, 99.9112, 6.17722, 0.67 ) }
    dend_51 { pt3dadd( 1.41386, 105.885, 7.61379, 0.67 ) }
    dend_51 { pt3dadd( 1.85207, 109.43, 8.97393, 1.33 ) }
    dend_51 { pt3dadd( 2.13872, 111.646, 10.1077, 0.67 ) }
    dend_51 { pt3dadd( 2.42379, 115.132, 12.4476, 0.67 ) }
    dend_51 { pt3dadd( 2.53217, 116.769, 14.1552, 0.67 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 94/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 41.0867, 121.399, -4.71149, 0.33 ) }
    dend_47 { pt3dadd( 42.1431, 121.547, -5.5403, 0.33 ) }
    dend_47 { pt3dadd( 43.7101, 121.766, -6.76966, 0.67 ) }
    dend_47 { pt3dadd( 44.7586, 121.912, -7.59229, 0.33 ) }
    dend_47 { pt3dadd( 45.3474, 121.994, -8.05424, 0.67 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 99/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 41.0867, 121.399, -4.71149, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_44 { pt3dadd( 41.3242, 123.087, -5.63923, 1.33 ) }
    dend_44 { pt3dadd( 41.6852, 125.786, -7.40846, 0.33 ) }
    dend_44 { pt3dadd( 41.7483, 126.217, -7.74703, 0.67 ) }
    dend_44 { pt3dadd( 42.0349, 128.398, -9.68108, 0.33 ) }
    dend_44 { pt3dadd( 42.182, 129.245, -10.3177, 0.67 ) }
    dend_44 { pt3dadd( 43.3824, 134.718, -13.8302, 0.33 ) }
    dend_44 { pt3dadd( 43.5915, 135.367, -14.2028, 0.67 ) }
    dend_44 { pt3dadd( 44.7346, 138.172, -15.6757, 0.33 ) }
    dend_44 { pt3dadd( 45.8827, 140.954, -16.7507, 0.67 ) }
    dend_44 { pt3dadd( 48.771, 147.958, -18.5532, 0.33 ) }
    dend_44 { pt3dadd( 49.0953, 148.738, -18.6574, 0.67 ) }
    dend_44 { pt3dadd( 51.1934, 152.891, -18.3209, 0.33 ) }
    dend_44 { pt3dadd( 54.4541, 159.57, -17.9597, 1.33 ) }
    dend_44 { pt3dadd( 55.3229, 161.406, -17.8346, 0.33 ) }
    dend_44 { pt3dadd( 55.5397, 162.094, -18.0776, 0.67 ) }
    dend_44 { pt3dadd( 56.2646, 165.426, -20.0911, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 16/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -10.1841, 31.3279, -35.4494, 0.33 ) }
    dend_38 { pt3dadd( -10.4958, 34.1664, -38.053, 0.33 ) }
    dend_38 { pt3dadd( -10.9484, 36.5331, -40.0668, 0.33 ) }
    dend_38 { pt3dadd( -11.7669, 39.7641, -42.5747, 0.67 ) }
    dend_38 { pt3dadd( -12.0473, 41.2475, -43.7052, 0.33 ) }
    dend_38 { pt3dadd( -12.5859, 43.8222, -45.6629, 1.33 ) }
    dend_38 { pt3dadd( -13.8068, 48.8392, -49.7159, 0.33 ) }
    dend_38 { pt3dadd( -14.625, 51.6976, -51.9649, 1.33 ) }
    dend_38 { pt3dadd( -15.3611, 53.6131, -53.5354, 0.33 ) }
    dend_38 { pt3dadd( -17.8384, 58.7997, -57.6689, 0.33 ) }
    dend_38 { pt3dadd( -19.1034, 61.0653, -59.4484, 0.33 ) }
    dend_38 { pt3dadd( -21.4257, 64.4916, -61.9564, 1.33 ) }
    dend_38 { pt3dadd( -23.4185, 67.0244, -63.6821, 0.33 ) }
    dend_38 { pt3dadd( -24.9814, 68.9116, -65.0089, 0.33 ) }
    dend_38 { pt3dadd( -25.6787, 69.678, -65.5187, 1.33 ) }
    dend_38 { pt3dadd( -27.7411, 71.6719, -66.6991, 0.33 ) }
    dend_38 { pt3dadd( -29.1199, 73.1478, -67.5235, 2.0 ) }
    dend_38 { pt3dadd( -33.2483, 77.8633, -69.9832, 0.33 ) }
    dend_38 { pt3dadd( -33.9334, 78.5819, -70.2582, 0.67 ) }
    dend_38 { pt3dadd( -35.7868, 80.408, -70.6304, 0.33 ) }
    dend_38 { pt3dadd( -36.3906, 80.949, -70.6147, 0.67 ) }
    dend_38 { pt3dadd( -38.2916, 82.5572, -70.2742, 0.33 ) }
    dend_38 { pt3dadd( -39.4438, 83.4927, -70.0264, 0.67 ) }
    dend_38 { pt3dadd( -47.0677, 89.2909, -67.9147, 0.33 ) }
    dend_38 { pt3dadd( -48.7205, 90.7132, -67.5782, 2.67 ) }
    dend_38 { pt3dadd( -53.9519, 95.6667, -66.8455, 0.33 ) }
    dend_38 { pt3dadd( -54.7423, 96.4941, -66.8004, 0.67 ) }
    dend_38 { pt3dadd( -57.6944, 99.8772, -66.9488, 0.33 ) }
    dend_38 { pt3dadd( -58.8255, 101.37, -67.2036, 0.67 ) }
    dend_38 { pt3dadd( -62.1412, 106.605, -68.8486, 0.33 ) }
    dend_38 { pt3dadd( -63.0538, 108.098, -69.3514, 0.67 ) }
    dend_38 { pt3dadd( -64.0235, 109.761, -69.9764, 2.0 ) }
    dend_38 { pt3dadd( -65.238, 111.899, -70.7475, 0.33 ) }
    dend_38 { pt3dadd( -66.0728, 113.501, -71.2183, 2.0 ) }
    dend_38 { pt3dadd( -67.3203, 116.013, -71.9672, 0.33 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 51/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -10.1841, 31.3279, -35.4494, 0.67 ) }
    dend_35 { pt3dadd( -10.8437, 31.8955, -37.3308, 0.67 ) }
    dend_35 { pt3dadd( -11.8672, 32.481, -38.9259, 0.33 ) }
    dend_35 { pt3dadd( -15.1073, 33.8812, -42.4036, 0.67 ) }
    dend_35 { pt3dadd( -16.5684, 34.3616, -43.6409, 0.67 ) }
    dend_35 { pt3dadd( -17.4903, 34.5866, -44.2956, 0.33 ) }
    dend_35 { pt3dadd( -18.6197, 34.8094, -45.0153, 0.33 ) }
    dend_35 { pt3dadd( -21.3502, 35.2844, -46.4505, 0.33 ) }
    dend_35 { pt3dadd( -23.2458, 35.5008, -47.266, 1.33 ) }
    dend_35 { pt3dadd( -25.0816, 35.4743, -47.8603, 0.33 ) }
    dend_35 { pt3dadd( -27.1718, 35.2788, -48.5473, 0.67 ) }
    dend_35 { pt3dadd( -28.2331, 35.1325, -48.8934, 0.33 ) }
    dend_35 { pt3dadd( -30.0482, 34.8628, -49.4679, 0.33 ) }
    dend_35 { pt3dadd( -30.8436, 34.7915, -49.7993, 0.67 ) }
    dend_35 { pt3dadd( -32.3558, 34.7328, -50.6335, 0.33 ) }
    dend_35 { pt3dadd( -33.0618, 34.7517, -51.1301, 0.33 ) }
    dend_35 { pt3dadd( -33.7462, 34.7733, -51.8463, 1.33 ) }
    dend_35 { pt3dadd( -34.8159, 34.7533, -53.3399, 1.33 ) }
    dend_35 { pt3dadd( -36.7952, 34.4184, -57.0891, 0.33 ) }
    dend_35 { pt3dadd( -37.4882, 34.2985, -58.5274, 0.33 ) }
    dend_35 { pt3dadd( -37.7221, 34.238, -59.0961, 0.67 ) }
    dend_35 { pt3dadd( -38.9365, 33.6638, -62.4552, 0.33 ) }
    dend_35 { pt3dadd( -39.1997, 33.4521, -63.3256, 1.33 ) }
    dend_35 { pt3dadd( -40.1185, 32.1355, -66.979, 1.33 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 75/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 53.4894, -24.1608, -76.1254, 0.33 ) }
    dend_24 { pt3dadd( 54.24, -23.2866, -76.5459, 0.33 ) }
    dend_24 { pt3dadd( 54.7709, -22.6685, -76.8434, 0.67 ) }
    dend_24 { pt3dadd( 55.4276, -21.9037, -77.2113, 0.33 ) }
    dend_24 { pt3dadd( 55.9912, -21.2474, -77.5271, 0.67 ) }
    dend_24 { pt3dadd( 56.9789, -20.0972, -78.0805, 0.33 ) }
    dend_24 { pt3dadd( 56.9789, -20.0972, -78.0805, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 82/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 53.4894, -24.1608, -76.1254, 0.33 ) }
    dend_23 { pt3dadd( 53.1633, -23.8797, -76.8358, 0.33 ) }
    dend_23 { pt3dadd( 52.9132, -23.6589, -77.3631, 1.33 ) }
    dend_23 { pt3dadd( 50.6966, -21.5099, -81.8373, 0.33 ) }
    dend_23 { pt3dadd( 50.3355, -21.2236, -82.5096, 2.0 ) }
    dend_23 { pt3dadd( 48.6272, -19.9093, -85.5855, 0.33 ) }
    dend_23 { pt3dadd( 47.9628, -19.3982, -86.7817, 1.33 ) }
    dend_23 { pt3dadd( 46.6513, -18.4595, -89.093, 0.33 ) }
    dend_23 { pt3dadd( 45.7586, -17.8518, -90.5969, 1.33 ) }
    dend_23 { pt3dadd( 42.8056, -15.8304, -94.8891, 0.33 ) }
    dend_23 { pt3dadd( 42.1165, -15.4447, -95.8634, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 93/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 28.9714, -284.685, -20.2086, 0.33 ) }
    dend_18 { pt3dadd( 27.1082, -284.129, -17.629, 0.33 ) }
    dend_18 { pt3dadd( 23.7289, -283.119, -12.9503, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 96/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 28.9714, -284.685, -20.2086, 0.33 ) }
    dend_15 { pt3dadd( 29.4238, -287.098, -19.7797, 0.33 ) }
    dend_15 { pt3dadd( 29.7448, -289.216, -19.3952, 0.67 ) }
    dend_15 { pt3dadd( 30.232, -292.846, -18.77, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( 30.6618, -297.012, -18.116, 1.33 ) }
    dend_15 { pt3dadd( 30.7473, -298.701, -17.8984, 1.33 ) }
    dend_15 { pt3dadd( 30.8269, -301.722, -17.5844, 0.67 ) }
    dend_15 { pt3dadd( 30.752, -303.262, -17.3945, 0.67 ) }
    dend_15 { pt3dadd( 30.5724, -304.967, -17.187, 0.33 ) }
    dend_15 { pt3dadd( 30.3739, -306.167, -17.0587, 0.67 ) }
    dend_15 { pt3dadd( 29.8564, -308.71, -17.0087, 0.33 ) }
    dend_15 { pt3dadd( 29.1579, -311.42, -16.9953, 0.67 ) }
    dend_15 { pt3dadd( 28.3858, -313.915, -16.8937, 0.33 ) }
    dend_15 { pt3dadd( 27.7867, -315.888, -16.9669, 1.33 ) }
    dend_15 { pt3dadd( 27.0665, -318.189, -17.0615, 1.33 ) }
    dend_15 { pt3dadd( 26.3573, -320.484, -17.1675, 0.67 ) }
    dend_15 { pt3dadd( 25.3513, -323.678, -17.3636, 0.67 ) }
    dend_15 { pt3dadd( 23.5757, -328.888, -17.877, 0.67 ) }
    dend_15 { pt3dadd( 21.9164, -334.04, -18.6628, 2.0 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 15/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 0.0319792, -187.543, 34.9606, 0.33 ) }
    dend_10 { pt3dadd( 6.52097, -186.061, 38.8434, 0.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 17/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 0.0319792, -187.543, 34.9606, 0.33 ) }
    dend_9 { pt3dadd( -0.789631, -189.548, 36.0444, 0.33 ) }
    dend_9 { pt3dadd( -1.5758, -191.339, 36.9888, 1.33 ) }
    dend_9 { pt3dadd( -3.20882, -194.556, 38.6598, 0.33 ) }
    dend_9 { pt3dadd( -6.54256, -200.791, 41.7676, 0.33 ) }
    dend_9 { pt3dadd( -7.38551, -202.321, 42.5612, 2.0 ) }
    dend_9 { pt3dadd( -8.71292, -204.914, 44.1372, 0.33 ) }
    dend_9 { pt3dadd( -8.87224, -205.199, 44.3353, 0.67 ) }
    dend_9 { pt3dadd( -9.67268, -206.606, 45.4666, 0.33 ) }
    dend_9 { pt3dadd( -10.3347, -207.644, 46.4238, 0.33 ) }
    dend_9 { pt3dadd( -11.2605, -209.249, 47.5333, 1.33 ) }
    dend_9 { pt3dadd( -13.3936, -213.878, 51.5219, 0.33 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 29/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 22.2801, -202.266, 38.4525, 0.33 ) }
    dend_7 { pt3dadd( 19.6809, -200.627, 37.676, 0.33 ) }
    dend_7 { pt3dadd( 17.1182, -199.012, 36.9105, 0.33 ) }
    dend_7 { pt3dadd( 13.3822, -196.657, 35.7945, 0.33 ) }
    dend_7 { pt3dadd( 11.9602, -195.76, 35.3698, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 34/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 22.2801, -202.266, 38.4525, 0.67 ) }
    dend_4 { pt3dadd( 20.5132, -204.597, 43.7073, 0.67 ) }
    // Section: dend_79, id: dend_79, parent: dend_75 (entry count 36/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 14.4164, 40.3617, -5.06412, 0.67 ) }
    dend_79 { pt3dadd( 14.5353, 42.4075, -8.27314, 0.67 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 14.4164, 40.3617, -5.06412, 0.67 ) }
    dend_76 { pt3dadd( 16.2336, 39.8146, -3.19782, 0.67 ) }
    dend_76 { pt3dadd( 18.9298, 39.2401, -0.469801, 0.33 ) }
    dend_76 { pt3dadd( 20.3764, 39.1598, 1.09358, 0.67 ) }
    dend_76 { pt3dadd( 22.1065, 39.3014, 2.92097, 0.33 ) }
    dend_76 { pt3dadd( 25.9264, 39.9262, 6.52715, 1.33 ) }
    dend_76 { pt3dadd( 27.686, 40.3853, 8.26966, 0.33 ) }
    dend_76 { pt3dadd( 29.241, 40.9145, 9.76327, 0.67 ) }
    dend_76 { pt3dadd( 31.8272, 42.0666, 12.1084, 0.33 ) }
    dend_76 { pt3dadd( 33.344, 42.8774, 13.5382, 1.33 ) }
    dend_76 { pt3dadd( 35.76, 44.3604, 15.73, 0.33 ) }
    dend_76 { pt3dadd( 39.4566, 46.854, 18.7972, 1.33 ) }
    dend_76 { pt3dadd( 41.8657, 48.5633, 20.8053, 0.67 ) }
    dend_76 { pt3dadd( 42.7139, 49.1841, 21.4724, 0.67 ) }
    dend_76 { pt3dadd( 45.3398, 51.2414, 23.6449, 0.33 ) }
    dend_76 { pt3dadd( 46.5608, 52.3292, 24.7466, 0.33 ) }
    dend_76 { pt3dadd( 47.7055, 53.4331, 25.7718, 0.33 ) }
    dend_76 { pt3dadd( 49.0998, 54.6457, 26.8086, 0.33 ) }
    dend_76 { pt3dadd( 50.0226, 55.4871, 27.4751, 1.33 ) }
    dend_76 { pt3dadd( 53.054, 58.2704, 29.6182, 0.33 ) }
    dend_76 { pt3dadd( 54.509, 59.6502, 30.5583, 0.67 ) }
    dend_76 { pt3dadd( 56.3362, 61.2653, 31.8355, 0.67 ) }
    dend_76 { pt3dadd( 58.2281, 62.7187, 33.2598, 0.33 ) }
    dend_76 { pt3dadd( 60.6958, 64.491, 35.1312, 1.33 ) }
    dend_76 { pt3dadd( 63.4254, 66.3615, 37.1619, 0.67 ) }
    dend_76 { pt3dadd( 65.6633, 67.8218, 38.7005, 0.67 ) }
    dend_76 { pt3dadd( 68.3581, 69.6269, 40.8513, 0.67 ) }
    dend_76 { pt3dadd( 70.9387, 71.5655, 43.3511, 0.67 ) }
    // Section: dend_68, id: dend_68, parent: dend_52 (entry count 66/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 1.86622, 38.6526, -2.89617, 0.67 ) }
    dend_68 { pt3dadd( 5.9819, 45.3975, -5.79807, 0.67 ) }
    dend_68 { pt3dadd( 7.33842, 47.337, -6.71652, 0.67 ) }
    dend_68 { pt3dadd( 12.212, 53.6152, -9.13118, 1.33 ) }
    dend_68 { pt3dadd( 16.0126, 58.5111, -11.0142, 1.33 ) }
    dend_68 { pt3dadd( 18.0094, 61.0833, -12.0035, 0.67 ) }
    dend_68 { pt3dadd( 20.3424, 64.0887, -13.1594, 1.33 ) }
    dend_68 { pt3dadd( 23.1592, 67.3155, -14.4536, 0.33 ) }
    dend_68 { pt3dadd( 27.9419, 71.935, -16.0309, 1.33 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 75/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 1.86622, 38.6526, -2.89617, 1.33 ) }
    dend_53 { pt3dadd( -0.329124, 40.5268, -2.01487, 1.33 ) }
    dend_53 { pt3dadd( -5.19942, 44.6846, -0.0597547, 0.67 ) }
    dend_53 { pt3dadd( -6.78012, 46.034, 0.574797, 0.67 ) }
    dend_53 { pt3dadd( -10.0828, 48.8535, 1.90061, 1.33 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 80/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 56.2646, 165.426, -20.0911, 0.33 ) }
    dend_46 { pt3dadd( 55.5466, 166.42, -19.42, 0.33 ) }
    dend_46 { pt3dadd( 55.4006, 166.623, -19.2835, 0.67 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 56.2646, 165.426, -20.0911, 0.33 ) }
    dend_45 { pt3dadd( 56.7274, 167.989, -20.4299, 0.33 ) }
    dend_45 { pt3dadd( 56.9223, 168.984, -20.8519, 0.67 ) }
    dend_45 { pt3dadd( 57.367, 171.533, -22.0738, 0.33 ) }
    dend_45 { pt3dadd( 57.5849, 172.762, -22.7107, 0.67 ) }
    dend_45 { pt3dadd( 57.9494, 174.517, -23.6597, 0.33 ) }
    dend_45 { pt3dadd( 58.7127, 177.536, -25.3686, 0.67 ) }
    dend_45 { pt3dadd( 59.6377, 180.75, -27.5317, 0.33 ) }
    dend_45 { pt3dadd( 60.178, 182.429, -28.7365, 0.33 ) }
    dend_45 { pt3dadd( 60.4057, 183.028, -29.1975, 0.67 ) }
    dend_45 { pt3dadd( 60.8293, 184.384, -30.2443, 0.33 ) }
    dend_45 { pt3dadd( 61.0881, 185.551, -31.066, 0.67 ) }
    dend_45 { pt3dadd( 61.5331, 188.561, -32.71, 0.33 ) }
    dend_45 { pt3dadd( 61.6239, 189.826, -33.2686, 0.67 ) }
    dend_45 { pt3dadd( 61.6625, 190.536, -33.5966, 0.67 ) }
    dend_45 { pt3dadd( 61.7074, 195.038, -35.5911, 0.33 ) }
    dend_45 { pt3dadd( 61.6529, 195.943, -35.9802, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( 61.3409, 198.582, -37.0518, 0.67 ) }
    dend_45 { pt3dadd( 61.18, 199.592, -37.4473, 0.33 ) }
    dend_45 { pt3dadd( 60.7725, 201.929, -38.3874, 1.33 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 3/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -67.3203, 116.013, -71.9672, 0.33 ) }
    dend_40 { pt3dadd( -67.8643, 117.506, -72.5054, 0.33 ) }
    dend_40 { pt3dadd( -68.278, 118.641, -72.9148, 0.67 ) }
    dend_40 { pt3dadd( -69.4517, 121.862, -74.0762, 0.33 ) }
    dend_40 { pt3dadd( -70.2281, 123.992, -74.8446, 1.33 ) }
    dend_40 { pt3dadd( -71.2212, 126.718, -75.8273, 0.33 ) }
    dend_40 { pt3dadd( -72.1332, 129.22, -76.7297, 0.67 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -67.3203, 116.013, -71.9672, 0.33 ) }
    dend_39 { pt3dadd( -69.0648, 116.643, -71.5952, 0.33 ) }
    dend_39 { pt3dadd( -71.6027, 117.875, -71.3721, 0.67 ) }
    dend_39 { pt3dadd( -72.5181, 118.404, -71.3386, 0.33 ) }
    dend_39 { pt3dadd( -73.1268, 118.897, -71.4574, 0.67 ) }
    dend_39 { pt3dadd( -73.8828, 119.588, -71.7097, 0.33 ) }
    dend_39 { pt3dadd( -74.6368, 120.325, -72.0134, 1.33 ) }
    dend_39 { pt3dadd( -76.8893, 122.881, -73.2189, 0.33 ) }
    dend_39 { pt3dadd( -78.1142, 124.42, -74.0212, 0.67 ) }
    dend_39 { pt3dadd( -80.7559, 127.816, -75.8155, 0.33 ) }
    dend_39 { pt3dadd( -81.0545, 128.196, -76.0208, 0.67 ) }
    dend_39 { pt3dadd( -81.9585, 129.371, -76.6423, 0.33 ) }
    dend_39 { pt3dadd( -82.4147, 129.999, -76.9585, 0.67 ) }
    dend_39 { pt3dadd( -83.4873, 131.532, -77.7157, 0.33 ) }
    dend_39 { pt3dadd( -84.0543, 132.213, -77.9816, 0.67 ) }
    dend_39 { pt3dadd( -85.3256, 133.412, -78.2713, 0.33 ) }
    dend_39 { pt3dadd( -85.8724, 133.908, -78.4086, 0.33 ) }
    dend_39 { pt3dadd( -86.4136, 134.388, -78.5631, 0.67 ) }
    dend_39 { pt3dadd( -87.2583, 135.112, -78.8214, 0.33 ) }
    dend_39 { pt3dadd( -88.4821, 136.143, -79.204, 0.67 ) }
    dend_39 { pt3dadd( -89.6628, 137.042, -79.6145, 0.33 ) }
    dend_39 { pt3dadd( -90.1406, 137.379, -79.7791, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 32/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -40.1185, 32.1355, -66.979, 0.33 ) }
    dend_37 { pt3dadd( -44.9373, 35.5235, -71.6431, 0.33 ) }
    dend_37 { pt3dadd( -45.8938, 36.1693, -72.6402, 2.0 ) }
    dend_37 { pt3dadd( -49.9338, 38.8905, -76.9288, 0.33 ) }
    dend_37 { pt3dadd( -50.4356, 39.21, -77.4135, 0.67 ) }
    dend_37 { pt3dadd( -51.2707, 39.7305, -78.1624, 0.33 ) }
    dend_37 { pt3dadd( -54.2702, 41.6966, -80.6675, 1.33 ) }
    dend_37 { pt3dadd( -55.6829, 42.5617, -81.7852, 0.33 ) }
    dend_37 { pt3dadd( -56.5796, 43.1583, -82.3719, 0.67 ) }
    dend_37 { pt3dadd( -59.7082, 45.596, -83.9182, 0.33 ) }
    dend_37 { pt3dadd( -61.1238, 46.7738, -84.5335, 1.33 ) }
    dend_37 { pt3dadd( -63.4804, 48.9557, -85.4228, 0.33 ) }
    dend_37 { pt3dadd( -65.305, 50.7633, -85.9809, 0.33 ) }
    dend_37 { pt3dadd( -67.2172, 52.7967, -86.5821, 0.67 ) }
    dend_37 { pt3dadd( -69.6409, 55.5548, -87.3898, 0.33 ) }
    dend_37 { pt3dadd( -70.7392, 56.9341, -87.7802, 1.33 ) }
    dend_37 { pt3dadd( -72.8258, 59.6576, -88.5408, 0.33 ) }
    dend_37 { pt3dadd( -73.2932, 60.2763, -88.7704, 0.67 ) }
    dend_37 { pt3dadd( -74.0716, 61.3588, -89.2651, 0.33 ) }
    dend_37 { pt3dadd( -74.7033, 62.2543, -89.7627, 0.67 ) }
    dend_37 { pt3dadd( -75.3452, 63.0994, -90.344, 0.33 ) }
    dend_37 { pt3dadd( -75.915, 63.81, -90.9041, 0.67 ) }
    dend_37 { pt3dadd( -78.4433, 66.7597, -93.6613, 0.33 ) }
    dend_37 { pt3dadd( -78.4433, 66.7597, -93.6613, 0.67 ) }
    dend_37 { pt3dadd( -79.347, 67.8448, -94.826, 0.33 ) }
    dend_37 { pt3dadd( -79.6827, 68.2262, -95.2665, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -40.1185, 32.1355, -66.979, 0.33 ) }
    dend_36 { pt3dadd( -41.0539, 31.8817, -69.3697, 0.33 ) }
    dend_36 { pt3dadd( -42.2936, 31.6107, -71.8654, 0.67 ) }
    dend_36 { pt3dadd( -44.1053, 31.2106, -75.2371, 0.33 ) }
    dend_36 { pt3dadd( -44.4673, 31.1168, -75.8378, 0.67 ) }
    dend_36 { pt3dadd( -47.0385, 30.3587, -79.8437, 0.33 ) }
    dend_36 { pt3dadd( -50.0518, 29.2446, -84.2268, 2.67 ) }
    dend_36 { pt3dadd( -52.7671, 27.9617, -88.4076, 0.33 ) }
    dend_36 { pt3dadd( -53.0104, 27.8103, -88.7677, 0.67 ) }
    dend_36 { pt3dadd( -54.335, 26.7213, -90.8718, 0.33 ) }
    dend_36 { pt3dadd( -54.6769, 26.3582, -91.3721, 1.33 ) }
    dend_36 { pt3dadd( -56.1124, 24.4717, -93.0623, 0.33 ) }
    dend_36 { pt3dadd( -57.9183, 21.6794, -94.8838, 2.0 ) }
    dend_36 { pt3dadd( -58.7997, 19.7968, -96.1648, 0.33 ) }
    dend_36 { pt3dadd( -58.9716, 19.4656, -96.4072, 0.67 ) }
    dend_36 { pt3dadd( -59.9125, 17.8419, -97.6768, 0.33 ) }
    dend_36 { pt3dadd( -60.1492, 17.5535, -97.9129, 0.67 ) }
    dend_36 { pt3dadd( -61.4151, 16.4449, -98.8522, 0.33 ) }
    dend_36 { pt3dadd( -62.8855, 15.5204, -99.5923, 0.67 ) }
    dend_36 { pt3dadd( -65.4946, 14.2677, -100.812, 0.33 ) }
    dend_36 { pt3dadd( -66.3873, 13.9093, -101.116, 0.67 ) }
    dend_36 { pt3dadd( -69.0017, 12.982, -101.939, 0.33 ) }
    dend_36 { pt3dadd( -69.5871, 12.7758, -102.104, 0.67 ) }
    dend_36 { pt3dadd( -72.8502, 11.6993, -102.812, 0.33 ) }
    dend_36 { pt3dadd( -73.8126, 11.4072, -102.93, 0.67 ) }
    dend_36 { pt3dadd( -77.3899, 10.6618, -103.14, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 84/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 21.9164, -334.04, -18.6628, 0.33 ) }
    dend_17 { pt3dadd( 18.0878, -338.876, -12.4941, 0.33 ) }
    dend_17 { pt3dadd( 16.1634, -341.237, -9.98016, 0.67 ) }
    dend_17 { pt3dadd( 15.2957, -342.247, -9.04919, 0.33 ) }
    dend_17 { pt3dadd( 14.1447, -343.473, -8.38042, 0.33 ) }
    dend_17 { pt3dadd( 12.4169, -345.393, -7.95413, 0.33 ) }
    dend_17 { pt3dadd( 11.593, -346.334, -8.04118, 0.67 ) }
    dend_17 { pt3dadd( 9.7972, -348.36, -9.04692, 0.33 ) }
    dend_17 { pt3dadd( 8.50525, -349.956, -9.94726, 0.67 ) }
    dend_17 { pt3dadd( 4.42407, -355.637, -14.0151, 0.33 ) }
    dend_17 { pt3dadd( 3.19977, -357.647, -15.6047, 0.67 ) }
    dend_17 { pt3dadd( 1.32769, -361.15, -18.5825, 0.33 ) }
    dend_17 { pt3dadd( 0.836559, -362.146, -19.4701, 0.67 ) }
    dend_17 { pt3dadd( -0.684887, -365.653, -22.7491, 0.33 ) }
    dend_17 { pt3dadd( -2.20735, -369.945, -26.6468, 0.67 ) }
    dend_17 { pt3dadd( -2.65594, -371.762, -27.9511, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -2.81599, -372.436, -28.5048, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 1/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 21.9164, -334.04, -18.6628, 0.67 ) }
    dend_16 { pt3dadd( 21.8387, -336.645, -17.9988, 0.67 ) }
    dend_16 { pt3dadd( 21.7954, -339.062, -17.4975, 0.67 ) }
    dend_16 { pt3dadd( 21.818, -340.729, -17.2218, 0.33 ) }
    dend_16 { pt3dadd( 21.9538, -345.9, -16.6037, 2.67 ) }
    dend_16 { pt3dadd( 22.2059, -350.35, -16.4103, 0.67 ) }
    dend_16 { pt3dadd( 22.4754, -353.664, -16.3925, 0.33 ) }
    dend_16 { pt3dadd( 22.5521, -354.45, -16.4259, 0.67 ) }
    dend_16 { pt3dadd( 22.841, -357.43, -16.689, 0.33 ) }
    dend_16 { pt3dadd( 23.2969, -362.297, -17.4212, 0.33 ) }
    dend_16 { pt3dadd( 23.6079, -365.773, -18.1878, 0.67 ) }
    dend_16 { pt3dadd( 23.8316, -368.699, -18.839, 0.33 ) }
    dend_16 { pt3dadd( 24.1635, -372.727, -19.6535, 0.33 ) }
    dend_16 { pt3dadd( 24.3493, -375.85, -20.3014, 0.33 ) }
    dend_16 { pt3dadd( 24.382, -377.651, -20.685, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 16/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 20.5132, -204.597, 43.7073, 0.33 ) }
    dend_6 { pt3dadd( 19.1682, -206.629, 43.602, 0.33 ) }
    dend_6 { pt3dadd( 18.1219, -208.209, 43.52, 0.33 ) }
    dend_6 { pt3dadd( 16.9677, -209.952, 43.4296, 0.33 ) }
    dend_6 { pt3dadd( 16.2252, -211.074, 43.3715, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 20.5132, -204.597, 43.7073, 0.67 ) }
    dend_5 { pt3dadd( 21.202, -207.047, 45.041, 0.67 ) }
    dend_5 { pt3dadd( 22.2996, -210.951, 47.1662, 1.33 ) }
    dend_5 { pt3dadd( 22.9273, -213.183, 48.3816, 0.67 ) }
    dend_5 { pt3dadd( 24.082, -217.29, 50.6175, 1.33 ) }
    dend_5 { pt3dadd( 24.7585, -219.696, 51.9275, 0.67 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 27/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 70.9387, 71.5655, 43.3511, 0.33 ) }
    dend_78 { pt3dadd( 73.3949, 70.8754, 44.961, 0.33 ) }
    dend_78 { pt3dadd( 76.3105, 70.0562, 46.872, 0.33 ) }
    dend_78 { pt3dadd( 81.5441, 68.5857, 50.3023, 0.33 ) }
    dend_78 { pt3dadd( 84.0331, 67.8863, 51.9338, 0.33 ) }
    dend_78 { pt3dadd( 85.4345, 67.4925, 52.8523, 0.33 ) }
    dend_78 { pt3dadd( 87.265, 66.9782, 54.0521, 0.67 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 34/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 70.9387, 71.5655, 43.3511, 0.67 ) }
    dend_77 { pt3dadd( 73.4604, 72.8966, 45.3684, 0.67 ) }
    dend_77 { pt3dadd( 76.3605, 74.4273, 47.6884, 0.67 ) }
    dend_77 { pt3dadd( 78.1369, 75.365, 49.1095, 0.67 ) }
    dend_77 { pt3dadd( 79.7142, 76.1974, 50.3712, 0.67 ) }
    dend_77 { pt3dadd( 86.6001, 79.8321, 55.8797, 0.67 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 40/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 27.9419, 71.935, -16.0309, 0.33 ) }
    dend_72 { pt3dadd( 30.7422, 73.4059, -16.2133, 0.33 ) }
    dend_72 { pt3dadd( 32.0025, 74.1819, -16.2241, 0.33 ) }
    dend_72 { pt3dadd( 32.9172, 74.4, -15.3677, 0.33 ) }
    dend_72 { pt3dadd( 34.0619, 74.6036, -14.2508, 0.33 ) }
    dend_72 { pt3dadd( 35.4346, 74.8951, -12.9066, 1.33 ) }
    dend_72 { pt3dadd( 36.7833, 75.2304, -11.6161, 0.33 ) }
    dend_72 { pt3dadd( 37.8368, 75.4987, -10.5882, 0.67 ) }
    dend_72 { pt3dadd( 44.5809, 77.5376, -3.74356, 0.33 ) }
    dend_72 { pt3dadd( 45.6251, 77.9039, -2.69119, 0.67 ) }
    dend_72 { pt3dadd( 46.6557, 78.2783, -1.67142, 0.33 ) }
    dend_72 { pt3dadd( 47.4283, 78.6019, -1.00271, 0.67 ) }
    dend_72 { pt3dadd( 48.7563, 79.2459, -0.105037, 0.33 ) }
    dend_72 { pt3dadd( 49.2813, 79.5924, 0.108149, 0.67 ) }
    dend_72 { pt3dadd( 50.1453, 80.4247, 0.126609, 0.33 ) }
    dend_72 { pt3dadd( 50.6072, 80.892, 0.132032, 0.67 ) }
    dend_72 { pt3dadd( 52.8151, 83.0939, 0.0988264, 0.33 ) }
    dend_72 { pt3dadd( 54.3769, 84.7427, 0.0583513, 0.33 ) }
    dend_72 { pt3dadd( 54.8377, 85.2053, 0.0297803, 0.67 ) }
    dend_72 { pt3dadd( 57.1647, 87.3104, -0.210732, 0.33 ) }
    dend_72 { pt3dadd( 57.8977, 87.8376, -0.289165, 1.33 ) }
    dend_72 { pt3dadd( 59.5307, 88.7607, -0.50362, 0.33 ) }
    dend_72 { pt3dadd( 60.6224, 89.2171, -0.681012, 1.33 ) }
    dend_72 { pt3dadd( 63.5425, 90.0584, -0.857447, 0.67 ) }
    dend_72 { pt3dadd( 65.4159, 90.3535, -0.862487, 0.67 ) }
    dend_72 { pt3dadd( 69.1173, 90.5295, -0.757961, 0.67 ) }
    dend_72 { pt3dadd( 70.4453, 90.562, -0.690688, 1.33 ) }
    dend_72 { pt3dadd( 71.5309, 90.5688, -0.622707, 0.33 ) }
    dend_72 { pt3dadd( 75.5987, 90.6176, -0.342658, 1.33 ) }
    dend_72 { pt3dadd( 79.2003, 90.8025, -0.0345517, 0.33 ) }
    dend_72 { pt3dadd( 81.8958, 91.1274, 0.148642, 0.67 ) }
    dend_72 { pt3dadd( 83.2018, 91.3996, 0.188737, 0.33 ) }
    dend_72 { pt3dadd( 83.853, 91.5734, 0.189082, 0.67 ) }
    dend_72 { pt3dadd( 84.847, 91.9629, 0.113699, 0.33 ) }
    dend_72 { pt3dadd( 85.5489, 92.3911, -0.0261357, 1.33 ) }
    dend_72 { pt3dadd( 86.9226, 93.6499, -0.224634, 0.33 ) }
    dend_72 { pt3dadd( 87.9962, 94.7922, -0.358013, 0.33 ) }
    dend_72 { pt3dadd( 88.3933, 95.2163, -0.436629, 0.67 ) }
    dend_72 { pt3dadd( 89.4941, 96.407, -0.721069, 0.33 ) }
    dend_72 { pt3dadd( 90.0637, 97.0478, -0.896297, 0.67 ) }
    dend_72 { pt3dadd( 90.6598, 97.7246, -1.09957, 0.33 ) }
    dend_72 { pt3dadd( 91.4985, 98.6681, -1.42918, 0.33 ) }
    dend_72 { pt3dadd( 92.4993, 99.6774, -1.86272, 0.67 ) }
    dend_72 { pt3dadd( 93.4459, 100.693, -2.31995, 0.33 ) }
    dend_72 { pt3dadd( 93.6299, 100.89, -2.4285, 0.67 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 85/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 27.9419, 71.935, -16.0309, 0.33 ) }
    dend_69 { pt3dadd( 32.9676, 72.1251, -13.2558, 0.33 ) }
    dend_69 { pt3dadd( 34.8828, 72.2743, -12.2568, 0.67 ) }
    dend_69 { pt3dadd( 40.5432, 72.9407, -9.02794, 0.33 ) }
    dend_69 { pt3dadd( 41.9866, 73.1555, -8.2393, 1.33 ) }
    dend_69 { pt3dadd( 43.7606, 73.4619, -7.29403, 0.33 ) }
    dend_69 { pt3dadd( 44.8632, 73.6888, -6.71016, 0.67 ) }
    dend_69 { pt3dadd( 46.0759, 74.0947, -6.04718, 0.33 ) }
    dend_69 { pt3dadd( 50.2459, 75.9639, -4.63741, 1.33 ) }
    dend_69 { pt3dadd( 52.0458, 77.2061, -4.59456, 0.33 ) }
    dend_69 { pt3dadd( 52.3546, 77.4494, -4.66961, 0.67 ) }
    dend_69 { pt3dadd( 53.3815, 78.3215, -5.08651, 0.33 ) }
    dend_69 { pt3dadd( 54.7625, 79.5213, -5.78907, 0.67 ) }
    dend_69 { pt3dadd( 58.6754, 83.1265, -8.34806, 0.33 ) }
    dend_69 { pt3dadd( 60.5991, 85.0132, -9.95446, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_69 { pt3dadd( 63.0992, 87.4634, -12.0644, 0.33 ) }
    dend_69 { pt3dadd( 65.221, 89.429, -13.8623, 1.33 ) }
    // Section: dend_63, id: dend_63, parent: dend_53 (entry count 2/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -10.0828, 48.8535, 1.90061, 0.33 ) }
    dend_63 { pt3dadd( -11.9253, 49.429, 1.77976, 0.33 ) }
    dend_63 { pt3dadd( -14.6106, 50.139, 1.69603, 0.33 ) }
    dend_63 { pt3dadd( -15.1489, 50.2792, 1.68475, 0.67 ) }
    dend_63 { pt3dadd( -19.7327, 51.3529, 1.51034, 0.33 ) }
    dend_63 { pt3dadd( -21.3741, 51.7381, 1.41692, 0.67 ) }
    dend_63 { pt3dadd( -23.2685, 52.1903, 1.29508, 0.33 ) }
    dend_63 { pt3dadd( -23.5437, 52.2484, 1.26718, 0.67 ) }
    dend_63 { pt3dadd( -24.9123, 52.4225, 1.15189, 0.33 ) }
    dend_63 { pt3dadd( -27.1382, 52.6019, 0.992153, 0.33 ) }
    dend_63 { pt3dadd( -29.2486, 52.7756, 0.857039, 0.33 ) }
    dend_63 { pt3dadd( -29.9094, 52.8315, 0.788296, 1.33 ) }
    dend_63 { pt3dadd( -33.192, 53.1489, 0.337938, 0.33 ) }
    dend_63 { pt3dadd( -35.2629, 53.3153, 0.0836483, 0.33 ) }
    dend_63 { pt3dadd( -36.6385, 53.3392, -0.0391207, 1.33 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 17/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -10.0828, 48.8535, 1.90061, 0.67 ) }
    dend_54 { pt3dadd( -10.5378, 51.7462, 1.87366, 0.67 ) }
    dend_54 { pt3dadd( -11.0671, 55.4362, 1.74924, 0.67 ) }
    dend_54 { pt3dadd( -11.301, 57.8653, 1.58606, 0.67 ) }
    dend_54 { pt3dadd( -11.5428, 61.8764, 1.26643, 0.67 ) }
    dend_54 { pt3dadd( -11.6344, 63.9364, 1.08936, 0.67 ) }
    dend_54 { pt3dadd( -11.6064, 66.5615, 0.741561, 0.67 ) }
    dend_54 { pt3dadd( -11.4824, 68.1581, 0.435141, 1.33 ) }
    dend_54 { pt3dadd( -11.1527, 70.4449, -0.0942607, 0.67 ) }
    dend_54 { pt3dadd( -10.8117, 72.7751, -0.523199, 2.0 ) }
    dend_54 { pt3dadd( -10.5542, 74.4029, -0.857597, 1.33 ) }
    dend_54 { pt3dadd( -9.82208, 78.6126, -1.67631, 1.33 ) }
    dend_54 { pt3dadd( -9.53168, 80.4958, -2.00876, 0.67 ) }
    dend_54 { pt3dadd( -9.14382, 83.7176, -2.53644, 0.67 ) }
    dend_54 { pt3dadd( -8.86895, 88.5621, -3.1812, 1.33 ) }
    dend_54 { pt3dadd( -8.8153, 91.9612, -3.58267, 1.33 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 33/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -72.1332, 129.22, -76.7297, 0.33 ) }
    dend_42 { pt3dadd( -66.7871, 135.232, -78.6144, 0.33 ) }
    dend_42 { pt3dadd( -66.504, 135.551, -78.7142, 0.67 ) }
    dend_42 { pt3dadd( -65.7285, 136.423, -78.9876, 0.33 ) }
    dend_42 { pt3dadd( -65.2444, 136.967, -79.1583, 0.67 ) }
    dend_42 { pt3dadd( -63.001, 139.49, -79.9491, 0.33 ) }
    dend_42 { pt3dadd( -60.8884, 141.866, -80.6939, 2.0 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 40/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -72.1332, 129.22, -76.7297, 0.33 ) }
    dend_41 { pt3dadd( -73.8049, 129.86, -77.9492, 0.33 ) }
    dend_41 { pt3dadd( -74.1466, 129.991, -78.1983, 0.67 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 43/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 65.221, 89.429, -13.8623, 0.33 ) }
    dend_71 { pt3dadd( 65.4853, 88.6186, -11.8486, 0.33 ) }
    dend_71 { pt3dadd( 65.5313, 88.4776, -11.4982, 0.67 ) }
    dend_71 { pt3dadd( 65.7322, 87.8617, -9.96796, 0.33 ) }
    dend_71 { pt3dadd( 65.7782, 87.7207, -9.61756, 0.67 ) }
    dend_71 { pt3dadd( 66.226, 86.3479, -6.20669, 0.33 ) }
    dend_71 { pt3dadd( 66.6414, 85.0746, -3.04267, 0.67 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 50/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 65.221, 89.429, -13.8623, 0.67 ) }
    dend_70 { pt3dadd( 67.8585, 92.5343, -19.6106, 0.67 ) }
    dend_70 { pt3dadd( 68.514, 93.321, -20.7632, 1.33 ) }
    dend_70 { pt3dadd( 69.3784, 94.3121, -21.8992, 0.33 ) }
    dend_70 { pt3dadd( 69.8011, 94.7785, -22.3564, 0.67 ) }
    dend_70 { pt3dadd( 70.5404, 95.6388, -23.0823, 0.67 ) }
    dend_70 { pt3dadd( 72.3625, 97.7369, -24.5727, 0.67 ) }
    dend_70 { pt3dadd( 73.7364, 99.183, -24.9826, 0.33 ) }
    dend_70 { pt3dadd( 74.8551, 100.269, -25.2878, 0.33 ) }
    dend_70 { pt3dadd( 75.4758, 100.849, -25.4102, 0.67 ) }
    dend_70 { pt3dadd( 76.2414, 101.599, -25.5943, 0.67 ) }
    dend_70 { pt3dadd( 77.4523, 102.835, -25.8896, 0.33 ) }
    dend_70 { pt3dadd( 78.5745, 104.021, -26.1998, 1.33 ) }
    dend_70 { pt3dadd( 79.9672, 105.657, -26.8359, 0.33 ) }
    dend_70 { pt3dadd( 80.3899, 106.235, -27.0697, 0.67 ) }
    dend_70 { pt3dadd( 81.681, 108.134, -27.7161, 0.33 ) }
    dend_70 { pt3dadd( 81.9221, 108.531, -27.8294, 0.67 ) }
    dend_70 { pt3dadd( 83.133, 111.093, -28.3794, 0.33 ) }
    dend_70 { pt3dadd( 83.2501, 111.406, -28.3508, 0.67 ) }
    dend_70 { pt3dadd( 83.5587, 112.482, -27.841, 0.33 ) }
    dend_70 { pt3dadd( 84.0131, 114.159, -26.5556, 0.67 ) }
    dend_70 { pt3dadd( 84.246, 115.059, -25.7622, 0.33 ) }
    dend_70 { pt3dadd( 84.354, 115.475, -25.3937, 0.67 ) }
    dend_70 { pt3dadd( 85.0454, 118.256, -22.9641, 0.67 ) }
    dend_70 { pt3dadd( 85.4194, 119.647, -21.9456, 0.33 ) }
    dend_70 { pt3dadd( 86.1457, 122.084, -20.4996, 0.33 ) }
    dend_70 { pt3dadd( 86.4948, 123.162, -20.0217, 0.67 ) }
    dend_70 { pt3dadd( 87.1962, 125.222, -19.2188, 0.33 ) }
    dend_70 { pt3dadd( 87.6321, 126.456, -18.8769, 0.67 ) }
    dend_70 { pt3dadd( 88.4149, 128.445, -18.7091, 0.67 ) }
    dend_70 { pt3dadd( 89.0045, 129.664, -18.6799, 0.33 ) }
    dend_70 { pt3dadd( 89.154, 129.936, -18.7246, 0.67 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 82/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -36.6385, 53.3392, -0.0391207, 0.67 ) }
    dend_67 { pt3dadd( -41.8523, 51.9019, 0.347822, 0.67 ) }
    dend_67 { pt3dadd( -43.0093, 51.5576, 0.421591, 0.67 ) }
    dend_67 { pt3dadd( -45.0621, 50.8893, 0.554403, 0.33 ) }
    dend_67 { pt3dadd( -47.2603, 50.1463, 0.669986, 0.67 ) }
    dend_67 { pt3dadd( -48.9477, 49.5327, 0.747974, 0.33 ) }
    dend_67 { pt3dadd( -49.687, 49.2546, 0.846615, 0.67 ) }
    dend_67 { pt3dadd( -51.6789, 48.5275, 1.31368, 0.33 ) }
    dend_67 { pt3dadd( -52.4894, 48.1951, 1.51907, 0.67 ) }
    dend_67 { pt3dadd( -54.2547, 47.3543, 2.13167, 0.33 ) }
    dend_67 { pt3dadd( -54.9002, 46.9972, 2.41931, 0.67 ) }
    dend_67 { pt3dadd( -58.6767, 44.9168, 4.25143, 0.33 ) }
    dend_67 { pt3dadd( -60.3062, 44.033, 5.08351, 0.67 ) }
    dend_67 { pt3dadd( -63.4294, 42.3059, 6.80898, 0.67 ) }
    dend_67 { pt3dadd( -66.6067, 40.5515, 8.59415, 0.67 ) }
    dend_67 { pt3dadd( -68.9226, 39.1699, 10.0175, 0.33 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 98/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -36.6385, 53.3392, -0.0391207, 1.33 ) }
    dend_64 { pt3dadd( -39.2161, 51.4793, -0.724581, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    // Section: dend_60, id: dend_60, parent: dend_54 (entry count 0/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -8.8153, 91.9612, -3.58267, 0.67 ) }
    dend_60 { pt3dadd( -8.72394, 93.7371, -2.58597, 0.67 ) }
    dend_60 { pt3dadd( -8.59383, 96.2661, -1.16656, 0.67 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 3/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -8.8153, 91.9612, -3.58267, 0.67 ) }
    dend_55 { pt3dadd( -10.0206, 93.1852, -3.93625, 0.67 ) }
    dend_55 { pt3dadd( -11.0708, 94.409, -4.34542, 0.33 ) }
    dend_55 { pt3dadd( -11.9353, 95.684, -4.63342, 0.67 ) }
    dend_55 { pt3dadd( -12.8545, 97.1915, -4.90916, 0.33 ) }
    dend_55 { pt3dadd( -14.9558, 100.859, -5.48446, 0.67 ) }
    dend_55 { pt3dadd( -16.5318, 103.78, -5.87911, 0.33 ) }
    dend_55 { pt3dadd( -17.4027, 105.895, -6.21096, 0.67 ) }
    dend_55 { pt3dadd( -18.5574, 109.62, -6.8353, 0.33 ) }
    dend_55 { pt3dadd( -18.6587, 110.033, -6.90427, 0.67 ) }
    dend_55 { pt3dadd( -18.9604, 111.497, -7.15235, 0.33 ) }
    dend_55 { pt3dadd( -19.3669, 113.74, -7.42451, 2.0 ) }
    dend_55 { pt3dadd( -20.3596, 118.95, -7.74443, 0.67 ) }
    dend_55 { pt3dadd( -21.2091, 123.368, -7.88314, 1.33 ) }
    dend_55 { pt3dadd( -21.6053, 125.495, -8.0997, 0.33 ) }
    dend_55 { pt3dadd( -21.6749, 125.909, -8.15307, 0.67 ) }
    dend_55 { pt3dadd( -22.3484, 129.407, -8.46055, 0.33 ) }
    dend_55 { pt3dadd( -22.5216, 130.061, -8.4748, 0.67 ) }
    dend_55 { pt3dadd( -23.2453, 132.079, -8.28494, 0.33 ) }
    dend_55 { pt3dadd( -25.3676, 137.637, -7.63566, 0.67 ) }
    dend_55 { pt3dadd( -25.854, 138.891, -7.51682, 0.33 ) }
    dend_55 { pt3dadd( -27.5567, 143.026, -7.35854, 0.67 ) }
    dend_55 { pt3dadd( -28.8652, 145.862, -7.61014, 0.67 ) }
    dend_55 { pt3dadd( -29.6018, 147.233, -7.59981, 1.33 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -39.2161, 51.4793, -0.724581, 0.67 ) }
    dend_66 { pt3dadd( -43.2668, 49.1484, 7.27249, 0.67 ) }
    dend_66 { pt3dadd( -43.7418, 48.8752, 8.21014, 0.67 ) }
    dend_66 { pt3dadd( -45.5849, 47.8146, 11.8489, 0.67 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 31/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -39.2161, 51.4793, -0.724581, 0.33 ) }
    dend_65 { pt3dadd( -40.1175, 50.3782, 0.302716, 0.33 ) }
    dend_65 { pt3dadd( -41.3322, 48.5038, 1.84826, 0.33 ) }
    dend_65 { pt3dadd( -42.8515, 45.7222, 3.80886, 0.67 ) }
    dend_65 { pt3dadd( -43.9526, 43.6585, 5.15975, 0.33 ) }
    dend_65 { pt3dadd( -45.7957, 40.3703, 7.26161, 0.33 ) }
    dend_65 { pt3dadd( -46.6582, 38.8316, 8.24515, 0.33 ) }
    dend_65 { pt3dadd( -48.4102, 36.1424, 9.97881, 0.67 ) }
    dend_65 { pt3dadd( -49.6965, 34.4227, 10.9957, 0.67 ) }
    dend_65 { pt3dadd( -50.7226, 32.9138, 11.6676, 0.67 ) }
    dend_65 { pt3dadd( -51.1272, 32.123, 12.0494, 0.67 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 42/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -8.59383, 96.2661, -1.16656, 0.33 ) }
    dend_62 { pt3dadd( -9.78622, 97.7441, -1.58564, 0.33 ) }
    dend_62 { pt3dadd( -10.118, 98.1553, -1.70223, 0.67 ) }
    dend_62 { pt3dadd( -11.8024, 100.243, -2.29423, 0.33 ) }
    dend_62 { pt3dadd( -13.0193, 101.751, -2.7219, 0.67 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 47/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -8.59383, 96.2661, -1.16656, 0.67 ) }
    dend_61 { pt3dadd( -8.97016, 97.2045, 0.341661, 0.67 ) }
    dend_61 { pt3dadd( -10.7036, 100.772, 6.11708, 0.67 ) }
    dend_61 { pt3dadd( -11.6036, 102.604, 9.3701, 0.33 ) }
    dend_61 { pt3dadd( -12.0954, 103.632, 11.1554, 0.67 ) }
    dend_61 { pt3dadd( -13.0327, 105.554, 14.4435, 0.33 ) }
    dend_61 { pt3dadd( -13.6699, 106.86, 16.6788, 0.33 ) }
    dend_61 { pt3dadd( -14.6337, 108.518, 19.5594, 0.67 ) }
    dend_61 { pt3dadd( -15.3876, 109.675, 21.8249, 0.33 ) }
    dend_61 { pt3dadd( -15.9826, 110.579, 23.3783, 0.33 ) }
    dend_61 { pt3dadd( -16.289, 111.099, 24.4229, 0.33 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 58/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -29.6018, 147.233, -7.59981, 0.67 ) }
    dend_59 { pt3dadd( -28.9872, 150.252, -10.2386, 0.67 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 60/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -29.6018, 147.233, -7.59981, 0.67 ) }
    dend_56 { pt3dadd( -30.344, 147.846, -9.32512, 0.67 ) }
    dend_56 { pt3dadd( -30.9552, 148.351, -10.746, 0.67 ) }
    dend_56 { pt3dadd( -31.9944, 149.21, -13.1618, 0.33 ) }
    dend_56 { pt3dadd( -33.2997, 150.288, -16.1961, 1.33 ) }
    dend_56 { pt3dadd( -36.3944, 152.845, -23.3904, 0.33 ) }
    dend_56 { pt3dadd( -36.6058, 153.02, -23.8816, 0.67 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 67/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -36.6058, 153.02, -23.8816, 0.33 ) }
    dend_58 { pt3dadd( -37.3487, 152.968, -26.6069, 0.33 ) }
    dend_58 { pt3dadd( -37.4758, 152.967, -27.0494, 0.67 ) }
    dend_58 { pt3dadd( -38.3091, 152.957, -29.9499, 0.33 ) }
    dend_58 { pt3dadd( -38.7707, 152.952, -31.5566, 0.67 ) }
    dend_58 { pt3dadd( -40.0724, 152.937, -36.0876, 0.67 ) }
    dend_58 { pt3dadd( -41.2811, 152.923, -40.2946, 0.33 ) }
    dend_58 { pt3dadd( -41.3617, 152.93, -40.61, 0.67 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 75/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -36.6058, 153.02, -23.8816, 0.67 ) }
    dend_57 { pt3dadd( -42.6444, 159.662, -20.5196, 0.67 ) }
    dend_57 { pt3dadd( -46.3522, 163.741, -18.4553, 0.33 ) }
    dend_57 { pt3dadd( -47.0624, 164.522, -18.0599, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_2 = new SectionList()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_30, dend_25, dend_0, axon_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, axon_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_5 = new SectionList()
    dend_30 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_19 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_74 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_51 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_35 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_15 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_76 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_68 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_45 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_37 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_36 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_17 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_72 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_69 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_54 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_70 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_55 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_30 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_31 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_80 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_73 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_82 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_81 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_75 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_12 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_79 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_32 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_63 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_64 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_66 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_60 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_62 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_65 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_67 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_61 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_22 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_71 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_24 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_78 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_77 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_47 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_21 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_59 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_23 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_11 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_29 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_56 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_40 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_57 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_58 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_41 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_46 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_42 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_39 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_4 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_7 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_6 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_5 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_9 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_14 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_18 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_80, dend_80, dend_80, dend_49, dend_49, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_2, dend_2, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_73, dend_73, dend_73, dend_73, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_79 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_77 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 5
    dend_27 nseg = 3
    dend_1 nseg = 7
    dend_20 nseg = 3
    dend_13 nseg = 11
    dend_43 nseg = 5
    dend_19 nseg = 3
    dend_74 nseg = 5
    dend_51 nseg = 5
    dend_44 nseg = 3
    dend_38 nseg = 5
    dend_35 nseg = 3
    dend_15 nseg = 3
    dend_76 nseg = 5
    dend_68 nseg = 3
    dend_45 nseg = 3
    dend_37 nseg = 3
    dend_36 nseg = 3
    dend_17 nseg = 3
    dend_16 nseg = 3
    dend_72 nseg = 5
    dend_69 nseg = 3
    dend_54 nseg = 3
    dend_70 nseg = 3
    dend_55 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_DBC_280e20a247_0_0


