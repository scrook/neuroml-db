// Cell: cSTUT189_L5_NBC_42f781cf08_0_0
/*
{
  "id" : "cSTUT189_L5_NBC_42f781cf08_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.80187, -2.65497, 0.815749, 4.80603", "-7.85711, -2.42647, 0.741853, 8.49266", "-6.91236, -2.19797, 0.667957, 10.2778", "-5.96761, -1.96947, 0.594062, 12.0489", "-5.02286, -1.74096, 0.520166, 13.6363", "-4.07811, -1.51246, 0.44627, 14.7753", "-3.13335, -1.28396, 0.372375, 15.6483", "-2.1886, -1.05546, 0.298479, 16.2981", "-1.24385, -0.826954, 0.224583, 16.8319", "-0.299097, -0.598451, 0.150687, 17.082", "0.645655, -0.369949, 0.0767917, 17.31", "1.59041, -0.141446, 0.00289604, 17.538", "2.53516, 0.0870562, -0.0709997, 17.43", "3.47991, 0.315559, -0.144895, 16.9438", "4.42466, 0.544061, -0.218791, 16.4576", "5.36941, 0.772563, -0.292687, 15.5199", "6.31417, 1.00107, -0.366582, 14.2667", "7.25892, 1.22957, -0.440478, 13.0135", "8.20367, 1.45807, -0.514374, 10.6764", "9.14842, 1.68657, -0.588269, 7.11693", "10.0932, 1.91508, -0.662165, 4.00176" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-9.8861, 1.33514, -7.14961, 1.71", "-10.1074, 1.25961, -6.71616, 1.71", "-14.8875, -0.371649, 2.64499, 1.71" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-3.2361, 7.85564, -0.579609, 1.03", "-3.50411, 8.14285, -0.490214, 1.03", "-3.70437, 8.56391, 0.0522115, 0.86", "-4.10734, 9.41118, 1.1437, 0.86", "-4.34114, 9.90278, 1.777, 0.86", "-5.12982, 11.561, 3.91323, 0.86", "-5.20224, 11.7132, 4.10937, 0.86", "-6.81674, 15.9567, 9.87793, 0.86" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.0861, 8.97914, -5.19961, 1.71", "-0.78769, 11.0406, -5.08568, 1.71", "-0.696204, 11.6725, -5.05075, 0.86", "-0.429856, 13.5125, -4.94906, 0.68", "-0.177665, 15.2547, -4.85277, 0.68", "-0.0482603, 16.1486, -4.80337, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "8.1539, 5.07314, -6.22961, 1.2", "8.96527, 5.32672, -6.6332, 1.2", "10.5085, 5.80903, -7.40084, 1.2", "12.6942, 6.49213, -8.48806, 0.68", "15.1237, 7.25142, -9.69653, 0.68", "16.8754, 7.79888, -10.5678, 0.68", "17.9019, 8.11969, -11.0784, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "10.4639, -0.848862, -1.19961, 1.54", "12.056, 0.53847, 0.595886, 1.54", "13.2034, 1.53825, 1.88981, 1.54", "16.2737, 4.21366, 5.35233, 1.03", "16.8614, 4.7258, 6.01516, 1.03", "17.0889, 4.92403, 6.27171, 1.03", "18.4955, 6.14972, 7.85801, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.0039, -5.08036, -5.19961, 1.2", "1.74554, -5.17467, -5.34508, 1.2", "0.371989, -5.71642, -6.01804, 1.2", "-1.3976, -6.01782, -9.21214, 1.03", "-2.09715, -6.12909, -10.634, 0.68", "-3.37523, -6.27856, -13.2084, 0.68", "-4.22043, -6.34583, -15.145, 0.68", "-4.88939, -6.34911, -16.7132, 2.05", "-10.9376, -5.94722, -30.7725, 0.17", "-11.2422, -5.91682, -31.4649, 0.17", "-11.8341, -5.81567, -32.7355, 0.17", "-14.9541, -5.21418, -38.7768, 0.17", "-16.5308, -4.99593, -41.5701, 0.17", "-17.7082, -4.84064, -43.2648, 2.05", "-18.951, -4.81438, -44.2494, 0.17", "-19.7303, -4.8151, -44.8407, 0.17", "-21.437, -4.92449, -46.29, 0.17", "-26.0044, -5.63058, -49.8582, 2.22", "-26.4194, -5.71998, -50.5579, 0.17", "-26.9616, -5.87353, -51.6095, 0.17", "-27.5115, -6.03633, -52.7525, 0.17", "-29.8073, -6.73675, -57.8168, 0.17", "-31.129, -7.13187, -60.9247, 0.17", "-37.9416, -9.46876, -77.5931, 1.71", "-38.9136, -9.80346, -80.1131, 0.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.7139, -0.418362, -15.7696, 1.37", "1.93088, -3.12932, -15.7547, 1.37", "2.06006, -4.56466, -15.7145, 1.37", "2.23449, -6.10026, -15.6601, 1.03", "2.53722, -8.29049, -15.5763, 1.03", "3.12726, -12.1317, -15.4234, 1.03", "3.5419, -14.8311, -15.3158, 1.03", "3.93012, -17.6832, -15.1218, 1.03", "4.1243, -19.3006, -15.0061, 2.22", "4.2544, -20.4797, -14.9142, 1.54", "4.28703, -20.6943, -14.8956, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "10.0932, 1.91508, -0.662165, 0.999958", "24.6728, 5.44137, -0.662165, 0.999958", "39.2524, 8.96767, -0.662165, 0.999958" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-14.8875, -0.371649, 2.64499, 1.37", "-15.8408, -1.00365, 2.70249, 1.37", "-18.954, -3.06756, 2.89028, 1.37", "-21.9227, -5.03569, 3.06936, 1.37" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-14.8875, -0.371649, 2.64499, 0.68", "-22.6832, 0.114763, -6.9283, 0.68", "-25.2036, 0.526854, -9.8457, 0.51", "-26.8702, 0.859718, -11.7433, 0.51", "-28.475, 1.33992, -13.7396, 0.51", "-28.7549, 1.44549, -14.0933, 0.51", "-28.9512, 1.53489, -14.3279, 0.51", "-34.1318, 4.67966, -19.8584, 0.51", "-34.2065, 4.72684, -19.9408, 0.51", "-36.9422, 6.55928, -22.7118, 0.51", "-39.7587, 8.60727, -25.2485, 1.88", "-42.2187, 10.3935, -27.2725, 0.17", "-45.9279, 13.0384, -30.2081, 0.68", "-48.2781, 14.5233, -31.7773, 0.68", "-51.0296, 16.0349, -33.4811, 0.17", "-53.586, 17.195, -34.8576, 1.37", "-56.4429, 18.3344, -36.8973, 0.17", "-59.4468, 19.4852, -39.5877, 0.68", "-62.3223, 20.6067, -42.3089, 0.68", "-63.1441, 20.9389, -43.1701, 0.51", "-64.5584, 21.5136, -44.6781, 1.03", "-71.2596, 24.1682, -51.1184, 0.51", "-73.3085, 25.0491, -52.8589, 0.51", "-76.9864, 26.6263, -55.5578, 0.51", "-77.1643, 26.7118, -55.6833, 0.51", "-79.2614, 27.6634, -56.8613, 2.22", "-81.3747, 28.4704, -57.6597, 0.34", "-84.6044, 29.4071, -58.0434, 0.34", "-87.9545, 30.0841, -58.2663, 0.34", "-90.2098, 30.4697, -58.3211, 0.34", "-93.5912, 31.0113, -58.3418, 2.05", "-96.1595, 31.3776, -58.2732, 0.17", "-101.512, 32.1372, -57.8688, 0.17", "-104.229, 32.5039, -57.4576, 0.17", "-106.768, 32.8138, -57.0176, 2.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-6.81674, 15.9567, 9.87793, 0.68", "-7.19653, 16.9737, 10.5506, 0.68", "-7.40351, 17.3819, 10.7818, 0.51", "-7.72761, 17.9878, 10.9898, 0.51", "-7.98016, 18.4927, 11.1459, 0.51", "-8.04872, 18.6247, 11.1831, 1.37", "-8.18905, 18.876, 11.2505, 0.68", "-8.44091, 19.2908, 11.3068, 0.34", "-9.07591, 20.1749, 11.4186, 0.34", "-9.43535, 20.5971, 11.481, 0.34", "-9.78743, 20.9984, 11.5278, 0.34", "-9.9944, 21.238, 11.5558, 1.37", "-10.1893, 21.4691, 11.5827, 0.17", "-10.3409, 21.6338, 11.6027, 0.17", "-10.9279, 22.0554, 11.6333, 0.17", "-11.2358, 22.2425, 11.612, 0.17", "-12.1823, 24.3711, 12.4145, 0.17", "-12.7731, 26.5018, 13.4982, 0.17", "-13.367, 28.3891, 14.9321, 0.17", "-14.3381, 30.3278, 16.0697, 0.17", "-15.4912, 32.304, 16.9522, 0.17", "-16.9547, 33.9117, 18.0319, 0.17", "-18.1773, 35.4495, 19.4485, 0.17", "-19.4259, 37.2574, 20.5099, 0.17", "-20.4892, 39.2809, 21.4074, 0.17", "-21.3569, 41.5415, 21.9201, 0.17", "-22.0894, 43.9068, 22.1218, 0.17", "-22.8538, 46.2709, 22.1409, 0.17" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-6.81674, 15.9567, 9.87793, 0.51", "-6.2748, 17.7539, 9.7315, 0.51", "-5.9838, 18.5851, 9.66102, 0.51", "-5.00732, 20.9911, 9.43199, 0.51", "-4.27836, 22.5517, 9.42205, 0.51", "-4.14341, 22.86, 9.41731, 0.51", "-2.25975, 27.4564, 9.32594, 0.51", "-1.84379, 28.7657, 9.249, 0.51", "-1.44265, 30.2993, 9.2459, 0.51", "-0.451141, 33.8772, 9.39601, 0.51", "0.33516, 36.6456, 9.24141, 1.71", "0.505574, 37.2437, 9.15441, 0.17", "1.43623, 40.7172, 8.32957, 1.03", "2.7146, 45.6234, 6.88129, 0.68", "3.58926, 48.6246, 5.81512, 0.51", "5.4342, 53.6233, 3.66249, 0.51", "6.0949, 54.9954, 3.07712, 1.54", "6.73013, 56.11, 2.55437, 0.17", "6.90529, 56.3581, 2.41897, 0.68", "8.43896, 58.438, 0.92359, 0.68", "9.13236, 59.3805, 0.413961, 1.37", "9.44454, 59.8174, 0.357089, 0.17", "9.62843, 60.1055, 0.332462, 0.17", "9.73213, 60.2876, 0.321204, 0.17", "10.4792, 61.7364, 0.206806, 0.17", "10.5415, 61.8774, 0.198211, 0.17", "11.1735, 63.4816, 0.100603, 0.17", "11.7238, 64.8893, 0.00116899, 1.37", "12.4, 66.6594, -0.148658, 0.17", "13.633, 69.8304, -0.503783, 0.17" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-0.0482603, 16.1486, -4.80337, 0.68", "-1.20418, 17.652, -4.42568, 0.68", "-1.90712, 18.5662, -4.19601, 0.68", "-2.2997, 19.0768, -4.06774, 1.03" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-0.0482603, 16.1486, -4.80337, 0.68", "1.54282, 18.5001, -6.10931, 0.68", "3.21833, 20.5886, -7.65042, 0.68", "3.70293, 21.1556, -7.92944, 0.68", "5.65476, 22.7046, -8.1456, 0.68", "8.18531, 24.7129, -8.42586, 0.17", "12.8731, 28.4332, -8.94502, 0.17", "14.1668, 29.3513, -8.93684, 0.17", "19.6391, 32.7844, -8.49022, 0.17", "27.5141, 37.0687, -7.35052, 0.17" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "17.9019, 8.11969, -11.0784, 0.17", "23.6154, 10.7962, -14.0353, 0.17", "25.3962, 11.6388, -14.745, 0.17", "25.6437, 11.7531, -14.8283, 0.17", "29.3383, 13.4165, -15.9161, 0.17", "34.1345, 15.5451, -17.2396, 1.88", "36.1862, 16.4426, -17.7845, 0.17", "39.1722, 17.7041, -18.4446, 0.17", "40.6729, 18.3608, -18.8761, 1.37", "42.1696, 19.0262, -19.3854, 0.17", "42.5695, 19.2203, -19.5316, 0.17", "42.7298, 19.312, -19.6122, 0.17", "47.8328, 22.6951, -22.7935, 0.17", "50.0701, 24.3547, -24.2353, 1.71", "50.4525, 24.6875, -24.5323, 0.17", "53.3297, 27.4691, -26.9206, 0.17", "57.2553, 31.3804, -30.1268, 1.71", "57.3797, 31.5068, -30.2243, 0.17", "60.1436, 34.3718, -32.2557, 0.17", "63.6702, 38.1183, -35.3202, 1.71", "64.9338, 39.3391, -36.4224, 0.17", "66.2899, 40.4939, -37.5389, 0.17", "67.6657, 41.4971, -38.4371, 1.71", "68.7496, 42.2272, -39.1047, 0.17", "74.5682, 45.5495, -42.4527, 0.17", "76.8802, 46.7572, -43.5734, 0.17", "78.9497, 47.8228, -44.5509, 1.71", "80.4278, 48.5963, -45.2251, 0.17", "86.043, 51.4636, -47.6207, 0.17", "88.5318, 52.5616, -48.3074, 1.71", "89.7793, 52.8461, -47.9517, 0.17", "91.8708, 53.0315, -46.382, 0.17", "91.9577, 52.9975, -46.205, 0.17", "92.2252, 52.8437, -45.5318, 1.37", "97.382, 49.8855, -32.8556, 0.17", "99.1872, 48.8776, -28.4685, 0.17", "99.7156, 48.582, -27.2069, 1.2", "108.313, 44.3891, -8.26491, 0.17", "108.496, 44.3165, -7.90285, 0.17", "111.375, 43.2657, -2.38081, 0.17", "111.608, 43.1993, -1.99324, 1.88", "111.903, 43.0706, -1.45956, 0.17", "114.689, 42.0058, 3.18097, 0.17", "115.28, 42.2181, 3.19747, 1.54" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "17.9019, 8.11969, -11.0784, 0.34", "16.7517, 12.8805, -12.239, 0.34", "16.3999, 15.0129, -12.7835, 0.34", "15.8878, 18.7079, -13.7387, 0.34", "15.297, 24.5187, -15.3962, 0.68", "14.8917, 29.0378, -16.9555, 0.68", "14.1982, 37.2208, -20.0529, 0.68", "13.8568, 43.2877, -22.7155, 0.68", "13.8587, 43.4957, -22.8162, 0.68", "14.3552, 48.4913, -25.227, 0.68", "15.1305, 53.0073, -27.3598, 0.34", "16.2865, 58.3388, -29.8386, 0.34", "17.0924, 61.6671, -31.2638, 0.34", "19.4141, 70.6091, -34.8345, 0.34", "22.1117, 80.6691, -38.4185, 0.34", "22.5511, 82.2598, -38.8832, 2.05", "22.9435, 83.6154, -39.2047, 0.17", "24.594, 88.9386, -40.4007, 0.17", "24.7822, 89.6183, -40.5301, 0.68", "24.8912, 90.2176, -40.5935, 0.17", "25.2211, 94.0683, -41.0589, 0.17", "25.2238, 94.6032, -41.1331, 1.54", "25.1911, 95.4574, -41.278, 0.17", "24.9199, 98.7006, -41.921, 0.17", "24.7458, 100.556, -42.3149, 1.54", "24.6653, 101.263, -42.4727, 0.17", "23.943, 106.871, -43.7839, 0.17", "23.7341, 108.472, -44.1556, 1.2", "23.592, 109.515, -44.3955, 0.17", "23.1104, 113.077, -45.1786, 0.17", "22.8681, 114.763, -45.5222, 1.88", "22.78, 115.361, -45.6348, 0.17", "22.2777, 118.894, -46.2293, 0.17", "22.0229, 120.563, -46.476, 0.17", "21.3515, 125.006, -47.1326, 0.17", "20.8037, 128.513, -47.6518, 0.17", "20.7389, 129.045, -47.7295, 1.37", "20.6782, 130.232, -47.8979, 0.17", "20.7212, 134.843, -48.5359, 0.17", "20.8572, 137.111, -48.8431, 1.2", "21.0818, 138.622, -49.0398, 0.17", "21.8713, 141.745, -49.4276, 0.17", "23.5579, 147.077, -50.0696, 0.17", "23.7563, 147.57, -50.1266, 1.54", "23.9912, 148.014, -50.1746, 0.17", "25.6461, 150.606, -50.4379, 0.17", "27.52, 153.058, -50.669, 0.17", "27.629, 153.188, -50.6806, 0.17", "27.9475, 153.545, -50.7116, 1.88", "28.4349, 154.096, -50.7596, 0.17", "30.4737, 156.372, -50.9566, 0.17", "32.225, 158.384, -51.1337, 0.17", "33.5595, 159.908, -51.2674, 1.54", "33.6632, 160.03, -51.2783, 1.54" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "18.4955, 6.14972, 7.85801, 0.68", "19.0798, 9.33823, 8.22018, 0.68", "19.5441, 11.8716, 8.50795, 0.68", "20.1308, 15.0733, 8.87162, 0.68", "20.6202, 17.7442, 9.17499, 0.68", "21.2299, 21.071, 9.55288, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "18.4955, 6.14972, 7.85801, 0.68", "20.7156, 6.32348, 8.8382, 0.68", "22.7476, 6.48252, 9.73537, 0.68", "26.4485, 6.77216, 11.3694, 0.68", "29.5151, 7.01217, 12.7233, 0.68", "37.3822, 8.40575, 16.11, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.28703, -20.6943, -14.8956, 0.17", "6.3368, -21.9145, 0.283971, 0.17", "6.40066, -21.9459, 0.546605, 0.17", "7.27184, -22.2961, 2.48183, 0.17", "8.19252, -22.7054, 3.411, 0.17", "9.50169, -23.3452, 4.25999, 1.37", "11.478, -24.3818, 5.22575, 0.17", "13.9927, -25.7063, 5.11486, 0.68", "15.3617, -26.4131, 5.06176, 0.17", "18.4023, -27.9953, 4.95145, 0.86", "18.8944, -28.1968, 4.94452, 0.17", "19.5445, -28.394, 4.9565, 0.17", "21.2508, -28.7373, 5.03296, 0.17", "23.6792, -29.1088, 5.19721, 1.2", "24.6123, -29.2189, 5.26079, 1.2", "28.923, -29.5051, 5.55757, 0.17", "33.7899, -29.8921, 5.89177, 0.68", "35.5119, -30.0599, 6.00958, 0.17", "38.0103, -30.4055, 6.17907, 0.17", "39.6624, -30.7439, 6.28963, 1.37", "40.8061, -31.0598, 6.36502, 0.17", "43.6861, -32.1537, 6.55069, 0.17", "44.7051, -32.5806, 6.61583, 1.88", "46.1039, -33.1703, 6.70519, 0.17", "48.9905, -34.4056, 7.45898, 0.17", "51.7059, -35.5696, 8.55429, 0.17", "53.4394, -36.2667, 9.41673, 2.05", "54.272, -36.5946, 9.89601, 0.17", "57.6547, -37.9942, 12.3938, 0.17", "64.3383, -40.5802, 17.9056, 2.05", "64.6364, -40.692, 18.1801, 0.17", "66.842, -41.489, 20.5004, 0.17", "68.2297, -41.9902, 22.0159, 1.71", "72.0793, -43.4293, 26.2945, 0.17", "74.8118, -44.4133, 29.3121, 0.17", "75.0062, -44.4699, 29.48, 0.86", "77.98, -45.2569, 31.9296, 0.17", "79.962, -45.7096, 33.4905, 0.17", "80.1156, -45.7334, 33.5845, 0.17", "80.9545, -45.8623, 34.0309, 1.88", "82.1963, -46.2095, 34.8341, 0.17", "84.2612, -46.9489, 36.1035, 0.17", "84.7569, -47.1422, 36.3796, 1.37", "85.9446, -47.6997, 37.6935, 0.34", "88.7911, -49.2568, 41.6443, 0.17", "90.0563, -50.0107, 43.61, 0.17", "91.2107, -50.7688, 45.6634, 0.17", "91.7109, -51.1243, 46.6898, 2.05", "96.1471, -54.4231, 56.5689, 0.17", "96.4184, -54.6352, 57.2445, 1.71", "103.973, -58.006, 64.5693, 1.71" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.28703, -20.6943, -14.8956, 1.2", "3.32313, -22.9556, -14.3454, 1.2", "1.63397, -27.039, -13.4368, 0.68", "0.34687, -30.2202, -12.7667, 2.22", "-0.24267, -31.9428, -12.4352, 0.86", "-0.517532, -32.7459, -12.2806, 0.68", "-1.38084, -35.2684, -11.7952, 0.68", "-1.72897, -36.242, -11.5948, 1.54", "-1.77998, -36.4068, -11.565, 1.54", "-2.30151, -39.03, -11.587, 1.54" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "39.2524, 8.96767, -0.662165, 0.17", "53.8321, 12.494, -0.662165, 0.17", "68.4117, 16.0203, -0.662165, 0.17" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-21.9227, -5.03569, 3.06936, 0.86", "-22.7414, -6.3787, 1.82423, 0.86", "-23.7504, -7.66986, 0.355484, 0.68", "-25.0913, -9.10055, -1.48092, 0.68", "-29.4035, -13.1429, -7.1415, 0.68", "-31.4912, -14.8189, -9.71596, 0.68", "-33.548, -16.1619, -12.1349, 0.68", "-35.9929, -17.1825, -14.7689, 1.2", "-36.9349, -17.3424, -15.656, 1.2", "-37.4701, -17.3245, -16.0285, 0.68", "-39.2464, -17.0165, -16.7381, 0.68", "-41.9495, -16.3522, -17.7342, 0.51", "-43.342, -16.0273, -18.0426, 0.51", "-45.8501, -15.6765, -18.2565, 1.88", "-48.4239, -15.56, -18.4279, 1.88", "-50.4543, -15.7419, -18.5026, 1.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-21.9227, -5.03569, 3.06936, 0.86", "-24.1063, -4.38088, 0.905353, 0.86", "-27.3697, -3.69326, -2.23937, 0.86", "-29.7578, -3.2434, -4.39676, 0.86", "-36.4986, -1.7868, -9.86051, 0.86", "-38.7565, -1.2555, -11.554, 0.86", "-45.2817, 0.336425, -16.341, 0.86", "-46.7522, 0.697608, -17.4092, 0.86", "-49.1193, 1.27776, -19.057, 0.86", "-53.2098, 2.26864, -21.7489, 0.86", "-56.4552, 2.98788, -23.8135, 0.51", "-60.074, 3.81952, -26.0151, 0.34", "-64.0496, 4.86713, -28.1294, 0.17", "-66.8812, 5.53165, -29.5878, 0.17", "-69.3956, 5.94789, -30.8246, 2.05", "-71.3293, 6.10481, -31.6126, 0.17", "-73.2404, 6.21343, -32.0628, 0.17", "-74.4499, 6.25854, -32.1516, 0.68", "-77.4005, 6.28391, -32.0908, 0.34", "-78.3433, 6.26153, -32.0736, 0.17", "-80.8061, 6.19316, -31.9504, 1.88", "-81.9797, 6.12447, -31.7882, 0.17", "-83.6383, 5.98206, -31.4456, 0.17", "-85.4654, 5.76016, -30.979, 1.2", "-86.5432, 5.61783, -30.6613, 0.17", "-90.0372, 5.22136, -29.5892, 0.17", "-92.8463, 4.97655, -28.416, 1.71", "-94.0745, 4.89003, -27.816, 0.17", "-95.7058, 4.84363, -26.9358, 0.17", "-97.1866, 4.89652, -26.1203, 2.39", "-99.1148, 4.98748, -25.1654, 0.68", "-103.178, 5.13151, -23.4918, 0.17", "-104.425, 5.14789, -23.0771, 0.17", "-105.823, 5.144, -22.6044, 1.2", "-108.266, 5.07601, -21.7941, 0.17", "-111.743, 4.8911, -20.7713, 0.17", "-113.627, 4.75432, -20.3999, 2.22", "-114.252, 4.69856, -20.3875, 2.22" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-106.768, 32.8138, -57.0176, 0.17", "-107.344, 33.8979, -57.0512, 0.17", "-107.699, 34.5084, -57.0698, 0.17", "-108.785, 36.3116, -57.1241, 0.17", "-108.944, 36.5551, -57.1308, 0.17", "-110.773, 39.3231, -57.2028, 0.17", "-111.779, 40.8305, -57.2408, 1.2", "-112.099, 41.3223, -57.25, 0.17", "-112.171, 41.4337, -57.2557, 0.17", "-115.249, 46.1106, -57.622, 0.17", "-116.241, 47.6549, -57.7756, 1.54", "-116.701, 48.3878, -57.8666, 0.17", "-117.901, 50.3936, -58.1473, 0.17", "-118.704, 51.7839, -58.3964, 1.2", "-119.043, 52.4163, -58.5365, 0.17", "-119.093, 52.5266, -58.5706, 0.17", "-119.465, 53.4015, -58.8577, 0.17", "-119.82, 54.2866, -59.1391, 1.37", "-120.417, 55.601, -59.5184, 0.17", "-121.285, 57.3154, -60.0582, 0.17", "-121.348, 57.4247, -60.0995, 0.17", "-121.741, 58.0408, -60.3639, 1.03", "-121.956, 58.3284, -60.5651, 0.17", "-122.802, 59.3434, -61.4086, 0.17", "-124.031, 60.7163, -62.6354, 1.71", "-124.643, 61.3876, -63.2302, 0.17", "-124.717, 61.4701, -63.2994, 0.17", "-127.525, 64.7357, -65.8761, 0.17", "-128.224, 65.6069, -66.4875, 1.37", "-128.495, 65.9743, -66.7297, 0.17", "-129.606, 67.5486, -67.6284, 0.17", "-129.939, 68.0431, -67.8841, 1.54", "-130.503, 68.8786, -68.2168, 0.17", "-131.193, 69.8759, -68.4346, 0.17", "-132.171, 71.219, -68.6982, 1.88", "-132.723, 71.9436, -68.8174, 0.17", "-133.631, 73.0606, -68.9628, 0.17", "-134.606, 74.182, -69.0603, 1.54", "-135.048, 74.6567, -69.0803, 0.17", "-136.302, 75.9472, -69.0785, 0.17", "-137.251, 76.9013, -69.0297, 1.71", "-138.037, 77.6656, -69.0035, 0.17", "-139.092, 78.6652, -68.9953, 0.17", "-139.71, 79.1952, -69.012, 2.22", "-140.437, 79.7706, -69.0337, 0.17", "-141.594, 80.6063, -69.0718, 0.17", "-141.891, 80.8146, -69.0816, 1.88", "-142.861, 81.4855, -69.1137, 0.17", "-145.423, 83.2203, -69.1987, 0.17", "-146.253, 83.7688, -69.2263, 1.03", "-147.32, 84.4693, -69.2149, 0.17", "-149.494, 85.8717, -69.1209, 0.17", "-150.261, 86.3735, -69.0671, 2.05", "-151.525, 87.2068, -68.8084, 0.17", "-153.294, 88.3217, -68.2118, 0.17", "-154.833, 89.1362, -67.5304, 1.03", "-155.4, 89.355, -67.2231, 0.17", "-156.237, 89.5959, -66.7013, 0.17", "-159.354, 90.2894, -64.6462, 0.17", "-160.867, 90.5257, -63.6414, 0.17", "-162.246, 90.6902, -62.775, 0.17", "-165.569, 91.0171, -61.0698, 0.17", "-165.81, 91.0436, -60.9858, 1.71", "-166.311, 91.1081, -60.9046, 0.17", "-167.625, 91.3999, -61.1006, 0.17", "-168.689, 91.7596, -61.4392, 0.17", "-170.41, 92.4465, -62.0064, 0.17", "-173.389, 93.6297, -63.0367, 1.37", "-174.086, 93.8925, -63.2332, 0.17", "-176.163, 94.5967, -63.6578, 0.17", "-178.721, 95.3612, -63.8707, 0.17", "-181.452, 96.1039, -63.8848, 1.03", "-182.219, 96.3058, -63.8003, 0.17", "-182.82, 96.4338, -63.64, 0.17", "-185.079, 96.8018, -62.9693, 0.17", "-186.478, 96.9031, -62.3353, 1.03" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-106.768, 32.8138, -57.0176, 0.34", "-108.262, 32.2219, -57.8447, 0.34", "-109.95, 31.6513, -58.6749, 0.34", "-110.443, 31.4665, -58.9068, 0.34", "-110.606, 31.4014, -58.9776, 0.34", "-112.638, 30.5377, -60.055, 0.34", "-114.187, 29.8249, -60.9112, 0.34", "-115.64, 29.1275, -61.6452, 1.03", "-116.353, 28.7516, -61.9836, 0.68", "-117.299, 28.201, -62.5512, 0.86", "-118.939, 27.126, -63.726, 0.17", "-120.536, 25.9189, -65.0322, 0.17", "-121.141, 25.4465, -65.5401, 1.37", "-122.0, 24.8178, -66.1842, 0.17", "-124.867, 22.8951, -68.1851, 0.17", "-124.974, 22.8321, -68.248, 0.17", "-125.967, 22.3537, -68.6734, 1.03", "-126.588, 22.1538, -68.8929, 0.34", "-128.177, 21.8982, -69.3744, 0.34", "-128.439, 21.8882, -69.4354, 0.34", "-130.266, 21.8738, -69.6705, 0.17", "-130.862, 21.862, -69.7627, 2.05", "-132.651, 21.8538, -70.0781, 0.17", "-134.158, 21.8205, -70.3298, 0.17", "-134.431, 21.8083, -70.3722, 0.17", "-137.821, 21.6149, -70.838, 0.17", "-139.072, 21.5261, -71.0931, 1.03", "-140.312, 21.4054, -71.3973, 0.17", "-142.403, 21.1448, -71.9615, 0.17", "-143.875, 20.9132, -72.3706, 0.17", "-145.634, 20.6447, -72.9998, 1.54", "-148.344, 20.234, -74.2294, 0.17", "-149.771, 19.9644, -74.9723, 0.17", "-150.692, 19.7531, -75.5185, 0.86", "-151.335, 19.5808, -75.9474, 0.17", "-153.224, 18.9415, -77.6176, 0.17", "-153.634, 18.777, -78.0289, 1.37", "-153.829, 18.6999, -78.2468, 0.17", "-153.908, 18.6701, -78.3443, 0.17", "-154.397, 18.4967, -78.9824, 0.17", "-156.862, 17.6243, -82.2097, 0.17", "-157.735, 17.3001, -83.3802, 1.37", "-159.92, 16.5063, -86.3534, 0.17", "-160.705, 16.2203, -87.4257, 0.17", "-162.24, 15.6751, -89.4918, 0.17", "-162.983, 15.4244, -90.4754, 1.88" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "13.633, 69.8304, -0.503783, 0.17", "12.4646, 72.7197, 2.89943, 0.17", "12.0345, 74.2172, 4.27648, 0.68", "10.737, 79.8707, 8.71884, 0.68", "9.8646, 83.6722, 11.706, 0.68", "9.47889, 85.353, 13.0267, 0.51", "9.11976, 86.9178, 14.2563, 0.51", "8.76853, 89.0044, 15.2765, 0.51", "8.74855, 89.3452, 15.3835, 0.51", "6.94937, 98.4403, 20.3631, 0.51", "4.38813, 106.16, 26.8825, 0.51", "0.82271, 113.465, 33.3809, 0.51", "-3.15968, 119.921, 40.4323, 0.51", "-7.69338, 126.403, 47.1298, 0.51", "-12.3004, 134.219, 52.3306, 0.51", "-16.7514, 142.658, 56.729, 0.51", "-21.5937, 150.084, 62.2274, 0.51", "-27.1631, 157.645, 66.8187, 0.51" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "13.633, 69.8304, -0.503783, 0.17", "12.346, 69.1125, -18.969, 0.17", "12.3345, 69.1061, -19.1338, 0.17", "12.1748, 69.017, -21.4249, 2.22", "12.1015, 68.9761, -22.4759, 2.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "21.2299, 21.071, 9.55288, 0.68", "21.7704, 22.7118, 8.65184, 0.68", "21.8284, 22.9862, 8.53322, 1.88", "22.1687, 27.4894, 7.48492, 0.17", "22.1868, 30.6522, 6.94033, 0.51", "22.1357, 33.4129, 6.55304, 0.51", "22.0573, 37.6488, 5.95877, 0.51", "21.8779, 41.3629, 5.47609, 1.03", "21.4531, 47.1626, 4.99754, 1.03", "21.0889, 50.2888, 5.02466, 1.03", "20.8041, 51.8029, 5.06059, 0.17" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "21.2299, 21.071, 9.55288, 0.17", "22.9449, 20.9197, 10.4349, 0.17", "25.537, 20.6911, 11.7679, 0.17", "27.4457, 20.5227, 12.7495, 0.51", "31.4415, 20.1703, 14.8044, 0.51", "38.416, 19.5551, 18.3912, 0.51", "38.6203, 19.5371, 18.4963, 0.51" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.30151, -39.03, -11.587, 1.54", "-2.17215, -39.8634, -11.7122, 1.54", "-1.97805, -41.1138, -11.9, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.30151, -39.03, -11.587, 0.17", "-1.05138, -39.9871, -10.0068, 0.17", "-0.283824, -40.8351, -8.68006, 0.17", "-0.167754, -41.0155, -8.43213, 1.71", "0.192427, -41.6699, -7.49563, 0.17", "1.7828, -45.0969, -2.01335, 0.17", "2.8355, -47.8143, 2.32281, 0.17", "3.17316, -49.1328, 4.4638, 0.17", "3.37259, -50.2573, 6.2328, 0.17", "3.77106, -53.466, 10.8713, 0.17", "3.96727, -56.0371, 14.1827, 0.17", "3.94844, -57.2577, 15.5644, 0.17", "3.99041, -58.1862, 16.5521, 0.17", "4.14713, -59.4194, 17.8823, 0.17", "4.44938, -61.4621, 19.928, 0.17", "4.76639, -64.5902, 21.6962, 0.17", "4.35606, -68.9016, 29.0139, 0.17", "2.44567, -71.5834, 36.7879, 0.17", "0.40868, -74.1803, 44.5561, 0.17", "-0.550605, -77.254, 52.3742, 0.17", "-2.37572, -80.0734, 60.124, 0.17" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-50.4543, -15.7419, -18.5026, 0.17", "-50.5744, -15.678, -18.5233, 0.17", "-51.4257, -15.148, -18.7208, 0.17", "-52.0699, -14.7787, -18.8673, 0.17", "-53.6365, -13.9541, -19.2043, 1.37", "-54.7997, -13.4119, -19.4396, 1.37", "-56.9377, -12.5527, -19.8373, 0.17", "-58.2635, -12.0785, -20.0718, 0.17", "-59.5199, -11.7085, -20.3521, 0.17", "-60.1803, -11.5956, -20.511, 1.03", "-60.9489, -11.5637, -20.8472, 1.03", "-62.1964, -11.6678, -21.526, 0.17", "-62.913, -11.8342, -22.028, 0.17", "-64.8612, -12.5427, -23.6797, 2.22", "-66.0011, -13.0422, -24.7836, 2.22", "-69.2402, -14.7084, -28.0507, 0.17", "-70.376, -15.4025, -29.3468, 0.17", "-72.2359, -16.7002, -31.5334, 0.17", "-72.9344, -17.2786, -32.3232, 1.88", "-73.0228, -17.3722, -32.4178, 1.88", "-74.1644, -18.8254, -33.6409, 1.2", "-75.6881, -21.2042, -35.071, 0.34", "-76.7728, -23.0943, -36.0618, 0.34", "-77.9053, -25.4356, -37.041, 2.05", "-78.7737, -27.4593, -37.7923, 0.51", "-79.8055, -30.1146, -38.6605, 0.51", "-80.7973, -32.9449, -39.4476, 0.17", "-81.6259, -35.3338, -39.9601, 0.17", "-82.677, -38.3687, -40.567, 0.17", "-83.3043, -39.9413, -40.8422, 1.54", "-83.8118, -40.9651, -40.9742, 1.54", "-84.6184, -42.3526, -41.0119, 0.17", "-85.6789, -43.9234, -40.9783, 0.17", "-86.5789, -45.1359, -40.9008, 2.05", "-87.5363, -46.2929, -40.7143, 0.34", "-89.7279, -48.9077, -40.0558, 0.34", "-91.0912, -50.5264, -39.5291, 1.54", "-92.151, -51.7463, -39.0413, 1.54", "-92.4529, -52.0755, -38.891, 0.17", "-94.2437, -53.8994, -37.9578, 0.17", "-95.1504, -54.7435, -37.4934, 1.03", "-95.5209, -55.0802, -37.3297, 1.03", "-96.4041, -55.8047, -37.0611, 0.17", "-98.1886, -57.0608, -36.6331, 0.17", "-98.4937, -57.258, -36.5835, 0.68", "-99.5103, -57.8925, -36.4077, 0.17", "-101.736, -59.1925, -36.0572, 0.17", "-103.666, -60.3659, -35.6146, 0.17", "-104.823, -61.1201, -35.3105, 1.37", "-106.078, -62.0135, -34.945, 0.51", "-108.162, -63.7551, -33.9696, 0.51", "-109.658, -65.1915, -32.9994, 0.51", "-111.238, -66.8408, -31.7504, 0.17", "-112.203, -68.0428, -30.8924, 1.2", "-112.747, -68.7102, -30.425, 1.2", "-115.267, -71.7162, -28.3749, 0.17", "-116.038, -72.5889, -27.8523, 0.17", "-116.924, -73.5776, -27.1183, 1.88", "-117.478, -74.1352, -26.6803, 0.17", "-118.683, -75.3679, -25.6181, 0.17", "-118.988, -75.6782, -25.3706, 0.86", "-119.824, -76.5192, -24.9032, 0.86", "-121.694, -78.67, -23.7957, 0.17", "-122.169, -79.1984, -23.5398, 0.17", "-122.744, -79.7676, -23.2905, 0.17", "-123.263, -80.2706, -23.1143, 0.86", "-124.731, -81.6255, -22.768, 0.34", "-126.173, -82.9209, -22.5169, 0.34", "-127.505, -84.1468, -22.369, 0.34", "-130.436, -86.8622, -22.2413, 0.34", "-131.927, -88.2727, -22.2514, 0.34", "-135.072, -91.334, -22.3053, 0.34", "-135.185, -91.4504, -22.3096, 0.34", "-136.652, -93.0375, -22.4195, 0.34", "-138.568, -95.3793, -22.7233, 1.88", "-139.0, -95.9367, -22.8905, 1.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-50.4543, -15.7419, -18.5026, 0.68", "-52.2382, -19.2993, -18.3812, 0.68", "-52.8237, -20.467, -18.3413, 0.51", "-53.7187, -22.2518, -18.2803, 0.51", "-55.1492, -25.1045, -18.1829, 0.51" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-114.252, 4.69856, -20.3875, 0.17", "-114.735, 4.67249, -20.994, 0.17", "-114.837, 4.66863, -21.1235, 0.17", "-115.18, 4.66831, -21.5054, 0.17", "-116.305, 4.70536, -22.9008, 0.86", "-118.118, 4.76554, -25.0956, 0.34", "-122.002, 4.81811, -30.1479, 0.34", "-122.875, 4.82469, -31.2306, 1.71", "-124.318, 4.85288, -32.9165, 0.17", "-126.962, 4.91878, -35.7375, 0.17", "-128.266, 4.95255, -37.0854, 0.17", "-132.239, 5.05431, -40.5885, 0.17", "-135.293, 5.17419, -42.7286, 0.17", "-136.45, 5.19973, -43.4767, 1.88", "-138.754, 5.2472, -44.7137, 0.17", "-143.41, 5.34787, -46.5537, 0.17", "-145.696, 5.43239, -47.3323, 0.17", "-146.545, 5.46783, -47.5609, 1.2", "-148.196, 5.54345, -48.1008, 0.17", "-151.074, 5.62357, -49.2773, 0.17", "-151.575, 5.6371, -49.5088, 0.17", "-151.736, 5.64394, -49.5687, 0.17", "-153.987, 5.6826, -50.6035, 0.17", "-155.533, 5.64738, -51.3409, 2.05", "-158.246, 5.51224, -52.628, 1.54", "-159.084, 5.44429, -53.0021, 0.17", "-161.636, 5.18223, -54.0259, 0.17", "-165.966, 4.61121, -55.5236, 0.17", "-167.654, 4.37823, -55.9018, 1.03", "-169.035, 4.1718, -56.1007, 0.17", "-170.398, 3.98231, -56.149, 0.17", "-171.308, 3.84118, -56.129, 1.54", "-172.329, 3.67634, -56.011, 0.17", "-175.732, 3.28451, -55.1661, 0.17", "-175.904, 3.26937, -55.1368, 0.17", "-177.265, 3.21953, -55.1104, 1.54", "-177.803, 3.24448, -55.1865, 0.17", "-179.642, 3.47503, -55.6491, 0.17", "-179.981, 3.55801, -55.7987, 1.54", "-183.344, 4.61188, -57.5133, 0.17", "-185.697, 5.48823, -58.6755, 0.17", "-187.607, 6.23458, -59.5579, 2.05", "-189.102, 6.83181, -60.1444, 0.17", "-193.454, 8.64127, -61.3727, 0.17", "-196.13, 9.71953, -61.8553, 1.2", "-197.202, 10.1445, -61.9406, 0.17", "-200.213, 11.319, -62.0682, 0.17", "-204.045, 12.727, -61.7803, 0.17", "-207.124, 13.6697, -60.995, 1.54", "-208.499, 14.0069, -60.3927, 0.17", "-209.096, 14.128, -60.0271, 0.86", "-209.381, 14.1728, -59.8307, 0.17", "-212.93, 14.4614, -56.9909, 0.17", "-215.799, 14.4102, -54.5975, 0.17", "-216.989, 14.3084, -53.6363, 1.54", "-220.138, 13.9093, -51.1082, 0.17", "-223.117, 13.3953, -48.6339, 0.17", "-226.182, 12.7624, -45.9358, 1.2", "-227.247, 12.4967, -44.9818, 1.2", "-227.749, 12.3549, -44.4981, 0.17", "-228.589, 12.1042, -43.661, 0.17", "-231.217, 11.32, -41.0912, 0.86", "-234.042, 10.5339, -38.1307, 0.34", "-235.197, 10.3213, -37.0868, 0.34", "-235.337, 10.3019, -36.9836, 0.34", "-235.905, 10.2401, -36.5934, 1.03", "-236.526, 10.1716, -36.2622, 0.17", "-238.375, 9.83365, -36.3605, 0.17", "-241.136, 9.061, -37.6924, 1.2", "-242.402, 8.64752, -38.4731, 0.68" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-114.252, 4.69856, -20.3875, 0.17", "-117.303, 8.84033, -21.5028, 0.17", "-119.21, 11.3015, -21.8449, 0.17", "-120.932, 13.4467, -21.7837, 1.03", "-121.833, 14.5426, -21.6617, 0.17", "-123.082, 16.0457, -21.4148, 0.17", "-126.656, 20.2995, -20.6016, 0.17", "-126.771, 20.4286, -20.555, 0.17", "-128.723, 22.5659, -19.6491, 1.2", "-129.032, 22.9214, -19.4863, 0.17", "-130.885, 25.2332, -18.4198, 0.17", "-131.357, 25.9128, -18.1252, 0.17", "-131.883, 26.7236, -17.8241, 1.54", "-132.544, 27.7343, -17.4811, 0.17", "-133.591, 29.2936, -16.9937, 0.17", "-135.2, 31.4804, -16.5902, 0.17", "-135.654, 32.0476, -16.5446, 1.71", "-136.897, 33.4337, -16.5372, 0.17", "-138.124, 34.6944, -16.6033, 0.17", "-140.481, 36.8319, -16.8331, 0.17", "-144.45, 40.005, -17.3864, 1.54", "-146.434, 41.352, -17.7129, 0.17", "-148.853, 42.7454, -18.2253, 0.17", "-148.853, 42.7454, -18.2253, 2.05", "-151.322, 43.6917, -18.8948, 0.17", "-152.332, 43.9618, -19.1797, 0.17", "-156.089, 44.6143, -19.7463, 0.17", "-159.69, 44.9957, -20.1321, 1.03", "-160.54, 45.085, -20.172, 0.17", "-160.71, 45.1145, -20.1654, 0.17", "-161.52, 45.3537, -20.0173, 0.17", "-165.101, 47.2053, -18.7284, 1.37", "-166.015, 47.8938, -18.195, 0.17", "-167.094, 48.8312, -17.4674, 0.17", "-168.113, 49.8797, -16.8369, 1.03", "-169.045, 50.9444, -16.3433, 0.17", "-169.969, 52.1675, -15.9806, 0.17", "-170.391, 52.7674, -15.82, 1.03", "-170.595, 53.0756, -15.6761, 0.17", "-171.268, 54.0574, -14.8542, 0.17", "-171.345, 54.1695, -14.7385, 0.17", "-171.621, 54.5941, -14.2207, 1.2", "-173.153, 56.9445, -10.8622, 0.17", "-173.653, 57.6945, -9.67929, 0.17", "-174.689, 59.1166, -7.173, 1.54" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-162.983, 15.4244, -90.4754, 0.17", "-162.859, 13.9335, -89.3267, 0.17", "-162.739, 12.4912, -88.2154, 0.17", "-162.362, 7.96484, -84.7278, 0.17", "-162.318, 7.4396, -84.3231, 0.86", "-162.313, 7.37745, -84.2752, 0.86" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-162.983, 15.4244, -90.4754, 0.17", "-164.258, 15.7086, -91.2645, 0.17", "-167.83, 16.623, -93.3272, 0.17", "-167.974, 16.6684, -93.4242, 0.17", "-170.951, 17.6272, -95.5344, 1.37", "-172.483, 18.1136, -96.6091, 0.17", "-175.773, 19.1881, -98.8341, 0.17", "-176.995, 19.6417, -99.6875, 0.17", "-180.273, 21.0099, -102.263, 1.03", "-180.698, 21.19, -102.579, 0.17", "-182.202, 21.8007, -103.564, 0.17", "-183.701, 22.3768, -104.53, 0.68", "-183.966, 22.4727, -104.738, 0.68", "-185.874, 23.0509, -106.186, 0.17", "-188.076, 23.5426, -107.748, 0.17", "-189.346, 23.7745, -108.768, 1.2", "-190.096, 23.8548, -109.409, 0.17", "-192.934, 23.9649, -111.782, 0.17", "-194.051, 23.963, -112.645, 0.17", "-195.158, 23.8583, -113.4, 0.68", "-196.664, 23.5179, -114.507, 0.17", "-198.063, 23.0773, -115.499, 0.17", "-198.794, 22.76, -116.009, 1.88", "-199.313, 22.4992, -116.395, 0.17", "-202.249, 20.9725, -118.771, 0.17", "-203.814, 20.0416, -120.041, 1.37", "-204.863, 19.3642, -120.894, 0.17", "-207.297, 17.6547, -123.055, 0.17", "-209.397, 16.1209, -124.964, 1.03", "-209.874, 15.7433, -125.48, 0.17", "-211.733, 14.178, -127.726, 0.17", "-211.954, 13.995, -128.0, 0.17", "-212.852, 13.2234, -129.137, 1.2", "-213.523, 12.6046, -129.98, 0.17", "-217.58, 8.72874, -135.001, 0.17", "-217.908, 8.40519, -135.567, 1.37", "-217.979, 8.33603, -135.715, 1.37", "-218.694, 7.59905, -137.403, 0.34", "-219.679, 6.54049, -140.044, 0.34", "-219.791, 6.41697, -140.36, 0.34", "-222.946, 2.97276, -150.02, 0.17", "-223.063, 2.84679, -150.375, 0.17", "-223.225, 2.67198, -150.874, 0.17", "-223.299, 2.60629, -151.098, 0.17", "-224.989, 1.41838, -155.416, 0.86", "-226.752, 0.366702, -158.769, 0.17", "-227.966, -0.0648231, -159.747, 0.17", "-228.068, -0.0888616, -159.892, 1.37", "-229.964, -0.446667, -163.726, 0.17", "-230.192, -0.487627, -164.166, 1.03", "-230.443, -0.530152, -164.661, 0.17", "-231.454, -0.70773, -166.76, 0.17", "-237.028, -1.99401, -177.308, 1.03", "-239.471, -2.67764, -181.68, 0.17", "-242.012, -3.47318, -186.023, 0.17", "-242.213, -3.55045, -186.351, 1.03", "-245.442, -5.05902, -191.325, 0.17", "-249.308, -7.27942, -196.634, 0.17", "-251.063, -8.58647, -198.175, 1.2", "-251.541, -9.04054, -198.546, 0.17", "-253.403, -11.455, -200.313, 0.17", "-253.938, -12.4064, -200.836, 0.68", "-254.179, -13.1359, -201.089, 0.17", "-254.374, -15.5428, -201.914, 0.17", "-254.445, -19.0895, -203.359, 1.37", "-254.418, -20.7008, -204.176, 0.17", "-254.128, -23.748, -205.877, 0.17", "-253.855, -24.6133, -206.246, 1.03", "-253.698, -24.976, -206.374, 0.17", "-251.576, -29.3064, -207.766, 0.17", "-251.39, -29.6555, -207.853, 0.17", "-248.997, -33.8934, -208.727, 0.17", "-244.017, -41.9967, -210.288, 0.17", "-243.731, -42.4538, -210.357, 1.03" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "12.1015, 68.9761, -22.4759, 0.17", "12.1776, 69.7272, -22.5392, 0.17", "12.2256, 70.3593, -22.585, 0.17", "12.3371, 72.079, -22.7006, 0.17", "12.4558, 72.9001, -22.649, 1.71", "12.7799, 74.763, -22.438, 0.17", "13.293, 77.7214, -22.0352, 0.17", "13.3395, 77.9863, -21.9907, 1.54", "13.5727, 79.4769, -21.7271, 0.17", "14.2449, 83.7377, -20.9527, 0.17", "14.688, 86.4448, -20.4713, 1.37", "14.7763, 87.2573, -20.3453, 0.17", "14.8057, 87.5319, -20.3041, 0.17", "15.1501, 91.815, -19.741, 0.17", "15.1807, 92.8088, -19.6515, 1.2", "15.1159, 93.8363, -19.6588, 0.17", "14.6433, 99.6517, -19.6508, 0.17" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "12.1015, 68.9761, -22.4759, 0.86", "15.2064, 69.588, -19.1335, 0.86", "16.3876, 69.8208, -17.8619, 0.86", "17.7841, 70.096, -16.3586, 0.34", "18.951, 70.326, -15.1025, 0.34", "21.0129, 70.7323, -12.8829, 0.34", "27.6594, 72.0422, -5.7279, 0.17" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "38.6203, 19.5371, 18.4963, 0.17", "35.2582, 24.6196, 18.6089, 0.17", "30.0676, 32.5636, 18.5689, 0.17", "24.4015, 40.086, 17.8144, 0.17", "18.4622, 47.2081, 16.2386, 0.17", "12.7209, 54.5118, 14.693, 0.17", "7.7631, 62.0846, 12.1177, 0.17", "1.40209, 68.7115, 10.2557, 0.17", "-4.10044, 76.3509, 9.40638, 0.17", "-9.18435, 83.7896, 6.7246, 0.17", "-15.4982, 89.3719, 2.83191, 0.17", "-21.2272, 95.8824, -0.622688, 0.17", "-26.9338, 102.583, -3.78093, 0.17" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "38.6203, 19.5371, 18.4963, 0.68", "39.7701, 19.5049, 15.971, 0.68", "41.9754, 19.4357, 12.1203, 0.17", "51.2405, 19.0741, -1.55221, 0.17", "51.3074, 19.0672, -1.63138, 0.17", "53.5929, 18.7722, -3.801, 0.17", "58.059, 18.1357, -7.54682, 0.17", "59.2236, 17.9492, -8.30617, 1.37", "60.7012, 17.6878, -8.84266, 0.17", "66.0917, 16.8153, -9.44432, 0.17", "69.9029, 16.2284, -9.85929, 0.17", "70.1007, 16.1967, -9.88106, 0.17", "74.1072, 15.5979, -10.3138, 0.17", "77.9414, 15.0401, -10.7251, 0.17", "81.8753, 14.8362, -11.0771, 0.17", "82.266, 14.8985, -11.1475, 0.17", "83.9281, 15.4558, -11.6359, 0.17", "87.2298, 17.179, -12.9523, 0.17", "87.3736, 17.3025, -13.018, 0.17", "90.8266, 21.5417, -14.9145, 0.17", "95.3201, 28.1421, -18.0838, 0.17", "95.7193, 28.7718, -18.3889, 1.2", "96.0163, 29.2798, -18.6328, 0.17", "99.8773, 36.403, -21.9281, 0.17", "104.1, 44.1098, -25.4586, 0.17", "107.703, 50.4063, -28.8776, 0.17", "107.893, 50.7231, -29.0488, 1.2", "108.18, 51.2084, -29.3647, 0.17", "109.417, 53.3222, -30.8882, 0.17", "109.733, 53.8912, -31.3924, 0.86", "113.913, 60.4323, -38.1751, 0.17", "116.325, 63.8704, -42.0009, 0.17", "118.725, 67.2055, -45.9146, 1.54" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-1.97805, -41.1138, -11.9, 1.03", "-2.99638, -43.1042, -11.962, 1.03", "-4.03566, -45.551, -12.0244, 1.54", "-4.42463, -46.7309, -12.0462, 0.68", "-5.34003, -51.0246, -12.4386, 0.68", "-5.73652, -53.4174, -12.2017, 0.68", "-5.94235, -55.1681, -11.7047, 0.17", "-5.98489, -56.7357, -10.9069, 0.86", "-5.88543, -58.2168, -9.82767, 0.86", "-5.58949, -61.0682, -6.84811, 0.51", "-4.30925, -68.2457, 1.73435, 0.17", "-4.15292, -69.2144, 2.90366, 1.03", "-4.02631, -70.4942, 4.36857, 1.03", "-4.00495, -70.9728, 4.86482, 1.03", "-4.06746, -74.4115, 7.88479, 0.51", "-4.28371, -77.6415, 10.1638, 0.51", "-4.3475, -79.041, 10.589, 1.2", "-4.369, -80.9779, 11.0602, 1.88", "-4.31894, -82.5995, 11.3645, 0.51", "-4.211, -85.1358, 11.6381, 0.51", "-4.16473, -86.2841, 11.5682, 0.51", "-4.19084, -88.1078, 11.3429, 0.51", "-4.34045, -91.2494, 10.828, 0.68", "-4.41903, -92.42, 10.603, 0.68", "-4.50824, -94.1471, 10.2598, 0.34", "-4.59528, -98.0115, 9.51405, 1.54", "-4.68364, -99.9492, 9.15908, 0.68", "-4.9275, -101.881, 8.8257, 0.17", "-5.23142, -103.321, 8.60201, 0.68", "-5.87789, -105.886, 8.28403, 0.51", "-6.38704, -107.61, 8.13919, 0.51", "-6.88401, -109.278, 8.09402, 0.51", "-7.73919, -112.042, 8.01625, 0.51", "-8.33464, -113.803, 7.96203, 1.2", "-9.00051, -115.529, 7.90131, 0.86", "-9.85746, -117.578, 7.82308, 0.17", "-10.3429, -118.886, 7.77883, 0.17", "-10.9623, -121.071, 7.84956, 0.17", "-11.2949, -122.649, 7.98739, 1.54", "-11.5354, -123.938, 8.14407, 1.03", "-11.7711, -125.101, 8.30804, 0.34", "-12.3847, -127.867, 8.70566, 0.34", "-13.0367, -130.68, 9.22153, 1.03", "-13.2528, -131.733, 9.45075, 0.68", "-13.6944, -133.946, 9.9671, 0.17", "-14.0501, -135.631, 10.3516, 0.17", "-14.6529, -138.242, 10.9232, 0.17", "-15.324, -140.853, 11.4058, 1.54", "-15.735, -142.608, 11.6354, 0.68", "-15.9841, -143.862, 11.7608, 0.51", "-16.3896, -146.391, 11.9416, 0.51", "-16.4394, -146.71, 11.9489, 0.51", "-16.9745, -149.527, 11.8257, 0.51", "-17.4304, -151.382, 11.6029, 0.51", "-17.8269, -152.866, 11.4038, 0.51", "-17.8739, -153.024, 11.3823, 0.51", "-18.5291, -155.078, 10.8648, 1.37", "-18.5786, -155.222, 10.8257, 1.37", "-19.6531, -157.787, 10.0118, 0.86", "-19.8125, -158.096, 9.90862, 0.17", "-20.8809, -160.041, 9.29844, 0.68", "-22.5474, -163.085, 8.21649, 0.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-1.97805, -41.1138, -11.9, 0.86", "0.177423, -44.817, -21.6236, 0.86", "0.230671, -44.9085, -21.8638, 0.86", "0.868228, -46.0038, -24.7399, 0.86" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-139.0, -95.9367, -22.8905, 0.17", "-145.097, -96.8833, -23.8371, 0.17", "-148.244, -97.5223, -23.5466, 0.17", "-149.554, -97.7699, -23.2615, 1.03", "-150.63, -97.973, -23.0278, 0.17", "-154.294, -98.6651, -22.231, 0.17", "-156.054, -98.9976, -21.8482, 1.03", "-159.456, -99.7758, -20.3492, 0.17", "-161.283, -100.113, -19.3568, 0.17" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-139.0, -95.9367, -22.8905, 0.17", "-140.961, -97.7659, -22.793, 0.17", "-142.972, -99.5342, -22.4408, 0.17", "-144.383, -100.725, -22.1235, 0.86", "-144.867, -101.102, -22.0071, 0.17", "-145.843, -101.832, -21.7639, 0.17", "-148.75, -103.952, -21.0344, 0.17", "-150.813, -105.293, -20.3371, 1.54", "-150.985, -105.428, -20.2263, 0.17", "-152.049, -106.622, -18.9447, 0.17", "-152.121, -106.723, -18.8232, 1.2", "-152.357, -107.168, -18.3315, 0.17", "-153.314, -109.511, -16.0126, 0.17", "-154.485, -112.504, -13.4017, 0.17", "-155.365, -115.022, -11.5786, 1.54", "-155.529, -115.608, -11.2584, 0.17", "-156.392, -118.971, -9.97491, 0.17", "-156.825, -121.033, -9.26481, 1.2", "-157.07, -122.332, -8.89784, 0.86", "-157.697, -125.317, -8.17171, 0.17", "-158.47, -128.958, -7.30836, 0.17", "-159.02, -131.583, -6.61074, 0.17", "-160.324, -137.757, -4.72746, 0.17", "-160.38, -137.991, -4.65398, 0.17", "-161.375, -141.55, -3.37612, 0.17", "-161.847, -142.973, -2.81022, 0.86", "-162.154, -143.858, -2.5004, 0.86", "-162.319, -144.368, -2.38237, 0.17", "-162.956, -146.496, -2.17783, 0.17", "-163.562, -149.155, -1.95771, 1.37", "-163.764, -150.643, -1.85614, 0.17", "-164.058, -154.313, -1.64314, 0.17", "-164.149, -157.416, -1.51678, 0.17", "-164.147, -157.595, -1.51518, 0.17", "-164.05, -159.568, -1.61523, 0.17", "-163.996, -160.59, -1.74748, 1.37", "-163.964, -161.83, -2.09003, 0.34", "-163.963, -162.64, -2.47474, 0.17", "-164.036, -164.9, -3.91851, 0.17", "-164.146, -165.996, -4.71774, 1.03", "-164.355, -166.831, -5.42727, 1.03", "-165.645, -169.951, -8.3017, 0.17", "-166.349, -170.913, -9.55444, 0.17", "-166.648, -171.183, -10.0319, 1.03", "-166.859, -171.297, -10.2684, 0.17", "-168.33, -171.733, -11.437, 0.17", "-169.143, -171.904, -11.9773, 1.71", "-172.718, -172.405, -13.6017, 0.68", "-173.614, -172.483, -14.0037, 0.17", "-177.27, -172.875, -15.7276, 0.17", "-180.182, -173.238, -17.1546, 0.17" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-55.1492, -25.1045, -18.1829, 0.17", "-60.8447, -24.4196, -12.6679, 0.17", "-64.8891, -23.6516, -7.91551, 0.17", "-71.0623, -22.0969, 0.498549, 0.17", "-75.0474, -21.0933, 5.9302, 0.17", "-78.6183, -20.194, 10.7974, 0.17", "-87.4692, -17.965, 22.861, 0.17", "-90.0738, -16.8098, 27.4519, 0.17", "-91.9919, -15.5095, 31.8448, 0.17", "-96.8022, -13.5019, 41.969, 0.17", "-100.048, -12.5376, 52.8892, 0.17" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-55.1492, -25.1045, -18.1829, 0.51", "-56.9146, -21.7543, -15.5527, 0.51", "-62.6872, -12.2821, -8.31101, 0.51", "-64.4171, -9.84022, -6.47037, 0.51", "-65.5443, -8.42879, -5.41625, 0.51", "-69.8147, -3.57473, -1.80313, 0.51", "-71.1221, -2.26918, -0.801283, 0.34", "-72.88, -0.804208, 0.481032, 0.34", "-74.666, -0.0729807, 1.53325, 0.34", "-75.5679, 0.228035, 2.09413, 0.86", "-76.1674, 0.402495, 2.56826, 0.17", "-78.22, 0.833427, 4.30571, 0.68", "-83.4031, 2.11233, 9.46753, 0.68", "-84.4737, 2.40134, 10.7078, 0.17", "-85.4638, 2.71564, 11.9976, 0.17", "-89.08, 3.98483, 17.0737, 0.51", "-95.1886, 10.1841, 22.063, 0.51", "-103.215, 14.9921, 25.7423, 0.51", "-109.39, 21.681, 29.877, 0.51", "-115.212, 28.4461, 34.391, 0.51", "-120.729, 35.6786, 38.494, 0.51", "-125.17, 44.1092, 41.2946, 0.51", "-129.546, 52.8635, 42.9268, 0.51", "-134.12, 61.1241, 46.0258, 0.51", "-138.321, 68.9662, 50.5048, 0.51", "-141.386, 76.6019, 56.1387, 0.51", "-143.696, 84.7729, 61.32, 0.51" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-242.402, 8.64752, -38.4731, 0.17", "-243.081, 6.07511, -39.4216, 0.17", "-243.699, 3.71598, -40.183, 0.17", "-243.918, 2.91156, -40.4202, 0.68", "-243.962, 2.76248, -40.4612, 0.68", "-244.205, 1.8883, -40.6886, 0.68", "-244.338, 1.46802, -40.7888, 0.17", "-245.209, -0.967822, -41.2836, 0.17", "-245.474, -1.5817, -41.3738, 1.37", "-245.808, -2.28906, -41.477, 1.37", "-246.236, -3.01663, -41.5811, 0.17", "-247.575, -5.11534, -41.5586, 0.17", "-248.15, -5.93312, -41.4484, 0.17", "-248.976, -6.95572, -41.176, 1.03", "-249.574, -7.70788, -40.9466, 0.17", "-251.105, -9.5684, -40.2944, 0.17", "-253.379, -12.5654, -39.2824, 1.37", "-253.837, -13.3032, -39.0022, 0.17", "-254.389, -14.2902, -38.623, 0.17", "-255.401, -16.2671, -37.9495, 0.68", "-255.677, -16.857, -37.793, 0.17", "-256.814, -19.4492, -37.2385, 0.17", "-258.169, -22.1008, -36.8629, 0.68", "-258.571, -22.7836, -36.7502, 0.17", "-259.862, -24.7046, -36.3978, 0.17", "-260.991, -25.8836, -36.1538, 1.37", "-261.84, -26.5398, -36.0947, 0.17", "-263.358, -27.31, -36.1701, 0.17", "-264.923, -27.8986, -36.4134, 0.17", "-265.326, -28.0418, -36.5266, 0.17", "-268.455, -29.1203, -37.6558, 0.17", "-270.795, -30.0553, -38.652, 1.03", "-271.718, -30.4894, -39.1384, 0.51", "-273.755, -31.6183, -40.3873, 0.17", "-276.346, -33.4012, -42.2127, 0.17", "-278.37, -35.1114, -43.8117, 0.17", "-279.273, -36.1555, -44.674, 1.71", "-280.135, -37.518, -45.5979, 0.17", "-280.279, -37.89, -45.8514, 0.17", "-280.321, -39.2203, -46.7222, 0.17", "-280.275, -39.4098, -46.8272, 1.2", "-280.094, -39.7564, -47.0355, 0.17", "-279.005, -41.3857, -48.0161, 0.17", "-278.063, -42.6145, -48.6344, 1.03", "-277.336, -43.4625, -49.1252, 0.17" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-242.402, 8.64752, -38.4731, 0.17", "-243.763, 8.76188, -38.7507, 0.17", "-245.367, 8.90735, -39.1362, 0.17", "-246.404, 8.98649, -39.3739, 0.86", "-247.667, 9.04953, -39.647, 0.17", "-250.1, 9.12049, -40.1546, 0.17", "-251.161, 9.15145, -40.376, 1.03", "-252.065, 9.17409, -40.5376, 0.17", "-254.432, 9.20512, -40.992, 0.17", "-255.464, 9.1847, -41.1851, 0.17", "-255.787, 9.16984, -41.2305, 0.68" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "14.6433, 99.6517, -19.6508, 0.17", "14.6313, 102.928, -19.2653, 0.17", "14.6351, 107.025, -18.8061, 0.17", "14.6482, 109.925, -18.5115, 0.17", "14.4171, 114.38, -18.1005, 1.2", "14.2025, 116.718, -17.9046, 0.17", "13.8671, 119.339, -17.7213, 0.17", "13.8671, 119.339, -17.7213, 1.03", "13.4555, 120.963, -17.6643, 0.17", "12.1451, 125.25, -17.7929, 0.17", "11.6584, 126.729, -17.9428, 0.17", "10.4096, 130.445, -18.4125, 0.17", "9.18729, 134.534, -19.0348, 0.17", "8.99915, 135.29, -19.1635, 0.17", "8.36943, 138.459, -19.9334, 1.37", "8.21711, 139.402, -20.2065, 0.17", "7.92222, 141.476, -20.8498, 0.17", "7.52825, 144.824, -21.9404, 0.17", "7.20067, 148.433, -23.1164, 0.17", "6.54991, 155.683, -25.3818, 0.17", "6.31895, 158.19, -26.097, 0.17", "6.12909, 159.916, -26.6071, 0.17", "5.91476, 161.252, -27.0168, 2.05", "5.71878, 162.069, -27.2692, 0.17" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "14.6433, 99.6517, -19.6508, 0.17", "12.1735, 97.5027, -18.6228, 0.17", "9.96466, 95.5809, -17.7033, 0.17", "6.10786, 92.2252, -16.0979, 0.17", "1.78954, 88.4679, -14.3004, 0.17", "-3.85468, 83.557, -11.9509, 0.17", "-5.32032, 82.2818, -11.3409, 0.17" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "118.725, 67.2055, -45.9146, 0.17", "121.157, 71.525, -45.8972, 0.17", "123.055, 74.8949, -45.8837, 0.17", "124.949, 78.2588, -45.8702, 0.17", "126.394, 80.8264, -45.8599, 0.17", "126.653, 81.2857, -45.858, 0.17" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "118.725, 67.2055, -45.9146, 0.17", "120.281, 74.4778, -46.478, 0.17", "120.744, 76.6393, -46.6455, 1.37", "120.889, 77.3186, -46.6981, 0.17", "121.6, 80.6393, -46.9554, 0.17" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-22.5474, -163.085, 8.21649, 1.2", "-23.3175, -164.979, 8.72638, 1.2", "-24.6081, -167.782, 11.4699, 0.17", "-25.199, -168.812, 12.8322, 0.17", "-26.5925, -170.814, 15.7285, 0.17", "-28.1478, -172.643, 18.8987, 0.17", "-28.2046, -172.705, 19.0131, 0.17", "-32.2689, -176.892, 27.5464, 1.54", "-32.8964, -177.518, 28.9726, 0.17", "-33.6032, -178.096, 30.6767, 0.17", "-36.2621, -179.657, 37.4109, 0.17", "-36.4181, -179.731, 37.8417, 1.37", "-36.5852, -179.819, 38.2672, 0.17", "-38.4306, -181.109, 41.2934, 0.17", "-41.7215, -184.306, 48.5712, 0.17" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-22.5474, -163.085, 8.21649, 0.86", "-22.1824, -166.741, 9.62061, 0.86", "-22.0013, -170.782, 10.9942, 0.86", "-22.0069, -171.481, 11.2055, 0.86", "-22.1519, -175.189, 12.247, 0.68", "-22.292, -177.588, 12.8339, 0.34", "-22.4303, -181.655, 13.487, 0.34", "-22.5073, -182.685, 13.5615, 1.2", "-22.622, -184.27, 13.5752, 1.2", "-22.649, -184.552, 13.5601, 0.34", "-23.0496, -188.03, 13.1637, 0.34", "-23.5946, -192.557, 12.5997, 0.34", "-23.8337, -194.862, 12.3182, 1.88", "-24.0175, -196.839, 12.0983, 0.68", "-24.2772, -200.725, 11.7325, 0.51", "-24.5715, -204.799, 11.4138, 0.51", "-24.8036, -207.192, 11.2681, 1.03", "-25.1486, -209.609, 11.1756, 1.71", "-25.5165, -212.03, 11.0569, 0.68", "-25.9049, -214.506, 10.946, 0.17", "-26.3831, -217.522, 10.8286, 0.17", "-26.8194, -219.639, 10.7453, 1.03", "-27.7488, -223.257, 10.6116, 1.03", "-29.3702, -229.073, 10.3713, 1.03", "-29.4804, -229.46, 10.3548, 1.03", "-29.5922, -229.877, 10.3385, 1.03", "-29.8818, -231.059, 10.2976, 0.17", "-30.1906, -232.451, 10.2558, 0.17", "-30.6748, -234.761, 10.192, 0.34", "-30.89, -235.603, 10.1611, 0.34", "-31.6895, -238.494, 10.0429, 0.34", "-33.0371, -245.117, 9.86816, 1.37", "-33.2199, -246.342, 9.84904, 0.17", "-33.2471, -246.548, 9.84653, 0.17", "-33.5462, -248.732, 9.81771, 0.17", "-33.7525, -250.721, 9.8046, 0.34", "-33.887, -256.385, 9.85707, 0.34", "-33.7648, -257.807, 9.90118, 0.34", "-33.7547, -258.015, 9.9061, 0.34", "-33.7803, -260.113, 9.93034, 0.34", "-33.7803, -260.113, 9.93034, 1.03", "-33.8078, -261.125, 9.96494, 0.17", "-33.8158, -262.141, 10.0789, 0.17", "-33.5529, -265.137, 10.4372, 1.37", "-33.1127, -267.902, 10.7773, 0.51", "-32.6859, -269.893, 10.964, 0.17", "-31.2383, -275.308, 11.4598, 0.51", "-29.7187, -279.809, 11.6596, 0.51", "-28.3202, -283.607, 11.661, 1.88", "-27.1603, -286.453, 11.3068, 1.2", "-26.1577, -288.887, 10.6867, 0.17", "-25.1677, -291.456, 9.636, 0.51", "-23.938, -295.37, 7.27577, 1.03", "-23.2964, -297.522, 5.75121, 1.03", "-22.0022, -302.635, 2.23352, 0.17", "-21.7158, -303.906, 1.44206, 0.17", "-21.6805, -304.088, 1.35323, 0.17", "-21.2321, -306.434, 0.595623, 0.17", "-20.4442, -309.563, 0.608481, 1.2", "-19.6341, -311.953, 1.04604, 1.2", "-19.1711, -313.358, 1.49206, 0.17", "-19.1064, -313.546, 1.54604, 0.17", "-18.2395, -316.237, 2.17516, 0.17", "-18.1766, -316.445, 2.20969, 1.54", "-17.6859, -318.456, 2.35491, 0.17", "-17.3645, -319.712, 2.44781, 0.17", "-17.0311, -321.196, 2.6294, 0.17", "-16.655, -322.979, 2.91705, 1.37", "-16.4728, -324.179, 3.13991, 0.68", "-16.4359, -324.454, 3.19491, 0.68", "-16.0839, -327.386, 3.81894, 0.17", "-15.9513, -329.981, 5.12102, 0.17", "-15.9436, -330.689, 5.52205, 1.71", "-15.9938, -332.251, 6.51742, 1.54", "-16.064, -333.249, 7.21494, 0.17", "-16.233, -334.839, 8.42357, 0.17", "-17.5109, -341.046, 14.092, 2.05" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "0.868228, -46.0038, -24.7399, 0.17", "0.831978, -46.7698, -24.1895, 0.17", "0.726344, -48.4027, -22.9139, 0.17", "0.50936, -51.336, -20.5234, 1.2", "0.0116947, -55.5697, -16.1953, 0.17", "-0.436051, -58.8058, -12.6846, 0.17", "-0.481457, -59.1742, -12.2779, 0.17", "-0.684458, -61.0825, -10.0178, 1.37", "-0.690854, -61.1443, -9.94384, 1.37", "-0.99758, -65.4443, -5.00355, 0.17", "-1.06914, -67.0559, -3.42284, 0.17", "-1.13437, -68.1084, -2.27182, 0.17", "-1.16006, -68.2616, -2.0646, 0.17", "-1.54334, -70.4085, 0.911983, 0.17", "-1.62587, -70.8875, 1.69144, 1.2", "-1.67771, -71.1624, 2.19186, 0.17", "-2.35744, -73.8765, 7.87597, 0.17", "-3.20406, -76.9693, 14.6916, 0.17", "-3.39073, -77.6662, 16.3307, 0.17", "-3.82652, -79.6477, 21.581, 0.17", "-3.84554, -79.7795, 21.9153, 0.17", "-3.86146, -80.0733, 22.6045, 0.17", "-3.7167, -81.0186, 24.3144, 0.17", "-3.64339, -81.2777, 24.6343, 0.68", "-3.36129, -82.5753, 26.1005, 0.68", "-3.15459, -83.715, 27.1887, 0.68", "-3.39191, -88.2253, 31.182, 0.17", "-4.29631, -90.1551, 32.4894, 0.17", "-5.18101, -91.2502, 32.9943, 1.2", "-5.79291, -91.7912, 33.067, 0.17", "-5.93029, -91.9041, 33.0652, 0.17", "-11.3895, -96.9372, 31.4966, 0.17", "-12.9461, -98.5268, 30.7259, 0.17", "-13.6944, -99.3431, 30.3017, 0.17", "-17.7822, -104.391, 27.7062, 0.17", "-20.041, -107.554, 26.1893, 0.17", "-24.1447, -113.987, 23.2691, 0.17", "-26.0999, -117.667, 21.4431, 0.17", "-27.1007, -119.502, 20.4139, 0.17", "-28.2929, -121.577, 19.144, 0.17", "-30.7312, -126.21, 16.3542, 0.17", "-31.2948, -127.324, 15.6839, 0.17", "-34.0633, -133.016, 12.7378, 0.17", "-35.0609, -135.417, 11.5434, 0.17", "-35.8519, -137.497, 10.5692, 0.17", "-37.9943, -143.303, 8.01876, 0.17", "-40.1457, -149.497, 5.72541, 0.17", "-41.8212, -154.47, 4.12061, 0.17", "-42.7106, -157.122, 3.41896, 0.17", "-43.7547, -160.206, 2.62507, 0.17", "-44.7554, -162.921, 1.90572, 0.17", "-47.4676, -169.141, 0.22091, 0.17", "-49.0745, -172.32, -0.531485, 1.71", "-49.6185, -173.35, -0.824114, 0.17", "-50.6156, -175.187, -1.49501, 0.17", "-50.7781, -175.49, -1.62788, 0.17", "-51.9363, -177.601, -2.72651, 0.17", "-53.6126, -180.339, -4.79309, 0.17", "-55.172, -182.817, -6.91231, 0.17", "-56.4932, -185.002, -9.0466, 1.54", "-56.7705, -185.488, -9.5621, 0.17", "-57.2838, -186.387, -10.5052, 0.17", "-58.8702, -189.342, -13.3027, 0.17", "-59.2858, -190.27, -14.0104, 1.2", "-59.2858, -190.27, -14.0104, 0.17", "-59.9707, -191.818, -14.5314, 0.17", "-61.2257, -194.692, -15.3186, 0.17", "-62.6489, -197.856, -15.9092, 0.17", "-62.7725, -198.096, -15.9357, 0.17", "-63.9558, -200.707, -16.5841, 0.17", "-64.057, -200.934, -16.6638, 0.17", "-64.1246, -201.089, -16.7515, 0.17", "-65.8118, -204.867, -19.6539, 0.17", "-66.4772, -206.534, -21.0321, 0.17", "-68.4584, -211.709, -25.1924, 0.17", "-69.7055, -214.933, -27.698, 0.17", "-71.9105, -220.478, -31.6794, 0.17", "-74.1447, -226.06, -35.4456, 0.17", "-76.6197, -231.829, -39.0708, 0.17", "-78.3549, -235.582, -41.1391, 0.17", "-80.1351, -238.832, -42.6204, 0.17", "-82.8698, -243.562, -44.5073, 0.17", "-83.5534, -244.643, -44.8559, 0.17", "-86.5733, -248.966, -46.1114, 0.17", "-88.2366, -251.081, -46.7513, 0.17", "-91.6649, -254.855, -48.1195, 0.17", "-97.3948, -260.356, -50.4642, 0.17", "-97.9691, -260.803, -50.6978, 0.68", "-100.432, -262.455, -51.6822, 0.17", "-101.858, -263.247, -52.2318, 0.17", "-107.117, -265.793, -54.0851, 0.17", "-107.428, -265.946, -54.1779, 0.17", "-109.976, -267.292, -54.7655, 0.17", "-110.432, -267.583, -54.8696, 0.17", "-113.453, -269.643, -55.5574, 0.17", "-115.985, -271.542, -56.1321, 0.17", "-120.1, -275.009, -57.1605, 0.17", "-124.439, -278.766, -58.2532, 0.17", "-124.576, -278.89, -58.2884, 0.17", "-129.339, -283.123, -59.5216, 0.17", "-129.472, -283.235, -59.5572, 0.17", "-131.485, -284.617, -60.1165, 0.17" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "0.868228, -46.0038, -24.7399, 0.17", "1.19863, -47.0235, -21.6918, 0.17", "1.86024, -48.5356, -15.8406, 1.37", "1.87274, -48.5744, -15.6954, 1.37", "1.91213, -48.7217, -15.1534, 0.17", "2.37956, -50.4259, -8.82793, 0.17", "2.42197, -50.5321, -8.39912, 1.03", "2.94442, -51.6655, -2.65762, 0.17", "3.77684, -52.892, 4.34298, 0.17", "3.81506, -52.9435, 4.64626, 1.2", "3.90176, -53.0455, 5.28254, 0.17", "4.30067, -53.4654, 8.01607, 0.17", "4.84, -53.9832, 11.7056, 1.2", "4.87613, -54.0018, 11.8802, 0.17", "6.5658, -56.7843, 20.436, 0.17", "8.18632, -59.9669, 28.8773, 0.17", "9.88905, -64.5232, 36.7062, 0.17", "12.1762, -69.8398, 43.9237, 0.17", "15.8316, -76.4174, 49.4202, 0.17", "20.0794, -80.8769, 56.2623, 0.17" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "121.6, 80.6393, -46.9554, 0.17", "122.369, 86.8188, -50.2897, 0.17", "123.14, 96.0673, -54.4341, 0.17", "123.146, 96.2146, -54.4947, 0.17", "123.232, 100.964, -56.3508, 0.17", "123.247, 106.246, -58.3594, 0.17", "123.029, 114.43, -61.3141, 0.17", "122.547, 118.698, -62.5434, 0.17", "121.584, 123.958, -63.6979, 0.17", "121.289, 125.167, -63.9909, 1.88", "121.143, 125.6, -64.1262, 0.17", "119.324, 129.791, -65.5867, 0.17", "117.723, 132.313, -66.505, 0.17", "115.451, 135.383, -67.8298, 0.17", "114.949, 135.963, -68.1001, 0.17", "112.591, 138.618, -69.508, 0.17" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "121.6, 80.6393, -46.9554, 0.17", "128.27, 78.765, -49.7286, 0.17", "132.093, 77.6909, -51.3177, 0.17", "136.377, 76.487, -53.099, 0.17" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-17.5109, -341.046, 14.092, 0.17", "-18.0722, -342.171, 15.1595, 0.17", "-18.7337, -343.274, 16.0288, 0.17", "-18.873, -343.605, 16.1943, 0.17", "-18.9721, -343.959, 16.3184, 1.03", "-19.4379, -346.088, 16.8581, 0.51", "-20.1738, -350.067, 17.662, 0.17", "-20.4448, -351.569, 17.7688, 0.17", "-21.2181, -355.788, 17.6477, 1.2", "-21.4566, -357.083, 17.486, 0.17", "-21.6047, -358.036, 17.2954, 0.17", "-21.6359, -358.227, 17.2493, 0.17", "-21.9124, -359.838, 16.8705, 0.17", "-22.3162, -361.464, 16.6217, 1.37", "-22.8938, -363.168, 16.4624, 0.17", "-23.8184, -365.358, 16.4431, 0.17", "-24.9739, -368.069, 16.6999, 0.68", "-25.2421, -368.723, 16.8106, 0.17", "-25.7327, -370.021, 17.1435, 0.17", "-26.1785, -371.254, 17.5477, 0.17", "-27.5088, -375.231, 18.9673, 0.68", "-28.4179, -378.064, 19.9241, 0.68", "-28.886, -379.729, 20.3137, 0.34", "-29.1435, -380.797, 20.4863, 0.17", "-29.1822, -380.993, 20.5036, 0.17", "-29.6178, -383.793, 20.5073, 0.17", "-29.7914, -385.444, 20.3665, 0.68", "-29.9243, -388.75, 19.8255, 0.17", "-30.0005, -390.586, 19.489, 0.17", "-30.06, -392.171, 19.1779, 1.2", "-30.0654, -393.832, 18.8605, 0.17", "-29.8888, -395.955, 18.4689, 0.17", "-29.0382, -400.469, 17.6675, 1.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-17.5109, -341.046, 14.092, 0.17", "-17.526, -341.273, 13.9759, 0.17", "-17.5562, -341.706, 13.7469, 0.17", "-17.5692, -341.898, 13.6521, 1.54", "-17.5823, -342.04, 13.5886, 0.17", "-17.7059, -342.85, 13.2807, 0.17", "-17.7189, -342.944, 13.2353, 1.54", "-17.7369, -343.074, 13.1648, 0.17", "-17.7775, -343.351, 13.0035, 0.17", "-17.8342, -343.717, 12.7892, 0.17", "-17.9546, -344.375, 12.4058, 0.17", "-18.1471, -345.342, 11.7393, 0.17", "-18.1808, -345.535, 11.5894, 1.03", "-18.2009, -345.668, 11.4746, 1.03", "-18.2072, -345.748, 11.3997, 0.17", "-18.1895, -346.11, 11.0442, 0.17", "-18.0648, -346.872, 10.3407, 1.54", "-17.9881, -347.241, 10.0816, 1.2", "-17.9808, -347.27, 10.0631, 1.2", "-17.808, -347.896, 9.707, 0.17", "-17.6988, -348.265, 9.55022, 0.17", "-17.5634, -348.712, 9.43381, 0.68", "-17.4494, -349.155, 9.38219, 0.17", "-17.4419, -349.19, 9.37905, 0.17", "-17.4294, -349.268, 9.37512, 0.86", "-17.3738, -349.907, 9.38406, 0.17", "-17.3661, -350.146, 9.39303, 1.03", "-17.3652, -350.216, 9.39512, 0.17", "-17.3655, -350.75, 9.40793, 0.17", "-17.3676, -350.862, 9.40975, 1.03", "-17.3749, -350.962, 9.40917, 0.17", "-17.4414, -351.519, 9.39508, 0.17", "-17.4808, -351.822, 9.38612, 1.2", "-17.5004, -351.948, 9.38102, 0.17", "-17.6338, -352.551, 9.34034, 0.17", "-17.7058, -352.823, 9.3171, 0.17", "-17.7549, -352.974, 9.30042, 1.2", "-17.8637, -353.255, 9.28171, 0.17", "-18.0244, -353.651, 9.27117, 0.17", "-18.0994, -353.843, 9.2735, 0.86", "-18.1961, -354.102, 9.28758, 0.17", "-18.2947, -354.368, 9.30454, 0.17", "-18.5208, -354.926, 9.33226, 0.17", "-18.5582, -355.026, 9.33195, 1.54", "-18.619, -355.205, 9.31902, 0.17", "-18.7178, -355.543, 9.2761, 0.17", "-18.8118, -355.857, 9.21534, 0.17", "-18.9005, -356.162, 9.14038, 0.17", "-19.0196, -356.573, 9.01466, 1.54", "-19.1541, -357.038, 8.87721, 0.17", "-19.2921, -357.469, 8.80474, 0.17", "-19.4236, -357.928, 8.8012, 0.17", "-19.4619, -358.05, 8.81187, 1.03", "-19.4741, -358.083, 8.81689, 1.03", "-19.6115, -358.429, 8.89204, 0.17", "-19.9622, -359.29, 9.12685, 0.17", "-20.2017, -359.849, 9.30487, 0.17", "-20.4754, -360.482, 9.52564, 0.17", "-20.5305, -360.603, 9.56644, 0.17" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-29.0382, -400.469, 17.6675, 0.17", "-31.2724, -403.28, 17.4831, 0.17", "-32.3568, -405.012, 17.3943, 0.17", "-32.4384, -405.158, 17.3888, 0.17", "-33.2997, -406.778, 17.3306, 1.2", "-33.5616, -407.406, 17.3294, 0.17", "-33.8927, -408.518, 17.3425, 0.17", "-33.949, -409.524, 17.3225, 0.86", "-33.9413, -409.995, 17.3432, 0.17", "-33.9288, -410.365, 17.3653, 0.17", "-33.8262, -412.54, 17.5203, 0.17", "-33.7477, -414.544, 17.6501, 0.86", "-33.7364, -415.737, 17.6963, 0.17", "-33.6327, -417.559, 17.5434, 0.17", "-33.5082, -419.196, 17.2588, 1.71", "-33.4933, -419.35, 17.2204, 0.17", "-33.3581, -420.669, 16.7489, 0.17", "-33.1955, -422.015, 16.175, 0.17", "-32.7019, -425.834, 14.2953, 0.17", "-32.5948, -426.671, 13.8494, 1.03", "-32.5775, -426.817, 13.7743, 0.17", "-32.4751, -428.149, 13.2706, 0.17", "-32.4328, -429.147, 12.9904, 1.37", "-32.4345, -429.304, 12.9631, 0.17", "-32.5415, -430.968, 12.9349, 0.17", "-32.5895, -432.228, 12.9439, 0.17", "-32.8632, -435.52, 12.8314, 0.17", "-32.888, -435.677, 12.8263, 0.17", "-33.0166, -436.349, 12.8184, 1.54", "-33.3293, -437.73, 12.7849, 0.17", "-33.7632, -439.139, 12.6564, 0.17", "-34.9865, -441.744, 12.5156, 0.17", "-35.796, -443.195, 12.5358, 0.17", "-37.0672, -445.326, 12.648, 0.17", "-39.1188, -448.644, 12.9216, 0.17", "-40.9255, -451.471, 13.2333, 0.17", "-43.8401, -455.976, 13.9074, 0.17", "-45.4071, -458.413, 14.3498, 0.17", "-45.5741, -458.666, 14.4015, 1.71", "-46.0385, -459.308, 14.5749, 0.17", "-46.8517, -460.456, 15.0194, 0.17", "-46.953, -460.642, 15.1024, 0.17", "-47.4008, -462.011, 15.5685, 0.17", "-48.3567, -465.143, 16.5235, 0.17", "-48.4836, -465.601, 16.6641, 0.17", "-48.6529, -466.44, 16.9191, 0.17", "-48.8123, -467.596, 17.2567, 1.54", "-48.8623, -468.388, 17.4735, 0.17", "-48.8305, -469.056, 17.632, 0.17", "-48.8132, -469.551, 17.6718, 0.17", "-48.9717, -472.377, 17.6529, 0.17", "-49.0053, -472.844, 17.606, 1.71", "-49.0265, -473.072, 17.5769, 0.17", "-49.2915, -475.524, 17.2099, 0.17", "-49.6945, -478.775, 16.6441, 0.17", "-50.2992, -482.893, 15.7872, 0.17", "-50.6849, -484.997, 15.2321, 0.17" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-29.0382, -400.469, 17.6675, 0.17", "-28.8074, -403.102, 18.0222, 0.17", "-28.4869, -405.947, 18.4775, 0.17", "-28.4558, -406.188, 18.52, 1.2", "-28.3548, -406.894, 18.6548, 0.17", "-27.8789, -410.081, 19.2835, 0.17", "-27.5188, -412.2, 19.7457, 1.37", "-27.2605, -413.513, 20.1682, 0.17", "-27.2135, -413.738, 20.2525, 0.17", "-26.6196, -417.09, 21.4419, 0.17", "-26.6009, -417.302, 21.533, 0.17", "-26.577, -420.057, 22.8252, 0.17", "-26.9284, -426.432, 25.9042, 0.17", "-27.1018, -429.022, 27.1563, 0.17", "-27.2826, -432.098, 28.5776, 0.17", "-27.7399, -437.814, 31.274, 1.37", "-27.984, -440.355, 32.4578, 0.17", "-28.0139, -440.576, 32.5587, 0.17", "-29.0292, -446.948, 35.292, 0.17", "-29.4952, -451.542, 37.3473, 0.17", "-30.4038, -464.935, 41.634, 0.17" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-50.6849, -484.997, 15.2321, 0.17", "-51.1714, -488.179, 17.914, 0.17", "-51.5463, -490.631, 19.9812, 0.17", "-51.8893, -492.874, 21.872, 0.17", "-51.9091, -493.004, 21.9814, 0.17", "-52.7686, -498.624, 26.7195, 0.17", "-52.8339, -499.051, 27.0793, 0.17", "-52.3335, -507.29, 33.3881, 0.17" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-50.6849, -484.997, 15.2321, 0.17", "-52.2641, -487.876, 13.2516, 0.17", "-54.4125, -491.793, 10.5572, 0.17", "-55.4214, -493.632, 9.29194, 0.17", "-55.5028, -493.78, 9.18984, 0.17", "-60.874, -503.81, 4.74342, 0.17" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_35", "dend_32", "dend_29", "dend_18", "dend_17", "dend_0", "dend_50", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_30", "dend_20", "dend_19", "dend_16", "dend_1", "dend_56", "dend_51", "dend_49", "dend_46", "dend_42", "dend_37", "dend_28", "dend_21", "dend_3", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_48", "dend_47", "dend_39", "dend_38", "dend_27", "dend_22", "dend_7", "dend_4", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_41", "dend_40", "dend_26", "dend_23", "dend_15", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_10", "dend_9", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_35", "dend_32", "dend_29", "dend_18", "dend_17", "dend_0", "dend_50", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_30", "dend_20", "dend_19", "dend_16", "dend_1", "dend_56", "dend_51", "dend_49", "dend_46", "dend_42", "dend_37", "dend_28", "dend_21", "dend_3", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_48", "dend_47", "dend_39", "dend_38", "dend_27", "dend_22", "dend_7", "dend_4", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_41", "dend_40", "dend_26", "dend_23", "dend_15", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_10", "dend_9", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L5_NBC_42f781cf08_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_44
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_50
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_20
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_27, id: dend_27, parent: dend_21
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_7
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_65
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.49999945595718026)
    connect dend_35(0), soma_0(0.49999945595718026)
    connect dend_32(0), soma_0(0.49999945595718026)
    connect dend_29(0), soma_0(0.49999945595718026)
    connect dend_18(0), soma_0(0.49999945595718026)
    connect dend_17(0), soma_0(0.49999945595718026)
    connect dend_0(0), soma_0(0.49999945595718026)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_28(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_27(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_15(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.80187, -2.65497, 0.815749, 4.80603 ) }
    soma_0 { pt3dadd( -7.85711, -2.42647, 0.741853, 8.49266 ) }
    soma_0 { pt3dadd( -6.91236, -2.19797, 0.667957, 10.2778 ) }
    soma_0 { pt3dadd( -5.96761, -1.96947, 0.594062, 12.0489 ) }
    soma_0 { pt3dadd( -5.02286, -1.74096, 0.520166, 13.6363 ) }
    soma_0 { pt3dadd( -4.07811, -1.51246, 0.44627, 14.7753 ) }
    soma_0 { pt3dadd( -3.13335, -1.28396, 0.372375, 15.6483 ) }
    soma_0 { pt3dadd( -2.1886, -1.05546, 0.298479, 16.2981 ) }
    soma_0 { pt3dadd( -1.24385, -0.826954, 0.224583, 16.8319 ) }
    soma_0 { pt3dadd( -0.299097, -0.598451, 0.150687, 17.082 ) }
    soma_0 { pt3dadd( 0.645655, -0.369949, 0.0767917, 17.31 ) }
    soma_0 { pt3dadd( 1.59041, -0.141446, 0.00289604, 17.538 ) }
    soma_0 { pt3dadd( 2.53516, 0.0870562, -0.0709997, 17.43 ) }
    soma_0 { pt3dadd( 3.47991, 0.315559, -0.144895, 16.9438 ) }
    soma_0 { pt3dadd( 4.42466, 0.544061, -0.218791, 16.4576 ) }
    soma_0 { pt3dadd( 5.36941, 0.772563, -0.292687, 15.5199 ) }
    soma_0 { pt3dadd( 6.31417, 1.00107, -0.366582, 14.2667 ) }
    soma_0 { pt3dadd( 7.25892, 1.22957, -0.440478, 13.0135 ) }
    soma_0 { pt3dadd( 8.20367, 1.45807, -0.514374, 10.6764 ) }
    soma_0 { pt3dadd( 9.14842, 1.68657, -0.588269, 7.11693 ) }
    soma_0 { pt3dadd( 10.0932, 1.91508, -0.662165, 4.00176 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -9.8861, 1.33514, -7.14961, 1.71 ) }
    dend_44 { pt3dadd( -10.1074, 1.25961, -6.71616, 1.71 ) }
    dend_44 { pt3dadd( -14.8875, -0.371649, 2.64499, 1.71 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -3.2361, 7.85564, -0.579609, 1.03 ) }
    dend_35 { pt3dadd( -3.50411, 8.14285, -0.490214, 1.03 ) }
    dend_35 { pt3dadd( -3.70437, 8.56391, 0.0522115, 0.86 ) }
    dend_35 { pt3dadd( -4.10734, 9.41118, 1.1437, 0.86 ) }
    dend_35 { pt3dadd( -4.34114, 9.90278, 1.777, 0.86 ) }
    dend_35 { pt3dadd( -5.12982, 11.561, 3.91323, 0.86 ) }
    dend_35 { pt3dadd( -5.20224, 11.7132, 4.10937, 0.86 ) }
    dend_35 { pt3dadd( -6.81674, 15.9567, 9.87793, 0.86 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 32/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.0861, 8.97914, -5.19961, 1.71 ) }
    dend_32 { pt3dadd( -0.78769, 11.0406, -5.08568, 1.71 ) }
    dend_32 { pt3dadd( -0.696204, 11.6725, -5.05075, 0.86 ) }
    dend_32 { pt3dadd( -0.429856, 13.5125, -4.94906, 0.68 ) }
    dend_32 { pt3dadd( -0.177665, 15.2547, -4.85277, 0.68 ) }
    dend_32 { pt3dadd( -0.0482603, 16.1486, -4.80337, 0.68 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 38/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 8.1539, 5.07314, -6.22961, 1.2 ) }
    dend_29 { pt3dadd( 8.96527, 5.32672, -6.6332, 1.2 ) }
    dend_29 { pt3dadd( 10.5085, 5.80903, -7.40084, 1.2 ) }
    dend_29 { pt3dadd( 12.6942, 6.49213, -8.48806, 0.68 ) }
    dend_29 { pt3dadd( 15.1237, 7.25142, -9.69653, 0.68 ) }
    dend_29 { pt3dadd( 16.8754, 7.79888, -10.5678, 0.68 ) }
    dend_29 { pt3dadd( 17.9019, 8.11969, -11.0784, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 10.4639, -0.848862, -1.19961, 1.54 ) }
    dend_18 { pt3dadd( 12.056, 0.53847, 0.595886, 1.54 ) }
    dend_18 { pt3dadd( 13.2034, 1.53825, 1.88981, 1.54 ) }
    dend_18 { pt3dadd( 16.2737, 4.21366, 5.35233, 1.03 ) }
    dend_18 { pt3dadd( 16.8614, 4.7258, 6.01516, 1.03 ) }
    dend_18 { pt3dadd( 17.0889, 4.92403, 6.27171, 1.03 ) }
    dend_18 { pt3dadd( 18.4955, 6.14972, 7.85801, 1.03 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.0039, -5.08036, -5.19961, 1.2 ) }
    dend_17 { pt3dadd( 1.74554, -5.17467, -5.34508, 1.2 ) }
    dend_17 { pt3dadd( 0.371989, -5.71642, -6.01804, 1.2 ) }
    dend_17 { pt3dadd( -1.3976, -6.01782, -9.21214, 1.03 ) }
    dend_17 { pt3dadd( -2.09715, -6.12909, -10.634, 0.68 ) }
    dend_17 { pt3dadd( -3.37523, -6.27856, -13.2084, 0.68 ) }
    dend_17 { pt3dadd( -4.22043, -6.34583, -15.145, 0.68 ) }
    dend_17 { pt3dadd( -4.88939, -6.34911, -16.7132, 2.05 ) }
    dend_17 { pt3dadd( -10.9376, -5.94722, -30.7725, 0.17 ) }
    dend_17 { pt3dadd( -11.2422, -5.91682, -31.4649, 0.17 ) }
    dend_17 { pt3dadd( -11.8341, -5.81567, -32.7355, 0.17 ) }
    dend_17 { pt3dadd( -14.9541, -5.21418, -38.7768, 0.17 ) }
    dend_17 { pt3dadd( -16.5308, -4.99593, -41.5701, 0.17 ) }
    dend_17 { pt3dadd( -17.7082, -4.84064, -43.2648, 2.05 ) }
    dend_17 { pt3dadd( -18.951, -4.81438, -44.2494, 0.17 ) }
    dend_17 { pt3dadd( -19.7303, -4.8151, -44.8407, 0.17 ) }
    dend_17 { pt3dadd( -21.437, -4.92449, -46.29, 0.17 ) }
    dend_17 { pt3dadd( -26.0044, -5.63058, -49.8582, 2.22 ) }
    dend_17 { pt3dadd( -26.4194, -5.71998, -50.5579, 0.17 ) }
    dend_17 { pt3dadd( -26.9616, -5.87353, -51.6095, 0.17 ) }
    dend_17 { pt3dadd( -27.5115, -6.03633, -52.7525, 0.17 ) }
    dend_17 { pt3dadd( -29.8073, -6.73675, -57.8168, 0.17 ) }
    dend_17 { pt3dadd( -31.129, -7.13187, -60.9247, 0.17 ) }
    dend_17 { pt3dadd( -37.9416, -9.46876, -77.5931, 1.71 ) }
    dend_17 { pt3dadd( -38.9136, -9.80346, -80.1131, 0.17 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.7139, -0.418362, -15.7696, 1.37 ) }
    dend_0 { pt3dadd( 1.93088, -3.12932, -15.7547, 1.37 ) }
    dend_0 { pt3dadd( 2.06006, -4.56466, -15.7145, 1.37 ) }
    dend_0 { pt3dadd( 2.23449, -6.10026, -15.6601, 1.03 ) }
    dend_0 { pt3dadd( 2.53722, -8.29049, -15.5763, 1.03 ) }
    dend_0 { pt3dadd( 3.12726, -12.1317, -15.4234, 1.03 ) }
    dend_0 { pt3dadd( 3.5419, -14.8311, -15.3158, 1.03 ) }
    dend_0 { pt3dadd( 3.93012, -17.6832, -15.1218, 1.03 ) }
    dend_0 { pt3dadd( 4.1243, -19.3006, -15.0061, 2.22 ) }
    dend_0 { pt3dadd( 4.2544, -20.4797, -14.9142, 1.54 ) }
    dend_0 { pt3dadd( 4.28703, -20.6943, -14.8956, 1.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 10.0932, 1.91508, -0.662165, 0.999958 ) }
    axon_0 { pt3dadd( 24.6728, 5.44137, -0.662165, 0.999958 ) }
    axon_0 { pt3dadd( 39.2524, 8.96767, -0.662165, 0.999958 ) }
    // Section: dend_50, id: dend_50, parent: dend_44 (entry count 91/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -14.8875, -0.371649, 2.64499, 1.37 ) }
    dend_50 { pt3dadd( -15.8408, -1.00365, 2.70249, 1.37 ) }
    dend_50 { pt3dadd( -18.954, -3.06756, 2.89028, 1.37 ) }
    dend_50 { pt3dadd( -21.9227, -5.03569, 3.06936, 1.37 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 95/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -14.8875, -0.371649, 2.64499, 0.68 ) }
    dend_45 { pt3dadd( -22.6832, 0.114763, -6.9283, 0.68 ) }
    dend_45 { pt3dadd( -25.2036, 0.526854, -9.8457, 0.51 ) }
    dend_45 { pt3dadd( -26.8702, 0.859718, -11.7433, 0.51 ) }
    dend_45 { pt3dadd( -28.475, 1.33992, -13.7396, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_45 { pt3dadd( -28.7549, 1.44549, -14.0933, 0.51 ) }
    dend_45 { pt3dadd( -28.9512, 1.53489, -14.3279, 0.51 ) }
    dend_45 { pt3dadd( -34.1318, 4.67966, -19.8584, 0.51 ) }
    dend_45 { pt3dadd( -34.2065, 4.72684, -19.9408, 0.51 ) }
    dend_45 { pt3dadd( -36.9422, 6.55928, -22.7118, 0.51 ) }
    dend_45 { pt3dadd( -39.7587, 8.60727, -25.2485, 1.88 ) }
    dend_45 { pt3dadd( -42.2187, 10.3935, -27.2725, 0.17 ) }
    dend_45 { pt3dadd( -45.9279, 13.0384, -30.2081, 0.68 ) }
    dend_45 { pt3dadd( -48.2781, 14.5233, -31.7773, 0.68 ) }
    dend_45 { pt3dadd( -51.0296, 16.0349, -33.4811, 0.17 ) }
    dend_45 { pt3dadd( -53.586, 17.195, -34.8576, 1.37 ) }
    dend_45 { pt3dadd( -56.4429, 18.3344, -36.8973, 0.17 ) }
    dend_45 { pt3dadd( -59.4468, 19.4852, -39.5877, 0.68 ) }
    dend_45 { pt3dadd( -62.3223, 20.6067, -42.3089, 0.68 ) }
    dend_45 { pt3dadd( -63.1441, 20.9389, -43.1701, 0.51 ) }
    dend_45 { pt3dadd( -64.5584, 21.5136, -44.6781, 1.03 ) }
    dend_45 { pt3dadd( -71.2596, 24.1682, -51.1184, 0.51 ) }
    dend_45 { pt3dadd( -73.3085, 25.0491, -52.8589, 0.51 ) }
    dend_45 { pt3dadd( -76.9864, 26.6263, -55.5578, 0.51 ) }
    dend_45 { pt3dadd( -77.1643, 26.7118, -55.6833, 0.51 ) }
    dend_45 { pt3dadd( -79.2614, 27.6634, -56.8613, 2.22 ) }
    dend_45 { pt3dadd( -81.3747, 28.4704, -57.6597, 0.34 ) }
    dend_45 { pt3dadd( -84.6044, 29.4071, -58.0434, 0.34 ) }
    dend_45 { pt3dadd( -87.9545, 30.0841, -58.2663, 0.34 ) }
    dend_45 { pt3dadd( -90.2098, 30.4697, -58.3211, 0.34 ) }
    dend_45 { pt3dadd( -93.5912, 31.0113, -58.3418, 2.05 ) }
    dend_45 { pt3dadd( -96.1595, 31.3776, -58.2732, 0.17 ) }
    dend_45 { pt3dadd( -101.512, 32.1372, -57.8688, 0.17 ) }
    dend_45 { pt3dadd( -104.229, 32.5039, -57.4576, 0.17 ) }
    dend_45 { pt3dadd( -106.768, 32.8138, -57.0176, 2.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 30/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -6.81674, 15.9567, 9.87793, 0.68 ) }
    dend_43 { pt3dadd( -7.19653, 16.9737, 10.5506, 0.68 ) }
    dend_43 { pt3dadd( -7.40351, 17.3819, 10.7818, 0.51 ) }
    dend_43 { pt3dadd( -7.72761, 17.9878, 10.9898, 0.51 ) }
    dend_43 { pt3dadd( -7.98016, 18.4927, 11.1459, 0.51 ) }
    dend_43 { pt3dadd( -8.04872, 18.6247, 11.1831, 1.37 ) }
    dend_43 { pt3dadd( -8.18905, 18.876, 11.2505, 0.68 ) }
    dend_43 { pt3dadd( -8.44091, 19.2908, 11.3068, 0.34 ) }
    dend_43 { pt3dadd( -9.07591, 20.1749, 11.4186, 0.34 ) }
    dend_43 { pt3dadd( -9.43535, 20.5971, 11.481, 0.34 ) }
    dend_43 { pt3dadd( -9.78743, 20.9984, 11.5278, 0.34 ) }
    dend_43 { pt3dadd( -9.9944, 21.238, 11.5558, 1.37 ) }
    dend_43 { pt3dadd( -10.1893, 21.4691, 11.5827, 0.17 ) }
    dend_43 { pt3dadd( -10.3409, 21.6338, 11.6027, 0.17 ) }
    dend_43 { pt3dadd( -10.9279, 22.0554, 11.6333, 0.17 ) }
    dend_43 { pt3dadd( -11.2358, 22.2425, 11.612, 0.17 ) }
    dend_43 { pt3dadd( -12.1823, 24.3711, 12.4145, 0.17 ) }
    dend_43 { pt3dadd( -12.7731, 26.5018, 13.4982, 0.17 ) }
    dend_43 { pt3dadd( -13.367, 28.3891, 14.9321, 0.17 ) }
    dend_43 { pt3dadd( -14.3381, 30.3278, 16.0697, 0.17 ) }
    dend_43 { pt3dadd( -15.4912, 32.304, 16.9522, 0.17 ) }
    dend_43 { pt3dadd( -16.9547, 33.9117, 18.0319, 0.17 ) }
    dend_43 { pt3dadd( -18.1773, 35.4495, 19.4485, 0.17 ) }
    dend_43 { pt3dadd( -19.4259, 37.2574, 20.5099, 0.17 ) }
    dend_43 { pt3dadd( -20.4892, 39.2809, 21.4074, 0.17 ) }
    dend_43 { pt3dadd( -21.3569, 41.5415, 21.9201, 0.17 ) }
    dend_43 { pt3dadd( -22.0894, 43.9068, 22.1218, 0.17 ) }
    dend_43 { pt3dadd( -22.8538, 46.2709, 22.1409, 0.17 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -6.81674, 15.9567, 9.87793, 0.51 ) }
    dend_36 { pt3dadd( -6.2748, 17.7539, 9.7315, 0.51 ) }
    dend_36 { pt3dadd( -5.9838, 18.5851, 9.66102, 0.51 ) }
    dend_36 { pt3dadd( -5.00732, 20.9911, 9.43199, 0.51 ) }
    dend_36 { pt3dadd( -4.27836, 22.5517, 9.42205, 0.51 ) }
    dend_36 { pt3dadd( -4.14341, 22.86, 9.41731, 0.51 ) }
    dend_36 { pt3dadd( -2.25975, 27.4564, 9.32594, 0.51 ) }
    dend_36 { pt3dadd( -1.84379, 28.7657, 9.249, 0.51 ) }
    dend_36 { pt3dadd( -1.44265, 30.2993, 9.2459, 0.51 ) }
    dend_36 { pt3dadd( -0.451141, 33.8772, 9.39601, 0.51 ) }
    dend_36 { pt3dadd( 0.33516, 36.6456, 9.24141, 1.71 ) }
    dend_36 { pt3dadd( 0.505574, 37.2437, 9.15441, 0.17 ) }
    dend_36 { pt3dadd( 1.43623, 40.7172, 8.32957, 1.03 ) }
    dend_36 { pt3dadd( 2.7146, 45.6234, 6.88129, 0.68 ) }
    dend_36 { pt3dadd( 3.58926, 48.6246, 5.81512, 0.51 ) }
    dend_36 { pt3dadd( 5.4342, 53.6233, 3.66249, 0.51 ) }
    dend_36 { pt3dadd( 6.0949, 54.9954, 3.07712, 1.54 ) }
    dend_36 { pt3dadd( 6.73013, 56.11, 2.55437, 0.17 ) }
    dend_36 { pt3dadd( 6.90529, 56.3581, 2.41897, 0.68 ) }
    dend_36 { pt3dadd( 8.43896, 58.438, 0.92359, 0.68 ) }
    dend_36 { pt3dadd( 9.13236, 59.3805, 0.413961, 1.37 ) }
    dend_36 { pt3dadd( 9.44454, 59.8174, 0.357089, 0.17 ) }
    dend_36 { pt3dadd( 9.62843, 60.1055, 0.332462, 0.17 ) }
    dend_36 { pt3dadd( 9.73213, 60.2876, 0.321204, 0.17 ) }
    dend_36 { pt3dadd( 10.4792, 61.7364, 0.206806, 0.17 ) }
    dend_36 { pt3dadd( 10.5415, 61.8774, 0.198211, 0.17 ) }
    dend_36 { pt3dadd( 11.1735, 63.4816, 0.100603, 0.17 ) }
    dend_36 { pt3dadd( 11.7238, 64.8893, 0.00116899, 1.37 ) }
    dend_36 { pt3dadd( 12.4, 66.6594, -0.148658, 0.17 ) }
    dend_36 { pt3dadd( 13.633, 69.8304, -0.503783, 0.17 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 88/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -0.0482603, 16.1486, -4.80337, 0.68 ) }
    dend_34 { pt3dadd( -1.20418, 17.652, -4.42568, 0.68 ) }
    dend_34 { pt3dadd( -1.90712, 18.5662, -4.19601, 0.68 ) }
    dend_34 { pt3dadd( -2.2997, 19.0768, -4.06774, 1.03 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 92/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -0.0482603, 16.1486, -4.80337, 0.68 ) }
    dend_33 { pt3dadd( 1.54282, 18.5001, -6.10931, 0.68 ) }
    dend_33 { pt3dadd( 3.21833, 20.5886, -7.65042, 0.68 ) }
    dend_33 { pt3dadd( 3.70293, 21.1556, -7.92944, 0.68 ) }
    dend_33 { pt3dadd( 5.65476, 22.7046, -8.1456, 0.68 ) }
    dend_33 { pt3dadd( 8.18531, 24.7129, -8.42586, 0.17 ) }
    dend_33 { pt3dadd( 12.8731, 28.4332, -8.94502, 0.17 ) }
    dend_33 { pt3dadd( 14.1668, 29.3513, -8.93684, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_33 { pt3dadd( 19.6391, 32.7844, -8.49022, 0.17 ) }
    dend_33 { pt3dadd( 27.5141, 37.0687, -7.35052, 0.17 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 17.9019, 8.11969, -11.0784, 0.17 ) }
    dend_31 { pt3dadd( 23.6154, 10.7962, -14.0353, 0.17 ) }
    dend_31 { pt3dadd( 25.3962, 11.6388, -14.745, 0.17 ) }
    dend_31 { pt3dadd( 25.6437, 11.7531, -14.8283, 0.17 ) }
    dend_31 { pt3dadd( 29.3383, 13.4165, -15.9161, 0.17 ) }
    dend_31 { pt3dadd( 34.1345, 15.5451, -17.2396, 1.88 ) }
    dend_31 { pt3dadd( 36.1862, 16.4426, -17.7845, 0.17 ) }
    dend_31 { pt3dadd( 39.1722, 17.7041, -18.4446, 0.17 ) }
    dend_31 { pt3dadd( 40.6729, 18.3608, -18.8761, 1.37 ) }
    dend_31 { pt3dadd( 42.1696, 19.0262, -19.3854, 0.17 ) }
    dend_31 { pt3dadd( 42.5695, 19.2203, -19.5316, 0.17 ) }
    dend_31 { pt3dadd( 42.7298, 19.312, -19.6122, 0.17 ) }
    dend_31 { pt3dadd( 47.8328, 22.6951, -22.7935, 0.17 ) }
    dend_31 { pt3dadd( 50.0701, 24.3547, -24.2353, 1.71 ) }
    dend_31 { pt3dadd( 50.4525, 24.6875, -24.5323, 0.17 ) }
    dend_31 { pt3dadd( 53.3297, 27.4691, -26.9206, 0.17 ) }
    dend_31 { pt3dadd( 57.2553, 31.3804, -30.1268, 1.71 ) }
    dend_31 { pt3dadd( 57.3797, 31.5068, -30.2243, 0.17 ) }
    dend_31 { pt3dadd( 60.1436, 34.3718, -32.2557, 0.17 ) }
    dend_31 { pt3dadd( 63.6702, 38.1183, -35.3202, 1.71 ) }
    dend_31 { pt3dadd( 64.9338, 39.3391, -36.4224, 0.17 ) }
    dend_31 { pt3dadd( 66.2899, 40.4939, -37.5389, 0.17 ) }
    dend_31 { pt3dadd( 67.6657, 41.4971, -38.4371, 1.71 ) }
    dend_31 { pt3dadd( 68.7496, 42.2272, -39.1047, 0.17 ) }
    dend_31 { pt3dadd( 74.5682, 45.5495, -42.4527, 0.17 ) }
    dend_31 { pt3dadd( 76.8802, 46.7572, -43.5734, 0.17 ) }
    dend_31 { pt3dadd( 78.9497, 47.8228, -44.5509, 1.71 ) }
    dend_31 { pt3dadd( 80.4278, 48.5963, -45.2251, 0.17 ) }
    dend_31 { pt3dadd( 86.043, 51.4636, -47.6207, 0.17 ) }
    dend_31 { pt3dadd( 88.5318, 52.5616, -48.3074, 1.71 ) }
    dend_31 { pt3dadd( 89.7793, 52.8461, -47.9517, 0.17 ) }
    dend_31 { pt3dadd( 91.8708, 53.0315, -46.382, 0.17 ) }
    dend_31 { pt3dadd( 91.9577, 52.9975, -46.205, 0.17 ) }
    dend_31 { pt3dadd( 92.2252, 52.8437, -45.5318, 1.37 ) }
    dend_31 { pt3dadd( 97.382, 49.8855, -32.8556, 0.17 ) }
    dend_31 { pt3dadd( 99.1872, 48.8776, -28.4685, 0.17 ) }
    dend_31 { pt3dadd( 99.7156, 48.582, -27.2069, 1.2 ) }
    dend_31 { pt3dadd( 108.313, 44.3891, -8.26491, 0.17 ) }
    dend_31 { pt3dadd( 108.496, 44.3165, -7.90285, 0.17 ) }
    dend_31 { pt3dadd( 111.375, 43.2657, -2.38081, 0.17 ) }
    dend_31 { pt3dadd( 111.608, 43.1993, -1.99324, 1.88 ) }
    dend_31 { pt3dadd( 111.903, 43.0706, -1.45956, 0.17 ) }
    dend_31 { pt3dadd( 114.689, 42.0058, 3.18097, 0.17 ) }
    dend_31 { pt3dadd( 115.28, 42.2181, 3.19747, 1.54 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 46/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 17.9019, 8.11969, -11.0784, 0.34 ) }
    dend_30 { pt3dadd( 16.7517, 12.8805, -12.239, 0.34 ) }
    dend_30 { pt3dadd( 16.3999, 15.0129, -12.7835, 0.34 ) }
    dend_30 { pt3dadd( 15.8878, 18.7079, -13.7387, 0.34 ) }
    dend_30 { pt3dadd( 15.297, 24.5187, -15.3962, 0.68 ) }
    dend_30 { pt3dadd( 14.8917, 29.0378, -16.9555, 0.68 ) }
    dend_30 { pt3dadd( 14.1982, 37.2208, -20.0529, 0.68 ) }
    dend_30 { pt3dadd( 13.8568, 43.2877, -22.7155, 0.68 ) }
    dend_30 { pt3dadd( 13.8587, 43.4957, -22.8162, 0.68 ) }
    dend_30 { pt3dadd( 14.3552, 48.4913, -25.227, 0.68 ) }
    dend_30 { pt3dadd( 15.1305, 53.0073, -27.3598, 0.34 ) }
    dend_30 { pt3dadd( 16.2865, 58.3388, -29.8386, 0.34 ) }
    dend_30 { pt3dadd( 17.0924, 61.6671, -31.2638, 0.34 ) }
    dend_30 { pt3dadd( 19.4141, 70.6091, -34.8345, 0.34 ) }
    dend_30 { pt3dadd( 22.1117, 80.6691, -38.4185, 0.34 ) }
    dend_30 { pt3dadd( 22.5511, 82.2598, -38.8832, 2.05 ) }
    dend_30 { pt3dadd( 22.9435, 83.6154, -39.2047, 0.17 ) }
    dend_30 { pt3dadd( 24.594, 88.9386, -40.4007, 0.17 ) }
    dend_30 { pt3dadd( 24.7822, 89.6183, -40.5301, 0.68 ) }
    dend_30 { pt3dadd( 24.8912, 90.2176, -40.5935, 0.17 ) }
    dend_30 { pt3dadd( 25.2211, 94.0683, -41.0589, 0.17 ) }
    dend_30 { pt3dadd( 25.2238, 94.6032, -41.1331, 1.54 ) }
    dend_30 { pt3dadd( 25.1911, 95.4574, -41.278, 0.17 ) }
    dend_30 { pt3dadd( 24.9199, 98.7006, -41.921, 0.17 ) }
    dend_30 { pt3dadd( 24.7458, 100.556, -42.3149, 1.54 ) }
    dend_30 { pt3dadd( 24.6653, 101.263, -42.4727, 0.17 ) }
    dend_30 { pt3dadd( 23.943, 106.871, -43.7839, 0.17 ) }
    dend_30 { pt3dadd( 23.7341, 108.472, -44.1556, 1.2 ) }
    dend_30 { pt3dadd( 23.592, 109.515, -44.3955, 0.17 ) }
    dend_30 { pt3dadd( 23.1104, 113.077, -45.1786, 0.17 ) }
    dend_30 { pt3dadd( 22.8681, 114.763, -45.5222, 1.88 ) }
    dend_30 { pt3dadd( 22.78, 115.361, -45.6348, 0.17 ) }
    dend_30 { pt3dadd( 22.2777, 118.894, -46.2293, 0.17 ) }
    dend_30 { pt3dadd( 22.0229, 120.563, -46.476, 0.17 ) }
    dend_30 { pt3dadd( 21.3515, 125.006, -47.1326, 0.17 ) }
    dend_30 { pt3dadd( 20.8037, 128.513, -47.6518, 0.17 ) }
    dend_30 { pt3dadd( 20.7389, 129.045, -47.7295, 1.37 ) }
    dend_30 { pt3dadd( 20.6782, 130.232, -47.8979, 0.17 ) }
    dend_30 { pt3dadd( 20.7212, 134.843, -48.5359, 0.17 ) }
    dend_30 { pt3dadd( 20.8572, 137.111, -48.8431, 1.2 ) }
    dend_30 { pt3dadd( 21.0818, 138.622, -49.0398, 0.17 ) }
    dend_30 { pt3dadd( 21.8713, 141.745, -49.4276, 0.17 ) }
    dend_30 { pt3dadd( 23.5579, 147.077, -50.0696, 0.17 ) }
    dend_30 { pt3dadd( 23.7563, 147.57, -50.1266, 1.54 ) }
    dend_30 { pt3dadd( 23.9912, 148.014, -50.1746, 0.17 ) }
    dend_30 { pt3dadd( 25.6461, 150.606, -50.4379, 0.17 ) }
    dend_30 { pt3dadd( 27.52, 153.058, -50.669, 0.17 ) }
    dend_30 { pt3dadd( 27.629, 153.188, -50.6806, 0.17 ) }
    dend_30 { pt3dadd( 27.9475, 153.545, -50.7116, 1.88 ) }
    dend_30 { pt3dadd( 28.4349, 154.096, -50.7596, 0.17 ) }
    dend_30 { pt3dadd( 30.4737, 156.372, -50.9566, 0.17 ) }
    dend_30 { pt3dadd( 32.225, 158.384, -51.1337, 0.17 ) }
    dend_30 { pt3dadd( 33.5595, 159.908, -51.2674, 1.54 ) }
    dend_30 { pt3dadd( 33.6632, 160.03, -51.2783, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 0/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 18.4955, 6.14972, 7.85801, 0.68 ) }
    dend_20 { pt3dadd( 19.0798, 9.33823, 8.22018, 0.68 ) }
    dend_20 { pt3dadd( 19.5441, 11.8716, 8.50795, 0.68 ) }
    dend_20 { pt3dadd( 20.1308, 15.0733, 8.87162, 0.68 ) }
    dend_20 { pt3dadd( 20.6202, 17.7442, 9.17499, 0.68 ) }
    dend_20 { pt3dadd( 21.2299, 21.071, 9.55288, 0.68 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 6/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 18.4955, 6.14972, 7.85801, 0.68 ) }
    dend_19 { pt3dadd( 20.7156, 6.32348, 8.8382, 0.68 ) }
    dend_19 { pt3dadd( 22.7476, 6.48252, 9.73537, 0.68 ) }
    dend_19 { pt3dadd( 26.4485, 6.77216, 11.3694, 0.68 ) }
    dend_19 { pt3dadd( 29.5151, 7.01217, 12.7233, 0.68 ) }
    dend_19 { pt3dadd( 37.3822, 8.40575, 16.11, 0.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 12/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.28703, -20.6943, -14.8956, 0.17 ) }
    dend_16 { pt3dadd( 6.3368, -21.9145, 0.283971, 0.17 ) }
    dend_16 { pt3dadd( 6.40066, -21.9459, 0.546605, 0.17 ) }
    dend_16 { pt3dadd( 7.27184, -22.2961, 2.48183, 0.17 ) }
    dend_16 { pt3dadd( 8.19252, -22.7054, 3.411, 0.17 ) }
    dend_16 { pt3dadd( 9.50169, -23.3452, 4.25999, 1.37 ) }
    dend_16 { pt3dadd( 11.478, -24.3818, 5.22575, 0.17 ) }
    dend_16 { pt3dadd( 13.9927, -25.7063, 5.11486, 0.68 ) }
    dend_16 { pt3dadd( 15.3617, -26.4131, 5.06176, 0.17 ) }
    dend_16 { pt3dadd( 18.4023, -27.9953, 4.95145, 0.86 ) }
    dend_16 { pt3dadd( 18.8944, -28.1968, 4.94452, 0.17 ) }
    dend_16 { pt3dadd( 19.5445, -28.394, 4.9565, 0.17 ) }
    dend_16 { pt3dadd( 21.2508, -28.7373, 5.03296, 0.17 ) }
    dend_16 { pt3dadd( 23.6792, -29.1088, 5.19721, 1.2 ) }
    dend_16 { pt3dadd( 24.6123, -29.2189, 5.26079, 1.2 ) }
    dend_16 { pt3dadd( 28.923, -29.5051, 5.55757, 0.17 ) }
    dend_16 { pt3dadd( 33.7899, -29.8921, 5.89177, 0.68 ) }
    dend_16 { pt3dadd( 35.5119, -30.0599, 6.00958, 0.17 ) }
    dend_16 { pt3dadd( 38.0103, -30.4055, 6.17907, 0.17 ) }
    dend_16 { pt3dadd( 39.6624, -30.7439, 6.28963, 1.37 ) }
    dend_16 { pt3dadd( 40.8061, -31.0598, 6.36502, 0.17 ) }
    dend_16 { pt3dadd( 43.6861, -32.1537, 6.55069, 0.17 ) }
    dend_16 { pt3dadd( 44.7051, -32.5806, 6.61583, 1.88 ) }
    dend_16 { pt3dadd( 46.1039, -33.1703, 6.70519, 0.17 ) }
    dend_16 { pt3dadd( 48.9905, -34.4056, 7.45898, 0.17 ) }
    dend_16 { pt3dadd( 51.7059, -35.5696, 8.55429, 0.17 ) }
    dend_16 { pt3dadd( 53.4394, -36.2667, 9.41673, 2.05 ) }
    dend_16 { pt3dadd( 54.272, -36.5946, 9.89601, 0.17 ) }
    dend_16 { pt3dadd( 57.6547, -37.9942, 12.3938, 0.17 ) }
    dend_16 { pt3dadd( 64.3383, -40.5802, 17.9056, 2.05 ) }
    dend_16 { pt3dadd( 64.6364, -40.692, 18.1801, 0.17 ) }
    dend_16 { pt3dadd( 66.842, -41.489, 20.5004, 0.17 ) }
    dend_16 { pt3dadd( 68.2297, -41.9902, 22.0159, 1.71 ) }
    dend_16 { pt3dadd( 72.0793, -43.4293, 26.2945, 0.17 ) }
    dend_16 { pt3dadd( 74.8118, -44.4133, 29.3121, 0.17 ) }
    dend_16 { pt3dadd( 75.0062, -44.4699, 29.48, 0.86 ) }
    dend_16 { pt3dadd( 77.98, -45.2569, 31.9296, 0.17 ) }
    dend_16 { pt3dadd( 79.962, -45.7096, 33.4905, 0.17 ) }
    dend_16 { pt3dadd( 80.1156, -45.7334, 33.5845, 0.17 ) }
    dend_16 { pt3dadd( 80.9545, -45.8623, 34.0309, 1.88 ) }
    dend_16 { pt3dadd( 82.1963, -46.2095, 34.8341, 0.17 ) }
    dend_16 { pt3dadd( 84.2612, -46.9489, 36.1035, 0.17 ) }
    dend_16 { pt3dadd( 84.7569, -47.1422, 36.3796, 1.37 ) }
    dend_16 { pt3dadd( 85.9446, -47.6997, 37.6935, 0.34 ) }
    dend_16 { pt3dadd( 88.7911, -49.2568, 41.6443, 0.17 ) }
    dend_16 { pt3dadd( 90.0563, -50.0107, 43.61, 0.17 ) }
    dend_16 { pt3dadd( 91.2107, -50.7688, 45.6634, 0.17 ) }
    dend_16 { pt3dadd( 91.7109, -51.1243, 46.6898, 2.05 ) }
    dend_16 { pt3dadd( 96.1471, -54.4231, 56.5689, 0.17 ) }
    dend_16 { pt3dadd( 96.4184, -54.6352, 57.2445, 1.71 ) }
    dend_16 { pt3dadd( 103.973, -58.006, 64.5693, 1.71 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 63/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.28703, -20.6943, -14.8956, 1.2 ) }
    dend_1 { pt3dadd( 3.32313, -22.9556, -14.3454, 1.2 ) }
    dend_1 { pt3dadd( 1.63397, -27.039, -13.4368, 0.68 ) }
    dend_1 { pt3dadd( 0.34687, -30.2202, -12.7667, 2.22 ) }
    dend_1 { pt3dadd( -0.24267, -31.9428, -12.4352, 0.86 ) }
    dend_1 { pt3dadd( -0.517532, -32.7459, -12.2806, 0.68 ) }
    dend_1 { pt3dadd( -1.38084, -35.2684, -11.7952, 0.68 ) }
    dend_1 { pt3dadd( -1.72897, -36.242, -11.5948, 1.54 ) }
    dend_1 { pt3dadd( -1.77998, -36.4068, -11.565, 1.54 ) }
    dend_1 { pt3dadd( -2.30151, -39.03, -11.587, 1.54 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 73/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 39.2524, 8.96767, -0.662165, 0.17 ) }
    axon_1 { pt3dadd( 53.8321, 12.494, -0.662165, 0.17 ) }
    axon_1 { pt3dadd( 68.4117, 16.0203, -0.662165, 0.17 ) }
    // Section: dend_56, id: dend_56, parent: dend_50 (entry count 76/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -21.9227, -5.03569, 3.06936, 0.86 ) }
    dend_56 { pt3dadd( -22.7414, -6.3787, 1.82423, 0.86 ) }
    dend_56 { pt3dadd( -23.7504, -7.66986, 0.355484, 0.68 ) }
    dend_56 { pt3dadd( -25.0913, -9.10055, -1.48092, 0.68 ) }
    dend_56 { pt3dadd( -29.4035, -13.1429, -7.1415, 0.68 ) }
    dend_56 { pt3dadd( -31.4912, -14.8189, -9.71596, 0.68 ) }
    dend_56 { pt3dadd( -33.548, -16.1619, -12.1349, 0.68 ) }
    dend_56 { pt3dadd( -35.9929, -17.1825, -14.7689, 1.2 ) }
    dend_56 { pt3dadd( -36.9349, -17.3424, -15.656, 1.2 ) }
    dend_56 { pt3dadd( -37.4701, -17.3245, -16.0285, 0.68 ) }
    dend_56 { pt3dadd( -39.2464, -17.0165, -16.7381, 0.68 ) }
    dend_56 { pt3dadd( -41.9495, -16.3522, -17.7342, 0.51 ) }
    dend_56 { pt3dadd( -43.342, -16.0273, -18.0426, 0.51 ) }
    dend_56 { pt3dadd( -45.8501, -15.6765, -18.2565, 1.88 ) }
    dend_56 { pt3dadd( -48.4239, -15.56, -18.4279, 1.88 ) }
    dend_56 { pt3dadd( -50.4543, -15.7419, -18.5026, 1.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 92/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -21.9227, -5.03569, 3.06936, 0.86 ) }
    dend_51 { pt3dadd( -24.1063, -4.38088, 0.905353, 0.86 ) }
    dend_51 { pt3dadd( -27.3697, -3.69326, -2.23937, 0.86 ) }
    dend_51 { pt3dadd( -29.7578, -3.2434, -4.39676, 0.86 ) }
    dend_51 { pt3dadd( -36.4986, -1.7868, -9.86051, 0.86 ) }
    dend_51 { pt3dadd( -38.7565, -1.2555, -11.554, 0.86 ) }
    dend_51 { pt3dadd( -45.2817, 0.336425, -16.341, 0.86 ) }
    dend_51 { pt3dadd( -46.7522, 0.697608, -17.4092, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_51 { pt3dadd( -49.1193, 1.27776, -19.057, 0.86 ) }
    dend_51 { pt3dadd( -53.2098, 2.26864, -21.7489, 0.86 ) }
    dend_51 { pt3dadd( -56.4552, 2.98788, -23.8135, 0.51 ) }
    dend_51 { pt3dadd( -60.074, 3.81952, -26.0151, 0.34 ) }
    dend_51 { pt3dadd( -64.0496, 4.86713, -28.1294, 0.17 ) }
    dend_51 { pt3dadd( -66.8812, 5.53165, -29.5878, 0.17 ) }
    dend_51 { pt3dadd( -69.3956, 5.94789, -30.8246, 2.05 ) }
    dend_51 { pt3dadd( -71.3293, 6.10481, -31.6126, 0.17 ) }
    dend_51 { pt3dadd( -73.2404, 6.21343, -32.0628, 0.17 ) }
    dend_51 { pt3dadd( -74.4499, 6.25854, -32.1516, 0.68 ) }
    dend_51 { pt3dadd( -77.4005, 6.28391, -32.0908, 0.34 ) }
    dend_51 { pt3dadd( -78.3433, 6.26153, -32.0736, 0.17 ) }
    dend_51 { pt3dadd( -80.8061, 6.19316, -31.9504, 1.88 ) }
    dend_51 { pt3dadd( -81.9797, 6.12447, -31.7882, 0.17 ) }
    dend_51 { pt3dadd( -83.6383, 5.98206, -31.4456, 0.17 ) }
    dend_51 { pt3dadd( -85.4654, 5.76016, -30.979, 1.2 ) }
    dend_51 { pt3dadd( -86.5432, 5.61783, -30.6613, 0.17 ) }
    dend_51 { pt3dadd( -90.0372, 5.22136, -29.5892, 0.17 ) }
    dend_51 { pt3dadd( -92.8463, 4.97655, -28.416, 1.71 ) }
    dend_51 { pt3dadd( -94.0745, 4.89003, -27.816, 0.17 ) }
    dend_51 { pt3dadd( -95.7058, 4.84363, -26.9358, 0.17 ) }
    dend_51 { pt3dadd( -97.1866, 4.89652, -26.1203, 2.39 ) }
    dend_51 { pt3dadd( -99.1148, 4.98748, -25.1654, 0.68 ) }
    dend_51 { pt3dadd( -103.178, 5.13151, -23.4918, 0.17 ) }
    dend_51 { pt3dadd( -104.425, 5.14789, -23.0771, 0.17 ) }
    dend_51 { pt3dadd( -105.823, 5.144, -22.6044, 1.2 ) }
    dend_51 { pt3dadd( -108.266, 5.07601, -21.7941, 0.17 ) }
    dend_51 { pt3dadd( -111.743, 4.8911, -20.7713, 0.17 ) }
    dend_51 { pt3dadd( -113.627, 4.75432, -20.3999, 2.22 ) }
    dend_51 { pt3dadd( -114.252, 4.69856, -20.3875, 2.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 30/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -106.768, 32.8138, -57.0176, 0.17 ) }
    dend_49 { pt3dadd( -107.344, 33.8979, -57.0512, 0.17 ) }
    dend_49 { pt3dadd( -107.699, 34.5084, -57.0698, 0.17 ) }
    dend_49 { pt3dadd( -108.785, 36.3116, -57.1241, 0.17 ) }
    dend_49 { pt3dadd( -108.944, 36.5551, -57.1308, 0.17 ) }
    dend_49 { pt3dadd( -110.773, 39.3231, -57.2028, 0.17 ) }
    dend_49 { pt3dadd( -111.779, 40.8305, -57.2408, 1.2 ) }
    dend_49 { pt3dadd( -112.099, 41.3223, -57.25, 0.17 ) }
    dend_49 { pt3dadd( -112.171, 41.4337, -57.2557, 0.17 ) }
    dend_49 { pt3dadd( -115.249, 46.1106, -57.622, 0.17 ) }
    dend_49 { pt3dadd( -116.241, 47.6549, -57.7756, 1.54 ) }
    dend_49 { pt3dadd( -116.701, 48.3878, -57.8666, 0.17 ) }
    dend_49 { pt3dadd( -117.901, 50.3936, -58.1473, 0.17 ) }
    dend_49 { pt3dadd( -118.704, 51.7839, -58.3964, 1.2 ) }
    dend_49 { pt3dadd( -119.043, 52.4163, -58.5365, 0.17 ) }
    dend_49 { pt3dadd( -119.093, 52.5266, -58.5706, 0.17 ) }
    dend_49 { pt3dadd( -119.465, 53.4015, -58.8577, 0.17 ) }
    dend_49 { pt3dadd( -119.82, 54.2866, -59.1391, 1.37 ) }
    dend_49 { pt3dadd( -120.417, 55.601, -59.5184, 0.17 ) }
    dend_49 { pt3dadd( -121.285, 57.3154, -60.0582, 0.17 ) }
    dend_49 { pt3dadd( -121.348, 57.4247, -60.0995, 0.17 ) }
    dend_49 { pt3dadd( -121.741, 58.0408, -60.3639, 1.03 ) }
    dend_49 { pt3dadd( -121.956, 58.3284, -60.5651, 0.17 ) }
    dend_49 { pt3dadd( -122.802, 59.3434, -61.4086, 0.17 ) }
    dend_49 { pt3dadd( -124.031, 60.7163, -62.6354, 1.71 ) }
    dend_49 { pt3dadd( -124.643, 61.3876, -63.2302, 0.17 ) }
    dend_49 { pt3dadd( -124.717, 61.4701, -63.2994, 0.17 ) }
    dend_49 { pt3dadd( -127.525, 64.7357, -65.8761, 0.17 ) }
    dend_49 { pt3dadd( -128.224, 65.6069, -66.4875, 1.37 ) }
    dend_49 { pt3dadd( -128.495, 65.9743, -66.7297, 0.17 ) }
    dend_49 { pt3dadd( -129.606, 67.5486, -67.6284, 0.17 ) }
    dend_49 { pt3dadd( -129.939, 68.0431, -67.8841, 1.54 ) }
    dend_49 { pt3dadd( -130.503, 68.8786, -68.2168, 0.17 ) }
    dend_49 { pt3dadd( -131.193, 69.8759, -68.4346, 0.17 ) }
    dend_49 { pt3dadd( -132.171, 71.219, -68.6982, 1.88 ) }
    dend_49 { pt3dadd( -132.723, 71.9436, -68.8174, 0.17 ) }
    dend_49 { pt3dadd( -133.631, 73.0606, -68.9628, 0.17 ) }
    dend_49 { pt3dadd( -134.606, 74.182, -69.0603, 1.54 ) }
    dend_49 { pt3dadd( -135.048, 74.6567, -69.0803, 0.17 ) }
    dend_49 { pt3dadd( -136.302, 75.9472, -69.0785, 0.17 ) }
    dend_49 { pt3dadd( -137.251, 76.9013, -69.0297, 1.71 ) }
    dend_49 { pt3dadd( -138.037, 77.6656, -69.0035, 0.17 ) }
    dend_49 { pt3dadd( -139.092, 78.6652, -68.9953, 0.17 ) }
    dend_49 { pt3dadd( -139.71, 79.1952, -69.012, 2.22 ) }
    dend_49 { pt3dadd( -140.437, 79.7706, -69.0337, 0.17 ) }
    dend_49 { pt3dadd( -141.594, 80.6063, -69.0718, 0.17 ) }
    dend_49 { pt3dadd( -141.891, 80.8146, -69.0816, 1.88 ) }
    dend_49 { pt3dadd( -142.861, 81.4855, -69.1137, 0.17 ) }
    dend_49 { pt3dadd( -145.423, 83.2203, -69.1987, 0.17 ) }
    dend_49 { pt3dadd( -146.253, 83.7688, -69.2263, 1.03 ) }
    dend_49 { pt3dadd( -147.32, 84.4693, -69.2149, 0.17 ) }
    dend_49 { pt3dadd( -149.494, 85.8717, -69.1209, 0.17 ) }
    dend_49 { pt3dadd( -150.261, 86.3735, -69.0671, 2.05 ) }
    dend_49 { pt3dadd( -151.525, 87.2068, -68.8084, 0.17 ) }
    dend_49 { pt3dadd( -153.294, 88.3217, -68.2118, 0.17 ) }
    dend_49 { pt3dadd( -154.833, 89.1362, -67.5304, 1.03 ) }
    dend_49 { pt3dadd( -155.4, 89.355, -67.2231, 0.17 ) }
    dend_49 { pt3dadd( -156.237, 89.5959, -66.7013, 0.17 ) }
    dend_49 { pt3dadd( -159.354, 90.2894, -64.6462, 0.17 ) }
    dend_49 { pt3dadd( -160.867, 90.5257, -63.6414, 0.17 ) }
    dend_49 { pt3dadd( -162.246, 90.6902, -62.775, 0.17 ) }
    dend_49 { pt3dadd( -165.569, 91.0171, -61.0698, 0.17 ) }
    dend_49 { pt3dadd( -165.81, 91.0436, -60.9858, 1.71 ) }
    dend_49 { pt3dadd( -166.311, 91.1081, -60.9046, 0.17 ) }
    dend_49 { pt3dadd( -167.625, 91.3999, -61.1006, 0.17 ) }
    dend_49 { pt3dadd( -168.689, 91.7596, -61.4392, 0.17 ) }
    dend_49 { pt3dadd( -170.41, 92.4465, -62.0064, 0.17 ) }
    dend_49 { pt3dadd( -173.389, 93.6297, -63.0367, 1.37 ) }
    dend_49 { pt3dadd( -174.086, 93.8925, -63.2332, 0.17 ) }
    dend_49 { pt3dadd( -176.163, 94.5967, -63.6578, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_49 { pt3dadd( -178.721, 95.3612, -63.8707, 0.17 ) }
    dend_49 { pt3dadd( -181.452, 96.1039, -63.8848, 1.03 ) }
    dend_49 { pt3dadd( -182.219, 96.3058, -63.8003, 0.17 ) }
    dend_49 { pt3dadd( -182.82, 96.4338, -63.64, 0.17 ) }
    dend_49 { pt3dadd( -185.079, 96.8018, -62.9693, 0.17 ) }
    dend_49 { pt3dadd( -186.478, 96.9031, -62.3353, 1.03 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 6/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -106.768, 32.8138, -57.0176, 0.34 ) }
    dend_46 { pt3dadd( -108.262, 32.2219, -57.8447, 0.34 ) }
    dend_46 { pt3dadd( -109.95, 31.6513, -58.6749, 0.34 ) }
    dend_46 { pt3dadd( -110.443, 31.4665, -58.9068, 0.34 ) }
    dend_46 { pt3dadd( -110.606, 31.4014, -58.9776, 0.34 ) }
    dend_46 { pt3dadd( -112.638, 30.5377, -60.055, 0.34 ) }
    dend_46 { pt3dadd( -114.187, 29.8249, -60.9112, 0.34 ) }
    dend_46 { pt3dadd( -115.64, 29.1275, -61.6452, 1.03 ) }
    dend_46 { pt3dadd( -116.353, 28.7516, -61.9836, 0.68 ) }
    dend_46 { pt3dadd( -117.299, 28.201, -62.5512, 0.86 ) }
    dend_46 { pt3dadd( -118.939, 27.126, -63.726, 0.17 ) }
    dend_46 { pt3dadd( -120.536, 25.9189, -65.0322, 0.17 ) }
    dend_46 { pt3dadd( -121.141, 25.4465, -65.5401, 1.37 ) }
    dend_46 { pt3dadd( -122.0, 24.8178, -66.1842, 0.17 ) }
    dend_46 { pt3dadd( -124.867, 22.8951, -68.1851, 0.17 ) }
    dend_46 { pt3dadd( -124.974, 22.8321, -68.248, 0.17 ) }
    dend_46 { pt3dadd( -125.967, 22.3537, -68.6734, 1.03 ) }
    dend_46 { pt3dadd( -126.588, 22.1538, -68.8929, 0.34 ) }
    dend_46 { pt3dadd( -128.177, 21.8982, -69.3744, 0.34 ) }
    dend_46 { pt3dadd( -128.439, 21.8882, -69.4354, 0.34 ) }
    dend_46 { pt3dadd( -130.266, 21.8738, -69.6705, 0.17 ) }
    dend_46 { pt3dadd( -130.862, 21.862, -69.7627, 2.05 ) }
    dend_46 { pt3dadd( -132.651, 21.8538, -70.0781, 0.17 ) }
    dend_46 { pt3dadd( -134.158, 21.8205, -70.3298, 0.17 ) }
    dend_46 { pt3dadd( -134.431, 21.8083, -70.3722, 0.17 ) }
    dend_46 { pt3dadd( -137.821, 21.6149, -70.838, 0.17 ) }
    dend_46 { pt3dadd( -139.072, 21.5261, -71.0931, 1.03 ) }
    dend_46 { pt3dadd( -140.312, 21.4054, -71.3973, 0.17 ) }
    dend_46 { pt3dadd( -142.403, 21.1448, -71.9615, 0.17 ) }
    dend_46 { pt3dadd( -143.875, 20.9132, -72.3706, 0.17 ) }
    dend_46 { pt3dadd( -145.634, 20.6447, -72.9998, 1.54 ) }
    dend_46 { pt3dadd( -148.344, 20.234, -74.2294, 0.17 ) }
    dend_46 { pt3dadd( -149.771, 19.9644, -74.9723, 0.17 ) }
    dend_46 { pt3dadd( -150.692, 19.7531, -75.5185, 0.86 ) }
    dend_46 { pt3dadd( -151.335, 19.5808, -75.9474, 0.17 ) }
    dend_46 { pt3dadd( -153.224, 18.9415, -77.6176, 0.17 ) }
    dend_46 { pt3dadd( -153.634, 18.777, -78.0289, 1.37 ) }
    dend_46 { pt3dadd( -153.829, 18.6999, -78.2468, 0.17 ) }
    dend_46 { pt3dadd( -153.908, 18.6701, -78.3443, 0.17 ) }
    dend_46 { pt3dadd( -154.397, 18.4967, -78.9824, 0.17 ) }
    dend_46 { pt3dadd( -156.862, 17.6243, -82.2097, 0.17 ) }
    dend_46 { pt3dadd( -157.735, 17.3001, -83.3802, 1.37 ) }
    dend_46 { pt3dadd( -159.92, 16.5063, -86.3534, 0.17 ) }
    dend_46 { pt3dadd( -160.705, 16.2203, -87.4257, 0.17 ) }
    dend_46 { pt3dadd( -162.24, 15.6751, -89.4918, 0.17 ) }
    dend_46 { pt3dadd( -162.983, 15.4244, -90.4754, 1.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 52/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 13.633, 69.8304, -0.503783, 0.17 ) }
    dend_42 { pt3dadd( 12.4646, 72.7197, 2.89943, 0.17 ) }
    dend_42 { pt3dadd( 12.0345, 74.2172, 4.27648, 0.68 ) }
    dend_42 { pt3dadd( 10.737, 79.8707, 8.71884, 0.68 ) }
    dend_42 { pt3dadd( 9.8646, 83.6722, 11.706, 0.68 ) }
    dend_42 { pt3dadd( 9.47889, 85.353, 13.0267, 0.51 ) }
    dend_42 { pt3dadd( 9.11976, 86.9178, 14.2563, 0.51 ) }
    dend_42 { pt3dadd( 8.76853, 89.0044, 15.2765, 0.51 ) }
    dend_42 { pt3dadd( 8.74855, 89.3452, 15.3835, 0.51 ) }
    dend_42 { pt3dadd( 6.94937, 98.4403, 20.3631, 0.51 ) }
    dend_42 { pt3dadd( 4.38813, 106.16, 26.8825, 0.51 ) }
    dend_42 { pt3dadd( 0.82271, 113.465, 33.3809, 0.51 ) }
    dend_42 { pt3dadd( -3.15968, 119.921, 40.4323, 0.51 ) }
    dend_42 { pt3dadd( -7.69338, 126.403, 47.1298, 0.51 ) }
    dend_42 { pt3dadd( -12.3004, 134.219, 52.3306, 0.51 ) }
    dend_42 { pt3dadd( -16.7514, 142.658, 56.729, 0.51 ) }
    dend_42 { pt3dadd( -21.5937, 150.084, 62.2274, 0.51 ) }
    dend_42 { pt3dadd( -27.1631, 157.645, 66.8187, 0.51 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 70/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 13.633, 69.8304, -0.503783, 0.17 ) }
    dend_37 { pt3dadd( 12.346, 69.1125, -18.969, 0.17 ) }
    dend_37 { pt3dadd( 12.3345, 69.1061, -19.1338, 0.17 ) }
    dend_37 { pt3dadd( 12.1748, 69.017, -21.4249, 2.22 ) }
    dend_37 { pt3dadd( 12.1015, 68.9761, -22.4759, 2.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_20 (entry count 75/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 21.2299, 21.071, 9.55288, 0.68 ) }
    dend_28 { pt3dadd( 21.7704, 22.7118, 8.65184, 0.68 ) }
    dend_28 { pt3dadd( 21.8284, 22.9862, 8.53322, 1.88 ) }
    dend_28 { pt3dadd( 22.1687, 27.4894, 7.48492, 0.17 ) }
    dend_28 { pt3dadd( 22.1868, 30.6522, 6.94033, 0.51 ) }
    dend_28 { pt3dadd( 22.1357, 33.4129, 6.55304, 0.51 ) }
    dend_28 { pt3dadd( 22.0573, 37.6488, 5.95877, 0.51 ) }
    dend_28 { pt3dadd( 21.8779, 41.3629, 5.47609, 1.03 ) }
    dend_28 { pt3dadd( 21.4531, 47.1626, 4.99754, 1.03 ) }
    dend_28 { pt3dadd( 21.0889, 50.2888, 5.02466, 1.03 ) }
    dend_28 { pt3dadd( 20.8041, 51.8029, 5.06059, 0.17 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 86/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 21.2299, 21.071, 9.55288, 0.17 ) }
    dend_21 { pt3dadd( 22.9449, 20.9197, 10.4349, 0.17 ) }
    dend_21 { pt3dadd( 25.537, 20.6911, 11.7679, 0.17 ) }
    dend_21 { pt3dadd( 27.4457, 20.5227, 12.7495, 0.51 ) }
    dend_21 { pt3dadd( 31.4415, 20.1703, 14.8044, 0.51 ) }
    dend_21 { pt3dadd( 38.416, 19.5551, 18.3912, 0.51 ) }
    dend_21 { pt3dadd( 38.6203, 19.5371, 18.4963, 0.51 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 93/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.30151, -39.03, -11.587, 1.54 ) }
    dend_3 { pt3dadd( -2.17215, -39.8634, -11.7122, 1.54 ) }
    dend_3 { pt3dadd( -1.97805, -41.1138, -11.9, 1.03 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 96/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.30151, -39.03, -11.587, 0.17 ) }
    dend_2 { pt3dadd( -1.05138, -39.9871, -10.0068, 0.17 ) }
    dend_2 { pt3dadd( -0.283824, -40.8351, -8.68006, 0.17 ) }
    dend_2 { pt3dadd( -0.167754, -41.0155, -8.43213, 1.71 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 0.192427, -41.6699, -7.49563, 0.17 ) }
    dend_2 { pt3dadd( 1.7828, -45.0969, -2.01335, 0.17 ) }
    dend_2 { pt3dadd( 2.8355, -47.8143, 2.32281, 0.17 ) }
    dend_2 { pt3dadd( 3.17316, -49.1328, 4.4638, 0.17 ) }
    dend_2 { pt3dadd( 3.37259, -50.2573, 6.2328, 0.17 ) }
    dend_2 { pt3dadd( 3.77106, -53.466, 10.8713, 0.17 ) }
    dend_2 { pt3dadd( 3.96727, -56.0371, 14.1827, 0.17 ) }
    dend_2 { pt3dadd( 3.94844, -57.2577, 15.5644, 0.17 ) }
    dend_2 { pt3dadd( 3.99041, -58.1862, 16.5521, 0.17 ) }
    dend_2 { pt3dadd( 4.14713, -59.4194, 17.8823, 0.17 ) }
    dend_2 { pt3dadd( 4.44938, -61.4621, 19.928, 0.17 ) }
    dend_2 { pt3dadd( 4.76639, -64.5902, 21.6962, 0.17 ) }
    dend_2 { pt3dadd( 4.35606, -68.9016, 29.0139, 0.17 ) }
    dend_2 { pt3dadd( 2.44567, -71.5834, 36.7879, 0.17 ) }
    dend_2 { pt3dadd( 0.40868, -74.1803, 44.5561, 0.17 ) }
    dend_2 { pt3dadd( -0.550605, -77.254, 52.3742, 0.17 ) }
    dend_2 { pt3dadd( -2.37572, -80.0734, 60.124, 0.17 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 17/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -50.4543, -15.7419, -18.5026, 0.17 ) }
    dend_60 { pt3dadd( -50.5744, -15.678, -18.5233, 0.17 ) }
    dend_60 { pt3dadd( -51.4257, -15.148, -18.7208, 0.17 ) }
    dend_60 { pt3dadd( -52.0699, -14.7787, -18.8673, 0.17 ) }
    dend_60 { pt3dadd( -53.6365, -13.9541, -19.2043, 1.37 ) }
    dend_60 { pt3dadd( -54.7997, -13.4119, -19.4396, 1.37 ) }
    dend_60 { pt3dadd( -56.9377, -12.5527, -19.8373, 0.17 ) }
    dend_60 { pt3dadd( -58.2635, -12.0785, -20.0718, 0.17 ) }
    dend_60 { pt3dadd( -59.5199, -11.7085, -20.3521, 0.17 ) }
    dend_60 { pt3dadd( -60.1803, -11.5956, -20.511, 1.03 ) }
    dend_60 { pt3dadd( -60.9489, -11.5637, -20.8472, 1.03 ) }
    dend_60 { pt3dadd( -62.1964, -11.6678, -21.526, 0.17 ) }
    dend_60 { pt3dadd( -62.913, -11.8342, -22.028, 0.17 ) }
    dend_60 { pt3dadd( -64.8612, -12.5427, -23.6797, 2.22 ) }
    dend_60 { pt3dadd( -66.0011, -13.0422, -24.7836, 2.22 ) }
    dend_60 { pt3dadd( -69.2402, -14.7084, -28.0507, 0.17 ) }
    dend_60 { pt3dadd( -70.376, -15.4025, -29.3468, 0.17 ) }
    dend_60 { pt3dadd( -72.2359, -16.7002, -31.5334, 0.17 ) }
    dend_60 { pt3dadd( -72.9344, -17.2786, -32.3232, 1.88 ) }
    dend_60 { pt3dadd( -73.0228, -17.3722, -32.4178, 1.88 ) }
    dend_60 { pt3dadd( -74.1644, -18.8254, -33.6409, 1.2 ) }
    dend_60 { pt3dadd( -75.6881, -21.2042, -35.071, 0.34 ) }
    dend_60 { pt3dadd( -76.7728, -23.0943, -36.0618, 0.34 ) }
    dend_60 { pt3dadd( -77.9053, -25.4356, -37.041, 2.05 ) }
    dend_60 { pt3dadd( -78.7737, -27.4593, -37.7923, 0.51 ) }
    dend_60 { pt3dadd( -79.8055, -30.1146, -38.6605, 0.51 ) }
    dend_60 { pt3dadd( -80.7973, -32.9449, -39.4476, 0.17 ) }
    dend_60 { pt3dadd( -81.6259, -35.3338, -39.9601, 0.17 ) }
    dend_60 { pt3dadd( -82.677, -38.3687, -40.567, 0.17 ) }
    dend_60 { pt3dadd( -83.3043, -39.9413, -40.8422, 1.54 ) }
    dend_60 { pt3dadd( -83.8118, -40.9651, -40.9742, 1.54 ) }
    dend_60 { pt3dadd( -84.6184, -42.3526, -41.0119, 0.17 ) }
    dend_60 { pt3dadd( -85.6789, -43.9234, -40.9783, 0.17 ) }
    dend_60 { pt3dadd( -86.5789, -45.1359, -40.9008, 2.05 ) }
    dend_60 { pt3dadd( -87.5363, -46.2929, -40.7143, 0.34 ) }
    dend_60 { pt3dadd( -89.7279, -48.9077, -40.0558, 0.34 ) }
    dend_60 { pt3dadd( -91.0912, -50.5264, -39.5291, 1.54 ) }
    dend_60 { pt3dadd( -92.151, -51.7463, -39.0413, 1.54 ) }
    dend_60 { pt3dadd( -92.4529, -52.0755, -38.891, 0.17 ) }
    dend_60 { pt3dadd( -94.2437, -53.8994, -37.9578, 0.17 ) }
    dend_60 { pt3dadd( -95.1504, -54.7435, -37.4934, 1.03 ) }
    dend_60 { pt3dadd( -95.5209, -55.0802, -37.3297, 1.03 ) }
    dend_60 { pt3dadd( -96.4041, -55.8047, -37.0611, 0.17 ) }
    dend_60 { pt3dadd( -98.1886, -57.0608, -36.6331, 0.17 ) }
    dend_60 { pt3dadd( -98.4937, -57.258, -36.5835, 0.68 ) }
    dend_60 { pt3dadd( -99.5103, -57.8925, -36.4077, 0.17 ) }
    dend_60 { pt3dadd( -101.736, -59.1925, -36.0572, 0.17 ) }
    dend_60 { pt3dadd( -103.666, -60.3659, -35.6146, 0.17 ) }
    dend_60 { pt3dadd( -104.823, -61.1201, -35.3105, 1.37 ) }
    dend_60 { pt3dadd( -106.078, -62.0135, -34.945, 0.51 ) }
    dend_60 { pt3dadd( -108.162, -63.7551, -33.9696, 0.51 ) }
    dend_60 { pt3dadd( -109.658, -65.1915, -32.9994, 0.51 ) }
    dend_60 { pt3dadd( -111.238, -66.8408, -31.7504, 0.17 ) }
    dend_60 { pt3dadd( -112.203, -68.0428, -30.8924, 1.2 ) }
    dend_60 { pt3dadd( -112.747, -68.7102, -30.425, 1.2 ) }
    dend_60 { pt3dadd( -115.267, -71.7162, -28.3749, 0.17 ) }
    dend_60 { pt3dadd( -116.038, -72.5889, -27.8523, 0.17 ) }
    dend_60 { pt3dadd( -116.924, -73.5776, -27.1183, 1.88 ) }
    dend_60 { pt3dadd( -117.478, -74.1352, -26.6803, 0.17 ) }
    dend_60 { pt3dadd( -118.683, -75.3679, -25.6181, 0.17 ) }
    dend_60 { pt3dadd( -118.988, -75.6782, -25.3706, 0.86 ) }
    dend_60 { pt3dadd( -119.824, -76.5192, -24.9032, 0.86 ) }
    dend_60 { pt3dadd( -121.694, -78.67, -23.7957, 0.17 ) }
    dend_60 { pt3dadd( -122.169, -79.1984, -23.5398, 0.17 ) }
    dend_60 { pt3dadd( -122.744, -79.7676, -23.2905, 0.17 ) }
    dend_60 { pt3dadd( -123.263, -80.2706, -23.1143, 0.86 ) }
    dend_60 { pt3dadd( -124.731, -81.6255, -22.768, 0.34 ) }
    dend_60 { pt3dadd( -126.173, -82.9209, -22.5169, 0.34 ) }
    dend_60 { pt3dadd( -127.505, -84.1468, -22.369, 0.34 ) }
    dend_60 { pt3dadd( -130.436, -86.8622, -22.2413, 0.34 ) }
    dend_60 { pt3dadd( -131.927, -88.2727, -22.2514, 0.34 ) }
    dend_60 { pt3dadd( -135.072, -91.334, -22.3053, 0.34 ) }
    dend_60 { pt3dadd( -135.185, -91.4504, -22.3096, 0.34 ) }
    dend_60 { pt3dadd( -136.652, -93.0375, -22.4195, 0.34 ) }
    dend_60 { pt3dadd( -138.568, -95.3793, -22.7233, 1.88 ) }
    dend_60 { pt3dadd( -139.0, -95.9367, -22.8905, 1.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 93/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -50.4543, -15.7419, -18.5026, 0.68 ) }
    dend_57 { pt3dadd( -52.2382, -19.2993, -18.3812, 0.68 ) }
    dend_57 { pt3dadd( -52.8237, -20.467, -18.3413, 0.51 ) }
    dend_57 { pt3dadd( -53.7187, -22.2518, -18.2803, 0.51 ) }
    dend_57 { pt3dadd( -55.1492, -25.1045, -18.1829, 0.51 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 98/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -114.252, 4.69856, -20.3875, 0.17 ) }
    dend_53 { pt3dadd( -114.735, 4.67249, -20.994, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_53 { pt3dadd( -114.837, 4.66863, -21.1235, 0.17 ) }
    dend_53 { pt3dadd( -115.18, 4.66831, -21.5054, 0.17 ) }
    dend_53 { pt3dadd( -116.305, 4.70536, -22.9008, 0.86 ) }
    dend_53 { pt3dadd( -118.118, 4.76554, -25.0956, 0.34 ) }
    dend_53 { pt3dadd( -122.002, 4.81811, -30.1479, 0.34 ) }
    dend_53 { pt3dadd( -122.875, 4.82469, -31.2306, 1.71 ) }
    dend_53 { pt3dadd( -124.318, 4.85288, -32.9165, 0.17 ) }
    dend_53 { pt3dadd( -126.962, 4.91878, -35.7375, 0.17 ) }
    dend_53 { pt3dadd( -128.266, 4.95255, -37.0854, 0.17 ) }
    dend_53 { pt3dadd( -132.239, 5.05431, -40.5885, 0.17 ) }
    dend_53 { pt3dadd( -135.293, 5.17419, -42.7286, 0.17 ) }
    dend_53 { pt3dadd( -136.45, 5.19973, -43.4767, 1.88 ) }
    dend_53 { pt3dadd( -138.754, 5.2472, -44.7137, 0.17 ) }
    dend_53 { pt3dadd( -143.41, 5.34787, -46.5537, 0.17 ) }
    dend_53 { pt3dadd( -145.696, 5.43239, -47.3323, 0.17 ) }
    dend_53 { pt3dadd( -146.545, 5.46783, -47.5609, 1.2 ) }
    dend_53 { pt3dadd( -148.196, 5.54345, -48.1008, 0.17 ) }
    dend_53 { pt3dadd( -151.074, 5.62357, -49.2773, 0.17 ) }
    dend_53 { pt3dadd( -151.575, 5.6371, -49.5088, 0.17 ) }
    dend_53 { pt3dadd( -151.736, 5.64394, -49.5687, 0.17 ) }
    dend_53 { pt3dadd( -153.987, 5.6826, -50.6035, 0.17 ) }
    dend_53 { pt3dadd( -155.533, 5.64738, -51.3409, 2.05 ) }
    dend_53 { pt3dadd( -158.246, 5.51224, -52.628, 1.54 ) }
    dend_53 { pt3dadd( -159.084, 5.44429, -53.0021, 0.17 ) }
    dend_53 { pt3dadd( -161.636, 5.18223, -54.0259, 0.17 ) }
    dend_53 { pt3dadd( -165.966, 4.61121, -55.5236, 0.17 ) }
    dend_53 { pt3dadd( -167.654, 4.37823, -55.9018, 1.03 ) }
    dend_53 { pt3dadd( -169.035, 4.1718, -56.1007, 0.17 ) }
    dend_53 { pt3dadd( -170.398, 3.98231, -56.149, 0.17 ) }
    dend_53 { pt3dadd( -171.308, 3.84118, -56.129, 1.54 ) }
    dend_53 { pt3dadd( -172.329, 3.67634, -56.011, 0.17 ) }
    dend_53 { pt3dadd( -175.732, 3.28451, -55.1661, 0.17 ) }
    dend_53 { pt3dadd( -175.904, 3.26937, -55.1368, 0.17 ) }
    dend_53 { pt3dadd( -177.265, 3.21953, -55.1104, 1.54 ) }
    dend_53 { pt3dadd( -177.803, 3.24448, -55.1865, 0.17 ) }
    dend_53 { pt3dadd( -179.642, 3.47503, -55.6491, 0.17 ) }
    dend_53 { pt3dadd( -179.981, 3.55801, -55.7987, 1.54 ) }
    dend_53 { pt3dadd( -183.344, 4.61188, -57.5133, 0.17 ) }
    dend_53 { pt3dadd( -185.697, 5.48823, -58.6755, 0.17 ) }
    dend_53 { pt3dadd( -187.607, 6.23458, -59.5579, 2.05 ) }
    dend_53 { pt3dadd( -189.102, 6.83181, -60.1444, 0.17 ) }
    dend_53 { pt3dadd( -193.454, 8.64127, -61.3727, 0.17 ) }
    dend_53 { pt3dadd( -196.13, 9.71953, -61.8553, 1.2 ) }
    dend_53 { pt3dadd( -197.202, 10.1445, -61.9406, 0.17 ) }
    dend_53 { pt3dadd( -200.213, 11.319, -62.0682, 0.17 ) }
    dend_53 { pt3dadd( -204.045, 12.727, -61.7803, 0.17 ) }
    dend_53 { pt3dadd( -207.124, 13.6697, -60.995, 1.54 ) }
    dend_53 { pt3dadd( -208.499, 14.0069, -60.3927, 0.17 ) }
    dend_53 { pt3dadd( -209.096, 14.128, -60.0271, 0.86 ) }
    dend_53 { pt3dadd( -209.381, 14.1728, -59.8307, 0.17 ) }
    dend_53 { pt3dadd( -212.93, 14.4614, -56.9909, 0.17 ) }
    dend_53 { pt3dadd( -215.799, 14.4102, -54.5975, 0.17 ) }
    dend_53 { pt3dadd( -216.989, 14.3084, -53.6363, 1.54 ) }
    dend_53 { pt3dadd( -220.138, 13.9093, -51.1082, 0.17 ) }
    dend_53 { pt3dadd( -223.117, 13.3953, -48.6339, 0.17 ) }
    dend_53 { pt3dadd( -226.182, 12.7624, -45.9358, 1.2 ) }
    dend_53 { pt3dadd( -227.247, 12.4967, -44.9818, 1.2 ) }
    dend_53 { pt3dadd( -227.749, 12.3549, -44.4981, 0.17 ) }
    dend_53 { pt3dadd( -228.589, 12.1042, -43.661, 0.17 ) }
    dend_53 { pt3dadd( -231.217, 11.32, -41.0912, 0.86 ) }
    dend_53 { pt3dadd( -234.042, 10.5339, -38.1307, 0.34 ) }
    dend_53 { pt3dadd( -235.197, 10.3213, -37.0868, 0.34 ) }
    dend_53 { pt3dadd( -235.337, 10.3019, -36.9836, 0.34 ) }
    dend_53 { pt3dadd( -235.905, 10.2401, -36.5934, 1.03 ) }
    dend_53 { pt3dadd( -236.526, 10.1716, -36.2622, 0.17 ) }
    dend_53 { pt3dadd( -238.375, 9.83365, -36.3605, 0.17 ) }
    dend_53 { pt3dadd( -241.136, 9.061, -37.6924, 1.2 ) }
    dend_53 { pt3dadd( -242.402, 8.64752, -38.4731, 0.68 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 68/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -114.252, 4.69856, -20.3875, 0.17 ) }
    dend_52 { pt3dadd( -117.303, 8.84033, -21.5028, 0.17 ) }
    dend_52 { pt3dadd( -119.21, 11.3015, -21.8449, 0.17 ) }
    dend_52 { pt3dadd( -120.932, 13.4467, -21.7837, 1.03 ) }
    dend_52 { pt3dadd( -121.833, 14.5426, -21.6617, 0.17 ) }
    dend_52 { pt3dadd( -123.082, 16.0457, -21.4148, 0.17 ) }
    dend_52 { pt3dadd( -126.656, 20.2995, -20.6016, 0.17 ) }
    dend_52 { pt3dadd( -126.771, 20.4286, -20.555, 0.17 ) }
    dend_52 { pt3dadd( -128.723, 22.5659, -19.6491, 1.2 ) }
    dend_52 { pt3dadd( -129.032, 22.9214, -19.4863, 0.17 ) }
    dend_52 { pt3dadd( -130.885, 25.2332, -18.4198, 0.17 ) }
    dend_52 { pt3dadd( -131.357, 25.9128, -18.1252, 0.17 ) }
    dend_52 { pt3dadd( -131.883, 26.7236, -17.8241, 1.54 ) }
    dend_52 { pt3dadd( -132.544, 27.7343, -17.4811, 0.17 ) }
    dend_52 { pt3dadd( -133.591, 29.2936, -16.9937, 0.17 ) }
    dend_52 { pt3dadd( -135.2, 31.4804, -16.5902, 0.17 ) }
    dend_52 { pt3dadd( -135.654, 32.0476, -16.5446, 1.71 ) }
    dend_52 { pt3dadd( -136.897, 33.4337, -16.5372, 0.17 ) }
    dend_52 { pt3dadd( -138.124, 34.6944, -16.6033, 0.17 ) }
    dend_52 { pt3dadd( -140.481, 36.8319, -16.8331, 0.17 ) }
    dend_52 { pt3dadd( -144.45, 40.005, -17.3864, 1.54 ) }
    dend_52 { pt3dadd( -146.434, 41.352, -17.7129, 0.17 ) }
    dend_52 { pt3dadd( -148.853, 42.7454, -18.2253, 0.17 ) }
    dend_52 { pt3dadd( -148.853, 42.7454, -18.2253, 2.05 ) }
    dend_52 { pt3dadd( -151.322, 43.6917, -18.8948, 0.17 ) }
    dend_52 { pt3dadd( -152.332, 43.9618, -19.1797, 0.17 ) }
    dend_52 { pt3dadd( -156.089, 44.6143, -19.7463, 0.17 ) }
    dend_52 { pt3dadd( -159.69, 44.9957, -20.1321, 1.03 ) }
    dend_52 { pt3dadd( -160.54, 45.085, -20.172, 0.17 ) }
    dend_52 { pt3dadd( -160.71, 45.1145, -20.1654, 0.17 ) }
    dend_52 { pt3dadd( -161.52, 45.3537, -20.0173, 0.17 ) }
    dend_52 { pt3dadd( -165.101, 47.2053, -18.7284, 1.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_52 { pt3dadd( -166.015, 47.8938, -18.195, 0.17 ) }
    dend_52 { pt3dadd( -167.094, 48.8312, -17.4674, 0.17 ) }
    dend_52 { pt3dadd( -168.113, 49.8797, -16.8369, 1.03 ) }
    dend_52 { pt3dadd( -169.045, 50.9444, -16.3433, 0.17 ) }
    dend_52 { pt3dadd( -169.969, 52.1675, -15.9806, 0.17 ) }
    dend_52 { pt3dadd( -170.391, 52.7674, -15.82, 1.03 ) }
    dend_52 { pt3dadd( -170.595, 53.0756, -15.6761, 0.17 ) }
    dend_52 { pt3dadd( -171.268, 54.0574, -14.8542, 0.17 ) }
    dend_52 { pt3dadd( -171.345, 54.1695, -14.7385, 0.17 ) }
    dend_52 { pt3dadd( -171.621, 54.5941, -14.2207, 1.2 ) }
    dend_52 { pt3dadd( -173.153, 56.9445, -10.8622, 0.17 ) }
    dend_52 { pt3dadd( -173.653, 57.6945, -9.67929, 0.17 ) }
    dend_52 { pt3dadd( -174.689, 59.1166, -7.173, 1.54 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 13/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -162.983, 15.4244, -90.4754, 0.17 ) }
    dend_48 { pt3dadd( -162.859, 13.9335, -89.3267, 0.17 ) }
    dend_48 { pt3dadd( -162.739, 12.4912, -88.2154, 0.17 ) }
    dend_48 { pt3dadd( -162.362, 7.96484, -84.7278, 0.17 ) }
    dend_48 { pt3dadd( -162.318, 7.4396, -84.3231, 0.86 ) }
    dend_48 { pt3dadd( -162.313, 7.37745, -84.2752, 0.86 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 19/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -162.983, 15.4244, -90.4754, 0.17 ) }
    dend_47 { pt3dadd( -164.258, 15.7086, -91.2645, 0.17 ) }
    dend_47 { pt3dadd( -167.83, 16.623, -93.3272, 0.17 ) }
    dend_47 { pt3dadd( -167.974, 16.6684, -93.4242, 0.17 ) }
    dend_47 { pt3dadd( -170.951, 17.6272, -95.5344, 1.37 ) }
    dend_47 { pt3dadd( -172.483, 18.1136, -96.6091, 0.17 ) }
    dend_47 { pt3dadd( -175.773, 19.1881, -98.8341, 0.17 ) }
    dend_47 { pt3dadd( -176.995, 19.6417, -99.6875, 0.17 ) }
    dend_47 { pt3dadd( -180.273, 21.0099, -102.263, 1.03 ) }
    dend_47 { pt3dadd( -180.698, 21.19, -102.579, 0.17 ) }
    dend_47 { pt3dadd( -182.202, 21.8007, -103.564, 0.17 ) }
    dend_47 { pt3dadd( -183.701, 22.3768, -104.53, 0.68 ) }
    dend_47 { pt3dadd( -183.966, 22.4727, -104.738, 0.68 ) }
    dend_47 { pt3dadd( -185.874, 23.0509, -106.186, 0.17 ) }
    dend_47 { pt3dadd( -188.076, 23.5426, -107.748, 0.17 ) }
    dend_47 { pt3dadd( -189.346, 23.7745, -108.768, 1.2 ) }
    dend_47 { pt3dadd( -190.096, 23.8548, -109.409, 0.17 ) }
    dend_47 { pt3dadd( -192.934, 23.9649, -111.782, 0.17 ) }
    dend_47 { pt3dadd( -194.051, 23.963, -112.645, 0.17 ) }
    dend_47 { pt3dadd( -195.158, 23.8583, -113.4, 0.68 ) }
    dend_47 { pt3dadd( -196.664, 23.5179, -114.507, 0.17 ) }
    dend_47 { pt3dadd( -198.063, 23.0773, -115.499, 0.17 ) }
    dend_47 { pt3dadd( -198.794, 22.76, -116.009, 1.88 ) }
    dend_47 { pt3dadd( -199.313, 22.4992, -116.395, 0.17 ) }
    dend_47 { pt3dadd( -202.249, 20.9725, -118.771, 0.17 ) }
    dend_47 { pt3dadd( -203.814, 20.0416, -120.041, 1.37 ) }
    dend_47 { pt3dadd( -204.863, 19.3642, -120.894, 0.17 ) }
    dend_47 { pt3dadd( -207.297, 17.6547, -123.055, 0.17 ) }
    dend_47 { pt3dadd( -209.397, 16.1209, -124.964, 1.03 ) }
    dend_47 { pt3dadd( -209.874, 15.7433, -125.48, 0.17 ) }
    dend_47 { pt3dadd( -211.733, 14.178, -127.726, 0.17 ) }
    dend_47 { pt3dadd( -211.954, 13.995, -128.0, 0.17 ) }
    dend_47 { pt3dadd( -212.852, 13.2234, -129.137, 1.2 ) }
    dend_47 { pt3dadd( -213.523, 12.6046, -129.98, 0.17 ) }
    dend_47 { pt3dadd( -217.58, 8.72874, -135.001, 0.17 ) }
    dend_47 { pt3dadd( -217.908, 8.40519, -135.567, 1.37 ) }
    dend_47 { pt3dadd( -217.979, 8.33603, -135.715, 1.37 ) }
    dend_47 { pt3dadd( -218.694, 7.59905, -137.403, 0.34 ) }
    dend_47 { pt3dadd( -219.679, 6.54049, -140.044, 0.34 ) }
    dend_47 { pt3dadd( -219.791, 6.41697, -140.36, 0.34 ) }
    dend_47 { pt3dadd( -222.946, 2.97276, -150.02, 0.17 ) }
    dend_47 { pt3dadd( -223.063, 2.84679, -150.375, 0.17 ) }
    dend_47 { pt3dadd( -223.225, 2.67198, -150.874, 0.17 ) }
    dend_47 { pt3dadd( -223.299, 2.60629, -151.098, 0.17 ) }
    dend_47 { pt3dadd( -224.989, 1.41838, -155.416, 0.86 ) }
    dend_47 { pt3dadd( -226.752, 0.366702, -158.769, 0.17 ) }
    dend_47 { pt3dadd( -227.966, -0.0648231, -159.747, 0.17 ) }
    dend_47 { pt3dadd( -228.068, -0.0888616, -159.892, 1.37 ) }
    dend_47 { pt3dadd( -229.964, -0.446667, -163.726, 0.17 ) }
    dend_47 { pt3dadd( -230.192, -0.487627, -164.166, 1.03 ) }
    dend_47 { pt3dadd( -230.443, -0.530152, -164.661, 0.17 ) }
    dend_47 { pt3dadd( -231.454, -0.70773, -166.76, 0.17 ) }
    dend_47 { pt3dadd( -237.028, -1.99401, -177.308, 1.03 ) }
    dend_47 { pt3dadd( -239.471, -2.67764, -181.68, 0.17 ) }
    dend_47 { pt3dadd( -242.012, -3.47318, -186.023, 0.17 ) }
    dend_47 { pt3dadd( -242.213, -3.55045, -186.351, 1.03 ) }
    dend_47 { pt3dadd( -245.442, -5.05902, -191.325, 0.17 ) }
    dend_47 { pt3dadd( -249.308, -7.27942, -196.634, 0.17 ) }
    dend_47 { pt3dadd( -251.063, -8.58647, -198.175, 1.2 ) }
    dend_47 { pt3dadd( -251.541, -9.04054, -198.546, 0.17 ) }
    dend_47 { pt3dadd( -253.403, -11.455, -200.313, 0.17 ) }
    dend_47 { pt3dadd( -253.938, -12.4064, -200.836, 0.68 ) }
    dend_47 { pt3dadd( -254.179, -13.1359, -201.089, 0.17 ) }
    dend_47 { pt3dadd( -254.374, -15.5428, -201.914, 0.17 ) }
    dend_47 { pt3dadd( -254.445, -19.0895, -203.359, 1.37 ) }
    dend_47 { pt3dadd( -254.418, -20.7008, -204.176, 0.17 ) }
    dend_47 { pt3dadd( -254.128, -23.748, -205.877, 0.17 ) }
    dend_47 { pt3dadd( -253.855, -24.6133, -206.246, 1.03 ) }
    dend_47 { pt3dadd( -253.698, -24.976, -206.374, 0.17 ) }
    dend_47 { pt3dadd( -251.576, -29.3064, -207.766, 0.17 ) }
    dend_47 { pt3dadd( -251.39, -29.6555, -207.853, 0.17 ) }
    dend_47 { pt3dadd( -248.997, -33.8934, -208.727, 0.17 ) }
    dend_47 { pt3dadd( -244.017, -41.9967, -210.288, 0.17 ) }
    dend_47 { pt3dadd( -243.731, -42.4538, -210.357, 1.03 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 93/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 12.1015, 68.9761, -22.4759, 0.17 ) }
    dend_39 { pt3dadd( 12.1776, 69.7272, -22.5392, 0.17 ) }
    dend_39 { pt3dadd( 12.2256, 70.3593, -22.585, 0.17 ) }
    dend_39 { pt3dadd( 12.3371, 72.079, -22.7006, 0.17 ) }
    dend_39 { pt3dadd( 12.4558, 72.9001, -22.649, 1.71 ) }
    dend_39 { pt3dadd( 12.7799, 74.763, -22.438, 0.17 ) }
    dend_39 { pt3dadd( 13.293, 77.7214, -22.0352, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_39 { pt3dadd( 13.3395, 77.9863, -21.9907, 1.54 ) }
    dend_39 { pt3dadd( 13.5727, 79.4769, -21.7271, 0.17 ) }
    dend_39 { pt3dadd( 14.2449, 83.7377, -20.9527, 0.17 ) }
    dend_39 { pt3dadd( 14.688, 86.4448, -20.4713, 1.37 ) }
    dend_39 { pt3dadd( 14.7763, 87.2573, -20.3453, 0.17 ) }
    dend_39 { pt3dadd( 14.8057, 87.5319, -20.3041, 0.17 ) }
    dend_39 { pt3dadd( 15.1501, 91.815, -19.741, 0.17 ) }
    dend_39 { pt3dadd( 15.1807, 92.8088, -19.6515, 1.2 ) }
    dend_39 { pt3dadd( 15.1159, 93.8363, -19.6588, 0.17 ) }
    dend_39 { pt3dadd( 14.6433, 99.6517, -19.6508, 0.17 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 10/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 12.1015, 68.9761, -22.4759, 0.86 ) }
    dend_38 { pt3dadd( 15.2064, 69.588, -19.1335, 0.86 ) }
    dend_38 { pt3dadd( 16.3876, 69.8208, -17.8619, 0.86 ) }
    dend_38 { pt3dadd( 17.7841, 70.096, -16.3586, 0.34 ) }
    dend_38 { pt3dadd( 18.951, 70.326, -15.1025, 0.34 ) }
    dend_38 { pt3dadd( 21.0129, 70.7323, -12.8829, 0.34 ) }
    dend_38 { pt3dadd( 27.6594, 72.0422, -5.7279, 0.17 ) }
    // Section: dend_27, id: dend_27, parent: dend_21 (entry count 17/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 38.6203, 19.5371, 18.4963, 0.17 ) }
    dend_27 { pt3dadd( 35.2582, 24.6196, 18.6089, 0.17 ) }
    dend_27 { pt3dadd( 30.0676, 32.5636, 18.5689, 0.17 ) }
    dend_27 { pt3dadd( 24.4015, 40.086, 17.8144, 0.17 ) }
    dend_27 { pt3dadd( 18.4622, 47.2081, 16.2386, 0.17 ) }
    dend_27 { pt3dadd( 12.7209, 54.5118, 14.693, 0.17 ) }
    dend_27 { pt3dadd( 7.7631, 62.0846, 12.1177, 0.17 ) }
    dend_27 { pt3dadd( 1.40209, 68.7115, 10.2557, 0.17 ) }
    dend_27 { pt3dadd( -4.10044, 76.3509, 9.40638, 0.17 ) }
    dend_27 { pt3dadd( -9.18435, 83.7896, 6.7246, 0.17 ) }
    dend_27 { pt3dadd( -15.4982, 89.3719, 2.83191, 0.17 ) }
    dend_27 { pt3dadd( -21.2272, 95.8824, -0.622688, 0.17 ) }
    dend_27 { pt3dadd( -26.9338, 102.583, -3.78093, 0.17 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 30/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 38.6203, 19.5371, 18.4963, 0.68 ) }
    dend_22 { pt3dadd( 39.7701, 19.5049, 15.971, 0.68 ) }
    dend_22 { pt3dadd( 41.9754, 19.4357, 12.1203, 0.17 ) }
    dend_22 { pt3dadd( 51.2405, 19.0741, -1.55221, 0.17 ) }
    dend_22 { pt3dadd( 51.3074, 19.0672, -1.63138, 0.17 ) }
    dend_22 { pt3dadd( 53.5929, 18.7722, -3.801, 0.17 ) }
    dend_22 { pt3dadd( 58.059, 18.1357, -7.54682, 0.17 ) }
    dend_22 { pt3dadd( 59.2236, 17.9492, -8.30617, 1.37 ) }
    dend_22 { pt3dadd( 60.7012, 17.6878, -8.84266, 0.17 ) }
    dend_22 { pt3dadd( 66.0917, 16.8153, -9.44432, 0.17 ) }
    dend_22 { pt3dadd( 69.9029, 16.2284, -9.85929, 0.17 ) }
    dend_22 { pt3dadd( 70.1007, 16.1967, -9.88106, 0.17 ) }
    dend_22 { pt3dadd( 74.1072, 15.5979, -10.3138, 0.17 ) }
    dend_22 { pt3dadd( 77.9414, 15.0401, -10.7251, 0.17 ) }
    dend_22 { pt3dadd( 81.8753, 14.8362, -11.0771, 0.17 ) }
    dend_22 { pt3dadd( 82.266, 14.8985, -11.1475, 0.17 ) }
    dend_22 { pt3dadd( 83.9281, 15.4558, -11.6359, 0.17 ) }
    dend_22 { pt3dadd( 87.2298, 17.179, -12.9523, 0.17 ) }
    dend_22 { pt3dadd( 87.3736, 17.3025, -13.018, 0.17 ) }
    dend_22 { pt3dadd( 90.8266, 21.5417, -14.9145, 0.17 ) }
    dend_22 { pt3dadd( 95.3201, 28.1421, -18.0838, 0.17 ) }
    dend_22 { pt3dadd( 95.7193, 28.7718, -18.3889, 1.2 ) }
    dend_22 { pt3dadd( 96.0163, 29.2798, -18.6328, 0.17 ) }
    dend_22 { pt3dadd( 99.8773, 36.403, -21.9281, 0.17 ) }
    dend_22 { pt3dadd( 104.1, 44.1098, -25.4586, 0.17 ) }
    dend_22 { pt3dadd( 107.703, 50.4063, -28.8776, 0.17 ) }
    dend_22 { pt3dadd( 107.893, 50.7231, -29.0488, 1.2 ) }
    dend_22 { pt3dadd( 108.18, 51.2084, -29.3647, 0.17 ) }
    dend_22 { pt3dadd( 109.417, 53.3222, -30.8882, 0.17 ) }
    dend_22 { pt3dadd( 109.733, 53.8912, -31.3924, 0.86 ) }
    dend_22 { pt3dadd( 113.913, 60.4323, -38.1751, 0.17 ) }
    dend_22 { pt3dadd( 116.325, 63.8704, -42.0009, 0.17 ) }
    dend_22 { pt3dadd( 118.725, 67.2055, -45.9146, 1.54 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -1.97805, -41.1138, -11.9, 1.03 ) }
    dend_7 { pt3dadd( -2.99638, -43.1042, -11.962, 1.03 ) }
    dend_7 { pt3dadd( -4.03566, -45.551, -12.0244, 1.54 ) }
    dend_7 { pt3dadd( -4.42463, -46.7309, -12.0462, 0.68 ) }
    dend_7 { pt3dadd( -5.34003, -51.0246, -12.4386, 0.68 ) }
    dend_7 { pt3dadd( -5.73652, -53.4174, -12.2017, 0.68 ) }
    dend_7 { pt3dadd( -5.94235, -55.1681, -11.7047, 0.17 ) }
    dend_7 { pt3dadd( -5.98489, -56.7357, -10.9069, 0.86 ) }
    dend_7 { pt3dadd( -5.88543, -58.2168, -9.82767, 0.86 ) }
    dend_7 { pt3dadd( -5.58949, -61.0682, -6.84811, 0.51 ) }
    dend_7 { pt3dadd( -4.30925, -68.2457, 1.73435, 0.17 ) }
    dend_7 { pt3dadd( -4.15292, -69.2144, 2.90366, 1.03 ) }
    dend_7 { pt3dadd( -4.02631, -70.4942, 4.36857, 1.03 ) }
    dend_7 { pt3dadd( -4.00495, -70.9728, 4.86482, 1.03 ) }
    dend_7 { pt3dadd( -4.06746, -74.4115, 7.88479, 0.51 ) }
    dend_7 { pt3dadd( -4.28371, -77.6415, 10.1638, 0.51 ) }
    dend_7 { pt3dadd( -4.3475, -79.041, 10.589, 1.2 ) }
    dend_7 { pt3dadd( -4.369, -80.9779, 11.0602, 1.88 ) }
    dend_7 { pt3dadd( -4.31894, -82.5995, 11.3645, 0.51 ) }
    dend_7 { pt3dadd( -4.211, -85.1358, 11.6381, 0.51 ) }
    dend_7 { pt3dadd( -4.16473, -86.2841, 11.5682, 0.51 ) }
    dend_7 { pt3dadd( -4.19084, -88.1078, 11.3429, 0.51 ) }
    dend_7 { pt3dadd( -4.34045, -91.2494, 10.828, 0.68 ) }
    dend_7 { pt3dadd( -4.41903, -92.42, 10.603, 0.68 ) }
    dend_7 { pt3dadd( -4.50824, -94.1471, 10.2598, 0.34 ) }
    dend_7 { pt3dadd( -4.59528, -98.0115, 9.51405, 1.54 ) }
    dend_7 { pt3dadd( -4.68364, -99.9492, 9.15908, 0.68 ) }
    dend_7 { pt3dadd( -4.9275, -101.881, 8.8257, 0.17 ) }
    dend_7 { pt3dadd( -5.23142, -103.321, 8.60201, 0.68 ) }
    dend_7 { pt3dadd( -5.87789, -105.886, 8.28403, 0.51 ) }
    dend_7 { pt3dadd( -6.38704, -107.61, 8.13919, 0.51 ) }
    dend_7 { pt3dadd( -6.88401, -109.278, 8.09402, 0.51 ) }
    dend_7 { pt3dadd( -7.73919, -112.042, 8.01625, 0.51 ) }
    dend_7 { pt3dadd( -8.33464, -113.803, 7.96203, 1.2 ) }
    dend_7 { pt3dadd( -9.00051, -115.529, 7.90131, 0.86 ) }
    dend_7 { pt3dadd( -9.85746, -117.578, 7.82308, 0.17 ) }
    dend_7 { pt3dadd( -10.3429, -118.886, 7.77883, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( -10.9623, -121.071, 7.84956, 0.17 ) }
    dend_7 { pt3dadd( -11.2949, -122.649, 7.98739, 1.54 ) }
    dend_7 { pt3dadd( -11.5354, -123.938, 8.14407, 1.03 ) }
    dend_7 { pt3dadd( -11.7711, -125.101, 8.30804, 0.34 ) }
    dend_7 { pt3dadd( -12.3847, -127.867, 8.70566, 0.34 ) }
    dend_7 { pt3dadd( -13.0367, -130.68, 9.22153, 1.03 ) }
    dend_7 { pt3dadd( -13.2528, -131.733, 9.45075, 0.68 ) }
    dend_7 { pt3dadd( -13.6944, -133.946, 9.9671, 0.17 ) }
    dend_7 { pt3dadd( -14.0501, -135.631, 10.3516, 0.17 ) }
    dend_7 { pt3dadd( -14.6529, -138.242, 10.9232, 0.17 ) }
    dend_7 { pt3dadd( -15.324, -140.853, 11.4058, 1.54 ) }
    dend_7 { pt3dadd( -15.735, -142.608, 11.6354, 0.68 ) }
    dend_7 { pt3dadd( -15.9841, -143.862, 11.7608, 0.51 ) }
    dend_7 { pt3dadd( -16.3896, -146.391, 11.9416, 0.51 ) }
    dend_7 { pt3dadd( -16.4394, -146.71, 11.9489, 0.51 ) }
    dend_7 { pt3dadd( -16.9745, -149.527, 11.8257, 0.51 ) }
    dend_7 { pt3dadd( -17.4304, -151.382, 11.6029, 0.51 ) }
    dend_7 { pt3dadd( -17.8269, -152.866, 11.4038, 0.51 ) }
    dend_7 { pt3dadd( -17.8739, -153.024, 11.3823, 0.51 ) }
    dend_7 { pt3dadd( -18.5291, -155.078, 10.8648, 1.37 ) }
    dend_7 { pt3dadd( -18.5786, -155.222, 10.8257, 1.37 ) }
    dend_7 { pt3dadd( -19.6531, -157.787, 10.0118, 0.86 ) }
    dend_7 { pt3dadd( -19.8125, -158.096, 9.90862, 0.17 ) }
    dend_7 { pt3dadd( -20.8809, -160.041, 9.29844, 0.68 ) }
    dend_7 { pt3dadd( -22.5474, -163.085, 8.21649, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 25/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -1.97805, -41.1138, -11.9, 0.86 ) }
    dend_4 { pt3dadd( 0.177423, -44.817, -21.6236, 0.86 ) }
    dend_4 { pt3dadd( 0.230671, -44.9085, -21.8638, 0.86 ) }
    dend_4 { pt3dadd( 0.868228, -46.0038, -24.7399, 0.86 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 29/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -139.0, -95.9367, -22.8905, 0.17 ) }
    dend_62 { pt3dadd( -145.097, -96.8833, -23.8371, 0.17 ) }
    dend_62 { pt3dadd( -148.244, -97.5223, -23.5466, 0.17 ) }
    dend_62 { pt3dadd( -149.554, -97.7699, -23.2615, 1.03 ) }
    dend_62 { pt3dadd( -150.63, -97.973, -23.0278, 0.17 ) }
    dend_62 { pt3dadd( -154.294, -98.6651, -22.231, 0.17 ) }
    dend_62 { pt3dadd( -156.054, -98.9976, -21.8482, 1.03 ) }
    dend_62 { pt3dadd( -159.456, -99.7758, -20.3492, 0.17 ) }
    dend_62 { pt3dadd( -161.283, -100.113, -19.3568, 0.17 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 38/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -139.0, -95.9367, -22.8905, 0.17 ) }
    dend_61 { pt3dadd( -140.961, -97.7659, -22.793, 0.17 ) }
    dend_61 { pt3dadd( -142.972, -99.5342, -22.4408, 0.17 ) }
    dend_61 { pt3dadd( -144.383, -100.725, -22.1235, 0.86 ) }
    dend_61 { pt3dadd( -144.867, -101.102, -22.0071, 0.17 ) }
    dend_61 { pt3dadd( -145.843, -101.832, -21.7639, 0.17 ) }
    dend_61 { pt3dadd( -148.75, -103.952, -21.0344, 0.17 ) }
    dend_61 { pt3dadd( -150.813, -105.293, -20.3371, 1.54 ) }
    dend_61 { pt3dadd( -150.985, -105.428, -20.2263, 0.17 ) }
    dend_61 { pt3dadd( -152.049, -106.622, -18.9447, 0.17 ) }
    dend_61 { pt3dadd( -152.121, -106.723, -18.8232, 1.2 ) }
    dend_61 { pt3dadd( -152.357, -107.168, -18.3315, 0.17 ) }
    dend_61 { pt3dadd( -153.314, -109.511, -16.0126, 0.17 ) }
    dend_61 { pt3dadd( -154.485, -112.504, -13.4017, 0.17 ) }
    dend_61 { pt3dadd( -155.365, -115.022, -11.5786, 1.54 ) }
    dend_61 { pt3dadd( -155.529, -115.608, -11.2584, 0.17 ) }
    dend_61 { pt3dadd( -156.392, -118.971, -9.97491, 0.17 ) }
    dend_61 { pt3dadd( -156.825, -121.033, -9.26481, 1.2 ) }
    dend_61 { pt3dadd( -157.07, -122.332, -8.89784, 0.86 ) }
    dend_61 { pt3dadd( -157.697, -125.317, -8.17171, 0.17 ) }
    dend_61 { pt3dadd( -158.47, -128.958, -7.30836, 0.17 ) }
    dend_61 { pt3dadd( -159.02, -131.583, -6.61074, 0.17 ) }
    dend_61 { pt3dadd( -160.324, -137.757, -4.72746, 0.17 ) }
    dend_61 { pt3dadd( -160.38, -137.991, -4.65398, 0.17 ) }
    dend_61 { pt3dadd( -161.375, -141.55, -3.37612, 0.17 ) }
    dend_61 { pt3dadd( -161.847, -142.973, -2.81022, 0.86 ) }
    dend_61 { pt3dadd( -162.154, -143.858, -2.5004, 0.86 ) }
    dend_61 { pt3dadd( -162.319, -144.368, -2.38237, 0.17 ) }
    dend_61 { pt3dadd( -162.956, -146.496, -2.17783, 0.17 ) }
    dend_61 { pt3dadd( -163.562, -149.155, -1.95771, 1.37 ) }
    dend_61 { pt3dadd( -163.764, -150.643, -1.85614, 0.17 ) }
    dend_61 { pt3dadd( -164.058, -154.313, -1.64314, 0.17 ) }
    dend_61 { pt3dadd( -164.149, -157.416, -1.51678, 0.17 ) }
    dend_61 { pt3dadd( -164.147, -157.595, -1.51518, 0.17 ) }
    dend_61 { pt3dadd( -164.05, -159.568, -1.61523, 0.17 ) }
    dend_61 { pt3dadd( -163.996, -160.59, -1.74748, 1.37 ) }
    dend_61 { pt3dadd( -163.964, -161.83, -2.09003, 0.34 ) }
    dend_61 { pt3dadd( -163.963, -162.64, -2.47474, 0.17 ) }
    dend_61 { pt3dadd( -164.036, -164.9, -3.91851, 0.17 ) }
    dend_61 { pt3dadd( -164.146, -165.996, -4.71774, 1.03 ) }
    dend_61 { pt3dadd( -164.355, -166.831, -5.42727, 1.03 ) }
    dend_61 { pt3dadd( -165.645, -169.951, -8.3017, 0.17 ) }
    dend_61 { pt3dadd( -166.349, -170.913, -9.55444, 0.17 ) }
    dend_61 { pt3dadd( -166.648, -171.183, -10.0319, 1.03 ) }
    dend_61 { pt3dadd( -166.859, -171.297, -10.2684, 0.17 ) }
    dend_61 { pt3dadd( -168.33, -171.733, -11.437, 0.17 ) }
    dend_61 { pt3dadd( -169.143, -171.904, -11.9773, 1.71 ) }
    dend_61 { pt3dadd( -172.718, -172.405, -13.6017, 0.68 ) }
    dend_61 { pt3dadd( -173.614, -172.483, -14.0037, 0.17 ) }
    dend_61 { pt3dadd( -177.27, -172.875, -15.7276, 0.17 ) }
    dend_61 { pt3dadd( -180.182, -173.238, -17.1546, 0.17 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 89/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -55.1492, -25.1045, -18.1829, 0.17 ) }
    dend_59 { pt3dadd( -60.8447, -24.4196, -12.6679, 0.17 ) }
    dend_59 { pt3dadd( -64.8891, -23.6516, -7.91551, 0.17 ) }
    dend_59 { pt3dadd( -71.0623, -22.0969, 0.498549, 0.17 ) }
    dend_59 { pt3dadd( -75.0474, -21.0933, 5.9302, 0.17 ) }
    dend_59 { pt3dadd( -78.6183, -20.194, 10.7974, 0.17 ) }
    dend_59 { pt3dadd( -87.4692, -17.965, 22.861, 0.17 ) }
    dend_59 { pt3dadd( -90.0738, -16.8098, 27.4519, 0.17 ) }
    dend_59 { pt3dadd( -91.9919, -15.5095, 31.8448, 0.17 ) }
    dend_59 { pt3dadd( -96.8022, -13.5019, 41.969, 0.17 ) }
    dend_59 { pt3dadd( -100.048, -12.5376, 52.8892, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 0/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -55.1492, -25.1045, -18.1829, 0.51 ) }
    dend_58 { pt3dadd( -56.9146, -21.7543, -15.5527, 0.51 ) }
    dend_58 { pt3dadd( -62.6872, -12.2821, -8.31101, 0.51 ) }
    dend_58 { pt3dadd( -64.4171, -9.84022, -6.47037, 0.51 ) }
    dend_58 { pt3dadd( -65.5443, -8.42879, -5.41625, 0.51 ) }
    dend_58 { pt3dadd( -69.8147, -3.57473, -1.80313, 0.51 ) }
    dend_58 { pt3dadd( -71.1221, -2.26918, -0.801283, 0.34 ) }
    dend_58 { pt3dadd( -72.88, -0.804208, 0.481032, 0.34 ) }
    dend_58 { pt3dadd( -74.666, -0.0729807, 1.53325, 0.34 ) }
    dend_58 { pt3dadd( -75.5679, 0.228035, 2.09413, 0.86 ) }
    dend_58 { pt3dadd( -76.1674, 0.402495, 2.56826, 0.17 ) }
    dend_58 { pt3dadd( -78.22, 0.833427, 4.30571, 0.68 ) }
    dend_58 { pt3dadd( -83.4031, 2.11233, 9.46753, 0.68 ) }
    dend_58 { pt3dadd( -84.4737, 2.40134, 10.7078, 0.17 ) }
    dend_58 { pt3dadd( -85.4638, 2.71564, 11.9976, 0.17 ) }
    dend_58 { pt3dadd( -89.08, 3.98483, 17.0737, 0.51 ) }
    dend_58 { pt3dadd( -95.1886, 10.1841, 22.063, 0.51 ) }
    dend_58 { pt3dadd( -103.215, 14.9921, 25.7423, 0.51 ) }
    dend_58 { pt3dadd( -109.39, 21.681, 29.877, 0.51 ) }
    dend_58 { pt3dadd( -115.212, 28.4461, 34.391, 0.51 ) }
    dend_58 { pt3dadd( -120.729, 35.6786, 38.494, 0.51 ) }
    dend_58 { pt3dadd( -125.17, 44.1092, 41.2946, 0.51 ) }
    dend_58 { pt3dadd( -129.546, 52.8635, 42.9268, 0.51 ) }
    dend_58 { pt3dadd( -134.12, 61.1241, 46.0258, 0.51 ) }
    dend_58 { pt3dadd( -138.321, 68.9662, 50.5048, 0.51 ) }
    dend_58 { pt3dadd( -141.386, 76.6019, 56.1387, 0.51 ) }
    dend_58 { pt3dadd( -143.696, 84.7729, 61.32, 0.51 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 27/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -242.402, 8.64752, -38.4731, 0.17 ) }
    dend_55 { pt3dadd( -243.081, 6.07511, -39.4216, 0.17 ) }
    dend_55 { pt3dadd( -243.699, 3.71598, -40.183, 0.17 ) }
    dend_55 { pt3dadd( -243.918, 2.91156, -40.4202, 0.68 ) }
    dend_55 { pt3dadd( -243.962, 2.76248, -40.4612, 0.68 ) }
    dend_55 { pt3dadd( -244.205, 1.8883, -40.6886, 0.68 ) }
    dend_55 { pt3dadd( -244.338, 1.46802, -40.7888, 0.17 ) }
    dend_55 { pt3dadd( -245.209, -0.967822, -41.2836, 0.17 ) }
    dend_55 { pt3dadd( -245.474, -1.5817, -41.3738, 1.37 ) }
    dend_55 { pt3dadd( -245.808, -2.28906, -41.477, 1.37 ) }
    dend_55 { pt3dadd( -246.236, -3.01663, -41.5811, 0.17 ) }
    dend_55 { pt3dadd( -247.575, -5.11534, -41.5586, 0.17 ) }
    dend_55 { pt3dadd( -248.15, -5.93312, -41.4484, 0.17 ) }
    dend_55 { pt3dadd( -248.976, -6.95572, -41.176, 1.03 ) }
    dend_55 { pt3dadd( -249.574, -7.70788, -40.9466, 0.17 ) }
    dend_55 { pt3dadd( -251.105, -9.5684, -40.2944, 0.17 ) }
    dend_55 { pt3dadd( -253.379, -12.5654, -39.2824, 1.37 ) }
    dend_55 { pt3dadd( -253.837, -13.3032, -39.0022, 0.17 ) }
    dend_55 { pt3dadd( -254.389, -14.2902, -38.623, 0.17 ) }
    dend_55 { pt3dadd( -255.401, -16.2671, -37.9495, 0.68 ) }
    dend_55 { pt3dadd( -255.677, -16.857, -37.793, 0.17 ) }
    dend_55 { pt3dadd( -256.814, -19.4492, -37.2385, 0.17 ) }
    dend_55 { pt3dadd( -258.169, -22.1008, -36.8629, 0.68 ) }
    dend_55 { pt3dadd( -258.571, -22.7836, -36.7502, 0.17 ) }
    dend_55 { pt3dadd( -259.862, -24.7046, -36.3978, 0.17 ) }
    dend_55 { pt3dadd( -260.991, -25.8836, -36.1538, 1.37 ) }
    dend_55 { pt3dadd( -261.84, -26.5398, -36.0947, 0.17 ) }
    dend_55 { pt3dadd( -263.358, -27.31, -36.1701, 0.17 ) }
    dend_55 { pt3dadd( -264.923, -27.8986, -36.4134, 0.17 ) }
    dend_55 { pt3dadd( -265.326, -28.0418, -36.5266, 0.17 ) }
    dend_55 { pt3dadd( -268.455, -29.1203, -37.6558, 0.17 ) }
    dend_55 { pt3dadd( -270.795, -30.0553, -38.652, 1.03 ) }
    dend_55 { pt3dadd( -271.718, -30.4894, -39.1384, 0.51 ) }
    dend_55 { pt3dadd( -273.755, -31.6183, -40.3873, 0.17 ) }
    dend_55 { pt3dadd( -276.346, -33.4012, -42.2127, 0.17 ) }
    dend_55 { pt3dadd( -278.37, -35.1114, -43.8117, 0.17 ) }
    dend_55 { pt3dadd( -279.273, -36.1555, -44.674, 1.71 ) }
    dend_55 { pt3dadd( -280.135, -37.518, -45.5979, 0.17 ) }
    dend_55 { pt3dadd( -280.279, -37.89, -45.8514, 0.17 ) }
    dend_55 { pt3dadd( -280.321, -39.2203, -46.7222, 0.17 ) }
    dend_55 { pt3dadd( -280.275, -39.4098, -46.8272, 1.2 ) }
    dend_55 { pt3dadd( -280.094, -39.7564, -47.0355, 0.17 ) }
    dend_55 { pt3dadd( -279.005, -41.3857, -48.0161, 0.17 ) }
    dend_55 { pt3dadd( -278.063, -42.6145, -48.6344, 1.03 ) }
    dend_55 { pt3dadd( -277.336, -43.4625, -49.1252, 0.17 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 72/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -242.402, 8.64752, -38.4731, 0.17 ) }
    dend_54 { pt3dadd( -243.763, 8.76188, -38.7507, 0.17 ) }
    dend_54 { pt3dadd( -245.367, 8.90735, -39.1362, 0.17 ) }
    dend_54 { pt3dadd( -246.404, 8.98649, -39.3739, 0.86 ) }
    dend_54 { pt3dadd( -247.667, 9.04953, -39.647, 0.17 ) }
    dend_54 { pt3dadd( -250.1, 9.12049, -40.1546, 0.17 ) }
    dend_54 { pt3dadd( -251.161, 9.15145, -40.376, 1.03 ) }
    dend_54 { pt3dadd( -252.065, 9.17409, -40.5376, 0.17 ) }
    dend_54 { pt3dadd( -254.432, 9.20512, -40.992, 0.17 ) }
    dend_54 { pt3dadd( -255.464, 9.1847, -41.1851, 0.17 ) }
    dend_54 { pt3dadd( -255.787, 9.16984, -41.2305, 0.68 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 83/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 14.6433, 99.6517, -19.6508, 0.17 ) }
    dend_41 { pt3dadd( 14.6313, 102.928, -19.2653, 0.17 ) }
    dend_41 { pt3dadd( 14.6351, 107.025, -18.8061, 0.17 ) }
    dend_41 { pt3dadd( 14.6482, 109.925, -18.5115, 0.17 ) }
    dend_41 { pt3dadd( 14.4171, 114.38, -18.1005, 1.2 ) }
    dend_41 { pt3dadd( 14.2025, 116.718, -17.9046, 0.17 ) }
    dend_41 { pt3dadd( 13.8671, 119.339, -17.7213, 0.17 ) }
    dend_41 { pt3dadd( 13.8671, 119.339, -17.7213, 1.03 ) }
    dend_41 { pt3dadd( 13.4555, 120.963, -17.6643, 0.17 ) }
    dend_41 { pt3dadd( 12.1451, 125.25, -17.7929, 0.17 ) }
    dend_41 { pt3dadd( 11.6584, 126.729, -17.9428, 0.17 ) }
    dend_41 { pt3dadd( 10.4096, 130.445, -18.4125, 0.17 ) }
    dend_41 { pt3dadd( 9.18729, 134.534, -19.0348, 0.17 ) }
    dend_41 { pt3dadd( 8.99915, 135.29, -19.1635, 0.17 ) }
    dend_41 { pt3dadd( 8.36943, 138.459, -19.9334, 1.37 ) }
    dend_41 { pt3dadd( 8.21711, 139.402, -20.2065, 0.17 ) }
    dend_41 { pt3dadd( 7.92222, 141.476, -20.8498, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_41 { pt3dadd( 7.52825, 144.824, -21.9404, 0.17 ) }
    dend_41 { pt3dadd( 7.20067, 148.433, -23.1164, 0.17 ) }
    dend_41 { pt3dadd( 6.54991, 155.683, -25.3818, 0.17 ) }
    dend_41 { pt3dadd( 6.31895, 158.19, -26.097, 0.17 ) }
    dend_41 { pt3dadd( 6.12909, 159.916, -26.6071, 0.17 ) }
    dend_41 { pt3dadd( 5.91476, 161.252, -27.0168, 2.05 ) }
    dend_41 { pt3dadd( 5.71878, 162.069, -27.2692, 0.17 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 7/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 14.6433, 99.6517, -19.6508, 0.17 ) }
    dend_40 { pt3dadd( 12.1735, 97.5027, -18.6228, 0.17 ) }
    dend_40 { pt3dadd( 9.96466, 95.5809, -17.7033, 0.17 ) }
    dend_40 { pt3dadd( 6.10786, 92.2252, -16.0979, 0.17 ) }
    dend_40 { pt3dadd( 1.78954, 88.4679, -14.3004, 0.17 ) }
    dend_40 { pt3dadd( -3.85468, 83.557, -11.9509, 0.17 ) }
    dend_40 { pt3dadd( -5.32032, 82.2818, -11.3409, 0.17 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 118.725, 67.2055, -45.9146, 0.17 ) }
    dend_26 { pt3dadd( 121.157, 71.525, -45.8972, 0.17 ) }
    dend_26 { pt3dadd( 123.055, 74.8949, -45.8837, 0.17 ) }
    dend_26 { pt3dadd( 124.949, 78.2588, -45.8702, 0.17 ) }
    dend_26 { pt3dadd( 126.394, 80.8264, -45.8599, 0.17 ) }
    dend_26 { pt3dadd( 126.653, 81.2857, -45.858, 0.17 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 118.725, 67.2055, -45.9146, 0.17 ) }
    dend_23 { pt3dadd( 120.281, 74.4778, -46.478, 0.17 ) }
    dend_23 { pt3dadd( 120.744, 76.6393, -46.6455, 1.37 ) }
    dend_23 { pt3dadd( 120.889, 77.3186, -46.6981, 0.17 ) }
    dend_23 { pt3dadd( 121.6, 80.6393, -46.9554, 0.17 ) }
    // Section: dend_15, id: dend_15, parent: dend_7 (entry count 25/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -22.5474, -163.085, 8.21649, 1.2 ) }
    dend_15 { pt3dadd( -23.3175, -164.979, 8.72638, 1.2 ) }
    dend_15 { pt3dadd( -24.6081, -167.782, 11.4699, 0.17 ) }
    dend_15 { pt3dadd( -25.199, -168.812, 12.8322, 0.17 ) }
    dend_15 { pt3dadd( -26.5925, -170.814, 15.7285, 0.17 ) }
    dend_15 { pt3dadd( -28.1478, -172.643, 18.8987, 0.17 ) }
    dend_15 { pt3dadd( -28.2046, -172.705, 19.0131, 0.17 ) }
    dend_15 { pt3dadd( -32.2689, -176.892, 27.5464, 1.54 ) }
    dend_15 { pt3dadd( -32.8964, -177.518, 28.9726, 0.17 ) }
    dend_15 { pt3dadd( -33.6032, -178.096, 30.6767, 0.17 ) }
    dend_15 { pt3dadd( -36.2621, -179.657, 37.4109, 0.17 ) }
    dend_15 { pt3dadd( -36.4181, -179.731, 37.8417, 1.37 ) }
    dend_15 { pt3dadd( -36.5852, -179.819, 38.2672, 0.17 ) }
    dend_15 { pt3dadd( -38.4306, -181.109, 41.2934, 0.17 ) }
    dend_15 { pt3dadd( -41.7215, -184.306, 48.5712, 0.17 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -22.5474, -163.085, 8.21649, 0.86 ) }
    dend_8 { pt3dadd( -22.1824, -166.741, 9.62061, 0.86 ) }
    dend_8 { pt3dadd( -22.0013, -170.782, 10.9942, 0.86 ) }
    dend_8 { pt3dadd( -22.0069, -171.481, 11.2055, 0.86 ) }
    dend_8 { pt3dadd( -22.1519, -175.189, 12.247, 0.68 ) }
    dend_8 { pt3dadd( -22.292, -177.588, 12.8339, 0.34 ) }
    dend_8 { pt3dadd( -22.4303, -181.655, 13.487, 0.34 ) }
    dend_8 { pt3dadd( -22.5073, -182.685, 13.5615, 1.2 ) }
    dend_8 { pt3dadd( -22.622, -184.27, 13.5752, 1.2 ) }
    dend_8 { pt3dadd( -22.649, -184.552, 13.5601, 0.34 ) }
    dend_8 { pt3dadd( -23.0496, -188.03, 13.1637, 0.34 ) }
    dend_8 { pt3dadd( -23.5946, -192.557, 12.5997, 0.34 ) }
    dend_8 { pt3dadd( -23.8337, -194.862, 12.3182, 1.88 ) }
    dend_8 { pt3dadd( -24.0175, -196.839, 12.0983, 0.68 ) }
    dend_8 { pt3dadd( -24.2772, -200.725, 11.7325, 0.51 ) }
    dend_8 { pt3dadd( -24.5715, -204.799, 11.4138, 0.51 ) }
    dend_8 { pt3dadd( -24.8036, -207.192, 11.2681, 1.03 ) }
    dend_8 { pt3dadd( -25.1486, -209.609, 11.1756, 1.71 ) }
    dend_8 { pt3dadd( -25.5165, -212.03, 11.0569, 0.68 ) }
    dend_8 { pt3dadd( -25.9049, -214.506, 10.946, 0.17 ) }
    dend_8 { pt3dadd( -26.3831, -217.522, 10.8286, 0.17 ) }
    dend_8 { pt3dadd( -26.8194, -219.639, 10.7453, 1.03 ) }
    dend_8 { pt3dadd( -27.7488, -223.257, 10.6116, 1.03 ) }
    dend_8 { pt3dadd( -29.3702, -229.073, 10.3713, 1.03 ) }
    dend_8 { pt3dadd( -29.4804, -229.46, 10.3548, 1.03 ) }
    dend_8 { pt3dadd( -29.5922, -229.877, 10.3385, 1.03 ) }
    dend_8 { pt3dadd( -29.8818, -231.059, 10.2976, 0.17 ) }
    dend_8 { pt3dadd( -30.1906, -232.451, 10.2558, 0.17 ) }
    dend_8 { pt3dadd( -30.6748, -234.761, 10.192, 0.34 ) }
    dend_8 { pt3dadd( -30.89, -235.603, 10.1611, 0.34 ) }
    dend_8 { pt3dadd( -31.6895, -238.494, 10.0429, 0.34 ) }
    dend_8 { pt3dadd( -33.0371, -245.117, 9.86816, 1.37 ) }
    dend_8 { pt3dadd( -33.2199, -246.342, 9.84904, 0.17 ) }
    dend_8 { pt3dadd( -33.2471, -246.548, 9.84653, 0.17 ) }
    dend_8 { pt3dadd( -33.5462, -248.732, 9.81771, 0.17 ) }
    dend_8 { pt3dadd( -33.7525, -250.721, 9.8046, 0.34 ) }
    dend_8 { pt3dadd( -33.887, -256.385, 9.85707, 0.34 ) }
    dend_8 { pt3dadd( -33.7648, -257.807, 9.90118, 0.34 ) }
    dend_8 { pt3dadd( -33.7547, -258.015, 9.9061, 0.34 ) }
    dend_8 { pt3dadd( -33.7803, -260.113, 9.93034, 0.34 ) }
    dend_8 { pt3dadd( -33.7803, -260.113, 9.93034, 1.03 ) }
    dend_8 { pt3dadd( -33.8078, -261.125, 9.96494, 0.17 ) }
    dend_8 { pt3dadd( -33.8158, -262.141, 10.0789, 0.17 ) }
    dend_8 { pt3dadd( -33.5529, -265.137, 10.4372, 1.37 ) }
    dend_8 { pt3dadd( -33.1127, -267.902, 10.7773, 0.51 ) }
    dend_8 { pt3dadd( -32.6859, -269.893, 10.964, 0.17 ) }
    dend_8 { pt3dadd( -31.2383, -275.308, 11.4598, 0.51 ) }
    dend_8 { pt3dadd( -29.7187, -279.809, 11.6596, 0.51 ) }
    dend_8 { pt3dadd( -28.3202, -283.607, 11.661, 1.88 ) }
    dend_8 { pt3dadd( -27.1603, -286.453, 11.3068, 1.2 ) }
    dend_8 { pt3dadd( -26.1577, -288.887, 10.6867, 0.17 ) }
    dend_8 { pt3dadd( -25.1677, -291.456, 9.636, 0.51 ) }
    dend_8 { pt3dadd( -23.938, -295.37, 7.27577, 1.03 ) }
    dend_8 { pt3dadd( -23.2964, -297.522, 5.75121, 1.03 ) }
    dend_8 { pt3dadd( -22.0022, -302.635, 2.23352, 0.17 ) }
    dend_8 { pt3dadd( -21.7158, -303.906, 1.44206, 0.17 ) }
    dend_8 { pt3dadd( -21.6805, -304.088, 1.35323, 0.17 ) }
    dend_8 { pt3dadd( -21.2321, -306.434, 0.595623, 0.17 ) }
    dend_8 { pt3dadd( -20.4442, -309.563, 0.608481, 1.2 ) }
    dend_8 { pt3dadd( -19.6341, -311.953, 1.04604, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_8 { pt3dadd( -19.1711, -313.358, 1.49206, 0.17 ) }
    dend_8 { pt3dadd( -19.1064, -313.546, 1.54604, 0.17 ) }
    dend_8 { pt3dadd( -18.2395, -316.237, 2.17516, 0.17 ) }
    dend_8 { pt3dadd( -18.1766, -316.445, 2.20969, 1.54 ) }
    dend_8 { pt3dadd( -17.6859, -318.456, 2.35491, 0.17 ) }
    dend_8 { pt3dadd( -17.3645, -319.712, 2.44781, 0.17 ) }
    dend_8 { pt3dadd( -17.0311, -321.196, 2.6294, 0.17 ) }
    dend_8 { pt3dadd( -16.655, -322.979, 2.91705, 1.37 ) }
    dend_8 { pt3dadd( -16.4728, -324.179, 3.13991, 0.68 ) }
    dend_8 { pt3dadd( -16.4359, -324.454, 3.19491, 0.68 ) }
    dend_8 { pt3dadd( -16.0839, -327.386, 3.81894, 0.17 ) }
    dend_8 { pt3dadd( -15.9513, -329.981, 5.12102, 0.17 ) }
    dend_8 { pt3dadd( -15.9436, -330.689, 5.52205, 1.71 ) }
    dend_8 { pt3dadd( -15.9938, -332.251, 6.51742, 1.54 ) }
    dend_8 { pt3dadd( -16.064, -333.249, 7.21494, 0.17 ) }
    dend_8 { pt3dadd( -16.233, -334.839, 8.42357, 0.17 ) }
    dend_8 { pt3dadd( -17.5109, -341.046, 14.092, 2.05 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 17/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 0.868228, -46.0038, -24.7399, 0.17 ) }
    dend_6 { pt3dadd( 0.831978, -46.7698, -24.1895, 0.17 ) }
    dend_6 { pt3dadd( 0.726344, -48.4027, -22.9139, 0.17 ) }
    dend_6 { pt3dadd( 0.50936, -51.336, -20.5234, 1.2 ) }
    dend_6 { pt3dadd( 0.0116947, -55.5697, -16.1953, 0.17 ) }
    dend_6 { pt3dadd( -0.436051, -58.8058, -12.6846, 0.17 ) }
    dend_6 { pt3dadd( -0.481457, -59.1742, -12.2779, 0.17 ) }
    dend_6 { pt3dadd( -0.684458, -61.0825, -10.0178, 1.37 ) }
    dend_6 { pt3dadd( -0.690854, -61.1443, -9.94384, 1.37 ) }
    dend_6 { pt3dadd( -0.99758, -65.4443, -5.00355, 0.17 ) }
    dend_6 { pt3dadd( -1.06914, -67.0559, -3.42284, 0.17 ) }
    dend_6 { pt3dadd( -1.13437, -68.1084, -2.27182, 0.17 ) }
    dend_6 { pt3dadd( -1.16006, -68.2616, -2.0646, 0.17 ) }
    dend_6 { pt3dadd( -1.54334, -70.4085, 0.911983, 0.17 ) }
    dend_6 { pt3dadd( -1.62587, -70.8875, 1.69144, 1.2 ) }
    dend_6 { pt3dadd( -1.67771, -71.1624, 2.19186, 0.17 ) }
    dend_6 { pt3dadd( -2.35744, -73.8765, 7.87597, 0.17 ) }
    dend_6 { pt3dadd( -3.20406, -76.9693, 14.6916, 0.17 ) }
    dend_6 { pt3dadd( -3.39073, -77.6662, 16.3307, 0.17 ) }
    dend_6 { pt3dadd( -3.82652, -79.6477, 21.581, 0.17 ) }
    dend_6 { pt3dadd( -3.84554, -79.7795, 21.9153, 0.17 ) }
    dend_6 { pt3dadd( -3.86146, -80.0733, 22.6045, 0.17 ) }
    dend_6 { pt3dadd( -3.7167, -81.0186, 24.3144, 0.17 ) }
    dend_6 { pt3dadd( -3.64339, -81.2777, 24.6343, 0.68 ) }
    dend_6 { pt3dadd( -3.36129, -82.5753, 26.1005, 0.68 ) }
    dend_6 { pt3dadd( -3.15459, -83.715, 27.1887, 0.68 ) }
    dend_6 { pt3dadd( -3.39191, -88.2253, 31.182, 0.17 ) }
    dend_6 { pt3dadd( -4.29631, -90.1551, 32.4894, 0.17 ) }
    dend_6 { pt3dadd( -5.18101, -91.2502, 32.9943, 1.2 ) }
    dend_6 { pt3dadd( -5.79291, -91.7912, 33.067, 0.17 ) }
    dend_6 { pt3dadd( -5.93029, -91.9041, 33.0652, 0.17 ) }
    dend_6 { pt3dadd( -11.3895, -96.9372, 31.4966, 0.17 ) }
    dend_6 { pt3dadd( -12.9461, -98.5268, 30.7259, 0.17 ) }
    dend_6 { pt3dadd( -13.6944, -99.3431, 30.3017, 0.17 ) }
    dend_6 { pt3dadd( -17.7822, -104.391, 27.7062, 0.17 ) }
    dend_6 { pt3dadd( -20.041, -107.554, 26.1893, 0.17 ) }
    dend_6 { pt3dadd( -24.1447, -113.987, 23.2691, 0.17 ) }
    dend_6 { pt3dadd( -26.0999, -117.667, 21.4431, 0.17 ) }
    dend_6 { pt3dadd( -27.1007, -119.502, 20.4139, 0.17 ) }
    dend_6 { pt3dadd( -28.2929, -121.577, 19.144, 0.17 ) }
    dend_6 { pt3dadd( -30.7312, -126.21, 16.3542, 0.17 ) }
    dend_6 { pt3dadd( -31.2948, -127.324, 15.6839, 0.17 ) }
    dend_6 { pt3dadd( -34.0633, -133.016, 12.7378, 0.17 ) }
    dend_6 { pt3dadd( -35.0609, -135.417, 11.5434, 0.17 ) }
    dend_6 { pt3dadd( -35.8519, -137.497, 10.5692, 0.17 ) }
    dend_6 { pt3dadd( -37.9943, -143.303, 8.01876, 0.17 ) }
    dend_6 { pt3dadd( -40.1457, -149.497, 5.72541, 0.17 ) }
    dend_6 { pt3dadd( -41.8212, -154.47, 4.12061, 0.17 ) }
    dend_6 { pt3dadd( -42.7106, -157.122, 3.41896, 0.17 ) }
    dend_6 { pt3dadd( -43.7547, -160.206, 2.62507, 0.17 ) }
    dend_6 { pt3dadd( -44.7554, -162.921, 1.90572, 0.17 ) }
    dend_6 { pt3dadd( -47.4676, -169.141, 0.22091, 0.17 ) }
    dend_6 { pt3dadd( -49.0745, -172.32, -0.531485, 1.71 ) }
    dend_6 { pt3dadd( -49.6185, -173.35, -0.824114, 0.17 ) }
    dend_6 { pt3dadd( -50.6156, -175.187, -1.49501, 0.17 ) }
    dend_6 { pt3dadd( -50.7781, -175.49, -1.62788, 0.17 ) }
    dend_6 { pt3dadd( -51.9363, -177.601, -2.72651, 0.17 ) }
    dend_6 { pt3dadd( -53.6126, -180.339, -4.79309, 0.17 ) }
    dend_6 { pt3dadd( -55.172, -182.817, -6.91231, 0.17 ) }
    dend_6 { pt3dadd( -56.4932, -185.002, -9.0466, 1.54 ) }
    dend_6 { pt3dadd( -56.7705, -185.488, -9.5621, 0.17 ) }
    dend_6 { pt3dadd( -57.2838, -186.387, -10.5052, 0.17 ) }
    dend_6 { pt3dadd( -58.8702, -189.342, -13.3027, 0.17 ) }
    dend_6 { pt3dadd( -59.2858, -190.27, -14.0104, 1.2 ) }
    dend_6 { pt3dadd( -59.2858, -190.27, -14.0104, 0.17 ) }
    dend_6 { pt3dadd( -59.9707, -191.818, -14.5314, 0.17 ) }
    dend_6 { pt3dadd( -61.2257, -194.692, -15.3186, 0.17 ) }
    dend_6 { pt3dadd( -62.6489, -197.856, -15.9092, 0.17 ) }
    dend_6 { pt3dadd( -62.7725, -198.096, -15.9357, 0.17 ) }
    dend_6 { pt3dadd( -63.9558, -200.707, -16.5841, 0.17 ) }
    dend_6 { pt3dadd( -64.057, -200.934, -16.6638, 0.17 ) }
    dend_6 { pt3dadd( -64.1246, -201.089, -16.7515, 0.17 ) }
    dend_6 { pt3dadd( -65.8118, -204.867, -19.6539, 0.17 ) }
    dend_6 { pt3dadd( -66.4772, -206.534, -21.0321, 0.17 ) }
    dend_6 { pt3dadd( -68.4584, -211.709, -25.1924, 0.17 ) }
    dend_6 { pt3dadd( -69.7055, -214.933, -27.698, 0.17 ) }
    dend_6 { pt3dadd( -71.9105, -220.478, -31.6794, 0.17 ) }
    dend_6 { pt3dadd( -74.1447, -226.06, -35.4456, 0.17 ) }
    dend_6 { pt3dadd( -76.6197, -231.829, -39.0708, 0.17 ) }
    dend_6 { pt3dadd( -78.3549, -235.582, -41.1391, 0.17 ) }
    dend_6 { pt3dadd( -80.1351, -238.832, -42.6204, 0.17 ) }
    dend_6 { pt3dadd( -82.8698, -243.562, -44.5073, 0.17 ) }
    dend_6 { pt3dadd( -83.5534, -244.643, -44.8559, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_6 { pt3dadd( -86.5733, -248.966, -46.1114, 0.17 ) }
    dend_6 { pt3dadd( -88.2366, -251.081, -46.7513, 0.17 ) }
    dend_6 { pt3dadd( -91.6649, -254.855, -48.1195, 0.17 ) }
    dend_6 { pt3dadd( -97.3948, -260.356, -50.4642, 0.17 ) }
    dend_6 { pt3dadd( -97.9691, -260.803, -50.6978, 0.68 ) }
    dend_6 { pt3dadd( -100.432, -262.455, -51.6822, 0.17 ) }
    dend_6 { pt3dadd( -101.858, -263.247, -52.2318, 0.17 ) }
    dend_6 { pt3dadd( -107.117, -265.793, -54.0851, 0.17 ) }
    dend_6 { pt3dadd( -107.428, -265.946, -54.1779, 0.17 ) }
    dend_6 { pt3dadd( -109.976, -267.292, -54.7655, 0.17 ) }
    dend_6 { pt3dadd( -110.432, -267.583, -54.8696, 0.17 ) }
    dend_6 { pt3dadd( -113.453, -269.643, -55.5574, 0.17 ) }
    dend_6 { pt3dadd( -115.985, -271.542, -56.1321, 0.17 ) }
    dend_6 { pt3dadd( -120.1, -275.009, -57.1605, 0.17 ) }
    dend_6 { pt3dadd( -124.439, -278.766, -58.2532, 0.17 ) }
    dend_6 { pt3dadd( -124.576, -278.89, -58.2884, 0.17 ) }
    dend_6 { pt3dadd( -129.339, -283.123, -59.5216, 0.17 ) }
    dend_6 { pt3dadd( -129.472, -283.235, -59.5572, 0.17 ) }
    dend_6 { pt3dadd( -131.485, -284.617, -60.1165, 0.17 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 19/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 0.868228, -46.0038, -24.7399, 0.17 ) }
    dend_5 { pt3dadd( 1.19863, -47.0235, -21.6918, 0.17 ) }
    dend_5 { pt3dadd( 1.86024, -48.5356, -15.8406, 1.37 ) }
    dend_5 { pt3dadd( 1.87274, -48.5744, -15.6954, 1.37 ) }
    dend_5 { pt3dadd( 1.91213, -48.7217, -15.1534, 0.17 ) }
    dend_5 { pt3dadd( 2.37956, -50.4259, -8.82793, 0.17 ) }
    dend_5 { pt3dadd( 2.42197, -50.5321, -8.39912, 1.03 ) }
    dend_5 { pt3dadd( 2.94442, -51.6655, -2.65762, 0.17 ) }
    dend_5 { pt3dadd( 3.77684, -52.892, 4.34298, 0.17 ) }
    dend_5 { pt3dadd( 3.81506, -52.9435, 4.64626, 1.2 ) }
    dend_5 { pt3dadd( 3.90176, -53.0455, 5.28254, 0.17 ) }
    dend_5 { pt3dadd( 4.30067, -53.4654, 8.01607, 0.17 ) }
    dend_5 { pt3dadd( 4.84, -53.9832, 11.7056, 1.2 ) }
    dend_5 { pt3dadd( 4.87613, -54.0018, 11.8802, 0.17 ) }
    dend_5 { pt3dadd( 6.5658, -56.7843, 20.436, 0.17 ) }
    dend_5 { pt3dadd( 8.18632, -59.9669, 28.8773, 0.17 ) }
    dend_5 { pt3dadd( 9.88905, -64.5232, 36.7062, 0.17 ) }
    dend_5 { pt3dadd( 12.1762, -69.8398, 43.9237, 0.17 ) }
    dend_5 { pt3dadd( 15.8316, -76.4174, 49.4202, 0.17 ) }
    dend_5 { pt3dadd( 20.0794, -80.8769, 56.2623, 0.17 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 39/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 121.6, 80.6393, -46.9554, 0.17 ) }
    dend_25 { pt3dadd( 122.369, 86.8188, -50.2897, 0.17 ) }
    dend_25 { pt3dadd( 123.14, 96.0673, -54.4341, 0.17 ) }
    dend_25 { pt3dadd( 123.146, 96.2146, -54.4947, 0.17 ) }
    dend_25 { pt3dadd( 123.232, 100.964, -56.3508, 0.17 ) }
    dend_25 { pt3dadd( 123.247, 106.246, -58.3594, 0.17 ) }
    dend_25 { pt3dadd( 123.029, 114.43, -61.3141, 0.17 ) }
    dend_25 { pt3dadd( 122.547, 118.698, -62.5434, 0.17 ) }
    dend_25 { pt3dadd( 121.584, 123.958, -63.6979, 0.17 ) }
    dend_25 { pt3dadd( 121.289, 125.167, -63.9909, 1.88 ) }
    dend_25 { pt3dadd( 121.143, 125.6, -64.1262, 0.17 ) }
    dend_25 { pt3dadd( 119.324, 129.791, -65.5867, 0.17 ) }
    dend_25 { pt3dadd( 117.723, 132.313, -66.505, 0.17 ) }
    dend_25 { pt3dadd( 115.451, 135.383, -67.8298, 0.17 ) }
    dend_25 { pt3dadd( 114.949, 135.963, -68.1001, 0.17 ) }
    dend_25 { pt3dadd( 112.591, 138.618, -69.508, 0.17 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 121.6, 80.6393, -46.9554, 0.17 ) }
    dend_24 { pt3dadd( 128.27, 78.765, -49.7286, 0.17 ) }
    dend_24 { pt3dadd( 132.093, 77.6909, -51.3177, 0.17 ) }
    dend_24 { pt3dadd( 136.377, 76.487, -53.099, 0.17 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 59/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -17.5109, -341.046, 14.092, 0.17 ) }
    dend_10 { pt3dadd( -18.0722, -342.171, 15.1595, 0.17 ) }
    dend_10 { pt3dadd( -18.7337, -343.274, 16.0288, 0.17 ) }
    dend_10 { pt3dadd( -18.873, -343.605, 16.1943, 0.17 ) }
    dend_10 { pt3dadd( -18.9721, -343.959, 16.3184, 1.03 ) }
    dend_10 { pt3dadd( -19.4379, -346.088, 16.8581, 0.51 ) }
    dend_10 { pt3dadd( -20.1738, -350.067, 17.662, 0.17 ) }
    dend_10 { pt3dadd( -20.4448, -351.569, 17.7688, 0.17 ) }
    dend_10 { pt3dadd( -21.2181, -355.788, 17.6477, 1.2 ) }
    dend_10 { pt3dadd( -21.4566, -357.083, 17.486, 0.17 ) }
    dend_10 { pt3dadd( -21.6047, -358.036, 17.2954, 0.17 ) }
    dend_10 { pt3dadd( -21.6359, -358.227, 17.2493, 0.17 ) }
    dend_10 { pt3dadd( -21.9124, -359.838, 16.8705, 0.17 ) }
    dend_10 { pt3dadd( -22.3162, -361.464, 16.6217, 1.37 ) }
    dend_10 { pt3dadd( -22.8938, -363.168, 16.4624, 0.17 ) }
    dend_10 { pt3dadd( -23.8184, -365.358, 16.4431, 0.17 ) }
    dend_10 { pt3dadd( -24.9739, -368.069, 16.6999, 0.68 ) }
    dend_10 { pt3dadd( -25.2421, -368.723, 16.8106, 0.17 ) }
    dend_10 { pt3dadd( -25.7327, -370.021, 17.1435, 0.17 ) }
    dend_10 { pt3dadd( -26.1785, -371.254, 17.5477, 0.17 ) }
    dend_10 { pt3dadd( -27.5088, -375.231, 18.9673, 0.68 ) }
    dend_10 { pt3dadd( -28.4179, -378.064, 19.9241, 0.68 ) }
    dend_10 { pt3dadd( -28.886, -379.729, 20.3137, 0.34 ) }
    dend_10 { pt3dadd( -29.1435, -380.797, 20.4863, 0.17 ) }
    dend_10 { pt3dadd( -29.1822, -380.993, 20.5036, 0.17 ) }
    dend_10 { pt3dadd( -29.6178, -383.793, 20.5073, 0.17 ) }
    dend_10 { pt3dadd( -29.7914, -385.444, 20.3665, 0.68 ) }
    dend_10 { pt3dadd( -29.9243, -388.75, 19.8255, 0.17 ) }
    dend_10 { pt3dadd( -30.0005, -390.586, 19.489, 0.17 ) }
    dend_10 { pt3dadd( -30.06, -392.171, 19.1779, 1.2 ) }
    dend_10 { pt3dadd( -30.0654, -393.832, 18.8605, 0.17 ) }
    dend_10 { pt3dadd( -29.8888, -395.955, 18.4689, 0.17 ) }
    dend_10 { pt3dadd( -29.0382, -400.469, 17.6675, 1.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 92/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -17.5109, -341.046, 14.092, 0.17 ) }
    dend_9 { pt3dadd( -17.526, -341.273, 13.9759, 0.17 ) }
    dend_9 { pt3dadd( -17.5562, -341.706, 13.7469, 0.17 ) }
    dend_9 { pt3dadd( -17.5692, -341.898, 13.6521, 1.54 ) }
    dend_9 { pt3dadd( -17.5823, -342.04, 13.5886, 0.17 ) }
    dend_9 { pt3dadd( -17.7059, -342.85, 13.2807, 0.17 ) }
    dend_9 { pt3dadd( -17.7189, -342.944, 13.2353, 1.54 ) }
    dend_9 { pt3dadd( -17.7369, -343.074, 13.1648, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( -17.7775, -343.351, 13.0035, 0.17 ) }
    dend_9 { pt3dadd( -17.8342, -343.717, 12.7892, 0.17 ) }
    dend_9 { pt3dadd( -17.9546, -344.375, 12.4058, 0.17 ) }
    dend_9 { pt3dadd( -18.1471, -345.342, 11.7393, 0.17 ) }
    dend_9 { pt3dadd( -18.1808, -345.535, 11.5894, 1.03 ) }
    dend_9 { pt3dadd( -18.2009, -345.668, 11.4746, 1.03 ) }
    dend_9 { pt3dadd( -18.2072, -345.748, 11.3997, 0.17 ) }
    dend_9 { pt3dadd( -18.1895, -346.11, 11.0442, 0.17 ) }
    dend_9 { pt3dadd( -18.0648, -346.872, 10.3407, 1.54 ) }
    dend_9 { pt3dadd( -17.9881, -347.241, 10.0816, 1.2 ) }
    dend_9 { pt3dadd( -17.9808, -347.27, 10.0631, 1.2 ) }
    dend_9 { pt3dadd( -17.808, -347.896, 9.707, 0.17 ) }
    dend_9 { pt3dadd( -17.6988, -348.265, 9.55022, 0.17 ) }
    dend_9 { pt3dadd( -17.5634, -348.712, 9.43381, 0.68 ) }
    dend_9 { pt3dadd( -17.4494, -349.155, 9.38219, 0.17 ) }
    dend_9 { pt3dadd( -17.4419, -349.19, 9.37905, 0.17 ) }
    dend_9 { pt3dadd( -17.4294, -349.268, 9.37512, 0.86 ) }
    dend_9 { pt3dadd( -17.3738, -349.907, 9.38406, 0.17 ) }
    dend_9 { pt3dadd( -17.3661, -350.146, 9.39303, 1.03 ) }
    dend_9 { pt3dadd( -17.3652, -350.216, 9.39512, 0.17 ) }
    dend_9 { pt3dadd( -17.3655, -350.75, 9.40793, 0.17 ) }
    dend_9 { pt3dadd( -17.3676, -350.862, 9.40975, 1.03 ) }
    dend_9 { pt3dadd( -17.3749, -350.962, 9.40917, 0.17 ) }
    dend_9 { pt3dadd( -17.4414, -351.519, 9.39508, 0.17 ) }
    dend_9 { pt3dadd( -17.4808, -351.822, 9.38612, 1.2 ) }
    dend_9 { pt3dadd( -17.5004, -351.948, 9.38102, 0.17 ) }
    dend_9 { pt3dadd( -17.6338, -352.551, 9.34034, 0.17 ) }
    dend_9 { pt3dadd( -17.7058, -352.823, 9.3171, 0.17 ) }
    dend_9 { pt3dadd( -17.7549, -352.974, 9.30042, 1.2 ) }
    dend_9 { pt3dadd( -17.8637, -353.255, 9.28171, 0.17 ) }
    dend_9 { pt3dadd( -18.0244, -353.651, 9.27117, 0.17 ) }
    dend_9 { pt3dadd( -18.0994, -353.843, 9.2735, 0.86 ) }
    dend_9 { pt3dadd( -18.1961, -354.102, 9.28758, 0.17 ) }
    dend_9 { pt3dadd( -18.2947, -354.368, 9.30454, 0.17 ) }
    dend_9 { pt3dadd( -18.5208, -354.926, 9.33226, 0.17 ) }
    dend_9 { pt3dadd( -18.5582, -355.026, 9.33195, 1.54 ) }
    dend_9 { pt3dadd( -18.619, -355.205, 9.31902, 0.17 ) }
    dend_9 { pt3dadd( -18.7178, -355.543, 9.2761, 0.17 ) }
    dend_9 { pt3dadd( -18.8118, -355.857, 9.21534, 0.17 ) }
    dend_9 { pt3dadd( -18.9005, -356.162, 9.14038, 0.17 ) }
    dend_9 { pt3dadd( -19.0196, -356.573, 9.01466, 1.54 ) }
    dend_9 { pt3dadd( -19.1541, -357.038, 8.87721, 0.17 ) }
    dend_9 { pt3dadd( -19.2921, -357.469, 8.80474, 0.17 ) }
    dend_9 { pt3dadd( -19.4236, -357.928, 8.8012, 0.17 ) }
    dend_9 { pt3dadd( -19.4619, -358.05, 8.81187, 1.03 ) }
    dend_9 { pt3dadd( -19.4741, -358.083, 8.81689, 1.03 ) }
    dend_9 { pt3dadd( -19.6115, -358.429, 8.89204, 0.17 ) }
    dend_9 { pt3dadd( -19.9622, -359.29, 9.12685, 0.17 ) }
    dend_9 { pt3dadd( -20.2017, -359.849, 9.30487, 0.17 ) }
    dend_9 { pt3dadd( -20.4754, -360.482, 9.52564, 0.17 ) }
    dend_9 { pt3dadd( -20.5305, -360.603, 9.56644, 0.17 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -29.0382, -400.469, 17.6675, 0.17 ) }
    dend_12 { pt3dadd( -31.2724, -403.28, 17.4831, 0.17 ) }
    dend_12 { pt3dadd( -32.3568, -405.012, 17.3943, 0.17 ) }
    dend_12 { pt3dadd( -32.4384, -405.158, 17.3888, 0.17 ) }
    dend_12 { pt3dadd( -33.2997, -406.778, 17.3306, 1.2 ) }
    dend_12 { pt3dadd( -33.5616, -407.406, 17.3294, 0.17 ) }
    dend_12 { pt3dadd( -33.8927, -408.518, 17.3425, 0.17 ) }
    dend_12 { pt3dadd( -33.949, -409.524, 17.3225, 0.86 ) }
    dend_12 { pt3dadd( -33.9413, -409.995, 17.3432, 0.17 ) }
    dend_12 { pt3dadd( -33.9288, -410.365, 17.3653, 0.17 ) }
    dend_12 { pt3dadd( -33.8262, -412.54, 17.5203, 0.17 ) }
    dend_12 { pt3dadd( -33.7477, -414.544, 17.6501, 0.86 ) }
    dend_12 { pt3dadd( -33.7364, -415.737, 17.6963, 0.17 ) }
    dend_12 { pt3dadd( -33.6327, -417.559, 17.5434, 0.17 ) }
    dend_12 { pt3dadd( -33.5082, -419.196, 17.2588, 1.71 ) }
    dend_12 { pt3dadd( -33.4933, -419.35, 17.2204, 0.17 ) }
    dend_12 { pt3dadd( -33.3581, -420.669, 16.7489, 0.17 ) }
    dend_12 { pt3dadd( -33.1955, -422.015, 16.175, 0.17 ) }
    dend_12 { pt3dadd( -32.7019, -425.834, 14.2953, 0.17 ) }
    dend_12 { pt3dadd( -32.5948, -426.671, 13.8494, 1.03 ) }
    dend_12 { pt3dadd( -32.5775, -426.817, 13.7743, 0.17 ) }
    dend_12 { pt3dadd( -32.4751, -428.149, 13.2706, 0.17 ) }
    dend_12 { pt3dadd( -32.4328, -429.147, 12.9904, 1.37 ) }
    dend_12 { pt3dadd( -32.4345, -429.304, 12.9631, 0.17 ) }
    dend_12 { pt3dadd( -32.5415, -430.968, 12.9349, 0.17 ) }
    dend_12 { pt3dadd( -32.5895, -432.228, 12.9439, 0.17 ) }
    dend_12 { pt3dadd( -32.8632, -435.52, 12.8314, 0.17 ) }
    dend_12 { pt3dadd( -32.888, -435.677, 12.8263, 0.17 ) }
    dend_12 { pt3dadd( -33.0166, -436.349, 12.8184, 1.54 ) }
    dend_12 { pt3dadd( -33.3293, -437.73, 12.7849, 0.17 ) }
    dend_12 { pt3dadd( -33.7632, -439.139, 12.6564, 0.17 ) }
    dend_12 { pt3dadd( -34.9865, -441.744, 12.5156, 0.17 ) }
    dend_12 { pt3dadd( -35.796, -443.195, 12.5358, 0.17 ) }
    dend_12 { pt3dadd( -37.0672, -445.326, 12.648, 0.17 ) }
    dend_12 { pt3dadd( -39.1188, -448.644, 12.9216, 0.17 ) }
    dend_12 { pt3dadd( -40.9255, -451.471, 13.2333, 0.17 ) }
    dend_12 { pt3dadd( -43.8401, -455.976, 13.9074, 0.17 ) }
    dend_12 { pt3dadd( -45.4071, -458.413, 14.3498, 0.17 ) }
    dend_12 { pt3dadd( -45.5741, -458.666, 14.4015, 1.71 ) }
    dend_12 { pt3dadd( -46.0385, -459.308, 14.5749, 0.17 ) }
    dend_12 { pt3dadd( -46.8517, -460.456, 15.0194, 0.17 ) }
    dend_12 { pt3dadd( -46.953, -460.642, 15.1024, 0.17 ) }
    dend_12 { pt3dadd( -47.4008, -462.011, 15.5685, 0.17 ) }
    dend_12 { pt3dadd( -48.3567, -465.143, 16.5235, 0.17 ) }
    dend_12 { pt3dadd( -48.4836, -465.601, 16.6641, 0.17 ) }
    dend_12 { pt3dadd( -48.6529, -466.44, 16.9191, 0.17 ) }
    dend_12 { pt3dadd( -48.8123, -467.596, 17.2567, 1.54 ) }
    dend_12 { pt3dadd( -48.8623, -468.388, 17.4735, 0.17 ) }
    dend_12 { pt3dadd( -48.8305, -469.056, 17.632, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( -48.8132, -469.551, 17.6718, 0.17 ) }
    dend_12 { pt3dadd( -48.9717, -472.377, 17.6529, 0.17 ) }
    dend_12 { pt3dadd( -49.0053, -472.844, 17.606, 1.71 ) }
    dend_12 { pt3dadd( -49.0265, -473.072, 17.5769, 0.17 ) }
    dend_12 { pt3dadd( -49.2915, -475.524, 17.2099, 0.17 ) }
    dend_12 { pt3dadd( -49.6945, -478.775, 16.6441, 0.17 ) }
    dend_12 { pt3dadd( -50.2992, -482.893, 15.7872, 0.17 ) }
    dend_12 { pt3dadd( -50.6849, -484.997, 15.2321, 0.17 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 8/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -29.0382, -400.469, 17.6675, 0.17 ) }
    dend_11 { pt3dadd( -28.8074, -403.102, 18.0222, 0.17 ) }
    dend_11 { pt3dadd( -28.4869, -405.947, 18.4775, 0.17 ) }
    dend_11 { pt3dadd( -28.4558, -406.188, 18.52, 1.2 ) }
    dend_11 { pt3dadd( -28.3548, -406.894, 18.6548, 0.17 ) }
    dend_11 { pt3dadd( -27.8789, -410.081, 19.2835, 0.17 ) }
    dend_11 { pt3dadd( -27.5188, -412.2, 19.7457, 1.37 ) }
    dend_11 { pt3dadd( -27.2605, -413.513, 20.1682, 0.17 ) }
    dend_11 { pt3dadd( -27.2135, -413.738, 20.2525, 0.17 ) }
    dend_11 { pt3dadd( -26.6196, -417.09, 21.4419, 0.17 ) }
    dend_11 { pt3dadd( -26.6009, -417.302, 21.533, 0.17 ) }
    dend_11 { pt3dadd( -26.577, -420.057, 22.8252, 0.17 ) }
    dend_11 { pt3dadd( -26.9284, -426.432, 25.9042, 0.17 ) }
    dend_11 { pt3dadd( -27.1018, -429.022, 27.1563, 0.17 ) }
    dend_11 { pt3dadd( -27.2826, -432.098, 28.5776, 0.17 ) }
    dend_11 { pt3dadd( -27.7399, -437.814, 31.274, 1.37 ) }
    dend_11 { pt3dadd( -27.984, -440.355, 32.4578, 0.17 ) }
    dend_11 { pt3dadd( -28.0139, -440.576, 32.5587, 0.17 ) }
    dend_11 { pt3dadd( -29.0292, -446.948, 35.292, 0.17 ) }
    dend_11 { pt3dadd( -29.4952, -451.542, 37.3473, 0.17 ) }
    dend_11 { pt3dadd( -30.4038, -464.935, 41.634, 0.17 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 29/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -50.6849, -484.997, 15.2321, 0.17 ) }
    dend_14 { pt3dadd( -51.1714, -488.179, 17.914, 0.17 ) }
    dend_14 { pt3dadd( -51.5463, -490.631, 19.9812, 0.17 ) }
    dend_14 { pt3dadd( -51.8893, -492.874, 21.872, 0.17 ) }
    dend_14 { pt3dadd( -51.9091, -493.004, 21.9814, 0.17 ) }
    dend_14 { pt3dadd( -52.7686, -498.624, 26.7195, 0.17 ) }
    dend_14 { pt3dadd( -52.8339, -499.051, 27.0793, 0.17 ) }
    dend_14 { pt3dadd( -52.3335, -507.29, 33.3881, 0.17 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -50.6849, -484.997, 15.2321, 0.17 ) }
    dend_13 { pt3dadd( -52.2641, -487.876, 13.2516, 0.17 ) }
    dend_13 { pt3dadd( -54.4125, -491.793, 10.5572, 0.17 ) }
    dend_13 { pt3dadd( -55.4214, -493.632, 9.29194, 0.17 ) }
    dend_13 { pt3dadd( -55.5028, -493.78, 9.18984, 0.17 ) }
    dend_13 { pt3dadd( -60.874, -503.81, 4.74342, 0.17 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_17 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_45 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_31 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_30 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_16 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_56 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_51 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_49 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_46 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_42 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_60 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_53 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_52 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_47 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_27 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_22 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_7 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_61 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_59 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_58 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_15 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_8 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_6 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_5 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_25 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_12 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_11 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_29 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_21 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_28 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_57 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_38 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_39 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_23 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_26 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_24 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_48 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_62 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_54 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_9 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_13 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_14 OneSecGrp_SectionRef_65.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_17 nseg = 5
    dend_45 nseg = 7
    dend_36 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 9
    dend_16 nseg = 7
    dend_56 nseg = 3
    dend_51 nseg = 5
    dend_49 nseg = 5
    dend_46 nseg = 3
    dend_42 nseg = 5
    dend_2 nseg = 5
    dend_60 nseg = 7
    dend_53 nseg = 7
    dend_52 nseg = 5
    dend_47 nseg = 9
    dend_27 nseg = 5
    dend_22 nseg = 7
    dend_7 nseg = 7
    dend_61 nseg = 5
    dend_59 nseg = 5
    dend_58 nseg = 9
    dend_55 nseg = 3
    dend_41 nseg = 3
    dend_15 nseg = 3
    dend_8 nseg = 9
    dend_6 nseg = 17
    dend_5 nseg = 5
    dend_25 nseg = 3
    dend_10 nseg = 3
    dend_12 nseg = 5
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L5_NBC_42f781cf08_0_0


