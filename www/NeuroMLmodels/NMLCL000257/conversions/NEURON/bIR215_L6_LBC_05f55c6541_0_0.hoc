// Cell: bIR215_L6_LBC_05f55c6541_0_0
/*
{
  "id" : "bIR215_L6_LBC_05f55c6541_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.99972, -12.0853, -1.00194, 2.76544", "-0.863765, -10.9633, -0.891247, 4.3109", "-0.72781, -9.84136, -0.780557, 4.96188", "-0.591856, -8.71938, -0.669868, 5.8069", "-0.455901, -7.5974, -0.559178, 7.05068", "-0.319946, -6.47541, -0.448489, 8.73524", "-0.183991, -5.35343, -0.337799, 10.5744", "-0.0480362, -4.23145, -0.22711, 11.5548", "0.0879186, -3.10947, -0.11642, 12.9301", "0.223873, -1.98748, -0.00573068, 14.0229", "0.359828, -0.8655, 0.104959, 14.2607", "0.495783, 0.256482, 0.215648, 14.2925", "0.631738, 1.37846, 0.326338, 14.2253", "0.767693, 2.50045, 0.437027, 14.0078", "0.903648, 3.62243, 0.547717, 13.5909", "1.0396, 4.74441, 0.658406, 13.2474", "1.17556, 5.8664, 0.769096, 12.726", "1.31151, 6.98838, 0.879785, 11.4933", "1.44747, 8.11036, 0.990475, 10.1298", "1.58342, 9.23234, 1.10116, 8.27129", "1.71938, 10.3543, 1.21185, 4.6666" ]
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "2.28033, 5.327, 12.739, 0.96", "2.31382, 5.40837, 12.739, 0.96", "2.58115, 6.12004, 12.739, 0.96", "2.63606, 6.28364, 12.739, 0.96", "2.87841, 7.06496, 12.739, 0.96", "3.24791, 8.32111, 12.739, 1.25", "3.39346, 8.88444, 12.739, 1.25", "3.61307, 9.90265, 12.6612, 0.81", "3.7435, 10.9182, 12.5153, 0.81", "3.78051, 11.4668, 12.4068, 1.11", "3.77764, 11.5406, 12.3874, 1.11", "3.5696, 12.4059, 12.1113, 1.33", "2.95408, 13.852, 11.6561, 1.33", "2.50636, 14.6749, 11.3975, 0.96", "2.47359, 14.7295, 11.3821, 0.96", "2.09635, 15.3236, 11.2428, 0.96", "1.2991, 16.5529, 11.017, 0.96", "0.520156, 17.6923, 10.9405, 0.96", "0.176497, 18.1675, 10.9746, 1.4", "-0.343267, 18.8828, 11.1079, 1.4", "-0.775374, 19.4847, 11.2779, 0.96", "-0.810605, 19.535, 11.3008, 0.96", "-1.33209, 20.3268, 11.7989, 0.74", "-1.89134, 21.1779, 12.4558, 0.74", "-2.40384, 22.0508, 13.2126, 0.74", "-2.55679, 22.3722, 13.5262, 0.74", "-2.79707, 23.0431, 14.1956, 0.59", "-2.95901, 23.628, 14.721, 0.59", "-2.96864, 23.6793, 14.7606, 0.59", "-3.06818, 24.5476, 15.4366, 0.59", "-3.14874, 25.3107, 15.9853, 0.74", "-3.1543, 25.4421, 16.0852, 0.74", "-3.08969, 26.2834, 16.7605, 0.74", "-3.03545, 26.68, 17.1002, 1.03", "-2.81209, 27.4623, 17.8446, 1.03", "-2.7871, 27.508, 17.9005, 1.03", "-2.17644, 28.2414, 19.0103, 0.74", "-1.27472, 29.0155, 20.4432, 0.74", "-1.23251, 29.0403, 20.5028, 0.74", "-0.313456, 29.4969, 21.6501, 0.74", "0.689068, 29.9881, 22.8247, 0.74", "0.736123, 30.0115, 22.8801, 0.74", "1.06111, 30.1612, 23.2581, 0.74", "1.76462, 30.4854, 24.0239, 1.03", "2.46479, 30.8495, 24.7666, 1.03", "3.84891, 31.6875, 26.1785, 0.81", "4.76673, 32.2693, 27.1027, 0.81", "5.38324, 32.6554, 27.7308, 0.52", "6.03883, 33.0534, 28.4079, 0.52", "6.09639, 33.0861, 28.4659, 0.52", "6.65251, 33.3428, 29.0279, 0.74", "7.60685, 33.6763, 29.7745, 0.74", "9.94196, 41.6129, 36.8932, 0.74" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000058507499,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "0.960327, 7.647, 4.92909, 0.88", "1.0085, 8.41473, 4.88948, 0.88", "1.03762, 9.35895, 4.84054, 0.88", "1.05919, 10.586, 4.77179, 0.88", "1.04476, 12.1741, 4.68197, 0.88", "1.01199, 13.1557, 4.6284, 0.66", "0.967447, 14.1064, 4.5778, 1.03", "0.876843, 15.265, 4.51268, 1.03", "0.868464, 15.3415, 4.50846, 1.03", "0.756347, 16.2118, 4.46315, 1.18", "0.655167, 17.1829, 4.42388, 1.18", "0.652439, 17.2864, 4.4216, 1.18", "0.754301, 18.5173, 4.39723, 0.96", "0.947177, 19.631, 4.38263, 0.66", "0.975627, 19.7302, 4.39042, 0.66", "1.43415, 20.871, 4.57078, 0.59", "1.88263, 21.7517, 4.81292, 0.59", "2.39548, 22.6308, 5.14326, 0.59", "2.43443, 22.6906, 5.17237, 0.59", "3.50951, 24.2749, 6.03935, 0.59", "3.5461, 24.3338, 6.07299, 0.59", "4.08705, 25.2791, 6.72595, 0.96", "4.11614, 25.3369, 6.76776, 0.96", "4.41967, 26.069, 7.27644, 0.96", "4.69127, 26.7478, 7.6979, 1.33", "5.09305, 27.7534, 8.20452, 1.33", "5.49641, 28.6983, 8.69367, 1.62", "5.7591, 29.2563, 9.05226, 1.62", "5.91671, 29.5769, 9.27738, 1.4", "6.19562, 30.1161, 9.68916, 0.66", "6.53382, 30.7694, 10.2808, 0.59", "7.42366, 32.4484, 11.9091, 0.59", "8.01326, 33.5774, 12.9727, 0.96", "8.34057, 34.209, 13.5741, 0.96", "8.37279, 34.272, 13.6309, 0.96", "9.13818, 35.8573, 14.8864, 0.96", "9.33282, 36.2598, 15.1471, 0.59", "9.86126, 37.2553, 15.5962, 0.59", "10.5407, 38.4807, 16.0004, 0.88", "11.0826, 39.3795, 16.2651, 1.25", "11.8244, 40.5169, 16.5308, 1.47", "12.4238, 41.3564, 16.7088, 1.47", "13.0858, 42.1779, 16.9335, 1.47", "13.1447, 42.2433, 16.9556, 1.47", "14.0799, 43.1927, 17.3125, 0.66", "14.8979, 43.995, 17.6664, 0.66", "16.1214, 45.2251, 18.2636, 0.66", "16.9024, 46.0695, 18.6708, 0.66", "16.9494, 46.1252, 18.6954, 0.66", "17.5384, 46.9008, 18.9676, 0.37", "17.9103, 47.44, 19.0911, 0.29", "18.2766, 47.9896, 19.4619, 0.29", "18.6002, 48.5208, 19.9782, 0.29", "18.7979, 48.8966, 20.4934, 1.11", "19.0615, 49.4067, 21.3184, 1.55", "19.2777, 49.8487, 22.113, 1.55", "20.3105, 52.2761, 26.5913, 1.03", "20.4024, 52.5616, 27.097, 1.03", "20.6068, 53.5384, 28.7667, 0.74", "20.6134, 53.5929, 28.8545, 0.74", "20.6368, 53.9932, 29.4161, 0.59", "20.689, 54.6539, 30.072, 0.59", "21.0398, 56.1043, 30.6837, 0.59", "21.0726, 56.1821, 30.7145, 0.59", "21.7636, 57.4129, 31.1318, 0.59", "22.2472, 58.2027, 31.3771, 0.96", "23.003, 59.2887, 31.6947, 0.96", "23.8109, 60.3182, 31.968, 1.18", "24.7464, 61.4453, 32.2244, 1.18", "25.5632, 62.4312, 32.4105, 1.18", "26.3823, 63.4402, 32.5399, 1.55", "26.8398, 64.0227, 32.6134, 1.99", "27.4149, 64.8452, 32.7035, 1.99", "27.759, 65.3715, 32.746, 1.84", "28.2848, 66.1728, 32.7796, 0.81", "28.7667, 66.9048, 32.8974, 0.81", "28.8224, 66.9887, 32.9209, 0.81", "29.2513, 67.6808, 33.1539, 0.81", "29.3212, 67.7906, 33.195, 0.81", "29.8581, 68.6098, 33.5644, 0.81", "30.5993, 69.7562, 34.1172, 1.18", "31.0555, 70.5201, 34.5979, 1.18", "31.0932, 70.5875, 34.6456, 1.18", "31.4599, 71.3033, 35.1493, 1.18", "31.7656, 72.0157, 35.6851, 1.18", "31.9719, 72.6055, 36.0999, 0.96", "32.4368, 74.1157, 37.0724, 1.18", "32.4574, 74.1876, 37.124, 1.18", "32.7972, 75.3885, 38.0926, 1.18", "33.1735, 76.9436, 39.3757, 1.55", "33.4371, 78.1243, 40.4235, 1.55", "33.4499, 78.1887, 40.4848, 1.55", "33.6678, 79.6939, 41.8847, 1.84", "33.7741, 81.1046, 43.2397, 1.18", "33.7843, 82.0065, 44.1293, 1.18", "33.77, 83.3817, 45.375, 1.18", "33.7676, 83.4508, 45.4339, 1.18", "33.7174, 84.6714, 46.327, 1.18", "33.6775, 85.7598, 46.8984, 0.81", "33.6727, 86.4292, 47.145, 0.59", "33.7764, 87.4039, 47.3936, 0.59", "33.9467, 88.1456, 47.445, 1.18", "33.9897, 88.2666, 47.4456, 1.18", "34.3201, 88.933, 47.3981, 1.18", "34.3555, 89.0008, 47.3887, 1.18", "34.7569, 89.8687, 47.3205, 1.18", "35.1631, 90.9858, 47.2944, 0.96", "35.3549, 91.721, 47.3106, 0.96", "35.444, 92.3746, 47.3797, 0.52", "35.4261, 92.9534, 47.4881, 0.52", "35.2014, 94.0424, 47.8596, 0.52", "34.8727, 94.8447, 48.2455, 0.88", "34.5534, 95.4186, 48.5723, 0.88", "34.037, 96.2078, 49.0677, 0.88", "33.5353, 96.9154, 49.5312, 0.66", "32.592, 98.1902, 50.3886, 0.66", "32.2381, 98.6747, 50.6993, 0.52", "31.8614, 99.2885, 51.056, 0.44", "31.8211, 99.3755, 51.0942, 0.44", "31.6468, 100.058, 51.2612, 0.44", "31.6407, 100.147, 51.2771, 0.44", "31.7065, 100.885, 51.3475, 0.74", "31.8837, 101.72, 51.4209, 1.11", "32.1034, 102.491, 51.485, 1.55", "32.4114, 103.392, 51.5513, 0.96", "32.756, 104.255, 51.61, 0.52", "33.474, 105.822, 51.7006, 0.37", "33.8447, 106.52, 51.7341, 0.37", "33.8917, 106.596, 51.7348, 0.37", "34.3901, 107.34, 51.712, 0.37", "34.4679, 107.455, 51.7038, 0.37", "35.0068, 108.222, 51.5904, 0.37", "35.0625, 108.293, 51.5793, 0.37", "35.6214, 109.045, 51.495, 0.37", "36.1498, 109.734, 51.406, 0.81", "40.0773, 120.09, 57.8971, 0.81", "42.4738, 131.408, 63.4622, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000058507499,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-1.74967, -10.203, -2.32091, 3.9", "-1.92927, -11.9295, -2.32091, 3.9", "-2.0472, -13.0631, -2.32091, 4.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000058507499
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.00967, 8.667, -2.82091, 3.68", "-1.15825, 9.75905, -2.82091, 3.68", "-1.43062, 11.9045, -2.82091, 3.24", "-1.7569, 14.2695, -2.82479, 3.24", "-2.00129, 16.0409, -2.82771, 3.24", "-2.29126, 18.1427, -2.83116, 3.24", "-2.56238, 20.1079, -2.83439, 3.61", "-2.71417, 21.2139, -2.83658, 3.61", "-2.81798, 22.0373, -2.83876, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000058507499
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.71938, 10.3543, 1.21185, 0.81", "3.52379, 25.2454, 1.21185, 0.81", "5.32821, 40.1364, 1.21185, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "9.94196, 41.6129, 36.8932, 0.74", "11.1367, 47.7883, 40.905, 0.74", "12.9894, 53.9125, 44.7418, 0.74", "13.5048, 59.7943, 49.3024, 0.74", "15.6282, 64.8642, 54.3471, 0.74", "18.3039, 69.4812, 59.5608, 0.74" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "9.94196, 41.6129, 36.8932, 0.52", "10.6072, 50.841, 43.8633, 0.74", "13.3066, 58.7553, 51.8794, 0.74", "16.7014, 67.5443, 58.6185, 0.74", "19.7973, 76.1628, 65.7123, 0.74", "23.5191, 83.1897, 74.1357, 0.74", "28.2748, 88.6447, 83.1806, 0.74", "32.8322, 93.517, 92.6504, 0.74" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "42.4738, 131.408, 63.4622, 0.74", "46.3086, 141.504, 69.1539, 0.74", "49.4589, 151.194, 75.8773, 0.74", "51.4997, 160.908, 82.9846, 0.74", "52.173, 170.799, 90.1085, 0.74", "54.5921, 181.832, 94.7403, 0.74", "57.1285, 192.53, 100.045, 0.74", "57.767, 204.313, 103.175, 0.74", "56.7822, 216.124, 106.103, 0.74", "56.4369, 228.003, 108.897, 0.74" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "42.4738, 131.408, 63.4622, 0.52", "45.7693, 142.118, 68.1585, 0.74", "49.473, 152.409, 73.4503, 0.74", "53.83, 162.649, 78.3258, 0.74", "58.0601, 172.661, 83.7553, 0.74", "63.1161, 183.186, 87.1165, 0.74", "66.5541, 193.759, 92.0155, 0.74", "68.2776, 205.016, 96.252, 0.74", "72.4544, 215.61, 100.488, 0.74", "75.6334, 225.944, 106.029, 0.74" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-2.0472, -13.0631, -2.32091, 1.62", "-2.33559, -13.3633, -2.36258, 1.62", "-3.41149, -14.4832, -2.51805, 1.47", "-4.65503, -15.7777, -2.69773, 1.4", "-5.54301, -16.702, -2.82604, 1.55", "-6.47809, -17.6754, -2.96116, 1.55", "-6.95057, -18.1672, -3.02943, 1.69" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-2.0472, -13.0631, -2.32091, 1.84", "-2.03043, -13.1628, -2.31571, 1.84", "-1.85333, -14.4338, -2.2431, 1.99", "-1.67972, -15.8656, -2.16009, 1.84", "-1.44525, -17.7994, -2.04796, 1.47", "-1.1309, -20.3921, -1.89764, 1.47", "-1.00265, -21.4499, -1.83631, 2.06", "-0.931617, -22.1538, -1.79633, 2.5", "-0.87566, -23.1081, -1.73943, 2.43" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-2.81798, 22.0373, -2.83876, 0.96", "0.024524, 24.0451, -4.3457, 0.96", "0.796534, 24.8001, -4.78072, 1.03", "1.42326, 25.5058, -5.15218, 1.03", "1.51882, 25.624, -5.20408, 1.03", "2.4222, 26.8055, -5.64253, 1.03", "2.4733, 26.871, -5.66305, 1.03", "3.71948, 28.6464, -5.99422, 1.03", "3.85687, 28.8051, -6.0217, 1.03", "4.88738, 29.732, -6.20631, 1.03", "5.54546, 30.174, -6.29766, 1.11", "6.57827, 30.5462, -6.48637, 1.11", "8.05792, 30.5911, -7.23512, 1.33", "8.80975, 30.4759, -8.04432, 1.47", "8.85871, 30.4698, -8.11419, 1.47", "9.38969, 30.4063, -9.03936, 1.47", "10.5158, 30.3596, -11.3758, 0.96", "12.3174, 30.4477, -15.8409, 0.81", "13.6869, 30.6865, -19.8838, 0.96", "14.1478, 30.8168, -21.4263, 0.96", "14.17, 30.8262, -21.5083, 0.96", "14.52, 31.1126, -23.1228, 0.96", "14.5323, 31.1396, -23.203, 0.96", "14.5378, 31.1942, -23.2752, 0.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-2.81798, 22.0373, -2.83876, 2.14", "-3.41431, 23.3638, -2.85934, 2.14", "-4.42191, 25.8689, -2.89272, 3.0", "-5.31633, 28.3327, -3.01713, 2.28", "-6.12983, 30.803, -3.35164, 2.14", "-6.7517, 32.7703, -3.69929, 2.21", "-7.33027, 34.6006, -4.02273, 2.36", "-7.95818, 36.7268, -4.45371, 2.36", "-8.52142, 39.0894, -5.02359, 2.21", "-9.10326, 42.0527, -5.89967, 2.21", "-9.48821, 44.0558, -6.65452, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.32821, 40.1364, 1.21185, 0.15", "7.13262, 55.0275, 1.21185, 0.15", "8.93703, 69.9186, 1.21185, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-6.95057, -18.1672, -3.02943, 0.66", "-7.52911, -19.8516, -2.6525, 0.66", "-7.75373, -20.6171, -2.52768, 0.66", "-7.77617, -20.699, -2.51303, 0.66", "-8.12712, -21.9683, -2.2911, 0.66", "-8.47096, -23.1708, -2.09345, 0.66", "-8.67831, -23.8755, -1.97895, 0.96", "-8.95952, -24.9128, -1.79109, 1.18", "-9.26728, -26.0389, -1.4896, 0.66", "-9.56992, -27.0282, -1.05457, 0.66", "-9.68321, -27.2928, -0.843623, 0.66", "-9.72275, -27.3398, -0.737743, 0.66", "-10.1764, -27.2836, 1.22052, 0.66", "-10.1885, -27.2701, 1.29133, 0.66", "-10.3561, -26.8452, 2.681, 0.66", "-10.4629, -26.4919, 3.62548, 0.96", "-10.6069, -25.8876, 5.36339, 0.96", "-10.7548, -25.2688, 7.53549, 0.96", "-10.7599, -25.2529, 7.60665, 0.96", "-10.9305, -24.9888, 9.59932, 0.59", "-11.0007, -24.9754, 10.3194, 0.59", "-11.3731, -25.3837, 13.4867, 0.59", "-11.7196, -26.0444, 15.4584, 1.25", "-11.928, -26.5952, 16.3663, 1.4", "-12.1769, -27.3548, 17.2095, 0.74", "-12.367, -28.0115, 17.6003, 0.74", "-12.651, -29.0142, 17.8549, 0.74", "-12.9591, -29.9736, 17.8059, 0.74", "-13.2956, -30.9995, 17.63, 1.11", "-13.835, -32.6458, 17.2952, 0.37", "-14.0538, -33.3082, 17.1437, 0.37", "-14.4616, -34.4496, 16.8705, 0.37", "-14.9425, -35.5716, 16.6384, 1.18", "-15.343, -36.3818, 16.5095, 1.47", "-15.4326, -36.5286, 16.4996, 1.47", "-15.7981, -37.0353, 16.5312, 1.47", "-16.2803, -37.6194, 16.5752, 0.81", "-16.9483, -38.3228, 16.6405, 0.81", "-17.0117, -38.3808, 16.6474, 0.81", "-17.9388, -39.1091, 16.7672, 0.81", "-18.9385, -39.8641, 16.899, 0.81", "-19.6754, -40.3938, 16.9983, 0.37", "-19.9397, -40.5843, 17.0339, 0.37", "-20.5747, -41.0657, 17.1189, 0.37", "-22.0954, -42.2224, 17.34, 0.37", "-27.3277, -50.4058, 24.6913, 0.37" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-6.95057, -18.1672, -3.02943, 1.25", "-6.85491, -19.1889, -3.08361, 1.25", "-6.75612, -20.6497, -3.14498, 1.25", "-6.75151, -20.7822, -3.1487, 1.25", "-6.76166, -21.9202, -3.16383, 1.25", "-6.76885, -22.0618, -3.16373, 1.25", "-6.8659, -23.1913, -3.14959, 1.25", "-6.96688, -23.944, -3.13813, 1.33", "-7.11794, -24.8286, -3.11712, 1.33", "-7.36338, -26.1006, -3.07187, 1.18", "-7.69976, -27.6484, -2.99541, 1.18", "-8.13013, -29.5066, -2.94749, 1.18", "-8.15013, -29.5795, -2.94767, 1.18", "-8.55537, -30.8713, -2.98159, 1.18", "-8.92716, -31.9009, -3.03301, 1.18", "-8.95263, -31.9619, -3.03752, 1.18", "-9.54295, -33.1632, -3.1547, 1.18", "-10.3123, -34.511, -3.30908, 1.18", "-10.8824, -35.455, -3.44993, 1.4", "-11.391, -36.2455, -3.59112, 1.77", "-11.9426, -37.0466, -3.75114, 1.77", "-12.5768, -37.9517, -3.93421, 1.77", "-13.287, -38.9314, -4.13301, 1.25", "-13.9684, -39.8963, -4.34664, 0.96", "-14.4127, -40.5476, -4.48671, 1.18", "-14.6099, -40.8529, -4.54649, 1.18", "-14.8777, -41.2723, -4.61634, 1.18", "-14.9125, -41.3279, -4.62607, 1.18", "-15.508, -42.2691, -4.78196, 1.03", "-15.9362, -42.9258, -4.8779, 0.81", "-16.5094, -43.8385, -5.03072, 0.81", "-17.1199, -44.8798, -5.20572, 1.4", "-17.7379, -46.0189, -5.39095, 1.55", "-18.3278, -47.2153, -5.59186, 1.69", "-18.7327, -48.1338, -5.76534, 1.69", "-19.0659, -49.0117, -5.93185, 1.11", "-19.4288, -50.0979, -6.1258, 0.81", "-19.6923, -50.9806, -6.27036, 0.81", "-20.3595, -53.3829, -6.60767, 0.81", "-20.635, -54.4576, -6.77456, 1.18", "-20.8562, -55.3325, -6.92023, 1.18", "-21.0406, -56.0375, -7.03969, 1.18", "-21.2288, -56.7192, -7.16114, 1.03", "-21.4528, -57.4986, -7.29623, 0.74", "-21.6896, -58.3638, -7.43551, 0.52", "-21.7083, -58.4267, -7.44556, 0.52", "-21.8865, -58.999, -7.57842, 0.52", "-22.1691, -59.9408, -7.84477, 0.81", "-22.188, -60.0013, -7.86413, 0.81", "-22.4709, -60.7955, -8.12828, 1.18", "-22.7773, -61.5868, -8.38729, 1.18", "-23.1349, -62.518, -8.73936, 1.03", "-23.4813, -63.3968, -9.1331, 0.66", "-23.5291, -63.5174, -9.19041, 0.66", "-23.8632, -64.3262, -9.56165, 0.52", "-23.891, -64.3896, -9.59181, 0.52", "-24.3425, -65.3497, -10.0822, 1.55", "-24.762, -66.203, -10.5031, 1.99", "-25.0802, -66.8421, -10.8125, 2.28", "-25.5137, -67.6998, -11.1945, 1.92", "-25.9885, -68.6143, -11.5577, 0.37", "-26.0188, -68.6702, -11.5767, 0.37", "-26.38, -69.3011, -11.7301, 0.37", "-26.6973, -69.8589, -11.8681, 0.29", "-27.1812, -70.7233, -12.0878, 0.29", "-27.5585, -71.4062, -12.2476, 0.29", "-27.5893, -71.4637, -12.2595, 0.29", "-28.1251, -72.5229, -12.5301, 0.29", "-28.7614, -73.8584, -12.9189, 0.29", "-29.0707, -74.5544, -13.1299, 1.62", "-29.4623, -75.4783, -13.4099, 2.21", "-29.7992, -76.2863, -13.6578, 1.55", "-30.2373, -77.3389, -13.9643, 0.29", "-30.4426, -77.8318, -14.0971, 0.29", "-30.8249, -78.7767, -14.2994, 0.29", "-31.1854, -79.6698, -14.4844, 0.29", "-31.39, -80.166, -14.5748, 0.66", "-31.6876, -80.8159, -14.6605, 1.03", "-31.8949, -81.2318, -14.6874, 0.52", "-32.0731, -81.5872, -14.7098, 0.52", "-32.2291, -81.909, -14.7267, 0.22", "-32.4983, -82.5298, -14.7431, 0.22", "-32.8812, -83.5318, -14.7899, 0.22", "-32.9059, -83.603, -14.7959, 0.22", "-33.1463, -84.3174, -14.875, 0.66", "-33.2652, -84.6416, -14.9174, 1.25", "-33.4766, -85.2215, -15.0045, 1.25", "-33.7758, -86.0031, -15.1345, 0.29", "-33.8038, -86.0724, -15.1459, 0.29", "-34.1543, -86.8797, -15.2749, 0.29", "-34.6137, -87.8445, -15.4247, 0.29", "-34.8528, -88.3197, -15.4877, 1.25", "-35.1316, -88.8575, -15.5436, 1.69", "-35.5273, -89.6575, -15.6253, 0.66", "-35.5545, -89.7175, -15.6331, 0.66", "-35.7037, -90.0856, -15.6899, 0.22", "-36.0669, -91.0714, -15.8562, 0.22", "-36.0887, -91.1329, -15.8672, 0.22", "-36.4159, -92.1315, -16.0797, 0.88", "-36.6095, -92.7361, -16.2379, 0.88", "-36.6385, -92.8295, -16.2644, 0.88" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-0.87566, -23.1081, -1.73943, 1.4", "-0.699618, -23.4623, -1.5991, 1.4", "-0.319869, -24.2865, -1.18306, 1.11", "0.065959, -25.1553, -0.748688, 1.03", "0.086462, -25.202, -0.726773, 1.03", "0.388211, -25.8545, -0.450439, 1.03", "0.848018, -26.81, -0.0868209, 1.03", "1.27574, -27.6784, 0.209577, 1.47", "1.64145, -28.3684, 0.406352, 1.47", "2.00362, -29.0027, 0.540039, 1.18", "2.50567, -29.8361, 0.684963, 1.18", "2.90835, -30.4536, 0.758014, 1.55", "3.35665, -31.091, 0.770935, 1.55", "3.91922, -31.8425, 0.73889, 1.33", "4.61485, -32.7167, 0.686225, 0.96", "4.65479, -32.7657, 0.682798, 0.96", "5.2745, -33.5196, 0.623315, 0.81", "5.75182, -34.0838, 0.570333, 0.81", "6.28822, -34.7024, 0.496285, 1.03", "6.51729, -34.9517, 0.453073, 1.03" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-0.87566, -23.1081, -1.73943, 1.69", "-1.01871, -23.393, -1.74411, 1.69", "-1.23709, -23.9847, -1.78394, 1.69", "-1.50954, -24.8872, -1.85414, 1.47", "-1.52435, -24.9406, -1.85803, 1.47", "-1.79691, -25.9225, -1.94178, 1.11", "-2.13431, -27.1978, -2.05524, 1.11", "-2.46199, -28.6829, -2.16371, 1.11", "-2.55645, -29.2381, -2.19556, 1.77", "-2.69704, -30.2308, -2.23488, 1.77", "-2.74484, -30.6431, -2.24359, 1.55", "-2.81354, -31.5119, -2.23337, 1.33", "-2.8722, -32.6101, -2.18828, 1.25", "-2.9175, -33.9966, -2.10719, 1.25", "-2.93647, -34.9676, -2.04993, 1.55", "-2.94551, -35.7444, -2.02135, 1.55", "-2.9594, -36.3655, -2.00794, 0.81", "-3.09417, -39.2304, -2.00936, 0.81", "-3.1532, -39.9993, -2.02812, 0.88", "-3.24477, -40.8683, -2.05851, 0.88", "-3.40157, -41.9775, -2.13485, 1.69", "-3.5634, -42.8563, -2.22446, 1.92", "-3.72564, -43.6118, -2.33385, 1.92", "-3.93623, -44.4486, -2.48704, 1.92", "-3.94921, -44.5018, -2.49629, 1.92", "-4.25032, -45.7181, -2.70542, 2.28", "-4.26199, -45.7718, -2.71342, 2.28", "-4.40392, -46.5672, -2.85467, 2.5", "-4.52091, -47.4146, -3.02114, 2.36", "-4.61169, -48.2658, -3.1847, 1.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "14.5378, 31.1942, -23.2752, 0.66", "14.7923, 31.5883, -23.6098, 0.66", "15.3953, 32.5648, -24.3512, 0.96", "15.4383, 32.6253, -24.3934, 0.96", "16.6289, 34.1583, -25.4038, 0.29", "16.7302, 34.2643, -25.4687, 0.29", "17.6324, 35.0187, -25.91, 0.29", "17.6976, 35.0443, -25.9365, 0.29", "18.5054, 35.167, -26.1847, 0.59", "18.5883, 35.1782, -26.2018, 0.59", "19.6591, 35.3499, -26.2946, 0.88", "20.2592, 35.5002, -26.3968, 0.88", "21.9706, 35.9963, -26.7948, 0.59", "22.5239, 36.2024, -26.9358, 0.88", "23.46, 36.6489, -27.2066, 1.25", "24.2399, 37.0777, -27.4155, 0.96", "25.4868, 37.8951, -27.6948, 0.44", "25.5552, 37.9443, -27.7087, 0.44", "26.3005, 38.5136, -27.8121, 0.44", "26.8541, 38.9153, -27.8912, 1.11", "27.6943, 39.5437, -28.0024, 1.47", "28.5431, 40.2304, -28.0899, 1.03", "29.6862, 41.3023, -28.2205, 0.52", "30.3944, 42.07, -28.3388, 0.52", "30.4401, 42.1285, -28.349, 0.52", "31.1243, 43.1498, -28.512, 0.52", "31.4005, 43.6038, -28.6279, 0.52", "32.188, 44.8793, -29.0444, 0.52", "32.6015, 45.5072, -29.2998, 1.03", "32.8926, 45.928, -29.5036, 1.55", "33.5668, 46.9473, -30.0194, 1.55", "34.7392, 48.7452, -31.0592, 1.55", "35.6059, 50.1247, -31.9055, 0.44", "36.3112, 51.3288, -32.6363, 0.44", "36.4066, 51.4972, -32.7417, 0.44", "37.1106, 52.7628, -33.4992, 0.44", "37.9242, 54.2144, -34.3566, 0.44", "37.9571, 54.2745, -34.3867, 0.44", "38.4501, 55.1479, -34.9321, 0.44", "39.2677, 56.5103, -35.8772, 1.84", "39.7759, 57.3298, -36.497, 2.14", "40.756, 58.8515, -37.8123, 1.33", "41.1456, 59.4824, -38.3767, 1.03", "42.4954, 61.732, -40.5299, 0.52", "42.5409, 61.8167, -40.6131, 0.52", "42.7899, 62.3859, -41.1427, 0.52", "43.122, 63.2948, -41.8748, 0.52", "43.3491, 64.0737, -42.3135, 0.52", "43.3955, 64.2343, -42.3861, 0.52", "43.8072, 65.7354, -42.839, 0.52", "44.2665, 67.3864, -43.3298, 1.4", "44.5667, 68.4236, -43.596, 1.77", "44.8472, 69.4417, -43.813, 1.25", "45.1658, 70.6319, -44.0753, 0.44", "45.4636, 71.6037, -44.2645, 0.44", "45.5266, 71.7717, -44.2964, 0.44", "46.2247, 73.4621, -44.5387, 0.44", "46.2957, 73.6219, -44.5607, 0.44", "46.923, 75.0648, -44.7143, 1.69", "47.5046, 76.4445, -44.8132, 1.69", "48.0713, 77.9131, -44.9696, 0.37", "48.6058, 79.4659, -45.173, 0.37", "48.6275, 79.5361, -45.187, 0.37", "49.2144, 81.4749, -45.7188, 0.37", "49.2799, 81.6897, -45.7885, 0.37", "49.8911, 83.629, -46.5891, 0.37", "49.9134, 83.694, -46.6168, 0.37", "50.485, 85.1954, -47.2725, 0.37", "51.4268, 87.4626, -48.2476, 1.77", "51.7638, 88.2231, -48.5637, 2.21", "52.5339, 90.0464, -49.1917, 1.18", "52.9758, 91.1227, -49.4662, 0.22", "53.3015, 92.071, -49.6276, 0.22", "53.3198, 92.1436, -49.6319, 0.22", "53.5129, 93.3992, -49.6234, 0.22", "53.6587, 94.491, -49.6072, 0.22", "53.6801, 94.6391, -49.6003, 0.22", "53.8587, 95.5605, -49.6215, 0.22", "54.0683, 96.3022, -49.6346, 1.11", "54.2894, 96.8575, -49.6304, 1.11", "54.5623, 97.3515, -49.6127, 0.29", "54.743, 97.6507, -49.6205, 0.29", "55.0314, 98.132, -49.6671, 0.29", "55.2629, 98.5215, -49.6551, 0.29", "55.71, 99.3925, -49.4719, 0.29", "55.7556, 99.4935, -49.4432, 0.29", "56.1204, 100.578, -49.1217, 0.29", "56.1902, 100.822, -49.0437, 0.29", "56.7423, 102.744, -48.4371, 0.22", "57.1626, 104.001, -48.0246, 0.22", "57.1881, 104.068, -48.0018, 0.22", "57.7443, 105.365, -47.5467, 0.22", "57.7755, 105.429, -47.5232, 0.22", "58.5027, 106.805, -47.116, 0.22", "58.8319, 107.349, -47.0412, 0.81", "59.0379, 107.639, -46.9955, 0.81", "59.1062, 107.718, -46.9799, 0.81", "59.3617, 107.942, -46.9205, 0.29", "59.418, 107.99, -46.9068, 0.29", "60.0157, 108.476, -46.7487, 0.29", "60.1458, 108.599, -46.7139, 0.29", "60.7999, 109.241, -46.5382, 0.66", "60.8573, 109.303, -46.525, 0.66", "61.2001, 109.695, -46.4545, 0.66", "61.488, 110.03, -46.3992, 0.29", "61.921, 110.532, -46.3209, 0.29", "61.9697, 110.589, -46.313, 0.29", "62.8026, 111.547, -46.188, 0.29", "63.1738, 111.959, -46.1326, 1.18", "63.7986, 112.644, -46.0405, 1.47", "63.9844, 112.844, -46.0129, 1.47", "64.7086, 113.63, -45.8955, 0.37", "65.3927, 114.408, -45.7691, 0.37", "65.4476, 114.472, -45.7576, 0.37", "66.0917, 115.232, -45.5785, 0.22", "66.1389, 115.289, -45.5658, 0.22", "67.1297, 116.479, -45.3061, 0.22", "67.9105, 117.441, -45.0992, 0.22", "68.011, 117.57, -45.0639, 0.22", "68.977, 118.889, -44.656, 0.22", "69.4735, 119.68, -44.401, 1.47", "69.8318, 120.374, -44.1633, 1.99", "70.0521, 120.92, -43.9632, 1.99", "70.4655, 122.277, -43.4617, 0.66", "70.5965, 122.852, -43.2548, 0.22", "70.7592, 124.149, -42.8311, 0.22", "70.8242, 124.811, -42.5536, 0.66", "70.8316, 124.913, -42.5079, 0.66", "70.8821, 125.538, -42.2285, 0.66", "70.8959, 125.686, -42.1683, 0.66", "70.9825, 126.749, -41.6986, 0.66", "71.0241, 127.855, -41.1968, 0.29", "71.0195, 127.935, -41.168, 0.29", "70.941, 128.522, -40.9882, 0.29", "70.909, 128.677, -40.933, 0.29", "70.6828, 129.584, -40.5978, 0.29", "70.5641, 129.995, -40.4472, 0.29", "70.4081, 130.546, -40.1971, 0.29", "70.3891, 130.62, -40.1597, 0.29", "70.0994, 131.779, -39.4128, 0.29", "69.8014, 133.051, -38.4957, 0.29", "69.7917, 133.101, -38.4579, 0.29", "69.47, 134.984, -37.0326, 1.03", "69.3116, 136.0, -36.3223, 1.03", "69.0638, 137.735, -35.2222, 0.22", "69.0445, 137.867, -35.1539, 0.22", "68.9159, 138.952, -34.7318, 0.22", "68.8936, 139.178, -34.6752, 0.22", "68.767, 140.969, -34.5166, 0.22", "68.7489, 141.217, -34.5157, 0.22", "68.6487, 142.733, -34.6272, 0.22", "68.544, 144.17, -34.7402, 1.25", "68.4875, 144.875, -34.7974, 1.69", "68.432, 145.639, -34.8565, 1.69", "68.383, 146.747, -34.9737, 0.74", "68.3782, 147.21, -35.0275, 0.29", "68.3839, 147.369, -35.0459, 0.29", "68.4335, 148.687, -35.1534, 0.29", "68.4384, 148.762, -35.1582, 0.29", "68.547, 150.034, -35.2253, 0.88", "68.6313, 151.108, -35.269, 0.88", "68.6726, 151.965, -35.2952, 0.88", "68.6662, 152.684, -35.3096, 0.29", "68.6194, 153.463, -35.3108, 0.29", "68.609, 153.63, -35.3052, 0.29", "68.5412, 154.57, -35.2495, 0.29", "68.5308, 154.806, -35.242, 0.29", "68.5147, 155.924, -35.2326, 0.29", "68.517, 156.03, -35.2339, 0.29", "68.6267, 157.976, -35.2485, 0.29", "68.7391, 159.08, -35.2467, 0.74", "68.8326, 159.679, -35.2392, 0.74", "68.8967, 160.058, -35.2326, 0.74", "69.0083, 160.742, -35.216, 0.74", "69.0268, 160.901, -35.2126, 0.74", "69.0786, 161.45, -35.2373, 0.29", "69.0938, 161.598, -35.2492, 0.29", "69.1849, 162.689, -35.3724, 0.29", "69.2888, 164.388, -35.5931, 0.29", "69.2936, 164.525, -35.6117, 0.29", "69.311, 166.108, -35.82, 0.29", "69.3103, 166.183, -35.8289, 0.29", "69.2981, 167.162, -35.9296, 1.25", "69.2721, 168.439, -36.0248, 2.14", "69.236, 169.47, -36.0689, 2.8", "69.1743, 170.486, -36.0746, 2.14", "69.0749, 171.647, -36.0332, 0.88", "68.9816, 172.648, -35.9963, 0.44", "68.8996, 173.514, -35.9607, 0.44", "68.8877, 173.637, -35.9594, 0.44", "68.7036, 175.64, -36.0767, 0.44", "68.698, 175.714, -36.0896, 0.44", "68.7036, 176.484, -36.316, 0.44", "68.718, 176.705, -36.3934, 0.44", "68.8616, 178.008, -36.8752, 0.44", "69.1263, 179.771, -37.5503, 1.18", "69.3923, 181.173, -38.0876, 0.81", "69.8976, 183.64, -38.9995, 0.29", "70.0708, 184.423, -39.2697, 0.88", "70.2691, 185.306, -39.5142, 0.88", "70.8451, 187.823, -40.0427, 0.37", "71.0467, 188.758, -40.1771, 0.74", "71.0747, 188.905, -40.1889, 0.74", "71.2331, 189.983, -40.2318, 0.22", "71.6503, 193.142, -40.3052, 0.22", "71.679, 193.376, -40.3037, 0.22", "71.8084, 194.557, -40.2521, 0.22", "71.8329, 194.789, -40.2439, 0.22", "71.9847, 196.276, -40.2047, 0.66", "71.9992, 196.425, -40.2024, 0.66", "72.08, 197.225, -40.2456, 0.88", "72.1624, 197.903, -40.3058, 0.52", "72.1848, 198.06, -40.3239, 0.52", "72.2821, 198.692, -40.3727, 0.29", "72.5891, 200.671, -40.483, 0.29", "72.7706, 201.984, -40.53, 0.96", "72.7891, 202.133, -40.5328, 0.96", "72.8907, 203.055, -40.5294, 0.96", "73.1371, 205.239, -40.5709, 0.22", "73.1869, 205.642, -40.5834, 0.66", "73.2531, 206.199, -40.5657, 0.66", "73.2622, 206.273, -40.561, 0.66", "73.3334, 207.056, -40.5466, 0.66", "73.4329, 208.245, -40.5748, 0.44", "73.4376, 208.319, -40.5835, 0.44", "73.5561, 209.901, -40.7663, 0.44", "73.6303, 210.957, -40.879, 1.33", "73.7034, 212.401, -40.9929, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "14.5378, 31.1942, -23.2752, 1.18", "13.5916, 31.6261, -25.3786, 1.18", "13.0608, 31.8174, -26.5566, 1.18", "12.4689, 31.9525, -27.7422, 0.88", "11.5147, 32.1138, -29.547, 0.66", "10.5954, 32.1894, -31.1522, 1.18", "9.91866, 32.2102, -32.2725, 1.4", "8.72194, 32.1111, -33.985, 0.52", "7.95262, 31.912, -35.0618, 0.52", "7.84448, 31.8596, -35.1945, 0.52", "7.14666, 31.2841, -35.905, 1.33", "7.11365, 31.221, -35.9499, 1.33", "7.00182, 30.5362, -36.5965, 1.33", "7.00015, 30.4778, -36.6572, 1.33", "7.00611, 29.6918, -37.5826, 0.81", "7.02592, 29.1712, -38.276, 0.81", "7.11362, 27.7706, -40.2514, 0.88", "7.26004, 25.4148, -43.6698, 0.88", "7.26118, 25.3683, -43.739, 0.88", "7.24879, 24.3955, -45.1951, 0.88", "7.16844, 23.2588, -46.9503, 0.66", "7.10446, 22.8466, -47.5937, 0.44", "7.08746, 22.7924, -47.6712, 0.44", "6.74968, 22.0578, -48.5344, 0.44", "6.72306, 22.0061, -48.5953, 0.44", "6.52973, 21.6922, -48.9686, 0.88", "6.22755, 21.2033, -49.4468, 0.88", "5.60116, 19.838, -50.6436, 0.44", "5.5851, 19.7717, -50.6916, 0.44", "5.59649, 19.2332, -51.132, 0.44", "5.60952, 19.1351, -51.2147, 0.44", "5.93682, 17.9769, -52.115, 0.44", "6.10261, 17.4614, -52.5119, 1.18", "6.53385, 16.1747, -53.5089, 1.18", "7.2483, 13.9169, -55.2934, 0.37", "7.26584, 13.8539, -55.3465, 0.37", "7.5337, 12.7948, -56.3753, 0.37", "7.95398, 10.9495, -58.4052, 0.37", "7.96967, 10.8298, -58.5388, 0.37", "7.98718, 10.1784, -59.2439, 1.11", "7.82807, 8.9125, -60.4566, 1.11", "7.49469, 7.20883, -62.0859, 0.44", "7.47523, 7.12489, -62.1786, 0.44", "7.27109, 6.11186, -63.3293, 0.44", "7.21203, 5.80044, -63.6918, 1.11", "6.98196, 4.87, -64.7724, 1.4", "6.9627, 4.80462, -64.84, 1.4", "6.24047, 2.61272, -66.8346, 0.29", "6.06354, 2.04799, -67.3573, 0.29", "6.04277, 1.99254, -67.4173, 0.29", "5.61701, 1.06144, -68.5087, 0.29", "5.13396, 0.0910957, -69.7937, 0.74", "4.9697, -0.207132, -70.1859, 0.74", "4.90994, -0.303206, -70.309, 0.74", "3.94538, -1.8048, -72.6936, 0.37", "3.9236, -1.84176, -72.765, 0.37", "3.43151, -2.6937, -74.6199, 1.11", "3.28934, -2.92312, -75.1755, 1.11", "3.23004, -3.01805, -75.4136, 1.11", "2.53391, -4.12262, -78.0873, 0.37", "1.73835, -5.50295, -81.2873, 0.37", "1.51061, -5.88044, -82.1508, 1.11", "0.924577, -6.69684, -84.053, 0.37", "0.900812, -6.72805, -84.1266, 0.37", "0.594298, -7.09318, -85.0595, 0.37", "0.16215, -7.51488, -86.4985, 0.37", "0.138394, -7.52772, -86.5774, 0.37", "-0.41075, -7.70357, -88.5993, 0.29", "-0.427755, -7.70585, -88.6817, 0.29", "-0.966904, -7.72067, -91.4445, 1.47", "-1.45644, -7.71027, -93.9471, 0.74", "-1.62232, -7.72416, -94.7308, 0.74", "-1.63924, -7.72899, -94.8131, 0.74", "-2.12206, -8.09798, -97.4485, 0.37", "-2.3928, -8.42648, -98.6806, 0.37", "-2.7391, -8.93398, -99.4725, 0.37", "-3.0696, -9.47106, -100.094, 0.37", "-3.14458, -9.59718, -100.229, 0.37", "-3.63806, -10.377, -101.027, 0.37", "-3.71863, -10.5128, -101.158, 0.37", "-4.24646, -11.6233, -102.788, 0.74", "-4.64904, -12.6727, -104.824, 0.22", "-4.77588, -13.0879, -105.7, 0.22", "-4.78401, -13.1184, -105.766, 0.22", "-5.01434, -14.0962, -107.913, 0.66", "-5.54102, -16.1369, -112.252, 1.55", "-5.83943, -17.3574, -114.772, 0.37", "-5.93681, -17.6706, -115.408, 0.22", "-6.04678, -18.01, -116.135, 0.22", "-6.09565, -18.1422, -116.422, 0.22", "-6.55738, -19.0151, -118.354, 0.22", "-6.59616, -19.059, -118.415, 0.22", "-7.93111, -20.0141, -119.445, 1.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-9.48821, 44.0558, -6.65452, 2.14", "-9.91437, 45.8753, -9.67027, 2.14", "-9.9319, 45.9167, -9.72569, 2.14", "-10.1716, 46.4834, -10.4838, 2.14", "-10.2067, 46.5665, -10.595, 2.14", "-11.0077, 48.4602, -13.1284, 2.14", "-11.2824, 49.1096, -13.9969, 2.5", "-12.0588, 50.4718, -15.4788, 2.8" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-9.48821, 44.0558, -6.65452, 0.59", "-10.6803, 45.084, -6.48679, 0.59", "-11.7108, 45.9574, -6.31373, 0.59", "-11.7747, 46.0056, -6.30367, 0.59", "-12.9464, 46.7934, -6.14521, 0.59", "-14.415, 47.7027, -5.82324, 0.59", "-15.3077, 48.2312, -5.59471, 0.59", "-15.3667, 48.2622, -5.57938, 0.59", "-16.9901, 49.0802, -5.10032, 0.96", "-17.9413, 49.5459, -4.81154, 0.96", "-19.6693, 50.3713, -4.26171, 1.03", "-20.3089, 50.6978, -4.05911, 1.03", "-21.0471, 51.1093, -3.86693, 0.74", "-21.5127, 51.3991, -3.75552, 0.52", "-22.1566, 51.8467, -3.63112, 0.52", "-22.6382, 52.1855, -3.57916, 0.37", "-23.0284, 52.451, -3.58695, 0.37", "-23.7558, 52.8646, -3.59383, 0.37", "-24.0856, 53.0221, -3.59584, 0.66", "-25.091, 53.4473, -3.60349, 0.66", "-25.6021, 53.6485, -3.60942, 0.22", "-25.6881, 53.6808, -3.60917, 0.22", "-26.9545, 54.1432, -3.59464, 0.22", "-27.8196, 54.4657, -3.59182, 0.29", "-28.3789, 54.6786, -3.59883, 0.52", "-29.0087, 54.904, -3.57311, 0.52", "-29.6081, 55.1027, -3.52457, 0.52", "-29.6846, 55.1227, -3.50902, 0.52", "-30.2791, 55.2174, -3.20308, 0.22", "-30.9603, 55.2755, -2.74644, 0.22", "-31.9965, 55.365, -1.98621, 0.22", "-32.0799, 55.3723, -1.92164, 0.22", "-33.5709, 55.4865, -0.819928, 1.55", "-35.742, 55.6172, 0.66188, 0.29", "-35.8194, 55.6236, 0.711032, 0.29", "-36.6318, 55.7267, 1.17609, 0.29", "-36.7748, 55.7549, 1.24503, 0.29", "-38.1764, 56.1004, 1.80192, 0.29", "-39.0746, 56.4167, 2.04074, 0.29", "-39.9348, 56.8047, 2.11064, 0.29", "-40.0039, 56.844, 2.12411, 0.29", "-40.7549, 57.5263, 2.50113, 0.29", "-40.7948, 57.5826, 2.54131, 0.29", "-41.2292, 58.4644, 3.24376, 0.29", "-41.2611, 58.5154, 3.29633, 0.29", "-41.522, 58.7997, 3.66637, 0.29", "-41.5722, 58.8391, 3.73252, 0.29", "-42.5973, 59.5294, 5.15238, 0.29", "-42.6328, 59.5579, 5.20334, 0.29", "-43.1644, 60.03, 5.96463, 1.03", "-43.2024, 60.0706, 6.02296, 1.03", "-43.9316, 61.018, 7.21613, 0.74", "-44.5504, 61.9851, 8.23338, 0.15", "-44.9734, 62.7564, 9.01142, 0.15", "-45.0044, 62.8112, 9.06173, 0.15", "-45.3489, 63.3706, 9.61576, 0.81", "-45.646, 63.8212, 10.0919, 1.18", "-45.9526, 64.2809, 10.5599, 1.18", "-47.1554, 65.9455, 12.2344, 1.25", "-47.5726, 66.491, 12.8093, 1.25", "-48.8004, 68.2052, 14.5803, 0.37", "-48.8334, 68.2576, 14.6317, 0.37", "-49.2674, 69.071, 15.3423, 0.37", "-49.8062, 70.2706, 16.2358, 0.37", "-49.8416, 70.3665, 16.2874, 0.37", "-50.2766, 71.7224, 16.9156, 0.37", "-50.5918, 72.8748, 17.4268, 1.33", "-50.804, 73.5267, 17.7795, 1.77", "-50.8275, 73.591, 17.8221, 1.77", "-51.0341, 74.08, 18.1857, 1.77", "-51.0614, 74.1293, 18.2243, 1.77", "-52.3113, 75.7504, 19.5555, 0.44", "-53.1307, 76.6248, 20.3235, 0.44", "-53.1709, 76.6642, 20.3639, 0.44", "-53.5012, 76.991, 20.6871, 0.81", "-53.7475, 77.2372, 20.921, 0.81", "-54.1048, 77.6059, 21.2139, 0.81", "-54.178, 77.6877, 21.2555, 0.81", "-55.1317, 78.7518, 21.982, 0.59", "-55.6669, 79.3293, 22.4106, 0.59", "-55.7171, 79.3777, 22.4511, 0.59", "-56.0946, 79.7054, 22.748, 0.59", "-57.0794, 80.3703, 23.4263, 0.66", "-58.1482, 81.0414, 24.0758, 0.29", "-58.2138, 81.0768, 24.1042, 0.29", "-58.8983, 81.3257, 24.4279, 0.59", "-58.9593, 81.3385, 24.4559, 0.59", "-59.9402, 81.2077, 24.8534, 0.81", "-67.4348, 87.6904, 30.4887, 0.81", "-74.6807, 93.4702, 37.125, 0.81", "-81.983, 100.355, 42.5317, 0.81", "-87.0741, 108.464, 48.7188, 0.81", "-91.1302, 117.426, 54.4777, 0.81", "-94.7931, 126.082, 60.9283, 0.81", "-97.1841, 135.277, 67.2279, 0.81", "-99.9396, 143.723, 74.3714, 0.81", "-101.81, 152.992, 80.7377, 0.81", "-103.911, 162.257, 87.038, 0.81", "-106.194, 170.058, 95.0308, 0.81", "-109.552, 178.155, 102.319, 0.81", "-112.441, 185.209, 110.796, 0.81", "-115.982, 192.069, 119.183, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-27.3277, -50.4058, 24.6913, 0.22", "-32.7351, -59.9049, 32.7448, 0.22", "-39.9948, -68.4483, 40.4018, 0.22", "-46.8392, -77.2742, 48.1211, 0.22", "-55.2951, -86.8893, 52.6348, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-27.3277, -50.4058, 24.6913, 0.22", "-32.1838, -56.6376, 30.0617, 0.22", "-37.3324, -63.2173, 34.6941, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "6.51729, -34.9517, 0.453073, 0.81", "7.47011, -35.3307, 2.01569, 0.81", "7.50307, -35.3497, 2.06233, 0.81", "8.07581, -35.799, 2.80788, 1.47", "8.21231, -35.935, 2.97756, 1.47", "9.125, -36.9848, 4.07992, 0.59", "9.49746, -37.4846, 4.52464, 0.52", "9.88756, -38.1656, 4.88102, 0.52", "10.1845, -38.8064, 5.13773, 1.11", "10.366, -39.3176, 5.26723, 1.11", "10.4001, -39.44, 5.28213, 1.11", "10.5273, -40.0935, 5.25239, 0.81", "10.6247, -40.6352, 5.20845, 0.81", "10.6417, -40.725, 5.1976, 0.81", "10.7507, -41.1527, 5.18548, 1.03", "11.0217, -41.9034, 5.2168, 0.52", "11.0494, -41.9557, 5.2276, 0.52", "11.4761, -42.4832, 5.48289, 0.52", "11.7004, -42.6395, 5.64319, 0.44", "12.6698, -42.8773, 6.45829, 0.44", "13.1947, -42.8678, 6.87192, 0.44", "13.8281, -42.781, 7.34807, 0.74", "13.8757, -42.7695, 7.38311, 0.74", "14.3969, -42.5912, 7.76147, 0.74", "15.2046, -42.2656, 8.4235, 0.44", "15.796, -42.0011, 8.94271, 0.44", "15.8424, -41.9841, 8.9904, 0.44", "16.4878, -41.8295, 9.71541, 0.44", "16.5257, -41.8291, 9.76136, 0.44", "17.5126, -42.2541, 11.1326, 0.44", "17.5528, -42.3041, 11.1969, 0.44", "17.8641, -42.8934, 11.7802, 0.44", "18.0751, -43.4039, 12.1578, 1.33", "18.2848, -44.1258, 12.5395, 1.62", "18.4271, -44.7032, 12.7708, 1.62", "18.6933, -45.9882, 13.1485, 0.66", "18.7066, -46.0357, 13.1644, 0.66", "18.9418, -46.6486, 13.4001, 0.52", "19.3104, -47.3151, 13.6805, 0.52", "19.8472, -48.0135, 13.9872, 0.52", "19.8913, -48.0617, 14.0067, 0.52", "20.7275, -48.8542, 14.2319, 0.44", "21.145, -49.1743, 14.3392, 0.59", "21.9606, -49.5587, 14.5308, 0.37", "22.0182, -49.5725, 14.5419, 0.37", "27.0674, -54.6065, 19.1952, 0.37", "32.5475, -59.3211, 23.6932, 0.37", "38.0505, -63.5781, 28.6007, 0.37", "43.0837, -66.7319, 34.7007, 0.37", "49.6024, -69.8773, 39.1842, 0.37", "56.874, -71.7025, 43.2194, 0.37", "63.1965, -75.2444, 47.6882, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "6.51729, -34.9517, 0.453073, 1.03", "6.55702, -34.9733, 0.450113, 1.03", "6.68717, -35.0494, 0.440903, 1.03", "7.43402, -35.4957, 0.388442, 0.81", "8.37434, -36.0605, 0.322512, 0.81", "9.74644, -36.8535, 0.225126, 0.66", "10.2932, -37.1646, 0.183704, 0.96", "10.9777, -37.5462, 0.129471, 0.96", "11.7826, -37.9808, 0.0631469, 0.96", "11.8599, -38.0181, 0.0564649, 0.96", "12.6674, -38.3381, -0.0178862, 0.96", "13.2789, -38.4781, -0.07903, 0.74", "13.7477, -38.5296, -0.129111, 0.37", "14.1417, -38.5153, -0.170984, 0.37", "14.8568, -38.416, -0.245892, 0.37", "14.9307, -38.4023, -0.253336, 0.37", "15.9721, -38.2076, -0.352647, 0.37", "16.0365, -38.201, -0.357609, 0.37", "16.7664, -38.1861, -0.40751, 0.37", "16.9162, -38.2027, -0.416737, 0.37", "17.7691, -38.3986, -0.464944, 0.37", "18.6067, -38.6828, -0.51061, 0.37", "19.6197, -39.1604, -0.628169, 1.33", "19.6837, -39.1989, -0.639465, 1.33", "20.367, -39.7544, -0.885448, 1.77", "20.5971, -39.9647, -0.997505, 1.77", "21.1855, -40.5623, -1.3569, 1.77", "21.7957, -41.1865, -1.77857, 0.52", "22.5402, -41.9036, -2.30976, 0.52", "23.8962, -43.0695, -3.21888, 0.52", "24.3457, -43.4044, -3.50538, 0.52", "24.4037, -43.4398, -3.53842, 0.52", "24.9399, -43.6688, -3.78903, 0.66", "25.6792, -43.8309, -4.01699, 0.74", "26.2265, -43.8241, -4.13736, 0.96", "26.7235, -43.749, -4.20251, 0.96", "27.2249, -43.6429, -4.26842, 0.81", "27.7401, -43.5198, -4.33499, 0.81", "28.7528, -43.2685, -4.46206, 0.59", "29.6134, -43.1019, -4.5634, 0.44", "29.6874, -43.0914, -4.57471, 0.44", "30.2887, -43.0788, -4.6784, 0.37", "30.8322, -43.1544, -4.79216, 0.29", "31.5725, -43.3554, -4.96103, 0.29", "32.5661, -43.7182, -5.22193, 0.29", "33.2806, -44.0135, -5.41632, 1.11", "34.5049, -44.5146, -5.75085, 1.84", "36.254, -45.2528, -6.16799, 2.21", "37.4641, -45.7621, -6.42443, 2.21", "38.6121, -46.2458, -6.63201, 1.11", "39.5728, -46.6374, -6.72594, 0.59", "40.4215, -46.9703, -6.72529, 0.37", "41.5451, -47.3683, -6.63251, 0.74", "41.6057, -47.3887, -6.62091, 0.74", "42.3493, -47.6103, -6.43834, 0.74", "43.6466, -47.9701, -6.0681, 0.44", "44.7014, -48.2462, -5.81461, 0.44", "44.7838, -48.2668, -5.80023, 0.44", "45.5706, -48.4229, -5.75093, 1.25", "46.6292, -48.5917, -5.7953, 1.25", "46.8622, -48.6186, -5.83018, 1.25", "47.663, -48.6924, -6.03443, 1.47", "47.8187, -48.7009, -6.07701, 1.47", "48.894, -48.7677, -6.33388, 0.96", "49.9574, -48.8357, -6.56214, 0.37", "50.8062, -48.9349, -6.6575, 0.37", "50.9117, -48.9513, -6.65969, 0.37", "52.2584, -49.2122, -6.55653, 0.37", "53.1666, -49.4482, -6.41244, 0.37", "53.2253, -49.4683, -6.39633, 0.37", "54.5982, -50.0516, -5.89785, 0.37", "54.7856, -50.146, -5.82481, 0.66", "54.8573, -50.1866, -5.79959, 0.66", "55.5397, -50.641, -5.61192, 0.66", "55.6031, -50.6814, -5.60465, 0.66", "56.3077, -51.115, -5.58889, 0.29", "56.3726, -51.153, -5.59448, 0.29", "57.0914, -51.5438, -5.71823, 0.22", "57.8845, -51.9591, -5.89478, 0.22", "58.3888, -52.2024, -6.02646, 0.96", "58.5303, -52.2698, -6.06595, 0.96", "59.3958, -52.6837, -6.38013, 1.18", "60.6786, -53.2959, -6.91657, 1.18", "60.7499, -53.3307, -6.94994, 1.18", "61.3253, -53.6222, -7.22416, 1.33", "62.0695, -54.0233, -7.5779, 1.18", "63.2227, -54.6987, -8.0982, 1.03", "63.2887, -54.7432, -8.13094, 1.03", "63.8977, -55.1926, -8.4183, 0.52", "64.752, -55.8222, -8.80714, 0.52", "64.8153, -55.8693, -8.84163, 0.52", "65.9268, -56.7279, -9.4903, 0.52", "66.9819, -57.5942, -10.1048, 1.4", "67.8646, -58.3329, -10.6215, 2.06", "68.5957, -58.9566, -11.063, 2.5", "69.9743, -60.1352, -11.9457, 0.29", "70.7569, -60.7847, -12.443, 0.29", "71.4307, -61.3035, -12.8898, 0.29", "71.8757, -61.5956, -13.1616, 0.29", "71.9323, -61.6294, -13.1984, 0.29", "72.9168, -62.1959, -13.8123, 1.18", "73.2836, -62.396, -14.0136, 1.18", "74.3641, -62.9976, -14.6333, 0.44", "75.4666, -63.6516, -15.2812, 0.44", "76.269, -64.2198, -15.7492, 0.29", "76.9524, -64.8046, -16.1696, 0.29", "77.277, -65.1234, -16.3643, 0.81", "77.7255, -65.5798, -16.6719, 0.81", "77.7713, -65.6292, -16.7062, 0.81", "78.3155, -66.1284, -17.1757, 0.81", "79.2865, -66.6714, -17.928, 0.29", "79.9623, -66.8326, -18.3701, 0.29", "81.1017, -66.9064, -18.958, 0.29", "81.1817, -66.9059, -18.9898, 0.29", "82.0119, -66.8705, -19.2525, 1.18", "82.8496, -66.8188, -19.445, 1.62", "84.048, -66.7625, -19.6051, 1.33", "84.8572, -66.7661, -19.6778, 0.44", "85.9272, -66.7995, -19.7223, 0.37", "86.078, -66.8056, -19.7294, 0.37", "86.9168, -66.8551, -19.7724, 0.37", "87.1519, -66.869, -19.7864, 0.37", "88.2473, -66.9673, -19.8562, 0.37", "88.9858, -67.0515, -19.9103, 0.37", "90.0869, -67.1781, -19.9845, 0.37", "90.1716, -67.1924, -19.9898, 0.37", "90.7142, -67.3087, -20.022, 0.66", "91.3218, -67.5123, -20.0682, 0.66", "92.1233, -67.9608, -20.1468, 0.66", "92.3197, -68.1111, -20.1706, 0.66", "93.0793, -68.7899, -20.2771, 0.66", "93.1425, -68.8477, -20.2865, 0.66", "93.7667, -69.4561, -20.3903, 0.59", "94.431, -70.1254, -20.5163, 0.59", "95.4119, -71.1667, -20.7135, 0.59", "95.463, -71.2213, -20.7239, 0.59", "96.0298, -71.8136, -20.8362, 1.25" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-4.61169, -48.2658, -3.1847, 2.06", "-3.35431, -52.1199, -3.54375, 2.06", "-2.83825, -54.0686, -3.54426, 1.25", "-2.46293, -55.7273, -3.46202, 1.25", "-2.44507, -55.8169, -3.45491, 1.25", "-2.11684, -57.6507, -3.33094, 0.59", "-1.81369, -59.6026, -3.21691, 0.59", "-1.74889, -60.255, -3.1152, 0.74", "-1.65976, -61.4566, -2.9677, 0.74", "-1.57454, -63.2828, -2.89043, 0.74", "-1.51906, -64.9167, -2.9434, 0.74", "-1.50919, -65.6996, -3.02692, 1.11", "-1.51001, -65.8042, -3.04028, 1.11", "-1.52922, -66.849, -3.17412, 1.11", "-1.57957, -68.3387, -3.35912, 0.44", "-1.62391, -69.3992, -3.4697, 0.29", "-1.68791, -72.4333, -3.63269, 0.29", "-1.68487, -72.5388, -3.63545, 0.29", "-1.65364, -73.1454, -3.63878, 0.44", "-1.56977, -74.0497, -3.61192, 0.74", "-1.43775, -75.0228, -3.54057, 1.47", "-1.11869, -76.7935, -3.40746, 1.77", "-0.715814, -78.8102, -3.31796, 1.77", "-0.69989, -78.9012, -3.31582, 1.77", "-0.448172, -80.5099, -3.30598, 1.77", "-0.286852, -81.9223, -3.30987, 1.03", "-0.17911, -83.1624, -3.31974, 0.81", "-0.114396, -84.3244, -3.32972, 0.44", "-0.0646193, -86.3414, -3.34045, 0.44", "-0.0636852, -86.433, -3.34086, 0.44", "-0.106813, -90.2946, -3.35145, 0.44", "-0.108272, -90.3999, -3.35019, 0.44", "-0.116831, -91.0914, -3.30855, 0.88", "-0.118131, -91.1833, -3.29846, 0.88", "-0.134257, -92.2491, -3.15759, 1.47", "-0.156056, -93.8154, -2.93333, 1.84", "-0.179005, -95.7471, -2.6258, 1.62", "-0.196884, -97.0685, -2.42131, 0.74", "-0.204787, -97.9386, -2.28788, 0.59", "-0.193122, -99.2598, -2.08298, 0.44", "-0.154859, -100.959, -1.76232, 0.44", "-0.150198, -101.062, -1.73966, 0.44", "-0.092252, -101.897, -1.55409, 0.81", "-0.0670578, -102.162, -1.49824, 0.81", "0.0280567, -103.175, -1.27593, 0.81", "0.130985, -104.439, -1.00138, 0.29", "0.193126, -105.242, -0.836506, 0.29", "0.407069, -107.985, -0.309407, 0.22", "0.412954, -108.076, -0.2941, 0.22", "0.45202, -108.82, -0.194509, 1.03", "0.504844, -110.171, -0.0440233, 1.4", "0.557071, -111.413, 0.0619369, 1.4", "0.557071, -111.413, 0.0619369, 0.22", "0.647628, -112.931, 0.223077, 0.22", "0.766877, -115.119, 0.530478, 0.22", "0.787068, -115.696, 0.625798, 1.11", "0.79891, -116.775, 0.821764, 1.55", "0.783275, -117.87, 1.03028, 2.21", "0.753501, -119.033, 1.27118, 1.47", "0.720851, -120.011, 1.49682, 0.22", "0.68703, -121.27, 1.79867, 0.22", "0.67051, -122.678, 2.12269, 0.22", "0.67086, -122.768, 2.14335, 0.22", "0.738125, -124.442, 2.51031, 0.22", "0.745446, -124.533, 2.52826, 0.22", "0.950197, -126.145, 2.78984, 0.22", "0.996657, -126.436, 2.83908, 0.66", "1.11319, -127.151, 2.95381, 0.81", "1.23875, -127.965, 3.01947, 0.81", "1.26124, -128.113, 3.01865, 0.22", "1.26918, -128.205, 3.01321, 0.22", "1.29171, -129.439, 2.87141, 0.22", "1.29168, -129.531, 2.86248, 0.22", "1.36496, -131.141, 2.57494, 0.22", "1.36903, -131.231, 2.55781, 0.22", "1.42774, -132.279, 2.35842, 0.22", "1.45383, -132.665, 2.28357, 0.22", "1.65608, -135.122, 1.78866, 0.22", "1.9675, -139.067, 1.00425, 0.22" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-4.61169, -48.2658, -3.1847, 0.59", "-2.34301, -51.4978, -6.67874, 0.59", "-1.92641, -52.0913, -7.32036, 0.59", "-1.87354, -52.1665, -7.40179, 0.59", "-1.24852, -53.0569, -8.3644, 0.59", "-0.566725, -54.0283, -9.41446, 0.59", "-0.114726, -54.6721, -10.1106, 0.59" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "73.7034, 212.401, -40.9929, 0.74", "73.5701, 213.691, -41.1973, 0.74", "73.3786, 215.666, -41.7253, 0.22", "73.2658, 216.882, -42.1223, 0.44", "73.1002, 219.016, -42.8552, 0.22", "73.0567, 219.618, -43.0679, 0.44", "73.0138, 220.257, -43.3253, 0.44", "72.9355, 221.855, -44.1814, 0.22", "72.9315, 221.922, -44.227, 0.22", "72.8261, 223.256, -45.2406, 0.22", "72.8145, 223.322, -45.2859, 0.22", "72.5962, 224.576, -45.9151, 0.88", "72.5145, 225.061, -46.105, 0.88", "72.2714, 226.385, -46.4849, 0.15", "72.2569, 226.462, -46.5041, 0.15", "71.7891, 228.828, -46.9751, 0.15", "71.3102, 231.2, -47.3386, 0.15", "71.1996, 231.72, -47.3771, 1.03", "70.8749, 233.096, -47.4262, 1.03", "70.5504, 234.318, -47.3987, 0.22", "69.962, 236.288, -47.2948, 0.22", "69.6245, 237.268, -47.1926, 0.22", "69.1371, 238.506, -47.0121, 0.22", "68.437, 240.294, -46.7416, 0.22", "67.7738, 242.06, -46.507, 0.22", "67.7458, 242.135, -46.4991, 0.22", "67.3155, 243.341, -46.4174, 1.4", "66.9676, 244.439, -46.3969, 0.15", "66.0388, 247.892, -46.4564, 0.15", "65.8144, 248.884, -46.4812, 1.11", "65.6575, 249.669, -46.5168, 1.11", "65.5562, 250.226, -46.5429, 0.22", "65.3195, 251.727, -46.6185, 0.22", "65.0976, 253.785, -46.6532, 0.22", "65.088, 253.959, -46.6474, 0.22", "65.0705, 254.562, -46.6071, 0.96", "65.0716, 255.07, -46.5679, 0.96", "65.0821, 255.841, -46.5061, 0.22", "65.1617, 258.602, -46.3381, 0.22", "65.1701, 258.764, -46.3335, 0.22", "65.185, 259.152, -46.32, 0.44", "65.1997, 259.574, -46.3025, 0.22", "65.2176, 260.295, -46.2686, 0.22", "65.2178, 260.376, -46.2647, 0.22", "65.15, 262.561, -46.16, 0.22", "65.1326, 263.082, -46.1356, 0.44", "65.1281, 263.175, -46.1316, 0.44", "65.1033, 263.683, -46.1104, 0.44", "65.0454, 265.222, -46.0429, 0.22", "65.0385, 265.303, -46.0415, 0.22", "64.9872, 265.722, -46.0465, 0.44", "64.9241, 266.137, -46.007, 0.44", "64.9079, 266.227, -45.993, 0.44", "64.8792, 266.383, -45.9615, 0.15", "64.4343, 268.632, -45.4541, 0.15", "64.0227, 270.652, -44.9818, 0.15", "63.6564, 272.406, -44.5461, 0.44", "63.6407, 272.483, -44.5256, 0.44", "63.4271, 273.51, -44.2333, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "73.7034, 212.401, -40.9929, 0.29", "74.1845, 213.336, -41.2076, 0.29", "74.2121, 213.389, -41.2294, 0.29", "74.8745, 214.65, -41.8344, 0.29", "74.9053, 214.709, -41.8633, 0.29", "75.6865, 216.222, -42.6052, 0.29", "76.2134, 217.208, -43.166, 0.29", "76.8452, 218.386, -43.9319, 0.96", "76.8713, 218.435, -43.9632, 0.96", "77.2019, 219.064, -44.3757, 0.96", "77.2259, 219.114, -44.408, 0.96", "77.8439, 220.54, -45.2729, 0.37", "78.1646, 221.339, -45.7424, 0.22", "78.5259, 222.419, -46.2617, 0.22", "78.5739, 222.587, -46.3384, 0.22", "78.8646, 223.795, -46.8751, 0.22", "78.9925, 224.445, -47.1702, 0.59", "78.9996, 224.505, -47.192, 0.59", "79.0836, 225.605, -47.5671, 0.96", "79.1247, 226.185, -47.7409, 0.96", "79.1313, 226.289, -47.7715, 0.96", "79.199, 227.569, -48.0917, 0.59", "79.229, 228.625, -48.4183, 0.52", "79.2268, 229.765, -48.7696, 0.52", "79.2251, 229.825, -48.7874, 0.52", "79.1623, 231.375, -49.2014, 1.62", "79.1265, 232.27, -49.4769, 1.99", "79.0953, 233.471, -49.862, 0.37", "79.0725, 234.872, -50.3561, 0.37", "79.0726, 235.567, -50.5848, 0.74", "79.0895, 236.467, -50.8451, 0.74", "79.1496, 238.104, -51.2868, 0.22", "79.2306, 239.233, -51.6691, 0.22", "79.3028, 239.926, -51.9303, 0.66", "79.4183, 240.843, -52.3278, 0.66", "79.43, 240.931, -52.3681, 0.66", "79.6577, 242.602, -53.1502, 0.22", "79.9267, 244.747, -54.0745, 0.22", "79.9345, 244.812, -54.1064, 0.22", "79.9575, 244.999, -54.2033, 1.03", "79.9643, 245.055, -54.2321, 1.03", "79.9967, 245.302, -54.3398, 1.03", "80.0764, 245.817, -54.4584, 0.29", "80.0839, 245.88, -54.4631, 0.29", "80.1413, 246.552, -54.5107, 0.29", "80.1952, 247.33, -54.5587, 0.29", "80.1969, 247.403, -54.5628, 0.29", "80.1947, 248.071, -54.5984, 0.29", "80.1886, 248.213, -54.6039, 0.29", "80.1353, 249.09, -54.6278, 0.81", "80.0792, 249.686, -54.6309, 0.81", "80.0049, 250.2, -54.6133, 0.15", "79.9941, 250.272, -54.6109, 0.15", "79.8033, 251.486, -54.5714, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-12.0588, 50.4718, -15.4788, 1.77", "-12.1433, 52.0746, -16.0938, 1.77", "-12.263, 52.8677, -16.334, 1.69", "-12.3468, 53.2472, -16.4647, 1.69", "-12.3656, 53.3116, -16.4864, 1.69", "-12.7753, 54.4591, -16.8528, 1.4", "-12.7974, 54.5133, -16.8707, 1.4", "-13.1554, 55.2365, -17.078, 1.25", "-13.7889, 56.4265, -17.4033, 1.25", "-14.2716, 57.3285, -17.6255, 1.18", "-14.7692, 58.2346, -17.786, 1.18", "-15.298, 59.1861, -17.8925, 1.18", "-15.7153, 59.944, -17.9264, 1.18", "-16.1787, 60.8079, -17.9278, 1.18", "-16.5667, 61.5472, -17.8845, 1.33", "-17.0794, 62.5905, -17.8068, 1.33", "-17.3632, 63.2137, -17.7492, 1.03", "-17.7374, 64.0826, -17.663, 1.03", "-18.0574, 64.8454, -17.6239, 0.81", "-18.09, 64.9334, -17.6357, 0.81", "-18.2469, 65.3759, -17.7641, 0.81", "-18.2799, 65.4839, -17.8147, 0.81", "-18.4675, 66.129, -18.1607, 0.81", "-18.4805, 66.1741, -18.1856, 0.81", "-18.9155, 67.6216, -18.9125, 1.03", "-19.1264, 68.3293, -19.2803, 1.47", "-19.5011, 69.5359, -19.9112, 1.47", "-19.521, 69.5966, -19.9412, 1.47", "-19.7649, 70.2887, -20.2612, 1.77", "-20.0838, 71.1682, -20.6483, 2.06", "-20.4706, 72.1918, -21.0904, 1.47", "-20.6795, 72.7883, -21.3454, 1.11", "-20.9505, 73.6337, -21.684, 1.47", "-21.1052, 74.2081, -21.9213, 1.77", "-21.3834, 75.3139, -22.3916, 1.99", "-21.6123, 76.2991, -22.8144, 2.28", "-21.9321, 77.7993, -23.431, 2.28", "-22.218, 79.3754, -24.1017, 2.5", "-22.4638, 80.991, -24.8057, 2.87" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-12.0588, 50.4718, -15.4788, 1.03", "-12.2902, 50.5628, -15.5527, 1.03", "-13.7345, 51.0674, -15.9977, 1.03", "-14.7618, 51.3764, -16.3195, 0.96", "-15.6263, 51.5973, -16.5996, 0.96", "-17.7768, 52.0877, -17.268, 1.18", "-18.9618, 52.3233, -17.6038, 1.18", "-20.364, 52.535, -17.9778, 1.18", "-21.8632, 52.6936, -18.3497, 1.18", "-23.5438, 52.8102, -18.7512, 1.18", "-25.0328, 52.8552, -19.1081, 1.18", "-26.5978, 52.8598, -19.4735, 1.18", "-28.057, 52.8433, -19.8216, 1.18", "-29.3792, 52.82, -20.1126, 1.55", "-30.3234, 52.7976, -20.3057, 1.92", "-31.8945, 52.7377, -20.6298, 1.92" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-115.982, 192.069, 119.183, 0.74", "-121.917, 197.474, 123.721, 0.74", "-128.379, 202.733, 127.673, 0.74", "-135.278, 208.465, 129.81, 0.74", "-142.098, 214.672, 129.782, 0.74" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-115.982, 192.069, 119.183, 0.52", "-118.743, 197.979, 124.186, 0.74", "-120.479, 204.082, 129.414, 0.74", "-121.274, 210.202, 134.844, 0.74", "-122.418, 216.829, 139.573, 0.74" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-55.2951, -86.8893, 52.6348, 0.29", "-58.8441, -92.2705, 56.9186, 0.29", "-62.4749, -97.114, 61.7416, 0.29", "-67.5359, -100.49, 66.5257, 0.29", "-72.5065, -103.175, 71.8161, 0.29", "-77.3577, -105.852, 77.2199, 0.29", "-81.9786, -107.517, 83.2013, 0.29", "-86.6609, -107.968, 89.3475, 0.29", "-92.0222, -107.185, 94.8745, 0.29", "-98.5022, -107.443, 99.0988, 0.29", "-105.623, -107.046, 102.105, 0.29", "-112.844, -105.017, 104.014, 0.29", "-120.206, -103.777, 106.057, 0.29", "-127.318, -102.79, 108.944, 0.29", "-134.347, -101.608, 111.961, 0.29", "-141.348, -101.337, 115.251, 0.29" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-55.2951, -86.8893, 52.6348, 0.29", "-60.4297, -92.7321, 56.3055, 0.29", "-66.2757, -97.8646, 59.974, 0.29", "-71.9211, -103.582, 63.041, 0.29", "-76.943, -109.789, 66.2404, 0.29", "-82.098, -116.202, 68.7458, 0.29", "-86.93, -122.421, 72.2029, 0.29", "-91.0661, -128.708, 76.3673, 0.29", "-96.3492, -134.208, 80.3438, 0.29", "-100.782, -140.942, 83.3412, 0.29", "-105.679, -147.463, 86.0743, 0.29", "-111.572, -153.583, 87.4135, 0.29", "-117.496, -159.804, 87.8243, 0.29" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-37.3324, -63.2173, 34.6941, 0.29", "-45.2455, -70.9799, 37.3139, 0.29", "-54.0483, -78.1355, 38.3375, 0.29", "-63.5776, -83.9458, 36.0627, 0.29", "-72.0674, -90.8777, 32.9623, 0.29", "-81.4793, -96.662, 30.1879, 0.29", "-91.0814, -101.609, 26.5728, 0.29", "-101.679, -104.655, 23.7181, 0.29", "-112.044, -107.577, 20.0069, 0.29", "-123.089, -108.16, 17.2854, 0.29", "-133.798, -110.338, 14.0743, 0.29", "-144.891, -112.284, 12.3701, 0.29", "-155.8, -115.508, 11.7841, 0.29", "-166.753, -118.429, 10.6745, 0.29", "-177.097, -122.93, 9.0966, 0.29", "-186.613, -128.926, 7.29721, 0.29", "-196.868, -133.592, 5.62588, 0.29", "-206.898, -138.555, 3.49981, 0.29", "-216.689, -143.404, 0.280188, 0.29", "-226.127, -149.47, -1.68334, 0.29", "-234.532, -156.352, -5.11079, 0.29", "-243.949, -161.449, -8.99376, 0.29", "-253.623, -165.558, -13.383, 0.29", "-263.362, -169.127, -18.0893, 0.29", "-273.664, -172.684, -21.3994, 0.29", "-284.096, -176.753, -23.488, 0.29", "-294.694, -180.926, -23.4219, 0.29", "-304.501, -186.439, -21.6412, 0.29", "-313.634, -192.435, -18.4184, 0.29", "-323.025, -197.494, -14.4248, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-37.3324, -63.2173, 34.6941, 0.29", "-42.8306, -70.5903, 40.6609, 0.29", "-47.2558, -77.4964, 47.9352, 0.29", "-54.2108, -83.168, 54.2326, 0.29", "-63.5267, -87.2668, 58.3079, 0.29", "-71.8685, -92.3479, 63.287, 0.29", "-80.0454, -98.4758, 67.2596, 0.29", "-87.2466, -105.296, 71.9312, 0.29", "-95.2765, -112.086, 75.0311, 0.29", "-103.973, -118.338, 77.3743, 0.29", "-113.265, -123.11, 80.7029, 0.29", "-123.026, -126.236, 84.5945, 0.29", "-132.112, -127.688, 90.5544, 0.29", "-140.503, -126.842, 97.5602, 0.29", "-148.809, -124.972, 104.467, 0.29", "-156.471, -123.926, 112.238, 0.29", "-165.144, -122.342, 118.755, 0.29", "-173.83, -122.831, 125.427, 0.29", "-181.383, -122.91, 133.372, 0.29", "-189.767, -122.123, 140.393, 0.29", "-198.1, -119.428, 146.988, 0.29", "-206.739, -115.649, 152.58, 0.29", "-215.051, -111.935, 158.689, 0.29", "-222.99, -107.948, 165.113, 0.29", "-230.251, -104.827, 172.711, 0.29", "-238.202, -102.741, 179.966, 0.29", "-246.438, -101.094, 187.012, 0.29", "-254.726, -98.3069, 193.625, 0.29", "-263.087, -94.4881, 199.601, 0.29", "-272.592, -90.8528, 203.68, 0.29", "-281.779, -85.6176, 206.575, 0.29", "-291.594, -81.7122, 209.508, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "96.0298, -71.8136, -20.8362, 0.52", "96.9078, -71.6145, -21.1032, 0.52", "97.6957, -71.458, -21.3612, 0.52", "97.7558, -71.4507, -21.3789, 0.52", "98.7217, -71.3688, -21.6471, 0.52", "99.7121, -71.3027, -21.8724, 0.52", "100.936, -71.2712, -22.1007, 0.52", "100.998, -71.2755, -22.1088, 0.52", "102.158, -71.4712, -22.2494, 0.52", "102.29, -71.4977, -22.262, 0.52", "103.5, -71.7905, -22.3458, 1.4", "104.488, -72.0441, -22.4006, 0.52", "105.712, -72.3929, -22.4454, 0.52", "107.753, -72.9761, -22.526, 0.52", "108.543, -73.1874, -22.5575, 0.96", "109.172, -73.3479, -22.5822, 0.52", "109.233, -73.3621, -22.5844, 0.52", "109.849, -73.4562, -22.5916, 0.37", "110.331, -73.4655, -22.5691, 0.37", "111.046, -73.366, -22.4706, 0.37", "111.107, -73.3554, -22.4617, 0.37", "111.978, -73.1805, -22.3368, 0.37", "112.038, -73.1658, -22.3279, 0.37", "113.095, -72.8722, -22.1667, 0.74", "113.962, -72.6325, -22.0365, 1.03", "114.619, -72.48, -21.9452, 0.81", "115.189, -72.3682, -21.8521, 0.29", "116.23, -72.1931, -21.6605, 0.29", "117.257, -72.0614, -21.452, 0.29", "117.387, -72.0484, -21.4224, 0.29", "118.278, -71.9878, -21.2188, 0.29", "119.164, -71.9415, -21.0219, 0.29", "119.225, -71.9387, -21.0089, 0.29", "120.017, -71.9102, -20.8574, 0.29", "120.972, -71.8364, -20.6974, 0.29", "121.534, -71.7613, -20.5754, 0.74", "122.43, -71.5987, -20.3535, 0.74", "123.057, -71.4783, -20.1956, 0.29", "123.117, -71.4678, -20.1785, 0.29", "123.77, -71.3587, -19.9635, 0.29", "124.965, -71.159, -19.5566, 0.29", "125.591, -71.0577, -19.349, 0.29", "125.651, -71.0493, -19.3309, 0.29", "126.116, -71.0112, -19.2162, 0.59", "126.652, -70.9679, -19.1113, 0.59", "127.334, -70.9149, -19.0252, 0.37", "128.067, -70.8419, -19.0021, 0.37", "128.138, -70.832, -18.9972, 0.37", "129.008, -70.6577, -18.8938, 0.37", "129.551, -70.5264, -18.8031, 0.96", "129.62, -70.5133, -18.7894, 0.96", "130.162, -70.4038, -18.6791, 0.96", "130.583, -70.3112, -18.611, 0.22", "131.321, -70.1676, -18.524, 0.22", "131.383, -70.1567, -18.5197, 0.22", "132.616, -70.1239, -18.4941, 0.22", "133.089, -70.1503, -18.4979, 0.81", "133.758, -70.2402, -18.5206, 0.81", "133.945, -70.2756, -18.5302, 0.22", "134.006, -70.2905, -18.5319, 0.22", "135.415, -70.648, -18.5283, 0.22", "135.938, -70.8008, -18.5054, 0.88", "136.247, -70.8995, -18.4811, 1.18", "136.306, -70.9191, -18.4759, 1.18", "136.963, -71.1242, -18.4124, 0.15", "137.025, -71.1388, -18.4085, 0.15", "138.138, -71.3014, -18.3617, 0.15", "138.939, -71.3676, -18.3451, 0.81", "139.078, -71.3715, -18.3457, 0.81", "139.727, -71.3417, -18.3548, 1.18", "140.882, -71.2421, -18.3874, 0.22", "141.185, -71.218, -18.3922, 0.15", "141.28, -71.2116, -18.3922, 0.15", "142.336, -71.1965, -18.3817, 0.15", "142.807, -71.2019, -18.365, 1.11", "143.7, -71.2488, -18.3105, 1.47", "144.364, -71.2945, -18.2424, 0.15", "145.086, -71.3226, -18.1564, 0.15", "145.149, -71.3215, -18.1476, 0.15", "145.944, -71.2423, -18.012, 0.15", "146.067, -71.2278, -17.9902, 0.15", "146.499, -71.1429, -17.901, 0.15", "146.831, -71.0919, -17.8361, 0.59", "147.026, -71.0782, -17.8031, 0.59", "147.896, -71.089, -17.6788, 0.59", "148.674, -71.1594, -17.6284, 0.59", "148.736, -71.1674, -17.6274, 0.59", "149.727, -71.3311, -17.6552, 0.59", "150.367, -71.4441, -17.6976, 0.88", "150.509, -71.4697, -17.7087, 0.88", "151.309, -71.6175, -17.7852, 0.22", "151.442, -71.6398, -17.7995, 0.22", "151.953, -71.7235, -17.8568, 0.22", "152.148, -71.756, -17.8782, 0.22", "153.24, -71.9544, -17.9818, 0.22", "153.327, -71.9719, -17.9875, 0.22", "154.011, -72.1351, -18.0051, 0.96", "154.081, -72.1529, -18.0098, 0.96", "154.777, -72.3437, -18.0862, 0.96", "154.837, -72.3612, -18.0945, 0.96", "155.175, -72.4709, -18.1537, 0.96", "155.263, -72.502, -18.1688, 0.96", "155.877, -72.728, -18.2677, 0.22", "155.994, -72.7707, -18.2866, 0.22", "156.664, -73.0186, -18.3997, 0.22", "156.722, -73.0406, -18.4085, 0.22", "157.132, -73.1595, -18.5064, 0.74", "157.202, -73.1711, -18.523, 0.74", "157.798, -73.2328, -18.665, 1.03", "157.929, -73.2371, -18.6988, 1.03", "158.327, -73.2226, -18.8036, 1.03", "159.421, -73.1485, -19.0666, 0.22", "160.748, -73.0467, -19.2478, 0.22", "160.811, -73.0435, -19.2498, 0.22", "161.487, -73.019, -19.2173, 0.66", "161.822, -73.0083, -19.1992, 1.25", "162.406, -72.9783, -19.2092, 1.25", "163.645, -72.9244, -19.2765, 0.22", "164.683, -72.8755, -19.4354, 0.22", "164.754, -72.8721, -19.4498, 0.22", "165.967, -72.829, -19.7791, 0.22", "167.371, -72.7965, -20.2449, 0.22", "167.486, -72.7913, -20.2926, 0.22", "168.683, -72.7191, -20.8533, 0.22", "168.739, -72.7159, -20.8791, 0.22", "169.35, -72.6925, -21.1215, 0.22", "169.864, -72.6931, -21.2679, 1.03", "170.728, -72.7084, -21.4486, 1.33", "171.303, -72.6988, -21.6215, 0.66", "172.01, -72.6573, -21.9386, 0.29", "172.074, -72.6529, -21.9715, 0.29", "172.824, -72.6128, -22.3864, 0.29", "172.879, -72.6115, -22.4185, 0.29", "174.43, -72.6944, -23.3099, 0.96", "175.584, -72.8134, -23.9393, 0.96", "176.045, -72.8857, -24.1648, 0.15", "176.62, -73.0115, -24.4259, 0.15", "176.746, -73.0467, -24.4787, 0.15", "177.87, -73.4459, -24.8392, 0.15", "178.333, -73.6573, -24.9357, 0.88", "178.712, -73.8257, -24.996, 0.88", "179.808, -74.233, -25.1903, 0.22", "179.868, -74.2472, -25.2021, 0.22", "180.559, -74.3285, -25.3479, 0.22", "181.281, -74.2936, -25.5098, 0.22", "181.986, -74.1972, -25.665, 0.22", "182.263, -74.1231, -25.7337, 0.22", "182.882, -73.8828, -25.8455, 0.22", "182.939, -73.8576, -25.8555, 0.22", "183.54, -73.531, -25.9507, 1.11", "183.596, -73.5022, -25.9558, 1.11", "184.649, -73.1485, -26.2054, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "96.0298, -71.8136, -20.8362, 0.44", "96.1263, -73.0567, -20.999, 0.44", "96.2903, -74.6715, -21.2313, 0.44", "96.5246, -76.8128, -21.5518, 0.44", "96.7264, -78.4162, -21.7912, 0.44", "96.7485, -78.5878, -21.8156, 0.44", "97.0775, -80.908, -22.1304, 0.29", "97.1753, -81.5477, -22.2108, 0.29", "97.1908, -81.6323, -22.2202, 0.29", "97.3899, -82.7278, -22.338, 0.29", "97.5809, -83.9822, -22.4536, 0.44", "97.684, -84.8879, -22.512, 1.18", "97.7701, -86.162, -22.5506, 1.33", "97.7923, -86.9358, -22.5734, 0.37", "97.7911, -88.217, -22.6091, 0.37", "97.7891, -88.3043, -22.6114, 0.37", "97.7607, -89.6655, -22.6429, 0.37", "97.7552, -89.9482, -22.6484, 0.81", "97.7493, -91.0439, -22.6663, 0.81", "97.7721, -92.0327, -22.678, 0.29", "97.8703, -93.4891, -22.6756, 0.29", "97.9732, -94.8611, -22.6525, 0.29", "97.9956, -95.1171, -22.6444, 0.81", "98.0009, -95.2042, -22.6405, 0.81", "98.0228, -95.9671, -22.6024, 0.81", "98.0176, -96.9164, -22.5535, 0.22", "97.9741, -98.0869, -22.4933, 0.22", "97.9721, -98.1864, -22.4896, 0.22", "97.9667, -100.354, -22.5162, 0.22", "97.976, -100.897, -22.5438, 1.03", "97.9913, -101.844, -22.6248, 1.4", "97.9946, -102.241, -22.6693, 1.4", "98.0139, -103.595, -22.8347, 1.18", "98.0254, -104.785, -23.0222, 0.59", "98.0298, -105.433, -23.1494, 0.37", "98.0128, -106.598, -23.3898, 0.37", "97.9545, -108.183, -23.7252, 0.37", "97.9501, -108.269, -23.7421, 0.37", "97.8937, -109.373, -23.9293, 1.11", "97.8914, -109.472, -23.9455, 1.11", "97.8967, -110.555, -24.1378, 1.77", "97.9336, -111.512, -24.3155, 1.92", "98.0229, -112.58, -24.5047, 1.25", "98.138, -113.708, -24.6938, 0.66", "98.249, -114.769, -24.8494, 0.52", "98.3776, -116.12, -25.0547, 0.52", "98.3831, -116.206, -25.0677, 0.52", "98.4055, -117.355, -25.1816, 0.52", "98.3662, -118.363, -25.228, 1.4", "98.3014, -119.103, -25.2228, 1.77", "98.1086, -120.553, -25.1264, 0.74", "97.9063, -121.801, -24.9513, 0.44", "97.6882, -122.999, -24.7188, 0.37", "97.5054, -123.881, -24.4623, 0.37", "97.4882, -123.974, -24.4291, 0.37", "97.2806, -125.304, -23.8995, 0.74", "97.1278, -126.675, -23.3263, 0.96", "97.1126, -126.929, -23.2238, 0.96", "97.1142, -128.155, -22.8254, 0.44", "97.1877, -129.528, -22.3723, 0.44", "97.1943, -129.611, -22.3473, 0.44", "97.2994, -130.55, -22.1109, 0.81", "97.3068, -130.648, -22.0943, 0.81", "97.395, -131.835, -21.9087, 1.18", "97.4996, -133.177, -21.7331, 0.74", "97.5687, -133.898, -21.6312, 0.29", "97.6642, -134.787, -21.5117, 0.22", "97.7951, -135.901, -21.2998, 0.22", "97.9296, -137.09, -21.0382, 0.22", "97.9674, -137.472, -20.944, 0.66", "98.0195, -138.372, -20.7972, 0.74", "98.0395, -139.418, -20.6624, 0.74", "97.9976, -140.864, -20.5943, 0.22", "97.8993, -142.035, -20.6293, 0.22", "97.8539, -142.312, -20.6579, 0.22", "97.3733, -144.501, -20.9992, 0.22", "97.1484, -145.273, -21.1796, 0.88", "96.7608, -146.432, -21.5288, 0.88", "96.5876, -146.922, -21.7126, 0.59", "96.5633, -146.987, -21.7387, 0.59", "96.3809, -147.475, -21.9195, 0.22", "96.0689, -148.368, -22.1822, 0.22", "95.8457, -149.061, -22.3536, 0.22", "95.8212, -149.143, -22.3706, 0.22", "95.31, -150.959, -22.8102, 0.22", "95.0447, -151.964, -23.0874, 0.96", "94.7723, -153.086, -23.3628, 1.33", "94.5557, -154.056, -23.5682, 1.33", "94.5403, -154.127, -23.5816, 1.33", "94.2516, -155.557, -23.7949, 0.37", "94.1098, -156.371, -23.8684, 0.22", "93.7863, -158.314, -24.0679, 0.22", "93.6883, -158.851, -24.1174, 0.66", "93.5376, -159.647, -24.1789, 0.81", "93.4851, -159.916, -24.1952, 0.81", "93.3119, -160.813, -24.2229, 0.81", "93.1111, -161.815, -24.2755, 0.15", "92.6341, -164.146, -24.5139, 0.15", "92.618, -164.232, -24.5187, 0.15", "92.5463, -164.66, -24.4874, 1.11", "92.4393, -165.384, -24.3153, 1.33", "92.3469, -166.071, -24.0475, 0.44", "92.2786, -166.739, -23.7018, 0.44", "92.2215, -167.912, -22.9758, 0.44", "92.1749, -169.893, -21.7843, 0.22", "92.1806, -171.05, -21.0717, 0.74", "92.1839, -171.125, -21.0269, 0.74", "92.2515, -171.944, -20.5696, 0.74", "92.379, -173.12, -19.9774, 0.22", "92.5533, -174.485, -19.4482, 0.22", "92.7031, -175.41, -19.1882, 0.74", "92.874, -176.388, -18.9881, 1.03", "92.999, -177.042, -18.8674, 0.81", "93.0332, -177.199, -18.8439, 0.22", "93.3031, -178.236, -18.7134, 0.22", "93.3302, -178.317, -18.7029, 0.22", "93.6052, -179.082, -18.6213, 0.22", "93.7163, -179.375, -18.5848, 0.66", "94.0399, -180.166, -18.4745, 0.66", "94.4674, -181.188, -18.3266, 0.15", "94.8984, -182.188, -18.1723, 0.15", "95.2764, -183.131, -18.0405, 0.15", "95.3118, -183.223, -18.0293, 0.15", "95.4458, -183.615, -17.9948, 1.11", "95.6988, -184.515, -17.9452, 1.4", "95.7217, -184.612, -17.9431, 1.4", "95.8974, -185.6, -17.9047, 0.81", "95.9955, -186.232, -17.8723, 0.22", "96.1449, -187.16, -17.8256, 0.22", "96.3841, -188.826, -17.6454, 0.22", "96.3982, -188.938, -17.6274, 0.22", "96.4958, -189.747, -17.4686, 0.22", "96.5046, -189.819, -17.4518, 0.22", "96.7505, -191.72, -16.9256, 0.22", "96.9678, -193.227, -16.4456, 0.22", "97.0244, -193.601, -16.3143, 0.88", "97.038, -193.681, -16.2859, 0.88", "97.1351, -194.206, -16.095, 0.88", "97.2901, -195.16, -15.7714, 0.44", "97.3023, -195.255, -15.7439, 0.44", "97.4715, -196.471, -15.5253, 0.22", "97.5319, -196.916, -15.4594, 1.33", "97.5386, -197.003, -15.4508, 1.33", "97.6018, -198.086, -15.3657, 1.47", "97.6407, -199.206, -15.3191, 0.22", "97.6616, -199.866, -15.3011, 0.22", "97.6626, -199.94, -15.3012, 0.22", "97.6437, -202.479, -15.3002, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-0.114726, -54.6721, -10.1106, 0.29", "-0.49356, -55.9837, -10.3354, 0.29", "-0.906053, -57.5194, -10.6301, 0.29", "-1.24834, -58.7043, -10.864, 0.29", "-1.26718, -58.7684, -10.876, 0.29", "-1.53945, -59.671, -11.0359, 0.29", "-1.92644, -60.926, -11.2738, 0.29", "-2.20258, -61.7455, -11.4016, 1.18", "-2.60005, -62.7522, -11.5956, 1.55", "-3.03681, -63.7666, -11.8035, 0.81", "-3.34356, -64.4156, -11.9419, 0.59", "-3.58731, -64.8976, -12.0473, 0.44", "-3.79792, -65.2921, -12.1303, 0.29", "-4.67302, -66.8466, -12.4164, 0.29", "-4.89089, -67.2256, -12.4887, 0.29", "-5.02407, -67.4418, -12.5313, 0.66", "-5.30262, -67.8985, -12.6092, 0.66", "-5.90813, -68.9521, -12.7222, 0.22" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-0.114726, -54.6721, -10.1106, 1.47", "0.266825, -55.0644, -10.5344, 1.47", "0.845858, -55.6702, -11.2228, 1.77", "1.61303, -56.4565, -12.2838, 1.77", "2.73108, -57.6264, -13.8248, 0.37", "2.76899, -57.6665, -13.8748, 0.37", "3.71768, -58.7066, -15.0594, 0.66", "4.07724, -59.1238, -15.5024, 0.96", "5.48446, -60.8512, -17.122, 0.44", "6.0072, -61.5138, -17.6337, 1.33", "6.39281, -62.0386, -17.9296, 1.92", "6.88367, -62.791, -18.2787, 2.21", "7.47327, -63.8465, -18.6315, 1.47", "7.97601, -64.8793, -18.9103, 0.52", "8.15375, -65.3217, -18.9825, 0.52", "8.5902, -66.4962, -19.186, 0.52", "8.88769, -67.3266, -19.3248, 0.52", "9.17836, -68.121, -19.4384, 0.44", "9.5413, -69.0217, -19.5274, 0.88", "9.89598, -69.7731, -19.5808, 1.4", "10.3143, -70.5446, -19.6122, 1.4", "10.9505, -71.5798, -19.6101, 0.88", "11.5407, -72.4584, -19.6056, 0.59", "12.2642, -73.4969, -19.5961, 0.59", "12.9418, -74.4944, -19.5942, 0.59", "13.2824, -75.0417, -19.5951, 0.74", "13.6376, -75.733, -19.6371, 0.74", "13.8768, -76.3678, -19.7146, 0.52", "13.8948, -76.4391, -19.7257, 0.52", "14.0322, -77.3562, -19.8709, 0.52", "14.124, -78.5732, -20.0352, 0.52", "14.1762, -79.9579, -20.2456, 0.52", "14.1975, -81.0473, -20.4227, 1.33", "14.21, -81.7997, -20.5423, 1.84", "14.2319, -82.9082, -20.7015, 2.43", "14.2679, -84.4209, -20.9137, 1.92", "14.287, -85.7218, -21.0703, 1.18", "14.2861, -85.795, -21.0784, 1.18", "14.2442, -86.8835, -21.2255, 0.66", "14.1529, -88.2628, -21.4578, 0.52", "14.0744, -89.0497, -21.615, 0.52", "13.9221, -90.3329, -21.8946, 0.52", "13.7621, -91.6373, -22.2175, 0.52", "13.7511, -91.7231, -22.2419, 0.52", "13.6069, -92.8746, -22.6115, 0.52", "13.5004, -93.8161, -22.9188, 1.11", "13.4928, -93.9147, -22.9535, 1.11", "13.4447, -95.4317, -23.5015, 1.84", "13.4438, -95.5123, -23.5282, 1.84", "13.4354, -96.422, -23.8175, 2.28", "13.4528, -97.4539, -24.1135, 2.28", "13.5362, -99.4902, -24.7395, 0.44", "13.5471, -100.327, -24.9925, 0.44", "13.5285, -101.142, -25.2632, 0.44", "13.5251, -101.248, -25.3029, 0.44", "13.4718, -102.456, -25.8078, 0.44", "13.4252, -103.765, -26.3641, 0.44", "13.3656, -105.175, -26.9348, 0.44", "13.2675, -106.384, -27.433, 0.44", "13.2381, -106.639, -27.5358, 0.29", "13.2103, -106.797, -27.5919, 0.29", "12.8892, -108.007, -27.9314, 0.29", "12.8656, -108.087, -27.9438, 0.29", "12.5546, -109.146, -28.0801, 0.29", "12.4235, -109.565, -28.114, 1.03", "12.1297, -110.44, -28.1988, 1.4", "11.9129, -111.104, -28.3012, 1.4", "11.8905, -111.184, -28.3162, 1.4", "11.6492, -112.309, -28.5361, 0.44", "11.5069, -113.29, -28.7517, 0.44", "11.4967, -113.372, -28.7698, 0.44", "11.3626, -114.614, -29.0294, 0.44", "11.1941, -116.134, -29.3316, 0.44", "11.185, -116.207, -29.3427, 0.44", "11.0465, -117.22, -29.447, 1.62", "10.8973, -118.397, -29.5124, 2.14", "10.7794, -119.537, -29.5105, 2.14", "10.7721, -119.621, -29.5078, 2.14", "10.7053, -120.654, -29.4797, 1.4", "10.7004, -120.814, -29.4755, 0.22", "10.7095, -122.351, -29.3594, 0.22", "10.7615, -123.919, -29.1667, 0.22", "10.7988, -124.716, -29.0433, 0.96", "10.8362, -125.624, -28.9215, 1.4", "10.8632, -126.281, -28.8446, 1.4", "10.9053, -127.486, -28.6968, 0.74", "10.9196, -128.384, -28.5746, 0.29", "10.9416, -129.868, -28.3583, 0.29", "10.9867, -131.459, -28.1275, 0.29", "10.9893, -131.533, -28.1231, 0.29", "11.0175, -132.263, -28.1468, 1.33", "11.0211, -132.337, -28.157, 1.33", "11.0707, -133.217, -28.3193, 1.92", "11.1186, -134.146, -28.5415, 1.92", "11.1469, -135.269, -28.8108, 1.62", "11.1464, -135.341, -28.8311, 1.62", "11.1197, -136.148, -29.0805, 0.29", "11.0686, -137.2, -29.4153, 0.29", "10.9716, -138.257, -29.7489, 1.47", "10.8108, -139.494, -30.1559, 1.47", "10.6495, -140.492, -30.4566, 0.66", "10.5434, -141.074, -30.6238, 0.37", "10.5303, -141.134, -30.6394, 0.37", "10.2247, -142.339, -30.8937, 0.29", "9.78629, -143.922, -31.1309, 0.22", "9.46146, -145.043, -31.269, 0.22", "9.10198, -146.215, -31.3692, 0.22", "8.62655, -147.752, -31.4781, 0.22", "8.45246, -148.305, -31.5058, 0.88", "8.25713, -148.99, -31.5053, 1.25", "8.23894, -149.062, -31.5006, 1.25", "8.12101, -149.634, -31.4626, 0.29", "8.08841, -149.857, -31.4486, 0.29", "8.06302, -150.194, -31.4246, 0.22", "8.15573, -152.586, -31.2383, 0.22", "8.19682, -152.915, -31.2071, 0.59", "8.38038, -153.665, -31.1235, 0.88", "8.62452, -154.349, -31.0368, 0.88", "8.78533, -154.741, -30.9832, 0.22", "9.49092, -156.078, -30.7736, 0.22", "9.53694, -156.136, -30.7617, 0.22", "10.5936, -157.297, -30.5107, 0.22", "10.6755, -157.371, -30.4939, 0.96" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-22.4638, 80.991, -24.8057, 0.22", "-25.1087, 80.4248, -21.9507, 0.22", "-25.3209, 80.4025, -21.7529, 0.22", "-25.4112, 80.4452, -21.7185, 0.22", "-25.7769, 80.7487, -21.6905, 0.37", "-26.4288, 81.4523, -21.7252, 0.37", "-26.5084, 81.5561, -21.7325, 0.37", "-26.9626, 82.3668, -21.8663, 0.37", "-27.7554, 84.1001, -22.1224, 0.29", "-27.7893, 84.1845, -22.1344, 0.29", "-28.0311, 85.0405, -22.3247, 0.74", "-28.1464, 85.8397, -22.615, 0.74", "-28.1997, 86.5917, -22.9501, 0.37", "-28.235, 87.6748, -23.4874, 0.22", "-28.2531, 88.7374, -24.0825, 0.22", "-28.3411, 90.7822, -25.2671, 0.22", "-28.4777, 92.5751, -26.3697, 0.96", "-28.5763, 93.435, -26.9208, 1.62", "-28.7379, 94.519, -27.6152, 1.62", "-28.9989, 95.7617, -28.3584, 0.66", "-29.1794, 96.4809, -28.7251, 0.52", "-29.4055, 97.1376, -28.9437, 0.52", "-29.4973, 97.4023, -29.0128, 0.52", "-29.6236, 97.9645, -29.2141, 0.52", "-29.6323, 98.0492, -29.2505, 0.52", "-29.7099, 99.6046, -29.9816, 0.52", "-29.7551, 100.556, -30.4402, 0.74", "-29.8185, 101.784, -30.9895, 0.74", "-29.8418, 103.597, -31.8889, 0.37", "-29.8421, 103.666, -31.9266, 0.37", "-29.9098, 104.713, -32.5518, 0.37", "-30.0193, 105.549, -33.108, 0.66", "-30.2243, 106.488, -33.7697, 0.66", "-30.7937, 108.122, -34.8297, 0.29", "-30.9215, 108.394, -34.997, 0.29", "-31.5492, 109.692, -35.8589, 0.29", "-31.6294, 109.855, -35.9776, 0.29", "-32.2169, 110.966, -36.8185, 0.59", "-32.7281, 111.796, -37.435, 0.81", "-33.2632, 112.605, -37.9156, 0.81", "-33.586, 113.267, -38.2884, 0.22", "-33.6143, 113.348, -38.324, 0.22", "-33.8314, 114.11, -38.6313, 0.22", "-33.8561, 114.205, -38.6694, 0.22", "-34.1499, 115.369, -39.1497, 0.22", "-34.676, 117.4, -40.0233, 0.22", "-35.4777, 120.161, -41.228, 0.22", "-35.9997, 121.868, -41.988, 0.88", "-36.4453, 123.227, -42.6008, 1.69", "-36.8342, 124.297, -43.0832, 2.14", "-37.2252, 125.251, -43.514, 0.29", "-37.8283, 126.386, -44.0093, 0.29", "-37.8736, 126.458, -44.0446, 0.29", "-38.4633, 127.283, -44.4187, 0.29", "-38.9204, 127.912, -44.6812, 0.29", "-38.9981, 128.019, -44.7246, 0.29", "-39.8026, 129.185, -45.2319, 0.29", "-40.425, 130.157, -45.6874, 0.29", "-40.8946, 130.938, -46.0695, 0.74", "-41.2352, 131.554, -46.3779, 1.03", "-41.6994, 132.467, -46.8311, 1.03", "-42.1856, 133.447, -47.3081, 1.03", "-42.3487, 133.799, -47.4849, 0.22", "-42.3823, 133.862, -47.518, 0.22", "-42.6423, 134.316, -47.7547, 0.22", "-42.7646, 134.531, -47.8608, 0.22", "-43.3443, 135.529, -48.3253, 0.22", "-44.0618, 136.726, -48.8229, 0.81", "-44.5544, 137.569, -49.1677, 0.81", "-45.0642, 138.504, -49.5015, 0.81", "-45.4169, 139.198, -49.7129, 0.22", "-45.4549, 139.279, -49.7337, 0.22", "-45.7547, 139.964, -49.872, 0.22", "-45.8638, 140.216, -49.9106, 0.22", "-46.527, 141.767, -50.139, 0.22", "-47.0548, 142.841, -50.3275, 0.22", "-47.3385, 143.354, -50.4263, 0.88", "-47.7039, 143.939, -50.5628, 0.88", "-47.7452, 144.001, -50.5865, 0.88", "-48.0823, 144.465, -50.8279, 0.52", "-48.667, 145.193, -51.3223, 0.52", "-49.1039, 145.7, -51.7122, 0.88", "-49.6234, 146.286, -52.1805, 1.18", "-50.7337, 147.576, -53.1561, 0.29", "-51.1494, 148.084, -53.5011, 0.29", "-51.23, 148.192, -53.5649, 0.29", "-51.7845, 149.013, -53.9651, 0.29", "-51.8997, 149.192, -54.0341, 0.29", "-52.6635, 150.517, -54.4618, 0.29", "-53.0934, 151.297, -54.6668, 0.52", "-53.3974, 151.893, -54.8182, 0.52", "-53.7727, 152.675, -55.0026, 0.22", "-54.3917, 154.047, -55.3061, 0.22", "-54.952, 155.395, -55.646, 1.62", "-55.4287, 156.646, -55.9921, 1.92", "-56.0748, 158.442, -56.521, 0.22", "-56.5924, 159.921, -56.9817, 0.22", "-56.651, 160.09, -57.0308, 0.22", "-57.1464, 161.405, -57.3781, 0.59", "-57.2201, 161.573, -57.4084, 0.59", "-57.4024, 161.963, -57.4715, 0.59", "-57.5914, 162.313, -57.5207, 0.59", "-58.2674, 163.341, -57.6621, 0.37", "-58.6903, 164.038, -57.7832, 0.22", "-59.4058, 165.251, -57.9939, 0.22", "-59.6852, 166.001, -58.2281, 0.22", "-59.7593, 166.323, -58.3521, 0.22", "-59.8119, 167.263, -58.8177, 0.22", "-59.6649, 168.686, -59.7281, 0.22", "-59.6512, 168.761, -59.7815, 0.22", "-59.0841, 171.089, -61.5788, 1.03", "-58.8523, 172.044, -62.3351, 1.33", "-58.4572, 173.792, -63.7718, 0.37", "-58.1277, 175.313, -65.0844, 0.15", "-58.0541, 175.843, -65.5976, 0.15", "-58.0537, 175.907, -65.6646, 0.15", "-58.2801, 176.664, -66.5274, 0.15", "-58.5076, 177.146, -67.0947, 0.15", "-58.5823, 177.251, -67.2057, 0.15", "-59.1504, 178.014, -67.9259, 0.15", "-59.7147, 178.891, -68.698, 0.44", "-60.0953, 179.561, -69.2444, 0.66", "-60.44, 180.632, -70.0561, 0.44", "-60.5077, 180.918, -70.2488, 0.15", "-60.5453, 181.198, -70.4489, 0.15", "-60.5944, 181.891, -70.9525, 0.15", "-60.5964, 181.963, -71.0101, 0.15", "-60.7162, 184.16, -72.8901, 1.11", "-60.8492, 185.121, -73.7522, 1.11", "-61.1893, 186.721, -75.218, 0.29", "-61.2933, 187.075, -75.5284, 0.29", "-61.3775, 187.298, -75.7094, 0.29", "-61.7008, 188.0, -76.1768, 0.29", "-62.3254, 189.086, -76.6965, 0.29", "-62.896, 190.069, -77.039, 0.96", "-63.551, 191.189, -77.3657, 0.96", "-63.9325, 191.866, -77.5788, 0.59", "-64.4086, 192.825, -77.9739, 0.59", "-64.5986, 193.255, -78.1833, 0.22", "-65.0689, 194.3, -78.7924, 0.22", "-65.5705, 195.346, -79.5406, 0.88", "-66.0234, 196.189, -80.2705, 0.88", "-66.8684, 197.632, -81.6888, 1.18", "-67.1939, 198.154, -82.2424, 0.22", "-67.7455, 199.021, -83.1572, 0.22", "-67.7753, 199.072, -83.209, 0.22", "-68.1735, 199.793, -83.8429, 0.22", "-68.2222, 199.891, -83.9163, 0.22", "-68.4641, 200.364, -84.1982, 0.59", "-68.6439, 200.847, -84.5389, 0.59", "-68.9664, 202.082, -85.4736, 0.81", "-69.0132, 202.236, -85.5896, 0.81", "-69.3257, 203.12, -86.2738, 0.81", "-69.3558, 203.189, -86.3284, 0.81", "-70.1151, 204.682, -87.5318, 0.81", "-70.1538, 204.75, -87.5821, 0.81", "-71.1387, 206.289, -88.6413, 1.11", "-72.025, 207.611, -89.4904, 1.11", "-72.5864, 208.406, -89.9676, 0.74", "-72.8878, 208.815, -90.1794, 0.22", "-73.8223, 210.081, -90.7605, 0.22", "-73.9623, 210.299, -90.867, 0.22", "-74.443, 211.182, -91.3013, 0.22", "-74.5646, 211.435, -91.4193, 0.59", "-74.9727, 212.383, -91.8532, 0.59", "-75.6861, 214.257, -92.7288, 0.44", "-76.191, 215.709, -93.419, 0.74", "-76.5188, 216.712, -93.8864, 1.47", "-76.8317, 217.704, -94.3316, 1.77", "-77.0928, 218.541, -94.683, 1.77", "-77.5581, 220.064, -95.2217, 0.37", "-77.6944, 220.528, -95.3425, 0.22", "-77.7429, 220.701, -95.3807, 0.22", "-77.9874, 221.733, -95.5931, 0.22", "-78.0499, 222.012, -95.6453, 0.22", "-78.3461, 223.41, -95.8449, 0.22", "-78.5608, 224.391, -95.9278, 0.59", "-78.5807, 224.481, -95.9348, 0.59", "-78.8176, 225.484, -96.0084, 0.59", "-79.0097, 226.234, -96.0621, 0.44", "-79.2247, 226.872, -96.0793, 0.74", "-79.5494, 227.614, -96.0623, 1.11", "-79.8481, 228.181, -96.0181, 0.44", "-80.2102, 228.821, -95.9545, 0.44", "-80.3744, 229.121, -95.9163, 0.44", "-80.998, 230.217, -95.738, 0.37", "-81.1649, 230.502, -95.6861, 0.37", "-81.5569, 231.21, -95.5497, 0.37", "-81.6967, 231.48, -95.4973, 0.37", "-82.5546, 233.185, -95.2362, 0.37", "-82.9352, 233.987, -95.1441, 0.66", "-82.9725, 234.071, -95.1393, 0.66", "-83.4457, 235.137, -95.0877, 1.33", "-83.4849, 235.221, -95.0859, 1.33", "-84.1314, 236.495, -95.1155, 1.33", "-84.1982, 236.617, -95.1264, 1.33", "-84.6623, 237.495, -95.2088, 0.29", "-84.7616, 237.681, -95.2234, 0.29", "-85.2431, 238.588, -95.278, 0.29", "-85.3642, 238.83, -95.286, 0.29", "-86.005, 240.235, -95.2818, 0.29", "-86.278, 240.864, -95.2706, 0.66", "-86.3874, 241.134, -95.2604, 0.66", "-86.6554, 241.865, -95.2225, 0.81", "-86.718, 242.053, -95.2106, 0.81", "-86.908, 242.598, -95.1918, 0.81", "-87.0742, 243.054, -95.1914, 0.15", "-87.1251, 243.183, -95.1969, 0.15", "-87.6461, 244.424, -95.2694, 0.15", "-87.6924, 244.519, -95.2709, 0.15", "-88.3015, 245.683, -95.2383, 0.52", "-88.3959, 245.857, -95.2265, 0.52", "-88.667, 246.354, -95.1797, 0.81", "-88.707, 246.438, -95.1711, 0.81", "-89.1964, 247.572, -95.0061, 0.66", "-89.4331, 248.188, -94.9043, 0.66", "-89.6121, 248.742, -94.8008, 0.22", "-89.654, 248.904, -94.7717, 0.22", "-89.9367, 250.331, -94.5253, 0.22", "-90.0287, 250.884, -94.4481, 0.44", "-90.0448, 250.988, -94.4338, 0.44", "-90.1671, 251.549, -94.35, 0.44", "-90.4758, 252.738, -94.1578, 0.22", "-90.5271, 252.913, -94.1269, 0.22", "-90.9073, 254.055, -93.938, 0.22", "-91.2788, 255.081, -93.8113, 0.44", "-91.6203, 255.973, -93.7239, 0.44", "-91.6547, 256.058, -93.7175, 0.44", "-91.705, 256.191, -93.7156, 0.22", "-92.2652, 257.89, -93.7653, 0.22", "-92.4379, 258.617, -93.8139, 0.22", "-92.6032, 259.675, -93.9194, 0.22", "-92.6086, 259.755, -93.9245, 0.22", "-92.6545, 260.898, -93.9776, 0.22", "-92.6564, 260.991, -93.9781, 0.22", "-92.6042, 262.426, -93.9109, 0.81", "-92.605, 262.531, -93.9021, 0.81", "-92.6841, 263.674, -93.7747, 0.81", "-92.7845, 264.429, -93.6717, 0.81", "-92.922, 265.119, -93.5577, 0.29", "-92.9411, 265.209, -93.5451, 0.29", "-93.2534, 266.728, -93.3546, 0.29", "-93.2894, 266.907, -93.3355, 0.29", "-93.4836, 268.24, -93.2987, 0.29", "-93.4956, 268.37, -93.3008, 0.29", "-93.5705, 269.61, -93.3651, 1.4", "-93.6421, 271.334, -93.4827, 1.4", "-93.6638, 272.633, -93.59, 0.81", "-93.7014, 274.342, -93.7656, 0.44", "-93.7404, 275.23, -93.8754, 0.66", "-93.7486, 275.434, -93.9109, 0.29", "-93.771, 275.906, -94.0249, 0.29", "-93.8236, 276.578, -94.2212, 0.29", "-93.836, 276.703, -94.2566, 0.29", "-94.0737, 278.133, -94.6202, 0.29", "-94.3718, 279.511, -94.8991, 0.59", "-94.399, 279.612, -94.9146, 0.59", "-94.8014, 280.752, -95.0359, 0.59", "-94.8358, 280.838, -95.0424, 0.59", "-95.7268, 282.783, -95.1456, 0.37", "-96.4847, 284.123, -95.0931, 0.22", "-97.0042, 284.959, -95.004, 0.22", "-98.418, 287.151, -94.724, 0.22", "-98.47, 287.227, -94.7139, 0.22", "-99.6753, 288.903, -94.5063, 0.22", "-100.992, 290.611, -94.3149, 0.96", "-102.333, 292.238, -94.1833, 1.25", "-102.405, 292.315, -94.1769, 1.25", "-103.338, 293.219, -94.1161, 1.25", "-103.992, 293.822, -94.1143, 0.37", "-104.622, 294.368, -94.162, 0.37", "-105.821, 295.398, -94.3792, 0.29", "-106.726, 296.12, -94.5469, 0.29", "-107.052, 296.386, -94.6084, 0.88", "-108.354, 297.461, -94.8736, 0.96", "-108.872, 297.879, -95.0082, 0.96", "-109.406, 298.286, -95.1481, 0.15", "-109.477, 298.342, -95.1676, 0.15", "-110.062, 298.793, -95.3037, 0.15", "-110.845, 299.386, -95.4693, 0.15", "-112.201, 300.402, -95.7286, 0.15", "-113.306, 301.28, -95.9386, 0.15", "-114.065, 301.865, -96.0389, 0.15", "-114.394, 302.111, -96.0728, 0.15", "-115.395, 302.852, -96.1487, 0.15", "-115.925, 303.236, -96.1869, 1.47", "-117.02, 304.03, -96.2752, 1.47", "-118.46, 305.062, -96.4791, 0.29", "-119.139, 305.52, -96.5902, 0.29", "-119.42, 305.713, -96.6372, 0.29", "-120.333, 306.359, -96.7997, 0.29", "-120.577, 306.541, -96.8508, 0.29", "-121.603, 307.388, -97.1105, 0.29", "-122.08, 307.872, -97.2644, 1.03", "-122.649, 308.484, -97.4436, 1.4", "-123.2, 309.065, -97.6243, 1.4", "-123.664, 309.544, -97.782, 0.29", "-123.728, 309.607, -97.8046, 0.29", "-124.935, 310.853, -98.2448, 0.29", "-126.12, 312.131, -98.6873, 0.29", "-126.897, 313.015, -98.9839, 0.29", "-127.337, 313.529, -99.1511, 0.29", "-127.396, 313.597, -99.1719, 0.29", "-128.726, 315.158, -99.6177, 0.29", "-128.864, 315.323, -99.6595, 0.29", "-129.672, 316.362, -99.8645, 0.29", "-129.856, 316.601, -99.907, 0.29", "-130.17, 316.993, -99.9793, 0.29", "-130.307, 317.16, -100.01, 0.29", "-130.91, 317.801, -100.057, 0.29", "-131.008, 317.913, -100.062, 0.29", "-132.099, 319.203, -100.133, 0.74", "-132.161, 319.271, -100.144, 0.74", "-132.626, 319.779, -100.262, 1.18", "-133.762, 321.097, -100.61, 0.29", "-134.471, 321.963, -100.862, 0.29", "-134.972, 322.601, -101.016, 0.29", "-136.116, 324.135, -101.315, 0.29", "-136.201, 324.267, -101.327, 0.29", "-136.659, 325.189, -101.282, 0.29", "-136.707, 325.309, -101.231, 0.29", "-137.35, 326.774, -100.195, 0.29", "-137.571, 327.237, -99.8711, 0.29", "-138.032, 328.084, -99.2828, 0.29", "-138.37, 328.605, -98.9515, 0.52", "-139.555, 330.134, -98.2094, 0.29", "-139.69, 330.298, -98.1539, 0.29", "-140.907, 331.785, -97.8902, 0.29", "-141.211, 332.173, -97.8421, 0.15", "-141.337, 332.338, -97.8338, 0.15", "-142.256, 333.69, -97.8038, 0.15", "-142.295, 333.774, -97.8024, 0.15", "-142.658, 334.664, -97.7373, 0.96", "-142.915, 335.308, -97.6252, 0.96", "-142.966, 335.426, -97.5995, 0.96", "-143.339, 336.239, -97.3951, 0.22", "-144.895, 338.856, -96.413, 0.22", "-144.947, 338.926, -96.3811, 0.22", "-145.735, 339.815, -95.9355, 0.44", "-146.229, 340.315, -95.672, 0.66", "-146.292, 340.378, -95.6463, 0.66", "-147.85, 341.908, -95.1303, 0.15", "-147.983, 342.028, -95.0822, 0.15", "-149.156, 343.249, -94.659, 0.15", "-149.242, 343.354, -94.6283, 0.15", "-150.818, 345.302, -93.844, 0.15", "-151.029, 345.568, -93.7273, 0.74", "-152.604, 347.581, -92.8713, 0.15", "-153.068, 348.13, -92.6134, 0.52", "-153.369, 348.447, -92.4278, 0.52", "-155.444, 350.557, -91.0689, 0.15", "-155.808, 350.905, -90.8228, 0.37", "-156.695, 351.78, -90.3121, 0.15", "-156.756, 351.843, -90.2827, 0.15", "-158.115, 353.331, -89.7423, 0.37", "-158.546, 353.864, -89.6282, 0.66", "-158.935, 354.495, -89.6246, 0.15", "-159.684, 355.943, -89.647, 0.15", "-159.756, 356.113, -89.6362, 0.15", "-160.222, 357.376, -89.5227, 0.88", "-160.242, 357.453, -89.5135, 0.88", "-160.452, 358.392, -89.3021, 0.88", "-160.469, 358.479, -89.2753, 0.88", "-160.826, 360.492, -88.4271, 0.22", "-160.861, 360.667, -88.341, 0.22", "-161.322, 362.681, -87.1242, 0.22", "-161.397, 363.014, -86.9224, 0.59" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-22.4638, 80.991, -24.8057, 1.92", "-22.2367, 81.9091, -24.9268, 1.92", "-21.8578, 83.4406, -25.1287, 1.77", "-21.8361, 83.5285, -25.1403, 1.77" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-31.8945, 52.7377, -20.6298, 0.74", "-32.171, 52.687, -21.1306, 0.74", "-32.2029, 52.6843, -21.1835, 0.66", "-33.1808, 52.7454, -22.6202, 0.66", "-34.7206, 53.0305, -25.0168, 0.66", "-34.9424, 53.0896, -25.3509, 0.66", "-35.5224, 53.2701, -26.2045, 0.66", "-35.6515, 53.3257, -26.3854, 1.03", "-36.2359, 53.6334, -27.153, 1.03", "-37.1247, 54.1842, -28.1572, 0.74", "-37.6124, 54.4146, -28.4645, 0.44", "-37.6658, 54.4285, -28.4938, 0.44", "-38.4976, 54.4366, -28.9283, 0.44", "-38.5613, 54.4277, -28.9589, 0.44", "-39.4293, 54.2183, -29.3259, 0.44", "-40.0281, 54.0617, -29.5941, 1.4", "-40.7426, 53.8664, -29.9948, 1.4", "-41.5991, 53.7144, -30.5192, 0.52", "-41.7602, 53.6968, -30.6279, 0.52", "-42.4381, 53.7071, -31.1483, 0.52", "-43.2995, 53.8369, -31.8672, 0.52", "-43.4346, 53.8685, -31.9853, 0.52", "-44.5825, 54.229, -33.1623, 0.52", "-44.6173, 54.2414, -33.2003, 0.52", "-45.351, 54.5202, -34.0366, 0.88", "-45.8001, 54.7034, -34.5581, 0.88", "-45.8471, 54.7237, -34.6076, 0.88", "-46.9892, 55.2697, -35.8391, 0.52", "-47.0753, 55.319, -35.9286, 0.52", "-47.7026, 55.6591, -36.4218, 0.52", "-47.9543, 55.7898, -36.567, 0.52", "-48.6144, 56.1026, -36.9628, 0.52", "-48.8543, 56.2026, -37.1002, 0.52", "-49.833, 56.4984, -37.5878, 0.52", "-50.6819, 56.6549, -38.1105, 2.06", "-50.8494, 56.6674, -38.2302, 2.06", "-52.3002, 56.6262, -39.3441, 0.96", "-52.4113, 56.6112, -39.4452, 0.96", "-53.1607, 56.4525, -40.1882, 0.96", "-53.9994, 56.2169, -41.0875, 0.96", "-54.0874, 56.1945, -41.1857, 0.96", "-54.5802, 56.0844, -41.7042, 0.96", "-55.4501, 55.9559, -42.4855, 0.44", "-56.0681, 55.9333, -43.0338, 0.44", "-56.269, 55.9676, -43.1995, 0.44", "-56.6473, 56.095, -43.4274, 0.44", "-56.7941, 56.1572, -43.5036, 0.44", "-57.4209, 56.4669, -43.7561, 0.44", "-57.5477, 56.5306, -43.7944, 0.44", "-58.2218, 56.8864, -44.1132, 1.25", "-58.9951, 57.2783, -44.5686, 1.62", "-59.0428, 57.3025, -44.6009, 1.62", "-59.8872, 57.7459, -45.2411, 1.62", "-59.9321, 57.7687, -45.2781, 1.62", "-61.2035, 58.4181, -46.383, 0.37", "-61.2452, 58.4366, -46.4258, 0.37", "-61.664, 58.5917, -46.9023, 0.37", "-61.7058, 58.5994, -46.948, 0.37", "-62.2817, 58.5261, -47.652, 0.37", "-62.3658, 58.5012, -47.753, 0.37", "-63.2781, 58.1525, -48.7426, 0.37", "-63.3689, 58.116, -48.8423, 0.37", "-63.9597, 57.8915, -49.5018, 0.37", "-65.2528, 57.548, -51.0364, 0.37", "-65.2924, 57.5436, -51.0835, 0.37", "-65.8648, 57.588, -51.6829, 0.37", "-65.9571, 57.6127, -51.7847, 0.37", "-66.4807, 57.8232, -52.3813, 0.37", "-67.1681, 58.191, -53.1411, 0.66", "-67.8314, 58.5471, -53.7661, 1.25", "-68.4729, 58.8622, -54.3546, 1.25", "-69.802, 59.4282, -55.5779, 0.29", "-70.3617, 59.6206, -56.0573, 0.29", "-70.9285, 59.7696, -56.5388, 0.29", "-71.9191, 59.9945, -57.3493, 0.29", "-71.9736, 60.0061, -57.3937, 0.29", "-72.6538, 60.1306, -57.98, 0.52", "-73.4053, 60.2481, -58.6095, 0.81", "-74.3579, 60.3893, -59.4944, 0.81", "-74.4015, 60.3975, -59.5383, 0.81", "-74.9452, 60.5544, -60.171, 0.81", "-75.9996, 60.9731, -61.4312, 0.52", "-76.0422, 60.9955, -61.4837, 0.52", "-76.526, 61.2983, -62.1432, 1.18", "-76.7956, 61.4809, -62.5083, 1.18", "-77.4933, 61.8935, -63.4368, 0.74", "-77.9164, 62.1013, -63.9463, 0.59", "-77.9658, 62.1187, -63.9946, 0.59", "-78.9081, 62.3443, -64.8307, 0.59", "-78.9942, 62.3579, -64.9189, 0.59", "-79.715, 62.4257, -65.6843, 0.59", "-80.318, 62.4964, -66.3036, 0.59", "-80.3756, 62.5126, -66.3686, 0.59", "-80.677, 62.6736, -66.7316, 0.59", "-81.5451, 63.5527, -67.8761, 0.59", "-81.5859, 63.6057, -67.9338, 0.59", "-81.849, 64.058, -68.3561, 0.59", "-82.1649, 64.5481, -68.8131, 0.37", "-82.1997, 64.5865, -68.848, 0.37", "-82.5009, 64.817, -69.0397, 0.29", "-83.072, 65.0668, -69.2307, 0.29", "-83.1532, 65.0894, -69.2572, 0.29", "-83.8675, 65.1879, -69.5933, 0.52", "-84.2057, 65.2117, -69.7883, 0.52", "-84.253, 65.2177, -69.8287, 0.52", "-84.7986, 65.319, -70.3817, 0.52", "-84.8959, 65.345, -70.4828, 0.52", "-85.8703, 65.6532, -71.4386, 0.52", "-85.9105, 65.6687, -71.4829, 0.52", "-86.893, 66.0618, -72.6, 0.52", "-87.615, 66.356, -73.4243, 0.81", "-88.3445, 66.6543, -74.2328, 1.4", "-88.9343, 66.8857, -74.836, 1.4", "-90.2875, 67.3573, -76.0098, 1.18", "-90.5505, 67.4388, -76.2177, 0.37", "-90.6525, 67.4691, -76.2986, 0.37", "-91.1612, 67.6398, -76.7823, 0.37", "-91.3306, 67.7126, -76.9622, 0.37", "-91.9622, 68.0788, -77.6152, 0.37", "-92.0163, 68.1171, -77.6626, 0.37", "-92.9707, 68.8855, -78.5239, 0.37", "-93.0828, 68.9832, -78.6278, 0.37", "-93.5394, 69.3808, -79.0545, 0.44", "-93.9588, 69.702, -79.5036, 0.44", "-94.0014, 69.7303, -79.5532, 0.44", "-94.3421, 69.9039, -79.9075, 0.37", "-94.444, 69.9489, -79.9918, 0.37", "-94.9586, 70.1626, -80.4044, 0.37", "-96.0775, 70.5332, -81.3906, 0.37", "-96.1427, 70.5497, -81.448, 0.37", "-96.6391, 70.6438, -81.8521, 0.74", "-97.4794, 70.7827, -82.5413, 0.96", "-98.0431, 70.8671, -82.9885, 0.37", "-98.9867, 71.0121, -83.6853, 0.37", "-99.6149, 71.0927, -84.0901, 0.29", "-100.392, 71.1853, -84.6261, 0.29", "-101.113, 71.2623, -85.1498, 0.29", "-101.337, 71.2925, -85.3108, 0.88", "-101.83, 71.4158, -85.6474, 1.18", "-102.268, 71.5732, -85.886, 1.18", "-102.979, 71.8824, -86.2403, 0.37", "-103.378, 72.0515, -86.4867, 0.15", "-103.834, 72.1926, -86.7916, 0.15", "-103.88, 72.201, -86.8336, 0.15", "-104.722, 72.2701, -87.7388, 0.15", "-104.768, 72.2708, -87.793, 0.15", "-106.006, 72.2939, -89.2348, 1.03", "-106.337, 72.304, -89.6096, 1.03", "-107.308, 72.3985, -90.6215, 0.37", "-107.785, 72.4776, -91.0716, 0.37", "-107.83, 72.4895, -91.1134, 0.37", "-108.633, 72.7639, -91.7787, 0.37", "-109.171, 72.9944, -92.1291, 1.11", "-110.018, 73.4046, -92.6587, 1.11", "-110.075, 73.4333, -92.6901, 1.11", "-111.241, 74.0479, -93.4274, 0.29", "-111.343, 74.1003, -93.4969, 0.29", "-111.92, 74.3658, -93.9187, 0.29", "-111.982, 74.3918, -93.9652, 0.52", "-112.522, 74.5961, -94.3331, 0.81", "-113.188, 74.8412, -94.7346, 0.81", "-113.521, 74.9417, -94.9158, 0.96", "-114.292, 75.1425, -95.3549, 0.96", "-115.073, 75.3266, -95.799, 0.29", "-115.723, 75.4886, -96.2649, 0.29", "-115.769, 75.5007, -96.3041, 0.29", "-116.681, 75.7489, -97.1555, 0.22", "-116.938, 75.8279, -97.4296, 0.22", "-117.636, 76.0587, -98.2661, 0.22", "-118.847, 76.3866, -99.6779, 0.22", "-118.96, 76.4084, -99.8193, 0.22", "-119.374, 76.4729, -100.321, 0.22", "-119.414, 76.4781, -100.369, 0.22", "-119.907, 76.5192, -100.911, 0.81", "-120.65, 76.556, -101.642, 1.11", "-122.227, 76.6918, -102.938, 0.88", "-122.631, 76.7431, -103.277, 0.44", "-122.721, 76.7634, -103.361, 0.44", "-123.044, 76.8698, -103.687, 0.44", "-123.35, 77.0031, -104.0, 0.44", "-123.829, 77.2439, -104.448, 0.74", "-123.874, 77.2702, -104.483, 0.74", "-124.795, 77.8365, -105.261, 1.4", "-124.844, 77.8647, -105.304, 1.4", "-125.616, 78.2442, -106.012, 2.28", "-126.14, 78.4171, -106.481, 2.28" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-31.8945, 52.7377, -20.6298, 1.18", "-32.7074, 52.483, -20.9188, 1.18", "-33.5508, 52.2561, -21.2284, 0.88", "-34.2003, 52.1756, -21.4649, 0.74", "-34.6069, 52.1567, -21.6114, 0.44", "-34.6492, 52.1547, -21.6266, 0.44", "-35.3368, 52.1225, -21.8744, 0.44", "-35.5988, 52.1286, -21.9689, 0.74", "-36.6876, 52.2632, -22.4079, 0.74", "-37.2491, 52.3826, -22.599, 0.74" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-141.348, -101.337, 115.251, 0.29", "-146.932, -102.696, 121.168, 0.29", "-152.39, -103.467, 127.304, 0.29", "-157.967, -103.046, 133.366, 0.29", "-164.196, -102.346, 138.728, 0.29", "-170.827, -102.067, 143.625, 0.29", "-177.883, -102.73, 147.845, 0.29", "-184.429, -103.107, 152.85, 0.29", "-191.969, -103.911, 156.096, 0.29", "-199.475, -102.699, 159.295, 0.29", "-206.713, -101.501, 163.065, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-141.348, -101.337, 115.251, 0.29", "-146.061, -102.107, 118.824, 0.29", "-150.946, -102.623, 122.208, 0.29", "-155.817, -102.831, 125.643, 0.29", "-161.079, -103.157, 128.434, 0.29", "-166.655, -102.562, 130.467, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-117.496, -159.804, 87.8243, 0.29", "-124.805, -163.441, 93.572, 0.29", "-131.172, -167.66, 99.9998, 0.29", "-138.535, -172.028, 105.136, 0.29", "-146.578, -175.103, 110.189, 0.29", "-154.518, -178.444, 115.235, 0.29", "-162.085, -182.875, 120.008, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-117.496, -159.804, 87.8243, 0.29", "-122.594, -168.886, 89.4762, 0.29", "-128.434, -177.66, 89.8013, 0.29", "-133.33, -186.991, 89.3917, 0.29", "-139.461, -195.498, 88.2768, 0.29", "-146.341, -203.479, 87.8712, 0.29", "-152.246, -212.215, 87.8192, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "184.649, -73.1485, -26.2054, 0.22", "185.055, -71.4968, -27.6269, 0.22", "185.454, -69.8755, -29.1118, 0.22", "185.859, -68.2023, -30.6392, 0.22", "186.133, -67.0297, -31.6936, 0.22", "186.383, -65.9606, -32.6549, 0.66", "186.514, -65.4018, -33.1572, 0.66", "186.999, -63.5413, -34.736, 0.15", "187.15, -62.986, -35.2293, 0.74", "187.204, -62.6889, -35.4886, 0.74" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "184.649, -73.1485, -26.2054, 0.59", "185.714, -73.5965, -26.1288, 0.59", "185.781, -73.6168, -26.1266, 0.59", "186.619, -73.8021, -26.108, 0.22", "188.27, -74.099, -26.0795, 0.22", "188.33, -74.1088, -26.0786, 0.22", "188.997, -74.178, -26.1112, 1.25", "190.096, -74.2062, -26.2452, 1.55", "190.619, -74.1934, -26.3177, 1.55", "190.861, -74.1726, -26.3557, 1.55", "191.937, -74.0403, -26.5283, 0.52", "193.573, -73.8624, -26.7551, 0.52", "193.634, -73.8565, -26.7626, 0.52", "194.666, -73.7707, -26.9253, 0.52", "194.752, -73.7671, -26.9406, 0.52", "195.85, -73.7911, -27.1381, 0.52", "196.609, -73.8532, -27.2688, 0.96", "196.678, -73.8616, -27.277, 0.96", "197.516, -73.9609, -27.3816, 0.88", "198.352, -74.0417, -27.5145, 0.22", "199.464, -74.1185, -27.7085, 0.22", "199.523, -74.1227, -27.7198, 0.22", "200.732, -74.19, -27.9381, 0.22", "200.817, -74.1939, -27.954, 0.22", "201.579, -74.2121, -28.0845, 0.22", "201.639, -74.2108, -28.0963, 0.22", "202.506, -74.2123, -28.2766, 0.22", "202.636, -74.2185, -28.3084, 0.22", "203.666, -74.3901, -28.592, 0.22", "204.033, -74.4617, -28.6816, 1.18", "204.509, -74.5646, -28.7844, 1.55", "205.556, -74.7735, -28.9897, 1.18", "206.882, -74.9952, -29.2118, 0.22", "207.956, -75.158, -29.3196, 0.22", "208.558, -75.237, -29.3296, 0.22", "208.619, -75.2439, -29.3278, 0.22", "209.226, -75.296, -29.2868, 0.74", "209.836, -75.2859, -29.2545, 0.74", "210.724, -75.2373, -29.2326, 0.37", "211.235, -75.1891, -29.2577, 0.66", "211.425, -75.18, -29.2801, 0.66", "211.961, -75.1566, -29.357, 0.96", "213.174, -75.0779, -29.6191, 0.37", "214.467, -74.9767, -29.9589, 0.37", "214.524, -74.9712, -29.9775, 0.37", "215.365, -74.8817, -30.2614, 0.37", "216.097, -74.8129, -30.4893, 0.37", "217.132, -74.7272, -30.7726, 0.81", "217.639, -74.6905, -30.8828, 0.81", "218.493, -74.6047, -31.1029, 0.44", "218.552, -74.5998, -31.1188, 0.44", "219.435, -74.5372, -31.3628, 0.44", "219.502, -74.5356, -31.3801, 0.44", "220.19, -74.5299, -31.5081, 0.44", "221.041, -74.5013, -31.6447, 0.44", "221.276, -74.484, -31.6676, 0.44", "221.723, -74.4148, -31.6991, 0.44", "221.782, -74.3996, -31.7008, 0.44", "222.306, -74.2498, -31.6943, 0.44", "222.373, -74.2296, -31.6902, 0.44", "222.971, -74.0592, -31.6232, 0.88", "223.574, -73.9082, -31.5587, 1.25", "224.328, -73.7578, -31.4837, 1.55", "224.458, -73.7378, -31.4717, 1.55", "225.025, -73.6835, -31.424, 1.55", "225.095, -73.6799, -31.4186, 1.55", "225.881, -73.7111, -31.4151, 1.25", "226.576, -73.778, -31.4425, 0.88", "227.16, -73.8531, -31.4823, 0.66", "228.102, -73.986, -31.5624, 0.52", "228.231, -74.0061, -31.5751, 0.52", "230.079, -74.2839, -31.8606, 0.52", "230.147, -74.2908, -31.8746, 0.52", "230.828, -74.2856, -32.0358, 0.52", "230.894, -74.2768, -32.0549, 0.52", "231.586, -74.0948, -32.3384, 0.52", "232.432, -73.8047, -32.7197, 0.52", "233.269, -73.5361, -33.1077, 0.52", "234.037, -73.3684, -33.4432, 0.52", "234.848, -73.2443, -33.7901, 1.25", "236.073, -73.1542, -34.2752, 0.88", "236.877, -73.1664, -34.5642, 0.44", "238.268, -73.3663, -34.9772, 0.44", "238.903, -73.5534, -35.1487, 0.74", "238.958, -73.5771, -35.1605, 0.74", "239.364, -73.7868, -35.2044, 1.03", "239.59, -73.9199, -35.2062, 1.03", "240.051, -74.1826, -35.2036, 1.03", "240.813, -74.4754, -35.251, 0.44", "241.471, -74.6312, -35.35, 0.29", "241.847, -74.6564, -35.4263, 0.29", "242.032, -74.6376, -35.4732, 0.29", "242.764, -74.4067, -35.752, 0.29", "243.953, -73.8338, -36.3129, 0.29", "244.0, -73.8059, -36.3414, 0.29", "244.438, -73.5411, -36.6282, 0.29", "244.492, -73.5144, -36.6627, 0.29", "245.761, -72.968, -37.3217, 1.18", "245.815, -72.9493, -37.3431, 1.18", "247.045, -72.6001, -37.6806, 1.69", "247.795, -72.4142, -37.8343, 1.99", "248.832, -72.1916, -37.9815, 0.66", "250.06, -71.9749, -38.0528, 0.44", "250.709, -71.898, -38.0128, 0.22", "250.77, -71.893, -38.0068, 0.22", "251.591, -71.8468, -37.8721, 0.22", "251.652, -71.8428, -37.8658, 0.22", "252.121, -71.8069, -37.8466, 0.96", "252.574, -71.7807, -37.8671, 0.96", "253.035, -71.7256, -37.9175, 0.22", "254.102, -71.5321, -38.0707, 0.22", "254.649, -71.3964, -38.1674, 1.11", "254.731, -71.3723, -38.182, 1.11", "255.108, -71.2403, -38.2471, 1.11", "255.892, -70.9322, -38.3538, 0.22", "256.313, -70.7572, -38.3937, 0.22", "256.401, -70.7256, -38.3976, 0.22", "257.139, -70.5047, -38.3867, 0.52", "257.49, -70.4205, -38.3702, 0.52", "258.094, -70.3109, -38.3175, 0.22", "258.154, -70.3019, -38.3088, 0.22", "259.048, -70.188, -38.1831, 0.22", "259.177, -70.1709, -38.1656, 0.22", "259.77, -70.0942, -38.0909, 0.22", "259.83, -70.083, -38.0868, 0.22", "260.423, -69.965, -38.0793, 0.37", "260.484, -69.9539, -38.0794, 0.37", "261.026, -69.8554, -38.0838, 0.37", "261.086, -69.8469, -38.0842, 0.37", "261.981, -69.7582, -38.0938, 0.15", "262.526, -69.7208, -38.118, 0.15", "263.944, -69.7351, -38.2211, 0.15", "264.324, -69.7623, -38.2551, 0.66", "264.96, -69.8546, -38.3204, 1.11", "265.08, -69.8785, -38.3333, 1.11", "265.993, -70.115, -38.43, 0.15", "266.813, -70.3389, -38.5235, 0.15", "267.0, -70.3989, -38.5478, 0.15", "267.618, -70.581, -38.6101, 0.15", "268.054, -70.6843, -38.6326, 0.44", "268.316, -70.7243, -38.6289, 0.44", "268.834, -70.7624, -38.5466, 0.81", "268.894, -70.7631, -38.5339, 0.81", "269.628, -70.7757, -38.3636, 0.81", "270.319, -70.7832, -38.1927, 0.81", "270.93, -70.7751, -38.0405, 0.22", "272.414, -70.7106, -37.6786, 0.22", "272.498, -70.6984, -37.6597, 0.22", "273.233, -70.5418, -37.5, 0.22", "274.031, -70.346, -37.3273, 0.59", "274.884, -70.0916, -37.1519, 0.22", "275.427, -69.8894, -37.0582, 0.22", "276.767, -69.1953, -36.9141, 0.88", "276.82, -69.1641, -36.9082, 0.88" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "97.6437, -202.479, -15.3002, 0.22", "97.9739, -202.931, -15.1004, 0.22", "98.1924, -203.221, -14.9536, 0.52", "98.7191, -203.887, -14.6133, 0.37", "99.48, -204.847, -14.1551, 0.22", "100.089, -205.668, -13.7968, 0.22", "100.416, -206.126, -13.6066, 1.11", "101.189, -207.23, -13.178, 0.22", "101.886, -208.226, -12.7924, 0.22", "102.31, -208.841, -12.5651, 0.22", "103.244, -210.187, -12.0265, 0.22", "103.357, -210.363, -11.9666, 0.59" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "97.6437, -202.479, -15.3002, 0.22", "97.5994, -203.831, -14.7836, 0.22", "97.5747, -204.587, -14.4948, 0.66", "97.5555, -205.175, -14.2703, 0.88" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-21.8361, 83.5285, -25.1403, 0.74", "-19.3111, 84.7617, -25.3645, 0.74", "-16.9167, 85.8398, -25.4787, 0.52", "-16.3953, 86.0564, -25.4693, 0.52", "-13.3844, 87.2909, -25.2648, 0.52", "-13.1694, 87.3839, -25.2434, 0.52", "-11.3679, 88.1862, -25.0281, 0.52", "-11.225, 88.249, -25.0023, 0.52", "-9.88798, 88.9006, -24.8098, 0.74", "-8.83372, 89.5151, -24.7973, 1.03", "-8.11892, 90.026, -24.9255, 1.03", "-8.03695, 90.0881, -24.9477, 1.03", "-6.05938, 91.5863, -25.719, 1.03", "-4.94205, 92.3714, -26.2961, 0.29", "-3.5298, 93.2701, -27.129, 0.29", "-2.46123, 93.8431, -27.7425, 0.29", "-2.36344, 93.8883, -27.7953, 0.29", "-0.581035, 94.6712, -28.6391, 1.03", "1.16414, 95.4255, -29.3359, 1.18", "2.12426, 95.8705, -29.6984, 0.44", "3.03641, 96.3512, -30.0658, 0.44", "3.13346, 96.4124, -30.1008, 0.44", "4.29904, 97.3044, -30.4391, 0.44", "5.33715, 98.3611, -30.5827, 0.44", "5.40547, 98.4397, -30.5796, 0.44", "5.7522, 98.8852, -30.5651, 0.29", "5.81994, 98.9657, -30.5657, 0.29", "6.43435, 99.5425, -30.5675, 0.29", "6.57393, 99.6385, -30.5631, 0.29", "7.87299, 100.342, -30.6397, 0.66", "7.96771, 100.386, -30.6497, 0.66", "9.25207, 100.979, -30.7966, 0.96", "10.0406, 101.384, -30.9038, 1.18", "11.1152, 101.956, -31.0664, 1.18", "13.2995, 103.184, -31.4079, 0.74", "14.257, 103.749, -31.5685, 0.37", "15.541, 104.56, -31.8062, 0.37", "17.6388, 106.112, -32.2052, 0.37", "17.8054, 106.259, -32.2402, 0.37", "18.1293, 106.61, -32.3101, 0.37", "18.181, 106.683, -32.3183, 0.37", "19.0421, 108.115, -32.4837, 0.37", "19.8606, 109.656, -32.6251, 0.37", "20.4157, 110.616, -32.7386, 0.37", "20.6506, 110.961, -32.7818, 0.22", "21.2819, 111.779, -32.8843, 0.22", "21.436, 111.955, -32.9102, 0.22", "22.2601, 112.81, -33.0026, 0.22", "24.3477, 114.788, -33.1992, 1.4", "25.5492, 115.893, -33.2944, 1.69", "25.7048, 116.034, -33.3023, 1.69", "27.2748, 117.455, -33.3423, 1.69", "28.5528, 118.545, -33.3004, 1.03", "29.4555, 119.325, -33.2776, 0.37", "29.5229, 119.385, -33.2736, 0.37", "30.327, 120.098, -33.7311, 0.37", "30.3943, 120.165, -33.8049, 0.37", "31.4337, 121.252, -35.3936, 0.37", "32.5213, 122.346, -37.1789, 1.18", "32.6224, 122.446, -37.3531, 1.18", "36.0737, 125.296, -42.8432, 0.29", "36.7516, 125.789, -43.7977, 0.29", "36.9648, 125.911, -44.0523, 0.29", "37.9293, 126.399, -45.0427, 0.29", "38.0079, 126.429, -45.1057, 0.29", "40.6011, 127.371, -46.7559, 0.29", "42.6067, 128.033, -47.692, 1.25", "47.7734, 129.715, -50.2824, 0.37", "49.4733, 130.307, -51.198, 0.74", "51.754, 131.172, -52.4979, 0.29", "53.3295, 131.827, -53.4081, 0.29", "53.5095, 131.917, -53.5064, 0.29", "56.0509, 133.232, -54.7783, 0.29", "56.1379, 133.284, -54.8067, 0.29", "56.7045, 133.653, -54.9949, 0.29", "56.871, 133.777, -55.0296, 0.29", "58.7277, 135.299, -55.2941, 0.29", "59.7294, 136.305, -55.3205, 1.18", "59.8879, 136.494, -55.3045, 1.18", "60.5719, 137.391, -55.2788, 1.18", "60.7441, 137.648, -55.2816, 1.18", "61.7506, 139.332, -55.3431, 0.59", "62.846, 141.449, -55.4656, 0.29", "62.8916, 141.544, -55.4691, 0.29", "63.5858, 143.018, -55.5276, 0.66", "64.2004, 144.179, -55.6412, 0.66", "64.2618, 144.281, -55.6552, 0.66", "64.9445, 145.299, -55.8792, 0.22", "66.0048, 146.722, -56.2734, 0.22", "66.1062, 146.85, -56.3145, 0.22", "67.8122, 148.94, -56.9808, 1.11", "68.5228, 149.795, -57.2819, 1.11", "69.645, 151.103, -57.7293, 0.74", "69.7224, 151.19, -57.7588, 0.74", "70.6303, 152.115, -58.0364, 0.37", "72.1054, 153.608, -58.3198, 0.37", "72.2011, 153.706, -58.3255, 0.37", "73.3301, 154.806, -58.3012, 0.37", "73.6875, 155.147, -58.2673, 0.37", "74.5863, 156.006, -58.1922, 0.37", "76.2453, 157.567, -58.036, 0.37", "76.3226, 157.638, -58.0307, 0.37", "77.5248, 158.754, -57.9467, 1.62", "78.1635, 159.364, -57.9058, 1.62", "79.739, 160.855, -57.7865, 0.74", "81.4422, 162.447, -57.6105, 0.59", "81.5212, 162.516, -57.5994, 0.52", "82.7463, 163.472, -57.4242, 0.52", "82.8443, 163.54, -57.4095, 0.52", "83.3907, 163.888, -57.3126, 0.29", "84.9755, 164.834, -57.1493, 0.29", "85.0791, 164.895, -57.149, 0.29", "86.3776, 165.647, -57.2904, 0.29", "86.5208, 165.735, -57.3153, 0.29", "87.8189, 166.575, -57.5303, 0.29", "89.6947, 167.832, -57.853, 1.11", "90.6998, 168.533, -58.0096, 1.11", "92.1034, 169.578, -58.1898, 0.59", "93.448, 170.639, -58.321, 0.37", "95.0918, 171.929, -58.423, 0.22", "95.1747, 171.993, -58.4229, 0.22", "96.2658, 172.882, -58.3188, 0.22", "96.4395, 173.02, -58.2916, 0.22", "96.713, 173.232, -58.2228, 0.59", "96.8403, 173.32, -58.1906, 0.59", "97.2893, 173.625, -58.1209, 0.59", "98.9842, 174.778, -57.9366, 0.37", "100.353, 175.645, -57.814, 1.18", "101.521, 176.37, -57.7169, 1.18", "102.76, 177.143, -57.6115, 1.18", "104.493, 178.28, -57.448, 0.37", "104.616, 178.364, -57.4357, 0.37", "106.566, 179.848, -57.1646, 0.37", "106.738, 179.992, -57.1509, 0.37", "107.7, 180.876, -57.073, 0.37", "108.944, 182.131, -56.9472, 0.37", "109.016, 182.206, -56.9432, 0.37", "110.655, 184.01, -57.0148, 0.37", "111.703, 185.265, -57.1767, 0.81", "112.343, 185.998, -57.3675, 0.81", "112.427, 186.098, -57.4067, 0.81", "113.784, 187.695, -58.2197, 0.29", "114.598, 188.729, -58.7715, 0.29", "114.707, 188.884, -58.8632, 0.29", "115.648, 190.412, -59.6273, 0.29", "116.23, 191.396, -60.1257, 0.22", "116.28, 191.481, -60.1636, 0.22", "116.998, 192.796, -60.6441, 0.22", "117.048, 192.881, -60.6802, 0.22", "117.786, 194.07, -61.1903, 0.37", "118.765, 195.521, -61.7617, 1.18", "119.334, 196.2, -62.0515, 1.18", "119.476, 196.341, -62.1184, 1.18", "120.958, 197.597, -62.7872, 0.37", "121.076, 197.694, -62.8325, 0.37", "121.856, 198.302, -63.1272, 0.29", "122.864, 199.08, -63.4937, 0.29", "124.724, 200.493, -64.2002, 0.29", "124.899, 200.622, -64.2587, 0.29", "126.084, 201.469, -64.6368, 0.29", "128.576, 203.246, -65.4771, 0.29", "128.647, 203.296, -65.5019, 0.29", "129.748, 204.089, -65.8841, 0.74", "131.202, 205.053, -66.4394, 1.18", "132.981, 206.14, -67.1904, 1.18", "133.068, 206.187, -67.2264, 1.18", "133.813, 206.575, -67.5116, 1.18", "133.941, 206.638, -67.5564, 1.18", "136.822, 208.026, -68.5128, 0.29", "136.914, 208.069, -68.5418, 0.29", "138.616, 208.903, -68.9183, 0.29", "138.695, 208.945, -68.9317, 0.29", "139.979, 209.657, -69.021, 1.03", "140.555, 210.007, -68.9615, 0.37", "140.639, 210.062, -68.9308, 0.37", "141.24, 210.452, -68.7902, 0.37", "141.443, 210.593, -68.7836, 0.37", "142.365, 211.245, -68.8465, 0.37", "143.131, 211.771, -68.9208, 0.66", "143.679, 212.126, -68.9728, 0.88", "145.134, 213.146, -69.0565, 0.22", "146.659, 214.343, -69.1087, 0.22", "146.74, 214.411, -69.1101, 0.22", "148.711, 216.175, -69.2203, 0.22", "148.787, 216.248, -69.2252, 0.22", "150.8, 218.252, -69.337, 0.22", "152.461, 219.969, -69.3657, 0.22", "152.534, 220.044, -69.367, 0.22", "153.99, 221.48, -69.4956, 1.18", "154.853, 222.306, -69.655, 1.18", "154.944, 222.378, -69.6857, 1.18", "155.518, 222.705, -69.9778, 1.18", "156.063, 222.913, -70.2552, 1.18", "157.704, 223.438, -71.0474, 1.18", "157.795, 223.462, -71.0938, 1.18", "160.147, 224.096, -72.4557, 0.37", "160.245, 224.127, -72.5175, 0.37", "161.777, 224.726, -73.5992, 0.37", "161.941, 224.813, -73.7263, 0.37", "163.023, 225.625, -74.5534, 0.29", "163.818, 226.393, -75.1327, 0.29", "163.964, 226.551, -75.2043, 0.29", "164.535, 227.109, -75.4464, 0.29", "164.787, 227.297, -75.547, 0.29", "166.671, 228.096, -75.9773, 0.29", "166.895, 228.161, -76.0095, 0.29", "168.364, 228.526, -76.3176, 0.29", "168.676, 228.612, -76.3859, 0.29", "170.489, 229.129, -76.7848, 1.03", "172.085, 229.795, -77.105, 1.03", "172.265, 229.894, -77.1512, 1.03", "174.475, 231.203, -77.7517, 0.29", "175.833, 232.107, -78.1591, 0.29", "175.996, 232.225, -78.2085, 0.29", "178.353, 234.169, -78.9092, 0.29", "180.255, 235.885, -79.5445, 1.47", "181.615, 237.089, -79.9557, 2.21" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-21.8361, 83.5285, -25.1403, 1.55", "-21.9746, 84.2169, -25.2018, 1.55", "-22.1377, 85.2892, -25.3505, 0.81", "-22.2693, 86.548, -25.5325, 0.81", "-22.3584, 87.6252, -25.6793, 0.81", "-22.4257, 88.6429, -25.8063, 0.81", "-22.4761, 89.6067, -25.914, 0.81", "-22.4901, 90.959, -26.0987, 1.18", "-22.4548, 91.8595, -26.2215, 1.18", "-22.3528, 93.1156, -26.3778, 1.62", "-22.2799, 93.9193, -26.4654, 1.84", "-22.1927, 94.805, -26.5648, 1.84", "-22.081, 95.8121, -26.6657, 0.59", "-22.0006, 96.499, -26.7136, 0.59", "-21.9096, 97.235, -26.791, 0.59" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-126.14, 78.4171, -106.481, 0.44", "-126.842, 78.4739, -106.641, 0.44", "-126.92, 78.4809, -106.66, 0.44", "-128.627, 78.6494, -107.077, 0.44", "-130.574, 78.8818, -107.567, 0.44", "-131.414, 78.9898, -107.796, 0.81", "-131.478, 78.9994, -107.819, 0.81", "-131.892, 79.0655, -107.973, 0.81", "-131.967, 79.0771, -108.002, 0.81", "-132.847, 79.2011, -108.363, 0.22", "-136.6, 79.6663, -109.965, 0.22", "-137.879, 79.8556, -110.513, 0.96", "-138.802, 80.0053, -110.892, 0.96", "-139.65, 80.1523, -111.232, 0.29", "-140.664, 80.3412, -111.642, 0.29", "-140.748, 80.3593, -111.676, 0.29", "-141.881, 80.7153, -112.174, 0.29", "-142.031, 80.7683, -112.238, 0.29", "-143.245, 81.288, -112.857, 0.96", "-143.309, 81.3208, -112.893, 0.96", "-143.994, 81.6985, -113.3, 0.96", "-144.865, 82.1757, -113.933, 0.37", "-145.26, 82.378, -114.273, 0.37", "-145.381, 82.4506, -114.391, 0.37", "-145.905, 82.8456, -114.989, 0.37", "-145.957, 82.8883, -115.051, 0.37", "-146.861, 83.6631, -116.108, 0.15", "-146.91, 83.7032, -116.157, 0.15", "-147.034, 83.7911, -116.261, 0.15", "-147.129, 83.8399, -116.322, 0.15", "-148.123, 84.1667, -116.912, 0.15", "-148.91, 84.3675, -117.337, 0.88", "-149.21, 84.4306, -117.48, 0.88", "-149.932, 84.5943, -117.836, 0.15", "-151.0, 84.8366, -118.381, 0.15", "-152.144, 85.0744, -119.009, 0.15", "-153.101, 85.2217, -119.499, 0.15", "-153.272, 85.2428, -119.579, 0.15", "-154.159, 85.3288, -119.943, 0.15", "-154.311, 85.3353, -120.004, 0.15", "-155.362, 85.3516, -120.388, 0.15", "-156.729, 85.2672, -120.826, 0.74", "-156.88, 85.2425, -120.876, 0.74", "-157.672, 85.0827, -121.157, 0.74", "-158.768, 84.837, -121.565, 0.15", "-158.852, 84.8218, -121.598, 0.15", "-159.511, 84.813, -121.876, 0.15", "-159.747, 84.8574, -121.999, 0.15", "-160.114, 85.0501, -122.255, 0.15", "-160.412, 85.3806, -122.545, 0.81", "-160.447, 85.4407, -122.586, 0.81", "-160.888, 86.3788, -123.213, 0.81", "-160.919, 86.4401, -123.255, 0.81", "-161.666, 87.5654, -124.448, 0.22", "-161.715, 87.6086, -124.513, 0.22", "-162.191, 87.8956, -125.2, 0.22", "-162.244, 87.9184, -125.271, 0.22", "-163.03, 88.1642, -126.316, 0.44", "-164.431, 88.5067, -128.044, 1.11", "-165.572, 88.7238, -129.359, 1.11", "-167.689, 89.057, -131.727, 0.52", "-168.639, 89.175, -132.777, 0.52", "-169.608, 89.2818, -133.815, 0.29", "-170.44, 89.3571, -134.65, 0.29", "-170.511, 89.3615, -134.708, 0.29", "-171.603, 89.3925, -135.492, 0.29", "-171.676, 89.3925, -135.527, 0.29", "-172.133, 89.422, -135.732, 0.52", "-173.059, 89.5356, -136.085, 0.52", "-173.69, 89.6226, -136.312, 0.52", "-173.852, 89.6393, -136.367, 0.52", "-174.743, 89.7111, -136.657, 0.29", "-175.881, 89.7369, -137.048, 0.29", "-175.957, 89.7362, -137.075, 0.29", "-177.153, 89.6564, -137.679, 0.66", "-177.906, 89.6183, -138.14, 0.66", "-177.967, 89.6168, -138.193, 0.66", "-178.546, 89.6227, -138.793, 0.22", "-179.122, 89.6563, -139.491, 0.22", "-180.336, 89.791, -140.946, 0.22", "-181.177, 89.9301, -141.913, 0.52", "-182.352, 90.1452, -143.138, 0.88", "-182.81, 90.2234, -143.568, 1.18", "-183.077, 90.2639, -143.782, 1.18", "-184.481, 90.4067, -144.73, 1.18", "-185.532, 90.4919, -145.264, 1.18", "-186.387, 90.5285, -145.659, 0.29", "-186.622, 90.536, -145.748, 0.29", "-187.8, 90.5661, -146.2, 0.29", "-188.582, 90.5988, -146.502, 0.44", "-189.997, 90.723, -147.048, 0.44" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-126.14, 78.4171, -106.481, 0.29", "-126.184, 78.3049, -106.521, 0.29", "-126.57, 77.2393, -106.911, 0.29", "-126.607, 77.1147, -106.971, 0.29", "-126.807, 76.3115, -107.378, 0.29", "-126.937, 75.6738, -107.755, 0.59", "-127.044, 75.0941, -108.122, 0.81", "-127.056, 75.0205, -108.172, 0.81", "-127.181, 74.0203, -108.923, 0.81", "-127.257, 73.5551, -109.296, 0.81", "-127.512, 72.6257, -110.127, 0.29", "-127.534, 72.5831, -110.168, 0.29", "-127.785, 72.3212, -110.552, 0.29", "-127.93, 72.2113, -110.745, 0.29", "-128.316, 71.9737, -111.202, 0.81", "-128.804, 71.6755, -111.77, 0.81", "-129.256, 71.3887, -112.265, 0.81", "-130.742, 70.3383, -113.946, 0.66", "-131.072, 70.0782, -114.331, 0.59", "-131.361, 69.8083, -114.682, 0.44", "-131.686, 69.4112, -115.094, 0.44", "-131.955, 68.9461, -115.402, 0.29", "-131.984, 68.8824, -115.423, 0.29", "-132.17, 68.5114, -115.439, 0.29", "-132.278, 68.3312, -115.462, 0.29", "-132.645, 67.7953, -115.568, 0.29", "-133.295, 66.9152, -115.786, 0.29", "-133.376, 66.8094, -115.817, 0.29", "-134.474, 65.5111, -116.177, 0.29", "-135.221, 64.6719, -116.403, 0.81", "-135.692, 64.1674, -116.542, 1.03", "-135.737, 64.1235, -116.555, 1.03", "-136.305, 63.5868, -116.734, 1.03", "-137.024, 62.9363, -116.856, 0.22", "-137.793, 62.2889, -116.861, 0.22", "-137.843, 62.2497, -116.857, 0.22", "-138.837, 61.5021, -116.667, 0.22", "-138.888, 61.4651, -116.654, 0.22", "-139.982, 60.7374, -116.399, 1.03", "-140.581, 60.3725, -116.293, 1.03", "-141.241, 60.0092, -116.182, 0.66", "-142.569, 59.2889, -115.949, 0.22", "-142.632, 59.255, -115.937, 0.22", "-144.072, 58.493, -115.727, 0.22", "-144.701, 58.173, -115.704, 1.4", "-144.767, 58.1426, -115.702, 1.4" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-37.2491, 52.3826, -22.599, 0.74", "-37.1932, 52.6181, -23.1988, 0.74", "-37.1556, 52.8396, -23.7354, 0.37", "-37.1456, 52.9171, -23.9163, 0.88", "-37.1254, 53.0872, -24.3294, 1.18", "-37.0996, 53.3249, -24.9204, 0.52", "-37.0994, 53.3304, -24.9346, 0.52", "-37.1214, 53.4011, -25.1568, 0.52", "-37.1298, 53.4095, -25.1896, 0.52", "-37.3033, 53.4674, -25.5847, 0.52", "-37.3124, 53.4679, -25.5969, 0.52", "-37.5116, 53.4511, -25.8314, 0.52", "-37.625, 53.4352, -25.9905, 0.74", "-37.7687, 53.4067, -26.21, 0.74", "-38.0026, 53.3559, -26.5634, 1.25", "-38.0763, 53.3393, -26.6845, 1.25", "-38.2638, 53.2721, -27.0943, 1.25", "-38.4134, 53.1845, -27.5253, 0.66", "-38.4171, 53.1805, -27.5418, 0.66", "-38.4451, 53.1194, -27.7587, 0.59", "-38.5048, 52.951, -28.3015, 0.59", "-38.5586, 52.7804, -28.8614, 0.96", "-38.5765, 52.7311, -29.0311, 0.96", "-38.6407, 52.5886, -29.547, 0.44", "-38.7186, 52.4479, -30.0967, 0.29", "-38.7621, 52.3817, -30.3739, 0.29", "-38.904, 52.2594, -30.9506, 1.03", "-38.9806, 52.2298, -31.1625, 0.44", "-39.0802, 52.2091, -31.3564, 0.44", "-39.1067, 52.2059, -31.3963, 0.44", "-39.1682, 52.2006, -31.49, 0.44", "-39.3146, 52.199, -31.868, 0.44", "-39.3243, 52.1994, -31.899, 0.44", "-39.4304, 52.2129, -32.2631, 0.74", "-39.5571, 52.2562, -32.8084, 0.74", "-39.6494, 52.3144, -33.2929, 1.11", "-39.8455, 52.51, -34.5014, 0.81", "-39.8487, 52.516, -34.5334, 0.81", "-39.8618, 52.5689, -34.7747, 0.81", "-39.8658, 52.7864, -35.6309, 0.88", "-39.8542, 52.9722, -36.2622, 0.29", "-39.8432, 53.0294, -36.4315, 0.29", "-39.7863, 53.2701, -37.0257, 0.29", "-39.7673, 53.3538, -37.2167, 0.29", "-39.7659, 53.3594, -37.2285, 0.29", "-39.76, 53.3953, -37.2874, 0.44", "-39.7593, 53.4039, -37.3002, 0.44", "-39.7717, 53.6476, -37.6599, 0.44", "-39.8153, 53.8018, -37.8601, 1.11", "-39.8892, 54.0774, -38.2734, 0.29", "-39.9032, 54.1372, -38.3676, 0.29", "-39.9083, 54.1615, -38.4066, 0.29", "-39.9197, 54.2203, -38.5018, 0.29", "-39.9338, 54.3203, -38.6638, 0.29", "-39.945, 54.6336, -39.2228, 0.29", "-39.9463, 54.641, -39.236, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-37.2491, 52.3826, -22.599, 0.52", "-37.3756, 52.4221, -22.7013, 0.52", "-38.1419, 52.7066, -23.2968, 0.52", "-38.1857, 52.7254, -23.3269, 0.52", "-38.9818, 53.0954, -23.8337, 0.44", "-39.0338, 53.1208, -23.8617, 0.44", "-39.6824, 53.4529, -24.1662, 0.44", "-39.7812, 53.5081, -24.208, 0.44", "-40.2259, 53.7477, -24.3578, 0.44", "-40.3416, 53.8014, -24.3861, 0.88", "-41.1634, 54.0914, -24.4831, 0.88", "-41.8512, 54.2477, -24.5407, 0.88", "-41.9064, 54.2548, -24.5434, 0.88", "-42.7857, 54.3486, -24.572, 1.55", "-43.4343, 54.411, -24.5911, 1.77", "-44.3614, 54.5145, -24.5457, 0.37", "-45.0406, 54.6018, -24.4726, 0.29", "-45.6924, 54.7216, -24.3799, 0.81", "-46.2501, 54.8576, -24.2953, 0.88", "-46.6202, 54.9686, -24.2405, 0.88", "-47.8677, 55.3359, -24.0641, 0.59", "-48.2523, 55.441, -24.0259, 0.59", "-48.7562, 55.5295, -23.9382, 0.22", "-49.4494, 55.602, -23.8117, 0.22", "-50.0087, 55.6407, -23.7215, 0.22", "-50.9625, 55.6989, -23.513, 1.4", "-51.5536, 55.7267, -23.3776, 1.84", "-52.9118, 55.7903, -22.9969, 0.29", "-53.9109, 55.8282, -22.7023, 0.29", "-54.8622, 55.8699, -22.3985, 0.29", "-56.2196, 55.9252, -21.9545, 0.88", "-56.8775, 55.9515, -21.7606, 1.03", "-56.9232, 55.9532, -21.7465, 1.03", "-57.7435, 55.9734, -21.5079, 0.59", "-58.4677, 55.958, -21.2724, 0.44", "-58.8805, 55.9389, -21.1399, 0.29", "-59.7047, 55.8559, -20.9264, 0.29", "-60.7613, 55.7218, -20.5903, 0.29", "-60.8198, 55.7108, -20.5663, 0.29", "-61.1633, 55.5954, -20.3569, 0.29", "-61.2156, 55.5289, -20.2711, 0.29", "-61.4809, 55.0258, -19.6416, 0.29", "-61.5009, 54.9851, -19.5961, 0.29", "-61.7614, 54.5951, -19.131, 0.66", "-61.9373, 54.4033, -18.8837, 0.66", "-62.9298, 53.5998, -17.8098, 0.37", "-63.4976, 53.2337, -17.3097, 0.37", "-64.0814, 52.9212, -16.8754, 0.37", "-65.1029, 52.4452, -16.1231, 1.11", "-65.6223, 52.2273, -15.7708, 1.47", "-66.3303, 51.9482, -15.3092, 0.81", "-67.0503, 51.6903, -14.8424, 0.44", "-67.9811, 51.3674, -14.1724, 0.44", "-69.6096, 50.833, -12.9244, 1.4", "-70.1904, 50.6359, -12.4646, 1.69", "-70.2315, 50.6217, -12.4288, 1.69", "-71.1198, 50.2671, -11.564, 0.29", "-71.3429, 50.1605, -11.3455, 0.29", "-71.4221, 50.1097, -11.2701, 0.29", "-71.7413, 49.7603, -11.0339, 0.29", "-71.8169, 49.6801, -10.9847, 0.29", "-72.3483, 49.3801, -10.8436, 0.29", "-72.9262, 49.2944, -10.8783, 0.29", "-73.1082, 49.2881, -10.8807, 0.29", "-73.4007, 49.278, -10.8796, 0.29", "-74.2648, 49.2512, -10.8781, 0.29", "-75.1955, 49.2198, -10.8821, 0.29", "-75.9829, 49.176, -10.8938, 1.4", "-76.9919, 49.0586, -10.9132, 1.77", "-77.6839, 48.9237, -10.9281, 1.77", "-78.283, 48.7351, -10.9403, 0.74", "-78.9247, 48.4139, -10.9283, 0.59", "-79.4368, 48.0518, -10.8953, 0.44", "-79.8486, 47.702, -10.8575, 0.44", "-80.0362, 47.5334, -10.8223, 0.44", "-80.6398, 46.9879, -10.6215, 0.44", "-81.084, 46.6038, -10.421, 0.44", "-81.8012, 46.0644, -10.0405, 0.44", "-82.2425, 45.8531, -9.80676, 0.74", "-83.2689, 45.7743, -9.1662, 0.29", "-83.3216, 45.7831, -9.13054, 0.29", "-83.5947, 45.8806, -8.96312, 0.29", "-83.8335, 45.9996, -8.82876, 0.29", "-84.3867, 46.317, -8.54831, 0.29", "-85.7831, 47.042, -7.87659, 0.29", "-85.8314, 47.0636, -7.85716, 0.29", "-86.9289, 47.4632, -7.44197, 0.29", "-87.4236, 47.6055, -7.27205, 1.47", "-87.9733, 47.7248, -7.10706, 2.06", "-89.41, 47.9302, -6.76065, 1.62", "-90.1077, 47.9867, -6.65822, 0.59", "-90.5499, 48.0075, -6.5987, 0.59", "-91.1251, 47.9975, -6.53922, 0.81", "-91.4279, 47.9763, -6.52769, 0.81", "-91.7298, 47.949, -6.51644, 0.22", "-92.2274, 47.8995, -6.54009, 0.22", "-92.6105, 47.8839, -6.53364, 0.22", "-93.2625, 47.9389, -6.43882, 0.22", "-93.3084, 47.9468, -6.4282, 0.22", "-94.6619, 48.2556, -6.06153, 0.22", "-95.1304, 48.375, -5.95258, 1.11", "-95.6762, 48.5199, -5.86558, 1.55", "-96.3263, 48.6721, -5.80949, 0.29", "-97.5916, 48.8849, -5.75682, 0.29", "-97.6556, 48.8869, -5.76165, 0.29", "-98.4588, 48.792, -5.91154, 0.88", "-99.3591, 48.5886, -6.08494, 1.69", "-99.952, 48.4114, -6.18203, 1.4", "-100.525, 48.2189, -6.22379, 0.29", "-101.602, 47.8587, -6.17252, 0.29", "-102.33, 47.641, -6.07036, 1.11", "-102.804, 47.5342, -5.94899, 1.11", "-103.6, 47.438, -5.66967, 0.88", "-104.683, 47.4109, -5.23045, 0.52", "-105.226, 47.445, -4.99164, 0.37", "-105.854, 47.5348, -4.64457, 0.37", "-106.734, 47.6987, -4.12209, 0.37", "-107.927, 47.9456, -3.40265, 0.37", "-107.976, 47.9534, -3.37503, 0.37", "-108.239, 47.9889, -3.20609, 0.74", "-109.265, 48.0956, -2.39052, 0.15", "-109.609, 48.1201, -2.07461, 0.15", "-109.647, 48.1197, -2.03259, 0.15", "-110.334, 48.1007, -1.25882, 0.15", "-111.361, 48.1397, -0.237588, 0.15", "-111.403, 48.1438, -0.200376, 0.15", "-111.83, 48.2101, 0.126561, 0.15", "-113.28, 48.5033, 1.16828, 0.15", "-114.012, 48.6891, 1.63126, 0.15", "-114.677, 48.9042, 1.98311, 0.59", "-114.962, 48.9861, 2.08535, 0.81", "-115.021, 49.0038, 2.10387, 0.81", "-115.186, 49.0621, 2.13295, 0.81", "-115.457, 49.1755, 2.11415, 0.15", "-115.509, 49.1987, 2.11176, 0.15", "-115.958, 49.3914, 2.10706, 0.15", "-116.009, 49.4142, 2.10716, 0.15", "-117.052, 49.9009, 2.11131, 0.15", "-124.175, 49.4342, 5.65576, 0.15", "-131.147, 48.6191, 9.4313, 0.15", "-138.34, 48.0105, 12.8084, 0.15", "-145.115, 47.6507, 16.9916, 0.15", "-152.251, 47.8723, 20.5334, 0.15", "-159.945, 47.0674, 22.4528, 0.15", "-167.811, 45.8706, 22.9164, 0.15", "-175.393, 43.5888, 23.8253, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-166.655, -102.562, 130.467, 0.29", "-173.084, -102.796, 134.691, 0.29" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-166.655, -102.562, 130.467, 0.29", "-171.717, -103.134, 132.587, 0.29", "-176.438, -103.918, 135.337, 0.29", "-181.133, -105.473, 137.785, 0.29", "-185.42, -107.214, 140.793, 0.29", "-189.762, -109.355, 143.443, 0.29", "-194.084, -111.98, 145.653, 0.29", "-198.443, -114.285, 148.13, 0.29", "-202.838, -116.779, 150.349, 0.29", "-207.458, -119.414, 151.822, 0.29", "-211.245, -122.936, 153.747, 0.29", "-214.922, -126.232, 156.211, 0.29", "-217.991, -130.36, 158.21, 0.29", "-221.507, -134.267, 159.891, 0.29", "-224.524, -138.848, 160.504, 0.29", "-226.606, -143.93, 161.044, 0.29", "-229.138, -148.531, 162.739, 0.29", "-231.18, -153.456, 164.165, 0.29", "-232.967, -158.558, 165.274, 0.29", "-235.524, -163.4, 165.959, 0.29", "-237.879, -168.323, 166.784, 0.29" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-162.085, -182.875, 120.008, 0.29", "-170.31, -187.139, 125.766, 0.29", "-179.655, -190.04, 130.587, 0.29", "-189.176, -193.154, 134.907, 0.29" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-162.085, -182.875, 120.008, 0.29", "-169.46, -186.714, 125.558, 0.29", "-176.456, -190.206, 131.784, 0.29", "-182.137, -192.214, 139.76, 0.29", "-186.989, -194.92, 148.071, 0.29", "-192.151, -195.839, 156.582, 0.29", "-196.967, -194.686, 165.265, 0.29", "-200.151, -192.744, 174.539, 0.29", "-202.64, -188.786, 183.374, 0.29", "-205.354, -184.808, 192.134, 0.29", "-207.73, -181.746, 201.348, 0.29", "-209.938, -176.737, 209.712, 0.29", "-212.229, -169.943, 216.677, 0.29", "-215.305, -163.388, 223.57, 0.29", "-218.335, -155.625, 229.089, 0.29", "-221.439, -147.305, 233.68, 0.29", "-226.906, -139.499, 236.697, 0.29", "-230.626, -131.043, 240.515, 0.29", "-233.037, -122.139, 244.365, 0.29", "-235.162, -113.25, 248.415, 0.29", "-235.618, -103.886, 251.881, 0.29", "-234.24, -95.1023, 256.45, 0.29", "-232.021, -86.0301, 260.013, 0.29", "-227.564, -78.2907, 264.502, 0.29", "-223.105, -71.0853, 269.806, 0.29", "-219.452, -63.3862, 275.03, 0.29", "-217.14, -54.7461, 279.494, 0.29", "-215.856, -47.178, 285.897, 0.29", "-216.859, -39.6582, 292.406, 0.29" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-152.246, -212.215, 87.8192, 0.29", "-156.581, -223.795, 85.6138, 0.29", "-160.998, -234.848, 81.6067, 0.29", "-167.564, -245.198, 78.8677, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-152.246, -212.215, 87.8192, 0.29", "-160.171, -220.181, 88.5135, 0.29", "-167.997, -228.273, 88.5951, 0.29", "-175.707, -236.447, 89.2984, 0.29", "-183.047, -244.843, 90.8354, 0.29", "-190.375, -253.165, 92.7821, 0.29", "-198.639, -260.714, 93.991, 0.29", "-205.848, -269.353, 93.6212, 0.29", "-212.571, -278.209, 91.8571, 0.29", "-219.392, -287.067, 90.5314, 0.29", "-226.906, -295.03, 87.9109, 0.29", "-234.639, -302.674, 84.9919, 0.29", "-240.144, -312.202, 82.6182, 0.29", "-246.325, -321.297, 80.207, 0.29", "-251.049, -331.255, 77.9091, 0.29", "-255.274, -341.655, 77.0524, 0.29", "-257.9, -352.556, 76.0448, 0.29", "-259.962, -363.376, 73.7175, 0.29", "-261.428, -374.479, 72.5789, 0.29", "-261.461, -385.536, 70.4608, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "181.615, 237.089, -79.9557, 0.44", "182.313, 239.112, -81.7838, 0.44", "182.691, 239.943, -82.4814, 0.44", "182.756, 240.058, -82.5982, 0.44", "183.071, 240.534, -83.2595, 0.52", "183.844, 241.625, -84.7315, 0.81", "183.912, 241.718, -84.8546, 0.81", "184.541, 242.56, -85.9413, 0.81", "185.701, 244.03, -87.8442, 0.15", "187.424, 246.136, -90.5308, 0.22", "188.332, 247.15, -91.7455, 0.22", "188.43, 247.256, -91.8578, 0.22", "189.119, 247.99, -92.5579, 0.22", "189.227, 248.095, -92.6344, 0.22", "191.056, 249.635, -93.1064, 0.81", "192.52, 250.738, -93.1401, 0.22", "193.271, 251.285, -93.168, 0.22", "193.589, 251.541, -93.1992, 0.22", "195.182, 252.937, -93.42, 0.22", "195.245, 253.0, -93.4301, 0.22", "195.88, 253.799, -93.5358, 0.52", "196.193, 254.283, -93.6572, 0.52", "197.023, 255.776, -94.0723, 0.29", "197.3, 256.353, -94.2035, 0.74", "197.326, 256.414, -94.2125, 0.74", "197.722, 257.22, -94.2482, 0.74", "197.765, 257.299, -94.2426, 0.74", "198.057, 257.811, -94.1656, 0.15", "199.05, 259.512, -93.7621, 0.15", "199.417, 260.116, -93.6153, 1.11", "199.93, 260.938, -93.413, 1.25", "200.272, 261.471, -93.2811, 0.15", "200.799, 262.299, -93.0166, 0.15", "200.986, 262.554, -92.9171, 0.15", "201.581, 263.3, -92.6313, 0.52", "202.258, 264.103, -92.344, 0.88", "202.312, 264.157, -92.3228, 0.88", "203.473, 265.196, -91.8909, 0.15", "205.546, 266.894, -91.1714, 0.15", "206.243, 267.437, -90.9426, 0.15", "206.312, 267.49, -90.923, 0.15", "207.391, 268.284, -90.6885, 1.69", "208.447, 269.063, -90.5271, 0.22", "209.093, 269.554, -90.5435, 0.22", "209.178, 269.625, -90.5549, 0.22", "209.843, 270.201, -90.6724, 0.52", "210.232, 270.563, -90.8028, 0.52", "210.284, 270.616, -90.8304, 0.52", "211.166, 271.445, -91.2337, 0.15", "212.211, 272.395, -91.581, 0.15", "212.272, 272.443, -91.59, 0.15", "212.872, 272.839, -91.5641, 0.81", "213.175, 273.008, -91.5194, 0.81", "214.731, 273.764, -91.158, 0.15", "214.802, 273.79, -91.1383, 0.15", "215.567, 274.04, -90.9544, 0.15", "215.687, 274.076, -90.9316, 0.15", "216.463, 274.301, -90.8082, 0.44", "217.139, 274.495, -90.7487, 0.15", "218.8, 275.085, -90.8551, 0.15", "218.957, 275.15, -90.8727, 0.74", "219.969, 275.603, -91.0408, 0.15", "220.19, 275.704, -91.0862, 0.15", "220.661, 275.949, -91.2027, 0.66", "222.218, 276.831, -91.6579, 0.15", "222.281, 276.873, -91.681, 0.15", "223.535, 277.704, -92.158, 0.15", "223.657, 277.789, -92.2085, 0.15", "224.797, 278.553, -92.6662, 0.15", "224.869, 278.6, -92.6925, 0.15", "225.915, 279.169, -92.9181, 1.03" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "181.615, 237.089, -79.9557, 0.29", "184.635, 236.782, -82.5327, 0.29", "185.51, 236.693, -83.2797, 0.29", "185.573, 236.686, -83.3334, 0.29", "186.665, 236.575, -84.265, 0.29", "186.878, 236.553, -84.4465, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-21.9096, 97.235, -26.791, 0.37", "-23.1263, 97.9016, -28.6919, 0.37", "-23.6151, 98.1796, -29.4064, 0.37", "-23.6491, 98.2013, -29.4551, 0.37", "-24.2897, 98.6395, -30.3624, 0.66", "-24.9044, 99.1339, -31.2404, 0.66", "-24.9458, 99.1735, -31.3006, 0.66", "-25.8388, 100.337, -32.5, 0.22", "-25.996, 100.721, -32.8207, 0.22", "-26.0074, 100.793, -32.8736, 0.22", "-25.9635, 101.546, -33.3963, 0.74", "-25.8798, 102.012, -33.7571, 1.33", "-25.7433, 102.742, -34.3344, 1.33", "-25.5404, 103.911, -35.2859, 1.33", "-25.4864, 104.596, -35.8557, 0.44", "-25.5007, 105.294, -36.4725, 0.44", "-25.6588, 106.481, -37.5685, 0.44", "-25.8687, 107.377, -38.3956, 0.44", "-26.0576, 107.906, -38.8461, 1.18", "-26.3884, 108.644, -39.3928, 1.25", "-26.8692, 109.543, -39.9921, 0.66", "-27.0861, 109.907, -40.2081, 0.22", "-27.117, 109.956, -40.2343, 0.22", "-27.4929, 110.558, -40.5875, 0.22", "-27.774, 111.042, -40.9567, 0.37", "-28.0081, 111.455, -41.3605, 0.37", "-28.1516, 111.747, -41.6806, 0.37", "-28.1694, 111.789, -41.7369, 0.37", "-28.2926, 112.165, -42.4796, 0.37", "-28.4066, 112.774, -44.182, 0.74", "-28.409, 112.801, -44.3056, 0.74", "-28.4076, 112.898, -44.8286, 0.74", "-28.4046, 112.924, -44.9752, 0.74", "-28.3849, 113.276, -46.7642, 0.74", "-28.3866, 113.293, -46.8344, 0.74", "-28.6289, 113.998, -48.5984, 1.03", "-28.7369, 114.238, -49.1409, 1.03", "-28.7503, 114.264, -49.1961, 1.03", "-28.9558, 114.654, -49.905, 1.03", "-29.2099, 115.1, -50.6804, 0.37", "-29.7655, 116.047, -52.2269, 0.88", "-30.2816, 116.921, -53.5587, 0.37", "-30.3251, 116.988, -53.6678, 0.37", "-30.5483, 117.342, -54.2291, 0.37", "-31.1748, 118.36, -55.8633, 1.03", "-31.4105, 118.845, -56.5735, 1.03", "-31.4245, 118.881, -56.6235, 1.03", "-31.7008, 119.795, -57.784, 1.25", "-31.7703, 120.159, -58.2361, 1.25", "-31.8084, 120.721, -58.9137, 0.52", "-31.7471, 121.517, -59.8801, 0.52", "-31.5931, 122.374, -61.0278, 0.96", "-31.5854, 122.406, -61.0704, 0.96", "-31.4311, 122.886, -61.6824, 0.96", "-31.4247, 122.918, -61.7251, 0.96", "-31.4049, 124.157, -63.3098, 0.29", "-31.5183, 124.446, -63.7411, 0.29", "-31.598, 124.622, -64.0014, 0.29", "-31.7522, 124.928, -64.4825, 0.29", "-32.1479, 125.694, -65.6679, 0.88", "-32.3289, 126.065, -66.1964, 0.88", "-32.9723, 127.403, -67.7186, 0.29", "-33.3301, 128.207, -68.5938, 0.29", "-33.3663, 128.293, -68.6908, 0.29", "-33.5894, 128.869, -69.3625, 0.29", "-33.615, 128.951, -69.4544, 0.29", "-33.8568, 129.763, -70.3419, 0.29", "-33.8826, 129.842, -70.423, 0.29", "-34.4296, 131.348, -71.9674, 1.4", "-34.786, 132.391, -73.0992, 1.4", "-34.7991, 132.426, -73.1384, 1.4", "-35.1426, 133.334, -74.1833, 0.37", "-35.1584, 133.381, -74.2356, 0.37", "-35.3487, 134.038, -74.8533, 0.37", "-35.5575, 134.939, -75.5504, 0.37", "-35.7085, 135.62, -76.0675, 0.37", "-35.7367, 135.776, -76.1988, 0.37", "-35.8018, 136.384, -76.8151, 0.37", "-35.8067, 136.574, -77.0244, 1.03", "-35.7553, 137.527, -78.1385, 1.03", "-35.7422, 137.628, -78.2486, 1.03", "-35.608, 138.335, -79.014, 1.33", "-35.4901, 139.079, -79.7894, 0.44", "-35.4583, 139.306, -80.0188, 0.44", "-35.443, 139.47, -80.1469, 0.29", "-35.4168, 140.057, -80.433, 0.29", "-35.4245, 140.113, -80.4616, 0.29", "-35.612, 140.595, -80.7012, 0.29", "-35.6396, 140.644, -80.7302, 0.29", "-36.0291, 141.218, -81.1051, 0.29", "-36.063, 141.261, -81.1374, 0.29", "-37.0936, 142.454, -82.1237, 0.37", "-37.7179, 143.123, -82.72, 0.66", "-38.3149, 143.729, -83.2939, 1.11", "-38.7553, 144.16, -83.7083, 1.4", "-39.6917, 145.036, -84.5853, 0.52", "-39.7242, 145.066, -84.6151, 0.52", "-40.446, 145.762, -85.2177, 0.52", "-40.5281, 145.845, -85.284, 0.52", "-41.5178, 146.904, -86.0355, 0.52", "-42.448, 147.872, -86.7452, 0.52", "-42.5993, 148.021, -86.8468, 0.52", "-43.3556, 148.669, -87.2821, 0.52", "-44.0186, 149.166, -87.5974, 0.88", "-44.0702, 149.194, -87.6208, 0.88", "-45.5073, 149.582, -88.1664, 0.29", "-46.1313, 149.629, -88.3705, 0.29", "-46.9754, 149.562, -88.6216, 0.29", "-47.0355, 149.55, -88.6367, 0.29", "-48.8072, 149.063, -88.9984, 0.59", "-49.7843, 148.797, -89.1411, 0.59", "-50.2468, 148.678, -89.2076, 0.29", "-51.1149, 148.517, -89.4606, 0.29", "-51.7252, 148.471, -89.7141, 0.29", "-51.8381, 148.472, -89.7691, 0.29", "-52.4173, 148.55, -90.119, 0.29", "-53.8661, 148.816, -91.0778, 0.29", "-54.9378, 149.026, -91.8007, 1.18", "-55.5026, 149.135, -92.1504, 1.18", "-55.5493, 149.142, -92.1757, 1.18", "-56.6831, 149.299, -92.6623, 0.29", "-57.5855, 149.413, -92.9148, 0.29", "-57.7896, 149.444, -92.9467, 0.29", "-58.8892, 149.651, -93.0866, 0.29", "-59.1744, 149.708, -93.1236, 0.29", "-59.658, 149.811, -93.1786, 0.74", "-60.3902, 149.978, -93.2507, 0.74", "-61.9348, 150.365, -93.4722, 0.37", "-62.0035, 150.384, -93.4835, 0.37", "-62.3236, 150.488, -93.5431, 0.29", "-63.2923, 150.848, -93.7598, 0.29", "-63.5384, 150.951, -93.8215, 0.74", "-63.6756, 151.019, -93.853, 0.74", "-64.0697, 151.26, -93.9075, 0.96", "-64.5179, 151.553, -94.024, 0.96", "-65.2642, 152.093, -94.3266, 0.59", "-65.3105, 152.129, -94.3496, 0.59", "-65.7054, 152.43, -94.5399, 0.22", "-65.7806, 152.473, -94.563, 0.22", "-66.4778, 152.784, -94.6964, 0.29", "-66.6186, 152.828, -94.7165, 0.29", "-67.4674, 153.043, -94.7916, 0.29", "-67.5379, 153.057, -94.7971, 0.29", "-68.9972, 153.224, -94.8527, 0.29", "-69.1236, 153.23, -94.8508, 0.29", "-70.1824, 153.234, -94.7724, 0.29", "-70.2454, 153.233, -94.7671, 0.29", "-70.8065, 153.212, -94.7393, 1.03", "-71.8474, 153.232, -94.7088, 1.25", "-72.3999, 153.272, -94.7032, 0.29", "-73.1351, 153.364, -94.8018, 0.29", "-73.2553, 153.386, -94.8308, 0.29", "-74.1655, 153.567, -95.1341, 0.66", "-74.7659, 153.685, -95.3586, 0.88", "-74.8235, 153.697, -95.3821, 0.88", "-76.8239, 154.076, -96.1161, 0.44", "-76.9498, 154.092, -96.1637, 0.44", "-77.7833, 154.136, -96.473, 0.44", "-78.8833, 154.103, -96.8181, 0.44", "-78.944, 154.099, -96.8354, 0.44", "-80.0112, 154.018, -97.0601, 1.18", "-81.4655, 153.896, -97.2463, 1.18", "-82.5975, 153.85, -97.4472, 0.29", "-83.6724, 153.859, -97.672, 0.29", "-83.7343, 153.864, -97.6842, 0.29", "-85.0068, 154.039, -97.9726, 0.29", "-85.0751, 154.052, -97.9921, 0.29", "-86.9893, 154.497, -98.6003, 0.29", "-87.663, 154.672, -98.8487, 1.11", "-88.8247, 154.971, -99.3737, 1.11", "-90.3686, 155.335, -100.133, 0.88", "-91.8453, 155.669, -100.924, 0.66", "-93.3778, 156.009, -101.753, 0.66", "-93.441, 156.024, -101.785, 0.66", "-94.9028, 156.397, -102.41, 0.29", "-95.3162, 156.543, -102.482, 0.29", "-95.6668, 156.77, -102.293, 0.29", "-95.9844, 157.037, -101.981, 0.29", "-97.1391, 158.191, -100.426, 0.29", "-98.0213, 159.116, -99.1327, 1.47", "-98.441, 159.587, -98.4704, 1.84", "-98.8399, 160.041, -97.8614, 1.84", "-98.8746, 160.081, -97.8118, 1.84", "-99.5341, 160.816, -96.9964, 0.74", "-99.8774, 161.185, -96.6936, 0.59", "-100.366, 161.792, -96.3319, 0.59", "-100.436, 161.893, -96.2761, 0.59", "-100.865, 162.59, -95.9395, 0.59", "-101.049, 162.9, -95.8148, 1.03", "-101.078, 162.953, -95.7933, 1.03", "-101.362, 163.57, -95.4428, 1.03", "-101.382, 163.619, -95.4075, 1.03", "-101.54, 163.983, -95.118, 0.66", "-101.581, 164.077, -95.031, 0.66", "-101.959, 164.995, -94.0739, 0.29", "-102.022, 165.146, -93.8972, 0.15", "-102.052, 165.22, -93.7875, 0.15", "-102.2, 165.616, -93.1721, 0.15" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-21.9096, 97.235, -26.791, 0.59", "-21.8432, 98.034, -26.7519, 0.59", "-21.7387, 99.2433, -26.6583, 0.44", "-21.6749, 100.108, -26.5838, 0.59", "-21.6021, 101.134, -26.4839, 0.59", "-21.5197, 102.225, -26.3739, 0.37", "-21.4201, 103.463, -26.2504, 0.22", "-21.4132, 103.547, -26.2425, 0.22", "-21.3056, 104.948, -26.1403, 0.22", "-21.2774, 105.323, -26.1041, 0.66", "-21.2628, 105.676, -26.0807, 0.66", "-21.252, 106.118, -26.0361, 0.66", "-21.2664, 106.422, -26.0344, 0.66", "-21.3248, 106.946, -26.0184, 0.66", "-21.3367, 107.03, -26.0156, 0.66", "-21.448, 107.915, -26.0288, 0.22", "-21.5607, 108.877, -26.0596, 0.22", "-21.6352, 109.729, -26.0971, 0.22", "-21.6447, 109.909, -26.1065, 0.22", "-21.7796, 113.907, -26.2831, 0.22", "-21.7871, 114.606, -26.3096, 0.59", "-21.7855, 114.69, -26.3125, 0.59", "-21.7571, 115.499, -26.3645, 0.88", "-21.7027, 116.36, -26.413, 0.88", "-21.6424, 117.071, -26.4413, 0.74", "-21.5338, 117.946, -26.4434, 0.52", "-21.5137, 118.14, -26.439, 0.29", "-21.4984, 118.343, -26.4366, 0.29", "-21.4548, 119.145, -26.4365, 0.29", "-21.4009, 120.301, -26.4511, 0.29", "-21.3962, 120.428, -26.4546, 0.29", "-21.377, 121.572, -26.484, 1.03", "-21.3592, 122.849, -26.5164, 1.4", "-21.3434, 123.627, -26.5366, 1.77", "-21.3407, 123.711, -26.5389, 1.77", "-21.3106, 124.708, -26.5656, 1.77", "-21.2698, 125.498, -26.5882, 1.03", "-21.2251, 126.142, -26.6077, 1.03", "-21.1633, 126.908, -26.6315, 1.03", "-21.122, 127.548, -26.6506, 0.96", "-21.1148, 127.667, -26.6577, 0.96", "-21.0444, 128.889, -26.758, 0.96", "-21.0365, 129.017, -26.7662, 0.96", "-21.0016, 129.642, -26.7985, 0.29", "-20.882, 131.057, -26.8546, 0.29", "-20.6406, 133.429, -26.9325, 0.29", "-20.6172, 133.627, -26.9381, 0.29", "-20.4406, 134.977, -26.9693, 0.29", "-20.4287, 135.06, -26.9709, 0.29", "-19.9108, 138.251, -27.0076, 0.29", "-19.881, 138.417, -27.0078, 0.29", "-19.7833, 138.933, -27.0017, 0.74", "-19.6012, 139.894, -27.0028, 1.18", "-19.4251, 140.841, -27.0298, 1.4", "-19.2365, 141.813, -27.033, 0.52", "-19.2197, 141.896, -27.0308, 0.52", "-19.0043, 142.82, -27.001, 0.52", "-18.9803, 142.913, -26.9989, 0.52", "-18.593, 144.337, -26.9754, 0.52", "-18.3142, 145.509, -26.9723, 0.52", "-18.2974, 145.591, -26.9765, 0.52", "-17.9022, 147.853, -27.152, 0.52", "-17.7629, 148.757, -27.2389, 0.37", "-17.7166, 149.1, -27.277, 0.37", "-17.4041, 151.945, -27.6312, 0.37", "-17.2378, 154.119, -27.915, 1.03", "-17.1799, 155.35, -28.0948, 1.55", "-17.1598, 156.821, -28.3292, 1.55", "-17.1562, 157.78, -28.486, 0.88", "-17.159, 158.925, -28.6826, 0.59", "-17.1809, 160.801, -29.0208, 0.59", "-17.2053, 162.039, -29.2249, 0.59", "-17.2075, 162.217, -29.2573, 0.59", "-17.2036, 163.068, -29.4225, 0.59", "-17.1997, 163.151, -29.4385, 0.59", "-17.111, 163.849, -29.5632, 0.81", "-17.0928, 163.931, -29.5725, 0.81", "-16.9245, 164.609, -29.6033, 0.81", "-16.7706, 165.307, -29.6646, 0.52", "-16.7392, 165.483, -29.6847, 0.52", "-16.6172, 166.278, -29.7879, 0.52", "-16.4498, 167.731, -29.9865, 0.52", "-16.4422, 167.815, -29.9954, 0.52", "-16.3664, 168.971, -30.096, 0.96", "-16.3231, 169.876, -30.1514, 0.96", "-16.32, 169.96, -30.1544, 0.96", "-16.279, 171.204, -30.1669, 0.96", "-16.2334, 172.146, -30.1498, 0.52", "-16.2251, 172.229, -30.147, 0.52", "-15.9291, 173.691, -30.0934, 0.52", "-15.7944, 174.22, -30.0894, 0.52", "-15.7379, 174.421, -30.0924, 0.52", "-15.509, 175.166, -30.1212, 0.37", "-14.9784, 176.835, -30.2256, 0.37", "-14.2373, 179.114, -30.4103, 0.37", "-14.0439, 179.697, -30.4693, 0.81", "-13.9883, 179.868, -30.489, 0.81", "-13.705, 180.779, -30.6025, 0.81", "-13.6815, 180.859, -30.6135, 0.81", "-13.3555, 182.17, -30.8141, 0.81", "-13.2279, 183.031, -30.9383, 0.52", "-13.1873, 183.447, -31.0173, 0.22", "-13.1837, 183.623, -31.0553, 0.22", "-13.2124, 184.226, -31.1968, 0.22", "-13.2268, 184.349, -31.2242, 0.22", "-13.5235, 185.916, -31.5355, 0.22", "-13.8086, 187.173, -31.7745, 0.81", "-14.0392, 188.06, -31.945, 0.81", "-14.0726, 188.183, -31.9675, 0.81", "-14.4636, 189.513, -32.1887, 0.81", "-14.7933, 190.662, -32.349, 1.11", "-14.8255, 190.786, -32.3623, 1.11", "-15.0238, 191.782, -32.4268, 1.47", "-15.1223, 192.776, -32.4452, 1.84", "-15.1701, 193.841, -32.4336, 1.99", "-15.1503, 194.89, -32.396, 1.03", "-15.0879, 195.707, -32.3516, 0.59", "-14.9817, 196.591, -32.2888, 0.44", "-14.4835, 199.309, -32.0445, 0.44", "-14.4633, 199.39, -32.0372, 0.44", "-14.2391, 200.164, -31.9914, 0.81", "-14.0362, 200.839, -31.9713, 0.81", "-14.0171, 200.921, -31.9729, 0.81", "-13.8338, 201.907, -32.0448, 0.81", "-13.7032, 202.869, -32.1661, 0.37", "-13.5895, 203.84, -32.2775, 0.37", "-13.5799, 203.935, -32.2878, 0.37", "-13.2974, 206.547, -32.5471, 0.37", "-13.2784, 206.712, -32.562, 0.37", "-13.0783, 208.968, -32.7283, 0.37", "-13.0141, 209.796, -32.774, 0.37", "-12.9878, 210.067, -32.7719, 0.37", "-12.8828, 211.032, -32.7272, 0.37", "-12.8422, 211.375, -32.6905, 0.37", "-12.7342, 212.993, -32.4312, 0.37", "-12.7393, 213.086, -32.4091, 0.37", "-12.9227, 214.261, -32.1339, 0.37", "-12.9562, 214.421, -32.0978, 0.37", "-13.1417, 215.211, -31.9422, 0.37", "-13.1896, 215.45, -31.9075, 0.37", "-13.3392, 216.767, -31.7885, 0.37", "-13.4571, 217.887, -31.7365, 0.37", "-13.4672, 217.983, -31.7362, 0.37", "-13.5704, 219.112, -31.7305, 0.37", "-13.6455, 220.159, -31.7352, 0.37", "-13.7221, 221.528, -31.7512, 1.25", "-13.7643, 222.715, -31.7707, 1.55", "-13.7842, 223.141, -31.7794, 1.55", "-13.7936, 223.277, -31.7825, 1.55", "-13.9118, 224.359, -31.8937, 0.59", "-13.9276, 224.452, -31.9104, 0.59", "-14.0253, 224.879, -32.0081, 0.59", "-14.3203, 226.409, -32.3531, 0.59", "-14.3352, 226.489, -32.3727, 0.59", "-14.6172, 227.977, -32.7491, 0.59", "-14.8286, 229.105, -33.064, 0.59", "-15.0504, 230.473, -33.4608, 0.29", "-15.2565, 232.135, -33.9449, 0.29", "-15.3677, 233.479, -34.3325, 0.81", "-15.3714, 233.56, -34.3529, 0.81", "-15.3732, 234.323, -34.5076, 0.81", "-15.3388, 235.549, -34.7451, 0.52", "-15.2924, 236.743, -34.9433, 0.52", "-15.2903, 236.827, -34.9571, 0.52", "-15.2531, 238.408, -35.1888, 0.52", "-15.2503, 238.587, -35.2148, 0.52", "-15.2354, 239.992, -35.3973, 0.96", "-15.2176, 241.034, -35.521, 0.96", "-15.1583, 242.224, -35.6475, 0.66", "-15.0766, 243.164, -35.7342, 0.44", "-14.9369, 244.201, -35.8164, 0.44", "-14.6036, 246.09, -35.8904, 0.44", "-14.3483, 247.275, -35.8987, 1.18", "-14.05, 248.571, -35.8657, 1.92", "-13.7466, 249.844, -35.7942, 2.21", "-13.3694, 251.379, -35.7007, 1.69", "-12.9135, 253.236, -35.5906, 0.59", "-12.8913, 253.329, -35.5858, 0.59", "-12.6515, 254.448, -35.5462, 0.59", "-12.3568, 256.066, -35.5013, 0.52", "-12.3443, 256.149, -35.5002, 0.52", "-12.1436, 257.893, -35.562, 0.81", "-12.0341, 259.012, -35.6497, 1.03", "-11.9524, 259.869, -35.7262, 1.03", "-11.836, 261.02, -35.8394, 0.44", "-11.7006, 262.317, -35.972, 0.44", "-11.5054, 264.36, -36.1689, 0.44", "-11.4457, 265.05, -36.2434, 0.81", "-11.3468, 266.336, -36.3886, 0.81", "-11.2466, 267.73, -36.5497, 0.52", "-11.1535, 269.206, -36.7163, 0.37", "-11.0626, 271.68, -36.9823, 0.29", "-11.0539, 272.785, -37.0891, 0.81", "-11.0705, 273.327, -37.1568, 1.03", "-11.0767, 273.41, -37.1697, 1.03", "-11.2246, 274.575, -37.3493, 1.03", "-11.4834, 276.13, -37.5677, 0.52", "-11.4952, 276.2, -37.5751, 0.52", "-11.65, 277.238, -37.6211, 0.52", "-11.6591, 277.334, -37.6227, 0.52", "-11.7154, 278.39, -37.6083, 0.52", "-11.6709, 279.268, -37.5711, 0.29", "-11.5653, 280.129, -37.513, 0.29", "-11.5545, 280.213, -37.5102, 0.29", "-11.4023, 281.331, -37.4977, 0.29", "-11.3531, 281.731, -37.5166, 0.29", "-11.1537, 283.47, -37.7139, 0.29", "-11.1457, 283.552, -37.7242, 0.29", "-11.0474, 284.546, -37.8517, 0.29", "-11.0111, 284.937, -37.901, 0.96", "-10.939, 285.792, -38.0087, 0.96", "-10.93, 285.887, -38.0198, 0.96", "-10.8197, 287.172, -38.1491, 0.88", "-10.7538, 287.759, -38.1922, 0.29", "-10.7004, 288.278, -38.2093, 0.22", "-10.6935, 288.362, -38.212, 0.22", "-10.6881, 289.063, -38.2643, 0.22", "-10.6965, 289.254, -38.2852, 0.22", "-10.7498, 290.116, -38.4327, 0.81", "-10.7963, 291.149, -38.6465, 1.11", "-10.7931, 291.336, -38.7119, 1.11", "-10.7368, 292.332, -39.1682, 0.81", "-10.7273, 292.405, -39.2078, 0.81", "-10.5608, 293.194, -39.6793, 0.96", "-10.3199, 293.98, -40.1625, 0.96", "-9.84861, 295.278, -40.7305, 0.15", "-9.79449, 295.443, -40.7768, 0.15", "-9.471, 296.454, -40.9712, 0.15", "-9.40726, 296.722, -41.0048, 0.15", "-9.22897, 297.761, -41.0577, 0.15", "-8.88503, 300.218, -41.0609, 0.15", "-8.69969, 301.779, -40.9956, 0.15", "-8.68923, 301.875, -40.9914, 0.15", "-8.52475, 303.693, -40.9025, 0.15", "-8.4184, 304.98, -40.84, 1.03", "-8.35253, 305.928, -40.7947, 1.25", "-8.34185, 306.107, -40.7884, 1.25", "-8.27702, 306.899, -40.7613, 1.25", "-8.26036, 307.025, -40.7588, 1.25", "-8.12218, 307.628, -40.7622, 0.66", "-8.09864, 307.721, -40.7664, 0.66", "-7.88628, 308.578, -40.8054, 0.52", "-7.81724, 308.852, -40.818, 0.29", "-7.64449, 309.536, -40.8493, 0.29", "-7.59927, 309.71, -40.8574, 0.29", "-7.29124, 310.891, -40.9258, 0.29", "-7.27534, 310.974, -40.9308, 0.29", "-7.12853, 311.945, -40.9899, 0.29", "-7.06823, 312.548, -41.0325, 0.52", "-7.05212, 312.896, -41.0604, 0.52", "-7.04349, 313.703, -41.13, 0.22", "-7.106, 315.816, -41.3189, 0.22", "-7.10963, 315.899, -41.3261, 0.22", "-7.15456, 316.647, -41.3917, 0.96", "-7.15533, 317.354, -41.4197, 0.96", "-7.10613, 318.074, -41.407, 0.29", "-6.99988, 318.867, -41.3561, 0.29", "-6.80946, 319.81, -41.2677, 0.29", "-6.79379, 319.88, -41.2607, 0.29", "-6.32174, 321.827, -41.0499, 0.29", "-5.93107, 323.359, -40.8845, 1.25", "-5.69437, 324.286, -40.7967, 1.92", "-5.54762, 324.878, -40.7501, 1.92", "-5.28222, 326.063, -40.6843, 0.52", "-5.23456, 326.321, -40.6684, 0.52", "-5.16825, 326.846, -40.6429, 0.44", "-5.0146, 328.148, -40.5862, 0.44", "-4.96549, 328.577, -40.5657, 0.81", "-4.91336, 329.277, -40.5402, 0.81", "-4.86848, 330.32, -40.5375, 0.22", "-4.86447, 330.488, -40.5415, 0.22", "-4.84595, 332.338, -40.6235, 0.22", "-4.84489, 332.41, -40.6317, 0.22", "-4.79252, 334.921, -41.0536, 0.22", "-4.73435, 336.172, -41.3272, 0.59", "-4.67127, 337.104, -41.5773, 0.96", "-4.66366, 337.197, -41.6026, 0.96", "-4.50423, 338.753, -42.038, 0.96", "-4.48184, 338.913, -42.0857, 0.96", "-4.27204, 339.809, -42.3997, 0.96", "-4.25266, 339.899, -42.4268, 0.96", "-4.12179, 340.657, -42.6121, 0.22", "-4.11032, 340.831, -42.656, 0.22", "-4.12003, 341.435, -42.7939, 0.22", "-4.13584, 341.621, -42.841, 0.22", "-4.26063, 342.557, -43.1115, 0.22", "-4.27193, 342.638, -43.1347, 0.22", "-4.55157, 344.824, -43.8496, 0.22", "-4.56198, 344.904, -43.8757, 0.22", "-4.71618, 346.114, -44.275, 0.22", "-4.77562, 346.618, -44.4451, 0.96", "-4.90119, 347.819, -44.831, 1.25", "-5.02903, 349.09, -45.2051, 1.03", "-5.13401, 350.14, -45.4828, 0.44", "-5.26239, 351.478, -45.8279, 0.22", "-5.37229, 352.716, -46.1389, 1.18", "-5.49077, 354.218, -46.4753, 1.84", "-5.55303, 355.162, -46.6668, 1.33", "-5.55679, 355.245, -46.6795, 1.33", "-5.56333, 356.143, -46.7956, 0.22", "-5.55651, 356.516, -46.8249, 0.22", "-5.50512, 357.657, -46.8639, 0.22", "-5.49319, 357.824, -46.8683, 0.22", "-5.427, 358.541, -46.8823, 0.74", "-5.37457, 359.088, -46.8819, 0.22", "-5.27443, 360.05, -46.8689, 0.22", "-5.26627, 360.133, -46.8666, 0.22", "-5.09391, 362.139, -46.7881, 0.22", "-5.03062, 362.947, -46.7688, 0.22", "-4.95895, 364.09, -46.7518, 1.33", "-4.91988, 364.777, -46.7453, 1.33", "-4.86928, 365.847, -46.7414, 0.52", "-4.86654, 365.931, -46.7416, 0.52", "-4.84859, 367.815, -46.7744, 0.29", "-4.85406, 369.613, -46.7304, 0.29", "-4.85571, 369.96, -46.7138, 0.59", "-4.86281, 370.756, -46.6535, 0.59", "-4.8635, 370.84, -46.6453, 0.59", "-4.88141, 374.377, -46.1973, 0.22", "-4.87925, 375.847, -45.9556, 0.29", "-4.87769, 376.012, -45.9268, 0.29", "-4.8734, 376.541, -45.8407, 0.29", "-4.87202, 376.805, -45.8052, 0.29", "-4.86604, 377.604, -45.7304, 0.29", "-4.85167, 378.64, -45.6932, 0.22", "-4.85035, 378.736, -45.6948, 0.22", "-4.82676, 380.176, -45.7445, 0.22", "-4.7996, 381.844, -45.8232, 0.22", "-4.79702, 382.808, -45.8785, 1.33", "-4.81049, 383.933, -45.9539, 1.47", "-4.81379, 384.017, -45.9599, 1.47", "-4.88555, 385.205, -46.0236, 0.22", "-4.89493, 385.324, -46.0285, 0.22", "-5.01083, 386.646, -46.062, 0.22", "-5.05445, 387.087, -46.0783, 0.22", "-5.18771, 388.418, -46.142, 0.22", "-5.33234, 390.122, -46.2174, 0.22", "-5.34264, 390.29, -46.2241, 0.22", "-5.42214, 392.134, -46.3061, 0.22", "-5.48612, 394.367, -46.4173, 0.22", "-5.51162, 395.711, -46.4915, 1.11", "-5.51854, 397.041, -46.5755, 1.4", "-5.50655, 398.514, -46.6805, 1.4", "-5.50508, 398.587, -46.6852, 1.4", "-5.47419, 399.256, -46.7165, 1.4", "-5.46678, 399.34, -46.7179, 1.33", "-5.40701, 399.944, -46.7523, 0.22", "-5.27879, 401.251, -46.8884, 0.22", "-5.26199, 401.418, -46.9103, 0.22", "-5.08212, 403.236, -47.0843, 0.22", "-5.06451, 403.415, -47.0971, 0.22", "-4.97797, 404.503, -47.1428, 0.22", "-4.96081, 404.766, -47.1468, 0.22", "-4.8984, 405.811, -47.1329, 0.74", "-4.82689, 406.893, -47.1575, 0.22", "-4.82219, 406.977, -47.1609, 0.22", "-4.77444, 408.119, -47.219, 0.22", "-4.76771, 408.299, -47.2288, 0.22", "-4.70199, 411.247, -47.4551, 0.22", "-4.68149, 412.569, -47.5909, 0.22", "-4.6694, 413.335, -47.6886, 0.88", "-4.65689, 414.49, -47.8257, 1.33", "-4.65506, 414.687, -47.847, 1.33", "-4.63122, 416.344, -47.9989, 1.33", "-4.62919, 416.428, -48.0042, 1.33", "-4.55178, 417.915, -48.047, 1.33", "-4.49287, 418.783, -48.0731, 0.66", "-4.42389, 419.657, -48.1001, 0.66", "-4.36249, 420.365, -48.1478, 0.44", "-4.29716, 420.977, -48.211, 0.29", "-4.27982, 421.142, -48.2321, 0.29", "-4.13425, 422.614, -48.4625, 0.29", "-4.13067, 422.709, -48.4766, 0.29", "-4.13421, 424.014, -48.6609, 0.29", "-4.13826, 424.182, -48.6796, 0.29", "-4.17752, 425.573, -48.7099, 0.29", "-4.19108, 425.964, -48.6882, 0.29", "-4.28381, 428.364, -48.375, 0.29", "-4.29069, 428.54, -48.3415, 0.29", "-4.31512, 429.302, -48.1413, 1.03", "-4.32527, 430.849, -47.7044, 1.03", "-4.3079, 431.52, -47.493, 1.25", "-4.30288, 431.589, -47.4734, 1.25", "-4.22033, 432.232, -47.3388, 0.88", "-4.14479, 432.924, -47.2704, 0.44", "-4.08507, 433.635, -47.2829, 0.22", "-4.06206, 433.969, -47.3212, 0.22", "-3.96152, 435.573, -47.5039, 0.22", "-3.92721, 436.312, -47.5842, 0.22", "-3.91878, 436.879, -47.6299, 0.59", "-3.91638, 437.44, -47.64, 0.59", "-3.9165, 437.524, -47.6367, 0.59", "-3.91173, 438.59, -47.546, 0.22", "-3.90668, 438.793, -47.5191, 0.22", "-3.82967, 441.143, -47.0965, 0.22", "-3.79728, 441.924, -46.9396, 0.59", "-3.76852, 442.637, -46.7571, 0.22", "-3.76439, 442.718, -46.7352, 0.22", "-3.69974, 443.805, -46.4426, 0.22", "-3.56225, 445.792, -45.8834, 0.22", "-3.54827, 445.942, -45.8493, 0.22", "-3.3272, 448.049, -45.6028, 0.22", "-3.15436, 449.523, -45.535, 0.22", "-2.99301, 450.826, -45.5438, 0.37", "-2.84247, 451.988, -45.6193, 0.74", "-2.57581, 453.906, -45.8709, 1.47", "-2.31663, 455.968, -46.1606, 1.77", "-2.14836, 457.425, -46.409, 1.77", "-2.14103, 457.509, -46.4201, 1.77", "-2.07278, 458.456, -46.5078, 0.74", "-2.00296, 459.774, -46.5636, 0.74", "-1.9672, 461.116, -46.4706, 0.22", "-1.96444, 461.283, -46.4506, 0.22", "-1.9359, 463.565, -46.2755, 0.22", "-1.93404, 463.649, -46.2729, 0.22", "-1.91511, 464.173, -46.2859, 0.44", "-1.90461, 464.352, -46.3034, 0.44", "-1.75927, 466.162, -46.6096, 0.44", "-1.68595, 467.103, -46.7799, 0.74", "-1.66618, 467.36, -46.8238, 0.74", "-1.63496, 467.788, -46.8876, 0.74", "-1.57457, 468.487, -46.9781, 0.44", "-1.44738, 469.74, -47.1078, 0.44", "-1.43758, 469.823, -47.114, 0.44", "-1.10571, 472.16, -47.199, 0.44", "-1.09245, 472.243, -47.2022, 0.44", "-0.956736, 472.982, -47.2317, 0.37", "-0.784584, 473.831, -47.2774, 0.37", "-0.765878, 473.913, -47.2828, 0.37", "-0.555583, 474.863, -47.352, 0.22", "-0.517381, 475.039, -47.3661, 0.22", "-0.183298, 476.657, -47.4893, 0.22", "-0.00935105, 477.537, -47.554, 0.96", "0.159934, 478.4, -47.6159, 0.96", "0.356676, 479.326, -47.7233, 0.22", "0.431271, 479.663, -47.7747, 0.22", "0.977926, 481.936, -48.1973, 0.22", "1.13511, 482.509, -48.3274, 0.88", "1.15903, 482.587, -48.3475, 0.88", "1.5858, 483.884, -48.7409, 1.25", "1.71523, 484.24, -48.8683, 1.25", "1.74224, 484.315, -48.8966, 1.25", "1.96977, 484.941, -49.1602, 0.29", "1.99142, 485.02, -49.1793, 0.29", "2.04681, 485.263, -49.212, 0.29", "2.06479, 485.358, -49.2108, 0.29", "2.23688, 486.485, -49.1594, 0.22", "2.27138, 486.759, -49.1414, 0.22", "2.44219, 488.381, -49.0047, 0.22", "2.45215, 488.476, -48.9958, 0.22", "2.55329, 489.457, -48.8966, 0.96", "2.63537, 490.336, -48.8035, 0.96", "2.64963, 490.523, -48.7656, 0.96", "2.67275, 490.867, -48.6755, 0.66", "2.68901, 491.453, -48.518, 0.66", "2.68778, 491.629, -48.4753, 0.66", "2.65394, 492.829, -48.207, 0.52", "2.56451, 494.557, -47.8329, 0.22", "2.5483, 494.732, -47.7934, 0.22", "2.23604, 497.026, -47.2754, 0.22", "2.13131, 497.618, -47.0916, 0.81", "2.10059, 497.786, -47.0322, 0.81", "1.97788, 498.525, -46.6974, 0.81", "1.86467, 499.749, -46.1261, 0.15", "1.85353, 500.339, -45.7996, 0.15", "1.89119, 502.363, -44.527, 0.15", "1.94687, 503.529, -43.7636, 0.15", "2.06771, 505.098, -42.7052, 0.15", "2.30809, 506.897, -41.4413, 1.4", "2.52657, 507.968, -40.6879, 1.4" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-189.997, 90.723, -147.048, 0.22", "-191.552, 90.8598, -148.139, 0.22", "-192.487, 90.9626, -148.706, 0.22", "-193.631, 91.1181, -149.281, 0.22", "-193.697, 91.1282, -149.31, 0.22", "-194.544, 91.2695, -149.635, 0.22", "-194.602, 91.2795, -149.655, 0.22", "-195.446, 91.4268, -149.874, 1.25", "-196.704, 91.6092, -150.189, 1.25", "-197.391, 91.6831, -150.356, 0.22", "-198.872, 91.8201, -150.774, 0.22", "-199.092, 91.839, -150.841, 0.22", "-200.558, 91.9721, -151.336, 0.22", "-200.919, 92.0095, -151.471, 0.22", "-202.13, 92.1409, -151.952, 0.22", "-203.595, 92.2989, -152.555, 0.22", "-203.952, 92.3391, -152.707, 1.11", "-204.029, 92.349, -152.739, 1.11", "-204.953, 92.4913, -153.119, 1.11", "-205.031, 92.4999, -153.148, 1.11", "-206.219, 92.5712, -153.542, 0.22", "-206.288, 92.5745, -153.565, 0.22", "-207.286, 92.6238, -153.952, 0.22", "-207.446, 92.6418, -154.021, 0.22", "-208.503, 92.7666, -154.508, 0.22", "-208.578, 92.7778, -154.545, 0.22", "-209.648, 93.0139, -155.141, 0.22", "-209.771, 93.0465, -155.215, 0.22", "-210.786, 93.4334, -155.946, 0.96" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-189.997, 90.723, -147.048, 0.22", "-190.157, 91.6567, -147.16, 0.22", "-190.165, 91.7031, -147.168, 0.22", "-190.31, 92.4685, -147.29, 0.22", "-190.326, 92.5661, -147.314, 0.22", "-190.456, 93.3206, -147.494, 0.22", "-190.725, 94.8867, -147.868, 0.22", "-190.739, 94.9769, -147.892, 0.22", "-190.82, 95.496, -148.051, 0.22", "-190.971, 96.4286, -148.414, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-144.767, 58.1426, -115.702, 0.66", "-144.989, 57.6951, -115.792, 0.66", "-145.25, 57.1782, -115.889, 0.66", "-145.63, 56.4719, -116.045, 0.44", "-145.962, 55.9089, -116.205, 0.52", "-146.211, 55.5114, -116.333, 0.52", "-146.621, 54.9404, -116.55, 0.22", "-146.651, 54.9038, -116.568, 0.22", "-147.223, 54.3316, -116.936, 0.22", "-147.652, 54.0101, -117.233, 0.88", "-147.729, 53.9722, -117.285, 0.88", "-148.461, 53.7444, -117.774, 0.88", "-148.502, 53.7355, -117.803, 0.88", "-149.087, 53.6409, -118.201, 0.44", "-149.552, 53.6202, -118.502, 0.22", "-150.33, 53.6235, -118.979, 0.22", "-150.522, 53.6313, -119.096, 0.59" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-144.767, 58.1426, -115.702, 0.22", "-145.396, 58.5658, -115.942, 0.22", "-146.021, 58.9786, -116.19, 0.22", "-147.078, 59.6762, -116.609, 0.22", "-147.908, 60.2238, -116.937, 0.22", "-147.993, 60.2798, -116.971, 0.22", "-149.128, 61.0291, -117.421, 0.22", "-149.188, 61.0739, -117.453, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-189.176, -193.154, 134.907, 0.29", "-197.062, -196.164, 139.173, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-189.176, -193.154, 134.907, 0.29", "-201.468, -197.911, 140.528, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-167.564, -245.198, 78.8677, 0.29", "-169.857, -252.852, 77.3489, 0.29" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-167.564, -245.198, 78.8677, 0.29", "-177.422, -255.125, 75.2312, 0.29" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "225.915, 279.169, -92.9181, 0.15", "229.164, 280.814, -95.6803, 0.15", "230.249, 281.381, -96.4625, 0.96", "230.38, 281.449, -96.5472, 0.96", "231.955, 282.262, -97.4266, 0.15", "232.053, 282.312, -97.4759, 0.15", "233.535, 282.992, -97.933, 0.15", "234.068, 283.181, -97.8226, 0.52", "234.164, 283.21, -97.7902, 0.52", "235.059, 283.434, -97.4131, 0.66", "235.154, 283.451, -97.3689, 0.66", "238.086, 283.928, -96.2177, 0.15", "239.888, 284.169, -95.6497, 0.15", "240.134, 284.203, -95.585, 0.96", "240.354, 284.231, -95.5402, 0.96", "242.063, 284.458, -95.2202, 0.15", "244.693, 284.847, -94.7766, 0.15", "246.476, 285.132, -94.5446, 0.15", "246.706, 285.17, -94.5085, 0.15", "248.533, 285.498, -94.1813, 0.15", "251.32, 286.034, -93.6761, 0.15", "252.102, 286.231, -93.5379, 0.88", "252.3, 286.295, -93.5089, 0.88", "252.803, 286.511, -93.4643, 0.88", "252.91, 286.566, -93.4688, 0.88", "253.99, 287.171, -93.5722, 0.22", "256.905, 288.865, -94.0619, 0.22", "257.758, 289.361, -94.2146, 0.66", "261.602, 291.593, -94.8906, 0.15", "263.834, 292.87, -95.2693, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "225.915, 279.169, -92.9181, 0.15", "226.535, 279.944, -93.0912, 0.15", "227.231, 280.814, -93.2857, 0.15", "227.27, 280.862, -93.2964, 0.15", "228.444, 282.328, -93.6241, 1.03" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "186.878, 236.553, -84.4465, 0.29", "189.147, 236.051, -85.3793, 0.29", "189.222, 236.032, -85.4073, 0.29", "190.381, 235.742, -85.8285, 0.74", "191.105, 235.586, -86.0044, 0.74", "191.979, 235.41, -86.1701, 0.74", "192.047, 235.397, -86.1847, 0.74", "193.186, 235.186, -86.3142, 0.22", "193.255, 235.172, -86.3232, 0.22", "195.132, 234.78, -86.5807, 0.22", "195.21, 234.762, -86.5908, 0.22", "196.349, 234.524, -86.7104, 0.52", "196.419, 234.509, -86.7124, 0.52", "197.116, 234.373, -86.6478, 0.52", "197.335, 234.344, -86.6117, 0.52", "197.998, 234.331, -86.4097, 0.22", "198.065, 234.337, -86.3839, 0.22", "198.612, 234.412, -86.1619, 0.22", "198.896, 234.456, -86.062, 0.22", "199.716, 234.564, -85.8212, 0.22", "199.853, 234.577, -85.7873, 0.22", "201.105, 234.676, -85.5355, 0.22", "201.69, 234.688, -85.4965, 0.74", "201.761, 234.684, -85.4995, 0.74", "202.826, 234.545, -85.6194, 0.74", "202.905, 234.53, -85.6319, 0.74", "203.152, 234.488, -85.691, 1.03", "204.839, 234.24, -86.2307, 0.52", "205.802, 234.128, -86.5286, 0.22", "205.869, 234.121, -86.5496, 0.22", "206.43, 234.078, -86.731, 0.59", "207.605, 233.996, -87.0774, 0.59", "207.774, 233.981, -87.1136, 0.59", "208.683, 233.901, -87.1956, 0.59", "208.764, 233.893, -87.2019, 0.59", "209.434, 233.808, -87.23, 0.96", "209.514, 233.794, -87.2307, 0.96", "210.513, 233.566, -87.1428, 0.96", "210.592, 233.546, -87.1363, 0.96", "211.32, 233.366, -87.0815, 0.44", "211.388, 233.348, -87.074, 0.44" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "186.878, 236.553, -84.4465, 0.29", "187.299, 235.345, -84.5928, 0.29", "187.752, 234.045, -84.7503, 0.29", "187.99, 233.363, -84.8327, 0.29" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_77", "dend_74", "dend_35", "dend_0", "dend_79", "dend_78", "dend_76", "dend_75", "dend_51", "dend_36", "dend_30", "dend_1", "dend_53", "dend_52", "dend_42", "dend_37", "dend_32", "dend_31", "dend_5", "dend_2", "dend_57", "dend_54", "dend_50", "dend_43", "dend_41", "dend_38", "dend_34", "dend_33", "dend_17", "dend_6", "dend_4", "dend_3", "dend_69", "dend_58", "dend_56", "dend_55", "dend_47", "dend_44", "dend_40", "dend_39", "dend_29", "dend_18", "dend_10", "dend_7", "dend_73", "dend_70", "dend_64", "dend_59", "dend_49", "dend_48", "dend_46", "dend_45", "dend_22", "dend_19", "dend_14", "dend_11", "dend_9", "dend_8", "dend_72", "dend_71", "dend_66", "dend_65", "dend_61", "dend_60", "dend_26", "dend_23", "dend_21", "dend_20", "dend_16", "dend_15", "dend_13", "dend_12", "dend_68", "dend_67", "dend_63", "dend_62", "dend_28", "dend_27", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_77", "dend_74", "dend_35", "dend_0", "dend_79", "dend_78", "dend_76", "dend_75", "dend_51", "dend_36", "dend_30", "dend_1", "dend_53", "dend_52", "dend_42", "dend_37", "dend_32", "dend_31", "dend_5", "dend_2", "dend_57", "dend_54", "dend_50", "dend_43", "dend_41", "dend_38", "dend_34", "dend_33", "dend_17", "dend_6", "dend_4", "dend_3", "dend_69", "dend_58", "dend_56", "dend_55", "dend_47", "dend_44", "dend_40", "dend_39", "dend_29", "dend_18", "dend_10", "dend_7", "dend_73", "dend_70", "dend_64", "dend_59", "dend_49", "dend_48", "dend_46", "dend_45", "dend_22", "dend_19", "dend_14", "dend_11", "dend_9", "dend_8", "dend_72", "dend_71", "dend_66", "dend_65", "dend_61", "dend_60", "dend_26", "dend_23", "dend_21", "dend_20", "dend_16", "dend_15", "dend_13", "dend_12", "dend_68", "dend_67", "dend_63", "dend_62", "dend_28", "dend_27", "dend_25", "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_68", "dend_67", "dend_63", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_LBC_05f55c6541_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_77, id: dend_77, parent: soma_0
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: soma_0
create dend_74
public dend_74
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_51, id: dend_51, parent: dend_35
create dend_51
public dend_51
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_0
create dend_30
public dend_30
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_42
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_5
create dend_17
public dend_17
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_69, id: dend_69, parent: dend_57
create dend_69
public dend_69
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_29, id: dend_29, parent: dend_17
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_73, id: dend_73, parent: dend_69
create dend_73
public dend_73
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_64, id: dend_64, parent: dend_58
create dend_64
public dend_64
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_77, dend_74, dend_35, dend_0, dend_79, dend_78, dend_76, dend_75, dend_51, dend_36, dend_30, dend_1, dend_53, dend_52, dend_42, dend_37, dend_32, dend_31, dend_5, dend_2, dend_57, dend_54, dend_50, dend_43, dend_41, dend_38, dend_34, dend_33, dend_17, dend_6, dend_4, dend_3, dend_69, dend_58, dend_56, dend_55, dend_47, dend_44, dend_40, dend_39, dend_29, dend_18, dend_10, dend_7, dend_73, dend_70, dend_64, dend_59, dend_49, dend_48, dend_46, dend_45, dend_22, dend_19, dend_14, dend_11, dend_9, dend_8, dend_72, dend_71, dend_66, dend_65, dend_61, dend_60, dend_26, dend_23, dend_21, dend_20, dend_16, dend_15, dend_13, dend_12, dend_68, dend_67, dend_63, dend_62, dend_28, dend_27, dend_25, dend_24]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_77, dend_74, dend_35, dend_0, dend_79, dend_78, dend_76, dend_75, dend_51, dend_36, dend_30, dend_1, dend_53, dend_52, dend_42, dend_37, dend_32, dend_31, dend_5, dend_2, dend_57, dend_54, dend_50, dend_43, dend_41, dend_38, dend_34, dend_33, dend_17, dend_6, dend_4, dend_3, dend_69, dend_58, dend_56, dend_55, dend_47, dend_44, dend_40, dend_39, dend_29, dend_18, dend_10, dend_7, dend_73, dend_70, dend_64, dend_59, dend_49, dend_48, dend_46, dend_45, dend_22, dend_19, dend_14, dend_11, dend_9, dend_8, dend_72, dend_71, dend_66, dend_65, dend_61, dend_60, dend_26, dend_23, dend_21, dend_20, dend_16, dend_15, dend_13, dend_12, dend_68, dend_67, dend_63, dend_62, dend_28, dend_27, dend_25, dend_24]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_81
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_68, dend_67, dend_63, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_77(0), soma_0(0.4500000058507499)
    connect dend_74(0), soma_0(0.4500000058507499)
    connect dend_35(0), soma_0(0.4500000058507499)
    connect dend_0(0), soma_0(0.4500000058507499)
    connect axon_0(0), soma_0(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_51(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_69(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_29(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_73(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_64(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.99972, -12.0853, -1.00194, 2.76544 ) }
    soma_0 { pt3dadd( -0.863765, -10.9633, -0.891247, 4.3109 ) }
    soma_0 { pt3dadd( -0.72781, -9.84136, -0.780557, 4.96188 ) }
    soma_0 { pt3dadd( -0.591856, -8.71938, -0.669868, 5.8069 ) }
    soma_0 { pt3dadd( -0.455901, -7.5974, -0.559178, 7.05068 ) }
    soma_0 { pt3dadd( -0.319946, -6.47541, -0.448489, 8.73524 ) }
    soma_0 { pt3dadd( -0.183991, -5.35343, -0.337799, 10.5744 ) }
    soma_0 { pt3dadd( -0.0480362, -4.23145, -0.22711, 11.5548 ) }
    soma_0 { pt3dadd( 0.0879186, -3.10947, -0.11642, 12.9301 ) }
    soma_0 { pt3dadd( 0.223873, -1.98748, -0.00573068, 14.0229 ) }
    soma_0 { pt3dadd( 0.359828, -0.8655, 0.104959, 14.2607 ) }
    soma_0 { pt3dadd( 0.495783, 0.256482, 0.215648, 14.2925 ) }
    soma_0 { pt3dadd( 0.631738, 1.37846, 0.326338, 14.2253 ) }
    soma_0 { pt3dadd( 0.767693, 2.50045, 0.437027, 14.0078 ) }
    soma_0 { pt3dadd( 0.903648, 3.62243, 0.547717, 13.5909 ) }
    soma_0 { pt3dadd( 1.0396, 4.74441, 0.658406, 13.2474 ) }
    soma_0 { pt3dadd( 1.17556, 5.8664, 0.769096, 12.726 ) }
    soma_0 { pt3dadd( 1.31151, 6.98838, 0.879785, 11.4933 ) }
    soma_0 { pt3dadd( 1.44747, 8.11036, 0.990475, 10.1298 ) }
    soma_0 { pt3dadd( 1.58342, 9.23234, 1.10116, 8.27129 ) }
    soma_0 { pt3dadd( 1.71938, 10.3543, 1.21185, 4.6666 ) }
    // Section: dend_77, id: dend_77, parent: soma_0 (entry count 21/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 2.28033, 5.327, 12.739, 0.96 ) }
    dend_77 { pt3dadd( 2.31382, 5.40837, 12.739, 0.96 ) }
    dend_77 { pt3dadd( 2.58115, 6.12004, 12.739, 0.96 ) }
    dend_77 { pt3dadd( 2.63606, 6.28364, 12.739, 0.96 ) }
    dend_77 { pt3dadd( 2.87841, 7.06496, 12.739, 0.96 ) }
    dend_77 { pt3dadd( 3.24791, 8.32111, 12.739, 1.25 ) }
    dend_77 { pt3dadd( 3.39346, 8.88444, 12.739, 1.25 ) }
    dend_77 { pt3dadd( 3.61307, 9.90265, 12.6612, 0.81 ) }
    dend_77 { pt3dadd( 3.7435, 10.9182, 12.5153, 0.81 ) }
    dend_77 { pt3dadd( 3.78051, 11.4668, 12.4068, 1.11 ) }
    dend_77 { pt3dadd( 3.77764, 11.5406, 12.3874, 1.11 ) }
    dend_77 { pt3dadd( 3.5696, 12.4059, 12.1113, 1.33 ) }
    dend_77 { pt3dadd( 2.95408, 13.852, 11.6561, 1.33 ) }
    dend_77 { pt3dadd( 2.50636, 14.6749, 11.3975, 0.96 ) }
    dend_77 { pt3dadd( 2.47359, 14.7295, 11.3821, 0.96 ) }
    dend_77 { pt3dadd( 2.09635, 15.3236, 11.2428, 0.96 ) }
    dend_77 { pt3dadd( 1.2991, 16.5529, 11.017, 0.96 ) }
    dend_77 { pt3dadd( 0.520156, 17.6923, 10.9405, 0.96 ) }
    dend_77 { pt3dadd( 0.176497, 18.1675, 10.9746, 1.4 ) }
    dend_77 { pt3dadd( -0.343267, 18.8828, 11.1079, 1.4 ) }
    dend_77 { pt3dadd( -0.775374, 19.4847, 11.2779, 0.96 ) }
    dend_77 { pt3dadd( -0.810605, 19.535, 11.3008, 0.96 ) }
    dend_77 { pt3dadd( -1.33209, 20.3268, 11.7989, 0.74 ) }
    dend_77 { pt3dadd( -1.89134, 21.1779, 12.4558, 0.74 ) }
    dend_77 { pt3dadd( -2.40384, 22.0508, 13.2126, 0.74 ) }
    dend_77 { pt3dadd( -2.55679, 22.3722, 13.5262, 0.74 ) }
    dend_77 { pt3dadd( -2.79707, 23.0431, 14.1956, 0.59 ) }
    dend_77 { pt3dadd( -2.95901, 23.628, 14.721, 0.59 ) }
    dend_77 { pt3dadd( -2.96864, 23.6793, 14.7606, 0.59 ) }
    dend_77 { pt3dadd( -3.06818, 24.5476, 15.4366, 0.59 ) }
    dend_77 { pt3dadd( -3.14874, 25.3107, 15.9853, 0.74 ) }
    dend_77 { pt3dadd( -3.1543, 25.4421, 16.0852, 0.74 ) }
    dend_77 { pt3dadd( -3.08969, 26.2834, 16.7605, 0.74 ) }
    dend_77 { pt3dadd( -3.03545, 26.68, 17.1002, 1.03 ) }
    dend_77 { pt3dadd( -2.81209, 27.4623, 17.8446, 1.03 ) }
    dend_77 { pt3dadd( -2.7871, 27.508, 17.9005, 1.03 ) }
    dend_77 { pt3dadd( -2.17644, 28.2414, 19.0103, 0.74 ) }
    dend_77 { pt3dadd( -1.27472, 29.0155, 20.4432, 0.74 ) }
    dend_77 { pt3dadd( -1.23251, 29.0403, 20.5028, 0.74 ) }
    dend_77 { pt3dadd( -0.313456, 29.4969, 21.6501, 0.74 ) }
    dend_77 { pt3dadd( 0.689068, 29.9881, 22.8247, 0.74 ) }
    dend_77 { pt3dadd( 0.736123, 30.0115, 22.8801, 0.74 ) }
    dend_77 { pt3dadd( 1.06111, 30.1612, 23.2581, 0.74 ) }
    dend_77 { pt3dadd( 1.76462, 30.4854, 24.0239, 1.03 ) }
    dend_77 { pt3dadd( 2.46479, 30.8495, 24.7666, 1.03 ) }
    dend_77 { pt3dadd( 3.84891, 31.6875, 26.1785, 0.81 ) }
    dend_77 { pt3dadd( 4.76673, 32.2693, 27.1027, 0.81 ) }
    dend_77 { pt3dadd( 5.38324, 32.6554, 27.7308, 0.52 ) }
    dend_77 { pt3dadd( 6.03883, 33.0534, 28.4079, 0.52 ) }
    dend_77 { pt3dadd( 6.09639, 33.0861, 28.4659, 0.52 ) }
    dend_77 { pt3dadd( 6.65251, 33.3428, 29.0279, 0.74 ) }
    dend_77 { pt3dadd( 7.60685, 33.6763, 29.7745, 0.74 ) }
    dend_77 { pt3dadd( 9.94196, 41.6129, 36.8932, 0.74 ) }
    // Section: dend_74, id: dend_74, parent: soma_0 (entry count 74/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 0.960327, 7.647, 4.92909, 0.88 ) }
    dend_74 { pt3dadd( 1.0085, 8.41473, 4.88948, 0.88 ) }
    dend_74 { pt3dadd( 1.03762, 9.35895, 4.84054, 0.88 ) }
    dend_74 { pt3dadd( 1.05919, 10.586, 4.77179, 0.88 ) }
    dend_74 { pt3dadd( 1.04476, 12.1741, 4.68197, 0.88 ) }
    dend_74 { pt3dadd( 1.01199, 13.1557, 4.6284, 0.66 ) }
    dend_74 { pt3dadd( 0.967447, 14.1064, 4.5778, 1.03 ) }
    dend_74 { pt3dadd( 0.876843, 15.265, 4.51268, 1.03 ) }
    dend_74 { pt3dadd( 0.868464, 15.3415, 4.50846, 1.03 ) }
    dend_74 { pt3dadd( 0.756347, 16.2118, 4.46315, 1.18 ) }
    dend_74 { pt3dadd( 0.655167, 17.1829, 4.42388, 1.18 ) }
    dend_74 { pt3dadd( 0.652439, 17.2864, 4.4216, 1.18 ) }
    dend_74 { pt3dadd( 0.754301, 18.5173, 4.39723, 0.96 ) }
    dend_74 { pt3dadd( 0.947177, 19.631, 4.38263, 0.66 ) }
    dend_74 { pt3dadd( 0.975627, 19.7302, 4.39042, 0.66 ) }
    dend_74 { pt3dadd( 1.43415, 20.871, 4.57078, 0.59 ) }
    dend_74 { pt3dadd( 1.88263, 21.7517, 4.81292, 0.59 ) }
    dend_74 { pt3dadd( 2.39548, 22.6308, 5.14326, 0.59 ) }
    dend_74 { pt3dadd( 2.43443, 22.6906, 5.17237, 0.59 ) }
    dend_74 { pt3dadd( 3.50951, 24.2749, 6.03935, 0.59 ) }
    dend_74 { pt3dadd( 3.5461, 24.3338, 6.07299, 0.59 ) }
    dend_74 { pt3dadd( 4.08705, 25.2791, 6.72595, 0.96 ) }
    dend_74 { pt3dadd( 4.11614, 25.3369, 6.76776, 0.96 ) }
    dend_74 { pt3dadd( 4.41967, 26.069, 7.27644, 0.96 ) }
    dend_74 { pt3dadd( 4.69127, 26.7478, 7.6979, 1.33 ) }
    dend_74 { pt3dadd( 5.09305, 27.7534, 8.20452, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_74 { pt3dadd( 5.49641, 28.6983, 8.69367, 1.62 ) }
    dend_74 { pt3dadd( 5.7591, 29.2563, 9.05226, 1.62 ) }
    dend_74 { pt3dadd( 5.91671, 29.5769, 9.27738, 1.4 ) }
    dend_74 { pt3dadd( 6.19562, 30.1161, 9.68916, 0.66 ) }
    dend_74 { pt3dadd( 6.53382, 30.7694, 10.2808, 0.59 ) }
    dend_74 { pt3dadd( 7.42366, 32.4484, 11.9091, 0.59 ) }
    dend_74 { pt3dadd( 8.01326, 33.5774, 12.9727, 0.96 ) }
    dend_74 { pt3dadd( 8.34057, 34.209, 13.5741, 0.96 ) }
    dend_74 { pt3dadd( 8.37279, 34.272, 13.6309, 0.96 ) }
    dend_74 { pt3dadd( 9.13818, 35.8573, 14.8864, 0.96 ) }
    dend_74 { pt3dadd( 9.33282, 36.2598, 15.1471, 0.59 ) }
    dend_74 { pt3dadd( 9.86126, 37.2553, 15.5962, 0.59 ) }
    dend_74 { pt3dadd( 10.5407, 38.4807, 16.0004, 0.88 ) }
    dend_74 { pt3dadd( 11.0826, 39.3795, 16.2651, 1.25 ) }
    dend_74 { pt3dadd( 11.8244, 40.5169, 16.5308, 1.47 ) }
    dend_74 { pt3dadd( 12.4238, 41.3564, 16.7088, 1.47 ) }
    dend_74 { pt3dadd( 13.0858, 42.1779, 16.9335, 1.47 ) }
    dend_74 { pt3dadd( 13.1447, 42.2433, 16.9556, 1.47 ) }
    dend_74 { pt3dadd( 14.0799, 43.1927, 17.3125, 0.66 ) }
    dend_74 { pt3dadd( 14.8979, 43.995, 17.6664, 0.66 ) }
    dend_74 { pt3dadd( 16.1214, 45.2251, 18.2636, 0.66 ) }
    dend_74 { pt3dadd( 16.9024, 46.0695, 18.6708, 0.66 ) }
    dend_74 { pt3dadd( 16.9494, 46.1252, 18.6954, 0.66 ) }
    dend_74 { pt3dadd( 17.5384, 46.9008, 18.9676, 0.37 ) }
    dend_74 { pt3dadd( 17.9103, 47.44, 19.0911, 0.29 ) }
    dend_74 { pt3dadd( 18.2766, 47.9896, 19.4619, 0.29 ) }
    dend_74 { pt3dadd( 18.6002, 48.5208, 19.9782, 0.29 ) }
    dend_74 { pt3dadd( 18.7979, 48.8966, 20.4934, 1.11 ) }
    dend_74 { pt3dadd( 19.0615, 49.4067, 21.3184, 1.55 ) }
    dend_74 { pt3dadd( 19.2777, 49.8487, 22.113, 1.55 ) }
    dend_74 { pt3dadd( 20.3105, 52.2761, 26.5913, 1.03 ) }
    dend_74 { pt3dadd( 20.4024, 52.5616, 27.097, 1.03 ) }
    dend_74 { pt3dadd( 20.6068, 53.5384, 28.7667, 0.74 ) }
    dend_74 { pt3dadd( 20.6134, 53.5929, 28.8545, 0.74 ) }
    dend_74 { pt3dadd( 20.6368, 53.9932, 29.4161, 0.59 ) }
    dend_74 { pt3dadd( 20.689, 54.6539, 30.072, 0.59 ) }
    dend_74 { pt3dadd( 21.0398, 56.1043, 30.6837, 0.59 ) }
    dend_74 { pt3dadd( 21.0726, 56.1821, 30.7145, 0.59 ) }
    dend_74 { pt3dadd( 21.7636, 57.4129, 31.1318, 0.59 ) }
    dend_74 { pt3dadd( 22.2472, 58.2027, 31.3771, 0.96 ) }
    dend_74 { pt3dadd( 23.003, 59.2887, 31.6947, 0.96 ) }
    dend_74 { pt3dadd( 23.8109, 60.3182, 31.968, 1.18 ) }
    dend_74 { pt3dadd( 24.7464, 61.4453, 32.2244, 1.18 ) }
    dend_74 { pt3dadd( 25.5632, 62.4312, 32.4105, 1.18 ) }
    dend_74 { pt3dadd( 26.3823, 63.4402, 32.5399, 1.55 ) }
    dend_74 { pt3dadd( 26.8398, 64.0227, 32.6134, 1.99 ) }
    dend_74 { pt3dadd( 27.4149, 64.8452, 32.7035, 1.99 ) }
    dend_74 { pt3dadd( 27.759, 65.3715, 32.746, 1.84 ) }
    dend_74 { pt3dadd( 28.2848, 66.1728, 32.7796, 0.81 ) }
    dend_74 { pt3dadd( 28.7667, 66.9048, 32.8974, 0.81 ) }
    dend_74 { pt3dadd( 28.8224, 66.9887, 32.9209, 0.81 ) }
    dend_74 { pt3dadd( 29.2513, 67.6808, 33.1539, 0.81 ) }
    dend_74 { pt3dadd( 29.3212, 67.7906, 33.195, 0.81 ) }
    dend_74 { pt3dadd( 29.8581, 68.6098, 33.5644, 0.81 ) }
    dend_74 { pt3dadd( 30.5993, 69.7562, 34.1172, 1.18 ) }
    dend_74 { pt3dadd( 31.0555, 70.5201, 34.5979, 1.18 ) }
    dend_74 { pt3dadd( 31.0932, 70.5875, 34.6456, 1.18 ) }
    dend_74 { pt3dadd( 31.4599, 71.3033, 35.1493, 1.18 ) }
    dend_74 { pt3dadd( 31.7656, 72.0157, 35.6851, 1.18 ) }
    dend_74 { pt3dadd( 31.9719, 72.6055, 36.0999, 0.96 ) }
    dend_74 { pt3dadd( 32.4368, 74.1157, 37.0724, 1.18 ) }
    dend_74 { pt3dadd( 32.4574, 74.1876, 37.124, 1.18 ) }
    dend_74 { pt3dadd( 32.7972, 75.3885, 38.0926, 1.18 ) }
    dend_74 { pt3dadd( 33.1735, 76.9436, 39.3757, 1.55 ) }
    dend_74 { pt3dadd( 33.4371, 78.1243, 40.4235, 1.55 ) }
    dend_74 { pt3dadd( 33.4499, 78.1887, 40.4848, 1.55 ) }
    dend_74 { pt3dadd( 33.6678, 79.6939, 41.8847, 1.84 ) }
    dend_74 { pt3dadd( 33.7741, 81.1046, 43.2397, 1.18 ) }
    dend_74 { pt3dadd( 33.7843, 82.0065, 44.1293, 1.18 ) }
    dend_74 { pt3dadd( 33.77, 83.3817, 45.375, 1.18 ) }
    dend_74 { pt3dadd( 33.7676, 83.4508, 45.4339, 1.18 ) }
    dend_74 { pt3dadd( 33.7174, 84.6714, 46.327, 1.18 ) }
    dend_74 { pt3dadd( 33.6775, 85.7598, 46.8984, 0.81 ) }
    dend_74 { pt3dadd( 33.6727, 86.4292, 47.145, 0.59 ) }
    dend_74 { pt3dadd( 33.7764, 87.4039, 47.3936, 0.59 ) }
    dend_74 { pt3dadd( 33.9467, 88.1456, 47.445, 1.18 ) }
    dend_74 { pt3dadd( 33.9897, 88.2666, 47.4456, 1.18 ) }
    dend_74 { pt3dadd( 34.3201, 88.933, 47.3981, 1.18 ) }
    dend_74 { pt3dadd( 34.3555, 89.0008, 47.3887, 1.18 ) }
    dend_74 { pt3dadd( 34.7569, 89.8687, 47.3205, 1.18 ) }
    dend_74 { pt3dadd( 35.1631, 90.9858, 47.2944, 0.96 ) }
    dend_74 { pt3dadd( 35.3549, 91.721, 47.3106, 0.96 ) }
    dend_74 { pt3dadd( 35.444, 92.3746, 47.3797, 0.52 ) }
    dend_74 { pt3dadd( 35.4261, 92.9534, 47.4881, 0.52 ) }
    dend_74 { pt3dadd( 35.2014, 94.0424, 47.8596, 0.52 ) }
    dend_74 { pt3dadd( 34.8727, 94.8447, 48.2455, 0.88 ) }
    dend_74 { pt3dadd( 34.5534, 95.4186, 48.5723, 0.88 ) }
    dend_74 { pt3dadd( 34.037, 96.2078, 49.0677, 0.88 ) }
    dend_74 { pt3dadd( 33.5353, 96.9154, 49.5312, 0.66 ) }
    dend_74 { pt3dadd( 32.592, 98.1902, 50.3886, 0.66 ) }
    dend_74 { pt3dadd( 32.2381, 98.6747, 50.6993, 0.52 ) }
    dend_74 { pt3dadd( 31.8614, 99.2885, 51.056, 0.44 ) }
    dend_74 { pt3dadd( 31.8211, 99.3755, 51.0942, 0.44 ) }
    dend_74 { pt3dadd( 31.6468, 100.058, 51.2612, 0.44 ) }
    dend_74 { pt3dadd( 31.6407, 100.147, 51.2771, 0.44 ) }
    dend_74 { pt3dadd( 31.7065, 100.885, 51.3475, 0.74 ) }
    dend_74 { pt3dadd( 31.8837, 101.72, 51.4209, 1.11 ) }
    dend_74 { pt3dadd( 32.1034, 102.491, 51.485, 1.55 ) }
    dend_74 { pt3dadd( 32.4114, 103.392, 51.5513, 0.96 ) }
    dend_74 { pt3dadd( 32.756, 104.255, 51.61, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_74 { pt3dadd( 33.474, 105.822, 51.7006, 0.37 ) }
    dend_74 { pt3dadd( 33.8447, 106.52, 51.7341, 0.37 ) }
    dend_74 { pt3dadd( 33.8917, 106.596, 51.7348, 0.37 ) }
    dend_74 { pt3dadd( 34.3901, 107.34, 51.712, 0.37 ) }
    dend_74 { pt3dadd( 34.4679, 107.455, 51.7038, 0.37 ) }
    dend_74 { pt3dadd( 35.0068, 108.222, 51.5904, 0.37 ) }
    dend_74 { pt3dadd( 35.0625, 108.293, 51.5793, 0.37 ) }
    dend_74 { pt3dadd( 35.6214, 109.045, 51.495, 0.37 ) }
    dend_74 { pt3dadd( 36.1498, 109.734, 51.406, 0.81 ) }
    dend_74 { pt3dadd( 40.0773, 120.09, 57.8971, 0.81 ) }
    dend_74 { pt3dadd( 42.4738, 131.408, 63.4622, 0.81 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 11/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -1.74967, -10.203, -2.32091, 3.9 ) }
    dend_35 { pt3dadd( -1.92927, -11.9295, -2.32091, 3.9 ) }
    dend_35 { pt3dadd( -2.0472, -13.0631, -2.32091, 4.27 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 14/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.00967, 8.667, -2.82091, 3.68 ) }
    dend_0 { pt3dadd( -1.15825, 9.75905, -2.82091, 3.68 ) }
    dend_0 { pt3dadd( -1.43062, 11.9045, -2.82091, 3.24 ) }
    dend_0 { pt3dadd( -1.7569, 14.2695, -2.82479, 3.24 ) }
    dend_0 { pt3dadd( -2.00129, 16.0409, -2.82771, 3.24 ) }
    dend_0 { pt3dadd( -2.29126, 18.1427, -2.83116, 3.24 ) }
    dend_0 { pt3dadd( -2.56238, 20.1079, -2.83439, 3.61 ) }
    dend_0 { pt3dadd( -2.71417, 21.2139, -2.83658, 3.61 ) }
    dend_0 { pt3dadd( -2.81798, 22.0373, -2.83876, 3.61 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 23/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.71938, 10.3543, 1.21185, 0.81 ) }
    axon_0 { pt3dadd( 3.52379, 25.2454, 1.21185, 0.81 ) }
    axon_0 { pt3dadd( 5.32821, 40.1364, 1.21185, 0.81 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 26/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 9.94196, 41.6129, 36.8932, 0.74 ) }
    dend_79 { pt3dadd( 11.1367, 47.7883, 40.905, 0.74 ) }
    dend_79 { pt3dadd( 12.9894, 53.9125, 44.7418, 0.74 ) }
    dend_79 { pt3dadd( 13.5048, 59.7943, 49.3024, 0.74 ) }
    dend_79 { pt3dadd( 15.6282, 64.8642, 54.3471, 0.74 ) }
    dend_79 { pt3dadd( 18.3039, 69.4812, 59.5608, 0.74 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 32/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 9.94196, 41.6129, 36.8932, 0.52 ) }
    dend_78 { pt3dadd( 10.6072, 50.841, 43.8633, 0.74 ) }
    dend_78 { pt3dadd( 13.3066, 58.7553, 51.8794, 0.74 ) }
    dend_78 { pt3dadd( 16.7014, 67.5443, 58.6185, 0.74 ) }
    dend_78 { pt3dadd( 19.7973, 76.1628, 65.7123, 0.74 ) }
    dend_78 { pt3dadd( 23.5191, 83.1897, 74.1357, 0.74 ) }
    dend_78 { pt3dadd( 28.2748, 88.6447, 83.1806, 0.74 ) }
    dend_78 { pt3dadd( 32.8322, 93.517, 92.6504, 0.74 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 40/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 42.4738, 131.408, 63.4622, 0.74 ) }
    dend_76 { pt3dadd( 46.3086, 141.504, 69.1539, 0.74 ) }
    dend_76 { pt3dadd( 49.4589, 151.194, 75.8773, 0.74 ) }
    dend_76 { pt3dadd( 51.4997, 160.908, 82.9846, 0.74 ) }
    dend_76 { pt3dadd( 52.173, 170.799, 90.1085, 0.74 ) }
    dend_76 { pt3dadd( 54.5921, 181.832, 94.7403, 0.74 ) }
    dend_76 { pt3dadd( 57.1285, 192.53, 100.045, 0.74 ) }
    dend_76 { pt3dadd( 57.767, 204.313, 103.175, 0.74 ) }
    dend_76 { pt3dadd( 56.7822, 216.124, 106.103, 0.74 ) }
    dend_76 { pt3dadd( 56.4369, 228.003, 108.897, 0.74 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 50/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 42.4738, 131.408, 63.4622, 0.52 ) }
    dend_75 { pt3dadd( 45.7693, 142.118, 68.1585, 0.74 ) }
    dend_75 { pt3dadd( 49.473, 152.409, 73.4503, 0.74 ) }
    dend_75 { pt3dadd( 53.83, 162.649, 78.3258, 0.74 ) }
    dend_75 { pt3dadd( 58.0601, 172.661, 83.7553, 0.74 ) }
    dend_75 { pt3dadd( 63.1161, 183.186, 87.1165, 0.74 ) }
    dend_75 { pt3dadd( 66.5541, 193.759, 92.0155, 0.74 ) }
    dend_75 { pt3dadd( 68.2776, 205.016, 96.252, 0.74 ) }
    dend_75 { pt3dadd( 72.4544, 215.61, 100.488, 0.74 ) }
    dend_75 { pt3dadd( 75.6334, 225.944, 106.029, 0.74 ) }
    // Section: dend_51, id: dend_51, parent: dend_35 (entry count 60/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -2.0472, -13.0631, -2.32091, 1.62 ) }
    dend_51 { pt3dadd( -2.33559, -13.3633, -2.36258, 1.62 ) }
    dend_51 { pt3dadd( -3.41149, -14.4832, -2.51805, 1.47 ) }
    dend_51 { pt3dadd( -4.65503, -15.7777, -2.69773, 1.4 ) }
    dend_51 { pt3dadd( -5.54301, -16.702, -2.82604, 1.55 ) }
    dend_51 { pt3dadd( -6.47809, -17.6754, -2.96116, 1.55 ) }
    dend_51 { pt3dadd( -6.95057, -18.1672, -3.02943, 1.69 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 67/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -2.0472, -13.0631, -2.32091, 1.84 ) }
    dend_36 { pt3dadd( -2.03043, -13.1628, -2.31571, 1.84 ) }
    dend_36 { pt3dadd( -1.85333, -14.4338, -2.2431, 1.99 ) }
    dend_36 { pt3dadd( -1.67972, -15.8656, -2.16009, 1.84 ) }
    dend_36 { pt3dadd( -1.44525, -17.7994, -2.04796, 1.47 ) }
    dend_36 { pt3dadd( -1.1309, -20.3921, -1.89764, 1.47 ) }
    dend_36 { pt3dadd( -1.00265, -21.4499, -1.83631, 2.06 ) }
    dend_36 { pt3dadd( -0.931617, -22.1538, -1.79633, 2.5 ) }
    dend_36 { pt3dadd( -0.87566, -23.1081, -1.73943, 2.43 ) }
    // Section: dend_30, id: dend_30, parent: dend_0 (entry count 76/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -2.81798, 22.0373, -2.83876, 0.96 ) }
    dend_30 { pt3dadd( 0.024524, 24.0451, -4.3457, 0.96 ) }
    dend_30 { pt3dadd( 0.796534, 24.8001, -4.78072, 1.03 ) }
    dend_30 { pt3dadd( 1.42326, 25.5058, -5.15218, 1.03 ) }
    dend_30 { pt3dadd( 1.51882, 25.624, -5.20408, 1.03 ) }
    dend_30 { pt3dadd( 2.4222, 26.8055, -5.64253, 1.03 ) }
    dend_30 { pt3dadd( 2.4733, 26.871, -5.66305, 1.03 ) }
    dend_30 { pt3dadd( 3.71948, 28.6464, -5.99422, 1.03 ) }
    dend_30 { pt3dadd( 3.85687, 28.8051, -6.0217, 1.03 ) }
    dend_30 { pt3dadd( 4.88738, 29.732, -6.20631, 1.03 ) }
    dend_30 { pt3dadd( 5.54546, 30.174, -6.29766, 1.11 ) }
    dend_30 { pt3dadd( 6.57827, 30.5462, -6.48637, 1.11 ) }
    dend_30 { pt3dadd( 8.05792, 30.5911, -7.23512, 1.33 ) }
    dend_30 { pt3dadd( 8.80975, 30.4759, -8.04432, 1.47 ) }
    dend_30 { pt3dadd( 8.85871, 30.4698, -8.11419, 1.47 ) }
    dend_30 { pt3dadd( 9.38969, 30.4063, -9.03936, 1.47 ) }
    dend_30 { pt3dadd( 10.5158, 30.3596, -11.3758, 0.96 ) }
    dend_30 { pt3dadd( 12.3174, 30.4477, -15.8409, 0.81 ) }
    dend_30 { pt3dadd( 13.6869, 30.6865, -19.8838, 0.96 ) }
    dend_30 { pt3dadd( 14.1478, 30.8168, -21.4263, 0.96 ) }
    dend_30 { pt3dadd( 14.17, 30.8262, -21.5083, 0.96 ) }
    dend_30 { pt3dadd( 14.52, 31.1126, -23.1228, 0.96 ) }
    dend_30 { pt3dadd( 14.5323, 31.1396, -23.203, 0.96 ) }
    dend_30 { pt3dadd( 14.5378, 31.1942, -23.2752, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 0/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -2.81798, 22.0373, -2.83876, 2.14 ) }
    dend_1 { pt3dadd( -3.41431, 23.3638, -2.85934, 2.14 ) }
    dend_1 { pt3dadd( -4.42191, 25.8689, -2.89272, 3.0 ) }
    dend_1 { pt3dadd( -5.31633, 28.3327, -3.01713, 2.28 ) }
    dend_1 { pt3dadd( -6.12983, 30.803, -3.35164, 2.14 ) }
    dend_1 { pt3dadd( -6.7517, 32.7703, -3.69929, 2.21 ) }
    dend_1 { pt3dadd( -7.33027, 34.6006, -4.02273, 2.36 ) }
    dend_1 { pt3dadd( -7.95818, 36.7268, -4.45371, 2.36 ) }
    dend_1 { pt3dadd( -8.52142, 39.0894, -5.02359, 2.21 ) }
    dend_1 { pt3dadd( -9.10326, 42.0527, -5.89967, 2.21 ) }
    dend_1 { pt3dadd( -9.48821, 44.0558, -6.65452, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.32821, 40.1364, 1.21185, 0.15 ) }
    axon_1 { pt3dadd( 7.13262, 55.0275, 1.21185, 0.15 ) }
    axon_1 { pt3dadd( 8.93703, 69.9186, 1.21185, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 14/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -6.95057, -18.1672, -3.02943, 0.66 ) }
    dend_53 { pt3dadd( -7.52911, -19.8516, -2.6525, 0.66 ) }
    dend_53 { pt3dadd( -7.75373, -20.6171, -2.52768, 0.66 ) }
    dend_53 { pt3dadd( -7.77617, -20.699, -2.51303, 0.66 ) }
    dend_53 { pt3dadd( -8.12712, -21.9683, -2.2911, 0.66 ) }
    dend_53 { pt3dadd( -8.47096, -23.1708, -2.09345, 0.66 ) }
    dend_53 { pt3dadd( -8.67831, -23.8755, -1.97895, 0.96 ) }
    dend_53 { pt3dadd( -8.95952, -24.9128, -1.79109, 1.18 ) }
    dend_53 { pt3dadd( -9.26728, -26.0389, -1.4896, 0.66 ) }
    dend_53 { pt3dadd( -9.56992, -27.0282, -1.05457, 0.66 ) }
    dend_53 { pt3dadd( -9.68321, -27.2928, -0.843623, 0.66 ) }
    dend_53 { pt3dadd( -9.72275, -27.3398, -0.737743, 0.66 ) }
    dend_53 { pt3dadd( -10.1764, -27.2836, 1.22052, 0.66 ) }
    dend_53 { pt3dadd( -10.1885, -27.2701, 1.29133, 0.66 ) }
    dend_53 { pt3dadd( -10.3561, -26.8452, 2.681, 0.66 ) }
    dend_53 { pt3dadd( -10.4629, -26.4919, 3.62548, 0.96 ) }
    dend_53 { pt3dadd( -10.6069, -25.8876, 5.36339, 0.96 ) }
    dend_53 { pt3dadd( -10.7548, -25.2688, 7.53549, 0.96 ) }
    dend_53 { pt3dadd( -10.7599, -25.2529, 7.60665, 0.96 ) }
    dend_53 { pt3dadd( -10.9305, -24.9888, 9.59932, 0.59 ) }
    dend_53 { pt3dadd( -11.0007, -24.9754, 10.3194, 0.59 ) }
    dend_53 { pt3dadd( -11.3731, -25.3837, 13.4867, 0.59 ) }
    dend_53 { pt3dadd( -11.7196, -26.0444, 15.4584, 1.25 ) }
    dend_53 { pt3dadd( -11.928, -26.5952, 16.3663, 1.4 ) }
    dend_53 { pt3dadd( -12.1769, -27.3548, 17.2095, 0.74 ) }
    dend_53 { pt3dadd( -12.367, -28.0115, 17.6003, 0.74 ) }
    dend_53 { pt3dadd( -12.651, -29.0142, 17.8549, 0.74 ) }
    dend_53 { pt3dadd( -12.9591, -29.9736, 17.8059, 0.74 ) }
    dend_53 { pt3dadd( -13.2956, -30.9995, 17.63, 1.11 ) }
    dend_53 { pt3dadd( -13.835, -32.6458, 17.2952, 0.37 ) }
    dend_53 { pt3dadd( -14.0538, -33.3082, 17.1437, 0.37 ) }
    dend_53 { pt3dadd( -14.4616, -34.4496, 16.8705, 0.37 ) }
    dend_53 { pt3dadd( -14.9425, -35.5716, 16.6384, 1.18 ) }
    dend_53 { pt3dadd( -15.343, -36.3818, 16.5095, 1.47 ) }
    dend_53 { pt3dadd( -15.4326, -36.5286, 16.4996, 1.47 ) }
    dend_53 { pt3dadd( -15.7981, -37.0353, 16.5312, 1.47 ) }
    dend_53 { pt3dadd( -16.2803, -37.6194, 16.5752, 0.81 ) }
    dend_53 { pt3dadd( -16.9483, -38.3228, 16.6405, 0.81 ) }
    dend_53 { pt3dadd( -17.0117, -38.3808, 16.6474, 0.81 ) }
    dend_53 { pt3dadd( -17.9388, -39.1091, 16.7672, 0.81 ) }
    dend_53 { pt3dadd( -18.9385, -39.8641, 16.899, 0.81 ) }
    dend_53 { pt3dadd( -19.6754, -40.3938, 16.9983, 0.37 ) }
    dend_53 { pt3dadd( -19.9397, -40.5843, 17.0339, 0.37 ) }
    dend_53 { pt3dadd( -20.5747, -41.0657, 17.1189, 0.37 ) }
    dend_53 { pt3dadd( -22.0954, -42.2224, 17.34, 0.37 ) }
    dend_53 { pt3dadd( -27.3277, -50.4058, 24.6913, 0.37 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 60/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -6.95057, -18.1672, -3.02943, 1.25 ) }
    dend_52 { pt3dadd( -6.85491, -19.1889, -3.08361, 1.25 ) }
    dend_52 { pt3dadd( -6.75612, -20.6497, -3.14498, 1.25 ) }
    dend_52 { pt3dadd( -6.75151, -20.7822, -3.1487, 1.25 ) }
    dend_52 { pt3dadd( -6.76166, -21.9202, -3.16383, 1.25 ) }
    dend_52 { pt3dadd( -6.76885, -22.0618, -3.16373, 1.25 ) }
    dend_52 { pt3dadd( -6.8659, -23.1913, -3.14959, 1.25 ) }
    dend_52 { pt3dadd( -6.96688, -23.944, -3.13813, 1.33 ) }
    dend_52 { pt3dadd( -7.11794, -24.8286, -3.11712, 1.33 ) }
    dend_52 { pt3dadd( -7.36338, -26.1006, -3.07187, 1.18 ) }
    dend_52 { pt3dadd( -7.69976, -27.6484, -2.99541, 1.18 ) }
    dend_52 { pt3dadd( -8.13013, -29.5066, -2.94749, 1.18 ) }
    dend_52 { pt3dadd( -8.15013, -29.5795, -2.94767, 1.18 ) }
    dend_52 { pt3dadd( -8.55537, -30.8713, -2.98159, 1.18 ) }
    dend_52 { pt3dadd( -8.92716, -31.9009, -3.03301, 1.18 ) }
    dend_52 { pt3dadd( -8.95263, -31.9619, -3.03752, 1.18 ) }
    dend_52 { pt3dadd( -9.54295, -33.1632, -3.1547, 1.18 ) }
    dend_52 { pt3dadd( -10.3123, -34.511, -3.30908, 1.18 ) }
    dend_52 { pt3dadd( -10.8824, -35.455, -3.44993, 1.4 ) }
    dend_52 { pt3dadd( -11.391, -36.2455, -3.59112, 1.77 ) }
    dend_52 { pt3dadd( -11.9426, -37.0466, -3.75114, 1.77 ) }
    dend_52 { pt3dadd( -12.5768, -37.9517, -3.93421, 1.77 ) }
    dend_52 { pt3dadd( -13.287, -38.9314, -4.13301, 1.25 ) }
    dend_52 { pt3dadd( -13.9684, -39.8963, -4.34664, 0.96 ) }
    dend_52 { pt3dadd( -14.4127, -40.5476, -4.48671, 1.18 ) }
    dend_52 { pt3dadd( -14.6099, -40.8529, -4.54649, 1.18 ) }
    dend_52 { pt3dadd( -14.8777, -41.2723, -4.61634, 1.18 ) }
    dend_52 { pt3dadd( -14.9125, -41.3279, -4.62607, 1.18 ) }
    dend_52 { pt3dadd( -15.508, -42.2691, -4.78196, 1.03 ) }
    dend_52 { pt3dadd( -15.9362, -42.9258, -4.8779, 0.81 ) }
    dend_52 { pt3dadd( -16.5094, -43.8385, -5.03072, 0.81 ) }
    dend_52 { pt3dadd( -17.1199, -44.8798, -5.20572, 1.4 ) }
    dend_52 { pt3dadd( -17.7379, -46.0189, -5.39095, 1.55 ) }
    dend_52 { pt3dadd( -18.3278, -47.2153, -5.59186, 1.69 ) }
    dend_52 { pt3dadd( -18.7327, -48.1338, -5.76534, 1.69 ) }
    dend_52 { pt3dadd( -19.0659, -49.0117, -5.93185, 1.11 ) }
    dend_52 { pt3dadd( -19.4288, -50.0979, -6.1258, 0.81 ) }
    dend_52 { pt3dadd( -19.6923, -50.9806, -6.27036, 0.81 ) }
    dend_52 { pt3dadd( -20.3595, -53.3829, -6.60767, 0.81 ) }
    dend_52 { pt3dadd( -20.635, -54.4576, -6.77456, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_52 { pt3dadd( -20.8562, -55.3325, -6.92023, 1.18 ) }
    dend_52 { pt3dadd( -21.0406, -56.0375, -7.03969, 1.18 ) }
    dend_52 { pt3dadd( -21.2288, -56.7192, -7.16114, 1.03 ) }
    dend_52 { pt3dadd( -21.4528, -57.4986, -7.29623, 0.74 ) }
    dend_52 { pt3dadd( -21.6896, -58.3638, -7.43551, 0.52 ) }
    dend_52 { pt3dadd( -21.7083, -58.4267, -7.44556, 0.52 ) }
    dend_52 { pt3dadd( -21.8865, -58.999, -7.57842, 0.52 ) }
    dend_52 { pt3dadd( -22.1691, -59.9408, -7.84477, 0.81 ) }
    dend_52 { pt3dadd( -22.188, -60.0013, -7.86413, 0.81 ) }
    dend_52 { pt3dadd( -22.4709, -60.7955, -8.12828, 1.18 ) }
    dend_52 { pt3dadd( -22.7773, -61.5868, -8.38729, 1.18 ) }
    dend_52 { pt3dadd( -23.1349, -62.518, -8.73936, 1.03 ) }
    dend_52 { pt3dadd( -23.4813, -63.3968, -9.1331, 0.66 ) }
    dend_52 { pt3dadd( -23.5291, -63.5174, -9.19041, 0.66 ) }
    dend_52 { pt3dadd( -23.8632, -64.3262, -9.56165, 0.52 ) }
    dend_52 { pt3dadd( -23.891, -64.3896, -9.59181, 0.52 ) }
    dend_52 { pt3dadd( -24.3425, -65.3497, -10.0822, 1.55 ) }
    dend_52 { pt3dadd( -24.762, -66.203, -10.5031, 1.99 ) }
    dend_52 { pt3dadd( -25.0802, -66.8421, -10.8125, 2.28 ) }
    dend_52 { pt3dadd( -25.5137, -67.6998, -11.1945, 1.92 ) }
    dend_52 { pt3dadd( -25.9885, -68.6143, -11.5577, 0.37 ) }
    dend_52 { pt3dadd( -26.0188, -68.6702, -11.5767, 0.37 ) }
    dend_52 { pt3dadd( -26.38, -69.3011, -11.7301, 0.37 ) }
    dend_52 { pt3dadd( -26.6973, -69.8589, -11.8681, 0.29 ) }
    dend_52 { pt3dadd( -27.1812, -70.7233, -12.0878, 0.29 ) }
    dend_52 { pt3dadd( -27.5585, -71.4062, -12.2476, 0.29 ) }
    dend_52 { pt3dadd( -27.5893, -71.4637, -12.2595, 0.29 ) }
    dend_52 { pt3dadd( -28.1251, -72.5229, -12.5301, 0.29 ) }
    dend_52 { pt3dadd( -28.7614, -73.8584, -12.9189, 0.29 ) }
    dend_52 { pt3dadd( -29.0707, -74.5544, -13.1299, 1.62 ) }
    dend_52 { pt3dadd( -29.4623, -75.4783, -13.4099, 2.21 ) }
    dend_52 { pt3dadd( -29.7992, -76.2863, -13.6578, 1.55 ) }
    dend_52 { pt3dadd( -30.2373, -77.3389, -13.9643, 0.29 ) }
    dend_52 { pt3dadd( -30.4426, -77.8318, -14.0971, 0.29 ) }
    dend_52 { pt3dadd( -30.8249, -78.7767, -14.2994, 0.29 ) }
    dend_52 { pt3dadd( -31.1854, -79.6698, -14.4844, 0.29 ) }
    dend_52 { pt3dadd( -31.39, -80.166, -14.5748, 0.66 ) }
    dend_52 { pt3dadd( -31.6876, -80.8159, -14.6605, 1.03 ) }
    dend_52 { pt3dadd( -31.8949, -81.2318, -14.6874, 0.52 ) }
    dend_52 { pt3dadd( -32.0731, -81.5872, -14.7098, 0.52 ) }
    dend_52 { pt3dadd( -32.2291, -81.909, -14.7267, 0.22 ) }
    dend_52 { pt3dadd( -32.4983, -82.5298, -14.7431, 0.22 ) }
    dend_52 { pt3dadd( -32.8812, -83.5318, -14.7899, 0.22 ) }
    dend_52 { pt3dadd( -32.9059, -83.603, -14.7959, 0.22 ) }
    dend_52 { pt3dadd( -33.1463, -84.3174, -14.875, 0.66 ) }
    dend_52 { pt3dadd( -33.2652, -84.6416, -14.9174, 1.25 ) }
    dend_52 { pt3dadd( -33.4766, -85.2215, -15.0045, 1.25 ) }
    dend_52 { pt3dadd( -33.7758, -86.0031, -15.1345, 0.29 ) }
    dend_52 { pt3dadd( -33.8038, -86.0724, -15.1459, 0.29 ) }
    dend_52 { pt3dadd( -34.1543, -86.8797, -15.2749, 0.29 ) }
    dend_52 { pt3dadd( -34.6137, -87.8445, -15.4247, 0.29 ) }
    dend_52 { pt3dadd( -34.8528, -88.3197, -15.4877, 1.25 ) }
    dend_52 { pt3dadd( -35.1316, -88.8575, -15.5436, 1.69 ) }
    dend_52 { pt3dadd( -35.5273, -89.6575, -15.6253, 0.66 ) }
    dend_52 { pt3dadd( -35.5545, -89.7175, -15.6331, 0.66 ) }
    dend_52 { pt3dadd( -35.7037, -90.0856, -15.6899, 0.22 ) }
    dend_52 { pt3dadd( -36.0669, -91.0714, -15.8562, 0.22 ) }
    dend_52 { pt3dadd( -36.0887, -91.1329, -15.8672, 0.22 ) }
    dend_52 { pt3dadd( -36.4159, -92.1315, -16.0797, 0.88 ) }
    dend_52 { pt3dadd( -36.6095, -92.7361, -16.2379, 0.88 ) }
    dend_52 { pt3dadd( -36.6385, -92.8295, -16.2644, 0.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 61/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -0.87566, -23.1081, -1.73943, 1.4 ) }
    dend_42 { pt3dadd( -0.699618, -23.4623, -1.5991, 1.4 ) }
    dend_42 { pt3dadd( -0.319869, -24.2865, -1.18306, 1.11 ) }
    dend_42 { pt3dadd( 0.065959, -25.1553, -0.748688, 1.03 ) }
    dend_42 { pt3dadd( 0.086462, -25.202, -0.726773, 1.03 ) }
    dend_42 { pt3dadd( 0.388211, -25.8545, -0.450439, 1.03 ) }
    dend_42 { pt3dadd( 0.848018, -26.81, -0.0868209, 1.03 ) }
    dend_42 { pt3dadd( 1.27574, -27.6784, 0.209577, 1.47 ) }
    dend_42 { pt3dadd( 1.64145, -28.3684, 0.406352, 1.47 ) }
    dend_42 { pt3dadd( 2.00362, -29.0027, 0.540039, 1.18 ) }
    dend_42 { pt3dadd( 2.50567, -29.8361, 0.684963, 1.18 ) }
    dend_42 { pt3dadd( 2.90835, -30.4536, 0.758014, 1.55 ) }
    dend_42 { pt3dadd( 3.35665, -31.091, 0.770935, 1.55 ) }
    dend_42 { pt3dadd( 3.91922, -31.8425, 0.73889, 1.33 ) }
    dend_42 { pt3dadd( 4.61485, -32.7167, 0.686225, 0.96 ) }
    dend_42 { pt3dadd( 4.65479, -32.7657, 0.682798, 0.96 ) }
    dend_42 { pt3dadd( 5.2745, -33.5196, 0.623315, 0.81 ) }
    dend_42 { pt3dadd( 5.75182, -34.0838, 0.570333, 0.81 ) }
    dend_42 { pt3dadd( 6.28822, -34.7024, 0.496285, 1.03 ) }
    dend_42 { pt3dadd( 6.51729, -34.9517, 0.453073, 1.03 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 81/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -0.87566, -23.1081, -1.73943, 1.69 ) }
    dend_37 { pt3dadd( -1.01871, -23.393, -1.74411, 1.69 ) }
    dend_37 { pt3dadd( -1.23709, -23.9847, -1.78394, 1.69 ) }
    dend_37 { pt3dadd( -1.50954, -24.8872, -1.85414, 1.47 ) }
    dend_37 { pt3dadd( -1.52435, -24.9406, -1.85803, 1.47 ) }
    dend_37 { pt3dadd( -1.79691, -25.9225, -1.94178, 1.11 ) }
    dend_37 { pt3dadd( -2.13431, -27.1978, -2.05524, 1.11 ) }
    dend_37 { pt3dadd( -2.46199, -28.6829, -2.16371, 1.11 ) }
    dend_37 { pt3dadd( -2.55645, -29.2381, -2.19556, 1.77 ) }
    dend_37 { pt3dadd( -2.69704, -30.2308, -2.23488, 1.77 ) }
    dend_37 { pt3dadd( -2.74484, -30.6431, -2.24359, 1.55 ) }
    dend_37 { pt3dadd( -2.81354, -31.5119, -2.23337, 1.33 ) }
    dend_37 { pt3dadd( -2.8722, -32.6101, -2.18828, 1.25 ) }
    dend_37 { pt3dadd( -2.9175, -33.9966, -2.10719, 1.25 ) }
    dend_37 { pt3dadd( -2.93647, -34.9676, -2.04993, 1.55 ) }
    dend_37 { pt3dadd( -2.94551, -35.7444, -2.02135, 1.55 ) }
    dend_37 { pt3dadd( -2.9594, -36.3655, -2.00794, 0.81 ) }
    dend_37 { pt3dadd( -3.09417, -39.2304, -2.00936, 0.81 ) }
    dend_37 { pt3dadd( -3.1532, -39.9993, -2.02812, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_37 { pt3dadd( -3.24477, -40.8683, -2.05851, 0.88 ) }
    dend_37 { pt3dadd( -3.40157, -41.9775, -2.13485, 1.69 ) }
    dend_37 { pt3dadd( -3.5634, -42.8563, -2.22446, 1.92 ) }
    dend_37 { pt3dadd( -3.72564, -43.6118, -2.33385, 1.92 ) }
    dend_37 { pt3dadd( -3.93623, -44.4486, -2.48704, 1.92 ) }
    dend_37 { pt3dadd( -3.94921, -44.5018, -2.49629, 1.92 ) }
    dend_37 { pt3dadd( -4.25032, -45.7181, -2.70542, 2.28 ) }
    dend_37 { pt3dadd( -4.26199, -45.7718, -2.71342, 2.28 ) }
    dend_37 { pt3dadd( -4.40392, -46.5672, -2.85467, 2.5 ) }
    dend_37 { pt3dadd( -4.52091, -47.4146, -3.02114, 2.36 ) }
    dend_37 { pt3dadd( -4.61169, -48.2658, -3.1847, 1.92 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 11/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 14.5378, 31.1942, -23.2752, 0.66 ) }
    dend_32 { pt3dadd( 14.7923, 31.5883, -23.6098, 0.66 ) }
    dend_32 { pt3dadd( 15.3953, 32.5648, -24.3512, 0.96 ) }
    dend_32 { pt3dadd( 15.4383, 32.6253, -24.3934, 0.96 ) }
    dend_32 { pt3dadd( 16.6289, 34.1583, -25.4038, 0.29 ) }
    dend_32 { pt3dadd( 16.7302, 34.2643, -25.4687, 0.29 ) }
    dend_32 { pt3dadd( 17.6324, 35.0187, -25.91, 0.29 ) }
    dend_32 { pt3dadd( 17.6976, 35.0443, -25.9365, 0.29 ) }
    dend_32 { pt3dadd( 18.5054, 35.167, -26.1847, 0.59 ) }
    dend_32 { pt3dadd( 18.5883, 35.1782, -26.2018, 0.59 ) }
    dend_32 { pt3dadd( 19.6591, 35.3499, -26.2946, 0.88 ) }
    dend_32 { pt3dadd( 20.2592, 35.5002, -26.3968, 0.88 ) }
    dend_32 { pt3dadd( 21.9706, 35.9963, -26.7948, 0.59 ) }
    dend_32 { pt3dadd( 22.5239, 36.2024, -26.9358, 0.88 ) }
    dend_32 { pt3dadd( 23.46, 36.6489, -27.2066, 1.25 ) }
    dend_32 { pt3dadd( 24.2399, 37.0777, -27.4155, 0.96 ) }
    dend_32 { pt3dadd( 25.4868, 37.8951, -27.6948, 0.44 ) }
    dend_32 { pt3dadd( 25.5552, 37.9443, -27.7087, 0.44 ) }
    dend_32 { pt3dadd( 26.3005, 38.5136, -27.8121, 0.44 ) }
    dend_32 { pt3dadd( 26.8541, 38.9153, -27.8912, 1.11 ) }
    dend_32 { pt3dadd( 27.6943, 39.5437, -28.0024, 1.47 ) }
    dend_32 { pt3dadd( 28.5431, 40.2304, -28.0899, 1.03 ) }
    dend_32 { pt3dadd( 29.6862, 41.3023, -28.2205, 0.52 ) }
    dend_32 { pt3dadd( 30.3944, 42.07, -28.3388, 0.52 ) }
    dend_32 { pt3dadd( 30.4401, 42.1285, -28.349, 0.52 ) }
    dend_32 { pt3dadd( 31.1243, 43.1498, -28.512, 0.52 ) }
    dend_32 { pt3dadd( 31.4005, 43.6038, -28.6279, 0.52 ) }
    dend_32 { pt3dadd( 32.188, 44.8793, -29.0444, 0.52 ) }
    dend_32 { pt3dadd( 32.6015, 45.5072, -29.2998, 1.03 ) }
    dend_32 { pt3dadd( 32.8926, 45.928, -29.5036, 1.55 ) }
    dend_32 { pt3dadd( 33.5668, 46.9473, -30.0194, 1.55 ) }
    dend_32 { pt3dadd( 34.7392, 48.7452, -31.0592, 1.55 ) }
    dend_32 { pt3dadd( 35.6059, 50.1247, -31.9055, 0.44 ) }
    dend_32 { pt3dadd( 36.3112, 51.3288, -32.6363, 0.44 ) }
    dend_32 { pt3dadd( 36.4066, 51.4972, -32.7417, 0.44 ) }
    dend_32 { pt3dadd( 37.1106, 52.7628, -33.4992, 0.44 ) }
    dend_32 { pt3dadd( 37.9242, 54.2144, -34.3566, 0.44 ) }
    dend_32 { pt3dadd( 37.9571, 54.2745, -34.3867, 0.44 ) }
    dend_32 { pt3dadd( 38.4501, 55.1479, -34.9321, 0.44 ) }
    dend_32 { pt3dadd( 39.2677, 56.5103, -35.8772, 1.84 ) }
    dend_32 { pt3dadd( 39.7759, 57.3298, -36.497, 2.14 ) }
    dend_32 { pt3dadd( 40.756, 58.8515, -37.8123, 1.33 ) }
    dend_32 { pt3dadd( 41.1456, 59.4824, -38.3767, 1.03 ) }
    dend_32 { pt3dadd( 42.4954, 61.732, -40.5299, 0.52 ) }
    dend_32 { pt3dadd( 42.5409, 61.8167, -40.6131, 0.52 ) }
    dend_32 { pt3dadd( 42.7899, 62.3859, -41.1427, 0.52 ) }
    dend_32 { pt3dadd( 43.122, 63.2948, -41.8748, 0.52 ) }
    dend_32 { pt3dadd( 43.3491, 64.0737, -42.3135, 0.52 ) }
    dend_32 { pt3dadd( 43.3955, 64.2343, -42.3861, 0.52 ) }
    dend_32 { pt3dadd( 43.8072, 65.7354, -42.839, 0.52 ) }
    dend_32 { pt3dadd( 44.2665, 67.3864, -43.3298, 1.4 ) }
    dend_32 { pt3dadd( 44.5667, 68.4236, -43.596, 1.77 ) }
    dend_32 { pt3dadd( 44.8472, 69.4417, -43.813, 1.25 ) }
    dend_32 { pt3dadd( 45.1658, 70.6319, -44.0753, 0.44 ) }
    dend_32 { pt3dadd( 45.4636, 71.6037, -44.2645, 0.44 ) }
    dend_32 { pt3dadd( 45.5266, 71.7717, -44.2964, 0.44 ) }
    dend_32 { pt3dadd( 46.2247, 73.4621, -44.5387, 0.44 ) }
    dend_32 { pt3dadd( 46.2957, 73.6219, -44.5607, 0.44 ) }
    dend_32 { pt3dadd( 46.923, 75.0648, -44.7143, 1.69 ) }
    dend_32 { pt3dadd( 47.5046, 76.4445, -44.8132, 1.69 ) }
    dend_32 { pt3dadd( 48.0713, 77.9131, -44.9696, 0.37 ) }
    dend_32 { pt3dadd( 48.6058, 79.4659, -45.173, 0.37 ) }
    dend_32 { pt3dadd( 48.6275, 79.5361, -45.187, 0.37 ) }
    dend_32 { pt3dadd( 49.2144, 81.4749, -45.7188, 0.37 ) }
    dend_32 { pt3dadd( 49.2799, 81.6897, -45.7885, 0.37 ) }
    dend_32 { pt3dadd( 49.8911, 83.629, -46.5891, 0.37 ) }
    dend_32 { pt3dadd( 49.9134, 83.694, -46.6168, 0.37 ) }
    dend_32 { pt3dadd( 50.485, 85.1954, -47.2725, 0.37 ) }
    dend_32 { pt3dadd( 51.4268, 87.4626, -48.2476, 1.77 ) }
    dend_32 { pt3dadd( 51.7638, 88.2231, -48.5637, 2.21 ) }
    dend_32 { pt3dadd( 52.5339, 90.0464, -49.1917, 1.18 ) }
    dend_32 { pt3dadd( 52.9758, 91.1227, -49.4662, 0.22 ) }
    dend_32 { pt3dadd( 53.3015, 92.071, -49.6276, 0.22 ) }
    dend_32 { pt3dadd( 53.3198, 92.1436, -49.6319, 0.22 ) }
    dend_32 { pt3dadd( 53.5129, 93.3992, -49.6234, 0.22 ) }
    dend_32 { pt3dadd( 53.6587, 94.491, -49.6072, 0.22 ) }
    dend_32 { pt3dadd( 53.6801, 94.6391, -49.6003, 0.22 ) }
    dend_32 { pt3dadd( 53.8587, 95.5605, -49.6215, 0.22 ) }
    dend_32 { pt3dadd( 54.0683, 96.3022, -49.6346, 1.11 ) }
    dend_32 { pt3dadd( 54.2894, 96.8575, -49.6304, 1.11 ) }
    dend_32 { pt3dadd( 54.5623, 97.3515, -49.6127, 0.29 ) }
    dend_32 { pt3dadd( 54.743, 97.6507, -49.6205, 0.29 ) }
    dend_32 { pt3dadd( 55.0314, 98.132, -49.6671, 0.29 ) }
    dend_32 { pt3dadd( 55.2629, 98.5215, -49.6551, 0.29 ) }
    dend_32 { pt3dadd( 55.71, 99.3925, -49.4719, 0.29 ) }
    dend_32 { pt3dadd( 55.7556, 99.4935, -49.4432, 0.29 ) }
    dend_32 { pt3dadd( 56.1204, 100.578, -49.1217, 0.29 ) }
    dend_32 { pt3dadd( 56.1902, 100.822, -49.0437, 0.29 ) }
    dend_32 { pt3dadd( 56.7423, 102.744, -48.4371, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_32 { pt3dadd( 57.1626, 104.001, -48.0246, 0.22 ) }
    dend_32 { pt3dadd( 57.1881, 104.068, -48.0018, 0.22 ) }
    dend_32 { pt3dadd( 57.7443, 105.365, -47.5467, 0.22 ) }
    dend_32 { pt3dadd( 57.7755, 105.429, -47.5232, 0.22 ) }
    dend_32 { pt3dadd( 58.5027, 106.805, -47.116, 0.22 ) }
    dend_32 { pt3dadd( 58.8319, 107.349, -47.0412, 0.81 ) }
    dend_32 { pt3dadd( 59.0379, 107.639, -46.9955, 0.81 ) }
    dend_32 { pt3dadd( 59.1062, 107.718, -46.9799, 0.81 ) }
    dend_32 { pt3dadd( 59.3617, 107.942, -46.9205, 0.29 ) }
    dend_32 { pt3dadd( 59.418, 107.99, -46.9068, 0.29 ) }
    dend_32 { pt3dadd( 60.0157, 108.476, -46.7487, 0.29 ) }
    dend_32 { pt3dadd( 60.1458, 108.599, -46.7139, 0.29 ) }
    dend_32 { pt3dadd( 60.7999, 109.241, -46.5382, 0.66 ) }
    dend_32 { pt3dadd( 60.8573, 109.303, -46.525, 0.66 ) }
    dend_32 { pt3dadd( 61.2001, 109.695, -46.4545, 0.66 ) }
    dend_32 { pt3dadd( 61.488, 110.03, -46.3992, 0.29 ) }
    dend_32 { pt3dadd( 61.921, 110.532, -46.3209, 0.29 ) }
    dend_32 { pt3dadd( 61.9697, 110.589, -46.313, 0.29 ) }
    dend_32 { pt3dadd( 62.8026, 111.547, -46.188, 0.29 ) }
    dend_32 { pt3dadd( 63.1738, 111.959, -46.1326, 1.18 ) }
    dend_32 { pt3dadd( 63.7986, 112.644, -46.0405, 1.47 ) }
    dend_32 { pt3dadd( 63.9844, 112.844, -46.0129, 1.47 ) }
    dend_32 { pt3dadd( 64.7086, 113.63, -45.8955, 0.37 ) }
    dend_32 { pt3dadd( 65.3927, 114.408, -45.7691, 0.37 ) }
    dend_32 { pt3dadd( 65.4476, 114.472, -45.7576, 0.37 ) }
    dend_32 { pt3dadd( 66.0917, 115.232, -45.5785, 0.22 ) }
    dend_32 { pt3dadd( 66.1389, 115.289, -45.5658, 0.22 ) }
    dend_32 { pt3dadd( 67.1297, 116.479, -45.3061, 0.22 ) }
    dend_32 { pt3dadd( 67.9105, 117.441, -45.0992, 0.22 ) }
    dend_32 { pt3dadd( 68.011, 117.57, -45.0639, 0.22 ) }
    dend_32 { pt3dadd( 68.977, 118.889, -44.656, 0.22 ) }
    dend_32 { pt3dadd( 69.4735, 119.68, -44.401, 1.47 ) }
    dend_32 { pt3dadd( 69.8318, 120.374, -44.1633, 1.99 ) }
    dend_32 { pt3dadd( 70.0521, 120.92, -43.9632, 1.99 ) }
    dend_32 { pt3dadd( 70.4655, 122.277, -43.4617, 0.66 ) }
    dend_32 { pt3dadd( 70.5965, 122.852, -43.2548, 0.22 ) }
    dend_32 { pt3dadd( 70.7592, 124.149, -42.8311, 0.22 ) }
    dend_32 { pt3dadd( 70.8242, 124.811, -42.5536, 0.66 ) }
    dend_32 { pt3dadd( 70.8316, 124.913, -42.5079, 0.66 ) }
    dend_32 { pt3dadd( 70.8821, 125.538, -42.2285, 0.66 ) }
    dend_32 { pt3dadd( 70.8959, 125.686, -42.1683, 0.66 ) }
    dend_32 { pt3dadd( 70.9825, 126.749, -41.6986, 0.66 ) }
    dend_32 { pt3dadd( 71.0241, 127.855, -41.1968, 0.29 ) }
    dend_32 { pt3dadd( 71.0195, 127.935, -41.168, 0.29 ) }
    dend_32 { pt3dadd( 70.941, 128.522, -40.9882, 0.29 ) }
    dend_32 { pt3dadd( 70.909, 128.677, -40.933, 0.29 ) }
    dend_32 { pt3dadd( 70.6828, 129.584, -40.5978, 0.29 ) }
    dend_32 { pt3dadd( 70.5641, 129.995, -40.4472, 0.29 ) }
    dend_32 { pt3dadd( 70.4081, 130.546, -40.1971, 0.29 ) }
    dend_32 { pt3dadd( 70.3891, 130.62, -40.1597, 0.29 ) }
    dend_32 { pt3dadd( 70.0994, 131.779, -39.4128, 0.29 ) }
    dend_32 { pt3dadd( 69.8014, 133.051, -38.4957, 0.29 ) }
    dend_32 { pt3dadd( 69.7917, 133.101, -38.4579, 0.29 ) }
    dend_32 { pt3dadd( 69.47, 134.984, -37.0326, 1.03 ) }
    dend_32 { pt3dadd( 69.3116, 136.0, -36.3223, 1.03 ) }
    dend_32 { pt3dadd( 69.0638, 137.735, -35.2222, 0.22 ) }
    dend_32 { pt3dadd( 69.0445, 137.867, -35.1539, 0.22 ) }
    dend_32 { pt3dadd( 68.9159, 138.952, -34.7318, 0.22 ) }
    dend_32 { pt3dadd( 68.8936, 139.178, -34.6752, 0.22 ) }
    dend_32 { pt3dadd( 68.767, 140.969, -34.5166, 0.22 ) }
    dend_32 { pt3dadd( 68.7489, 141.217, -34.5157, 0.22 ) }
    dend_32 { pt3dadd( 68.6487, 142.733, -34.6272, 0.22 ) }
    dend_32 { pt3dadd( 68.544, 144.17, -34.7402, 1.25 ) }
    dend_32 { pt3dadd( 68.4875, 144.875, -34.7974, 1.69 ) }
    dend_32 { pt3dadd( 68.432, 145.639, -34.8565, 1.69 ) }
    dend_32 { pt3dadd( 68.383, 146.747, -34.9737, 0.74 ) }
    dend_32 { pt3dadd( 68.3782, 147.21, -35.0275, 0.29 ) }
    dend_32 { pt3dadd( 68.3839, 147.369, -35.0459, 0.29 ) }
    dend_32 { pt3dadd( 68.4335, 148.687, -35.1534, 0.29 ) }
    dend_32 { pt3dadd( 68.4384, 148.762, -35.1582, 0.29 ) }
    dend_32 { pt3dadd( 68.547, 150.034, -35.2253, 0.88 ) }
    dend_32 { pt3dadd( 68.6313, 151.108, -35.269, 0.88 ) }
    dend_32 { pt3dadd( 68.6726, 151.965, -35.2952, 0.88 ) }
    dend_32 { pt3dadd( 68.6662, 152.684, -35.3096, 0.29 ) }
    dend_32 { pt3dadd( 68.6194, 153.463, -35.3108, 0.29 ) }
    dend_32 { pt3dadd( 68.609, 153.63, -35.3052, 0.29 ) }
    dend_32 { pt3dadd( 68.5412, 154.57, -35.2495, 0.29 ) }
    dend_32 { pt3dadd( 68.5308, 154.806, -35.242, 0.29 ) }
    dend_32 { pt3dadd( 68.5147, 155.924, -35.2326, 0.29 ) }
    dend_32 { pt3dadd( 68.517, 156.03, -35.2339, 0.29 ) }
    dend_32 { pt3dadd( 68.6267, 157.976, -35.2485, 0.29 ) }
    dend_32 { pt3dadd( 68.7391, 159.08, -35.2467, 0.74 ) }
    dend_32 { pt3dadd( 68.8326, 159.679, -35.2392, 0.74 ) }
    dend_32 { pt3dadd( 68.8967, 160.058, -35.2326, 0.74 ) }
    dend_32 { pt3dadd( 69.0083, 160.742, -35.216, 0.74 ) }
    dend_32 { pt3dadd( 69.0268, 160.901, -35.2126, 0.74 ) }
    dend_32 { pt3dadd( 69.0786, 161.45, -35.2373, 0.29 ) }
    dend_32 { pt3dadd( 69.0938, 161.598, -35.2492, 0.29 ) }
    dend_32 { pt3dadd( 69.1849, 162.689, -35.3724, 0.29 ) }
    dend_32 { pt3dadd( 69.2888, 164.388, -35.5931, 0.29 ) }
    dend_32 { pt3dadd( 69.2936, 164.525, -35.6117, 0.29 ) }
    dend_32 { pt3dadd( 69.311, 166.108, -35.82, 0.29 ) }
    dend_32 { pt3dadd( 69.3103, 166.183, -35.8289, 0.29 ) }
    dend_32 { pt3dadd( 69.2981, 167.162, -35.9296, 1.25 ) }
    dend_32 { pt3dadd( 69.2721, 168.439, -36.0248, 2.14 ) }
    dend_32 { pt3dadd( 69.236, 169.47, -36.0689, 2.8 ) }
    dend_32 { pt3dadd( 69.1743, 170.486, -36.0746, 2.14 ) }
    dend_32 { pt3dadd( 69.0749, 171.647, -36.0332, 0.88 ) }
    dend_32 { pt3dadd( 68.9816, 172.648, -35.9963, 0.44 ) }
    dend_32 { pt3dadd( 68.8996, 173.514, -35.9607, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_32 { pt3dadd( 68.8877, 173.637, -35.9594, 0.44 ) }
    dend_32 { pt3dadd( 68.7036, 175.64, -36.0767, 0.44 ) }
    dend_32 { pt3dadd( 68.698, 175.714, -36.0896, 0.44 ) }
    dend_32 { pt3dadd( 68.7036, 176.484, -36.316, 0.44 ) }
    dend_32 { pt3dadd( 68.718, 176.705, -36.3934, 0.44 ) }
    dend_32 { pt3dadd( 68.8616, 178.008, -36.8752, 0.44 ) }
    dend_32 { pt3dadd( 69.1263, 179.771, -37.5503, 1.18 ) }
    dend_32 { pt3dadd( 69.3923, 181.173, -38.0876, 0.81 ) }
    dend_32 { pt3dadd( 69.8976, 183.64, -38.9995, 0.29 ) }
    dend_32 { pt3dadd( 70.0708, 184.423, -39.2697, 0.88 ) }
    dend_32 { pt3dadd( 70.2691, 185.306, -39.5142, 0.88 ) }
    dend_32 { pt3dadd( 70.8451, 187.823, -40.0427, 0.37 ) }
    dend_32 { pt3dadd( 71.0467, 188.758, -40.1771, 0.74 ) }
    dend_32 { pt3dadd( 71.0747, 188.905, -40.1889, 0.74 ) }
    dend_32 { pt3dadd( 71.2331, 189.983, -40.2318, 0.22 ) }
    dend_32 { pt3dadd( 71.6503, 193.142, -40.3052, 0.22 ) }
    dend_32 { pt3dadd( 71.679, 193.376, -40.3037, 0.22 ) }
    dend_32 { pt3dadd( 71.8084, 194.557, -40.2521, 0.22 ) }
    dend_32 { pt3dadd( 71.8329, 194.789, -40.2439, 0.22 ) }
    dend_32 { pt3dadd( 71.9847, 196.276, -40.2047, 0.66 ) }
    dend_32 { pt3dadd( 71.9992, 196.425, -40.2024, 0.66 ) }
    dend_32 { pt3dadd( 72.08, 197.225, -40.2456, 0.88 ) }
    dend_32 { pt3dadd( 72.1624, 197.903, -40.3058, 0.52 ) }
    dend_32 { pt3dadd( 72.1848, 198.06, -40.3239, 0.52 ) }
    dend_32 { pt3dadd( 72.2821, 198.692, -40.3727, 0.29 ) }
    dend_32 { pt3dadd( 72.5891, 200.671, -40.483, 0.29 ) }
    dend_32 { pt3dadd( 72.7706, 201.984, -40.53, 0.96 ) }
    dend_32 { pt3dadd( 72.7891, 202.133, -40.5328, 0.96 ) }
    dend_32 { pt3dadd( 72.8907, 203.055, -40.5294, 0.96 ) }
    dend_32 { pt3dadd( 73.1371, 205.239, -40.5709, 0.22 ) }
    dend_32 { pt3dadd( 73.1869, 205.642, -40.5834, 0.66 ) }
    dend_32 { pt3dadd( 73.2531, 206.199, -40.5657, 0.66 ) }
    dend_32 { pt3dadd( 73.2622, 206.273, -40.561, 0.66 ) }
    dend_32 { pt3dadd( 73.3334, 207.056, -40.5466, 0.66 ) }
    dend_32 { pt3dadd( 73.4329, 208.245, -40.5748, 0.44 ) }
    dend_32 { pt3dadd( 73.4376, 208.319, -40.5835, 0.44 ) }
    dend_32 { pt3dadd( 73.5561, 209.901, -40.7663, 0.44 ) }
    dend_32 { pt3dadd( 73.6303, 210.957, -40.879, 1.33 ) }
    dend_32 { pt3dadd( 73.7034, 212.401, -40.9929, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 39/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 14.5378, 31.1942, -23.2752, 1.18 ) }
    dend_31 { pt3dadd( 13.5916, 31.6261, -25.3786, 1.18 ) }
    dend_31 { pt3dadd( 13.0608, 31.8174, -26.5566, 1.18 ) }
    dend_31 { pt3dadd( 12.4689, 31.9525, -27.7422, 0.88 ) }
    dend_31 { pt3dadd( 11.5147, 32.1138, -29.547, 0.66 ) }
    dend_31 { pt3dadd( 10.5954, 32.1894, -31.1522, 1.18 ) }
    dend_31 { pt3dadd( 9.91866, 32.2102, -32.2725, 1.4 ) }
    dend_31 { pt3dadd( 8.72194, 32.1111, -33.985, 0.52 ) }
    dend_31 { pt3dadd( 7.95262, 31.912, -35.0618, 0.52 ) }
    dend_31 { pt3dadd( 7.84448, 31.8596, -35.1945, 0.52 ) }
    dend_31 { pt3dadd( 7.14666, 31.2841, -35.905, 1.33 ) }
    dend_31 { pt3dadd( 7.11365, 31.221, -35.9499, 1.33 ) }
    dend_31 { pt3dadd( 7.00182, 30.5362, -36.5965, 1.33 ) }
    dend_31 { pt3dadd( 7.00015, 30.4778, -36.6572, 1.33 ) }
    dend_31 { pt3dadd( 7.00611, 29.6918, -37.5826, 0.81 ) }
    dend_31 { pt3dadd( 7.02592, 29.1712, -38.276, 0.81 ) }
    dend_31 { pt3dadd( 7.11362, 27.7706, -40.2514, 0.88 ) }
    dend_31 { pt3dadd( 7.26004, 25.4148, -43.6698, 0.88 ) }
    dend_31 { pt3dadd( 7.26118, 25.3683, -43.739, 0.88 ) }
    dend_31 { pt3dadd( 7.24879, 24.3955, -45.1951, 0.88 ) }
    dend_31 { pt3dadd( 7.16844, 23.2588, -46.9503, 0.66 ) }
    dend_31 { pt3dadd( 7.10446, 22.8466, -47.5937, 0.44 ) }
    dend_31 { pt3dadd( 7.08746, 22.7924, -47.6712, 0.44 ) }
    dend_31 { pt3dadd( 6.74968, 22.0578, -48.5344, 0.44 ) }
    dend_31 { pt3dadd( 6.72306, 22.0061, -48.5953, 0.44 ) }
    dend_31 { pt3dadd( 6.52973, 21.6922, -48.9686, 0.88 ) }
    dend_31 { pt3dadd( 6.22755, 21.2033, -49.4468, 0.88 ) }
    dend_31 { pt3dadd( 5.60116, 19.838, -50.6436, 0.44 ) }
    dend_31 { pt3dadd( 5.5851, 19.7717, -50.6916, 0.44 ) }
    dend_31 { pt3dadd( 5.59649, 19.2332, -51.132, 0.44 ) }
    dend_31 { pt3dadd( 5.60952, 19.1351, -51.2147, 0.44 ) }
    dend_31 { pt3dadd( 5.93682, 17.9769, -52.115, 0.44 ) }
    dend_31 { pt3dadd( 6.10261, 17.4614, -52.5119, 1.18 ) }
    dend_31 { pt3dadd( 6.53385, 16.1747, -53.5089, 1.18 ) }
    dend_31 { pt3dadd( 7.2483, 13.9169, -55.2934, 0.37 ) }
    dend_31 { pt3dadd( 7.26584, 13.8539, -55.3465, 0.37 ) }
    dend_31 { pt3dadd( 7.5337, 12.7948, -56.3753, 0.37 ) }
    dend_31 { pt3dadd( 7.95398, 10.9495, -58.4052, 0.37 ) }
    dend_31 { pt3dadd( 7.96967, 10.8298, -58.5388, 0.37 ) }
    dend_31 { pt3dadd( 7.98718, 10.1784, -59.2439, 1.11 ) }
    dend_31 { pt3dadd( 7.82807, 8.9125, -60.4566, 1.11 ) }
    dend_31 { pt3dadd( 7.49469, 7.20883, -62.0859, 0.44 ) }
    dend_31 { pt3dadd( 7.47523, 7.12489, -62.1786, 0.44 ) }
    dend_31 { pt3dadd( 7.27109, 6.11186, -63.3293, 0.44 ) }
    dend_31 { pt3dadd( 7.21203, 5.80044, -63.6918, 1.11 ) }
    dend_31 { pt3dadd( 6.98196, 4.87, -64.7724, 1.4 ) }
    dend_31 { pt3dadd( 6.9627, 4.80462, -64.84, 1.4 ) }
    dend_31 { pt3dadd( 6.24047, 2.61272, -66.8346, 0.29 ) }
    dend_31 { pt3dadd( 6.06354, 2.04799, -67.3573, 0.29 ) }
    dend_31 { pt3dadd( 6.04277, 1.99254, -67.4173, 0.29 ) }
    dend_31 { pt3dadd( 5.61701, 1.06144, -68.5087, 0.29 ) }
    dend_31 { pt3dadd( 5.13396, 0.0910957, -69.7937, 0.74 ) }
    dend_31 { pt3dadd( 4.9697, -0.207132, -70.1859, 0.74 ) }
    dend_31 { pt3dadd( 4.90994, -0.303206, -70.309, 0.74 ) }
    dend_31 { pt3dadd( 3.94538, -1.8048, -72.6936, 0.37 ) }
    dend_31 { pt3dadd( 3.9236, -1.84176, -72.765, 0.37 ) }
    dend_31 { pt3dadd( 3.43151, -2.6937, -74.6199, 1.11 ) }
    dend_31 { pt3dadd( 3.28934, -2.92312, -75.1755, 1.11 ) }
    dend_31 { pt3dadd( 3.23004, -3.01805, -75.4136, 1.11 ) }
    dend_31 { pt3dadd( 2.53391, -4.12262, -78.0873, 0.37 ) }
    dend_31 { pt3dadd( 1.73835, -5.50295, -81.2873, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_31 { pt3dadd( 1.51061, -5.88044, -82.1508, 1.11 ) }
    dend_31 { pt3dadd( 0.924577, -6.69684, -84.053, 0.37 ) }
    dend_31 { pt3dadd( 0.900812, -6.72805, -84.1266, 0.37 ) }
    dend_31 { pt3dadd( 0.594298, -7.09318, -85.0595, 0.37 ) }
    dend_31 { pt3dadd( 0.16215, -7.51488, -86.4985, 0.37 ) }
    dend_31 { pt3dadd( 0.138394, -7.52772, -86.5774, 0.37 ) }
    dend_31 { pt3dadd( -0.41075, -7.70357, -88.5993, 0.29 ) }
    dend_31 { pt3dadd( -0.427755, -7.70585, -88.6817, 0.29 ) }
    dend_31 { pt3dadd( -0.966904, -7.72067, -91.4445, 1.47 ) }
    dend_31 { pt3dadd( -1.45644, -7.71027, -93.9471, 0.74 ) }
    dend_31 { pt3dadd( -1.62232, -7.72416, -94.7308, 0.74 ) }
    dend_31 { pt3dadd( -1.63924, -7.72899, -94.8131, 0.74 ) }
    dend_31 { pt3dadd( -2.12206, -8.09798, -97.4485, 0.37 ) }
    dend_31 { pt3dadd( -2.3928, -8.42648, -98.6806, 0.37 ) }
    dend_31 { pt3dadd( -2.7391, -8.93398, -99.4725, 0.37 ) }
    dend_31 { pt3dadd( -3.0696, -9.47106, -100.094, 0.37 ) }
    dend_31 { pt3dadd( -3.14458, -9.59718, -100.229, 0.37 ) }
    dend_31 { pt3dadd( -3.63806, -10.377, -101.027, 0.37 ) }
    dend_31 { pt3dadd( -3.71863, -10.5128, -101.158, 0.37 ) }
    dend_31 { pt3dadd( -4.24646, -11.6233, -102.788, 0.74 ) }
    dend_31 { pt3dadd( -4.64904, -12.6727, -104.824, 0.22 ) }
    dend_31 { pt3dadd( -4.77588, -13.0879, -105.7, 0.22 ) }
    dend_31 { pt3dadd( -4.78401, -13.1184, -105.766, 0.22 ) }
    dend_31 { pt3dadd( -5.01434, -14.0962, -107.913, 0.66 ) }
    dend_31 { pt3dadd( -5.54102, -16.1369, -112.252, 1.55 ) }
    dend_31 { pt3dadd( -5.83943, -17.3574, -114.772, 0.37 ) }
    dend_31 { pt3dadd( -5.93681, -17.6706, -115.408, 0.22 ) }
    dend_31 { pt3dadd( -6.04678, -18.01, -116.135, 0.22 ) }
    dend_31 { pt3dadd( -6.09565, -18.1422, -116.422, 0.22 ) }
    dend_31 { pt3dadd( -6.55738, -19.0151, -118.354, 0.22 ) }
    dend_31 { pt3dadd( -6.59616, -19.059, -118.415, 0.22 ) }
    dend_31 { pt3dadd( -7.93111, -20.0141, -119.445, 1.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -9.48821, 44.0558, -6.65452, 2.14 ) }
    dend_5 { pt3dadd( -9.91437, 45.8753, -9.67027, 2.14 ) }
    dend_5 { pt3dadd( -9.9319, 45.9167, -9.72569, 2.14 ) }
    dend_5 { pt3dadd( -10.1716, 46.4834, -10.4838, 2.14 ) }
    dend_5 { pt3dadd( -10.2067, 46.5665, -10.595, 2.14 ) }
    dend_5 { pt3dadd( -11.0077, 48.4602, -13.1284, 2.14 ) }
    dend_5 { pt3dadd( -11.2824, 49.1096, -13.9969, 2.5 ) }
    dend_5 { pt3dadd( -12.0588, 50.4718, -15.4788, 2.8 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 40/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -9.48821, 44.0558, -6.65452, 0.59 ) }
    dend_2 { pt3dadd( -10.6803, 45.084, -6.48679, 0.59 ) }
    dend_2 { pt3dadd( -11.7108, 45.9574, -6.31373, 0.59 ) }
    dend_2 { pt3dadd( -11.7747, 46.0056, -6.30367, 0.59 ) }
    dend_2 { pt3dadd( -12.9464, 46.7934, -6.14521, 0.59 ) }
    dend_2 { pt3dadd( -14.415, 47.7027, -5.82324, 0.59 ) }
    dend_2 { pt3dadd( -15.3077, 48.2312, -5.59471, 0.59 ) }
    dend_2 { pt3dadd( -15.3667, 48.2622, -5.57938, 0.59 ) }
    dend_2 { pt3dadd( -16.9901, 49.0802, -5.10032, 0.96 ) }
    dend_2 { pt3dadd( -17.9413, 49.5459, -4.81154, 0.96 ) }
    dend_2 { pt3dadd( -19.6693, 50.3713, -4.26171, 1.03 ) }
    dend_2 { pt3dadd( -20.3089, 50.6978, -4.05911, 1.03 ) }
    dend_2 { pt3dadd( -21.0471, 51.1093, -3.86693, 0.74 ) }
    dend_2 { pt3dadd( -21.5127, 51.3991, -3.75552, 0.52 ) }
    dend_2 { pt3dadd( -22.1566, 51.8467, -3.63112, 0.52 ) }
    dend_2 { pt3dadd( -22.6382, 52.1855, -3.57916, 0.37 ) }
    dend_2 { pt3dadd( -23.0284, 52.451, -3.58695, 0.37 ) }
    dend_2 { pt3dadd( -23.7558, 52.8646, -3.59383, 0.37 ) }
    dend_2 { pt3dadd( -24.0856, 53.0221, -3.59584, 0.66 ) }
    dend_2 { pt3dadd( -25.091, 53.4473, -3.60349, 0.66 ) }
    dend_2 { pt3dadd( -25.6021, 53.6485, -3.60942, 0.22 ) }
    dend_2 { pt3dadd( -25.6881, 53.6808, -3.60917, 0.22 ) }
    dend_2 { pt3dadd( -26.9545, 54.1432, -3.59464, 0.22 ) }
    dend_2 { pt3dadd( -27.8196, 54.4657, -3.59182, 0.29 ) }
    dend_2 { pt3dadd( -28.3789, 54.6786, -3.59883, 0.52 ) }
    dend_2 { pt3dadd( -29.0087, 54.904, -3.57311, 0.52 ) }
    dend_2 { pt3dadd( -29.6081, 55.1027, -3.52457, 0.52 ) }
    dend_2 { pt3dadd( -29.6846, 55.1227, -3.50902, 0.52 ) }
    dend_2 { pt3dadd( -30.2791, 55.2174, -3.20308, 0.22 ) }
    dend_2 { pt3dadd( -30.9603, 55.2755, -2.74644, 0.22 ) }
    dend_2 { pt3dadd( -31.9965, 55.365, -1.98621, 0.22 ) }
    dend_2 { pt3dadd( -32.0799, 55.3723, -1.92164, 0.22 ) }
    dend_2 { pt3dadd( -33.5709, 55.4865, -0.819928, 1.55 ) }
    dend_2 { pt3dadd( -35.742, 55.6172, 0.66188, 0.29 ) }
    dend_2 { pt3dadd( -35.8194, 55.6236, 0.711032, 0.29 ) }
    dend_2 { pt3dadd( -36.6318, 55.7267, 1.17609, 0.29 ) }
    dend_2 { pt3dadd( -36.7748, 55.7549, 1.24503, 0.29 ) }
    dend_2 { pt3dadd( -38.1764, 56.1004, 1.80192, 0.29 ) }
    dend_2 { pt3dadd( -39.0746, 56.4167, 2.04074, 0.29 ) }
    dend_2 { pt3dadd( -39.9348, 56.8047, 2.11064, 0.29 ) }
    dend_2 { pt3dadd( -40.0039, 56.844, 2.12411, 0.29 ) }
    dend_2 { pt3dadd( -40.7549, 57.5263, 2.50113, 0.29 ) }
    dend_2 { pt3dadd( -40.7948, 57.5826, 2.54131, 0.29 ) }
    dend_2 { pt3dadd( -41.2292, 58.4644, 3.24376, 0.29 ) }
    dend_2 { pt3dadd( -41.2611, 58.5154, 3.29633, 0.29 ) }
    dend_2 { pt3dadd( -41.522, 58.7997, 3.66637, 0.29 ) }
    dend_2 { pt3dadd( -41.5722, 58.8391, 3.73252, 0.29 ) }
    dend_2 { pt3dadd( -42.5973, 59.5294, 5.15238, 0.29 ) }
    dend_2 { pt3dadd( -42.6328, 59.5579, 5.20334, 0.29 ) }
    dend_2 { pt3dadd( -43.1644, 60.03, 5.96463, 1.03 ) }
    dend_2 { pt3dadd( -43.2024, 60.0706, 6.02296, 1.03 ) }
    dend_2 { pt3dadd( -43.9316, 61.018, 7.21613, 0.74 ) }
    dend_2 { pt3dadd( -44.5504, 61.9851, 8.23338, 0.15 ) }
    dend_2 { pt3dadd( -44.9734, 62.7564, 9.01142, 0.15 ) }
    dend_2 { pt3dadd( -45.0044, 62.8112, 9.06173, 0.15 ) }
    dend_2 { pt3dadd( -45.3489, 63.3706, 9.61576, 0.81 ) }
    dend_2 { pt3dadd( -45.646, 63.8212, 10.0919, 1.18 ) }
    dend_2 { pt3dadd( -45.9526, 64.2809, 10.5599, 1.18 ) }
    dend_2 { pt3dadd( -47.1554, 65.9455, 12.2344, 1.25 ) }
    dend_2 { pt3dadd( -47.5726, 66.491, 12.8093, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_2 { pt3dadd( -48.8004, 68.2052, 14.5803, 0.37 ) }
    dend_2 { pt3dadd( -48.8334, 68.2576, 14.6317, 0.37 ) }
    dend_2 { pt3dadd( -49.2674, 69.071, 15.3423, 0.37 ) }
    dend_2 { pt3dadd( -49.8062, 70.2706, 16.2358, 0.37 ) }
    dend_2 { pt3dadd( -49.8416, 70.3665, 16.2874, 0.37 ) }
    dend_2 { pt3dadd( -50.2766, 71.7224, 16.9156, 0.37 ) }
    dend_2 { pt3dadd( -50.5918, 72.8748, 17.4268, 1.33 ) }
    dend_2 { pt3dadd( -50.804, 73.5267, 17.7795, 1.77 ) }
    dend_2 { pt3dadd( -50.8275, 73.591, 17.8221, 1.77 ) }
    dend_2 { pt3dadd( -51.0341, 74.08, 18.1857, 1.77 ) }
    dend_2 { pt3dadd( -51.0614, 74.1293, 18.2243, 1.77 ) }
    dend_2 { pt3dadd( -52.3113, 75.7504, 19.5555, 0.44 ) }
    dend_2 { pt3dadd( -53.1307, 76.6248, 20.3235, 0.44 ) }
    dend_2 { pt3dadd( -53.1709, 76.6642, 20.3639, 0.44 ) }
    dend_2 { pt3dadd( -53.5012, 76.991, 20.6871, 0.81 ) }
    dend_2 { pt3dadd( -53.7475, 77.2372, 20.921, 0.81 ) }
    dend_2 { pt3dadd( -54.1048, 77.6059, 21.2139, 0.81 ) }
    dend_2 { pt3dadd( -54.178, 77.6877, 21.2555, 0.81 ) }
    dend_2 { pt3dadd( -55.1317, 78.7518, 21.982, 0.59 ) }
    dend_2 { pt3dadd( -55.6669, 79.3293, 22.4106, 0.59 ) }
    dend_2 { pt3dadd( -55.7171, 79.3777, 22.4511, 0.59 ) }
    dend_2 { pt3dadd( -56.0946, 79.7054, 22.748, 0.59 ) }
    dend_2 { pt3dadd( -57.0794, 80.3703, 23.4263, 0.66 ) }
    dend_2 { pt3dadd( -58.1482, 81.0414, 24.0758, 0.29 ) }
    dend_2 { pt3dadd( -58.2138, 81.0768, 24.1042, 0.29 ) }
    dend_2 { pt3dadd( -58.8983, 81.3257, 24.4279, 0.59 ) }
    dend_2 { pt3dadd( -58.9593, 81.3385, 24.4559, 0.59 ) }
    dend_2 { pt3dadd( -59.9402, 81.2077, 24.8534, 0.81 ) }
    dend_2 { pt3dadd( -67.4348, 87.6904, 30.4887, 0.81 ) }
    dend_2 { pt3dadd( -74.6807, 93.4702, 37.125, 0.81 ) }
    dend_2 { pt3dadd( -81.983, 100.355, 42.5317, 0.81 ) }
    dend_2 { pt3dadd( -87.0741, 108.464, 48.7188, 0.81 ) }
    dend_2 { pt3dadd( -91.1302, 117.426, 54.4777, 0.81 ) }
    dend_2 { pt3dadd( -94.7931, 126.082, 60.9283, 0.81 ) }
    dend_2 { pt3dadd( -97.1841, 135.277, 67.2279, 0.81 ) }
    dend_2 { pt3dadd( -99.9396, 143.723, 74.3714, 0.81 ) }
    dend_2 { pt3dadd( -101.81, 152.992, 80.7377, 0.81 ) }
    dend_2 { pt3dadd( -103.911, 162.257, 87.038, 0.81 ) }
    dend_2 { pt3dadd( -106.194, 170.058, 95.0308, 0.81 ) }
    dend_2 { pt3dadd( -109.552, 178.155, 102.319, 0.81 ) }
    dend_2 { pt3dadd( -112.441, 185.209, 110.796, 0.81 ) }
    dend_2 { pt3dadd( -115.982, 192.069, 119.183, 0.81 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 42/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -27.3277, -50.4058, 24.6913, 0.22 ) }
    dend_57 { pt3dadd( -32.7351, -59.9049, 32.7448, 0.22 ) }
    dend_57 { pt3dadd( -39.9948, -68.4483, 40.4018, 0.22 ) }
    dend_57 { pt3dadd( -46.8392, -77.2742, 48.1211, 0.22 ) }
    dend_57 { pt3dadd( -55.2951, -86.8893, 52.6348, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 47/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -27.3277, -50.4058, 24.6913, 0.22 ) }
    dend_54 { pt3dadd( -32.1838, -56.6376, 30.0617, 0.22 ) }
    dend_54 { pt3dadd( -37.3324, -63.2173, 34.6941, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_42 (entry count 50/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 6.51729, -34.9517, 0.453073, 0.81 ) }
    dend_50 { pt3dadd( 7.47011, -35.3307, 2.01569, 0.81 ) }
    dend_50 { pt3dadd( 7.50307, -35.3497, 2.06233, 0.81 ) }
    dend_50 { pt3dadd( 8.07581, -35.799, 2.80788, 1.47 ) }
    dend_50 { pt3dadd( 8.21231, -35.935, 2.97756, 1.47 ) }
    dend_50 { pt3dadd( 9.125, -36.9848, 4.07992, 0.59 ) }
    dend_50 { pt3dadd( 9.49746, -37.4846, 4.52464, 0.52 ) }
    dend_50 { pt3dadd( 9.88756, -38.1656, 4.88102, 0.52 ) }
    dend_50 { pt3dadd( 10.1845, -38.8064, 5.13773, 1.11 ) }
    dend_50 { pt3dadd( 10.366, -39.3176, 5.26723, 1.11 ) }
    dend_50 { pt3dadd( 10.4001, -39.44, 5.28213, 1.11 ) }
    dend_50 { pt3dadd( 10.5273, -40.0935, 5.25239, 0.81 ) }
    dend_50 { pt3dadd( 10.6247, -40.6352, 5.20845, 0.81 ) }
    dend_50 { pt3dadd( 10.6417, -40.725, 5.1976, 0.81 ) }
    dend_50 { pt3dadd( 10.7507, -41.1527, 5.18548, 1.03 ) }
    dend_50 { pt3dadd( 11.0217, -41.9034, 5.2168, 0.52 ) }
    dend_50 { pt3dadd( 11.0494, -41.9557, 5.2276, 0.52 ) }
    dend_50 { pt3dadd( 11.4761, -42.4832, 5.48289, 0.52 ) }
    dend_50 { pt3dadd( 11.7004, -42.6395, 5.64319, 0.44 ) }
    dend_50 { pt3dadd( 12.6698, -42.8773, 6.45829, 0.44 ) }
    dend_50 { pt3dadd( 13.1947, -42.8678, 6.87192, 0.44 ) }
    dend_50 { pt3dadd( 13.8281, -42.781, 7.34807, 0.74 ) }
    dend_50 { pt3dadd( 13.8757, -42.7695, 7.38311, 0.74 ) }
    dend_50 { pt3dadd( 14.3969, -42.5912, 7.76147, 0.74 ) }
    dend_50 { pt3dadd( 15.2046, -42.2656, 8.4235, 0.44 ) }
    dend_50 { pt3dadd( 15.796, -42.0011, 8.94271, 0.44 ) }
    dend_50 { pt3dadd( 15.8424, -41.9841, 8.9904, 0.44 ) }
    dend_50 { pt3dadd( 16.4878, -41.8295, 9.71541, 0.44 ) }
    dend_50 { pt3dadd( 16.5257, -41.8291, 9.76136, 0.44 ) }
    dend_50 { pt3dadd( 17.5126, -42.2541, 11.1326, 0.44 ) }
    dend_50 { pt3dadd( 17.5528, -42.3041, 11.1969, 0.44 ) }
    dend_50 { pt3dadd( 17.8641, -42.8934, 11.7802, 0.44 ) }
    dend_50 { pt3dadd( 18.0751, -43.4039, 12.1578, 1.33 ) }
    dend_50 { pt3dadd( 18.2848, -44.1258, 12.5395, 1.62 ) }
    dend_50 { pt3dadd( 18.4271, -44.7032, 12.7708, 1.62 ) }
    dend_50 { pt3dadd( 18.6933, -45.9882, 13.1485, 0.66 ) }
    dend_50 { pt3dadd( 18.7066, -46.0357, 13.1644, 0.66 ) }
    dend_50 { pt3dadd( 18.9418, -46.6486, 13.4001, 0.52 ) }
    dend_50 { pt3dadd( 19.3104, -47.3151, 13.6805, 0.52 ) }
    dend_50 { pt3dadd( 19.8472, -48.0135, 13.9872, 0.52 ) }
    dend_50 { pt3dadd( 19.8913, -48.0617, 14.0067, 0.52 ) }
    dend_50 { pt3dadd( 20.7275, -48.8542, 14.2319, 0.44 ) }
    dend_50 { pt3dadd( 21.145, -49.1743, 14.3392, 0.59 ) }
    dend_50 { pt3dadd( 21.9606, -49.5587, 14.5308, 0.37 ) }
    dend_50 { pt3dadd( 22.0182, -49.5725, 14.5419, 0.37 ) }
    dend_50 { pt3dadd( 27.0674, -54.6065, 19.1952, 0.37 ) }
    dend_50 { pt3dadd( 32.5475, -59.3211, 23.6932, 0.37 ) }
    dend_50 { pt3dadd( 38.0505, -63.5781, 28.6007, 0.37 ) }
    dend_50 { pt3dadd( 43.0837, -66.7319, 34.7007, 0.37 ) }
    dend_50 { pt3dadd( 49.6024, -69.8773, 39.1842, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_50 { pt3dadd( 56.874, -71.7025, 43.2194, 0.37 ) }
    dend_50 { pt3dadd( 63.1965, -75.2444, 47.6882, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 2/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 6.51729, -34.9517, 0.453073, 1.03 ) }
    dend_43 { pt3dadd( 6.55702, -34.9733, 0.450113, 1.03 ) }
    dend_43 { pt3dadd( 6.68717, -35.0494, 0.440903, 1.03 ) }
    dend_43 { pt3dadd( 7.43402, -35.4957, 0.388442, 0.81 ) }
    dend_43 { pt3dadd( 8.37434, -36.0605, 0.322512, 0.81 ) }
    dend_43 { pt3dadd( 9.74644, -36.8535, 0.225126, 0.66 ) }
    dend_43 { pt3dadd( 10.2932, -37.1646, 0.183704, 0.96 ) }
    dend_43 { pt3dadd( 10.9777, -37.5462, 0.129471, 0.96 ) }
    dend_43 { pt3dadd( 11.7826, -37.9808, 0.0631469, 0.96 ) }
    dend_43 { pt3dadd( 11.8599, -38.0181, 0.0564649, 0.96 ) }
    dend_43 { pt3dadd( 12.6674, -38.3381, -0.0178862, 0.96 ) }
    dend_43 { pt3dadd( 13.2789, -38.4781, -0.07903, 0.74 ) }
    dend_43 { pt3dadd( 13.7477, -38.5296, -0.129111, 0.37 ) }
    dend_43 { pt3dadd( 14.1417, -38.5153, -0.170984, 0.37 ) }
    dend_43 { pt3dadd( 14.8568, -38.416, -0.245892, 0.37 ) }
    dend_43 { pt3dadd( 14.9307, -38.4023, -0.253336, 0.37 ) }
    dend_43 { pt3dadd( 15.9721, -38.2076, -0.352647, 0.37 ) }
    dend_43 { pt3dadd( 16.0365, -38.201, -0.357609, 0.37 ) }
    dend_43 { pt3dadd( 16.7664, -38.1861, -0.40751, 0.37 ) }
    dend_43 { pt3dadd( 16.9162, -38.2027, -0.416737, 0.37 ) }
    dend_43 { pt3dadd( 17.7691, -38.3986, -0.464944, 0.37 ) }
    dend_43 { pt3dadd( 18.6067, -38.6828, -0.51061, 0.37 ) }
    dend_43 { pt3dadd( 19.6197, -39.1604, -0.628169, 1.33 ) }
    dend_43 { pt3dadd( 19.6837, -39.1989, -0.639465, 1.33 ) }
    dend_43 { pt3dadd( 20.367, -39.7544, -0.885448, 1.77 ) }
    dend_43 { pt3dadd( 20.5971, -39.9647, -0.997505, 1.77 ) }
    dend_43 { pt3dadd( 21.1855, -40.5623, -1.3569, 1.77 ) }
    dend_43 { pt3dadd( 21.7957, -41.1865, -1.77857, 0.52 ) }
    dend_43 { pt3dadd( 22.5402, -41.9036, -2.30976, 0.52 ) }
    dend_43 { pt3dadd( 23.8962, -43.0695, -3.21888, 0.52 ) }
    dend_43 { pt3dadd( 24.3457, -43.4044, -3.50538, 0.52 ) }
    dend_43 { pt3dadd( 24.4037, -43.4398, -3.53842, 0.52 ) }
    dend_43 { pt3dadd( 24.9399, -43.6688, -3.78903, 0.66 ) }
    dend_43 { pt3dadd( 25.6792, -43.8309, -4.01699, 0.74 ) }
    dend_43 { pt3dadd( 26.2265, -43.8241, -4.13736, 0.96 ) }
    dend_43 { pt3dadd( 26.7235, -43.749, -4.20251, 0.96 ) }
    dend_43 { pt3dadd( 27.2249, -43.6429, -4.26842, 0.81 ) }
    dend_43 { pt3dadd( 27.7401, -43.5198, -4.33499, 0.81 ) }
    dend_43 { pt3dadd( 28.7528, -43.2685, -4.46206, 0.59 ) }
    dend_43 { pt3dadd( 29.6134, -43.1019, -4.5634, 0.44 ) }
    dend_43 { pt3dadd( 29.6874, -43.0914, -4.57471, 0.44 ) }
    dend_43 { pt3dadd( 30.2887, -43.0788, -4.6784, 0.37 ) }
    dend_43 { pt3dadd( 30.8322, -43.1544, -4.79216, 0.29 ) }
    dend_43 { pt3dadd( 31.5725, -43.3554, -4.96103, 0.29 ) }
    dend_43 { pt3dadd( 32.5661, -43.7182, -5.22193, 0.29 ) }
    dend_43 { pt3dadd( 33.2806, -44.0135, -5.41632, 1.11 ) }
    dend_43 { pt3dadd( 34.5049, -44.5146, -5.75085, 1.84 ) }
    dend_43 { pt3dadd( 36.254, -45.2528, -6.16799, 2.21 ) }
    dend_43 { pt3dadd( 37.4641, -45.7621, -6.42443, 2.21 ) }
    dend_43 { pt3dadd( 38.6121, -46.2458, -6.63201, 1.11 ) }
    dend_43 { pt3dadd( 39.5728, -46.6374, -6.72594, 0.59 ) }
    dend_43 { pt3dadd( 40.4215, -46.9703, -6.72529, 0.37 ) }
    dend_43 { pt3dadd( 41.5451, -47.3683, -6.63251, 0.74 ) }
    dend_43 { pt3dadd( 41.6057, -47.3887, -6.62091, 0.74 ) }
    dend_43 { pt3dadd( 42.3493, -47.6103, -6.43834, 0.74 ) }
    dend_43 { pt3dadd( 43.6466, -47.9701, -6.0681, 0.44 ) }
    dend_43 { pt3dadd( 44.7014, -48.2462, -5.81461, 0.44 ) }
    dend_43 { pt3dadd( 44.7838, -48.2668, -5.80023, 0.44 ) }
    dend_43 { pt3dadd( 45.5706, -48.4229, -5.75093, 1.25 ) }
    dend_43 { pt3dadd( 46.6292, -48.5917, -5.7953, 1.25 ) }
    dend_43 { pt3dadd( 46.8622, -48.6186, -5.83018, 1.25 ) }
    dend_43 { pt3dadd( 47.663, -48.6924, -6.03443, 1.47 ) }
    dend_43 { pt3dadd( 47.8187, -48.7009, -6.07701, 1.47 ) }
    dend_43 { pt3dadd( 48.894, -48.7677, -6.33388, 0.96 ) }
    dend_43 { pt3dadd( 49.9574, -48.8357, -6.56214, 0.37 ) }
    dend_43 { pt3dadd( 50.8062, -48.9349, -6.6575, 0.37 ) }
    dend_43 { pt3dadd( 50.9117, -48.9513, -6.65969, 0.37 ) }
    dend_43 { pt3dadd( 52.2584, -49.2122, -6.55653, 0.37 ) }
    dend_43 { pt3dadd( 53.1666, -49.4482, -6.41244, 0.37 ) }
    dend_43 { pt3dadd( 53.2253, -49.4683, -6.39633, 0.37 ) }
    dend_43 { pt3dadd( 54.5982, -50.0516, -5.89785, 0.37 ) }
    dend_43 { pt3dadd( 54.7856, -50.146, -5.82481, 0.66 ) }
    dend_43 { pt3dadd( 54.8573, -50.1866, -5.79959, 0.66 ) }
    dend_43 { pt3dadd( 55.5397, -50.641, -5.61192, 0.66 ) }
    dend_43 { pt3dadd( 55.6031, -50.6814, -5.60465, 0.66 ) }
    dend_43 { pt3dadd( 56.3077, -51.115, -5.58889, 0.29 ) }
    dend_43 { pt3dadd( 56.3726, -51.153, -5.59448, 0.29 ) }
    dend_43 { pt3dadd( 57.0914, -51.5438, -5.71823, 0.22 ) }
    dend_43 { pt3dadd( 57.8845, -51.9591, -5.89478, 0.22 ) }
    dend_43 { pt3dadd( 58.3888, -52.2024, -6.02646, 0.96 ) }
    dend_43 { pt3dadd( 58.5303, -52.2698, -6.06595, 0.96 ) }
    dend_43 { pt3dadd( 59.3958, -52.6837, -6.38013, 1.18 ) }
    dend_43 { pt3dadd( 60.6786, -53.2959, -6.91657, 1.18 ) }
    dend_43 { pt3dadd( 60.7499, -53.3307, -6.94994, 1.18 ) }
    dend_43 { pt3dadd( 61.3253, -53.6222, -7.22416, 1.33 ) }
    dend_43 { pt3dadd( 62.0695, -54.0233, -7.5779, 1.18 ) }
    dend_43 { pt3dadd( 63.2227, -54.6987, -8.0982, 1.03 ) }
    dend_43 { pt3dadd( 63.2887, -54.7432, -8.13094, 1.03 ) }
    dend_43 { pt3dadd( 63.8977, -55.1926, -8.4183, 0.52 ) }
    dend_43 { pt3dadd( 64.752, -55.8222, -8.80714, 0.52 ) }
    dend_43 { pt3dadd( 64.8153, -55.8693, -8.84163, 0.52 ) }
    dend_43 { pt3dadd( 65.9268, -56.7279, -9.4903, 0.52 ) }
    dend_43 { pt3dadd( 66.9819, -57.5942, -10.1048, 1.4 ) }
    dend_43 { pt3dadd( 67.8646, -58.3329, -10.6215, 2.06 ) }
    dend_43 { pt3dadd( 68.5957, -58.9566, -11.063, 2.5 ) }
    dend_43 { pt3dadd( 69.9743, -60.1352, -11.9457, 0.29 ) }
    dend_43 { pt3dadd( 70.7569, -60.7847, -12.443, 0.29 ) }
    dend_43 { pt3dadd( 71.4307, -61.3035, -12.8898, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_43 { pt3dadd( 71.8757, -61.5956, -13.1616, 0.29 ) }
    dend_43 { pt3dadd( 71.9323, -61.6294, -13.1984, 0.29 ) }
    dend_43 { pt3dadd( 72.9168, -62.1959, -13.8123, 1.18 ) }
    dend_43 { pt3dadd( 73.2836, -62.396, -14.0136, 1.18 ) }
    dend_43 { pt3dadd( 74.3641, -62.9976, -14.6333, 0.44 ) }
    dend_43 { pt3dadd( 75.4666, -63.6516, -15.2812, 0.44 ) }
    dend_43 { pt3dadd( 76.269, -64.2198, -15.7492, 0.29 ) }
    dend_43 { pt3dadd( 76.9524, -64.8046, -16.1696, 0.29 ) }
    dend_43 { pt3dadd( 77.277, -65.1234, -16.3643, 0.81 ) }
    dend_43 { pt3dadd( 77.7255, -65.5798, -16.6719, 0.81 ) }
    dend_43 { pt3dadd( 77.7713, -65.6292, -16.7062, 0.81 ) }
    dend_43 { pt3dadd( 78.3155, -66.1284, -17.1757, 0.81 ) }
    dend_43 { pt3dadd( 79.2865, -66.6714, -17.928, 0.29 ) }
    dend_43 { pt3dadd( 79.9623, -66.8326, -18.3701, 0.29 ) }
    dend_43 { pt3dadd( 81.1017, -66.9064, -18.958, 0.29 ) }
    dend_43 { pt3dadd( 81.1817, -66.9059, -18.9898, 0.29 ) }
    dend_43 { pt3dadd( 82.0119, -66.8705, -19.2525, 1.18 ) }
    dend_43 { pt3dadd( 82.8496, -66.8188, -19.445, 1.62 ) }
    dend_43 { pt3dadd( 84.048, -66.7625, -19.6051, 1.33 ) }
    dend_43 { pt3dadd( 84.8572, -66.7661, -19.6778, 0.44 ) }
    dend_43 { pt3dadd( 85.9272, -66.7995, -19.7223, 0.37 ) }
    dend_43 { pt3dadd( 86.078, -66.8056, -19.7294, 0.37 ) }
    dend_43 { pt3dadd( 86.9168, -66.8551, -19.7724, 0.37 ) }
    dend_43 { pt3dadd( 87.1519, -66.869, -19.7864, 0.37 ) }
    dend_43 { pt3dadd( 88.2473, -66.9673, -19.8562, 0.37 ) }
    dend_43 { pt3dadd( 88.9858, -67.0515, -19.9103, 0.37 ) }
    dend_43 { pt3dadd( 90.0869, -67.1781, -19.9845, 0.37 ) }
    dend_43 { pt3dadd( 90.1716, -67.1924, -19.9898, 0.37 ) }
    dend_43 { pt3dadd( 90.7142, -67.3087, -20.022, 0.66 ) }
    dend_43 { pt3dadd( 91.3218, -67.5123, -20.0682, 0.66 ) }
    dend_43 { pt3dadd( 92.1233, -67.9608, -20.1468, 0.66 ) }
    dend_43 { pt3dadd( 92.3197, -68.1111, -20.1706, 0.66 ) }
    dend_43 { pt3dadd( 93.0793, -68.7899, -20.2771, 0.66 ) }
    dend_43 { pt3dadd( 93.1425, -68.8477, -20.2865, 0.66 ) }
    dend_43 { pt3dadd( 93.7667, -69.4561, -20.3903, 0.59 ) }
    dend_43 { pt3dadd( 94.431, -70.1254, -20.5163, 0.59 ) }
    dend_43 { pt3dadd( 95.4119, -71.1667, -20.7135, 0.59 ) }
    dend_43 { pt3dadd( 95.463, -71.2213, -20.7239, 0.59 ) }
    dend_43 { pt3dadd( 96.0298, -71.8136, -20.8362, 1.25 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 39/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -4.61169, -48.2658, -3.1847, 2.06 ) }
    dend_41 { pt3dadd( -3.35431, -52.1199, -3.54375, 2.06 ) }
    dend_41 { pt3dadd( -2.83825, -54.0686, -3.54426, 1.25 ) }
    dend_41 { pt3dadd( -2.46293, -55.7273, -3.46202, 1.25 ) }
    dend_41 { pt3dadd( -2.44507, -55.8169, -3.45491, 1.25 ) }
    dend_41 { pt3dadd( -2.11684, -57.6507, -3.33094, 0.59 ) }
    dend_41 { pt3dadd( -1.81369, -59.6026, -3.21691, 0.59 ) }
    dend_41 { pt3dadd( -1.74889, -60.255, -3.1152, 0.74 ) }
    dend_41 { pt3dadd( -1.65976, -61.4566, -2.9677, 0.74 ) }
    dend_41 { pt3dadd( -1.57454, -63.2828, -2.89043, 0.74 ) }
    dend_41 { pt3dadd( -1.51906, -64.9167, -2.9434, 0.74 ) }
    dend_41 { pt3dadd( -1.50919, -65.6996, -3.02692, 1.11 ) }
    dend_41 { pt3dadd( -1.51001, -65.8042, -3.04028, 1.11 ) }
    dend_41 { pt3dadd( -1.52922, -66.849, -3.17412, 1.11 ) }
    dend_41 { pt3dadd( -1.57957, -68.3387, -3.35912, 0.44 ) }
    dend_41 { pt3dadd( -1.62391, -69.3992, -3.4697, 0.29 ) }
    dend_41 { pt3dadd( -1.68791, -72.4333, -3.63269, 0.29 ) }
    dend_41 { pt3dadd( -1.68487, -72.5388, -3.63545, 0.29 ) }
    dend_41 { pt3dadd( -1.65364, -73.1454, -3.63878, 0.44 ) }
    dend_41 { pt3dadd( -1.56977, -74.0497, -3.61192, 0.74 ) }
    dend_41 { pt3dadd( -1.43775, -75.0228, -3.54057, 1.47 ) }
    dend_41 { pt3dadd( -1.11869, -76.7935, -3.40746, 1.77 ) }
    dend_41 { pt3dadd( -0.715814, -78.8102, -3.31796, 1.77 ) }
    dend_41 { pt3dadd( -0.69989, -78.9012, -3.31582, 1.77 ) }
    dend_41 { pt3dadd( -0.448172, -80.5099, -3.30598, 1.77 ) }
    dend_41 { pt3dadd( -0.286852, -81.9223, -3.30987, 1.03 ) }
    dend_41 { pt3dadd( -0.17911, -83.1624, -3.31974, 0.81 ) }
    dend_41 { pt3dadd( -0.114396, -84.3244, -3.32972, 0.44 ) }
    dend_41 { pt3dadd( -0.0646193, -86.3414, -3.34045, 0.44 ) }
    dend_41 { pt3dadd( -0.0636852, -86.433, -3.34086, 0.44 ) }
    dend_41 { pt3dadd( -0.106813, -90.2946, -3.35145, 0.44 ) }
    dend_41 { pt3dadd( -0.108272, -90.3999, -3.35019, 0.44 ) }
    dend_41 { pt3dadd( -0.116831, -91.0914, -3.30855, 0.88 ) }
    dend_41 { pt3dadd( -0.118131, -91.1833, -3.29846, 0.88 ) }
    dend_41 { pt3dadd( -0.134257, -92.2491, -3.15759, 1.47 ) }
    dend_41 { pt3dadd( -0.156056, -93.8154, -2.93333, 1.84 ) }
    dend_41 { pt3dadd( -0.179005, -95.7471, -2.6258, 1.62 ) }
    dend_41 { pt3dadd( -0.196884, -97.0685, -2.42131, 0.74 ) }
    dend_41 { pt3dadd( -0.204787, -97.9386, -2.28788, 0.59 ) }
    dend_41 { pt3dadd( -0.193122, -99.2598, -2.08298, 0.44 ) }
    dend_41 { pt3dadd( -0.154859, -100.959, -1.76232, 0.44 ) }
    dend_41 { pt3dadd( -0.150198, -101.062, -1.73966, 0.44 ) }
    dend_41 { pt3dadd( -0.092252, -101.897, -1.55409, 0.81 ) }
    dend_41 { pt3dadd( -0.0670578, -102.162, -1.49824, 0.81 ) }
    dend_41 { pt3dadd( 0.0280567, -103.175, -1.27593, 0.81 ) }
    dend_41 { pt3dadd( 0.130985, -104.439, -1.00138, 0.29 ) }
    dend_41 { pt3dadd( 0.193126, -105.242, -0.836506, 0.29 ) }
    dend_41 { pt3dadd( 0.407069, -107.985, -0.309407, 0.22 ) }
    dend_41 { pt3dadd( 0.412954, -108.076, -0.2941, 0.22 ) }
    dend_41 { pt3dadd( 0.45202, -108.82, -0.194509, 1.03 ) }
    dend_41 { pt3dadd( 0.504844, -110.171, -0.0440233, 1.4 ) }
    dend_41 { pt3dadd( 0.557071, -111.413, 0.0619369, 1.4 ) }
    dend_41 { pt3dadd( 0.557071, -111.413, 0.0619369, 0.22 ) }
    dend_41 { pt3dadd( 0.647628, -112.931, 0.223077, 0.22 ) }
    dend_41 { pt3dadd( 0.766877, -115.119, 0.530478, 0.22 ) }
    dend_41 { pt3dadd( 0.787068, -115.696, 0.625798, 1.11 ) }
    dend_41 { pt3dadd( 0.79891, -116.775, 0.821764, 1.55 ) }
    dend_41 { pt3dadd( 0.783275, -117.87, 1.03028, 2.21 ) }
    dend_41 { pt3dadd( 0.753501, -119.033, 1.27118, 1.47 ) }
    dend_41 { pt3dadd( 0.720851, -120.011, 1.49682, 0.22 ) }
    dend_41 { pt3dadd( 0.68703, -121.27, 1.79867, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_41 { pt3dadd( 0.67051, -122.678, 2.12269, 0.22 ) }
    dend_41 { pt3dadd( 0.67086, -122.768, 2.14335, 0.22 ) }
    dend_41 { pt3dadd( 0.738125, -124.442, 2.51031, 0.22 ) }
    dend_41 { pt3dadd( 0.745446, -124.533, 2.52826, 0.22 ) }
    dend_41 { pt3dadd( 0.950197, -126.145, 2.78984, 0.22 ) }
    dend_41 { pt3dadd( 0.996657, -126.436, 2.83908, 0.66 ) }
    dend_41 { pt3dadd( 1.11319, -127.151, 2.95381, 0.81 ) }
    dend_41 { pt3dadd( 1.23875, -127.965, 3.01947, 0.81 ) }
    dend_41 { pt3dadd( 1.26124, -128.113, 3.01865, 0.22 ) }
    dend_41 { pt3dadd( 1.26918, -128.205, 3.01321, 0.22 ) }
    dend_41 { pt3dadd( 1.29171, -129.439, 2.87141, 0.22 ) }
    dend_41 { pt3dadd( 1.29168, -129.531, 2.86248, 0.22 ) }
    dend_41 { pt3dadd( 1.36496, -131.141, 2.57494, 0.22 ) }
    dend_41 { pt3dadd( 1.36903, -131.231, 2.55781, 0.22 ) }
    dend_41 { pt3dadd( 1.42774, -132.279, 2.35842, 0.22 ) }
    dend_41 { pt3dadd( 1.45383, -132.665, 2.28357, 0.22 ) }
    dend_41 { pt3dadd( 1.65608, -135.122, 1.78866, 0.22 ) }
    dend_41 { pt3dadd( 1.9675, -139.067, 1.00425, 0.22 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 18/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -4.61169, -48.2658, -3.1847, 0.59 ) }
    dend_38 { pt3dadd( -2.34301, -51.4978, -6.67874, 0.59 ) }
    dend_38 { pt3dadd( -1.92641, -52.0913, -7.32036, 0.59 ) }
    dend_38 { pt3dadd( -1.87354, -52.1665, -7.40179, 0.59 ) }
    dend_38 { pt3dadd( -1.24852, -53.0569, -8.3644, 0.59 ) }
    dend_38 { pt3dadd( -0.566725, -54.0283, -9.41446, 0.59 ) }
    dend_38 { pt3dadd( -0.114726, -54.6721, -10.1106, 0.59 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 73.7034, 212.401, -40.9929, 0.74 ) }
    dend_34 { pt3dadd( 73.5701, 213.691, -41.1973, 0.74 ) }
    dend_34 { pt3dadd( 73.3786, 215.666, -41.7253, 0.22 ) }
    dend_34 { pt3dadd( 73.2658, 216.882, -42.1223, 0.44 ) }
    dend_34 { pt3dadd( 73.1002, 219.016, -42.8552, 0.22 ) }
    dend_34 { pt3dadd( 73.0567, 219.618, -43.0679, 0.44 ) }
    dend_34 { pt3dadd( 73.0138, 220.257, -43.3253, 0.44 ) }
    dend_34 { pt3dadd( 72.9355, 221.855, -44.1814, 0.22 ) }
    dend_34 { pt3dadd( 72.9315, 221.922, -44.227, 0.22 ) }
    dend_34 { pt3dadd( 72.8261, 223.256, -45.2406, 0.22 ) }
    dend_34 { pt3dadd( 72.8145, 223.322, -45.2859, 0.22 ) }
    dend_34 { pt3dadd( 72.5962, 224.576, -45.9151, 0.88 ) }
    dend_34 { pt3dadd( 72.5145, 225.061, -46.105, 0.88 ) }
    dend_34 { pt3dadd( 72.2714, 226.385, -46.4849, 0.15 ) }
    dend_34 { pt3dadd( 72.2569, 226.462, -46.5041, 0.15 ) }
    dend_34 { pt3dadd( 71.7891, 228.828, -46.9751, 0.15 ) }
    dend_34 { pt3dadd( 71.3102, 231.2, -47.3386, 0.15 ) }
    dend_34 { pt3dadd( 71.1996, 231.72, -47.3771, 1.03 ) }
    dend_34 { pt3dadd( 70.8749, 233.096, -47.4262, 1.03 ) }
    dend_34 { pt3dadd( 70.5504, 234.318, -47.3987, 0.22 ) }
    dend_34 { pt3dadd( 69.962, 236.288, -47.2948, 0.22 ) }
    dend_34 { pt3dadd( 69.6245, 237.268, -47.1926, 0.22 ) }
    dend_34 { pt3dadd( 69.1371, 238.506, -47.0121, 0.22 ) }
    dend_34 { pt3dadd( 68.437, 240.294, -46.7416, 0.22 ) }
    dend_34 { pt3dadd( 67.7738, 242.06, -46.507, 0.22 ) }
    dend_34 { pt3dadd( 67.7458, 242.135, -46.4991, 0.22 ) }
    dend_34 { pt3dadd( 67.3155, 243.341, -46.4174, 1.4 ) }
    dend_34 { pt3dadd( 66.9676, 244.439, -46.3969, 0.15 ) }
    dend_34 { pt3dadd( 66.0388, 247.892, -46.4564, 0.15 ) }
    dend_34 { pt3dadd( 65.8144, 248.884, -46.4812, 1.11 ) }
    dend_34 { pt3dadd( 65.6575, 249.669, -46.5168, 1.11 ) }
    dend_34 { pt3dadd( 65.5562, 250.226, -46.5429, 0.22 ) }
    dend_34 { pt3dadd( 65.3195, 251.727, -46.6185, 0.22 ) }
    dend_34 { pt3dadd( 65.0976, 253.785, -46.6532, 0.22 ) }
    dend_34 { pt3dadd( 65.088, 253.959, -46.6474, 0.22 ) }
    dend_34 { pt3dadd( 65.0705, 254.562, -46.6071, 0.96 ) }
    dend_34 { pt3dadd( 65.0716, 255.07, -46.5679, 0.96 ) }
    dend_34 { pt3dadd( 65.0821, 255.841, -46.5061, 0.22 ) }
    dend_34 { pt3dadd( 65.1617, 258.602, -46.3381, 0.22 ) }
    dend_34 { pt3dadd( 65.1701, 258.764, -46.3335, 0.22 ) }
    dend_34 { pt3dadd( 65.185, 259.152, -46.32, 0.44 ) }
    dend_34 { pt3dadd( 65.1997, 259.574, -46.3025, 0.22 ) }
    dend_34 { pt3dadd( 65.2176, 260.295, -46.2686, 0.22 ) }
    dend_34 { pt3dadd( 65.2178, 260.376, -46.2647, 0.22 ) }
    dend_34 { pt3dadd( 65.15, 262.561, -46.16, 0.22 ) }
    dend_34 { pt3dadd( 65.1326, 263.082, -46.1356, 0.44 ) }
    dend_34 { pt3dadd( 65.1281, 263.175, -46.1316, 0.44 ) }
    dend_34 { pt3dadd( 65.1033, 263.683, -46.1104, 0.44 ) }
    dend_34 { pt3dadd( 65.0454, 265.222, -46.0429, 0.22 ) }
    dend_34 { pt3dadd( 65.0385, 265.303, -46.0415, 0.22 ) }
    dend_34 { pt3dadd( 64.9872, 265.722, -46.0465, 0.44 ) }
    dend_34 { pt3dadd( 64.9241, 266.137, -46.007, 0.44 ) }
    dend_34 { pt3dadd( 64.9079, 266.227, -45.993, 0.44 ) }
    dend_34 { pt3dadd( 64.8792, 266.383, -45.9615, 0.15 ) }
    dend_34 { pt3dadd( 64.4343, 268.632, -45.4541, 0.15 ) }
    dend_34 { pt3dadd( 64.0227, 270.652, -44.9818, 0.15 ) }
    dend_34 { pt3dadd( 63.6564, 272.406, -44.5461, 0.44 ) }
    dend_34 { pt3dadd( 63.6407, 272.483, -44.5256, 0.44 ) }
    dend_34 { pt3dadd( 63.4271, 273.51, -44.2333, 0.44 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 84/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 73.7034, 212.401, -40.9929, 0.29 ) }
    dend_33 { pt3dadd( 74.1845, 213.336, -41.2076, 0.29 ) }
    dend_33 { pt3dadd( 74.2121, 213.389, -41.2294, 0.29 ) }
    dend_33 { pt3dadd( 74.8745, 214.65, -41.8344, 0.29 ) }
    dend_33 { pt3dadd( 74.9053, 214.709, -41.8633, 0.29 ) }
    dend_33 { pt3dadd( 75.6865, 216.222, -42.6052, 0.29 ) }
    dend_33 { pt3dadd( 76.2134, 217.208, -43.166, 0.29 ) }
    dend_33 { pt3dadd( 76.8452, 218.386, -43.9319, 0.96 ) }
    dend_33 { pt3dadd( 76.8713, 218.435, -43.9632, 0.96 ) }
    dend_33 { pt3dadd( 77.2019, 219.064, -44.3757, 0.96 ) }
    dend_33 { pt3dadd( 77.2259, 219.114, -44.408, 0.96 ) }
    dend_33 { pt3dadd( 77.8439, 220.54, -45.2729, 0.37 ) }
    dend_33 { pt3dadd( 78.1646, 221.339, -45.7424, 0.22 ) }
    dend_33 { pt3dadd( 78.5259, 222.419, -46.2617, 0.22 ) }
    dend_33 { pt3dadd( 78.5739, 222.587, -46.3384, 0.22 ) }
    dend_33 { pt3dadd( 78.8646, 223.795, -46.8751, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_33 { pt3dadd( 78.9925, 224.445, -47.1702, 0.59 ) }
    dend_33 { pt3dadd( 78.9996, 224.505, -47.192, 0.59 ) }
    dend_33 { pt3dadd( 79.0836, 225.605, -47.5671, 0.96 ) }
    dend_33 { pt3dadd( 79.1247, 226.185, -47.7409, 0.96 ) }
    dend_33 { pt3dadd( 79.1313, 226.289, -47.7715, 0.96 ) }
    dend_33 { pt3dadd( 79.199, 227.569, -48.0917, 0.59 ) }
    dend_33 { pt3dadd( 79.229, 228.625, -48.4183, 0.52 ) }
    dend_33 { pt3dadd( 79.2268, 229.765, -48.7696, 0.52 ) }
    dend_33 { pt3dadd( 79.2251, 229.825, -48.7874, 0.52 ) }
    dend_33 { pt3dadd( 79.1623, 231.375, -49.2014, 1.62 ) }
    dend_33 { pt3dadd( 79.1265, 232.27, -49.4769, 1.99 ) }
    dend_33 { pt3dadd( 79.0953, 233.471, -49.862, 0.37 ) }
    dend_33 { pt3dadd( 79.0725, 234.872, -50.3561, 0.37 ) }
    dend_33 { pt3dadd( 79.0726, 235.567, -50.5848, 0.74 ) }
    dend_33 { pt3dadd( 79.0895, 236.467, -50.8451, 0.74 ) }
    dend_33 { pt3dadd( 79.1496, 238.104, -51.2868, 0.22 ) }
    dend_33 { pt3dadd( 79.2306, 239.233, -51.6691, 0.22 ) }
    dend_33 { pt3dadd( 79.3028, 239.926, -51.9303, 0.66 ) }
    dend_33 { pt3dadd( 79.4183, 240.843, -52.3278, 0.66 ) }
    dend_33 { pt3dadd( 79.43, 240.931, -52.3681, 0.66 ) }
    dend_33 { pt3dadd( 79.6577, 242.602, -53.1502, 0.22 ) }
    dend_33 { pt3dadd( 79.9267, 244.747, -54.0745, 0.22 ) }
    dend_33 { pt3dadd( 79.9345, 244.812, -54.1064, 0.22 ) }
    dend_33 { pt3dadd( 79.9575, 244.999, -54.2033, 1.03 ) }
    dend_33 { pt3dadd( 79.9643, 245.055, -54.2321, 1.03 ) }
    dend_33 { pt3dadd( 79.9967, 245.302, -54.3398, 1.03 ) }
    dend_33 { pt3dadd( 80.0764, 245.817, -54.4584, 0.29 ) }
    dend_33 { pt3dadd( 80.0839, 245.88, -54.4631, 0.29 ) }
    dend_33 { pt3dadd( 80.1413, 246.552, -54.5107, 0.29 ) }
    dend_33 { pt3dadd( 80.1952, 247.33, -54.5587, 0.29 ) }
    dend_33 { pt3dadd( 80.1969, 247.403, -54.5628, 0.29 ) }
    dend_33 { pt3dadd( 80.1947, 248.071, -54.5984, 0.29 ) }
    dend_33 { pt3dadd( 80.1886, 248.213, -54.6039, 0.29 ) }
    dend_33 { pt3dadd( 80.1353, 249.09, -54.6278, 0.81 ) }
    dend_33 { pt3dadd( 80.0792, 249.686, -54.6309, 0.81 ) }
    dend_33 { pt3dadd( 80.0049, 250.2, -54.6133, 0.15 ) }
    dend_33 { pt3dadd( 79.9941, 250.272, -54.6109, 0.15 ) }
    dend_33 { pt3dadd( 79.8033, 251.486, -54.5714, 0.15 ) }
    // Section: dend_17, id: dend_17, parent: dend_5 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -12.0588, 50.4718, -15.4788, 1.77 ) }
    dend_17 { pt3dadd( -12.1433, 52.0746, -16.0938, 1.77 ) }
    dend_17 { pt3dadd( -12.263, 52.8677, -16.334, 1.69 ) }
    dend_17 { pt3dadd( -12.3468, 53.2472, -16.4647, 1.69 ) }
    dend_17 { pt3dadd( -12.3656, 53.3116, -16.4864, 1.69 ) }
    dend_17 { pt3dadd( -12.7753, 54.4591, -16.8528, 1.4 ) }
    dend_17 { pt3dadd( -12.7974, 54.5133, -16.8707, 1.4 ) }
    dend_17 { pt3dadd( -13.1554, 55.2365, -17.078, 1.25 ) }
    dend_17 { pt3dadd( -13.7889, 56.4265, -17.4033, 1.25 ) }
    dend_17 { pt3dadd( -14.2716, 57.3285, -17.6255, 1.18 ) }
    dend_17 { pt3dadd( -14.7692, 58.2346, -17.786, 1.18 ) }
    dend_17 { pt3dadd( -15.298, 59.1861, -17.8925, 1.18 ) }
    dend_17 { pt3dadd( -15.7153, 59.944, -17.9264, 1.18 ) }
    dend_17 { pt3dadd( -16.1787, 60.8079, -17.9278, 1.18 ) }
    dend_17 { pt3dadd( -16.5667, 61.5472, -17.8845, 1.33 ) }
    dend_17 { pt3dadd( -17.0794, 62.5905, -17.8068, 1.33 ) }
    dend_17 { pt3dadd( -17.3632, 63.2137, -17.7492, 1.03 ) }
    dend_17 { pt3dadd( -17.7374, 64.0826, -17.663, 1.03 ) }
    dend_17 { pt3dadd( -18.0574, 64.8454, -17.6239, 0.81 ) }
    dend_17 { pt3dadd( -18.09, 64.9334, -17.6357, 0.81 ) }
    dend_17 { pt3dadd( -18.2469, 65.3759, -17.7641, 0.81 ) }
    dend_17 { pt3dadd( -18.2799, 65.4839, -17.8147, 0.81 ) }
    dend_17 { pt3dadd( -18.4675, 66.129, -18.1607, 0.81 ) }
    dend_17 { pt3dadd( -18.4805, 66.1741, -18.1856, 0.81 ) }
    dend_17 { pt3dadd( -18.9155, 67.6216, -18.9125, 1.03 ) }
    dend_17 { pt3dadd( -19.1264, 68.3293, -19.2803, 1.47 ) }
    dend_17 { pt3dadd( -19.5011, 69.5359, -19.9112, 1.47 ) }
    dend_17 { pt3dadd( -19.521, 69.5966, -19.9412, 1.47 ) }
    dend_17 { pt3dadd( -19.7649, 70.2887, -20.2612, 1.77 ) }
    dend_17 { pt3dadd( -20.0838, 71.1682, -20.6483, 2.06 ) }
    dend_17 { pt3dadd( -20.4706, 72.1918, -21.0904, 1.47 ) }
    dend_17 { pt3dadd( -20.6795, 72.7883, -21.3454, 1.11 ) }
    dend_17 { pt3dadd( -20.9505, 73.6337, -21.684, 1.47 ) }
    dend_17 { pt3dadd( -21.1052, 74.2081, -21.9213, 1.77 ) }
    dend_17 { pt3dadd( -21.3834, 75.3139, -22.3916, 1.99 ) }
    dend_17 { pt3dadd( -21.6123, 76.2991, -22.8144, 2.28 ) }
    dend_17 { pt3dadd( -21.9321, 77.7993, -23.431, 2.28 ) }
    dend_17 { pt3dadd( -22.218, 79.3754, -24.1017, 2.5 ) }
    dend_17 { pt3dadd( -22.4638, 80.991, -24.8057, 2.87 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 77/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -12.0588, 50.4718, -15.4788, 1.03 ) }
    dend_6 { pt3dadd( -12.2902, 50.5628, -15.5527, 1.03 ) }
    dend_6 { pt3dadd( -13.7345, 51.0674, -15.9977, 1.03 ) }
    dend_6 { pt3dadd( -14.7618, 51.3764, -16.3195, 0.96 ) }
    dend_6 { pt3dadd( -15.6263, 51.5973, -16.5996, 0.96 ) }
    dend_6 { pt3dadd( -17.7768, 52.0877, -17.268, 1.18 ) }
    dend_6 { pt3dadd( -18.9618, 52.3233, -17.6038, 1.18 ) }
    dend_6 { pt3dadd( -20.364, 52.535, -17.9778, 1.18 ) }
    dend_6 { pt3dadd( -21.8632, 52.6936, -18.3497, 1.18 ) }
    dend_6 { pt3dadd( -23.5438, 52.8102, -18.7512, 1.18 ) }
    dend_6 { pt3dadd( -25.0328, 52.8552, -19.1081, 1.18 ) }
    dend_6 { pt3dadd( -26.5978, 52.8598, -19.4735, 1.18 ) }
    dend_6 { pt3dadd( -28.057, 52.8433, -19.8216, 1.18 ) }
    dend_6 { pt3dadd( -29.3792, 52.82, -20.1126, 1.55 ) }
    dend_6 { pt3dadd( -30.3234, 52.7976, -20.3057, 1.92 ) }
    dend_6 { pt3dadd( -31.8945, 52.7377, -20.6298, 1.92 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 93/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -115.982, 192.069, 119.183, 0.74 ) }
    dend_4 { pt3dadd( -121.917, 197.474, 123.721, 0.74 ) }
    dend_4 { pt3dadd( -128.379, 202.733, 127.673, 0.74 ) }
    dend_4 { pt3dadd( -135.278, 208.465, 129.81, 0.74 ) }
    dend_4 { pt3dadd( -142.098, 214.672, 129.782, 0.74 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -115.982, 192.069, 119.183, 0.52 ) }
    dend_3 { pt3dadd( -118.743, 197.979, 124.186, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_3 { pt3dadd( -120.479, 204.082, 129.414, 0.74 ) }
    dend_3 { pt3dadd( -121.274, 210.202, 134.844, 0.74 ) }
    dend_3 { pt3dadd( -122.418, 216.829, 139.573, 0.74 ) }
    // Section: dend_69, id: dend_69, parent: dend_57 (entry count 3/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -55.2951, -86.8893, 52.6348, 0.29 ) }
    dend_69 { pt3dadd( -58.8441, -92.2705, 56.9186, 0.29 ) }
    dend_69 { pt3dadd( -62.4749, -97.114, 61.7416, 0.29 ) }
    dend_69 { pt3dadd( -67.5359, -100.49, 66.5257, 0.29 ) }
    dend_69 { pt3dadd( -72.5065, -103.175, 71.8161, 0.29 ) }
    dend_69 { pt3dadd( -77.3577, -105.852, 77.2199, 0.29 ) }
    dend_69 { pt3dadd( -81.9786, -107.517, 83.2013, 0.29 ) }
    dend_69 { pt3dadd( -86.6609, -107.968, 89.3475, 0.29 ) }
    dend_69 { pt3dadd( -92.0222, -107.185, 94.8745, 0.29 ) }
    dend_69 { pt3dadd( -98.5022, -107.443, 99.0988, 0.29 ) }
    dend_69 { pt3dadd( -105.623, -107.046, 102.105, 0.29 ) }
    dend_69 { pt3dadd( -112.844, -105.017, 104.014, 0.29 ) }
    dend_69 { pt3dadd( -120.206, -103.777, 106.057, 0.29 ) }
    dend_69 { pt3dadd( -127.318, -102.79, 108.944, 0.29 ) }
    dend_69 { pt3dadd( -134.347, -101.608, 111.961, 0.29 ) }
    dend_69 { pt3dadd( -141.348, -101.337, 115.251, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 19/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -55.2951, -86.8893, 52.6348, 0.29 ) }
    dend_58 { pt3dadd( -60.4297, -92.7321, 56.3055, 0.29 ) }
    dend_58 { pt3dadd( -66.2757, -97.8646, 59.974, 0.29 ) }
    dend_58 { pt3dadd( -71.9211, -103.582, 63.041, 0.29 ) }
    dend_58 { pt3dadd( -76.943, -109.789, 66.2404, 0.29 ) }
    dend_58 { pt3dadd( -82.098, -116.202, 68.7458, 0.29 ) }
    dend_58 { pt3dadd( -86.93, -122.421, 72.2029, 0.29 ) }
    dend_58 { pt3dadd( -91.0661, -128.708, 76.3673, 0.29 ) }
    dend_58 { pt3dadd( -96.3492, -134.208, 80.3438, 0.29 ) }
    dend_58 { pt3dadd( -100.782, -140.942, 83.3412, 0.29 ) }
    dend_58 { pt3dadd( -105.679, -147.463, 86.0743, 0.29 ) }
    dend_58 { pt3dadd( -111.572, -153.583, 87.4135, 0.29 ) }
    dend_58 { pt3dadd( -117.496, -159.804, 87.8243, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 32/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -37.3324, -63.2173, 34.6941, 0.29 ) }
    dend_56 { pt3dadd( -45.2455, -70.9799, 37.3139, 0.29 ) }
    dend_56 { pt3dadd( -54.0483, -78.1355, 38.3375, 0.29 ) }
    dend_56 { pt3dadd( -63.5776, -83.9458, 36.0627, 0.29 ) }
    dend_56 { pt3dadd( -72.0674, -90.8777, 32.9623, 0.29 ) }
    dend_56 { pt3dadd( -81.4793, -96.662, 30.1879, 0.29 ) }
    dend_56 { pt3dadd( -91.0814, -101.609, 26.5728, 0.29 ) }
    dend_56 { pt3dadd( -101.679, -104.655, 23.7181, 0.29 ) }
    dend_56 { pt3dadd( -112.044, -107.577, 20.0069, 0.29 ) }
    dend_56 { pt3dadd( -123.089, -108.16, 17.2854, 0.29 ) }
    dend_56 { pt3dadd( -133.798, -110.338, 14.0743, 0.29 ) }
    dend_56 { pt3dadd( -144.891, -112.284, 12.3701, 0.29 ) }
    dend_56 { pt3dadd( -155.8, -115.508, 11.7841, 0.29 ) }
    dend_56 { pt3dadd( -166.753, -118.429, 10.6745, 0.29 ) }
    dend_56 { pt3dadd( -177.097, -122.93, 9.0966, 0.29 ) }
    dend_56 { pt3dadd( -186.613, -128.926, 7.29721, 0.29 ) }
    dend_56 { pt3dadd( -196.868, -133.592, 5.62588, 0.29 ) }
    dend_56 { pt3dadd( -206.898, -138.555, 3.49981, 0.29 ) }
    dend_56 { pt3dadd( -216.689, -143.404, 0.280188, 0.29 ) }
    dend_56 { pt3dadd( -226.127, -149.47, -1.68334, 0.29 ) }
    dend_56 { pt3dadd( -234.532, -156.352, -5.11079, 0.29 ) }
    dend_56 { pt3dadd( -243.949, -161.449, -8.99376, 0.29 ) }
    dend_56 { pt3dadd( -253.623, -165.558, -13.383, 0.29 ) }
    dend_56 { pt3dadd( -263.362, -169.127, -18.0893, 0.29 ) }
    dend_56 { pt3dadd( -273.664, -172.684, -21.3994, 0.29 ) }
    dend_56 { pt3dadd( -284.096, -176.753, -23.488, 0.29 ) }
    dend_56 { pt3dadd( -294.694, -180.926, -23.4219, 0.29 ) }
    dend_56 { pt3dadd( -304.501, -186.439, -21.6412, 0.29 ) }
    dend_56 { pt3dadd( -313.634, -192.435, -18.4184, 0.29 ) }
    dend_56 { pt3dadd( -323.025, -197.494, -14.4248, 0.29 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 62/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -37.3324, -63.2173, 34.6941, 0.29 ) }
    dend_55 { pt3dadd( -42.8306, -70.5903, 40.6609, 0.29 ) }
    dend_55 { pt3dadd( -47.2558, -77.4964, 47.9352, 0.29 ) }
    dend_55 { pt3dadd( -54.2108, -83.168, 54.2326, 0.29 ) }
    dend_55 { pt3dadd( -63.5267, -87.2668, 58.3079, 0.29 ) }
    dend_55 { pt3dadd( -71.8685, -92.3479, 63.287, 0.29 ) }
    dend_55 { pt3dadd( -80.0454, -98.4758, 67.2596, 0.29 ) }
    dend_55 { pt3dadd( -87.2466, -105.296, 71.9312, 0.29 ) }
    dend_55 { pt3dadd( -95.2765, -112.086, 75.0311, 0.29 ) }
    dend_55 { pt3dadd( -103.973, -118.338, 77.3743, 0.29 ) }
    dend_55 { pt3dadd( -113.265, -123.11, 80.7029, 0.29 ) }
    dend_55 { pt3dadd( -123.026, -126.236, 84.5945, 0.29 ) }
    dend_55 { pt3dadd( -132.112, -127.688, 90.5544, 0.29 ) }
    dend_55 { pt3dadd( -140.503, -126.842, 97.5602, 0.29 ) }
    dend_55 { pt3dadd( -148.809, -124.972, 104.467, 0.29 ) }
    dend_55 { pt3dadd( -156.471, -123.926, 112.238, 0.29 ) }
    dend_55 { pt3dadd( -165.144, -122.342, 118.755, 0.29 ) }
    dend_55 { pt3dadd( -173.83, -122.831, 125.427, 0.29 ) }
    dend_55 { pt3dadd( -181.383, -122.91, 133.372, 0.29 ) }
    dend_55 { pt3dadd( -189.767, -122.123, 140.393, 0.29 ) }
    dend_55 { pt3dadd( -198.1, -119.428, 146.988, 0.29 ) }
    dend_55 { pt3dadd( -206.739, -115.649, 152.58, 0.29 ) }
    dend_55 { pt3dadd( -215.051, -111.935, 158.689, 0.29 ) }
    dend_55 { pt3dadd( -222.99, -107.948, 165.113, 0.29 ) }
    dend_55 { pt3dadd( -230.251, -104.827, 172.711, 0.29 ) }
    dend_55 { pt3dadd( -238.202, -102.741, 179.966, 0.29 ) }
    dend_55 { pt3dadd( -246.438, -101.094, 187.012, 0.29 ) }
    dend_55 { pt3dadd( -254.726, -98.3069, 193.625, 0.29 ) }
    dend_55 { pt3dadd( -263.087, -94.4881, 199.601, 0.29 ) }
    dend_55 { pt3dadd( -272.592, -90.8528, 203.68, 0.29 ) }
    dend_55 { pt3dadd( -281.779, -85.6176, 206.575, 0.29 ) }
    dend_55 { pt3dadd( -291.594, -81.7122, 209.508, 0.29 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 94/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 96.0298, -71.8136, -20.8362, 0.52 ) }
    dend_47 { pt3dadd( 96.9078, -71.6145, -21.1032, 0.52 ) }
    dend_47 { pt3dadd( 97.6957, -71.458, -21.3612, 0.52 ) }
    dend_47 { pt3dadd( 97.7558, -71.4507, -21.3789, 0.52 ) }
    dend_47 { pt3dadd( 98.7217, -71.3688, -21.6471, 0.52 ) }
    dend_47 { pt3dadd( 99.7121, -71.3027, -21.8724, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_47 { pt3dadd( 100.936, -71.2712, -22.1007, 0.52 ) }
    dend_47 { pt3dadd( 100.998, -71.2755, -22.1088, 0.52 ) }
    dend_47 { pt3dadd( 102.158, -71.4712, -22.2494, 0.52 ) }
    dend_47 { pt3dadd( 102.29, -71.4977, -22.262, 0.52 ) }
    dend_47 { pt3dadd( 103.5, -71.7905, -22.3458, 1.4 ) }
    dend_47 { pt3dadd( 104.488, -72.0441, -22.4006, 0.52 ) }
    dend_47 { pt3dadd( 105.712, -72.3929, -22.4454, 0.52 ) }
    dend_47 { pt3dadd( 107.753, -72.9761, -22.526, 0.52 ) }
    dend_47 { pt3dadd( 108.543, -73.1874, -22.5575, 0.96 ) }
    dend_47 { pt3dadd( 109.172, -73.3479, -22.5822, 0.52 ) }
    dend_47 { pt3dadd( 109.233, -73.3621, -22.5844, 0.52 ) }
    dend_47 { pt3dadd( 109.849, -73.4562, -22.5916, 0.37 ) }
    dend_47 { pt3dadd( 110.331, -73.4655, -22.5691, 0.37 ) }
    dend_47 { pt3dadd( 111.046, -73.366, -22.4706, 0.37 ) }
    dend_47 { pt3dadd( 111.107, -73.3554, -22.4617, 0.37 ) }
    dend_47 { pt3dadd( 111.978, -73.1805, -22.3368, 0.37 ) }
    dend_47 { pt3dadd( 112.038, -73.1658, -22.3279, 0.37 ) }
    dend_47 { pt3dadd( 113.095, -72.8722, -22.1667, 0.74 ) }
    dend_47 { pt3dadd( 113.962, -72.6325, -22.0365, 1.03 ) }
    dend_47 { pt3dadd( 114.619, -72.48, -21.9452, 0.81 ) }
    dend_47 { pt3dadd( 115.189, -72.3682, -21.8521, 0.29 ) }
    dend_47 { pt3dadd( 116.23, -72.1931, -21.6605, 0.29 ) }
    dend_47 { pt3dadd( 117.257, -72.0614, -21.452, 0.29 ) }
    dend_47 { pt3dadd( 117.387, -72.0484, -21.4224, 0.29 ) }
    dend_47 { pt3dadd( 118.278, -71.9878, -21.2188, 0.29 ) }
    dend_47 { pt3dadd( 119.164, -71.9415, -21.0219, 0.29 ) }
    dend_47 { pt3dadd( 119.225, -71.9387, -21.0089, 0.29 ) }
    dend_47 { pt3dadd( 120.017, -71.9102, -20.8574, 0.29 ) }
    dend_47 { pt3dadd( 120.972, -71.8364, -20.6974, 0.29 ) }
    dend_47 { pt3dadd( 121.534, -71.7613, -20.5754, 0.74 ) }
    dend_47 { pt3dadd( 122.43, -71.5987, -20.3535, 0.74 ) }
    dend_47 { pt3dadd( 123.057, -71.4783, -20.1956, 0.29 ) }
    dend_47 { pt3dadd( 123.117, -71.4678, -20.1785, 0.29 ) }
    dend_47 { pt3dadd( 123.77, -71.3587, -19.9635, 0.29 ) }
    dend_47 { pt3dadd( 124.965, -71.159, -19.5566, 0.29 ) }
    dend_47 { pt3dadd( 125.591, -71.0577, -19.349, 0.29 ) }
    dend_47 { pt3dadd( 125.651, -71.0493, -19.3309, 0.29 ) }
    dend_47 { pt3dadd( 126.116, -71.0112, -19.2162, 0.59 ) }
    dend_47 { pt3dadd( 126.652, -70.9679, -19.1113, 0.59 ) }
    dend_47 { pt3dadd( 127.334, -70.9149, -19.0252, 0.37 ) }
    dend_47 { pt3dadd( 128.067, -70.8419, -19.0021, 0.37 ) }
    dend_47 { pt3dadd( 128.138, -70.832, -18.9972, 0.37 ) }
    dend_47 { pt3dadd( 129.008, -70.6577, -18.8938, 0.37 ) }
    dend_47 { pt3dadd( 129.551, -70.5264, -18.8031, 0.96 ) }
    dend_47 { pt3dadd( 129.62, -70.5133, -18.7894, 0.96 ) }
    dend_47 { pt3dadd( 130.162, -70.4038, -18.6791, 0.96 ) }
    dend_47 { pt3dadd( 130.583, -70.3112, -18.611, 0.22 ) }
    dend_47 { pt3dadd( 131.321, -70.1676, -18.524, 0.22 ) }
    dend_47 { pt3dadd( 131.383, -70.1567, -18.5197, 0.22 ) }
    dend_47 { pt3dadd( 132.616, -70.1239, -18.4941, 0.22 ) }
    dend_47 { pt3dadd( 133.089, -70.1503, -18.4979, 0.81 ) }
    dend_47 { pt3dadd( 133.758, -70.2402, -18.5206, 0.81 ) }
    dend_47 { pt3dadd( 133.945, -70.2756, -18.5302, 0.22 ) }
    dend_47 { pt3dadd( 134.006, -70.2905, -18.5319, 0.22 ) }
    dend_47 { pt3dadd( 135.415, -70.648, -18.5283, 0.22 ) }
    dend_47 { pt3dadd( 135.938, -70.8008, -18.5054, 0.88 ) }
    dend_47 { pt3dadd( 136.247, -70.8995, -18.4811, 1.18 ) }
    dend_47 { pt3dadd( 136.306, -70.9191, -18.4759, 1.18 ) }
    dend_47 { pt3dadd( 136.963, -71.1242, -18.4124, 0.15 ) }
    dend_47 { pt3dadd( 137.025, -71.1388, -18.4085, 0.15 ) }
    dend_47 { pt3dadd( 138.138, -71.3014, -18.3617, 0.15 ) }
    dend_47 { pt3dadd( 138.939, -71.3676, -18.3451, 0.81 ) }
    dend_47 { pt3dadd( 139.078, -71.3715, -18.3457, 0.81 ) }
    dend_47 { pt3dadd( 139.727, -71.3417, -18.3548, 1.18 ) }
    dend_47 { pt3dadd( 140.882, -71.2421, -18.3874, 0.22 ) }
    dend_47 { pt3dadd( 141.185, -71.218, -18.3922, 0.15 ) }
    dend_47 { pt3dadd( 141.28, -71.2116, -18.3922, 0.15 ) }
    dend_47 { pt3dadd( 142.336, -71.1965, -18.3817, 0.15 ) }
    dend_47 { pt3dadd( 142.807, -71.2019, -18.365, 1.11 ) }
    dend_47 { pt3dadd( 143.7, -71.2488, -18.3105, 1.47 ) }
    dend_47 { pt3dadd( 144.364, -71.2945, -18.2424, 0.15 ) }
    dend_47 { pt3dadd( 145.086, -71.3226, -18.1564, 0.15 ) }
    dend_47 { pt3dadd( 145.149, -71.3215, -18.1476, 0.15 ) }
    dend_47 { pt3dadd( 145.944, -71.2423, -18.012, 0.15 ) }
    dend_47 { pt3dadd( 146.067, -71.2278, -17.9902, 0.15 ) }
    dend_47 { pt3dadd( 146.499, -71.1429, -17.901, 0.15 ) }
    dend_47 { pt3dadd( 146.831, -71.0919, -17.8361, 0.59 ) }
    dend_47 { pt3dadd( 147.026, -71.0782, -17.8031, 0.59 ) }
    dend_47 { pt3dadd( 147.896, -71.089, -17.6788, 0.59 ) }
    dend_47 { pt3dadd( 148.674, -71.1594, -17.6284, 0.59 ) }
    dend_47 { pt3dadd( 148.736, -71.1674, -17.6274, 0.59 ) }
    dend_47 { pt3dadd( 149.727, -71.3311, -17.6552, 0.59 ) }
    dend_47 { pt3dadd( 150.367, -71.4441, -17.6976, 0.88 ) }
    dend_47 { pt3dadd( 150.509, -71.4697, -17.7087, 0.88 ) }
    dend_47 { pt3dadd( 151.309, -71.6175, -17.7852, 0.22 ) }
    dend_47 { pt3dadd( 151.442, -71.6398, -17.7995, 0.22 ) }
    dend_47 { pt3dadd( 151.953, -71.7235, -17.8568, 0.22 ) }
    dend_47 { pt3dadd( 152.148, -71.756, -17.8782, 0.22 ) }
    dend_47 { pt3dadd( 153.24, -71.9544, -17.9818, 0.22 ) }
    dend_47 { pt3dadd( 153.327, -71.9719, -17.9875, 0.22 ) }
    dend_47 { pt3dadd( 154.011, -72.1351, -18.0051, 0.96 ) }
    dend_47 { pt3dadd( 154.081, -72.1529, -18.0098, 0.96 ) }
    dend_47 { pt3dadd( 154.777, -72.3437, -18.0862, 0.96 ) }
    dend_47 { pt3dadd( 154.837, -72.3612, -18.0945, 0.96 ) }
    dend_47 { pt3dadd( 155.175, -72.4709, -18.1537, 0.96 ) }
    dend_47 { pt3dadd( 155.263, -72.502, -18.1688, 0.96 ) }
    dend_47 { pt3dadd( 155.877, -72.728, -18.2677, 0.22 ) }
    dend_47 { pt3dadd( 155.994, -72.7707, -18.2866, 0.22 ) }
    dend_47 { pt3dadd( 156.664, -73.0186, -18.3997, 0.22 ) }
    dend_47 { pt3dadd( 156.722, -73.0406, -18.4085, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_47 { pt3dadd( 157.132, -73.1595, -18.5064, 0.74 ) }
    dend_47 { pt3dadd( 157.202, -73.1711, -18.523, 0.74 ) }
    dend_47 { pt3dadd( 157.798, -73.2328, -18.665, 1.03 ) }
    dend_47 { pt3dadd( 157.929, -73.2371, -18.6988, 1.03 ) }
    dend_47 { pt3dadd( 158.327, -73.2226, -18.8036, 1.03 ) }
    dend_47 { pt3dadd( 159.421, -73.1485, -19.0666, 0.22 ) }
    dend_47 { pt3dadd( 160.748, -73.0467, -19.2478, 0.22 ) }
    dend_47 { pt3dadd( 160.811, -73.0435, -19.2498, 0.22 ) }
    dend_47 { pt3dadd( 161.487, -73.019, -19.2173, 0.66 ) }
    dend_47 { pt3dadd( 161.822, -73.0083, -19.1992, 1.25 ) }
    dend_47 { pt3dadd( 162.406, -72.9783, -19.2092, 1.25 ) }
    dend_47 { pt3dadd( 163.645, -72.9244, -19.2765, 0.22 ) }
    dend_47 { pt3dadd( 164.683, -72.8755, -19.4354, 0.22 ) }
    dend_47 { pt3dadd( 164.754, -72.8721, -19.4498, 0.22 ) }
    dend_47 { pt3dadd( 165.967, -72.829, -19.7791, 0.22 ) }
    dend_47 { pt3dadd( 167.371, -72.7965, -20.2449, 0.22 ) }
    dend_47 { pt3dadd( 167.486, -72.7913, -20.2926, 0.22 ) }
    dend_47 { pt3dadd( 168.683, -72.7191, -20.8533, 0.22 ) }
    dend_47 { pt3dadd( 168.739, -72.7159, -20.8791, 0.22 ) }
    dend_47 { pt3dadd( 169.35, -72.6925, -21.1215, 0.22 ) }
    dend_47 { pt3dadd( 169.864, -72.6931, -21.2679, 1.03 ) }
    dend_47 { pt3dadd( 170.728, -72.7084, -21.4486, 1.33 ) }
    dend_47 { pt3dadd( 171.303, -72.6988, -21.6215, 0.66 ) }
    dend_47 { pt3dadd( 172.01, -72.6573, -21.9386, 0.29 ) }
    dend_47 { pt3dadd( 172.074, -72.6529, -21.9715, 0.29 ) }
    dend_47 { pt3dadd( 172.824, -72.6128, -22.3864, 0.29 ) }
    dend_47 { pt3dadd( 172.879, -72.6115, -22.4185, 0.29 ) }
    dend_47 { pt3dadd( 174.43, -72.6944, -23.3099, 0.96 ) }
    dend_47 { pt3dadd( 175.584, -72.8134, -23.9393, 0.96 ) }
    dend_47 { pt3dadd( 176.045, -72.8857, -24.1648, 0.15 ) }
    dend_47 { pt3dadd( 176.62, -73.0115, -24.4259, 0.15 ) }
    dend_47 { pt3dadd( 176.746, -73.0467, -24.4787, 0.15 ) }
    dend_47 { pt3dadd( 177.87, -73.4459, -24.8392, 0.15 ) }
    dend_47 { pt3dadd( 178.333, -73.6573, -24.9357, 0.88 ) }
    dend_47 { pt3dadd( 178.712, -73.8257, -24.996, 0.88 ) }
    dend_47 { pt3dadd( 179.808, -74.233, -25.1903, 0.22 ) }
    dend_47 { pt3dadd( 179.868, -74.2472, -25.2021, 0.22 ) }
    dend_47 { pt3dadd( 180.559, -74.3285, -25.3479, 0.22 ) }
    dend_47 { pt3dadd( 181.281, -74.2936, -25.5098, 0.22 ) }
    dend_47 { pt3dadd( 181.986, -74.1972, -25.665, 0.22 ) }
    dend_47 { pt3dadd( 182.263, -74.1231, -25.7337, 0.22 ) }
    dend_47 { pt3dadd( 182.882, -73.8828, -25.8455, 0.22 ) }
    dend_47 { pt3dadd( 182.939, -73.8576, -25.8555, 0.22 ) }
    dend_47 { pt3dadd( 183.54, -73.531, -25.9507, 1.11 ) }
    dend_47 { pt3dadd( 183.596, -73.5022, -25.9558, 1.11 ) }
    dend_47 { pt3dadd( 184.649, -73.1485, -26.2054, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 46/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 96.0298, -71.8136, -20.8362, 0.44 ) }
    dend_44 { pt3dadd( 96.1263, -73.0567, -20.999, 0.44 ) }
    dend_44 { pt3dadd( 96.2903, -74.6715, -21.2313, 0.44 ) }
    dend_44 { pt3dadd( 96.5246, -76.8128, -21.5518, 0.44 ) }
    dend_44 { pt3dadd( 96.7264, -78.4162, -21.7912, 0.44 ) }
    dend_44 { pt3dadd( 96.7485, -78.5878, -21.8156, 0.44 ) }
    dend_44 { pt3dadd( 97.0775, -80.908, -22.1304, 0.29 ) }
    dend_44 { pt3dadd( 97.1753, -81.5477, -22.2108, 0.29 ) }
    dend_44 { pt3dadd( 97.1908, -81.6323, -22.2202, 0.29 ) }
    dend_44 { pt3dadd( 97.3899, -82.7278, -22.338, 0.29 ) }
    dend_44 { pt3dadd( 97.5809, -83.9822, -22.4536, 0.44 ) }
    dend_44 { pt3dadd( 97.684, -84.8879, -22.512, 1.18 ) }
    dend_44 { pt3dadd( 97.7701, -86.162, -22.5506, 1.33 ) }
    dend_44 { pt3dadd( 97.7923, -86.9358, -22.5734, 0.37 ) }
    dend_44 { pt3dadd( 97.7911, -88.217, -22.6091, 0.37 ) }
    dend_44 { pt3dadd( 97.7891, -88.3043, -22.6114, 0.37 ) }
    dend_44 { pt3dadd( 97.7607, -89.6655, -22.6429, 0.37 ) }
    dend_44 { pt3dadd( 97.7552, -89.9482, -22.6484, 0.81 ) }
    dend_44 { pt3dadd( 97.7493, -91.0439, -22.6663, 0.81 ) }
    dend_44 { pt3dadd( 97.7721, -92.0327, -22.678, 0.29 ) }
    dend_44 { pt3dadd( 97.8703, -93.4891, -22.6756, 0.29 ) }
    dend_44 { pt3dadd( 97.9732, -94.8611, -22.6525, 0.29 ) }
    dend_44 { pt3dadd( 97.9956, -95.1171, -22.6444, 0.81 ) }
    dend_44 { pt3dadd( 98.0009, -95.2042, -22.6405, 0.81 ) }
    dend_44 { pt3dadd( 98.0228, -95.9671, -22.6024, 0.81 ) }
    dend_44 { pt3dadd( 98.0176, -96.9164, -22.5535, 0.22 ) }
    dend_44 { pt3dadd( 97.9741, -98.0869, -22.4933, 0.22 ) }
    dend_44 { pt3dadd( 97.9721, -98.1864, -22.4896, 0.22 ) }
    dend_44 { pt3dadd( 97.9667, -100.354, -22.5162, 0.22 ) }
    dend_44 { pt3dadd( 97.976, -100.897, -22.5438, 1.03 ) }
    dend_44 { pt3dadd( 97.9913, -101.844, -22.6248, 1.4 ) }
    dend_44 { pt3dadd( 97.9946, -102.241, -22.6693, 1.4 ) }
    dend_44 { pt3dadd( 98.0139, -103.595, -22.8347, 1.18 ) }
    dend_44 { pt3dadd( 98.0254, -104.785, -23.0222, 0.59 ) }
    dend_44 { pt3dadd( 98.0298, -105.433, -23.1494, 0.37 ) }
    dend_44 { pt3dadd( 98.0128, -106.598, -23.3898, 0.37 ) }
    dend_44 { pt3dadd( 97.9545, -108.183, -23.7252, 0.37 ) }
    dend_44 { pt3dadd( 97.9501, -108.269, -23.7421, 0.37 ) }
    dend_44 { pt3dadd( 97.8937, -109.373, -23.9293, 1.11 ) }
    dend_44 { pt3dadd( 97.8914, -109.472, -23.9455, 1.11 ) }
    dend_44 { pt3dadd( 97.8967, -110.555, -24.1378, 1.77 ) }
    dend_44 { pt3dadd( 97.9336, -111.512, -24.3155, 1.92 ) }
    dend_44 { pt3dadd( 98.0229, -112.58, -24.5047, 1.25 ) }
    dend_44 { pt3dadd( 98.138, -113.708, -24.6938, 0.66 ) }
    dend_44 { pt3dadd( 98.249, -114.769, -24.8494, 0.52 ) }
    dend_44 { pt3dadd( 98.3776, -116.12, -25.0547, 0.52 ) }
    dend_44 { pt3dadd( 98.3831, -116.206, -25.0677, 0.52 ) }
    dend_44 { pt3dadd( 98.4055, -117.355, -25.1816, 0.52 ) }
    dend_44 { pt3dadd( 98.3662, -118.363, -25.228, 1.4 ) }
    dend_44 { pt3dadd( 98.3014, -119.103, -25.2228, 1.77 ) }
    dend_44 { pt3dadd( 98.1086, -120.553, -25.1264, 0.74 ) }
    dend_44 { pt3dadd( 97.9063, -121.801, -24.9513, 0.44 ) }
    dend_44 { pt3dadd( 97.6882, -122.999, -24.7188, 0.37 ) }
    dend_44 { pt3dadd( 97.5054, -123.881, -24.4623, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_44 { pt3dadd( 97.4882, -123.974, -24.4291, 0.37 ) }
    dend_44 { pt3dadd( 97.2806, -125.304, -23.8995, 0.74 ) }
    dend_44 { pt3dadd( 97.1278, -126.675, -23.3263, 0.96 ) }
    dend_44 { pt3dadd( 97.1126, -126.929, -23.2238, 0.96 ) }
    dend_44 { pt3dadd( 97.1142, -128.155, -22.8254, 0.44 ) }
    dend_44 { pt3dadd( 97.1877, -129.528, -22.3723, 0.44 ) }
    dend_44 { pt3dadd( 97.1943, -129.611, -22.3473, 0.44 ) }
    dend_44 { pt3dadd( 97.2994, -130.55, -22.1109, 0.81 ) }
    dend_44 { pt3dadd( 97.3068, -130.648, -22.0943, 0.81 ) }
    dend_44 { pt3dadd( 97.395, -131.835, -21.9087, 1.18 ) }
    dend_44 { pt3dadd( 97.4996, -133.177, -21.7331, 0.74 ) }
    dend_44 { pt3dadd( 97.5687, -133.898, -21.6312, 0.29 ) }
    dend_44 { pt3dadd( 97.6642, -134.787, -21.5117, 0.22 ) }
    dend_44 { pt3dadd( 97.7951, -135.901, -21.2998, 0.22 ) }
    dend_44 { pt3dadd( 97.9296, -137.09, -21.0382, 0.22 ) }
    dend_44 { pt3dadd( 97.9674, -137.472, -20.944, 0.66 ) }
    dend_44 { pt3dadd( 98.0195, -138.372, -20.7972, 0.74 ) }
    dend_44 { pt3dadd( 98.0395, -139.418, -20.6624, 0.74 ) }
    dend_44 { pt3dadd( 97.9976, -140.864, -20.5943, 0.22 ) }
    dend_44 { pt3dadd( 97.8993, -142.035, -20.6293, 0.22 ) }
    dend_44 { pt3dadd( 97.8539, -142.312, -20.6579, 0.22 ) }
    dend_44 { pt3dadd( 97.3733, -144.501, -20.9992, 0.22 ) }
    dend_44 { pt3dadd( 97.1484, -145.273, -21.1796, 0.88 ) }
    dend_44 { pt3dadd( 96.7608, -146.432, -21.5288, 0.88 ) }
    dend_44 { pt3dadd( 96.5876, -146.922, -21.7126, 0.59 ) }
    dend_44 { pt3dadd( 96.5633, -146.987, -21.7387, 0.59 ) }
    dend_44 { pt3dadd( 96.3809, -147.475, -21.9195, 0.22 ) }
    dend_44 { pt3dadd( 96.0689, -148.368, -22.1822, 0.22 ) }
    dend_44 { pt3dadd( 95.8457, -149.061, -22.3536, 0.22 ) }
    dend_44 { pt3dadd( 95.8212, -149.143, -22.3706, 0.22 ) }
    dend_44 { pt3dadd( 95.31, -150.959, -22.8102, 0.22 ) }
    dend_44 { pt3dadd( 95.0447, -151.964, -23.0874, 0.96 ) }
    dend_44 { pt3dadd( 94.7723, -153.086, -23.3628, 1.33 ) }
    dend_44 { pt3dadd( 94.5557, -154.056, -23.5682, 1.33 ) }
    dend_44 { pt3dadd( 94.5403, -154.127, -23.5816, 1.33 ) }
    dend_44 { pt3dadd( 94.2516, -155.557, -23.7949, 0.37 ) }
    dend_44 { pt3dadd( 94.1098, -156.371, -23.8684, 0.22 ) }
    dend_44 { pt3dadd( 93.7863, -158.314, -24.0679, 0.22 ) }
    dend_44 { pt3dadd( 93.6883, -158.851, -24.1174, 0.66 ) }
    dend_44 { pt3dadd( 93.5376, -159.647, -24.1789, 0.81 ) }
    dend_44 { pt3dadd( 93.4851, -159.916, -24.1952, 0.81 ) }
    dend_44 { pt3dadd( 93.3119, -160.813, -24.2229, 0.81 ) }
    dend_44 { pt3dadd( 93.1111, -161.815, -24.2755, 0.15 ) }
    dend_44 { pt3dadd( 92.6341, -164.146, -24.5139, 0.15 ) }
    dend_44 { pt3dadd( 92.618, -164.232, -24.5187, 0.15 ) }
    dend_44 { pt3dadd( 92.5463, -164.66, -24.4874, 1.11 ) }
    dend_44 { pt3dadd( 92.4393, -165.384, -24.3153, 1.33 ) }
    dend_44 { pt3dadd( 92.3469, -166.071, -24.0475, 0.44 ) }
    dend_44 { pt3dadd( 92.2786, -166.739, -23.7018, 0.44 ) }
    dend_44 { pt3dadd( 92.2215, -167.912, -22.9758, 0.44 ) }
    dend_44 { pt3dadd( 92.1749, -169.893, -21.7843, 0.22 ) }
    dend_44 { pt3dadd( 92.1806, -171.05, -21.0717, 0.74 ) }
    dend_44 { pt3dadd( 92.1839, -171.125, -21.0269, 0.74 ) }
    dend_44 { pt3dadd( 92.2515, -171.944, -20.5696, 0.74 ) }
    dend_44 { pt3dadd( 92.379, -173.12, -19.9774, 0.22 ) }
    dend_44 { pt3dadd( 92.5533, -174.485, -19.4482, 0.22 ) }
    dend_44 { pt3dadd( 92.7031, -175.41, -19.1882, 0.74 ) }
    dend_44 { pt3dadd( 92.874, -176.388, -18.9881, 1.03 ) }
    dend_44 { pt3dadd( 92.999, -177.042, -18.8674, 0.81 ) }
    dend_44 { pt3dadd( 93.0332, -177.199, -18.8439, 0.22 ) }
    dend_44 { pt3dadd( 93.3031, -178.236, -18.7134, 0.22 ) }
    dend_44 { pt3dadd( 93.3302, -178.317, -18.7029, 0.22 ) }
    dend_44 { pt3dadd( 93.6052, -179.082, -18.6213, 0.22 ) }
    dend_44 { pt3dadd( 93.7163, -179.375, -18.5848, 0.66 ) }
    dend_44 { pt3dadd( 94.0399, -180.166, -18.4745, 0.66 ) }
    dend_44 { pt3dadd( 94.4674, -181.188, -18.3266, 0.15 ) }
    dend_44 { pt3dadd( 94.8984, -182.188, -18.1723, 0.15 ) }
    dend_44 { pt3dadd( 95.2764, -183.131, -18.0405, 0.15 ) }
    dend_44 { pt3dadd( 95.3118, -183.223, -18.0293, 0.15 ) }
    dend_44 { pt3dadd( 95.4458, -183.615, -17.9948, 1.11 ) }
    dend_44 { pt3dadd( 95.6988, -184.515, -17.9452, 1.4 ) }
    dend_44 { pt3dadd( 95.7217, -184.612, -17.9431, 1.4 ) }
    dend_44 { pt3dadd( 95.8974, -185.6, -17.9047, 0.81 ) }
    dend_44 { pt3dadd( 95.9955, -186.232, -17.8723, 0.22 ) }
    dend_44 { pt3dadd( 96.1449, -187.16, -17.8256, 0.22 ) }
    dend_44 { pt3dadd( 96.3841, -188.826, -17.6454, 0.22 ) }
    dend_44 { pt3dadd( 96.3982, -188.938, -17.6274, 0.22 ) }
    dend_44 { pt3dadd( 96.4958, -189.747, -17.4686, 0.22 ) }
    dend_44 { pt3dadd( 96.5046, -189.819, -17.4518, 0.22 ) }
    dend_44 { pt3dadd( 96.7505, -191.72, -16.9256, 0.22 ) }
    dend_44 { pt3dadd( 96.9678, -193.227, -16.4456, 0.22 ) }
    dend_44 { pt3dadd( 97.0244, -193.601, -16.3143, 0.88 ) }
    dend_44 { pt3dadd( 97.038, -193.681, -16.2859, 0.88 ) }
    dend_44 { pt3dadd( 97.1351, -194.206, -16.095, 0.88 ) }
    dend_44 { pt3dadd( 97.2901, -195.16, -15.7714, 0.44 ) }
    dend_44 { pt3dadd( 97.3023, -195.255, -15.7439, 0.44 ) }
    dend_44 { pt3dadd( 97.4715, -196.471, -15.5253, 0.22 ) }
    dend_44 { pt3dadd( 97.5319, -196.916, -15.4594, 1.33 ) }
    dend_44 { pt3dadd( 97.5386, -197.003, -15.4508, 1.33 ) }
    dend_44 { pt3dadd( 97.6018, -198.086, -15.3657, 1.47 ) }
    dend_44 { pt3dadd( 97.6407, -199.206, -15.3191, 0.22 ) }
    dend_44 { pt3dadd( 97.6616, -199.866, -15.3011, 0.22 ) }
    dend_44 { pt3dadd( 97.6626, -199.94, -15.3012, 0.22 ) }
    dend_44 { pt3dadd( 97.6437, -202.479, -15.3002, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 94/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -0.114726, -54.6721, -10.1106, 0.29 ) }
    dend_40 { pt3dadd( -0.49356, -55.9837, -10.3354, 0.29 ) }
    dend_40 { pt3dadd( -0.906053, -57.5194, -10.6301, 0.29 ) }
    dend_40 { pt3dadd( -1.24834, -58.7043, -10.864, 0.29 ) }
    dend_40 { pt3dadd( -1.26718, -58.7684, -10.876, 0.29 ) }
    dend_40 { pt3dadd( -1.53945, -59.671, -11.0359, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_40 { pt3dadd( -1.92644, -60.926, -11.2738, 0.29 ) }
    dend_40 { pt3dadd( -2.20258, -61.7455, -11.4016, 1.18 ) }
    dend_40 { pt3dadd( -2.60005, -62.7522, -11.5956, 1.55 ) }
    dend_40 { pt3dadd( -3.03681, -63.7666, -11.8035, 0.81 ) }
    dend_40 { pt3dadd( -3.34356, -64.4156, -11.9419, 0.59 ) }
    dend_40 { pt3dadd( -3.58731, -64.8976, -12.0473, 0.44 ) }
    dend_40 { pt3dadd( -3.79792, -65.2921, -12.1303, 0.29 ) }
    dend_40 { pt3dadd( -4.67302, -66.8466, -12.4164, 0.29 ) }
    dend_40 { pt3dadd( -4.89089, -67.2256, -12.4887, 0.29 ) }
    dend_40 { pt3dadd( -5.02407, -67.4418, -12.5313, 0.66 ) }
    dend_40 { pt3dadd( -5.30262, -67.8985, -12.6092, 0.66 ) }
    dend_40 { pt3dadd( -5.90813, -68.9521, -12.7222, 0.22 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -0.114726, -54.6721, -10.1106, 1.47 ) }
    dend_39 { pt3dadd( 0.266825, -55.0644, -10.5344, 1.47 ) }
    dend_39 { pt3dadd( 0.845858, -55.6702, -11.2228, 1.77 ) }
    dend_39 { pt3dadd( 1.61303, -56.4565, -12.2838, 1.77 ) }
    dend_39 { pt3dadd( 2.73108, -57.6264, -13.8248, 0.37 ) }
    dend_39 { pt3dadd( 2.76899, -57.6665, -13.8748, 0.37 ) }
    dend_39 { pt3dadd( 3.71768, -58.7066, -15.0594, 0.66 ) }
    dend_39 { pt3dadd( 4.07724, -59.1238, -15.5024, 0.96 ) }
    dend_39 { pt3dadd( 5.48446, -60.8512, -17.122, 0.44 ) }
    dend_39 { pt3dadd( 6.0072, -61.5138, -17.6337, 1.33 ) }
    dend_39 { pt3dadd( 6.39281, -62.0386, -17.9296, 1.92 ) }
    dend_39 { pt3dadd( 6.88367, -62.791, -18.2787, 2.21 ) }
    dend_39 { pt3dadd( 7.47327, -63.8465, -18.6315, 1.47 ) }
    dend_39 { pt3dadd( 7.97601, -64.8793, -18.9103, 0.52 ) }
    dend_39 { pt3dadd( 8.15375, -65.3217, -18.9825, 0.52 ) }
    dend_39 { pt3dadd( 8.5902, -66.4962, -19.186, 0.52 ) }
    dend_39 { pt3dadd( 8.88769, -67.3266, -19.3248, 0.52 ) }
    dend_39 { pt3dadd( 9.17836, -68.121, -19.4384, 0.44 ) }
    dend_39 { pt3dadd( 9.5413, -69.0217, -19.5274, 0.88 ) }
    dend_39 { pt3dadd( 9.89598, -69.7731, -19.5808, 1.4 ) }
    dend_39 { pt3dadd( 10.3143, -70.5446, -19.6122, 1.4 ) }
    dend_39 { pt3dadd( 10.9505, -71.5798, -19.6101, 0.88 ) }
    dend_39 { pt3dadd( 11.5407, -72.4584, -19.6056, 0.59 ) }
    dend_39 { pt3dadd( 12.2642, -73.4969, -19.5961, 0.59 ) }
    dend_39 { pt3dadd( 12.9418, -74.4944, -19.5942, 0.59 ) }
    dend_39 { pt3dadd( 13.2824, -75.0417, -19.5951, 0.74 ) }
    dend_39 { pt3dadd( 13.6376, -75.733, -19.6371, 0.74 ) }
    dend_39 { pt3dadd( 13.8768, -76.3678, -19.7146, 0.52 ) }
    dend_39 { pt3dadd( 13.8948, -76.4391, -19.7257, 0.52 ) }
    dend_39 { pt3dadd( 14.0322, -77.3562, -19.8709, 0.52 ) }
    dend_39 { pt3dadd( 14.124, -78.5732, -20.0352, 0.52 ) }
    dend_39 { pt3dadd( 14.1762, -79.9579, -20.2456, 0.52 ) }
    dend_39 { pt3dadd( 14.1975, -81.0473, -20.4227, 1.33 ) }
    dend_39 { pt3dadd( 14.21, -81.7997, -20.5423, 1.84 ) }
    dend_39 { pt3dadd( 14.2319, -82.9082, -20.7015, 2.43 ) }
    dend_39 { pt3dadd( 14.2679, -84.4209, -20.9137, 1.92 ) }
    dend_39 { pt3dadd( 14.287, -85.7218, -21.0703, 1.18 ) }
    dend_39 { pt3dadd( 14.2861, -85.795, -21.0784, 1.18 ) }
    dend_39 { pt3dadd( 14.2442, -86.8835, -21.2255, 0.66 ) }
    dend_39 { pt3dadd( 14.1529, -88.2628, -21.4578, 0.52 ) }
    dend_39 { pt3dadd( 14.0744, -89.0497, -21.615, 0.52 ) }
    dend_39 { pt3dadd( 13.9221, -90.3329, -21.8946, 0.52 ) }
    dend_39 { pt3dadd( 13.7621, -91.6373, -22.2175, 0.52 ) }
    dend_39 { pt3dadd( 13.7511, -91.7231, -22.2419, 0.52 ) }
    dend_39 { pt3dadd( 13.6069, -92.8746, -22.6115, 0.52 ) }
    dend_39 { pt3dadd( 13.5004, -93.8161, -22.9188, 1.11 ) }
    dend_39 { pt3dadd( 13.4928, -93.9147, -22.9535, 1.11 ) }
    dend_39 { pt3dadd( 13.4447, -95.4317, -23.5015, 1.84 ) }
    dend_39 { pt3dadd( 13.4438, -95.5123, -23.5282, 1.84 ) }
    dend_39 { pt3dadd( 13.4354, -96.422, -23.8175, 2.28 ) }
    dend_39 { pt3dadd( 13.4528, -97.4539, -24.1135, 2.28 ) }
    dend_39 { pt3dadd( 13.5362, -99.4902, -24.7395, 0.44 ) }
    dend_39 { pt3dadd( 13.5471, -100.327, -24.9925, 0.44 ) }
    dend_39 { pt3dadd( 13.5285, -101.142, -25.2632, 0.44 ) }
    dend_39 { pt3dadd( 13.5251, -101.248, -25.3029, 0.44 ) }
    dend_39 { pt3dadd( 13.4718, -102.456, -25.8078, 0.44 ) }
    dend_39 { pt3dadd( 13.4252, -103.765, -26.3641, 0.44 ) }
    dend_39 { pt3dadd( 13.3656, -105.175, -26.9348, 0.44 ) }
    dend_39 { pt3dadd( 13.2675, -106.384, -27.433, 0.44 ) }
    dend_39 { pt3dadd( 13.2381, -106.639, -27.5358, 0.29 ) }
    dend_39 { pt3dadd( 13.2103, -106.797, -27.5919, 0.29 ) }
    dend_39 { pt3dadd( 12.8892, -108.007, -27.9314, 0.29 ) }
    dend_39 { pt3dadd( 12.8656, -108.087, -27.9438, 0.29 ) }
    dend_39 { pt3dadd( 12.5546, -109.146, -28.0801, 0.29 ) }
    dend_39 { pt3dadd( 12.4235, -109.565, -28.114, 1.03 ) }
    dend_39 { pt3dadd( 12.1297, -110.44, -28.1988, 1.4 ) }
    dend_39 { pt3dadd( 11.9129, -111.104, -28.3012, 1.4 ) }
    dend_39 { pt3dadd( 11.8905, -111.184, -28.3162, 1.4 ) }
    dend_39 { pt3dadd( 11.6492, -112.309, -28.5361, 0.44 ) }
    dend_39 { pt3dadd( 11.5069, -113.29, -28.7517, 0.44 ) }
    dend_39 { pt3dadd( 11.4967, -113.372, -28.7698, 0.44 ) }
    dend_39 { pt3dadd( 11.3626, -114.614, -29.0294, 0.44 ) }
    dend_39 { pt3dadd( 11.1941, -116.134, -29.3316, 0.44 ) }
    dend_39 { pt3dadd( 11.185, -116.207, -29.3427, 0.44 ) }
    dend_39 { pt3dadd( 11.0465, -117.22, -29.447, 1.62 ) }
    dend_39 { pt3dadd( 10.8973, -118.397, -29.5124, 2.14 ) }
    dend_39 { pt3dadd( 10.7794, -119.537, -29.5105, 2.14 ) }
    dend_39 { pt3dadd( 10.7721, -119.621, -29.5078, 2.14 ) }
    dend_39 { pt3dadd( 10.7053, -120.654, -29.4797, 1.4 ) }
    dend_39 { pt3dadd( 10.7004, -120.814, -29.4755, 0.22 ) }
    dend_39 { pt3dadd( 10.7095, -122.351, -29.3594, 0.22 ) }
    dend_39 { pt3dadd( 10.7615, -123.919, -29.1667, 0.22 ) }
    dend_39 { pt3dadd( 10.7988, -124.716, -29.0433, 0.96 ) }
    dend_39 { pt3dadd( 10.8362, -125.624, -28.9215, 1.4 ) }
    dend_39 { pt3dadd( 10.8632, -126.281, -28.8446, 1.4 ) }
    dend_39 { pt3dadd( 10.9053, -127.486, -28.6968, 0.74 ) }
    dend_39 { pt3dadd( 10.9196, -128.384, -28.5746, 0.29 ) }
    dend_39 { pt3dadd( 10.9416, -129.868, -28.3583, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_39 { pt3dadd( 10.9867, -131.459, -28.1275, 0.29 ) }
    dend_39 { pt3dadd( 10.9893, -131.533, -28.1231, 0.29 ) }
    dend_39 { pt3dadd( 11.0175, -132.263, -28.1468, 1.33 ) }
    dend_39 { pt3dadd( 11.0211, -132.337, -28.157, 1.33 ) }
    dend_39 { pt3dadd( 11.0707, -133.217, -28.3193, 1.92 ) }
    dend_39 { pt3dadd( 11.1186, -134.146, -28.5415, 1.92 ) }
    dend_39 { pt3dadd( 11.1469, -135.269, -28.8108, 1.62 ) }
    dend_39 { pt3dadd( 11.1464, -135.341, -28.8311, 1.62 ) }
    dend_39 { pt3dadd( 11.1197, -136.148, -29.0805, 0.29 ) }
    dend_39 { pt3dadd( 11.0686, -137.2, -29.4153, 0.29 ) }
    dend_39 { pt3dadd( 10.9716, -138.257, -29.7489, 1.47 ) }
    dend_39 { pt3dadd( 10.8108, -139.494, -30.1559, 1.47 ) }
    dend_39 { pt3dadd( 10.6495, -140.492, -30.4566, 0.66 ) }
    dend_39 { pt3dadd( 10.5434, -141.074, -30.6238, 0.37 ) }
    dend_39 { pt3dadd( 10.5303, -141.134, -30.6394, 0.37 ) }
    dend_39 { pt3dadd( 10.2247, -142.339, -30.8937, 0.29 ) }
    dend_39 { pt3dadd( 9.78629, -143.922, -31.1309, 0.22 ) }
    dend_39 { pt3dadd( 9.46146, -145.043, -31.269, 0.22 ) }
    dend_39 { pt3dadd( 9.10198, -146.215, -31.3692, 0.22 ) }
    dend_39 { pt3dadd( 8.62655, -147.752, -31.4781, 0.22 ) }
    dend_39 { pt3dadd( 8.45246, -148.305, -31.5058, 0.88 ) }
    dend_39 { pt3dadd( 8.25713, -148.99, -31.5053, 1.25 ) }
    dend_39 { pt3dadd( 8.23894, -149.062, -31.5006, 1.25 ) }
    dend_39 { pt3dadd( 8.12101, -149.634, -31.4626, 0.29 ) }
    dend_39 { pt3dadd( 8.08841, -149.857, -31.4486, 0.29 ) }
    dend_39 { pt3dadd( 8.06302, -150.194, -31.4246, 0.22 ) }
    dend_39 { pt3dadd( 8.15573, -152.586, -31.2383, 0.22 ) }
    dend_39 { pt3dadd( 8.19682, -152.915, -31.2071, 0.59 ) }
    dend_39 { pt3dadd( 8.38038, -153.665, -31.1235, 0.88 ) }
    dend_39 { pt3dadd( 8.62452, -154.349, -31.0368, 0.88 ) }
    dend_39 { pt3dadd( 8.78533, -154.741, -30.9832, 0.22 ) }
    dend_39 { pt3dadd( 9.49092, -156.078, -30.7736, 0.22 ) }
    dend_39 { pt3dadd( 9.53694, -156.136, -30.7617, 0.22 ) }
    dend_39 { pt3dadd( 10.5936, -157.297, -30.5107, 0.22 ) }
    dend_39 { pt3dadd( 10.6755, -157.371, -30.4939, 0.96 ) }
    // Section: dend_29, id: dend_29, parent: dend_17 (entry count 35/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -22.4638, 80.991, -24.8057, 0.22 ) }
    dend_29 { pt3dadd( -25.1087, 80.4248, -21.9507, 0.22 ) }
    dend_29 { pt3dadd( -25.3209, 80.4025, -21.7529, 0.22 ) }
    dend_29 { pt3dadd( -25.4112, 80.4452, -21.7185, 0.22 ) }
    dend_29 { pt3dadd( -25.7769, 80.7487, -21.6905, 0.37 ) }
    dend_29 { pt3dadd( -26.4288, 81.4523, -21.7252, 0.37 ) }
    dend_29 { pt3dadd( -26.5084, 81.5561, -21.7325, 0.37 ) }
    dend_29 { pt3dadd( -26.9626, 82.3668, -21.8663, 0.37 ) }
    dend_29 { pt3dadd( -27.7554, 84.1001, -22.1224, 0.29 ) }
    dend_29 { pt3dadd( -27.7893, 84.1845, -22.1344, 0.29 ) }
    dend_29 { pt3dadd( -28.0311, 85.0405, -22.3247, 0.74 ) }
    dend_29 { pt3dadd( -28.1464, 85.8397, -22.615, 0.74 ) }
    dend_29 { pt3dadd( -28.1997, 86.5917, -22.9501, 0.37 ) }
    dend_29 { pt3dadd( -28.235, 87.6748, -23.4874, 0.22 ) }
    dend_29 { pt3dadd( -28.2531, 88.7374, -24.0825, 0.22 ) }
    dend_29 { pt3dadd( -28.3411, 90.7822, -25.2671, 0.22 ) }
    dend_29 { pt3dadd( -28.4777, 92.5751, -26.3697, 0.96 ) }
    dend_29 { pt3dadd( -28.5763, 93.435, -26.9208, 1.62 ) }
    dend_29 { pt3dadd( -28.7379, 94.519, -27.6152, 1.62 ) }
    dend_29 { pt3dadd( -28.9989, 95.7617, -28.3584, 0.66 ) }
    dend_29 { pt3dadd( -29.1794, 96.4809, -28.7251, 0.52 ) }
    dend_29 { pt3dadd( -29.4055, 97.1376, -28.9437, 0.52 ) }
    dend_29 { pt3dadd( -29.4973, 97.4023, -29.0128, 0.52 ) }
    dend_29 { pt3dadd( -29.6236, 97.9645, -29.2141, 0.52 ) }
    dend_29 { pt3dadd( -29.6323, 98.0492, -29.2505, 0.52 ) }
    dend_29 { pt3dadd( -29.7099, 99.6046, -29.9816, 0.52 ) }
    dend_29 { pt3dadd( -29.7551, 100.556, -30.4402, 0.74 ) }
    dend_29 { pt3dadd( -29.8185, 101.784, -30.9895, 0.74 ) }
    dend_29 { pt3dadd( -29.8418, 103.597, -31.8889, 0.37 ) }
    dend_29 { pt3dadd( -29.8421, 103.666, -31.9266, 0.37 ) }
    dend_29 { pt3dadd( -29.9098, 104.713, -32.5518, 0.37 ) }
    dend_29 { pt3dadd( -30.0193, 105.549, -33.108, 0.66 ) }
    dend_29 { pt3dadd( -30.2243, 106.488, -33.7697, 0.66 ) }
    dend_29 { pt3dadd( -30.7937, 108.122, -34.8297, 0.29 ) }
    dend_29 { pt3dadd( -30.9215, 108.394, -34.997, 0.29 ) }
    dend_29 { pt3dadd( -31.5492, 109.692, -35.8589, 0.29 ) }
    dend_29 { pt3dadd( -31.6294, 109.855, -35.9776, 0.29 ) }
    dend_29 { pt3dadd( -32.2169, 110.966, -36.8185, 0.59 ) }
    dend_29 { pt3dadd( -32.7281, 111.796, -37.435, 0.81 ) }
    dend_29 { pt3dadd( -33.2632, 112.605, -37.9156, 0.81 ) }
    dend_29 { pt3dadd( -33.586, 113.267, -38.2884, 0.22 ) }
    dend_29 { pt3dadd( -33.6143, 113.348, -38.324, 0.22 ) }
    dend_29 { pt3dadd( -33.8314, 114.11, -38.6313, 0.22 ) }
    dend_29 { pt3dadd( -33.8561, 114.205, -38.6694, 0.22 ) }
    dend_29 { pt3dadd( -34.1499, 115.369, -39.1497, 0.22 ) }
    dend_29 { pt3dadd( -34.676, 117.4, -40.0233, 0.22 ) }
    dend_29 { pt3dadd( -35.4777, 120.161, -41.228, 0.22 ) }
    dend_29 { pt3dadd( -35.9997, 121.868, -41.988, 0.88 ) }
    dend_29 { pt3dadd( -36.4453, 123.227, -42.6008, 1.69 ) }
    dend_29 { pt3dadd( -36.8342, 124.297, -43.0832, 2.14 ) }
    dend_29 { pt3dadd( -37.2252, 125.251, -43.514, 0.29 ) }
    dend_29 { pt3dadd( -37.8283, 126.386, -44.0093, 0.29 ) }
    dend_29 { pt3dadd( -37.8736, 126.458, -44.0446, 0.29 ) }
    dend_29 { pt3dadd( -38.4633, 127.283, -44.4187, 0.29 ) }
    dend_29 { pt3dadd( -38.9204, 127.912, -44.6812, 0.29 ) }
    dend_29 { pt3dadd( -38.9981, 128.019, -44.7246, 0.29 ) }
    dend_29 { pt3dadd( -39.8026, 129.185, -45.2319, 0.29 ) }
    dend_29 { pt3dadd( -40.425, 130.157, -45.6874, 0.29 ) }
    dend_29 { pt3dadd( -40.8946, 130.938, -46.0695, 0.74 ) }
    dend_29 { pt3dadd( -41.2352, 131.554, -46.3779, 1.03 ) }
    dend_29 { pt3dadd( -41.6994, 132.467, -46.8311, 1.03 ) }
    dend_29 { pt3dadd( -42.1856, 133.447, -47.3081, 1.03 ) }
    dend_29 { pt3dadd( -42.3487, 133.799, -47.4849, 0.22 ) }
    dend_29 { pt3dadd( -42.3823, 133.862, -47.518, 0.22 ) }
    dend_29 { pt3dadd( -42.6423, 134.316, -47.7547, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_29 { pt3dadd( -42.7646, 134.531, -47.8608, 0.22 ) }
    dend_29 { pt3dadd( -43.3443, 135.529, -48.3253, 0.22 ) }
    dend_29 { pt3dadd( -44.0618, 136.726, -48.8229, 0.81 ) }
    dend_29 { pt3dadd( -44.5544, 137.569, -49.1677, 0.81 ) }
    dend_29 { pt3dadd( -45.0642, 138.504, -49.5015, 0.81 ) }
    dend_29 { pt3dadd( -45.4169, 139.198, -49.7129, 0.22 ) }
    dend_29 { pt3dadd( -45.4549, 139.279, -49.7337, 0.22 ) }
    dend_29 { pt3dadd( -45.7547, 139.964, -49.872, 0.22 ) }
    dend_29 { pt3dadd( -45.8638, 140.216, -49.9106, 0.22 ) }
    dend_29 { pt3dadd( -46.527, 141.767, -50.139, 0.22 ) }
    dend_29 { pt3dadd( -47.0548, 142.841, -50.3275, 0.22 ) }
    dend_29 { pt3dadd( -47.3385, 143.354, -50.4263, 0.88 ) }
    dend_29 { pt3dadd( -47.7039, 143.939, -50.5628, 0.88 ) }
    dend_29 { pt3dadd( -47.7452, 144.001, -50.5865, 0.88 ) }
    dend_29 { pt3dadd( -48.0823, 144.465, -50.8279, 0.52 ) }
    dend_29 { pt3dadd( -48.667, 145.193, -51.3223, 0.52 ) }
    dend_29 { pt3dadd( -49.1039, 145.7, -51.7122, 0.88 ) }
    dend_29 { pt3dadd( -49.6234, 146.286, -52.1805, 1.18 ) }
    dend_29 { pt3dadd( -50.7337, 147.576, -53.1561, 0.29 ) }
    dend_29 { pt3dadd( -51.1494, 148.084, -53.5011, 0.29 ) }
    dend_29 { pt3dadd( -51.23, 148.192, -53.5649, 0.29 ) }
    dend_29 { pt3dadd( -51.7845, 149.013, -53.9651, 0.29 ) }
    dend_29 { pt3dadd( -51.8997, 149.192, -54.0341, 0.29 ) }
    dend_29 { pt3dadd( -52.6635, 150.517, -54.4618, 0.29 ) }
    dend_29 { pt3dadd( -53.0934, 151.297, -54.6668, 0.52 ) }
    dend_29 { pt3dadd( -53.3974, 151.893, -54.8182, 0.52 ) }
    dend_29 { pt3dadd( -53.7727, 152.675, -55.0026, 0.22 ) }
    dend_29 { pt3dadd( -54.3917, 154.047, -55.3061, 0.22 ) }
    dend_29 { pt3dadd( -54.952, 155.395, -55.646, 1.62 ) }
    dend_29 { pt3dadd( -55.4287, 156.646, -55.9921, 1.92 ) }
    dend_29 { pt3dadd( -56.0748, 158.442, -56.521, 0.22 ) }
    dend_29 { pt3dadd( -56.5924, 159.921, -56.9817, 0.22 ) }
    dend_29 { pt3dadd( -56.651, 160.09, -57.0308, 0.22 ) }
    dend_29 { pt3dadd( -57.1464, 161.405, -57.3781, 0.59 ) }
    dend_29 { pt3dadd( -57.2201, 161.573, -57.4084, 0.59 ) }
    dend_29 { pt3dadd( -57.4024, 161.963, -57.4715, 0.59 ) }
    dend_29 { pt3dadd( -57.5914, 162.313, -57.5207, 0.59 ) }
    dend_29 { pt3dadd( -58.2674, 163.341, -57.6621, 0.37 ) }
    dend_29 { pt3dadd( -58.6903, 164.038, -57.7832, 0.22 ) }
    dend_29 { pt3dadd( -59.4058, 165.251, -57.9939, 0.22 ) }
    dend_29 { pt3dadd( -59.6852, 166.001, -58.2281, 0.22 ) }
    dend_29 { pt3dadd( -59.7593, 166.323, -58.3521, 0.22 ) }
    dend_29 { pt3dadd( -59.8119, 167.263, -58.8177, 0.22 ) }
    dend_29 { pt3dadd( -59.6649, 168.686, -59.7281, 0.22 ) }
    dend_29 { pt3dadd( -59.6512, 168.761, -59.7815, 0.22 ) }
    dend_29 { pt3dadd( -59.0841, 171.089, -61.5788, 1.03 ) }
    dend_29 { pt3dadd( -58.8523, 172.044, -62.3351, 1.33 ) }
    dend_29 { pt3dadd( -58.4572, 173.792, -63.7718, 0.37 ) }
    dend_29 { pt3dadd( -58.1277, 175.313, -65.0844, 0.15 ) }
    dend_29 { pt3dadd( -58.0541, 175.843, -65.5976, 0.15 ) }
    dend_29 { pt3dadd( -58.0537, 175.907, -65.6646, 0.15 ) }
    dend_29 { pt3dadd( -58.2801, 176.664, -66.5274, 0.15 ) }
    dend_29 { pt3dadd( -58.5076, 177.146, -67.0947, 0.15 ) }
    dend_29 { pt3dadd( -58.5823, 177.251, -67.2057, 0.15 ) }
    dend_29 { pt3dadd( -59.1504, 178.014, -67.9259, 0.15 ) }
    dend_29 { pt3dadd( -59.7147, 178.891, -68.698, 0.44 ) }
    dend_29 { pt3dadd( -60.0953, 179.561, -69.2444, 0.66 ) }
    dend_29 { pt3dadd( -60.44, 180.632, -70.0561, 0.44 ) }
    dend_29 { pt3dadd( -60.5077, 180.918, -70.2488, 0.15 ) }
    dend_29 { pt3dadd( -60.5453, 181.198, -70.4489, 0.15 ) }
    dend_29 { pt3dadd( -60.5944, 181.891, -70.9525, 0.15 ) }
    dend_29 { pt3dadd( -60.5964, 181.963, -71.0101, 0.15 ) }
    dend_29 { pt3dadd( -60.7162, 184.16, -72.8901, 1.11 ) }
    dend_29 { pt3dadd( -60.8492, 185.121, -73.7522, 1.11 ) }
    dend_29 { pt3dadd( -61.1893, 186.721, -75.218, 0.29 ) }
    dend_29 { pt3dadd( -61.2933, 187.075, -75.5284, 0.29 ) }
    dend_29 { pt3dadd( -61.3775, 187.298, -75.7094, 0.29 ) }
    dend_29 { pt3dadd( -61.7008, 188.0, -76.1768, 0.29 ) }
    dend_29 { pt3dadd( -62.3254, 189.086, -76.6965, 0.29 ) }
    dend_29 { pt3dadd( -62.896, 190.069, -77.039, 0.96 ) }
    dend_29 { pt3dadd( -63.551, 191.189, -77.3657, 0.96 ) }
    dend_29 { pt3dadd( -63.9325, 191.866, -77.5788, 0.59 ) }
    dend_29 { pt3dadd( -64.4086, 192.825, -77.9739, 0.59 ) }
    dend_29 { pt3dadd( -64.5986, 193.255, -78.1833, 0.22 ) }
    dend_29 { pt3dadd( -65.0689, 194.3, -78.7924, 0.22 ) }
    dend_29 { pt3dadd( -65.5705, 195.346, -79.5406, 0.88 ) }
    dend_29 { pt3dadd( -66.0234, 196.189, -80.2705, 0.88 ) }
    dend_29 { pt3dadd( -66.8684, 197.632, -81.6888, 1.18 ) }
    dend_29 { pt3dadd( -67.1939, 198.154, -82.2424, 0.22 ) }
    dend_29 { pt3dadd( -67.7455, 199.021, -83.1572, 0.22 ) }
    dend_29 { pt3dadd( -67.7753, 199.072, -83.209, 0.22 ) }
    dend_29 { pt3dadd( -68.1735, 199.793, -83.8429, 0.22 ) }
    dend_29 { pt3dadd( -68.2222, 199.891, -83.9163, 0.22 ) }
    dend_29 { pt3dadd( -68.4641, 200.364, -84.1982, 0.59 ) }
    dend_29 { pt3dadd( -68.6439, 200.847, -84.5389, 0.59 ) }
    dend_29 { pt3dadd( -68.9664, 202.082, -85.4736, 0.81 ) }
    dend_29 { pt3dadd( -69.0132, 202.236, -85.5896, 0.81 ) }
    dend_29 { pt3dadd( -69.3257, 203.12, -86.2738, 0.81 ) }
    dend_29 { pt3dadd( -69.3558, 203.189, -86.3284, 0.81 ) }
    dend_29 { pt3dadd( -70.1151, 204.682, -87.5318, 0.81 ) }
    dend_29 { pt3dadd( -70.1538, 204.75, -87.5821, 0.81 ) }
    dend_29 { pt3dadd( -71.1387, 206.289, -88.6413, 1.11 ) }
    dend_29 { pt3dadd( -72.025, 207.611, -89.4904, 1.11 ) }
    dend_29 { pt3dadd( -72.5864, 208.406, -89.9676, 0.74 ) }
    dend_29 { pt3dadd( -72.8878, 208.815, -90.1794, 0.22 ) }
    dend_29 { pt3dadd( -73.8223, 210.081, -90.7605, 0.22 ) }
    dend_29 { pt3dadd( -73.9623, 210.299, -90.867, 0.22 ) }
    dend_29 { pt3dadd( -74.443, 211.182, -91.3013, 0.22 ) }
    dend_29 { pt3dadd( -74.5646, 211.435, -91.4193, 0.59 ) }
    dend_29 { pt3dadd( -74.9727, 212.383, -91.8532, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_29 { pt3dadd( -75.6861, 214.257, -92.7288, 0.44 ) }
    dend_29 { pt3dadd( -76.191, 215.709, -93.419, 0.74 ) }
    dend_29 { pt3dadd( -76.5188, 216.712, -93.8864, 1.47 ) }
    dend_29 { pt3dadd( -76.8317, 217.704, -94.3316, 1.77 ) }
    dend_29 { pt3dadd( -77.0928, 218.541, -94.683, 1.77 ) }
    dend_29 { pt3dadd( -77.5581, 220.064, -95.2217, 0.37 ) }
    dend_29 { pt3dadd( -77.6944, 220.528, -95.3425, 0.22 ) }
    dend_29 { pt3dadd( -77.7429, 220.701, -95.3807, 0.22 ) }
    dend_29 { pt3dadd( -77.9874, 221.733, -95.5931, 0.22 ) }
    dend_29 { pt3dadd( -78.0499, 222.012, -95.6453, 0.22 ) }
    dend_29 { pt3dadd( -78.3461, 223.41, -95.8449, 0.22 ) }
    dend_29 { pt3dadd( -78.5608, 224.391, -95.9278, 0.59 ) }
    dend_29 { pt3dadd( -78.5807, 224.481, -95.9348, 0.59 ) }
    dend_29 { pt3dadd( -78.8176, 225.484, -96.0084, 0.59 ) }
    dend_29 { pt3dadd( -79.0097, 226.234, -96.0621, 0.44 ) }
    dend_29 { pt3dadd( -79.2247, 226.872, -96.0793, 0.74 ) }
    dend_29 { pt3dadd( -79.5494, 227.614, -96.0623, 1.11 ) }
    dend_29 { pt3dadd( -79.8481, 228.181, -96.0181, 0.44 ) }
    dend_29 { pt3dadd( -80.2102, 228.821, -95.9545, 0.44 ) }
    dend_29 { pt3dadd( -80.3744, 229.121, -95.9163, 0.44 ) }
    dend_29 { pt3dadd( -80.998, 230.217, -95.738, 0.37 ) }
    dend_29 { pt3dadd( -81.1649, 230.502, -95.6861, 0.37 ) }
    dend_29 { pt3dadd( -81.5569, 231.21, -95.5497, 0.37 ) }
    dend_29 { pt3dadd( -81.6967, 231.48, -95.4973, 0.37 ) }
    dend_29 { pt3dadd( -82.5546, 233.185, -95.2362, 0.37 ) }
    dend_29 { pt3dadd( -82.9352, 233.987, -95.1441, 0.66 ) }
    dend_29 { pt3dadd( -82.9725, 234.071, -95.1393, 0.66 ) }
    dend_29 { pt3dadd( -83.4457, 235.137, -95.0877, 1.33 ) }
    dend_29 { pt3dadd( -83.4849, 235.221, -95.0859, 1.33 ) }
    dend_29 { pt3dadd( -84.1314, 236.495, -95.1155, 1.33 ) }
    dend_29 { pt3dadd( -84.1982, 236.617, -95.1264, 1.33 ) }
    dend_29 { pt3dadd( -84.6623, 237.495, -95.2088, 0.29 ) }
    dend_29 { pt3dadd( -84.7616, 237.681, -95.2234, 0.29 ) }
    dend_29 { pt3dadd( -85.2431, 238.588, -95.278, 0.29 ) }
    dend_29 { pt3dadd( -85.3642, 238.83, -95.286, 0.29 ) }
    dend_29 { pt3dadd( -86.005, 240.235, -95.2818, 0.29 ) }
    dend_29 { pt3dadd( -86.278, 240.864, -95.2706, 0.66 ) }
    dend_29 { pt3dadd( -86.3874, 241.134, -95.2604, 0.66 ) }
    dend_29 { pt3dadd( -86.6554, 241.865, -95.2225, 0.81 ) }
    dend_29 { pt3dadd( -86.718, 242.053, -95.2106, 0.81 ) }
    dend_29 { pt3dadd( -86.908, 242.598, -95.1918, 0.81 ) }
    dend_29 { pt3dadd( -87.0742, 243.054, -95.1914, 0.15 ) }
    dend_29 { pt3dadd( -87.1251, 243.183, -95.1969, 0.15 ) }
    dend_29 { pt3dadd( -87.6461, 244.424, -95.2694, 0.15 ) }
    dend_29 { pt3dadd( -87.6924, 244.519, -95.2709, 0.15 ) }
    dend_29 { pt3dadd( -88.3015, 245.683, -95.2383, 0.52 ) }
    dend_29 { pt3dadd( -88.3959, 245.857, -95.2265, 0.52 ) }
    dend_29 { pt3dadd( -88.667, 246.354, -95.1797, 0.81 ) }
    dend_29 { pt3dadd( -88.707, 246.438, -95.1711, 0.81 ) }
    dend_29 { pt3dadd( -89.1964, 247.572, -95.0061, 0.66 ) }
    dend_29 { pt3dadd( -89.4331, 248.188, -94.9043, 0.66 ) }
    dend_29 { pt3dadd( -89.6121, 248.742, -94.8008, 0.22 ) }
    dend_29 { pt3dadd( -89.654, 248.904, -94.7717, 0.22 ) }
    dend_29 { pt3dadd( -89.9367, 250.331, -94.5253, 0.22 ) }
    dend_29 { pt3dadd( -90.0287, 250.884, -94.4481, 0.44 ) }
    dend_29 { pt3dadd( -90.0448, 250.988, -94.4338, 0.44 ) }
    dend_29 { pt3dadd( -90.1671, 251.549, -94.35, 0.44 ) }
    dend_29 { pt3dadd( -90.4758, 252.738, -94.1578, 0.22 ) }
    dend_29 { pt3dadd( -90.5271, 252.913, -94.1269, 0.22 ) }
    dend_29 { pt3dadd( -90.9073, 254.055, -93.938, 0.22 ) }
    dend_29 { pt3dadd( -91.2788, 255.081, -93.8113, 0.44 ) }
    dend_29 { pt3dadd( -91.6203, 255.973, -93.7239, 0.44 ) }
    dend_29 { pt3dadd( -91.6547, 256.058, -93.7175, 0.44 ) }
    dend_29 { pt3dadd( -91.705, 256.191, -93.7156, 0.22 ) }
    dend_29 { pt3dadd( -92.2652, 257.89, -93.7653, 0.22 ) }
    dend_29 { pt3dadd( -92.4379, 258.617, -93.8139, 0.22 ) }
    dend_29 { pt3dadd( -92.6032, 259.675, -93.9194, 0.22 ) }
    dend_29 { pt3dadd( -92.6086, 259.755, -93.9245, 0.22 ) }
    dend_29 { pt3dadd( -92.6545, 260.898, -93.9776, 0.22 ) }
    dend_29 { pt3dadd( -92.6564, 260.991, -93.9781, 0.22 ) }
    dend_29 { pt3dadd( -92.6042, 262.426, -93.9109, 0.81 ) }
    dend_29 { pt3dadd( -92.605, 262.531, -93.9021, 0.81 ) }
    dend_29 { pt3dadd( -92.6841, 263.674, -93.7747, 0.81 ) }
    dend_29 { pt3dadd( -92.7845, 264.429, -93.6717, 0.81 ) }
    dend_29 { pt3dadd( -92.922, 265.119, -93.5577, 0.29 ) }
    dend_29 { pt3dadd( -92.9411, 265.209, -93.5451, 0.29 ) }
    dend_29 { pt3dadd( -93.2534, 266.728, -93.3546, 0.29 ) }
    dend_29 { pt3dadd( -93.2894, 266.907, -93.3355, 0.29 ) }
    dend_29 { pt3dadd( -93.4836, 268.24, -93.2987, 0.29 ) }
    dend_29 { pt3dadd( -93.4956, 268.37, -93.3008, 0.29 ) }
    dend_29 { pt3dadd( -93.5705, 269.61, -93.3651, 1.4 ) }
    dend_29 { pt3dadd( -93.6421, 271.334, -93.4827, 1.4 ) }
    dend_29 { pt3dadd( -93.6638, 272.633, -93.59, 0.81 ) }
    dend_29 { pt3dadd( -93.7014, 274.342, -93.7656, 0.44 ) }
    dend_29 { pt3dadd( -93.7404, 275.23, -93.8754, 0.66 ) }
    dend_29 { pt3dadd( -93.7486, 275.434, -93.9109, 0.29 ) }
    dend_29 { pt3dadd( -93.771, 275.906, -94.0249, 0.29 ) }
    dend_29 { pt3dadd( -93.8236, 276.578, -94.2212, 0.29 ) }
    dend_29 { pt3dadd( -93.836, 276.703, -94.2566, 0.29 ) }
    dend_29 { pt3dadd( -94.0737, 278.133, -94.6202, 0.29 ) }
    dend_29 { pt3dadd( -94.3718, 279.511, -94.8991, 0.59 ) }
    dend_29 { pt3dadd( -94.399, 279.612, -94.9146, 0.59 ) }
    dend_29 { pt3dadd( -94.8014, 280.752, -95.0359, 0.59 ) }
    dend_29 { pt3dadd( -94.8358, 280.838, -95.0424, 0.59 ) }
    dend_29 { pt3dadd( -95.7268, 282.783, -95.1456, 0.37 ) }
    dend_29 { pt3dadd( -96.4847, 284.123, -95.0931, 0.22 ) }
    dend_29 { pt3dadd( -97.0042, 284.959, -95.004, 0.22 ) }
    dend_29 { pt3dadd( -98.418, 287.151, -94.724, 0.22 ) }
    dend_29 { pt3dadd( -98.47, 287.227, -94.7139, 0.22 ) }
    dend_29 { pt3dadd( -99.6753, 288.903, -94.5063, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_29 { pt3dadd( -100.992, 290.611, -94.3149, 0.96 ) }
    dend_29 { pt3dadd( -102.333, 292.238, -94.1833, 1.25 ) }
    dend_29 { pt3dadd( -102.405, 292.315, -94.1769, 1.25 ) }
    dend_29 { pt3dadd( -103.338, 293.219, -94.1161, 1.25 ) }
    dend_29 { pt3dadd( -103.992, 293.822, -94.1143, 0.37 ) }
    dend_29 { pt3dadd( -104.622, 294.368, -94.162, 0.37 ) }
    dend_29 { pt3dadd( -105.821, 295.398, -94.3792, 0.29 ) }
    dend_29 { pt3dadd( -106.726, 296.12, -94.5469, 0.29 ) }
    dend_29 { pt3dadd( -107.052, 296.386, -94.6084, 0.88 ) }
    dend_29 { pt3dadd( -108.354, 297.461, -94.8736, 0.96 ) }
    dend_29 { pt3dadd( -108.872, 297.879, -95.0082, 0.96 ) }
    dend_29 { pt3dadd( -109.406, 298.286, -95.1481, 0.15 ) }
    dend_29 { pt3dadd( -109.477, 298.342, -95.1676, 0.15 ) }
    dend_29 { pt3dadd( -110.062, 298.793, -95.3037, 0.15 ) }
    dend_29 { pt3dadd( -110.845, 299.386, -95.4693, 0.15 ) }
    dend_29 { pt3dadd( -112.201, 300.402, -95.7286, 0.15 ) }
    dend_29 { pt3dadd( -113.306, 301.28, -95.9386, 0.15 ) }
    dend_29 { pt3dadd( -114.065, 301.865, -96.0389, 0.15 ) }
    dend_29 { pt3dadd( -114.394, 302.111, -96.0728, 0.15 ) }
    dend_29 { pt3dadd( -115.395, 302.852, -96.1487, 0.15 ) }
    dend_29 { pt3dadd( -115.925, 303.236, -96.1869, 1.47 ) }
    dend_29 { pt3dadd( -117.02, 304.03, -96.2752, 1.47 ) }
    dend_29 { pt3dadd( -118.46, 305.062, -96.4791, 0.29 ) }
    dend_29 { pt3dadd( -119.139, 305.52, -96.5902, 0.29 ) }
    dend_29 { pt3dadd( -119.42, 305.713, -96.6372, 0.29 ) }
    dend_29 { pt3dadd( -120.333, 306.359, -96.7997, 0.29 ) }
    dend_29 { pt3dadd( -120.577, 306.541, -96.8508, 0.29 ) }
    dend_29 { pt3dadd( -121.603, 307.388, -97.1105, 0.29 ) }
    dend_29 { pt3dadd( -122.08, 307.872, -97.2644, 1.03 ) }
    dend_29 { pt3dadd( -122.649, 308.484, -97.4436, 1.4 ) }
    dend_29 { pt3dadd( -123.2, 309.065, -97.6243, 1.4 ) }
    dend_29 { pt3dadd( -123.664, 309.544, -97.782, 0.29 ) }
    dend_29 { pt3dadd( -123.728, 309.607, -97.8046, 0.29 ) }
    dend_29 { pt3dadd( -124.935, 310.853, -98.2448, 0.29 ) }
    dend_29 { pt3dadd( -126.12, 312.131, -98.6873, 0.29 ) }
    dend_29 { pt3dadd( -126.897, 313.015, -98.9839, 0.29 ) }
    dend_29 { pt3dadd( -127.337, 313.529, -99.1511, 0.29 ) }
    dend_29 { pt3dadd( -127.396, 313.597, -99.1719, 0.29 ) }
    dend_29 { pt3dadd( -128.726, 315.158, -99.6177, 0.29 ) }
    dend_29 { pt3dadd( -128.864, 315.323, -99.6595, 0.29 ) }
    dend_29 { pt3dadd( -129.672, 316.362, -99.8645, 0.29 ) }
    dend_29 { pt3dadd( -129.856, 316.601, -99.907, 0.29 ) }
    dend_29 { pt3dadd( -130.17, 316.993, -99.9793, 0.29 ) }
    dend_29 { pt3dadd( -130.307, 317.16, -100.01, 0.29 ) }
    dend_29 { pt3dadd( -130.91, 317.801, -100.057, 0.29 ) }
    dend_29 { pt3dadd( -131.008, 317.913, -100.062, 0.29 ) }
    dend_29 { pt3dadd( -132.099, 319.203, -100.133, 0.74 ) }
    dend_29 { pt3dadd( -132.161, 319.271, -100.144, 0.74 ) }
    dend_29 { pt3dadd( -132.626, 319.779, -100.262, 1.18 ) }
    dend_29 { pt3dadd( -133.762, 321.097, -100.61, 0.29 ) }
    dend_29 { pt3dadd( -134.471, 321.963, -100.862, 0.29 ) }
    dend_29 { pt3dadd( -134.972, 322.601, -101.016, 0.29 ) }
    dend_29 { pt3dadd( -136.116, 324.135, -101.315, 0.29 ) }
    dend_29 { pt3dadd( -136.201, 324.267, -101.327, 0.29 ) }
    dend_29 { pt3dadd( -136.659, 325.189, -101.282, 0.29 ) }
    dend_29 { pt3dadd( -136.707, 325.309, -101.231, 0.29 ) }
    dend_29 { pt3dadd( -137.35, 326.774, -100.195, 0.29 ) }
    dend_29 { pt3dadd( -137.571, 327.237, -99.8711, 0.29 ) }
    dend_29 { pt3dadd( -138.032, 328.084, -99.2828, 0.29 ) }
    dend_29 { pt3dadd( -138.37, 328.605, -98.9515, 0.52 ) }
    dend_29 { pt3dadd( -139.555, 330.134, -98.2094, 0.29 ) }
    dend_29 { pt3dadd( -139.69, 330.298, -98.1539, 0.29 ) }
    dend_29 { pt3dadd( -140.907, 331.785, -97.8902, 0.29 ) }
    dend_29 { pt3dadd( -141.211, 332.173, -97.8421, 0.15 ) }
    dend_29 { pt3dadd( -141.337, 332.338, -97.8338, 0.15 ) }
    dend_29 { pt3dadd( -142.256, 333.69, -97.8038, 0.15 ) }
    dend_29 { pt3dadd( -142.295, 333.774, -97.8024, 0.15 ) }
    dend_29 { pt3dadd( -142.658, 334.664, -97.7373, 0.96 ) }
    dend_29 { pt3dadd( -142.915, 335.308, -97.6252, 0.96 ) }
    dend_29 { pt3dadd( -142.966, 335.426, -97.5995, 0.96 ) }
    dend_29 { pt3dadd( -143.339, 336.239, -97.3951, 0.22 ) }
    dend_29 { pt3dadd( -144.895, 338.856, -96.413, 0.22 ) }
    dend_29 { pt3dadd( -144.947, 338.926, -96.3811, 0.22 ) }
    dend_29 { pt3dadd( -145.735, 339.815, -95.9355, 0.44 ) }
    dend_29 { pt3dadd( -146.229, 340.315, -95.672, 0.66 ) }
    dend_29 { pt3dadd( -146.292, 340.378, -95.6463, 0.66 ) }
    dend_29 { pt3dadd( -147.85, 341.908, -95.1303, 0.15 ) }
    dend_29 { pt3dadd( -147.983, 342.028, -95.0822, 0.15 ) }
    dend_29 { pt3dadd( -149.156, 343.249, -94.659, 0.15 ) }
    dend_29 { pt3dadd( -149.242, 343.354, -94.6283, 0.15 ) }
    dend_29 { pt3dadd( -150.818, 345.302, -93.844, 0.15 ) }
    dend_29 { pt3dadd( -151.029, 345.568, -93.7273, 0.74 ) }
    dend_29 { pt3dadd( -152.604, 347.581, -92.8713, 0.15 ) }
    dend_29 { pt3dadd( -153.068, 348.13, -92.6134, 0.52 ) }
    dend_29 { pt3dadd( -153.369, 348.447, -92.4278, 0.52 ) }
    dend_29 { pt3dadd( -155.444, 350.557, -91.0689, 0.15 ) }
    dend_29 { pt3dadd( -155.808, 350.905, -90.8228, 0.37 ) }
    dend_29 { pt3dadd( -156.695, 351.78, -90.3121, 0.15 ) }
    dend_29 { pt3dadd( -156.756, 351.843, -90.2827, 0.15 ) }
    dend_29 { pt3dadd( -158.115, 353.331, -89.7423, 0.37 ) }
    dend_29 { pt3dadd( -158.546, 353.864, -89.6282, 0.66 ) }
    dend_29 { pt3dadd( -158.935, 354.495, -89.6246, 0.15 ) }
    dend_29 { pt3dadd( -159.684, 355.943, -89.647, 0.15 ) }
    dend_29 { pt3dadd( -159.756, 356.113, -89.6362, 0.15 ) }
    dend_29 { pt3dadd( -160.222, 357.376, -89.5227, 0.88 ) }
    dend_29 { pt3dadd( -160.242, 357.453, -89.5135, 0.88 ) }
    dend_29 { pt3dadd( -160.452, 358.392, -89.3021, 0.88 ) }
    dend_29 { pt3dadd( -160.469, 358.479, -89.2753, 0.88 ) }
    dend_29 { pt3dadd( -160.826, 360.492, -88.4271, 0.22 ) }
    dend_29 { pt3dadd( -160.861, 360.667, -88.341, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_29 { pt3dadd( -161.322, 362.681, -87.1242, 0.22 ) }
    dend_29 { pt3dadd( -161.397, 363.014, -86.9224, 0.59 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 2/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -22.4638, 80.991, -24.8057, 1.92 ) }
    dend_18 { pt3dadd( -22.2367, 81.9091, -24.9268, 1.92 ) }
    dend_18 { pt3dadd( -21.8578, 83.4406, -25.1287, 1.77 ) }
    dend_18 { pt3dadd( -21.8361, 83.5285, -25.1403, 1.77 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 6/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -31.8945, 52.7377, -20.6298, 0.74 ) }
    dend_10 { pt3dadd( -32.171, 52.687, -21.1306, 0.74 ) }
    dend_10 { pt3dadd( -32.2029, 52.6843, -21.1835, 0.66 ) }
    dend_10 { pt3dadd( -33.1808, 52.7454, -22.6202, 0.66 ) }
    dend_10 { pt3dadd( -34.7206, 53.0305, -25.0168, 0.66 ) }
    dend_10 { pt3dadd( -34.9424, 53.0896, -25.3509, 0.66 ) }
    dend_10 { pt3dadd( -35.5224, 53.2701, -26.2045, 0.66 ) }
    dend_10 { pt3dadd( -35.6515, 53.3257, -26.3854, 1.03 ) }
    dend_10 { pt3dadd( -36.2359, 53.6334, -27.153, 1.03 ) }
    dend_10 { pt3dadd( -37.1247, 54.1842, -28.1572, 0.74 ) }
    dend_10 { pt3dadd( -37.6124, 54.4146, -28.4645, 0.44 ) }
    dend_10 { pt3dadd( -37.6658, 54.4285, -28.4938, 0.44 ) }
    dend_10 { pt3dadd( -38.4976, 54.4366, -28.9283, 0.44 ) }
    dend_10 { pt3dadd( -38.5613, 54.4277, -28.9589, 0.44 ) }
    dend_10 { pt3dadd( -39.4293, 54.2183, -29.3259, 0.44 ) }
    dend_10 { pt3dadd( -40.0281, 54.0617, -29.5941, 1.4 ) }
    dend_10 { pt3dadd( -40.7426, 53.8664, -29.9948, 1.4 ) }
    dend_10 { pt3dadd( -41.5991, 53.7144, -30.5192, 0.52 ) }
    dend_10 { pt3dadd( -41.7602, 53.6968, -30.6279, 0.52 ) }
    dend_10 { pt3dadd( -42.4381, 53.7071, -31.1483, 0.52 ) }
    dend_10 { pt3dadd( -43.2995, 53.8369, -31.8672, 0.52 ) }
    dend_10 { pt3dadd( -43.4346, 53.8685, -31.9853, 0.52 ) }
    dend_10 { pt3dadd( -44.5825, 54.229, -33.1623, 0.52 ) }
    dend_10 { pt3dadd( -44.6173, 54.2414, -33.2003, 0.52 ) }
    dend_10 { pt3dadd( -45.351, 54.5202, -34.0366, 0.88 ) }
    dend_10 { pt3dadd( -45.8001, 54.7034, -34.5581, 0.88 ) }
    dend_10 { pt3dadd( -45.8471, 54.7237, -34.6076, 0.88 ) }
    dend_10 { pt3dadd( -46.9892, 55.2697, -35.8391, 0.52 ) }
    dend_10 { pt3dadd( -47.0753, 55.319, -35.9286, 0.52 ) }
    dend_10 { pt3dadd( -47.7026, 55.6591, -36.4218, 0.52 ) }
    dend_10 { pt3dadd( -47.9543, 55.7898, -36.567, 0.52 ) }
    dend_10 { pt3dadd( -48.6144, 56.1026, -36.9628, 0.52 ) }
    dend_10 { pt3dadd( -48.8543, 56.2026, -37.1002, 0.52 ) }
    dend_10 { pt3dadd( -49.833, 56.4984, -37.5878, 0.52 ) }
    dend_10 { pt3dadd( -50.6819, 56.6549, -38.1105, 2.06 ) }
    dend_10 { pt3dadd( -50.8494, 56.6674, -38.2302, 2.06 ) }
    dend_10 { pt3dadd( -52.3002, 56.6262, -39.3441, 0.96 ) }
    dend_10 { pt3dadd( -52.4113, 56.6112, -39.4452, 0.96 ) }
    dend_10 { pt3dadd( -53.1607, 56.4525, -40.1882, 0.96 ) }
    dend_10 { pt3dadd( -53.9994, 56.2169, -41.0875, 0.96 ) }
    dend_10 { pt3dadd( -54.0874, 56.1945, -41.1857, 0.96 ) }
    dend_10 { pt3dadd( -54.5802, 56.0844, -41.7042, 0.96 ) }
    dend_10 { pt3dadd( -55.4501, 55.9559, -42.4855, 0.44 ) }
    dend_10 { pt3dadd( -56.0681, 55.9333, -43.0338, 0.44 ) }
    dend_10 { pt3dadd( -56.269, 55.9676, -43.1995, 0.44 ) }
    dend_10 { pt3dadd( -56.6473, 56.095, -43.4274, 0.44 ) }
    dend_10 { pt3dadd( -56.7941, 56.1572, -43.5036, 0.44 ) }
    dend_10 { pt3dadd( -57.4209, 56.4669, -43.7561, 0.44 ) }
    dend_10 { pt3dadd( -57.5477, 56.5306, -43.7944, 0.44 ) }
    dend_10 { pt3dadd( -58.2218, 56.8864, -44.1132, 1.25 ) }
    dend_10 { pt3dadd( -58.9951, 57.2783, -44.5686, 1.62 ) }
    dend_10 { pt3dadd( -59.0428, 57.3025, -44.6009, 1.62 ) }
    dend_10 { pt3dadd( -59.8872, 57.7459, -45.2411, 1.62 ) }
    dend_10 { pt3dadd( -59.9321, 57.7687, -45.2781, 1.62 ) }
    dend_10 { pt3dadd( -61.2035, 58.4181, -46.383, 0.37 ) }
    dend_10 { pt3dadd( -61.2452, 58.4366, -46.4258, 0.37 ) }
    dend_10 { pt3dadd( -61.664, 58.5917, -46.9023, 0.37 ) }
    dend_10 { pt3dadd( -61.7058, 58.5994, -46.948, 0.37 ) }
    dend_10 { pt3dadd( -62.2817, 58.5261, -47.652, 0.37 ) }
    dend_10 { pt3dadd( -62.3658, 58.5012, -47.753, 0.37 ) }
    dend_10 { pt3dadd( -63.2781, 58.1525, -48.7426, 0.37 ) }
    dend_10 { pt3dadd( -63.3689, 58.116, -48.8423, 0.37 ) }
    dend_10 { pt3dadd( -63.9597, 57.8915, -49.5018, 0.37 ) }
    dend_10 { pt3dadd( -65.2528, 57.548, -51.0364, 0.37 ) }
    dend_10 { pt3dadd( -65.2924, 57.5436, -51.0835, 0.37 ) }
    dend_10 { pt3dadd( -65.8648, 57.588, -51.6829, 0.37 ) }
    dend_10 { pt3dadd( -65.9571, 57.6127, -51.7847, 0.37 ) }
    dend_10 { pt3dadd( -66.4807, 57.8232, -52.3813, 0.37 ) }
    dend_10 { pt3dadd( -67.1681, 58.191, -53.1411, 0.66 ) }
    dend_10 { pt3dadd( -67.8314, 58.5471, -53.7661, 1.25 ) }
    dend_10 { pt3dadd( -68.4729, 58.8622, -54.3546, 1.25 ) }
    dend_10 { pt3dadd( -69.802, 59.4282, -55.5779, 0.29 ) }
    dend_10 { pt3dadd( -70.3617, 59.6206, -56.0573, 0.29 ) }
    dend_10 { pt3dadd( -70.9285, 59.7696, -56.5388, 0.29 ) }
    dend_10 { pt3dadd( -71.9191, 59.9945, -57.3493, 0.29 ) }
    dend_10 { pt3dadd( -71.9736, 60.0061, -57.3937, 0.29 ) }
    dend_10 { pt3dadd( -72.6538, 60.1306, -57.98, 0.52 ) }
    dend_10 { pt3dadd( -73.4053, 60.2481, -58.6095, 0.81 ) }
    dend_10 { pt3dadd( -74.3579, 60.3893, -59.4944, 0.81 ) }
    dend_10 { pt3dadd( -74.4015, 60.3975, -59.5383, 0.81 ) }
    dend_10 { pt3dadd( -74.9452, 60.5544, -60.171, 0.81 ) }
    dend_10 { pt3dadd( -75.9996, 60.9731, -61.4312, 0.52 ) }
    dend_10 { pt3dadd( -76.0422, 60.9955, -61.4837, 0.52 ) }
    dend_10 { pt3dadd( -76.526, 61.2983, -62.1432, 1.18 ) }
    dend_10 { pt3dadd( -76.7956, 61.4809, -62.5083, 1.18 ) }
    dend_10 { pt3dadd( -77.4933, 61.8935, -63.4368, 0.74 ) }
    dend_10 { pt3dadd( -77.9164, 62.1013, -63.9463, 0.59 ) }
    dend_10 { pt3dadd( -77.9658, 62.1187, -63.9946, 0.59 ) }
    dend_10 { pt3dadd( -78.9081, 62.3443, -64.8307, 0.59 ) }
    dend_10 { pt3dadd( -78.9942, 62.3579, -64.9189, 0.59 ) }
    dend_10 { pt3dadd( -79.715, 62.4257, -65.6843, 0.59 ) }
    dend_10 { pt3dadd( -80.318, 62.4964, -66.3036, 0.59 ) }
    dend_10 { pt3dadd( -80.3756, 62.5126, -66.3686, 0.59 ) }
    dend_10 { pt3dadd( -80.677, 62.6736, -66.7316, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_10 { pt3dadd( -81.5451, 63.5527, -67.8761, 0.59 ) }
    dend_10 { pt3dadd( -81.5859, 63.6057, -67.9338, 0.59 ) }
    dend_10 { pt3dadd( -81.849, 64.058, -68.3561, 0.59 ) }
    dend_10 { pt3dadd( -82.1649, 64.5481, -68.8131, 0.37 ) }
    dend_10 { pt3dadd( -82.1997, 64.5865, -68.848, 0.37 ) }
    dend_10 { pt3dadd( -82.5009, 64.817, -69.0397, 0.29 ) }
    dend_10 { pt3dadd( -83.072, 65.0668, -69.2307, 0.29 ) }
    dend_10 { pt3dadd( -83.1532, 65.0894, -69.2572, 0.29 ) }
    dend_10 { pt3dadd( -83.8675, 65.1879, -69.5933, 0.52 ) }
    dend_10 { pt3dadd( -84.2057, 65.2117, -69.7883, 0.52 ) }
    dend_10 { pt3dadd( -84.253, 65.2177, -69.8287, 0.52 ) }
    dend_10 { pt3dadd( -84.7986, 65.319, -70.3817, 0.52 ) }
    dend_10 { pt3dadd( -84.8959, 65.345, -70.4828, 0.52 ) }
    dend_10 { pt3dadd( -85.8703, 65.6532, -71.4386, 0.52 ) }
    dend_10 { pt3dadd( -85.9105, 65.6687, -71.4829, 0.52 ) }
    dend_10 { pt3dadd( -86.893, 66.0618, -72.6, 0.52 ) }
    dend_10 { pt3dadd( -87.615, 66.356, -73.4243, 0.81 ) }
    dend_10 { pt3dadd( -88.3445, 66.6543, -74.2328, 1.4 ) }
    dend_10 { pt3dadd( -88.9343, 66.8857, -74.836, 1.4 ) }
    dend_10 { pt3dadd( -90.2875, 67.3573, -76.0098, 1.18 ) }
    dend_10 { pt3dadd( -90.5505, 67.4388, -76.2177, 0.37 ) }
    dend_10 { pt3dadd( -90.6525, 67.4691, -76.2986, 0.37 ) }
    dend_10 { pt3dadd( -91.1612, 67.6398, -76.7823, 0.37 ) }
    dend_10 { pt3dadd( -91.3306, 67.7126, -76.9622, 0.37 ) }
    dend_10 { pt3dadd( -91.9622, 68.0788, -77.6152, 0.37 ) }
    dend_10 { pt3dadd( -92.0163, 68.1171, -77.6626, 0.37 ) }
    dend_10 { pt3dadd( -92.9707, 68.8855, -78.5239, 0.37 ) }
    dend_10 { pt3dadd( -93.0828, 68.9832, -78.6278, 0.37 ) }
    dend_10 { pt3dadd( -93.5394, 69.3808, -79.0545, 0.44 ) }
    dend_10 { pt3dadd( -93.9588, 69.702, -79.5036, 0.44 ) }
    dend_10 { pt3dadd( -94.0014, 69.7303, -79.5532, 0.44 ) }
    dend_10 { pt3dadd( -94.3421, 69.9039, -79.9075, 0.37 ) }
    dend_10 { pt3dadd( -94.444, 69.9489, -79.9918, 0.37 ) }
    dend_10 { pt3dadd( -94.9586, 70.1626, -80.4044, 0.37 ) }
    dend_10 { pt3dadd( -96.0775, 70.5332, -81.3906, 0.37 ) }
    dend_10 { pt3dadd( -96.1427, 70.5497, -81.448, 0.37 ) }
    dend_10 { pt3dadd( -96.6391, 70.6438, -81.8521, 0.74 ) }
    dend_10 { pt3dadd( -97.4794, 70.7827, -82.5413, 0.96 ) }
    dend_10 { pt3dadd( -98.0431, 70.8671, -82.9885, 0.37 ) }
    dend_10 { pt3dadd( -98.9867, 71.0121, -83.6853, 0.37 ) }
    dend_10 { pt3dadd( -99.6149, 71.0927, -84.0901, 0.29 ) }
    dend_10 { pt3dadd( -100.392, 71.1853, -84.6261, 0.29 ) }
    dend_10 { pt3dadd( -101.113, 71.2623, -85.1498, 0.29 ) }
    dend_10 { pt3dadd( -101.337, 71.2925, -85.3108, 0.88 ) }
    dend_10 { pt3dadd( -101.83, 71.4158, -85.6474, 1.18 ) }
    dend_10 { pt3dadd( -102.268, 71.5732, -85.886, 1.18 ) }
    dend_10 { pt3dadd( -102.979, 71.8824, -86.2403, 0.37 ) }
    dend_10 { pt3dadd( -103.378, 72.0515, -86.4867, 0.15 ) }
    dend_10 { pt3dadd( -103.834, 72.1926, -86.7916, 0.15 ) }
    dend_10 { pt3dadd( -103.88, 72.201, -86.8336, 0.15 ) }
    dend_10 { pt3dadd( -104.722, 72.2701, -87.7388, 0.15 ) }
    dend_10 { pt3dadd( -104.768, 72.2708, -87.793, 0.15 ) }
    dend_10 { pt3dadd( -106.006, 72.2939, -89.2348, 1.03 ) }
    dend_10 { pt3dadd( -106.337, 72.304, -89.6096, 1.03 ) }
    dend_10 { pt3dadd( -107.308, 72.3985, -90.6215, 0.37 ) }
    dend_10 { pt3dadd( -107.785, 72.4776, -91.0716, 0.37 ) }
    dend_10 { pt3dadd( -107.83, 72.4895, -91.1134, 0.37 ) }
    dend_10 { pt3dadd( -108.633, 72.7639, -91.7787, 0.37 ) }
    dend_10 { pt3dadd( -109.171, 72.9944, -92.1291, 1.11 ) }
    dend_10 { pt3dadd( -110.018, 73.4046, -92.6587, 1.11 ) }
    dend_10 { pt3dadd( -110.075, 73.4333, -92.6901, 1.11 ) }
    dend_10 { pt3dadd( -111.241, 74.0479, -93.4274, 0.29 ) }
    dend_10 { pt3dadd( -111.343, 74.1003, -93.4969, 0.29 ) }
    dend_10 { pt3dadd( -111.92, 74.3658, -93.9187, 0.29 ) }
    dend_10 { pt3dadd( -111.982, 74.3918, -93.9652, 0.52 ) }
    dend_10 { pt3dadd( -112.522, 74.5961, -94.3331, 0.81 ) }
    dend_10 { pt3dadd( -113.188, 74.8412, -94.7346, 0.81 ) }
    dend_10 { pt3dadd( -113.521, 74.9417, -94.9158, 0.96 ) }
    dend_10 { pt3dadd( -114.292, 75.1425, -95.3549, 0.96 ) }
    dend_10 { pt3dadd( -115.073, 75.3266, -95.799, 0.29 ) }
    dend_10 { pt3dadd( -115.723, 75.4886, -96.2649, 0.29 ) }
    dend_10 { pt3dadd( -115.769, 75.5007, -96.3041, 0.29 ) }
    dend_10 { pt3dadd( -116.681, 75.7489, -97.1555, 0.22 ) }
    dend_10 { pt3dadd( -116.938, 75.8279, -97.4296, 0.22 ) }
    dend_10 { pt3dadd( -117.636, 76.0587, -98.2661, 0.22 ) }
    dend_10 { pt3dadd( -118.847, 76.3866, -99.6779, 0.22 ) }
    dend_10 { pt3dadd( -118.96, 76.4084, -99.8193, 0.22 ) }
    dend_10 { pt3dadd( -119.374, 76.4729, -100.321, 0.22 ) }
    dend_10 { pt3dadd( -119.414, 76.4781, -100.369, 0.22 ) }
    dend_10 { pt3dadd( -119.907, 76.5192, -100.911, 0.81 ) }
    dend_10 { pt3dadd( -120.65, 76.556, -101.642, 1.11 ) }
    dend_10 { pt3dadd( -122.227, 76.6918, -102.938, 0.88 ) }
    dend_10 { pt3dadd( -122.631, 76.7431, -103.277, 0.44 ) }
    dend_10 { pt3dadd( -122.721, 76.7634, -103.361, 0.44 ) }
    dend_10 { pt3dadd( -123.044, 76.8698, -103.687, 0.44 ) }
    dend_10 { pt3dadd( -123.35, 77.0031, -104.0, 0.44 ) }
    dend_10 { pt3dadd( -123.829, 77.2439, -104.448, 0.74 ) }
    dend_10 { pt3dadd( -123.874, 77.2702, -104.483, 0.74 ) }
    dend_10 { pt3dadd( -124.795, 77.8365, -105.261, 1.4 ) }
    dend_10 { pt3dadd( -124.844, 77.8647, -105.304, 1.4 ) }
    dend_10 { pt3dadd( -125.616, 78.2442, -106.012, 2.28 ) }
    dend_10 { pt3dadd( -126.14, 78.4171, -106.481, 2.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 92/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -31.8945, 52.7377, -20.6298, 1.18 ) }
    dend_7 { pt3dadd( -32.7074, 52.483, -20.9188, 1.18 ) }
    dend_7 { pt3dadd( -33.5508, 52.2561, -21.2284, 0.88 ) }
    dend_7 { pt3dadd( -34.2003, 52.1756, -21.4649, 0.74 ) }
    dend_7 { pt3dadd( -34.6069, 52.1567, -21.6114, 0.44 ) }
    dend_7 { pt3dadd( -34.6492, 52.1547, -21.6266, 0.44 ) }
    dend_7 { pt3dadd( -35.3368, 52.1225, -21.8744, 0.44 ) }
    dend_7 { pt3dadd( -35.5988, 52.1286, -21.9689, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_7 { pt3dadd( -36.6876, 52.2632, -22.4079, 0.74 ) }
    dend_7 { pt3dadd( -37.2491, 52.3826, -22.599, 0.74 ) }
    // Section: dend_73, id: dend_73, parent: dend_69 (entry count 2/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -141.348, -101.337, 115.251, 0.29 ) }
    dend_73 { pt3dadd( -146.932, -102.696, 121.168, 0.29 ) }
    dend_73 { pt3dadd( -152.39, -103.467, 127.304, 0.29 ) }
    dend_73 { pt3dadd( -157.967, -103.046, 133.366, 0.29 ) }
    dend_73 { pt3dadd( -164.196, -102.346, 138.728, 0.29 ) }
    dend_73 { pt3dadd( -170.827, -102.067, 143.625, 0.29 ) }
    dend_73 { pt3dadd( -177.883, -102.73, 147.845, 0.29 ) }
    dend_73 { pt3dadd( -184.429, -103.107, 152.85, 0.29 ) }
    dend_73 { pt3dadd( -191.969, -103.911, 156.096, 0.29 ) }
    dend_73 { pt3dadd( -199.475, -102.699, 159.295, 0.29 ) }
    dend_73 { pt3dadd( -206.713, -101.501, 163.065, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 13/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -141.348, -101.337, 115.251, 0.29 ) }
    dend_70 { pt3dadd( -146.061, -102.107, 118.824, 0.29 ) }
    dend_70 { pt3dadd( -150.946, -102.623, 122.208, 0.29 ) }
    dend_70 { pt3dadd( -155.817, -102.831, 125.643, 0.29 ) }
    dend_70 { pt3dadd( -161.079, -103.157, 128.434, 0.29 ) }
    dend_70 { pt3dadd( -166.655, -102.562, 130.467, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_58 (entry count 19/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -117.496, -159.804, 87.8243, 0.29 ) }
    dend_64 { pt3dadd( -124.805, -163.441, 93.572, 0.29 ) }
    dend_64 { pt3dadd( -131.172, -167.66, 99.9998, 0.29 ) }
    dend_64 { pt3dadd( -138.535, -172.028, 105.136, 0.29 ) }
    dend_64 { pt3dadd( -146.578, -175.103, 110.189, 0.29 ) }
    dend_64 { pt3dadd( -154.518, -178.444, 115.235, 0.29 ) }
    dend_64 { pt3dadd( -162.085, -182.875, 120.008, 0.29 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 26/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -117.496, -159.804, 87.8243, 0.29 ) }
    dend_59 { pt3dadd( -122.594, -168.886, 89.4762, 0.29 ) }
    dend_59 { pt3dadd( -128.434, -177.66, 89.8013, 0.29 ) }
    dend_59 { pt3dadd( -133.33, -186.991, 89.3917, 0.29 ) }
    dend_59 { pt3dadd( -139.461, -195.498, 88.2768, 0.29 ) }
    dend_59 { pt3dadd( -146.341, -203.479, 87.8712, 0.29 ) }
    dend_59 { pt3dadd( -152.246, -212.215, 87.8192, 0.29 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 33/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 184.649, -73.1485, -26.2054, 0.22 ) }
    dend_49 { pt3dadd( 185.055, -71.4968, -27.6269, 0.22 ) }
    dend_49 { pt3dadd( 185.454, -69.8755, -29.1118, 0.22 ) }
    dend_49 { pt3dadd( 185.859, -68.2023, -30.6392, 0.22 ) }
    dend_49 { pt3dadd( 186.133, -67.0297, -31.6936, 0.22 ) }
    dend_49 { pt3dadd( 186.383, -65.9606, -32.6549, 0.66 ) }
    dend_49 { pt3dadd( 186.514, -65.4018, -33.1572, 0.66 ) }
    dend_49 { pt3dadd( 186.999, -63.5413, -34.736, 0.15 ) }
    dend_49 { pt3dadd( 187.15, -62.986, -35.2293, 0.74 ) }
    dend_49 { pt3dadd( 187.204, -62.6889, -35.4886, 0.74 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 43/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 184.649, -73.1485, -26.2054, 0.59 ) }
    dend_48 { pt3dadd( 185.714, -73.5965, -26.1288, 0.59 ) }
    dend_48 { pt3dadd( 185.781, -73.6168, -26.1266, 0.59 ) }
    dend_48 { pt3dadd( 186.619, -73.8021, -26.108, 0.22 ) }
    dend_48 { pt3dadd( 188.27, -74.099, -26.0795, 0.22 ) }
    dend_48 { pt3dadd( 188.33, -74.1088, -26.0786, 0.22 ) }
    dend_48 { pt3dadd( 188.997, -74.178, -26.1112, 1.25 ) }
    dend_48 { pt3dadd( 190.096, -74.2062, -26.2452, 1.55 ) }
    dend_48 { pt3dadd( 190.619, -74.1934, -26.3177, 1.55 ) }
    dend_48 { pt3dadd( 190.861, -74.1726, -26.3557, 1.55 ) }
    dend_48 { pt3dadd( 191.937, -74.0403, -26.5283, 0.52 ) }
    dend_48 { pt3dadd( 193.573, -73.8624, -26.7551, 0.52 ) }
    dend_48 { pt3dadd( 193.634, -73.8565, -26.7626, 0.52 ) }
    dend_48 { pt3dadd( 194.666, -73.7707, -26.9253, 0.52 ) }
    dend_48 { pt3dadd( 194.752, -73.7671, -26.9406, 0.52 ) }
    dend_48 { pt3dadd( 195.85, -73.7911, -27.1381, 0.52 ) }
    dend_48 { pt3dadd( 196.609, -73.8532, -27.2688, 0.96 ) }
    dend_48 { pt3dadd( 196.678, -73.8616, -27.277, 0.96 ) }
    dend_48 { pt3dadd( 197.516, -73.9609, -27.3816, 0.88 ) }
    dend_48 { pt3dadd( 198.352, -74.0417, -27.5145, 0.22 ) }
    dend_48 { pt3dadd( 199.464, -74.1185, -27.7085, 0.22 ) }
    dend_48 { pt3dadd( 199.523, -74.1227, -27.7198, 0.22 ) }
    dend_48 { pt3dadd( 200.732, -74.19, -27.9381, 0.22 ) }
    dend_48 { pt3dadd( 200.817, -74.1939, -27.954, 0.22 ) }
    dend_48 { pt3dadd( 201.579, -74.2121, -28.0845, 0.22 ) }
    dend_48 { pt3dadd( 201.639, -74.2108, -28.0963, 0.22 ) }
    dend_48 { pt3dadd( 202.506, -74.2123, -28.2766, 0.22 ) }
    dend_48 { pt3dadd( 202.636, -74.2185, -28.3084, 0.22 ) }
    dend_48 { pt3dadd( 203.666, -74.3901, -28.592, 0.22 ) }
    dend_48 { pt3dadd( 204.033, -74.4617, -28.6816, 1.18 ) }
    dend_48 { pt3dadd( 204.509, -74.5646, -28.7844, 1.55 ) }
    dend_48 { pt3dadd( 205.556, -74.7735, -28.9897, 1.18 ) }
    dend_48 { pt3dadd( 206.882, -74.9952, -29.2118, 0.22 ) }
    dend_48 { pt3dadd( 207.956, -75.158, -29.3196, 0.22 ) }
    dend_48 { pt3dadd( 208.558, -75.237, -29.3296, 0.22 ) }
    dend_48 { pt3dadd( 208.619, -75.2439, -29.3278, 0.22 ) }
    dend_48 { pt3dadd( 209.226, -75.296, -29.2868, 0.74 ) }
    dend_48 { pt3dadd( 209.836, -75.2859, -29.2545, 0.74 ) }
    dend_48 { pt3dadd( 210.724, -75.2373, -29.2326, 0.37 ) }
    dend_48 { pt3dadd( 211.235, -75.1891, -29.2577, 0.66 ) }
    dend_48 { pt3dadd( 211.425, -75.18, -29.2801, 0.66 ) }
    dend_48 { pt3dadd( 211.961, -75.1566, -29.357, 0.96 ) }
    dend_48 { pt3dadd( 213.174, -75.0779, -29.6191, 0.37 ) }
    dend_48 { pt3dadd( 214.467, -74.9767, -29.9589, 0.37 ) }
    dend_48 { pt3dadd( 214.524, -74.9712, -29.9775, 0.37 ) }
    dend_48 { pt3dadd( 215.365, -74.8817, -30.2614, 0.37 ) }
    dend_48 { pt3dadd( 216.097, -74.8129, -30.4893, 0.37 ) }
    dend_48 { pt3dadd( 217.132, -74.7272, -30.7726, 0.81 ) }
    dend_48 { pt3dadd( 217.639, -74.6905, -30.8828, 0.81 ) }
    dend_48 { pt3dadd( 218.493, -74.6047, -31.1029, 0.44 ) }
    dend_48 { pt3dadd( 218.552, -74.5998, -31.1188, 0.44 ) }
    dend_48 { pt3dadd( 219.435, -74.5372, -31.3628, 0.44 ) }
    dend_48 { pt3dadd( 219.502, -74.5356, -31.3801, 0.44 ) }
    dend_48 { pt3dadd( 220.19, -74.5299, -31.5081, 0.44 ) }
    dend_48 { pt3dadd( 221.041, -74.5013, -31.6447, 0.44 ) }
    dend_48 { pt3dadd( 221.276, -74.484, -31.6676, 0.44 ) }
    dend_48 { pt3dadd( 221.723, -74.4148, -31.6991, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_48 { pt3dadd( 221.782, -74.3996, -31.7008, 0.44 ) }
    dend_48 { pt3dadd( 222.306, -74.2498, -31.6943, 0.44 ) }
    dend_48 { pt3dadd( 222.373, -74.2296, -31.6902, 0.44 ) }
    dend_48 { pt3dadd( 222.971, -74.0592, -31.6232, 0.88 ) }
    dend_48 { pt3dadd( 223.574, -73.9082, -31.5587, 1.25 ) }
    dend_48 { pt3dadd( 224.328, -73.7578, -31.4837, 1.55 ) }
    dend_48 { pt3dadd( 224.458, -73.7378, -31.4717, 1.55 ) }
    dend_48 { pt3dadd( 225.025, -73.6835, -31.424, 1.55 ) }
    dend_48 { pt3dadd( 225.095, -73.6799, -31.4186, 1.55 ) }
    dend_48 { pt3dadd( 225.881, -73.7111, -31.4151, 1.25 ) }
    dend_48 { pt3dadd( 226.576, -73.778, -31.4425, 0.88 ) }
    dend_48 { pt3dadd( 227.16, -73.8531, -31.4823, 0.66 ) }
    dend_48 { pt3dadd( 228.102, -73.986, -31.5624, 0.52 ) }
    dend_48 { pt3dadd( 228.231, -74.0061, -31.5751, 0.52 ) }
    dend_48 { pt3dadd( 230.079, -74.2839, -31.8606, 0.52 ) }
    dend_48 { pt3dadd( 230.147, -74.2908, -31.8746, 0.52 ) }
    dend_48 { pt3dadd( 230.828, -74.2856, -32.0358, 0.52 ) }
    dend_48 { pt3dadd( 230.894, -74.2768, -32.0549, 0.52 ) }
    dend_48 { pt3dadd( 231.586, -74.0948, -32.3384, 0.52 ) }
    dend_48 { pt3dadd( 232.432, -73.8047, -32.7197, 0.52 ) }
    dend_48 { pt3dadd( 233.269, -73.5361, -33.1077, 0.52 ) }
    dend_48 { pt3dadd( 234.037, -73.3684, -33.4432, 0.52 ) }
    dend_48 { pt3dadd( 234.848, -73.2443, -33.7901, 1.25 ) }
    dend_48 { pt3dadd( 236.073, -73.1542, -34.2752, 0.88 ) }
    dend_48 { pt3dadd( 236.877, -73.1664, -34.5642, 0.44 ) }
    dend_48 { pt3dadd( 238.268, -73.3663, -34.9772, 0.44 ) }
    dend_48 { pt3dadd( 238.903, -73.5534, -35.1487, 0.74 ) }
    dend_48 { pt3dadd( 238.958, -73.5771, -35.1605, 0.74 ) }
    dend_48 { pt3dadd( 239.364, -73.7868, -35.2044, 1.03 ) }
    dend_48 { pt3dadd( 239.59, -73.9199, -35.2062, 1.03 ) }
    dend_48 { pt3dadd( 240.051, -74.1826, -35.2036, 1.03 ) }
    dend_48 { pt3dadd( 240.813, -74.4754, -35.251, 0.44 ) }
    dend_48 { pt3dadd( 241.471, -74.6312, -35.35, 0.29 ) }
    dend_48 { pt3dadd( 241.847, -74.6564, -35.4263, 0.29 ) }
    dend_48 { pt3dadd( 242.032, -74.6376, -35.4732, 0.29 ) }
    dend_48 { pt3dadd( 242.764, -74.4067, -35.752, 0.29 ) }
    dend_48 { pt3dadd( 243.953, -73.8338, -36.3129, 0.29 ) }
    dend_48 { pt3dadd( 244.0, -73.8059, -36.3414, 0.29 ) }
    dend_48 { pt3dadd( 244.438, -73.5411, -36.6282, 0.29 ) }
    dend_48 { pt3dadd( 244.492, -73.5144, -36.6627, 0.29 ) }
    dend_48 { pt3dadd( 245.761, -72.968, -37.3217, 1.18 ) }
    dend_48 { pt3dadd( 245.815, -72.9493, -37.3431, 1.18 ) }
    dend_48 { pt3dadd( 247.045, -72.6001, -37.6806, 1.69 ) }
    dend_48 { pt3dadd( 247.795, -72.4142, -37.8343, 1.99 ) }
    dend_48 { pt3dadd( 248.832, -72.1916, -37.9815, 0.66 ) }
    dend_48 { pt3dadd( 250.06, -71.9749, -38.0528, 0.44 ) }
    dend_48 { pt3dadd( 250.709, -71.898, -38.0128, 0.22 ) }
    dend_48 { pt3dadd( 250.77, -71.893, -38.0068, 0.22 ) }
    dend_48 { pt3dadd( 251.591, -71.8468, -37.8721, 0.22 ) }
    dend_48 { pt3dadd( 251.652, -71.8428, -37.8658, 0.22 ) }
    dend_48 { pt3dadd( 252.121, -71.8069, -37.8466, 0.96 ) }
    dend_48 { pt3dadd( 252.574, -71.7807, -37.8671, 0.96 ) }
    dend_48 { pt3dadd( 253.035, -71.7256, -37.9175, 0.22 ) }
    dend_48 { pt3dadd( 254.102, -71.5321, -38.0707, 0.22 ) }
    dend_48 { pt3dadd( 254.649, -71.3964, -38.1674, 1.11 ) }
    dend_48 { pt3dadd( 254.731, -71.3723, -38.182, 1.11 ) }
    dend_48 { pt3dadd( 255.108, -71.2403, -38.2471, 1.11 ) }
    dend_48 { pt3dadd( 255.892, -70.9322, -38.3538, 0.22 ) }
    dend_48 { pt3dadd( 256.313, -70.7572, -38.3937, 0.22 ) }
    dend_48 { pt3dadd( 256.401, -70.7256, -38.3976, 0.22 ) }
    dend_48 { pt3dadd( 257.139, -70.5047, -38.3867, 0.52 ) }
    dend_48 { pt3dadd( 257.49, -70.4205, -38.3702, 0.52 ) }
    dend_48 { pt3dadd( 258.094, -70.3109, -38.3175, 0.22 ) }
    dend_48 { pt3dadd( 258.154, -70.3019, -38.3088, 0.22 ) }
    dend_48 { pt3dadd( 259.048, -70.188, -38.1831, 0.22 ) }
    dend_48 { pt3dadd( 259.177, -70.1709, -38.1656, 0.22 ) }
    dend_48 { pt3dadd( 259.77, -70.0942, -38.0909, 0.22 ) }
    dend_48 { pt3dadd( 259.83, -70.083, -38.0868, 0.22 ) }
    dend_48 { pt3dadd( 260.423, -69.965, -38.0793, 0.37 ) }
    dend_48 { pt3dadd( 260.484, -69.9539, -38.0794, 0.37 ) }
    dend_48 { pt3dadd( 261.026, -69.8554, -38.0838, 0.37 ) }
    dend_48 { pt3dadd( 261.086, -69.8469, -38.0842, 0.37 ) }
    dend_48 { pt3dadd( 261.981, -69.7582, -38.0938, 0.15 ) }
    dend_48 { pt3dadd( 262.526, -69.7208, -38.118, 0.15 ) }
    dend_48 { pt3dadd( 263.944, -69.7351, -38.2211, 0.15 ) }
    dend_48 { pt3dadd( 264.324, -69.7623, -38.2551, 0.66 ) }
    dend_48 { pt3dadd( 264.96, -69.8546, -38.3204, 1.11 ) }
    dend_48 { pt3dadd( 265.08, -69.8785, -38.3333, 1.11 ) }
    dend_48 { pt3dadd( 265.993, -70.115, -38.43, 0.15 ) }
    dend_48 { pt3dadd( 266.813, -70.3389, -38.5235, 0.15 ) }
    dend_48 { pt3dadd( 267.0, -70.3989, -38.5478, 0.15 ) }
    dend_48 { pt3dadd( 267.618, -70.581, -38.6101, 0.15 ) }
    dend_48 { pt3dadd( 268.054, -70.6843, -38.6326, 0.44 ) }
    dend_48 { pt3dadd( 268.316, -70.7243, -38.6289, 0.44 ) }
    dend_48 { pt3dadd( 268.834, -70.7624, -38.5466, 0.81 ) }
    dend_48 { pt3dadd( 268.894, -70.7631, -38.5339, 0.81 ) }
    dend_48 { pt3dadd( 269.628, -70.7757, -38.3636, 0.81 ) }
    dend_48 { pt3dadd( 270.319, -70.7832, -38.1927, 0.81 ) }
    dend_48 { pt3dadd( 270.93, -70.7751, -38.0405, 0.22 ) }
    dend_48 { pt3dadd( 272.414, -70.7106, -37.6786, 0.22 ) }
    dend_48 { pt3dadd( 272.498, -70.6984, -37.6597, 0.22 ) }
    dend_48 { pt3dadd( 273.233, -70.5418, -37.5, 0.22 ) }
    dend_48 { pt3dadd( 274.031, -70.346, -37.3273, 0.59 ) }
    dend_48 { pt3dadd( 274.884, -70.0916, -37.1519, 0.22 ) }
    dend_48 { pt3dadd( 275.427, -69.8894, -37.0582, 0.22 ) }
    dend_48 { pt3dadd( 276.767, -69.1953, -36.9141, 0.88 ) }
    dend_48 { pt3dadd( 276.82, -69.1641, -36.9082, 0.88 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 97/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 97.6437, -202.479, -15.3002, 0.22 ) }
    dend_46 { pt3dadd( 97.9739, -202.931, -15.1004, 0.22 ) }
    dend_46 { pt3dadd( 98.1924, -203.221, -14.9536, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_46 { pt3dadd( 98.7191, -203.887, -14.6133, 0.37 ) }
    dend_46 { pt3dadd( 99.48, -204.847, -14.1551, 0.22 ) }
    dend_46 { pt3dadd( 100.089, -205.668, -13.7968, 0.22 ) }
    dend_46 { pt3dadd( 100.416, -206.126, -13.6066, 1.11 ) }
    dend_46 { pt3dadd( 101.189, -207.23, -13.178, 0.22 ) }
    dend_46 { pt3dadd( 101.886, -208.226, -12.7924, 0.22 ) }
    dend_46 { pt3dadd( 102.31, -208.841, -12.5651, 0.22 ) }
    dend_46 { pt3dadd( 103.244, -210.187, -12.0265, 0.22 ) }
    dend_46 { pt3dadd( 103.357, -210.363, -11.9666, 0.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 9/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 97.6437, -202.479, -15.3002, 0.22 ) }
    dend_45 { pt3dadd( 97.5994, -203.831, -14.7836, 0.22 ) }
    dend_45 { pt3dadd( 97.5747, -204.587, -14.4948, 0.66 ) }
    dend_45 { pt3dadd( 97.5555, -205.175, -14.2703, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 13/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -21.8361, 83.5285, -25.1403, 0.74 ) }
    dend_22 { pt3dadd( -19.3111, 84.7617, -25.3645, 0.74 ) }
    dend_22 { pt3dadd( -16.9167, 85.8398, -25.4787, 0.52 ) }
    dend_22 { pt3dadd( -16.3953, 86.0564, -25.4693, 0.52 ) }
    dend_22 { pt3dadd( -13.3844, 87.2909, -25.2648, 0.52 ) }
    dend_22 { pt3dadd( -13.1694, 87.3839, -25.2434, 0.52 ) }
    dend_22 { pt3dadd( -11.3679, 88.1862, -25.0281, 0.52 ) }
    dend_22 { pt3dadd( -11.225, 88.249, -25.0023, 0.52 ) }
    dend_22 { pt3dadd( -9.88798, 88.9006, -24.8098, 0.74 ) }
    dend_22 { pt3dadd( -8.83372, 89.5151, -24.7973, 1.03 ) }
    dend_22 { pt3dadd( -8.11892, 90.026, -24.9255, 1.03 ) }
    dend_22 { pt3dadd( -8.03695, 90.0881, -24.9477, 1.03 ) }
    dend_22 { pt3dadd( -6.05938, 91.5863, -25.719, 1.03 ) }
    dend_22 { pt3dadd( -4.94205, 92.3714, -26.2961, 0.29 ) }
    dend_22 { pt3dadd( -3.5298, 93.2701, -27.129, 0.29 ) }
    dend_22 { pt3dadd( -2.46123, 93.8431, -27.7425, 0.29 ) }
    dend_22 { pt3dadd( -2.36344, 93.8883, -27.7953, 0.29 ) }
    dend_22 { pt3dadd( -0.581035, 94.6712, -28.6391, 1.03 ) }
    dend_22 { pt3dadd( 1.16414, 95.4255, -29.3359, 1.18 ) }
    dend_22 { pt3dadd( 2.12426, 95.8705, -29.6984, 0.44 ) }
    dend_22 { pt3dadd( 3.03641, 96.3512, -30.0658, 0.44 ) }
    dend_22 { pt3dadd( 3.13346, 96.4124, -30.1008, 0.44 ) }
    dend_22 { pt3dadd( 4.29904, 97.3044, -30.4391, 0.44 ) }
    dend_22 { pt3dadd( 5.33715, 98.3611, -30.5827, 0.44 ) }
    dend_22 { pt3dadd( 5.40547, 98.4397, -30.5796, 0.44 ) }
    dend_22 { pt3dadd( 5.7522, 98.8852, -30.5651, 0.29 ) }
    dend_22 { pt3dadd( 5.81994, 98.9657, -30.5657, 0.29 ) }
    dend_22 { pt3dadd( 6.43435, 99.5425, -30.5675, 0.29 ) }
    dend_22 { pt3dadd( 6.57393, 99.6385, -30.5631, 0.29 ) }
    dend_22 { pt3dadd( 7.87299, 100.342, -30.6397, 0.66 ) }
    dend_22 { pt3dadd( 7.96771, 100.386, -30.6497, 0.66 ) }
    dend_22 { pt3dadd( 9.25207, 100.979, -30.7966, 0.96 ) }
    dend_22 { pt3dadd( 10.0406, 101.384, -30.9038, 1.18 ) }
    dend_22 { pt3dadd( 11.1152, 101.956, -31.0664, 1.18 ) }
    dend_22 { pt3dadd( 13.2995, 103.184, -31.4079, 0.74 ) }
    dend_22 { pt3dadd( 14.257, 103.749, -31.5685, 0.37 ) }
    dend_22 { pt3dadd( 15.541, 104.56, -31.8062, 0.37 ) }
    dend_22 { pt3dadd( 17.6388, 106.112, -32.2052, 0.37 ) }
    dend_22 { pt3dadd( 17.8054, 106.259, -32.2402, 0.37 ) }
    dend_22 { pt3dadd( 18.1293, 106.61, -32.3101, 0.37 ) }
    dend_22 { pt3dadd( 18.181, 106.683, -32.3183, 0.37 ) }
    dend_22 { pt3dadd( 19.0421, 108.115, -32.4837, 0.37 ) }
    dend_22 { pt3dadd( 19.8606, 109.656, -32.6251, 0.37 ) }
    dend_22 { pt3dadd( 20.4157, 110.616, -32.7386, 0.37 ) }
    dend_22 { pt3dadd( 20.6506, 110.961, -32.7818, 0.22 ) }
    dend_22 { pt3dadd( 21.2819, 111.779, -32.8843, 0.22 ) }
    dend_22 { pt3dadd( 21.436, 111.955, -32.9102, 0.22 ) }
    dend_22 { pt3dadd( 22.2601, 112.81, -33.0026, 0.22 ) }
    dend_22 { pt3dadd( 24.3477, 114.788, -33.1992, 1.4 ) }
    dend_22 { pt3dadd( 25.5492, 115.893, -33.2944, 1.69 ) }
    dend_22 { pt3dadd( 25.7048, 116.034, -33.3023, 1.69 ) }
    dend_22 { pt3dadd( 27.2748, 117.455, -33.3423, 1.69 ) }
    dend_22 { pt3dadd( 28.5528, 118.545, -33.3004, 1.03 ) }
    dend_22 { pt3dadd( 29.4555, 119.325, -33.2776, 0.37 ) }
    dend_22 { pt3dadd( 29.5229, 119.385, -33.2736, 0.37 ) }
    dend_22 { pt3dadd( 30.327, 120.098, -33.7311, 0.37 ) }
    dend_22 { pt3dadd( 30.3943, 120.165, -33.8049, 0.37 ) }
    dend_22 { pt3dadd( 31.4337, 121.252, -35.3936, 0.37 ) }
    dend_22 { pt3dadd( 32.5213, 122.346, -37.1789, 1.18 ) }
    dend_22 { pt3dadd( 32.6224, 122.446, -37.3531, 1.18 ) }
    dend_22 { pt3dadd( 36.0737, 125.296, -42.8432, 0.29 ) }
    dend_22 { pt3dadd( 36.7516, 125.789, -43.7977, 0.29 ) }
    dend_22 { pt3dadd( 36.9648, 125.911, -44.0523, 0.29 ) }
    dend_22 { pt3dadd( 37.9293, 126.399, -45.0427, 0.29 ) }
    dend_22 { pt3dadd( 38.0079, 126.429, -45.1057, 0.29 ) }
    dend_22 { pt3dadd( 40.6011, 127.371, -46.7559, 0.29 ) }
    dend_22 { pt3dadd( 42.6067, 128.033, -47.692, 1.25 ) }
    dend_22 { pt3dadd( 47.7734, 129.715, -50.2824, 0.37 ) }
    dend_22 { pt3dadd( 49.4733, 130.307, -51.198, 0.74 ) }
    dend_22 { pt3dadd( 51.754, 131.172, -52.4979, 0.29 ) }
    dend_22 { pt3dadd( 53.3295, 131.827, -53.4081, 0.29 ) }
    dend_22 { pt3dadd( 53.5095, 131.917, -53.5064, 0.29 ) }
    dend_22 { pt3dadd( 56.0509, 133.232, -54.7783, 0.29 ) }
    dend_22 { pt3dadd( 56.1379, 133.284, -54.8067, 0.29 ) }
    dend_22 { pt3dadd( 56.7045, 133.653, -54.9949, 0.29 ) }
    dend_22 { pt3dadd( 56.871, 133.777, -55.0296, 0.29 ) }
    dend_22 { pt3dadd( 58.7277, 135.299, -55.2941, 0.29 ) }
    dend_22 { pt3dadd( 59.7294, 136.305, -55.3205, 1.18 ) }
    dend_22 { pt3dadd( 59.8879, 136.494, -55.3045, 1.18 ) }
    dend_22 { pt3dadd( 60.5719, 137.391, -55.2788, 1.18 ) }
    dend_22 { pt3dadd( 60.7441, 137.648, -55.2816, 1.18 ) }
    dend_22 { pt3dadd( 61.7506, 139.332, -55.3431, 0.59 ) }
    dend_22 { pt3dadd( 62.846, 141.449, -55.4656, 0.29 ) }
    dend_22 { pt3dadd( 62.8916, 141.544, -55.4691, 0.29 ) }
    dend_22 { pt3dadd( 63.5858, 143.018, -55.5276, 0.66 ) }
    dend_22 { pt3dadd( 64.2004, 144.179, -55.6412, 0.66 ) }
    dend_22 { pt3dadd( 64.2618, 144.281, -55.6552, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_22 { pt3dadd( 64.9445, 145.299, -55.8792, 0.22 ) }
    dend_22 { pt3dadd( 66.0048, 146.722, -56.2734, 0.22 ) }
    dend_22 { pt3dadd( 66.1062, 146.85, -56.3145, 0.22 ) }
    dend_22 { pt3dadd( 67.8122, 148.94, -56.9808, 1.11 ) }
    dend_22 { pt3dadd( 68.5228, 149.795, -57.2819, 1.11 ) }
    dend_22 { pt3dadd( 69.645, 151.103, -57.7293, 0.74 ) }
    dend_22 { pt3dadd( 69.7224, 151.19, -57.7588, 0.74 ) }
    dend_22 { pt3dadd( 70.6303, 152.115, -58.0364, 0.37 ) }
    dend_22 { pt3dadd( 72.1054, 153.608, -58.3198, 0.37 ) }
    dend_22 { pt3dadd( 72.2011, 153.706, -58.3255, 0.37 ) }
    dend_22 { pt3dadd( 73.3301, 154.806, -58.3012, 0.37 ) }
    dend_22 { pt3dadd( 73.6875, 155.147, -58.2673, 0.37 ) }
    dend_22 { pt3dadd( 74.5863, 156.006, -58.1922, 0.37 ) }
    dend_22 { pt3dadd( 76.2453, 157.567, -58.036, 0.37 ) }
    dend_22 { pt3dadd( 76.3226, 157.638, -58.0307, 0.37 ) }
    dend_22 { pt3dadd( 77.5248, 158.754, -57.9467, 1.62 ) }
    dend_22 { pt3dadd( 78.1635, 159.364, -57.9058, 1.62 ) }
    dend_22 { pt3dadd( 79.739, 160.855, -57.7865, 0.74 ) }
    dend_22 { pt3dadd( 81.4422, 162.447, -57.6105, 0.59 ) }
    dend_22 { pt3dadd( 81.5212, 162.516, -57.5994, 0.52 ) }
    dend_22 { pt3dadd( 82.7463, 163.472, -57.4242, 0.52 ) }
    dend_22 { pt3dadd( 82.8443, 163.54, -57.4095, 0.52 ) }
    dend_22 { pt3dadd( 83.3907, 163.888, -57.3126, 0.29 ) }
    dend_22 { pt3dadd( 84.9755, 164.834, -57.1493, 0.29 ) }
    dend_22 { pt3dadd( 85.0791, 164.895, -57.149, 0.29 ) }
    dend_22 { pt3dadd( 86.3776, 165.647, -57.2904, 0.29 ) }
    dend_22 { pt3dadd( 86.5208, 165.735, -57.3153, 0.29 ) }
    dend_22 { pt3dadd( 87.8189, 166.575, -57.5303, 0.29 ) }
    dend_22 { pt3dadd( 89.6947, 167.832, -57.853, 1.11 ) }
    dend_22 { pt3dadd( 90.6998, 168.533, -58.0096, 1.11 ) }
    dend_22 { pt3dadd( 92.1034, 169.578, -58.1898, 0.59 ) }
    dend_22 { pt3dadd( 93.448, 170.639, -58.321, 0.37 ) }
    dend_22 { pt3dadd( 95.0918, 171.929, -58.423, 0.22 ) }
    dend_22 { pt3dadd( 95.1747, 171.993, -58.4229, 0.22 ) }
    dend_22 { pt3dadd( 96.2658, 172.882, -58.3188, 0.22 ) }
    dend_22 { pt3dadd( 96.4395, 173.02, -58.2916, 0.22 ) }
    dend_22 { pt3dadd( 96.713, 173.232, -58.2228, 0.59 ) }
    dend_22 { pt3dadd( 96.8403, 173.32, -58.1906, 0.59 ) }
    dend_22 { pt3dadd( 97.2893, 173.625, -58.1209, 0.59 ) }
    dend_22 { pt3dadd( 98.9842, 174.778, -57.9366, 0.37 ) }
    dend_22 { pt3dadd( 100.353, 175.645, -57.814, 1.18 ) }
    dend_22 { pt3dadd( 101.521, 176.37, -57.7169, 1.18 ) }
    dend_22 { pt3dadd( 102.76, 177.143, -57.6115, 1.18 ) }
    dend_22 { pt3dadd( 104.493, 178.28, -57.448, 0.37 ) }
    dend_22 { pt3dadd( 104.616, 178.364, -57.4357, 0.37 ) }
    dend_22 { pt3dadd( 106.566, 179.848, -57.1646, 0.37 ) }
    dend_22 { pt3dadd( 106.738, 179.992, -57.1509, 0.37 ) }
    dend_22 { pt3dadd( 107.7, 180.876, -57.073, 0.37 ) }
    dend_22 { pt3dadd( 108.944, 182.131, -56.9472, 0.37 ) }
    dend_22 { pt3dadd( 109.016, 182.206, -56.9432, 0.37 ) }
    dend_22 { pt3dadd( 110.655, 184.01, -57.0148, 0.37 ) }
    dend_22 { pt3dadd( 111.703, 185.265, -57.1767, 0.81 ) }
    dend_22 { pt3dadd( 112.343, 185.998, -57.3675, 0.81 ) }
    dend_22 { pt3dadd( 112.427, 186.098, -57.4067, 0.81 ) }
    dend_22 { pt3dadd( 113.784, 187.695, -58.2197, 0.29 ) }
    dend_22 { pt3dadd( 114.598, 188.729, -58.7715, 0.29 ) }
    dend_22 { pt3dadd( 114.707, 188.884, -58.8632, 0.29 ) }
    dend_22 { pt3dadd( 115.648, 190.412, -59.6273, 0.29 ) }
    dend_22 { pt3dadd( 116.23, 191.396, -60.1257, 0.22 ) }
    dend_22 { pt3dadd( 116.28, 191.481, -60.1636, 0.22 ) }
    dend_22 { pt3dadd( 116.998, 192.796, -60.6441, 0.22 ) }
    dend_22 { pt3dadd( 117.048, 192.881, -60.6802, 0.22 ) }
    dend_22 { pt3dadd( 117.786, 194.07, -61.1903, 0.37 ) }
    dend_22 { pt3dadd( 118.765, 195.521, -61.7617, 1.18 ) }
    dend_22 { pt3dadd( 119.334, 196.2, -62.0515, 1.18 ) }
    dend_22 { pt3dadd( 119.476, 196.341, -62.1184, 1.18 ) }
    dend_22 { pt3dadd( 120.958, 197.597, -62.7872, 0.37 ) }
    dend_22 { pt3dadd( 121.076, 197.694, -62.8325, 0.37 ) }
    dend_22 { pt3dadd( 121.856, 198.302, -63.1272, 0.29 ) }
    dend_22 { pt3dadd( 122.864, 199.08, -63.4937, 0.29 ) }
    dend_22 { pt3dadd( 124.724, 200.493, -64.2002, 0.29 ) }
    dend_22 { pt3dadd( 124.899, 200.622, -64.2587, 0.29 ) }
    dend_22 { pt3dadd( 126.084, 201.469, -64.6368, 0.29 ) }
    dend_22 { pt3dadd( 128.576, 203.246, -65.4771, 0.29 ) }
    dend_22 { pt3dadd( 128.647, 203.296, -65.5019, 0.29 ) }
    dend_22 { pt3dadd( 129.748, 204.089, -65.8841, 0.74 ) }
    dend_22 { pt3dadd( 131.202, 205.053, -66.4394, 1.18 ) }
    dend_22 { pt3dadd( 132.981, 206.14, -67.1904, 1.18 ) }
    dend_22 { pt3dadd( 133.068, 206.187, -67.2264, 1.18 ) }
    dend_22 { pt3dadd( 133.813, 206.575, -67.5116, 1.18 ) }
    dend_22 { pt3dadd( 133.941, 206.638, -67.5564, 1.18 ) }
    dend_22 { pt3dadd( 136.822, 208.026, -68.5128, 0.29 ) }
    dend_22 { pt3dadd( 136.914, 208.069, -68.5418, 0.29 ) }
    dend_22 { pt3dadd( 138.616, 208.903, -68.9183, 0.29 ) }
    dend_22 { pt3dadd( 138.695, 208.945, -68.9317, 0.29 ) }
    dend_22 { pt3dadd( 139.979, 209.657, -69.021, 1.03 ) }
    dend_22 { pt3dadd( 140.555, 210.007, -68.9615, 0.37 ) }
    dend_22 { pt3dadd( 140.639, 210.062, -68.9308, 0.37 ) }
    dend_22 { pt3dadd( 141.24, 210.452, -68.7902, 0.37 ) }
    dend_22 { pt3dadd( 141.443, 210.593, -68.7836, 0.37 ) }
    dend_22 { pt3dadd( 142.365, 211.245, -68.8465, 0.37 ) }
    dend_22 { pt3dadd( 143.131, 211.771, -68.9208, 0.66 ) }
    dend_22 { pt3dadd( 143.679, 212.126, -68.9728, 0.88 ) }
    dend_22 { pt3dadd( 145.134, 213.146, -69.0565, 0.22 ) }
    dend_22 { pt3dadd( 146.659, 214.343, -69.1087, 0.22 ) }
    dend_22 { pt3dadd( 146.74, 214.411, -69.1101, 0.22 ) }
    dend_22 { pt3dadd( 148.711, 216.175, -69.2203, 0.22 ) }
    dend_22 { pt3dadd( 148.787, 216.248, -69.2252, 0.22 ) }
    dend_22 { pt3dadd( 150.8, 218.252, -69.337, 0.22 ) }
    dend_22 { pt3dadd( 152.461, 219.969, -69.3657, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_22 { pt3dadd( 152.534, 220.044, -69.367, 0.22 ) }
    dend_22 { pt3dadd( 153.99, 221.48, -69.4956, 1.18 ) }
    dend_22 { pt3dadd( 154.853, 222.306, -69.655, 1.18 ) }
    dend_22 { pt3dadd( 154.944, 222.378, -69.6857, 1.18 ) }
    dend_22 { pt3dadd( 155.518, 222.705, -69.9778, 1.18 ) }
    dend_22 { pt3dadd( 156.063, 222.913, -70.2552, 1.18 ) }
    dend_22 { pt3dadd( 157.704, 223.438, -71.0474, 1.18 ) }
    dend_22 { pt3dadd( 157.795, 223.462, -71.0938, 1.18 ) }
    dend_22 { pt3dadd( 160.147, 224.096, -72.4557, 0.37 ) }
    dend_22 { pt3dadd( 160.245, 224.127, -72.5175, 0.37 ) }
    dend_22 { pt3dadd( 161.777, 224.726, -73.5992, 0.37 ) }
    dend_22 { pt3dadd( 161.941, 224.813, -73.7263, 0.37 ) }
    dend_22 { pt3dadd( 163.023, 225.625, -74.5534, 0.29 ) }
    dend_22 { pt3dadd( 163.818, 226.393, -75.1327, 0.29 ) }
    dend_22 { pt3dadd( 163.964, 226.551, -75.2043, 0.29 ) }
    dend_22 { pt3dadd( 164.535, 227.109, -75.4464, 0.29 ) }
    dend_22 { pt3dadd( 164.787, 227.297, -75.547, 0.29 ) }
    dend_22 { pt3dadd( 166.671, 228.096, -75.9773, 0.29 ) }
    dend_22 { pt3dadd( 166.895, 228.161, -76.0095, 0.29 ) }
    dend_22 { pt3dadd( 168.364, 228.526, -76.3176, 0.29 ) }
    dend_22 { pt3dadd( 168.676, 228.612, -76.3859, 0.29 ) }
    dend_22 { pt3dadd( 170.489, 229.129, -76.7848, 1.03 ) }
    dend_22 { pt3dadd( 172.085, 229.795, -77.105, 1.03 ) }
    dend_22 { pt3dadd( 172.265, 229.894, -77.1512, 1.03 ) }
    dend_22 { pt3dadd( 174.475, 231.203, -77.7517, 0.29 ) }
    dend_22 { pt3dadd( 175.833, 232.107, -78.1591, 0.29 ) }
    dend_22 { pt3dadd( 175.996, 232.225, -78.2085, 0.29 ) }
    dend_22 { pt3dadd( 178.353, 234.169, -78.9092, 0.29 ) }
    dend_22 { pt3dadd( 180.255, 235.885, -79.5445, 1.47 ) }
    dend_22 { pt3dadd( 181.615, 237.089, -79.9557, 2.21 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 30/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -21.8361, 83.5285, -25.1403, 1.55 ) }
    dend_19 { pt3dadd( -21.9746, 84.2169, -25.2018, 1.55 ) }
    dend_19 { pt3dadd( -22.1377, 85.2892, -25.3505, 0.81 ) }
    dend_19 { pt3dadd( -22.2693, 86.548, -25.5325, 0.81 ) }
    dend_19 { pt3dadd( -22.3584, 87.6252, -25.6793, 0.81 ) }
    dend_19 { pt3dadd( -22.4257, 88.6429, -25.8063, 0.81 ) }
    dend_19 { pt3dadd( -22.4761, 89.6067, -25.914, 0.81 ) }
    dend_19 { pt3dadd( -22.4901, 90.959, -26.0987, 1.18 ) }
    dend_19 { pt3dadd( -22.4548, 91.8595, -26.2215, 1.18 ) }
    dend_19 { pt3dadd( -22.3528, 93.1156, -26.3778, 1.62 ) }
    dend_19 { pt3dadd( -22.2799, 93.9193, -26.4654, 1.84 ) }
    dend_19 { pt3dadd( -22.1927, 94.805, -26.5648, 1.84 ) }
    dend_19 { pt3dadd( -22.081, 95.8121, -26.6657, 0.59 ) }
    dend_19 { pt3dadd( -22.0006, 96.499, -26.7136, 0.59 ) }
    dend_19 { pt3dadd( -21.9096, 97.235, -26.791, 0.59 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 45/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -126.14, 78.4171, -106.481, 0.44 ) }
    dend_14 { pt3dadd( -126.842, 78.4739, -106.641, 0.44 ) }
    dend_14 { pt3dadd( -126.92, 78.4809, -106.66, 0.44 ) }
    dend_14 { pt3dadd( -128.627, 78.6494, -107.077, 0.44 ) }
    dend_14 { pt3dadd( -130.574, 78.8818, -107.567, 0.44 ) }
    dend_14 { pt3dadd( -131.414, 78.9898, -107.796, 0.81 ) }
    dend_14 { pt3dadd( -131.478, 78.9994, -107.819, 0.81 ) }
    dend_14 { pt3dadd( -131.892, 79.0655, -107.973, 0.81 ) }
    dend_14 { pt3dadd( -131.967, 79.0771, -108.002, 0.81 ) }
    dend_14 { pt3dadd( -132.847, 79.2011, -108.363, 0.22 ) }
    dend_14 { pt3dadd( -136.6, 79.6663, -109.965, 0.22 ) }
    dend_14 { pt3dadd( -137.879, 79.8556, -110.513, 0.96 ) }
    dend_14 { pt3dadd( -138.802, 80.0053, -110.892, 0.96 ) }
    dend_14 { pt3dadd( -139.65, 80.1523, -111.232, 0.29 ) }
    dend_14 { pt3dadd( -140.664, 80.3412, -111.642, 0.29 ) }
    dend_14 { pt3dadd( -140.748, 80.3593, -111.676, 0.29 ) }
    dend_14 { pt3dadd( -141.881, 80.7153, -112.174, 0.29 ) }
    dend_14 { pt3dadd( -142.031, 80.7683, -112.238, 0.29 ) }
    dend_14 { pt3dadd( -143.245, 81.288, -112.857, 0.96 ) }
    dend_14 { pt3dadd( -143.309, 81.3208, -112.893, 0.96 ) }
    dend_14 { pt3dadd( -143.994, 81.6985, -113.3, 0.96 ) }
    dend_14 { pt3dadd( -144.865, 82.1757, -113.933, 0.37 ) }
    dend_14 { pt3dadd( -145.26, 82.378, -114.273, 0.37 ) }
    dend_14 { pt3dadd( -145.381, 82.4506, -114.391, 0.37 ) }
    dend_14 { pt3dadd( -145.905, 82.8456, -114.989, 0.37 ) }
    dend_14 { pt3dadd( -145.957, 82.8883, -115.051, 0.37 ) }
    dend_14 { pt3dadd( -146.861, 83.6631, -116.108, 0.15 ) }
    dend_14 { pt3dadd( -146.91, 83.7032, -116.157, 0.15 ) }
    dend_14 { pt3dadd( -147.034, 83.7911, -116.261, 0.15 ) }
    dend_14 { pt3dadd( -147.129, 83.8399, -116.322, 0.15 ) }
    dend_14 { pt3dadd( -148.123, 84.1667, -116.912, 0.15 ) }
    dend_14 { pt3dadd( -148.91, 84.3675, -117.337, 0.88 ) }
    dend_14 { pt3dadd( -149.21, 84.4306, -117.48, 0.88 ) }
    dend_14 { pt3dadd( -149.932, 84.5943, -117.836, 0.15 ) }
    dend_14 { pt3dadd( -151.0, 84.8366, -118.381, 0.15 ) }
    dend_14 { pt3dadd( -152.144, 85.0744, -119.009, 0.15 ) }
    dend_14 { pt3dadd( -153.101, 85.2217, -119.499, 0.15 ) }
    dend_14 { pt3dadd( -153.272, 85.2428, -119.579, 0.15 ) }
    dend_14 { pt3dadd( -154.159, 85.3288, -119.943, 0.15 ) }
    dend_14 { pt3dadd( -154.311, 85.3353, -120.004, 0.15 ) }
    dend_14 { pt3dadd( -155.362, 85.3516, -120.388, 0.15 ) }
    dend_14 { pt3dadd( -156.729, 85.2672, -120.826, 0.74 ) }
    dend_14 { pt3dadd( -156.88, 85.2425, -120.876, 0.74 ) }
    dend_14 { pt3dadd( -157.672, 85.0827, -121.157, 0.74 ) }
    dend_14 { pt3dadd( -158.768, 84.837, -121.565, 0.15 ) }
    dend_14 { pt3dadd( -158.852, 84.8218, -121.598, 0.15 ) }
    dend_14 { pt3dadd( -159.511, 84.813, -121.876, 0.15 ) }
    dend_14 { pt3dadd( -159.747, 84.8574, -121.999, 0.15 ) }
    dend_14 { pt3dadd( -160.114, 85.0501, -122.255, 0.15 ) }
    dend_14 { pt3dadd( -160.412, 85.3806, -122.545, 0.81 ) }
    dend_14 { pt3dadd( -160.447, 85.4407, -122.586, 0.81 ) }
    dend_14 { pt3dadd( -160.888, 86.3788, -123.213, 0.81 ) }
    dend_14 { pt3dadd( -160.919, 86.4401, -123.255, 0.81 ) }
    dend_14 { pt3dadd( -161.666, 87.5654, -124.448, 0.22 ) }
    dend_14 { pt3dadd( -161.715, 87.6086, -124.513, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( -162.191, 87.8956, -125.2, 0.22 ) }
    dend_14 { pt3dadd( -162.244, 87.9184, -125.271, 0.22 ) }
    dend_14 { pt3dadd( -163.03, 88.1642, -126.316, 0.44 ) }
    dend_14 { pt3dadd( -164.431, 88.5067, -128.044, 1.11 ) }
    dend_14 { pt3dadd( -165.572, 88.7238, -129.359, 1.11 ) }
    dend_14 { pt3dadd( -167.689, 89.057, -131.727, 0.52 ) }
    dend_14 { pt3dadd( -168.639, 89.175, -132.777, 0.52 ) }
    dend_14 { pt3dadd( -169.608, 89.2818, -133.815, 0.29 ) }
    dend_14 { pt3dadd( -170.44, 89.3571, -134.65, 0.29 ) }
    dend_14 { pt3dadd( -170.511, 89.3615, -134.708, 0.29 ) }
    dend_14 { pt3dadd( -171.603, 89.3925, -135.492, 0.29 ) }
    dend_14 { pt3dadd( -171.676, 89.3925, -135.527, 0.29 ) }
    dend_14 { pt3dadd( -172.133, 89.422, -135.732, 0.52 ) }
    dend_14 { pt3dadd( -173.059, 89.5356, -136.085, 0.52 ) }
    dend_14 { pt3dadd( -173.69, 89.6226, -136.312, 0.52 ) }
    dend_14 { pt3dadd( -173.852, 89.6393, -136.367, 0.52 ) }
    dend_14 { pt3dadd( -174.743, 89.7111, -136.657, 0.29 ) }
    dend_14 { pt3dadd( -175.881, 89.7369, -137.048, 0.29 ) }
    dend_14 { pt3dadd( -175.957, 89.7362, -137.075, 0.29 ) }
    dend_14 { pt3dadd( -177.153, 89.6564, -137.679, 0.66 ) }
    dend_14 { pt3dadd( -177.906, 89.6183, -138.14, 0.66 ) }
    dend_14 { pt3dadd( -177.967, 89.6168, -138.193, 0.66 ) }
    dend_14 { pt3dadd( -178.546, 89.6227, -138.793, 0.22 ) }
    dend_14 { pt3dadd( -179.122, 89.6563, -139.491, 0.22 ) }
    dend_14 { pt3dadd( -180.336, 89.791, -140.946, 0.22 ) }
    dend_14 { pt3dadd( -181.177, 89.9301, -141.913, 0.52 ) }
    dend_14 { pt3dadd( -182.352, 90.1452, -143.138, 0.88 ) }
    dend_14 { pt3dadd( -182.81, 90.2234, -143.568, 1.18 ) }
    dend_14 { pt3dadd( -183.077, 90.2639, -143.782, 1.18 ) }
    dend_14 { pt3dadd( -184.481, 90.4067, -144.73, 1.18 ) }
    dend_14 { pt3dadd( -185.532, 90.4919, -145.264, 1.18 ) }
    dend_14 { pt3dadd( -186.387, 90.5285, -145.659, 0.29 ) }
    dend_14 { pt3dadd( -186.622, 90.536, -145.748, 0.29 ) }
    dend_14 { pt3dadd( -187.8, 90.5661, -146.2, 0.29 ) }
    dend_14 { pt3dadd( -188.582, 90.5988, -146.502, 0.44 ) }
    dend_14 { pt3dadd( -189.997, 90.723, -147.048, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 36/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -126.14, 78.4171, -106.481, 0.29 ) }
    dend_11 { pt3dadd( -126.184, 78.3049, -106.521, 0.29 ) }
    dend_11 { pt3dadd( -126.57, 77.2393, -106.911, 0.29 ) }
    dend_11 { pt3dadd( -126.607, 77.1147, -106.971, 0.29 ) }
    dend_11 { pt3dadd( -126.807, 76.3115, -107.378, 0.29 ) }
    dend_11 { pt3dadd( -126.937, 75.6738, -107.755, 0.59 ) }
    dend_11 { pt3dadd( -127.044, 75.0941, -108.122, 0.81 ) }
    dend_11 { pt3dadd( -127.056, 75.0205, -108.172, 0.81 ) }
    dend_11 { pt3dadd( -127.181, 74.0203, -108.923, 0.81 ) }
    dend_11 { pt3dadd( -127.257, 73.5551, -109.296, 0.81 ) }
    dend_11 { pt3dadd( -127.512, 72.6257, -110.127, 0.29 ) }
    dend_11 { pt3dadd( -127.534, 72.5831, -110.168, 0.29 ) }
    dend_11 { pt3dadd( -127.785, 72.3212, -110.552, 0.29 ) }
    dend_11 { pt3dadd( -127.93, 72.2113, -110.745, 0.29 ) }
    dend_11 { pt3dadd( -128.316, 71.9737, -111.202, 0.81 ) }
    dend_11 { pt3dadd( -128.804, 71.6755, -111.77, 0.81 ) }
    dend_11 { pt3dadd( -129.256, 71.3887, -112.265, 0.81 ) }
    dend_11 { pt3dadd( -130.742, 70.3383, -113.946, 0.66 ) }
    dend_11 { pt3dadd( -131.072, 70.0782, -114.331, 0.59 ) }
    dend_11 { pt3dadd( -131.361, 69.8083, -114.682, 0.44 ) }
    dend_11 { pt3dadd( -131.686, 69.4112, -115.094, 0.44 ) }
    dend_11 { pt3dadd( -131.955, 68.9461, -115.402, 0.29 ) }
    dend_11 { pt3dadd( -131.984, 68.8824, -115.423, 0.29 ) }
    dend_11 { pt3dadd( -132.17, 68.5114, -115.439, 0.29 ) }
    dend_11 { pt3dadd( -132.278, 68.3312, -115.462, 0.29 ) }
    dend_11 { pt3dadd( -132.645, 67.7953, -115.568, 0.29 ) }
    dend_11 { pt3dadd( -133.295, 66.9152, -115.786, 0.29 ) }
    dend_11 { pt3dadd( -133.376, 66.8094, -115.817, 0.29 ) }
    dend_11 { pt3dadd( -134.474, 65.5111, -116.177, 0.29 ) }
    dend_11 { pt3dadd( -135.221, 64.6719, -116.403, 0.81 ) }
    dend_11 { pt3dadd( -135.692, 64.1674, -116.542, 1.03 ) }
    dend_11 { pt3dadd( -135.737, 64.1235, -116.555, 1.03 ) }
    dend_11 { pt3dadd( -136.305, 63.5868, -116.734, 1.03 ) }
    dend_11 { pt3dadd( -137.024, 62.9363, -116.856, 0.22 ) }
    dend_11 { pt3dadd( -137.793, 62.2889, -116.861, 0.22 ) }
    dend_11 { pt3dadd( -137.843, 62.2497, -116.857, 0.22 ) }
    dend_11 { pt3dadd( -138.837, 61.5021, -116.667, 0.22 ) }
    dend_11 { pt3dadd( -138.888, 61.4651, -116.654, 0.22 ) }
    dend_11 { pt3dadd( -139.982, 60.7374, -116.399, 1.03 ) }
    dend_11 { pt3dadd( -140.581, 60.3725, -116.293, 1.03 ) }
    dend_11 { pt3dadd( -141.241, 60.0092, -116.182, 0.66 ) }
    dend_11 { pt3dadd( -142.569, 59.2889, -115.949, 0.22 ) }
    dend_11 { pt3dadd( -142.632, 59.255, -115.937, 0.22 ) }
    dend_11 { pt3dadd( -144.072, 58.493, -115.727, 0.22 ) }
    dend_11 { pt3dadd( -144.701, 58.173, -115.704, 1.4 ) }
    dend_11 { pt3dadd( -144.767, 58.1426, -115.702, 1.4 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -37.2491, 52.3826, -22.599, 0.74 ) }
    dend_9 { pt3dadd( -37.1932, 52.6181, -23.1988, 0.74 ) }
    dend_9 { pt3dadd( -37.1556, 52.8396, -23.7354, 0.37 ) }
    dend_9 { pt3dadd( -37.1456, 52.9171, -23.9163, 0.88 ) }
    dend_9 { pt3dadd( -37.1254, 53.0872, -24.3294, 1.18 ) }
    dend_9 { pt3dadd( -37.0996, 53.3249, -24.9204, 0.52 ) }
    dend_9 { pt3dadd( -37.0994, 53.3304, -24.9346, 0.52 ) }
    dend_9 { pt3dadd( -37.1214, 53.4011, -25.1568, 0.52 ) }
    dend_9 { pt3dadd( -37.1298, 53.4095, -25.1896, 0.52 ) }
    dend_9 { pt3dadd( -37.3033, 53.4674, -25.5847, 0.52 ) }
    dend_9 { pt3dadd( -37.3124, 53.4679, -25.5969, 0.52 ) }
    dend_9 { pt3dadd( -37.5116, 53.4511, -25.8314, 0.52 ) }
    dend_9 { pt3dadd( -37.625, 53.4352, -25.9905, 0.74 ) }
    dend_9 { pt3dadd( -37.7687, 53.4067, -26.21, 0.74 ) }
    dend_9 { pt3dadd( -38.0026, 53.3559, -26.5634, 1.25 ) }
    dend_9 { pt3dadd( -38.0763, 53.3393, -26.6845, 1.25 ) }
    dend_9 { pt3dadd( -38.2638, 53.2721, -27.0943, 1.25 ) }
    dend_9 { pt3dadd( -38.4134, 53.1845, -27.5253, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_9 { pt3dadd( -38.4171, 53.1805, -27.5418, 0.66 ) }
    dend_9 { pt3dadd( -38.4451, 53.1194, -27.7587, 0.59 ) }
    dend_9 { pt3dadd( -38.5048, 52.951, -28.3015, 0.59 ) }
    dend_9 { pt3dadd( -38.5586, 52.7804, -28.8614, 0.96 ) }
    dend_9 { pt3dadd( -38.5765, 52.7311, -29.0311, 0.96 ) }
    dend_9 { pt3dadd( -38.6407, 52.5886, -29.547, 0.44 ) }
    dend_9 { pt3dadd( -38.7186, 52.4479, -30.0967, 0.29 ) }
    dend_9 { pt3dadd( -38.7621, 52.3817, -30.3739, 0.29 ) }
    dend_9 { pt3dadd( -38.904, 52.2594, -30.9506, 1.03 ) }
    dend_9 { pt3dadd( -38.9806, 52.2298, -31.1625, 0.44 ) }
    dend_9 { pt3dadd( -39.0802, 52.2091, -31.3564, 0.44 ) }
    dend_9 { pt3dadd( -39.1067, 52.2059, -31.3963, 0.44 ) }
    dend_9 { pt3dadd( -39.1682, 52.2006, -31.49, 0.44 ) }
    dend_9 { pt3dadd( -39.3146, 52.199, -31.868, 0.44 ) }
    dend_9 { pt3dadd( -39.3243, 52.1994, -31.899, 0.44 ) }
    dend_9 { pt3dadd( -39.4304, 52.2129, -32.2631, 0.74 ) }
    dend_9 { pt3dadd( -39.5571, 52.2562, -32.8084, 0.74 ) }
    dend_9 { pt3dadd( -39.6494, 52.3144, -33.2929, 1.11 ) }
    dend_9 { pt3dadd( -39.8455, 52.51, -34.5014, 0.81 ) }
    dend_9 { pt3dadd( -39.8487, 52.516, -34.5334, 0.81 ) }
    dend_9 { pt3dadd( -39.8618, 52.5689, -34.7747, 0.81 ) }
    dend_9 { pt3dadd( -39.8658, 52.7864, -35.6309, 0.88 ) }
    dend_9 { pt3dadd( -39.8542, 52.9722, -36.2622, 0.29 ) }
    dend_9 { pt3dadd( -39.8432, 53.0294, -36.4315, 0.29 ) }
    dend_9 { pt3dadd( -39.7863, 53.2701, -37.0257, 0.29 ) }
    dend_9 { pt3dadd( -39.7673, 53.3538, -37.2167, 0.29 ) }
    dend_9 { pt3dadd( -39.7659, 53.3594, -37.2285, 0.29 ) }
    dend_9 { pt3dadd( -39.76, 53.3953, -37.2874, 0.44 ) }
    dend_9 { pt3dadd( -39.7593, 53.4039, -37.3002, 0.44 ) }
    dend_9 { pt3dadd( -39.7717, 53.6476, -37.6599, 0.44 ) }
    dend_9 { pt3dadd( -39.8153, 53.8018, -37.8601, 1.11 ) }
    dend_9 { pt3dadd( -39.8892, 54.0774, -38.2734, 0.29 ) }
    dend_9 { pt3dadd( -39.9032, 54.1372, -38.3676, 0.29 ) }
    dend_9 { pt3dadd( -39.9083, 54.1615, -38.4066, 0.29 ) }
    dend_9 { pt3dadd( -39.9197, 54.2203, -38.5018, 0.29 ) }
    dend_9 { pt3dadd( -39.9338, 54.3203, -38.6638, 0.29 ) }
    dend_9 { pt3dadd( -39.945, 54.6336, -39.2228, 0.29 ) }
    dend_9 { pt3dadd( -39.9463, 54.641, -39.236, 0.29 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 38/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -37.2491, 52.3826, -22.599, 0.52 ) }
    dend_8 { pt3dadd( -37.3756, 52.4221, -22.7013, 0.52 ) }
    dend_8 { pt3dadd( -38.1419, 52.7066, -23.2968, 0.52 ) }
    dend_8 { pt3dadd( -38.1857, 52.7254, -23.3269, 0.52 ) }
    dend_8 { pt3dadd( -38.9818, 53.0954, -23.8337, 0.44 ) }
    dend_8 { pt3dadd( -39.0338, 53.1208, -23.8617, 0.44 ) }
    dend_8 { pt3dadd( -39.6824, 53.4529, -24.1662, 0.44 ) }
    dend_8 { pt3dadd( -39.7812, 53.5081, -24.208, 0.44 ) }
    dend_8 { pt3dadd( -40.2259, 53.7477, -24.3578, 0.44 ) }
    dend_8 { pt3dadd( -40.3416, 53.8014, -24.3861, 0.88 ) }
    dend_8 { pt3dadd( -41.1634, 54.0914, -24.4831, 0.88 ) }
    dend_8 { pt3dadd( -41.8512, 54.2477, -24.5407, 0.88 ) }
    dend_8 { pt3dadd( -41.9064, 54.2548, -24.5434, 0.88 ) }
    dend_8 { pt3dadd( -42.7857, 54.3486, -24.572, 1.55 ) }
    dend_8 { pt3dadd( -43.4343, 54.411, -24.5911, 1.77 ) }
    dend_8 { pt3dadd( -44.3614, 54.5145, -24.5457, 0.37 ) }
    dend_8 { pt3dadd( -45.0406, 54.6018, -24.4726, 0.29 ) }
    dend_8 { pt3dadd( -45.6924, 54.7216, -24.3799, 0.81 ) }
    dend_8 { pt3dadd( -46.2501, 54.8576, -24.2953, 0.88 ) }
    dend_8 { pt3dadd( -46.6202, 54.9686, -24.2405, 0.88 ) }
    dend_8 { pt3dadd( -47.8677, 55.3359, -24.0641, 0.59 ) }
    dend_8 { pt3dadd( -48.2523, 55.441, -24.0259, 0.59 ) }
    dend_8 { pt3dadd( -48.7562, 55.5295, -23.9382, 0.22 ) }
    dend_8 { pt3dadd( -49.4494, 55.602, -23.8117, 0.22 ) }
    dend_8 { pt3dadd( -50.0087, 55.6407, -23.7215, 0.22 ) }
    dend_8 { pt3dadd( -50.9625, 55.6989, -23.513, 1.4 ) }
    dend_8 { pt3dadd( -51.5536, 55.7267, -23.3776, 1.84 ) }
    dend_8 { pt3dadd( -52.9118, 55.7903, -22.9969, 0.29 ) }
    dend_8 { pt3dadd( -53.9109, 55.8282, -22.7023, 0.29 ) }
    dend_8 { pt3dadd( -54.8622, 55.8699, -22.3985, 0.29 ) }
    dend_8 { pt3dadd( -56.2196, 55.9252, -21.9545, 0.88 ) }
    dend_8 { pt3dadd( -56.8775, 55.9515, -21.7606, 1.03 ) }
    dend_8 { pt3dadd( -56.9232, 55.9532, -21.7465, 1.03 ) }
    dend_8 { pt3dadd( -57.7435, 55.9734, -21.5079, 0.59 ) }
    dend_8 { pt3dadd( -58.4677, 55.958, -21.2724, 0.44 ) }
    dend_8 { pt3dadd( -58.8805, 55.9389, -21.1399, 0.29 ) }
    dend_8 { pt3dadd( -59.7047, 55.8559, -20.9264, 0.29 ) }
    dend_8 { pt3dadd( -60.7613, 55.7218, -20.5903, 0.29 ) }
    dend_8 { pt3dadd( -60.8198, 55.7108, -20.5663, 0.29 ) }
    dend_8 { pt3dadd( -61.1633, 55.5954, -20.3569, 0.29 ) }
    dend_8 { pt3dadd( -61.2156, 55.5289, -20.2711, 0.29 ) }
    dend_8 { pt3dadd( -61.4809, 55.0258, -19.6416, 0.29 ) }
    dend_8 { pt3dadd( -61.5009, 54.9851, -19.5961, 0.29 ) }
    dend_8 { pt3dadd( -61.7614, 54.5951, -19.131, 0.66 ) }
    dend_8 { pt3dadd( -61.9373, 54.4033, -18.8837, 0.66 ) }
    dend_8 { pt3dadd( -62.9298, 53.5998, -17.8098, 0.37 ) }
    dend_8 { pt3dadd( -63.4976, 53.2337, -17.3097, 0.37 ) }
    dend_8 { pt3dadd( -64.0814, 52.9212, -16.8754, 0.37 ) }
    dend_8 { pt3dadd( -65.1029, 52.4452, -16.1231, 1.11 ) }
    dend_8 { pt3dadd( -65.6223, 52.2273, -15.7708, 1.47 ) }
    dend_8 { pt3dadd( -66.3303, 51.9482, -15.3092, 0.81 ) }
    dend_8 { pt3dadd( -67.0503, 51.6903, -14.8424, 0.44 ) }
    dend_8 { pt3dadd( -67.9811, 51.3674, -14.1724, 0.44 ) }
    dend_8 { pt3dadd( -69.6096, 50.833, -12.9244, 1.4 ) }
    dend_8 { pt3dadd( -70.1904, 50.6359, -12.4646, 1.69 ) }
    dend_8 { pt3dadd( -70.2315, 50.6217, -12.4288, 1.69 ) }
    dend_8 { pt3dadd( -71.1198, 50.2671, -11.564, 0.29 ) }
    dend_8 { pt3dadd( -71.3429, 50.1605, -11.3455, 0.29 ) }
    dend_8 { pt3dadd( -71.4221, 50.1097, -11.2701, 0.29 ) }
    dend_8 { pt3dadd( -71.7413, 49.7603, -11.0339, 0.29 ) }
    dend_8 { pt3dadd( -71.8169, 49.6801, -10.9847, 0.29 ) }
    dend_8 { pt3dadd( -72.3483, 49.3801, -10.8436, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_8 { pt3dadd( -72.9262, 49.2944, -10.8783, 0.29 ) }
    dend_8 { pt3dadd( -73.1082, 49.2881, -10.8807, 0.29 ) }
    dend_8 { pt3dadd( -73.4007, 49.278, -10.8796, 0.29 ) }
    dend_8 { pt3dadd( -74.2648, 49.2512, -10.8781, 0.29 ) }
    dend_8 { pt3dadd( -75.1955, 49.2198, -10.8821, 0.29 ) }
    dend_8 { pt3dadd( -75.9829, 49.176, -10.8938, 1.4 ) }
    dend_8 { pt3dadd( -76.9919, 49.0586, -10.9132, 1.77 ) }
    dend_8 { pt3dadd( -77.6839, 48.9237, -10.9281, 1.77 ) }
    dend_8 { pt3dadd( -78.283, 48.7351, -10.9403, 0.74 ) }
    dend_8 { pt3dadd( -78.9247, 48.4139, -10.9283, 0.59 ) }
    dend_8 { pt3dadd( -79.4368, 48.0518, -10.8953, 0.44 ) }
    dend_8 { pt3dadd( -79.8486, 47.702, -10.8575, 0.44 ) }
    dend_8 { pt3dadd( -80.0362, 47.5334, -10.8223, 0.44 ) }
    dend_8 { pt3dadd( -80.6398, 46.9879, -10.6215, 0.44 ) }
    dend_8 { pt3dadd( -81.084, 46.6038, -10.421, 0.44 ) }
    dend_8 { pt3dadd( -81.8012, 46.0644, -10.0405, 0.44 ) }
    dend_8 { pt3dadd( -82.2425, 45.8531, -9.80676, 0.74 ) }
    dend_8 { pt3dadd( -83.2689, 45.7743, -9.1662, 0.29 ) }
    dend_8 { pt3dadd( -83.3216, 45.7831, -9.13054, 0.29 ) }
    dend_8 { pt3dadd( -83.5947, 45.8806, -8.96312, 0.29 ) }
    dend_8 { pt3dadd( -83.8335, 45.9996, -8.82876, 0.29 ) }
    dend_8 { pt3dadd( -84.3867, 46.317, -8.54831, 0.29 ) }
    dend_8 { pt3dadd( -85.7831, 47.042, -7.87659, 0.29 ) }
    dend_8 { pt3dadd( -85.8314, 47.0636, -7.85716, 0.29 ) }
    dend_8 { pt3dadd( -86.9289, 47.4632, -7.44197, 0.29 ) }
    dend_8 { pt3dadd( -87.4236, 47.6055, -7.27205, 1.47 ) }
    dend_8 { pt3dadd( -87.9733, 47.7248, -7.10706, 2.06 ) }
    dend_8 { pt3dadd( -89.41, 47.9302, -6.76065, 1.62 ) }
    dend_8 { pt3dadd( -90.1077, 47.9867, -6.65822, 0.59 ) }
    dend_8 { pt3dadd( -90.5499, 48.0075, -6.5987, 0.59 ) }
    dend_8 { pt3dadd( -91.1251, 47.9975, -6.53922, 0.81 ) }
    dend_8 { pt3dadd( -91.4279, 47.9763, -6.52769, 0.81 ) }
    dend_8 { pt3dadd( -91.7298, 47.949, -6.51644, 0.22 ) }
    dend_8 { pt3dadd( -92.2274, 47.8995, -6.54009, 0.22 ) }
    dend_8 { pt3dadd( -92.6105, 47.8839, -6.53364, 0.22 ) }
    dend_8 { pt3dadd( -93.2625, 47.9389, -6.43882, 0.22 ) }
    dend_8 { pt3dadd( -93.3084, 47.9468, -6.4282, 0.22 ) }
    dend_8 { pt3dadd( -94.6619, 48.2556, -6.06153, 0.22 ) }
    dend_8 { pt3dadd( -95.1304, 48.375, -5.95258, 1.11 ) }
    dend_8 { pt3dadd( -95.6762, 48.5199, -5.86558, 1.55 ) }
    dend_8 { pt3dadd( -96.3263, 48.6721, -5.80949, 0.29 ) }
    dend_8 { pt3dadd( -97.5916, 48.8849, -5.75682, 0.29 ) }
    dend_8 { pt3dadd( -97.6556, 48.8869, -5.76165, 0.29 ) }
    dend_8 { pt3dadd( -98.4588, 48.792, -5.91154, 0.88 ) }
    dend_8 { pt3dadd( -99.3591, 48.5886, -6.08494, 1.69 ) }
    dend_8 { pt3dadd( -99.952, 48.4114, -6.18203, 1.4 ) }
    dend_8 { pt3dadd( -100.525, 48.2189, -6.22379, 0.29 ) }
    dend_8 { pt3dadd( -101.602, 47.8587, -6.17252, 0.29 ) }
    dend_8 { pt3dadd( -102.33, 47.641, -6.07036, 1.11 ) }
    dend_8 { pt3dadd( -102.804, 47.5342, -5.94899, 1.11 ) }
    dend_8 { pt3dadd( -103.6, 47.438, -5.66967, 0.88 ) }
    dend_8 { pt3dadd( -104.683, 47.4109, -5.23045, 0.52 ) }
    dend_8 { pt3dadd( -105.226, 47.445, -4.99164, 0.37 ) }
    dend_8 { pt3dadd( -105.854, 47.5348, -4.64457, 0.37 ) }
    dend_8 { pt3dadd( -106.734, 47.6987, -4.12209, 0.37 ) }
    dend_8 { pt3dadd( -107.927, 47.9456, -3.40265, 0.37 ) }
    dend_8 { pt3dadd( -107.976, 47.9534, -3.37503, 0.37 ) }
    dend_8 { pt3dadd( -108.239, 47.9889, -3.20609, 0.74 ) }
    dend_8 { pt3dadd( -109.265, 48.0956, -2.39052, 0.15 ) }
    dend_8 { pt3dadd( -109.609, 48.1201, -2.07461, 0.15 ) }
    dend_8 { pt3dadd( -109.647, 48.1197, -2.03259, 0.15 ) }
    dend_8 { pt3dadd( -110.334, 48.1007, -1.25882, 0.15 ) }
    dend_8 { pt3dadd( -111.361, 48.1397, -0.237588, 0.15 ) }
    dend_8 { pt3dadd( -111.403, 48.1438, -0.200376, 0.15 ) }
    dend_8 { pt3dadd( -111.83, 48.2101, 0.126561, 0.15 ) }
    dend_8 { pt3dadd( -113.28, 48.5033, 1.16828, 0.15 ) }
    dend_8 { pt3dadd( -114.012, 48.6891, 1.63126, 0.15 ) }
    dend_8 { pt3dadd( -114.677, 48.9042, 1.98311, 0.59 ) }
    dend_8 { pt3dadd( -114.962, 48.9861, 2.08535, 0.81 ) }
    dend_8 { pt3dadd( -115.021, 49.0038, 2.10387, 0.81 ) }
    dend_8 { pt3dadd( -115.186, 49.0621, 2.13295, 0.81 ) }
    dend_8 { pt3dadd( -115.457, 49.1755, 2.11415, 0.15 ) }
    dend_8 { pt3dadd( -115.509, 49.1987, 2.11176, 0.15 ) }
    dend_8 { pt3dadd( -115.958, 49.3914, 2.10706, 0.15 ) }
    dend_8 { pt3dadd( -116.009, 49.4142, 2.10716, 0.15 ) }
    dend_8 { pt3dadd( -117.052, 49.9009, 2.11131, 0.15 ) }
    dend_8 { pt3dadd( -124.175, 49.4342, 5.65576, 0.15 ) }
    dend_8 { pt3dadd( -131.147, 48.6191, 9.4313, 0.15 ) }
    dend_8 { pt3dadd( -138.34, 48.0105, 12.8084, 0.15 ) }
    dend_8 { pt3dadd( -145.115, 47.6507, 16.9916, 0.15 ) }
    dend_8 { pt3dadd( -152.251, 47.8723, 20.5334, 0.15 ) }
    dend_8 { pt3dadd( -159.945, 47.0674, 22.4528, 0.15 ) }
    dend_8 { pt3dadd( -167.811, 45.8706, 22.9164, 0.15 ) }
    dend_8 { pt3dadd( -175.393, 43.5888, 23.8253, 0.15 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 84/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -166.655, -102.562, 130.467, 0.29 ) }
    dend_72 { pt3dadd( -173.084, -102.796, 134.691, 0.29 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 86/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -166.655, -102.562, 130.467, 0.29 ) }
    dend_71 { pt3dadd( -171.717, -103.134, 132.587, 0.29 ) }
    dend_71 { pt3dadd( -176.438, -103.918, 135.337, 0.29 ) }
    dend_71 { pt3dadd( -181.133, -105.473, 137.785, 0.29 ) }
    dend_71 { pt3dadd( -185.42, -107.214, 140.793, 0.29 ) }
    dend_71 { pt3dadd( -189.762, -109.355, 143.443, 0.29 ) }
    dend_71 { pt3dadd( -194.084, -111.98, 145.653, 0.29 ) }
    dend_71 { pt3dadd( -198.443, -114.285, 148.13, 0.29 ) }
    dend_71 { pt3dadd( -202.838, -116.779, 150.349, 0.29 ) }
    dend_71 { pt3dadd( -207.458, -119.414, 151.822, 0.29 ) }
    dend_71 { pt3dadd( -211.245, -122.936, 153.747, 0.29 ) }
    dend_71 { pt3dadd( -214.922, -126.232, 156.211, 0.29 ) }
    dend_71 { pt3dadd( -217.991, -130.36, 158.21, 0.29 ) }
    dend_71 { pt3dadd( -221.507, -134.267, 159.891, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_71 { pt3dadd( -224.524, -138.848, 160.504, 0.29 ) }
    dend_71 { pt3dadd( -226.606, -143.93, 161.044, 0.29 ) }
    dend_71 { pt3dadd( -229.138, -148.531, 162.739, 0.29 ) }
    dend_71 { pt3dadd( -231.18, -153.456, 164.165, 0.29 ) }
    dend_71 { pt3dadd( -232.967, -158.558, 165.274, 0.29 ) }
    dend_71 { pt3dadd( -235.524, -163.4, 165.959, 0.29 ) }
    dend_71 { pt3dadd( -237.879, -168.323, 166.784, 0.29 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 7/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -162.085, -182.875, 120.008, 0.29 ) }
    dend_66 { pt3dadd( -170.31, -187.139, 125.766, 0.29 ) }
    dend_66 { pt3dadd( -179.655, -190.04, 130.587, 0.29 ) }
    dend_66 { pt3dadd( -189.176, -193.154, 134.907, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 11/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -162.085, -182.875, 120.008, 0.29 ) }
    dend_65 { pt3dadd( -169.46, -186.714, 125.558, 0.29 ) }
    dend_65 { pt3dadd( -176.456, -190.206, 131.784, 0.29 ) }
    dend_65 { pt3dadd( -182.137, -192.214, 139.76, 0.29 ) }
    dend_65 { pt3dadd( -186.989, -194.92, 148.071, 0.29 ) }
    dend_65 { pt3dadd( -192.151, -195.839, 156.582, 0.29 ) }
    dend_65 { pt3dadd( -196.967, -194.686, 165.265, 0.29 ) }
    dend_65 { pt3dadd( -200.151, -192.744, 174.539, 0.29 ) }
    dend_65 { pt3dadd( -202.64, -188.786, 183.374, 0.29 ) }
    dend_65 { pt3dadd( -205.354, -184.808, 192.134, 0.29 ) }
    dend_65 { pt3dadd( -207.73, -181.746, 201.348, 0.29 ) }
    dend_65 { pt3dadd( -209.938, -176.737, 209.712, 0.29 ) }
    dend_65 { pt3dadd( -212.229, -169.943, 216.677, 0.29 ) }
    dend_65 { pt3dadd( -215.305, -163.388, 223.57, 0.29 ) }
    dend_65 { pt3dadd( -218.335, -155.625, 229.089, 0.29 ) }
    dend_65 { pt3dadd( -221.439, -147.305, 233.68, 0.29 ) }
    dend_65 { pt3dadd( -226.906, -139.499, 236.697, 0.29 ) }
    dend_65 { pt3dadd( -230.626, -131.043, 240.515, 0.29 ) }
    dend_65 { pt3dadd( -233.037, -122.139, 244.365, 0.29 ) }
    dend_65 { pt3dadd( -235.162, -113.25, 248.415, 0.29 ) }
    dend_65 { pt3dadd( -235.618, -103.886, 251.881, 0.29 ) }
    dend_65 { pt3dadd( -234.24, -95.1023, 256.45, 0.29 ) }
    dend_65 { pt3dadd( -232.021, -86.0301, 260.013, 0.29 ) }
    dend_65 { pt3dadd( -227.564, -78.2907, 264.502, 0.29 ) }
    dend_65 { pt3dadd( -223.105, -71.0853, 269.806, 0.29 ) }
    dend_65 { pt3dadd( -219.452, -63.3862, 275.03, 0.29 ) }
    dend_65 { pt3dadd( -217.14, -54.7461, 279.494, 0.29 ) }
    dend_65 { pt3dadd( -215.856, -47.178, 285.897, 0.29 ) }
    dend_65 { pt3dadd( -216.859, -39.6582, 292.406, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 40/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -152.246, -212.215, 87.8192, 0.29 ) }
    dend_61 { pt3dadd( -156.581, -223.795, 85.6138, 0.29 ) }
    dend_61 { pt3dadd( -160.998, -234.848, 81.6067, 0.29 ) }
    dend_61 { pt3dadd( -167.564, -245.198, 78.8677, 0.29 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 44/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -152.246, -212.215, 87.8192, 0.29 ) }
    dend_60 { pt3dadd( -160.171, -220.181, 88.5135, 0.29 ) }
    dend_60 { pt3dadd( -167.997, -228.273, 88.5951, 0.29 ) }
    dend_60 { pt3dadd( -175.707, -236.447, 89.2984, 0.29 ) }
    dend_60 { pt3dadd( -183.047, -244.843, 90.8354, 0.29 ) }
    dend_60 { pt3dadd( -190.375, -253.165, 92.7821, 0.29 ) }
    dend_60 { pt3dadd( -198.639, -260.714, 93.991, 0.29 ) }
    dend_60 { pt3dadd( -205.848, -269.353, 93.6212, 0.29 ) }
    dend_60 { pt3dadd( -212.571, -278.209, 91.8571, 0.29 ) }
    dend_60 { pt3dadd( -219.392, -287.067, 90.5314, 0.29 ) }
    dend_60 { pt3dadd( -226.906, -295.03, 87.9109, 0.29 ) }
    dend_60 { pt3dadd( -234.639, -302.674, 84.9919, 0.29 ) }
    dend_60 { pt3dadd( -240.144, -312.202, 82.6182, 0.29 ) }
    dend_60 { pt3dadd( -246.325, -321.297, 80.207, 0.29 ) }
    dend_60 { pt3dadd( -251.049, -331.255, 77.9091, 0.29 ) }
    dend_60 { pt3dadd( -255.274, -341.655, 77.0524, 0.29 ) }
    dend_60 { pt3dadd( -257.9, -352.556, 76.0448, 0.29 ) }
    dend_60 { pt3dadd( -259.962, -363.376, 73.7175, 0.29 ) }
    dend_60 { pt3dadd( -261.428, -374.479, 72.5789, 0.29 ) }
    dend_60 { pt3dadd( -261.461, -385.536, 70.4608, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 64/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 181.615, 237.089, -79.9557, 0.44 ) }
    dend_26 { pt3dadd( 182.313, 239.112, -81.7838, 0.44 ) }
    dend_26 { pt3dadd( 182.691, 239.943, -82.4814, 0.44 ) }
    dend_26 { pt3dadd( 182.756, 240.058, -82.5982, 0.44 ) }
    dend_26 { pt3dadd( 183.071, 240.534, -83.2595, 0.52 ) }
    dend_26 { pt3dadd( 183.844, 241.625, -84.7315, 0.81 ) }
    dend_26 { pt3dadd( 183.912, 241.718, -84.8546, 0.81 ) }
    dend_26 { pt3dadd( 184.541, 242.56, -85.9413, 0.81 ) }
    dend_26 { pt3dadd( 185.701, 244.03, -87.8442, 0.15 ) }
    dend_26 { pt3dadd( 187.424, 246.136, -90.5308, 0.22 ) }
    dend_26 { pt3dadd( 188.332, 247.15, -91.7455, 0.22 ) }
    dend_26 { pt3dadd( 188.43, 247.256, -91.8578, 0.22 ) }
    dend_26 { pt3dadd( 189.119, 247.99, -92.5579, 0.22 ) }
    dend_26 { pt3dadd( 189.227, 248.095, -92.6344, 0.22 ) }
    dend_26 { pt3dadd( 191.056, 249.635, -93.1064, 0.81 ) }
    dend_26 { pt3dadd( 192.52, 250.738, -93.1401, 0.22 ) }
    dend_26 { pt3dadd( 193.271, 251.285, -93.168, 0.22 ) }
    dend_26 { pt3dadd( 193.589, 251.541, -93.1992, 0.22 ) }
    dend_26 { pt3dadd( 195.182, 252.937, -93.42, 0.22 ) }
    dend_26 { pt3dadd( 195.245, 253.0, -93.4301, 0.22 ) }
    dend_26 { pt3dadd( 195.88, 253.799, -93.5358, 0.52 ) }
    dend_26 { pt3dadd( 196.193, 254.283, -93.6572, 0.52 ) }
    dend_26 { pt3dadd( 197.023, 255.776, -94.0723, 0.29 ) }
    dend_26 { pt3dadd( 197.3, 256.353, -94.2035, 0.74 ) }
    dend_26 { pt3dadd( 197.326, 256.414, -94.2125, 0.74 ) }
    dend_26 { pt3dadd( 197.722, 257.22, -94.2482, 0.74 ) }
    dend_26 { pt3dadd( 197.765, 257.299, -94.2426, 0.74 ) }
    dend_26 { pt3dadd( 198.057, 257.811, -94.1656, 0.15 ) }
    dend_26 { pt3dadd( 199.05, 259.512, -93.7621, 0.15 ) }
    dend_26 { pt3dadd( 199.417, 260.116, -93.6153, 1.11 ) }
    dend_26 { pt3dadd( 199.93, 260.938, -93.413, 1.25 ) }
    dend_26 { pt3dadd( 200.272, 261.471, -93.2811, 0.15 ) }
    dend_26 { pt3dadd( 200.799, 262.299, -93.0166, 0.15 ) }
    dend_26 { pt3dadd( 200.986, 262.554, -92.9171, 0.15 ) }
    dend_26 { pt3dadd( 201.581, 263.3, -92.6313, 0.52 ) }
    dend_26 { pt3dadd( 202.258, 264.103, -92.344, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_26 { pt3dadd( 202.312, 264.157, -92.3228, 0.88 ) }
    dend_26 { pt3dadd( 203.473, 265.196, -91.8909, 0.15 ) }
    dend_26 { pt3dadd( 205.546, 266.894, -91.1714, 0.15 ) }
    dend_26 { pt3dadd( 206.243, 267.437, -90.9426, 0.15 ) }
    dend_26 { pt3dadd( 206.312, 267.49, -90.923, 0.15 ) }
    dend_26 { pt3dadd( 207.391, 268.284, -90.6885, 1.69 ) }
    dend_26 { pt3dadd( 208.447, 269.063, -90.5271, 0.22 ) }
    dend_26 { pt3dadd( 209.093, 269.554, -90.5435, 0.22 ) }
    dend_26 { pt3dadd( 209.178, 269.625, -90.5549, 0.22 ) }
    dend_26 { pt3dadd( 209.843, 270.201, -90.6724, 0.52 ) }
    dend_26 { pt3dadd( 210.232, 270.563, -90.8028, 0.52 ) }
    dend_26 { pt3dadd( 210.284, 270.616, -90.8304, 0.52 ) }
    dend_26 { pt3dadd( 211.166, 271.445, -91.2337, 0.15 ) }
    dend_26 { pt3dadd( 212.211, 272.395, -91.581, 0.15 ) }
    dend_26 { pt3dadd( 212.272, 272.443, -91.59, 0.15 ) }
    dend_26 { pt3dadd( 212.872, 272.839, -91.5641, 0.81 ) }
    dend_26 { pt3dadd( 213.175, 273.008, -91.5194, 0.81 ) }
    dend_26 { pt3dadd( 214.731, 273.764, -91.158, 0.15 ) }
    dend_26 { pt3dadd( 214.802, 273.79, -91.1383, 0.15 ) }
    dend_26 { pt3dadd( 215.567, 274.04, -90.9544, 0.15 ) }
    dend_26 { pt3dadd( 215.687, 274.076, -90.9316, 0.15 ) }
    dend_26 { pt3dadd( 216.463, 274.301, -90.8082, 0.44 ) }
    dend_26 { pt3dadd( 217.139, 274.495, -90.7487, 0.15 ) }
    dend_26 { pt3dadd( 218.8, 275.085, -90.8551, 0.15 ) }
    dend_26 { pt3dadd( 218.957, 275.15, -90.8727, 0.74 ) }
    dend_26 { pt3dadd( 219.969, 275.603, -91.0408, 0.15 ) }
    dend_26 { pt3dadd( 220.19, 275.704, -91.0862, 0.15 ) }
    dend_26 { pt3dadd( 220.661, 275.949, -91.2027, 0.66 ) }
    dend_26 { pt3dadd( 222.218, 276.831, -91.6579, 0.15 ) }
    dend_26 { pt3dadd( 222.281, 276.873, -91.681, 0.15 ) }
    dend_26 { pt3dadd( 223.535, 277.704, -92.158, 0.15 ) }
    dend_26 { pt3dadd( 223.657, 277.789, -92.2085, 0.15 ) }
    dend_26 { pt3dadd( 224.797, 278.553, -92.6662, 0.15 ) }
    dend_26 { pt3dadd( 224.869, 278.6, -92.6925, 0.15 ) }
    dend_26 { pt3dadd( 225.915, 279.169, -92.9181, 1.03 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 35/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 181.615, 237.089, -79.9557, 0.29 ) }
    dend_23 { pt3dadd( 184.635, 236.782, -82.5327, 0.29 ) }
    dend_23 { pt3dadd( 185.51, 236.693, -83.2797, 0.29 ) }
    dend_23 { pt3dadd( 185.573, 236.686, -83.3334, 0.29 ) }
    dend_23 { pt3dadd( 186.665, 236.575, -84.265, 0.29 ) }
    dend_23 { pt3dadd( 186.878, 236.553, -84.4465, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 41/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -21.9096, 97.235, -26.791, 0.37 ) }
    dend_21 { pt3dadd( -23.1263, 97.9016, -28.6919, 0.37 ) }
    dend_21 { pt3dadd( -23.6151, 98.1796, -29.4064, 0.37 ) }
    dend_21 { pt3dadd( -23.6491, 98.2013, -29.4551, 0.37 ) }
    dend_21 { pt3dadd( -24.2897, 98.6395, -30.3624, 0.66 ) }
    dend_21 { pt3dadd( -24.9044, 99.1339, -31.2404, 0.66 ) }
    dend_21 { pt3dadd( -24.9458, 99.1735, -31.3006, 0.66 ) }
    dend_21 { pt3dadd( -25.8388, 100.337, -32.5, 0.22 ) }
    dend_21 { pt3dadd( -25.996, 100.721, -32.8207, 0.22 ) }
    dend_21 { pt3dadd( -26.0074, 100.793, -32.8736, 0.22 ) }
    dend_21 { pt3dadd( -25.9635, 101.546, -33.3963, 0.74 ) }
    dend_21 { pt3dadd( -25.8798, 102.012, -33.7571, 1.33 ) }
    dend_21 { pt3dadd( -25.7433, 102.742, -34.3344, 1.33 ) }
    dend_21 { pt3dadd( -25.5404, 103.911, -35.2859, 1.33 ) }
    dend_21 { pt3dadd( -25.4864, 104.596, -35.8557, 0.44 ) }
    dend_21 { pt3dadd( -25.5007, 105.294, -36.4725, 0.44 ) }
    dend_21 { pt3dadd( -25.6588, 106.481, -37.5685, 0.44 ) }
    dend_21 { pt3dadd( -25.8687, 107.377, -38.3956, 0.44 ) }
    dend_21 { pt3dadd( -26.0576, 107.906, -38.8461, 1.18 ) }
    dend_21 { pt3dadd( -26.3884, 108.644, -39.3928, 1.25 ) }
    dend_21 { pt3dadd( -26.8692, 109.543, -39.9921, 0.66 ) }
    dend_21 { pt3dadd( -27.0861, 109.907, -40.2081, 0.22 ) }
    dend_21 { pt3dadd( -27.117, 109.956, -40.2343, 0.22 ) }
    dend_21 { pt3dadd( -27.4929, 110.558, -40.5875, 0.22 ) }
    dend_21 { pt3dadd( -27.774, 111.042, -40.9567, 0.37 ) }
    dend_21 { pt3dadd( -28.0081, 111.455, -41.3605, 0.37 ) }
    dend_21 { pt3dadd( -28.1516, 111.747, -41.6806, 0.37 ) }
    dend_21 { pt3dadd( -28.1694, 111.789, -41.7369, 0.37 ) }
    dend_21 { pt3dadd( -28.2926, 112.165, -42.4796, 0.37 ) }
    dend_21 { pt3dadd( -28.4066, 112.774, -44.182, 0.74 ) }
    dend_21 { pt3dadd( -28.409, 112.801, -44.3056, 0.74 ) }
    dend_21 { pt3dadd( -28.4076, 112.898, -44.8286, 0.74 ) }
    dend_21 { pt3dadd( -28.4046, 112.924, -44.9752, 0.74 ) }
    dend_21 { pt3dadd( -28.3849, 113.276, -46.7642, 0.74 ) }
    dend_21 { pt3dadd( -28.3866, 113.293, -46.8344, 0.74 ) }
    dend_21 { pt3dadd( -28.6289, 113.998, -48.5984, 1.03 ) }
    dend_21 { pt3dadd( -28.7369, 114.238, -49.1409, 1.03 ) }
    dend_21 { pt3dadd( -28.7503, 114.264, -49.1961, 1.03 ) }
    dend_21 { pt3dadd( -28.9558, 114.654, -49.905, 1.03 ) }
    dend_21 { pt3dadd( -29.2099, 115.1, -50.6804, 0.37 ) }
    dend_21 { pt3dadd( -29.7655, 116.047, -52.2269, 0.88 ) }
    dend_21 { pt3dadd( -30.2816, 116.921, -53.5587, 0.37 ) }
    dend_21 { pt3dadd( -30.3251, 116.988, -53.6678, 0.37 ) }
    dend_21 { pt3dadd( -30.5483, 117.342, -54.2291, 0.37 ) }
    dend_21 { pt3dadd( -31.1748, 118.36, -55.8633, 1.03 ) }
    dend_21 { pt3dadd( -31.4105, 118.845, -56.5735, 1.03 ) }
    dend_21 { pt3dadd( -31.4245, 118.881, -56.6235, 1.03 ) }
    dend_21 { pt3dadd( -31.7008, 119.795, -57.784, 1.25 ) }
    dend_21 { pt3dadd( -31.7703, 120.159, -58.2361, 1.25 ) }
    dend_21 { pt3dadd( -31.8084, 120.721, -58.9137, 0.52 ) }
    dend_21 { pt3dadd( -31.7471, 121.517, -59.8801, 0.52 ) }
    dend_21 { pt3dadd( -31.5931, 122.374, -61.0278, 0.96 ) }
    dend_21 { pt3dadd( -31.5854, 122.406, -61.0704, 0.96 ) }
    dend_21 { pt3dadd( -31.4311, 122.886, -61.6824, 0.96 ) }
    dend_21 { pt3dadd( -31.4247, 122.918, -61.7251, 0.96 ) }
    dend_21 { pt3dadd( -31.4049, 124.157, -63.3098, 0.29 ) }
    dend_21 { pt3dadd( -31.5183, 124.446, -63.7411, 0.29 ) }
    dend_21 { pt3dadd( -31.598, 124.622, -64.0014, 0.29 ) }
    dend_21 { pt3dadd( -31.7522, 124.928, -64.4825, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_21 { pt3dadd( -32.1479, 125.694, -65.6679, 0.88 ) }
    dend_21 { pt3dadd( -32.3289, 126.065, -66.1964, 0.88 ) }
    dend_21 { pt3dadd( -32.9723, 127.403, -67.7186, 0.29 ) }
    dend_21 { pt3dadd( -33.3301, 128.207, -68.5938, 0.29 ) }
    dend_21 { pt3dadd( -33.3663, 128.293, -68.6908, 0.29 ) }
    dend_21 { pt3dadd( -33.5894, 128.869, -69.3625, 0.29 ) }
    dend_21 { pt3dadd( -33.615, 128.951, -69.4544, 0.29 ) }
    dend_21 { pt3dadd( -33.8568, 129.763, -70.3419, 0.29 ) }
    dend_21 { pt3dadd( -33.8826, 129.842, -70.423, 0.29 ) }
    dend_21 { pt3dadd( -34.4296, 131.348, -71.9674, 1.4 ) }
    dend_21 { pt3dadd( -34.786, 132.391, -73.0992, 1.4 ) }
    dend_21 { pt3dadd( -34.7991, 132.426, -73.1384, 1.4 ) }
    dend_21 { pt3dadd( -35.1426, 133.334, -74.1833, 0.37 ) }
    dend_21 { pt3dadd( -35.1584, 133.381, -74.2356, 0.37 ) }
    dend_21 { pt3dadd( -35.3487, 134.038, -74.8533, 0.37 ) }
    dend_21 { pt3dadd( -35.5575, 134.939, -75.5504, 0.37 ) }
    dend_21 { pt3dadd( -35.7085, 135.62, -76.0675, 0.37 ) }
    dend_21 { pt3dadd( -35.7367, 135.776, -76.1988, 0.37 ) }
    dend_21 { pt3dadd( -35.8018, 136.384, -76.8151, 0.37 ) }
    dend_21 { pt3dadd( -35.8067, 136.574, -77.0244, 1.03 ) }
    dend_21 { pt3dadd( -35.7553, 137.527, -78.1385, 1.03 ) }
    dend_21 { pt3dadd( -35.7422, 137.628, -78.2486, 1.03 ) }
    dend_21 { pt3dadd( -35.608, 138.335, -79.014, 1.33 ) }
    dend_21 { pt3dadd( -35.4901, 139.079, -79.7894, 0.44 ) }
    dend_21 { pt3dadd( -35.4583, 139.306, -80.0188, 0.44 ) }
    dend_21 { pt3dadd( -35.443, 139.47, -80.1469, 0.29 ) }
    dend_21 { pt3dadd( -35.4168, 140.057, -80.433, 0.29 ) }
    dend_21 { pt3dadd( -35.4245, 140.113, -80.4616, 0.29 ) }
    dend_21 { pt3dadd( -35.612, 140.595, -80.7012, 0.29 ) }
    dend_21 { pt3dadd( -35.6396, 140.644, -80.7302, 0.29 ) }
    dend_21 { pt3dadd( -36.0291, 141.218, -81.1051, 0.29 ) }
    dend_21 { pt3dadd( -36.063, 141.261, -81.1374, 0.29 ) }
    dend_21 { pt3dadd( -37.0936, 142.454, -82.1237, 0.37 ) }
    dend_21 { pt3dadd( -37.7179, 143.123, -82.72, 0.66 ) }
    dend_21 { pt3dadd( -38.3149, 143.729, -83.2939, 1.11 ) }
    dend_21 { pt3dadd( -38.7553, 144.16, -83.7083, 1.4 ) }
    dend_21 { pt3dadd( -39.6917, 145.036, -84.5853, 0.52 ) }
    dend_21 { pt3dadd( -39.7242, 145.066, -84.6151, 0.52 ) }
    dend_21 { pt3dadd( -40.446, 145.762, -85.2177, 0.52 ) }
    dend_21 { pt3dadd( -40.5281, 145.845, -85.284, 0.52 ) }
    dend_21 { pt3dadd( -41.5178, 146.904, -86.0355, 0.52 ) }
    dend_21 { pt3dadd( -42.448, 147.872, -86.7452, 0.52 ) }
    dend_21 { pt3dadd( -42.5993, 148.021, -86.8468, 0.52 ) }
    dend_21 { pt3dadd( -43.3556, 148.669, -87.2821, 0.52 ) }
    dend_21 { pt3dadd( -44.0186, 149.166, -87.5974, 0.88 ) }
    dend_21 { pt3dadd( -44.0702, 149.194, -87.6208, 0.88 ) }
    dend_21 { pt3dadd( -45.5073, 149.582, -88.1664, 0.29 ) }
    dend_21 { pt3dadd( -46.1313, 149.629, -88.3705, 0.29 ) }
    dend_21 { pt3dadd( -46.9754, 149.562, -88.6216, 0.29 ) }
    dend_21 { pt3dadd( -47.0355, 149.55, -88.6367, 0.29 ) }
    dend_21 { pt3dadd( -48.8072, 149.063, -88.9984, 0.59 ) }
    dend_21 { pt3dadd( -49.7843, 148.797, -89.1411, 0.59 ) }
    dend_21 { pt3dadd( -50.2468, 148.678, -89.2076, 0.29 ) }
    dend_21 { pt3dadd( -51.1149, 148.517, -89.4606, 0.29 ) }
    dend_21 { pt3dadd( -51.7252, 148.471, -89.7141, 0.29 ) }
    dend_21 { pt3dadd( -51.8381, 148.472, -89.7691, 0.29 ) }
    dend_21 { pt3dadd( -52.4173, 148.55, -90.119, 0.29 ) }
    dend_21 { pt3dadd( -53.8661, 148.816, -91.0778, 0.29 ) }
    dend_21 { pt3dadd( -54.9378, 149.026, -91.8007, 1.18 ) }
    dend_21 { pt3dadd( -55.5026, 149.135, -92.1504, 1.18 ) }
    dend_21 { pt3dadd( -55.5493, 149.142, -92.1757, 1.18 ) }
    dend_21 { pt3dadd( -56.6831, 149.299, -92.6623, 0.29 ) }
    dend_21 { pt3dadd( -57.5855, 149.413, -92.9148, 0.29 ) }
    dend_21 { pt3dadd( -57.7896, 149.444, -92.9467, 0.29 ) }
    dend_21 { pt3dadd( -58.8892, 149.651, -93.0866, 0.29 ) }
    dend_21 { pt3dadd( -59.1744, 149.708, -93.1236, 0.29 ) }
    dend_21 { pt3dadd( -59.658, 149.811, -93.1786, 0.74 ) }
    dend_21 { pt3dadd( -60.3902, 149.978, -93.2507, 0.74 ) }
    dend_21 { pt3dadd( -61.9348, 150.365, -93.4722, 0.37 ) }
    dend_21 { pt3dadd( -62.0035, 150.384, -93.4835, 0.37 ) }
    dend_21 { pt3dadd( -62.3236, 150.488, -93.5431, 0.29 ) }
    dend_21 { pt3dadd( -63.2923, 150.848, -93.7598, 0.29 ) }
    dend_21 { pt3dadd( -63.5384, 150.951, -93.8215, 0.74 ) }
    dend_21 { pt3dadd( -63.6756, 151.019, -93.853, 0.74 ) }
    dend_21 { pt3dadd( -64.0697, 151.26, -93.9075, 0.96 ) }
    dend_21 { pt3dadd( -64.5179, 151.553, -94.024, 0.96 ) }
    dend_21 { pt3dadd( -65.2642, 152.093, -94.3266, 0.59 ) }
    dend_21 { pt3dadd( -65.3105, 152.129, -94.3496, 0.59 ) }
    dend_21 { pt3dadd( -65.7054, 152.43, -94.5399, 0.22 ) }
    dend_21 { pt3dadd( -65.7806, 152.473, -94.563, 0.22 ) }
    dend_21 { pt3dadd( -66.4778, 152.784, -94.6964, 0.29 ) }
    dend_21 { pt3dadd( -66.6186, 152.828, -94.7165, 0.29 ) }
    dend_21 { pt3dadd( -67.4674, 153.043, -94.7916, 0.29 ) }
    dend_21 { pt3dadd( -67.5379, 153.057, -94.7971, 0.29 ) }
    dend_21 { pt3dadd( -68.9972, 153.224, -94.8527, 0.29 ) }
    dend_21 { pt3dadd( -69.1236, 153.23, -94.8508, 0.29 ) }
    dend_21 { pt3dadd( -70.1824, 153.234, -94.7724, 0.29 ) }
    dend_21 { pt3dadd( -70.2454, 153.233, -94.7671, 0.29 ) }
    dend_21 { pt3dadd( -70.8065, 153.212, -94.7393, 1.03 ) }
    dend_21 { pt3dadd( -71.8474, 153.232, -94.7088, 1.25 ) }
    dend_21 { pt3dadd( -72.3999, 153.272, -94.7032, 0.29 ) }
    dend_21 { pt3dadd( -73.1351, 153.364, -94.8018, 0.29 ) }
    dend_21 { pt3dadd( -73.2553, 153.386, -94.8308, 0.29 ) }
    dend_21 { pt3dadd( -74.1655, 153.567, -95.1341, 0.66 ) }
    dend_21 { pt3dadd( -74.7659, 153.685, -95.3586, 0.88 ) }
    dend_21 { pt3dadd( -74.8235, 153.697, -95.3821, 0.88 ) }
    dend_21 { pt3dadd( -76.8239, 154.076, -96.1161, 0.44 ) }
    dend_21 { pt3dadd( -76.9498, 154.092, -96.1637, 0.44 ) }
    dend_21 { pt3dadd( -77.7833, 154.136, -96.473, 0.44 ) }
    dend_21 { pt3dadd( -78.8833, 154.103, -96.8181, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_21 { pt3dadd( -78.944, 154.099, -96.8354, 0.44 ) }
    dend_21 { pt3dadd( -80.0112, 154.018, -97.0601, 1.18 ) }
    dend_21 { pt3dadd( -81.4655, 153.896, -97.2463, 1.18 ) }
    dend_21 { pt3dadd( -82.5975, 153.85, -97.4472, 0.29 ) }
    dend_21 { pt3dadd( -83.6724, 153.859, -97.672, 0.29 ) }
    dend_21 { pt3dadd( -83.7343, 153.864, -97.6842, 0.29 ) }
    dend_21 { pt3dadd( -85.0068, 154.039, -97.9726, 0.29 ) }
    dend_21 { pt3dadd( -85.0751, 154.052, -97.9921, 0.29 ) }
    dend_21 { pt3dadd( -86.9893, 154.497, -98.6003, 0.29 ) }
    dend_21 { pt3dadd( -87.663, 154.672, -98.8487, 1.11 ) }
    dend_21 { pt3dadd( -88.8247, 154.971, -99.3737, 1.11 ) }
    dend_21 { pt3dadd( -90.3686, 155.335, -100.133, 0.88 ) }
    dend_21 { pt3dadd( -91.8453, 155.669, -100.924, 0.66 ) }
    dend_21 { pt3dadd( -93.3778, 156.009, -101.753, 0.66 ) }
    dend_21 { pt3dadd( -93.441, 156.024, -101.785, 0.66 ) }
    dend_21 { pt3dadd( -94.9028, 156.397, -102.41, 0.29 ) }
    dend_21 { pt3dadd( -95.3162, 156.543, -102.482, 0.29 ) }
    dend_21 { pt3dadd( -95.6668, 156.77, -102.293, 0.29 ) }
    dend_21 { pt3dadd( -95.9844, 157.037, -101.981, 0.29 ) }
    dend_21 { pt3dadd( -97.1391, 158.191, -100.426, 0.29 ) }
    dend_21 { pt3dadd( -98.0213, 159.116, -99.1327, 1.47 ) }
    dend_21 { pt3dadd( -98.441, 159.587, -98.4704, 1.84 ) }
    dend_21 { pt3dadd( -98.8399, 160.041, -97.8614, 1.84 ) }
    dend_21 { pt3dadd( -98.8746, 160.081, -97.8118, 1.84 ) }
    dend_21 { pt3dadd( -99.5341, 160.816, -96.9964, 0.74 ) }
    dend_21 { pt3dadd( -99.8774, 161.185, -96.6936, 0.59 ) }
    dend_21 { pt3dadd( -100.366, 161.792, -96.3319, 0.59 ) }
    dend_21 { pt3dadd( -100.436, 161.893, -96.2761, 0.59 ) }
    dend_21 { pt3dadd( -100.865, 162.59, -95.9395, 0.59 ) }
    dend_21 { pt3dadd( -101.049, 162.9, -95.8148, 1.03 ) }
    dend_21 { pt3dadd( -101.078, 162.953, -95.7933, 1.03 ) }
    dend_21 { pt3dadd( -101.362, 163.57, -95.4428, 1.03 ) }
    dend_21 { pt3dadd( -101.382, 163.619, -95.4075, 1.03 ) }
    dend_21 { pt3dadd( -101.54, 163.983, -95.118, 0.66 ) }
    dend_21 { pt3dadd( -101.581, 164.077, -95.031, 0.66 ) }
    dend_21 { pt3dadd( -101.959, 164.995, -94.0739, 0.29 ) }
    dend_21 { pt3dadd( -102.022, 165.146, -93.8972, 0.15 ) }
    dend_21 { pt3dadd( -102.052, 165.22, -93.7875, 0.15 ) }
    dend_21 { pt3dadd( -102.2, 165.616, -93.1721, 0.15 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 39/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -21.9096, 97.235, -26.791, 0.59 ) }
    dend_20 { pt3dadd( -21.8432, 98.034, -26.7519, 0.59 ) }
    dend_20 { pt3dadd( -21.7387, 99.2433, -26.6583, 0.44 ) }
    dend_20 { pt3dadd( -21.6749, 100.108, -26.5838, 0.59 ) }
    dend_20 { pt3dadd( -21.6021, 101.134, -26.4839, 0.59 ) }
    dend_20 { pt3dadd( -21.5197, 102.225, -26.3739, 0.37 ) }
    dend_20 { pt3dadd( -21.4201, 103.463, -26.2504, 0.22 ) }
    dend_20 { pt3dadd( -21.4132, 103.547, -26.2425, 0.22 ) }
    dend_20 { pt3dadd( -21.3056, 104.948, -26.1403, 0.22 ) }
    dend_20 { pt3dadd( -21.2774, 105.323, -26.1041, 0.66 ) }
    dend_20 { pt3dadd( -21.2628, 105.676, -26.0807, 0.66 ) }
    dend_20 { pt3dadd( -21.252, 106.118, -26.0361, 0.66 ) }
    dend_20 { pt3dadd( -21.2664, 106.422, -26.0344, 0.66 ) }
    dend_20 { pt3dadd( -21.3248, 106.946, -26.0184, 0.66 ) }
    dend_20 { pt3dadd( -21.3367, 107.03, -26.0156, 0.66 ) }
    dend_20 { pt3dadd( -21.448, 107.915, -26.0288, 0.22 ) }
    dend_20 { pt3dadd( -21.5607, 108.877, -26.0596, 0.22 ) }
    dend_20 { pt3dadd( -21.6352, 109.729, -26.0971, 0.22 ) }
    dend_20 { pt3dadd( -21.6447, 109.909, -26.1065, 0.22 ) }
    dend_20 { pt3dadd( -21.7796, 113.907, -26.2831, 0.22 ) }
    dend_20 { pt3dadd( -21.7871, 114.606, -26.3096, 0.59 ) }
    dend_20 { pt3dadd( -21.7855, 114.69, -26.3125, 0.59 ) }
    dend_20 { pt3dadd( -21.7571, 115.499, -26.3645, 0.88 ) }
    dend_20 { pt3dadd( -21.7027, 116.36, -26.413, 0.88 ) }
    dend_20 { pt3dadd( -21.6424, 117.071, -26.4413, 0.74 ) }
    dend_20 { pt3dadd( -21.5338, 117.946, -26.4434, 0.52 ) }
    dend_20 { pt3dadd( -21.5137, 118.14, -26.439, 0.29 ) }
    dend_20 { pt3dadd( -21.4984, 118.343, -26.4366, 0.29 ) }
    dend_20 { pt3dadd( -21.4548, 119.145, -26.4365, 0.29 ) }
    dend_20 { pt3dadd( -21.4009, 120.301, -26.4511, 0.29 ) }
    dend_20 { pt3dadd( -21.3962, 120.428, -26.4546, 0.29 ) }
    dend_20 { pt3dadd( -21.377, 121.572, -26.484, 1.03 ) }
    dend_20 { pt3dadd( -21.3592, 122.849, -26.5164, 1.4 ) }
    dend_20 { pt3dadd( -21.3434, 123.627, -26.5366, 1.77 ) }
    dend_20 { pt3dadd( -21.3407, 123.711, -26.5389, 1.77 ) }
    dend_20 { pt3dadd( -21.3106, 124.708, -26.5656, 1.77 ) }
    dend_20 { pt3dadd( -21.2698, 125.498, -26.5882, 1.03 ) }
    dend_20 { pt3dadd( -21.2251, 126.142, -26.6077, 1.03 ) }
    dend_20 { pt3dadd( -21.1633, 126.908, -26.6315, 1.03 ) }
    dend_20 { pt3dadd( -21.122, 127.548, -26.6506, 0.96 ) }
    dend_20 { pt3dadd( -21.1148, 127.667, -26.6577, 0.96 ) }
    dend_20 { pt3dadd( -21.0444, 128.889, -26.758, 0.96 ) }
    dend_20 { pt3dadd( -21.0365, 129.017, -26.7662, 0.96 ) }
    dend_20 { pt3dadd( -21.0016, 129.642, -26.7985, 0.29 ) }
    dend_20 { pt3dadd( -20.882, 131.057, -26.8546, 0.29 ) }
    dend_20 { pt3dadd( -20.6406, 133.429, -26.9325, 0.29 ) }
    dend_20 { pt3dadd( -20.6172, 133.627, -26.9381, 0.29 ) }
    dend_20 { pt3dadd( -20.4406, 134.977, -26.9693, 0.29 ) }
    dend_20 { pt3dadd( -20.4287, 135.06, -26.9709, 0.29 ) }
    dend_20 { pt3dadd( -19.9108, 138.251, -27.0076, 0.29 ) }
    dend_20 { pt3dadd( -19.881, 138.417, -27.0078, 0.29 ) }
    dend_20 { pt3dadd( -19.7833, 138.933, -27.0017, 0.74 ) }
    dend_20 { pt3dadd( -19.6012, 139.894, -27.0028, 1.18 ) }
    dend_20 { pt3dadd( -19.4251, 140.841, -27.0298, 1.4 ) }
    dend_20 { pt3dadd( -19.2365, 141.813, -27.033, 0.52 ) }
    dend_20 { pt3dadd( -19.2197, 141.896, -27.0308, 0.52 ) }
    dend_20 { pt3dadd( -19.0043, 142.82, -27.001, 0.52 ) }
    dend_20 { pt3dadd( -18.9803, 142.913, -26.9989, 0.52 ) }
    dend_20 { pt3dadd( -18.593, 144.337, -26.9754, 0.52 ) }
    dend_20 { pt3dadd( -18.3142, 145.509, -26.9723, 0.52 ) }
    dend_20 { pt3dadd( -18.2974, 145.591, -26.9765, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_20 { pt3dadd( -17.9022, 147.853, -27.152, 0.52 ) }
    dend_20 { pt3dadd( -17.7629, 148.757, -27.2389, 0.37 ) }
    dend_20 { pt3dadd( -17.7166, 149.1, -27.277, 0.37 ) }
    dend_20 { pt3dadd( -17.4041, 151.945, -27.6312, 0.37 ) }
    dend_20 { pt3dadd( -17.2378, 154.119, -27.915, 1.03 ) }
    dend_20 { pt3dadd( -17.1799, 155.35, -28.0948, 1.55 ) }
    dend_20 { pt3dadd( -17.1598, 156.821, -28.3292, 1.55 ) }
    dend_20 { pt3dadd( -17.1562, 157.78, -28.486, 0.88 ) }
    dend_20 { pt3dadd( -17.159, 158.925, -28.6826, 0.59 ) }
    dend_20 { pt3dadd( -17.1809, 160.801, -29.0208, 0.59 ) }
    dend_20 { pt3dadd( -17.2053, 162.039, -29.2249, 0.59 ) }
    dend_20 { pt3dadd( -17.2075, 162.217, -29.2573, 0.59 ) }
    dend_20 { pt3dadd( -17.2036, 163.068, -29.4225, 0.59 ) }
    dend_20 { pt3dadd( -17.1997, 163.151, -29.4385, 0.59 ) }
    dend_20 { pt3dadd( -17.111, 163.849, -29.5632, 0.81 ) }
    dend_20 { pt3dadd( -17.0928, 163.931, -29.5725, 0.81 ) }
    dend_20 { pt3dadd( -16.9245, 164.609, -29.6033, 0.81 ) }
    dend_20 { pt3dadd( -16.7706, 165.307, -29.6646, 0.52 ) }
    dend_20 { pt3dadd( -16.7392, 165.483, -29.6847, 0.52 ) }
    dend_20 { pt3dadd( -16.6172, 166.278, -29.7879, 0.52 ) }
    dend_20 { pt3dadd( -16.4498, 167.731, -29.9865, 0.52 ) }
    dend_20 { pt3dadd( -16.4422, 167.815, -29.9954, 0.52 ) }
    dend_20 { pt3dadd( -16.3664, 168.971, -30.096, 0.96 ) }
    dend_20 { pt3dadd( -16.3231, 169.876, -30.1514, 0.96 ) }
    dend_20 { pt3dadd( -16.32, 169.96, -30.1544, 0.96 ) }
    dend_20 { pt3dadd( -16.279, 171.204, -30.1669, 0.96 ) }
    dend_20 { pt3dadd( -16.2334, 172.146, -30.1498, 0.52 ) }
    dend_20 { pt3dadd( -16.2251, 172.229, -30.147, 0.52 ) }
    dend_20 { pt3dadd( -15.9291, 173.691, -30.0934, 0.52 ) }
    dend_20 { pt3dadd( -15.7944, 174.22, -30.0894, 0.52 ) }
    dend_20 { pt3dadd( -15.7379, 174.421, -30.0924, 0.52 ) }
    dend_20 { pt3dadd( -15.509, 175.166, -30.1212, 0.37 ) }
    dend_20 { pt3dadd( -14.9784, 176.835, -30.2256, 0.37 ) }
    dend_20 { pt3dadd( -14.2373, 179.114, -30.4103, 0.37 ) }
    dend_20 { pt3dadd( -14.0439, 179.697, -30.4693, 0.81 ) }
    dend_20 { pt3dadd( -13.9883, 179.868, -30.489, 0.81 ) }
    dend_20 { pt3dadd( -13.705, 180.779, -30.6025, 0.81 ) }
    dend_20 { pt3dadd( -13.6815, 180.859, -30.6135, 0.81 ) }
    dend_20 { pt3dadd( -13.3555, 182.17, -30.8141, 0.81 ) }
    dend_20 { pt3dadd( -13.2279, 183.031, -30.9383, 0.52 ) }
    dend_20 { pt3dadd( -13.1873, 183.447, -31.0173, 0.22 ) }
    dend_20 { pt3dadd( -13.1837, 183.623, -31.0553, 0.22 ) }
    dend_20 { pt3dadd( -13.2124, 184.226, -31.1968, 0.22 ) }
    dend_20 { pt3dadd( -13.2268, 184.349, -31.2242, 0.22 ) }
    dend_20 { pt3dadd( -13.5235, 185.916, -31.5355, 0.22 ) }
    dend_20 { pt3dadd( -13.8086, 187.173, -31.7745, 0.81 ) }
    dend_20 { pt3dadd( -14.0392, 188.06, -31.945, 0.81 ) }
    dend_20 { pt3dadd( -14.0726, 188.183, -31.9675, 0.81 ) }
    dend_20 { pt3dadd( -14.4636, 189.513, -32.1887, 0.81 ) }
    dend_20 { pt3dadd( -14.7933, 190.662, -32.349, 1.11 ) }
    dend_20 { pt3dadd( -14.8255, 190.786, -32.3623, 1.11 ) }
    dend_20 { pt3dadd( -15.0238, 191.782, -32.4268, 1.47 ) }
    dend_20 { pt3dadd( -15.1223, 192.776, -32.4452, 1.84 ) }
    dend_20 { pt3dadd( -15.1701, 193.841, -32.4336, 1.99 ) }
    dend_20 { pt3dadd( -15.1503, 194.89, -32.396, 1.03 ) }
    dend_20 { pt3dadd( -15.0879, 195.707, -32.3516, 0.59 ) }
    dend_20 { pt3dadd( -14.9817, 196.591, -32.2888, 0.44 ) }
    dend_20 { pt3dadd( -14.4835, 199.309, -32.0445, 0.44 ) }
    dend_20 { pt3dadd( -14.4633, 199.39, -32.0372, 0.44 ) }
    dend_20 { pt3dadd( -14.2391, 200.164, -31.9914, 0.81 ) }
    dend_20 { pt3dadd( -14.0362, 200.839, -31.9713, 0.81 ) }
    dend_20 { pt3dadd( -14.0171, 200.921, -31.9729, 0.81 ) }
    dend_20 { pt3dadd( -13.8338, 201.907, -32.0448, 0.81 ) }
    dend_20 { pt3dadd( -13.7032, 202.869, -32.1661, 0.37 ) }
    dend_20 { pt3dadd( -13.5895, 203.84, -32.2775, 0.37 ) }
    dend_20 { pt3dadd( -13.5799, 203.935, -32.2878, 0.37 ) }
    dend_20 { pt3dadd( -13.2974, 206.547, -32.5471, 0.37 ) }
    dend_20 { pt3dadd( -13.2784, 206.712, -32.562, 0.37 ) }
    dend_20 { pt3dadd( -13.0783, 208.968, -32.7283, 0.37 ) }
    dend_20 { pt3dadd( -13.0141, 209.796, -32.774, 0.37 ) }
    dend_20 { pt3dadd( -12.9878, 210.067, -32.7719, 0.37 ) }
    dend_20 { pt3dadd( -12.8828, 211.032, -32.7272, 0.37 ) }
    dend_20 { pt3dadd( -12.8422, 211.375, -32.6905, 0.37 ) }
    dend_20 { pt3dadd( -12.7342, 212.993, -32.4312, 0.37 ) }
    dend_20 { pt3dadd( -12.7393, 213.086, -32.4091, 0.37 ) }
    dend_20 { pt3dadd( -12.9227, 214.261, -32.1339, 0.37 ) }
    dend_20 { pt3dadd( -12.9562, 214.421, -32.0978, 0.37 ) }
    dend_20 { pt3dadd( -13.1417, 215.211, -31.9422, 0.37 ) }
    dend_20 { pt3dadd( -13.1896, 215.45, -31.9075, 0.37 ) }
    dend_20 { pt3dadd( -13.3392, 216.767, -31.7885, 0.37 ) }
    dend_20 { pt3dadd( -13.4571, 217.887, -31.7365, 0.37 ) }
    dend_20 { pt3dadd( -13.4672, 217.983, -31.7362, 0.37 ) }
    dend_20 { pt3dadd( -13.5704, 219.112, -31.7305, 0.37 ) }
    dend_20 { pt3dadd( -13.6455, 220.159, -31.7352, 0.37 ) }
    dend_20 { pt3dadd( -13.7221, 221.528, -31.7512, 1.25 ) }
    dend_20 { pt3dadd( -13.7643, 222.715, -31.7707, 1.55 ) }
    dend_20 { pt3dadd( -13.7842, 223.141, -31.7794, 1.55 ) }
    dend_20 { pt3dadd( -13.7936, 223.277, -31.7825, 1.55 ) }
    dend_20 { pt3dadd( -13.9118, 224.359, -31.8937, 0.59 ) }
    dend_20 { pt3dadd( -13.9276, 224.452, -31.9104, 0.59 ) }
    dend_20 { pt3dadd( -14.0253, 224.879, -32.0081, 0.59 ) }
    dend_20 { pt3dadd( -14.3203, 226.409, -32.3531, 0.59 ) }
    dend_20 { pt3dadd( -14.3352, 226.489, -32.3727, 0.59 ) }
    dend_20 { pt3dadd( -14.6172, 227.977, -32.7491, 0.59 ) }
    dend_20 { pt3dadd( -14.8286, 229.105, -33.064, 0.59 ) }
    dend_20 { pt3dadd( -15.0504, 230.473, -33.4608, 0.29 ) }
    dend_20 { pt3dadd( -15.2565, 232.135, -33.9449, 0.29 ) }
    dend_20 { pt3dadd( -15.3677, 233.479, -34.3325, 0.81 ) }
    dend_20 { pt3dadd( -15.3714, 233.56, -34.3529, 0.81 ) }
    dend_20 { pt3dadd( -15.3732, 234.323, -34.5076, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_20 { pt3dadd( -15.3388, 235.549, -34.7451, 0.52 ) }
    dend_20 { pt3dadd( -15.2924, 236.743, -34.9433, 0.52 ) }
    dend_20 { pt3dadd( -15.2903, 236.827, -34.9571, 0.52 ) }
    dend_20 { pt3dadd( -15.2531, 238.408, -35.1888, 0.52 ) }
    dend_20 { pt3dadd( -15.2503, 238.587, -35.2148, 0.52 ) }
    dend_20 { pt3dadd( -15.2354, 239.992, -35.3973, 0.96 ) }
    dend_20 { pt3dadd( -15.2176, 241.034, -35.521, 0.96 ) }
    dend_20 { pt3dadd( -15.1583, 242.224, -35.6475, 0.66 ) }
    dend_20 { pt3dadd( -15.0766, 243.164, -35.7342, 0.44 ) }
    dend_20 { pt3dadd( -14.9369, 244.201, -35.8164, 0.44 ) }
    dend_20 { pt3dadd( -14.6036, 246.09, -35.8904, 0.44 ) }
    dend_20 { pt3dadd( -14.3483, 247.275, -35.8987, 1.18 ) }
    dend_20 { pt3dadd( -14.05, 248.571, -35.8657, 1.92 ) }
    dend_20 { pt3dadd( -13.7466, 249.844, -35.7942, 2.21 ) }
    dend_20 { pt3dadd( -13.3694, 251.379, -35.7007, 1.69 ) }
    dend_20 { pt3dadd( -12.9135, 253.236, -35.5906, 0.59 ) }
    dend_20 { pt3dadd( -12.8913, 253.329, -35.5858, 0.59 ) }
    dend_20 { pt3dadd( -12.6515, 254.448, -35.5462, 0.59 ) }
    dend_20 { pt3dadd( -12.3568, 256.066, -35.5013, 0.52 ) }
    dend_20 { pt3dadd( -12.3443, 256.149, -35.5002, 0.52 ) }
    dend_20 { pt3dadd( -12.1436, 257.893, -35.562, 0.81 ) }
    dend_20 { pt3dadd( -12.0341, 259.012, -35.6497, 1.03 ) }
    dend_20 { pt3dadd( -11.9524, 259.869, -35.7262, 1.03 ) }
    dend_20 { pt3dadd( -11.836, 261.02, -35.8394, 0.44 ) }
    dend_20 { pt3dadd( -11.7006, 262.317, -35.972, 0.44 ) }
    dend_20 { pt3dadd( -11.5054, 264.36, -36.1689, 0.44 ) }
    dend_20 { pt3dadd( -11.4457, 265.05, -36.2434, 0.81 ) }
    dend_20 { pt3dadd( -11.3468, 266.336, -36.3886, 0.81 ) }
    dend_20 { pt3dadd( -11.2466, 267.73, -36.5497, 0.52 ) }
    dend_20 { pt3dadd( -11.1535, 269.206, -36.7163, 0.37 ) }
    dend_20 { pt3dadd( -11.0626, 271.68, -36.9823, 0.29 ) }
    dend_20 { pt3dadd( -11.0539, 272.785, -37.0891, 0.81 ) }
    dend_20 { pt3dadd( -11.0705, 273.327, -37.1568, 1.03 ) }
    dend_20 { pt3dadd( -11.0767, 273.41, -37.1697, 1.03 ) }
    dend_20 { pt3dadd( -11.2246, 274.575, -37.3493, 1.03 ) }
    dend_20 { pt3dadd( -11.4834, 276.13, -37.5677, 0.52 ) }
    dend_20 { pt3dadd( -11.4952, 276.2, -37.5751, 0.52 ) }
    dend_20 { pt3dadd( -11.65, 277.238, -37.6211, 0.52 ) }
    dend_20 { pt3dadd( -11.6591, 277.334, -37.6227, 0.52 ) }
    dend_20 { pt3dadd( -11.7154, 278.39, -37.6083, 0.52 ) }
    dend_20 { pt3dadd( -11.6709, 279.268, -37.5711, 0.29 ) }
    dend_20 { pt3dadd( -11.5653, 280.129, -37.513, 0.29 ) }
    dend_20 { pt3dadd( -11.5545, 280.213, -37.5102, 0.29 ) }
    dend_20 { pt3dadd( -11.4023, 281.331, -37.4977, 0.29 ) }
    dend_20 { pt3dadd( -11.3531, 281.731, -37.5166, 0.29 ) }
    dend_20 { pt3dadd( -11.1537, 283.47, -37.7139, 0.29 ) }
    dend_20 { pt3dadd( -11.1457, 283.552, -37.7242, 0.29 ) }
    dend_20 { pt3dadd( -11.0474, 284.546, -37.8517, 0.29 ) }
    dend_20 { pt3dadd( -11.0111, 284.937, -37.901, 0.96 ) }
    dend_20 { pt3dadd( -10.939, 285.792, -38.0087, 0.96 ) }
    dend_20 { pt3dadd( -10.93, 285.887, -38.0198, 0.96 ) }
    dend_20 { pt3dadd( -10.8197, 287.172, -38.1491, 0.88 ) }
    dend_20 { pt3dadd( -10.7538, 287.759, -38.1922, 0.29 ) }
    dend_20 { pt3dadd( -10.7004, 288.278, -38.2093, 0.22 ) }
    dend_20 { pt3dadd( -10.6935, 288.362, -38.212, 0.22 ) }
    dend_20 { pt3dadd( -10.6881, 289.063, -38.2643, 0.22 ) }
    dend_20 { pt3dadd( -10.6965, 289.254, -38.2852, 0.22 ) }
    dend_20 { pt3dadd( -10.7498, 290.116, -38.4327, 0.81 ) }
    dend_20 { pt3dadd( -10.7963, 291.149, -38.6465, 1.11 ) }
    dend_20 { pt3dadd( -10.7931, 291.336, -38.7119, 1.11 ) }
    dend_20 { pt3dadd( -10.7368, 292.332, -39.1682, 0.81 ) }
    dend_20 { pt3dadd( -10.7273, 292.405, -39.2078, 0.81 ) }
    dend_20 { pt3dadd( -10.5608, 293.194, -39.6793, 0.96 ) }
    dend_20 { pt3dadd( -10.3199, 293.98, -40.1625, 0.96 ) }
    dend_20 { pt3dadd( -9.84861, 295.278, -40.7305, 0.15 ) }
    dend_20 { pt3dadd( -9.79449, 295.443, -40.7768, 0.15 ) }
    dend_20 { pt3dadd( -9.471, 296.454, -40.9712, 0.15 ) }
    dend_20 { pt3dadd( -9.40726, 296.722, -41.0048, 0.15 ) }
    dend_20 { pt3dadd( -9.22897, 297.761, -41.0577, 0.15 ) }
    dend_20 { pt3dadd( -8.88503, 300.218, -41.0609, 0.15 ) }
    dend_20 { pt3dadd( -8.69969, 301.779, -40.9956, 0.15 ) }
    dend_20 { pt3dadd( -8.68923, 301.875, -40.9914, 0.15 ) }
    dend_20 { pt3dadd( -8.52475, 303.693, -40.9025, 0.15 ) }
    dend_20 { pt3dadd( -8.4184, 304.98, -40.84, 1.03 ) }
    dend_20 { pt3dadd( -8.35253, 305.928, -40.7947, 1.25 ) }
    dend_20 { pt3dadd( -8.34185, 306.107, -40.7884, 1.25 ) }
    dend_20 { pt3dadd( -8.27702, 306.899, -40.7613, 1.25 ) }
    dend_20 { pt3dadd( -8.26036, 307.025, -40.7588, 1.25 ) }
    dend_20 { pt3dadd( -8.12218, 307.628, -40.7622, 0.66 ) }
    dend_20 { pt3dadd( -8.09864, 307.721, -40.7664, 0.66 ) }
    dend_20 { pt3dadd( -7.88628, 308.578, -40.8054, 0.52 ) }
    dend_20 { pt3dadd( -7.81724, 308.852, -40.818, 0.29 ) }
    dend_20 { pt3dadd( -7.64449, 309.536, -40.8493, 0.29 ) }
    dend_20 { pt3dadd( -7.59927, 309.71, -40.8574, 0.29 ) }
    dend_20 { pt3dadd( -7.29124, 310.891, -40.9258, 0.29 ) }
    dend_20 { pt3dadd( -7.27534, 310.974, -40.9308, 0.29 ) }
    dend_20 { pt3dadd( -7.12853, 311.945, -40.9899, 0.29 ) }
    dend_20 { pt3dadd( -7.06823, 312.548, -41.0325, 0.52 ) }
    dend_20 { pt3dadd( -7.05212, 312.896, -41.0604, 0.52 ) }
    dend_20 { pt3dadd( -7.04349, 313.703, -41.13, 0.22 ) }
    dend_20 { pt3dadd( -7.106, 315.816, -41.3189, 0.22 ) }
    dend_20 { pt3dadd( -7.10963, 315.899, -41.3261, 0.22 ) }
    dend_20 { pt3dadd( -7.15456, 316.647, -41.3917, 0.96 ) }
    dend_20 { pt3dadd( -7.15533, 317.354, -41.4197, 0.96 ) }
    dend_20 { pt3dadd( -7.10613, 318.074, -41.407, 0.29 ) }
    dend_20 { pt3dadd( -6.99988, 318.867, -41.3561, 0.29 ) }
    dend_20 { pt3dadd( -6.80946, 319.81, -41.2677, 0.29 ) }
    dend_20 { pt3dadd( -6.79379, 319.88, -41.2607, 0.29 ) }
    dend_20 { pt3dadd( -6.32174, 321.827, -41.0499, 0.29 ) }
    dend_20 { pt3dadd( -5.93107, 323.359, -40.8845, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_20 { pt3dadd( -5.69437, 324.286, -40.7967, 1.92 ) }
    dend_20 { pt3dadd( -5.54762, 324.878, -40.7501, 1.92 ) }
    dend_20 { pt3dadd( -5.28222, 326.063, -40.6843, 0.52 ) }
    dend_20 { pt3dadd( -5.23456, 326.321, -40.6684, 0.52 ) }
    dend_20 { pt3dadd( -5.16825, 326.846, -40.6429, 0.44 ) }
    dend_20 { pt3dadd( -5.0146, 328.148, -40.5862, 0.44 ) }
    dend_20 { pt3dadd( -4.96549, 328.577, -40.5657, 0.81 ) }
    dend_20 { pt3dadd( -4.91336, 329.277, -40.5402, 0.81 ) }
    dend_20 { pt3dadd( -4.86848, 330.32, -40.5375, 0.22 ) }
    dend_20 { pt3dadd( -4.86447, 330.488, -40.5415, 0.22 ) }
    dend_20 { pt3dadd( -4.84595, 332.338, -40.6235, 0.22 ) }
    dend_20 { pt3dadd( -4.84489, 332.41, -40.6317, 0.22 ) }
    dend_20 { pt3dadd( -4.79252, 334.921, -41.0536, 0.22 ) }
    dend_20 { pt3dadd( -4.73435, 336.172, -41.3272, 0.59 ) }
    dend_20 { pt3dadd( -4.67127, 337.104, -41.5773, 0.96 ) }
    dend_20 { pt3dadd( -4.66366, 337.197, -41.6026, 0.96 ) }
    dend_20 { pt3dadd( -4.50423, 338.753, -42.038, 0.96 ) }
    dend_20 { pt3dadd( -4.48184, 338.913, -42.0857, 0.96 ) }
    dend_20 { pt3dadd( -4.27204, 339.809, -42.3997, 0.96 ) }
    dend_20 { pt3dadd( -4.25266, 339.899, -42.4268, 0.96 ) }
    dend_20 { pt3dadd( -4.12179, 340.657, -42.6121, 0.22 ) }
    dend_20 { pt3dadd( -4.11032, 340.831, -42.656, 0.22 ) }
    dend_20 { pt3dadd( -4.12003, 341.435, -42.7939, 0.22 ) }
    dend_20 { pt3dadd( -4.13584, 341.621, -42.841, 0.22 ) }
    dend_20 { pt3dadd( -4.26063, 342.557, -43.1115, 0.22 ) }
    dend_20 { pt3dadd( -4.27193, 342.638, -43.1347, 0.22 ) }
    dend_20 { pt3dadd( -4.55157, 344.824, -43.8496, 0.22 ) }
    dend_20 { pt3dadd( -4.56198, 344.904, -43.8757, 0.22 ) }
    dend_20 { pt3dadd( -4.71618, 346.114, -44.275, 0.22 ) }
    dend_20 { pt3dadd( -4.77562, 346.618, -44.4451, 0.96 ) }
    dend_20 { pt3dadd( -4.90119, 347.819, -44.831, 1.25 ) }
    dend_20 { pt3dadd( -5.02903, 349.09, -45.2051, 1.03 ) }
    dend_20 { pt3dadd( -5.13401, 350.14, -45.4828, 0.44 ) }
    dend_20 { pt3dadd( -5.26239, 351.478, -45.8279, 0.22 ) }
    dend_20 { pt3dadd( -5.37229, 352.716, -46.1389, 1.18 ) }
    dend_20 { pt3dadd( -5.49077, 354.218, -46.4753, 1.84 ) }
    dend_20 { pt3dadd( -5.55303, 355.162, -46.6668, 1.33 ) }
    dend_20 { pt3dadd( -5.55679, 355.245, -46.6795, 1.33 ) }
    dend_20 { pt3dadd( -5.56333, 356.143, -46.7956, 0.22 ) }
    dend_20 { pt3dadd( -5.55651, 356.516, -46.8249, 0.22 ) }
    dend_20 { pt3dadd( -5.50512, 357.657, -46.8639, 0.22 ) }
    dend_20 { pt3dadd( -5.49319, 357.824, -46.8683, 0.22 ) }
    dend_20 { pt3dadd( -5.427, 358.541, -46.8823, 0.74 ) }
    dend_20 { pt3dadd( -5.37457, 359.088, -46.8819, 0.22 ) }
    dend_20 { pt3dadd( -5.27443, 360.05, -46.8689, 0.22 ) }
    dend_20 { pt3dadd( -5.26627, 360.133, -46.8666, 0.22 ) }
    dend_20 { pt3dadd( -5.09391, 362.139, -46.7881, 0.22 ) }
    dend_20 { pt3dadd( -5.03062, 362.947, -46.7688, 0.22 ) }
    dend_20 { pt3dadd( -4.95895, 364.09, -46.7518, 1.33 ) }
    dend_20 { pt3dadd( -4.91988, 364.777, -46.7453, 1.33 ) }
    dend_20 { pt3dadd( -4.86928, 365.847, -46.7414, 0.52 ) }
    dend_20 { pt3dadd( -4.86654, 365.931, -46.7416, 0.52 ) }
    dend_20 { pt3dadd( -4.84859, 367.815, -46.7744, 0.29 ) }
    dend_20 { pt3dadd( -4.85406, 369.613, -46.7304, 0.29 ) }
    dend_20 { pt3dadd( -4.85571, 369.96, -46.7138, 0.59 ) }
    dend_20 { pt3dadd( -4.86281, 370.756, -46.6535, 0.59 ) }
    dend_20 { pt3dadd( -4.8635, 370.84, -46.6453, 0.59 ) }
    dend_20 { pt3dadd( -4.88141, 374.377, -46.1973, 0.22 ) }
    dend_20 { pt3dadd( -4.87925, 375.847, -45.9556, 0.29 ) }
    dend_20 { pt3dadd( -4.87769, 376.012, -45.9268, 0.29 ) }
    dend_20 { pt3dadd( -4.8734, 376.541, -45.8407, 0.29 ) }
    dend_20 { pt3dadd( -4.87202, 376.805, -45.8052, 0.29 ) }
    dend_20 { pt3dadd( -4.86604, 377.604, -45.7304, 0.29 ) }
    dend_20 { pt3dadd( -4.85167, 378.64, -45.6932, 0.22 ) }
    dend_20 { pt3dadd( -4.85035, 378.736, -45.6948, 0.22 ) }
    dend_20 { pt3dadd( -4.82676, 380.176, -45.7445, 0.22 ) }
    dend_20 { pt3dadd( -4.7996, 381.844, -45.8232, 0.22 ) }
    dend_20 { pt3dadd( -4.79702, 382.808, -45.8785, 1.33 ) }
    dend_20 { pt3dadd( -4.81049, 383.933, -45.9539, 1.47 ) }
    dend_20 { pt3dadd( -4.81379, 384.017, -45.9599, 1.47 ) }
    dend_20 { pt3dadd( -4.88555, 385.205, -46.0236, 0.22 ) }
    dend_20 { pt3dadd( -4.89493, 385.324, -46.0285, 0.22 ) }
    dend_20 { pt3dadd( -5.01083, 386.646, -46.062, 0.22 ) }
    dend_20 { pt3dadd( -5.05445, 387.087, -46.0783, 0.22 ) }
    dend_20 { pt3dadd( -5.18771, 388.418, -46.142, 0.22 ) }
    dend_20 { pt3dadd( -5.33234, 390.122, -46.2174, 0.22 ) }
    dend_20 { pt3dadd( -5.34264, 390.29, -46.2241, 0.22 ) }
    dend_20 { pt3dadd( -5.42214, 392.134, -46.3061, 0.22 ) }
    dend_20 { pt3dadd( -5.48612, 394.367, -46.4173, 0.22 ) }
    dend_20 { pt3dadd( -5.51162, 395.711, -46.4915, 1.11 ) }
    dend_20 { pt3dadd( -5.51854, 397.041, -46.5755, 1.4 ) }
    dend_20 { pt3dadd( -5.50655, 398.514, -46.6805, 1.4 ) }
    dend_20 { pt3dadd( -5.50508, 398.587, -46.6852, 1.4 ) }
    dend_20 { pt3dadd( -5.47419, 399.256, -46.7165, 1.4 ) }
    dend_20 { pt3dadd( -5.46678, 399.34, -46.7179, 1.33 ) }
    dend_20 { pt3dadd( -5.40701, 399.944, -46.7523, 0.22 ) }
    dend_20 { pt3dadd( -5.27879, 401.251, -46.8884, 0.22 ) }
    dend_20 { pt3dadd( -5.26199, 401.418, -46.9103, 0.22 ) }
    dend_20 { pt3dadd( -5.08212, 403.236, -47.0843, 0.22 ) }
    dend_20 { pt3dadd( -5.06451, 403.415, -47.0971, 0.22 ) }
    dend_20 { pt3dadd( -4.97797, 404.503, -47.1428, 0.22 ) }
    dend_20 { pt3dadd( -4.96081, 404.766, -47.1468, 0.22 ) }
    dend_20 { pt3dadd( -4.8984, 405.811, -47.1329, 0.74 ) }
    dend_20 { pt3dadd( -4.82689, 406.893, -47.1575, 0.22 ) }
    dend_20 { pt3dadd( -4.82219, 406.977, -47.1609, 0.22 ) }
    dend_20 { pt3dadd( -4.77444, 408.119, -47.219, 0.22 ) }
    dend_20 { pt3dadd( -4.76771, 408.299, -47.2288, 0.22 ) }
    dend_20 { pt3dadd( -4.70199, 411.247, -47.4551, 0.22 ) }
    dend_20 { pt3dadd( -4.68149, 412.569, -47.5909, 0.22 ) }
    dend_20 { pt3dadd( -4.6694, 413.335, -47.6886, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_20 { pt3dadd( -4.65689, 414.49, -47.8257, 1.33 ) }
    dend_20 { pt3dadd( -4.65506, 414.687, -47.847, 1.33 ) }
    dend_20 { pt3dadd( -4.63122, 416.344, -47.9989, 1.33 ) }
    dend_20 { pt3dadd( -4.62919, 416.428, -48.0042, 1.33 ) }
    dend_20 { pt3dadd( -4.55178, 417.915, -48.047, 1.33 ) }
    dend_20 { pt3dadd( -4.49287, 418.783, -48.0731, 0.66 ) }
    dend_20 { pt3dadd( -4.42389, 419.657, -48.1001, 0.66 ) }
    dend_20 { pt3dadd( -4.36249, 420.365, -48.1478, 0.44 ) }
    dend_20 { pt3dadd( -4.29716, 420.977, -48.211, 0.29 ) }
    dend_20 { pt3dadd( -4.27982, 421.142, -48.2321, 0.29 ) }
    dend_20 { pt3dadd( -4.13425, 422.614, -48.4625, 0.29 ) }
    dend_20 { pt3dadd( -4.13067, 422.709, -48.4766, 0.29 ) }
    dend_20 { pt3dadd( -4.13421, 424.014, -48.6609, 0.29 ) }
    dend_20 { pt3dadd( -4.13826, 424.182, -48.6796, 0.29 ) }
    dend_20 { pt3dadd( -4.17752, 425.573, -48.7099, 0.29 ) }
    dend_20 { pt3dadd( -4.19108, 425.964, -48.6882, 0.29 ) }
    dend_20 { pt3dadd( -4.28381, 428.364, -48.375, 0.29 ) }
    dend_20 { pt3dadd( -4.29069, 428.54, -48.3415, 0.29 ) }
    dend_20 { pt3dadd( -4.31512, 429.302, -48.1413, 1.03 ) }
    dend_20 { pt3dadd( -4.32527, 430.849, -47.7044, 1.03 ) }
    dend_20 { pt3dadd( -4.3079, 431.52, -47.493, 1.25 ) }
    dend_20 { pt3dadd( -4.30288, 431.589, -47.4734, 1.25 ) }
    dend_20 { pt3dadd( -4.22033, 432.232, -47.3388, 0.88 ) }
    dend_20 { pt3dadd( -4.14479, 432.924, -47.2704, 0.44 ) }
    dend_20 { pt3dadd( -4.08507, 433.635, -47.2829, 0.22 ) }
    dend_20 { pt3dadd( -4.06206, 433.969, -47.3212, 0.22 ) }
    dend_20 { pt3dadd( -3.96152, 435.573, -47.5039, 0.22 ) }
    dend_20 { pt3dadd( -3.92721, 436.312, -47.5842, 0.22 ) }
    dend_20 { pt3dadd( -3.91878, 436.879, -47.6299, 0.59 ) }
    dend_20 { pt3dadd( -3.91638, 437.44, -47.64, 0.59 ) }
    dend_20 { pt3dadd( -3.9165, 437.524, -47.6367, 0.59 ) }
    dend_20 { pt3dadd( -3.91173, 438.59, -47.546, 0.22 ) }
    dend_20 { pt3dadd( -3.90668, 438.793, -47.5191, 0.22 ) }
    dend_20 { pt3dadd( -3.82967, 441.143, -47.0965, 0.22 ) }
    dend_20 { pt3dadd( -3.79728, 441.924, -46.9396, 0.59 ) }
    dend_20 { pt3dadd( -3.76852, 442.637, -46.7571, 0.22 ) }
    dend_20 { pt3dadd( -3.76439, 442.718, -46.7352, 0.22 ) }
    dend_20 { pt3dadd( -3.69974, 443.805, -46.4426, 0.22 ) }
    dend_20 { pt3dadd( -3.56225, 445.792, -45.8834, 0.22 ) }
    dend_20 { pt3dadd( -3.54827, 445.942, -45.8493, 0.22 ) }
    dend_20 { pt3dadd( -3.3272, 448.049, -45.6028, 0.22 ) }
    dend_20 { pt3dadd( -3.15436, 449.523, -45.535, 0.22 ) }
    dend_20 { pt3dadd( -2.99301, 450.826, -45.5438, 0.37 ) }
    dend_20 { pt3dadd( -2.84247, 451.988, -45.6193, 0.74 ) }
    dend_20 { pt3dadd( -2.57581, 453.906, -45.8709, 1.47 ) }
    dend_20 { pt3dadd( -2.31663, 455.968, -46.1606, 1.77 ) }
    dend_20 { pt3dadd( -2.14836, 457.425, -46.409, 1.77 ) }
    dend_20 { pt3dadd( -2.14103, 457.509, -46.4201, 1.77 ) }
    dend_20 { pt3dadd( -2.07278, 458.456, -46.5078, 0.74 ) }
    dend_20 { pt3dadd( -2.00296, 459.774, -46.5636, 0.74 ) }
    dend_20 { pt3dadd( -1.9672, 461.116, -46.4706, 0.22 ) }
    dend_20 { pt3dadd( -1.96444, 461.283, -46.4506, 0.22 ) }
    dend_20 { pt3dadd( -1.9359, 463.565, -46.2755, 0.22 ) }
    dend_20 { pt3dadd( -1.93404, 463.649, -46.2729, 0.22 ) }
    dend_20 { pt3dadd( -1.91511, 464.173, -46.2859, 0.44 ) }
    dend_20 { pt3dadd( -1.90461, 464.352, -46.3034, 0.44 ) }
    dend_20 { pt3dadd( -1.75927, 466.162, -46.6096, 0.44 ) }
    dend_20 { pt3dadd( -1.68595, 467.103, -46.7799, 0.74 ) }
    dend_20 { pt3dadd( -1.66618, 467.36, -46.8238, 0.74 ) }
    dend_20 { pt3dadd( -1.63496, 467.788, -46.8876, 0.74 ) }
    dend_20 { pt3dadd( -1.57457, 468.487, -46.9781, 0.44 ) }
    dend_20 { pt3dadd( -1.44738, 469.74, -47.1078, 0.44 ) }
    dend_20 { pt3dadd( -1.43758, 469.823, -47.114, 0.44 ) }
    dend_20 { pt3dadd( -1.10571, 472.16, -47.199, 0.44 ) }
    dend_20 { pt3dadd( -1.09245, 472.243, -47.2022, 0.44 ) }
    dend_20 { pt3dadd( -0.956736, 472.982, -47.2317, 0.37 ) }
    dend_20 { pt3dadd( -0.784584, 473.831, -47.2774, 0.37 ) }
    dend_20 { pt3dadd( -0.765878, 473.913, -47.2828, 0.37 ) }
    dend_20 { pt3dadd( -0.555583, 474.863, -47.352, 0.22 ) }
    dend_20 { pt3dadd( -0.517381, 475.039, -47.3661, 0.22 ) }
    dend_20 { pt3dadd( -0.183298, 476.657, -47.4893, 0.22 ) }
    dend_20 { pt3dadd( -0.00935105, 477.537, -47.554, 0.96 ) }
    dend_20 { pt3dadd( 0.159934, 478.4, -47.6159, 0.96 ) }
    dend_20 { pt3dadd( 0.356676, 479.326, -47.7233, 0.22 ) }
    dend_20 { pt3dadd( 0.431271, 479.663, -47.7747, 0.22 ) }
    dend_20 { pt3dadd( 0.977926, 481.936, -48.1973, 0.22 ) }
    dend_20 { pt3dadd( 1.13511, 482.509, -48.3274, 0.88 ) }
    dend_20 { pt3dadd( 1.15903, 482.587, -48.3475, 0.88 ) }
    dend_20 { pt3dadd( 1.5858, 483.884, -48.7409, 1.25 ) }
    dend_20 { pt3dadd( 1.71523, 484.24, -48.8683, 1.25 ) }
    dend_20 { pt3dadd( 1.74224, 484.315, -48.8966, 1.25 ) }
    dend_20 { pt3dadd( 1.96977, 484.941, -49.1602, 0.29 ) }
    dend_20 { pt3dadd( 1.99142, 485.02, -49.1793, 0.29 ) }
    dend_20 { pt3dadd( 2.04681, 485.263, -49.212, 0.29 ) }
    dend_20 { pt3dadd( 2.06479, 485.358, -49.2108, 0.29 ) }
    dend_20 { pt3dadd( 2.23688, 486.485, -49.1594, 0.22 ) }
    dend_20 { pt3dadd( 2.27138, 486.759, -49.1414, 0.22 ) }
    dend_20 { pt3dadd( 2.44219, 488.381, -49.0047, 0.22 ) }
    dend_20 { pt3dadd( 2.45215, 488.476, -48.9958, 0.22 ) }
    dend_20 { pt3dadd( 2.55329, 489.457, -48.8966, 0.96 ) }
    dend_20 { pt3dadd( 2.63537, 490.336, -48.8035, 0.96 ) }
    dend_20 { pt3dadd( 2.64963, 490.523, -48.7656, 0.96 ) }
    dend_20 { pt3dadd( 2.67275, 490.867, -48.6755, 0.66 ) }
    dend_20 { pt3dadd( 2.68901, 491.453, -48.518, 0.66 ) }
    dend_20 { pt3dadd( 2.68778, 491.629, -48.4753, 0.66 ) }
    dend_20 { pt3dadd( 2.65394, 492.829, -48.207, 0.52 ) }
    dend_20 { pt3dadd( 2.56451, 494.557, -47.8329, 0.22 ) }
    dend_20 { pt3dadd( 2.5483, 494.732, -47.7934, 0.22 ) }
    dend_20 { pt3dadd( 2.23604, 497.026, -47.2754, 0.22 ) }
    dend_20 { pt3dadd( 2.13131, 497.618, -47.0916, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_20 { pt3dadd( 2.10059, 497.786, -47.0322, 0.81 ) }
    dend_20 { pt3dadd( 1.97788, 498.525, -46.6974, 0.81 ) }
    dend_20 { pt3dadd( 1.86467, 499.749, -46.1261, 0.15 ) }
    dend_20 { pt3dadd( 1.85353, 500.339, -45.7996, 0.15 ) }
    dend_20 { pt3dadd( 1.89119, 502.363, -44.527, 0.15 ) }
    dend_20 { pt3dadd( 1.94687, 503.529, -43.7636, 0.15 ) }
    dend_20 { pt3dadd( 2.06771, 505.098, -42.7052, 0.15 ) }
    dend_20 { pt3dadd( 2.30809, 506.897, -41.4413, 1.4 ) }
    dend_20 { pt3dadd( 2.52657, 507.968, -40.6879, 1.4 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -189.997, 90.723, -147.048, 0.22 ) }
    dend_16 { pt3dadd( -191.552, 90.8598, -148.139, 0.22 ) }
    dend_16 { pt3dadd( -192.487, 90.9626, -148.706, 0.22 ) }
    dend_16 { pt3dadd( -193.631, 91.1181, -149.281, 0.22 ) }
    dend_16 { pt3dadd( -193.697, 91.1282, -149.31, 0.22 ) }
    dend_16 { pt3dadd( -194.544, 91.2695, -149.635, 0.22 ) }
    dend_16 { pt3dadd( -194.602, 91.2795, -149.655, 0.22 ) }
    dend_16 { pt3dadd( -195.446, 91.4268, -149.874, 1.25 ) }
    dend_16 { pt3dadd( -196.704, 91.6092, -150.189, 1.25 ) }
    dend_16 { pt3dadd( -197.391, 91.6831, -150.356, 0.22 ) }
    dend_16 { pt3dadd( -198.872, 91.8201, -150.774, 0.22 ) }
    dend_16 { pt3dadd( -199.092, 91.839, -150.841, 0.22 ) }
    dend_16 { pt3dadd( -200.558, 91.9721, -151.336, 0.22 ) }
    dend_16 { pt3dadd( -200.919, 92.0095, -151.471, 0.22 ) }
    dend_16 { pt3dadd( -202.13, 92.1409, -151.952, 0.22 ) }
    dend_16 { pt3dadd( -203.595, 92.2989, -152.555, 0.22 ) }
    dend_16 { pt3dadd( -203.952, 92.3391, -152.707, 1.11 ) }
    dend_16 { pt3dadd( -204.029, 92.349, -152.739, 1.11 ) }
    dend_16 { pt3dadd( -204.953, 92.4913, -153.119, 1.11 ) }
    dend_16 { pt3dadd( -205.031, 92.4999, -153.148, 1.11 ) }
    dend_16 { pt3dadd( -206.219, 92.5712, -153.542, 0.22 ) }
    dend_16 { pt3dadd( -206.288, 92.5745, -153.565, 0.22 ) }
    dend_16 { pt3dadd( -207.286, 92.6238, -153.952, 0.22 ) }
    dend_16 { pt3dadd( -207.446, 92.6418, -154.021, 0.22 ) }
    dend_16 { pt3dadd( -208.503, 92.7666, -154.508, 0.22 ) }
    dend_16 { pt3dadd( -208.578, 92.7778, -154.545, 0.22 ) }
    dend_16 { pt3dadd( -209.648, 93.0139, -155.141, 0.22 ) }
    dend_16 { pt3dadd( -209.771, 93.0465, -155.215, 0.22 ) }
    dend_16 { pt3dadd( -210.786, 93.4334, -155.946, 0.96 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 38/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -189.997, 90.723, -147.048, 0.22 ) }
    dend_15 { pt3dadd( -190.157, 91.6567, -147.16, 0.22 ) }
    dend_15 { pt3dadd( -190.165, 91.7031, -147.168, 0.22 ) }
    dend_15 { pt3dadd( -190.31, 92.4685, -147.29, 0.22 ) }
    dend_15 { pt3dadd( -190.326, 92.5661, -147.314, 0.22 ) }
    dend_15 { pt3dadd( -190.456, 93.3206, -147.494, 0.22 ) }
    dend_15 { pt3dadd( -190.725, 94.8867, -147.868, 0.22 ) }
    dend_15 { pt3dadd( -190.739, 94.9769, -147.892, 0.22 ) }
    dend_15 { pt3dadd( -190.82, 95.496, -148.051, 0.22 ) }
    dend_15 { pt3dadd( -190.971, 96.4286, -148.414, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 48/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -144.767, 58.1426, -115.702, 0.66 ) }
    dend_13 { pt3dadd( -144.989, 57.6951, -115.792, 0.66 ) }
    dend_13 { pt3dadd( -145.25, 57.1782, -115.889, 0.66 ) }
    dend_13 { pt3dadd( -145.63, 56.4719, -116.045, 0.44 ) }
    dend_13 { pt3dadd( -145.962, 55.9089, -116.205, 0.52 ) }
    dend_13 { pt3dadd( -146.211, 55.5114, -116.333, 0.52 ) }
    dend_13 { pt3dadd( -146.621, 54.9404, -116.55, 0.22 ) }
    dend_13 { pt3dadd( -146.651, 54.9038, -116.568, 0.22 ) }
    dend_13 { pt3dadd( -147.223, 54.3316, -116.936, 0.22 ) }
    dend_13 { pt3dadd( -147.652, 54.0101, -117.233, 0.88 ) }
    dend_13 { pt3dadd( -147.729, 53.9722, -117.285, 0.88 ) }
    dend_13 { pt3dadd( -148.461, 53.7444, -117.774, 0.88 ) }
    dend_13 { pt3dadd( -148.502, 53.7355, -117.803, 0.88 ) }
    dend_13 { pt3dadd( -149.087, 53.6409, -118.201, 0.44 ) }
    dend_13 { pt3dadd( -149.552, 53.6202, -118.502, 0.22 ) }
    dend_13 { pt3dadd( -150.33, 53.6235, -118.979, 0.22 ) }
    dend_13 { pt3dadd( -150.522, 53.6313, -119.096, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 65/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -144.767, 58.1426, -115.702, 0.22 ) }
    dend_12 { pt3dadd( -145.396, 58.5658, -115.942, 0.22 ) }
    dend_12 { pt3dadd( -146.021, 58.9786, -116.19, 0.22 ) }
    dend_12 { pt3dadd( -147.078, 59.6762, -116.609, 0.22 ) }
    dend_12 { pt3dadd( -147.908, 60.2238, -116.937, 0.22 ) }
    dend_12 { pt3dadd( -147.993, 60.2798, -116.971, 0.22 ) }
    dend_12 { pt3dadd( -149.128, 61.0291, -117.421, 0.22 ) }
    dend_12 { pt3dadd( -149.188, 61.0739, -117.453, 0.22 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 73/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -189.176, -193.154, 134.907, 0.29 ) }
    dend_68 { pt3dadd( -197.062, -196.164, 139.173, 0.29 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 75/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -189.176, -193.154, 134.907, 0.29 ) }
    dend_67 { pt3dadd( -201.468, -197.911, 140.528, 0.29 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 77/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -167.564, -245.198, 78.8677, 0.29 ) }
    dend_63 { pt3dadd( -169.857, -252.852, 77.3489, 0.29 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 79/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -167.564, -245.198, 78.8677, 0.29 ) }
    dend_62 { pt3dadd( -177.422, -255.125, 75.2312, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 81/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 225.915, 279.169, -92.9181, 0.15 ) }
    dend_28 { pt3dadd( 229.164, 280.814, -95.6803, 0.15 ) }
    dend_28 { pt3dadd( 230.249, 281.381, -96.4625, 0.96 ) }
    dend_28 { pt3dadd( 230.38, 281.449, -96.5472, 0.96 ) }
    dend_28 { pt3dadd( 231.955, 282.262, -97.4266, 0.15 ) }
    dend_28 { pt3dadd( 232.053, 282.312, -97.4759, 0.15 ) }
    dend_28 { pt3dadd( 233.535, 282.992, -97.933, 0.15 ) }
    dend_28 { pt3dadd( 234.068, 283.181, -97.8226, 0.52 ) }
    dend_28 { pt3dadd( 234.164, 283.21, -97.7902, 0.52 ) }
    dend_28 { pt3dadd( 235.059, 283.434, -97.4131, 0.66 ) }
    dend_28 { pt3dadd( 235.154, 283.451, -97.3689, 0.66 ) }
    dend_28 { pt3dadd( 238.086, 283.928, -96.2177, 0.15 ) }
    dend_28 { pt3dadd( 239.888, 284.169, -95.6497, 0.15 ) }
    dend_28 { pt3dadd( 240.134, 284.203, -95.585, 0.96 ) }
    dend_28 { pt3dadd( 240.354, 284.231, -95.5402, 0.96 ) }
    dend_28 { pt3dadd( 242.063, 284.458, -95.2202, 0.15 ) }
    dend_28 { pt3dadd( 244.693, 284.847, -94.7766, 0.15 ) }
    dend_28 { pt3dadd( 246.476, 285.132, -94.5446, 0.15 ) }
    dend_28 { pt3dadd( 246.706, 285.17, -94.5085, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_28 { pt3dadd( 248.533, 285.498, -94.1813, 0.15 ) }
    dend_28 { pt3dadd( 251.32, 286.034, -93.6761, 0.15 ) }
    dend_28 { pt3dadd( 252.102, 286.231, -93.5379, 0.88 ) }
    dend_28 { pt3dadd( 252.3, 286.295, -93.5089, 0.88 ) }
    dend_28 { pt3dadd( 252.803, 286.511, -93.4643, 0.88 ) }
    dend_28 { pt3dadd( 252.91, 286.566, -93.4688, 0.88 ) }
    dend_28 { pt3dadd( 253.99, 287.171, -93.5722, 0.22 ) }
    dend_28 { pt3dadd( 256.905, 288.865, -94.0619, 0.22 ) }
    dend_28 { pt3dadd( 257.758, 289.361, -94.2146, 0.66 ) }
    dend_28 { pt3dadd( 261.602, 291.593, -94.8906, 0.15 ) }
    dend_28 { pt3dadd( 263.834, 292.87, -95.2693, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 225.915, 279.169, -92.9181, 0.15 ) }
    dend_27 { pt3dadd( 226.535, 279.944, -93.0912, 0.15 ) }
    dend_27 { pt3dadd( 227.231, 280.814, -93.2857, 0.15 ) }
    dend_27 { pt3dadd( 227.27, 280.862, -93.2964, 0.15 ) }
    dend_27 { pt3dadd( 228.444, 282.328, -93.6241, 1.03 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 16/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 186.878, 236.553, -84.4465, 0.29 ) }
    dend_25 { pt3dadd( 189.147, 236.051, -85.3793, 0.29 ) }
    dend_25 { pt3dadd( 189.222, 236.032, -85.4073, 0.29 ) }
    dend_25 { pt3dadd( 190.381, 235.742, -85.8285, 0.74 ) }
    dend_25 { pt3dadd( 191.105, 235.586, -86.0044, 0.74 ) }
    dend_25 { pt3dadd( 191.979, 235.41, -86.1701, 0.74 ) }
    dend_25 { pt3dadd( 192.047, 235.397, -86.1847, 0.74 ) }
    dend_25 { pt3dadd( 193.186, 235.186, -86.3142, 0.22 ) }
    dend_25 { pt3dadd( 193.255, 235.172, -86.3232, 0.22 ) }
    dend_25 { pt3dadd( 195.132, 234.78, -86.5807, 0.22 ) }
    dend_25 { pt3dadd( 195.21, 234.762, -86.5908, 0.22 ) }
    dend_25 { pt3dadd( 196.349, 234.524, -86.7104, 0.52 ) }
    dend_25 { pt3dadd( 196.419, 234.509, -86.7124, 0.52 ) }
    dend_25 { pt3dadd( 197.116, 234.373, -86.6478, 0.52 ) }
    dend_25 { pt3dadd( 197.335, 234.344, -86.6117, 0.52 ) }
    dend_25 { pt3dadd( 197.998, 234.331, -86.4097, 0.22 ) }
    dend_25 { pt3dadd( 198.065, 234.337, -86.3839, 0.22 ) }
    dend_25 { pt3dadd( 198.612, 234.412, -86.1619, 0.22 ) }
    dend_25 { pt3dadd( 198.896, 234.456, -86.062, 0.22 ) }
    dend_25 { pt3dadd( 199.716, 234.564, -85.8212, 0.22 ) }
    dend_25 { pt3dadd( 199.853, 234.577, -85.7873, 0.22 ) }
    dend_25 { pt3dadd( 201.105, 234.676, -85.5355, 0.22 ) }
    dend_25 { pt3dadd( 201.69, 234.688, -85.4965, 0.74 ) }
    dend_25 { pt3dadd( 201.761, 234.684, -85.4995, 0.74 ) }
    dend_25 { pt3dadd( 202.826, 234.545, -85.6194, 0.74 ) }
    dend_25 { pt3dadd( 202.905, 234.53, -85.6319, 0.74 ) }
    dend_25 { pt3dadd( 203.152, 234.488, -85.691, 1.03 ) }
    dend_25 { pt3dadd( 204.839, 234.24, -86.2307, 0.52 ) }
    dend_25 { pt3dadd( 205.802, 234.128, -86.5286, 0.22 ) }
    dend_25 { pt3dadd( 205.869, 234.121, -86.5496, 0.22 ) }
    dend_25 { pt3dadd( 206.43, 234.078, -86.731, 0.59 ) }
    dend_25 { pt3dadd( 207.605, 233.996, -87.0774, 0.59 ) }
    dend_25 { pt3dadd( 207.774, 233.981, -87.1136, 0.59 ) }
    dend_25 { pt3dadd( 208.683, 233.901, -87.1956, 0.59 ) }
    dend_25 { pt3dadd( 208.764, 233.893, -87.2019, 0.59 ) }
    dend_25 { pt3dadd( 209.434, 233.808, -87.23, 0.96 ) }
    dend_25 { pt3dadd( 209.514, 233.794, -87.2307, 0.96 ) }
    dend_25 { pt3dadd( 210.513, 233.566, -87.1428, 0.96 ) }
    dend_25 { pt3dadd( 210.592, 233.546, -87.1363, 0.96 ) }
    dend_25 { pt3dadd( 211.32, 233.366, -87.0815, 0.44 ) }
    dend_25 { pt3dadd( 211.388, 233.348, -87.074, 0.44 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 57/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 186.878, 236.553, -84.4465, 0.29 ) }
    dend_24 { pt3dadd( 187.299, 235.345, -84.5928, 0.29 ) }
    dend_24 { pt3dadd( 187.752, 234.045, -84.7503, 0.29 ) }
    dend_24 { pt3dadd( 187.99, 233.363, -84.8327, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_77, dend_74, dend_35, dend_0, dend_79, dend_78, dend_76, dend_75, dend_51, dend_36, dend_30, dend_1, dend_53, dend_52, dend_42, dend_37, dend_32, dend_31, dend_5, dend_2, dend_57, dend_54, dend_50, dend_43, dend_41, dend_38, dend_34, dend_33, dend_17, dend_6, dend_4, dend_3, dend_69, dend_58, dend_56, dend_55, dend_47, dend_44, dend_40, dend_39, dend_29, dend_18, dend_10, dend_7, dend_73, dend_70, dend_64, dend_59, dend_49, dend_48, dend_46, dend_45, dend_22, dend_19, dend_14, dend_11, dend_9, dend_8, dend_72, dend_71, dend_66, dend_65, dend_61, dend_60, dend_26, dend_23, dend_21, dend_20, dend_16, dend_15, dend_13, dend_12, dend_68, dend_67, dend_63, dend_62, dend_28, dend_27, dend_25, dend_24]}
    ModelViewParmSubset_2 = new SectionList()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_77, dend_74, dend_35, dend_0, dend_79, dend_78, dend_76, dend_75, dend_51, dend_36, dend_30, dend_1, dend_53, dend_52, dend_42, dend_37, dend_32, dend_31, dend_5, dend_2, dend_57, dend_54, dend_50, dend_43, dend_41, dend_38, dend_34, dend_33, dend_17, dend_6, dend_4, dend_3, dend_69, dend_58, dend_56, dend_55, dend_47, dend_44, dend_40, dend_39, dend_29, dend_18, dend_10, dend_7, dend_73, dend_70, dend_64, dend_59, dend_49, dend_48, dend_46, dend_45, dend_22, dend_19, dend_14, dend_11, dend_9, dend_8, dend_72, dend_71, dend_66, dend_65, dend_61, dend_60, dend_26, dend_23, dend_21, dend_20, dend_16, dend_15, dend_13, dend_12, dend_68, dend_67, dend_63, dend_62, dend_28, dend_27, dend_25, dend_24]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_77 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_74 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_78 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_76 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_75 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_53 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_52 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_32 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_57 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_41 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_34 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_33 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_69 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_58 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_56 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_55 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_47 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_44 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_39 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_29 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_73 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_64 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_59 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_48 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_71 OneSecGrp_SectionRef_63.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_65 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_60 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_26 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_21 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_20 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_28 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_51 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_37 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_30 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_38 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_6 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_7 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_17 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_18 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_54 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_79 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_11 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_49 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_12 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_13 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_70 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_45 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_72 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_46 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_16 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_66 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_61 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_68 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_67 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_63 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_62 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_23 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_24 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_25 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_27 OneSecGrp_SectionRef_81.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_68, dend_67, dend_63, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_77 nseg = 3
    dend_74 nseg = 7
    dend_78 nseg = 5
    dend_76 nseg = 5
    dend_75 nseg = 5
    dend_53 nseg = 3
    dend_52 nseg = 5
    dend_32 nseg = 11
    dend_31 nseg = 5
    dend_2 nseg = 11
    dend_57 nseg = 3
    dend_50 nseg = 5
    dend_43 nseg = 5
    dend_41 nseg = 5
    dend_34 nseg = 3
    dend_33 nseg = 3
    dend_69 nseg = 5
    dend_58 nseg = 5
    dend_56 nseg = 17
    dend_55 nseg = 17
    dend_47 nseg = 5
    dend_44 nseg = 7
    dend_39 nseg = 5
    dend_29 nseg = 17
    dend_10 nseg = 7
    dend_73 nseg = 5
    dend_64 nseg = 3
    dend_59 nseg = 3
    dend_48 nseg = 5
    dend_22 nseg = 13
    dend_14 nseg = 5
    dend_8 nseg = 7
    dend_71 nseg = 5
    dend_65 nseg = 13
    dend_60 nseg = 11
    dend_26 nseg = 3
    dend_21 nseg = 7
    dend_20 nseg = 21
    dend_28 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_LBC_05f55c6541_0_0


