// Cell: bNAC219_L5_SBC_30bda13a76_0_0
/*
{
  "id" : "bNAC219_L5_SBC_30bda13a76_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.0539, -10.2039, 0.0, 4.14336", "-1.01121, -9.20625, 0.0, 7.24872", "-0.968511, -8.20857, 0.0, 9.44401", "-0.925815, -7.2109, 0.0, 10.5422", "-0.88312, -6.21322, 0.0, 11.4092", "-0.840424, -5.21554, 0.0, 11.9642", "-0.797728, -4.21787, 0.0, 12.4342", "-0.755032, -3.22019, 0.0, 12.6614", "-0.712337, -2.22251, 0.0, 12.6364", "-0.669641, -1.22484, 0.0, 12.5104", "-0.626945, -0.227159, 0.0, 12.2671", "-0.584249, 0.770517, 0.0, 12.0239", "-0.541554, 1.76819, 0.0, 11.4645", "-0.498858, 2.76587, 0.0, 10.6882", "-0.456162, 3.76355, 0.0, 9.91399", "-0.413466, 4.76122, 0.0, 9.47101", "-0.370771, 5.7589, 0.0, 9.20688", "-0.328075, 6.75658, 0.0, 8.75449", "-0.285379, 7.75425, 0.0, 8.25522", "-0.242683, 8.75193, 0.0, 6.57349", "-0.199988, 9.74961, 0.0, 3.81" ]
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.284736, 7.14994, 0.16, 6.82", "0.822191, 8.94229, 0.549519, 6.82", "1.67612, 11.79, 1.1684, 6.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.66527, -9.6493, 1.27, 5.68", "-3.45376, -12.2047, 0.591773, 3.64", "-4.22025, -14.6888, -0.0675285, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.30527, 7.10119, 0.0100002, 1.59", "-5.42496, 7.83444, -0.0319012, 1.59", "-8.75662, 8.98695, -0.0977602, 1.36", "-10.5109, 9.59379, -0.132438, 1.36", "-14.5878, 11.004, -0.213028, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.199988, 9.74961, 0.0, 0.483274", "0.441352, 24.7359, 0.0, 0.483274", "1.08269, 39.7222, 0.0, 0.483274" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "1.67612, 11.79, 1.1684, 1.14", "0.265031, 14.7577, 0.848716, 1.14", "-0.367988, 16.089, 0.705304, 1.14", "-0.777503, 16.9503, 0.612527, 1.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.67612, 11.79, 1.1684, 0.91", "5.36056, 13.4557, -1.52716, 0.91", "7.07481, 14.2307, -2.78132, 0.91" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.22025, -14.6888, -0.0675285, 0.91", "-5.95539, -14.9194, -0.452433, 0.91", "-8.09678, -14.9636, -0.817595, 0.91", "-10.035, -14.9098, -1.12911, 1.14", "-11.446, -14.8617, -1.37378, 0.91", "-14.0162, -14.8164, -1.8111, 0.68", "-15.305, -14.8355, -2.02482, 0.91", "-17.7428, -14.8619, -2.40128, 1.36", "-20.0017, -14.9101, -2.68916, 0.68", "-21.565, -15.0145, -2.86794, 0.68", "-23.558, -15.2772, -3.07174, 1.59", "-26.1753, -15.7722, -3.30552, 1.14", "-27.3228, -16.0101, -3.38872, 0.68", "-29.7243, -16.5264, -3.55374, 1.14", "-31.644, -16.9416, -3.68198, 0.23", "-33.1818, -17.2751, -3.79274, 1.14", "-35.0907, -17.7219, -3.97299, 0.91", "-38.311, -18.5873, -4.3333, 0.23", "-39.8866, -19.1116, -4.54343, 0.91", "-41.2714, -19.7104, -4.7715, 0.91", "-42.1831, -20.2642, -4.94936, 1.14", "-43.4085, -21.4357, -5.21714, 0.45", "-44.1021, -22.4485, -5.37946, 0.45", "-44.751, -23.7109, -5.53252, 0.91", "-45.3222, -25.0336, -5.6479, 0.45", "-45.8323, -26.3866, -5.72927, 1.59", "-46.724, -29.0487, -5.85661, 0.45", "-47.3634, -31.2536, -5.93314, 1.82" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-4.22025, -14.6888, -0.0675285, 2.95", "-4.73115, -17.4886, 0.209377, 2.95", "-5.25209, -20.3433, 0.491723, 2.95", "-5.47423, -21.5607, 0.612124, 3.41" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-14.5878, 11.004, -0.213028, 1.14", "-16.0761, 9.64515, -0.067446, 1.14", "-17.0706, 8.58111, 0.00240458, 0.45", "-17.9833, 7.54766, 0.0626953, 1.59", "-19.8251, 5.51132, 0.180332, 0.45", "-21.199, 4.05712, 0.218948, 0.91", "-21.8674, 3.38853, 0.221206, 1.59", "-23.4787, 1.71554, 0.207536, 0.23", "-24.1471, 1.08069, 0.153579, 0.23", "-24.8869, 0.564414, -0.0260669, 0.23", "-26.3439, 0.331611, -0.551742, 0.68", "-27.7798, 0.348483, -0.968379, 0.68", "-28.8516, 0.329322, -1.17761, 0.68", "-30.5859, 0.205305, -1.34764, 1.59", "-31.9364, -0.0406248, -1.36827, 1.59", "-33.8599, -0.513775, -1.2702, 0.23", "-35.5878, -1.0173, -1.08947, 0.91", "-37.2161, -1.49293, -0.872186, 0.91", "-38.6045, -1.86095, -0.64205, 0.91", "-40.377, -2.2608, -0.337071, 0.23", "-42.8801, -2.74793, 0.062253, 0.68", "-44.3057, -2.96532, 0.265406, 0.68", "-46.2042, -3.1835, 0.497014, 0.23", "-47.9606, -3.32919, 0.67839, 0.45", "-50.1715, -3.47949, 0.877419, 0.45", "-51.5821, -3.55222, 0.991739, 0.23", "-52.9931, -3.61359, 1.10227, 0.23", "-55.0267, -3.68283, 1.26035, 1.36", "-56.8053, -3.76557, 1.39739, 0.45", "-59.1735, -3.87993, 1.587, 0.91", "-60.6304, -3.98504, 1.73534, 0.91", "-61.8223, -4.08006, 1.86842, 1.36", "-63.5763, -4.22827, 2.08325, 0.23", "-65.5791, -4.39415, 2.34674, 0.23", "-66.5845, -4.4939, 2.47686, 0.91", "-69.2645, -4.90909, 2.84397, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-14.5878, 11.004, -0.213028, 0.23", "-16.3931, 11.5038, 0.395738, 0.23", "-18.2431, 12.0182, 1.07547, 0.68", "-19.9159, 12.4918, 1.78, 0.23", "-20.6479, 12.6945, 2.10467, 0.45", "-22.17, 13.1339, 2.84454, 0.91", "-23.753, 13.6217, 3.64305, 0.23", "-24.4357, 13.8338, 4.05212, 0.68", "-25.3689, 14.2307, 4.73808, 0.23", "-25.8351, 14.4848, 5.14688, 0.68", "-26.8636, 15.1292, 6.08608, 0.23", "-27.4008, 15.4619, 6.57428, 0.68", "-28.554, 16.0913, 7.59984, 0.23", "-29.7543, 16.6343, 8.59831, 0.68", "-31.8968, 17.4636, 10.2597, 0.23", "-32.9264, 17.7971, 10.9843, 0.45", "-34.6959, 18.2095, 12.0329, 0.23", "-35.9229, 18.4029, 12.6102, 0.23", "-37.1198, 18.5675, 12.9905, 0.23", "-38.2324, 18.7407, 13.2285, 0.23", "-39.4345, 19.0457, 13.3881, 0.23", "-40.8134, 19.5505, 13.5272, 0.23", "-42.8436, 20.5153, 13.6921, 0.45", "-45.0203, 21.6836, 13.8825, 0.23", "-46.2576, 22.3642, 14.0074, 0.68", "-48.1459, 23.3352, 14.2255, 0.23", "-50.1132, 24.3164, 14.4946, 0.23", "-52.1842, 25.3152, 14.7769, 0.23", "-54.2146, 26.26, 15.0642, 0.23", "-56.4225, 27.1775, 15.3826, 0.23", "-59.1009, 28.1477, 15.7507, 0.45", "-59.8405, 28.3733, 15.8355, 0.23", "-60.9861, 28.6649, 15.962, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.08269, 39.7222, 0.0, 1.59", "1.72403, 54.7085, 0.0, 1.59", "2.36537, 69.6947, 0.0, 1.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-0.777503, 16.9503, 0.612527, 0.23", "-1.42937, 16.6708, 2.52663, 0.23", "-1.44707, 15.8774, 3.58742, 0.91", "-1.40472, 14.1769, 5.17517, 0.23", "-1.60142, 12.8349, 6.51693, 0.23", "-2.01184, 11.9196, 7.88669, 0.23", "-2.44005, 11.3794, 8.95524, 0.91", "-3.36678, 10.595, 10.3087, 0.23", "-3.91536, 10.3285, 10.8622, 0.23", "-5.41501, 9.73507, 12.2304, 0.91", "-7.22842, 9.18511, 13.8531, 0.23", "-9.28342, 8.72281, 15.5223, 0.23", "-11.4947, 8.39534, 17.258, 0.68", "-15.1888, 7.9946, 20.0504, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-0.777503, 16.9503, 0.612527, 0.68", "-0.516436, 19.8374, 0.534918, 0.68", "-0.334289, 21.8653, 0.527704, 0.68", "-0.243044, 23.0158, 0.540665, 1.36", "0.0154229, 26.2343, 0.603422, 0.68", "0.0920016, 27.4181, 0.618289, 0.68", "0.158907, 29.848, 0.632301, 1.59", "0.150916, 31.0014, 0.668202, 1.59", "-0.0182279, 33.9113, 0.841582, 0.23", "-0.240974, 35.4119, 0.956464, 0.23", "-0.685017, 37.203, 1.11517, 1.14", "-1.28884, 39.2089, 1.30265, 0.91", "-1.78287, 40.6484, 1.43703, 0.91", "-2.4154, 42.4369, 1.61481, 1.36", "-3.13731, 44.2967, 1.8266, 0.68", "-3.88996, 46.1769, 2.06337, 1.14", "-4.60927, 48.0877, 2.33466, 0.45", "-5.0535, 49.4507, 2.50909, 1.59", "-5.62091, 51.4001, 2.65879, 2.27" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "7.07481, 14.2307, -2.78132, 0.91", "7.21517, 14.1695, -4.62296, 0.91", "7.42027, 13.5678, -7.31148, 0.91", "7.98882, 12.3352, -11.4345, 0.68", "8.32799, 11.68, -13.243, 0.68", "8.74906, 10.8652, -15.0696, 1.14", "9.50549, 9.36586, -17.8185, 0.68", "10.5121, 7.16484, -20.6958, 0.23", "11.077, 5.6657, -22.0098, 0.23", "11.3944, 4.65068, -22.6538, 0.23", "11.8993, 2.63842, -23.6995, 1.14", "12.4134, 0.658336, -24.6442, 1.82", "12.9555, -1.48845, -25.5261, 0.68", "13.4626, -4.23864, -26.3802, 1.14", "13.6953, -6.41123, -26.9934, 0.45", "13.8108, -8.19104, -27.466, 0.45" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "7.07481, 14.2307, -2.78132, 1.14", "8.82374, 14.5334, -3.59885, 1.14", "9.80759, 14.7037, -4.05875, 1.59", "11.5699, 15.0087, -4.88253, 1.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-47.3634, -31.2536, -5.93314, 0.23", "-50.0307, -32.2212, -5.50886, 0.23", "-51.8783, -33.0261, -5.25115, 0.68", "-54.1832, -34.2032, -4.92186, 0.23", "-55.1457, -34.7586, -4.78328, 0.23", "-57.1939, -36.0281, -4.49678, 0.23", "-59.336, -37.4568, -4.20912, 0.91", "-60.7939, -38.5616, -4.03888, 0.23", "-62.1504, -39.703, -3.873, 0.91", "-63.2931, -40.6882, -3.72187, 0.23", "-64.7148, -41.8735, -3.52793, 1.59", "-66.7627, -43.4557, -3.25569, 0.23", "-68.1048, -44.3986, -3.0765, 0.23", "-70.6032, -45.9428, -2.76684, 0.23", "-72.0743, -46.7395, -2.60416, 1.59", "-72.9839, -47.1826, -2.50879, 0.23", "-74.9464, -48.0311, -2.32536, 0.68", "-77.0647, -48.8441, -2.18281, 0.23", "-78.6232, -49.4233, -2.15338, 1.14", "-79.2863, -49.6794, -2.16991, 1.14", "-80.5057, -50.1892, -2.23626, 0.23", "-82.4611, -51.0914, -2.32918, 0.68", "-84.4205, -52.07, -2.41084, 0.23", "-86.7551, -53.262, -2.4266, 1.14", "-89.7568, -54.8487, -2.3448, 0.23", "-91.4906, -55.7969, -2.23558, 0.91", "-94.8056, -57.6934, -1.92747, 0.23", "-95.7535, -58.2754, -1.80984, 0.91", "-99.1867, -60.5159, -1.2606, 0.23", "-101.931, -62.4424, -0.670252, 1.14", "-104.322, -64.1628, -0.0922173, 0.45", "-105.921, -65.3658, 0.305409, 1.14", "-107.187, -66.365, 0.609545, 1.14", "-108.722, -67.6777, 0.992192, 0.23", "-109.779, -68.8204, 1.26306, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-47.3634, -31.2536, -5.93314, 0.45", "-49.583, -33.6847, -6.25846, 0.45", "-51.1673, -35.4201, -6.49067, 1.14", "-52.16, -36.5073, -6.63616, 0.23", "-53.464, -37.9356, -6.82729, 1.36", "-54.785, -39.3825, -7.02091, 0.45" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-5.47423, -21.5607, 0.612124, 0.23", "-5.14202, -22.9499, 1.3294, 0.23", "-4.74278, -24.6147, 2.16102, 0.23", "-4.30563, -26.3559, 3.05016, 1.14", "-3.84116, -28.0908, 3.95554, 0.23", "-3.49904, -29.2974, 4.5923, 0.91", "-3.23, -30.2177, 5.07681, 0.91", "-2.57639, -32.4591, 6.22696, 0.23", "-2.07675, -34.1013, 7.07303, 1.14", "-1.72589, -35.227, 7.64609, 1.14", "-1.07878, -37.3046, 8.67041, 0.45", "-0.439264, -39.3264, 9.64489, 0.45", "-0.12296, -40.3872, 10.1412, 0.91", "0.404941, -42.2003, 10.9762, 0.23", "0.863912, -43.9278, 11.7677, 0.23", "1.35572, -45.9447, 12.7003, 0.68", "1.90612, -48.2685, 13.8013, 0.23", "2.25754, -49.7988, 14.5565, 0.91", "2.70792, -51.9011, 15.65, 1.14", "3.34872, -55.4149, 17.6116, 0.23", "3.5132, -56.5368, 18.2836, 0.23", "3.68338, -58.1431, 19.2812, 0.68", "3.82201, -60.1611, 20.5722, 0.23", "3.91571, -62.6605, 22.2405, 1.36", "3.92825, -64.4288, 23.4551, 0.68", "3.89573, -66.667, 24.9564, 0.23", "3.87458, -67.3778, 25.4124, 0.91", "3.79272, -69.4604, 26.7084, 0.23", "3.74869, -70.8735, 27.547, 0.91", "3.73105, -72.9093, 28.6843, 1.14", "3.77308, -75.3849, 30.0054, 0.23", "3.80695, -76.632, 30.6571, 0.91", "3.87828, -78.6692, 31.7109, 0.23", "3.93363, -79.4138, 32.0818, 0.91", "4.0503, -80.4358, 32.5771, 0.91", "4.42012, -82.7821, 33.7734, 0.23", "4.77956, -84.5404, 34.7076, 2.05", "4.95207, -85.298, 35.1061, 2.05", "6.03557, -89.6322, 37.3629, 0.23", "6.41689, -91.0888, 38.1235, 0.91", "7.46587, -94.9061, 40.0908, 0.23", "7.79272, -96.0276, 40.6593, 0.23", "8.08938, -96.99, 41.1542, 1.14", "8.38309, -97.8994, 41.6299, 1.14", "9.42465, -101.044, 43.3248, 0.23", "9.89494, -102.407, 44.1031, 0.23", "10.2441, -103.406, 44.7025, 0.91", "10.6464, -104.525, 45.4099, 0.91", "11.5813, -106.906, 47.0273, 0.23", "12.0725, -108.096, 47.8851, 1.14", "13.2142, -110.607, 49.8473, 0.23", "13.885, -112.022, 50.9985, 0.23", "14.2241, -112.711, 51.5668, 0.91", "14.6848, -113.587, 52.3478, 0.91", "15.4002, -114.801, 53.5254, 0.23", "15.8549, -115.494, 54.2318, 0.68", "16.4699, -116.38, 55.1859, 0.23", "17.2, -117.392, 56.2962, 0.91", "19.2895, -120.147, 59.3888, 0.23", "19.7938, -120.781, 60.121, 1.14", "20.4768, -121.563, 61.0688, 1.14", "22.0912, -123.402, 63.3844, 0.23", "22.6069, -124.021, 64.2134, 0.23", "23.475, -125.174, 65.7797, 0.68", "24.0048, -126.143, 67.0405, 0.23", "24.4216, -127.349, 68.4941, 0.91", "24.5726, -128.343, 69.639, 0.23", "24.6126, -129.85, 71.3977, 0.23", "24.6308, -130.754, 72.4731, 0.68", "24.6957, -132.538, 74.5649, 0.23", "24.8142, -133.985, 76.3397, 0.68", "25.1541, -136.444, 79.4655, 0.23", "25.8138, -139.155, 82.9981, 0.23", "26.2555, -140.611, 84.9373, 0.23", "26.6215, -141.63, 86.3804, 0.68", "27.4815, -143.54, 89.2632, 0.23", "28.2927, -145.138, 91.8448, 0.23", "29.0262, -146.38, 93.8386, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.47423, -21.5607, 0.612124, 2.27", "-6.97025, -25.7481, -0.112263, 2.27", "-7.67814, -27.7295, -0.455034, 2.73", "-8.43536, -29.849, -0.821688, 3.64" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-5.62091, 51.4001, 2.65879, 0.23", "-3.39205, 52.8681, 4.80348, 0.23", "-1.66635, 53.572, 6.14651, 0.91", "0.0276696, 54.2137, 7.34651, 0.23", "1.51563, 54.7983, 8.42472, 0.23", "2.85825, 55.3032, 9.36969, 0.91", "4.61146, 55.9969, 10.5474, 0.23", "5.54746, 56.3046, 11.1276, 0.23", "6.39274, 56.6631, 11.6582, 0.23", "7.75658, 57.4805, 12.5035, 0.23", "8.89309, 58.4608, 13.2281, 1.36", "9.85086, 59.4279, 13.8454, 1.36", "11.8691, 61.7762, 15.0864, 0.23", "13.1266, 63.2309, 15.7906, 0.23", "14.1826, 64.4502, 16.2997, 0.23", "15.6711, 66.286, 16.9039, 0.23", "17.4356, 68.5833, 17.5381, 1.14", "19.1293, 70.887, 18.1256, 0.23", "20.3867, 72.6368, 18.4872, 0.23", "22.0942, 75.0889, 18.9689, 0.45", "23.6272, 77.5326, 19.3999, 0.23", "24.5313, 79.1898, 19.646, 0.68", "25.6645, 81.8532, 19.9659, 0.23", "26.0852, 83.0992, 20.1486, 0.23", "26.517, 84.7125, 20.4109, 0.91", "26.7942, 85.8009, 20.6038, 0.91", "27.1138, 86.8778, 20.7991, 0.23", "28.0269, 89.6104, 21.4055, 0.68", "29.3532, 93.1068, 22.2318, 0.23", "29.7976, 94.2468, 22.5436, 0.91", "30.8119, 96.8139, 23.2658, 0.23", "31.9526, 99.6727, 24.1114, 0.68", "33.1768, 102.74, 25.0761, 0.23", "34.4141, 106.094, 26.1432, 0.68", "35.0824, 108.208, 26.8074, 0.23", "35.6853, 110.722, 27.6217, 0.68", "35.9494, 112.479, 28.2216, 0.23", "36.0325, 113.921, 28.7532, 0.23", "36.0696, 115.825, 29.4332, 0.23", "36.0277, 118.08, 30.3, 0.68", "35.924, 121.357, 31.5713, 0.23", "35.7434, 124.125, 32.7099, 0.68", "35.4247, 126.98, 33.8511, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-5.62091, 51.4001, 2.65879, 0.23", "-7.26171, 54.4267, 2.85571, 0.23", "-8.74233, 56.9397, 3.04708, 0.91", "-11.8018, 61.8092, 3.43758, 0.23", "-12.9197, 63.431, 3.56554, 0.91", "-14.1071, 65.0772, 3.69002, 0.91", "-15.9519, 67.6853, 3.87857, 0.23", "-18.1494, 70.789, 4.13727, 0.23", "-20.2698, 73.8256, 4.32646, 0.23", "-21.8682, 76.3093, 4.42304, 0.68", "-22.8735, 78.0217, 4.46645, 0.23", "-23.8447, 79.9247, 4.50112, 0.23", "-24.3344, 81.0241, 4.52859, 0.23", "-25.4287, 83.7632, 4.66053, 1.59", "-26.7474, 87.2728, 4.89443, 0.68", "-27.6237, 89.5618, 5.06129, 0.23", "-28.2169, 90.8811, 5.1625, 0.91", "-29.2759, 92.868, 5.31571, 0.23", "-29.8485, 93.8376, 5.38732, 0.91", "-30.9031, 95.5036, 5.53152, 0.23", "-31.884, 96.9778, 5.63361, 1.14", "-32.8262, 98.3582, 5.68997, 1.14", "-33.9533, 99.8732, 5.73987, 0.23", "-35.4976, 101.772, 5.82181, 0.23", "-37.3886, 103.919, 6.00957, 0.91", "-38.8016, 105.391, 6.19507, 0.23", "-40.6792, 107.159, 6.51857, 0.23", "-42.1096, 108.371, 6.8032, 0.91", "-44.5207, 110.197, 7.37348, 0.23", "-46.5918, 111.691, 7.91407, 0.68", "-47.4776, 112.357, 8.14768, 0.68", "-49.0883, 113.616, 8.58887, 0.23", "-50.8526, 115.076, 9.03275, 0.68", "-52.4926, 116.426, 9.35805, 0.23", "-54.2876, 117.774, 9.6467, 0.23", "-57.1444, 119.725, 9.96214, 0.91", "-59.3837, 121.086, 10.0796, 0.23", "-62.3644, 122.745, 10.0643, 0.23", "-65.8472, 124.556, 9.9143, 0.91", "-68.6424, 125.912, 9.69984, 0.23", "-70.9408, 126.919, 9.49646, 0.91", "-73.301, 127.928, 9.2387, 0.23", "-77.034, 129.631, 8.74603, 0.23", "-79.5171, 130.834, 8.39361, 0.91", "-81.953, 132.177, 8.02017, 0.23", "-83.2221, 132.944, 7.82359, 0.68", "-85.5027, 134.304, 7.5623, 0.23", "-87.2752, 135.354, 7.44981, 0.91", "-89.0607, 136.366, 7.41465, 0.23", "-90.639, 137.274, 7.45133, 0.68", "-92.1972, 138.165, 7.53904, 0.23", "-95.3682, 139.969, 7.7745, 0.91", "-98.8199, 141.916, 8.08826, 0.23", "-102.018, 143.788, 8.39323, 0.23", "-104.392, 145.27, 8.61776, 0.91", "-106.323, 146.593, 8.79407, 0.23", "-107.214, 147.276, 8.84954, 0.68", "-108.582, 148.519, 8.8781, 0.23", "-109.841, 149.889, 8.82323, 0.91", "-111.707, 152.29, 8.57645, 0.23", "-112.747, 153.768, 8.3587, 0.91", "-114.069, 155.802, 8.02746, 0.23", "-115.043, 157.313, 7.74316, 1.14", "-117.072, 160.433, 7.0216, 0.23", "-119.038, 163.353, 6.26091, 0.91", "-120.672, 165.658, 5.58797, 0.23", "-122.102, 167.543, 4.99662, 0.91", "-124.017, 169.987, 4.1906, 0.23", "-125.46, 171.715, 3.55192, 0.23", "-127.068, 173.493, 2.83088, 0.91", "-129.156, 175.726, 1.90541, 0.23", "-130.234, 176.846, 1.43498, 0.23", "-131.315, 177.93, 0.978597, 0.68", "-132.056, 178.623, 0.702757, 0.23", "-133.848, 180.246, 0.0876634, 0.68", "-135.858, 181.967, -0.585399, 0.23", "-137.401, 183.252, -1.02397, 0.23", "-138.439, 184.124, -1.29816, 0.68", "-139.753, 185.214, -1.60577, 0.23", "-140.937, 186.236, -1.86243, 0.23", "-142.144, 187.278, -2.09703, 0.45", "-144.673, 189.471, -2.57493, 0.23", "-146.461, 191.118, -2.93158, 1.82", "-147.76, 192.355, -3.19019, 0.68", "-150.383, 194.958, -3.70175, 0.23", "-152.462, 196.972, -4.03226, 0.91", "-154.435, 198.908, -4.35011, 0.23", "-156.035, 200.452, -4.5999, 0.23", "-157.0, 201.393, -4.72736, 0.91", "-158.337, 202.741, -4.90144, 0.23", "-159.79, 204.228, -5.04968, 1.36" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "11.5699, 15.0087, -4.88253, 0.68", "13.5463, 14.0169, -5.1039, 0.68", "15.6835, 12.9847, -5.2281, 0.68", "17.5377, 12.0636, -5.26475, 0.68", "19.3757, 11.0244, -5.21248, 1.14", "21.5746, 9.72395, -5.15552, 1.59", "24.6588, 7.87561, -5.08686, 0.68", "27.2604, 6.32314, -4.99019, 1.82", "30.0075, 4.67239, -4.8901, 0.91", "34.6722, 1.79178, -4.77689, 0.68", "37.0573, 0.291364, -4.78105, 0.68", "39.546, -1.31885, -4.85, 1.14", "41.2449, -2.44255, -4.93525, 1.14", "44.9252, -4.90873, -5.19342, 1.82", "47.9039, -6.85896, -5.46863, 0.23", "50.1347, -8.26892, -5.72383, 0.91", "52.6957, -9.97316, -5.96931, 1.14", "54.4092, -11.1982, -6.14523, 2.05" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "11.5699, 15.0087, -4.88253, 0.45", "12.5327, 15.1723, -5.34444, 0.45", "14.0839, 15.431, -6.07031, 0.91", "15.3724, 15.6652, -6.65984, 0.45", "16.9195, 15.9548, -7.35207, 1.14", "18.9262, 16.4049, -8.20768, 0.68", "21.049, 16.9483, -9.0819, 0.45", "22.2725, 17.3084, -9.5649, 0.91", "23.2394, 17.6509, -9.92692, 0.91", "25.018, 18.3652, -10.555, 2.05", "27.6313, 19.479, -11.4386, 0.68", "29.1933, 20.191, -11.9547, 1.14", "30.5564, 20.8708, -12.3905, 0.68", "31.2273, 21.2319, -12.6001, 1.59", "32.6803, 22.0453, -13.0484, 1.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-8.43536, -29.849, -0.821688, 0.68", "-11.629, -31.0185, -2.37032, 0.68", "-14.8495, -32.1006, -3.81334, 0.68", "-16.6893, -32.6804, -4.60242, 1.14", "-20.2708, -33.6748, -6.16295, 0.68", "-22.8468, -34.3084, -7.29712, 1.36", "-25.1494, -34.8192, -8.338, 0.45", "-27.8523, -35.2508, -9.57801, 1.14", "-30.4714, -35.5418, -10.782, 0.23", "-32.7823, -35.8483, -11.8518, 0.45", "-33.8951, -36.054, -12.3942, 0.45", "-36.4364, -36.7265, -13.7109, 1.14", "-38.4769, -37.4746, -14.8208, 0.23", "-40.2678, -38.3614, -15.8238, 0.91", "-42.736, -39.8183, -17.1227, 0.45", "-44.2276, -40.7977, -17.8492, 1.14", "-46.3623, -42.2467, -18.8318, 0.23", "-48.2535, -43.5377, -19.6435, 0.91", "-50.442, -44.9801, -20.5209, 0.68", "-52.5111, -46.2464, -21.2945, 0.23", "-54.0246, -47.067, -21.8012, 0.91", "-56.2117, -48.0834, -22.4579, 0.23", "-58.973, -49.2492, -23.2349, 0.91", "-60.5089, -49.8883, -23.6572, 0.68", "-62.8951, -50.9248, -24.3046, 0.68", "-65.6695, -52.2391, -25.052, 1.36", "-68.0575, -53.44, -25.6812, 0.23", "-69.106, -54.0001, -25.9585, 0.23", "-71.1025, -55.1291, -26.5103, 1.36", "-72.3916, -55.9449, -26.868, 1.36", "-73.8076, -56.9553, -27.2561, 0.23", "-75.7321, -58.533, -27.84, 0.91", "-77.4769, -60.1637, -28.4334, 0.91", "-79.1656, -61.8593, -29.0462, 0.23", "-80.851, -63.6667, -29.6956, 0.91", "-82.1639, -65.1602, -30.2502, 0.23", "-83.601, -66.9669, -30.905, 0.23", "-84.6418, -68.5029, -31.3979, 0.23", "-85.3065, -69.5686, -31.6978, 1.14", "-86.0283, -70.7465, -31.9869, 0.45", "-86.7991, -71.9929, -32.2641, 1.59", "-88.8596, -75.312, -32.8769, 0.68", "-91.0981, -78.82, -33.3842, 0.68", "-92.593, -81.0213, -33.6624, 0.23", "-94.0302, -83.017, -33.9047, 0.91", "-95.0315, -84.2973, -34.0644, 0.91", "-95.8351, -85.1929, -34.1941, 0.23", "-97.0713, -86.412, -34.4011, 0.91", "-98.8858, -88.0726, -34.7383, 0.23", "-100.285, -89.3353, -35.0442, 0.45", "-101.75, -90.6569, -35.4015, 1.14", "-103.088, -91.8657, -35.7448, 0.23", "-105.025, -93.6228, -36.2695, 0.91", "-107.053, -95.4405, -36.8313, 0.91", "-108.332, -96.5693, -37.1917, 0.23", "-110.087, -98.0776, -37.6742, 0.68", "-111.504, -99.2753, -38.0286, 0.23", "-112.189, -99.8156, -38.1829, 0.23", "-114.142, -101.218, -38.6104, 0.91", "-116.161, -102.587, -39.002, 2.05", "-118.857, -104.433, -39.47, 0.68", "-121.054, -105.943, -39.7963, 1.36", "-123.307, -107.514, -40.0994, 0.45", "-125.043, -108.748, -40.3099, 0.45", "-127.042, -110.194, -40.541, 0.23", "-128.205, -111.036, -40.6686, 0.91", "-129.589, -112.025, -40.8375, 0.23", "-130.589, -112.722, -40.9894, 0.23", "-132.657, -114.165, -41.3587, 1.14", "-133.787, -114.929, -41.5853, 1.14", "-136.402, -116.599, -42.1787, 0.23", "-137.188, -117.063, -42.3723, 0.91", "-138.871, -118.041, -42.8244, 1.59", "-140.194, -118.809, -43.1494, 0.45", "-140.951, -119.242, -43.3209, 1.14", "-143.494, -120.655, -43.847, 0.23", "-144.733, -121.338, -44.0942, 1.36", "-146.084, -122.088, -44.3263, 1.36", "-149.862, -124.241, -44.9015, 0.23", "-151.482, -125.203, -45.1319, 1.36", "-152.043, -125.566, -45.2082, 2.27", "-154.343, -127.243, -45.5211, 0.23", "-155.982, -128.473, -45.7321, 0.68", "-157.066, -129.325, -45.8741, 0.23", "-158.282, -130.402, -46.07, 0.91", "-159.285, -131.421, -46.2262, 0.23", "-160.452, -132.781, -46.3823, 1.59" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.43536, -29.849, -0.821688, 2.27", "-9.26748, -35.0306, 0.305513, 2.27", "-9.4764, -36.3316, 0.588515, 2.27" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-159.79, 204.228, -5.04968, 0.23", "-162.652, 205.085, -4.62173, 0.23", "-164.19, 205.517, -4.38392, 0.91", "-166.454, 206.094, -4.02133, 0.23", "-167.947, 206.435, -3.74349, 0.91", "-169.018, 206.665, -3.52917, 0.23", "-170.745, 207.029, -3.20271, 0.23", "-171.576, 207.171, -3.03602, 0.23", "-172.762, 207.378, -2.84177, 0.91", "-174.731, 207.67, -2.59075, 0.23", "-175.447, 207.764, -2.50136, 0.68", "-176.731, 207.921, -2.34012, 0.23", "-177.289, 207.995, -2.26281, 1.14", "-178.965, 208.206, -1.99866, 0.23", "-181.046, 208.464, -1.61456, 1.14", "-182.514, 208.647, -1.31509, 0.23", "-184.099, 208.846, -0.922893, 0.68", "-184.97, 208.962, -0.661824, 0.23", "-186.781, 209.254, -0.0756414, 0.91", "-189.133, 209.709, 0.73758, 0.23", "-190.853, 210.136, 1.31112, 0.23", "-191.812, 210.394, 1.60981, 0.91", "-193.229, 210.831, 2.02731, 0.23", "-194.36, 211.225, 2.3231, 0.68", "-195.687, 211.74, 2.64449, 0.23", "-196.889, 212.199, 2.88497, 0.23", "-197.887, 212.513, 3.05463, 0.68", "-199.112, 212.879, 3.22305, 0.23", "-200.792, 213.328, 3.41314, 0.23", "-201.992, 213.588, 3.54791, 0.68", "-202.994, 213.759, 3.65464, 0.23", "-204.612, 213.898, 3.82378, 0.91" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-159.79, 204.228, -5.04968, 0.23", "-161.664, 206.539, -4.46654, 0.23", "-162.109, 207.167, -4.35038, 0.68", "-163.341, 209.04, -4.03023, 0.23", "-164.67, 211.019, -3.87117, 0.23", "-165.62, 212.383, -3.83363, 0.68", "-166.836, 214.086, -3.83042, 0.23", "-167.722, 215.368, -3.86377, 0.68", "-169.63, 217.999, -4.01331, 0.23", "-171.397, 220.302, -4.21665, 0.91", "-173.663, 223.165, -4.4798, 0.23", "-175.02, 224.809, -4.63328, 0.23", "-176.68, 226.71, -4.80952, 0.91", "-178.567, 228.801, -5.00504, 0.23", "-180.025, 230.383, -5.15179, 0.68" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "54.4092, -11.1982, -6.14523, 0.45", "55.2683, -12.6415, -5.53112, 0.45", "55.7271, -13.3358, -5.20788, 0.91", "56.1891, -13.8782, -4.94202, 0.23", "56.5701, -14.2803, -4.74722, 0.91", "56.9776, -14.6696, -4.55914, 0.91", "58.1333, -15.6773, -4.06514, 0.23", "58.8956, -16.2659, -3.7756, 1.59", "60.554, -17.4941, -3.20723, 0.45", "61.4671, -18.1488, -2.92224, 0.45", "62.5992, -18.9505, -2.59744, 1.36", "64.7594, -20.4456, -2.02606, 0.68", "66.1787, -21.4146, -1.69918, 0.68", "67.3773, -22.2189, -1.45579, 1.14", "69.6891, -23.7212, -1.04841, 0.45", "70.2489, -24.0633, -0.965289, 1.14", "71.3797, -24.742, -0.818959, 0.23", "72.6218, -25.4819, -0.674544, 1.36", "73.0426, -25.7317, -0.620191, 2.05", "74.4199, -26.5771, -0.4023, 0.23", "75.8067, -27.5038, -0.125232, 0.23", "76.9535, -28.2973, 0.136897, 1.14", "78.1266, -29.164, 0.448985, 0.23", "78.8749, -29.753, 0.692068, 1.36", "79.77, -30.5247, 1.01949, 1.59", "80.8022, -31.5643, 1.48342, 0.45" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "54.4092, -11.1982, -6.14523, 0.68", "57.2069, -11.2929, -6.33548, 0.68", "58.4938, -11.3466, -6.44123, 0.23", "59.3383, -11.3985, -6.53701, 0.68", "60.4387, -11.4785, -6.66615, 0.23", "61.4464, -11.5774, -6.76028, 0.91", "63.3524, -11.7947, -6.89984, 0.23", "64.9552, -11.9747, -6.97978, 1.14", "68.1234, -12.2756, -7.11496, 0.45", "69.0803, -12.3392, -7.15641, 0.91", "71.3465, -12.4065, -7.28885, 0.23", "73.5543, -12.3881, -7.46685, 0.91", "75.515, -12.2817, -7.67925, 0.23", "77.9505, -12.0221, -8.04578, 0.91", "80.4518, -11.6002, -8.56778, 0.23", "82.4092, -11.1507, -9.14224, 0.68", "83.4901, -10.8155, -9.58126, 0.23", "84.5161, -10.4515, -10.1078, 1.14", "85.5399, -10.0761, -10.725, 0.23", "87.0215, -9.51628, -11.7159, 0.91", "88.2711, -9.06297, -12.6049, 0.23", "89.326, -8.6943, -13.372, 1.14", "90.328, -8.35651, -14.0808, 0.23", "91.6807, -7.92367, -15.0406, 1.82", "92.3768, -7.71671, -15.5285, 2.27", "94.4106, -7.16763, -16.9937, 0.23", "94.86, -7.06903, -17.2953, 0.23", "96.5173, -6.7519, -18.3404, 0.68", "98.0045, -6.50465, -19.1842, 0.23", "99.1838, -6.35184, -19.776, 1.36", "101.109, -6.19687, -20.5564, 0.23", "103.111, -6.1267, -21.1699, 0.23", "103.938, -6.12643, -21.3733, 1.14", "106.001, -6.19955, -21.7299, 0.23", "107.045, -6.24302, -21.8477, 0.68", "108.765, -6.30947, -21.9935, 0.23", "109.225, -6.32964, -22.0221, 1.59", "109.938, -6.36395, -22.0632, 0.23", "111.363, -6.43451, -22.1433, 1.36", "113.399, -6.51138, -22.2826, 0.23", "115.266, -6.52957, -22.4646, 0.91" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "32.6803, 22.0453, -13.0484, 0.23", "36.3047, 23.4537, -14.5899, 0.23", "38.7138, 24.4597, -15.5278, 0.23", "40.6076, 25.2383, -16.228, 1.36", "43.2123, 26.3169, -17.2337, 1.36", "46.772, 27.7778, -18.6352, 0.23", "48.4447, 28.4431, -19.299, 0.23", "51.8006, 29.7856, -20.633, 0.91", "55.4824, 31.1123, -22.1106, 0.23", "58.3982, 32.019, -23.2829, 1.59", "59.4745, 32.2979, -23.7225, 1.59", "63.2663, 33.0886, -25.2837, 0.45", "65.1808, 33.4123, -26.1328, 0.45", "68.227, 33.8215, -27.5141, 0.23", "69.9786, 34.0134, -28.3025, 1.14", "72.5458, 34.2518, -29.3894, 0.23", "74.2239, 34.3965, -30.0874, 0.68", "77.3305, 34.7011, -31.3486, 0.23", "80.9531, 35.1554, -32.7751, 1.14", "85.1019, 35.8823, -34.4116, 0.23", "87.6538, 36.4556, -35.4234, 0.23", "89.0465, 36.8612, -35.9724, 1.59", "92.0919, 37.9295, -37.1861, 0.23", "93.5158, 38.5522, -37.7701, 0.23", "94.9288, 39.3198, -38.3921, 0.68", "96.4084, 40.281, -39.1578, 0.68", "99.3924, 42.3212, -40.89, 0.23", "100.708, 43.1642, -41.6999, 0.23", "101.884, 43.859, -42.4612, 1.82", "102.575, 44.2095, -42.9035, 1.82", "104.993, 45.2196, -44.3823, 0.23", "107.049, 45.9525, -45.6012, 0.68", "110.148, 46.8943, -47.3463, 0.23", "111.39, 47.2653, -48.005, 0.91", "113.463, 47.8942, -49.0681, 0.23", "115.748, 48.6491, -50.2138, 1.14", "118.882, 49.7693, -51.7087, 0.23", "121.167, 50.6594, -52.8319, 1.14", "123.426, 51.6283, -53.9424, 0.23", "125.039, 52.3466, -54.7347, 0.91", "127.206, 53.3823, -55.8195, 0.23", "129.468, 54.5172, -56.9611, 1.36", "131.283, 55.4285, -57.8715, 0.23", "133.474, 56.5656, -58.9612, 0.91", "137.088, 58.5295, -60.7561, 0.23", "139.138, 59.6474, -61.7555, 1.14", "140.265, 60.2619, -62.3049, 0.23", "141.464, 60.9329, -62.8887, 1.14", "143.786, 62.2602, -63.9678, 0.23", "145.523, 63.3793, -64.8432, 1.36" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "32.6803, 22.0453, -13.0484, 0.23", "34.1601, 23.423, -13.8574, 0.23", "34.9534, 24.1672, -14.28, 0.91", "36.2008, 25.2818, -14.9221, 0.23", "37.4882, 26.3275, -15.5711, 0.68", "38.856, 27.2918, -16.2224, 0.68", "41.1941, 28.8531, -17.2751, 0.23", "42.3468, 29.5778, -17.7958, 0.91", "43.6224, 30.3814, -18.3552, 0.91", "46.0225, 31.9001, -19.3753, 0.23", "48.3482, 33.4327, -20.3466, 0.68", "50.5509, 34.9427, -21.3068, 0.23", "52.0079, 35.997, -21.974, 0.91", "53.5714, 37.2153, -22.7272, 0.91", "54.9414, 38.4445, -23.4514, 0.23", "56.5663, 40.2246, -24.4368, 1.14", "58.0083, 42.1019, -25.4241, 0.23", "58.8043, 43.2737, -25.9916, 0.23", "59.3895, 44.2634, -26.3801, 0.23", "60.6396, 46.6015, -27.1484, 0.91", "62.0364, 49.399, -27.9044, 0.45", "62.5391, 50.4741, -28.1348, 0.45", "63.6696, 53.0589, -28.593, 1.59", "65.3247, 56.7204, -29.1784, 0.45", "65.9253, 57.9811, -29.3677, 0.68", "66.4111, 58.936, -29.49, 0.23", "67.3428, 60.6094, -29.7356, 0.91", "68.7695, 63.0228, -30.1889, 0.23", "69.6043, 64.3306, -30.4946, 0.23", "70.0817, 65.0334, -30.6873, 1.36", "70.6515, 65.9094, -30.9065, 1.36", "71.8086, 67.7437, -31.3305, 0.23", "73.0386, 69.7542, -31.7446, 0.68", "74.1068, 71.5338, -32.0746, 0.23", "75.7285, 74.2534, -32.5553, 1.14", "77.37, 77.0611, -33.0288, 0.23", "78.5567, 79.1357, -33.3526, 0.91", "79.3144, 80.4771, -33.5362, 1.59", "80.0853, 81.8566, -33.7258, 0.91", "81.2399, 83.9898, -34.0006, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-160.452, -132.781, -46.3823, 0.23", "-162.195, -133.2, -45.7434, 0.23", "-162.736, -133.346, -45.5538, 1.14", "-164.621, -133.84, -44.9165, 0.23", "-165.338, -134.042, -44.6727, 0.91", "-167.642, -134.813, -43.9384, 0.23", "-168.788, -135.222, -43.5641, 0.91", "-171.167, -136.178, -42.8207, 0.23", "-172.667, -136.799, -42.349, 0.91", "-174.039, -137.387, -41.9381, 0.23", "-175.747, -138.104, -41.4042, 1.14", "-178.038, -139.091, -40.6886, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-160.452, -132.781, -46.3823, 0.23", "-161.523, -135.787, -46.9915, 0.23", "-162.226, -137.919, -47.4444, 1.59", "-163.213, -141.124, -48.1712, 0.23", "-163.842, -143.204, -48.7712, 1.36", "-164.346, -144.732, -49.3033, 0.23", "-164.872, -146.137, -49.8705, 0.23", "-165.612, -147.584, -50.673, 1.36", "-166.604, -149.071, -51.7647, 2.27", "-167.783, -150.421, -53.012, 0.23", "-168.901, -151.353, -54.0777, 1.14", "-170.066, -152.083, -55.0987, 0.23", "-171.51, -152.765, -56.22, 1.14", "-172.123, -152.932, -56.6245, 1.14", "-173.408, -153.126, -57.3876, 0.23", "-174.013, -153.166, -57.7301, 0.23", "-174.814, -153.071, -58.1983, 1.36", "-175.379, -152.851, -58.515, 1.36", "-177.69, -151.604, -59.7369, 0.23", "-178.167, -151.315, -59.9809, 0.23", "-179.634, -150.323, -60.7309, 0.23", "-181.42, -149.064, -61.6835, 1.14", "-182.773, -148.148, -62.4154, 0.23", "-184.918, -146.995, -63.5504, 0.23", "-186.139, -146.581, -64.2242, 1.36", "-188.03, -146.059, -65.2619, 0.23", "-189.659, -145.749, -66.1678, 1.14", "-190.855, -145.616, -66.9404, 1.14", "-193.573, -145.565, -68.8847, 0.23", "-195.873, -145.927, -70.5693, 1.14" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.4764, -36.3316, 0.588515, 0.23", "-10.3751, -37.8945, 1.90011, 0.23", "-10.6288, -38.321, 2.18324, 0.23", "-11.1762, -39.2036, 2.73755, 0.23", "-11.5649, -39.873, 3.12942, 1.14", "-12.148, -40.933, 3.70532, 0.23", "-12.6047, -41.7831, 4.14775, 1.14", "-13.271, -43.1328, 4.74183, 0.23", "-13.9301, -44.5112, 5.33393, 0.23", "-14.4473, -45.6601, 5.82376, 1.36", "-15.4714, -47.9611, 6.7523, 0.23", "-15.7826, -48.6875, 7.02018, 0.23", "-16.2057, -49.7247, 7.39652, 0.91", "-16.4015, -50.2416, 7.58426, 0.91", "-16.9031, -51.6266, 8.06981, 0.23", "-17.302, -52.7067, 8.45786, 0.23", "-17.7067, -53.907, 8.92359, 0.68", "-18.4381, -56.1694, 9.88413, 0.23", "-18.6465, -56.8409, 10.2068, 1.36", "-18.8151, -57.4031, 10.4963, 1.36", "-19.198, -58.8261, 11.2803, 0.45", "-19.4526, -60.0114, 11.9818, 1.14", "-19.7087, -61.361, 12.8512, 0.23", "-19.8513, -62.354, 13.5192, 0.45", "-20.0594, -63.8233, 14.5333, 0.23", "-20.2072, -64.9642, 15.3241, 0.23", "-20.3463, -65.9651, 16.0271, 0.91", "-20.6324, -67.4196, 17.0072, 0.23", "-20.9549, -68.886, 17.9626, 0.91", "-21.1369, -69.6633, 18.4491, 0.23", "-21.4375, -70.8159, 19.1587, 1.14", "-21.9267, -72.2279, 19.9494, 0.23", "-22.4133, -73.4261, 20.5259, 0.91", "-22.8289, -74.2635, 20.839, 0.23", "-23.6679, -75.8175, 21.3732, 0.23", "-24.0201, -76.4461, 21.5676, 0.91", "-25.2739, -78.5569, 22.1429, 0.23", "-25.8921, -79.6076, 22.3867, 1.14", "-27.2643, -81.8318, 22.8592, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.4764, -36.3316, 0.588515, 1.59", "-9.70355, -38.184, 0.87748, 1.59", "-10.0528, -41.0321, 1.32175, 2.27" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-10.0528, -41.0321, 1.32175, 0.23", "-10.51, -44.1847, 2.7447, 0.23", "-10.8015, -46.3944, 3.76386, 0.45", "-10.9603, -48.0017, 4.5604, 1.36", "-11.065, -50.1202, 5.62824, 1.36", "-11.1213, -52.5143, 6.84247, 0.91", "-11.1191, -54.9198, 8.0591, 1.14", "-11.084, -56.3996, 8.77763, 1.14", "-10.9113, -60.124, 10.5313, 0.91", "-10.7521, -62.5811, 11.6465, 1.14", "-10.6351, -64.2215, 12.354, 1.14", "-10.4901, -66.2496, 13.1911, 0.23", "-10.3472, -68.7757, 14.1648, 0.23", "-10.3101, -70.1702, 14.6597, 0.23", "-10.3297, -71.9273, 15.231, 2.05", "-10.4475, -74.7386, 16.1487, 1.59", "-10.5375, -76.4991, 16.7276, 1.59", "-10.6564, -78.4694, 17.3981, 0.45", "-10.7783, -80.4126, 18.1114, 1.14", "-10.9164, -82.3589, 18.8523, 1.14", "-11.1376, -85.1328, 19.8925, 1.59", "-11.2774, -87.0771, 20.5992, 1.14", "-11.5241, -90.4508, 21.7463, 0.68", "-11.6601, -92.3365, 22.3583, 1.14", "-11.8466, -94.8885, 23.1489, 0.23", "-12.0321, -97.2843, 23.8527, 1.59", "-12.23, -99.4106, 24.4121, 0.68", "-12.388, -100.994, 24.8053, 0.91", "-12.6304, -103.292, 25.3521, 0.91", "-12.9964, -106.736, 26.1805, 1.36", "-13.3653, -110.172, 27.0756, 0.91", "-13.8456, -114.794, 28.4079, 1.14", "-14.0984, -117.062, 29.1105, 0.68", "-14.3513, -119.299, 29.8353, 1.14", "-14.7082, -122.123, 30.7161, 0.23", "-15.031, -124.42, 31.3963, 0.68", "-15.4323, -127.01, 32.1112, 0.45", "-15.6914, -128.633, 32.5252, 2.05", "-16.3765, -132.717, 33.4484, 0.91", "-17.196, -137.507, 34.4314, 0.45", "-17.5205, -139.367, 34.7716, 0.91", "-17.9338, -141.713, 35.142, 0.91", "-18.3967, -144.369, 35.5075, 0.23", "-18.6344, -145.824, 35.7062, 0.91", "-19.0873, -148.723, 36.1637, 0.45", "-19.498, -151.353, 36.6649, 1.36", "-19.8718, -153.633, 37.1452, 0.68", "-20.0437, -154.611, 37.3671, 1.14", "-20.4148, -156.63, 37.869, 0.23", "-20.7019, -158.332, 38.3686, 0.68", "-20.9873, -160.321, 39.0549, 0.23", "-21.1613, -161.714, 39.5788, 0.91", "-21.3416, -163.37, 40.2407, 0.91", "-21.7336, -167.204, 41.744, 0.23", "-22.0056, -169.866, 42.721, 1.36", "-22.473, -174.055, 44.1921, 0.23", "-22.7062, -176.069, 44.8742, 1.14", "-22.8163, -176.937, 45.1566, 1.14", "-23.1921, -179.543, 45.9884, 0.23", "-23.5796, -181.887, 46.7012, 0.91", "-23.8477, -183.36, 47.123, 1.82", "-24.1311, -184.756, 47.5205, 1.82", "-24.8727, -188.385, 48.6159, 0.45", "-25.2516, -190.188, 49.1958, 1.14", "-25.4913, -191.307, 49.5941, 1.14", "-25.8916, -193.21, 50.3151, 0.23", "-26.4536, -196.04, 51.437, 0.23", "-26.6636, -197.143, 51.8943, 1.36", "-26.9041, -198.585, 52.5096, 1.36", "-27.2492, -201.061, 53.5536, 0.23", "-27.5342, -203.231, 54.4817, 0.91", "-27.7078, -204.735, 55.1438, 0.91", "-27.9881, -207.703, 56.4798, 0.23", "-28.1576, -209.72, 57.3853, 0.45", "-28.3402, -212.151, 58.4738, 0.91", "-28.4922, -214.38, 59.493, 0.45", "-28.633, -216.126, 60.2644, 1.14", "-28.7843, -217.504, 60.8408, 1.14", "-29.0862, -219.726, 61.756, 0.23", "-29.2231, -220.584, 62.1013, 1.14", "-29.5062, -222.264, 62.7782, 1.14", "-30.1146, -225.86, 64.2199, 0.23", "-30.6498, -228.936, 65.4661, 0.68", "-30.93, -230.604, 66.1602, 1.59", "-31.0934, -231.671, 66.6318, 2.05", "-31.5665, -235.481, 68.451, 0.23", "-31.6912, -236.803, 69.1538, 1.14", "-31.7365, -237.776, 69.7473, 1.59", "-31.7046, -239.995, 71.2617, 0.45", "-31.6512, -241.837, 72.6234, 0.91", "-31.5987, -244.005, 74.3526, 0.23", "-31.5553, -245.77, 75.8533, 1.14", "-31.5251, -246.788, 76.7794, 1.14", "-31.4118, -249.997, 79.8408, 0.23", "-31.3137, -251.905, 81.7733, 0.23", "-31.2341, -253.19, 83.0931, 0.68", "-31.1775, -253.897, 83.8195, 0.68", "-31.0259, -255.624, 85.5048, 0.23", "-30.8539, -257.466, 87.2771, 1.36", "-30.5904, -259.802, 89.4663, 0.45", "-30.33, -261.434, 90.9389, 1.14", "-30.1202, -262.635, 91.9695, 0.23", "-29.8714, -264.243, 93.2749, 2.5" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-10.0528, -41.0321, 1.32175, 0.91", "-11.2385, -43.135, 0.825275, 0.91", "-12.1522, -44.7554, 0.442705, 0.91", "-12.9651, -46.1971, 0.102346, 0.68", "-13.4446, -47.0475, -0.0984298, 1.36", "-14.1486, -48.296, -0.393197, 1.59" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-29.8714, -264.243, 93.2749, 0.23", "-27.3366, -263.958, 95.9669, 0.23", "-25.5927, -263.76, 97.8632, 0.91", "-23.2764, -263.516, 100.44, 0.23", "-21.2123, -263.298, 102.736, 1.14", "-18.9502, -263.059, 105.252, 0.23", "-18.3416, -262.995, 105.929, 0.68", "-17.2579, -262.714, 107.186, 0.23", "-16.7987, -262.567, 107.693, 0.68" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-29.8714, -264.243, 93.2749, 0.23", "-30.5017, -266.583, 93.3006, 0.23", "-30.6988, -267.309, 93.334, 0.91", "-30.9731, -268.251, 93.4052, 0.45", "-31.1433, -268.8, 93.4526, 1.36", "-31.5459, -270.044, 93.5321, 0.23", "-31.8034, -270.803, 93.5835, 1.14", "-32.5018, -272.746, 93.7383, 0.23", "-33.016, -274.025, 93.8347, 0.23", "-33.4885, -275.149, 93.9315, 1.59", "-34.1068, -276.671, 94.095, 0.91", "-34.665, -278.126, 94.3002, 0.23", "-35.0923, -279.278, 94.5258, 1.14", "-35.6865, -280.995, 94.9623, 0.23", "-36.0585, -282.192, 95.3263, 0.91", "-36.4798, -283.71, 95.8585, 0.23", "-36.7791, -284.924, 96.322, 1.14", "-37.0695, -286.328, 96.8529, 0.23", "-37.2774, -287.523, 97.3106, 1.36", "-37.3257, -287.866, 97.4372, 1.36", "-37.6162, -290.178, 98.2198, 0.23", "-37.7301, -291.445, 98.5784, 0.91", "-37.783, -292.94, 98.9243, 0.23", "-37.7541, -294.212, 99.1784, 1.36", "-37.6892, -294.932, 99.3305, 1.36", "-37.2652, -297.44, 99.928, 0.23", "-36.7882, -299.299, 100.434, 1.14", "-36.3486, -300.628, 100.834, 0.23", "-36.0279, -301.48, 101.098, 1.36", "-35.2907, -303.206, 101.653, 0.23", "-34.6269, -304.563, 102.139, 1.82", "-34.3934, -304.942, 102.315, 1.82", "-34.0325, -305.455, 102.654, 0.45" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-14.1486, -48.296, -0.393197, 0.68", "-13.7446, -49.326, -2.29345, 0.68", "-13.2232, -50.2783, -4.26418, 1.14", "-12.62, -51.3709, -6.47248, 0.23", "-12.2368, -52.1232, -7.84681, 0.23", "-11.9297, -53.0145, -9.1918, 1.14", "-11.7684, -53.7507, -10.2409, 0.23", "-11.6791, -54.582, -11.4467, 0.45", "-11.6774, -55.1781, -12.2904, 0.45", "-11.7069, -56.0281, -13.526, 1.14", "-11.7988, -57.8543, -16.2395, 0.23", "-11.8623, -59.0953, -18.2672, 0.91", "-11.8668, -59.7424, -19.6188, 0.91", "-11.7792, -60.1748, -21.1038, 0.45", "-11.5346, -60.404, -22.847, 0.45", "-11.1865, -60.3222, -24.2389, 0.45", "-10.5673, -59.8804, -25.6437, 0.91", "-9.41758, -58.9474, -27.3808, 0.45", "-8.61075, -58.1758, -28.3746, 0.45", "-7.93763, -57.3999, -29.0734, 0.45", "-7.36427, -56.4661, -29.7298, 0.45", "-7.27036, -57.2215, -28.8818, 1.36", "-6.78027, -57.8785, -27.7981, 1.36", "-6.30088, -58.691, -26.5717, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-14.1486, -48.296, -0.393197, 0.23", "-14.9346, -50.5107, 0.108262, 0.23", "-15.2895, -51.5338, 0.364322, 0.91", "-15.756, -52.9036, 0.757202, 0.91", "-16.2742, -54.5012, 1.24756, 0.91", "-16.8292, -56.2779, 1.84145, 0.23", "-17.442, -58.2905, 2.56594, 0.68", "-18.0821, -60.4381, 3.40919, 0.45", "-18.776, -62.8243, 4.39784, 0.91", "-19.3106, -64.7341, 5.21621, 0.68", "-19.8903, -66.9217, 6.15882, 1.59", "-21.095, -71.4545, 8.08822, 0.45", "-21.5953, -73.3874, 8.91113, 0.45", "-21.9281, -74.6965, 9.45943, 1.59", "-22.2022, -75.7868, 9.88644, 1.59", "-22.9194, -78.6451, 10.8681, 0.23", "-23.4325, -80.6572, 11.448, 0.68", "-24.2009, -83.5854, 12.1444, 0.23", "-24.6891, -85.3869, 12.5066, 1.36", "-25.5334, -88.4371, 13.0272, 0.45", "-26.7609, -92.72, 13.6003, 0.45", "-27.376, -94.7847, 13.8018, 0.45", "-27.8493, -96.3522, 13.9002, 1.36", "-28.3902, -98.0308, 13.9297, 1.59", "-28.949, -99.6496, 13.9039, 0.23", "-29.4812, -101.092, 13.8412, 0.45", "-30.5398, -103.875, 13.7044, 0.23", "-30.9476, -104.921, 13.679, 0.23", "-31.7303, -106.786, 13.66, 1.14", "-33.0864, -109.796, 13.6523, 0.23", "-33.9257, -111.571, 13.6585, 1.14", "-35.0075, -113.732, 13.7076, 0.23", "-36.0086, -115.636, 13.7609, 0.45", "-36.9926, -117.388, 13.872, 0.23", "-37.8325, -118.792, 13.9783, 1.14", "-38.272, -119.48, 14.0399, 1.14", "-39.369, -121.133, 14.1755, 0.23", "-39.9991, -122.045, 14.237, 0.91", "-41.3214, -124.027, 14.3573, 0.23", "-42.1415, -125.29, 14.5075, 1.14", "-43.1393, -126.876, 14.768, 0.23", "-43.781, -128.004, 15.0157, 0.91", "-44.08, -128.619, 15.1875, 0.23", "-44.4573, -129.48, 15.4786, 0.68", "-45.2963, -131.616, 16.2122, 0.23", "-45.7848, -132.89, 16.6668, 0.68", "-46.5142, -134.84, 17.3042, 0.23", "-47.0531, -136.166, 17.717, 0.91", "-48.5096, -139.596, 18.6135, 0.23", "-49.0991, -140.957, 18.9465, 0.68", "-49.7133, -142.351, 19.2417, 0.23", "-50.3992, -143.797, 19.5105, 0.91", "-51.9295, -146.743, 19.9161, 0.23", "-53.048, -148.776, 20.1082, 0.91" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-34.0325, -305.455, 102.654, 0.23", "-33.6251, -306.779, 103.859, 0.23", "-33.0618, -308.317, 105.275, 0.91", "-32.494, -309.645, 106.588, 0.23", "-31.8047, -311.203, 108.055, 0.91", "-31.3317, -312.266, 109.032, 0.23", "-30.6459, -313.731, 110.328, 0.68", "-30.0194, -314.953, 111.343, 0.23", "-29.2041, -316.346, 112.472, 0.91", "-28.2799, -317.692, 113.561, 0.23", "-27.4449, -318.81, 114.414, 0.91", "-26.2145, -320.508, 115.574, 0.23", "-25.1012, -322.039, 116.554, 1.14", "-23.5181, -324.271, 117.89, 0.23", "-22.3056, -325.951, 118.839, 0.68", "-21.1348, -327.481, 119.739, 0.23", "-19.7191, -329.319, 120.728, 1.14" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-34.0325, -305.455, 102.654, 0.23", "-33.7271, -306.252, 103.303, 0.23", "-33.3499, -307.235, 104.104, 0.68", "-33.1664, -307.714, 104.494, 0.23", "-32.6835, -308.974, 105.52, 0.91" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_3", "dend_0", "dend_34", "dend_25", "dend_21", "dend_4", "dend_2", "dend_1", "dend_40", "dend_35", "dend_33", "dend_26", "dend_23", "dend_22", "dend_20", "dend_5", "dend_39", "dend_36", "dend_30", "dend_27", "dend_17", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_16", "dend_7", "dend_11", "dend_8", "dend_15", "dend_12", "dend_10", "dend_9", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_24", "dend_3", "dend_0", "dend_34", "dend_25", "dend_21", "dend_4", "dend_2", "dend_1", "dend_40", "dend_35", "dend_33", "dend_26", "dend_23", "dend_22", "dend_20", "dend_5", "dend_39", "dend_36", "dend_30", "dend_27", "dend_17", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_16", "dend_7", "dend_11", "dend_8", "dend_15", "dend_12", "dend_10", "dend_9", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_24", "dend_24", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_34", "dend_34", "dend_34", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_5", "dend_5", "dend_5", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L5_SBC_30bda13a76_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_34, id: dend_34, parent: dend_24
create dend_34
public dend_34
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_3
create dend_21
public dend_21
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_4
create dend_20
public dend_20
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_17, id: dend_17, parent: dend_5
create dend_17
public dend_17
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_6
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_24(0), soma_0(0.49999929751125366)
    connect dend_3(0), soma_0(0.49999929751125366)
    connect dend_0(0), soma_0(0.49999929751125366)
    connect axon_0(0), soma_0(1.0)
    connect dend_34(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_17(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.0539, -10.2039, 0.0, 4.14336 ) }
    soma_0 { pt3dadd( -1.01121, -9.20625, 0.0, 7.24872 ) }
    soma_0 { pt3dadd( -0.968511, -8.20857, 0.0, 9.44401 ) }
    soma_0 { pt3dadd( -0.925815, -7.2109, 0.0, 10.5422 ) }
    soma_0 { pt3dadd( -0.88312, -6.21322, 0.0, 11.4092 ) }
    soma_0 { pt3dadd( -0.840424, -5.21554, 0.0, 11.9642 ) }
    soma_0 { pt3dadd( -0.797728, -4.21787, 0.0, 12.4342 ) }
    soma_0 { pt3dadd( -0.755032, -3.22019, 0.0, 12.6614 ) }
    soma_0 { pt3dadd( -0.712337, -2.22251, 0.0, 12.6364 ) }
    soma_0 { pt3dadd( -0.669641, -1.22484, 0.0, 12.5104 ) }
    soma_0 { pt3dadd( -0.626945, -0.227159, 0.0, 12.2671 ) }
    soma_0 { pt3dadd( -0.584249, 0.770517, 0.0, 12.0239 ) }
    soma_0 { pt3dadd( -0.541554, 1.76819, 0.0, 11.4645 ) }
    soma_0 { pt3dadd( -0.498858, 2.76587, 0.0, 10.6882 ) }
    soma_0 { pt3dadd( -0.456162, 3.76355, 0.0, 9.91399 ) }
    soma_0 { pt3dadd( -0.413466, 4.76122, 0.0, 9.47101 ) }
    soma_0 { pt3dadd( -0.370771, 5.7589, 0.0, 9.20688 ) }
    soma_0 { pt3dadd( -0.328075, 6.75658, 0.0, 8.75449 ) }
    soma_0 { pt3dadd( -0.285379, 7.75425, 0.0, 8.25522 ) }
    soma_0 { pt3dadd( -0.242683, 8.75193, 0.0, 6.57349 ) }
    soma_0 { pt3dadd( -0.199988, 9.74961, 0.0, 3.81 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.284736, 7.14994, 0.16, 6.82 ) }
    dend_24 { pt3dadd( 0.822191, 8.94229, 0.549519, 6.82 ) }
    dend_24 { pt3dadd( 1.67612, 11.79, 1.1684, 6.59 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 24/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.66527, -9.6493, 1.27, 5.68 ) }
    dend_3 { pt3dadd( -3.45376, -12.2047, 0.591773, 3.64 ) }
    dend_3 { pt3dadd( -4.22025, -14.6888, -0.0675285, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.30527, 7.10119, 0.0100002, 1.59 ) }
    dend_0 { pt3dadd( -5.42496, 7.83444, -0.0319012, 1.59 ) }
    dend_0 { pt3dadd( -8.75662, 8.98695, -0.0977602, 1.36 ) }
    dend_0 { pt3dadd( -10.5109, 9.59379, -0.132438, 1.36 ) }
    dend_0 { pt3dadd( -14.5878, 11.004, -0.213028, 1.82 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 32/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.199988, 9.74961, 0.0, 0.483274 ) }
    axon_0 { pt3dadd( 0.441352, 24.7359, 0.0, 0.483274 ) }
    axon_0 { pt3dadd( 1.08269, 39.7222, 0.0, 0.483274 ) }
    // Section: dend_34, id: dend_34, parent: dend_24 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 1.67612, 11.79, 1.1684, 1.14 ) }
    dend_34 { pt3dadd( 0.265031, 14.7577, 0.848716, 1.14 ) }
    dend_34 { pt3dadd( -0.367988, 16.089, 0.705304, 1.14 ) }
    dend_34 { pt3dadd( -0.777503, 16.9503, 0.612527, 1.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 39/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.67612, 11.79, 1.1684, 0.91 ) }
    dend_25 { pt3dadd( 5.36056, 13.4557, -1.52716, 0.91 ) }
    dend_25 { pt3dadd( 7.07481, 14.2307, -2.78132, 0.91 ) }
    // Section: dend_21, id: dend_21, parent: dend_3 (entry count 42/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.22025, -14.6888, -0.0675285, 0.91 ) }
    dend_21 { pt3dadd( -5.95539, -14.9194, -0.452433, 0.91 ) }
    dend_21 { pt3dadd( -8.09678, -14.9636, -0.817595, 0.91 ) }
    dend_21 { pt3dadd( -10.035, -14.9098, -1.12911, 1.14 ) }
    dend_21 { pt3dadd( -11.446, -14.8617, -1.37378, 0.91 ) }
    dend_21 { pt3dadd( -14.0162, -14.8164, -1.8111, 0.68 ) }
    dend_21 { pt3dadd( -15.305, -14.8355, -2.02482, 0.91 ) }
    dend_21 { pt3dadd( -17.7428, -14.8619, -2.40128, 1.36 ) }
    dend_21 { pt3dadd( -20.0017, -14.9101, -2.68916, 0.68 ) }
    dend_21 { pt3dadd( -21.565, -15.0145, -2.86794, 0.68 ) }
    dend_21 { pt3dadd( -23.558, -15.2772, -3.07174, 1.59 ) }
    dend_21 { pt3dadd( -26.1753, -15.7722, -3.30552, 1.14 ) }
    dend_21 { pt3dadd( -27.3228, -16.0101, -3.38872, 0.68 ) }
    dend_21 { pt3dadd( -29.7243, -16.5264, -3.55374, 1.14 ) }
    dend_21 { pt3dadd( -31.644, -16.9416, -3.68198, 0.23 ) }
    dend_21 { pt3dadd( -33.1818, -17.2751, -3.79274, 1.14 ) }
    dend_21 { pt3dadd( -35.0907, -17.7219, -3.97299, 0.91 ) }
    dend_21 { pt3dadd( -38.311, -18.5873, -4.3333, 0.23 ) }
    dend_21 { pt3dadd( -39.8866, -19.1116, -4.54343, 0.91 ) }
    dend_21 { pt3dadd( -41.2714, -19.7104, -4.7715, 0.91 ) }
    dend_21 { pt3dadd( -42.1831, -20.2642, -4.94936, 1.14 ) }
    dend_21 { pt3dadd( -43.4085, -21.4357, -5.21714, 0.45 ) }
    dend_21 { pt3dadd( -44.1021, -22.4485, -5.37946, 0.45 ) }
    dend_21 { pt3dadd( -44.751, -23.7109, -5.53252, 0.91 ) }
    dend_21 { pt3dadd( -45.3222, -25.0336, -5.6479, 0.45 ) }
    dend_21 { pt3dadd( -45.8323, -26.3866, -5.72927, 1.59 ) }
    dend_21 { pt3dadd( -46.724, -29.0487, -5.85661, 0.45 ) }
    dend_21 { pt3dadd( -47.3634, -31.2536, -5.93314, 1.82 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 70/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -4.22025, -14.6888, -0.0675285, 2.95 ) }
    dend_4 { pt3dadd( -4.73115, -17.4886, 0.209377, 2.95 ) }
    dend_4 { pt3dadd( -5.25209, -20.3433, 0.491723, 2.95 ) }
    dend_4 { pt3dadd( -5.47423, -21.5607, 0.612124, 3.41 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 74/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -14.5878, 11.004, -0.213028, 1.14 ) }
    dend_2 { pt3dadd( -16.0761, 9.64515, -0.067446, 1.14 ) }
    dend_2 { pt3dadd( -17.0706, 8.58111, 0.00240458, 0.45 ) }
    dend_2 { pt3dadd( -17.9833, 7.54766, 0.0626953, 1.59 ) }
    dend_2 { pt3dadd( -19.8251, 5.51132, 0.180332, 0.45 ) }
    dend_2 { pt3dadd( -21.199, 4.05712, 0.218948, 0.91 ) }
    dend_2 { pt3dadd( -21.8674, 3.38853, 0.221206, 1.59 ) }
    dend_2 { pt3dadd( -23.4787, 1.71554, 0.207536, 0.23 ) }
    dend_2 { pt3dadd( -24.1471, 1.08069, 0.153579, 0.23 ) }
    dend_2 { pt3dadd( -24.8869, 0.564414, -0.0260669, 0.23 ) }
    dend_2 { pt3dadd( -26.3439, 0.331611, -0.551742, 0.68 ) }
    dend_2 { pt3dadd( -27.7798, 0.348483, -0.968379, 0.68 ) }
    dend_2 { pt3dadd( -28.8516, 0.329322, -1.17761, 0.68 ) }
    dend_2 { pt3dadd( -30.5859, 0.205305, -1.34764, 1.59 ) }
    dend_2 { pt3dadd( -31.9364, -0.0406248, -1.36827, 1.59 ) }
    dend_2 { pt3dadd( -33.8599, -0.513775, -1.2702, 0.23 ) }
    dend_2 { pt3dadd( -35.5878, -1.0173, -1.08947, 0.91 ) }
    dend_2 { pt3dadd( -37.2161, -1.49293, -0.872186, 0.91 ) }
    dend_2 { pt3dadd( -38.6045, -1.86095, -0.64205, 0.91 ) }
    dend_2 { pt3dadd( -40.377, -2.2608, -0.337071, 0.23 ) }
    dend_2 { pt3dadd( -42.8801, -2.74793, 0.062253, 0.68 ) }
    dend_2 { pt3dadd( -44.3057, -2.96532, 0.265406, 0.68 ) }
    dend_2 { pt3dadd( -46.2042, -3.1835, 0.497014, 0.23 ) }
    dend_2 { pt3dadd( -47.9606, -3.32919, 0.67839, 0.45 ) }
    dend_2 { pt3dadd( -50.1715, -3.47949, 0.877419, 0.45 ) }
    dend_2 { pt3dadd( -51.5821, -3.55222, 0.991739, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_2 { pt3dadd( -52.9931, -3.61359, 1.10227, 0.23 ) }
    dend_2 { pt3dadd( -55.0267, -3.68283, 1.26035, 1.36 ) }
    dend_2 { pt3dadd( -56.8053, -3.76557, 1.39739, 0.45 ) }
    dend_2 { pt3dadd( -59.1735, -3.87993, 1.587, 0.91 ) }
    dend_2 { pt3dadd( -60.6304, -3.98504, 1.73534, 0.91 ) }
    dend_2 { pt3dadd( -61.8223, -4.08006, 1.86842, 1.36 ) }
    dend_2 { pt3dadd( -63.5763, -4.22827, 2.08325, 0.23 ) }
    dend_2 { pt3dadd( -65.5791, -4.39415, 2.34674, 0.23 ) }
    dend_2 { pt3dadd( -66.5845, -4.4939, 2.47686, 0.91 ) }
    dend_2 { pt3dadd( -69.2645, -4.90909, 2.84397, 0.23 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -14.5878, 11.004, -0.213028, 0.23 ) }
    dend_1 { pt3dadd( -16.3931, 11.5038, 0.395738, 0.23 ) }
    dend_1 { pt3dadd( -18.2431, 12.0182, 1.07547, 0.68 ) }
    dend_1 { pt3dadd( -19.9159, 12.4918, 1.78, 0.23 ) }
    dend_1 { pt3dadd( -20.6479, 12.6945, 2.10467, 0.45 ) }
    dend_1 { pt3dadd( -22.17, 13.1339, 2.84454, 0.91 ) }
    dend_1 { pt3dadd( -23.753, 13.6217, 3.64305, 0.23 ) }
    dend_1 { pt3dadd( -24.4357, 13.8338, 4.05212, 0.68 ) }
    dend_1 { pt3dadd( -25.3689, 14.2307, 4.73808, 0.23 ) }
    dend_1 { pt3dadd( -25.8351, 14.4848, 5.14688, 0.68 ) }
    dend_1 { pt3dadd( -26.8636, 15.1292, 6.08608, 0.23 ) }
    dend_1 { pt3dadd( -27.4008, 15.4619, 6.57428, 0.68 ) }
    dend_1 { pt3dadd( -28.554, 16.0913, 7.59984, 0.23 ) }
    dend_1 { pt3dadd( -29.7543, 16.6343, 8.59831, 0.68 ) }
    dend_1 { pt3dadd( -31.8968, 17.4636, 10.2597, 0.23 ) }
    dend_1 { pt3dadd( -32.9264, 17.7971, 10.9843, 0.45 ) }
    dend_1 { pt3dadd( -34.6959, 18.2095, 12.0329, 0.23 ) }
    dend_1 { pt3dadd( -35.9229, 18.4029, 12.6102, 0.23 ) }
    dend_1 { pt3dadd( -37.1198, 18.5675, 12.9905, 0.23 ) }
    dend_1 { pt3dadd( -38.2324, 18.7407, 13.2285, 0.23 ) }
    dend_1 { pt3dadd( -39.4345, 19.0457, 13.3881, 0.23 ) }
    dend_1 { pt3dadd( -40.8134, 19.5505, 13.5272, 0.23 ) }
    dend_1 { pt3dadd( -42.8436, 20.5153, 13.6921, 0.45 ) }
    dend_1 { pt3dadd( -45.0203, 21.6836, 13.8825, 0.23 ) }
    dend_1 { pt3dadd( -46.2576, 22.3642, 14.0074, 0.68 ) }
    dend_1 { pt3dadd( -48.1459, 23.3352, 14.2255, 0.23 ) }
    dend_1 { pt3dadd( -50.1132, 24.3164, 14.4946, 0.23 ) }
    dend_1 { pt3dadd( -52.1842, 25.3152, 14.7769, 0.23 ) }
    dend_1 { pt3dadd( -54.2146, 26.26, 15.0642, 0.23 ) }
    dend_1 { pt3dadd( -56.4225, 27.1775, 15.3826, 0.23 ) }
    dend_1 { pt3dadd( -59.1009, 28.1477, 15.7507, 0.45 ) }
    dend_1 { pt3dadd( -59.8405, 28.3733, 15.8355, 0.23 ) }
    dend_1 { pt3dadd( -60.9861, 28.6649, 15.962, 0.68 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 43/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.08269, 39.7222, 0.0, 1.59 ) }
    axon_1 { pt3dadd( 1.72403, 54.7085, 0.0, 1.59 ) }
    axon_1 { pt3dadd( 2.36537, 69.6947, 0.0, 1.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 46/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -0.777503, 16.9503, 0.612527, 0.23 ) }
    dend_40 { pt3dadd( -1.42937, 16.6708, 2.52663, 0.23 ) }
    dend_40 { pt3dadd( -1.44707, 15.8774, 3.58742, 0.91 ) }
    dend_40 { pt3dadd( -1.40472, 14.1769, 5.17517, 0.23 ) }
    dend_40 { pt3dadd( -1.60142, 12.8349, 6.51693, 0.23 ) }
    dend_40 { pt3dadd( -2.01184, 11.9196, 7.88669, 0.23 ) }
    dend_40 { pt3dadd( -2.44005, 11.3794, 8.95524, 0.91 ) }
    dend_40 { pt3dadd( -3.36678, 10.595, 10.3087, 0.23 ) }
    dend_40 { pt3dadd( -3.91536, 10.3285, 10.8622, 0.23 ) }
    dend_40 { pt3dadd( -5.41501, 9.73507, 12.2304, 0.91 ) }
    dend_40 { pt3dadd( -7.22842, 9.18511, 13.8531, 0.23 ) }
    dend_40 { pt3dadd( -9.28342, 8.72281, 15.5223, 0.23 ) }
    dend_40 { pt3dadd( -11.4947, 8.39534, 17.258, 0.68 ) }
    dend_40 { pt3dadd( -15.1888, 7.9946, 20.0504, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 60/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -0.777503, 16.9503, 0.612527, 0.68 ) }
    dend_35 { pt3dadd( -0.516436, 19.8374, 0.534918, 0.68 ) }
    dend_35 { pt3dadd( -0.334289, 21.8653, 0.527704, 0.68 ) }
    dend_35 { pt3dadd( -0.243044, 23.0158, 0.540665, 1.36 ) }
    dend_35 { pt3dadd( 0.0154229, 26.2343, 0.603422, 0.68 ) }
    dend_35 { pt3dadd( 0.0920016, 27.4181, 0.618289, 0.68 ) }
    dend_35 { pt3dadd( 0.158907, 29.848, 0.632301, 1.59 ) }
    dend_35 { pt3dadd( 0.150916, 31.0014, 0.668202, 1.59 ) }
    dend_35 { pt3dadd( -0.0182279, 33.9113, 0.841582, 0.23 ) }
    dend_35 { pt3dadd( -0.240974, 35.4119, 0.956464, 0.23 ) }
    dend_35 { pt3dadd( -0.685017, 37.203, 1.11517, 1.14 ) }
    dend_35 { pt3dadd( -1.28884, 39.2089, 1.30265, 0.91 ) }
    dend_35 { pt3dadd( -1.78287, 40.6484, 1.43703, 0.91 ) }
    dend_35 { pt3dadd( -2.4154, 42.4369, 1.61481, 1.36 ) }
    dend_35 { pt3dadd( -3.13731, 44.2967, 1.8266, 0.68 ) }
    dend_35 { pt3dadd( -3.88996, 46.1769, 2.06337, 1.14 ) }
    dend_35 { pt3dadd( -4.60927, 48.0877, 2.33466, 0.45 ) }
    dend_35 { pt3dadd( -5.0535, 49.4507, 2.50909, 1.59 ) }
    dend_35 { pt3dadd( -5.62091, 51.4001, 2.65879, 2.27 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 79/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 7.07481, 14.2307, -2.78132, 0.91 ) }
    dend_33 { pt3dadd( 7.21517, 14.1695, -4.62296, 0.91 ) }
    dend_33 { pt3dadd( 7.42027, 13.5678, -7.31148, 0.91 ) }
    dend_33 { pt3dadd( 7.98882, 12.3352, -11.4345, 0.68 ) }
    dend_33 { pt3dadd( 8.32799, 11.68, -13.243, 0.68 ) }
    dend_33 { pt3dadd( 8.74906, 10.8652, -15.0696, 1.14 ) }
    dend_33 { pt3dadd( 9.50549, 9.36586, -17.8185, 0.68 ) }
    dend_33 { pt3dadd( 10.5121, 7.16484, -20.6958, 0.23 ) }
    dend_33 { pt3dadd( 11.077, 5.6657, -22.0098, 0.23 ) }
    dend_33 { pt3dadd( 11.3944, 4.65068, -22.6538, 0.23 ) }
    dend_33 { pt3dadd( 11.8993, 2.63842, -23.6995, 1.14 ) }
    dend_33 { pt3dadd( 12.4134, 0.658336, -24.6442, 1.82 ) }
    dend_33 { pt3dadd( 12.9555, -1.48845, -25.5261, 0.68 ) }
    dend_33 { pt3dadd( 13.4626, -4.23864, -26.3802, 1.14 ) }
    dend_33 { pt3dadd( 13.6953, -6.41123, -26.9934, 0.45 ) }
    dend_33 { pt3dadd( 13.8108, -8.19104, -27.466, 0.45 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 7.07481, 14.2307, -2.78132, 1.14 ) }
    dend_26 { pt3dadd( 8.82374, 14.5334, -3.59885, 1.14 ) }
    dend_26 { pt3dadd( 9.80759, 14.7037, -4.05875, 1.59 ) }
    dend_26 { pt3dadd( 11.5699, 15.0087, -4.88253, 1.59 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 99/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -47.3634, -31.2536, -5.93314, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_23 { pt3dadd( -50.0307, -32.2212, -5.50886, 0.23 ) }
    dend_23 { pt3dadd( -51.8783, -33.0261, -5.25115, 0.68 ) }
    dend_23 { pt3dadd( -54.1832, -34.2032, -4.92186, 0.23 ) }
    dend_23 { pt3dadd( -55.1457, -34.7586, -4.78328, 0.23 ) }
    dend_23 { pt3dadd( -57.1939, -36.0281, -4.49678, 0.23 ) }
    dend_23 { pt3dadd( -59.336, -37.4568, -4.20912, 0.91 ) }
    dend_23 { pt3dadd( -60.7939, -38.5616, -4.03888, 0.23 ) }
    dend_23 { pt3dadd( -62.1504, -39.703, -3.873, 0.91 ) }
    dend_23 { pt3dadd( -63.2931, -40.6882, -3.72187, 0.23 ) }
    dend_23 { pt3dadd( -64.7148, -41.8735, -3.52793, 1.59 ) }
    dend_23 { pt3dadd( -66.7627, -43.4557, -3.25569, 0.23 ) }
    dend_23 { pt3dadd( -68.1048, -44.3986, -3.0765, 0.23 ) }
    dend_23 { pt3dadd( -70.6032, -45.9428, -2.76684, 0.23 ) }
    dend_23 { pt3dadd( -72.0743, -46.7395, -2.60416, 1.59 ) }
    dend_23 { pt3dadd( -72.9839, -47.1826, -2.50879, 0.23 ) }
    dend_23 { pt3dadd( -74.9464, -48.0311, -2.32536, 0.68 ) }
    dend_23 { pt3dadd( -77.0647, -48.8441, -2.18281, 0.23 ) }
    dend_23 { pt3dadd( -78.6232, -49.4233, -2.15338, 1.14 ) }
    dend_23 { pt3dadd( -79.2863, -49.6794, -2.16991, 1.14 ) }
    dend_23 { pt3dadd( -80.5057, -50.1892, -2.23626, 0.23 ) }
    dend_23 { pt3dadd( -82.4611, -51.0914, -2.32918, 0.68 ) }
    dend_23 { pt3dadd( -84.4205, -52.07, -2.41084, 0.23 ) }
    dend_23 { pt3dadd( -86.7551, -53.262, -2.4266, 1.14 ) }
    dend_23 { pt3dadd( -89.7568, -54.8487, -2.3448, 0.23 ) }
    dend_23 { pt3dadd( -91.4906, -55.7969, -2.23558, 0.91 ) }
    dend_23 { pt3dadd( -94.8056, -57.6934, -1.92747, 0.23 ) }
    dend_23 { pt3dadd( -95.7535, -58.2754, -1.80984, 0.91 ) }
    dend_23 { pt3dadd( -99.1867, -60.5159, -1.2606, 0.23 ) }
    dend_23 { pt3dadd( -101.931, -62.4424, -0.670252, 1.14 ) }
    dend_23 { pt3dadd( -104.322, -64.1628, -0.0922173, 0.45 ) }
    dend_23 { pt3dadd( -105.921, -65.3658, 0.305409, 1.14 ) }
    dend_23 { pt3dadd( -107.187, -66.365, 0.609545, 1.14 ) }
    dend_23 { pt3dadd( -108.722, -67.6777, 0.992192, 0.23 ) }
    dend_23 { pt3dadd( -109.779, -68.8204, 1.26306, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 34/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -47.3634, -31.2536, -5.93314, 0.45 ) }
    dend_22 { pt3dadd( -49.583, -33.6847, -6.25846, 0.45 ) }
    dend_22 { pt3dadd( -51.1673, -35.4201, -6.49067, 1.14 ) }
    dend_22 { pt3dadd( -52.16, -36.5073, -6.63616, 0.23 ) }
    dend_22 { pt3dadd( -53.464, -37.9356, -6.82729, 1.36 ) }
    dend_22 { pt3dadd( -54.785, -39.3825, -7.02091, 0.45 ) }
    // Section: dend_20, id: dend_20, parent: dend_4 (entry count 40/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -5.47423, -21.5607, 0.612124, 0.23 ) }
    dend_20 { pt3dadd( -5.14202, -22.9499, 1.3294, 0.23 ) }
    dend_20 { pt3dadd( -4.74278, -24.6147, 2.16102, 0.23 ) }
    dend_20 { pt3dadd( -4.30563, -26.3559, 3.05016, 1.14 ) }
    dend_20 { pt3dadd( -3.84116, -28.0908, 3.95554, 0.23 ) }
    dend_20 { pt3dadd( -3.49904, -29.2974, 4.5923, 0.91 ) }
    dend_20 { pt3dadd( -3.23, -30.2177, 5.07681, 0.91 ) }
    dend_20 { pt3dadd( -2.57639, -32.4591, 6.22696, 0.23 ) }
    dend_20 { pt3dadd( -2.07675, -34.1013, 7.07303, 1.14 ) }
    dend_20 { pt3dadd( -1.72589, -35.227, 7.64609, 1.14 ) }
    dend_20 { pt3dadd( -1.07878, -37.3046, 8.67041, 0.45 ) }
    dend_20 { pt3dadd( -0.439264, -39.3264, 9.64489, 0.45 ) }
    dend_20 { pt3dadd( -0.12296, -40.3872, 10.1412, 0.91 ) }
    dend_20 { pt3dadd( 0.404941, -42.2003, 10.9762, 0.23 ) }
    dend_20 { pt3dadd( 0.863912, -43.9278, 11.7677, 0.23 ) }
    dend_20 { pt3dadd( 1.35572, -45.9447, 12.7003, 0.68 ) }
    dend_20 { pt3dadd( 1.90612, -48.2685, 13.8013, 0.23 ) }
    dend_20 { pt3dadd( 2.25754, -49.7988, 14.5565, 0.91 ) }
    dend_20 { pt3dadd( 2.70792, -51.9011, 15.65, 1.14 ) }
    dend_20 { pt3dadd( 3.34872, -55.4149, 17.6116, 0.23 ) }
    dend_20 { pt3dadd( 3.5132, -56.5368, 18.2836, 0.23 ) }
    dend_20 { pt3dadd( 3.68338, -58.1431, 19.2812, 0.68 ) }
    dend_20 { pt3dadd( 3.82201, -60.1611, 20.5722, 0.23 ) }
    dend_20 { pt3dadd( 3.91571, -62.6605, 22.2405, 1.36 ) }
    dend_20 { pt3dadd( 3.92825, -64.4288, 23.4551, 0.68 ) }
    dend_20 { pt3dadd( 3.89573, -66.667, 24.9564, 0.23 ) }
    dend_20 { pt3dadd( 3.87458, -67.3778, 25.4124, 0.91 ) }
    dend_20 { pt3dadd( 3.79272, -69.4604, 26.7084, 0.23 ) }
    dend_20 { pt3dadd( 3.74869, -70.8735, 27.547, 0.91 ) }
    dend_20 { pt3dadd( 3.73105, -72.9093, 28.6843, 1.14 ) }
    dend_20 { pt3dadd( 3.77308, -75.3849, 30.0054, 0.23 ) }
    dend_20 { pt3dadd( 3.80695, -76.632, 30.6571, 0.91 ) }
    dend_20 { pt3dadd( 3.87828, -78.6692, 31.7109, 0.23 ) }
    dend_20 { pt3dadd( 3.93363, -79.4138, 32.0818, 0.91 ) }
    dend_20 { pt3dadd( 4.0503, -80.4358, 32.5771, 0.91 ) }
    dend_20 { pt3dadd( 4.42012, -82.7821, 33.7734, 0.23 ) }
    dend_20 { pt3dadd( 4.77956, -84.5404, 34.7076, 2.05 ) }
    dend_20 { pt3dadd( 4.95207, -85.298, 35.1061, 2.05 ) }
    dend_20 { pt3dadd( 6.03557, -89.6322, 37.3629, 0.23 ) }
    dend_20 { pt3dadd( 6.41689, -91.0888, 38.1235, 0.91 ) }
    dend_20 { pt3dadd( 7.46587, -94.9061, 40.0908, 0.23 ) }
    dend_20 { pt3dadd( 7.79272, -96.0276, 40.6593, 0.23 ) }
    dend_20 { pt3dadd( 8.08938, -96.99, 41.1542, 1.14 ) }
    dend_20 { pt3dadd( 8.38309, -97.8994, 41.6299, 1.14 ) }
    dend_20 { pt3dadd( 9.42465, -101.044, 43.3248, 0.23 ) }
    dend_20 { pt3dadd( 9.89494, -102.407, 44.1031, 0.23 ) }
    dend_20 { pt3dadd( 10.2441, -103.406, 44.7025, 0.91 ) }
    dend_20 { pt3dadd( 10.6464, -104.525, 45.4099, 0.91 ) }
    dend_20 { pt3dadd( 11.5813, -106.906, 47.0273, 0.23 ) }
    dend_20 { pt3dadd( 12.0725, -108.096, 47.8851, 1.14 ) }
    dend_20 { pt3dadd( 13.2142, -110.607, 49.8473, 0.23 ) }
    dend_20 { pt3dadd( 13.885, -112.022, 50.9985, 0.23 ) }
    dend_20 { pt3dadd( 14.2241, -112.711, 51.5668, 0.91 ) }
    dend_20 { pt3dadd( 14.6848, -113.587, 52.3478, 0.91 ) }
    dend_20 { pt3dadd( 15.4002, -114.801, 53.5254, 0.23 ) }
    dend_20 { pt3dadd( 15.8549, -115.494, 54.2318, 0.68 ) }
    dend_20 { pt3dadd( 16.4699, -116.38, 55.1859, 0.23 ) }
    dend_20 { pt3dadd( 17.2, -117.392, 56.2962, 0.91 ) }
    dend_20 { pt3dadd( 19.2895, -120.147, 59.3888, 0.23 ) }
    dend_20 { pt3dadd( 19.7938, -120.781, 60.121, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( 20.4768, -121.563, 61.0688, 1.14 ) }
    dend_20 { pt3dadd( 22.0912, -123.402, 63.3844, 0.23 ) }
    dend_20 { pt3dadd( 22.6069, -124.021, 64.2134, 0.23 ) }
    dend_20 { pt3dadd( 23.475, -125.174, 65.7797, 0.68 ) }
    dend_20 { pt3dadd( 24.0048, -126.143, 67.0405, 0.23 ) }
    dend_20 { pt3dadd( 24.4216, -127.349, 68.4941, 0.91 ) }
    dend_20 { pt3dadd( 24.5726, -128.343, 69.639, 0.23 ) }
    dend_20 { pt3dadd( 24.6126, -129.85, 71.3977, 0.23 ) }
    dend_20 { pt3dadd( 24.6308, -130.754, 72.4731, 0.68 ) }
    dend_20 { pt3dadd( 24.6957, -132.538, 74.5649, 0.23 ) }
    dend_20 { pt3dadd( 24.8142, -133.985, 76.3397, 0.68 ) }
    dend_20 { pt3dadd( 25.1541, -136.444, 79.4655, 0.23 ) }
    dend_20 { pt3dadd( 25.8138, -139.155, 82.9981, 0.23 ) }
    dend_20 { pt3dadd( 26.2555, -140.611, 84.9373, 0.23 ) }
    dend_20 { pt3dadd( 26.6215, -141.63, 86.3804, 0.68 ) }
    dend_20 { pt3dadd( 27.4815, -143.54, 89.2632, 0.23 ) }
    dend_20 { pt3dadd( 28.2927, -145.138, 91.8448, 0.23 ) }
    dend_20 { pt3dadd( 29.0262, -146.38, 93.8386, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.47423, -21.5607, 0.612124, 2.27 ) }
    dend_5 { pt3dadd( -6.97025, -25.7481, -0.112263, 2.27 ) }
    dend_5 { pt3dadd( -7.67814, -27.7295, -0.455034, 2.73 ) }
    dend_5 { pt3dadd( -8.43536, -29.849, -0.821688, 3.64 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 22/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -5.62091, 51.4001, 2.65879, 0.23 ) }
    dend_39 { pt3dadd( -3.39205, 52.8681, 4.80348, 0.23 ) }
    dend_39 { pt3dadd( -1.66635, 53.572, 6.14651, 0.91 ) }
    dend_39 { pt3dadd( 0.0276696, 54.2137, 7.34651, 0.23 ) }
    dend_39 { pt3dadd( 1.51563, 54.7983, 8.42472, 0.23 ) }
    dend_39 { pt3dadd( 2.85825, 55.3032, 9.36969, 0.91 ) }
    dend_39 { pt3dadd( 4.61146, 55.9969, 10.5474, 0.23 ) }
    dend_39 { pt3dadd( 5.54746, 56.3046, 11.1276, 0.23 ) }
    dend_39 { pt3dadd( 6.39274, 56.6631, 11.6582, 0.23 ) }
    dend_39 { pt3dadd( 7.75658, 57.4805, 12.5035, 0.23 ) }
    dend_39 { pt3dadd( 8.89309, 58.4608, 13.2281, 1.36 ) }
    dend_39 { pt3dadd( 9.85086, 59.4279, 13.8454, 1.36 ) }
    dend_39 { pt3dadd( 11.8691, 61.7762, 15.0864, 0.23 ) }
    dend_39 { pt3dadd( 13.1266, 63.2309, 15.7906, 0.23 ) }
    dend_39 { pt3dadd( 14.1826, 64.4502, 16.2997, 0.23 ) }
    dend_39 { pt3dadd( 15.6711, 66.286, 16.9039, 0.23 ) }
    dend_39 { pt3dadd( 17.4356, 68.5833, 17.5381, 1.14 ) }
    dend_39 { pt3dadd( 19.1293, 70.887, 18.1256, 0.23 ) }
    dend_39 { pt3dadd( 20.3867, 72.6368, 18.4872, 0.23 ) }
    dend_39 { pt3dadd( 22.0942, 75.0889, 18.9689, 0.45 ) }
    dend_39 { pt3dadd( 23.6272, 77.5326, 19.3999, 0.23 ) }
    dend_39 { pt3dadd( 24.5313, 79.1898, 19.646, 0.68 ) }
    dend_39 { pt3dadd( 25.6645, 81.8532, 19.9659, 0.23 ) }
    dend_39 { pt3dadd( 26.0852, 83.0992, 20.1486, 0.23 ) }
    dend_39 { pt3dadd( 26.517, 84.7125, 20.4109, 0.91 ) }
    dend_39 { pt3dadd( 26.7942, 85.8009, 20.6038, 0.91 ) }
    dend_39 { pt3dadd( 27.1138, 86.8778, 20.7991, 0.23 ) }
    dend_39 { pt3dadd( 28.0269, 89.6104, 21.4055, 0.68 ) }
    dend_39 { pt3dadd( 29.3532, 93.1068, 22.2318, 0.23 ) }
    dend_39 { pt3dadd( 29.7976, 94.2468, 22.5436, 0.91 ) }
    dend_39 { pt3dadd( 30.8119, 96.8139, 23.2658, 0.23 ) }
    dend_39 { pt3dadd( 31.9526, 99.6727, 24.1114, 0.68 ) }
    dend_39 { pt3dadd( 33.1768, 102.74, 25.0761, 0.23 ) }
    dend_39 { pt3dadd( 34.4141, 106.094, 26.1432, 0.68 ) }
    dend_39 { pt3dadd( 35.0824, 108.208, 26.8074, 0.23 ) }
    dend_39 { pt3dadd( 35.6853, 110.722, 27.6217, 0.68 ) }
    dend_39 { pt3dadd( 35.9494, 112.479, 28.2216, 0.23 ) }
    dend_39 { pt3dadd( 36.0325, 113.921, 28.7532, 0.23 ) }
    dend_39 { pt3dadd( 36.0696, 115.825, 29.4332, 0.23 ) }
    dend_39 { pt3dadd( 36.0277, 118.08, 30.3, 0.68 ) }
    dend_39 { pt3dadd( 35.924, 121.357, 31.5713, 0.23 ) }
    dend_39 { pt3dadd( 35.7434, 124.125, 32.7099, 0.68 ) }
    dend_39 { pt3dadd( 35.4247, 126.98, 33.8511, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 65/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -5.62091, 51.4001, 2.65879, 0.23 ) }
    dend_36 { pt3dadd( -7.26171, 54.4267, 2.85571, 0.23 ) }
    dend_36 { pt3dadd( -8.74233, 56.9397, 3.04708, 0.91 ) }
    dend_36 { pt3dadd( -11.8018, 61.8092, 3.43758, 0.23 ) }
    dend_36 { pt3dadd( -12.9197, 63.431, 3.56554, 0.91 ) }
    dend_36 { pt3dadd( -14.1071, 65.0772, 3.69002, 0.91 ) }
    dend_36 { pt3dadd( -15.9519, 67.6853, 3.87857, 0.23 ) }
    dend_36 { pt3dadd( -18.1494, 70.789, 4.13727, 0.23 ) }
    dend_36 { pt3dadd( -20.2698, 73.8256, 4.32646, 0.23 ) }
    dend_36 { pt3dadd( -21.8682, 76.3093, 4.42304, 0.68 ) }
    dend_36 { pt3dadd( -22.8735, 78.0217, 4.46645, 0.23 ) }
    dend_36 { pt3dadd( -23.8447, 79.9247, 4.50112, 0.23 ) }
    dend_36 { pt3dadd( -24.3344, 81.0241, 4.52859, 0.23 ) }
    dend_36 { pt3dadd( -25.4287, 83.7632, 4.66053, 1.59 ) }
    dend_36 { pt3dadd( -26.7474, 87.2728, 4.89443, 0.68 ) }
    dend_36 { pt3dadd( -27.6237, 89.5618, 5.06129, 0.23 ) }
    dend_36 { pt3dadd( -28.2169, 90.8811, 5.1625, 0.91 ) }
    dend_36 { pt3dadd( -29.2759, 92.868, 5.31571, 0.23 ) }
    dend_36 { pt3dadd( -29.8485, 93.8376, 5.38732, 0.91 ) }
    dend_36 { pt3dadd( -30.9031, 95.5036, 5.53152, 0.23 ) }
    dend_36 { pt3dadd( -31.884, 96.9778, 5.63361, 1.14 ) }
    dend_36 { pt3dadd( -32.8262, 98.3582, 5.68997, 1.14 ) }
    dend_36 { pt3dadd( -33.9533, 99.8732, 5.73987, 0.23 ) }
    dend_36 { pt3dadd( -35.4976, 101.772, 5.82181, 0.23 ) }
    dend_36 { pt3dadd( -37.3886, 103.919, 6.00957, 0.91 ) }
    dend_36 { pt3dadd( -38.8016, 105.391, 6.19507, 0.23 ) }
    dend_36 { pt3dadd( -40.6792, 107.159, 6.51857, 0.23 ) }
    dend_36 { pt3dadd( -42.1096, 108.371, 6.8032, 0.91 ) }
    dend_36 { pt3dadd( -44.5207, 110.197, 7.37348, 0.23 ) }
    dend_36 { pt3dadd( -46.5918, 111.691, 7.91407, 0.68 ) }
    dend_36 { pt3dadd( -47.4776, 112.357, 8.14768, 0.68 ) }
    dend_36 { pt3dadd( -49.0883, 113.616, 8.58887, 0.23 ) }
    dend_36 { pt3dadd( -50.8526, 115.076, 9.03275, 0.68 ) }
    dend_36 { pt3dadd( -52.4926, 116.426, 9.35805, 0.23 ) }
    dend_36 { pt3dadd( -54.2876, 117.774, 9.6467, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -57.1444, 119.725, 9.96214, 0.91 ) }
    dend_36 { pt3dadd( -59.3837, 121.086, 10.0796, 0.23 ) }
    dend_36 { pt3dadd( -62.3644, 122.745, 10.0643, 0.23 ) }
    dend_36 { pt3dadd( -65.8472, 124.556, 9.9143, 0.91 ) }
    dend_36 { pt3dadd( -68.6424, 125.912, 9.69984, 0.23 ) }
    dend_36 { pt3dadd( -70.9408, 126.919, 9.49646, 0.91 ) }
    dend_36 { pt3dadd( -73.301, 127.928, 9.2387, 0.23 ) }
    dend_36 { pt3dadd( -77.034, 129.631, 8.74603, 0.23 ) }
    dend_36 { pt3dadd( -79.5171, 130.834, 8.39361, 0.91 ) }
    dend_36 { pt3dadd( -81.953, 132.177, 8.02017, 0.23 ) }
    dend_36 { pt3dadd( -83.2221, 132.944, 7.82359, 0.68 ) }
    dend_36 { pt3dadd( -85.5027, 134.304, 7.5623, 0.23 ) }
    dend_36 { pt3dadd( -87.2752, 135.354, 7.44981, 0.91 ) }
    dend_36 { pt3dadd( -89.0607, 136.366, 7.41465, 0.23 ) }
    dend_36 { pt3dadd( -90.639, 137.274, 7.45133, 0.68 ) }
    dend_36 { pt3dadd( -92.1972, 138.165, 7.53904, 0.23 ) }
    dend_36 { pt3dadd( -95.3682, 139.969, 7.7745, 0.91 ) }
    dend_36 { pt3dadd( -98.8199, 141.916, 8.08826, 0.23 ) }
    dend_36 { pt3dadd( -102.018, 143.788, 8.39323, 0.23 ) }
    dend_36 { pt3dadd( -104.392, 145.27, 8.61776, 0.91 ) }
    dend_36 { pt3dadd( -106.323, 146.593, 8.79407, 0.23 ) }
    dend_36 { pt3dadd( -107.214, 147.276, 8.84954, 0.68 ) }
    dend_36 { pt3dadd( -108.582, 148.519, 8.8781, 0.23 ) }
    dend_36 { pt3dadd( -109.841, 149.889, 8.82323, 0.91 ) }
    dend_36 { pt3dadd( -111.707, 152.29, 8.57645, 0.23 ) }
    dend_36 { pt3dadd( -112.747, 153.768, 8.3587, 0.91 ) }
    dend_36 { pt3dadd( -114.069, 155.802, 8.02746, 0.23 ) }
    dend_36 { pt3dadd( -115.043, 157.313, 7.74316, 1.14 ) }
    dend_36 { pt3dadd( -117.072, 160.433, 7.0216, 0.23 ) }
    dend_36 { pt3dadd( -119.038, 163.353, 6.26091, 0.91 ) }
    dend_36 { pt3dadd( -120.672, 165.658, 5.58797, 0.23 ) }
    dend_36 { pt3dadd( -122.102, 167.543, 4.99662, 0.91 ) }
    dend_36 { pt3dadd( -124.017, 169.987, 4.1906, 0.23 ) }
    dend_36 { pt3dadd( -125.46, 171.715, 3.55192, 0.23 ) }
    dend_36 { pt3dadd( -127.068, 173.493, 2.83088, 0.91 ) }
    dend_36 { pt3dadd( -129.156, 175.726, 1.90541, 0.23 ) }
    dend_36 { pt3dadd( -130.234, 176.846, 1.43498, 0.23 ) }
    dend_36 { pt3dadd( -131.315, 177.93, 0.978597, 0.68 ) }
    dend_36 { pt3dadd( -132.056, 178.623, 0.702757, 0.23 ) }
    dend_36 { pt3dadd( -133.848, 180.246, 0.0876634, 0.68 ) }
    dend_36 { pt3dadd( -135.858, 181.967, -0.585399, 0.23 ) }
    dend_36 { pt3dadd( -137.401, 183.252, -1.02397, 0.23 ) }
    dend_36 { pt3dadd( -138.439, 184.124, -1.29816, 0.68 ) }
    dend_36 { pt3dadd( -139.753, 185.214, -1.60577, 0.23 ) }
    dend_36 { pt3dadd( -140.937, 186.236, -1.86243, 0.23 ) }
    dend_36 { pt3dadd( -142.144, 187.278, -2.09703, 0.45 ) }
    dend_36 { pt3dadd( -144.673, 189.471, -2.57493, 0.23 ) }
    dend_36 { pt3dadd( -146.461, 191.118, -2.93158, 1.82 ) }
    dend_36 { pt3dadd( -147.76, 192.355, -3.19019, 0.68 ) }
    dend_36 { pt3dadd( -150.383, 194.958, -3.70175, 0.23 ) }
    dend_36 { pt3dadd( -152.462, 196.972, -4.03226, 0.91 ) }
    dend_36 { pt3dadd( -154.435, 198.908, -4.35011, 0.23 ) }
    dend_36 { pt3dadd( -156.035, 200.452, -4.5999, 0.23 ) }
    dend_36 { pt3dadd( -157.0, 201.393, -4.72736, 0.91 ) }
    dend_36 { pt3dadd( -158.337, 202.741, -4.90144, 0.23 ) }
    dend_36 { pt3dadd( -159.79, 204.228, -5.04968, 1.36 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 56/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 11.5699, 15.0087, -4.88253, 0.68 ) }
    dend_30 { pt3dadd( 13.5463, 14.0169, -5.1039, 0.68 ) }
    dend_30 { pt3dadd( 15.6835, 12.9847, -5.2281, 0.68 ) }
    dend_30 { pt3dadd( 17.5377, 12.0636, -5.26475, 0.68 ) }
    dend_30 { pt3dadd( 19.3757, 11.0244, -5.21248, 1.14 ) }
    dend_30 { pt3dadd( 21.5746, 9.72395, -5.15552, 1.59 ) }
    dend_30 { pt3dadd( 24.6588, 7.87561, -5.08686, 0.68 ) }
    dend_30 { pt3dadd( 27.2604, 6.32314, -4.99019, 1.82 ) }
    dend_30 { pt3dadd( 30.0075, 4.67239, -4.8901, 0.91 ) }
    dend_30 { pt3dadd( 34.6722, 1.79178, -4.77689, 0.68 ) }
    dend_30 { pt3dadd( 37.0573, 0.291364, -4.78105, 0.68 ) }
    dend_30 { pt3dadd( 39.546, -1.31885, -4.85, 1.14 ) }
    dend_30 { pt3dadd( 41.2449, -2.44255, -4.93525, 1.14 ) }
    dend_30 { pt3dadd( 44.9252, -4.90873, -5.19342, 1.82 ) }
    dend_30 { pt3dadd( 47.9039, -6.85896, -5.46863, 0.23 ) }
    dend_30 { pt3dadd( 50.1347, -8.26892, -5.72383, 0.91 ) }
    dend_30 { pt3dadd( 52.6957, -9.97316, -5.96931, 1.14 ) }
    dend_30 { pt3dadd( 54.4092, -11.1982, -6.14523, 2.05 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 74/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 11.5699, 15.0087, -4.88253, 0.45 ) }
    dend_27 { pt3dadd( 12.5327, 15.1723, -5.34444, 0.45 ) }
    dend_27 { pt3dadd( 14.0839, 15.431, -6.07031, 0.91 ) }
    dend_27 { pt3dadd( 15.3724, 15.6652, -6.65984, 0.45 ) }
    dend_27 { pt3dadd( 16.9195, 15.9548, -7.35207, 1.14 ) }
    dend_27 { pt3dadd( 18.9262, 16.4049, -8.20768, 0.68 ) }
    dend_27 { pt3dadd( 21.049, 16.9483, -9.0819, 0.45 ) }
    dend_27 { pt3dadd( 22.2725, 17.3084, -9.5649, 0.91 ) }
    dend_27 { pt3dadd( 23.2394, 17.6509, -9.92692, 0.91 ) }
    dend_27 { pt3dadd( 25.018, 18.3652, -10.555, 2.05 ) }
    dend_27 { pt3dadd( 27.6313, 19.479, -11.4386, 0.68 ) }
    dend_27 { pt3dadd( 29.1933, 20.191, -11.9547, 1.14 ) }
    dend_27 { pt3dadd( 30.5564, 20.8708, -12.3905, 0.68 ) }
    dend_27 { pt3dadd( 31.2273, 21.2319, -12.6001, 1.59 ) }
    dend_27 { pt3dadd( 32.6803, 22.0453, -13.0484, 1.59 ) }
    // Section: dend_17, id: dend_17, parent: dend_5 (entry count 89/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -8.43536, -29.849, -0.821688, 0.68 ) }
    dend_17 { pt3dadd( -11.629, -31.0185, -2.37032, 0.68 ) }
    dend_17 { pt3dadd( -14.8495, -32.1006, -3.81334, 0.68 ) }
    dend_17 { pt3dadd( -16.6893, -32.6804, -4.60242, 1.14 ) }
    dend_17 { pt3dadd( -20.2708, -33.6748, -6.16295, 0.68 ) }
    dend_17 { pt3dadd( -22.8468, -34.3084, -7.29712, 1.36 ) }
    dend_17 { pt3dadd( -25.1494, -34.8192, -8.338, 0.45 ) }
    dend_17 { pt3dadd( -27.8523, -35.2508, -9.57801, 1.14 ) }
    dend_17 { pt3dadd( -30.4714, -35.5418, -10.782, 0.23 ) }
    dend_17 { pt3dadd( -32.7823, -35.8483, -11.8518, 0.45 ) }
    dend_17 { pt3dadd( -33.8951, -36.054, -12.3942, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_17 { pt3dadd( -36.4364, -36.7265, -13.7109, 1.14 ) }
    dend_17 { pt3dadd( -38.4769, -37.4746, -14.8208, 0.23 ) }
    dend_17 { pt3dadd( -40.2678, -38.3614, -15.8238, 0.91 ) }
    dend_17 { pt3dadd( -42.736, -39.8183, -17.1227, 0.45 ) }
    dend_17 { pt3dadd( -44.2276, -40.7977, -17.8492, 1.14 ) }
    dend_17 { pt3dadd( -46.3623, -42.2467, -18.8318, 0.23 ) }
    dend_17 { pt3dadd( -48.2535, -43.5377, -19.6435, 0.91 ) }
    dend_17 { pt3dadd( -50.442, -44.9801, -20.5209, 0.68 ) }
    dend_17 { pt3dadd( -52.5111, -46.2464, -21.2945, 0.23 ) }
    dend_17 { pt3dadd( -54.0246, -47.067, -21.8012, 0.91 ) }
    dend_17 { pt3dadd( -56.2117, -48.0834, -22.4579, 0.23 ) }
    dend_17 { pt3dadd( -58.973, -49.2492, -23.2349, 0.91 ) }
    dend_17 { pt3dadd( -60.5089, -49.8883, -23.6572, 0.68 ) }
    dend_17 { pt3dadd( -62.8951, -50.9248, -24.3046, 0.68 ) }
    dend_17 { pt3dadd( -65.6695, -52.2391, -25.052, 1.36 ) }
    dend_17 { pt3dadd( -68.0575, -53.44, -25.6812, 0.23 ) }
    dend_17 { pt3dadd( -69.106, -54.0001, -25.9585, 0.23 ) }
    dend_17 { pt3dadd( -71.1025, -55.1291, -26.5103, 1.36 ) }
    dend_17 { pt3dadd( -72.3916, -55.9449, -26.868, 1.36 ) }
    dend_17 { pt3dadd( -73.8076, -56.9553, -27.2561, 0.23 ) }
    dend_17 { pt3dadd( -75.7321, -58.533, -27.84, 0.91 ) }
    dend_17 { pt3dadd( -77.4769, -60.1637, -28.4334, 0.91 ) }
    dend_17 { pt3dadd( -79.1656, -61.8593, -29.0462, 0.23 ) }
    dend_17 { pt3dadd( -80.851, -63.6667, -29.6956, 0.91 ) }
    dend_17 { pt3dadd( -82.1639, -65.1602, -30.2502, 0.23 ) }
    dend_17 { pt3dadd( -83.601, -66.9669, -30.905, 0.23 ) }
    dend_17 { pt3dadd( -84.6418, -68.5029, -31.3979, 0.23 ) }
    dend_17 { pt3dadd( -85.3065, -69.5686, -31.6978, 1.14 ) }
    dend_17 { pt3dadd( -86.0283, -70.7465, -31.9869, 0.45 ) }
    dend_17 { pt3dadd( -86.7991, -71.9929, -32.2641, 1.59 ) }
    dend_17 { pt3dadd( -88.8596, -75.312, -32.8769, 0.68 ) }
    dend_17 { pt3dadd( -91.0981, -78.82, -33.3842, 0.68 ) }
    dend_17 { pt3dadd( -92.593, -81.0213, -33.6624, 0.23 ) }
    dend_17 { pt3dadd( -94.0302, -83.017, -33.9047, 0.91 ) }
    dend_17 { pt3dadd( -95.0315, -84.2973, -34.0644, 0.91 ) }
    dend_17 { pt3dadd( -95.8351, -85.1929, -34.1941, 0.23 ) }
    dend_17 { pt3dadd( -97.0713, -86.412, -34.4011, 0.91 ) }
    dend_17 { pt3dadd( -98.8858, -88.0726, -34.7383, 0.23 ) }
    dend_17 { pt3dadd( -100.285, -89.3353, -35.0442, 0.45 ) }
    dend_17 { pt3dadd( -101.75, -90.6569, -35.4015, 1.14 ) }
    dend_17 { pt3dadd( -103.088, -91.8657, -35.7448, 0.23 ) }
    dend_17 { pt3dadd( -105.025, -93.6228, -36.2695, 0.91 ) }
    dend_17 { pt3dadd( -107.053, -95.4405, -36.8313, 0.91 ) }
    dend_17 { pt3dadd( -108.332, -96.5693, -37.1917, 0.23 ) }
    dend_17 { pt3dadd( -110.087, -98.0776, -37.6742, 0.68 ) }
    dend_17 { pt3dadd( -111.504, -99.2753, -38.0286, 0.23 ) }
    dend_17 { pt3dadd( -112.189, -99.8156, -38.1829, 0.23 ) }
    dend_17 { pt3dadd( -114.142, -101.218, -38.6104, 0.91 ) }
    dend_17 { pt3dadd( -116.161, -102.587, -39.002, 2.05 ) }
    dend_17 { pt3dadd( -118.857, -104.433, -39.47, 0.68 ) }
    dend_17 { pt3dadd( -121.054, -105.943, -39.7963, 1.36 ) }
    dend_17 { pt3dadd( -123.307, -107.514, -40.0994, 0.45 ) }
    dend_17 { pt3dadd( -125.043, -108.748, -40.3099, 0.45 ) }
    dend_17 { pt3dadd( -127.042, -110.194, -40.541, 0.23 ) }
    dend_17 { pt3dadd( -128.205, -111.036, -40.6686, 0.91 ) }
    dend_17 { pt3dadd( -129.589, -112.025, -40.8375, 0.23 ) }
    dend_17 { pt3dadd( -130.589, -112.722, -40.9894, 0.23 ) }
    dend_17 { pt3dadd( -132.657, -114.165, -41.3587, 1.14 ) }
    dend_17 { pt3dadd( -133.787, -114.929, -41.5853, 1.14 ) }
    dend_17 { pt3dadd( -136.402, -116.599, -42.1787, 0.23 ) }
    dend_17 { pt3dadd( -137.188, -117.063, -42.3723, 0.91 ) }
    dend_17 { pt3dadd( -138.871, -118.041, -42.8244, 1.59 ) }
    dend_17 { pt3dadd( -140.194, -118.809, -43.1494, 0.45 ) }
    dend_17 { pt3dadd( -140.951, -119.242, -43.3209, 1.14 ) }
    dend_17 { pt3dadd( -143.494, -120.655, -43.847, 0.23 ) }
    dend_17 { pt3dadd( -144.733, -121.338, -44.0942, 1.36 ) }
    dend_17 { pt3dadd( -146.084, -122.088, -44.3263, 1.36 ) }
    dend_17 { pt3dadd( -149.862, -124.241, -44.9015, 0.23 ) }
    dend_17 { pt3dadd( -151.482, -125.203, -45.1319, 1.36 ) }
    dend_17 { pt3dadd( -152.043, -125.566, -45.2082, 2.27 ) }
    dend_17 { pt3dadd( -154.343, -127.243, -45.5211, 0.23 ) }
    dend_17 { pt3dadd( -155.982, -128.473, -45.7321, 0.68 ) }
    dend_17 { pt3dadd( -157.066, -129.325, -45.8741, 0.23 ) }
    dend_17 { pt3dadd( -158.282, -130.402, -46.07, 0.91 ) }
    dend_17 { pt3dadd( -159.285, -131.421, -46.2262, 0.23 ) }
    dend_17 { pt3dadd( -160.452, -132.781, -46.3823, 1.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 76/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.43536, -29.849, -0.821688, 2.27 ) }
    dend_6 { pt3dadd( -9.26748, -35.0306, 0.305513, 2.27 ) }
    dend_6 { pt3dadd( -9.4764, -36.3316, 0.588515, 2.27 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 79/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -159.79, 204.228, -5.04968, 0.23 ) }
    dend_38 { pt3dadd( -162.652, 205.085, -4.62173, 0.23 ) }
    dend_38 { pt3dadd( -164.19, 205.517, -4.38392, 0.91 ) }
    dend_38 { pt3dadd( -166.454, 206.094, -4.02133, 0.23 ) }
    dend_38 { pt3dadd( -167.947, 206.435, -3.74349, 0.91 ) }
    dend_38 { pt3dadd( -169.018, 206.665, -3.52917, 0.23 ) }
    dend_38 { pt3dadd( -170.745, 207.029, -3.20271, 0.23 ) }
    dend_38 { pt3dadd( -171.576, 207.171, -3.03602, 0.23 ) }
    dend_38 { pt3dadd( -172.762, 207.378, -2.84177, 0.91 ) }
    dend_38 { pt3dadd( -174.731, 207.67, -2.59075, 0.23 ) }
    dend_38 { pt3dadd( -175.447, 207.764, -2.50136, 0.68 ) }
    dend_38 { pt3dadd( -176.731, 207.921, -2.34012, 0.23 ) }
    dend_38 { pt3dadd( -177.289, 207.995, -2.26281, 1.14 ) }
    dend_38 { pt3dadd( -178.965, 208.206, -1.99866, 0.23 ) }
    dend_38 { pt3dadd( -181.046, 208.464, -1.61456, 1.14 ) }
    dend_38 { pt3dadd( -182.514, 208.647, -1.31509, 0.23 ) }
    dend_38 { pt3dadd( -184.099, 208.846, -0.922893, 0.68 ) }
    dend_38 { pt3dadd( -184.97, 208.962, -0.661824, 0.23 ) }
    dend_38 { pt3dadd( -186.781, 209.254, -0.0756414, 0.91 ) }
    dend_38 { pt3dadd( -189.133, 209.709, 0.73758, 0.23 ) }
    dend_38 { pt3dadd( -190.853, 210.136, 1.31112, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_38 { pt3dadd( -191.812, 210.394, 1.60981, 0.91 ) }
    dend_38 { pt3dadd( -193.229, 210.831, 2.02731, 0.23 ) }
    dend_38 { pt3dadd( -194.36, 211.225, 2.3231, 0.68 ) }
    dend_38 { pt3dadd( -195.687, 211.74, 2.64449, 0.23 ) }
    dend_38 { pt3dadd( -196.889, 212.199, 2.88497, 0.23 ) }
    dend_38 { pt3dadd( -197.887, 212.513, 3.05463, 0.68 ) }
    dend_38 { pt3dadd( -199.112, 212.879, 3.22305, 0.23 ) }
    dend_38 { pt3dadd( -200.792, 213.328, 3.41314, 0.23 ) }
    dend_38 { pt3dadd( -201.992, 213.588, 3.54791, 0.68 ) }
    dend_38 { pt3dadd( -202.994, 213.759, 3.65464, 0.23 ) }
    dend_38 { pt3dadd( -204.612, 213.898, 3.82378, 0.91 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -159.79, 204.228, -5.04968, 0.23 ) }
    dend_37 { pt3dadd( -161.664, 206.539, -4.46654, 0.23 ) }
    dend_37 { pt3dadd( -162.109, 207.167, -4.35038, 0.68 ) }
    dend_37 { pt3dadd( -163.341, 209.04, -4.03023, 0.23 ) }
    dend_37 { pt3dadd( -164.67, 211.019, -3.87117, 0.23 ) }
    dend_37 { pt3dadd( -165.62, 212.383, -3.83363, 0.68 ) }
    dend_37 { pt3dadd( -166.836, 214.086, -3.83042, 0.23 ) }
    dend_37 { pt3dadd( -167.722, 215.368, -3.86377, 0.68 ) }
    dend_37 { pt3dadd( -169.63, 217.999, -4.01331, 0.23 ) }
    dend_37 { pt3dadd( -171.397, 220.302, -4.21665, 0.91 ) }
    dend_37 { pt3dadd( -173.663, 223.165, -4.4798, 0.23 ) }
    dend_37 { pt3dadd( -175.02, 224.809, -4.63328, 0.23 ) }
    dend_37 { pt3dadd( -176.68, 226.71, -4.80952, 0.91 ) }
    dend_37 { pt3dadd( -178.567, 228.801, -5.00504, 0.23 ) }
    dend_37 { pt3dadd( -180.025, 230.383, -5.15179, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 26/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 54.4092, -11.1982, -6.14523, 0.45 ) }
    dend_32 { pt3dadd( 55.2683, -12.6415, -5.53112, 0.45 ) }
    dend_32 { pt3dadd( 55.7271, -13.3358, -5.20788, 0.91 ) }
    dend_32 { pt3dadd( 56.1891, -13.8782, -4.94202, 0.23 ) }
    dend_32 { pt3dadd( 56.5701, -14.2803, -4.74722, 0.91 ) }
    dend_32 { pt3dadd( 56.9776, -14.6696, -4.55914, 0.91 ) }
    dend_32 { pt3dadd( 58.1333, -15.6773, -4.06514, 0.23 ) }
    dend_32 { pt3dadd( 58.8956, -16.2659, -3.7756, 1.59 ) }
    dend_32 { pt3dadd( 60.554, -17.4941, -3.20723, 0.45 ) }
    dend_32 { pt3dadd( 61.4671, -18.1488, -2.92224, 0.45 ) }
    dend_32 { pt3dadd( 62.5992, -18.9505, -2.59744, 1.36 ) }
    dend_32 { pt3dadd( 64.7594, -20.4456, -2.02606, 0.68 ) }
    dend_32 { pt3dadd( 66.1787, -21.4146, -1.69918, 0.68 ) }
    dend_32 { pt3dadd( 67.3773, -22.2189, -1.45579, 1.14 ) }
    dend_32 { pt3dadd( 69.6891, -23.7212, -1.04841, 0.45 ) }
    dend_32 { pt3dadd( 70.2489, -24.0633, -0.965289, 1.14 ) }
    dend_32 { pt3dadd( 71.3797, -24.742, -0.818959, 0.23 ) }
    dend_32 { pt3dadd( 72.6218, -25.4819, -0.674544, 1.36 ) }
    dend_32 { pt3dadd( 73.0426, -25.7317, -0.620191, 2.05 ) }
    dend_32 { pt3dadd( 74.4199, -26.5771, -0.4023, 0.23 ) }
    dend_32 { pt3dadd( 75.8067, -27.5038, -0.125232, 0.23 ) }
    dend_32 { pt3dadd( 76.9535, -28.2973, 0.136897, 1.14 ) }
    dend_32 { pt3dadd( 78.1266, -29.164, 0.448985, 0.23 ) }
    dend_32 { pt3dadd( 78.8749, -29.753, 0.692068, 1.36 ) }
    dend_32 { pt3dadd( 79.77, -30.5247, 1.01949, 1.59 ) }
    dend_32 { pt3dadd( 80.8022, -31.5643, 1.48342, 0.45 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 52/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 54.4092, -11.1982, -6.14523, 0.68 ) }
    dend_31 { pt3dadd( 57.2069, -11.2929, -6.33548, 0.68 ) }
    dend_31 { pt3dadd( 58.4938, -11.3466, -6.44123, 0.23 ) }
    dend_31 { pt3dadd( 59.3383, -11.3985, -6.53701, 0.68 ) }
    dend_31 { pt3dadd( 60.4387, -11.4785, -6.66615, 0.23 ) }
    dend_31 { pt3dadd( 61.4464, -11.5774, -6.76028, 0.91 ) }
    dend_31 { pt3dadd( 63.3524, -11.7947, -6.89984, 0.23 ) }
    dend_31 { pt3dadd( 64.9552, -11.9747, -6.97978, 1.14 ) }
    dend_31 { pt3dadd( 68.1234, -12.2756, -7.11496, 0.45 ) }
    dend_31 { pt3dadd( 69.0803, -12.3392, -7.15641, 0.91 ) }
    dend_31 { pt3dadd( 71.3465, -12.4065, -7.28885, 0.23 ) }
    dend_31 { pt3dadd( 73.5543, -12.3881, -7.46685, 0.91 ) }
    dend_31 { pt3dadd( 75.515, -12.2817, -7.67925, 0.23 ) }
    dend_31 { pt3dadd( 77.9505, -12.0221, -8.04578, 0.91 ) }
    dend_31 { pt3dadd( 80.4518, -11.6002, -8.56778, 0.23 ) }
    dend_31 { pt3dadd( 82.4092, -11.1507, -9.14224, 0.68 ) }
    dend_31 { pt3dadd( 83.4901, -10.8155, -9.58126, 0.23 ) }
    dend_31 { pt3dadd( 84.5161, -10.4515, -10.1078, 1.14 ) }
    dend_31 { pt3dadd( 85.5399, -10.0761, -10.725, 0.23 ) }
    dend_31 { pt3dadd( 87.0215, -9.51628, -11.7159, 0.91 ) }
    dend_31 { pt3dadd( 88.2711, -9.06297, -12.6049, 0.23 ) }
    dend_31 { pt3dadd( 89.326, -8.6943, -13.372, 1.14 ) }
    dend_31 { pt3dadd( 90.328, -8.35651, -14.0808, 0.23 ) }
    dend_31 { pt3dadd( 91.6807, -7.92367, -15.0406, 1.82 ) }
    dend_31 { pt3dadd( 92.3768, -7.71671, -15.5285, 2.27 ) }
    dend_31 { pt3dadd( 94.4106, -7.16763, -16.9937, 0.23 ) }
    dend_31 { pt3dadd( 94.86, -7.06903, -17.2953, 0.23 ) }
    dend_31 { pt3dadd( 96.5173, -6.7519, -18.3404, 0.68 ) }
    dend_31 { pt3dadd( 98.0045, -6.50465, -19.1842, 0.23 ) }
    dend_31 { pt3dadd( 99.1838, -6.35184, -19.776, 1.36 ) }
    dend_31 { pt3dadd( 101.109, -6.19687, -20.5564, 0.23 ) }
    dend_31 { pt3dadd( 103.111, -6.1267, -21.1699, 0.23 ) }
    dend_31 { pt3dadd( 103.938, -6.12643, -21.3733, 1.14 ) }
    dend_31 { pt3dadd( 106.001, -6.19955, -21.7299, 0.23 ) }
    dend_31 { pt3dadd( 107.045, -6.24302, -21.8477, 0.68 ) }
    dend_31 { pt3dadd( 108.765, -6.30947, -21.9935, 0.23 ) }
    dend_31 { pt3dadd( 109.225, -6.32964, -22.0221, 1.59 ) }
    dend_31 { pt3dadd( 109.938, -6.36395, -22.0632, 0.23 ) }
    dend_31 { pt3dadd( 111.363, -6.43451, -22.1433, 1.36 ) }
    dend_31 { pt3dadd( 113.399, -6.51138, -22.2826, 0.23 ) }
    dend_31 { pt3dadd( 115.266, -6.52957, -22.4646, 0.91 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 93/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 32.6803, 22.0453, -13.0484, 0.23 ) }
    dend_29 { pt3dadd( 36.3047, 23.4537, -14.5899, 0.23 ) }
    dend_29 { pt3dadd( 38.7138, 24.4597, -15.5278, 0.23 ) }
    dend_29 { pt3dadd( 40.6076, 25.2383, -16.228, 1.36 ) }
    dend_29 { pt3dadd( 43.2123, 26.3169, -17.2337, 1.36 ) }
    dend_29 { pt3dadd( 46.772, 27.7778, -18.6352, 0.23 ) }
    dend_29 { pt3dadd( 48.4447, 28.4431, -19.299, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_29 { pt3dadd( 51.8006, 29.7856, -20.633, 0.91 ) }
    dend_29 { pt3dadd( 55.4824, 31.1123, -22.1106, 0.23 ) }
    dend_29 { pt3dadd( 58.3982, 32.019, -23.2829, 1.59 ) }
    dend_29 { pt3dadd( 59.4745, 32.2979, -23.7225, 1.59 ) }
    dend_29 { pt3dadd( 63.2663, 33.0886, -25.2837, 0.45 ) }
    dend_29 { pt3dadd( 65.1808, 33.4123, -26.1328, 0.45 ) }
    dend_29 { pt3dadd( 68.227, 33.8215, -27.5141, 0.23 ) }
    dend_29 { pt3dadd( 69.9786, 34.0134, -28.3025, 1.14 ) }
    dend_29 { pt3dadd( 72.5458, 34.2518, -29.3894, 0.23 ) }
    dend_29 { pt3dadd( 74.2239, 34.3965, -30.0874, 0.68 ) }
    dend_29 { pt3dadd( 77.3305, 34.7011, -31.3486, 0.23 ) }
    dend_29 { pt3dadd( 80.9531, 35.1554, -32.7751, 1.14 ) }
    dend_29 { pt3dadd( 85.1019, 35.8823, -34.4116, 0.23 ) }
    dend_29 { pt3dadd( 87.6538, 36.4556, -35.4234, 0.23 ) }
    dend_29 { pt3dadd( 89.0465, 36.8612, -35.9724, 1.59 ) }
    dend_29 { pt3dadd( 92.0919, 37.9295, -37.1861, 0.23 ) }
    dend_29 { pt3dadd( 93.5158, 38.5522, -37.7701, 0.23 ) }
    dend_29 { pt3dadd( 94.9288, 39.3198, -38.3921, 0.68 ) }
    dend_29 { pt3dadd( 96.4084, 40.281, -39.1578, 0.68 ) }
    dend_29 { pt3dadd( 99.3924, 42.3212, -40.89, 0.23 ) }
    dend_29 { pt3dadd( 100.708, 43.1642, -41.6999, 0.23 ) }
    dend_29 { pt3dadd( 101.884, 43.859, -42.4612, 1.82 ) }
    dend_29 { pt3dadd( 102.575, 44.2095, -42.9035, 1.82 ) }
    dend_29 { pt3dadd( 104.993, 45.2196, -44.3823, 0.23 ) }
    dend_29 { pt3dadd( 107.049, 45.9525, -45.6012, 0.68 ) }
    dend_29 { pt3dadd( 110.148, 46.8943, -47.3463, 0.23 ) }
    dend_29 { pt3dadd( 111.39, 47.2653, -48.005, 0.91 ) }
    dend_29 { pt3dadd( 113.463, 47.8942, -49.0681, 0.23 ) }
    dend_29 { pt3dadd( 115.748, 48.6491, -50.2138, 1.14 ) }
    dend_29 { pt3dadd( 118.882, 49.7693, -51.7087, 0.23 ) }
    dend_29 { pt3dadd( 121.167, 50.6594, -52.8319, 1.14 ) }
    dend_29 { pt3dadd( 123.426, 51.6283, -53.9424, 0.23 ) }
    dend_29 { pt3dadd( 125.039, 52.3466, -54.7347, 0.91 ) }
    dend_29 { pt3dadd( 127.206, 53.3823, -55.8195, 0.23 ) }
    dend_29 { pt3dadd( 129.468, 54.5172, -56.9611, 1.36 ) }
    dend_29 { pt3dadd( 131.283, 55.4285, -57.8715, 0.23 ) }
    dend_29 { pt3dadd( 133.474, 56.5656, -58.9612, 0.91 ) }
    dend_29 { pt3dadd( 137.088, 58.5295, -60.7561, 0.23 ) }
    dend_29 { pt3dadd( 139.138, 59.6474, -61.7555, 1.14 ) }
    dend_29 { pt3dadd( 140.265, 60.2619, -62.3049, 0.23 ) }
    dend_29 { pt3dadd( 141.464, 60.9329, -62.8887, 1.14 ) }
    dend_29 { pt3dadd( 143.786, 62.2602, -63.9678, 0.23 ) }
    dend_29 { pt3dadd( 145.523, 63.3793, -64.8432, 1.36 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 43/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 32.6803, 22.0453, -13.0484, 0.23 ) }
    dend_28 { pt3dadd( 34.1601, 23.423, -13.8574, 0.23 ) }
    dend_28 { pt3dadd( 34.9534, 24.1672, -14.28, 0.91 ) }
    dend_28 { pt3dadd( 36.2008, 25.2818, -14.9221, 0.23 ) }
    dend_28 { pt3dadd( 37.4882, 26.3275, -15.5711, 0.68 ) }
    dend_28 { pt3dadd( 38.856, 27.2918, -16.2224, 0.68 ) }
    dend_28 { pt3dadd( 41.1941, 28.8531, -17.2751, 0.23 ) }
    dend_28 { pt3dadd( 42.3468, 29.5778, -17.7958, 0.91 ) }
    dend_28 { pt3dadd( 43.6224, 30.3814, -18.3552, 0.91 ) }
    dend_28 { pt3dadd( 46.0225, 31.9001, -19.3753, 0.23 ) }
    dend_28 { pt3dadd( 48.3482, 33.4327, -20.3466, 0.68 ) }
    dend_28 { pt3dadd( 50.5509, 34.9427, -21.3068, 0.23 ) }
    dend_28 { pt3dadd( 52.0079, 35.997, -21.974, 0.91 ) }
    dend_28 { pt3dadd( 53.5714, 37.2153, -22.7272, 0.91 ) }
    dend_28 { pt3dadd( 54.9414, 38.4445, -23.4514, 0.23 ) }
    dend_28 { pt3dadd( 56.5663, 40.2246, -24.4368, 1.14 ) }
    dend_28 { pt3dadd( 58.0083, 42.1019, -25.4241, 0.23 ) }
    dend_28 { pt3dadd( 58.8043, 43.2737, -25.9916, 0.23 ) }
    dend_28 { pt3dadd( 59.3895, 44.2634, -26.3801, 0.23 ) }
    dend_28 { pt3dadd( 60.6396, 46.6015, -27.1484, 0.91 ) }
    dend_28 { pt3dadd( 62.0364, 49.399, -27.9044, 0.45 ) }
    dend_28 { pt3dadd( 62.5391, 50.4741, -28.1348, 0.45 ) }
    dend_28 { pt3dadd( 63.6696, 53.0589, -28.593, 1.59 ) }
    dend_28 { pt3dadd( 65.3247, 56.7204, -29.1784, 0.45 ) }
    dend_28 { pt3dadd( 65.9253, 57.9811, -29.3677, 0.68 ) }
    dend_28 { pt3dadd( 66.4111, 58.936, -29.49, 0.23 ) }
    dend_28 { pt3dadd( 67.3428, 60.6094, -29.7356, 0.91 ) }
    dend_28 { pt3dadd( 68.7695, 63.0228, -30.1889, 0.23 ) }
    dend_28 { pt3dadd( 69.6043, 64.3306, -30.4946, 0.23 ) }
    dend_28 { pt3dadd( 70.0817, 65.0334, -30.6873, 1.36 ) }
    dend_28 { pt3dadd( 70.6515, 65.9094, -30.9065, 1.36 ) }
    dend_28 { pt3dadd( 71.8086, 67.7437, -31.3305, 0.23 ) }
    dend_28 { pt3dadd( 73.0386, 69.7542, -31.7446, 0.68 ) }
    dend_28 { pt3dadd( 74.1068, 71.5338, -32.0746, 0.23 ) }
    dend_28 { pt3dadd( 75.7285, 74.2534, -32.5553, 1.14 ) }
    dend_28 { pt3dadd( 77.37, 77.0611, -33.0288, 0.23 ) }
    dend_28 { pt3dadd( 78.5567, 79.1357, -33.3526, 0.91 ) }
    dend_28 { pt3dadd( 79.3144, 80.4771, -33.5362, 1.59 ) }
    dend_28 { pt3dadd( 80.0853, 81.8566, -33.7258, 0.91 ) }
    dend_28 { pt3dadd( 81.2399, 83.9898, -34.0006, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 83/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -160.452, -132.781, -46.3823, 0.23 ) }
    dend_19 { pt3dadd( -162.195, -133.2, -45.7434, 0.23 ) }
    dend_19 { pt3dadd( -162.736, -133.346, -45.5538, 1.14 ) }
    dend_19 { pt3dadd( -164.621, -133.84, -44.9165, 0.23 ) }
    dend_19 { pt3dadd( -165.338, -134.042, -44.6727, 0.91 ) }
    dend_19 { pt3dadd( -167.642, -134.813, -43.9384, 0.23 ) }
    dend_19 { pt3dadd( -168.788, -135.222, -43.5641, 0.91 ) }
    dend_19 { pt3dadd( -171.167, -136.178, -42.8207, 0.23 ) }
    dend_19 { pt3dadd( -172.667, -136.799, -42.349, 0.91 ) }
    dend_19 { pt3dadd( -174.039, -137.387, -41.9381, 0.23 ) }
    dend_19 { pt3dadd( -175.747, -138.104, -41.4042, 1.14 ) }
    dend_19 { pt3dadd( -178.038, -139.091, -40.6886, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 95/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -160.452, -132.781, -46.3823, 0.23 ) }
    dend_18 { pt3dadd( -161.523, -135.787, -46.9915, 0.23 ) }
    dend_18 { pt3dadd( -162.226, -137.919, -47.4444, 1.59 ) }
    dend_18 { pt3dadd( -163.213, -141.124, -48.1712, 0.23 ) }
    dend_18 { pt3dadd( -163.842, -143.204, -48.7712, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( -164.346, -144.732, -49.3033, 0.23 ) }
    dend_18 { pt3dadd( -164.872, -146.137, -49.8705, 0.23 ) }
    dend_18 { pt3dadd( -165.612, -147.584, -50.673, 1.36 ) }
    dend_18 { pt3dadd( -166.604, -149.071, -51.7647, 2.27 ) }
    dend_18 { pt3dadd( -167.783, -150.421, -53.012, 0.23 ) }
    dend_18 { pt3dadd( -168.901, -151.353, -54.0777, 1.14 ) }
    dend_18 { pt3dadd( -170.066, -152.083, -55.0987, 0.23 ) }
    dend_18 { pt3dadd( -171.51, -152.765, -56.22, 1.14 ) }
    dend_18 { pt3dadd( -172.123, -152.932, -56.6245, 1.14 ) }
    dend_18 { pt3dadd( -173.408, -153.126, -57.3876, 0.23 ) }
    dend_18 { pt3dadd( -174.013, -153.166, -57.7301, 0.23 ) }
    dend_18 { pt3dadd( -174.814, -153.071, -58.1983, 1.36 ) }
    dend_18 { pt3dadd( -175.379, -152.851, -58.515, 1.36 ) }
    dend_18 { pt3dadd( -177.69, -151.604, -59.7369, 0.23 ) }
    dend_18 { pt3dadd( -178.167, -151.315, -59.9809, 0.23 ) }
    dend_18 { pt3dadd( -179.634, -150.323, -60.7309, 0.23 ) }
    dend_18 { pt3dadd( -181.42, -149.064, -61.6835, 1.14 ) }
    dend_18 { pt3dadd( -182.773, -148.148, -62.4154, 0.23 ) }
    dend_18 { pt3dadd( -184.918, -146.995, -63.5504, 0.23 ) }
    dend_18 { pt3dadd( -186.139, -146.581, -64.2242, 1.36 ) }
    dend_18 { pt3dadd( -188.03, -146.059, -65.2619, 0.23 ) }
    dend_18 { pt3dadd( -189.659, -145.749, -66.1678, 1.14 ) }
    dend_18 { pt3dadd( -190.855, -145.616, -66.9404, 1.14 ) }
    dend_18 { pt3dadd( -193.573, -145.565, -68.8847, 0.23 ) }
    dend_18 { pt3dadd( -195.873, -145.927, -70.5693, 1.14 ) }
    // Section: dend_16, id: dend_16, parent: dend_6 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.4764, -36.3316, 0.588515, 0.23 ) }
    dend_16 { pt3dadd( -10.3751, -37.8945, 1.90011, 0.23 ) }
    dend_16 { pt3dadd( -10.6288, -38.321, 2.18324, 0.23 ) }
    dend_16 { pt3dadd( -11.1762, -39.2036, 2.73755, 0.23 ) }
    dend_16 { pt3dadd( -11.5649, -39.873, 3.12942, 1.14 ) }
    dend_16 { pt3dadd( -12.148, -40.933, 3.70532, 0.23 ) }
    dend_16 { pt3dadd( -12.6047, -41.7831, 4.14775, 1.14 ) }
    dend_16 { pt3dadd( -13.271, -43.1328, 4.74183, 0.23 ) }
    dend_16 { pt3dadd( -13.9301, -44.5112, 5.33393, 0.23 ) }
    dend_16 { pt3dadd( -14.4473, -45.6601, 5.82376, 1.36 ) }
    dend_16 { pt3dadd( -15.4714, -47.9611, 6.7523, 0.23 ) }
    dend_16 { pt3dadd( -15.7826, -48.6875, 7.02018, 0.23 ) }
    dend_16 { pt3dadd( -16.2057, -49.7247, 7.39652, 0.91 ) }
    dend_16 { pt3dadd( -16.4015, -50.2416, 7.58426, 0.91 ) }
    dend_16 { pt3dadd( -16.9031, -51.6266, 8.06981, 0.23 ) }
    dend_16 { pt3dadd( -17.302, -52.7067, 8.45786, 0.23 ) }
    dend_16 { pt3dadd( -17.7067, -53.907, 8.92359, 0.68 ) }
    dend_16 { pt3dadd( -18.4381, -56.1694, 9.88413, 0.23 ) }
    dend_16 { pt3dadd( -18.6465, -56.8409, 10.2068, 1.36 ) }
    dend_16 { pt3dadd( -18.8151, -57.4031, 10.4963, 1.36 ) }
    dend_16 { pt3dadd( -19.198, -58.8261, 11.2803, 0.45 ) }
    dend_16 { pt3dadd( -19.4526, -60.0114, 11.9818, 1.14 ) }
    dend_16 { pt3dadd( -19.7087, -61.361, 12.8512, 0.23 ) }
    dend_16 { pt3dadd( -19.8513, -62.354, 13.5192, 0.45 ) }
    dend_16 { pt3dadd( -20.0594, -63.8233, 14.5333, 0.23 ) }
    dend_16 { pt3dadd( -20.2072, -64.9642, 15.3241, 0.23 ) }
    dend_16 { pt3dadd( -20.3463, -65.9651, 16.0271, 0.91 ) }
    dend_16 { pt3dadd( -20.6324, -67.4196, 17.0072, 0.23 ) }
    dend_16 { pt3dadd( -20.9549, -68.886, 17.9626, 0.91 ) }
    dend_16 { pt3dadd( -21.1369, -69.6633, 18.4491, 0.23 ) }
    dend_16 { pt3dadd( -21.4375, -70.8159, 19.1587, 1.14 ) }
    dend_16 { pt3dadd( -21.9267, -72.2279, 19.9494, 0.23 ) }
    dend_16 { pt3dadd( -22.4133, -73.4261, 20.5259, 0.91 ) }
    dend_16 { pt3dadd( -22.8289, -74.2635, 20.839, 0.23 ) }
    dend_16 { pt3dadd( -23.6679, -75.8175, 21.3732, 0.23 ) }
    dend_16 { pt3dadd( -24.0201, -76.4461, 21.5676, 0.91 ) }
    dend_16 { pt3dadd( -25.2739, -78.5569, 22.1429, 0.23 ) }
    dend_16 { pt3dadd( -25.8921, -79.6076, 22.3867, 1.14 ) }
    dend_16 { pt3dadd( -27.2643, -81.8318, 22.8592, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 64/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.4764, -36.3316, 0.588515, 1.59 ) }
    dend_7 { pt3dadd( -9.70355, -38.184, 0.87748, 1.59 ) }
    dend_7 { pt3dadd( -10.0528, -41.0321, 1.32175, 2.27 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 67/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -10.0528, -41.0321, 1.32175, 0.23 ) }
    dend_11 { pt3dadd( -10.51, -44.1847, 2.7447, 0.23 ) }
    dend_11 { pt3dadd( -10.8015, -46.3944, 3.76386, 0.45 ) }
    dend_11 { pt3dadd( -10.9603, -48.0017, 4.5604, 1.36 ) }
    dend_11 { pt3dadd( -11.065, -50.1202, 5.62824, 1.36 ) }
    dend_11 { pt3dadd( -11.1213, -52.5143, 6.84247, 0.91 ) }
    dend_11 { pt3dadd( -11.1191, -54.9198, 8.0591, 1.14 ) }
    dend_11 { pt3dadd( -11.084, -56.3996, 8.77763, 1.14 ) }
    dend_11 { pt3dadd( -10.9113, -60.124, 10.5313, 0.91 ) }
    dend_11 { pt3dadd( -10.7521, -62.5811, 11.6465, 1.14 ) }
    dend_11 { pt3dadd( -10.6351, -64.2215, 12.354, 1.14 ) }
    dend_11 { pt3dadd( -10.4901, -66.2496, 13.1911, 0.23 ) }
    dend_11 { pt3dadd( -10.3472, -68.7757, 14.1648, 0.23 ) }
    dend_11 { pt3dadd( -10.3101, -70.1702, 14.6597, 0.23 ) }
    dend_11 { pt3dadd( -10.3297, -71.9273, 15.231, 2.05 ) }
    dend_11 { pt3dadd( -10.4475, -74.7386, 16.1487, 1.59 ) }
    dend_11 { pt3dadd( -10.5375, -76.4991, 16.7276, 1.59 ) }
    dend_11 { pt3dadd( -10.6564, -78.4694, 17.3981, 0.45 ) }
    dend_11 { pt3dadd( -10.7783, -80.4126, 18.1114, 1.14 ) }
    dend_11 { pt3dadd( -10.9164, -82.3589, 18.8523, 1.14 ) }
    dend_11 { pt3dadd( -11.1376, -85.1328, 19.8925, 1.59 ) }
    dend_11 { pt3dadd( -11.2774, -87.0771, 20.5992, 1.14 ) }
    dend_11 { pt3dadd( -11.5241, -90.4508, 21.7463, 0.68 ) }
    dend_11 { pt3dadd( -11.6601, -92.3365, 22.3583, 1.14 ) }
    dend_11 { pt3dadd( -11.8466, -94.8885, 23.1489, 0.23 ) }
    dend_11 { pt3dadd( -12.0321, -97.2843, 23.8527, 1.59 ) }
    dend_11 { pt3dadd( -12.23, -99.4106, 24.4121, 0.68 ) }
    dend_11 { pt3dadd( -12.388, -100.994, 24.8053, 0.91 ) }
    dend_11 { pt3dadd( -12.6304, -103.292, 25.3521, 0.91 ) }
    dend_11 { pt3dadd( -12.9964, -106.736, 26.1805, 1.36 ) }
    dend_11 { pt3dadd( -13.3653, -110.172, 27.0756, 0.91 ) }
    dend_11 { pt3dadd( -13.8456, -114.794, 28.4079, 1.14 ) }
    dend_11 { pt3dadd( -14.0984, -117.062, 29.1105, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_11 { pt3dadd( -14.3513, -119.299, 29.8353, 1.14 ) }
    dend_11 { pt3dadd( -14.7082, -122.123, 30.7161, 0.23 ) }
    dend_11 { pt3dadd( -15.031, -124.42, 31.3963, 0.68 ) }
    dend_11 { pt3dadd( -15.4323, -127.01, 32.1112, 0.45 ) }
    dend_11 { pt3dadd( -15.6914, -128.633, 32.5252, 2.05 ) }
    dend_11 { pt3dadd( -16.3765, -132.717, 33.4484, 0.91 ) }
    dend_11 { pt3dadd( -17.196, -137.507, 34.4314, 0.45 ) }
    dend_11 { pt3dadd( -17.5205, -139.367, 34.7716, 0.91 ) }
    dend_11 { pt3dadd( -17.9338, -141.713, 35.142, 0.91 ) }
    dend_11 { pt3dadd( -18.3967, -144.369, 35.5075, 0.23 ) }
    dend_11 { pt3dadd( -18.6344, -145.824, 35.7062, 0.91 ) }
    dend_11 { pt3dadd( -19.0873, -148.723, 36.1637, 0.45 ) }
    dend_11 { pt3dadd( -19.498, -151.353, 36.6649, 1.36 ) }
    dend_11 { pt3dadd( -19.8718, -153.633, 37.1452, 0.68 ) }
    dend_11 { pt3dadd( -20.0437, -154.611, 37.3671, 1.14 ) }
    dend_11 { pt3dadd( -20.4148, -156.63, 37.869, 0.23 ) }
    dend_11 { pt3dadd( -20.7019, -158.332, 38.3686, 0.68 ) }
    dend_11 { pt3dadd( -20.9873, -160.321, 39.0549, 0.23 ) }
    dend_11 { pt3dadd( -21.1613, -161.714, 39.5788, 0.91 ) }
    dend_11 { pt3dadd( -21.3416, -163.37, 40.2407, 0.91 ) }
    dend_11 { pt3dadd( -21.7336, -167.204, 41.744, 0.23 ) }
    dend_11 { pt3dadd( -22.0056, -169.866, 42.721, 1.36 ) }
    dend_11 { pt3dadd( -22.473, -174.055, 44.1921, 0.23 ) }
    dend_11 { pt3dadd( -22.7062, -176.069, 44.8742, 1.14 ) }
    dend_11 { pt3dadd( -22.8163, -176.937, 45.1566, 1.14 ) }
    dend_11 { pt3dadd( -23.1921, -179.543, 45.9884, 0.23 ) }
    dend_11 { pt3dadd( -23.5796, -181.887, 46.7012, 0.91 ) }
    dend_11 { pt3dadd( -23.8477, -183.36, 47.123, 1.82 ) }
    dend_11 { pt3dadd( -24.1311, -184.756, 47.5205, 1.82 ) }
    dend_11 { pt3dadd( -24.8727, -188.385, 48.6159, 0.45 ) }
    dend_11 { pt3dadd( -25.2516, -190.188, 49.1958, 1.14 ) }
    dend_11 { pt3dadd( -25.4913, -191.307, 49.5941, 1.14 ) }
    dend_11 { pt3dadd( -25.8916, -193.21, 50.3151, 0.23 ) }
    dend_11 { pt3dadd( -26.4536, -196.04, 51.437, 0.23 ) }
    dend_11 { pt3dadd( -26.6636, -197.143, 51.8943, 1.36 ) }
    dend_11 { pt3dadd( -26.9041, -198.585, 52.5096, 1.36 ) }
    dend_11 { pt3dadd( -27.2492, -201.061, 53.5536, 0.23 ) }
    dend_11 { pt3dadd( -27.5342, -203.231, 54.4817, 0.91 ) }
    dend_11 { pt3dadd( -27.7078, -204.735, 55.1438, 0.91 ) }
    dend_11 { pt3dadd( -27.9881, -207.703, 56.4798, 0.23 ) }
    dend_11 { pt3dadd( -28.1576, -209.72, 57.3853, 0.45 ) }
    dend_11 { pt3dadd( -28.3402, -212.151, 58.4738, 0.91 ) }
    dend_11 { pt3dadd( -28.4922, -214.38, 59.493, 0.45 ) }
    dend_11 { pt3dadd( -28.633, -216.126, 60.2644, 1.14 ) }
    dend_11 { pt3dadd( -28.7843, -217.504, 60.8408, 1.14 ) }
    dend_11 { pt3dadd( -29.0862, -219.726, 61.756, 0.23 ) }
    dend_11 { pt3dadd( -29.2231, -220.584, 62.1013, 1.14 ) }
    dend_11 { pt3dadd( -29.5062, -222.264, 62.7782, 1.14 ) }
    dend_11 { pt3dadd( -30.1146, -225.86, 64.2199, 0.23 ) }
    dend_11 { pt3dadd( -30.6498, -228.936, 65.4661, 0.68 ) }
    dend_11 { pt3dadd( -30.93, -230.604, 66.1602, 1.59 ) }
    dend_11 { pt3dadd( -31.0934, -231.671, 66.6318, 2.05 ) }
    dend_11 { pt3dadd( -31.5665, -235.481, 68.451, 0.23 ) }
    dend_11 { pt3dadd( -31.6912, -236.803, 69.1538, 1.14 ) }
    dend_11 { pt3dadd( -31.7365, -237.776, 69.7473, 1.59 ) }
    dend_11 { pt3dadd( -31.7046, -239.995, 71.2617, 0.45 ) }
    dend_11 { pt3dadd( -31.6512, -241.837, 72.6234, 0.91 ) }
    dend_11 { pt3dadd( -31.5987, -244.005, 74.3526, 0.23 ) }
    dend_11 { pt3dadd( -31.5553, -245.77, 75.8533, 1.14 ) }
    dend_11 { pt3dadd( -31.5251, -246.788, 76.7794, 1.14 ) }
    dend_11 { pt3dadd( -31.4118, -249.997, 79.8408, 0.23 ) }
    dend_11 { pt3dadd( -31.3137, -251.905, 81.7733, 0.23 ) }
    dend_11 { pt3dadd( -31.2341, -253.19, 83.0931, 0.68 ) }
    dend_11 { pt3dadd( -31.1775, -253.897, 83.8195, 0.68 ) }
    dend_11 { pt3dadd( -31.0259, -255.624, 85.5048, 0.23 ) }
    dend_11 { pt3dadd( -30.8539, -257.466, 87.2771, 1.36 ) }
    dend_11 { pt3dadd( -30.5904, -259.802, 89.4663, 0.45 ) }
    dend_11 { pt3dadd( -30.33, -261.434, 90.9389, 1.14 ) }
    dend_11 { pt3dadd( -30.1202, -262.635, 91.9695, 0.23 ) }
    dend_11 { pt3dadd( -29.8714, -264.243, 93.2749, 2.5 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 70/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -10.0528, -41.0321, 1.32175, 0.91 ) }
    dend_8 { pt3dadd( -11.2385, -43.135, 0.825275, 0.91 ) }
    dend_8 { pt3dadd( -12.1522, -44.7554, 0.442705, 0.91 ) }
    dend_8 { pt3dadd( -12.9651, -46.1971, 0.102346, 0.68 ) }
    dend_8 { pt3dadd( -13.4446, -47.0475, -0.0984298, 1.36 ) }
    dend_8 { pt3dadd( -14.1486, -48.296, -0.393197, 1.59 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 76/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -29.8714, -264.243, 93.2749, 0.23 ) }
    dend_15 { pt3dadd( -27.3366, -263.958, 95.9669, 0.23 ) }
    dend_15 { pt3dadd( -25.5927, -263.76, 97.8632, 0.91 ) }
    dend_15 { pt3dadd( -23.2764, -263.516, 100.44, 0.23 ) }
    dend_15 { pt3dadd( -21.2123, -263.298, 102.736, 1.14 ) }
    dend_15 { pt3dadd( -18.9502, -263.059, 105.252, 0.23 ) }
    dend_15 { pt3dadd( -18.3416, -262.995, 105.929, 0.68 ) }
    dend_15 { pt3dadd( -17.2579, -262.714, 107.186, 0.23 ) }
    dend_15 { pt3dadd( -16.7987, -262.567, 107.693, 0.68 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -29.8714, -264.243, 93.2749, 0.23 ) }
    dend_12 { pt3dadd( -30.5017, -266.583, 93.3006, 0.23 ) }
    dend_12 { pt3dadd( -30.6988, -267.309, 93.334, 0.91 ) }
    dend_12 { pt3dadd( -30.9731, -268.251, 93.4052, 0.45 ) }
    dend_12 { pt3dadd( -31.1433, -268.8, 93.4526, 1.36 ) }
    dend_12 { pt3dadd( -31.5459, -270.044, 93.5321, 0.23 ) }
    dend_12 { pt3dadd( -31.8034, -270.803, 93.5835, 1.14 ) }
    dend_12 { pt3dadd( -32.5018, -272.746, 93.7383, 0.23 ) }
    dend_12 { pt3dadd( -33.016, -274.025, 93.8347, 0.23 ) }
    dend_12 { pt3dadd( -33.4885, -275.149, 93.9315, 1.59 ) }
    dend_12 { pt3dadd( -34.1068, -276.671, 94.095, 0.91 ) }
    dend_12 { pt3dadd( -34.665, -278.126, 94.3002, 0.23 ) }
    dend_12 { pt3dadd( -35.0923, -279.278, 94.5258, 1.14 ) }
    dend_12 { pt3dadd( -35.6865, -280.995, 94.9623, 0.23 ) }
    dend_12 { pt3dadd( -36.0585, -282.192, 95.3263, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_12 { pt3dadd( -36.4798, -283.71, 95.8585, 0.23 ) }
    dend_12 { pt3dadd( -36.7791, -284.924, 96.322, 1.14 ) }
    dend_12 { pt3dadd( -37.0695, -286.328, 96.8529, 0.23 ) }
    dend_12 { pt3dadd( -37.2774, -287.523, 97.3106, 1.36 ) }
    dend_12 { pt3dadd( -37.3257, -287.866, 97.4372, 1.36 ) }
    dend_12 { pt3dadd( -37.6162, -290.178, 98.2198, 0.23 ) }
    dend_12 { pt3dadd( -37.7301, -291.445, 98.5784, 0.91 ) }
    dend_12 { pt3dadd( -37.783, -292.94, 98.9243, 0.23 ) }
    dend_12 { pt3dadd( -37.7541, -294.212, 99.1784, 1.36 ) }
    dend_12 { pt3dadd( -37.6892, -294.932, 99.3305, 1.36 ) }
    dend_12 { pt3dadd( -37.2652, -297.44, 99.928, 0.23 ) }
    dend_12 { pt3dadd( -36.7882, -299.299, 100.434, 1.14 ) }
    dend_12 { pt3dadd( -36.3486, -300.628, 100.834, 0.23 ) }
    dend_12 { pt3dadd( -36.0279, -301.48, 101.098, 1.36 ) }
    dend_12 { pt3dadd( -35.2907, -303.206, 101.653, 0.23 ) }
    dend_12 { pt3dadd( -34.6269, -304.563, 102.139, 1.82 ) }
    dend_12 { pt3dadd( -34.3934, -304.942, 102.315, 1.82 ) }
    dend_12 { pt3dadd( -34.0325, -305.455, 102.654, 0.45 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 18/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -14.1486, -48.296, -0.393197, 0.68 ) }
    dend_10 { pt3dadd( -13.7446, -49.326, -2.29345, 0.68 ) }
    dend_10 { pt3dadd( -13.2232, -50.2783, -4.26418, 1.14 ) }
    dend_10 { pt3dadd( -12.62, -51.3709, -6.47248, 0.23 ) }
    dend_10 { pt3dadd( -12.2368, -52.1232, -7.84681, 0.23 ) }
    dend_10 { pt3dadd( -11.9297, -53.0145, -9.1918, 1.14 ) }
    dend_10 { pt3dadd( -11.7684, -53.7507, -10.2409, 0.23 ) }
    dend_10 { pt3dadd( -11.6791, -54.582, -11.4467, 0.45 ) }
    dend_10 { pt3dadd( -11.6774, -55.1781, -12.2904, 0.45 ) }
    dend_10 { pt3dadd( -11.7069, -56.0281, -13.526, 1.14 ) }
    dend_10 { pt3dadd( -11.7988, -57.8543, -16.2395, 0.23 ) }
    dend_10 { pt3dadd( -11.8623, -59.0953, -18.2672, 0.91 ) }
    dend_10 { pt3dadd( -11.8668, -59.7424, -19.6188, 0.91 ) }
    dend_10 { pt3dadd( -11.7792, -60.1748, -21.1038, 0.45 ) }
    dend_10 { pt3dadd( -11.5346, -60.404, -22.847, 0.45 ) }
    dend_10 { pt3dadd( -11.1865, -60.3222, -24.2389, 0.45 ) }
    dend_10 { pt3dadd( -10.5673, -59.8804, -25.6437, 0.91 ) }
    dend_10 { pt3dadd( -9.41758, -58.9474, -27.3808, 0.45 ) }
    dend_10 { pt3dadd( -8.61075, -58.1758, -28.3746, 0.45 ) }
    dend_10 { pt3dadd( -7.93763, -57.3999, -29.0734, 0.45 ) }
    dend_10 { pt3dadd( -7.36427, -56.4661, -29.7298, 0.45 ) }
    dend_10 { pt3dadd( -7.27036, -57.2215, -28.8818, 1.36 ) }
    dend_10 { pt3dadd( -6.78027, -57.8785, -27.7981, 1.36 ) }
    dend_10 { pt3dadd( -6.30088, -58.691, -26.5717, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 42/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -14.1486, -48.296, -0.393197, 0.23 ) }
    dend_9 { pt3dadd( -14.9346, -50.5107, 0.108262, 0.23 ) }
    dend_9 { pt3dadd( -15.2895, -51.5338, 0.364322, 0.91 ) }
    dend_9 { pt3dadd( -15.756, -52.9036, 0.757202, 0.91 ) }
    dend_9 { pt3dadd( -16.2742, -54.5012, 1.24756, 0.91 ) }
    dend_9 { pt3dadd( -16.8292, -56.2779, 1.84145, 0.23 ) }
    dend_9 { pt3dadd( -17.442, -58.2905, 2.56594, 0.68 ) }
    dend_9 { pt3dadd( -18.0821, -60.4381, 3.40919, 0.45 ) }
    dend_9 { pt3dadd( -18.776, -62.8243, 4.39784, 0.91 ) }
    dend_9 { pt3dadd( -19.3106, -64.7341, 5.21621, 0.68 ) }
    dend_9 { pt3dadd( -19.8903, -66.9217, 6.15882, 1.59 ) }
    dend_9 { pt3dadd( -21.095, -71.4545, 8.08822, 0.45 ) }
    dend_9 { pt3dadd( -21.5953, -73.3874, 8.91113, 0.45 ) }
    dend_9 { pt3dadd( -21.9281, -74.6965, 9.45943, 1.59 ) }
    dend_9 { pt3dadd( -22.2022, -75.7868, 9.88644, 1.59 ) }
    dend_9 { pt3dadd( -22.9194, -78.6451, 10.8681, 0.23 ) }
    dend_9 { pt3dadd( -23.4325, -80.6572, 11.448, 0.68 ) }
    dend_9 { pt3dadd( -24.2009, -83.5854, 12.1444, 0.23 ) }
    dend_9 { pt3dadd( -24.6891, -85.3869, 12.5066, 1.36 ) }
    dend_9 { pt3dadd( -25.5334, -88.4371, 13.0272, 0.45 ) }
    dend_9 { pt3dadd( -26.7609, -92.72, 13.6003, 0.45 ) }
    dend_9 { pt3dadd( -27.376, -94.7847, 13.8018, 0.45 ) }
    dend_9 { pt3dadd( -27.8493, -96.3522, 13.9002, 1.36 ) }
    dend_9 { pt3dadd( -28.3902, -98.0308, 13.9297, 1.59 ) }
    dend_9 { pt3dadd( -28.949, -99.6496, 13.9039, 0.23 ) }
    dend_9 { pt3dadd( -29.4812, -101.092, 13.8412, 0.45 ) }
    dend_9 { pt3dadd( -30.5398, -103.875, 13.7044, 0.23 ) }
    dend_9 { pt3dadd( -30.9476, -104.921, 13.679, 0.23 ) }
    dend_9 { pt3dadd( -31.7303, -106.786, 13.66, 1.14 ) }
    dend_9 { pt3dadd( -33.0864, -109.796, 13.6523, 0.23 ) }
    dend_9 { pt3dadd( -33.9257, -111.571, 13.6585, 1.14 ) }
    dend_9 { pt3dadd( -35.0075, -113.732, 13.7076, 0.23 ) }
    dend_9 { pt3dadd( -36.0086, -115.636, 13.7609, 0.45 ) }
    dend_9 { pt3dadd( -36.9926, -117.388, 13.872, 0.23 ) }
    dend_9 { pt3dadd( -37.8325, -118.792, 13.9783, 1.14 ) }
    dend_9 { pt3dadd( -38.272, -119.48, 14.0399, 1.14 ) }
    dend_9 { pt3dadd( -39.369, -121.133, 14.1755, 0.23 ) }
    dend_9 { pt3dadd( -39.9991, -122.045, 14.237, 0.91 ) }
    dend_9 { pt3dadd( -41.3214, -124.027, 14.3573, 0.23 ) }
    dend_9 { pt3dadd( -42.1415, -125.29, 14.5075, 1.14 ) }
    dend_9 { pt3dadd( -43.1393, -126.876, 14.768, 0.23 ) }
    dend_9 { pt3dadd( -43.781, -128.004, 15.0157, 0.91 ) }
    dend_9 { pt3dadd( -44.08, -128.619, 15.1875, 0.23 ) }
    dend_9 { pt3dadd( -44.4573, -129.48, 15.4786, 0.68 ) }
    dend_9 { pt3dadd( -45.2963, -131.616, 16.2122, 0.23 ) }
    dend_9 { pt3dadd( -45.7848, -132.89, 16.6668, 0.68 ) }
    dend_9 { pt3dadd( -46.5142, -134.84, 17.3042, 0.23 ) }
    dend_9 { pt3dadd( -47.0531, -136.166, 17.717, 0.91 ) }
    dend_9 { pt3dadd( -48.5096, -139.596, 18.6135, 0.23 ) }
    dend_9 { pt3dadd( -49.0991, -140.957, 18.9465, 0.68 ) }
    dend_9 { pt3dadd( -49.7133, -142.351, 19.2417, 0.23 ) }
    dend_9 { pt3dadd( -50.3992, -143.797, 19.5105, 0.91 ) }
    dend_9 { pt3dadd( -51.9295, -146.743, 19.9161, 0.23 ) }
    dend_9 { pt3dadd( -53.048, -148.776, 20.1082, 0.91 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -34.0325, -305.455, 102.654, 0.23 ) }
    dend_14 { pt3dadd( -33.6251, -306.779, 103.859, 0.23 ) }
    dend_14 { pt3dadd( -33.0618, -308.317, 105.275, 0.91 ) }
    dend_14 { pt3dadd( -32.494, -309.645, 106.588, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_14 { pt3dadd( -31.8047, -311.203, 108.055, 0.91 ) }
    dend_14 { pt3dadd( -31.3317, -312.266, 109.032, 0.23 ) }
    dend_14 { pt3dadd( -30.6459, -313.731, 110.328, 0.68 ) }
    dend_14 { pt3dadd( -30.0194, -314.953, 111.343, 0.23 ) }
    dend_14 { pt3dadd( -29.2041, -316.346, 112.472, 0.91 ) }
    dend_14 { pt3dadd( -28.2799, -317.692, 113.561, 0.23 ) }
    dend_14 { pt3dadd( -27.4449, -318.81, 114.414, 0.91 ) }
    dend_14 { pt3dadd( -26.2145, -320.508, 115.574, 0.23 ) }
    dend_14 { pt3dadd( -25.1012, -322.039, 116.554, 1.14 ) }
    dend_14 { pt3dadd( -23.5181, -324.271, 117.89, 0.23 ) }
    dend_14 { pt3dadd( -22.3056, -325.951, 118.839, 0.68 ) }
    dend_14 { pt3dadd( -21.1348, -327.481, 119.739, 0.23 ) }
    dend_14 { pt3dadd( -19.7191, -329.319, 120.728, 1.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -34.0325, -305.455, 102.654, 0.23 ) }
    dend_13 { pt3dadd( -33.7271, -306.252, 103.303, 0.23 ) }
    dend_13 { pt3dadd( -33.3499, -307.235, 104.104, 0.68 ) }
    dend_13 { pt3dadd( -33.1664, -307.714, 104.494, 0.23 ) }
    dend_13 { pt3dadd( -32.6835, -308.974, 105.52, 0.91 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_24 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_39 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_36 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_17 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_38 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_29 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_28 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_18 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_9 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_24 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_3 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_34 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_25 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_4 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_26 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_5 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_6 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_35 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_10 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_32 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_13 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 3
    dend_23 nseg = 3
    dend_20 nseg = 9
    dend_39 nseg = 5
    dend_36 nseg = 11
    dend_30 nseg = 3
    dend_17 nseg = 9
    dend_38 nseg = 3
    dend_31 nseg = 3
    dend_29 nseg = 7
    dend_28 nseg = 5
    dend_18 nseg = 3
    dend_16 nseg = 3
    dend_11 nseg = 13
    dend_12 nseg = 3
    dend_9 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L5_SBC_30bda13a76_0_0


