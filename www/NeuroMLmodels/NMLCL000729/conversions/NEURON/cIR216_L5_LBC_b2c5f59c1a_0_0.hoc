// Cell: cIR216_L5_LBC_b2c5f59c1a_0_0
/*
{
  "id" : "cIR216_L5_LBC_b2c5f59c1a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.24986, 8.66179, -0.266886, 1.81928", "-1.99773, 7.71094, -0.243919, 3.13771", "-1.74561, 6.7601, -0.220952, 4.2898", "-1.49349, 5.80925, -0.197985, 6.24218", "-1.24137, 4.8584, -0.175018, 7.75134", "-0.989246, 3.90756, -0.152051, 8.81916", "-0.737124, 2.95671, -0.129084, 9.30643", "-0.485002, 2.00586, -0.106117, 9.79367", "-0.23288, 1.05502, -0.0831497, 10.3575", "0.0192416, 0.104171, -0.0601827, 10.6175", "0.271364, -0.846675, -0.0372157, 10.6286", "0.523485, -1.79752, -0.0142487, 10.564", "0.775607, -2.74837, 0.00871831, 10.4925", "1.02773, -3.69921, 0.0316853, 10.2088", "1.27985, -4.65006, 0.0546523, 9.65193", "1.53197, -5.60091, 0.0776193, 9.00896", "1.7841, -6.55175, 0.100586, 8.08521", "2.03622, -7.5026, 0.123553, 6.83318", "2.28834, -8.45345, 0.14652, 5.15146", "2.54046, -9.40429, 0.169487, 3.38897", "2.79258, -10.3551, 0.192454, 2.13858" ]
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-4.45367, 0.250478, 4.43561, 0.96", "-4.93402, -0.270838, 5.41132, 0.96", "-5.33107, -0.600578, 6.09551, 0.88", "-6.66201, -1.54252, 8.06928, 0.81", "-7.24056, -1.94059, 8.83898, 0.74", "-8.14592, -2.60503, 9.98457, 0.66", "-8.69376, -3.01177, 10.7714, 0.59", "-9.12963, -3.37129, 11.5286, 0.81", "-9.46806, -3.63147, 12.1175, 0.81", "-10.2035, -4.0787, 13.3154, 0.59", "-10.8448, -4.39977, 14.3749, 1.33", "-12.4056, -5.03953, 17.0342, 1.55", "-13.5582, -5.43447, 19.1519, 0.74", "-13.9737, -5.53257, 19.9176, 0.59", "-14.5589, -5.61895, 20.9715, 1.03", "-14.8001, -5.62479, 21.3818, 1.47", "-15.4881, -5.56481, 22.4724, 1.47", "-16.8611, -5.34618, 24.6206, 0.81", "-17.357, -5.25033, 25.5652, 0.59", "-17.8082, -5.20259, 26.6813, 0.59", "-18.0812, -5.22781, 27.4958, 0.96", "-18.3193, -5.31507, 28.38, 0.96", "-18.9276, -5.67628, 31.1835, 0.59", "-19.1641, -5.91523, 32.8938, 0.59", "-19.263, -6.10211, 34.2215, 0.44", "-19.2888, -6.23355, 35.0577, 1.18", "-19.2838, -6.41282, 35.8039, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.51366, 8.18398, 1.68561, 3.24", "-1.51904, 8.75479, 1.79165, 3.24", "-1.53728, 10.6934, 2.15179, 2.58", "-1.55156, 12.2106, 2.43363, 2.36", "-1.56319, 13.4465, 2.66322, 2.36", "-1.57664, 14.8761, 2.9288, 2.36", "-1.58314, 15.5668, 3.05712, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.55634, -6.50428, 3.06561, 1.18", "5.74995, -6.5736, 3.24094, 1.18", "6.93284, -7.09993, 4.09921, 0.88", "7.58296, -7.39205, 4.46863, 1.11", "9.39207, -8.15687, 5.28289, 1.33", "10.2933, -8.50904, 5.6012, 1.33", "11.3164, -8.89788, 5.96297, 1.25", "12.552, -9.35538, 6.33596, 0.96", "13.5564, -9.74233, 6.56209, 0.96", "14.3935, -10.0832, 6.69775, 1.25", "15.4222, -10.4725, 6.83723, 1.25", "16.8722, -10.9298, 7.11965, 1.47", "17.8396, -11.1763, 7.3808, 0.74", "18.5852, -11.3088, 7.68084, 0.74", "19.6832, -11.4573, 8.20929, 0.59", "21.1042, -11.6298, 8.92002, 0.59", "21.6716, -11.6929, 9.19218, 0.81", "22.324, -11.7641, 9.44624, 0.81", "23.8508, -11.8776, 10.0906, 0.52", "24.4335, -11.8875, 10.3454, 0.52", "25.379, -11.8616, 10.7497, 0.52", "26.1158, -11.9468, 10.9727, 0.59", "27.2598, -12.277, 11.1877, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.77634, -10.0508, 1.87561, 2.43", "1.77634, -10.0508, 1.87561, 2.43", "1.87594, -11.6876, 1.48447, 2.06", "2.0247, -14.1325, 0.900246, 1.33", "2.17078, -16.5332, 0.326582, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500009556479821
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.79258, -10.3551, 0.192454, 0.59", "6.63706, -24.8541, 0.192454, 0.59", "10.4816, -39.353, 0.192454, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.58314, 15.5668, 3.05712, 2.06", "-1.26999, 16.0784, 3.75921, 2.06", "-0.637875, 17.1514, 5.05336, 1.92", "-0.0383602, 18.2253, 6.23712, 1.47", "0.226109, 18.7382, 6.75008, 1.47", "0.635356, 19.5991, 7.52697, 1.25", "0.937728, 20.2352, 8.10096, 1.77", "1.24335, 20.9264, 8.69022, 1.55", "1.59444, 21.7866, 9.26588, 1.62", "1.81687, 22.3975, 9.59878, 2.21", "2.04213, 23.0832, 9.9345, 2.65" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.58314, 15.5668, 3.05712, 0.59", "-4.36958, 15.8272, 2.79002, 0.59", "-5.88772, 15.8614, 2.68819, 0.59", "-7.21219, 15.792, 2.53284, 0.59", "-9.92527, 15.5402, 1.99404, 0.52", "-11.7342, 15.3651, 1.54304, 0.81", "-13.1251, 15.2436, 1.16588, 1.18", "-14.1743, 15.1058, 0.883406, 1.18", "-16.7285, 14.7284, 0.14578, 0.66", "-18.9805, 14.4384, -0.488548, 0.66", "-20.4663, 14.2971, -0.861353, 1.25", "-21.3082, 14.2454, -1.03809, 1.47", "-23.2151, 14.1927, -1.39488, 0.52", "-24.6056, 14.1945, -1.5742, 0.52", "-26.8505, 14.2478, -1.57515, 0.52", "-28.2579, 14.2534, -1.43101, 1.03", "-29.2606, 14.2143, -1.29058, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "27.2598, -12.277, 11.1877, 0.52", "27.2657, -14.0879, 10.7619, 0.52", "27.1375, -14.8313, 10.5938, 0.37", "26.6677, -16.5227, 10.1557, 0.37", "26.2279, -17.7155, 9.70642, 0.59", "25.9612, -18.36, 9.4102, 0.22", "25.3281, -19.7775, 8.74048, 0.22", "24.8445, -20.704, 8.23494, 0.22", "23.9678, -22.1968, 7.37173, 0.74", "22.6118, -24.2286, 6.16408, 0.29", "21.7153, -25.5586, 5.34666, 0.07", "21.3019, -26.2265, 4.89821, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "27.2598, -12.277, 11.1877, 1.03", "29.4515, -12.3338, 12.805, 1.03", "30.4428, -12.4103, 13.0882, 0.52", "32.0173, -12.3859, 13.3418, 0.52", "35.194, -12.195, 13.7374, 0.37", "37.0131, -12.0791, 13.8394, 0.37", "41.4201, -11.7998, 13.903, 0.37", "52.8275, -11.1967, 13.2358, 0.37", "59.5111, -10.8634, 12.5256, 0.66", "61.2616, -10.7658, 12.2535, 0.66", "65.5029, -10.4697, 11.2672, 0.74", "67.3713, -10.2956, 10.7, 0.74", "69.7639, -10.0157, 9.69353, 0.37", "71.2391, -9.83418, 8.91107, 0.37", "72.6711, -9.76168, 8.23684, 0.37", "74.0474, -9.62821, 7.82152, 0.81", "75.807, -9.30228, 7.65969, 0.81", "77.1758, -9.01577, 7.64805, 0.81", "79.3487, -8.68465, 7.80926, 0.37", "80.9579, -8.64547, 7.96877, 0.29", "82.7396, -8.84252, 8.1979, 0.29", "84.9213, -9.29167, 8.60239, 0.44", "86.5519, -9.73224, 9.05349, 0.44", "89.0716, -10.4986, 9.88048, 0.44", "91.2898, -11.2033, 10.6367, 0.88", "92.2336, -11.4668, 11.0057, 0.88", "94.5071, -11.8585, 12.1389, 0.52", "96.5614, -11.8284, 13.4522, 0.74", "98.2421, -11.4677, 14.6241, 0.81", "99.2762, -11.0707, 15.3267, 0.81", "100.59, -10.4544, 16.1581, 0.52", "102.295, -9.63118, 17.1085, 0.52", "103.177, -9.24483, 17.5119, 0.74", "104.585, -8.76987, 18.0224, 0.74", "106.12, -8.45183, 18.4975, 0.59", "107.619, -8.34918, 18.8621, 0.59", "109.554, -8.44886, 19.2022, 0.66", "110.999, -8.6965, 19.3292, 0.88", "111.97, -8.96758, 19.3478, 0.88", "113.11, -9.47588, 19.2799, 0.52", "114.5, -10.3757, 19.0878, 0.52", "115.437, -11.2413, 18.8502, 0.52", "116.805, -13.0148, 18.3443, 0.44", "117.654, -14.2976, 17.882, 0.44", "118.736, -16.0634, 17.1111, 0.59", "119.184, -16.8048, 16.7202, 0.74", "119.918, -17.8364, 16.0159, 0.52", "120.61, -18.152, 15.4847, 0.37", "123.127, -17.6009, 14.1013, 0.52", "124.125, -17.3301, 13.6201, 0.52", "125.322, -17.0362, 13.1141, 0.52", "127.347, -16.6429, 12.3696, 0.52", "129.278, -16.272, 11.7521, 0.52", "131.181, -15.9231, 11.209, 0.66", "132.756, -15.7033, 10.841, 0.66", "134.353, -15.4859, 10.4697, 0.37", "135.849, -15.3189, 10.1358, 0.37", "137.507, -15.204, 9.80352, 0.37", "138.634, -15.1528, 9.5496, 0.66", "139.212, -15.1438, 9.38286, 0.66", "139.92, -15.17, 9.06723, 0.66", "140.622, -15.259, 8.64397, 0.66", "141.701, -15.4989, 7.8782, 0.37", "143.173, -15.9563, 6.79058, 0.37", "144.711, -16.4152, 5.76509, 0.37", "146.023, -16.7281, 4.99286, 0.22", "147.286, -16.9631, 4.38497, 0.37", "148.317, -17.0373, 4.04207, 0.44", "149.335, -16.9428, 3.87986, 0.44", "151.5, -16.4279, 3.89296, 0.52", "152.2, -16.2008, 3.95302, 0.37", "153.299, -15.7922, 4.08975, 0.37", "154.371, -15.3943, 4.1842, 0.52", "155.133, -15.0901, 4.13952, 0.66", "155.753, -14.8307, 3.98035, 0.88", "156.189, -14.62, 3.78882, 0.88", "156.754, -14.3065, 3.51696, 1.03", "157.469, -13.851, 3.14264, 1.03", "158.57, -13.1511, 2.54473, 0.52", "159.885, -12.3846, 1.80659, 0.29", "161.009, -11.8844, 1.22862, 0.66", "161.881, -11.5738, 0.794981, 0.81", "162.736, -11.3388, 0.384197, 0.81", "163.511, -11.1603, 0.0183997, 0.81", "164.774, -10.9317, -0.528119, 0.37", "167.201, -10.6864, -1.54465, 0.37", "168.41, -10.6318, -2.00567, 0.44", "169.447, -10.5715, -2.37665, 0.59", "170.401, -10.4606, -2.69559, 0.59", "171.8, -10.1874, -3.12378, 0.59", "173.081, -9.81228, -3.47185, 0.52", "174.524, -9.27835, -3.83832, 0.74", "175.52, -8.94206, -4.03797, 0.74", "176.953, -8.55748, -4.37192, 0.37", "178.044, -8.3347, -4.66979, 0.44", "179.244, -8.15055, -5.04303, 0.66", "180.139, -8.06538, -5.33953, 0.74", "181.126, -8.07101, -5.66325, 0.74", "183.184, -8.19753, -6.35884, 0.59", "183.77, -8.25005, -6.57084, 0.59", "184.624, -8.30841, -6.91282, 0.59", "185.472, -8.36403, -7.30616, 0.37", "186.782, -8.4004, -7.95638, 0.59", "187.925, -8.37949, -8.57021, 0.81", "188.789, -8.32605, -8.98951, 0.81", "190.113, -8.25952, -9.55697, 0.52", "191.581, -8.15217, -10.1002, 0.37", "192.589, -8.04565, -10.4048, 0.29", "193.348, -7.93766, -10.5683, 0.29", "195.057, -7.56022, -10.7696, 0.52", "196.753, -7.06409, -10.859, 0.52", "197.888, -6.73274, -10.8575, 0.88", "198.816, -6.5132, -10.8736, 0.88", "199.529, -6.40512, -10.9675, 0.88", "201.089, -6.26128, -11.3675, 0.37", "202.164, -6.19559, -11.834, 0.37", "203.671, -6.13985, -12.667, 0.37", "205.468, -6.16862, -13.6805, 0.29", "206.833, -6.24571, -14.5768, 0.29", "207.671, -6.27112, -15.1784, 0.52", "208.099, -6.26666, -15.5165, 0.74", "208.828, -6.20422, -16.1599, 0.44", "210.284, -5.98188, -17.4564, 0.37", "212.669, -5.52583, -19.4548, 0.44", "214.015, -5.30019, -20.5832, 0.44", "215.353, -5.11868, -21.7796, 1.03", "216.685, -4.97035, -23.0486, 1.47" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "2.17078, -16.5332, 0.326582, 1.18", "1.47554, -18.3852, 1.93418, 1.18", "1.0796, -19.2247, 2.61912, 1.18", "0.0753349, -21.354, 4.35643, 1.18", "-0.640841, -22.8725, 5.59537, 0.88", "-1.08654, -23.8175, 6.36641, 0.74", "-1.47537, -24.6419, 7.03906, 1.03", "-2.36261, -26.1603, 8.02098, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.17078, -16.5332, 0.326582, 0.96", "2.33591, -18.0497, -2.85155, 0.96", "2.49439, -19.431, -5.23986, 0.96", "2.50406, -19.63, -5.5474, 1.4", "2.68476, -22.2059, -9.28616, 0.88", "2.75167, -22.7554, -10.0361, 0.88", "2.92095, -23.7242, -11.3068, 0.52", "3.24141, -25.0088, -12.844, 0.52", "3.82826, -27.146, -15.2489, 0.88", "4.63162, -29.8298, -18.0776, 0.52", "5.3385, -31.8803, -20.101, 0.52", "5.82326, -33.0899, -21.3029, 0.52", "6.38717, -34.41, -22.5726, 0.52", "6.86148, -35.5088, -23.5642, 0.52", "7.48627, -36.9606, -24.6959, 0.88", "7.86696, -38.0631, -25.406, 1.11", "8.49743, -40.4196, -26.7105, 0.44", "8.84055, -41.9479, -27.5055, 0.74", "9.07966, -43.0387, -28.0275, 0.96", "9.344, -44.1226, -28.5043, 0.96", "9.76952, -45.8187, -29.2856, 0.66", "9.96788, -46.6335, -29.6934, 0.66", "10.4866, -48.6262, -30.7699, 0.44", "10.811, -49.6645, -31.6024, 0.59", "11.2096, -50.6719, -32.6391, 0.44", "12.0204, -52.2996, -35.2174, 0.37", "12.5377, -53.16, -37.2352, 0.96", "12.7247, -53.4478, -38.0737, 1.33", "13.7579, -55.1491, -43.8971, 0.81", "13.9745, -55.5552, -45.4049, 1.11", "14.8173, -57.4869, -52.741, 0.66", "15.2948, -59.0303, -58.3669, 1.55", "15.6077, -60.6045, -63.4741, 0.96", "15.7432, -62.2658, -68.1882, 0.81", "15.7153, -62.9994, -69.8911, 0.96", "15.586, -63.8998, -71.4851, 0.37", "15.2514, -65.4647, -73.2482, 0.29", "14.805, -67.2986, -74.5265, 0.29", "14.5244, -68.4209, -74.9932, 0.52", "14.3986, -69.0676, -75.1461, 0.52", "13.9636, -71.8671, -75.7995, 0.29", "13.8678, -72.6406, -76.0022, 0.59", "13.8039, -73.3409, -76.1928, 0.59", "13.7218, -74.2326, -76.4647, 0.29", "13.5554, -76.0498, -77.1073, 0.29", "13.3995, -77.8264, -77.8581, 0.59", "13.3295, -78.4322, -78.1617, 0.81", "12.9189, -81.1966, -79.6892, 0.22", "12.6898, -82.5865, -80.5586, 0.22", "12.3575, -84.5179, -81.8888, 0.22", "11.9543, -86.7865, -83.5387, 0.81", "11.5694, -88.8241, -85.152, 0.44", "11.3453, -89.9947, -86.1431, 0.44", "10.9707, -91.9616, -87.91, 0.88", "10.7729, -93.322, -89.0775, 0.74", "10.7089, -93.8873, -89.5317, 0.74", "10.3692, -96.6847, -91.5515, 0.44", "10.2194, -97.9163, -92.3294, 0.44", "10.0366, -98.9398, -92.9328, 0.29", "9.65977, -100.483, -93.7265, 0.29", "8.83698, -103.057, -94.9333, 0.29", "8.28098, -104.541, -95.567, 0.74", "7.77148, -105.774, -95.9925, 0.74", "6.71142, -108.119, -96.7907, 0.44", "6.20697, -109.197, -97.1282, 0.44", "5.66914, -110.371, -97.4364, 0.29", "5.45412, -110.878, -97.5199, 0.66", "4.89159, -112.22, -97.7039, 0.37", "4.42806, -113.312, -97.8102, 0.88", "3.95264, -114.302, -97.9016, 0.88", "3.23118, -115.628, -98.0937, 0.59", "2.46195, -116.904, -98.3244, 0.29", "1.61545, -118.164, -98.7209, 0.66", "1.20728, -118.731, -98.9944, 0.66", "-0.0228177, -120.569, -100.256, 0.22", "-0.415747, -121.252, -100.832, 0.22", "-0.697899, -121.789, -101.342, 0.74", "-1.4873, -123.687, -103.34, 0.44", "-1.82723, -124.837, -104.649, 0.44", "-2.12672, -126.403, -106.566, 0.29", "-2.13088, -126.868, -107.192, 0.44" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.4816, -39.353, 0.192454, 0.15", "14.326, -53.852, 0.192454, 0.15", "18.1705, -68.351, 0.192454, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "2.04213, 23.0832, 9.9345, 0.81", "3.66092, 24.3227, 9.95676, 0.81", "4.35041, 24.8422, 9.89756, 0.81", "5.60187, 25.6873, 9.71886, 0.81", "7.28582, 26.7165, 9.44146, 0.96", "8.17463, 27.2262, 9.28608, 1.25", "8.95369, 27.6517, 9.1493, 1.25", "10.3986, 28.4284, 8.85711, 0.96", "11.5944, 29.0826, 8.59253, 0.81", "12.6811, 29.6715, 8.33184, 1.33", "13.3921, 30.0432, 8.12581, 1.62", "14.4651, 30.5592, 7.81489, 0.74", "15.4493, 30.9928, 7.5464, 0.59", "16.4424, 31.442, 7.26856, 0.52", "17.5912, 32.0384, 6.82565, 0.44", "18.3081, 32.4101, 6.4337, 0.44", "19.6143, 32.9854, 5.49263, 0.74", "20.4003, 33.2455, 4.81267, 0.74", "21.686, 33.4937, 3.6082, 0.52", "22.7914, 33.5805, 2.59363, 0.88", "23.9401, 33.627, 1.50872, 0.88", "24.9288, 33.7552, 0.476282, 0.59", "25.4141, 33.85, -0.0618186, 0.59", "25.9977, 33.9646, -0.674763, 0.44", "26.9013, 34.1587, -1.37305, 0.44", "27.6491, 34.4042, -1.78565, 0.44", "29.2035, 35.1519, -2.35726, 0.44", "30.4828, 35.9518, -2.72301, 0.74", "31.5534, 36.8121, -2.9782, 0.96", "33.5418, 38.8093, -3.32937, 0.44", "33.9911, 39.3394, -3.38705, 0.96", "34.7764, 40.3674, -3.45517, 0.37", "35.5216, 41.4868, -3.48893, 0.37", "36.2502, 42.7878, -3.71858, 0.37", "36.7595, 43.8634, -4.07105, 0.74", "37.101, 44.6379, -4.45032, 0.44", "37.5185, 45.628, -4.97567, 0.52", "37.812, 46.3958, -5.40851, 1.11", "38.6351, 48.6834, -6.71822, 0.44", "39.0415, 49.913, -7.40315, 0.29", "39.3619, 51.0596, -8.02911, 0.29", "39.5699, 51.9152, -8.46301, 0.81", "39.7398, 52.6557, -8.80925, 0.81", "40.0079, 53.7807, -9.27533, 0.52", "40.3584, 55.2863, -9.8051, 0.52", "40.7464, 57.0341, -10.4889, 0.44", "40.8362, 57.5094, -10.6914, 0.88", "40.9923, 58.2951, -11.0551, 0.88", "41.2677, 59.3891, -11.5751, 0.37", "41.5648, 60.2053, -12.0323, 0.22", "41.9125, 60.984, -12.4979, 0.22", "42.3151, 61.7557, -12.9797, 0.22", "42.8967, 62.7142, -13.6155, 0.22", "43.7289, 63.9696, -14.3925, 0.22", "45.0345, 65.741, -15.3872, 0.81", "45.4635, 66.2601, -15.6311, 0.81", "46.3389, 67.2162, -16.0158, 0.81", "47.1226, 68.031, -16.2807, 0.44", "48.1637, 69.1111, -16.5586, 0.44", "48.544, 69.5188, -16.6239, 0.96", "49.2173, 70.2608, -16.6706, 0.52", "50.0682, 71.1569, -16.7255, 0.37", "50.8188, 71.9503, -16.7673, 0.66", "51.4277, 72.5993, -16.8392, 0.66", "52.0487, 73.2786, -16.953, 0.29", "52.9619, 74.2753, -17.1182, 0.29", "53.8539, 75.2356, -17.2672, 0.59", "54.4696, 75.8684, -17.3559, 0.37", "55.2271, 76.5904, -17.4702, 0.66", "55.8587, 77.1678, -17.5667, 0.66", "56.9706, 78.1774, -17.7324, 0.29", "57.7941, 78.9533, -17.8434, 0.29", "58.3203, 79.4505, -17.9165, 0.29", "58.8093, 79.8637, -17.9942, 0.66", "59.1712, 80.149, -18.0557, 0.66", "59.6399, 80.5275, -18.191, 0.66", "60.4159, 81.184, -18.4971, 0.37", "61.296, 81.9324, -18.9461, 0.37", "62.3478, 82.7932, -19.6043, 0.96", "62.9337, 83.2259, -19.9983, 0.96", "64.448, 84.2336, -21.0502, 0.29", "65.4449, 84.849, -21.7732, 0.29", "66.3657, 85.4064, -22.4145, 0.29", "67.6944, 86.1667, -23.2132, 0.29", "68.4177, 86.5479, -23.574, 0.74", "69.0694, 86.8769, -23.851, 0.74", "70.7982, 87.7637, -24.3701, 0.29", "72.8914, 88.9346, -24.833, 0.29", "75.0665, 90.2511, -25.1167, 0.29", "76.0876, 90.9331, -25.1768, 0.29", "76.998, 91.5907, -25.197, 0.29", "78.4764, 92.7237, -25.1243, 0.66", "79.2021, 93.2555, -25.0792, 0.66", "80.1074, 93.8249, -25.0695, 0.37", "81.0535, 94.3502, -25.1691, 1.03", "81.9384, 94.7592, -25.3265, 1.03", "83.3273, 95.2846, -25.6877, 0.66", "86.098, 96.1766, -26.6563, 0.22", "88.4326, 96.8716, -27.5796, 0.52", "90.476, 97.4744, -28.4723, 0.29", "91.8344, 97.8826, -29.128, 0.29", "93.0905, 98.3257, -29.7999, 0.66", "93.6333, 98.5798, -30.1076, 0.66", "94.7357, 99.2917, -30.5605, 0.22", "95.3936, 99.8065, -30.7768, 0.52", "95.9414, 100.284, -30.9074, 0.52", "98.3263, 102.521, -31.2651, 0.22", "100.108, 104.229, -31.4194, 0.22", "102.75, 106.785, -31.5411, 0.22", "104.121, 108.131, -31.5576, 0.52", "104.882, 108.881, -31.5303, 0.22", "105.873, 109.874, -31.3935, 0.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.04213, 23.0832, 9.9345, 0.66", "1.18742, 26.7595, 10.4003, 0.66", "1.08935, 27.9149, 10.5722, 0.74", "1.08705, 29.4486, 10.879, 0.74", "1.12025, 30.9397, 10.9739, 1.03", "1.17121, 32.3598, 10.9975, 1.03", "1.22783, 34.0299, 10.9817, 0.74", "1.46801, 35.9939, 11.0674, 1.11", "1.75539, 37.7421, 11.0524, 1.47", "2.41879, 41.3197, 10.6858, 1.62", "2.60447, 42.4216, 10.4599, 1.62", "2.68233, 43.1078, 10.2609, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-29.2606, 14.2143, -1.29058, 0.29", "-30.516, 14.3346, 0.46451, 0.29", "-31.5353, 14.4572, 1.66452, 0.88", "-32.6273, 14.5651, 2.8496, 1.11", "-36.3853, 14.8992, 6.68917, 1.03", "-37.5646, 14.9707, 7.84195, 0.59", "-38.5088, 14.9994, 8.79141, 0.29", "-39.7502, 15.0016, 10.1688, 0.29", "-40.4448, 15.0135, 10.9593, 0.52", "-40.8779, 15.038, 11.4366, 0.74", "-41.8601, 15.1504, 12.2841, 0.74", "-43.8244, 15.4191, 14.0528, 0.37", "-44.6124, 15.5531, 14.8021, 0.59", "-45.1437, 15.6814, 15.2841, 0.59", "-46.2213, 16.0055, 16.1538, 0.29", "-47.6935, 16.4844, 17.2413, 0.59", "-48.3755, 16.7107, 17.6403, 0.37", "-49.9914, 17.1928, 18.3274, 0.29", "-51.4534, 17.5786, 18.8372, 1.25", "-52.0569, 17.7182, 19.0032, 1.62", "-52.7234, 17.8859, 19.1245, 1.62", "-54.7128, 18.4452, 19.3693, 0.29", "-55.9917, 18.8013, 19.4919, 0.29", "-57.4272, 19.2061, 19.5935, 0.52", "-58.1922, 19.4275, 19.6428, 0.59", "-60.5041, 20.1169, 19.7748, 0.22", "-61.6324, 20.4738, 19.8272, 0.74", "-62.6697, 20.8296, 19.8917, 0.74", "-63.7703, 21.2214, 19.9618, 0.22", "-64.4754, 21.4718, 20.0067, 0.37", "-65.1567, 21.7326, 20.0522, 0.37" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-29.2606, 14.2143, -1.29058, 0.44", "-30.426, 13.7295, -1.39862, 0.44", "-31.2233, 13.3786, -1.46047, 0.44", "-31.9759, 13.0437, -1.50803, 0.96", "-32.6873, 12.7092, -1.56367, 1.25", "-33.6633, 12.2238, -1.63371, 0.74", "-34.3256, 11.8837, -1.66552, 0.59", "-34.964, 11.5448, -1.70489, 0.59", "-35.5731, 11.2212, -1.76818, 0.59", "-36.5269, 10.7359, -1.90814, 0.44", "-37.8085, 10.1208, -2.1415, 0.81", "-39.433, 9.39079, -2.55327, 0.81", "-40.2194, 9.03709, -2.85206, 0.81", "-41.0063, 8.67333, -3.26446, 0.44", "-41.6082, 8.40742, -3.6318, 0.44", "-42.3725, 8.09781, -4.10671, 0.44", "-43.5928, 7.65375, -4.87367, 0.44", "-45.0625, 7.19432, -5.75299, 0.88", "-46.1542, 6.89673, -6.303, 0.88", "-47.2317, 6.64128, -6.74273, 0.52", "-48.9507, 6.31567, -7.27978, 0.52", "-49.5738, 6.22523, -7.41917, 0.52", "-50.6322, 6.10993, -7.49764, 0.88", "-51.4222, 6.03687, -7.46361, 0.88", "-52.259, 5.93869, -7.3742, 1.18", "-53.0416, 5.80235, -7.26637, 1.18", "-54.2036, 5.50021, -7.02663, 0.74", "-55.3835, 5.10018, -6.65157, 0.52", "-56.5239, 4.65018, -6.18779, 0.52", "-57.406, 4.30685, -5.791, 0.88", "-58.6036, 3.88793, -5.23331, 0.88", "-59.9065, 3.47864, -4.62017, 0.88", "-61.4516, 3.04668, -3.90165, 1.03", "-62.2862, 2.80853, -3.54176, 0.96", "-63.3881, 2.48996, -3.08314, 0.74", "-64.9006, 2.07646, -2.5113, 0.52", "-65.5285, 1.90324, -2.31949, 0.81", "-66.2484, 1.68495, -2.17238, 0.81", "-67.3769, 1.26551, -2.01852, 0.52", "-67.7439, 1.09785, -1.96899, 0.88", "-68.1892, 0.848381, -1.90837, 1.18", "-69.2075, 0.260439, -1.76052, 1.18", "-70.4687, -0.405969, -1.56459, 0.59", "-71.0437, -0.679562, -1.47091, 0.74", "-71.7225, -0.962665, -1.35718, 0.74", "-72.6685, -1.33854, -1.14874, 0.44", "-73.3376, -1.60674, -0.973638, 0.44", "-73.9913, -1.88706, -0.781094, 0.74", "-74.728, -2.22142, -0.592799, 0.74", "-75.4159, -2.5359, -0.360972, 0.74", "-76.8902, -3.20701, 0.235439, 0.29", "-77.8098, -3.65355, 0.668255, 0.37", "-78.7624, -4.16195, 1.16026, 0.37", "-79.9319, -4.81481, 1.79807, 0.37", "-81.994, -5.99922, 2.86872, 0.74", "-82.6471, -6.39337, 3.16417, 1.03", "-84.0242, -7.28238, 3.73871, 0.59", "-85.1778, -8.06225, 4.24279, 0.44", "-85.9097, -8.56355, 4.5641, 0.88", "-86.9326, -9.26143, 4.99065, 0.74", "-87.9492, -9.93178, 5.26999, 0.37", "-89.1621, -10.6164, 5.57611, 0.37", "-89.7999, -10.8763, 5.71251, 0.81", "-90.3362, -11.0068, 5.82413, 1.03", "-90.8481, -11.0611, 5.946, 1.03", "-91.5179, -11.0567, 6.12986, 0.66", "-92.5269, -10.981, 6.3784, 0.37", "-93.4628, -10.8878, 6.53798, 0.59", "-94.3048, -10.7889, 6.659, 0.59", "-95.1129, -10.6872, 6.78898, 0.37", "-96.0066, -10.5881, 6.97698, 0.66", "-96.7159, -10.5347, 7.09175, 0.88", "-97.0437, -10.5169, 7.11394, 0.88", "-98.6203, -10.4117, 7.07792, 0.29", "-99.596, -10.3508, 6.96186, 0.29", "-100.891, -10.2792, 6.67223, 0.29", "-102.884, -10.2073, 6.0522, 0.44", "-104.338, -10.2289, 5.5043, 0.44", "-104.926, -10.2881, 5.23405, 0.44", "-105.265, -10.3606, 5.04137, 0.59", "-105.904, -10.5315, 4.64973, 0.59", "-106.354, -10.6617, 4.39497, 0.59", "-107.207, -10.9315, 4.05014, 0.37", "-107.917, -11.1883, 3.75767, 0.37", "-108.554, -11.4258, 3.47372, 0.66", "-109.169, -11.6663, 3.14082, 0.66", "-109.758, -11.9213, 2.78472, 0.66", "-110.84, -12.432, 2.0623, 0.44", "-111.772, -12.8928, 1.40942, 0.66", "-112.311, -13.1834, 0.979111, 0.66", "-113.664, -13.9322, -0.184033, 0.29", "-114.453, -14.3639, -0.86598, 0.29", "-115.162, -14.7486, -1.46514, 0.66", "-115.683, -15.0131, -1.86396, 0.88", "-117.559, -15.8735, -3.16273, 0.44", "-118.218, -16.1415, -3.60644, 0.29", "-119.225, -16.4834, -4.1697, 0.29", "-120.014, -16.7336, -4.56129, 0.66", "-120.755, -16.9881, -4.90817, 0.66", "-121.305, -17.2075, -5.11159, 0.66", "-122.476, -17.7648, -5.57658, 0.37", "-123.673, -18.3752, -6.1968, 0.29", "-124.146, -18.6054, -6.48718, 0.29", "-125.387, -19.1469, -7.37575, 0.29", "-126.561, -19.5904, -8.2998, 1.25", "-129.101, -20.3191, -10.3926, 0.29", "-129.887, -20.483, -11.0779, 0.29", "-130.34, -20.5417, -11.4926, 0.59", "-131.267, -20.5997, -12.3078, 0.44", "-131.795, -20.6009, -12.7254, 0.22", "-132.402, -20.5766, -13.1463, 0.81", "-134.024, -20.4802, -13.8522, 0.44", "-134.908, -20.4509, -14.1306, 0.59", "-135.42, -20.4467, -14.2469, 0.59", "-136.691, -20.4472, -14.3496, 0.29", "-137.79, -20.4414, -14.3125, 0.59", "-138.434, -20.4271, -14.1795, 0.59", "-139.616, -20.3734, -13.7555, 0.29", "-140.531, -20.3201, -13.3435, 0.29", "-142.088, -20.1825, -12.4862, 0.74", "-142.797, -20.0954, -12.0231, 0.74", "-144.002, -19.8942, -11.1694, 0.37", "-144.878, -19.6766, -10.5191, 0.37", "-145.609, -19.4053, -9.95187, 0.44", "-146.419, -18.995, -9.35086, 0.74", "-146.925, -18.6705, -9.02892, 0.74", "-147.505, -18.2333, -8.70673, 0.37", "-148.049, -17.7396, -8.45669, 0.59", "-148.664, -17.0796, -8.18683, 0.37", "-149.143, -16.5263, -8.0061, 0.29", "-149.481, -16.1198, -7.89375, 0.52", "-149.932, -15.5987, -7.7533, 0.74", "-150.633, -14.8663, -7.54214, 0.29", "-151.012, -14.5153, -7.43342, 0.74", "-151.559, -14.0677, -7.2909, 0.74", "-152.327, -13.4942, -7.12622, 0.29", "-153.131, -12.9486, -6.99101, 0.29", "-153.955, -12.463, -6.90256, 0.29", "-154.885, -11.981, -6.84808, 0.29", "-155.819, -11.5347, -6.85203, 0.29", "-156.819, -11.0994, -6.91811, 0.96", "-157.307, -10.9151, -6.97343, 0.96", "-158.772, -10.4226, -7.18413, 0.29", "-159.192, -10.2994, -7.2541, 0.66", "-160.059, -10.0841, -7.39733, 0.66", "-161.025, -9.88118, -7.53048, 0.29", "-161.75, -9.76418, -7.58278, 0.29", "-162.205, -9.70105, -7.60584, 0.66", "-162.703, -9.63723, -7.61822, 0.88", "-163.502, -9.53753, -7.62589, 0.66", "-164.09, -9.43886, -7.63121, 0.15", "-164.925, -9.2475, -7.64893, 0.15", "-165.724, -9.02077, -7.69163, 0.15", "-166.375, -8.80126, -7.74121, 0.81", "-166.923, -8.59131, -7.82217, 1.03", "-168.377, -8.02584, -8.10464, 0.29", "-169.138, -7.73013, -8.26797, 0.81", "-169.721, -7.49404, -8.41687, 0.81", "-170.821, -7.0666, -8.70506, 0.29", "-171.953, -6.68157, -9.06654, 0.29", "-172.782, -6.45822, -9.35493, 0.29", "-173.796, -6.27427, -9.74645, 0.29", "-174.511, -6.21589, -10.1279, 1.18", "-175.152, -6.24635, -10.5762, 1.18", "-176.105, -6.44844, -11.4586, 0.52", "-176.638, -6.63046, -12.0335, 0.88", "-177.123, -6.84935, -12.6548, 0.88", "-178.404, -7.5646, -14.5549, 0.44", "-178.994, -7.90415, -15.4563, 0.44", "-179.476, -8.16016, -16.2309, 0.74", "-179.783, -8.2873, -16.713, 0.74", "-180.588, -8.53327, -17.9215, 0.44", "-181.19, -8.65525, -18.6997, 0.44", "-181.729, -8.70426, -19.2438, 0.88", "-182.28, -8.72552, -19.7256, 0.88", "-182.87, -8.73818, -20.1933, 0.88", "-184.042, -8.80697, -21.1329, 0.52", "-185.047, -8.92636, -21.9316, 0.52", "-185.657, -9.05092, -22.4072, 0.59", "-186.295, -9.24535, -22.9028, 0.44", "-186.971, -9.49312, -23.4015, 0.44", "-187.827, -9.79628, -23.9868, 0.44", "-188.679, -10.0565, -24.5248, 0.88", "-189.236, -10.216, -24.8752, 0.88", "-189.964, -10.4185, -25.3435, 0.37", "-190.726, -10.59, -25.8442, 0.37", "-191.823, -10.7807, -26.5322, 0.59", "-193.21, -10.9375, -27.3316, 0.37", "-193.697, -10.9832, -27.6022, 0.74", "-194.553, -11.0311, -28.0655, 0.74", "-195.971, -11.043, -28.7746, 0.37", "-196.511, -11.041, -29.0122, 0.59", "-197.778, -11.0143, -29.4805, 0.29", "-198.714, -10.971, -29.7439, 0.29", "-199.569, -10.9603, -29.9372, 0.29", "-200.789, -10.9879, -30.1686, 0.59", "-201.195, -11.012, -30.2281, 1.11", "-201.514, -11.036, -30.2738, 1.4", "-202.494, -11.1669, -30.396, 0.81", "-203.517, -11.3491, -30.5295, 0.37", "-204.449, -11.5955, -30.6593, 0.22", "-205.141, -11.83, -30.7539, 0.22", "-206.279, -12.2929, -30.9457, 0.22", "-207.53, -12.8997, -31.1971, 0.22", "-207.778, -13.0406, -31.2558, 0.44", "-208.215, -13.3292, -31.3758, 0.44", "-208.665, -13.6844, -31.5458, 0.22", "-209.418, -14.3527, -31.9397, 0.44", "-209.758, -14.6588, -32.1853, 0.44", "-210.377, -15.1652, -32.6674, 0.22", "-210.997, -15.6064, -33.11, 0.22", "-211.877, -16.1358, -33.6723, 0.59", "-212.135, -16.2654, -33.824, 0.59", "-213.793, -16.8917, -34.8621, 0.29", "-214.382, -17.0946, -35.2303, 0.29", "-215.273, -17.3672, -35.7805, 0.29", "-215.884, -17.5346, -36.1317, 0.81", "-216.432, -17.6666, -36.4105, 0.81", "-218.61, -18.0686, -37.5607, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "216.685, -4.97035, -23.0486, 0.29", "217.609, -5.9365, -23.2191, 0.29", "218.201, -6.45747, -23.4461, 0.29", "219.069, -7.12372, -24.0363, 0.52", "219.295, -7.32079, -24.1433, 0.52", "219.567, -7.57495, -24.2403, 0.37", "220.077, -8.05079, -24.4218, 0.52", "221.223, -8.99732, -24.8489, 0.37", "222.333, -9.89598, -25.2865, 0.88", "224.514, -11.787, -26.171, 0.29", "224.796, -12.0649, -26.2561, 0.74" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "216.685, -4.97035, -23.0486, 0.29", "217.898, -4.35293, -23.925, 0.29", "218.422, -4.15656, -24.2545, 0.44", "219.181, -3.89019, -24.6946, 0.44", "219.986, -3.59477, -25.1221, 0.74", "221.083, -3.16969, -25.672, 0.74", "222.169, -2.725, -26.1934, 0.44", "223.377, -2.25259, -26.7152, 0.66", "224.005, -1.9829, -26.9735, 0.66", "225.038, -1.41411, -27.4401, 0.74", "225.501, -1.08755, -27.6664, 0.29", "226.011, -0.636941, -27.9364, 0.37", "226.624, -0.0432507, -28.2095, 0.81", "226.965, 0.294401, -28.3272, 1.03", "228.703, 1.93539, -28.7617, 0.29", "229.684, 2.8393, -28.9328, 0.29", "231.123, 4.15567, -29.0966, 0.29", "232.377, 5.3006, -29.2259, 0.29", "233.42, 6.26309, -29.3486, 1.03", "234.008, 6.82248, -29.446, 1.03", "234.616, 7.40091, -29.5702, 1.03", "235.107, 7.87067, -29.7736, 0.66", "236.079, 8.83959, -30.4088, 0.52", "236.647, 9.5528, -30.9415, 0.52", "237.158, 10.3429, -31.5206, 0.37", "237.644, 11.1606, -32.0724, 0.37", "238.034, 11.7659, -32.467, 0.29", "238.723, 12.7319, -33.0997, 0.29", "239.671, 13.9657, -33.8512, 0.29", "240.038, 14.4641, -34.1613, 0.29", "240.481, 15.1595, -34.5999, 0.29", "241.018, 16.0882, -35.2161, 0.81", "241.592, 17.0208, -35.8773, 1.03", "242.011, 17.5272, -36.2797, 1.03", "242.961, 18.3779, -36.9957, 0.29", "243.742, 19.0227, -37.4552, 0.74", "244.19, 19.3951, -37.6548, 1.11", "244.728, 19.8292, -37.8196, 1.11", "246.12, 20.8255, -38.0916, 0.29", "247.168, 21.4511, -38.2379, 0.29", "248.353, 21.9676, -38.3868, 0.29", "249.286, 22.2807, -38.5265, 0.29", "250.076, 22.5011, -38.6807, 0.74", "250.987, 22.7274, -38.932, 0.74", "252.198, 22.9811, -39.3612, 0.37", "253.731, 23.2352, -40.0012, 0.96", "254.344, 23.3267, -40.3182, 0.96", "255.422, 23.4805, -40.9527, 0.29", "256.545, 23.6881, -41.7456, 0.29", "256.967, 23.784, -42.0724, 0.59", "257.61, 23.9781, -42.6189, 0.59", "258.771, 24.4603, -43.6596, 0.29", "259.472, 24.7736, -44.3121, 0.29", "260.731, 25.3442, -45.564, 1.18" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-2.36261, -26.1603, 8.02098, 1.03", "-1.55589, -28.4744, 8.65842, 1.03", "-0.938952, -29.9283, 9.05719, 1.03", "-0.522782, -30.787, 9.29165, 0.74", "0.0708939, -31.8776, 9.57895, 0.74", "0.517186, -32.6621, 9.77231, 1.03", "0.894661, -33.3348, 9.92229, 1.25", "1.20906, -33.8812, 10.071, 1.33", "1.36816, -34.1973, 10.1154, 1.62", "1.66049, -34.9042, 10.1757, 1.62", "1.8979, -35.6405, 10.2009, 1.62", "2.15698, -36.7282, 10.2113, 1.47", "2.33314, -37.7943, 10.2367, 0.59", "2.44183, -38.8302, 10.2573, 0.59", "2.49988, -39.7762, 10.2708, 0.88", "2.52996, -40.4682, 10.2771, 1.25", "2.57163, -41.0802, 10.2766, 1.55", "2.66319, -42.0785, 10.2649, 1.55", "2.77529, -43.0995, 10.2428, 0.96", "2.88403, -44.0582, 10.2178, 0.74", "2.9344, -44.5877, 10.2013, 0.74", "3.02774, -45.5674, 10.1643, 0.74", "3.13118, -46.6428, 10.1127, 1.33", "3.2862, -48.0546, 10.0214, 1.18", "3.4244, -49.2476, 9.97229, 1.18", "3.48745, -49.9403, 9.94793, 1.62" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.36261, -26.1603, 8.02098, 1.03", "-3.17547, -27.7166, 10.8591, 1.03", "-3.68253, -28.8109, 12.6415, 1.03", "-4.59489, -30.7657, 15.6018, 0.81", "-5.49639, -32.644, 18.3595, 0.66", "-5.80418, -33.2957, 19.2768, 0.66", "-6.09431, -33.941, 20.136, 0.66", "-6.39583, -34.87, 21.2161, 0.52", "-6.6266, -35.945, 22.2814, 0.52", "-6.80688, -37.3468, 23.3749, 0.81", "-6.86695, -38.3579, 23.9969, 0.66", "-6.91428, -39.2395, 24.4823, 0.96", "-7.00809, -41.2108, 25.5065, 0.52", "-6.98983, -42.4061, 26.1, 1.11", "-6.89742, -43.4789, 26.5395, 1.03", "-6.80551, -44.2957, 26.7913, 0.88", "-6.74385, -44.9773, 26.9725, 0.88", "-6.74142, -46.0965, 27.2142, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "2.68233, 43.1078, 10.2609, 0.74", "3.75024, 46.0213, 13.2468, 0.74", "4.27479, 47.7358, 14.8206, 0.59", "4.55334, 48.8973, 15.8069, 0.59", "4.90497, 50.886, 17.3207, 0.59", "5.09147, 52.3462, 18.3001, 0.59", "5.23466, 53.8497, 19.1719, 0.59", "5.42509, 56.6682, 20.2765, 0.66", "5.48678, 57.9375, 20.6567, 0.66", "5.44694, 59.8277, 21.0989, 1.03", "5.32307, 61.6131, 21.3938, 1.03", "5.10459, 63.772, 21.6278, 0.44", "4.97795, 64.7562, 21.6108, 0.59", "4.72363, 66.2938, 21.2745, 0.59", "4.48745, 67.5727, 20.8298, 1.11", "4.38272, 68.1533, 20.5599, 1.33", "4.25082, 69.0314, 20.1037, 1.33", "4.04937, 70.9009, 19.0708, 0.81", "4.07196, 72.4199, 18.2945, 0.44", "4.38787, 73.6532, 17.6863, 0.44", "5.00315, 74.888, 16.9658, 0.74", "5.75352, 76.0674, 16.2486, 0.66", "6.16556, 76.6405, 15.8974, 0.66", "7.01378, 77.961, 15.1899, 0.52", "7.84622, 79.57, 14.3514, 0.37", "8.63551, 81.664, 13.2592, 0.37", "8.88944, 82.5892, 12.8652, 0.37", "9.22912, 84.1527, 12.3556, 0.37", "9.76999, 86.7048, 11.7642, 0.37", "10.1337, 88.2708, 11.6878, 0.88", "10.4408, 89.2807, 11.8862, 0.88", "11.1998, 91.3275, 12.6996, 0.74", "11.7431, 92.6313, 13.4017, 0.59", "12.4166, 94.1131, 14.4777, 0.59", "13.5944, 96.4957, 16.5969, 0.81", "14.446, 98.2498, 18.3402, 0.59", "14.7967, 99.0881, 19.2128, 0.59", "15.0455, 99.8889, 20.0473, 1.11", "15.2813, 101.235, 21.4048, 0.88", "15.3162, 102.425, 22.4803, 0.88", "15.2455, 103.814, 23.3893, 0.74", "15.1623, 105.249, 24.1088, 0.59", "15.1499, 106.365, 24.5683, 0.44", "15.1933, 107.503, 24.9128, 0.81", "15.2854, 108.621, 25.1212, 1.03", "15.454, 110.579, 25.3645, 0.52", "15.5393, 111.656, 25.4486, 0.52", "15.6174, 112.733, 25.5191, 0.96", "15.6789, 113.969, 25.6081, 0.96", "15.6869, 115.241, 25.7044, 0.66", "15.6141, 117.046, 25.8423, 0.37", "15.5228, 118.18, 25.9252, 0.37", "15.473, 118.945, 25.974, 0.37", "15.4044, 120.282, 26.0569, 0.37", "15.3798, 121.356, 26.1216, 0.66", "15.426, 122.503, 26.1842, 0.66", "15.5852, 123.596, 26.2468, 0.81", "15.8183, 124.77, 26.3513, 0.52", "16.0382, 125.941, 26.4842, 0.37", "16.1529, 126.922, 26.6119, 0.37", "16.1848, 127.732, 26.7221, 0.66", "16.1605, 128.933, 26.8803, 0.66", "16.142, 130.329, 27.0452, 0.37", "16.1776, 131.199, 27.1298, 0.37", "16.4157, 132.884, 27.2538, 0.96", "16.5866, 133.728, 27.3091, 1.33", "16.834, 134.857, 27.3594, 1.33", "17.2063, 136.475, 27.4555, 1.03", "17.5892, 137.95, 27.562, 0.74", "17.9881, 139.34, 27.7021, 0.44", "18.2916, 140.383, 27.8414, 0.44", "18.571, 141.388, 27.9695, 0.44", "19.0271, 143.22, 28.1791, 0.66", "19.2104, 144.089, 28.2948, 0.96", "19.282, 144.553, 28.3563, 0.96", "19.5069, 146.287, 28.499, 0.52", "19.6927, 147.741, 28.5512, 0.52", "19.9233, 149.404, 28.5476, 0.52", "20.1544, 150.77, 28.4723, 0.52", "20.5664, 153.066, 28.4275, 0.74", "20.8063, 154.532, 28.4899, 0.52", "20.9644, 155.594, 28.6025, 0.52", "21.1339, 156.772, 28.7953, 0.52", "21.3709, 158.217, 28.9876, 0.81", "21.7608, 160.272, 29.1522, 0.81", "22.043, 161.599, 29.2336, 0.59", "22.2604, 162.698, 29.2426, 0.37", "22.5218, 164.054, 29.232, 0.37", "22.8987, 166.156, 29.1795, 0.37", "23.0834, 167.21, 29.1293, 0.52", "23.364, 168.419, 29.0362, 0.52", "23.912, 170.423, 28.9227, 0.52", "24.5016, 172.548, 28.917, 0.74", "24.882, 173.91, 28.9957, 0.96", "25.2818, 175.344, 29.1682, 0.37", "25.7261, 176.942, 29.3892, 0.29", "26.0241, 177.945, 29.5389, 0.29", "26.4642, 179.402, 29.753, 0.81", "26.6443, 180.037, 29.7795, 0.81", "26.8069, 180.738, 29.8034, 0.96", "26.878, 181.304, 29.825, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.68233, 43.1078, 10.2609, 0.66", "2.22224, 44.7741, 7.96641, 0.66", "1.90834, 45.7367, 6.53861, 0.66", "1.78574, 46.2077, 5.81999, 0.66", "1.63972, 46.9333, 4.69347, 0.52", "1.42894, 48.0221, 3.00753, 0.81", "1.35262, 48.5483, 2.23171, 0.81", "1.32568, 49.3326, 1.13117, 0.59", "1.38761, 50.1682, -0.122041, 0.59", "1.48937, 50.8557, -1.1721, 0.44", "1.56636, 51.3113, -1.80956, 0.44", "1.74456, 52.1891, -2.90149, 0.96", "1.87331, 52.6895, -3.5409, 1.18", "2.23988, 53.926, -5.18317, 0.88", "2.5592, 54.904, -6.52537, 0.37", "2.82442, 55.5376, -7.43035, 1.03", "3.16471, 56.166, -8.36647, 1.03", "3.83196, 57.2107, -10.0868, 0.52", "4.12115, 57.6262, -10.7676, 0.52", "4.35221, 57.943, -11.2764, 0.81", "4.62806, 58.3413, -11.927, 0.81", "4.8731, 58.7741, -12.6647, 0.74", "5.21772, 59.8341, -14.3515, 1.03", "5.24293, 60.4706, -15.3021, 1.03", "5.02946, 61.3232, -16.63, 0.59", "4.78905, 61.8682, -17.4959, 0.81", "4.42871, 62.4174, -18.4735, 0.81", "4.26824, 62.6084, -18.8353, 0.66", "3.96146, 62.9276, -19.4518, 0.66", "3.17888, 63.6701, -21.0211, 0.52", "2.66815, 64.1426, -22.0621, 0.37", "1.83217, 65.0107, -24.0371, 0.29", "1.65413, 65.2034, -24.4924, 0.29", "1.36511, 65.5067, -25.2316, 0.29", "1.05188, 65.8421, -26.0125, 0.29", "0.513512, 66.4021, -27.1372, 0.81", "0.0372479, 66.9002, -28.0138, 0.81", "-0.708579, 67.8043, -29.2686, 0.59", "-0.870047, 68.0164, -29.5328, 0.59", "-1.30199, 68.6231, -30.1611, 0.29", "-1.68261, 69.234, -31.0289, 0.52", "-1.74085, 69.3347, -31.2171, 0.81", "-1.92143, 69.6344, -31.8987, 0.81", "-2.12934, 69.96, -32.7911, 0.74", "-2.23508, 70.0876, -33.2346, 0.88", "-3.64237, 71.3225, -38.8625, 0.88", "-4.06283, 71.5773, -40.4172, 0.66", "-4.36273, 71.7131, -41.3971, 0.88", "-4.84461, 71.8799, -42.821, 0.96", "-5.24746, 72.0116, -43.8469, 0.52", "-5.58417, 72.1256, -44.5386, 0.74", "-6.49496, 72.4615, -45.5962, 0.44", "-7.03068, 72.7154, -46.1189, 0.29", "-7.54624, 73.0014, -46.5559, 0.29", "-8.45749, 73.5059, -47.2289, 1.18", "-8.85961, 73.7109, -47.5281, 1.92", "-9.6133, 73.9829, -48.1698, 1.47", "-10.7172, 74.232, -49.1828, 0.37", "-11.2058, 74.2727, -49.6459, 0.29", "-12.1517, 74.1999, -50.5025, 0.29", "-13.2492, 73.9345, -51.4953, 0.29", "-14.8554, 73.2494, -53.0596, 0.29", "-15.6539, 72.7634, -53.8676, 0.29", "-16.267, 72.3424, -54.5045, 0.29", "-17.0384, 71.8441, -55.3434, 0.29", "-17.5637, 71.5681, -55.9086, 0.29", "-18.7745, 71.0863, -57.1827, 0.29", "-19.3329, 70.8896, -57.7874, 0.29", "-20.188, 70.6957, -58.8057, 0.29", "-20.6522, 70.7046, -59.3707, 0.52", "-21.1452, 70.8567, -59.9354, 0.52", "-21.9114, 71.2401, -60.7256, 0.52", "-22.7797, 71.7993, -61.5279, 0.66", "-23.229, 72.1167, -61.9293, 0.96", "-23.6527, 72.4213, -62.2794, 1.18", "-24.8881, 73.4011, -63.2607, 0.52", "-25.6952, 74.1503, -63.9551, 0.29", "-26.1051, 74.6204, -64.3649, 0.52", "-26.2607, 74.8558, -64.5504, 0.74", "-26.5599, 75.3746, -64.9644, 0.74", "-27.0535, 76.2547, -65.7003, 0.44", "-27.5622, 77.171, -66.5213, 0.44", "-28.099, 78.104, -67.4165, 0.37", "-28.5489, 78.8057, -68.1216, 0.37", "-29.1315, 79.5658, -68.975, 0.37", "-29.9251, 80.527, -70.2181, 0.37", "-30.4587, 81.1186, -71.0319, 0.88", "-30.6085, 81.276, -71.2395, 0.88", "-31.1565, 81.7937, -71.8969, 0.66", "-32.1599, 82.635, -72.9498, 0.96", "-33.4863, 83.566, -73.9917, 0.81", "-34.4154, 84.0646, -74.482, 1.11", "-35.5103, 84.5, -74.8197, 0.59", "-36.9002, 84.9884, -75.1131, 0.59", "-37.8166, 85.308, -75.2128, 0.74", "-39.0327, 85.7309, -75.2293, 0.52", "-39.7049, 85.9439, -75.2225, 0.52", "-40.6481, 86.2596, -75.2684, 0.52", "-41.6274, 86.6287, -75.3633, 0.52", "-42.4453, 87.0421, -75.533, 0.52", "-43.6549, 87.8192, -75.8756, 1.33", "-44.1784, 88.2414, -76.0472, 2.28", "-44.7947, 88.7792, -76.2645, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.48745, -49.9403, 9.94793, 0.59", "4.36303, -50.553, 10.652, 0.59", "4.8011, -50.9111, 10.9764, 0.59", "6.18698, -52.3188, 11.9927, 0.44", "6.42812, -52.6379, 12.195, 0.44", "6.76885, -53.1717, 12.5014, 0.44", "7.20659, -53.9391, 12.9356, 0.44", "7.43105, -54.458, 13.1964, 0.44", "7.72408, -55.2277, 13.5724, 0.44", "8.09362, -56.2546, 14.0506, 0.44", "8.28417, -56.8283, 14.3835, 0.81", "8.60268, -57.8605, 15.1089, 0.59", "8.6903, -58.1523, 15.3436, 0.59", "8.9339, -58.9651, 16.1717, 0.29", "9.01985, -59.3267, 16.5895, 0.29", "9.1689, -60.314, 17.7258, 0.29", "9.18801, -60.9254, 18.3703, 0.29", "9.11629, -61.6058, 19.015, 1.03", "8.66893, -63.6045, 20.619, 1.11", "8.40307, -64.4351, 21.2368, 1.33", "8.04034, -65.3785, 21.8388, 0.66", "7.21264, -67.0796, 22.3991, 0.15", "6.87204, -67.5751, 22.2194, 0.15", "6.49283, -68.0186, 21.7426, 0.15" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "3.48745, -49.9403, 9.94793, 1.33", "3.02948, -51.4084, 9.62271, 1.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-44.7947, 88.7792, -76.2645, 0.37", "-45.9427, 88.9714, -77.116, 0.37", "-46.4562, 89.0173, -77.5066, 0.37", "-47.1501, 88.9951, -78.0461, 0.37", "-47.8955, 88.8642, -78.7341, 0.88", "-48.2076, 88.7939, -79.0466, 0.88", "-48.74, 88.6884, -79.591, 0.52", "-49.1358, 88.6199, -80.0384, 0.29", "-49.6189, 88.5727, -80.6554, 0.29", "-50.2888, 88.6196, -81.6122, 0.37", "-50.5166, 88.7135, -81.9343, 0.37", "-50.8711, 88.9598, -82.4273, 0.37", "-51.2469, 89.2605, -82.8737, 0.37", "-51.9117, 89.764, -83.6198, 0.66", "-52.3364, 90.0373, -84.062, 0.66", "-52.9971, 90.3447, -84.6569, 0.37", "-53.4462, 90.483, -85.0303, 0.29", "-54.2805, 90.6402, -85.6634, 0.29", "-55.1535, 90.7457, -86.1929, 0.29", "-55.9815, 90.8085, -86.5624, 0.29", "-56.8801, 90.8759, -86.9435, 0.29", "-57.5136, 90.9402, -87.2125, 0.88", "-57.8451, 90.9907, -87.3618, 1.03", "-58.7975, 91.2498, -87.8651, 0.29", "-59.5499, 91.53, -88.2971, 0.29", "-60.5424, 91.8988, -88.9613, 0.96", "-60.9915, 92.0533, -89.3204, 1.25", "-61.1554, 92.1022, -89.4873, 1.47", "-61.878, 92.2605, -90.283, 0.96", "-62.4431, 92.37, -91.1565, 0.52", "-63.0783, 92.5348, -92.3124, 0.44", "-63.5561, 92.6804, -93.2422, 0.44", "-64.3232, 92.9538, -94.8374, 1.11", "-64.6123, 93.0831, -95.4575, 1.11", "-66.1388, 93.9317, -98.8289, 0.29", "-66.4926, 94.1691, -99.6882, 0.29", "-66.7226, 94.3388, -100.307, 0.96", "-66.9501, 94.4939, -100.901, 1.18", "-67.3637, 94.7567, -101.817, 0.88", "-67.8664, 95.0308, -102.767, 0.52", "-68.2303, 95.1423, -103.302, 0.52", "-68.6479, 95.1932, -103.957, 0.52", "-69.4771, 95.2172, -105.404, 0.37", "-69.927, 95.2165, -106.203, 0.37", "-70.4042, 95.2183, -107.052, 0.37", "-71.0695, 95.2441, -108.23, 0.37", "-71.5666, 95.2952, -109.077, 0.37", "-72.1224, 95.3529, -109.993, 0.37", "-72.5025, 95.3113, -110.683, 1.11", "-72.6138, 95.2787, -110.925, 1.47" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-44.7947, 88.7792, -76.2645, 0.29", "-45.4988, 91.4547, -78.0936, 0.29", "-45.7633, 92.3267, -78.5564, 0.29", "-45.9287, 92.8699, -78.7979, 0.29", "-46.356, 94.102, -79.3287, 0.29", "-46.5064, 94.4949, -79.4853, 0.52", "-46.7845, 95.1805, -79.7276, 0.37", "-47.0863, 95.7615, -79.8077, 0.66", "-47.2812, 96.0959, -79.8341, 0.81", "-47.9431, 97.2019, -79.8482, 0.29", "-48.4605, 98.0255, -79.8193, 0.52", "-48.8, 98.5268, -79.7815, 0.74", "-49.615, 99.6067, -79.6387, 0.29", "-50.3527, 100.506, -79.4534, 0.29", "-50.7907, 100.984, -79.2994, 1.25", "-51.0596, 101.268, -79.1702, 1.84", "-51.3972, 101.605, -78.9873, 1.84", "-52.6204, 102.686, -78.3157, 0.29", "-53.0338, 103.003, -78.0753, 0.29", "-54.3591, 103.833, -77.2271, 0.29", "-54.9331, 104.158, -76.7996, 0.52", "-55.2641, 104.338, -76.5219, 0.29", "-56.057, 104.783, -75.7581, 0.29", "-56.4431, 105.018, -75.3306, 0.29", "-57.4554, 105.688, -74.1975, 0.88", "-58.3883, 106.277, -73.1866, 0.29", "-58.7843, 106.513, -72.7966, 0.29", "-59.5382, 106.991, -72.0979, 0.81", "-59.9166, 107.274, -71.7471, 0.81", "-60.4891, 107.765, -71.2062, 0.37", "-61.1942, 108.452, -70.5455, 0.29", "-61.6276, 108.888, -70.1297, 0.29", "-62.0939, 109.386, -69.661, 0.29", "-62.4528, 109.804, -69.2722, 0.29", "-63.2374, 110.842, -68.3103, 0.88", "-63.417, 111.111, -68.0524, 1.25", "-63.7282, 111.589, -67.6058, 1.25", "-64.174, 112.247, -67.0775, 0.29", "-64.5855, 112.795, -66.7238, 0.22", "-65.109, 113.408, -66.4855, 0.88", "-65.8412, 114.232, -66.4431, 0.88", "-66.4201, 114.87, -66.4431, 0.59", "-68.1924, 116.766, -66.5177, 0.59", "-68.4973, 117.09, -66.5447, 0.59", "-69.1872, 117.807, -66.6205, 0.29", "-69.8071, 118.449, -66.6696, 0.37", "-70.7846, 119.434, -66.6656, 0.37", "-71.3717, 120.011, -66.5684, 0.37", "-71.6279, 120.262, -66.4928, 0.44", "-71.8553, 120.473, -66.4388, 0.44", "-72.5984, 121.112, -66.3181, 0.22", "-73.1574, 121.575, -66.2777, 0.37", "-73.7987, 122.069, -66.2913, 0.29", "-74.5359, 122.6, -66.3173, 0.29", "-75.3826, 123.168, -66.346, 0.29", "-76.2463, 123.736, -66.375, 0.29", "-76.8002, 124.126, -66.3945, 0.29", "-77.445, 124.651, -66.4156, 0.29", "-78.0619, 125.26, -66.4421, 0.52", "-78.3033, 125.58, -66.4572, 0.74", "-78.6523, 126.247, -66.436, 0.52", "-79.0749, 127.247, -66.334, 0.29", "-79.3045, 127.815, -66.2542, 0.29", "-79.5014, 128.284, -66.1886, 0.37", "-79.708, 128.695, -66.1288, 0.37", "-80.426, 129.82, -65.9594, 0.59", "-81.0097, 130.558, -65.8487, 0.29", "-82.1454, 131.783, -65.6783, 0.29", "-83.4767, 133.081, -65.532, 0.29", "-84.0896, 133.661, -65.4737, 0.29", "-84.8025, 134.317, -65.4345, 0.29", "-85.3966, 134.847, -65.4488, 0.59", "-85.9572, 135.299, -65.4619, 0.59", "-86.9988, 135.948, -65.4777, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "3.02948, -51.4084, 9.62271, 0.74", "3.40126, -53.3373, 9.48784, 0.74", "3.64745, -54.4075, 9.4516, 0.74", "3.92978, -55.658, 9.47124, 0.96", "4.20987, -56.8202, 9.60688, 0.74", "4.54943, -58.1716, 9.8283, 0.59", "4.80707, -59.1969, 9.99633, 0.59", "5.21808, -60.6528, 10.3294, 0.59", "5.74341, -62.4059, 10.8116, 0.52", "6.46379, -64.6761, 11.5367, 0.52", "6.64812, -65.2941, 11.7637, 1.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.02948, -51.4084, 9.62271, 0.59", "1.80201, -52.6127, 9.62854, 0.59", "0.927767, -53.3652, 9.81857, 0.88", "-0.0923968, -54.2011, 10.1715, 0.88", "-1.28218, -55.1593, 10.6289, 0.59", "-2.91092, -56.3768, 11.247, 0.59", "-3.62341, -56.9237, 11.5545, 1.4", "-4.88835, -57.9075, 12.2339, 1.4", "-5.99465, -58.771, 12.8603, 1.03", "-6.75168, -59.3427, 13.2766, 1.55", "-7.64068, -60.0066, 13.7209, 1.55", "-9.0892, -61.1342, 14.2788, 1.03", "-9.91596, -61.8165, 14.5479, 0.81", "-11.0197, -62.7635, 14.8676, 0.81", "-11.9399, -63.5649, 15.069, 0.37", "-12.6274, -64.151, 15.1486, 0.37", "-12.7966, -64.2903, 15.1543, 0.96", "-13.2764, -64.6704, 15.1365, 1.4", "-15.3428, -66.4383, 15.0214, 0.59", "-17.0025, -67.9101, 14.9165, 0.52", "-18.2947, -69.0387, 14.8306, 0.52", "-19.7999, -70.2508, 14.7292, 0.37", "-21.0505, -71.1644, 14.5992, 0.29", "-22.5261, -72.1356, 14.3317, 1.25", "-22.9145, -72.3687, 14.2264, 1.4", "-24.2297, -73.1355, 13.8784, 0.52", "-25.2196, -73.6789, 13.5979, 0.81", "-26.4916, -74.2672, 13.179, 1.03", "-28.2463, -74.8558, 12.6188, 0.52", "-29.339, -75.151, 12.3005, 0.52", "-30.2077, -75.4259, 12.0926, 0.37", "-31.4685, -76.0125, 11.9585, 0.29", "-31.8632, -76.2579, 11.9811, 0.74", "-32.6259, -76.7783, 12.1563, 1.03", "-33.0985, -77.0835, 12.3108, 0.81", "-34.1488, -77.7107, 12.6423, 0.59", "-35.7469, -78.6378, 13.1188, 0.37", "-36.4895, -79.0658, 13.263, 0.29", "-37.1218, -79.3558, 13.3313, 0.29", "-37.7156, -79.5672, 13.3366, 0.96", "-38.3557, -79.7343, 13.2442, 0.96", "-39.1623, -79.8979, 13.0383, 0.81", "-40.668, -80.2533, 12.6042, 0.44", "-41.5009, -80.5764, 12.3884, 0.29", "-42.5498, -81.184, 12.1625, 0.29", "-43.6718, -82.0375, 11.9843, 1.4", "-44.3159, -82.6181, 11.9184, 1.4", "-45.4486, -83.7587, 11.9149, 0.44", "-46.0635, -84.426, 11.9776, 0.29", "-46.4569, -84.8674, 12.0469, 0.88", "-47.2278, -85.7154, 12.2074, 0.96", "-47.8527, -86.3736, 12.3463, 0.59", "-48.9594, -87.5226, 12.5631, 0.44", "-50.0476, -88.6561, 12.7677, 0.37", "-51.1366, -89.7513, 12.9678, 0.22", "-52.1063, -90.6731, 13.1299, 0.59", "-53.0362, -91.4995, 13.2628, 0.29", "-53.3227, -91.734, 13.2928, 0.74", "-53.905, -92.1476, 13.3183, 0.96", "-54.5571, -92.5225, 13.3263, 0.59", "-55.673, -93.0377, 13.3131, 0.44", "-56.4389, -93.3667, 13.3136, 0.74", "-57.0959, -93.6639, 13.3114, 0.96", "-58.4729, -94.355, 13.3045, 0.37", "-59.4957, -94.9722, 13.296, 0.29", "-60.1495, -95.467, 13.2496, 0.29", "-60.8821, -96.1327, 13.143, 0.52", "-61.3279, -96.5769, 13.0472, 0.52", "-61.7279, -96.9613, 12.987, 0.52", "-62.6862, -97.7402, 12.9171, 0.52", "-63.8579, -98.5134, 12.9092, 0.52", "-64.3651, -98.7593, 12.9299, 0.88", "-65.4195, -99.1319, 13.0079, 0.88", "-67.4134, -99.6468, 13.1109, 0.37", "-68.8229, -99.9572, 13.1059, 0.29", "-69.5382, -100.12, 13.0722, 0.96", "-70.7186, -100.477, 12.9573, 1.03", "-72.0665, -101.035, 12.7086, 0.52", "-73.2296, -101.689, 12.3009, 0.52", "-74.3688, -102.52, 11.7038, 0.52", "-75.439, -103.5, 11.0068, 0.52", "-76.2666, -104.385, 10.3974, 0.52", "-77.3418, -105.702, 9.53211, 0.44", "-78.3988, -107.164, 8.56967, 0.74", "-79.0093, -108.124, 7.95385, 0.81", "-79.6398, -109.194, 7.24277, 0.52", "-79.988, -109.793, 6.8121, 0.88", "-80.2433, -110.229, 6.49693, 0.88", "-81.1229, -111.715, 5.45682, 0.44", "-81.9405, -112.917, 4.60678, 0.37", "-82.3169, -113.439, 4.21887, 0.37", "-83.0174, -114.378, 3.50413, 0.37", "-83.5952, -115.128, 2.95119, 0.59", "-84.1403, -115.794, 2.49795, 0.59", "-85.6955, -117.453, 1.52868, 0.29", "-86.3891, -118.125, 1.17556, 0.29", "-87.0085, -118.723, 0.871315, 0.59", "-87.914, -119.654, 0.398972, 0.59", "-88.5167, -120.298, 0.0801413, 0.37", "-89.4028, -121.251, -0.335686, 0.37", "-89.9891, -121.847, -0.531913, 0.81", "-90.4606, -122.285, -0.683229, 0.81", "-91.1066, -122.834, -0.907968, 0.81", "-91.9921, -123.635, -1.36164, 0.37", "-92.6313, -124.281, -1.77611, 0.37", "-93.4186, -125.107, -2.33311, 0.66", "-93.8553, -125.534, -2.63099, 0.96", "-94.7275, -126.29, -3.1863, 0.96", "-96.1339, -127.322, -4.07613, 0.29", "-96.7962, -127.731, -4.56803, 0.29", "-97.665, -128.269, -5.30434, 0.44", "-98.0295, -128.519, -5.62369, 0.81", "-98.5835, -128.956, -6.16639, 0.81", "-99.1075, -129.406, -6.73033, 0.81", "-100.515, -130.575, -8.22219, 0.52", "-101.199, -131.16, -8.97767, 0.59", "-102.011, -131.93, -9.93168, 0.59", "-103.344, -133.25, -11.4229, 0.29", "-104.206, -134.136, -12.3382, 0.96", "-104.729, -134.665, -12.8387, 1.25", "-105.068, -134.976, -13.1128, 1.25", "-106.366, -135.959, -13.9773, 0.37", "-107.293, -136.57, -14.4844, 0.37", "-108.104, -137.056, -14.7979, 1.03", "-108.874, -137.489, -15.0378, 1.25", "-109.68, -137.903, -15.2548, 1.25", "-111.252, -138.587, -15.5102, 0.29", "-112.084, -138.873, -15.5438, 0.44", "-112.948, -139.128, -15.527, 0.59", "-114.054, -139.417, -15.5116, 0.59", "-115.399, -139.737, -15.523, 0.29", "-117.085, -140.109, -15.6302, 0.29", "-118.714, -140.484, -15.8567, 0.29", "-119.763, -140.748, -16.0525, 0.29", "-121.446, -141.241, -16.4612, 0.81", "-121.993, -141.421, -16.6172, 0.81", "-123.695, -142.057, -17.1611, 0.52", "-125.315, -142.766, -17.6508, 0.52", "-126.704, -143.469, -17.9696, 0.44", "-127.668, -144.022, -18.0576, 0.81", "-128.856, -144.776, -17.934, 0.81", "-129.632, -145.332, -17.6524, 0.81", "-131.036, -146.428, -16.7962, 0.37", "-131.62, -146.92, -16.3084, 0.37", "-132.399, -147.606, -15.562, 0.81", "-133.269, -148.369, -14.6903, 0.81", "-134.962, -149.773, -12.9939, 0.44", "-135.761, -150.317, -12.2358, 0.37", "-136.631, -150.833, -11.4823, 0.29", "-137.307, -151.215, -10.95, 0.29", "-137.982, -151.619, -10.4683, 0.74", "-139.123, -152.419, -9.64254, 0.29", "-140.643, -153.617, -8.58802, 0.29", "-141.468, -154.316, -8.01621, 0.66", "-142.275, -155.019, -7.50529, 0.81", "-143.087, -155.81, -7.00631, 0.81", "-144.629, -157.446, -6.14445, 0.44", "-145.312, -158.22, -5.83306, 0.29", "-146.322, -159.405, -5.44036, 0.29", "-147.063, -160.2, -5.17248, 0.29", "-147.885, -161.028, -4.89546, 0.29", "-148.511, -161.599, -4.74042, 0.96", "-149.21, -162.192, -4.72227, 1.25" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-72.6138, 95.2787, -110.925, 0.37", "-73.7468, 94.5981, -110.942, 0.37", "-74.7026, 94.1255, -110.901, 0.37", "-76.2683, 93.5525, -110.782, 0.37", "-77.1146, 93.3342, -110.705, 0.22", "-77.9033, 93.1952, -110.63, 0.22", "-79.1517, 93.0365, -110.515, 0.37", "-79.8274, 93.0532, -110.443, 0.37", "-80.7695, 93.168, -110.343, 0.22", "-81.5942, 93.3264, -110.312, 0.22", "-82.2912, 93.4549, -110.347, 0.81", "-82.6736, 93.5031, -110.399, 0.88", "-83.2389, 93.5225, -110.523, 0.66", "-84.3066, 93.5154, -110.781, 0.29", "-85.7209, 93.4933, -111.132, 0.29", "-86.6896, 93.4979, -111.376, 0.29", "-88.004, 93.5292, -111.717, 0.29", "-89.688, 93.5849, -112.152, 0.29", "-90.4797, 93.614, -112.357, 0.66", "-91.1018, 93.6349, -112.515, 0.88", "-91.4091, 93.6386, -112.595, 0.88", "-92.2777, 93.6522, -112.84, 0.29", "-93.0714, 93.642, -113.082, 0.29", "-94.0363, 93.6018, -113.391, 1.33", "-94.3941, 93.5718, -113.513, 1.77", "-95.8836, 93.4591, -114.046, 0.29", "-96.9125, 93.391, -114.426, 0.29", "-98.2191, 93.317, -114.906, 0.29", "-98.8562, 93.3009, -115.132, 0.29", "-99.5171, 93.3216, -115.309, 0.74", "-100.593, 93.3969, -115.478, 0.29", "-101.771, 93.5306, -115.466, 0.29", "-102.817, 93.6811, -115.332, 0.81", "-103.374, 93.7658, -115.215, 0.81", "-105.117, 94.0414, -114.7, 0.22", "-106.261, 94.2108, -114.306, 0.22", "-107.495, 94.3485, -113.864, 0.88", "-108.184, 94.411, -113.643, 1.18", "-109.708, 94.4865, -113.281, 0.29", "-110.646, 94.4634, -113.155, 0.29", "-112.057, 94.317, -113.1, 0.29", "-113.253, 94.1651, -113.128, 0.29", "-114.392, 94.0251, -113.214, 0.81", "-115.866, 93.9104, -113.354, 0.22", "-117.068, 93.8968, -113.496, 0.22", "-117.825, 93.9418, -113.61, 0.29", "-118.926, 94.154, -113.789, 0.29", "-119.847, 94.4463, -113.875, 0.29", "-120.867, 94.8664, -113.878, 0.52", "-121.541, 95.2004, -113.833, 0.59", "-122.444, 95.7164, -113.717, 0.29", "-122.924, 96.0144, -113.638, 0.29", "-124.273, 96.8348, -113.328, 0.29", "-125.061, 97.2629, -113.125, 0.29", "-125.968, 97.6774, -112.868, 0.59", "-126.818, 98.0275, -112.663, 0.74", "-127.993, 98.5132, -112.502, 0.44", "-128.913, 98.9029, -112.486, 1.55", "-129.51, 99.143, -112.578, 1.99", "-131.129, 99.648, -112.98, 0.29", "-132.22, 99.8506, -113.333, 0.29", "-133.72, 99.98, -113.936, 0.29", "-134.271, 99.9842, -114.189, 0.29", "-135.404, 99.9264, -114.772, 0.44", "-136.117, 99.8542, -115.154, 0.44", "-136.955, 99.715, -115.6, 0.29", "-138.087, 99.4844, -116.097, 0.29", "-138.842, 99.3339, -116.391, 0.29", "-139.603, 99.2139, -116.703, 0.37", "-140.28, 99.1529, -116.982, 0.59", "-141.062, 99.119, -117.302, 0.59", "-142.004, 99.1018, -117.66, 0.44", "-142.812, 99.1545, -117.873, 0.29", "-143.131, 99.2166, -117.935, 0.88", "-143.833, 99.4029, -118.037, 0.88", "-144.262, 99.5143, -118.085, 0.88", "-145.228, 99.7126, -118.176, 0.29", "-146.389, 99.8983, -118.282, 0.29", "-147.285, 100.063, -118.365, 0.29", "-148.089, 100.28, -118.452, 0.29", "-148.794, 100.534, -118.538, 0.52", "-149.687, 100.925, -118.662, 0.52", "-150.88, 101.5, -118.862, 0.29", "-151.758, 101.942, -119.046, 0.29", "-152.635, 102.426, -119.235, 0.74", "-153.167, 102.762, -119.383, 1.03", "-153.817, 103.244, -119.619, 0.37", "-154.444, 103.731, -119.904, 0.37", "-154.977, 104.101, -120.177, 0.96", "-155.391, 104.337, -120.391, 1.18", "-156.472, 104.926, -120.941, 0.29", "-157.111, 105.312, -121.256, 0.29", "-157.785, 105.735, -121.586, 0.29", "-158.463, 106.137, -121.888, 0.37", "-159.272, 106.571, -122.209, 0.37", "-160.256, 107.089, -122.552, 0.37", "-161.059, 107.474, -122.796, 0.37", "-161.91, 107.873, -123.059, 0.37", "-163.028, 108.469, -123.418, 0.37", "-163.903, 108.978, -123.714, 0.37", "-164.672, 109.441, -123.976, 0.37", "-165.625, 109.98, -124.252, 0.37", "-166.604, 110.499, -124.477, 0.37", "-167.788, 111.065, -124.673, 1.4", "-168.017, 111.165, -124.702, 2.06", "-168.585, 111.377, -124.755, 2.28", "-169.983, 111.8, -124.861, 0.29", "-170.945, 112.021, -124.893, 0.29", "-172.458, 112.215, -124.876, 0.29", "-173.471, 112.275, -124.829, 0.29", "-174.62, 112.289, -124.752, 0.29", "-175.798, 112.248, -124.66, 0.29", "-176.942, 112.169, -124.568, 0.29", "-177.744, 112.112, -124.487, 0.29", "-178.541, 112.06, -124.393, 0.44", "-179.692, 111.999, -124.299, 0.44", "-180.617, 112.029, -124.272, 0.29", "-181.241, 112.154, -124.296, 0.29", "-181.836, 112.371, -124.36, 0.74", "-182.416, 112.622, -124.443, 0.74", "-183.684, 113.256, -124.66, 0.29", "-184.768, 113.907, -124.857, 0.29", "-185.912, 114.671, -125.077, 0.29", "-186.772, 115.264, -125.244, 1.18" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-72.6138, 95.2787, -110.925, 0.44", "-74.1459, 95.6253, -111.728, 0.44", "-75.0598, 95.81, -112.141, 0.44", "-76.2941, 96.1092, -112.646, 0.44", "-77.1341, 96.3678, -112.965, 0.44", "-78.1002, 96.7527, -113.304, 0.44", "-78.9137, 97.1299, -113.56, 0.44", "-79.5353, 97.4784, -113.685, 0.44", "-80.1648, 97.9521, -113.79, 0.66", "-80.7011, 98.4643, -113.876, 0.66", "-81.4053, 99.2483, -114.01, 0.29", "-82.1365, 100.186, -114.174, 0.29", "-82.8275, 101.188, -114.348, 1.11", "-83.0258, 101.499, -114.402, 1.11", "-83.6108, 102.36, -114.564, 0.29", "-83.9609, 102.901, -114.662, 0.29", "-84.1782, 103.297, -114.723, 1.03", "-84.3371, 103.655, -114.765, 1.03", "-84.5712, 104.196, -114.82, 1.03", "-85.2355, 105.775, -114.948, 0.29", "-85.618, 106.706, -114.993, 0.29", "-85.977, 107.541, -115.025, 0.29", "-86.316, 108.204, -115.048, 0.29", "-86.9662, 109.337, -115.082, 1.33", "-87.2005, 109.716, -115.097, 1.69", "-88.1493, 111.067, -115.181, 0.37", "-88.7233, 111.751, -115.251, 0.37", "-89.7637, 112.821, -115.402, 0.37", "-90.6236, 113.645, -115.54, 0.37", "-91.4874, 114.468, -115.689, 0.37", "-92.1465, 115.143, -115.822, 0.37", "-92.4509, 115.497, -115.901, 0.81", "-92.8603, 116.114, -116.071, 0.81", "-93.2181, 116.905, -116.352, 0.52", "-93.4893, 117.592, -116.629, 0.52", "-93.895, 118.528, -117.047, 1.03", "-94.0925, 118.977, -117.263, 1.03", "-94.4814, 119.759, -117.666, 0.88", "-95.0962, 120.814, -118.249, 0.37", "-95.8544, 121.919, -118.888, 0.37", "-96.718, 123.063, -119.472, 0.37", "-97.1698, 123.649, -119.724, 0.37", "-97.9475, 124.648, -120.074, 0.37", "-98.4846, 125.334, -120.257, 1.18", "-98.8945, 125.858, -120.364, 1.69", "-100.376, 127.941, -120.696, 0.44", "-101.138, 129.204, -120.854, 0.44", "-101.801, 130.447, -120.993, 0.44", "-102.046, 130.973, -121.052, 0.96", "-102.283, 131.522, -121.12, 1.33", "-102.86, 132.863, -121.305, 0.37", "-103.355, 134.111, -121.499, 0.37", "-103.656, 134.942, -121.623, 0.37", "-103.972, 135.963, -121.765, 0.37", "-104.362, 137.227, -121.953, 0.37", "-104.735, 138.335, -122.163, 0.37", "-105.051, 139.142, -122.318, 0.59", "-105.387, 139.932, -122.452, 0.59", "-105.805, 140.986, -122.686, 0.29", "-105.977, 141.467, -122.811, 0.29", "-106.611, 143.1, -123.315, 1.33", "-106.882, 143.715, -123.519, 2.14", "-107.129, 144.201, -123.698, 2.28", "-108.004, 145.666, -124.332, 1.11", "-108.677, 146.606, -124.831, 0.29", "-109.499, 147.696, -125.44, 0.29", "-110.056, 148.412, -125.853, 0.29", "-110.559, 149.097, -126.255, 0.44", "-111.043, 149.835, -126.684, 0.44", "-111.609, 150.805, -127.195, 0.44", "-112.084, 151.811, -127.7, 0.66", "-112.291, 152.39, -127.953, 0.66", "-112.55, 153.28, -128.279, 0.29", "-112.812, 154.347, -128.515, 0.29", "-113.01, 155.228, -128.602, 0.29", "-113.186, 156.076, -128.644, 0.29", "-113.489, 157.289, -128.689, 0.44", "-113.736, 158.118, -128.695, 0.44", "-114.207, 159.432, -128.615, 1.03", "-114.461, 160.102, -128.48, 1.03" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.64812, -65.2941, 11.7637, 0.59", "6.77474, -67.0075, 11.4356, 0.59", "6.74881, -68.177, 11.2091, 0.59", "6.65861, -69.6144, 10.9471, 0.59", "6.59226, -70.6719, 10.7645, 0.59", "6.48226, -72.2668, 10.5497, 0.88", "6.33551, -73.7537, 10.3958, 0.88", "6.1479, -74.8488, 10.3306, 0.66", "5.80706, -76.0984, 10.3565, 0.81", "5.34835, -77.401, 10.4912, 0.74", "4.96018, -78.4385, 10.6799, 0.96", "4.61496, -79.469, 10.9431, 0.74", "4.27928, -80.5938, 11.2733, 0.59", "3.94691, -81.8386, 11.6432, 0.52", "3.84821, -82.2597, 11.7646, 1.03", "3.65857, -83.4203, 12.0201, 0.52", "3.59328, -84.7617, 12.1631, 0.81", "3.64495, -85.584, 12.173, 1.03", "3.72982, -86.3727, 12.1165, 1.03", "3.83313, -87.413, 11.9859, 0.88", "3.9053, -88.5449, 11.8229, 0.74", "3.92488, -89.2802, 11.7105, 0.74", "3.92587, -90.1763, 11.5735, 0.44", "3.94022, -91.6503, 11.314, 0.44", "3.94594, -92.5568, 11.1497, 0.66", "3.95466, -93.229, 11.0389, 0.66", "3.96664, -94.1206, 10.8929, 0.52", "3.96164, -95.2159, 10.7014, 0.81", "3.94469, -96.1899, 10.4915, 1.03", "3.92907, -96.8488, 10.3205, 1.03", "3.87462, -97.7573, 10.0715, 0.66", "3.73986, -98.8209, 9.75343, 0.52", "3.58417, -99.6817, 9.4839, 0.52", "3.41689, -100.408, 9.27554, 0.52", "3.20433, -101.29, 9.05754, 0.74", "3.03697, -101.968, 8.90745, 0.74", "2.61552, -103.624, 8.61323, 0.59", "2.39136, -104.63, 8.5101, 0.59", "2.2352, -105.595, 8.44482, 0.96", "2.17892, -106.116, 8.43357, 0.96", "2.09749, -107.157, 8.4771, 0.59", "1.98705, -108.481, 8.56855, 0.44", "1.88059, -109.678, 8.70014, 0.44", "1.78207, -110.702, 8.80986, 0.44", "1.68878, -111.789, 8.89596, 0.44", "1.62643, -112.898, 8.94704, 0.44", "1.61872, -114.43, 8.95381, 0.59", "1.64521, -115.033, 8.95363, 0.81", "1.72581, -116.007, 8.93695, 0.44", "1.8496, -117.309, 8.93949, 0.44", "1.94482, -118.103, 8.95838, 0.81", "2.06958, -118.892, 9.00636, 0.81", "2.28196, -120.042, 9.0681, 0.81", "2.44553, -120.882, 9.06604, 0.52", "2.64824, -121.918, 9.00421, 0.52", "2.76679, -122.736, 8.90279, 0.81", "2.80053, -123.71, 8.74097, 1.03", "2.68782, -125.105, 8.47594, 0.52", "2.52699, -126.107, 8.26394, 0.52", "2.31752, -127.045, 8.08958, 0.88", "2.02108, -128.193, 7.90802, 0.88", "1.62117, -129.545, 7.75035, 0.44", "1.16969, -130.926, 7.64665, 0.74", "0.974238, -131.574, 7.67092, 0.74", "0.627493, -132.76, 7.74347, 0.37", "0.397324, -133.635, 7.81265, 0.66", "0.234598, -134.478, 7.88949, 0.96", "0.121466, -135.483, 7.95964, 0.96", "-0.0147581, -137.71, 8.04597, 0.37", "-0.0298438, -139.083, 8.12859, 0.37", "-0.00481037, -139.682, 8.18908, 0.88", "0.0253918, -140.207, 8.24614, 0.88", "0.0563299, -141.165, 8.31441, 0.88", "0.0390389, -142.153, 8.33527, 0.52", "-0.0492246, -143.534, 8.41494, 0.52", "-0.139486, -144.968, 8.61519, 0.44", "-0.213687, -146.151, 8.82181, 0.52", "-0.33105, -147.817, 9.15057, 0.74", "-0.439342, -149.116, 9.42995, 0.74", "-0.695041, -151.256, 9.88874, 0.59", "-0.855942, -152.301, 10.0913, 0.59", "-1.04816, -153.363, 10.3226, 0.44", "-1.22615, -154.308, 10.537, 0.44", "-1.32301, -154.817, 10.6431, 0.81", "-1.51295, -155.782, 10.7498, 0.81", "-1.68071, -156.562, 10.7364, 0.74", "-1.86813, -157.356, 10.7445, 0.59", "-2.15456, -158.527, 10.7989, 0.29", "-2.29802, -159.108, 10.8536, 0.52", "-2.63033, -160.565, 11.007, 0.52", "-2.80926, -161.472, 11.1184, 0.52", "-3.07391, -162.918, 11.3437, 0.74", "-3.20432, -163.664, 11.5067, 1.11", "-3.32776, -164.24, 11.7044, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.64812, -65.2941, 11.7637, 0.52", "7.97439, -64.3693, 12.5587, 0.52", "8.6951, -63.8668, 12.9907, 0.52", "9.29765, -63.4467, 13.3519, 0.52", "9.81948, -63.0828, 13.6647, 0.52" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-114.461, 160.102, -128.48, 0.22", "-114.807, 161.962, -129.497, 0.22", "-114.949, 162.514, -129.919, 0.22", "-115.089, 162.872, -130.281, 0.22", "-115.251, 163.28, -130.678, 0.22", "-115.579, 164.306, -131.553, 0.22", "-115.783, 165.23, -132.245, 1.25", "-115.861, 165.601, -132.535, 1.55", "-116.123, 167.0, -133.519, 0.37", "-116.215, 167.55, -133.84, 0.37", "-116.369, 168.569, -134.322, 0.37", "-116.483, 169.559, -134.655, 0.37", "-116.532, 170.37, -134.879, 0.66", "-116.546, 170.979, -135.033, 1.33", "-116.553, 172.246, -135.302, 0.52", "-116.582, 173.352, -135.561, 0.52", "-116.626, 174.149, -135.76, 0.37", "-116.657, 174.97, -135.937, 0.37", "-116.647, 175.662, -136.06, 0.37", "-116.585, 176.992, -136.251, 2.65", "-116.568, 177.239, -136.278, 3.32", "-116.552, 177.589, -136.344, 3.32", "-116.604, 179.608, -136.865, 0.44", "-116.694, 180.802, -137.227, 0.44", "-116.74, 181.371, -137.42, 0.59", "-116.776, 181.867, -137.607, 0.59", "-116.955, 184.314, -138.615, 0.29", "-117.035, 185.304, -139.074, 0.29", "-117.125, 186.19, -139.542, 0.29", "-117.243, 187.136, -140.047, 0.29", "-117.277, 187.517, -140.229, 0.29", "-117.332, 188.617, -140.655, 1.11", "-117.349, 189.316, -140.841, 1.11", "-117.368, 189.863, -140.991, 0.88", "-117.523, 191.058, -141.328, 0.52", "-117.828, 192.278, -141.653, 0.29", "-118.066, 192.991, -141.835, 0.29", "-118.23, 193.41, -141.921, 0.66", "-118.636, 194.349, -142.088, 0.66", "-118.993, 195.075, -142.207, 0.29", "-119.335, 195.61, -142.294, 0.29", "-120.096, 196.426, -142.478, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-114.461, 160.102, -128.48, 0.37", "-114.587, 160.841, -127.822, 0.37", "-114.762, 161.692, -127.053, 0.37", "-114.906, 162.27, -126.527, 0.37", "-115.238, 163.408, -125.488, 0.37", "-115.501, 164.236, -124.752, 0.52", "-115.78, 165.079, -124.045, 1.18", "-115.982, 165.633, -123.589, 1.18", "-116.121, 166.027, -123.317, 1.18", "-116.195, 166.284, -123.161, 1.03", "-116.303, 166.857, -122.873, 0.44", "-116.384, 167.623, -122.455, 0.88", "-116.451, 168.791, -121.808, 0.37", "-116.506, 169.862, -121.201, 0.29", "-116.556, 170.577, -120.776, 0.29", "-116.613, 171.109, -120.433, 0.66", "-116.82, 172.459, -119.508, 0.37", "-116.978, 173.233, -118.962, 0.37", "-117.185, 174.06, -118.399, 0.29", "-117.433, 174.848, -117.901, 0.29", "-117.722, 175.547, -117.525, 0.29", "-118.14, 176.452, -117.133, 0.88", "-118.343, 176.922, -116.976, 0.88", "-118.729, 177.959, -116.679, 0.37", "-119.085, 179.035, -116.441, 0.37", "-119.49, 180.511, -116.192, 0.37", "-119.779, 181.713, -116.002, 0.37", "-120.041, 182.851, -115.811, 0.37", "-120.227, 183.691, -115.66, 0.37", "-120.533, 185.066, -115.401, 0.37", "-120.839, 186.645, -115.075, 0.37", "-121.066, 187.95, -114.788, 1.47", "-121.179, 188.461, -114.679, 1.69", "-121.317, 188.987, -114.548, 1.69", "-121.685, 190.305, -114.174, 0.44", "-121.983, 191.338, -113.853, 0.44", "-122.298, 192.299, -113.559, 0.44", "-122.772, 193.642, -113.171, 0.44", "-123.243, 194.917, -112.803, 0.37", "-123.597, 195.866, -112.514, 0.37", "-123.781, 196.335, -112.362, 0.37", "-124.119, 197.07, -112.115, 0.96", "-124.488, 197.783, -111.865, 1.25", "-124.621, 198.002, -111.793, 1.25" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-3.32776, -164.24, 11.7044, 0.44", "-4.36585, -164.608, 12.0266, 0.44", "-5.1825, -164.759, 12.2407, 0.29", "-6.28552, -164.888, 12.5119, 0.22", "-7.06204, -164.939, 12.6969, 0.59", "-7.5154, -164.951, 12.8033, 0.59", "-8.81647, -164.988, 13.1086, 0.29", "-10.0963, -164.887, 13.399, 0.29", "-10.3766, -164.843, 13.4549, 0.52", "-10.8461, -164.748, 13.5213, 0.52", "-11.2283, -164.656, 13.5732, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-3.32776, -164.24, 11.7044, 0.37", "-3.39639, -167.035, 11.2899, 0.37", "-3.48893, -168.607, 11.074, 0.81", "-3.58688, -169.511, 10.964, 0.88", "-3.72638, -170.456, 10.864, 0.66", "-4.0496, -172.202, 10.702, 0.37", "-4.18277, -172.858, 10.6483, 0.37", "-4.44301, -173.989, 10.6209, 0.37", "-4.68539, -175.367, 10.5926, 0.37", "-4.84673, -176.621, 10.563, 0.74", "-4.96805, -177.837, 10.5024, 1.11", "-5.07064, -178.896, 10.4305, 0.81", "-5.20615, -180.902, 10.2743, 0.37", "-5.32557, -183.224, 10.0577, 0.37", "-5.46852, -184.705, 9.889, 0.37", "-5.7014, -186.22, 9.6881, 0.37", "-5.88272, -187.096, 9.55369, 0.96", "-6.0836, -187.788, 9.43474, 0.96", "-6.61517, -189.173, 9.18428, 0.44", "-7.35825, -190.929, 8.86719, 0.37", "-7.68102, -191.912, 8.67886, 0.37", "-7.83565, -192.674, 8.54035, 1.11", "-7.97772, -193.808, 8.33097, 0.88", "-8.11748, -195.41, 8.04423, 0.66", "-8.22699, -197.483, 7.69759, 0.52", "-8.29466, -199.313, 7.40894, 0.52", "-8.39913, -200.948, 7.16648, 0.52", "-8.60239, -202.911, 6.87713, 0.81", "-8.75197, -203.877, 6.73247, 0.96", "-8.9915, -205.002, 6.5695, 0.96", "-9.31128, -206.203, 6.40383, 0.81", "-9.73548, -207.664, 6.17819, 0.44", "-10.1741, -209.287, 5.86514, 0.29", "-10.3808, -210.249, 5.63943, 0.29", "-10.5944, -211.249, 5.37775, 0.29", "-10.9119, -212.504, 5.01837, 0.29", "-11.3232, -213.953, 4.5266, 1.03", "-11.4453, -214.346, 4.37148, 1.47", "-12.0487, -216.389, 3.50599, 0.44", "-12.4529, -217.837, 2.85877, 0.37", "-12.8754, -219.308, 2.19341, 0.37", "-13.3727, -221.023, 1.4081, 0.29", "-13.8442, -222.677, 0.643928, 0.29", "-14.1028, -223.659, 0.181339, 0.29", "-14.4906, -225.285, -0.606432, 0.29", "-14.8652, -227.309, -1.59468, 0.66", "-15.0417, -228.538, -2.16762, 1.18", "-15.1913, -229.623, -2.61353, 1.18", "-15.2959, -230.369, -2.90102, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "9.81948, -63.0828, 13.6647, 0.44", "10.0167, -63.3241, 14.7234, 0.44", "10.3413, -63.8437, 16.8692, 1.11", "10.9288, -64.7444, 20.2649, 0.44", "12.1861, -66.4496, 26.4006, 0.88", "12.6533, -67.0316, 28.3828, 1.25", "12.9754, -67.4327, 29.7491, 0.88", "13.2961, -67.8253, 31.1404, 0.74", "14.4787, -69.1441, 35.7297, 0.37", "14.8219, -69.5058, 36.7958, 0.66", "15.1425, -69.8862, 37.5928, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "9.81948, -63.0828, 13.6647, 0.44", "10.3315, -63.2263, 14.4979, 0.44", "14.7662, -64.469, 21.7143, 0.44", "15.3457, -64.6314, 22.6573, 0.37", "15.709, -64.7332, 23.2485, 0.37", "15.979, -64.8088, 23.6878, 0.74", "16.1972, -64.87, 24.043, 0.74" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-120.096, 196.426, -142.478, 0.59", "-120.611, 197.444, -142.643, 0.59", "-121.355, 198.405, -142.879, 0.37", "-122.104, 199.165, -143.116, 0.37", "-122.921, 199.944, -143.367, 0.37", "-124.064, 201.025, -143.704, 0.37", "-124.978, 201.894, -143.963, 0.37", "-126.065, 202.865, -144.216, 0.37", "-126.917, 203.582, -144.413, 0.37", "-127.863, 204.369, -144.619, 0.37", "-128.468, 204.933, -144.773, 0.37", "-128.829, 205.415, -144.886, 1.03", "-129.013, 205.752, -144.949, 1.33", "-129.389, 206.579, -145.078, 1.11", "-129.898, 207.741, -145.255, 0.37", "-130.453, 209.018, -145.451, 0.37", "-131.144, 210.66, -145.707, 0.29", "-131.67, 211.952, -145.909, 0.29", "-132.1, 213.043, -146.078, 0.52", "-132.513, 214.135, -146.241, 1.55", "-132.683, 214.606, -146.299, 1.92" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-120.096, 196.426, -142.478, 0.52", "-120.016, 197.205, -143.493, 0.52", "-119.843, 197.91, -144.537, 0.52", "-119.626, 198.556, -145.473, 0.52", "-119.405, 199.142, -146.27, 1.25", "-118.716, 200.936, -148.555, 2.28", "-118.569, 201.35, -149.064, 2.28", "-118.048, 202.786, -150.923, 0.29", "-117.817, 203.397, -151.752, 0.44", "-117.606, 203.927, -152.445, 0.44", "-117.395, 204.48, -153.088, 0.44", "-117.204, 205.005, -153.558, 0.44", "-116.905, 206.108, -154.544, 0.29", "-116.836, 206.708, -155.045, 1.03", "-116.816, 207.267, -155.493, 1.55", "-116.783, 208.14, -156.174, 0.88", "-116.692, 209.154, -156.925, 0.52", "-116.571, 210.056, -157.537, 0.52", "-116.499, 210.809, -157.97, 0.52", "-116.41, 211.955, -158.573, 0.52", "-116.327, 212.727, -158.93, 0.52", "-116.233, 213.484, -159.247, 0.52", "-116.109, 214.217, -159.534, 0.52", "-115.798, 215.519, -159.998, 0.52", "-115.428, 216.844, -160.466, 0.52", "-115.099, 218.099, -160.881, 2.21" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-124.621, 198.002, -111.793, 0.29", "-126.043, 199.482, -111.724, 0.29", "-126.735, 200.201, -111.691, 0.29", "-127.242, 200.728, -111.666, 0.29", "-127.622, 201.124, -111.648, 0.74", "-127.935, 201.448, -111.633, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-124.621, 198.002, -111.793, 0.29", "-125.011, 198.809, -111.494, 0.29", "-125.214, 199.252, -111.341, 0.29", "-125.603, 200.436, -110.941, 0.29", "-125.707, 200.88, -110.795, 0.74", "-125.824, 201.349, -110.656, 0.74", "-126.117, 202.413, -110.374, 0.37", "-126.315, 203.166, -110.204, 0.29", "-126.573, 204.365, -109.961, 0.37", "-126.716, 205.201, -109.814, 0.37", "-126.998, 206.686, -109.536, 0.29", "-127.22, 207.667, -109.337, 0.29", "-127.547, 208.773, -109.099, 0.29", "-127.995, 209.841, -108.87, 0.29", "-128.38, 210.565, -108.712, 0.29", "-128.924, 211.496, -108.466, 0.29", "-129.341, 212.196, -108.229, 0.29", "-129.781, 212.921, -107.944, 0.29", "-130.126, 213.466, -107.684, 0.29", "-130.566, 214.204, -107.305, 1.03", "-130.866, 214.829, -106.978, 1.33", "-131.072, 215.437, -106.666, 1.33", "-131.385, 216.588, -106.065, 0.29", "-131.679, 217.648, -105.494, 0.29", "-132.014, 218.611, -104.953, 0.29", "-132.315, 219.288, -104.55, 0.29", "-132.774, 220.117, -104.032, 0.29", "-133.041, 220.53, -103.754, 0.29", "-133.66, 221.388, -103.13, 0.29", "-134.278, 222.204, -102.53, 0.74", "-134.725, 222.749, -102.087, 0.88", "-135.369, 223.539, -101.433, 0.44", "-135.721, 223.999, -101.057, 0.44", "-136.181, 224.723, -100.506, 0.96", "-136.507, 225.34, -100.105, 1.25", "-137.178, 226.723, -99.3713, 0.29", "-137.536, 227.484, -99.0636, 0.37", "-137.773, 227.978, -98.8793, 0.37", "-138.218, 228.822, -98.4933, 0.37", "-138.744, 229.81, -98.0544, 0.37", "-139.048, 230.405, -97.7965, 0.37", "-139.399, 231.082, -97.5239, 0.37", "-140.401, 232.724, -96.7325, 1.33", "-141.249, 233.989, -95.936, 2.06" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-15.2959, -230.369, -2.90102, 0.29", "-16.6607, -231.551, -2.2944, 0.29", "-17.4616, -232.449, -1.81308, 0.29", "-17.8585, -233.062, -1.54543, 0.74", "-18.3411, -233.883, -1.21133, 0.29", "-18.7202, -234.55, -0.9932, 0.29", "-19.6439, -236.177, -0.461673, 0.59", "-19.8577, -236.673, -0.315444, 0.74", "-20.5669, -238.546, 0.254151, 0.37", "-20.9624, -239.522, 0.565293, 0.96", "-21.4213, -240.494, 0.873668, 0.81" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-15.2959, -230.369, -2.90102, 0.37", "-14.5567, -230.586, -2.72114, 0.37", "-14.054, -230.798, -2.58341, 0.37", "-13.5537, -231.066, -2.3242, 0.37", "-13.211, -231.267, -1.98526, 0.29", "-12.816, -231.477, -1.44856, 0.29", "-12.444, -231.675, -0.943085, 0.52", "-12.2653, -231.782, -0.598536, 0.52", "-11.8199, -232.135, 0.635804, 1.11", "-11.5145, -232.474, 1.95159, 0.59", "-11.455, -232.557, 2.45411, 0.59" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-132.683, 214.606, -146.299, 0.37", "-133.674, 215.823, -146.04, 0.37", "-134.578, 216.934, -145.804, 0.37", "-135.247, 217.755, -145.63, 0.37", "-136.386, 219.155, -145.332, 1.18", "-136.93, 219.823, -145.19, 1.62" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-132.683, 214.606, -146.299, 0.29", "-133.464, 214.768, -147.52, 0.29", "-134.082, 214.918, -148.448, 0.52", "-135.075, 215.139, -149.793, 1.03", "-135.625, 215.265, -150.478, 1.03", "-136.141, 215.398, -151.092, 0.88", "-136.873, 215.645, -151.947, 0.81", "-137.308, 215.847, -152.49, 0.29", "-137.811, 216.126, -153.077, 0.29", "-138.321, 216.406, -153.593, 0.29", "-138.581, 216.496, -153.917, 0.52", "-139.148, 216.661, -154.732, 0.52", "-139.83, 216.829, -155.763, 1.18", "-140.078, 216.878, -156.133, 1.47", "-140.439, 216.956, -156.653, 1.47", "-142.169, 217.324, -158.933, 0.52", "-142.763, 217.427, -159.608, 0.29", "-143.515, 217.554, -160.356, 0.29", "-144.688, 217.836, -161.343, 0.29", "-145.704, 218.122, -162.082, 0.29", "-146.454, 218.328, -162.543, 0.29", "-147.665, 218.632, -163.13, 0.29", "-148.183, 218.745, -163.377, 0.29", "-149.05, 218.954, -163.78, 0.88", "-149.511, 219.079, -163.986, 1.25", "-150.923, 219.451, -164.656, 0.37", "-151.566, 219.595, -165.08, 0.29", "-152.098, 219.7, -165.539, 0.74", "-152.484, 219.766, -165.891, 0.74", "-153.234, 219.891, -166.593, 0.37", "-153.928, 220.003, -167.276, 0.37", "-155.434, 220.241, -168.859, 0.37", "-155.918, 220.296, -169.352, 0.37", "-156.906, 220.371, -170.28, 0.29", "-157.4, 220.388, -170.69, 0.29", "-158.587, 220.358, -171.475, 0.66", "-159.67, 220.295, -172.065, 0.74", "-160.788, 220.23, -172.559, 0.52", "-161.588, 220.168, -172.902, 0.96", "-162.324, 220.104, -173.228, 0.96", "-163.654, 220.007, -173.767, 0.29", "-164.655, 219.974, -174.107, 0.96", "-165.242, 219.978, -174.298, 1.11", "-166.19, 220.096, -174.654, 0.44", "-166.875, 220.305, -174.934, 0.44", "-167.673, 220.733, -175.297, 0.44", "-168.338, 221.211, -175.608, 0.44", "-168.842, 221.589, -175.828, 0.44", "-169.685, 222.145, -176.195, 0.44", "-170.294, 222.469, -176.482, 0.44", "-171.387, 222.962, -176.995, 0.44", "-172.031, 223.231, -177.308, 0.81", "-172.828, 223.53, -177.7, 0.81", "-173.933, 223.896, -178.241, 0.52", "-175.069, 224.264, -178.8, 0.37", "-175.612, 224.456, -179.095, 0.37", "-176.195, 224.685, -179.45, 1.03", "-177.008, 225.05, -180.04, 1.47", "-177.463, 225.295, -180.427, 1.47", "-177.972, 225.651, -180.94, 0.44", "-178.965, 226.312, -182.077, 0.29", "-179.794, 226.736, -183.118, 0.29", "-180.775, 227.077, -184.496, 0.29", "-181.448, 227.248, -185.513, 0.52", "-182.276, 227.449, -186.761, 0.74", "-183.286, 227.758, -188.287, 0.59", "-183.873, 228.017, -189.229, 0.59", "-184.787, 228.502, -190.718, 0.37", "-185.455, 228.837, -191.681, 0.37", "-186.215, 229.162, -192.605, 0.37", "-187.111, 229.465, -193.498, 0.37", "-188.293, 229.838, -194.451, 0.59", "-189.088, 229.964, -194.954, 0.59", "-190.36, 229.871, -195.494, 2.06", "-190.871, 229.718, -195.652, 2.87", "-191.966, 229.179, -195.895, 2.5", "-192.874, 228.619, -196.008, 1.55", "-193.84, 227.943, -196.044, 0.37", "-194.35, 227.538, -196.048, 0.37", "-195.209, 226.784, -196.038, 0.37", "-196.121, 226.001, -196.031, 0.37", "-197.256, 224.98, -196.026, 0.37", "-197.544, 224.71, -196.034, 0.66", "-198.093, 224.194, -196.063, 0.44", "-198.701, 223.628, -196.111, 0.37", "-199.56, 222.893, -196.143, 0.37", "-200.309, 222.331, -196.158, 0.37", "-201.242, 221.684, -196.157, 0.37", "-201.944, 221.248, -196.14, 0.59", "-202.624, 220.877, -196.12, 0.59", "-203.771, 220.311, -196.073, 0.37", "-204.714, 219.886, -196.014, 0.66", "-205.435, 219.641, -195.951, 0.66", "-206.027, 219.491, -195.864, 0.66", "-206.624, 219.386, -195.756, 0.37", "-207.204, 219.332, -195.645, 0.74", "-207.709, 219.327, -195.551, 0.74", "-208.774, 219.386, -195.306, 0.52", "-210.254, 219.539, -194.976, 0.29", "-211.209, 219.604, -194.772, 0.29", "-211.998, 219.597, -194.614, 1.47", "-212.572, 219.535, -194.519, 1.99", "-213.197, 219.378, -194.437, 1.99", "-214.784, 218.809, -194.297, 0.29", "-216.103, 218.259, -194.255, 0.29", "-217.301, 217.689, -194.239, 0.29", "-218.32, 217.187, -194.242, 0.29", "-219.756, 216.51, -194.285, 0.29", "-220.569, 216.13, -194.349, 0.44", "-221.734, 215.578, -194.532, 0.44", "-222.798, 215.143, -194.765, 0.44", "-224.005, 214.731, -195.068, 0.44", "-225.136, 214.402, -195.365, 0.44", "-226.357, 214.062, -195.688, 0.44", "-227.855, 213.614, -196.058, 0.44", "-228.987, 213.264, -196.321, 0.44", "-230.475, 212.783, -196.713, 0.44", "-231.453, 212.403, -197.0, 1.62", "-231.998, 212.179, -197.16, 2.5", "-232.392, 212.029, -197.271, 2.5", "-234.515, 211.181, -197.872, 0.37", "-235.536, 210.691, -198.186, 0.37", "-236.575, 210.127, -198.542, 0.37", "-237.448, 209.633, -198.807, 0.81", "-238.272, 209.213, -198.997, 0.37", "-238.934, 208.948, -199.09, 0.52", "-239.434, 208.832, -199.08, 0.81", "-240.098, 208.754, -199.01, 0.81", "-241.474, 208.675, -198.877, 0.37", "-242.645, 208.565, -198.785, 0.37", "-243.851, 208.385, -198.71, 0.37", "-244.766, 208.219, -198.632, 0.37", "-245.861, 207.99, -198.521, 0.37", "-247.822, 207.482, -198.308, 0.29", "-248.921, 207.065, -198.198, 0.29", "-249.929, 206.494, -198.071, 0.29", "-250.914, 205.701, -197.881, 0.88", "-251.419, 205.182, -197.729, 0.88", "-252.052, 204.394, -197.453, 0.29", "-252.89, 203.205, -196.986, 0.29", "-253.791, 201.897, -196.464, 0.37", "-254.927, 200.227, -195.814, 0.66", "-255.662, 199.167, -195.442, 0.66", "-256.155, 198.487, -195.202, 0.22", "-256.512, 198.005, -195.028, 0.59", "-256.931, 197.488, -194.84, 0.81", "-257.198, 197.183, -194.737, 0.81", "-258.365, 195.939, -194.302, 0.29", "-258.661, 195.588, -194.178, 0.29", "-259.26, 194.745, -193.86, 0.52", "-259.577, 194.225, -193.618, 0.52", "-260.004, 193.496, -193.24, 0.52", "-260.924, 192.016, -192.403, 0.66", "-261.571, 191.096, -191.839, 0.52", "-262.066, 190.515, -191.416, 0.96", "-263.116, 189.524, -190.574, 0.66", "-263.883, 188.918, -189.994, 0.29", "-265.039, 188.192, -189.221, 0.29", "-265.92, 187.753, -188.727, 0.29", "-267.657, 186.998, -187.826, 0.29", "-268.28, 186.74, -187.528, 1.47", "-268.708, 186.561, -187.342, 1.77", "-270.215, 185.959, -186.666, 0.37", "-271.729, 185.374, -186.018, 0.37", "-272.552, 185.046, -185.672, 0.66", "-273.4, 184.7, -185.294, 0.66", "-274.072, 184.422, -184.936, 0.59", "-275.571, 183.876, -184.034, 0.37", "-276.595, 183.569, -183.345, 0.37", "-277.683, 183.28, -182.56, 0.37", "-278.896, 182.965, -181.602, 0.96", "-279.803, 182.704, -180.802, 0.22", "-280.754, 182.383, -179.899, 0.22", "-281.225, 182.188, -179.433, 0.22", "-281.932, 181.881, -178.755, 0.52", "-283.092, 181.326, -177.774, 0.74", "-283.897, 180.949, -177.215, 0.66", "-285.088, 180.401, -176.475, 0.29", "-285.961, 179.995, -175.987, 0.96", "-286.347, 179.839, -175.801, 1.33", "-287.974, 179.358, -175.131, 0.37", "-289.446, 178.956, -174.559, 0.37", "-290.201, 178.745, -174.253, 0.37", "-291.734, 178.339, -173.558, 0.37", "-292.762, 178.069, -173.038, 0.37", "-294.707, 177.492, -171.935, 0.37", "-295.973, 177.042, -171.134, 0.37", "-296.93, 176.616, -170.403, 0.37", "-298.011, 176.099, -169.401, 1.11", "-298.472, 175.885, -168.918, 1.11", "-299.217, 175.471, -168.064, 0.44", "-299.769, 175.166, -167.423, 0.29", "-300.953, 174.623, -166.167, 0.29", "-302.032, 174.099, -164.977, 0.81", "-303.236, 173.407, -163.607, 0.52", "-304.232, 172.775, -162.504, 0.52", "-305.023, 172.214, -161.58, 0.52", "-305.442, 171.893, -161.022, 0.81", "-306.422, 171.075, -159.647, 0.44", "-306.965, 170.613, -158.833, 0.37", "-307.606, 170.145, -157.803, 0.37", "-308.771, 169.415, -156.004, 0.37", "-310.074, 168.551, -154.022, 1.55", "-310.591, 168.203, -153.253, 2.36", "-310.865, 168.021, -152.855, 2.58", "-312.228, 166.953, -150.736, 0.52", "-312.593, 166.523, -150.038, 0.74", "-313.001, 165.759, -149.132, 0.74", "-313.328, 164.897, -148.198, 0.44", "-313.622, 164.054, -147.166, 0.37", "-313.851, 163.438, -146.36, 0.44", "-314.148, 162.582, -145.242, 0.44", "-314.418, 161.963, -144.269, 0.44", "-314.922, 161.018, -142.582, 0.81", "-315.279, 160.439, -141.524, 1.11", "-315.7, 159.829, -140.563, 0.37", "-316.109, 159.172, -139.72, 0.37", "-317.065, 157.228, -137.743, 1.4", "-317.337, 156.581, -137.153, 1.99", "-317.605, 155.901, -136.607, 1.99", "-318.354, 153.866, -135.106, 0.52", "-318.844, 152.432, -134.109, 0.52", "-319.232, 151.282, -133.394, 0.52", "-319.861, 149.404, -132.468, 0.52", "-320.187, 148.328, -131.952, 0.74", "-320.477, 147.179, -131.35, 0.74", "-320.662, 146.428, -130.916, 0.52", "-320.916, 145.551, -130.414, 0.52", "-321.368, 144.259, -129.686, 0.44", "-321.973, 142.756, -128.868, 0.44", "-322.464, 141.677, -128.218, 0.52", "-323.139, 140.421, -127.379, 0.44", "-323.717, 139.436, -126.662, 0.44", "-324.161, 138.692, -126.071, 2.36", "-324.633, 137.922, -125.431, 3.46" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-115.099, 218.099, -160.881, 0.37", "-115.49, 220.954, -161.716, 0.37", "-115.711, 222.548, -162.166, 0.37", "-115.855, 223.726, -162.495, 0.59", "-115.969, 225.111, -162.894, 0.44", "-116.019, 225.979, -163.152, 0.37", "-116.05, 226.88, -163.436, 0.37", "-116.023, 228.496, -164.01, 0.29", "-115.982, 229.605, -164.413, 0.29", "-115.897, 230.714, -164.82, 0.29", "-115.74, 232.156, -165.331, 0.88", "-115.648, 232.905, -165.612, 1.11", "-115.551, 233.499, -165.86, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-115.099, 218.099, -160.881, 0.29", "-114.557, 218.954, -161.54, 0.29", "-114.284, 219.417, -161.869, 0.29", "-114.065, 219.796, -162.197, 0.44", "-113.952, 220.0, -162.383, 0.44", "-113.739, 220.406, -162.741, 0.37", "-113.531, 220.828, -163.091, 0.37", "-113.293, 221.328, -163.484, 0.37", "-112.911, 222.179, -164.169, 0.81", "-112.773, 222.521, -164.44, 0.59", "-112.552, 223.133, -164.905, 1.33", "-112.413, 223.585, -165.24, 1.92", "-112.352, 223.779, -165.386, 1.92" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-141.249, 233.989, -95.936, 0.52", "-142.741, 235.844, -95.0458, 0.52", "-143.629, 236.87, -94.5705, 0.52", "-144.726, 238.04, -94.0396, 0.52", "-145.452, 238.804, -93.697, 0.52", "-146.349, 239.767, -93.2658, 0.52", "-146.886, 240.371, -92.9911, 0.66", "-147.434, 240.963, -92.7116, 0.29", "-147.799, 241.375, -92.5344, 0.29", "-148.685, 242.51, -92.1155, 0.29", "-149.302, 243.294, -91.8155, 0.29", "-149.898, 244.138, -91.5087, 0.29", "-150.49, 245.02, -91.1781, 1.25", "-150.829, 245.53, -90.9823, 1.55", "-151.456, 246.496, -90.6255, 0.22", "-152.309, 247.614, -90.2571, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-141.249, 233.989, -95.936, 0.29", "-142.593, 235.009, -95.2924, 0.29", "-143.361, 235.58, -94.8682, 0.29", "-144.151, 236.17, -94.4097, 0.29", "-145.09, 236.911, -93.8791, 0.37", "-145.664, 237.413, -93.5619, 0.37", "-146.112, 237.849, -93.315, 0.29", "-146.873, 238.74, -92.8568, 0.29", "-147.383, 239.392, -92.5481, 0.29", "-148.071, 240.364, -92.151, 0.29", "-148.799, 241.433, -91.6989, 0.29", "-149.332, 242.242, -91.3528, 0.52", "-149.678, 242.771, -91.1331, 0.29", "-150.386, 243.873, -90.6736, 0.29", "-150.917, 244.72, -90.2862, 0.29", "-151.58, 245.791, -89.7531, 0.59", "-152.078, 246.589, -89.3485, 0.74", "-152.562, 247.383, -88.956, 0.22", "-152.868, 247.92, -88.7101, 0.22", "-153.32, 248.812, -88.363, 0.22", "-153.668, 249.531, -88.095, 0.22", "-153.958, 250.132, -87.8932, 0.74", "-154.13, 250.467, -87.7734, 0.74", "-154.392, 250.883, -87.6134, 0.29", "-154.896, 251.584, -87.3359, 0.59", "-155.532, 252.327, -87.0011, 0.29", "-156.229, 253.08, -86.6344, 0.29", "-156.899, 253.702, -86.3143, 0.29", "-157.602, 254.266, -86.0114, 0.29", "-158.383, 254.787, -85.6832, 0.29", "-159.295, 255.322, -85.2935, 0.29", "-159.991, 255.7, -84.9751, 0.29", "-161.237, 256.352, -84.346, 0.29", "-161.968, 256.741, -83.9481, 0.29", "-163.076, 257.333, -83.3111, 1.4", "-163.752, 257.678, -82.9101, 1.77", "-164.962, 258.345, -82.1136, 0.37", "-165.57, 258.693, -81.6594, 0.66", "-165.812, 258.882, -81.4246, 0.66" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-136.93, 219.823, -145.19, 0.29", "-136.728, 221.023, -143.795, 0.29", "-136.731, 221.7, -142.995, 0.22", "-136.854, 222.442, -142.105, 0.22", "-137.203, 223.4, -140.876, 0.44", "-137.474, 223.96, -140.147, 0.44", "-137.882, 224.797, -139.142, 0.44", "-138.287, 225.39, -138.454, 0.74", "-138.618, 225.875, -137.88, 0.74", "-139.142, 226.631, -137.045, 0.44", "-139.522, 227.256, -136.381, 0.29", "-139.909, 228.093, -135.52, 0.29", "-140.156, 228.989, -134.655, 0.29", "-140.348, 230.942, -132.796, 0.29", "-140.318, 231.979, -131.803, 0.29", "-140.211, 232.707, -131.035, 0.29", "-140.082, 233.406, -130.292, 0.29", "-139.915, 234.268, -129.45, 0.81", "-139.709, 235.391, -128.449, 1.47", "-139.561, 236.216, -127.81, 1.84", "-139.0, 239.195, -125.691, 0.29", "-138.795, 240.497, -124.852, 0.29", "-138.559, 242.065, -123.808, 0.29", "-138.206, 244.182, -122.374, 1.84", "-137.907, 245.81, -121.296, 0.37", "-137.714, 246.896, -120.581, 0.37", "-137.58, 247.707, -120.044, 0.37", "-137.203, 250.255, -118.095, 0.66", "-137.1, 251.274, -117.114, 0.37", "-137.116, 251.786, -116.522, 0.37", "-137.242, 252.54, -115.558, 0.59", "-137.317, 252.905, -115.122, 0.59", "-137.47, 253.537, -114.46, 0.44", "-138.188, 256.272, -112.117, 0.44", "-138.527, 257.626, -111.05, 0.29", "-138.805, 258.897, -110.12, 0.29", "-139.153, 260.686, -108.969, 0.29", "-139.303, 261.519, -108.466, 0.29", "-139.484, 262.661, -107.849, 0.29", "-139.668, 263.912, -107.265, 1.18", "-139.731, 264.374, -107.03, 1.55", "-139.994, 265.758, -106.104, 0.66", "-140.292, 267.372, -104.605, 1.03", "-140.361, 267.903, -103.988, 1.03", "-140.449, 269.051, -102.424, 0.29", "-140.472, 269.552, -101.699, 0.29", "-140.482, 270.647, -100.143, 0.66", "-140.449, 272.003, -98.0524, 0.37", "-140.427, 272.856, -96.7294, 0.37", "-140.404, 273.313, -95.9772, 0.37", "-140.325, 273.92, -94.9469, 1.47", "-140.162, 274.602, -93.9291, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-136.93, 219.823, -145.19, 0.29", "-137.056, 221.934, -144.857, 0.29", "-137.129, 223.187, -144.573, 0.29", "-137.222, 224.375, -144.242, 1.69", "-137.398, 226.149, -143.677, 0.29", "-137.48, 226.805, -143.441, 0.29", "-137.636, 227.69, -143.097, 0.29", "-137.798, 228.46, -142.693, 0.29", "-137.947, 229.018, -142.385, 0.29", "-138.191, 229.783, -141.98, 0.59", "-138.518, 230.604, -141.603, 0.29", "-138.938, 231.49, -141.232, 0.29", "-139.176, 231.924, -141.079, 0.59", "-139.513, 232.465, -140.934, 0.59", "-139.958, 233.045, -140.792, 0.29", "-140.377, 233.507, -140.688, 0.29", "-140.872, 234.034, -140.573, 0.88", "-141.172, 234.357, -140.5, 1.03", "-141.838, 235.036, -140.341, 0.29", "-142.548, 235.741, -140.176, 0.29", "-143.147, 236.36, -140.075, 0.29", "-143.591, 236.87, -140.036, 0.29", "-144.069, 237.479, -140.053, 0.29", "-144.534, 238.115, -140.152, 0.66", "-144.77, 238.467, -140.263, 0.88", "-145.165, 239.131, -140.564, 0.29", "-145.464, 239.613, -140.862, 0.29", "-145.843, 240.244, -141.375, 0.29", "-146.156, 240.878, -142.029, 0.29", "-146.379, 241.384, -142.638, 0.29", "-146.615, 241.935, -143.378, 0.59", "-146.877, 242.509, -144.24, 0.44", "-147.192, 243.132, -145.246, 0.81", "-147.566, 243.77, -146.361, 0.37", "-147.872, 244.188, -147.096, 0.29", "-148.113, 244.455, -147.548, 0.29", "-148.403, 244.726, -147.981, 0.29", "-148.89, 245.184, -148.567, 0.59", "-149.564, 245.754, -149.211, 0.29", "-150.171, 246.232, -149.69, 0.22", "-150.507, 246.518, -149.954, 0.22", "-151.032, 247.0, -150.354, 1.25", "-151.317, 247.29, -150.57, 1.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-112.352, 223.779, -165.386, 0.44", "-112.821, 225.062, -165.904, 0.44", "-113.249, 226.331, -166.46, 0.37", "-113.502, 227.165, -166.828, 0.37", "-113.743, 227.992, -167.183, 0.37", "-113.945, 228.674, -167.485, 0.37", "-114.27, 229.749, -167.957, 0.29", "-114.567, 230.966, -168.507, 1.25", "-114.692, 231.583, -168.81, 1.62", "-114.801, 232.138, -169.128, 1.62", "-115.081, 233.644, -170.058, 0.29", "-115.194, 234.361, -170.507, 0.29", "-115.287, 235.277, -171.119, 0.29", "-115.32, 236.113, -171.742, 0.59", "-115.315, 237.614, -172.909, 0.29", "-115.305, 238.111, -173.299, 0.29", "-115.297, 238.818, -173.856, 0.29", "-115.317, 239.246, -174.181, 0.29", "-115.363, 239.843, -174.582, 0.59", "-115.407, 240.567, -174.995, 0.59", "-115.479, 242.015, -175.751, 0.29", "-115.528, 242.891, -176.231, 0.29", "-115.574, 243.881, -176.774, 0.29", "-115.612, 245.18, -177.493, 0.37", "-115.62, 245.859, -177.867, 0.37", "-115.588, 247.06, -178.515, 0.37", "-115.524, 248.059, -179.032, 0.37", "-115.396, 249.436, -179.692, 0.44", "-115.275, 250.359, -180.107, 0.66", "-115.168, 251.056, -180.397, 0.66", "-114.893, 252.515, -180.88, 0.29", "-114.74, 253.178, -181.04, 0.74", "-114.417, 254.498, -181.273, 0.29", "-114.061, 256.002, -181.462, 0.37", "-113.849, 256.883, -181.553, 0.37", "-113.503, 258.399, -181.706, 0.37", "-113.309, 259.357, -181.806, 0.37", "-113.13, 260.456, -181.939, 0.37", "-112.988, 261.675, -182.113, 0.29", "-112.9, 262.862, -182.308, 0.29", "-112.762, 264.512, -182.682, 0.29", "-112.693, 265.243, -182.9, 0.29", "-112.59, 266.224, -183.222, 1.03", "-112.503, 266.963, -183.478, 1.33", "-112.333, 268.498, -184.007, 0.52", "-112.193, 269.807, -184.447, 0.52", "-112.038, 271.065, -184.873, 0.52", "-111.908, 272.098, -185.214, 0.81", "-111.841, 272.66, -185.391, 0.81", "-111.705, 274.229, -185.835, 0.37", "-111.616, 275.544, -186.155, 0.37", "-111.555, 276.649, -186.383, 0.96", "-111.527, 277.142, -186.482, 1.33", "-111.503, 277.775, -186.606, 1.4", "-111.49, 279.237, -186.885, 0.52", "-111.512, 280.296, -187.082, 0.44", "-111.608, 281.68, -187.325, 0.37", "-111.709, 282.908, -187.542, 0.37", "-111.785, 283.931, -187.725, 0.37", "-111.834, 284.621, -187.85, 0.37", "-111.962, 285.8, -188.052, 0.74", "-112.015, 286.068, -188.09, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-112.352, 223.779, -165.386, 0.37", "-112.404, 225.061, -166.821, 0.37", "-112.358, 225.984, -167.753, 0.74", "-112.145, 227.431, -169.224, 0.29", "-111.975, 228.178, -170.051, 0.29", "-111.754, 228.944, -170.924, 1.25", "-111.657, 229.245, -171.272, 1.25", "-111.336, 230.014, -172.139, 0.29", "-110.953, 230.759, -172.981, 0.29", "-110.506, 231.552, -173.911, 0.29", "-110.273, 232.005, -174.516, 0.29", "-110.124, 232.392, -175.107, 0.29", "-109.989, 232.851, -175.858, 0.29", "-109.929, 233.384, -176.726, 1.03", "-109.917, 234.471, -178.364, 0.37", "-109.923, 235.075, -179.226, 0.37", "-109.909, 235.573, -180.006, 0.37", "-109.903, 235.999, -180.694, 1.03", "-109.905, 236.722, -181.903, 0.52", "-109.881, 237.23, -182.757, 0.52", "-109.791, 237.78, -183.551, 0.44", "-109.459, 238.987, -185.227, 1.62" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_51", "dend_22", "dend_17", "dend_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_51", "dend_22", "dend_17", "dend_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_51", "dend_22", "dend_17", "dend_0", "axon_0", "dend_26", "dend_23", "dend_21", "dend_18", "dend_2", "dend_1", "axon_1", "dend_50", "dend_27", "dend_25", "dend_24", "dend_20", "dend_19", "dend_4", "dend_3", "dend_49", "dend_28", "dend_16", "dend_5", "dend_30", "dend_29", "dend_7", "dend_6", "dend_48", "dend_31", "dend_11", "dend_8", "dend_37", "dend_32", "dend_15", "dend_12", "dend_10", "dend_9", "dend_43", "dend_38", "dend_36", "dend_33", "dend_14", "dend_13", "dend_45", "dend_44", "dend_42", "dend_39", "dend_35", "dend_34", "dend_47", "dend_46", "dend_41", "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L5_LBC_b2c5f59c1a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_26
create dend_50
public dend_50
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_27
create dend_49
public dend_49
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_16, id: dend_16, parent: dend_4
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_48, id: dend_48, parent: dend_30
create dend_48
public dend_48
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, axon_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, axon_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_51
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_51(0), soma_0(0.4500009556479821)
    connect dend_22(0), soma_0(0.4500009556479821)
    connect dend_17(0), soma_0(0.4500009556479821)
    connect dend_0(0), soma_0(0.4500009556479821)
    connect axon_0(0), soma_0(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_16(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_48(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.24986, 8.66179, -0.266886, 1.81928 ) }
    soma_0 { pt3dadd( -1.99773, 7.71094, -0.243919, 3.13771 ) }
    soma_0 { pt3dadd( -1.74561, 6.7601, -0.220952, 4.2898 ) }
    soma_0 { pt3dadd( -1.49349, 5.80925, -0.197985, 6.24218 ) }
    soma_0 { pt3dadd( -1.24137, 4.8584, -0.175018, 7.75134 ) }
    soma_0 { pt3dadd( -0.989246, 3.90756, -0.152051, 8.81916 ) }
    soma_0 { pt3dadd( -0.737124, 2.95671, -0.129084, 9.30643 ) }
    soma_0 { pt3dadd( -0.485002, 2.00586, -0.106117, 9.79367 ) }
    soma_0 { pt3dadd( -0.23288, 1.05502, -0.0831497, 10.3575 ) }
    soma_0 { pt3dadd( 0.0192416, 0.104171, -0.0601827, 10.6175 ) }
    soma_0 { pt3dadd( 0.271364, -0.846675, -0.0372157, 10.6286 ) }
    soma_0 { pt3dadd( 0.523485, -1.79752, -0.0142487, 10.564 ) }
    soma_0 { pt3dadd( 0.775607, -2.74837, 0.00871831, 10.4925 ) }
    soma_0 { pt3dadd( 1.02773, -3.69921, 0.0316853, 10.2088 ) }
    soma_0 { pt3dadd( 1.27985, -4.65006, 0.0546523, 9.65193 ) }
    soma_0 { pt3dadd( 1.53197, -5.60091, 0.0776193, 9.00896 ) }
    soma_0 { pt3dadd( 1.7841, -6.55175, 0.100586, 8.08521 ) }
    soma_0 { pt3dadd( 2.03622, -7.5026, 0.123553, 6.83318 ) }
    soma_0 { pt3dadd( 2.28834, -8.45345, 0.14652, 5.15146 ) }
    soma_0 { pt3dadd( 2.54046, -9.40429, 0.169487, 3.38897 ) }
    soma_0 { pt3dadd( 2.79258, -10.3551, 0.192454, 2.13858 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 21/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -4.45367, 0.250478, 4.43561, 0.96 ) }
    dend_51 { pt3dadd( -4.93402, -0.270838, 5.41132, 0.96 ) }
    dend_51 { pt3dadd( -5.33107, -0.600578, 6.09551, 0.88 ) }
    dend_51 { pt3dadd( -6.66201, -1.54252, 8.06928, 0.81 ) }
    dend_51 { pt3dadd( -7.24056, -1.94059, 8.83898, 0.74 ) }
    dend_51 { pt3dadd( -8.14592, -2.60503, 9.98457, 0.66 ) }
    dend_51 { pt3dadd( -8.69376, -3.01177, 10.7714, 0.59 ) }
    dend_51 { pt3dadd( -9.12963, -3.37129, 11.5286, 0.81 ) }
    dend_51 { pt3dadd( -9.46806, -3.63147, 12.1175, 0.81 ) }
    dend_51 { pt3dadd( -10.2035, -4.0787, 13.3154, 0.59 ) }
    dend_51 { pt3dadd( -10.8448, -4.39977, 14.3749, 1.33 ) }
    dend_51 { pt3dadd( -12.4056, -5.03953, 17.0342, 1.55 ) }
    dend_51 { pt3dadd( -13.5582, -5.43447, 19.1519, 0.74 ) }
    dend_51 { pt3dadd( -13.9737, -5.53257, 19.9176, 0.59 ) }
    dend_51 { pt3dadd( -14.5589, -5.61895, 20.9715, 1.03 ) }
    dend_51 { pt3dadd( -14.8001, -5.62479, 21.3818, 1.47 ) }
    dend_51 { pt3dadd( -15.4881, -5.56481, 22.4724, 1.47 ) }
    dend_51 { pt3dadd( -16.8611, -5.34618, 24.6206, 0.81 ) }
    dend_51 { pt3dadd( -17.357, -5.25033, 25.5652, 0.59 ) }
    dend_51 { pt3dadd( -17.8082, -5.20259, 26.6813, 0.59 ) }
    dend_51 { pt3dadd( -18.0812, -5.22781, 27.4958, 0.96 ) }
    dend_51 { pt3dadd( -18.3193, -5.31507, 28.38, 0.96 ) }
    dend_51 { pt3dadd( -18.9276, -5.67628, 31.1835, 0.59 ) }
    dend_51 { pt3dadd( -19.1641, -5.91523, 32.8938, 0.59 ) }
    dend_51 { pt3dadd( -19.263, -6.10211, 34.2215, 0.44 ) }
    dend_51 { pt3dadd( -19.2888, -6.23355, 35.0577, 1.18 ) }
    dend_51 { pt3dadd( -19.2838, -6.41282, 35.8039, 1.47 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 48/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.51366, 8.18398, 1.68561, 3.24 ) }
    dend_22 { pt3dadd( -1.51904, 8.75479, 1.79165, 3.24 ) }
    dend_22 { pt3dadd( -1.53728, 10.6934, 2.15179, 2.58 ) }
    dend_22 { pt3dadd( -1.55156, 12.2106, 2.43363, 2.36 ) }
    dend_22 { pt3dadd( -1.56319, 13.4465, 2.66322, 2.36 ) }
    dend_22 { pt3dadd( -1.57664, 14.8761, 2.9288, 2.36 ) }
    dend_22 { pt3dadd( -1.58314, 15.5668, 3.05712, 2.5 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 55/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.55634, -6.50428, 3.06561, 1.18 ) }
    dend_17 { pt3dadd( 5.74995, -6.5736, 3.24094, 1.18 ) }
    dend_17 { pt3dadd( 6.93284, -7.09993, 4.09921, 0.88 ) }
    dend_17 { pt3dadd( 7.58296, -7.39205, 4.46863, 1.11 ) }
    dend_17 { pt3dadd( 9.39207, -8.15687, 5.28289, 1.33 ) }
    dend_17 { pt3dadd( 10.2933, -8.50904, 5.6012, 1.33 ) }
    dend_17 { pt3dadd( 11.3164, -8.89788, 5.96297, 1.25 ) }
    dend_17 { pt3dadd( 12.552, -9.35538, 6.33596, 0.96 ) }
    dend_17 { pt3dadd( 13.5564, -9.74233, 6.56209, 0.96 ) }
    dend_17 { pt3dadd( 14.3935, -10.0832, 6.69775, 1.25 ) }
    dend_17 { pt3dadd( 15.4222, -10.4725, 6.83723, 1.25 ) }
    dend_17 { pt3dadd( 16.8722, -10.9298, 7.11965, 1.47 ) }
    dend_17 { pt3dadd( 17.8396, -11.1763, 7.3808, 0.74 ) }
    dend_17 { pt3dadd( 18.5852, -11.3088, 7.68084, 0.74 ) }
    dend_17 { pt3dadd( 19.6832, -11.4573, 8.20929, 0.59 ) }
    dend_17 { pt3dadd( 21.1042, -11.6298, 8.92002, 0.59 ) }
    dend_17 { pt3dadd( 21.6716, -11.6929, 9.19218, 0.81 ) }
    dend_17 { pt3dadd( 22.324, -11.7641, 9.44624, 0.81 ) }
    dend_17 { pt3dadd( 23.8508, -11.8776, 10.0906, 0.52 ) }
    dend_17 { pt3dadd( 24.4335, -11.8875, 10.3454, 0.52 ) }
    dend_17 { pt3dadd( 25.379, -11.8616, 10.7497, 0.52 ) }
    dend_17 { pt3dadd( 26.1158, -11.9468, 10.9727, 0.59 ) }
    dend_17 { pt3dadd( 27.2598, -12.277, 11.1877, 1.47 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 78/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.77634, -10.0508, 1.87561, 2.43 ) }
    dend_0 { pt3dadd( 1.77634, -10.0508, 1.87561, 2.43 ) }
    dend_0 { pt3dadd( 1.87594, -11.6876, 1.48447, 2.06 ) }
    dend_0 { pt3dadd( 2.0247, -14.1325, 0.900246, 1.33 ) }
    dend_0 { pt3dadd( 2.17078, -16.5332, 0.326582, 0.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.79258, -10.3551, 0.192454, 0.59 ) }
    axon_0 { pt3dadd( 6.63706, -24.8541, 0.192454, 0.59 ) }
    axon_0 { pt3dadd( 10.4816, -39.353, 0.192454, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 86/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.58314, 15.5668, 3.05712, 2.06 ) }
    dend_26 { pt3dadd( -1.26999, 16.0784, 3.75921, 2.06 ) }
    dend_26 { pt3dadd( -0.637875, 17.1514, 5.05336, 1.92 ) }
    dend_26 { pt3dadd( -0.0383602, 18.2253, 6.23712, 1.47 ) }
    dend_26 { pt3dadd( 0.226109, 18.7382, 6.75008, 1.47 ) }
    dend_26 { pt3dadd( 0.635356, 19.5991, 7.52697, 1.25 ) }
    dend_26 { pt3dadd( 0.937728, 20.2352, 8.10096, 1.77 ) }
    dend_26 { pt3dadd( 1.24335, 20.9264, 8.69022, 1.55 ) }
    dend_26 { pt3dadd( 1.59444, 21.7866, 9.26588, 1.62 ) }
    dend_26 { pt3dadd( 1.81687, 22.3975, 9.59878, 2.21 ) }
    dend_26 { pt3dadd( 2.04213, 23.0832, 9.9345, 2.65 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 97/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.58314, 15.5668, 3.05712, 0.59 ) }
    dend_23 { pt3dadd( -4.36958, 15.8272, 2.79002, 0.59 ) }
    dend_23 { pt3dadd( -5.88772, 15.8614, 2.68819, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( -7.21219, 15.792, 2.53284, 0.59 ) }
    dend_23 { pt3dadd( -9.92527, 15.5402, 1.99404, 0.52 ) }
    dend_23 { pt3dadd( -11.7342, 15.3651, 1.54304, 0.81 ) }
    dend_23 { pt3dadd( -13.1251, 15.2436, 1.16588, 1.18 ) }
    dend_23 { pt3dadd( -14.1743, 15.1058, 0.883406, 1.18 ) }
    dend_23 { pt3dadd( -16.7285, 14.7284, 0.14578, 0.66 ) }
    dend_23 { pt3dadd( -18.9805, 14.4384, -0.488548, 0.66 ) }
    dend_23 { pt3dadd( -20.4663, 14.2971, -0.861353, 1.25 ) }
    dend_23 { pt3dadd( -21.3082, 14.2454, -1.03809, 1.47 ) }
    dend_23 { pt3dadd( -23.2151, 14.1927, -1.39488, 0.52 ) }
    dend_23 { pt3dadd( -24.6056, 14.1945, -1.5742, 0.52 ) }
    dend_23 { pt3dadd( -26.8505, 14.2478, -1.57515, 0.52 ) }
    dend_23 { pt3dadd( -28.2579, 14.2534, -1.43101, 1.03 ) }
    dend_23 { pt3dadd( -29.2606, 14.2143, -1.29058, 1.33 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 14/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 27.2598, -12.277, 11.1877, 0.52 ) }
    dend_21 { pt3dadd( 27.2657, -14.0879, 10.7619, 0.52 ) }
    dend_21 { pt3dadd( 27.1375, -14.8313, 10.5938, 0.37 ) }
    dend_21 { pt3dadd( 26.6677, -16.5227, 10.1557, 0.37 ) }
    dend_21 { pt3dadd( 26.2279, -17.7155, 9.70642, 0.59 ) }
    dend_21 { pt3dadd( 25.9612, -18.36, 9.4102, 0.22 ) }
    dend_21 { pt3dadd( 25.3281, -19.7775, 8.74048, 0.22 ) }
    dend_21 { pt3dadd( 24.8445, -20.704, 8.23494, 0.22 ) }
    dend_21 { pt3dadd( 23.9678, -22.1968, 7.37173, 0.74 ) }
    dend_21 { pt3dadd( 22.6118, -24.2286, 6.16408, 0.29 ) }
    dend_21 { pt3dadd( 21.7153, -25.5586, 5.34666, 0.07 ) }
    dend_21 { pt3dadd( 21.3019, -26.2265, 4.89821, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 26/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 27.2598, -12.277, 11.1877, 1.03 ) }
    dend_18 { pt3dadd( 29.4515, -12.3338, 12.805, 1.03 ) }
    dend_18 { pt3dadd( 30.4428, -12.4103, 13.0882, 0.52 ) }
    dend_18 { pt3dadd( 32.0173, -12.3859, 13.3418, 0.52 ) }
    dend_18 { pt3dadd( 35.194, -12.195, 13.7374, 0.37 ) }
    dend_18 { pt3dadd( 37.0131, -12.0791, 13.8394, 0.37 ) }
    dend_18 { pt3dadd( 41.4201, -11.7998, 13.903, 0.37 ) }
    dend_18 { pt3dadd( 52.8275, -11.1967, 13.2358, 0.37 ) }
    dend_18 { pt3dadd( 59.5111, -10.8634, 12.5256, 0.66 ) }
    dend_18 { pt3dadd( 61.2616, -10.7658, 12.2535, 0.66 ) }
    dend_18 { pt3dadd( 65.5029, -10.4697, 11.2672, 0.74 ) }
    dend_18 { pt3dadd( 67.3713, -10.2956, 10.7, 0.74 ) }
    dend_18 { pt3dadd( 69.7639, -10.0157, 9.69353, 0.37 ) }
    dend_18 { pt3dadd( 71.2391, -9.83418, 8.91107, 0.37 ) }
    dend_18 { pt3dadd( 72.6711, -9.76168, 8.23684, 0.37 ) }
    dend_18 { pt3dadd( 74.0474, -9.62821, 7.82152, 0.81 ) }
    dend_18 { pt3dadd( 75.807, -9.30228, 7.65969, 0.81 ) }
    dend_18 { pt3dadd( 77.1758, -9.01577, 7.64805, 0.81 ) }
    dend_18 { pt3dadd( 79.3487, -8.68465, 7.80926, 0.37 ) }
    dend_18 { pt3dadd( 80.9579, -8.64547, 7.96877, 0.29 ) }
    dend_18 { pt3dadd( 82.7396, -8.84252, 8.1979, 0.29 ) }
    dend_18 { pt3dadd( 84.9213, -9.29167, 8.60239, 0.44 ) }
    dend_18 { pt3dadd( 86.5519, -9.73224, 9.05349, 0.44 ) }
    dend_18 { pt3dadd( 89.0716, -10.4986, 9.88048, 0.44 ) }
    dend_18 { pt3dadd( 91.2898, -11.2033, 10.6367, 0.88 ) }
    dend_18 { pt3dadd( 92.2336, -11.4668, 11.0057, 0.88 ) }
    dend_18 { pt3dadd( 94.5071, -11.8585, 12.1389, 0.52 ) }
    dend_18 { pt3dadd( 96.5614, -11.8284, 13.4522, 0.74 ) }
    dend_18 { pt3dadd( 98.2421, -11.4677, 14.6241, 0.81 ) }
    dend_18 { pt3dadd( 99.2762, -11.0707, 15.3267, 0.81 ) }
    dend_18 { pt3dadd( 100.59, -10.4544, 16.1581, 0.52 ) }
    dend_18 { pt3dadd( 102.295, -9.63118, 17.1085, 0.52 ) }
    dend_18 { pt3dadd( 103.177, -9.24483, 17.5119, 0.74 ) }
    dend_18 { pt3dadd( 104.585, -8.76987, 18.0224, 0.74 ) }
    dend_18 { pt3dadd( 106.12, -8.45183, 18.4975, 0.59 ) }
    dend_18 { pt3dadd( 107.619, -8.34918, 18.8621, 0.59 ) }
    dend_18 { pt3dadd( 109.554, -8.44886, 19.2022, 0.66 ) }
    dend_18 { pt3dadd( 110.999, -8.6965, 19.3292, 0.88 ) }
    dend_18 { pt3dadd( 111.97, -8.96758, 19.3478, 0.88 ) }
    dend_18 { pt3dadd( 113.11, -9.47588, 19.2799, 0.52 ) }
    dend_18 { pt3dadd( 114.5, -10.3757, 19.0878, 0.52 ) }
    dend_18 { pt3dadd( 115.437, -11.2413, 18.8502, 0.52 ) }
    dend_18 { pt3dadd( 116.805, -13.0148, 18.3443, 0.44 ) }
    dend_18 { pt3dadd( 117.654, -14.2976, 17.882, 0.44 ) }
    dend_18 { pt3dadd( 118.736, -16.0634, 17.1111, 0.59 ) }
    dend_18 { pt3dadd( 119.184, -16.8048, 16.7202, 0.74 ) }
    dend_18 { pt3dadd( 119.918, -17.8364, 16.0159, 0.52 ) }
    dend_18 { pt3dadd( 120.61, -18.152, 15.4847, 0.37 ) }
    dend_18 { pt3dadd( 123.127, -17.6009, 14.1013, 0.52 ) }
    dend_18 { pt3dadd( 124.125, -17.3301, 13.6201, 0.52 ) }
    dend_18 { pt3dadd( 125.322, -17.0362, 13.1141, 0.52 ) }
    dend_18 { pt3dadd( 127.347, -16.6429, 12.3696, 0.52 ) }
    dend_18 { pt3dadd( 129.278, -16.272, 11.7521, 0.52 ) }
    dend_18 { pt3dadd( 131.181, -15.9231, 11.209, 0.66 ) }
    dend_18 { pt3dadd( 132.756, -15.7033, 10.841, 0.66 ) }
    dend_18 { pt3dadd( 134.353, -15.4859, 10.4697, 0.37 ) }
    dend_18 { pt3dadd( 135.849, -15.3189, 10.1358, 0.37 ) }
    dend_18 { pt3dadd( 137.507, -15.204, 9.80352, 0.37 ) }
    dend_18 { pt3dadd( 138.634, -15.1528, 9.5496, 0.66 ) }
    dend_18 { pt3dadd( 139.212, -15.1438, 9.38286, 0.66 ) }
    dend_18 { pt3dadd( 139.92, -15.17, 9.06723, 0.66 ) }
    dend_18 { pt3dadd( 140.622, -15.259, 8.64397, 0.66 ) }
    dend_18 { pt3dadd( 141.701, -15.4989, 7.8782, 0.37 ) }
    dend_18 { pt3dadd( 143.173, -15.9563, 6.79058, 0.37 ) }
    dend_18 { pt3dadd( 144.711, -16.4152, 5.76509, 0.37 ) }
    dend_18 { pt3dadd( 146.023, -16.7281, 4.99286, 0.22 ) }
    dend_18 { pt3dadd( 147.286, -16.9631, 4.38497, 0.37 ) }
    dend_18 { pt3dadd( 148.317, -17.0373, 4.04207, 0.44 ) }
    dend_18 { pt3dadd( 149.335, -16.9428, 3.87986, 0.44 ) }
    dend_18 { pt3dadd( 151.5, -16.4279, 3.89296, 0.52 ) }
    dend_18 { pt3dadd( 152.2, -16.2008, 3.95302, 0.37 ) }
    dend_18 { pt3dadd( 153.299, -15.7922, 4.08975, 0.37 ) }
    dend_18 { pt3dadd( 154.371, -15.3943, 4.1842, 0.52 ) }
    dend_18 { pt3dadd( 155.133, -15.0901, 4.13952, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_18 { pt3dadd( 155.753, -14.8307, 3.98035, 0.88 ) }
    dend_18 { pt3dadd( 156.189, -14.62, 3.78882, 0.88 ) }
    dend_18 { pt3dadd( 156.754, -14.3065, 3.51696, 1.03 ) }
    dend_18 { pt3dadd( 157.469, -13.851, 3.14264, 1.03 ) }
    dend_18 { pt3dadd( 158.57, -13.1511, 2.54473, 0.52 ) }
    dend_18 { pt3dadd( 159.885, -12.3846, 1.80659, 0.29 ) }
    dend_18 { pt3dadd( 161.009, -11.8844, 1.22862, 0.66 ) }
    dend_18 { pt3dadd( 161.881, -11.5738, 0.794981, 0.81 ) }
    dend_18 { pt3dadd( 162.736, -11.3388, 0.384197, 0.81 ) }
    dend_18 { pt3dadd( 163.511, -11.1603, 0.0183997, 0.81 ) }
    dend_18 { pt3dadd( 164.774, -10.9317, -0.528119, 0.37 ) }
    dend_18 { pt3dadd( 167.201, -10.6864, -1.54465, 0.37 ) }
    dend_18 { pt3dadd( 168.41, -10.6318, -2.00567, 0.44 ) }
    dend_18 { pt3dadd( 169.447, -10.5715, -2.37665, 0.59 ) }
    dend_18 { pt3dadd( 170.401, -10.4606, -2.69559, 0.59 ) }
    dend_18 { pt3dadd( 171.8, -10.1874, -3.12378, 0.59 ) }
    dend_18 { pt3dadd( 173.081, -9.81228, -3.47185, 0.52 ) }
    dend_18 { pt3dadd( 174.524, -9.27835, -3.83832, 0.74 ) }
    dend_18 { pt3dadd( 175.52, -8.94206, -4.03797, 0.74 ) }
    dend_18 { pt3dadd( 176.953, -8.55748, -4.37192, 0.37 ) }
    dend_18 { pt3dadd( 178.044, -8.3347, -4.66979, 0.44 ) }
    dend_18 { pt3dadd( 179.244, -8.15055, -5.04303, 0.66 ) }
    dend_18 { pt3dadd( 180.139, -8.06538, -5.33953, 0.74 ) }
    dend_18 { pt3dadd( 181.126, -8.07101, -5.66325, 0.74 ) }
    dend_18 { pt3dadd( 183.184, -8.19753, -6.35884, 0.59 ) }
    dend_18 { pt3dadd( 183.77, -8.25005, -6.57084, 0.59 ) }
    dend_18 { pt3dadd( 184.624, -8.30841, -6.91282, 0.59 ) }
    dend_18 { pt3dadd( 185.472, -8.36403, -7.30616, 0.37 ) }
    dend_18 { pt3dadd( 186.782, -8.4004, -7.95638, 0.59 ) }
    dend_18 { pt3dadd( 187.925, -8.37949, -8.57021, 0.81 ) }
    dend_18 { pt3dadd( 188.789, -8.32605, -8.98951, 0.81 ) }
    dend_18 { pt3dadd( 190.113, -8.25952, -9.55697, 0.52 ) }
    dend_18 { pt3dadd( 191.581, -8.15217, -10.1002, 0.37 ) }
    dend_18 { pt3dadd( 192.589, -8.04565, -10.4048, 0.29 ) }
    dend_18 { pt3dadd( 193.348, -7.93766, -10.5683, 0.29 ) }
    dend_18 { pt3dadd( 195.057, -7.56022, -10.7696, 0.52 ) }
    dend_18 { pt3dadd( 196.753, -7.06409, -10.859, 0.52 ) }
    dend_18 { pt3dadd( 197.888, -6.73274, -10.8575, 0.88 ) }
    dend_18 { pt3dadd( 198.816, -6.5132, -10.8736, 0.88 ) }
    dend_18 { pt3dadd( 199.529, -6.40512, -10.9675, 0.88 ) }
    dend_18 { pt3dadd( 201.089, -6.26128, -11.3675, 0.37 ) }
    dend_18 { pt3dadd( 202.164, -6.19559, -11.834, 0.37 ) }
    dend_18 { pt3dadd( 203.671, -6.13985, -12.667, 0.37 ) }
    dend_18 { pt3dadd( 205.468, -6.16862, -13.6805, 0.29 ) }
    dend_18 { pt3dadd( 206.833, -6.24571, -14.5768, 0.29 ) }
    dend_18 { pt3dadd( 207.671, -6.27112, -15.1784, 0.52 ) }
    dend_18 { pt3dadd( 208.099, -6.26666, -15.5165, 0.74 ) }
    dend_18 { pt3dadd( 208.828, -6.20422, -16.1599, 0.44 ) }
    dend_18 { pt3dadd( 210.284, -5.98188, -17.4564, 0.37 ) }
    dend_18 { pt3dadd( 212.669, -5.52583, -19.4548, 0.44 ) }
    dend_18 { pt3dadd( 214.015, -5.30019, -20.5832, 0.44 ) }
    dend_18 { pt3dadd( 215.353, -5.11868, -21.7796, 1.03 ) }
    dend_18 { pt3dadd( 216.685, -4.97035, -23.0486, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 2.17078, -16.5332, 0.326582, 1.18 ) }
    dend_2 { pt3dadd( 1.47554, -18.3852, 1.93418, 1.18 ) }
    dend_2 { pt3dadd( 1.0796, -19.2247, 2.61912, 1.18 ) }
    dend_2 { pt3dadd( 0.0753349, -21.354, 4.35643, 1.18 ) }
    dend_2 { pt3dadd( -0.640841, -22.8725, 5.59537, 0.88 ) }
    dend_2 { pt3dadd( -1.08654, -23.8175, 6.36641, 0.74 ) }
    dend_2 { pt3dadd( -1.47537, -24.6419, 7.03906, 1.03 ) }
    dend_2 { pt3dadd( -2.36261, -26.1603, 8.02098, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.17078, -16.5332, 0.326582, 0.96 ) }
    dend_1 { pt3dadd( 2.33591, -18.0497, -2.85155, 0.96 ) }
    dend_1 { pt3dadd( 2.49439, -19.431, -5.23986, 0.96 ) }
    dend_1 { pt3dadd( 2.50406, -19.63, -5.5474, 1.4 ) }
    dend_1 { pt3dadd( 2.68476, -22.2059, -9.28616, 0.88 ) }
    dend_1 { pt3dadd( 2.75167, -22.7554, -10.0361, 0.88 ) }
    dend_1 { pt3dadd( 2.92095, -23.7242, -11.3068, 0.52 ) }
    dend_1 { pt3dadd( 3.24141, -25.0088, -12.844, 0.52 ) }
    dend_1 { pt3dadd( 3.82826, -27.146, -15.2489, 0.88 ) }
    dend_1 { pt3dadd( 4.63162, -29.8298, -18.0776, 0.52 ) }
    dend_1 { pt3dadd( 5.3385, -31.8803, -20.101, 0.52 ) }
    dend_1 { pt3dadd( 5.82326, -33.0899, -21.3029, 0.52 ) }
    dend_1 { pt3dadd( 6.38717, -34.41, -22.5726, 0.52 ) }
    dend_1 { pt3dadd( 6.86148, -35.5088, -23.5642, 0.52 ) }
    dend_1 { pt3dadd( 7.48627, -36.9606, -24.6959, 0.88 ) }
    dend_1 { pt3dadd( 7.86696, -38.0631, -25.406, 1.11 ) }
    dend_1 { pt3dadd( 8.49743, -40.4196, -26.7105, 0.44 ) }
    dend_1 { pt3dadd( 8.84055, -41.9479, -27.5055, 0.74 ) }
    dend_1 { pt3dadd( 9.07966, -43.0387, -28.0275, 0.96 ) }
    dend_1 { pt3dadd( 9.344, -44.1226, -28.5043, 0.96 ) }
    dend_1 { pt3dadd( 9.76952, -45.8187, -29.2856, 0.66 ) }
    dend_1 { pt3dadd( 9.96788, -46.6335, -29.6934, 0.66 ) }
    dend_1 { pt3dadd( 10.4866, -48.6262, -30.7699, 0.44 ) }
    dend_1 { pt3dadd( 10.811, -49.6645, -31.6024, 0.59 ) }
    dend_1 { pt3dadd( 11.2096, -50.6719, -32.6391, 0.44 ) }
    dend_1 { pt3dadd( 12.0204, -52.2996, -35.2174, 0.37 ) }
    dend_1 { pt3dadd( 12.5377, -53.16, -37.2352, 0.96 ) }
    dend_1 { pt3dadd( 12.7247, -53.4478, -38.0737, 1.33 ) }
    dend_1 { pt3dadd( 13.7579, -55.1491, -43.8971, 0.81 ) }
    dend_1 { pt3dadd( 13.9745, -55.5552, -45.4049, 1.11 ) }
    dend_1 { pt3dadd( 14.8173, -57.4869, -52.741, 0.66 ) }
    dend_1 { pt3dadd( 15.2948, -59.0303, -58.3669, 1.55 ) }
    dend_1 { pt3dadd( 15.6077, -60.6045, -63.4741, 0.96 ) }
    dend_1 { pt3dadd( 15.7432, -62.2658, -68.1882, 0.81 ) }
    dend_1 { pt3dadd( 15.7153, -62.9994, -69.8911, 0.96 ) }
    dend_1 { pt3dadd( 15.586, -63.8998, -71.4851, 0.37 ) }
    dend_1 { pt3dadd( 15.2514, -65.4647, -73.2482, 0.29 ) }
    dend_1 { pt3dadd( 14.805, -67.2986, -74.5265, 0.29 ) }
    dend_1 { pt3dadd( 14.5244, -68.4209, -74.9932, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 14.3986, -69.0676, -75.1461, 0.52 ) }
    dend_1 { pt3dadd( 13.9636, -71.8671, -75.7995, 0.29 ) }
    dend_1 { pt3dadd( 13.8678, -72.6406, -76.0022, 0.59 ) }
    dend_1 { pt3dadd( 13.8039, -73.3409, -76.1928, 0.59 ) }
    dend_1 { pt3dadd( 13.7218, -74.2326, -76.4647, 0.29 ) }
    dend_1 { pt3dadd( 13.5554, -76.0498, -77.1073, 0.29 ) }
    dend_1 { pt3dadd( 13.3995, -77.8264, -77.8581, 0.59 ) }
    dend_1 { pt3dadd( 13.3295, -78.4322, -78.1617, 0.81 ) }
    dend_1 { pt3dadd( 12.9189, -81.1966, -79.6892, 0.22 ) }
    dend_1 { pt3dadd( 12.6898, -82.5865, -80.5586, 0.22 ) }
    dend_1 { pt3dadd( 12.3575, -84.5179, -81.8888, 0.22 ) }
    dend_1 { pt3dadd( 11.9543, -86.7865, -83.5387, 0.81 ) }
    dend_1 { pt3dadd( 11.5694, -88.8241, -85.152, 0.44 ) }
    dend_1 { pt3dadd( 11.3453, -89.9947, -86.1431, 0.44 ) }
    dend_1 { pt3dadd( 10.9707, -91.9616, -87.91, 0.88 ) }
    dend_1 { pt3dadd( 10.7729, -93.322, -89.0775, 0.74 ) }
    dend_1 { pt3dadd( 10.7089, -93.8873, -89.5317, 0.74 ) }
    dend_1 { pt3dadd( 10.3692, -96.6847, -91.5515, 0.44 ) }
    dend_1 { pt3dadd( 10.2194, -97.9163, -92.3294, 0.44 ) }
    dend_1 { pt3dadd( 10.0366, -98.9398, -92.9328, 0.29 ) }
    dend_1 { pt3dadd( 9.65977, -100.483, -93.7265, 0.29 ) }
    dend_1 { pt3dadd( 8.83698, -103.057, -94.9333, 0.29 ) }
    dend_1 { pt3dadd( 8.28098, -104.541, -95.567, 0.74 ) }
    dend_1 { pt3dadd( 7.77148, -105.774, -95.9925, 0.74 ) }
    dend_1 { pt3dadd( 6.71142, -108.119, -96.7907, 0.44 ) }
    dend_1 { pt3dadd( 6.20697, -109.197, -97.1282, 0.44 ) }
    dend_1 { pt3dadd( 5.66914, -110.371, -97.4364, 0.29 ) }
    dend_1 { pt3dadd( 5.45412, -110.878, -97.5199, 0.66 ) }
    dend_1 { pt3dadd( 4.89159, -112.22, -97.7039, 0.37 ) }
    dend_1 { pt3dadd( 4.42806, -113.312, -97.8102, 0.88 ) }
    dend_1 { pt3dadd( 3.95264, -114.302, -97.9016, 0.88 ) }
    dend_1 { pt3dadd( 3.23118, -115.628, -98.0937, 0.59 ) }
    dend_1 { pt3dadd( 2.46195, -116.904, -98.3244, 0.29 ) }
    dend_1 { pt3dadd( 1.61545, -118.164, -98.7209, 0.66 ) }
    dend_1 { pt3dadd( 1.20728, -118.731, -98.9944, 0.66 ) }
    dend_1 { pt3dadd( -0.0228177, -120.569, -100.256, 0.22 ) }
    dend_1 { pt3dadd( -0.415747, -121.252, -100.832, 0.22 ) }
    dend_1 { pt3dadd( -0.697899, -121.789, -101.342, 0.74 ) }
    dend_1 { pt3dadd( -1.4873, -123.687, -103.34, 0.44 ) }
    dend_1 { pt3dadd( -1.82723, -124.837, -104.649, 0.44 ) }
    dend_1 { pt3dadd( -2.12672, -126.403, -106.566, 0.29 ) }
    dend_1 { pt3dadd( -2.13088, -126.868, -107.192, 0.44 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 42/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.4816, -39.353, 0.192454, 0.15 ) }
    axon_1 { pt3dadd( 14.326, -53.852, 0.192454, 0.15 ) }
    axon_1 { pt3dadd( 18.1705, -68.351, 0.192454, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_26 (entry count 45/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 2.04213, 23.0832, 9.9345, 0.81 ) }
    dend_50 { pt3dadd( 3.66092, 24.3227, 9.95676, 0.81 ) }
    dend_50 { pt3dadd( 4.35041, 24.8422, 9.89756, 0.81 ) }
    dend_50 { pt3dadd( 5.60187, 25.6873, 9.71886, 0.81 ) }
    dend_50 { pt3dadd( 7.28582, 26.7165, 9.44146, 0.96 ) }
    dend_50 { pt3dadd( 8.17463, 27.2262, 9.28608, 1.25 ) }
    dend_50 { pt3dadd( 8.95369, 27.6517, 9.1493, 1.25 ) }
    dend_50 { pt3dadd( 10.3986, 28.4284, 8.85711, 0.96 ) }
    dend_50 { pt3dadd( 11.5944, 29.0826, 8.59253, 0.81 ) }
    dend_50 { pt3dadd( 12.6811, 29.6715, 8.33184, 1.33 ) }
    dend_50 { pt3dadd( 13.3921, 30.0432, 8.12581, 1.62 ) }
    dend_50 { pt3dadd( 14.4651, 30.5592, 7.81489, 0.74 ) }
    dend_50 { pt3dadd( 15.4493, 30.9928, 7.5464, 0.59 ) }
    dend_50 { pt3dadd( 16.4424, 31.442, 7.26856, 0.52 ) }
    dend_50 { pt3dadd( 17.5912, 32.0384, 6.82565, 0.44 ) }
    dend_50 { pt3dadd( 18.3081, 32.4101, 6.4337, 0.44 ) }
    dend_50 { pt3dadd( 19.6143, 32.9854, 5.49263, 0.74 ) }
    dend_50 { pt3dadd( 20.4003, 33.2455, 4.81267, 0.74 ) }
    dend_50 { pt3dadd( 21.686, 33.4937, 3.6082, 0.52 ) }
    dend_50 { pt3dadd( 22.7914, 33.5805, 2.59363, 0.88 ) }
    dend_50 { pt3dadd( 23.9401, 33.627, 1.50872, 0.88 ) }
    dend_50 { pt3dadd( 24.9288, 33.7552, 0.476282, 0.59 ) }
    dend_50 { pt3dadd( 25.4141, 33.85, -0.0618186, 0.59 ) }
    dend_50 { pt3dadd( 25.9977, 33.9646, -0.674763, 0.44 ) }
    dend_50 { pt3dadd( 26.9013, 34.1587, -1.37305, 0.44 ) }
    dend_50 { pt3dadd( 27.6491, 34.4042, -1.78565, 0.44 ) }
    dend_50 { pt3dadd( 29.2035, 35.1519, -2.35726, 0.44 ) }
    dend_50 { pt3dadd( 30.4828, 35.9518, -2.72301, 0.74 ) }
    dend_50 { pt3dadd( 31.5534, 36.8121, -2.9782, 0.96 ) }
    dend_50 { pt3dadd( 33.5418, 38.8093, -3.32937, 0.44 ) }
    dend_50 { pt3dadd( 33.9911, 39.3394, -3.38705, 0.96 ) }
    dend_50 { pt3dadd( 34.7764, 40.3674, -3.45517, 0.37 ) }
    dend_50 { pt3dadd( 35.5216, 41.4868, -3.48893, 0.37 ) }
    dend_50 { pt3dadd( 36.2502, 42.7878, -3.71858, 0.37 ) }
    dend_50 { pt3dadd( 36.7595, 43.8634, -4.07105, 0.74 ) }
    dend_50 { pt3dadd( 37.101, 44.6379, -4.45032, 0.44 ) }
    dend_50 { pt3dadd( 37.5185, 45.628, -4.97567, 0.52 ) }
    dend_50 { pt3dadd( 37.812, 46.3958, -5.40851, 1.11 ) }
    dend_50 { pt3dadd( 38.6351, 48.6834, -6.71822, 0.44 ) }
    dend_50 { pt3dadd( 39.0415, 49.913, -7.40315, 0.29 ) }
    dend_50 { pt3dadd( 39.3619, 51.0596, -8.02911, 0.29 ) }
    dend_50 { pt3dadd( 39.5699, 51.9152, -8.46301, 0.81 ) }
    dend_50 { pt3dadd( 39.7398, 52.6557, -8.80925, 0.81 ) }
    dend_50 { pt3dadd( 40.0079, 53.7807, -9.27533, 0.52 ) }
    dend_50 { pt3dadd( 40.3584, 55.2863, -9.8051, 0.52 ) }
    dend_50 { pt3dadd( 40.7464, 57.0341, -10.4889, 0.44 ) }
    dend_50 { pt3dadd( 40.8362, 57.5094, -10.6914, 0.88 ) }
    dend_50 { pt3dadd( 40.9923, 58.2951, -11.0551, 0.88 ) }
    dend_50 { pt3dadd( 41.2677, 59.3891, -11.5751, 0.37 ) }
    dend_50 { pt3dadd( 41.5648, 60.2053, -12.0323, 0.22 ) }
    dend_50 { pt3dadd( 41.9125, 60.984, -12.4979, 0.22 ) }
    dend_50 { pt3dadd( 42.3151, 61.7557, -12.9797, 0.22 ) }
    dend_50 { pt3dadd( 42.8967, 62.7142, -13.6155, 0.22 ) }
    dend_50 { pt3dadd( 43.7289, 63.9696, -14.3925, 0.22 ) }
    dend_50 { pt3dadd( 45.0345, 65.741, -15.3872, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( 45.4635, 66.2601, -15.6311, 0.81 ) }
    dend_50 { pt3dadd( 46.3389, 67.2162, -16.0158, 0.81 ) }
    dend_50 { pt3dadd( 47.1226, 68.031, -16.2807, 0.44 ) }
    dend_50 { pt3dadd( 48.1637, 69.1111, -16.5586, 0.44 ) }
    dend_50 { pt3dadd( 48.544, 69.5188, -16.6239, 0.96 ) }
    dend_50 { pt3dadd( 49.2173, 70.2608, -16.6706, 0.52 ) }
    dend_50 { pt3dadd( 50.0682, 71.1569, -16.7255, 0.37 ) }
    dend_50 { pt3dadd( 50.8188, 71.9503, -16.7673, 0.66 ) }
    dend_50 { pt3dadd( 51.4277, 72.5993, -16.8392, 0.66 ) }
    dend_50 { pt3dadd( 52.0487, 73.2786, -16.953, 0.29 ) }
    dend_50 { pt3dadd( 52.9619, 74.2753, -17.1182, 0.29 ) }
    dend_50 { pt3dadd( 53.8539, 75.2356, -17.2672, 0.59 ) }
    dend_50 { pt3dadd( 54.4696, 75.8684, -17.3559, 0.37 ) }
    dend_50 { pt3dadd( 55.2271, 76.5904, -17.4702, 0.66 ) }
    dend_50 { pt3dadd( 55.8587, 77.1678, -17.5667, 0.66 ) }
    dend_50 { pt3dadd( 56.9706, 78.1774, -17.7324, 0.29 ) }
    dend_50 { pt3dadd( 57.7941, 78.9533, -17.8434, 0.29 ) }
    dend_50 { pt3dadd( 58.3203, 79.4505, -17.9165, 0.29 ) }
    dend_50 { pt3dadd( 58.8093, 79.8637, -17.9942, 0.66 ) }
    dend_50 { pt3dadd( 59.1712, 80.149, -18.0557, 0.66 ) }
    dend_50 { pt3dadd( 59.6399, 80.5275, -18.191, 0.66 ) }
    dend_50 { pt3dadd( 60.4159, 81.184, -18.4971, 0.37 ) }
    dend_50 { pt3dadd( 61.296, 81.9324, -18.9461, 0.37 ) }
    dend_50 { pt3dadd( 62.3478, 82.7932, -19.6043, 0.96 ) }
    dend_50 { pt3dadd( 62.9337, 83.2259, -19.9983, 0.96 ) }
    dend_50 { pt3dadd( 64.448, 84.2336, -21.0502, 0.29 ) }
    dend_50 { pt3dadd( 65.4449, 84.849, -21.7732, 0.29 ) }
    dend_50 { pt3dadd( 66.3657, 85.4064, -22.4145, 0.29 ) }
    dend_50 { pt3dadd( 67.6944, 86.1667, -23.2132, 0.29 ) }
    dend_50 { pt3dadd( 68.4177, 86.5479, -23.574, 0.74 ) }
    dend_50 { pt3dadd( 69.0694, 86.8769, -23.851, 0.74 ) }
    dend_50 { pt3dadd( 70.7982, 87.7637, -24.3701, 0.29 ) }
    dend_50 { pt3dadd( 72.8914, 88.9346, -24.833, 0.29 ) }
    dend_50 { pt3dadd( 75.0665, 90.2511, -25.1167, 0.29 ) }
    dend_50 { pt3dadd( 76.0876, 90.9331, -25.1768, 0.29 ) }
    dend_50 { pt3dadd( 76.998, 91.5907, -25.197, 0.29 ) }
    dend_50 { pt3dadd( 78.4764, 92.7237, -25.1243, 0.66 ) }
    dend_50 { pt3dadd( 79.2021, 93.2555, -25.0792, 0.66 ) }
    dend_50 { pt3dadd( 80.1074, 93.8249, -25.0695, 0.37 ) }
    dend_50 { pt3dadd( 81.0535, 94.3502, -25.1691, 1.03 ) }
    dend_50 { pt3dadd( 81.9384, 94.7592, -25.3265, 1.03 ) }
    dend_50 { pt3dadd( 83.3273, 95.2846, -25.6877, 0.66 ) }
    dend_50 { pt3dadd( 86.098, 96.1766, -26.6563, 0.22 ) }
    dend_50 { pt3dadd( 88.4326, 96.8716, -27.5796, 0.52 ) }
    dend_50 { pt3dadd( 90.476, 97.4744, -28.4723, 0.29 ) }
    dend_50 { pt3dadd( 91.8344, 97.8826, -29.128, 0.29 ) }
    dend_50 { pt3dadd( 93.0905, 98.3257, -29.7999, 0.66 ) }
    dend_50 { pt3dadd( 93.6333, 98.5798, -30.1076, 0.66 ) }
    dend_50 { pt3dadd( 94.7357, 99.2917, -30.5605, 0.22 ) }
    dend_50 { pt3dadd( 95.3936, 99.8065, -30.7768, 0.52 ) }
    dend_50 { pt3dadd( 95.9414, 100.284, -30.9074, 0.52 ) }
    dend_50 { pt3dadd( 98.3263, 102.521, -31.2651, 0.22 ) }
    dend_50 { pt3dadd( 100.108, 104.229, -31.4194, 0.22 ) }
    dend_50 { pt3dadd( 102.75, 106.785, -31.5411, 0.22 ) }
    dend_50 { pt3dadd( 104.121, 108.131, -31.5576, 0.52 ) }
    dend_50 { pt3dadd( 104.882, 108.881, -31.5303, 0.22 ) }
    dend_50 { pt3dadd( 105.873, 109.874, -31.3935, 0.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 57/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.04213, 23.0832, 9.9345, 0.66 ) }
    dend_27 { pt3dadd( 1.18742, 26.7595, 10.4003, 0.66 ) }
    dend_27 { pt3dadd( 1.08935, 27.9149, 10.5722, 0.74 ) }
    dend_27 { pt3dadd( 1.08705, 29.4486, 10.879, 0.74 ) }
    dend_27 { pt3dadd( 1.12025, 30.9397, 10.9739, 1.03 ) }
    dend_27 { pt3dadd( 1.17121, 32.3598, 10.9975, 1.03 ) }
    dend_27 { pt3dadd( 1.22783, 34.0299, 10.9817, 0.74 ) }
    dend_27 { pt3dadd( 1.46801, 35.9939, 11.0674, 1.11 ) }
    dend_27 { pt3dadd( 1.75539, 37.7421, 11.0524, 1.47 ) }
    dend_27 { pt3dadd( 2.41879, 41.3197, 10.6858, 1.62 ) }
    dend_27 { pt3dadd( 2.60447, 42.4216, 10.4599, 1.62 ) }
    dend_27 { pt3dadd( 2.68233, 43.1078, 10.2609, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 69/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -29.2606, 14.2143, -1.29058, 0.29 ) }
    dend_25 { pt3dadd( -30.516, 14.3346, 0.46451, 0.29 ) }
    dend_25 { pt3dadd( -31.5353, 14.4572, 1.66452, 0.88 ) }
    dend_25 { pt3dadd( -32.6273, 14.5651, 2.8496, 1.11 ) }
    dend_25 { pt3dadd( -36.3853, 14.8992, 6.68917, 1.03 ) }
    dend_25 { pt3dadd( -37.5646, 14.9707, 7.84195, 0.59 ) }
    dend_25 { pt3dadd( -38.5088, 14.9994, 8.79141, 0.29 ) }
    dend_25 { pt3dadd( -39.7502, 15.0016, 10.1688, 0.29 ) }
    dend_25 { pt3dadd( -40.4448, 15.0135, 10.9593, 0.52 ) }
    dend_25 { pt3dadd( -40.8779, 15.038, 11.4366, 0.74 ) }
    dend_25 { pt3dadd( -41.8601, 15.1504, 12.2841, 0.74 ) }
    dend_25 { pt3dadd( -43.8244, 15.4191, 14.0528, 0.37 ) }
    dend_25 { pt3dadd( -44.6124, 15.5531, 14.8021, 0.59 ) }
    dend_25 { pt3dadd( -45.1437, 15.6814, 15.2841, 0.59 ) }
    dend_25 { pt3dadd( -46.2213, 16.0055, 16.1538, 0.29 ) }
    dend_25 { pt3dadd( -47.6935, 16.4844, 17.2413, 0.59 ) }
    dend_25 { pt3dadd( -48.3755, 16.7107, 17.6403, 0.37 ) }
    dend_25 { pt3dadd( -49.9914, 17.1928, 18.3274, 0.29 ) }
    dend_25 { pt3dadd( -51.4534, 17.5786, 18.8372, 1.25 ) }
    dend_25 { pt3dadd( -52.0569, 17.7182, 19.0032, 1.62 ) }
    dend_25 { pt3dadd( -52.7234, 17.8859, 19.1245, 1.62 ) }
    dend_25 { pt3dadd( -54.7128, 18.4452, 19.3693, 0.29 ) }
    dend_25 { pt3dadd( -55.9917, 18.8013, 19.4919, 0.29 ) }
    dend_25 { pt3dadd( -57.4272, 19.2061, 19.5935, 0.52 ) }
    dend_25 { pt3dadd( -58.1922, 19.4275, 19.6428, 0.59 ) }
    dend_25 { pt3dadd( -60.5041, 20.1169, 19.7748, 0.22 ) }
    dend_25 { pt3dadd( -61.6324, 20.4738, 19.8272, 0.74 ) }
    dend_25 { pt3dadd( -62.6697, 20.8296, 19.8917, 0.74 ) }
    dend_25 { pt3dadd( -63.7703, 21.2214, 19.9618, 0.22 ) }
    dend_25 { pt3dadd( -64.4754, 21.4718, 20.0067, 0.37 ) }
    dend_25 { pt3dadd( -65.1567, 21.7326, 20.0522, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 0/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -29.2606, 14.2143, -1.29058, 0.44 ) }
    dend_24 { pt3dadd( -30.426, 13.7295, -1.39862, 0.44 ) }
    dend_24 { pt3dadd( -31.2233, 13.3786, -1.46047, 0.44 ) }
    dend_24 { pt3dadd( -31.9759, 13.0437, -1.50803, 0.96 ) }
    dend_24 { pt3dadd( -32.6873, 12.7092, -1.56367, 1.25 ) }
    dend_24 { pt3dadd( -33.6633, 12.2238, -1.63371, 0.74 ) }
    dend_24 { pt3dadd( -34.3256, 11.8837, -1.66552, 0.59 ) }
    dend_24 { pt3dadd( -34.964, 11.5448, -1.70489, 0.59 ) }
    dend_24 { pt3dadd( -35.5731, 11.2212, -1.76818, 0.59 ) }
    dend_24 { pt3dadd( -36.5269, 10.7359, -1.90814, 0.44 ) }
    dend_24 { pt3dadd( -37.8085, 10.1208, -2.1415, 0.81 ) }
    dend_24 { pt3dadd( -39.433, 9.39079, -2.55327, 0.81 ) }
    dend_24 { pt3dadd( -40.2194, 9.03709, -2.85206, 0.81 ) }
    dend_24 { pt3dadd( -41.0063, 8.67333, -3.26446, 0.44 ) }
    dend_24 { pt3dadd( -41.6082, 8.40742, -3.6318, 0.44 ) }
    dend_24 { pt3dadd( -42.3725, 8.09781, -4.10671, 0.44 ) }
    dend_24 { pt3dadd( -43.5928, 7.65375, -4.87367, 0.44 ) }
    dend_24 { pt3dadd( -45.0625, 7.19432, -5.75299, 0.88 ) }
    dend_24 { pt3dadd( -46.1542, 6.89673, -6.303, 0.88 ) }
    dend_24 { pt3dadd( -47.2317, 6.64128, -6.74273, 0.52 ) }
    dend_24 { pt3dadd( -48.9507, 6.31567, -7.27978, 0.52 ) }
    dend_24 { pt3dadd( -49.5738, 6.22523, -7.41917, 0.52 ) }
    dend_24 { pt3dadd( -50.6322, 6.10993, -7.49764, 0.88 ) }
    dend_24 { pt3dadd( -51.4222, 6.03687, -7.46361, 0.88 ) }
    dend_24 { pt3dadd( -52.259, 5.93869, -7.3742, 1.18 ) }
    dend_24 { pt3dadd( -53.0416, 5.80235, -7.26637, 1.18 ) }
    dend_24 { pt3dadd( -54.2036, 5.50021, -7.02663, 0.74 ) }
    dend_24 { pt3dadd( -55.3835, 5.10018, -6.65157, 0.52 ) }
    dend_24 { pt3dadd( -56.5239, 4.65018, -6.18779, 0.52 ) }
    dend_24 { pt3dadd( -57.406, 4.30685, -5.791, 0.88 ) }
    dend_24 { pt3dadd( -58.6036, 3.88793, -5.23331, 0.88 ) }
    dend_24 { pt3dadd( -59.9065, 3.47864, -4.62017, 0.88 ) }
    dend_24 { pt3dadd( -61.4516, 3.04668, -3.90165, 1.03 ) }
    dend_24 { pt3dadd( -62.2862, 2.80853, -3.54176, 0.96 ) }
    dend_24 { pt3dadd( -63.3881, 2.48996, -3.08314, 0.74 ) }
    dend_24 { pt3dadd( -64.9006, 2.07646, -2.5113, 0.52 ) }
    dend_24 { pt3dadd( -65.5285, 1.90324, -2.31949, 0.81 ) }
    dend_24 { pt3dadd( -66.2484, 1.68495, -2.17238, 0.81 ) }
    dend_24 { pt3dadd( -67.3769, 1.26551, -2.01852, 0.52 ) }
    dend_24 { pt3dadd( -67.7439, 1.09785, -1.96899, 0.88 ) }
    dend_24 { pt3dadd( -68.1892, 0.848381, -1.90837, 1.18 ) }
    dend_24 { pt3dadd( -69.2075, 0.260439, -1.76052, 1.18 ) }
    dend_24 { pt3dadd( -70.4687, -0.405969, -1.56459, 0.59 ) }
    dend_24 { pt3dadd( -71.0437, -0.679562, -1.47091, 0.74 ) }
    dend_24 { pt3dadd( -71.7225, -0.962665, -1.35718, 0.74 ) }
    dend_24 { pt3dadd( -72.6685, -1.33854, -1.14874, 0.44 ) }
    dend_24 { pt3dadd( -73.3376, -1.60674, -0.973638, 0.44 ) }
    dend_24 { pt3dadd( -73.9913, -1.88706, -0.781094, 0.74 ) }
    dend_24 { pt3dadd( -74.728, -2.22142, -0.592799, 0.74 ) }
    dend_24 { pt3dadd( -75.4159, -2.5359, -0.360972, 0.74 ) }
    dend_24 { pt3dadd( -76.8902, -3.20701, 0.235439, 0.29 ) }
    dend_24 { pt3dadd( -77.8098, -3.65355, 0.668255, 0.37 ) }
    dend_24 { pt3dadd( -78.7624, -4.16195, 1.16026, 0.37 ) }
    dend_24 { pt3dadd( -79.9319, -4.81481, 1.79807, 0.37 ) }
    dend_24 { pt3dadd( -81.994, -5.99922, 2.86872, 0.74 ) }
    dend_24 { pt3dadd( -82.6471, -6.39337, 3.16417, 1.03 ) }
    dend_24 { pt3dadd( -84.0242, -7.28238, 3.73871, 0.59 ) }
    dend_24 { pt3dadd( -85.1778, -8.06225, 4.24279, 0.44 ) }
    dend_24 { pt3dadd( -85.9097, -8.56355, 4.5641, 0.88 ) }
    dend_24 { pt3dadd( -86.9326, -9.26143, 4.99065, 0.74 ) }
    dend_24 { pt3dadd( -87.9492, -9.93178, 5.26999, 0.37 ) }
    dend_24 { pt3dadd( -89.1621, -10.6164, 5.57611, 0.37 ) }
    dend_24 { pt3dadd( -89.7999, -10.8763, 5.71251, 0.81 ) }
    dend_24 { pt3dadd( -90.3362, -11.0068, 5.82413, 1.03 ) }
    dend_24 { pt3dadd( -90.8481, -11.0611, 5.946, 1.03 ) }
    dend_24 { pt3dadd( -91.5179, -11.0567, 6.12986, 0.66 ) }
    dend_24 { pt3dadd( -92.5269, -10.981, 6.3784, 0.37 ) }
    dend_24 { pt3dadd( -93.4628, -10.8878, 6.53798, 0.59 ) }
    dend_24 { pt3dadd( -94.3048, -10.7889, 6.659, 0.59 ) }
    dend_24 { pt3dadd( -95.1129, -10.6872, 6.78898, 0.37 ) }
    dend_24 { pt3dadd( -96.0066, -10.5881, 6.97698, 0.66 ) }
    dend_24 { pt3dadd( -96.7159, -10.5347, 7.09175, 0.88 ) }
    dend_24 { pt3dadd( -97.0437, -10.5169, 7.11394, 0.88 ) }
    dend_24 { pt3dadd( -98.6203, -10.4117, 7.07792, 0.29 ) }
    dend_24 { pt3dadd( -99.596, -10.3508, 6.96186, 0.29 ) }
    dend_24 { pt3dadd( -100.891, -10.2792, 6.67223, 0.29 ) }
    dend_24 { pt3dadd( -102.884, -10.2073, 6.0522, 0.44 ) }
    dend_24 { pt3dadd( -104.338, -10.2289, 5.5043, 0.44 ) }
    dend_24 { pt3dadd( -104.926, -10.2881, 5.23405, 0.44 ) }
    dend_24 { pt3dadd( -105.265, -10.3606, 5.04137, 0.59 ) }
    dend_24 { pt3dadd( -105.904, -10.5315, 4.64973, 0.59 ) }
    dend_24 { pt3dadd( -106.354, -10.6617, 4.39497, 0.59 ) }
    dend_24 { pt3dadd( -107.207, -10.9315, 4.05014, 0.37 ) }
    dend_24 { pt3dadd( -107.917, -11.1883, 3.75767, 0.37 ) }
    dend_24 { pt3dadd( -108.554, -11.4258, 3.47372, 0.66 ) }
    dend_24 { pt3dadd( -109.169, -11.6663, 3.14082, 0.66 ) }
    dend_24 { pt3dadd( -109.758, -11.9213, 2.78472, 0.66 ) }
    dend_24 { pt3dadd( -110.84, -12.432, 2.0623, 0.44 ) }
    dend_24 { pt3dadd( -111.772, -12.8928, 1.40942, 0.66 ) }
    dend_24 { pt3dadd( -112.311, -13.1834, 0.979111, 0.66 ) }
    dend_24 { pt3dadd( -113.664, -13.9322, -0.184033, 0.29 ) }
    dend_24 { pt3dadd( -114.453, -14.3639, -0.86598, 0.29 ) }
    dend_24 { pt3dadd( -115.162, -14.7486, -1.46514, 0.66 ) }
    dend_24 { pt3dadd( -115.683, -15.0131, -1.86396, 0.88 ) }
    dend_24 { pt3dadd( -117.559, -15.8735, -3.16273, 0.44 ) }
    dend_24 { pt3dadd( -118.218, -16.1415, -3.60644, 0.29 ) }
    dend_24 { pt3dadd( -119.225, -16.4834, -4.1697, 0.29 ) }
    dend_24 { pt3dadd( -120.014, -16.7336, -4.56129, 0.66 ) }
    dend_24 { pt3dadd( -120.755, -16.9881, -4.90817, 0.66 ) }
    dend_24 { pt3dadd( -121.305, -17.2075, -5.11159, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_24 { pt3dadd( -122.476, -17.7648, -5.57658, 0.37 ) }
    dend_24 { pt3dadd( -123.673, -18.3752, -6.1968, 0.29 ) }
    dend_24 { pt3dadd( -124.146, -18.6054, -6.48718, 0.29 ) }
    dend_24 { pt3dadd( -125.387, -19.1469, -7.37575, 0.29 ) }
    dend_24 { pt3dadd( -126.561, -19.5904, -8.2998, 1.25 ) }
    dend_24 { pt3dadd( -129.101, -20.3191, -10.3926, 0.29 ) }
    dend_24 { pt3dadd( -129.887, -20.483, -11.0779, 0.29 ) }
    dend_24 { pt3dadd( -130.34, -20.5417, -11.4926, 0.59 ) }
    dend_24 { pt3dadd( -131.267, -20.5997, -12.3078, 0.44 ) }
    dend_24 { pt3dadd( -131.795, -20.6009, -12.7254, 0.22 ) }
    dend_24 { pt3dadd( -132.402, -20.5766, -13.1463, 0.81 ) }
    dend_24 { pt3dadd( -134.024, -20.4802, -13.8522, 0.44 ) }
    dend_24 { pt3dadd( -134.908, -20.4509, -14.1306, 0.59 ) }
    dend_24 { pt3dadd( -135.42, -20.4467, -14.2469, 0.59 ) }
    dend_24 { pt3dadd( -136.691, -20.4472, -14.3496, 0.29 ) }
    dend_24 { pt3dadd( -137.79, -20.4414, -14.3125, 0.59 ) }
    dend_24 { pt3dadd( -138.434, -20.4271, -14.1795, 0.59 ) }
    dend_24 { pt3dadd( -139.616, -20.3734, -13.7555, 0.29 ) }
    dend_24 { pt3dadd( -140.531, -20.3201, -13.3435, 0.29 ) }
    dend_24 { pt3dadd( -142.088, -20.1825, -12.4862, 0.74 ) }
    dend_24 { pt3dadd( -142.797, -20.0954, -12.0231, 0.74 ) }
    dend_24 { pt3dadd( -144.002, -19.8942, -11.1694, 0.37 ) }
    dend_24 { pt3dadd( -144.878, -19.6766, -10.5191, 0.37 ) }
    dend_24 { pt3dadd( -145.609, -19.4053, -9.95187, 0.44 ) }
    dend_24 { pt3dadd( -146.419, -18.995, -9.35086, 0.74 ) }
    dend_24 { pt3dadd( -146.925, -18.6705, -9.02892, 0.74 ) }
    dend_24 { pt3dadd( -147.505, -18.2333, -8.70673, 0.37 ) }
    dend_24 { pt3dadd( -148.049, -17.7396, -8.45669, 0.59 ) }
    dend_24 { pt3dadd( -148.664, -17.0796, -8.18683, 0.37 ) }
    dend_24 { pt3dadd( -149.143, -16.5263, -8.0061, 0.29 ) }
    dend_24 { pt3dadd( -149.481, -16.1198, -7.89375, 0.52 ) }
    dend_24 { pt3dadd( -149.932, -15.5987, -7.7533, 0.74 ) }
    dend_24 { pt3dadd( -150.633, -14.8663, -7.54214, 0.29 ) }
    dend_24 { pt3dadd( -151.012, -14.5153, -7.43342, 0.74 ) }
    dend_24 { pt3dadd( -151.559, -14.0677, -7.2909, 0.74 ) }
    dend_24 { pt3dadd( -152.327, -13.4942, -7.12622, 0.29 ) }
    dend_24 { pt3dadd( -153.131, -12.9486, -6.99101, 0.29 ) }
    dend_24 { pt3dadd( -153.955, -12.463, -6.90256, 0.29 ) }
    dend_24 { pt3dadd( -154.885, -11.981, -6.84808, 0.29 ) }
    dend_24 { pt3dadd( -155.819, -11.5347, -6.85203, 0.29 ) }
    dend_24 { pt3dadd( -156.819, -11.0994, -6.91811, 0.96 ) }
    dend_24 { pt3dadd( -157.307, -10.9151, -6.97343, 0.96 ) }
    dend_24 { pt3dadd( -158.772, -10.4226, -7.18413, 0.29 ) }
    dend_24 { pt3dadd( -159.192, -10.2994, -7.2541, 0.66 ) }
    dend_24 { pt3dadd( -160.059, -10.0841, -7.39733, 0.66 ) }
    dend_24 { pt3dadd( -161.025, -9.88118, -7.53048, 0.29 ) }
    dend_24 { pt3dadd( -161.75, -9.76418, -7.58278, 0.29 ) }
    dend_24 { pt3dadd( -162.205, -9.70105, -7.60584, 0.66 ) }
    dend_24 { pt3dadd( -162.703, -9.63723, -7.61822, 0.88 ) }
    dend_24 { pt3dadd( -163.502, -9.53753, -7.62589, 0.66 ) }
    dend_24 { pt3dadd( -164.09, -9.43886, -7.63121, 0.15 ) }
    dend_24 { pt3dadd( -164.925, -9.2475, -7.64893, 0.15 ) }
    dend_24 { pt3dadd( -165.724, -9.02077, -7.69163, 0.15 ) }
    dend_24 { pt3dadd( -166.375, -8.80126, -7.74121, 0.81 ) }
    dend_24 { pt3dadd( -166.923, -8.59131, -7.82217, 1.03 ) }
    dend_24 { pt3dadd( -168.377, -8.02584, -8.10464, 0.29 ) }
    dend_24 { pt3dadd( -169.138, -7.73013, -8.26797, 0.81 ) }
    dend_24 { pt3dadd( -169.721, -7.49404, -8.41687, 0.81 ) }
    dend_24 { pt3dadd( -170.821, -7.0666, -8.70506, 0.29 ) }
    dend_24 { pt3dadd( -171.953, -6.68157, -9.06654, 0.29 ) }
    dend_24 { pt3dadd( -172.782, -6.45822, -9.35493, 0.29 ) }
    dend_24 { pt3dadd( -173.796, -6.27427, -9.74645, 0.29 ) }
    dend_24 { pt3dadd( -174.511, -6.21589, -10.1279, 1.18 ) }
    dend_24 { pt3dadd( -175.152, -6.24635, -10.5762, 1.18 ) }
    dend_24 { pt3dadd( -176.105, -6.44844, -11.4586, 0.52 ) }
    dend_24 { pt3dadd( -176.638, -6.63046, -12.0335, 0.88 ) }
    dend_24 { pt3dadd( -177.123, -6.84935, -12.6548, 0.88 ) }
    dend_24 { pt3dadd( -178.404, -7.5646, -14.5549, 0.44 ) }
    dend_24 { pt3dadd( -178.994, -7.90415, -15.4563, 0.44 ) }
    dend_24 { pt3dadd( -179.476, -8.16016, -16.2309, 0.74 ) }
    dend_24 { pt3dadd( -179.783, -8.2873, -16.713, 0.74 ) }
    dend_24 { pt3dadd( -180.588, -8.53327, -17.9215, 0.44 ) }
    dend_24 { pt3dadd( -181.19, -8.65525, -18.6997, 0.44 ) }
    dend_24 { pt3dadd( -181.729, -8.70426, -19.2438, 0.88 ) }
    dend_24 { pt3dadd( -182.28, -8.72552, -19.7256, 0.88 ) }
    dend_24 { pt3dadd( -182.87, -8.73818, -20.1933, 0.88 ) }
    dend_24 { pt3dadd( -184.042, -8.80697, -21.1329, 0.52 ) }
    dend_24 { pt3dadd( -185.047, -8.92636, -21.9316, 0.52 ) }
    dend_24 { pt3dadd( -185.657, -9.05092, -22.4072, 0.59 ) }
    dend_24 { pt3dadd( -186.295, -9.24535, -22.9028, 0.44 ) }
    dend_24 { pt3dadd( -186.971, -9.49312, -23.4015, 0.44 ) }
    dend_24 { pt3dadd( -187.827, -9.79628, -23.9868, 0.44 ) }
    dend_24 { pt3dadd( -188.679, -10.0565, -24.5248, 0.88 ) }
    dend_24 { pt3dadd( -189.236, -10.216, -24.8752, 0.88 ) }
    dend_24 { pt3dadd( -189.964, -10.4185, -25.3435, 0.37 ) }
    dend_24 { pt3dadd( -190.726, -10.59, -25.8442, 0.37 ) }
    dend_24 { pt3dadd( -191.823, -10.7807, -26.5322, 0.59 ) }
    dend_24 { pt3dadd( -193.21, -10.9375, -27.3316, 0.37 ) }
    dend_24 { pt3dadd( -193.697, -10.9832, -27.6022, 0.74 ) }
    dend_24 { pt3dadd( -194.553, -11.0311, -28.0655, 0.74 ) }
    dend_24 { pt3dadd( -195.971, -11.043, -28.7746, 0.37 ) }
    dend_24 { pt3dadd( -196.511, -11.041, -29.0122, 0.59 ) }
    dend_24 { pt3dadd( -197.778, -11.0143, -29.4805, 0.29 ) }
    dend_24 { pt3dadd( -198.714, -10.971, -29.7439, 0.29 ) }
    dend_24 { pt3dadd( -199.569, -10.9603, -29.9372, 0.29 ) }
    dend_24 { pt3dadd( -200.789, -10.9879, -30.1686, 0.59 ) }
    dend_24 { pt3dadd( -201.195, -11.012, -30.2281, 1.11 ) }
    dend_24 { pt3dadd( -201.514, -11.036, -30.2738, 1.4 ) }
    dend_24 { pt3dadd( -202.494, -11.1669, -30.396, 0.81 ) }
    dend_24 { pt3dadd( -203.517, -11.3491, -30.5295, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -204.449, -11.5955, -30.6593, 0.22 ) }
    dend_24 { pt3dadd( -205.141, -11.83, -30.7539, 0.22 ) }
    dend_24 { pt3dadd( -206.279, -12.2929, -30.9457, 0.22 ) }
    dend_24 { pt3dadd( -207.53, -12.8997, -31.1971, 0.22 ) }
    dend_24 { pt3dadd( -207.778, -13.0406, -31.2558, 0.44 ) }
    dend_24 { pt3dadd( -208.215, -13.3292, -31.3758, 0.44 ) }
    dend_24 { pt3dadd( -208.665, -13.6844, -31.5458, 0.22 ) }
    dend_24 { pt3dadd( -209.418, -14.3527, -31.9397, 0.44 ) }
    dend_24 { pt3dadd( -209.758, -14.6588, -32.1853, 0.44 ) }
    dend_24 { pt3dadd( -210.377, -15.1652, -32.6674, 0.22 ) }
    dend_24 { pt3dadd( -210.997, -15.6064, -33.11, 0.22 ) }
    dend_24 { pt3dadd( -211.877, -16.1358, -33.6723, 0.59 ) }
    dend_24 { pt3dadd( -212.135, -16.2654, -33.824, 0.59 ) }
    dend_24 { pt3dadd( -213.793, -16.8917, -34.8621, 0.29 ) }
    dend_24 { pt3dadd( -214.382, -17.0946, -35.2303, 0.29 ) }
    dend_24 { pt3dadd( -215.273, -17.3672, -35.7805, 0.29 ) }
    dend_24 { pt3dadd( -215.884, -17.5346, -36.1317, 0.81 ) }
    dend_24 { pt3dadd( -216.432, -17.6666, -36.4105, 0.81 ) }
    dend_24 { pt3dadd( -218.61, -18.0686, -37.5607, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 19/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 216.685, -4.97035, -23.0486, 0.29 ) }
    dend_20 { pt3dadd( 217.609, -5.9365, -23.2191, 0.29 ) }
    dend_20 { pt3dadd( 218.201, -6.45747, -23.4461, 0.29 ) }
    dend_20 { pt3dadd( 219.069, -7.12372, -24.0363, 0.52 ) }
    dend_20 { pt3dadd( 219.295, -7.32079, -24.1433, 0.52 ) }
    dend_20 { pt3dadd( 219.567, -7.57495, -24.2403, 0.37 ) }
    dend_20 { pt3dadd( 220.077, -8.05079, -24.4218, 0.52 ) }
    dend_20 { pt3dadd( 221.223, -8.99732, -24.8489, 0.37 ) }
    dend_20 { pt3dadd( 222.333, -9.89598, -25.2865, 0.88 ) }
    dend_20 { pt3dadd( 224.514, -11.787, -26.171, 0.29 ) }
    dend_20 { pt3dadd( 224.796, -12.0649, -26.2561, 0.74 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 30/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 216.685, -4.97035, -23.0486, 0.29 ) }
    dend_19 { pt3dadd( 217.898, -4.35293, -23.925, 0.29 ) }
    dend_19 { pt3dadd( 218.422, -4.15656, -24.2545, 0.44 ) }
    dend_19 { pt3dadd( 219.181, -3.89019, -24.6946, 0.44 ) }
    dend_19 { pt3dadd( 219.986, -3.59477, -25.1221, 0.74 ) }
    dend_19 { pt3dadd( 221.083, -3.16969, -25.672, 0.74 ) }
    dend_19 { pt3dadd( 222.169, -2.725, -26.1934, 0.44 ) }
    dend_19 { pt3dadd( 223.377, -2.25259, -26.7152, 0.66 ) }
    dend_19 { pt3dadd( 224.005, -1.9829, -26.9735, 0.66 ) }
    dend_19 { pt3dadd( 225.038, -1.41411, -27.4401, 0.74 ) }
    dend_19 { pt3dadd( 225.501, -1.08755, -27.6664, 0.29 ) }
    dend_19 { pt3dadd( 226.011, -0.636941, -27.9364, 0.37 ) }
    dend_19 { pt3dadd( 226.624, -0.0432507, -28.2095, 0.81 ) }
    dend_19 { pt3dadd( 226.965, 0.294401, -28.3272, 1.03 ) }
    dend_19 { pt3dadd( 228.703, 1.93539, -28.7617, 0.29 ) }
    dend_19 { pt3dadd( 229.684, 2.8393, -28.9328, 0.29 ) }
    dend_19 { pt3dadd( 231.123, 4.15567, -29.0966, 0.29 ) }
    dend_19 { pt3dadd( 232.377, 5.3006, -29.2259, 0.29 ) }
    dend_19 { pt3dadd( 233.42, 6.26309, -29.3486, 1.03 ) }
    dend_19 { pt3dadd( 234.008, 6.82248, -29.446, 1.03 ) }
    dend_19 { pt3dadd( 234.616, 7.40091, -29.5702, 1.03 ) }
    dend_19 { pt3dadd( 235.107, 7.87067, -29.7736, 0.66 ) }
    dend_19 { pt3dadd( 236.079, 8.83959, -30.4088, 0.52 ) }
    dend_19 { pt3dadd( 236.647, 9.5528, -30.9415, 0.52 ) }
    dend_19 { pt3dadd( 237.158, 10.3429, -31.5206, 0.37 ) }
    dend_19 { pt3dadd( 237.644, 11.1606, -32.0724, 0.37 ) }
    dend_19 { pt3dadd( 238.034, 11.7659, -32.467, 0.29 ) }
    dend_19 { pt3dadd( 238.723, 12.7319, -33.0997, 0.29 ) }
    dend_19 { pt3dadd( 239.671, 13.9657, -33.8512, 0.29 ) }
    dend_19 { pt3dadd( 240.038, 14.4641, -34.1613, 0.29 ) }
    dend_19 { pt3dadd( 240.481, 15.1595, -34.5999, 0.29 ) }
    dend_19 { pt3dadd( 241.018, 16.0882, -35.2161, 0.81 ) }
    dend_19 { pt3dadd( 241.592, 17.0208, -35.8773, 1.03 ) }
    dend_19 { pt3dadd( 242.011, 17.5272, -36.2797, 1.03 ) }
    dend_19 { pt3dadd( 242.961, 18.3779, -36.9957, 0.29 ) }
    dend_19 { pt3dadd( 243.742, 19.0227, -37.4552, 0.74 ) }
    dend_19 { pt3dadd( 244.19, 19.3951, -37.6548, 1.11 ) }
    dend_19 { pt3dadd( 244.728, 19.8292, -37.8196, 1.11 ) }
    dend_19 { pt3dadd( 246.12, 20.8255, -38.0916, 0.29 ) }
    dend_19 { pt3dadd( 247.168, 21.4511, -38.2379, 0.29 ) }
    dend_19 { pt3dadd( 248.353, 21.9676, -38.3868, 0.29 ) }
    dend_19 { pt3dadd( 249.286, 22.2807, -38.5265, 0.29 ) }
    dend_19 { pt3dadd( 250.076, 22.5011, -38.6807, 0.74 ) }
    dend_19 { pt3dadd( 250.987, 22.7274, -38.932, 0.74 ) }
    dend_19 { pt3dadd( 252.198, 22.9811, -39.3612, 0.37 ) }
    dend_19 { pt3dadd( 253.731, 23.2352, -40.0012, 0.96 ) }
    dend_19 { pt3dadd( 254.344, 23.3267, -40.3182, 0.96 ) }
    dend_19 { pt3dadd( 255.422, 23.4805, -40.9527, 0.29 ) }
    dend_19 { pt3dadd( 256.545, 23.6881, -41.7456, 0.29 ) }
    dend_19 { pt3dadd( 256.967, 23.784, -42.0724, 0.59 ) }
    dend_19 { pt3dadd( 257.61, 23.9781, -42.6189, 0.59 ) }
    dend_19 { pt3dadd( 258.771, 24.4603, -43.6596, 0.29 ) }
    dend_19 { pt3dadd( 259.472, 24.7736, -44.3121, 0.29 ) }
    dend_19 { pt3dadd( 260.731, 25.3442, -45.564, 1.18 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 84/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -2.36261, -26.1603, 8.02098, 1.03 ) }
    dend_4 { pt3dadd( -1.55589, -28.4744, 8.65842, 1.03 ) }
    dend_4 { pt3dadd( -0.938952, -29.9283, 9.05719, 1.03 ) }
    dend_4 { pt3dadd( -0.522782, -30.787, 9.29165, 0.74 ) }
    dend_4 { pt3dadd( 0.0708939, -31.8776, 9.57895, 0.74 ) }
    dend_4 { pt3dadd( 0.517186, -32.6621, 9.77231, 1.03 ) }
    dend_4 { pt3dadd( 0.894661, -33.3348, 9.92229, 1.25 ) }
    dend_4 { pt3dadd( 1.20906, -33.8812, 10.071, 1.33 ) }
    dend_4 { pt3dadd( 1.36816, -34.1973, 10.1154, 1.62 ) }
    dend_4 { pt3dadd( 1.66049, -34.9042, 10.1757, 1.62 ) }
    dend_4 { pt3dadd( 1.8979, -35.6405, 10.2009, 1.62 ) }
    dend_4 { pt3dadd( 2.15698, -36.7282, 10.2113, 1.47 ) }
    dend_4 { pt3dadd( 2.33314, -37.7943, 10.2367, 0.59 ) }
    dend_4 { pt3dadd( 2.44183, -38.8302, 10.2573, 0.59 ) }
    dend_4 { pt3dadd( 2.49988, -39.7762, 10.2708, 0.88 ) }
    dend_4 { pt3dadd( 2.52996, -40.4682, 10.2771, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( 2.57163, -41.0802, 10.2766, 1.55 ) }
    dend_4 { pt3dadd( 2.66319, -42.0785, 10.2649, 1.55 ) }
    dend_4 { pt3dadd( 2.77529, -43.0995, 10.2428, 0.96 ) }
    dend_4 { pt3dadd( 2.88403, -44.0582, 10.2178, 0.74 ) }
    dend_4 { pt3dadd( 2.9344, -44.5877, 10.2013, 0.74 ) }
    dend_4 { pt3dadd( 3.02774, -45.5674, 10.1643, 0.74 ) }
    dend_4 { pt3dadd( 3.13118, -46.6428, 10.1127, 1.33 ) }
    dend_4 { pt3dadd( 3.2862, -48.0546, 10.0214, 1.18 ) }
    dend_4 { pt3dadd( 3.4244, -49.2476, 9.97229, 1.18 ) }
    dend_4 { pt3dadd( 3.48745, -49.9403, 9.94793, 1.62 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 10/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.36261, -26.1603, 8.02098, 1.03 ) }
    dend_3 { pt3dadd( -3.17547, -27.7166, 10.8591, 1.03 ) }
    dend_3 { pt3dadd( -3.68253, -28.8109, 12.6415, 1.03 ) }
    dend_3 { pt3dadd( -4.59489, -30.7657, 15.6018, 0.81 ) }
    dend_3 { pt3dadd( -5.49639, -32.644, 18.3595, 0.66 ) }
    dend_3 { pt3dadd( -5.80418, -33.2957, 19.2768, 0.66 ) }
    dend_3 { pt3dadd( -6.09431, -33.941, 20.136, 0.66 ) }
    dend_3 { pt3dadd( -6.39583, -34.87, 21.2161, 0.52 ) }
    dend_3 { pt3dadd( -6.6266, -35.945, 22.2814, 0.52 ) }
    dend_3 { pt3dadd( -6.80688, -37.3468, 23.3749, 0.81 ) }
    dend_3 { pt3dadd( -6.86695, -38.3579, 23.9969, 0.66 ) }
    dend_3 { pt3dadd( -6.91428, -39.2395, 24.4823, 0.96 ) }
    dend_3 { pt3dadd( -7.00809, -41.2108, 25.5065, 0.52 ) }
    dend_3 { pt3dadd( -6.98983, -42.4061, 26.1, 1.11 ) }
    dend_3 { pt3dadd( -6.89742, -43.4789, 26.5395, 1.03 ) }
    dend_3 { pt3dadd( -6.80551, -44.2957, 26.7913, 0.88 ) }
    dend_3 { pt3dadd( -6.74385, -44.9773, 26.9725, 0.88 ) }
    dend_3 { pt3dadd( -6.74142, -46.0965, 27.2142, 0.52 ) }
    // Section: dend_49, id: dend_49, parent: dend_27 (entry count 28/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 2.68233, 43.1078, 10.2609, 0.74 ) }
    dend_49 { pt3dadd( 3.75024, 46.0213, 13.2468, 0.74 ) }
    dend_49 { pt3dadd( 4.27479, 47.7358, 14.8206, 0.59 ) }
    dend_49 { pt3dadd( 4.55334, 48.8973, 15.8069, 0.59 ) }
    dend_49 { pt3dadd( 4.90497, 50.886, 17.3207, 0.59 ) }
    dend_49 { pt3dadd( 5.09147, 52.3462, 18.3001, 0.59 ) }
    dend_49 { pt3dadd( 5.23466, 53.8497, 19.1719, 0.59 ) }
    dend_49 { pt3dadd( 5.42509, 56.6682, 20.2765, 0.66 ) }
    dend_49 { pt3dadd( 5.48678, 57.9375, 20.6567, 0.66 ) }
    dend_49 { pt3dadd( 5.44694, 59.8277, 21.0989, 1.03 ) }
    dend_49 { pt3dadd( 5.32307, 61.6131, 21.3938, 1.03 ) }
    dend_49 { pt3dadd( 5.10459, 63.772, 21.6278, 0.44 ) }
    dend_49 { pt3dadd( 4.97795, 64.7562, 21.6108, 0.59 ) }
    dend_49 { pt3dadd( 4.72363, 66.2938, 21.2745, 0.59 ) }
    dend_49 { pt3dadd( 4.48745, 67.5727, 20.8298, 1.11 ) }
    dend_49 { pt3dadd( 4.38272, 68.1533, 20.5599, 1.33 ) }
    dend_49 { pt3dadd( 4.25082, 69.0314, 20.1037, 1.33 ) }
    dend_49 { pt3dadd( 4.04937, 70.9009, 19.0708, 0.81 ) }
    dend_49 { pt3dadd( 4.07196, 72.4199, 18.2945, 0.44 ) }
    dend_49 { pt3dadd( 4.38787, 73.6532, 17.6863, 0.44 ) }
    dend_49 { pt3dadd( 5.00315, 74.888, 16.9658, 0.74 ) }
    dend_49 { pt3dadd( 5.75352, 76.0674, 16.2486, 0.66 ) }
    dend_49 { pt3dadd( 6.16556, 76.6405, 15.8974, 0.66 ) }
    dend_49 { pt3dadd( 7.01378, 77.961, 15.1899, 0.52 ) }
    dend_49 { pt3dadd( 7.84622, 79.57, 14.3514, 0.37 ) }
    dend_49 { pt3dadd( 8.63551, 81.664, 13.2592, 0.37 ) }
    dend_49 { pt3dadd( 8.88944, 82.5892, 12.8652, 0.37 ) }
    dend_49 { pt3dadd( 9.22912, 84.1527, 12.3556, 0.37 ) }
    dend_49 { pt3dadd( 9.76999, 86.7048, 11.7642, 0.37 ) }
    dend_49 { pt3dadd( 10.1337, 88.2708, 11.6878, 0.88 ) }
    dend_49 { pt3dadd( 10.4408, 89.2807, 11.8862, 0.88 ) }
    dend_49 { pt3dadd( 11.1998, 91.3275, 12.6996, 0.74 ) }
    dend_49 { pt3dadd( 11.7431, 92.6313, 13.4017, 0.59 ) }
    dend_49 { pt3dadd( 12.4166, 94.1131, 14.4777, 0.59 ) }
    dend_49 { pt3dadd( 13.5944, 96.4957, 16.5969, 0.81 ) }
    dend_49 { pt3dadd( 14.446, 98.2498, 18.3402, 0.59 ) }
    dend_49 { pt3dadd( 14.7967, 99.0881, 19.2128, 0.59 ) }
    dend_49 { pt3dadd( 15.0455, 99.8889, 20.0473, 1.11 ) }
    dend_49 { pt3dadd( 15.2813, 101.235, 21.4048, 0.88 ) }
    dend_49 { pt3dadd( 15.3162, 102.425, 22.4803, 0.88 ) }
    dend_49 { pt3dadd( 15.2455, 103.814, 23.3893, 0.74 ) }
    dend_49 { pt3dadd( 15.1623, 105.249, 24.1088, 0.59 ) }
    dend_49 { pt3dadd( 15.1499, 106.365, 24.5683, 0.44 ) }
    dend_49 { pt3dadd( 15.1933, 107.503, 24.9128, 0.81 ) }
    dend_49 { pt3dadd( 15.2854, 108.621, 25.1212, 1.03 ) }
    dend_49 { pt3dadd( 15.454, 110.579, 25.3645, 0.52 ) }
    dend_49 { pt3dadd( 15.5393, 111.656, 25.4486, 0.52 ) }
    dend_49 { pt3dadd( 15.6174, 112.733, 25.5191, 0.96 ) }
    dend_49 { pt3dadd( 15.6789, 113.969, 25.6081, 0.96 ) }
    dend_49 { pt3dadd( 15.6869, 115.241, 25.7044, 0.66 ) }
    dend_49 { pt3dadd( 15.6141, 117.046, 25.8423, 0.37 ) }
    dend_49 { pt3dadd( 15.5228, 118.18, 25.9252, 0.37 ) }
    dend_49 { pt3dadd( 15.473, 118.945, 25.974, 0.37 ) }
    dend_49 { pt3dadd( 15.4044, 120.282, 26.0569, 0.37 ) }
    dend_49 { pt3dadd( 15.3798, 121.356, 26.1216, 0.66 ) }
    dend_49 { pt3dadd( 15.426, 122.503, 26.1842, 0.66 ) }
    dend_49 { pt3dadd( 15.5852, 123.596, 26.2468, 0.81 ) }
    dend_49 { pt3dadd( 15.8183, 124.77, 26.3513, 0.52 ) }
    dend_49 { pt3dadd( 16.0382, 125.941, 26.4842, 0.37 ) }
    dend_49 { pt3dadd( 16.1529, 126.922, 26.6119, 0.37 ) }
    dend_49 { pt3dadd( 16.1848, 127.732, 26.7221, 0.66 ) }
    dend_49 { pt3dadd( 16.1605, 128.933, 26.8803, 0.66 ) }
    dend_49 { pt3dadd( 16.142, 130.329, 27.0452, 0.37 ) }
    dend_49 { pt3dadd( 16.1776, 131.199, 27.1298, 0.37 ) }
    dend_49 { pt3dadd( 16.4157, 132.884, 27.2538, 0.96 ) }
    dend_49 { pt3dadd( 16.5866, 133.728, 27.3091, 1.33 ) }
    dend_49 { pt3dadd( 16.834, 134.857, 27.3594, 1.33 ) }
    dend_49 { pt3dadd( 17.2063, 136.475, 27.4555, 1.03 ) }
    dend_49 { pt3dadd( 17.5892, 137.95, 27.562, 0.74 ) }
    dend_49 { pt3dadd( 17.9881, 139.34, 27.7021, 0.44 ) }
    dend_49 { pt3dadd( 18.2916, 140.383, 27.8414, 0.44 ) }
    dend_49 { pt3dadd( 18.571, 141.388, 27.9695, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_49 { pt3dadd( 19.0271, 143.22, 28.1791, 0.66 ) }
    dend_49 { pt3dadd( 19.2104, 144.089, 28.2948, 0.96 ) }
    dend_49 { pt3dadd( 19.282, 144.553, 28.3563, 0.96 ) }
    dend_49 { pt3dadd( 19.5069, 146.287, 28.499, 0.52 ) }
    dend_49 { pt3dadd( 19.6927, 147.741, 28.5512, 0.52 ) }
    dend_49 { pt3dadd( 19.9233, 149.404, 28.5476, 0.52 ) }
    dend_49 { pt3dadd( 20.1544, 150.77, 28.4723, 0.52 ) }
    dend_49 { pt3dadd( 20.5664, 153.066, 28.4275, 0.74 ) }
    dend_49 { pt3dadd( 20.8063, 154.532, 28.4899, 0.52 ) }
    dend_49 { pt3dadd( 20.9644, 155.594, 28.6025, 0.52 ) }
    dend_49 { pt3dadd( 21.1339, 156.772, 28.7953, 0.52 ) }
    dend_49 { pt3dadd( 21.3709, 158.217, 28.9876, 0.81 ) }
    dend_49 { pt3dadd( 21.7608, 160.272, 29.1522, 0.81 ) }
    dend_49 { pt3dadd( 22.043, 161.599, 29.2336, 0.59 ) }
    dend_49 { pt3dadd( 22.2604, 162.698, 29.2426, 0.37 ) }
    dend_49 { pt3dadd( 22.5218, 164.054, 29.232, 0.37 ) }
    dend_49 { pt3dadd( 22.8987, 166.156, 29.1795, 0.37 ) }
    dend_49 { pt3dadd( 23.0834, 167.21, 29.1293, 0.52 ) }
    dend_49 { pt3dadd( 23.364, 168.419, 29.0362, 0.52 ) }
    dend_49 { pt3dadd( 23.912, 170.423, 28.9227, 0.52 ) }
    dend_49 { pt3dadd( 24.5016, 172.548, 28.917, 0.74 ) }
    dend_49 { pt3dadd( 24.882, 173.91, 28.9957, 0.96 ) }
    dend_49 { pt3dadd( 25.2818, 175.344, 29.1682, 0.37 ) }
    dend_49 { pt3dadd( 25.7261, 176.942, 29.3892, 0.29 ) }
    dend_49 { pt3dadd( 26.0241, 177.945, 29.5389, 0.29 ) }
    dend_49 { pt3dadd( 26.4642, 179.402, 29.753, 0.81 ) }
    dend_49 { pt3dadd( 26.6443, 180.037, 29.7795, 0.81 ) }
    dend_49 { pt3dadd( 26.8069, 180.738, 29.8034, 0.96 ) }
    dend_49 { pt3dadd( 26.878, 181.304, 29.825, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.68233, 43.1078, 10.2609, 0.66 ) }
    dend_28 { pt3dadd( 2.22224, 44.7741, 7.96641, 0.66 ) }
    dend_28 { pt3dadd( 1.90834, 45.7367, 6.53861, 0.66 ) }
    dend_28 { pt3dadd( 1.78574, 46.2077, 5.81999, 0.66 ) }
    dend_28 { pt3dadd( 1.63972, 46.9333, 4.69347, 0.52 ) }
    dend_28 { pt3dadd( 1.42894, 48.0221, 3.00753, 0.81 ) }
    dend_28 { pt3dadd( 1.35262, 48.5483, 2.23171, 0.81 ) }
    dend_28 { pt3dadd( 1.32568, 49.3326, 1.13117, 0.59 ) }
    dend_28 { pt3dadd( 1.38761, 50.1682, -0.122041, 0.59 ) }
    dend_28 { pt3dadd( 1.48937, 50.8557, -1.1721, 0.44 ) }
    dend_28 { pt3dadd( 1.56636, 51.3113, -1.80956, 0.44 ) }
    dend_28 { pt3dadd( 1.74456, 52.1891, -2.90149, 0.96 ) }
    dend_28 { pt3dadd( 1.87331, 52.6895, -3.5409, 1.18 ) }
    dend_28 { pt3dadd( 2.23988, 53.926, -5.18317, 0.88 ) }
    dend_28 { pt3dadd( 2.5592, 54.904, -6.52537, 0.37 ) }
    dend_28 { pt3dadd( 2.82442, 55.5376, -7.43035, 1.03 ) }
    dend_28 { pt3dadd( 3.16471, 56.166, -8.36647, 1.03 ) }
    dend_28 { pt3dadd( 3.83196, 57.2107, -10.0868, 0.52 ) }
    dend_28 { pt3dadd( 4.12115, 57.6262, -10.7676, 0.52 ) }
    dend_28 { pt3dadd( 4.35221, 57.943, -11.2764, 0.81 ) }
    dend_28 { pt3dadd( 4.62806, 58.3413, -11.927, 0.81 ) }
    dend_28 { pt3dadd( 4.8731, 58.7741, -12.6647, 0.74 ) }
    dend_28 { pt3dadd( 5.21772, 59.8341, -14.3515, 1.03 ) }
    dend_28 { pt3dadd( 5.24293, 60.4706, -15.3021, 1.03 ) }
    dend_28 { pt3dadd( 5.02946, 61.3232, -16.63, 0.59 ) }
    dend_28 { pt3dadd( 4.78905, 61.8682, -17.4959, 0.81 ) }
    dend_28 { pt3dadd( 4.42871, 62.4174, -18.4735, 0.81 ) }
    dend_28 { pt3dadd( 4.26824, 62.6084, -18.8353, 0.66 ) }
    dend_28 { pt3dadd( 3.96146, 62.9276, -19.4518, 0.66 ) }
    dend_28 { pt3dadd( 3.17888, 63.6701, -21.0211, 0.52 ) }
    dend_28 { pt3dadd( 2.66815, 64.1426, -22.0621, 0.37 ) }
    dend_28 { pt3dadd( 1.83217, 65.0107, -24.0371, 0.29 ) }
    dend_28 { pt3dadd( 1.65413, 65.2034, -24.4924, 0.29 ) }
    dend_28 { pt3dadd( 1.36511, 65.5067, -25.2316, 0.29 ) }
    dend_28 { pt3dadd( 1.05188, 65.8421, -26.0125, 0.29 ) }
    dend_28 { pt3dadd( 0.513512, 66.4021, -27.1372, 0.81 ) }
    dend_28 { pt3dadd( 0.0372479, 66.9002, -28.0138, 0.81 ) }
    dend_28 { pt3dadd( -0.708579, 67.8043, -29.2686, 0.59 ) }
    dend_28 { pt3dadd( -0.870047, 68.0164, -29.5328, 0.59 ) }
    dend_28 { pt3dadd( -1.30199, 68.6231, -30.1611, 0.29 ) }
    dend_28 { pt3dadd( -1.68261, 69.234, -31.0289, 0.52 ) }
    dend_28 { pt3dadd( -1.74085, 69.3347, -31.2171, 0.81 ) }
    dend_28 { pt3dadd( -1.92143, 69.6344, -31.8987, 0.81 ) }
    dend_28 { pt3dadd( -2.12934, 69.96, -32.7911, 0.74 ) }
    dend_28 { pt3dadd( -2.23508, 70.0876, -33.2346, 0.88 ) }
    dend_28 { pt3dadd( -3.64237, 71.3225, -38.8625, 0.88 ) }
    dend_28 { pt3dadd( -4.06283, 71.5773, -40.4172, 0.66 ) }
    dend_28 { pt3dadd( -4.36273, 71.7131, -41.3971, 0.88 ) }
    dend_28 { pt3dadd( -4.84461, 71.8799, -42.821, 0.96 ) }
    dend_28 { pt3dadd( -5.24746, 72.0116, -43.8469, 0.52 ) }
    dend_28 { pt3dadd( -5.58417, 72.1256, -44.5386, 0.74 ) }
    dend_28 { pt3dadd( -6.49496, 72.4615, -45.5962, 0.44 ) }
    dend_28 { pt3dadd( -7.03068, 72.7154, -46.1189, 0.29 ) }
    dend_28 { pt3dadd( -7.54624, 73.0014, -46.5559, 0.29 ) }
    dend_28 { pt3dadd( -8.45749, 73.5059, -47.2289, 1.18 ) }
    dend_28 { pt3dadd( -8.85961, 73.7109, -47.5281, 1.92 ) }
    dend_28 { pt3dadd( -9.6133, 73.9829, -48.1698, 1.47 ) }
    dend_28 { pt3dadd( -10.7172, 74.232, -49.1828, 0.37 ) }
    dend_28 { pt3dadd( -11.2058, 74.2727, -49.6459, 0.29 ) }
    dend_28 { pt3dadd( -12.1517, 74.1999, -50.5025, 0.29 ) }
    dend_28 { pt3dadd( -13.2492, 73.9345, -51.4953, 0.29 ) }
    dend_28 { pt3dadd( -14.8554, 73.2494, -53.0596, 0.29 ) }
    dend_28 { pt3dadd( -15.6539, 72.7634, -53.8676, 0.29 ) }
    dend_28 { pt3dadd( -16.267, 72.3424, -54.5045, 0.29 ) }
    dend_28 { pt3dadd( -17.0384, 71.8441, -55.3434, 0.29 ) }
    dend_28 { pt3dadd( -17.5637, 71.5681, -55.9086, 0.29 ) }
    dend_28 { pt3dadd( -18.7745, 71.0863, -57.1827, 0.29 ) }
    dend_28 { pt3dadd( -19.3329, 70.8896, -57.7874, 0.29 ) }
    dend_28 { pt3dadd( -20.188, 70.6957, -58.8057, 0.29 ) }
    dend_28 { pt3dadd( -20.6522, 70.7046, -59.3707, 0.52 ) }
    dend_28 { pt3dadd( -21.1452, 70.8567, -59.9354, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -21.9114, 71.2401, -60.7256, 0.52 ) }
    dend_28 { pt3dadd( -22.7797, 71.7993, -61.5279, 0.66 ) }
    dend_28 { pt3dadd( -23.229, 72.1167, -61.9293, 0.96 ) }
    dend_28 { pt3dadd( -23.6527, 72.4213, -62.2794, 1.18 ) }
    dend_28 { pt3dadd( -24.8881, 73.4011, -63.2607, 0.52 ) }
    dend_28 { pt3dadd( -25.6952, 74.1503, -63.9551, 0.29 ) }
    dend_28 { pt3dadd( -26.1051, 74.6204, -64.3649, 0.52 ) }
    dend_28 { pt3dadd( -26.2607, 74.8558, -64.5504, 0.74 ) }
    dend_28 { pt3dadd( -26.5599, 75.3746, -64.9644, 0.74 ) }
    dend_28 { pt3dadd( -27.0535, 76.2547, -65.7003, 0.44 ) }
    dend_28 { pt3dadd( -27.5622, 77.171, -66.5213, 0.44 ) }
    dend_28 { pt3dadd( -28.099, 78.104, -67.4165, 0.37 ) }
    dend_28 { pt3dadd( -28.5489, 78.8057, -68.1216, 0.37 ) }
    dend_28 { pt3dadd( -29.1315, 79.5658, -68.975, 0.37 ) }
    dend_28 { pt3dadd( -29.9251, 80.527, -70.2181, 0.37 ) }
    dend_28 { pt3dadd( -30.4587, 81.1186, -71.0319, 0.88 ) }
    dend_28 { pt3dadd( -30.6085, 81.276, -71.2395, 0.88 ) }
    dend_28 { pt3dadd( -31.1565, 81.7937, -71.8969, 0.66 ) }
    dend_28 { pt3dadd( -32.1599, 82.635, -72.9498, 0.96 ) }
    dend_28 { pt3dadd( -33.4863, 83.566, -73.9917, 0.81 ) }
    dend_28 { pt3dadd( -34.4154, 84.0646, -74.482, 1.11 ) }
    dend_28 { pt3dadd( -35.5103, 84.5, -74.8197, 0.59 ) }
    dend_28 { pt3dadd( -36.9002, 84.9884, -75.1131, 0.59 ) }
    dend_28 { pt3dadd( -37.8166, 85.308, -75.2128, 0.74 ) }
    dend_28 { pt3dadd( -39.0327, 85.7309, -75.2293, 0.52 ) }
    dend_28 { pt3dadd( -39.7049, 85.9439, -75.2225, 0.52 ) }
    dend_28 { pt3dadd( -40.6481, 86.2596, -75.2684, 0.52 ) }
    dend_28 { pt3dadd( -41.6274, 86.6287, -75.3633, 0.52 ) }
    dend_28 { pt3dadd( -42.4453, 87.0421, -75.533, 0.52 ) }
    dend_28 { pt3dadd( -43.6549, 87.8192, -75.8756, 1.33 ) }
    dend_28 { pt3dadd( -44.1784, 88.2414, -76.0472, 2.28 ) }
    dend_28 { pt3dadd( -44.7947, 88.7792, -76.2645, 2.5 ) }
    // Section: dend_16, id: dend_16, parent: dend_4 (entry count 32/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.48745, -49.9403, 9.94793, 0.59 ) }
    dend_16 { pt3dadd( 4.36303, -50.553, 10.652, 0.59 ) }
    dend_16 { pt3dadd( 4.8011, -50.9111, 10.9764, 0.59 ) }
    dend_16 { pt3dadd( 6.18698, -52.3188, 11.9927, 0.44 ) }
    dend_16 { pt3dadd( 6.42812, -52.6379, 12.195, 0.44 ) }
    dend_16 { pt3dadd( 6.76885, -53.1717, 12.5014, 0.44 ) }
    dend_16 { pt3dadd( 7.20659, -53.9391, 12.9356, 0.44 ) }
    dend_16 { pt3dadd( 7.43105, -54.458, 13.1964, 0.44 ) }
    dend_16 { pt3dadd( 7.72408, -55.2277, 13.5724, 0.44 ) }
    dend_16 { pt3dadd( 8.09362, -56.2546, 14.0506, 0.44 ) }
    dend_16 { pt3dadd( 8.28417, -56.8283, 14.3835, 0.81 ) }
    dend_16 { pt3dadd( 8.60268, -57.8605, 15.1089, 0.59 ) }
    dend_16 { pt3dadd( 8.6903, -58.1523, 15.3436, 0.59 ) }
    dend_16 { pt3dadd( 8.9339, -58.9651, 16.1717, 0.29 ) }
    dend_16 { pt3dadd( 9.01985, -59.3267, 16.5895, 0.29 ) }
    dend_16 { pt3dadd( 9.1689, -60.314, 17.7258, 0.29 ) }
    dend_16 { pt3dadd( 9.18801, -60.9254, 18.3703, 0.29 ) }
    dend_16 { pt3dadd( 9.11629, -61.6058, 19.015, 1.03 ) }
    dend_16 { pt3dadd( 8.66893, -63.6045, 20.619, 1.11 ) }
    dend_16 { pt3dadd( 8.40307, -64.4351, 21.2368, 1.33 ) }
    dend_16 { pt3dadd( 8.04034, -65.3785, 21.8388, 0.66 ) }
    dend_16 { pt3dadd( 7.21264, -67.0796, 22.3991, 0.15 ) }
    dend_16 { pt3dadd( 6.87204, -67.5751, 22.2194, 0.15 ) }
    dend_16 { pt3dadd( 6.49283, -68.0186, 21.7426, 0.15 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 56/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 3.48745, -49.9403, 9.94793, 1.33 ) }
    dend_5 { pt3dadd( 3.02948, -51.4084, 9.62271, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -44.7947, 88.7792, -76.2645, 0.37 ) }
    dend_30 { pt3dadd( -45.9427, 88.9714, -77.116, 0.37 ) }
    dend_30 { pt3dadd( -46.4562, 89.0173, -77.5066, 0.37 ) }
    dend_30 { pt3dadd( -47.1501, 88.9951, -78.0461, 0.37 ) }
    dend_30 { pt3dadd( -47.8955, 88.8642, -78.7341, 0.88 ) }
    dend_30 { pt3dadd( -48.2076, 88.7939, -79.0466, 0.88 ) }
    dend_30 { pt3dadd( -48.74, 88.6884, -79.591, 0.52 ) }
    dend_30 { pt3dadd( -49.1358, 88.6199, -80.0384, 0.29 ) }
    dend_30 { pt3dadd( -49.6189, 88.5727, -80.6554, 0.29 ) }
    dend_30 { pt3dadd( -50.2888, 88.6196, -81.6122, 0.37 ) }
    dend_30 { pt3dadd( -50.5166, 88.7135, -81.9343, 0.37 ) }
    dend_30 { pt3dadd( -50.8711, 88.9598, -82.4273, 0.37 ) }
    dend_30 { pt3dadd( -51.2469, 89.2605, -82.8737, 0.37 ) }
    dend_30 { pt3dadd( -51.9117, 89.764, -83.6198, 0.66 ) }
    dend_30 { pt3dadd( -52.3364, 90.0373, -84.062, 0.66 ) }
    dend_30 { pt3dadd( -52.9971, 90.3447, -84.6569, 0.37 ) }
    dend_30 { pt3dadd( -53.4462, 90.483, -85.0303, 0.29 ) }
    dend_30 { pt3dadd( -54.2805, 90.6402, -85.6634, 0.29 ) }
    dend_30 { pt3dadd( -55.1535, 90.7457, -86.1929, 0.29 ) }
    dend_30 { pt3dadd( -55.9815, 90.8085, -86.5624, 0.29 ) }
    dend_30 { pt3dadd( -56.8801, 90.8759, -86.9435, 0.29 ) }
    dend_30 { pt3dadd( -57.5136, 90.9402, -87.2125, 0.88 ) }
    dend_30 { pt3dadd( -57.8451, 90.9907, -87.3618, 1.03 ) }
    dend_30 { pt3dadd( -58.7975, 91.2498, -87.8651, 0.29 ) }
    dend_30 { pt3dadd( -59.5499, 91.53, -88.2971, 0.29 ) }
    dend_30 { pt3dadd( -60.5424, 91.8988, -88.9613, 0.96 ) }
    dend_30 { pt3dadd( -60.9915, 92.0533, -89.3204, 1.25 ) }
    dend_30 { pt3dadd( -61.1554, 92.1022, -89.4873, 1.47 ) }
    dend_30 { pt3dadd( -61.878, 92.2605, -90.283, 0.96 ) }
    dend_30 { pt3dadd( -62.4431, 92.37, -91.1565, 0.52 ) }
    dend_30 { pt3dadd( -63.0783, 92.5348, -92.3124, 0.44 ) }
    dend_30 { pt3dadd( -63.5561, 92.6804, -93.2422, 0.44 ) }
    dend_30 { pt3dadd( -64.3232, 92.9538, -94.8374, 1.11 ) }
    dend_30 { pt3dadd( -64.6123, 93.0831, -95.4575, 1.11 ) }
    dend_30 { pt3dadd( -66.1388, 93.9317, -98.8289, 0.29 ) }
    dend_30 { pt3dadd( -66.4926, 94.1691, -99.6882, 0.29 ) }
    dend_30 { pt3dadd( -66.7226, 94.3388, -100.307, 0.96 ) }
    dend_30 { pt3dadd( -66.9501, 94.4939, -100.901, 1.18 ) }
    dend_30 { pt3dadd( -67.3637, 94.7567, -101.817, 0.88 ) }
    dend_30 { pt3dadd( -67.8664, 95.0308, -102.767, 0.52 ) }
    dend_30 { pt3dadd( -68.2303, 95.1423, -103.302, 0.52 ) }
    dend_30 { pt3dadd( -68.6479, 95.1932, -103.957, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( -69.4771, 95.2172, -105.404, 0.37 ) }
    dend_30 { pt3dadd( -69.927, 95.2165, -106.203, 0.37 ) }
    dend_30 { pt3dadd( -70.4042, 95.2183, -107.052, 0.37 ) }
    dend_30 { pt3dadd( -71.0695, 95.2441, -108.23, 0.37 ) }
    dend_30 { pt3dadd( -71.5666, 95.2952, -109.077, 0.37 ) }
    dend_30 { pt3dadd( -72.1224, 95.3529, -109.993, 0.37 ) }
    dend_30 { pt3dadd( -72.5025, 95.3113, -110.683, 1.11 ) }
    dend_30 { pt3dadd( -72.6138, 95.2787, -110.925, 1.47 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 8/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -44.7947, 88.7792, -76.2645, 0.29 ) }
    dend_29 { pt3dadd( -45.4988, 91.4547, -78.0936, 0.29 ) }
    dend_29 { pt3dadd( -45.7633, 92.3267, -78.5564, 0.29 ) }
    dend_29 { pt3dadd( -45.9287, 92.8699, -78.7979, 0.29 ) }
    dend_29 { pt3dadd( -46.356, 94.102, -79.3287, 0.29 ) }
    dend_29 { pt3dadd( -46.5064, 94.4949, -79.4853, 0.52 ) }
    dend_29 { pt3dadd( -46.7845, 95.1805, -79.7276, 0.37 ) }
    dend_29 { pt3dadd( -47.0863, 95.7615, -79.8077, 0.66 ) }
    dend_29 { pt3dadd( -47.2812, 96.0959, -79.8341, 0.81 ) }
    dend_29 { pt3dadd( -47.9431, 97.2019, -79.8482, 0.29 ) }
    dend_29 { pt3dadd( -48.4605, 98.0255, -79.8193, 0.52 ) }
    dend_29 { pt3dadd( -48.8, 98.5268, -79.7815, 0.74 ) }
    dend_29 { pt3dadd( -49.615, 99.6067, -79.6387, 0.29 ) }
    dend_29 { pt3dadd( -50.3527, 100.506, -79.4534, 0.29 ) }
    dend_29 { pt3dadd( -50.7907, 100.984, -79.2994, 1.25 ) }
    dend_29 { pt3dadd( -51.0596, 101.268, -79.1702, 1.84 ) }
    dend_29 { pt3dadd( -51.3972, 101.605, -78.9873, 1.84 ) }
    dend_29 { pt3dadd( -52.6204, 102.686, -78.3157, 0.29 ) }
    dend_29 { pt3dadd( -53.0338, 103.003, -78.0753, 0.29 ) }
    dend_29 { pt3dadd( -54.3591, 103.833, -77.2271, 0.29 ) }
    dend_29 { pt3dadd( -54.9331, 104.158, -76.7996, 0.52 ) }
    dend_29 { pt3dadd( -55.2641, 104.338, -76.5219, 0.29 ) }
    dend_29 { pt3dadd( -56.057, 104.783, -75.7581, 0.29 ) }
    dend_29 { pt3dadd( -56.4431, 105.018, -75.3306, 0.29 ) }
    dend_29 { pt3dadd( -57.4554, 105.688, -74.1975, 0.88 ) }
    dend_29 { pt3dadd( -58.3883, 106.277, -73.1866, 0.29 ) }
    dend_29 { pt3dadd( -58.7843, 106.513, -72.7966, 0.29 ) }
    dend_29 { pt3dadd( -59.5382, 106.991, -72.0979, 0.81 ) }
    dend_29 { pt3dadd( -59.9166, 107.274, -71.7471, 0.81 ) }
    dend_29 { pt3dadd( -60.4891, 107.765, -71.2062, 0.37 ) }
    dend_29 { pt3dadd( -61.1942, 108.452, -70.5455, 0.29 ) }
    dend_29 { pt3dadd( -61.6276, 108.888, -70.1297, 0.29 ) }
    dend_29 { pt3dadd( -62.0939, 109.386, -69.661, 0.29 ) }
    dend_29 { pt3dadd( -62.4528, 109.804, -69.2722, 0.29 ) }
    dend_29 { pt3dadd( -63.2374, 110.842, -68.3103, 0.88 ) }
    dend_29 { pt3dadd( -63.417, 111.111, -68.0524, 1.25 ) }
    dend_29 { pt3dadd( -63.7282, 111.589, -67.6058, 1.25 ) }
    dend_29 { pt3dadd( -64.174, 112.247, -67.0775, 0.29 ) }
    dend_29 { pt3dadd( -64.5855, 112.795, -66.7238, 0.22 ) }
    dend_29 { pt3dadd( -65.109, 113.408, -66.4855, 0.88 ) }
    dend_29 { pt3dadd( -65.8412, 114.232, -66.4431, 0.88 ) }
    dend_29 { pt3dadd( -66.4201, 114.87, -66.4431, 0.59 ) }
    dend_29 { pt3dadd( -68.1924, 116.766, -66.5177, 0.59 ) }
    dend_29 { pt3dadd( -68.4973, 117.09, -66.5447, 0.59 ) }
    dend_29 { pt3dadd( -69.1872, 117.807, -66.6205, 0.29 ) }
    dend_29 { pt3dadd( -69.8071, 118.449, -66.6696, 0.37 ) }
    dend_29 { pt3dadd( -70.7846, 119.434, -66.6656, 0.37 ) }
    dend_29 { pt3dadd( -71.3717, 120.011, -66.5684, 0.37 ) }
    dend_29 { pt3dadd( -71.6279, 120.262, -66.4928, 0.44 ) }
    dend_29 { pt3dadd( -71.8553, 120.473, -66.4388, 0.44 ) }
    dend_29 { pt3dadd( -72.5984, 121.112, -66.3181, 0.22 ) }
    dend_29 { pt3dadd( -73.1574, 121.575, -66.2777, 0.37 ) }
    dend_29 { pt3dadd( -73.7987, 122.069, -66.2913, 0.29 ) }
    dend_29 { pt3dadd( -74.5359, 122.6, -66.3173, 0.29 ) }
    dend_29 { pt3dadd( -75.3826, 123.168, -66.346, 0.29 ) }
    dend_29 { pt3dadd( -76.2463, 123.736, -66.375, 0.29 ) }
    dend_29 { pt3dadd( -76.8002, 124.126, -66.3945, 0.29 ) }
    dend_29 { pt3dadd( -77.445, 124.651, -66.4156, 0.29 ) }
    dend_29 { pt3dadd( -78.0619, 125.26, -66.4421, 0.52 ) }
    dend_29 { pt3dadd( -78.3033, 125.58, -66.4572, 0.74 ) }
    dend_29 { pt3dadd( -78.6523, 126.247, -66.436, 0.52 ) }
    dend_29 { pt3dadd( -79.0749, 127.247, -66.334, 0.29 ) }
    dend_29 { pt3dadd( -79.3045, 127.815, -66.2542, 0.29 ) }
    dend_29 { pt3dadd( -79.5014, 128.284, -66.1886, 0.37 ) }
    dend_29 { pt3dadd( -79.708, 128.695, -66.1288, 0.37 ) }
    dend_29 { pt3dadd( -80.426, 129.82, -65.9594, 0.59 ) }
    dend_29 { pt3dadd( -81.0097, 130.558, -65.8487, 0.29 ) }
    dend_29 { pt3dadd( -82.1454, 131.783, -65.6783, 0.29 ) }
    dend_29 { pt3dadd( -83.4767, 133.081, -65.532, 0.29 ) }
    dend_29 { pt3dadd( -84.0896, 133.661, -65.4737, 0.29 ) }
    dend_29 { pt3dadd( -84.8025, 134.317, -65.4345, 0.29 ) }
    dend_29 { pt3dadd( -85.3966, 134.847, -65.4488, 0.59 ) }
    dend_29 { pt3dadd( -85.9572, 135.299, -65.4619, 0.59 ) }
    dend_29 { pt3dadd( -86.9988, 135.948, -65.4777, 0.96 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 3.02948, -51.4084, 9.62271, 0.74 ) }
    dend_7 { pt3dadd( 3.40126, -53.3373, 9.48784, 0.74 ) }
    dend_7 { pt3dadd( 3.64745, -54.4075, 9.4516, 0.74 ) }
    dend_7 { pt3dadd( 3.92978, -55.658, 9.47124, 0.96 ) }
    dend_7 { pt3dadd( 4.20987, -56.8202, 9.60688, 0.74 ) }
    dend_7 { pt3dadd( 4.54943, -58.1716, 9.8283, 0.59 ) }
    dend_7 { pt3dadd( 4.80707, -59.1969, 9.99633, 0.59 ) }
    dend_7 { pt3dadd( 5.21808, -60.6528, 10.3294, 0.59 ) }
    dend_7 { pt3dadd( 5.74341, -62.4059, 10.8116, 0.52 ) }
    dend_7 { pt3dadd( 6.46379, -64.6761, 11.5367, 0.52 ) }
    dend_7 { pt3dadd( 6.64812, -65.2941, 11.7637, 1.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 93/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.02948, -51.4084, 9.62271, 0.59 ) }
    dend_6 { pt3dadd( 1.80201, -52.6127, 9.62854, 0.59 ) }
    dend_6 { pt3dadd( 0.927767, -53.3652, 9.81857, 0.88 ) }
    dend_6 { pt3dadd( -0.0923968, -54.2011, 10.1715, 0.88 ) }
    dend_6 { pt3dadd( -1.28218, -55.1593, 10.6289, 0.59 ) }
    dend_6 { pt3dadd( -2.91092, -56.3768, 11.247, 0.59 ) }
    dend_6 { pt3dadd( -3.62341, -56.9237, 11.5545, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_6 { pt3dadd( -4.88835, -57.9075, 12.2339, 1.4 ) }
    dend_6 { pt3dadd( -5.99465, -58.771, 12.8603, 1.03 ) }
    dend_6 { pt3dadd( -6.75168, -59.3427, 13.2766, 1.55 ) }
    dend_6 { pt3dadd( -7.64068, -60.0066, 13.7209, 1.55 ) }
    dend_6 { pt3dadd( -9.0892, -61.1342, 14.2788, 1.03 ) }
    dend_6 { pt3dadd( -9.91596, -61.8165, 14.5479, 0.81 ) }
    dend_6 { pt3dadd( -11.0197, -62.7635, 14.8676, 0.81 ) }
    dend_6 { pt3dadd( -11.9399, -63.5649, 15.069, 0.37 ) }
    dend_6 { pt3dadd( -12.6274, -64.151, 15.1486, 0.37 ) }
    dend_6 { pt3dadd( -12.7966, -64.2903, 15.1543, 0.96 ) }
    dend_6 { pt3dadd( -13.2764, -64.6704, 15.1365, 1.4 ) }
    dend_6 { pt3dadd( -15.3428, -66.4383, 15.0214, 0.59 ) }
    dend_6 { pt3dadd( -17.0025, -67.9101, 14.9165, 0.52 ) }
    dend_6 { pt3dadd( -18.2947, -69.0387, 14.8306, 0.52 ) }
    dend_6 { pt3dadd( -19.7999, -70.2508, 14.7292, 0.37 ) }
    dend_6 { pt3dadd( -21.0505, -71.1644, 14.5992, 0.29 ) }
    dend_6 { pt3dadd( -22.5261, -72.1356, 14.3317, 1.25 ) }
    dend_6 { pt3dadd( -22.9145, -72.3687, 14.2264, 1.4 ) }
    dend_6 { pt3dadd( -24.2297, -73.1355, 13.8784, 0.52 ) }
    dend_6 { pt3dadd( -25.2196, -73.6789, 13.5979, 0.81 ) }
    dend_6 { pt3dadd( -26.4916, -74.2672, 13.179, 1.03 ) }
    dend_6 { pt3dadd( -28.2463, -74.8558, 12.6188, 0.52 ) }
    dend_6 { pt3dadd( -29.339, -75.151, 12.3005, 0.52 ) }
    dend_6 { pt3dadd( -30.2077, -75.4259, 12.0926, 0.37 ) }
    dend_6 { pt3dadd( -31.4685, -76.0125, 11.9585, 0.29 ) }
    dend_6 { pt3dadd( -31.8632, -76.2579, 11.9811, 0.74 ) }
    dend_6 { pt3dadd( -32.6259, -76.7783, 12.1563, 1.03 ) }
    dend_6 { pt3dadd( -33.0985, -77.0835, 12.3108, 0.81 ) }
    dend_6 { pt3dadd( -34.1488, -77.7107, 12.6423, 0.59 ) }
    dend_6 { pt3dadd( -35.7469, -78.6378, 13.1188, 0.37 ) }
    dend_6 { pt3dadd( -36.4895, -79.0658, 13.263, 0.29 ) }
    dend_6 { pt3dadd( -37.1218, -79.3558, 13.3313, 0.29 ) }
    dend_6 { pt3dadd( -37.7156, -79.5672, 13.3366, 0.96 ) }
    dend_6 { pt3dadd( -38.3557, -79.7343, 13.2442, 0.96 ) }
    dend_6 { pt3dadd( -39.1623, -79.8979, 13.0383, 0.81 ) }
    dend_6 { pt3dadd( -40.668, -80.2533, 12.6042, 0.44 ) }
    dend_6 { pt3dadd( -41.5009, -80.5764, 12.3884, 0.29 ) }
    dend_6 { pt3dadd( -42.5498, -81.184, 12.1625, 0.29 ) }
    dend_6 { pt3dadd( -43.6718, -82.0375, 11.9843, 1.4 ) }
    dend_6 { pt3dadd( -44.3159, -82.6181, 11.9184, 1.4 ) }
    dend_6 { pt3dadd( -45.4486, -83.7587, 11.9149, 0.44 ) }
    dend_6 { pt3dadd( -46.0635, -84.426, 11.9776, 0.29 ) }
    dend_6 { pt3dadd( -46.4569, -84.8674, 12.0469, 0.88 ) }
    dend_6 { pt3dadd( -47.2278, -85.7154, 12.2074, 0.96 ) }
    dend_6 { pt3dadd( -47.8527, -86.3736, 12.3463, 0.59 ) }
    dend_6 { pt3dadd( -48.9594, -87.5226, 12.5631, 0.44 ) }
    dend_6 { pt3dadd( -50.0476, -88.6561, 12.7677, 0.37 ) }
    dend_6 { pt3dadd( -51.1366, -89.7513, 12.9678, 0.22 ) }
    dend_6 { pt3dadd( -52.1063, -90.6731, 13.1299, 0.59 ) }
    dend_6 { pt3dadd( -53.0362, -91.4995, 13.2628, 0.29 ) }
    dend_6 { pt3dadd( -53.3227, -91.734, 13.2928, 0.74 ) }
    dend_6 { pt3dadd( -53.905, -92.1476, 13.3183, 0.96 ) }
    dend_6 { pt3dadd( -54.5571, -92.5225, 13.3263, 0.59 ) }
    dend_6 { pt3dadd( -55.673, -93.0377, 13.3131, 0.44 ) }
    dend_6 { pt3dadd( -56.4389, -93.3667, 13.3136, 0.74 ) }
    dend_6 { pt3dadd( -57.0959, -93.6639, 13.3114, 0.96 ) }
    dend_6 { pt3dadd( -58.4729, -94.355, 13.3045, 0.37 ) }
    dend_6 { pt3dadd( -59.4957, -94.9722, 13.296, 0.29 ) }
    dend_6 { pt3dadd( -60.1495, -95.467, 13.2496, 0.29 ) }
    dend_6 { pt3dadd( -60.8821, -96.1327, 13.143, 0.52 ) }
    dend_6 { pt3dadd( -61.3279, -96.5769, 13.0472, 0.52 ) }
    dend_6 { pt3dadd( -61.7279, -96.9613, 12.987, 0.52 ) }
    dend_6 { pt3dadd( -62.6862, -97.7402, 12.9171, 0.52 ) }
    dend_6 { pt3dadd( -63.8579, -98.5134, 12.9092, 0.52 ) }
    dend_6 { pt3dadd( -64.3651, -98.7593, 12.9299, 0.88 ) }
    dend_6 { pt3dadd( -65.4195, -99.1319, 13.0079, 0.88 ) }
    dend_6 { pt3dadd( -67.4134, -99.6468, 13.1109, 0.37 ) }
    dend_6 { pt3dadd( -68.8229, -99.9572, 13.1059, 0.29 ) }
    dend_6 { pt3dadd( -69.5382, -100.12, 13.0722, 0.96 ) }
    dend_6 { pt3dadd( -70.7186, -100.477, 12.9573, 1.03 ) }
    dend_6 { pt3dadd( -72.0665, -101.035, 12.7086, 0.52 ) }
    dend_6 { pt3dadd( -73.2296, -101.689, 12.3009, 0.52 ) }
    dend_6 { pt3dadd( -74.3688, -102.52, 11.7038, 0.52 ) }
    dend_6 { pt3dadd( -75.439, -103.5, 11.0068, 0.52 ) }
    dend_6 { pt3dadd( -76.2666, -104.385, 10.3974, 0.52 ) }
    dend_6 { pt3dadd( -77.3418, -105.702, 9.53211, 0.44 ) }
    dend_6 { pt3dadd( -78.3988, -107.164, 8.56967, 0.74 ) }
    dend_6 { pt3dadd( -79.0093, -108.124, 7.95385, 0.81 ) }
    dend_6 { pt3dadd( -79.6398, -109.194, 7.24277, 0.52 ) }
    dend_6 { pt3dadd( -79.988, -109.793, 6.8121, 0.88 ) }
    dend_6 { pt3dadd( -80.2433, -110.229, 6.49693, 0.88 ) }
    dend_6 { pt3dadd( -81.1229, -111.715, 5.45682, 0.44 ) }
    dend_6 { pt3dadd( -81.9405, -112.917, 4.60678, 0.37 ) }
    dend_6 { pt3dadd( -82.3169, -113.439, 4.21887, 0.37 ) }
    dend_6 { pt3dadd( -83.0174, -114.378, 3.50413, 0.37 ) }
    dend_6 { pt3dadd( -83.5952, -115.128, 2.95119, 0.59 ) }
    dend_6 { pt3dadd( -84.1403, -115.794, 2.49795, 0.59 ) }
    dend_6 { pt3dadd( -85.6955, -117.453, 1.52868, 0.29 ) }
    dend_6 { pt3dadd( -86.3891, -118.125, 1.17556, 0.29 ) }
    dend_6 { pt3dadd( -87.0085, -118.723, 0.871315, 0.59 ) }
    dend_6 { pt3dadd( -87.914, -119.654, 0.398972, 0.59 ) }
    dend_6 { pt3dadd( -88.5167, -120.298, 0.0801413, 0.37 ) }
    dend_6 { pt3dadd( -89.4028, -121.251, -0.335686, 0.37 ) }
    dend_6 { pt3dadd( -89.9891, -121.847, -0.531913, 0.81 ) }
    dend_6 { pt3dadd( -90.4606, -122.285, -0.683229, 0.81 ) }
    dend_6 { pt3dadd( -91.1066, -122.834, -0.907968, 0.81 ) }
    dend_6 { pt3dadd( -91.9921, -123.635, -1.36164, 0.37 ) }
    dend_6 { pt3dadd( -92.6313, -124.281, -1.77611, 0.37 ) }
    dend_6 { pt3dadd( -93.4186, -125.107, -2.33311, 0.66 ) }
    dend_6 { pt3dadd( -93.8553, -125.534, -2.63099, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_6 { pt3dadd( -94.7275, -126.29, -3.1863, 0.96 ) }
    dend_6 { pt3dadd( -96.1339, -127.322, -4.07613, 0.29 ) }
    dend_6 { pt3dadd( -96.7962, -127.731, -4.56803, 0.29 ) }
    dend_6 { pt3dadd( -97.665, -128.269, -5.30434, 0.44 ) }
    dend_6 { pt3dadd( -98.0295, -128.519, -5.62369, 0.81 ) }
    dend_6 { pt3dadd( -98.5835, -128.956, -6.16639, 0.81 ) }
    dend_6 { pt3dadd( -99.1075, -129.406, -6.73033, 0.81 ) }
    dend_6 { pt3dadd( -100.515, -130.575, -8.22219, 0.52 ) }
    dend_6 { pt3dadd( -101.199, -131.16, -8.97767, 0.59 ) }
    dend_6 { pt3dadd( -102.011, -131.93, -9.93168, 0.59 ) }
    dend_6 { pt3dadd( -103.344, -133.25, -11.4229, 0.29 ) }
    dend_6 { pt3dadd( -104.206, -134.136, -12.3382, 0.96 ) }
    dend_6 { pt3dadd( -104.729, -134.665, -12.8387, 1.25 ) }
    dend_6 { pt3dadd( -105.068, -134.976, -13.1128, 1.25 ) }
    dend_6 { pt3dadd( -106.366, -135.959, -13.9773, 0.37 ) }
    dend_6 { pt3dadd( -107.293, -136.57, -14.4844, 0.37 ) }
    dend_6 { pt3dadd( -108.104, -137.056, -14.7979, 1.03 ) }
    dend_6 { pt3dadd( -108.874, -137.489, -15.0378, 1.25 ) }
    dend_6 { pt3dadd( -109.68, -137.903, -15.2548, 1.25 ) }
    dend_6 { pt3dadd( -111.252, -138.587, -15.5102, 0.29 ) }
    dend_6 { pt3dadd( -112.084, -138.873, -15.5438, 0.44 ) }
    dend_6 { pt3dadd( -112.948, -139.128, -15.527, 0.59 ) }
    dend_6 { pt3dadd( -114.054, -139.417, -15.5116, 0.59 ) }
    dend_6 { pt3dadd( -115.399, -139.737, -15.523, 0.29 ) }
    dend_6 { pt3dadd( -117.085, -140.109, -15.6302, 0.29 ) }
    dend_6 { pt3dadd( -118.714, -140.484, -15.8567, 0.29 ) }
    dend_6 { pt3dadd( -119.763, -140.748, -16.0525, 0.29 ) }
    dend_6 { pt3dadd( -121.446, -141.241, -16.4612, 0.81 ) }
    dend_6 { pt3dadd( -121.993, -141.421, -16.6172, 0.81 ) }
    dend_6 { pt3dadd( -123.695, -142.057, -17.1611, 0.52 ) }
    dend_6 { pt3dadd( -125.315, -142.766, -17.6508, 0.52 ) }
    dend_6 { pt3dadd( -126.704, -143.469, -17.9696, 0.44 ) }
    dend_6 { pt3dadd( -127.668, -144.022, -18.0576, 0.81 ) }
    dend_6 { pt3dadd( -128.856, -144.776, -17.934, 0.81 ) }
    dend_6 { pt3dadd( -129.632, -145.332, -17.6524, 0.81 ) }
    dend_6 { pt3dadd( -131.036, -146.428, -16.7962, 0.37 ) }
    dend_6 { pt3dadd( -131.62, -146.92, -16.3084, 0.37 ) }
    dend_6 { pt3dadd( -132.399, -147.606, -15.562, 0.81 ) }
    dend_6 { pt3dadd( -133.269, -148.369, -14.6903, 0.81 ) }
    dend_6 { pt3dadd( -134.962, -149.773, -12.9939, 0.44 ) }
    dend_6 { pt3dadd( -135.761, -150.317, -12.2358, 0.37 ) }
    dend_6 { pt3dadd( -136.631, -150.833, -11.4823, 0.29 ) }
    dend_6 { pt3dadd( -137.307, -151.215, -10.95, 0.29 ) }
    dend_6 { pt3dadd( -137.982, -151.619, -10.4683, 0.74 ) }
    dend_6 { pt3dadd( -139.123, -152.419, -9.64254, 0.29 ) }
    dend_6 { pt3dadd( -140.643, -153.617, -8.58802, 0.29 ) }
    dend_6 { pt3dadd( -141.468, -154.316, -8.01621, 0.66 ) }
    dend_6 { pt3dadd( -142.275, -155.019, -7.50529, 0.81 ) }
    dend_6 { pt3dadd( -143.087, -155.81, -7.00631, 0.81 ) }
    dend_6 { pt3dadd( -144.629, -157.446, -6.14445, 0.44 ) }
    dend_6 { pt3dadd( -145.312, -158.22, -5.83306, 0.29 ) }
    dend_6 { pt3dadd( -146.322, -159.405, -5.44036, 0.29 ) }
    dend_6 { pt3dadd( -147.063, -160.2, -5.17248, 0.29 ) }
    dend_6 { pt3dadd( -147.885, -161.028, -4.89546, 0.29 ) }
    dend_6 { pt3dadd( -148.511, -161.599, -4.74042, 0.96 ) }
    dend_6 { pt3dadd( -149.21, -162.192, -4.72227, 1.25 ) }
    // Section: dend_48, id: dend_48, parent: dend_30 (entry count 56/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -72.6138, 95.2787, -110.925, 0.37 ) }
    dend_48 { pt3dadd( -73.7468, 94.5981, -110.942, 0.37 ) }
    dend_48 { pt3dadd( -74.7026, 94.1255, -110.901, 0.37 ) }
    dend_48 { pt3dadd( -76.2683, 93.5525, -110.782, 0.37 ) }
    dend_48 { pt3dadd( -77.1146, 93.3342, -110.705, 0.22 ) }
    dend_48 { pt3dadd( -77.9033, 93.1952, -110.63, 0.22 ) }
    dend_48 { pt3dadd( -79.1517, 93.0365, -110.515, 0.37 ) }
    dend_48 { pt3dadd( -79.8274, 93.0532, -110.443, 0.37 ) }
    dend_48 { pt3dadd( -80.7695, 93.168, -110.343, 0.22 ) }
    dend_48 { pt3dadd( -81.5942, 93.3264, -110.312, 0.22 ) }
    dend_48 { pt3dadd( -82.2912, 93.4549, -110.347, 0.81 ) }
    dend_48 { pt3dadd( -82.6736, 93.5031, -110.399, 0.88 ) }
    dend_48 { pt3dadd( -83.2389, 93.5225, -110.523, 0.66 ) }
    dend_48 { pt3dadd( -84.3066, 93.5154, -110.781, 0.29 ) }
    dend_48 { pt3dadd( -85.7209, 93.4933, -111.132, 0.29 ) }
    dend_48 { pt3dadd( -86.6896, 93.4979, -111.376, 0.29 ) }
    dend_48 { pt3dadd( -88.004, 93.5292, -111.717, 0.29 ) }
    dend_48 { pt3dadd( -89.688, 93.5849, -112.152, 0.29 ) }
    dend_48 { pt3dadd( -90.4797, 93.614, -112.357, 0.66 ) }
    dend_48 { pt3dadd( -91.1018, 93.6349, -112.515, 0.88 ) }
    dend_48 { pt3dadd( -91.4091, 93.6386, -112.595, 0.88 ) }
    dend_48 { pt3dadd( -92.2777, 93.6522, -112.84, 0.29 ) }
    dend_48 { pt3dadd( -93.0714, 93.642, -113.082, 0.29 ) }
    dend_48 { pt3dadd( -94.0363, 93.6018, -113.391, 1.33 ) }
    dend_48 { pt3dadd( -94.3941, 93.5718, -113.513, 1.77 ) }
    dend_48 { pt3dadd( -95.8836, 93.4591, -114.046, 0.29 ) }
    dend_48 { pt3dadd( -96.9125, 93.391, -114.426, 0.29 ) }
    dend_48 { pt3dadd( -98.2191, 93.317, -114.906, 0.29 ) }
    dend_48 { pt3dadd( -98.8562, 93.3009, -115.132, 0.29 ) }
    dend_48 { pt3dadd( -99.5171, 93.3216, -115.309, 0.74 ) }
    dend_48 { pt3dadd( -100.593, 93.3969, -115.478, 0.29 ) }
    dend_48 { pt3dadd( -101.771, 93.5306, -115.466, 0.29 ) }
    dend_48 { pt3dadd( -102.817, 93.6811, -115.332, 0.81 ) }
    dend_48 { pt3dadd( -103.374, 93.7658, -115.215, 0.81 ) }
    dend_48 { pt3dadd( -105.117, 94.0414, -114.7, 0.22 ) }
    dend_48 { pt3dadd( -106.261, 94.2108, -114.306, 0.22 ) }
    dend_48 { pt3dadd( -107.495, 94.3485, -113.864, 0.88 ) }
    dend_48 { pt3dadd( -108.184, 94.411, -113.643, 1.18 ) }
    dend_48 { pt3dadd( -109.708, 94.4865, -113.281, 0.29 ) }
    dend_48 { pt3dadd( -110.646, 94.4634, -113.155, 0.29 ) }
    dend_48 { pt3dadd( -112.057, 94.317, -113.1, 0.29 ) }
    dend_48 { pt3dadd( -113.253, 94.1651, -113.128, 0.29 ) }
    dend_48 { pt3dadd( -114.392, 94.0251, -113.214, 0.81 ) }
    dend_48 { pt3dadd( -115.866, 93.9104, -113.354, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_48 { pt3dadd( -117.068, 93.8968, -113.496, 0.22 ) }
    dend_48 { pt3dadd( -117.825, 93.9418, -113.61, 0.29 ) }
    dend_48 { pt3dadd( -118.926, 94.154, -113.789, 0.29 ) }
    dend_48 { pt3dadd( -119.847, 94.4463, -113.875, 0.29 ) }
    dend_48 { pt3dadd( -120.867, 94.8664, -113.878, 0.52 ) }
    dend_48 { pt3dadd( -121.541, 95.2004, -113.833, 0.59 ) }
    dend_48 { pt3dadd( -122.444, 95.7164, -113.717, 0.29 ) }
    dend_48 { pt3dadd( -122.924, 96.0144, -113.638, 0.29 ) }
    dend_48 { pt3dadd( -124.273, 96.8348, -113.328, 0.29 ) }
    dend_48 { pt3dadd( -125.061, 97.2629, -113.125, 0.29 ) }
    dend_48 { pt3dadd( -125.968, 97.6774, -112.868, 0.59 ) }
    dend_48 { pt3dadd( -126.818, 98.0275, -112.663, 0.74 ) }
    dend_48 { pt3dadd( -127.993, 98.5132, -112.502, 0.44 ) }
    dend_48 { pt3dadd( -128.913, 98.9029, -112.486, 1.55 ) }
    dend_48 { pt3dadd( -129.51, 99.143, -112.578, 1.99 ) }
    dend_48 { pt3dadd( -131.129, 99.648, -112.98, 0.29 ) }
    dend_48 { pt3dadd( -132.22, 99.8506, -113.333, 0.29 ) }
    dend_48 { pt3dadd( -133.72, 99.98, -113.936, 0.29 ) }
    dend_48 { pt3dadd( -134.271, 99.9842, -114.189, 0.29 ) }
    dend_48 { pt3dadd( -135.404, 99.9264, -114.772, 0.44 ) }
    dend_48 { pt3dadd( -136.117, 99.8542, -115.154, 0.44 ) }
    dend_48 { pt3dadd( -136.955, 99.715, -115.6, 0.29 ) }
    dend_48 { pt3dadd( -138.087, 99.4844, -116.097, 0.29 ) }
    dend_48 { pt3dadd( -138.842, 99.3339, -116.391, 0.29 ) }
    dend_48 { pt3dadd( -139.603, 99.2139, -116.703, 0.37 ) }
    dend_48 { pt3dadd( -140.28, 99.1529, -116.982, 0.59 ) }
    dend_48 { pt3dadd( -141.062, 99.119, -117.302, 0.59 ) }
    dend_48 { pt3dadd( -142.004, 99.1018, -117.66, 0.44 ) }
    dend_48 { pt3dadd( -142.812, 99.1545, -117.873, 0.29 ) }
    dend_48 { pt3dadd( -143.131, 99.2166, -117.935, 0.88 ) }
    dend_48 { pt3dadd( -143.833, 99.4029, -118.037, 0.88 ) }
    dend_48 { pt3dadd( -144.262, 99.5143, -118.085, 0.88 ) }
    dend_48 { pt3dadd( -145.228, 99.7126, -118.176, 0.29 ) }
    dend_48 { pt3dadd( -146.389, 99.8983, -118.282, 0.29 ) }
    dend_48 { pt3dadd( -147.285, 100.063, -118.365, 0.29 ) }
    dend_48 { pt3dadd( -148.089, 100.28, -118.452, 0.29 ) }
    dend_48 { pt3dadd( -148.794, 100.534, -118.538, 0.52 ) }
    dend_48 { pt3dadd( -149.687, 100.925, -118.662, 0.52 ) }
    dend_48 { pt3dadd( -150.88, 101.5, -118.862, 0.29 ) }
    dend_48 { pt3dadd( -151.758, 101.942, -119.046, 0.29 ) }
    dend_48 { pt3dadd( -152.635, 102.426, -119.235, 0.74 ) }
    dend_48 { pt3dadd( -153.167, 102.762, -119.383, 1.03 ) }
    dend_48 { pt3dadd( -153.817, 103.244, -119.619, 0.37 ) }
    dend_48 { pt3dadd( -154.444, 103.731, -119.904, 0.37 ) }
    dend_48 { pt3dadd( -154.977, 104.101, -120.177, 0.96 ) }
    dend_48 { pt3dadd( -155.391, 104.337, -120.391, 1.18 ) }
    dend_48 { pt3dadd( -156.472, 104.926, -120.941, 0.29 ) }
    dend_48 { pt3dadd( -157.111, 105.312, -121.256, 0.29 ) }
    dend_48 { pt3dadd( -157.785, 105.735, -121.586, 0.29 ) }
    dend_48 { pt3dadd( -158.463, 106.137, -121.888, 0.37 ) }
    dend_48 { pt3dadd( -159.272, 106.571, -122.209, 0.37 ) }
    dend_48 { pt3dadd( -160.256, 107.089, -122.552, 0.37 ) }
    dend_48 { pt3dadd( -161.059, 107.474, -122.796, 0.37 ) }
    dend_48 { pt3dadd( -161.91, 107.873, -123.059, 0.37 ) }
    dend_48 { pt3dadd( -163.028, 108.469, -123.418, 0.37 ) }
    dend_48 { pt3dadd( -163.903, 108.978, -123.714, 0.37 ) }
    dend_48 { pt3dadd( -164.672, 109.441, -123.976, 0.37 ) }
    dend_48 { pt3dadd( -165.625, 109.98, -124.252, 0.37 ) }
    dend_48 { pt3dadd( -166.604, 110.499, -124.477, 0.37 ) }
    dend_48 { pt3dadd( -167.788, 111.065, -124.673, 1.4 ) }
    dend_48 { pt3dadd( -168.017, 111.165, -124.702, 2.06 ) }
    dend_48 { pt3dadd( -168.585, 111.377, -124.755, 2.28 ) }
    dend_48 { pt3dadd( -169.983, 111.8, -124.861, 0.29 ) }
    dend_48 { pt3dadd( -170.945, 112.021, -124.893, 0.29 ) }
    dend_48 { pt3dadd( -172.458, 112.215, -124.876, 0.29 ) }
    dend_48 { pt3dadd( -173.471, 112.275, -124.829, 0.29 ) }
    dend_48 { pt3dadd( -174.62, 112.289, -124.752, 0.29 ) }
    dend_48 { pt3dadd( -175.798, 112.248, -124.66, 0.29 ) }
    dend_48 { pt3dadd( -176.942, 112.169, -124.568, 0.29 ) }
    dend_48 { pt3dadd( -177.744, 112.112, -124.487, 0.29 ) }
    dend_48 { pt3dadd( -178.541, 112.06, -124.393, 0.44 ) }
    dend_48 { pt3dadd( -179.692, 111.999, -124.299, 0.44 ) }
    dend_48 { pt3dadd( -180.617, 112.029, -124.272, 0.29 ) }
    dend_48 { pt3dadd( -181.241, 112.154, -124.296, 0.29 ) }
    dend_48 { pt3dadd( -181.836, 112.371, -124.36, 0.74 ) }
    dend_48 { pt3dadd( -182.416, 112.622, -124.443, 0.74 ) }
    dend_48 { pt3dadd( -183.684, 113.256, -124.66, 0.29 ) }
    dend_48 { pt3dadd( -184.768, 113.907, -124.857, 0.29 ) }
    dend_48 { pt3dadd( -185.912, 114.671, -125.077, 0.29 ) }
    dend_48 { pt3dadd( -186.772, 115.264, -125.244, 1.18 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -72.6138, 95.2787, -110.925, 0.44 ) }
    dend_31 { pt3dadd( -74.1459, 95.6253, -111.728, 0.44 ) }
    dend_31 { pt3dadd( -75.0598, 95.81, -112.141, 0.44 ) }
    dend_31 { pt3dadd( -76.2941, 96.1092, -112.646, 0.44 ) }
    dend_31 { pt3dadd( -77.1341, 96.3678, -112.965, 0.44 ) }
    dend_31 { pt3dadd( -78.1002, 96.7527, -113.304, 0.44 ) }
    dend_31 { pt3dadd( -78.9137, 97.1299, -113.56, 0.44 ) }
    dend_31 { pt3dadd( -79.5353, 97.4784, -113.685, 0.44 ) }
    dend_31 { pt3dadd( -80.1648, 97.9521, -113.79, 0.66 ) }
    dend_31 { pt3dadd( -80.7011, 98.4643, -113.876, 0.66 ) }
    dend_31 { pt3dadd( -81.4053, 99.2483, -114.01, 0.29 ) }
    dend_31 { pt3dadd( -82.1365, 100.186, -114.174, 0.29 ) }
    dend_31 { pt3dadd( -82.8275, 101.188, -114.348, 1.11 ) }
    dend_31 { pt3dadd( -83.0258, 101.499, -114.402, 1.11 ) }
    dend_31 { pt3dadd( -83.6108, 102.36, -114.564, 0.29 ) }
    dend_31 { pt3dadd( -83.9609, 102.901, -114.662, 0.29 ) }
    dend_31 { pt3dadd( -84.1782, 103.297, -114.723, 1.03 ) }
    dend_31 { pt3dadd( -84.3371, 103.655, -114.765, 1.03 ) }
    dend_31 { pt3dadd( -84.5712, 104.196, -114.82, 1.03 ) }
    dend_31 { pt3dadd( -85.2355, 105.775, -114.948, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_31 { pt3dadd( -85.618, 106.706, -114.993, 0.29 ) }
    dend_31 { pt3dadd( -85.977, 107.541, -115.025, 0.29 ) }
    dend_31 { pt3dadd( -86.316, 108.204, -115.048, 0.29 ) }
    dend_31 { pt3dadd( -86.9662, 109.337, -115.082, 1.33 ) }
    dend_31 { pt3dadd( -87.2005, 109.716, -115.097, 1.69 ) }
    dend_31 { pt3dadd( -88.1493, 111.067, -115.181, 0.37 ) }
    dend_31 { pt3dadd( -88.7233, 111.751, -115.251, 0.37 ) }
    dend_31 { pt3dadd( -89.7637, 112.821, -115.402, 0.37 ) }
    dend_31 { pt3dadd( -90.6236, 113.645, -115.54, 0.37 ) }
    dend_31 { pt3dadd( -91.4874, 114.468, -115.689, 0.37 ) }
    dend_31 { pt3dadd( -92.1465, 115.143, -115.822, 0.37 ) }
    dend_31 { pt3dadd( -92.4509, 115.497, -115.901, 0.81 ) }
    dend_31 { pt3dadd( -92.8603, 116.114, -116.071, 0.81 ) }
    dend_31 { pt3dadd( -93.2181, 116.905, -116.352, 0.52 ) }
    dend_31 { pt3dadd( -93.4893, 117.592, -116.629, 0.52 ) }
    dend_31 { pt3dadd( -93.895, 118.528, -117.047, 1.03 ) }
    dend_31 { pt3dadd( -94.0925, 118.977, -117.263, 1.03 ) }
    dend_31 { pt3dadd( -94.4814, 119.759, -117.666, 0.88 ) }
    dend_31 { pt3dadd( -95.0962, 120.814, -118.249, 0.37 ) }
    dend_31 { pt3dadd( -95.8544, 121.919, -118.888, 0.37 ) }
    dend_31 { pt3dadd( -96.718, 123.063, -119.472, 0.37 ) }
    dend_31 { pt3dadd( -97.1698, 123.649, -119.724, 0.37 ) }
    dend_31 { pt3dadd( -97.9475, 124.648, -120.074, 0.37 ) }
    dend_31 { pt3dadd( -98.4846, 125.334, -120.257, 1.18 ) }
    dend_31 { pt3dadd( -98.8945, 125.858, -120.364, 1.69 ) }
    dend_31 { pt3dadd( -100.376, 127.941, -120.696, 0.44 ) }
    dend_31 { pt3dadd( -101.138, 129.204, -120.854, 0.44 ) }
    dend_31 { pt3dadd( -101.801, 130.447, -120.993, 0.44 ) }
    dend_31 { pt3dadd( -102.046, 130.973, -121.052, 0.96 ) }
    dend_31 { pt3dadd( -102.283, 131.522, -121.12, 1.33 ) }
    dend_31 { pt3dadd( -102.86, 132.863, -121.305, 0.37 ) }
    dend_31 { pt3dadd( -103.355, 134.111, -121.499, 0.37 ) }
    dend_31 { pt3dadd( -103.656, 134.942, -121.623, 0.37 ) }
    dend_31 { pt3dadd( -103.972, 135.963, -121.765, 0.37 ) }
    dend_31 { pt3dadd( -104.362, 137.227, -121.953, 0.37 ) }
    dend_31 { pt3dadd( -104.735, 138.335, -122.163, 0.37 ) }
    dend_31 { pt3dadd( -105.051, 139.142, -122.318, 0.59 ) }
    dend_31 { pt3dadd( -105.387, 139.932, -122.452, 0.59 ) }
    dend_31 { pt3dadd( -105.805, 140.986, -122.686, 0.29 ) }
    dend_31 { pt3dadd( -105.977, 141.467, -122.811, 0.29 ) }
    dend_31 { pt3dadd( -106.611, 143.1, -123.315, 1.33 ) }
    dend_31 { pt3dadd( -106.882, 143.715, -123.519, 2.14 ) }
    dend_31 { pt3dadd( -107.129, 144.201, -123.698, 2.28 ) }
    dend_31 { pt3dadd( -108.004, 145.666, -124.332, 1.11 ) }
    dend_31 { pt3dadd( -108.677, 146.606, -124.831, 0.29 ) }
    dend_31 { pt3dadd( -109.499, 147.696, -125.44, 0.29 ) }
    dend_31 { pt3dadd( -110.056, 148.412, -125.853, 0.29 ) }
    dend_31 { pt3dadd( -110.559, 149.097, -126.255, 0.44 ) }
    dend_31 { pt3dadd( -111.043, 149.835, -126.684, 0.44 ) }
    dend_31 { pt3dadd( -111.609, 150.805, -127.195, 0.44 ) }
    dend_31 { pt3dadd( -112.084, 151.811, -127.7, 0.66 ) }
    dend_31 { pt3dadd( -112.291, 152.39, -127.953, 0.66 ) }
    dend_31 { pt3dadd( -112.55, 153.28, -128.279, 0.29 ) }
    dend_31 { pt3dadd( -112.812, 154.347, -128.515, 0.29 ) }
    dend_31 { pt3dadd( -113.01, 155.228, -128.602, 0.29 ) }
    dend_31 { pt3dadd( -113.186, 156.076, -128.644, 0.29 ) }
    dend_31 { pt3dadd( -113.489, 157.289, -128.689, 0.44 ) }
    dend_31 { pt3dadd( -113.736, 158.118, -128.695, 0.44 ) }
    dend_31 { pt3dadd( -114.207, 159.432, -128.615, 1.03 ) }
    dend_31 { pt3dadd( -114.461, 160.102, -128.48, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 60/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.64812, -65.2941, 11.7637, 0.59 ) }
    dend_11 { pt3dadd( 6.77474, -67.0075, 11.4356, 0.59 ) }
    dend_11 { pt3dadd( 6.74881, -68.177, 11.2091, 0.59 ) }
    dend_11 { pt3dadd( 6.65861, -69.6144, 10.9471, 0.59 ) }
    dend_11 { pt3dadd( 6.59226, -70.6719, 10.7645, 0.59 ) }
    dend_11 { pt3dadd( 6.48226, -72.2668, 10.5497, 0.88 ) }
    dend_11 { pt3dadd( 6.33551, -73.7537, 10.3958, 0.88 ) }
    dend_11 { pt3dadd( 6.1479, -74.8488, 10.3306, 0.66 ) }
    dend_11 { pt3dadd( 5.80706, -76.0984, 10.3565, 0.81 ) }
    dend_11 { pt3dadd( 5.34835, -77.401, 10.4912, 0.74 ) }
    dend_11 { pt3dadd( 4.96018, -78.4385, 10.6799, 0.96 ) }
    dend_11 { pt3dadd( 4.61496, -79.469, 10.9431, 0.74 ) }
    dend_11 { pt3dadd( 4.27928, -80.5938, 11.2733, 0.59 ) }
    dend_11 { pt3dadd( 3.94691, -81.8386, 11.6432, 0.52 ) }
    dend_11 { pt3dadd( 3.84821, -82.2597, 11.7646, 1.03 ) }
    dend_11 { pt3dadd( 3.65857, -83.4203, 12.0201, 0.52 ) }
    dend_11 { pt3dadd( 3.59328, -84.7617, 12.1631, 0.81 ) }
    dend_11 { pt3dadd( 3.64495, -85.584, 12.173, 1.03 ) }
    dend_11 { pt3dadd( 3.72982, -86.3727, 12.1165, 1.03 ) }
    dend_11 { pt3dadd( 3.83313, -87.413, 11.9859, 0.88 ) }
    dend_11 { pt3dadd( 3.9053, -88.5449, 11.8229, 0.74 ) }
    dend_11 { pt3dadd( 3.92488, -89.2802, 11.7105, 0.74 ) }
    dend_11 { pt3dadd( 3.92587, -90.1763, 11.5735, 0.44 ) }
    dend_11 { pt3dadd( 3.94022, -91.6503, 11.314, 0.44 ) }
    dend_11 { pt3dadd( 3.94594, -92.5568, 11.1497, 0.66 ) }
    dend_11 { pt3dadd( 3.95466, -93.229, 11.0389, 0.66 ) }
    dend_11 { pt3dadd( 3.96664, -94.1206, 10.8929, 0.52 ) }
    dend_11 { pt3dadd( 3.96164, -95.2159, 10.7014, 0.81 ) }
    dend_11 { pt3dadd( 3.94469, -96.1899, 10.4915, 1.03 ) }
    dend_11 { pt3dadd( 3.92907, -96.8488, 10.3205, 1.03 ) }
    dend_11 { pt3dadd( 3.87462, -97.7573, 10.0715, 0.66 ) }
    dend_11 { pt3dadd( 3.73986, -98.8209, 9.75343, 0.52 ) }
    dend_11 { pt3dadd( 3.58417, -99.6817, 9.4839, 0.52 ) }
    dend_11 { pt3dadd( 3.41689, -100.408, 9.27554, 0.52 ) }
    dend_11 { pt3dadd( 3.20433, -101.29, 9.05754, 0.74 ) }
    dend_11 { pt3dadd( 3.03697, -101.968, 8.90745, 0.74 ) }
    dend_11 { pt3dadd( 2.61552, -103.624, 8.61323, 0.59 ) }
    dend_11 { pt3dadd( 2.39136, -104.63, 8.5101, 0.59 ) }
    dend_11 { pt3dadd( 2.2352, -105.595, 8.44482, 0.96 ) }
    dend_11 { pt3dadd( 2.17892, -106.116, 8.43357, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_11 { pt3dadd( 2.09749, -107.157, 8.4771, 0.59 ) }
    dend_11 { pt3dadd( 1.98705, -108.481, 8.56855, 0.44 ) }
    dend_11 { pt3dadd( 1.88059, -109.678, 8.70014, 0.44 ) }
    dend_11 { pt3dadd( 1.78207, -110.702, 8.80986, 0.44 ) }
    dend_11 { pt3dadd( 1.68878, -111.789, 8.89596, 0.44 ) }
    dend_11 { pt3dadd( 1.62643, -112.898, 8.94704, 0.44 ) }
    dend_11 { pt3dadd( 1.61872, -114.43, 8.95381, 0.59 ) }
    dend_11 { pt3dadd( 1.64521, -115.033, 8.95363, 0.81 ) }
    dend_11 { pt3dadd( 1.72581, -116.007, 8.93695, 0.44 ) }
    dend_11 { pt3dadd( 1.8496, -117.309, 8.93949, 0.44 ) }
    dend_11 { pt3dadd( 1.94482, -118.103, 8.95838, 0.81 ) }
    dend_11 { pt3dadd( 2.06958, -118.892, 9.00636, 0.81 ) }
    dend_11 { pt3dadd( 2.28196, -120.042, 9.0681, 0.81 ) }
    dend_11 { pt3dadd( 2.44553, -120.882, 9.06604, 0.52 ) }
    dend_11 { pt3dadd( 2.64824, -121.918, 9.00421, 0.52 ) }
    dend_11 { pt3dadd( 2.76679, -122.736, 8.90279, 0.81 ) }
    dend_11 { pt3dadd( 2.80053, -123.71, 8.74097, 1.03 ) }
    dend_11 { pt3dadd( 2.68782, -125.105, 8.47594, 0.52 ) }
    dend_11 { pt3dadd( 2.52699, -126.107, 8.26394, 0.52 ) }
    dend_11 { pt3dadd( 2.31752, -127.045, 8.08958, 0.88 ) }
    dend_11 { pt3dadd( 2.02108, -128.193, 7.90802, 0.88 ) }
    dend_11 { pt3dadd( 1.62117, -129.545, 7.75035, 0.44 ) }
    dend_11 { pt3dadd( 1.16969, -130.926, 7.64665, 0.74 ) }
    dend_11 { pt3dadd( 0.974238, -131.574, 7.67092, 0.74 ) }
    dend_11 { pt3dadd( 0.627493, -132.76, 7.74347, 0.37 ) }
    dend_11 { pt3dadd( 0.397324, -133.635, 7.81265, 0.66 ) }
    dend_11 { pt3dadd( 0.234598, -134.478, 7.88949, 0.96 ) }
    dend_11 { pt3dadd( 0.121466, -135.483, 7.95964, 0.96 ) }
    dend_11 { pt3dadd( -0.0147581, -137.71, 8.04597, 0.37 ) }
    dend_11 { pt3dadd( -0.0298438, -139.083, 8.12859, 0.37 ) }
    dend_11 { pt3dadd( -0.00481037, -139.682, 8.18908, 0.88 ) }
    dend_11 { pt3dadd( 0.0253918, -140.207, 8.24614, 0.88 ) }
    dend_11 { pt3dadd( 0.0563299, -141.165, 8.31441, 0.88 ) }
    dend_11 { pt3dadd( 0.0390389, -142.153, 8.33527, 0.52 ) }
    dend_11 { pt3dadd( -0.0492246, -143.534, 8.41494, 0.52 ) }
    dend_11 { pt3dadd( -0.139486, -144.968, 8.61519, 0.44 ) }
    dend_11 { pt3dadd( -0.213687, -146.151, 8.82181, 0.52 ) }
    dend_11 { pt3dadd( -0.33105, -147.817, 9.15057, 0.74 ) }
    dend_11 { pt3dadd( -0.439342, -149.116, 9.42995, 0.74 ) }
    dend_11 { pt3dadd( -0.695041, -151.256, 9.88874, 0.59 ) }
    dend_11 { pt3dadd( -0.855942, -152.301, 10.0913, 0.59 ) }
    dend_11 { pt3dadd( -1.04816, -153.363, 10.3226, 0.44 ) }
    dend_11 { pt3dadd( -1.22615, -154.308, 10.537, 0.44 ) }
    dend_11 { pt3dadd( -1.32301, -154.817, 10.6431, 0.81 ) }
    dend_11 { pt3dadd( -1.51295, -155.782, 10.7498, 0.81 ) }
    dend_11 { pt3dadd( -1.68071, -156.562, 10.7364, 0.74 ) }
    dend_11 { pt3dadd( -1.86813, -157.356, 10.7445, 0.59 ) }
    dend_11 { pt3dadd( -2.15456, -158.527, 10.7989, 0.29 ) }
    dend_11 { pt3dadd( -2.29802, -159.108, 10.8536, 0.52 ) }
    dend_11 { pt3dadd( -2.63033, -160.565, 11.007, 0.52 ) }
    dend_11 { pt3dadd( -2.80926, -161.472, 11.1184, 0.52 ) }
    dend_11 { pt3dadd( -3.07391, -162.918, 11.3437, 0.74 ) }
    dend_11 { pt3dadd( -3.20432, -163.664, 11.5067, 1.11 ) }
    dend_11 { pt3dadd( -3.32776, -164.24, 11.7044, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 54/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.64812, -65.2941, 11.7637, 0.52 ) }
    dend_8 { pt3dadd( 7.97439, -64.3693, 12.5587, 0.52 ) }
    dend_8 { pt3dadd( 8.6951, -63.8668, 12.9907, 0.52 ) }
    dend_8 { pt3dadd( 9.29765, -63.4467, 13.3519, 0.52 ) }
    dend_8 { pt3dadd( 9.81948, -63.0828, 13.6647, 0.52 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 59/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -114.461, 160.102, -128.48, 0.22 ) }
    dend_37 { pt3dadd( -114.807, 161.962, -129.497, 0.22 ) }
    dend_37 { pt3dadd( -114.949, 162.514, -129.919, 0.22 ) }
    dend_37 { pt3dadd( -115.089, 162.872, -130.281, 0.22 ) }
    dend_37 { pt3dadd( -115.251, 163.28, -130.678, 0.22 ) }
    dend_37 { pt3dadd( -115.579, 164.306, -131.553, 0.22 ) }
    dend_37 { pt3dadd( -115.783, 165.23, -132.245, 1.25 ) }
    dend_37 { pt3dadd( -115.861, 165.601, -132.535, 1.55 ) }
    dend_37 { pt3dadd( -116.123, 167.0, -133.519, 0.37 ) }
    dend_37 { pt3dadd( -116.215, 167.55, -133.84, 0.37 ) }
    dend_37 { pt3dadd( -116.369, 168.569, -134.322, 0.37 ) }
    dend_37 { pt3dadd( -116.483, 169.559, -134.655, 0.37 ) }
    dend_37 { pt3dadd( -116.532, 170.37, -134.879, 0.66 ) }
    dend_37 { pt3dadd( -116.546, 170.979, -135.033, 1.33 ) }
    dend_37 { pt3dadd( -116.553, 172.246, -135.302, 0.52 ) }
    dend_37 { pt3dadd( -116.582, 173.352, -135.561, 0.52 ) }
    dend_37 { pt3dadd( -116.626, 174.149, -135.76, 0.37 ) }
    dend_37 { pt3dadd( -116.657, 174.97, -135.937, 0.37 ) }
    dend_37 { pt3dadd( -116.647, 175.662, -136.06, 0.37 ) }
    dend_37 { pt3dadd( -116.585, 176.992, -136.251, 2.65 ) }
    dend_37 { pt3dadd( -116.568, 177.239, -136.278, 3.32 ) }
    dend_37 { pt3dadd( -116.552, 177.589, -136.344, 3.32 ) }
    dend_37 { pt3dadd( -116.604, 179.608, -136.865, 0.44 ) }
    dend_37 { pt3dadd( -116.694, 180.802, -137.227, 0.44 ) }
    dend_37 { pt3dadd( -116.74, 181.371, -137.42, 0.59 ) }
    dend_37 { pt3dadd( -116.776, 181.867, -137.607, 0.59 ) }
    dend_37 { pt3dadd( -116.955, 184.314, -138.615, 0.29 ) }
    dend_37 { pt3dadd( -117.035, 185.304, -139.074, 0.29 ) }
    dend_37 { pt3dadd( -117.125, 186.19, -139.542, 0.29 ) }
    dend_37 { pt3dadd( -117.243, 187.136, -140.047, 0.29 ) }
    dend_37 { pt3dadd( -117.277, 187.517, -140.229, 0.29 ) }
    dend_37 { pt3dadd( -117.332, 188.617, -140.655, 1.11 ) }
    dend_37 { pt3dadd( -117.349, 189.316, -140.841, 1.11 ) }
    dend_37 { pt3dadd( -117.368, 189.863, -140.991, 0.88 ) }
    dend_37 { pt3dadd( -117.523, 191.058, -141.328, 0.52 ) }
    dend_37 { pt3dadd( -117.828, 192.278, -141.653, 0.29 ) }
    dend_37 { pt3dadd( -118.066, 192.991, -141.835, 0.29 ) }
    dend_37 { pt3dadd( -118.23, 193.41, -141.921, 0.66 ) }
    dend_37 { pt3dadd( -118.636, 194.349, -142.088, 0.66 ) }
    dend_37 { pt3dadd( -118.993, 195.075, -142.207, 0.29 ) }
    dend_37 { pt3dadd( -119.335, 195.61, -142.294, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( -120.096, 196.426, -142.478, 0.88 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 1/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -114.461, 160.102, -128.48, 0.37 ) }
    dend_32 { pt3dadd( -114.587, 160.841, -127.822, 0.37 ) }
    dend_32 { pt3dadd( -114.762, 161.692, -127.053, 0.37 ) }
    dend_32 { pt3dadd( -114.906, 162.27, -126.527, 0.37 ) }
    dend_32 { pt3dadd( -115.238, 163.408, -125.488, 0.37 ) }
    dend_32 { pt3dadd( -115.501, 164.236, -124.752, 0.52 ) }
    dend_32 { pt3dadd( -115.78, 165.079, -124.045, 1.18 ) }
    dend_32 { pt3dadd( -115.982, 165.633, -123.589, 1.18 ) }
    dend_32 { pt3dadd( -116.121, 166.027, -123.317, 1.18 ) }
    dend_32 { pt3dadd( -116.195, 166.284, -123.161, 1.03 ) }
    dend_32 { pt3dadd( -116.303, 166.857, -122.873, 0.44 ) }
    dend_32 { pt3dadd( -116.384, 167.623, -122.455, 0.88 ) }
    dend_32 { pt3dadd( -116.451, 168.791, -121.808, 0.37 ) }
    dend_32 { pt3dadd( -116.506, 169.862, -121.201, 0.29 ) }
    dend_32 { pt3dadd( -116.556, 170.577, -120.776, 0.29 ) }
    dend_32 { pt3dadd( -116.613, 171.109, -120.433, 0.66 ) }
    dend_32 { pt3dadd( -116.82, 172.459, -119.508, 0.37 ) }
    dend_32 { pt3dadd( -116.978, 173.233, -118.962, 0.37 ) }
    dend_32 { pt3dadd( -117.185, 174.06, -118.399, 0.29 ) }
    dend_32 { pt3dadd( -117.433, 174.848, -117.901, 0.29 ) }
    dend_32 { pt3dadd( -117.722, 175.547, -117.525, 0.29 ) }
    dend_32 { pt3dadd( -118.14, 176.452, -117.133, 0.88 ) }
    dend_32 { pt3dadd( -118.343, 176.922, -116.976, 0.88 ) }
    dend_32 { pt3dadd( -118.729, 177.959, -116.679, 0.37 ) }
    dend_32 { pt3dadd( -119.085, 179.035, -116.441, 0.37 ) }
    dend_32 { pt3dadd( -119.49, 180.511, -116.192, 0.37 ) }
    dend_32 { pt3dadd( -119.779, 181.713, -116.002, 0.37 ) }
    dend_32 { pt3dadd( -120.041, 182.851, -115.811, 0.37 ) }
    dend_32 { pt3dadd( -120.227, 183.691, -115.66, 0.37 ) }
    dend_32 { pt3dadd( -120.533, 185.066, -115.401, 0.37 ) }
    dend_32 { pt3dadd( -120.839, 186.645, -115.075, 0.37 ) }
    dend_32 { pt3dadd( -121.066, 187.95, -114.788, 1.47 ) }
    dend_32 { pt3dadd( -121.179, 188.461, -114.679, 1.69 ) }
    dend_32 { pt3dadd( -121.317, 188.987, -114.548, 1.69 ) }
    dend_32 { pt3dadd( -121.685, 190.305, -114.174, 0.44 ) }
    dend_32 { pt3dadd( -121.983, 191.338, -113.853, 0.44 ) }
    dend_32 { pt3dadd( -122.298, 192.299, -113.559, 0.44 ) }
    dend_32 { pt3dadd( -122.772, 193.642, -113.171, 0.44 ) }
    dend_32 { pt3dadd( -123.243, 194.917, -112.803, 0.37 ) }
    dend_32 { pt3dadd( -123.597, 195.866, -112.514, 0.37 ) }
    dend_32 { pt3dadd( -123.781, 196.335, -112.362, 0.37 ) }
    dend_32 { pt3dadd( -124.119, 197.07, -112.115, 0.96 ) }
    dend_32 { pt3dadd( -124.488, 197.783, -111.865, 1.25 ) }
    dend_32 { pt3dadd( -124.621, 198.002, -111.793, 1.25 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 45/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -3.32776, -164.24, 11.7044, 0.44 ) }
    dend_15 { pt3dadd( -4.36585, -164.608, 12.0266, 0.44 ) }
    dend_15 { pt3dadd( -5.1825, -164.759, 12.2407, 0.29 ) }
    dend_15 { pt3dadd( -6.28552, -164.888, 12.5119, 0.22 ) }
    dend_15 { pt3dadd( -7.06204, -164.939, 12.6969, 0.59 ) }
    dend_15 { pt3dadd( -7.5154, -164.951, 12.8033, 0.59 ) }
    dend_15 { pt3dadd( -8.81647, -164.988, 13.1086, 0.29 ) }
    dend_15 { pt3dadd( -10.0963, -164.887, 13.399, 0.29 ) }
    dend_15 { pt3dadd( -10.3766, -164.843, 13.4549, 0.52 ) }
    dend_15 { pt3dadd( -10.8461, -164.748, 13.5213, 0.52 ) }
    dend_15 { pt3dadd( -11.2283, -164.656, 13.5732, 0.52 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 56/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -3.32776, -164.24, 11.7044, 0.37 ) }
    dend_12 { pt3dadd( -3.39639, -167.035, 11.2899, 0.37 ) }
    dend_12 { pt3dadd( -3.48893, -168.607, 11.074, 0.81 ) }
    dend_12 { pt3dadd( -3.58688, -169.511, 10.964, 0.88 ) }
    dend_12 { pt3dadd( -3.72638, -170.456, 10.864, 0.66 ) }
    dend_12 { pt3dadd( -4.0496, -172.202, 10.702, 0.37 ) }
    dend_12 { pt3dadd( -4.18277, -172.858, 10.6483, 0.37 ) }
    dend_12 { pt3dadd( -4.44301, -173.989, 10.6209, 0.37 ) }
    dend_12 { pt3dadd( -4.68539, -175.367, 10.5926, 0.37 ) }
    dend_12 { pt3dadd( -4.84673, -176.621, 10.563, 0.74 ) }
    dend_12 { pt3dadd( -4.96805, -177.837, 10.5024, 1.11 ) }
    dend_12 { pt3dadd( -5.07064, -178.896, 10.4305, 0.81 ) }
    dend_12 { pt3dadd( -5.20615, -180.902, 10.2743, 0.37 ) }
    dend_12 { pt3dadd( -5.32557, -183.224, 10.0577, 0.37 ) }
    dend_12 { pt3dadd( -5.46852, -184.705, 9.889, 0.37 ) }
    dend_12 { pt3dadd( -5.7014, -186.22, 9.6881, 0.37 ) }
    dend_12 { pt3dadd( -5.88272, -187.096, 9.55369, 0.96 ) }
    dend_12 { pt3dadd( -6.0836, -187.788, 9.43474, 0.96 ) }
    dend_12 { pt3dadd( -6.61517, -189.173, 9.18428, 0.44 ) }
    dend_12 { pt3dadd( -7.35825, -190.929, 8.86719, 0.37 ) }
    dend_12 { pt3dadd( -7.68102, -191.912, 8.67886, 0.37 ) }
    dend_12 { pt3dadd( -7.83565, -192.674, 8.54035, 1.11 ) }
    dend_12 { pt3dadd( -7.97772, -193.808, 8.33097, 0.88 ) }
    dend_12 { pt3dadd( -8.11748, -195.41, 8.04423, 0.66 ) }
    dend_12 { pt3dadd( -8.22699, -197.483, 7.69759, 0.52 ) }
    dend_12 { pt3dadd( -8.29466, -199.313, 7.40894, 0.52 ) }
    dend_12 { pt3dadd( -8.39913, -200.948, 7.16648, 0.52 ) }
    dend_12 { pt3dadd( -8.60239, -202.911, 6.87713, 0.81 ) }
    dend_12 { pt3dadd( -8.75197, -203.877, 6.73247, 0.96 ) }
    dend_12 { pt3dadd( -8.9915, -205.002, 6.5695, 0.96 ) }
    dend_12 { pt3dadd( -9.31128, -206.203, 6.40383, 0.81 ) }
    dend_12 { pt3dadd( -9.73548, -207.664, 6.17819, 0.44 ) }
    dend_12 { pt3dadd( -10.1741, -209.287, 5.86514, 0.29 ) }
    dend_12 { pt3dadd( -10.3808, -210.249, 5.63943, 0.29 ) }
    dend_12 { pt3dadd( -10.5944, -211.249, 5.37775, 0.29 ) }
    dend_12 { pt3dadd( -10.9119, -212.504, 5.01837, 0.29 ) }
    dend_12 { pt3dadd( -11.3232, -213.953, 4.5266, 1.03 ) }
    dend_12 { pt3dadd( -11.4453, -214.346, 4.37148, 1.47 ) }
    dend_12 { pt3dadd( -12.0487, -216.389, 3.50599, 0.44 ) }
    dend_12 { pt3dadd( -12.4529, -217.837, 2.85877, 0.37 ) }
    dend_12 { pt3dadd( -12.8754, -219.308, 2.19341, 0.37 ) }
    dend_12 { pt3dadd( -13.3727, -221.023, 1.4081, 0.29 ) }
    dend_12 { pt3dadd( -13.8442, -222.677, 0.643928, 0.29 ) }
    dend_12 { pt3dadd( -14.1028, -223.659, 0.181339, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_12 { pt3dadd( -14.4906, -225.285, -0.606432, 0.29 ) }
    dend_12 { pt3dadd( -14.8652, -227.309, -1.59468, 0.66 ) }
    dend_12 { pt3dadd( -15.0417, -228.538, -2.16762, 1.18 ) }
    dend_12 { pt3dadd( -15.1913, -229.623, -2.61353, 1.18 ) }
    dend_12 { pt3dadd( -15.2959, -230.369, -2.90102, 1.18 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 5/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 9.81948, -63.0828, 13.6647, 0.44 ) }
    dend_10 { pt3dadd( 10.0167, -63.3241, 14.7234, 0.44 ) }
    dend_10 { pt3dadd( 10.3413, -63.8437, 16.8692, 1.11 ) }
    dend_10 { pt3dadd( 10.9288, -64.7444, 20.2649, 0.44 ) }
    dend_10 { pt3dadd( 12.1861, -66.4496, 26.4006, 0.88 ) }
    dend_10 { pt3dadd( 12.6533, -67.0316, 28.3828, 1.25 ) }
    dend_10 { pt3dadd( 12.9754, -67.4327, 29.7491, 0.88 ) }
    dend_10 { pt3dadd( 13.2961, -67.8253, 31.1404, 0.74 ) }
    dend_10 { pt3dadd( 14.4787, -69.1441, 35.7297, 0.37 ) }
    dend_10 { pt3dadd( 14.8219, -69.5058, 36.7958, 0.66 ) }
    dend_10 { pt3dadd( 15.1425, -69.8862, 37.5928, 0.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 16/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 9.81948, -63.0828, 13.6647, 0.44 ) }
    dend_9 { pt3dadd( 10.3315, -63.2263, 14.4979, 0.44 ) }
    dend_9 { pt3dadd( 14.7662, -64.469, 21.7143, 0.44 ) }
    dend_9 { pt3dadd( 15.3457, -64.6314, 22.6573, 0.37 ) }
    dend_9 { pt3dadd( 15.709, -64.7332, 23.2485, 0.37 ) }
    dend_9 { pt3dadd( 15.979, -64.8088, 23.6878, 0.74 ) }
    dend_9 { pt3dadd( 16.1972, -64.87, 24.043, 0.74 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 23/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -120.096, 196.426, -142.478, 0.59 ) }
    dend_43 { pt3dadd( -120.611, 197.444, -142.643, 0.59 ) }
    dend_43 { pt3dadd( -121.355, 198.405, -142.879, 0.37 ) }
    dend_43 { pt3dadd( -122.104, 199.165, -143.116, 0.37 ) }
    dend_43 { pt3dadd( -122.921, 199.944, -143.367, 0.37 ) }
    dend_43 { pt3dadd( -124.064, 201.025, -143.704, 0.37 ) }
    dend_43 { pt3dadd( -124.978, 201.894, -143.963, 0.37 ) }
    dend_43 { pt3dadd( -126.065, 202.865, -144.216, 0.37 ) }
    dend_43 { pt3dadd( -126.917, 203.582, -144.413, 0.37 ) }
    dend_43 { pt3dadd( -127.863, 204.369, -144.619, 0.37 ) }
    dend_43 { pt3dadd( -128.468, 204.933, -144.773, 0.37 ) }
    dend_43 { pt3dadd( -128.829, 205.415, -144.886, 1.03 ) }
    dend_43 { pt3dadd( -129.013, 205.752, -144.949, 1.33 ) }
    dend_43 { pt3dadd( -129.389, 206.579, -145.078, 1.11 ) }
    dend_43 { pt3dadd( -129.898, 207.741, -145.255, 0.37 ) }
    dend_43 { pt3dadd( -130.453, 209.018, -145.451, 0.37 ) }
    dend_43 { pt3dadd( -131.144, 210.66, -145.707, 0.29 ) }
    dend_43 { pt3dadd( -131.67, 211.952, -145.909, 0.29 ) }
    dend_43 { pt3dadd( -132.1, 213.043, -146.078, 0.52 ) }
    dend_43 { pt3dadd( -132.513, 214.135, -146.241, 1.55 ) }
    dend_43 { pt3dadd( -132.683, 214.606, -146.299, 1.92 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 44/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -120.096, 196.426, -142.478, 0.52 ) }
    dend_38 { pt3dadd( -120.016, 197.205, -143.493, 0.52 ) }
    dend_38 { pt3dadd( -119.843, 197.91, -144.537, 0.52 ) }
    dend_38 { pt3dadd( -119.626, 198.556, -145.473, 0.52 ) }
    dend_38 { pt3dadd( -119.405, 199.142, -146.27, 1.25 ) }
    dend_38 { pt3dadd( -118.716, 200.936, -148.555, 2.28 ) }
    dend_38 { pt3dadd( -118.569, 201.35, -149.064, 2.28 ) }
    dend_38 { pt3dadd( -118.048, 202.786, -150.923, 0.29 ) }
    dend_38 { pt3dadd( -117.817, 203.397, -151.752, 0.44 ) }
    dend_38 { pt3dadd( -117.606, 203.927, -152.445, 0.44 ) }
    dend_38 { pt3dadd( -117.395, 204.48, -153.088, 0.44 ) }
    dend_38 { pt3dadd( -117.204, 205.005, -153.558, 0.44 ) }
    dend_38 { pt3dadd( -116.905, 206.108, -154.544, 0.29 ) }
    dend_38 { pt3dadd( -116.836, 206.708, -155.045, 1.03 ) }
    dend_38 { pt3dadd( -116.816, 207.267, -155.493, 1.55 ) }
    dend_38 { pt3dadd( -116.783, 208.14, -156.174, 0.88 ) }
    dend_38 { pt3dadd( -116.692, 209.154, -156.925, 0.52 ) }
    dend_38 { pt3dadd( -116.571, 210.056, -157.537, 0.52 ) }
    dend_38 { pt3dadd( -116.499, 210.809, -157.97, 0.52 ) }
    dend_38 { pt3dadd( -116.41, 211.955, -158.573, 0.52 ) }
    dend_38 { pt3dadd( -116.327, 212.727, -158.93, 0.52 ) }
    dend_38 { pt3dadd( -116.233, 213.484, -159.247, 0.52 ) }
    dend_38 { pt3dadd( -116.109, 214.217, -159.534, 0.52 ) }
    dend_38 { pt3dadd( -115.798, 215.519, -159.998, 0.52 ) }
    dend_38 { pt3dadd( -115.428, 216.844, -160.466, 0.52 ) }
    dend_38 { pt3dadd( -115.099, 218.099, -160.881, 2.21 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 70/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -124.621, 198.002, -111.793, 0.29 ) }
    dend_36 { pt3dadd( -126.043, 199.482, -111.724, 0.29 ) }
    dend_36 { pt3dadd( -126.735, 200.201, -111.691, 0.29 ) }
    dend_36 { pt3dadd( -127.242, 200.728, -111.666, 0.29 ) }
    dend_36 { pt3dadd( -127.622, 201.124, -111.648, 0.74 ) }
    dend_36 { pt3dadd( -127.935, 201.448, -111.633, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 76/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -124.621, 198.002, -111.793, 0.29 ) }
    dend_33 { pt3dadd( -125.011, 198.809, -111.494, 0.29 ) }
    dend_33 { pt3dadd( -125.214, 199.252, -111.341, 0.29 ) }
    dend_33 { pt3dadd( -125.603, 200.436, -110.941, 0.29 ) }
    dend_33 { pt3dadd( -125.707, 200.88, -110.795, 0.74 ) }
    dend_33 { pt3dadd( -125.824, 201.349, -110.656, 0.74 ) }
    dend_33 { pt3dadd( -126.117, 202.413, -110.374, 0.37 ) }
    dend_33 { pt3dadd( -126.315, 203.166, -110.204, 0.29 ) }
    dend_33 { pt3dadd( -126.573, 204.365, -109.961, 0.37 ) }
    dend_33 { pt3dadd( -126.716, 205.201, -109.814, 0.37 ) }
    dend_33 { pt3dadd( -126.998, 206.686, -109.536, 0.29 ) }
    dend_33 { pt3dadd( -127.22, 207.667, -109.337, 0.29 ) }
    dend_33 { pt3dadd( -127.547, 208.773, -109.099, 0.29 ) }
    dend_33 { pt3dadd( -127.995, 209.841, -108.87, 0.29 ) }
    dend_33 { pt3dadd( -128.38, 210.565, -108.712, 0.29 ) }
    dend_33 { pt3dadd( -128.924, 211.496, -108.466, 0.29 ) }
    dend_33 { pt3dadd( -129.341, 212.196, -108.229, 0.29 ) }
    dend_33 { pt3dadd( -129.781, 212.921, -107.944, 0.29 ) }
    dend_33 { pt3dadd( -130.126, 213.466, -107.684, 0.29 ) }
    dend_33 { pt3dadd( -130.566, 214.204, -107.305, 1.03 ) }
    dend_33 { pt3dadd( -130.866, 214.829, -106.978, 1.33 ) }
    dend_33 { pt3dadd( -131.072, 215.437, -106.666, 1.33 ) }
    dend_33 { pt3dadd( -131.385, 216.588, -106.065, 0.29 ) }
    dend_33 { pt3dadd( -131.679, 217.648, -105.494, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_33 { pt3dadd( -132.014, 218.611, -104.953, 0.29 ) }
    dend_33 { pt3dadd( -132.315, 219.288, -104.55, 0.29 ) }
    dend_33 { pt3dadd( -132.774, 220.117, -104.032, 0.29 ) }
    dend_33 { pt3dadd( -133.041, 220.53, -103.754, 0.29 ) }
    dend_33 { pt3dadd( -133.66, 221.388, -103.13, 0.29 ) }
    dend_33 { pt3dadd( -134.278, 222.204, -102.53, 0.74 ) }
    dend_33 { pt3dadd( -134.725, 222.749, -102.087, 0.88 ) }
    dend_33 { pt3dadd( -135.369, 223.539, -101.433, 0.44 ) }
    dend_33 { pt3dadd( -135.721, 223.999, -101.057, 0.44 ) }
    dend_33 { pt3dadd( -136.181, 224.723, -100.506, 0.96 ) }
    dend_33 { pt3dadd( -136.507, 225.34, -100.105, 1.25 ) }
    dend_33 { pt3dadd( -137.178, 226.723, -99.3713, 0.29 ) }
    dend_33 { pt3dadd( -137.536, 227.484, -99.0636, 0.37 ) }
    dend_33 { pt3dadd( -137.773, 227.978, -98.8793, 0.37 ) }
    dend_33 { pt3dadd( -138.218, 228.822, -98.4933, 0.37 ) }
    dend_33 { pt3dadd( -138.744, 229.81, -98.0544, 0.37 ) }
    dend_33 { pt3dadd( -139.048, 230.405, -97.7965, 0.37 ) }
    dend_33 { pt3dadd( -139.399, 231.082, -97.5239, 0.37 ) }
    dend_33 { pt3dadd( -140.401, 232.724, -96.7325, 1.33 ) }
    dend_33 { pt3dadd( -141.249, 233.989, -95.936, 2.06 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -15.2959, -230.369, -2.90102, 0.29 ) }
    dend_14 { pt3dadd( -16.6607, -231.551, -2.2944, 0.29 ) }
    dend_14 { pt3dadd( -17.4616, -232.449, -1.81308, 0.29 ) }
    dend_14 { pt3dadd( -17.8585, -233.062, -1.54543, 0.74 ) }
    dend_14 { pt3dadd( -18.3411, -233.883, -1.21133, 0.29 ) }
    dend_14 { pt3dadd( -18.7202, -234.55, -0.9932, 0.29 ) }
    dend_14 { pt3dadd( -19.6439, -236.177, -0.461673, 0.59 ) }
    dend_14 { pt3dadd( -19.8577, -236.673, -0.315444, 0.74 ) }
    dend_14 { pt3dadd( -20.5669, -238.546, 0.254151, 0.37 ) }
    dend_14 { pt3dadd( -20.9624, -239.522, 0.565293, 0.96 ) }
    dend_14 { pt3dadd( -21.4213, -240.494, 0.873668, 0.81 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 31/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -15.2959, -230.369, -2.90102, 0.37 ) }
    dend_13 { pt3dadd( -14.5567, -230.586, -2.72114, 0.37 ) }
    dend_13 { pt3dadd( -14.054, -230.798, -2.58341, 0.37 ) }
    dend_13 { pt3dadd( -13.5537, -231.066, -2.3242, 0.37 ) }
    dend_13 { pt3dadd( -13.211, -231.267, -1.98526, 0.29 ) }
    dend_13 { pt3dadd( -12.816, -231.477, -1.44856, 0.29 ) }
    dend_13 { pt3dadd( -12.444, -231.675, -0.943085, 0.52 ) }
    dend_13 { pt3dadd( -12.2653, -231.782, -0.598536, 0.52 ) }
    dend_13 { pt3dadd( -11.8199, -232.135, 0.635804, 1.11 ) }
    dend_13 { pt3dadd( -11.5145, -232.474, 1.95159, 0.59 ) }
    dend_13 { pt3dadd( -11.455, -232.557, 2.45411, 0.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 42/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -132.683, 214.606, -146.299, 0.37 ) }
    dend_45 { pt3dadd( -133.674, 215.823, -146.04, 0.37 ) }
    dend_45 { pt3dadd( -134.578, 216.934, -145.804, 0.37 ) }
    dend_45 { pt3dadd( -135.247, 217.755, -145.63, 0.37 ) }
    dend_45 { pt3dadd( -136.386, 219.155, -145.332, 1.18 ) }
    dend_45 { pt3dadd( -136.93, 219.823, -145.19, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 48/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -132.683, 214.606, -146.299, 0.29 ) }
    dend_44 { pt3dadd( -133.464, 214.768, -147.52, 0.29 ) }
    dend_44 { pt3dadd( -134.082, 214.918, -148.448, 0.52 ) }
    dend_44 { pt3dadd( -135.075, 215.139, -149.793, 1.03 ) }
    dend_44 { pt3dadd( -135.625, 215.265, -150.478, 1.03 ) }
    dend_44 { pt3dadd( -136.141, 215.398, -151.092, 0.88 ) }
    dend_44 { pt3dadd( -136.873, 215.645, -151.947, 0.81 ) }
    dend_44 { pt3dadd( -137.308, 215.847, -152.49, 0.29 ) }
    dend_44 { pt3dadd( -137.811, 216.126, -153.077, 0.29 ) }
    dend_44 { pt3dadd( -138.321, 216.406, -153.593, 0.29 ) }
    dend_44 { pt3dadd( -138.581, 216.496, -153.917, 0.52 ) }
    dend_44 { pt3dadd( -139.148, 216.661, -154.732, 0.52 ) }
    dend_44 { pt3dadd( -139.83, 216.829, -155.763, 1.18 ) }
    dend_44 { pt3dadd( -140.078, 216.878, -156.133, 1.47 ) }
    dend_44 { pt3dadd( -140.439, 216.956, -156.653, 1.47 ) }
    dend_44 { pt3dadd( -142.169, 217.324, -158.933, 0.52 ) }
    dend_44 { pt3dadd( -142.763, 217.427, -159.608, 0.29 ) }
    dend_44 { pt3dadd( -143.515, 217.554, -160.356, 0.29 ) }
    dend_44 { pt3dadd( -144.688, 217.836, -161.343, 0.29 ) }
    dend_44 { pt3dadd( -145.704, 218.122, -162.082, 0.29 ) }
    dend_44 { pt3dadd( -146.454, 218.328, -162.543, 0.29 ) }
    dend_44 { pt3dadd( -147.665, 218.632, -163.13, 0.29 ) }
    dend_44 { pt3dadd( -148.183, 218.745, -163.377, 0.29 ) }
    dend_44 { pt3dadd( -149.05, 218.954, -163.78, 0.88 ) }
    dend_44 { pt3dadd( -149.511, 219.079, -163.986, 1.25 ) }
    dend_44 { pt3dadd( -150.923, 219.451, -164.656, 0.37 ) }
    dend_44 { pt3dadd( -151.566, 219.595, -165.08, 0.29 ) }
    dend_44 { pt3dadd( -152.098, 219.7, -165.539, 0.74 ) }
    dend_44 { pt3dadd( -152.484, 219.766, -165.891, 0.74 ) }
    dend_44 { pt3dadd( -153.234, 219.891, -166.593, 0.37 ) }
    dend_44 { pt3dadd( -153.928, 220.003, -167.276, 0.37 ) }
    dend_44 { pt3dadd( -155.434, 220.241, -168.859, 0.37 ) }
    dend_44 { pt3dadd( -155.918, 220.296, -169.352, 0.37 ) }
    dend_44 { pt3dadd( -156.906, 220.371, -170.28, 0.29 ) }
    dend_44 { pt3dadd( -157.4, 220.388, -170.69, 0.29 ) }
    dend_44 { pt3dadd( -158.587, 220.358, -171.475, 0.66 ) }
    dend_44 { pt3dadd( -159.67, 220.295, -172.065, 0.74 ) }
    dend_44 { pt3dadd( -160.788, 220.23, -172.559, 0.52 ) }
    dend_44 { pt3dadd( -161.588, 220.168, -172.902, 0.96 ) }
    dend_44 { pt3dadd( -162.324, 220.104, -173.228, 0.96 ) }
    dend_44 { pt3dadd( -163.654, 220.007, -173.767, 0.29 ) }
    dend_44 { pt3dadd( -164.655, 219.974, -174.107, 0.96 ) }
    dend_44 { pt3dadd( -165.242, 219.978, -174.298, 1.11 ) }
    dend_44 { pt3dadd( -166.19, 220.096, -174.654, 0.44 ) }
    dend_44 { pt3dadd( -166.875, 220.305, -174.934, 0.44 ) }
    dend_44 { pt3dadd( -167.673, 220.733, -175.297, 0.44 ) }
    dend_44 { pt3dadd( -168.338, 221.211, -175.608, 0.44 ) }
    dend_44 { pt3dadd( -168.842, 221.589, -175.828, 0.44 ) }
    dend_44 { pt3dadd( -169.685, 222.145, -176.195, 0.44 ) }
    dend_44 { pt3dadd( -170.294, 222.469, -176.482, 0.44 ) }
    dend_44 { pt3dadd( -171.387, 222.962, -176.995, 0.44 ) }
    dend_44 { pt3dadd( -172.031, 223.231, -177.308, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_44 { pt3dadd( -172.828, 223.53, -177.7, 0.81 ) }
    dend_44 { pt3dadd( -173.933, 223.896, -178.241, 0.52 ) }
    dend_44 { pt3dadd( -175.069, 224.264, -178.8, 0.37 ) }
    dend_44 { pt3dadd( -175.612, 224.456, -179.095, 0.37 ) }
    dend_44 { pt3dadd( -176.195, 224.685, -179.45, 1.03 ) }
    dend_44 { pt3dadd( -177.008, 225.05, -180.04, 1.47 ) }
    dend_44 { pt3dadd( -177.463, 225.295, -180.427, 1.47 ) }
    dend_44 { pt3dadd( -177.972, 225.651, -180.94, 0.44 ) }
    dend_44 { pt3dadd( -178.965, 226.312, -182.077, 0.29 ) }
    dend_44 { pt3dadd( -179.794, 226.736, -183.118, 0.29 ) }
    dend_44 { pt3dadd( -180.775, 227.077, -184.496, 0.29 ) }
    dend_44 { pt3dadd( -181.448, 227.248, -185.513, 0.52 ) }
    dend_44 { pt3dadd( -182.276, 227.449, -186.761, 0.74 ) }
    dend_44 { pt3dadd( -183.286, 227.758, -188.287, 0.59 ) }
    dend_44 { pt3dadd( -183.873, 228.017, -189.229, 0.59 ) }
    dend_44 { pt3dadd( -184.787, 228.502, -190.718, 0.37 ) }
    dend_44 { pt3dadd( -185.455, 228.837, -191.681, 0.37 ) }
    dend_44 { pt3dadd( -186.215, 229.162, -192.605, 0.37 ) }
    dend_44 { pt3dadd( -187.111, 229.465, -193.498, 0.37 ) }
    dend_44 { pt3dadd( -188.293, 229.838, -194.451, 0.59 ) }
    dend_44 { pt3dadd( -189.088, 229.964, -194.954, 0.59 ) }
    dend_44 { pt3dadd( -190.36, 229.871, -195.494, 2.06 ) }
    dend_44 { pt3dadd( -190.871, 229.718, -195.652, 2.87 ) }
    dend_44 { pt3dadd( -191.966, 229.179, -195.895, 2.5 ) }
    dend_44 { pt3dadd( -192.874, 228.619, -196.008, 1.55 ) }
    dend_44 { pt3dadd( -193.84, 227.943, -196.044, 0.37 ) }
    dend_44 { pt3dadd( -194.35, 227.538, -196.048, 0.37 ) }
    dend_44 { pt3dadd( -195.209, 226.784, -196.038, 0.37 ) }
    dend_44 { pt3dadd( -196.121, 226.001, -196.031, 0.37 ) }
    dend_44 { pt3dadd( -197.256, 224.98, -196.026, 0.37 ) }
    dend_44 { pt3dadd( -197.544, 224.71, -196.034, 0.66 ) }
    dend_44 { pt3dadd( -198.093, 224.194, -196.063, 0.44 ) }
    dend_44 { pt3dadd( -198.701, 223.628, -196.111, 0.37 ) }
    dend_44 { pt3dadd( -199.56, 222.893, -196.143, 0.37 ) }
    dend_44 { pt3dadd( -200.309, 222.331, -196.158, 0.37 ) }
    dend_44 { pt3dadd( -201.242, 221.684, -196.157, 0.37 ) }
    dend_44 { pt3dadd( -201.944, 221.248, -196.14, 0.59 ) }
    dend_44 { pt3dadd( -202.624, 220.877, -196.12, 0.59 ) }
    dend_44 { pt3dadd( -203.771, 220.311, -196.073, 0.37 ) }
    dend_44 { pt3dadd( -204.714, 219.886, -196.014, 0.66 ) }
    dend_44 { pt3dadd( -205.435, 219.641, -195.951, 0.66 ) }
    dend_44 { pt3dadd( -206.027, 219.491, -195.864, 0.66 ) }
    dend_44 { pt3dadd( -206.624, 219.386, -195.756, 0.37 ) }
    dend_44 { pt3dadd( -207.204, 219.332, -195.645, 0.74 ) }
    dend_44 { pt3dadd( -207.709, 219.327, -195.551, 0.74 ) }
    dend_44 { pt3dadd( -208.774, 219.386, -195.306, 0.52 ) }
    dend_44 { pt3dadd( -210.254, 219.539, -194.976, 0.29 ) }
    dend_44 { pt3dadd( -211.209, 219.604, -194.772, 0.29 ) }
    dend_44 { pt3dadd( -211.998, 219.597, -194.614, 1.47 ) }
    dend_44 { pt3dadd( -212.572, 219.535, -194.519, 1.99 ) }
    dend_44 { pt3dadd( -213.197, 219.378, -194.437, 1.99 ) }
    dend_44 { pt3dadd( -214.784, 218.809, -194.297, 0.29 ) }
    dend_44 { pt3dadd( -216.103, 218.259, -194.255, 0.29 ) }
    dend_44 { pt3dadd( -217.301, 217.689, -194.239, 0.29 ) }
    dend_44 { pt3dadd( -218.32, 217.187, -194.242, 0.29 ) }
    dend_44 { pt3dadd( -219.756, 216.51, -194.285, 0.29 ) }
    dend_44 { pt3dadd( -220.569, 216.13, -194.349, 0.44 ) }
    dend_44 { pt3dadd( -221.734, 215.578, -194.532, 0.44 ) }
    dend_44 { pt3dadd( -222.798, 215.143, -194.765, 0.44 ) }
    dend_44 { pt3dadd( -224.005, 214.731, -195.068, 0.44 ) }
    dend_44 { pt3dadd( -225.136, 214.402, -195.365, 0.44 ) }
    dend_44 { pt3dadd( -226.357, 214.062, -195.688, 0.44 ) }
    dend_44 { pt3dadd( -227.855, 213.614, -196.058, 0.44 ) }
    dend_44 { pt3dadd( -228.987, 213.264, -196.321, 0.44 ) }
    dend_44 { pt3dadd( -230.475, 212.783, -196.713, 0.44 ) }
    dend_44 { pt3dadd( -231.453, 212.403, -197.0, 1.62 ) }
    dend_44 { pt3dadd( -231.998, 212.179, -197.16, 2.5 ) }
    dend_44 { pt3dadd( -232.392, 212.029, -197.271, 2.5 ) }
    dend_44 { pt3dadd( -234.515, 211.181, -197.872, 0.37 ) }
    dend_44 { pt3dadd( -235.536, 210.691, -198.186, 0.37 ) }
    dend_44 { pt3dadd( -236.575, 210.127, -198.542, 0.37 ) }
    dend_44 { pt3dadd( -237.448, 209.633, -198.807, 0.81 ) }
    dend_44 { pt3dadd( -238.272, 209.213, -198.997, 0.37 ) }
    dend_44 { pt3dadd( -238.934, 208.948, -199.09, 0.52 ) }
    dend_44 { pt3dadd( -239.434, 208.832, -199.08, 0.81 ) }
    dend_44 { pt3dadd( -240.098, 208.754, -199.01, 0.81 ) }
    dend_44 { pt3dadd( -241.474, 208.675, -198.877, 0.37 ) }
    dend_44 { pt3dadd( -242.645, 208.565, -198.785, 0.37 ) }
    dend_44 { pt3dadd( -243.851, 208.385, -198.71, 0.37 ) }
    dend_44 { pt3dadd( -244.766, 208.219, -198.632, 0.37 ) }
    dend_44 { pt3dadd( -245.861, 207.99, -198.521, 0.37 ) }
    dend_44 { pt3dadd( -247.822, 207.482, -198.308, 0.29 ) }
    dend_44 { pt3dadd( -248.921, 207.065, -198.198, 0.29 ) }
    dend_44 { pt3dadd( -249.929, 206.494, -198.071, 0.29 ) }
    dend_44 { pt3dadd( -250.914, 205.701, -197.881, 0.88 ) }
    dend_44 { pt3dadd( -251.419, 205.182, -197.729, 0.88 ) }
    dend_44 { pt3dadd( -252.052, 204.394, -197.453, 0.29 ) }
    dend_44 { pt3dadd( -252.89, 203.205, -196.986, 0.29 ) }
    dend_44 { pt3dadd( -253.791, 201.897, -196.464, 0.37 ) }
    dend_44 { pt3dadd( -254.927, 200.227, -195.814, 0.66 ) }
    dend_44 { pt3dadd( -255.662, 199.167, -195.442, 0.66 ) }
    dend_44 { pt3dadd( -256.155, 198.487, -195.202, 0.22 ) }
    dend_44 { pt3dadd( -256.512, 198.005, -195.028, 0.59 ) }
    dend_44 { pt3dadd( -256.931, 197.488, -194.84, 0.81 ) }
    dend_44 { pt3dadd( -257.198, 197.183, -194.737, 0.81 ) }
    dend_44 { pt3dadd( -258.365, 195.939, -194.302, 0.29 ) }
    dend_44 { pt3dadd( -258.661, 195.588, -194.178, 0.29 ) }
    dend_44 { pt3dadd( -259.26, 194.745, -193.86, 0.52 ) }
    dend_44 { pt3dadd( -259.577, 194.225, -193.618, 0.52 ) }
    dend_44 { pt3dadd( -260.004, 193.496, -193.24, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_44 { pt3dadd( -260.924, 192.016, -192.403, 0.66 ) }
    dend_44 { pt3dadd( -261.571, 191.096, -191.839, 0.52 ) }
    dend_44 { pt3dadd( -262.066, 190.515, -191.416, 0.96 ) }
    dend_44 { pt3dadd( -263.116, 189.524, -190.574, 0.66 ) }
    dend_44 { pt3dadd( -263.883, 188.918, -189.994, 0.29 ) }
    dend_44 { pt3dadd( -265.039, 188.192, -189.221, 0.29 ) }
    dend_44 { pt3dadd( -265.92, 187.753, -188.727, 0.29 ) }
    dend_44 { pt3dadd( -267.657, 186.998, -187.826, 0.29 ) }
    dend_44 { pt3dadd( -268.28, 186.74, -187.528, 1.47 ) }
    dend_44 { pt3dadd( -268.708, 186.561, -187.342, 1.77 ) }
    dend_44 { pt3dadd( -270.215, 185.959, -186.666, 0.37 ) }
    dend_44 { pt3dadd( -271.729, 185.374, -186.018, 0.37 ) }
    dend_44 { pt3dadd( -272.552, 185.046, -185.672, 0.66 ) }
    dend_44 { pt3dadd( -273.4, 184.7, -185.294, 0.66 ) }
    dend_44 { pt3dadd( -274.072, 184.422, -184.936, 0.59 ) }
    dend_44 { pt3dadd( -275.571, 183.876, -184.034, 0.37 ) }
    dend_44 { pt3dadd( -276.595, 183.569, -183.345, 0.37 ) }
    dend_44 { pt3dadd( -277.683, 183.28, -182.56, 0.37 ) }
    dend_44 { pt3dadd( -278.896, 182.965, -181.602, 0.96 ) }
    dend_44 { pt3dadd( -279.803, 182.704, -180.802, 0.22 ) }
    dend_44 { pt3dadd( -280.754, 182.383, -179.899, 0.22 ) }
    dend_44 { pt3dadd( -281.225, 182.188, -179.433, 0.22 ) }
    dend_44 { pt3dadd( -281.932, 181.881, -178.755, 0.52 ) }
    dend_44 { pt3dadd( -283.092, 181.326, -177.774, 0.74 ) }
    dend_44 { pt3dadd( -283.897, 180.949, -177.215, 0.66 ) }
    dend_44 { pt3dadd( -285.088, 180.401, -176.475, 0.29 ) }
    dend_44 { pt3dadd( -285.961, 179.995, -175.987, 0.96 ) }
    dend_44 { pt3dadd( -286.347, 179.839, -175.801, 1.33 ) }
    dend_44 { pt3dadd( -287.974, 179.358, -175.131, 0.37 ) }
    dend_44 { pt3dadd( -289.446, 178.956, -174.559, 0.37 ) }
    dend_44 { pt3dadd( -290.201, 178.745, -174.253, 0.37 ) }
    dend_44 { pt3dadd( -291.734, 178.339, -173.558, 0.37 ) }
    dend_44 { pt3dadd( -292.762, 178.069, -173.038, 0.37 ) }
    dend_44 { pt3dadd( -294.707, 177.492, -171.935, 0.37 ) }
    dend_44 { pt3dadd( -295.973, 177.042, -171.134, 0.37 ) }
    dend_44 { pt3dadd( -296.93, 176.616, -170.403, 0.37 ) }
    dend_44 { pt3dadd( -298.011, 176.099, -169.401, 1.11 ) }
    dend_44 { pt3dadd( -298.472, 175.885, -168.918, 1.11 ) }
    dend_44 { pt3dadd( -299.217, 175.471, -168.064, 0.44 ) }
    dend_44 { pt3dadd( -299.769, 175.166, -167.423, 0.29 ) }
    dend_44 { pt3dadd( -300.953, 174.623, -166.167, 0.29 ) }
    dend_44 { pt3dadd( -302.032, 174.099, -164.977, 0.81 ) }
    dend_44 { pt3dadd( -303.236, 173.407, -163.607, 0.52 ) }
    dend_44 { pt3dadd( -304.232, 172.775, -162.504, 0.52 ) }
    dend_44 { pt3dadd( -305.023, 172.214, -161.58, 0.52 ) }
    dend_44 { pt3dadd( -305.442, 171.893, -161.022, 0.81 ) }
    dend_44 { pt3dadd( -306.422, 171.075, -159.647, 0.44 ) }
    dend_44 { pt3dadd( -306.965, 170.613, -158.833, 0.37 ) }
    dend_44 { pt3dadd( -307.606, 170.145, -157.803, 0.37 ) }
    dend_44 { pt3dadd( -308.771, 169.415, -156.004, 0.37 ) }
    dend_44 { pt3dadd( -310.074, 168.551, -154.022, 1.55 ) }
    dend_44 { pt3dadd( -310.591, 168.203, -153.253, 2.36 ) }
    dend_44 { pt3dadd( -310.865, 168.021, -152.855, 2.58 ) }
    dend_44 { pt3dadd( -312.228, 166.953, -150.736, 0.52 ) }
    dend_44 { pt3dadd( -312.593, 166.523, -150.038, 0.74 ) }
    dend_44 { pt3dadd( -313.001, 165.759, -149.132, 0.74 ) }
    dend_44 { pt3dadd( -313.328, 164.897, -148.198, 0.44 ) }
    dend_44 { pt3dadd( -313.622, 164.054, -147.166, 0.37 ) }
    dend_44 { pt3dadd( -313.851, 163.438, -146.36, 0.44 ) }
    dend_44 { pt3dadd( -314.148, 162.582, -145.242, 0.44 ) }
    dend_44 { pt3dadd( -314.418, 161.963, -144.269, 0.44 ) }
    dend_44 { pt3dadd( -314.922, 161.018, -142.582, 0.81 ) }
    dend_44 { pt3dadd( -315.279, 160.439, -141.524, 1.11 ) }
    dend_44 { pt3dadd( -315.7, 159.829, -140.563, 0.37 ) }
    dend_44 { pt3dadd( -316.109, 159.172, -139.72, 0.37 ) }
    dend_44 { pt3dadd( -317.065, 157.228, -137.743, 1.4 ) }
    dend_44 { pt3dadd( -317.337, 156.581, -137.153, 1.99 ) }
    dend_44 { pt3dadd( -317.605, 155.901, -136.607, 1.99 ) }
    dend_44 { pt3dadd( -318.354, 153.866, -135.106, 0.52 ) }
    dend_44 { pt3dadd( -318.844, 152.432, -134.109, 0.52 ) }
    dend_44 { pt3dadd( -319.232, 151.282, -133.394, 0.52 ) }
    dend_44 { pt3dadd( -319.861, 149.404, -132.468, 0.52 ) }
    dend_44 { pt3dadd( -320.187, 148.328, -131.952, 0.74 ) }
    dend_44 { pt3dadd( -320.477, 147.179, -131.35, 0.74 ) }
    dend_44 { pt3dadd( -320.662, 146.428, -130.916, 0.52 ) }
    dend_44 { pt3dadd( -320.916, 145.551, -130.414, 0.52 ) }
    dend_44 { pt3dadd( -321.368, 144.259, -129.686, 0.44 ) }
    dend_44 { pt3dadd( -321.973, 142.756, -128.868, 0.44 ) }
    dend_44 { pt3dadd( -322.464, 141.677, -128.218, 0.52 ) }
    dend_44 { pt3dadd( -323.139, 140.421, -127.379, 0.44 ) }
    dend_44 { pt3dadd( -323.717, 139.436, -126.662, 0.44 ) }
    dend_44 { pt3dadd( -324.161, 138.692, -126.071, 2.36 ) }
    dend_44 { pt3dadd( -324.633, 137.922, -125.431, 3.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -115.099, 218.099, -160.881, 0.37 ) }
    dend_42 { pt3dadd( -115.49, 220.954, -161.716, 0.37 ) }
    dend_42 { pt3dadd( -115.711, 222.548, -162.166, 0.37 ) }
    dend_42 { pt3dadd( -115.855, 223.726, -162.495, 0.59 ) }
    dend_42 { pt3dadd( -115.969, 225.111, -162.894, 0.44 ) }
    dend_42 { pt3dadd( -116.019, 225.979, -163.152, 0.37 ) }
    dend_42 { pt3dadd( -116.05, 226.88, -163.436, 0.37 ) }
    dend_42 { pt3dadd( -116.023, 228.496, -164.01, 0.29 ) }
    dend_42 { pt3dadd( -115.982, 229.605, -164.413, 0.29 ) }
    dend_42 { pt3dadd( -115.897, 230.714, -164.82, 0.29 ) }
    dend_42 { pt3dadd( -115.74, 232.156, -165.331, 0.88 ) }
    dend_42 { pt3dadd( -115.648, 232.905, -165.612, 1.11 ) }
    dend_42 { pt3dadd( -115.551, 233.499, -165.86, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 96/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -115.099, 218.099, -160.881, 0.29 ) }
    dend_39 { pt3dadd( -114.557, 218.954, -161.54, 0.29 ) }
    dend_39 { pt3dadd( -114.284, 219.417, -161.869, 0.29 ) }
    dend_39 { pt3dadd( -114.065, 219.796, -162.197, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_39 { pt3dadd( -113.952, 220.0, -162.383, 0.44 ) }
    dend_39 { pt3dadd( -113.739, 220.406, -162.741, 0.37 ) }
    dend_39 { pt3dadd( -113.531, 220.828, -163.091, 0.37 ) }
    dend_39 { pt3dadd( -113.293, 221.328, -163.484, 0.37 ) }
    dend_39 { pt3dadd( -112.911, 222.179, -164.169, 0.81 ) }
    dend_39 { pt3dadd( -112.773, 222.521, -164.44, 0.59 ) }
    dend_39 { pt3dadd( -112.552, 223.133, -164.905, 1.33 ) }
    dend_39 { pt3dadd( -112.413, 223.585, -165.24, 1.92 ) }
    dend_39 { pt3dadd( -112.352, 223.779, -165.386, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 9/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -141.249, 233.989, -95.936, 0.52 ) }
    dend_35 { pt3dadd( -142.741, 235.844, -95.0458, 0.52 ) }
    dend_35 { pt3dadd( -143.629, 236.87, -94.5705, 0.52 ) }
    dend_35 { pt3dadd( -144.726, 238.04, -94.0396, 0.52 ) }
    dend_35 { pt3dadd( -145.452, 238.804, -93.697, 0.52 ) }
    dend_35 { pt3dadd( -146.349, 239.767, -93.2658, 0.52 ) }
    dend_35 { pt3dadd( -146.886, 240.371, -92.9911, 0.66 ) }
    dend_35 { pt3dadd( -147.434, 240.963, -92.7116, 0.29 ) }
    dend_35 { pt3dadd( -147.799, 241.375, -92.5344, 0.29 ) }
    dend_35 { pt3dadd( -148.685, 242.51, -92.1155, 0.29 ) }
    dend_35 { pt3dadd( -149.302, 243.294, -91.8155, 0.29 ) }
    dend_35 { pt3dadd( -149.898, 244.138, -91.5087, 0.29 ) }
    dend_35 { pt3dadd( -150.49, 245.02, -91.1781, 1.25 ) }
    dend_35 { pt3dadd( -150.829, 245.53, -90.9823, 1.55 ) }
    dend_35 { pt3dadd( -151.456, 246.496, -90.6255, 0.22 ) }
    dend_35 { pt3dadd( -152.309, 247.614, -90.2571, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -141.249, 233.989, -95.936, 0.29 ) }
    dend_34 { pt3dadd( -142.593, 235.009, -95.2924, 0.29 ) }
    dend_34 { pt3dadd( -143.361, 235.58, -94.8682, 0.29 ) }
    dend_34 { pt3dadd( -144.151, 236.17, -94.4097, 0.29 ) }
    dend_34 { pt3dadd( -145.09, 236.911, -93.8791, 0.37 ) }
    dend_34 { pt3dadd( -145.664, 237.413, -93.5619, 0.37 ) }
    dend_34 { pt3dadd( -146.112, 237.849, -93.315, 0.29 ) }
    dend_34 { pt3dadd( -146.873, 238.74, -92.8568, 0.29 ) }
    dend_34 { pt3dadd( -147.383, 239.392, -92.5481, 0.29 ) }
    dend_34 { pt3dadd( -148.071, 240.364, -92.151, 0.29 ) }
    dend_34 { pt3dadd( -148.799, 241.433, -91.6989, 0.29 ) }
    dend_34 { pt3dadd( -149.332, 242.242, -91.3528, 0.52 ) }
    dend_34 { pt3dadd( -149.678, 242.771, -91.1331, 0.29 ) }
    dend_34 { pt3dadd( -150.386, 243.873, -90.6736, 0.29 ) }
    dend_34 { pt3dadd( -150.917, 244.72, -90.2862, 0.29 ) }
    dend_34 { pt3dadd( -151.58, 245.791, -89.7531, 0.59 ) }
    dend_34 { pt3dadd( -152.078, 246.589, -89.3485, 0.74 ) }
    dend_34 { pt3dadd( -152.562, 247.383, -88.956, 0.22 ) }
    dend_34 { pt3dadd( -152.868, 247.92, -88.7101, 0.22 ) }
    dend_34 { pt3dadd( -153.32, 248.812, -88.363, 0.22 ) }
    dend_34 { pt3dadd( -153.668, 249.531, -88.095, 0.22 ) }
    dend_34 { pt3dadd( -153.958, 250.132, -87.8932, 0.74 ) }
    dend_34 { pt3dadd( -154.13, 250.467, -87.7734, 0.74 ) }
    dend_34 { pt3dadd( -154.392, 250.883, -87.6134, 0.29 ) }
    dend_34 { pt3dadd( -154.896, 251.584, -87.3359, 0.59 ) }
    dend_34 { pt3dadd( -155.532, 252.327, -87.0011, 0.29 ) }
    dend_34 { pt3dadd( -156.229, 253.08, -86.6344, 0.29 ) }
    dend_34 { pt3dadd( -156.899, 253.702, -86.3143, 0.29 ) }
    dend_34 { pt3dadd( -157.602, 254.266, -86.0114, 0.29 ) }
    dend_34 { pt3dadd( -158.383, 254.787, -85.6832, 0.29 ) }
    dend_34 { pt3dadd( -159.295, 255.322, -85.2935, 0.29 ) }
    dend_34 { pt3dadd( -159.991, 255.7, -84.9751, 0.29 ) }
    dend_34 { pt3dadd( -161.237, 256.352, -84.346, 0.29 ) }
    dend_34 { pt3dadd( -161.968, 256.741, -83.9481, 0.29 ) }
    dend_34 { pt3dadd( -163.076, 257.333, -83.3111, 1.4 ) }
    dend_34 { pt3dadd( -163.752, 257.678, -82.9101, 1.77 ) }
    dend_34 { pt3dadd( -164.962, 258.345, -82.1136, 0.37 ) }
    dend_34 { pt3dadd( -165.57, 258.693, -81.6594, 0.66 ) }
    dend_34 { pt3dadd( -165.812, 258.882, -81.4246, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 64/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -136.93, 219.823, -145.19, 0.29 ) }
    dend_47 { pt3dadd( -136.728, 221.023, -143.795, 0.29 ) }
    dend_47 { pt3dadd( -136.731, 221.7, -142.995, 0.22 ) }
    dend_47 { pt3dadd( -136.854, 222.442, -142.105, 0.22 ) }
    dend_47 { pt3dadd( -137.203, 223.4, -140.876, 0.44 ) }
    dend_47 { pt3dadd( -137.474, 223.96, -140.147, 0.44 ) }
    dend_47 { pt3dadd( -137.882, 224.797, -139.142, 0.44 ) }
    dend_47 { pt3dadd( -138.287, 225.39, -138.454, 0.74 ) }
    dend_47 { pt3dadd( -138.618, 225.875, -137.88, 0.74 ) }
    dend_47 { pt3dadd( -139.142, 226.631, -137.045, 0.44 ) }
    dend_47 { pt3dadd( -139.522, 227.256, -136.381, 0.29 ) }
    dend_47 { pt3dadd( -139.909, 228.093, -135.52, 0.29 ) }
    dend_47 { pt3dadd( -140.156, 228.989, -134.655, 0.29 ) }
    dend_47 { pt3dadd( -140.348, 230.942, -132.796, 0.29 ) }
    dend_47 { pt3dadd( -140.318, 231.979, -131.803, 0.29 ) }
    dend_47 { pt3dadd( -140.211, 232.707, -131.035, 0.29 ) }
    dend_47 { pt3dadd( -140.082, 233.406, -130.292, 0.29 ) }
    dend_47 { pt3dadd( -139.915, 234.268, -129.45, 0.81 ) }
    dend_47 { pt3dadd( -139.709, 235.391, -128.449, 1.47 ) }
    dend_47 { pt3dadd( -139.561, 236.216, -127.81, 1.84 ) }
    dend_47 { pt3dadd( -139.0, 239.195, -125.691, 0.29 ) }
    dend_47 { pt3dadd( -138.795, 240.497, -124.852, 0.29 ) }
    dend_47 { pt3dadd( -138.559, 242.065, -123.808, 0.29 ) }
    dend_47 { pt3dadd( -138.206, 244.182, -122.374, 1.84 ) }
    dend_47 { pt3dadd( -137.907, 245.81, -121.296, 0.37 ) }
    dend_47 { pt3dadd( -137.714, 246.896, -120.581, 0.37 ) }
    dend_47 { pt3dadd( -137.58, 247.707, -120.044, 0.37 ) }
    dend_47 { pt3dadd( -137.203, 250.255, -118.095, 0.66 ) }
    dend_47 { pt3dadd( -137.1, 251.274, -117.114, 0.37 ) }
    dend_47 { pt3dadd( -137.116, 251.786, -116.522, 0.37 ) }
    dend_47 { pt3dadd( -137.242, 252.54, -115.558, 0.59 ) }
    dend_47 { pt3dadd( -137.317, 252.905, -115.122, 0.59 ) }
    dend_47 { pt3dadd( -137.47, 253.537, -114.46, 0.44 ) }
    dend_47 { pt3dadd( -138.188, 256.272, -112.117, 0.44 ) }
    dend_47 { pt3dadd( -138.527, 257.626, -111.05, 0.29 ) }
    dend_47 { pt3dadd( -138.805, 258.897, -110.12, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_47 { pt3dadd( -139.153, 260.686, -108.969, 0.29 ) }
    dend_47 { pt3dadd( -139.303, 261.519, -108.466, 0.29 ) }
    dend_47 { pt3dadd( -139.484, 262.661, -107.849, 0.29 ) }
    dend_47 { pt3dadd( -139.668, 263.912, -107.265, 1.18 ) }
    dend_47 { pt3dadd( -139.731, 264.374, -107.03, 1.55 ) }
    dend_47 { pt3dadd( -139.994, 265.758, -106.104, 0.66 ) }
    dend_47 { pt3dadd( -140.292, 267.372, -104.605, 1.03 ) }
    dend_47 { pt3dadd( -140.361, 267.903, -103.988, 1.03 ) }
    dend_47 { pt3dadd( -140.449, 269.051, -102.424, 0.29 ) }
    dend_47 { pt3dadd( -140.472, 269.552, -101.699, 0.29 ) }
    dend_47 { pt3dadd( -140.482, 270.647, -100.143, 0.66 ) }
    dend_47 { pt3dadd( -140.449, 272.003, -98.0524, 0.37 ) }
    dend_47 { pt3dadd( -140.427, 272.856, -96.7294, 0.37 ) }
    dend_47 { pt3dadd( -140.404, 273.313, -95.9772, 0.37 ) }
    dend_47 { pt3dadd( -140.325, 273.92, -94.9469, 1.47 ) }
    dend_47 { pt3dadd( -140.162, 274.602, -93.9291, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 16/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -136.93, 219.823, -145.19, 0.29 ) }
    dend_46 { pt3dadd( -137.056, 221.934, -144.857, 0.29 ) }
    dend_46 { pt3dadd( -137.129, 223.187, -144.573, 0.29 ) }
    dend_46 { pt3dadd( -137.222, 224.375, -144.242, 1.69 ) }
    dend_46 { pt3dadd( -137.398, 226.149, -143.677, 0.29 ) }
    dend_46 { pt3dadd( -137.48, 226.805, -143.441, 0.29 ) }
    dend_46 { pt3dadd( -137.636, 227.69, -143.097, 0.29 ) }
    dend_46 { pt3dadd( -137.798, 228.46, -142.693, 0.29 ) }
    dend_46 { pt3dadd( -137.947, 229.018, -142.385, 0.29 ) }
    dend_46 { pt3dadd( -138.191, 229.783, -141.98, 0.59 ) }
    dend_46 { pt3dadd( -138.518, 230.604, -141.603, 0.29 ) }
    dend_46 { pt3dadd( -138.938, 231.49, -141.232, 0.29 ) }
    dend_46 { pt3dadd( -139.176, 231.924, -141.079, 0.59 ) }
    dend_46 { pt3dadd( -139.513, 232.465, -140.934, 0.59 ) }
    dend_46 { pt3dadd( -139.958, 233.045, -140.792, 0.29 ) }
    dend_46 { pt3dadd( -140.377, 233.507, -140.688, 0.29 ) }
    dend_46 { pt3dadd( -140.872, 234.034, -140.573, 0.88 ) }
    dend_46 { pt3dadd( -141.172, 234.357, -140.5, 1.03 ) }
    dend_46 { pt3dadd( -141.838, 235.036, -140.341, 0.29 ) }
    dend_46 { pt3dadd( -142.548, 235.741, -140.176, 0.29 ) }
    dend_46 { pt3dadd( -143.147, 236.36, -140.075, 0.29 ) }
    dend_46 { pt3dadd( -143.591, 236.87, -140.036, 0.29 ) }
    dend_46 { pt3dadd( -144.069, 237.479, -140.053, 0.29 ) }
    dend_46 { pt3dadd( -144.534, 238.115, -140.152, 0.66 ) }
    dend_46 { pt3dadd( -144.77, 238.467, -140.263, 0.88 ) }
    dend_46 { pt3dadd( -145.165, 239.131, -140.564, 0.29 ) }
    dend_46 { pt3dadd( -145.464, 239.613, -140.862, 0.29 ) }
    dend_46 { pt3dadd( -145.843, 240.244, -141.375, 0.29 ) }
    dend_46 { pt3dadd( -146.156, 240.878, -142.029, 0.29 ) }
    dend_46 { pt3dadd( -146.379, 241.384, -142.638, 0.29 ) }
    dend_46 { pt3dadd( -146.615, 241.935, -143.378, 0.59 ) }
    dend_46 { pt3dadd( -146.877, 242.509, -144.24, 0.44 ) }
    dend_46 { pt3dadd( -147.192, 243.132, -145.246, 0.81 ) }
    dend_46 { pt3dadd( -147.566, 243.77, -146.361, 0.37 ) }
    dend_46 { pt3dadd( -147.872, 244.188, -147.096, 0.29 ) }
    dend_46 { pt3dadd( -148.113, 244.455, -147.548, 0.29 ) }
    dend_46 { pt3dadd( -148.403, 244.726, -147.981, 0.29 ) }
    dend_46 { pt3dadd( -148.89, 245.184, -148.567, 0.59 ) }
    dend_46 { pt3dadd( -149.564, 245.754, -149.211, 0.29 ) }
    dend_46 { pt3dadd( -150.171, 246.232, -149.69, 0.22 ) }
    dend_46 { pt3dadd( -150.507, 246.518, -149.954, 0.22 ) }
    dend_46 { pt3dadd( -151.032, 247.0, -150.354, 1.25 ) }
    dend_46 { pt3dadd( -151.317, 247.29, -150.57, 1.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 59/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -112.352, 223.779, -165.386, 0.44 ) }
    dend_41 { pt3dadd( -112.821, 225.062, -165.904, 0.44 ) }
    dend_41 { pt3dadd( -113.249, 226.331, -166.46, 0.37 ) }
    dend_41 { pt3dadd( -113.502, 227.165, -166.828, 0.37 ) }
    dend_41 { pt3dadd( -113.743, 227.992, -167.183, 0.37 ) }
    dend_41 { pt3dadd( -113.945, 228.674, -167.485, 0.37 ) }
    dend_41 { pt3dadd( -114.27, 229.749, -167.957, 0.29 ) }
    dend_41 { pt3dadd( -114.567, 230.966, -168.507, 1.25 ) }
    dend_41 { pt3dadd( -114.692, 231.583, -168.81, 1.62 ) }
    dend_41 { pt3dadd( -114.801, 232.138, -169.128, 1.62 ) }
    dend_41 { pt3dadd( -115.081, 233.644, -170.058, 0.29 ) }
    dend_41 { pt3dadd( -115.194, 234.361, -170.507, 0.29 ) }
    dend_41 { pt3dadd( -115.287, 235.277, -171.119, 0.29 ) }
    dend_41 { pt3dadd( -115.32, 236.113, -171.742, 0.59 ) }
    dend_41 { pt3dadd( -115.315, 237.614, -172.909, 0.29 ) }
    dend_41 { pt3dadd( -115.305, 238.111, -173.299, 0.29 ) }
    dend_41 { pt3dadd( -115.297, 238.818, -173.856, 0.29 ) }
    dend_41 { pt3dadd( -115.317, 239.246, -174.181, 0.29 ) }
    dend_41 { pt3dadd( -115.363, 239.843, -174.582, 0.59 ) }
    dend_41 { pt3dadd( -115.407, 240.567, -174.995, 0.59 ) }
    dend_41 { pt3dadd( -115.479, 242.015, -175.751, 0.29 ) }
    dend_41 { pt3dadd( -115.528, 242.891, -176.231, 0.29 ) }
    dend_41 { pt3dadd( -115.574, 243.881, -176.774, 0.29 ) }
    dend_41 { pt3dadd( -115.612, 245.18, -177.493, 0.37 ) }
    dend_41 { pt3dadd( -115.62, 245.859, -177.867, 0.37 ) }
    dend_41 { pt3dadd( -115.588, 247.06, -178.515, 0.37 ) }
    dend_41 { pt3dadd( -115.524, 248.059, -179.032, 0.37 ) }
    dend_41 { pt3dadd( -115.396, 249.436, -179.692, 0.44 ) }
    dend_41 { pt3dadd( -115.275, 250.359, -180.107, 0.66 ) }
    dend_41 { pt3dadd( -115.168, 251.056, -180.397, 0.66 ) }
    dend_41 { pt3dadd( -114.893, 252.515, -180.88, 0.29 ) }
    dend_41 { pt3dadd( -114.74, 253.178, -181.04, 0.74 ) }
    dend_41 { pt3dadd( -114.417, 254.498, -181.273, 0.29 ) }
    dend_41 { pt3dadd( -114.061, 256.002, -181.462, 0.37 ) }
    dend_41 { pt3dadd( -113.849, 256.883, -181.553, 0.37 ) }
    dend_41 { pt3dadd( -113.503, 258.399, -181.706, 0.37 ) }
    dend_41 { pt3dadd( -113.309, 259.357, -181.806, 0.37 ) }
    dend_41 { pt3dadd( -113.13, 260.456, -181.939, 0.37 ) }
    dend_41 { pt3dadd( -112.988, 261.675, -182.113, 0.29 ) }
    dend_41 { pt3dadd( -112.9, 262.862, -182.308, 0.29 ) }
    dend_41 { pt3dadd( -112.762, 264.512, -182.682, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_41 { pt3dadd( -112.693, 265.243, -182.9, 0.29 ) }
    dend_41 { pt3dadd( -112.59, 266.224, -183.222, 1.03 ) }
    dend_41 { pt3dadd( -112.503, 266.963, -183.478, 1.33 ) }
    dend_41 { pt3dadd( -112.333, 268.498, -184.007, 0.52 ) }
    dend_41 { pt3dadd( -112.193, 269.807, -184.447, 0.52 ) }
    dend_41 { pt3dadd( -112.038, 271.065, -184.873, 0.52 ) }
    dend_41 { pt3dadd( -111.908, 272.098, -185.214, 0.81 ) }
    dend_41 { pt3dadd( -111.841, 272.66, -185.391, 0.81 ) }
    dend_41 { pt3dadd( -111.705, 274.229, -185.835, 0.37 ) }
    dend_41 { pt3dadd( -111.616, 275.544, -186.155, 0.37 ) }
    dend_41 { pt3dadd( -111.555, 276.649, -186.383, 0.96 ) }
    dend_41 { pt3dadd( -111.527, 277.142, -186.482, 1.33 ) }
    dend_41 { pt3dadd( -111.503, 277.775, -186.606, 1.4 ) }
    dend_41 { pt3dadd( -111.49, 279.237, -186.885, 0.52 ) }
    dend_41 { pt3dadd( -111.512, 280.296, -187.082, 0.44 ) }
    dend_41 { pt3dadd( -111.608, 281.68, -187.325, 0.37 ) }
    dend_41 { pt3dadd( -111.709, 282.908, -187.542, 0.37 ) }
    dend_41 { pt3dadd( -111.785, 283.931, -187.725, 0.37 ) }
    dend_41 { pt3dadd( -111.834, 284.621, -187.85, 0.37 ) }
    dend_41 { pt3dadd( -111.962, 285.8, -188.052, 0.74 ) }
    dend_41 { pt3dadd( -112.015, 286.068, -188.09, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -112.352, 223.779, -165.386, 0.37 ) }
    dend_40 { pt3dadd( -112.404, 225.061, -166.821, 0.37 ) }
    dend_40 { pt3dadd( -112.358, 225.984, -167.753, 0.74 ) }
    dend_40 { pt3dadd( -112.145, 227.431, -169.224, 0.29 ) }
    dend_40 { pt3dadd( -111.975, 228.178, -170.051, 0.29 ) }
    dend_40 { pt3dadd( -111.754, 228.944, -170.924, 1.25 ) }
    dend_40 { pt3dadd( -111.657, 229.245, -171.272, 1.25 ) }
    dend_40 { pt3dadd( -111.336, 230.014, -172.139, 0.29 ) }
    dend_40 { pt3dadd( -110.953, 230.759, -172.981, 0.29 ) }
    dend_40 { pt3dadd( -110.506, 231.552, -173.911, 0.29 ) }
    dend_40 { pt3dadd( -110.273, 232.005, -174.516, 0.29 ) }
    dend_40 { pt3dadd( -110.124, 232.392, -175.107, 0.29 ) }
    dend_40 { pt3dadd( -109.989, 232.851, -175.858, 0.29 ) }
    dend_40 { pt3dadd( -109.929, 233.384, -176.726, 1.03 ) }
    dend_40 { pt3dadd( -109.917, 234.471, -178.364, 0.37 ) }
    dend_40 { pt3dadd( -109.923, 235.075, -179.226, 0.37 ) }
    dend_40 { pt3dadd( -109.909, 235.573, -180.006, 0.37 ) }
    dend_40 { pt3dadd( -109.903, 235.999, -180.694, 1.03 ) }
    dend_40 { pt3dadd( -109.905, 236.722, -181.903, 0.52 ) }
    dend_40 { pt3dadd( -109.881, 237.23, -182.757, 0.52 ) }
    dend_40 { pt3dadd( -109.791, 237.78, -183.551, 0.44 ) }
    dend_40 { pt3dadd( -109.459, 238.987, -185.227, 1.62 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_2 = new SectionList()
    dend_51 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_22, dend_17, dend_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_51, dend_22, dend_17, dend_0, axon_0, dend_26, dend_23, dend_21, dend_18, dend_2, dend_1, axon_1, dend_50, dend_27, dend_25, dend_24, dend_20, dend_19, dend_4, dend_3, dend_49, dend_28, dend_16, dend_5, dend_30, dend_29, dend_7, dend_6, dend_48, dend_31, dend_11, dend_8, dend_37, dend_32, dend_15, dend_12, dend_10, dend_9, dend_43, dend_38, dend_36, dend_33, dend_14, dend_13, dend_45, dend_44, dend_42, dend_39, dend_35, dend_34, dend_47, dend_46, dend_41, dend_40]}
    ModelViewParmSubset_5 = new SectionList()
    dend_51 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_18 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_50 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_25 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_49 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_6 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_48 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_31 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_37 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_33 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_44 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_47 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_41 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_26 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_2 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_23 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_51 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_27 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_21 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_4 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_5 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_16 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_10 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_15 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_14 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_36 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_43 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_39 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_40 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_35 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_46 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_34 OneSecGrp_SectionRef_51.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_31 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_18 nseg = 11
    dend_1 nseg = 9
    dend_50 nseg = 7
    dend_25 nseg = 3
    dend_24 nseg = 11
    dend_19 nseg = 3
    dend_49 nseg = 7
    dend_28 nseg = 7
    dend_30 nseg = 3
    dend_29 nseg = 3
    dend_6 nseg = 11
    dend_48 nseg = 7
    dend_31 nseg = 5
    dend_11 nseg = 5
    dend_37 nseg = 3
    dend_32 nseg = 3
    dend_12 nseg = 3
    dend_33 nseg = 3
    dend_44 nseg = 13
    dend_47 nseg = 3
    dend_41 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L5_LBC_b2c5f59c1a_0_0


