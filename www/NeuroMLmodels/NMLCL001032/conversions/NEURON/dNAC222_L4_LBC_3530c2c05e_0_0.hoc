// Cell: dNAC222_L4_LBC_3530c2c05e_0_0
/*
{
  "id" : "dNAC222_L4_LBC_3530c2c05e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.53252, -6.163, 0.0, 2.09808", "-4.07436, -5.56219, 0.0, 3.44591", "-3.6162, -4.96138, 0.0, 4.74751", "-3.15805, -4.36057, 0.0, 6.03519", "-2.69989, -3.75975, 0.0, 7.18506", "-2.24173, -3.15894, 0.0, 8.9595", "-1.78358, -2.55813, 0.0, 10.0505", "-1.32542, -1.95732, 0.0, 10.6762", "-0.867263, -1.35651, 0.0, 11.0674", "-0.409106, -0.7557, 0.0, 11.2738", "0.0490503, -0.154889, 0.0, 11.4538", "0.507207, 0.445922, 0.0, 11.4611", "0.965364, 1.04673, 0.0, 11.064", "1.42352, 1.64754, 0.0, 10.6669", "1.88168, 2.24835, 0.0, 10.1594", "2.33983, 2.84917, 0.0, 9.31974", "2.79799, 3.44998, 0.0, 8.13613", "3.25615, 4.05079, 0.0, 6.95253", "3.7143, 4.6516, 0.0, 6.00786", "4.17246, 5.25241, 0.0, 5.12226", "4.63062, 5.85322, 0.0, 2.96305" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "3.75305, 6.98112, -4.12, 2.75", "4.10469, 7.43525, -4.2766, 2.29", "5.58528, 9.34733, -4.93597, 1.83", "6.31477, 10.2894, -5.26085, 1.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.32694, -1.43413, -0.75, 1.38", "-5.44407, -1.37787, -1.1085, 1.38", "-6.44102, -0.906964, -3.72823, 1.38", "-7.46207, -0.471405, -6.13372, 1.38", "-9.14076, 0.213117, -9.90317, 0.92", "-10.0375, 0.489776, -11.8589, 0.92", "-10.0631, 0.498608, -11.9207, 0.92", "-10.9598, 0.793795, -14.2968, 0.92", "-11.8143, 1.05475, -16.6117, 0.92", "-11.8229, 1.05777, -16.6353, 0.92", "-12.5702, 1.43866, -18.7016, 0.92", "-13.7098, 2.13772, -22.1338, 0.92", "-14.8602, 3.08754, -25.5779, 0.92", "-15.7205, 4.0638, -28.1179, 0.92", "-16.8399, 5.55555, -31.1973, 0.92", "-17.8994, 7.02158, -33.6636, 0.92", "-17.9091, 7.03562, -33.6826, 0.92", "-19.3436, 9.07425, -35.8591, 0.92", "-20.5896, 11.065, -37.4829, 0.46", "-20.5978, 11.0772, -37.4917, 0.46", "-22.0683, 12.9955, -38.7539, 0.46", "-22.0781, 13.0066, -38.7624, 0.46", "-23.4083, 14.3894, -40.0786, 0.46", "-23.4179, 14.3986, -40.0891, 0.46", "-24.8426, 15.6979, -41.8079, 0.46", "-26.5063, 17.1721, -43.9857, 0.46", "-28.2168, 18.5687, -46.4174, 0.46", "-29.9532, 19.9163, -49.0333, 0.46", "-29.9658, 19.9256, -49.0532, 0.46", "-30.8668, 20.5358, -50.5394, 0.46", "-32.4899, 21.5703, -53.4267, 0.46", "-34.1451, 22.5607, -56.4976, 0.46", "-35.8384, 23.5744, -59.6884, 0.46", "-35.8497, 23.5815, -59.71, 0.46", "-37.6969, 24.7439, -63.2172, 0.46", "-39.8494, 26.1215, -67.3317, 0.46", "-41.4097, 27.1896, -70.4548, 0.46", "-41.4168, 27.1948, -70.4692, 0.46", "-42.4232, 27.9426, -72.499, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.836948, 6.76587, 4.0, 1.83", "-0.836948, 6.76587, 4.0, 1.83", "-0.832439, 9.83053, 5.37866, 1.83", "-0.827815, 12.9738, 6.79269, 1.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "3.66305, -5.44188, 2.72, 2.29", "3.749, -5.89544, 2.80964, 2.29", "3.749, -5.89544, 2.80964, 2.29", "3.80863, -6.24824, 2.88092, 2.29", "4.31953, -9.6912, 3.54533, 1.83", "4.67259, -12.5387, 4.08346, 1.83", "4.88449, -14.3724, 4.40789, 1.83", "5.11839, -16.4493, 4.76994, 1.83", "5.38413, -18.906, 5.19233, 1.38", "5.52228, -20.2919, 5.4243, 1.38", "5.62713, -22.2265, 5.72441, 1.38", "5.72588, -24.5872, 6.06189, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.97695, -6.12863, 1.18, 1.83", "-6.20626, -6.33813, 1.2405, 1.83", "-6.20626, -6.33813, 1.2405, 1.83", "-7.8556, -7.80944, 1.56695, 1.83", "-9.13769, -8.95314, 1.82071, 1.83", "-10.5398, -10.2039, 2.09822, 1.83", "-12.0846, -11.582, 2.40398, 1.38", "-13.5964, -12.9048, 2.69917, 1.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.63062, 5.85322, 0.0, 1.08332", "13.7262, 17.7809, 0.0, 1.08332", "22.8219, 29.7086, 0.0, 1.08332" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "6.31477, 10.2894, -5.26085, 0.92", "6.69179, 11.7978, -7.05206, 0.92", "6.86519, 12.8506, -8.33095, 0.92", "6.98648, 14.2744, -10.1196, 0.92", "7.03008, 15.2479, -11.3639, 0.92", "7.11537, 16.712, -13.2519, 0.92", "7.11648, 16.7224, -13.2654, 0.92", "7.27501, 18.2611, -15.4237, 0.92", "7.35422, 19.0611, -16.5738, 0.92", "7.35493, 19.0754, -16.5949, 0.92", "7.30738, 20.2376, -18.2145, 0.92", "7.25087, 20.9438, -19.1533, 0.92" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "6.31477, 10.2894, -5.26085, 1.38", "10.3142, 12.2167, -4.93506, 1.38" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.827815, 12.9738, 6.79269, 0.92", "-0.174889, 13.1696, 7.66204, 0.92", "0.42305, 13.355, 8.45204, 0.92", "1.25622, 13.5614, 9.57006, 0.92", "2.0241, 13.706, 10.6248, 0.92", "3.34228, 13.9435, 12.4897, 0.92", "4.09029, 14.0315, 13.5289, 0.46", "4.44146, 14.0563, 14.0469, 0.46", "4.99802, 14.0293, 14.8104, 0.46", "5.36343, 13.9394, 15.2108, 0.46", "6.37538, 13.4456, 15.9487, 0.46", "7.62612, 12.6793, 16.6287, 0.46", "7.63392, 12.6739, 16.6324, 0.46", "8.96313, 11.7927, 17.177, 0.46", "10.1918, 11.0257, 17.5651, 0.46", "11.3704, 10.2224, 17.8037, 0.46", "14.9848, 9.47807, 21.2261, 0.46" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-0.827815, 12.9738, 6.79269, 1.38", "-1.90034, 17.1996, 7.62506, 1.38", "-2.94766, 21.3261, 8.43786, 1.38", "-4.15101, 26.0674, 9.37176, 1.38", "-5.25419, 30.4139, 10.2279, 1.38", "-6.1333, 33.8777, 10.9102, 1.38", "-7.19908, 38.0769, 11.7373, 1.38" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.72588, -24.5872, 6.06189, 0.92", "7.97028, -26.3441, 5.0568, 0.92", "9.55339, -27.7458, 4.38833, 0.92", "12.1767, -30.1993, 3.35534, 0.92", "14.6748, -32.4883, 2.43365, 0.92", "17.593, -35.1046, 1.42359, 0.92", "20.0229, -37.4088, 0.590729, 0.92", "22.9437, -40.3817, -0.381786, 0.92", "25.5718, -43.1289, -1.25128, 0.92", "28.5553, -46.2673, -2.25418, 0.92", "31.3523, -49.3929, -3.24226, 0.92", "33.9845, -52.4882, -4.22187, 0.92", "35.7792, -54.5987, -4.93794, 0.92", "37.3512, -56.3016, -5.5949, 0.92", "37.3899, -56.3428, -5.6119, 0.92", "40.0583, -59.2524, -6.88803, 0.92", "40.0981, -59.292, -6.90632, 0.92", "43.1441, -62.203, -8.2317, 0.46", "45.7455, -64.6532, -9.31866, 0.46", "48.2672, -67.0184, -10.354, 0.46", "50.4874, -69.1391, -11.2248, 0.46", "54.1167, -72.5393, -12.584, 0.46", "57.3296, -75.5601, -13.7449, 0.46", "60.4973, -78.5869, -14.8934, 0.46", "60.522, -78.6106, -14.9027, 0.46", "65.1712, -83.0323, -16.8079, 0.46", "68.2817, -85.9577, -18.1669, 0.46", "68.3054, -85.9809, -18.1792, 0.46", "70.3913, -87.9815, -19.3584, 0.46", "71.7437, -89.3131, -20.1478, 0.46", "73.4586, -90.9906, -20.9428, 0.46", "73.475, -91.0067, -20.9485, 0.46", "75.7194, -93.343, -21.4675, 0.46", "79.3541, -97.1967, -21.9807, 0.46", "82.2169, -100.395, -22.1585, 0.46", "86.4645, -105.472, -22.2072, 0.46", "89.1468, -108.966, -22.1494, 0.46", "91.3417, -112.108, -22.0613, 0.46", "94.1331, -116.581, -22.0312, 0.46", "97.0165, -121.781, -22.1379, 0.46", "99.3589, -126.327, -22.3969, 0.46", "102.446, -132.846, -23.0486, 0.46", "103.919, -136.147, -23.4427, 0.46", "106.146, -141.502, -24.1897, 0.46", "107.409, -144.877, -24.6981, 0.46", "108.637, -148.526, -25.2903, 0.46", "109.456, -151.205, -25.7392, 0.46", "109.465, -151.239, -25.7427, 0.46", "110.732, -155.983, -25.8394, 0.46", "111.759, -160.035, -25.5378, 0.46", "112.836, -164.128, -25.0964, 0.46", "112.848, -164.174, -25.0914, 0.46", "114.496, -169.649, -24.7076, 0.46", "114.514, -169.706, -24.7031, 0.46", "115.121, -171.319, -24.5369, 0.46", "116.563, -174.538, -24.2229, 0.46", "117.522, -176.377, -24.151, 0.46", "118.907, -179.201, -24.5996, 0.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.72588, -24.5872, 6.06189, 0.92", "5.45926, -27.2555, 6.49469, 0.92", "5.23915, -29.879, 7.03472, 0.92", "4.93416, -32.5016, 7.66993, 0.92", "4.52906, -35.5114, 8.42829, 0.92", "4.11645, -38.7314, 9.20698, 0.92", "3.8339, -41.5013, 9.85111, 0.92", "3.59577, -43.5665, 10.3552, 0.92", "3.31814, -46.0543, 10.9672, 0.92", "2.96197, -49.5635, 11.8681, 0.92", "2.60857, -53.0692, 12.8008, 0.92", "2.38367, -56.7315, 13.695, 0.92" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-13.5964, -12.9048, 2.69917, 0.92", "-15.4254, -13.1354, 5.69431, 0.92", "-17.0358, -13.5971, 8.84488, 0.92", "-18.2501, -14.2488, 11.5307, 0.92", "-19.3126, -15.2773, 14.2596, 0.46", "-19.5017, -15.5053, 14.7826, 0.46", "-19.5076, -15.5135, 14.7999, 0.46", "-20.3798, -17.3534, 17.9074, 0.46", "-20.8452, -18.7356, 19.8837, 0.46", "-21.406, -21.4217, 23.4564, 0.46", "-21.4089, -21.4398, 23.4804, 0.46", "-21.5749, -22.3477, 24.6954, 0.46", "-21.9131, -23.8795, 26.721, 0.46", "-25.9863, -28.8493, 34.4306, 0.46", "-28.6485, -33.7191, 42.7905, 0.46", "-31.8884, -39.65, 50.2456, 0.46", "-35.4677, -45.8112, 57.3596, 0.46", "-37.6291, -52.4231, 64.6594, 0.46", "-37.9539, -59.9576, 71.4005, 0.46", "-39.3709, -66.3554, 79.056, 0.46", "-38.9727, -71.9263, 87.4151, 0.46", "-40.1376, -78.3483, 95.094, 0.46", "-42.2485, -84.151, 103.035, 0.46", "-43.2877, -91.8072, 109.57, 0.46", "-45.9703, -99.2808, 115.831, 0.46" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-13.5964, -12.9048, 2.69917, 0.92", "-14.8362, -16.3493, 3.80768, 0.92", "-15.7743, -18.8782, 4.70598, 0.92", "-17.2898, -23.0277, 6.33679, 0.92", "-18.0101, -25.0747, 7.21995, 0.92", "-19.0565, -27.7734, 8.49606, 0.92", "-19.8169, -29.4661, 9.35554, 0.92", "-20.8066, -31.3995, 10.4377, 0.92", "-21.6567, -32.7877, 11.2749, 0.92", "-22.5371, -34.1445, 12.1518, 0.92", "-24.068, -36.461, 13.6162, 0.92", "-25.7279, -38.8349, 15.1102, 0.92", "-27.2378, -40.9188, 16.3762, 0.92", "-29.6557, -44.0672, 18.197, 0.92", "-32.0724, -47.1291, 19.8314, 0.92", "-32.0926, -47.1555, 19.8442, 0.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-13.5964, -12.9048, 2.69917, 1.38", "-15.9964, -9.08259, 4.9992, 1.38", "-17.8252, -6.32412, 6.73174, 1.38", "-19.444, -3.86286, 8.22886, 1.38", "-21.018, -1.57077, 9.57638, 1.38", "-22.8496, 0.872931, 10.9753, 1.38", "-24.5649, 2.95364, 12.1682, 1.38", "-26.0774, 4.61006, 13.1203, 1.38", "-28.8845, 7.08776, 14.5688, 1.38", "-31.8854, 9.18164, 15.8244, 1.38", "-35.7508, 11.3777, 17.1325, 1.38", "-37.8881, 12.3909, 17.7397, 1.38", "-40.6873, 13.5221, 18.3859, 1.38", "-44.7925, 14.935, 19.1023, 1.38", "-47.5699, 15.7698, 19.4786, 1.38", "-50.0594, 16.5312, 19.7155, 1.38", "-50.0896, 16.5414, 19.7173, 1.38", "-53.1527, 17.8399, 19.8801, 1.38", "-55.9704, 19.2946, 20.0391, 1.38", "-58.6719, 20.93, 20.2152, 0.92", "-61.036, 22.5878, 20.4374, 0.92", "-63.9875, 24.8202, 20.7721, 0.92", "-66.7874, 27.1619, 21.139, 0.92", "-69.3498, 29.5736, 21.5273, 0.92", "-71.0789, 31.4816, 21.7988, 0.92", "-73.5221, 34.4801, 22.1563, 0.92", "-75.6855, 37.4934, 22.4701, 0.92", "-78.2677, 41.628, 22.7656, 0.92", "-79.6695, 44.0294, 22.8408, 0.92", "-81.5467, 47.4974, 22.8798, 0.92", "-83.926, 52.1407, 22.8741, 0.92", "-85.4613, 55.1396, 22.8533, 0.92", "-86.7383, 57.7996, 22.8775, 0.92", "-88.108, 60.6721, 22.9779, 0.92", "-90.5876, 65.7513, 23.3914, 0.92", "-90.602, 65.78, 23.3959, 0.92", "-92.2557, 69.0242, 24.167, 0.92", "-94.0249, 72.2753, 25.073, 0.92", "-96.4171, 76.2699, 26.3537, 0.92", "-98.4437, 79.5706, 27.4945, 0.92", "-101.202, 83.7582, 28.9686, 0.92", "-103.444, 86.9839, 30.0816, 0.92", "-105.339, 89.446, 30.8924, 0.92", "-106.901, 91.292, 31.4083, 0.92", "-109.514, 94.1035, 31.9945, 0.92", "-111.19, 95.8022, 32.2045, 0.92", "-113.838, 98.3562, 32.2621, 0.92", "-115.869, 100.225, 32.2131, 0.92", "-118.264, 102.372, 32.1581, 0.46", "-119.806, 103.808, 32.0562, 0.46", "-119.822, 103.822, 32.0547, 0.46", "-122.114, 105.869, 31.8464, 0.46", "-124.501, 108.063, 31.6902, 0.46", "-124.516, 108.078, 31.6902, 0.46", "-126.337, 110.05, 31.8017, 0.46", "-129.101, 113.366, 32.1033, 0.46", "-129.115, 113.383, 32.1052, 0.46", "-131.496, 116.616, 32.529, 0.46", "-133.368, 119.429, 32.9333, 0.46", "-135.005, 122.04, 33.3208, 0.46", "-136.305, 124.213, 33.6576, 0.46", "-138.31, 127.707, 34.2011, 0.46", "-139.993, 130.567, 34.6318, 0.46", "-142.468, 134.679, 35.2503, 0.46", "-145.068, 138.795, 35.8816, 0.46", "-148.241, 143.703, 36.5732, 0.46", "-151.689, 148.761, 37.205, 0.46", "-155.461, 154.069, 37.7944, 0.46", "-158.637, 158.326, 38.2126, 0.46", "-162.33, 162.955, 38.5769, 0.46", "-164.498, 165.43, 38.6831, 0.46", "-166.932, 167.973, 38.6649, 0.46", "-169.275, 170.273, 38.5446, 0.46", "-169.291, 170.287, 38.5429, 0.46", "-171.888, 172.337, 38.0581, 0.46", "-174.508, 174.038, 37.3373, 0.46", "-174.536, 174.052, 37.3296, 0.46" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "22.8219, 29.7086, 0.0, 0.46", "31.9175, 41.6363, 0.0, 0.46", "41.0131, 53.564, 0.0, 0.46" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "7.25087, 20.9438, -19.1533, 0.92", "7.41906, 21.2573, -21.0194, 0.92", "7.42167, 21.259, -21.0337, 0.92", "7.76763, 21.4357, -22.7324, 0.92", "7.77033, 21.4362, -22.7467, 0.92", "8.18509, 21.4341, -25.315, 0.92", "8.45829, 21.4274, -28.0781, 0.92", "8.41255, 21.4549, -31.0544, 0.92", "8.40685, 21.4554, -31.127, 0.92", "8.07507, 21.4475, -33.5828, 0.92", "7.7094, 21.3977, -35.6243, 0.92", "7.15349, 21.259, -38.2203, 0.92", "6.00778, 20.904, -43.2328, 0.92", "5.31156, 20.6585, -46.0177, 0.92", "4.59167, 20.346, -48.8818, 0.92", "3.87872, 19.9649, -51.8461, 0.92", "3.21213, 19.4627, -54.9276, 0.92", "2.72209, 18.9335, -57.5749, 0.92", "2.34249, 18.3617, -60.0675, 0.92", "2.02741, 17.7647, -62.5513, 0.92", "1.88623, 17.4904, -63.8666, 0.92", "1.59809, 16.953, -67.0277, 0.92", "1.59638, 16.9508, -67.042, 0.92", "1.08769, 16.5228, -70.0509, 0.92", "0.826382, 16.3492, -71.3335, 0.92", "0.19029, 15.8857, -74.3036, 0.92", "0.181333, 15.8801, -74.3384, 0.92", "-0.39857, 15.5027, -76.3652, 0.92", "-1.07254, 15.0315, -78.6411, 0.92", "-1.07689, 15.028, -78.6545, 0.92", "-1.94143, 14.0845, -81.5437, 0.92" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "7.25087, 20.9438, -19.1533, 0.92", "6.91822, 23.0716, -21.696, 0.92", "6.74879, 25.2439, -23.9573, 0.92", "6.65149, 27.1205, -25.826, 0.92", "6.62028, 29.9079, -28.4027, 0.92", "6.67682, 31.8996, -30.1958, 0.92", "6.76132, 34.4275, -32.4597, 0.92", "6.81988, 37.2907, -34.9631, 0.92", "6.95365, 39.1365, -36.5417, 0.92", "7.38284, 42.3606, -39.2742, 0.92", "7.77635, 44.2949, -40.9278, 0.92", "8.37714, 46.775, -43.1, 0.92", "8.96422, 49.2793, -45.4266, 0.92", "9.43889, 51.3817, -47.4775, 0.92", "9.44534, 51.4068, -47.5025, 0.92" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "10.3142, 12.2167, -4.93506, 0.92", "12.5797, 14.9453, -7.27327, 0.92", "14.0691, 16.5037, -8.68288, 0.92", "15.1018, 17.4651, -9.51108, 0.92", "16.2958, 18.5974, -10.3452, 0.46", "18.2093, 20.3375, -11.5081, 0.46", "18.2202, 20.3474, -11.5141, 0.46", "19.9294, 21.844, -12.284, 0.46", "21.7875, 23.5027, -12.981, 0.46", "24.0053, 25.6596, -13.6577, 0.46", "25.8994, 27.628, -14.1497, 0.46", "27.5048, 29.3738, -14.5341, 0.46", "28.8075, 30.8464, -14.8585, 0.46", "30.3677, 32.6924, -15.2726, 0.46", "31.9463, 34.489, -15.7412, 0.46", "34.1364, 36.8379, -16.4161, 0.46", "34.1476, 36.8489, -16.4191, 0.46", "35.5775, 38.0689, -16.7518, 0.46", "37.4534, 39.4877, -17.196, 0.46", "40.0977, 41.3383, -17.8153, 0.46", "40.1751, 41.3906, -17.8334, 0.46", "43.052, 43.3983, -18.4688, 0.46", "45.6967, 45.3334, -19.0407, 0.46", "47.1305, 46.5042, -19.3605, 0.46", "47.1479, 46.5199, -19.3651, 0.46", "49.8003, 49.3062, -20.2229, 0.46", "51.8033, 51.6846, -20.9814, 0.46", "51.8171, 51.7031, -20.9875, 0.46", "53.6378, 54.3141, -21.7652, 0.46", "54.2001, 55.1424, -22.0008, 0.46", "55.8333, 57.6207, -22.6848, 0.46", "57.3135, 59.8788, -23.2755, 0.46", "59.247, 62.7863, -23.9642, 0.46", "60.9094, 65.2382, -24.467, 0.46", "61.964, 66.7608, -24.7354, 0.46", "63.2593, 68.7962, -25.0199, 0.46", "64.6384, 71.3218, -25.3058, 0.46", "66.3996, 75.017, -25.6627, 0.46", "67.5462, 77.959, -25.948, 0.46", "67.5513, 77.9742, -25.9496, 0.46", "68.5187, 81.7179, -26.4657, 0.46", "69.3942, 85.8733, -27.2449, 0.46", "69.4023, 85.9276, -27.2573, 0.46", "69.8299, 90.0046, -28.2776, 0.46", "69.8315, 90.0201, -28.2819, 0.46", "70.2435, 93.4255, -29.2951, 0.46", "70.7749, 96.6481, -30.4033, 0.46", "71.3711, 100.211, -31.7102, 0.46", "71.592, 101.558, -32.1886, 0.46" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "10.3142, 12.2167, -4.93506, 0.92", "13.4651, 13.1245, -5.44317, 0.92", "16.0778, 13.8954, -5.87566, 0.92", "16.9451, 14.1256, -6.0366, 0.92", "19.6038, 14.7921, -6.55788, 0.92", "22.4434, 15.4728, -7.18956, 0.92", "25.6893, 16.2, -8.05184, 0.92", "25.7073, 16.2037, -8.05835, 0.92", "28.0003, 16.6649, -9.1965, 0.92", "28.0254, 16.6701, -9.21041, 0.92", "30.6308, 17.2316, -10.9048, 0.92", "32.7042, 17.5989, -12.4813, 0.92", "35.053, 17.9772, -14.5354, 0.92", "36.6687, 18.2803, -16.0232, 0.92" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "14.9848, 9.47807, 21.2261, 0.46", "22.5448, 8.15104, 27.5227, 0.46", "30.4672, 6.96367, 33.3865, 0.46", "38.5551, 4.88092, 38.7769, 0.46", "46.2289, 3.44698, 44.9129, 0.46", "53.4191, 0.741528, 51.2289, 0.46", "60.7239, -2.09255, 57.3588, 0.46", "68.6176, -3.59869, 63.194, 0.46", "76.8508, -6.67745, 67.8767, 0.46", "85.4883, -11.0032, 70.4472, 0.46", "94.1836, -14.7997, 73.5472, 0.46", "103.133, -18.8248, 75.4293, 0.46", "111.825, -23.2692, 77.6014, 0.46" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "14.9848, 9.47807, 21.2261, 0.46", "21.9569, 7.80456, 27.8631, 0.46", "28.8152, 5.31654, 34.3776, 0.46", "36.3154, 2.36766, 39.9318, 0.46", "42.8076, -0.894002, 46.4994, 0.46", "48.6323, -4.28886, 53.6074, 0.46", "52.6903, -8.32529, 61.5753, 0.46" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-7.19908, 38.0769, 11.7373, 0.46", "-10.4723, 38.9934, 11.531, 0.46", "-12.671, 39.6653, 11.4983, 0.46", "-17.4963, 41.0281, 11.6831, 0.46", "-20.6278, 41.9957, 11.9553, 0.46", "-22.8574, 42.7596, 12.2445, 0.46", "-25.7782, 43.8565, 12.7348, 0.46", "-27.6561, 44.6736, 13.2268, 0.46", "-30.0758, 45.8024, 14.0137, 0.46", "-32.6191, 47.1693, 15.0971, 0.46", "-34.5978, 48.3568, 16.0816, 0.46", "-37.0697, 49.8823, 17.3931, 0.46", "-38.964, 51.1985, 18.481, 0.46", "-46.8289, 53.6786, 21.9287, 0.46", "-54.4051, 55.3484, 26.3534, 0.46", "-62.5915, 56.0678, 29.8397, 0.46", "-71.1289, 56.524, 32.4063, 0.46" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.19908, 38.0769, 11.7373, 1.38", "-8.60634, 41.78, 11.6034, 1.38", "-9.96021, 45.4271, 11.5196, 0.92", "-11.3429, 49.1615, 11.5421, 0.92", "-11.3499, 49.1792, 11.5427, 0.92", "-12.6185, 52.2977, 11.6951, 0.92", "-13.8025, 55.0949, 11.8755, 0.92", "-13.8101, 55.1122, 11.8772, 0.92", "-15.4655, 58.343, 12.2784, 0.92", "-17.4646, 61.7888, 12.8315, 0.92", "-17.4744, 61.8049, 12.8342, 0.92", "-19.5221, 64.9478, 13.3984, 0.92", "-21.8858, 68.4255, 13.9983, 0.92", "-24.6405, 72.376, 14.6812, 0.92", "-26.8464, 75.3618, 15.197, 0.92" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.38367, -56.7315, 13.695, 0.92", "2.27149, -59.4271, 14.5067, 0.92", "2.09769, -61.7351, 15.2094, 0.92", "1.96055, -64.3501, 16.0738, 0.92", "1.9184, -66.4212, 16.7789, 0.92", "1.89001, -68.5371, 17.4651, 0.92", "1.84887, -70.3856, 18.0492, 0.92", "1.75168, -72.5896, 18.7437, 0.92", "1.59913, -74.3794, 19.2781, 0.92", "1.31868, -76.8732, 20.0054, 0.92", "0.883963, -79.8658, 20.8739, 0.92", "0.554263, -82.0336, 21.4973, 0.92", "0.226206, -84.2099, 22.1118, 0.92", "-0.122004, -86.2713, 22.6623, 0.92", "-0.553773, -88.7084, 23.2882, 0.92", "-1.05451, -91.4276, 23.9795, 0.92", "-1.42384, -93.5515, 24.5204, 0.92", "-1.63485, -95.0915, 24.898, 0.92", "-1.78937, -96.6573, 25.2873, 0.92", "-1.94131, -98.6573, 25.8269, 0.92", "-1.97935, -101.137, 26.5782, 0.92", "-1.7744, -103.251, 27.3082, 0.92", "-1.31815, -105.303, 28.1307, 0.92", "-0.612944, -107.204, 29.0438, 0.92", "0.437131, -108.547, 29.8442, 0.46", "2.33062, -109.706, 30.7943, 0.46", "4.23836, -110.356, 31.4714, 0.46", "6.63504, -110.793, 32.0836, 0.46", "6.65189, -110.794, 32.0863, 0.46", "9.99623, -110.72, 32.3165, 0.46", "10.0218, -110.719, 32.3163, 0.46", "11.5554, -110.832, 32.1985, 0.46", "11.5803, -110.837, 32.1948, 0.46", "13.8376, -111.585, 31.7967, 0.46", "14.7246, -111.913, 31.6561, 0.46", "14.7477, -111.924, 31.6535, 0.46", "16.8783, -112.888, 31.3948, 0.46", "17.2909, -113.044, 31.3341, 0.46", "18.3685, -121.665, 32.3577, 0.46", "20.2116, -130.188, 32.9917, 0.46", "20.8912, -138.906, 32.6668, 0.46" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "2.38367, -56.7315, 13.695, 0.92", "3.34365, -58.9565, 11.9679, 0.92", "3.35017, -58.9724, 11.9565, 0.92", "4.27874, -60.8263, 10.6048, 0.92", "5.34597, -62.8405, 9.27326, 0.92", "5.35833, -62.865, 9.25905, 0.92", "6.71288, -65.6585, 7.80487, 0.92", "7.69136, -67.6886, 6.84922, 0.92", "8.93131, -70.3717, 5.72963, 0.92", "10.5388, -73.9179, 4.43043, 0.92", "12.0081, -77.2232, 3.34475, 0.92", "12.9735, -79.5211, 2.66031, 0.92", "13.0124, -79.6138, 2.63561, 0.92", "13.9354, -81.9693, 2.08346, 0.92", "14.5811, -83.6956, 1.71848, 0.92", "15.6928, -86.6973, 1.11347, 0.92", "16.7991, -89.504, 0.526124, 0.92", "17.5813, -91.5871, 0.115735, 0.92", "19.3519, -96.3905, -0.781779, 0.92", "20.3219, -98.9854, -1.1941, 0.92", "21.6019, -102.372, -1.70148, 0.92", "22.6856, -105.161, -2.18511, 0.92", "24.0109, -108.474, -2.86142, 0.92", "25.2465, -111.749, -3.60487, 0.92", "26.7116, -115.661, -4.60298, 0.92", "27.5489, -118.11, -5.28875, 0.92", "28.5397, -121.198, -6.23425, 0.92", "29.5838, -125.227, -7.50143, 0.92", "30.243, -128.091, -8.49685, 0.92", "30.2504, -128.14, -8.51378, 0.92", "30.4175, -130.872, -9.34182, 0.92", "30.4194, -130.913, -9.35107, 0.92", "30.674, -134.535, -10.0466, 0.46", "30.7254, -134.993, -10.1343, 0.46", "31.4433, -138.718, -10.894, 0.46", "32.645, -143.323, -11.8514, 0.46", "33.5949, -146.217, -12.4502, 0.46", "34.5425, -148.68, -13.04, 0.46", "36.1155, -152.089, -14.0281, 0.46", "36.9672, -153.747, -14.5761, 0.46", "38.5757, -156.435, -15.6834, 0.46", "39.8566, -158.407, -16.7045, 0.46", "41.055, -160.592, -17.8697, 0.46", "41.7741, -162.372, -18.7575, 0.46", "41.7798, -162.39, -18.7662, 0.46", "42.4217, -165.094, -19.9134, 0.46", "42.8907, -167.579, -20.861, 0.46", "43.3425, -170.016, -21.6853, 0.46", "43.8572, -172.871, -22.513, 0.46", "44.2354, -174.76, -23.0739, 0.46", "44.7635, -177.054, -23.792, 0.46", "45.4879, -179.578, -24.6946, 0.46", "46.3916, -182.371, -25.908, 0.46", "46.4004, -182.397, -25.9219, 0.46", "47.1644, -185.099, -27.5525, 0.46", "47.168, -185.116, -27.5634, 0.46", "47.594, -187.632, -29.2391, 0.46", "47.9302, -190.483, -31.1521, 0.46", "48.0399, -192.467, -32.4246, 0.46", "48.0834, -194.076, -33.4046, 0.46", "48.0834, -194.095, -33.4145, 0.46", "48.0548, -196.378, -34.5319, 0.46", "48.0534, -196.436, -34.555, 0.46", "48.065, -198.203, -35.1725, 0.46", "48.0657, -198.253, -35.1872, 0.46", "48.1474, -201.474, -36.0575, 0.46", "48.1247, -202.051, -36.1991, 0.46", "47.897, -204.549, -36.7685, 0.46", "47.8714, -204.742, -36.8029, 0.46", "47.4551, -207.218, -37.1619, 0.46", "47.4509, -207.249, -37.1651, 0.46", "47.0154, -210.667, -37.4085, 0.46", "47.0125, -210.719, -37.41, 0.46", "47.0287, -214.985, -37.2562, 0.46", "47.0323, -215.057, -37.2501, 0.46", "47.5127, -220.653, -36.5991, 0.46", "47.5252, -220.776, -36.5814, 0.46", "48.2157, -226.295, -35.6509, 0.46", "48.633, -230.639, -34.7883, 0.46", "48.8034, -233.758, -34.0572, 0.46", "48.8036, -233.778, -34.0519, 0.46", "48.5046, -237.895, -32.8378, 0.46", "48.5009, -237.925, -32.8289, 0.46", "47.7607, -241.598, -31.7151, 0.46", "46.9086, -245.114, -30.6734, 0.46", "46.8878, -245.191, -30.6503, 0.46", "45.5986, -249.868, -29.22, 0.46", "45.5879, -249.907, -29.2083, 0.46", "44.808, -252.837, -28.4085, 0.46", "44.7958, -252.886, -28.3965, 0.46", "44.0777, -255.579, -27.8014, 0.46", "44.0351, -255.692, -27.7708, 0.46", "41.2824, -260.244, -25.966, 0.46", "39.9592, -261.493, -25.0956, 0.46", "39.9372, -261.51, -25.0816, 0.46", "37.0498, -263.27, -23.2451, 0.46", "32.5228, -265.012, -20.3475, 0.46", "29.1313, -265.692, -18.1333, 0.46", "25.2672, -265.461, -15.5164, 0.46" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-45.9703, -99.2808, 115.831, 0.46", "-48.6004, -107.382, 125.468, 0.46", "-49.1227, -113.58, 136.659, 0.46", "-47.114, -118.347, 148.334, 0.46", "-42.647, -122.443, 159.557, 0.46", "-35.5045, -124.904, 169.813, 0.46" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-45.9703, -99.2808, 115.831, 0.46", "-48.2019, -104.955, 123.616, 0.46", "-52.227, -108.686, 131.789, 0.46", "-56.5765, -112.044, 139.949, 0.46", "-61.2414, -115.015, 148.078, 0.46", "-65.1201, -119.413, 156.003, 0.46", "-69.6949, -121.759, 164.373, 0.46", "-72.8464, -123.336, 173.531, 0.46" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-32.0926, -47.1555, 19.8442, 0.92", "-31.955, -51.2619, 19.7051, 0.92" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-32.0926, -47.1555, 19.8442, 0.92", "-34.8769, -47.1991, 20.6101, 0.92", "-34.8952, -47.2005, 20.6142, 0.92", "-36.7587, -47.4491, 20.8637, 0.46", "-39.1477, -47.822, 21.0788, 0.46", "-41.5478, -48.2303, 21.184, 0.46", "-45.0387, -48.9306, 21.1617, 0.46", "-47.3838, -49.5178, 21.0086, 0.46", "-50.8519, -50.4676, 20.5175, 0.46", "-51.2033, -50.5741, 20.4344, 0.46", "-53.1812, -51.2999, 19.76, 0.46", "-55.3949, -52.2021, 18.7292, 0.46", "-55.4101, -52.2088, 18.7203, 0.46", "-56.8731, -52.8561, 17.7847, 0.46", "-56.8951, -52.8663, 17.7703, 0.46", "-59.4159, -54.0567, 16.0053, 0.46", "-61.038, -54.7565, 14.8211, 0.46", "-62.3191, -55.3527, 13.848, 0.46", "-64.6047, -56.6028, 12.1029, 0.46", "-64.6177, -56.6115, 12.0924, 0.46", "-66.2779, -57.8946, 10.6589, 0.46", "-67.521, -59.0112, 9.46905, 0.46", "-69.5064, -60.9637, 7.498, 0.46", "-71.3438, -62.8938, 5.54228, 0.46", "-72.742, -64.4016, 3.96272, 0.46", "-72.7521, -64.4128, 3.9513, 0.46", "-74.8897, -66.8648, 1.5464, 0.46", "-76.6188, -68.9209, -0.506446, 0.46", "-78.9167, -71.3216, -3.24688, 0.46", "-78.9921, -71.3965, -3.34037, 0.46" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "9.44534, 51.4068, -47.5025, 0.92", "10.9061, 54.0946, -49.5182, 0.92", "12.5502, 56.9268, -51.7423, 0.92", "14.1536, 59.6218, -53.8968, 0.92", "14.1679, 59.6454, -53.9162, 0.92", "15.7371, 62.2824, -56.1295, 0.92", "17.306, 64.8363, -58.4211, 0.92", "18.9422, 67.5322, -61.0951, 0.92", "18.951, 67.5469, -61.1097, 0.92", "20.3965, 69.9663, -63.6986, 0.92", "21.5015, 71.9159, -65.8029, 0.92", "22.5237, 73.7965, -67.7372, 0.92", "23.9746, 76.6188, -70.3146, 0.92", "23.986, 76.6437, -70.3346, 0.92", "25.755, 80.6139, -73.3327, 0.92", "27.1837, 84.0603, -75.7434, 0.92", "28.8882, 88.3541, -78.5835, 0.92", "30.4849, 92.6721, -81.3707, 0.92", "31.5611, 95.6712, -83.3069, 0.92", "33.1592, 100.279, -86.5654, 0.92", "34.6554, 104.793, -89.9978, 0.92", "34.6604, 104.81, -90.0118, 0.92", "35.7589, 109.282, -93.9328, 0.92", "35.7623, 109.298, -93.9477, 0.92", "36.8875, 115.78, -99.6626, 0.92", "36.8912, 115.806, -99.6847, 0.92", "37.4178, 120.045, -103.138, 0.92", "37.4294, 120.154, -103.22, 0.92", "37.7839, 123.933, -105.857, 0.92", "38.3049, 130.143, -109.922, 0.92", "38.308, 130.193, -109.95, 0.92", "38.6849, 135.17, -112.856, 0.92", "38.7454, 135.724, -113.209, 0.92" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "9.44534, 51.4068, -47.5025, 0.92", "8.88428, 53.4051, -48.3147, 0.92", "8.34448, 55.4692, -49.1793, 0.92", "7.78234, 57.8189, -50.2224, 0.92", "7.06283, 60.4317, -51.5157, 0.92", "7.05584, 60.4549, -51.5284, 0.92", "6.65946, 61.7498, -52.2967, 0.92", "5.84238, 64.0078, -53.8289, 0.92", "5.05108, 65.9723, -55.3263, 0.92", "4.12545, 68.1388, -57.1299, 0.92", "3.49074, 69.4758, -58.2941, 0.92", "2.48193, 71.473, -60.0647, 0.92", "1.34715, 73.5429, -61.9106, 0.92", "0.339514, 75.32, -63.4152, 0.92", "-0.617486, 77.0913, -64.7085, 0.92", "-1.95274, 79.7685, -66.3949, 0.92", "-1.96336, 79.7907, -66.407, 0.92", "-3.20949, 82.5762, -67.7744, 0.92", "-4.61946, 85.9843, -69.409, 0.92", "-6.0055, 89.1961, -71.034, 0.92", "-6.18926, 89.6345, -71.2517, 0.92", "-7.23044, 92.1855, -72.534, 0.92", "-8.16966, 94.5012, -73.748, 0.92", "-9.37862, 97.5272, -75.5016, 0.92", "-10.4943, 100.159, -77.402, 0.92" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "71.592, 101.558, -32.1886, 0.46", "74.8715, 103.214, -33.2225, 0.46", "77.6764, 104.631, -34.1067, 0.46", "80.8516, 106.235, -35.1077, 0.46" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "71.592, 101.558, -32.1886, 0.46", "71.6729, 107.398, -31.388, 0.46", "71.7151, 111.463, -30.8624, 0.46", "71.7794, 116.115, -30.3267, 0.46", "71.8768, 122.058, -29.7153, 0.46", "71.9711, 126.232, -29.3412, 0.46", "72.1077, 130.455, -29.0478, 0.46", "72.1082, 130.475, -29.0472, 0.46", "72.2072, 134.077, -29.0982, 0.46", "72.3235, 138.185, -29.3935, 0.46", "72.3702, 142.308, -29.9305, 0.46", "72.2845, 146.15, -30.4085, 0.46", "72.1874, 149.806, -30.9003, 0.46", "72.1866, 149.825, -30.9031, 0.46", "71.9787, 152.815, -31.3745, 0.46", "71.4979, 157.274, -32.1763, 0.46", "70.8351, 161.174, -32.8649, 0.46" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "36.6687, 18.2803, -16.0232, 0.92", "38.5669, 19.5577, -16.8772, 0.92", "40.3017, 20.7502, -17.6251, 0.92", "42.9987, 22.6242, -18.6707, 0.92", "45.7364, 24.5371, -19.6693, 0.46", "48.1264, 26.1953, -20.4757, 0.46", "50.6, 27.8762, -21.2305, 0.46", "50.6123, 27.8843, -21.2337, 0.46", "52.2475, 28.9389, -21.5489, 0.46", "52.2601, 28.9467, -21.5508, 0.46", "53.5034, 29.6453, -21.751, 0.46", "55.0923, 30.3651, -22.0182, 0.46", "57.7566, 31.4855, -22.5418, 0.46", "59.8049, 32.2917, -23.0554, 0.46", "59.8252, 32.2992, -23.0614, 0.46", "61.4479, 32.9375, -23.6819, 0.46", "62.968, 33.5263, -24.3692, 0.46", "65.9076, 34.5172, -25.8689, 0.46", "68.2974, 35.2411, -27.1392, 0.46", "68.3292, 35.2503, -27.1565, 0.46", "73.4806, 36.7347, -30.079, 0.46", "76.7136, 37.6534, -31.9846, 0.46", "80.8998, 38.9206, -34.6683, 0.46", "84.0263, 39.8703, -36.7825, 0.46", "84.0381, 39.8743, -36.7907, 0.46", "86.8783, 40.9144, -38.7954, 0.46", "86.9123, 40.929, -38.8206, 0.46", "89.7931, 42.5844, -41.1953, 0.46", "89.8286, 42.6097, -41.2245, 0.46", "92.2384, 44.4645, -43.0789, 0.46", "92.2487, 44.4726, -43.0863, 0.46", "94.71, 46.4322, -44.7585, 0.46", "96.664, 47.9876, -46.0435, 0.46", "99.7232, 50.3804, -47.9408, 0.46", "101.914, 52.0696, -49.3017, 0.46", "102.011, 52.1413, -49.3631, 0.46", "104.583, 54.0219, -51.0262, 0.46", "104.599, 54.0332, -51.0367, 0.46", "107.543, 55.9451, -52.9255, 0.46", "107.57, 55.9629, -52.9439, 0.46", "110.86, 58.0187, -55.1018, 0.46", "110.904, 58.0498, -55.1281, 0.46", "114.1, 60.5162, -56.8273, 0.46", "114.137, 60.5491, -56.8465, 0.46", "116.015, 62.557, -57.8028, 0.46", "116.024, 62.5681, -57.8079, 0.46", "118.025, 65.7135, -59.0896, 0.46", "118.033, 65.7254, -59.0952, 0.46", "119.592, 68.3847, -60.4554, 0.46", "119.6, 68.396, -60.4618, 0.46", "121.604, 70.633, -61.7478, 0.46", "121.667, 70.6891, -61.779, 0.46", "124.989, 73.2392, -63.1858, 0.46", "125.006, 73.2517, -63.1927, 0.46", "128.501, 75.6387, -64.4395, 0.46", "133.21, 78.7836, -65.9956, 0.46", "137.441, 81.5052, -67.2158, 0.46", "140.978, 83.7837, -68.194, 0.46", "143.428, 85.3669, -68.8182, 0.46" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "36.6687, 18.2803, -16.0232, 0.46", "37.1411, 17.3882, -17.7492, 0.46", "37.7592, 16.3008, -20.0342, 0.46", "37.7642, 16.291, -20.0532, 0.46", "38.7121, 14.6957, -22.9216, 0.46", "39.6993, 13.0617, -25.7344, 0.46", "40.7848, 11.1899, -28.6216, 0.46", "40.7945, 11.1718, -28.6474, 0.46", "41.5411, 9.75939, -30.4669, 0.46", "42.4505, 8.1738, -32.3601, 0.46", "42.6658, 7.86193, -32.6997, 0.46", "44.1064, 5.92427, -34.6817, 0.46", "45.4116, 4.16421, -36.3261, 0.46", "45.4382, 4.12941, -36.3596, 0.46", "46.7701, 2.49744, -38.0094, 0.46", "48.3216, 0.628102, -40.0011, 0.46", "49.8023, -1.05869, -41.8542, 0.46", "49.8137, -1.07097, -41.8684, 0.46", "51.3128, -2.72497, -43.7851, 0.46", "52.5999, -4.19935, -45.5449, 0.46", "54.0637, -5.90314, -47.5898, 0.46", "54.0788, -5.92165, -47.6126, 0.46", "55.3676, -7.51681, -49.6865, 0.46", "56.7591, -9.22004, -51.94, 0.46", "58.116, -10.8342, -54.1769, 0.46" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "111.825, -23.2692, 77.6014, 0.46", "120.159, -26.9906, 76.0158, 0.46" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "111.825, -23.2692, 77.6014, 0.46", "119.32, -25.9602, 86.0206, 0.46" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-26.8464, 75.3618, 15.197, 0.46", "-28.542, 77.9412, 15.9329, 0.46", "-30.3479, 80.8486, 16.485, 0.46", "-31.9441, 83.6383, 16.8513, 0.46", "-33.5096, 86.6219, 17.1338, 0.46", "-35.5366, 90.6962, 17.4408, 0.46", "-37.6969, 95.4077, 17.7411, 0.46", "-39.3967, 99.9471, 17.8309, 0.46", "-40.5771, 103.89, 17.771, 0.46", "-41.5017, 107.904, 17.612, 0.46", "-41.8582, 110.565, 17.4539, 0.46", "-41.9477, 112.893, 17.2905, 0.46", "-41.6488, 115.767, 17.0902, 0.46", "-41.1737, 117.41, 17.0232, 0.46", "-41.1304, 117.486, 17.0202, 0.46", "-40.438, 118.134, 16.9826, 0.46", "-41.8131, 126.766, 18.0233, 0.46" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-26.8464, 75.3618, 15.197, 0.92", "-26.8431, 78.3548, 14.9416, 0.92", "-26.8222, 80.6015, 14.6878, 0.92", "-26.7942, 82.8422, 14.4082, 0.92", "-26.7796, 85.9368, 13.991, 0.92", "-26.8185, 89.284, 13.5304, 0.92", "-26.8808, 92.3167, 13.1176, 0.92", "-26.9782, 95.0442, 12.7138, 0.92", "-26.9797, 95.0759, 12.7088, 0.92", "-27.1289, 97.6891, 12.2675, 0.92", "-27.2614, 99.615, 11.917, 0.92", "-27.4473, 102.557, 11.3508, 0.92", "-27.6415, 105.543, 10.7974, 0.92", "-27.643, 105.562, 10.7941, 0.92", "-27.7758, 107.45, 10.4937, 0.92", "-27.8837, 109.436, 10.2079, 0.92", "-28.0542, 113.192, 9.72679, 0.92", "-28.157, 115.341, 9.49242, 0.46", "-28.3006, 118.083, 9.22812, 0.46", "-28.4452, 120.792, 8.98784, 0.46", "-28.6121, 123.411, 8.78731, 0.46", "-28.8491, 126.384, 8.5688, 0.46", "-29.074, 128.609, 8.40569, 0.46", "-29.3524, 130.555, 8.21918, 0.46", "-29.824, 133.123, 7.90204, 0.46", "-30.3395, 135.352, 7.57794, 0.46", "-30.9552, 137.538, 7.22398, 0.46", "-31.3511, 138.695, 7.01152, 0.46", "-32.1505, 140.618, 6.62138, 0.46", "-32.2288, 140.768, 6.58934, 0.46", "-33.5185, 147.059, 6.47828, 0.46", "-34.8262, 153.331, 6.02074, 0.46", "-34.9475, 159.756, 5.81331, 0.46" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "20.8912, -138.906, 32.6668, 0.46", "24.1139, -149.247, 34.5567, 0.46", "27.7354, -159.625, 34.171, 0.46", "28.6511, -170.593, 34.5361, 0.46", "30.6253, -181.351, 35.7723, 0.46", "33.0642, -191.796, 38.1926, 0.46", "32.8808, -202.434, 40.9483, 0.46" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "20.8912, -138.906, 32.6668, 0.46", "21.0543, -143.582, 34.9996, 0.46", "21.4703, -148.182, 37.4448, 0.46", "21.4307, -152.732, 40.0082, 0.46", "21.2783, -157.27, 42.5866, 0.46", "22.1136, -161.679, 45.2533, 0.46", "23.2747, -166.436, 47.1078, 0.46" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-31.955, -51.2619, 19.7051, 0.46", "-30.3165, -52.6577, 17.8788, 0.46", "-29.2869, -53.6614, 16.6699, 0.46", "-28.4038, -54.6233, 15.4797, 0.46", "-27.252, -56.0331, 13.533, 0.46", "-27.2454, -56.0425, 13.5192, 0.46", "-26.3226, -57.4822, 11.3292, 0.46", "-26.3188, -57.4905, 11.3138, 0.46", "-26.1196, -58.2637, 9.72596, 0.46", "-26.0951, -58.9584, 8.10082, 0.46", "-26.2509, -59.8409, 5.95284, 0.46", "-26.2544, -59.8639, 5.895, 0.46", "-26.3866, -60.7309, 3.48686, 0.46", "-26.3874, -60.7371, 3.47018, 0.46", "-26.3693, -61.6808, 1.11433, 0.46", "-26.3663, -61.7015, 1.06518, 0.46", "-26.0729, -62.5482, -1.03763, 0.46", "-26.0694, -62.5549, -1.05375, 0.46", "-25.5571, -63.2091, -2.5631, 0.46", "-24.7955, -63.9752, -4.45854, 0.46", "-24.7792, -63.9892, -4.49743, 0.46", "-24.1107, -64.6189, -6.48085, 0.46", "-24.107, -64.6229, -6.49776, 0.46", "-23.7249, -65.121, -8.87419, 0.46", "-23.7236, -65.1244, -8.89156, 0.46", "-23.6966, -65.5978, -11.5822, 0.46", "-23.7557, -66.1615, -14.5564, 0.46", "-23.9547, -66.8447, -18.0629, 0.46", "-23.9554, -66.8483, -18.0803, 0.46", "-23.9686, -67.5332, -20.968, 0.46", "-23.9632, -67.5679, -21.0966, 0.46", "-23.7063, -68.4444, -23.8349, 0.46", "-23.704, -68.4507, -23.8514, 0.46", "-23.2126, -69.6692, -26.5349, 0.46", "-22.682, -70.9392, -29.2394, 0.46", "-22.6785, -70.9468, -29.2551, 0.46", "-22.3632, -71.9299, -31.2761, 0.46", "-22.3619, -71.9417, -31.3001, 0.46", "-22.4792, -73.0564, -33.6002, 0.46", "-22.4817, -73.0638, -33.6162, 0.46", "-23.1154, -74.4565, -36.7777, 0.46", "-23.7104, -75.6738, -39.8949, 0.46", "-24.2568, -76.7145, -42.8748, 0.46", "-24.7432, -77.5817, -45.5673, 0.46", "-25.3548, -78.527, -49.0729, 0.46", "-25.3577, -78.531, -49.09, 0.46", "-25.9845, -79.3057, -52.9985, 0.46", "-26.459, -79.9493, -56.9001, 0.46", "-26.4611, -79.9532, -56.9263, 0.46", "-26.617, -80.3696, -59.7038, 0.46", "-26.6179, -80.3723, -59.7213, 0.46", "-26.7993, -80.8762, -62.6661, 0.46", "-26.804, -80.8859, -62.7092, 0.46", "-27.0661, -81.4543, -65.1539, 0.46", "-27.0856, -81.5024, -65.3239, 0.46" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-31.955, -51.2619, 19.7051, 0.46", "-33.6847, -53.9648, 20.4263, 0.46", "-35.5045, -57.0108, 21.2397, 0.46", "-37.2005, -60.1375, 22.0824, 0.46", "-37.4398, -60.6379, 22.1969, 0.46", "-38.639, -63.6991, 22.7058, 0.46", "-38.8062, -64.2366, 22.7798, 0.46", "-39.3249, -66.5266, 22.987, 0.46", "-39.7449, -68.8782, 23.1759, 0.46", "-40.2458, -73.3004, 23.4522, 0.46", "-40.6104, -77.6235, 23.6462, 0.46", "-40.7541, -80.0287, 23.7175, 0.46", "-40.7567, -80.0656, 23.7186, 0.46", "-41.1164, -83.764, 23.7963, 0.46", "-41.4088, -86.734, 23.8245, 0.46", "-41.4119, -86.7585, 23.825, 0.46", "-42.0057, -90.4718, 23.9072, 0.46", "-42.6977, -94.787, 23.9138, 0.46", "-43.2983, -99.0856, 23.8693, 0.46", "-43.48, -100.621, 23.8311, 0.46", "-44.0552, -105.288, 23.7369, 0.46", "-44.0609, -105.337, 23.735, 0.46", "-44.5802, -109.047, 23.5143, 0.46", "-45.2025, -112.698, 23.2924, 0.46", "-45.2098, -112.734, 23.2905, 0.46", "-46.1171, -116.433, 23.1827, 0.46", "-47.2719, -120.732, 23.1004, 0.46", "-48.5867, -125.416, 23.1243, 0.46", "-49.4719, -128.41, 23.2306, 0.46", "-51.1428, -134.043, 23.546, 0.46", "-52.9144, -140.33, 24.108, 0.46", "-52.9211, -140.353, 24.1106, 0.46", "-54.4886, -146.075, 25.0289, 0.46", "-54.7614, -147.23, 25.2481, 0.46", "-55.0811, -148.751, 25.5806, 0.46", "-55.4731, -151.161, 26.2804, 0.46", "-56.9619, -163.318, 27.6898, 0.46", "-59.6201, -175.36, 28.0073, 0.46", "-60.6289, -187.643, 27.2864, 0.46", "-59.7518, -199.937, 26.9206, 0.46", "-57.9201, -212.046, 28.1378, 0.46", "-54.2719, -223.601, 30.0656, 0.46", "-49.2686, -234.791, 30.0581, 0.46" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "58.116, -10.8342, -54.1769, 0.46", "58.4404, -12.581, -57.5733, 0.46", "58.8159, -14.4589, -61.4068, 0.46", "58.8266, -14.4838, -61.4724, 0.46", "59.5234, -15.7235, -65.1615, 0.46", "59.5387, -15.7416, -65.2157, 0.46", "61.1609, -17.37, -70.0915, 0.46", "61.1939, -17.3897, -70.1647, 0.46", "64.0896, -18.6692, -75.0668, 0.46", "64.1106, -18.6762, -75.0944, 0.46", "67.9152, -19.4063, -78.2466, 0.46", "68.0329, -19.4122, -78.2541, 0.46", "71.7751, -19.2456, -76.5438, 0.46", "71.9272, -19.234, -76.4324, 0.46", "75.1317, -18.8757, -73.1238, 0.46", "75.1683, -18.869, -73.078, 0.46", "77.6019, -18.0365, -68.8734, 0.46" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "58.116, -10.8342, -54.1769, 0.46", "60.5306, -12.3789, -55.2165, 0.46", "64.4638, -14.7183, -56.7205, 0.46", "67.4385, -16.4371, -57.8068, 0.46", "71.3483, -18.607, -59.2353, 0.46", "75.8718, -21.0553, -61.0009, 0.46", "79.7411, -23.1494, -62.5111, 0.46", "84.1413, -25.4775, -64.1962, 0.46", "84.1876, -25.502, -64.2136, 0.46", "88.0043, -27.3817, -65.6194, 0.46", "90.4942, -28.471, -66.5596, 0.46" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_28", "dend_17", "dend_10", "dend_0", "dend_39", "dend_30", "dend_23", "dend_18", "dend_16", "dend_11", "dend_7", "dend_2", "dend_1", "dend_43", "dend_40", "dend_36", "dend_31", "dend_25", "dend_24", "dend_22", "dend_19", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_42", "dend_41", "dend_38", "dend_37", "dend_35", "dend_32", "dend_27", "dend_26", "dend_21", "dend_20", "dend_15", "dend_14", "dend_6", "dend_5", "dend_34", "dend_33" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_28", "dend_17", "dend_10", "dend_0", "dend_39", "dend_30", "dend_23", "dend_18", "dend_16", "dend_11", "dend_7", "dend_2", "dend_1", "dend_43", "dend_40", "dend_36", "dend_31", "dend_25", "dend_24", "dend_22", "dend_19", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_42", "dend_41", "dend_38", "dend_37", "dend_35", "dend_32", "dend_27", "dend_26", "dend_21", "dend_20", "dend_15", "dend_14", "dend_6", "dend_5", "dend_34", "dend_33" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_LBC_3530c2c05e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_29
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_0
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_28, dend_17, dend_10, dend_0, dend_39, dend_30, dend_23, dend_18, dend_16, dend_11, dend_7, dend_2, dend_1, dend_43, dend_40, dend_36, dend_31, dend_25, dend_24, dend_22, dend_19, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_27, dend_26, dend_21, dend_20, dend_15, dend_14, dend_6, dend_5, dend_34, dend_33]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_29, dend_28, dend_17, dend_10, dend_0, dend_39, dend_30, dend_23, dend_18, dend_16, dend_11, dend_7, dend_2, dend_1, dend_43, dend_40, dend_36, dend_31, dend_25, dend_24, dend_22, dend_19, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_27, dend_26, dend_21, dend_20, dend_15, dend_14, dend_6, dend_5, dend_34, dend_33]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.45000009274692127)
    connect dend_28(0), soma_0(0.45000009274692127)
    connect dend_17(0), soma_0(0.45000009274692127)
    connect dend_10(0), soma_0(0.45000009274692127)
    connect dend_0(0), soma_0(0.45000009274692127)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.53252, -6.163, 0.0, 2.09808 ) }
    soma_0 { pt3dadd( -4.07436, -5.56219, 0.0, 3.44591 ) }
    soma_0 { pt3dadd( -3.6162, -4.96138, 0.0, 4.74751 ) }
    soma_0 { pt3dadd( -3.15805, -4.36057, 0.0, 6.03519 ) }
    soma_0 { pt3dadd( -2.69989, -3.75975, 0.0, 7.18506 ) }
    soma_0 { pt3dadd( -2.24173, -3.15894, 0.0, 8.9595 ) }
    soma_0 { pt3dadd( -1.78358, -2.55813, 0.0, 10.0505 ) }
    soma_0 { pt3dadd( -1.32542, -1.95732, 0.0, 10.6762 ) }
    soma_0 { pt3dadd( -0.867263, -1.35651, 0.0, 11.0674 ) }
    soma_0 { pt3dadd( -0.409106, -0.7557, 0.0, 11.2738 ) }
    soma_0 { pt3dadd( 0.0490503, -0.154889, 0.0, 11.4538 ) }
    soma_0 { pt3dadd( 0.507207, 0.445922, 0.0, 11.4611 ) }
    soma_0 { pt3dadd( 0.965364, 1.04673, 0.0, 11.064 ) }
    soma_0 { pt3dadd( 1.42352, 1.64754, 0.0, 10.6669 ) }
    soma_0 { pt3dadd( 1.88168, 2.24835, 0.0, 10.1594 ) }
    soma_0 { pt3dadd( 2.33983, 2.84917, 0.0, 9.31974 ) }
    soma_0 { pt3dadd( 2.79799, 3.44998, 0.0, 8.13613 ) }
    soma_0 { pt3dadd( 3.25615, 4.05079, 0.0, 6.95253 ) }
    soma_0 { pt3dadd( 3.7143, 4.6516, 0.0, 6.00786 ) }
    soma_0 { pt3dadd( 4.17246, 5.25241, 0.0, 5.12226 ) }
    soma_0 { pt3dadd( 4.63062, 5.85322, 0.0, 2.96305 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 3.75305, 6.98112, -4.12, 2.75 ) }
    dend_29 { pt3dadd( 4.10469, 7.43525, -4.2766, 2.29 ) }
    dend_29 { pt3dadd( 5.58528, 9.34733, -4.93597, 1.83 ) }
    dend_29 { pt3dadd( 6.31477, 10.2894, -5.26085, 1.83 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 25/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.32694, -1.43413, -0.75, 1.38 ) }
    dend_28 { pt3dadd( -5.44407, -1.37787, -1.1085, 1.38 ) }
    dend_28 { pt3dadd( -6.44102, -0.906964, -3.72823, 1.38 ) }
    dend_28 { pt3dadd( -7.46207, -0.471405, -6.13372, 1.38 ) }
    dend_28 { pt3dadd( -9.14076, 0.213117, -9.90317, 0.92 ) }
    dend_28 { pt3dadd( -10.0375, 0.489776, -11.8589, 0.92 ) }
    dend_28 { pt3dadd( -10.0631, 0.498608, -11.9207, 0.92 ) }
    dend_28 { pt3dadd( -10.9598, 0.793795, -14.2968, 0.92 ) }
    dend_28 { pt3dadd( -11.8143, 1.05475, -16.6117, 0.92 ) }
    dend_28 { pt3dadd( -11.8229, 1.05777, -16.6353, 0.92 ) }
    dend_28 { pt3dadd( -12.5702, 1.43866, -18.7016, 0.92 ) }
    dend_28 { pt3dadd( -13.7098, 2.13772, -22.1338, 0.92 ) }
    dend_28 { pt3dadd( -14.8602, 3.08754, -25.5779, 0.92 ) }
    dend_28 { pt3dadd( -15.7205, 4.0638, -28.1179, 0.92 ) }
    dend_28 { pt3dadd( -16.8399, 5.55555, -31.1973, 0.92 ) }
    dend_28 { pt3dadd( -17.8994, 7.02158, -33.6636, 0.92 ) }
    dend_28 { pt3dadd( -17.9091, 7.03562, -33.6826, 0.92 ) }
    dend_28 { pt3dadd( -19.3436, 9.07425, -35.8591, 0.92 ) }
    dend_28 { pt3dadd( -20.5896, 11.065, -37.4829, 0.46 ) }
    dend_28 { pt3dadd( -20.5978, 11.0772, -37.4917, 0.46 ) }
    dend_28 { pt3dadd( -22.0683, 12.9955, -38.7539, 0.46 ) }
    dend_28 { pt3dadd( -22.0781, 13.0066, -38.7624, 0.46 ) }
    dend_28 { pt3dadd( -23.4083, 14.3894, -40.0786, 0.46 ) }
    dend_28 { pt3dadd( -23.4179, 14.3986, -40.0891, 0.46 ) }
    dend_28 { pt3dadd( -24.8426, 15.6979, -41.8079, 0.46 ) }
    dend_28 { pt3dadd( -26.5063, 17.1721, -43.9857, 0.46 ) }
    dend_28 { pt3dadd( -28.2168, 18.5687, -46.4174, 0.46 ) }
    dend_28 { pt3dadd( -29.9532, 19.9163, -49.0333, 0.46 ) }
    dend_28 { pt3dadd( -29.9658, 19.9256, -49.0532, 0.46 ) }
    dend_28 { pt3dadd( -30.8668, 20.5358, -50.5394, 0.46 ) }
    dend_28 { pt3dadd( -32.4899, 21.5703, -53.4267, 0.46 ) }
    dend_28 { pt3dadd( -34.1451, 22.5607, -56.4976, 0.46 ) }
    dend_28 { pt3dadd( -35.8384, 23.5744, -59.6884, 0.46 ) }
    dend_28 { pt3dadd( -35.8497, 23.5815, -59.71, 0.46 ) }
    dend_28 { pt3dadd( -37.6969, 24.7439, -63.2172, 0.46 ) }
    dend_28 { pt3dadd( -39.8494, 26.1215, -67.3317, 0.46 ) }
    dend_28 { pt3dadd( -41.4097, 27.1896, -70.4548, 0.46 ) }
    dend_28 { pt3dadd( -41.4168, 27.1948, -70.4692, 0.46 ) }
    dend_28 { pt3dadd( -42.4232, 27.9426, -72.499, 0.46 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 64/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.836948, 6.76587, 4.0, 1.83 ) }
    dend_17 { pt3dadd( -0.836948, 6.76587, 4.0, 1.83 ) }
    dend_17 { pt3dadd( -0.832439, 9.83053, 5.37866, 1.83 ) }
    dend_17 { pt3dadd( -0.827815, 12.9738, 6.79269, 1.83 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 68/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 3.66305, -5.44188, 2.72, 2.29 ) }
    dend_10 { pt3dadd( 3.749, -5.89544, 2.80964, 2.29 ) }
    dend_10 { pt3dadd( 3.749, -5.89544, 2.80964, 2.29 ) }
    dend_10 { pt3dadd( 3.80863, -6.24824, 2.88092, 2.29 ) }
    dend_10 { pt3dadd( 4.31953, -9.6912, 3.54533, 1.83 ) }
    dend_10 { pt3dadd( 4.67259, -12.5387, 4.08346, 1.83 ) }
    dend_10 { pt3dadd( 4.88449, -14.3724, 4.40789, 1.83 ) }
    dend_10 { pt3dadd( 5.11839, -16.4493, 4.76994, 1.83 ) }
    dend_10 { pt3dadd( 5.38413, -18.906, 5.19233, 1.38 ) }
    dend_10 { pt3dadd( 5.52228, -20.2919, 5.4243, 1.38 ) }
    dend_10 { pt3dadd( 5.62713, -22.2265, 5.72441, 1.38 ) }
    dend_10 { pt3dadd( 5.72588, -24.5872, 6.06189, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 80/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.97695, -6.12863, 1.18, 1.83 ) }
    dend_0 { pt3dadd( -6.20626, -6.33813, 1.2405, 1.83 ) }
    dend_0 { pt3dadd( -6.20626, -6.33813, 1.2405, 1.83 ) }
    dend_0 { pt3dadd( -7.8556, -7.80944, 1.56695, 1.83 ) }
    dend_0 { pt3dadd( -9.13769, -8.95314, 1.82071, 1.83 ) }
    dend_0 { pt3dadd( -10.5398, -10.2039, 2.09822, 1.83 ) }
    dend_0 { pt3dadd( -12.0846, -11.582, 2.40398, 1.38 ) }
    dend_0 { pt3dadd( -13.5964, -12.9048, 2.69917, 1.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.63062, 5.85322, 0.0, 1.08332 ) }
    axon_0 { pt3dadd( 13.7262, 17.7809, 0.0, 1.08332 ) }
    axon_0 { pt3dadd( 22.8219, 29.7086, 0.0, 1.08332 ) }
    // Section: dend_39, id: dend_39, parent: dend_29 (entry count 91/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 6.31477, 10.2894, -5.26085, 0.92 ) }
    dend_39 { pt3dadd( 6.69179, 11.7978, -7.05206, 0.92 ) }
    dend_39 { pt3dadd( 6.86519, 12.8506, -8.33095, 0.92 ) }
    dend_39 { pt3dadd( 6.98648, 14.2744, -10.1196, 0.92 ) }
    dend_39 { pt3dadd( 7.03008, 15.2479, -11.3639, 0.92 ) }
    dend_39 { pt3dadd( 7.11537, 16.712, -13.2519, 0.92 ) }
    dend_39 { pt3dadd( 7.11648, 16.7224, -13.2654, 0.92 ) }
    dend_39 { pt3dadd( 7.27501, 18.2611, -15.4237, 0.92 ) }
    dend_39 { pt3dadd( 7.35422, 19.0611, -16.5738, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( 7.35493, 19.0754, -16.5949, 0.92 ) }
    dend_39 { pt3dadd( 7.30738, 20.2376, -18.2145, 0.92 ) }
    dend_39 { pt3dadd( 7.25087, 20.9438, -19.1533, 0.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 3/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 6.31477, 10.2894, -5.26085, 1.38 ) }
    dend_30 { pt3dadd( 10.3142, 12.2167, -4.93506, 1.38 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 5/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.827815, 12.9738, 6.79269, 0.92 ) }
    dend_23 { pt3dadd( -0.174889, 13.1696, 7.66204, 0.92 ) }
    dend_23 { pt3dadd( 0.42305, 13.355, 8.45204, 0.92 ) }
    dend_23 { pt3dadd( 1.25622, 13.5614, 9.57006, 0.92 ) }
    dend_23 { pt3dadd( 2.0241, 13.706, 10.6248, 0.92 ) }
    dend_23 { pt3dadd( 3.34228, 13.9435, 12.4897, 0.92 ) }
    dend_23 { pt3dadd( 4.09029, 14.0315, 13.5289, 0.46 ) }
    dend_23 { pt3dadd( 4.44146, 14.0563, 14.0469, 0.46 ) }
    dend_23 { pt3dadd( 4.99802, 14.0293, 14.8104, 0.46 ) }
    dend_23 { pt3dadd( 5.36343, 13.9394, 15.2108, 0.46 ) }
    dend_23 { pt3dadd( 6.37538, 13.4456, 15.9487, 0.46 ) }
    dend_23 { pt3dadd( 7.62612, 12.6793, 16.6287, 0.46 ) }
    dend_23 { pt3dadd( 7.63392, 12.6739, 16.6324, 0.46 ) }
    dend_23 { pt3dadd( 8.96313, 11.7927, 17.177, 0.46 ) }
    dend_23 { pt3dadd( 10.1918, 11.0257, 17.5651, 0.46 ) }
    dend_23 { pt3dadd( 11.3704, 10.2224, 17.8037, 0.46 ) }
    dend_23 { pt3dadd( 14.9848, 9.47807, 21.2261, 0.46 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -0.827815, 12.9738, 6.79269, 1.38 ) }
    dend_18 { pt3dadd( -1.90034, 17.1996, 7.62506, 1.38 ) }
    dend_18 { pt3dadd( -2.94766, 21.3261, 8.43786, 1.38 ) }
    dend_18 { pt3dadd( -4.15101, 26.0674, 9.37176, 1.38 ) }
    dend_18 { pt3dadd( -5.25419, 30.4139, 10.2279, 1.38 ) }
    dend_18 { pt3dadd( -6.1333, 33.8777, 10.9102, 1.38 ) }
    dend_18 { pt3dadd( -7.19908, 38.0769, 11.7373, 1.38 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 29/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.72588, -24.5872, 6.06189, 0.92 ) }
    dend_16 { pt3dadd( 7.97028, -26.3441, 5.0568, 0.92 ) }
    dend_16 { pt3dadd( 9.55339, -27.7458, 4.38833, 0.92 ) }
    dend_16 { pt3dadd( 12.1767, -30.1993, 3.35534, 0.92 ) }
    dend_16 { pt3dadd( 14.6748, -32.4883, 2.43365, 0.92 ) }
    dend_16 { pt3dadd( 17.593, -35.1046, 1.42359, 0.92 ) }
    dend_16 { pt3dadd( 20.0229, -37.4088, 0.590729, 0.92 ) }
    dend_16 { pt3dadd( 22.9437, -40.3817, -0.381786, 0.92 ) }
    dend_16 { pt3dadd( 25.5718, -43.1289, -1.25128, 0.92 ) }
    dend_16 { pt3dadd( 28.5553, -46.2673, -2.25418, 0.92 ) }
    dend_16 { pt3dadd( 31.3523, -49.3929, -3.24226, 0.92 ) }
    dend_16 { pt3dadd( 33.9845, -52.4882, -4.22187, 0.92 ) }
    dend_16 { pt3dadd( 35.7792, -54.5987, -4.93794, 0.92 ) }
    dend_16 { pt3dadd( 37.3512, -56.3016, -5.5949, 0.92 ) }
    dend_16 { pt3dadd( 37.3899, -56.3428, -5.6119, 0.92 ) }
    dend_16 { pt3dadd( 40.0583, -59.2524, -6.88803, 0.92 ) }
    dend_16 { pt3dadd( 40.0981, -59.292, -6.90632, 0.92 ) }
    dend_16 { pt3dadd( 43.1441, -62.203, -8.2317, 0.46 ) }
    dend_16 { pt3dadd( 45.7455, -64.6532, -9.31866, 0.46 ) }
    dend_16 { pt3dadd( 48.2672, -67.0184, -10.354, 0.46 ) }
    dend_16 { pt3dadd( 50.4874, -69.1391, -11.2248, 0.46 ) }
    dend_16 { pt3dadd( 54.1167, -72.5393, -12.584, 0.46 ) }
    dend_16 { pt3dadd( 57.3296, -75.5601, -13.7449, 0.46 ) }
    dend_16 { pt3dadd( 60.4973, -78.5869, -14.8934, 0.46 ) }
    dend_16 { pt3dadd( 60.522, -78.6106, -14.9027, 0.46 ) }
    dend_16 { pt3dadd( 65.1712, -83.0323, -16.8079, 0.46 ) }
    dend_16 { pt3dadd( 68.2817, -85.9577, -18.1669, 0.46 ) }
    dend_16 { pt3dadd( 68.3054, -85.9809, -18.1792, 0.46 ) }
    dend_16 { pt3dadd( 70.3913, -87.9815, -19.3584, 0.46 ) }
    dend_16 { pt3dadd( 71.7437, -89.3131, -20.1478, 0.46 ) }
    dend_16 { pt3dadd( 73.4586, -90.9906, -20.9428, 0.46 ) }
    dend_16 { pt3dadd( 73.475, -91.0067, -20.9485, 0.46 ) }
    dend_16 { pt3dadd( 75.7194, -93.343, -21.4675, 0.46 ) }
    dend_16 { pt3dadd( 79.3541, -97.1967, -21.9807, 0.46 ) }
    dend_16 { pt3dadd( 82.2169, -100.395, -22.1585, 0.46 ) }
    dend_16 { pt3dadd( 86.4645, -105.472, -22.2072, 0.46 ) }
    dend_16 { pt3dadd( 89.1468, -108.966, -22.1494, 0.46 ) }
    dend_16 { pt3dadd( 91.3417, -112.108, -22.0613, 0.46 ) }
    dend_16 { pt3dadd( 94.1331, -116.581, -22.0312, 0.46 ) }
    dend_16 { pt3dadd( 97.0165, -121.781, -22.1379, 0.46 ) }
    dend_16 { pt3dadd( 99.3589, -126.327, -22.3969, 0.46 ) }
    dend_16 { pt3dadd( 102.446, -132.846, -23.0486, 0.46 ) }
    dend_16 { pt3dadd( 103.919, -136.147, -23.4427, 0.46 ) }
    dend_16 { pt3dadd( 106.146, -141.502, -24.1897, 0.46 ) }
    dend_16 { pt3dadd( 107.409, -144.877, -24.6981, 0.46 ) }
    dend_16 { pt3dadd( 108.637, -148.526, -25.2903, 0.46 ) }
    dend_16 { pt3dadd( 109.456, -151.205, -25.7392, 0.46 ) }
    dend_16 { pt3dadd( 109.465, -151.239, -25.7427, 0.46 ) }
    dend_16 { pt3dadd( 110.732, -155.983, -25.8394, 0.46 ) }
    dend_16 { pt3dadd( 111.759, -160.035, -25.5378, 0.46 ) }
    dend_16 { pt3dadd( 112.836, -164.128, -25.0964, 0.46 ) }
    dend_16 { pt3dadd( 112.848, -164.174, -25.0914, 0.46 ) }
    dend_16 { pt3dadd( 114.496, -169.649, -24.7076, 0.46 ) }
    dend_16 { pt3dadd( 114.514, -169.706, -24.7031, 0.46 ) }
    dend_16 { pt3dadd( 115.121, -171.319, -24.5369, 0.46 ) }
    dend_16 { pt3dadd( 116.563, -174.538, -24.2229, 0.46 ) }
    dend_16 { pt3dadd( 117.522, -176.377, -24.151, 0.46 ) }
    dend_16 { pt3dadd( 118.907, -179.201, -24.5996, 0.46 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 87/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.72588, -24.5872, 6.06189, 0.92 ) }
    dend_11 { pt3dadd( 5.45926, -27.2555, 6.49469, 0.92 ) }
    dend_11 { pt3dadd( 5.23915, -29.879, 7.03472, 0.92 ) }
    dend_11 { pt3dadd( 4.93416, -32.5016, 7.66993, 0.92 ) }
    dend_11 { pt3dadd( 4.52906, -35.5114, 8.42829, 0.92 ) }
    dend_11 { pt3dadd( 4.11645, -38.7314, 9.20698, 0.92 ) }
    dend_11 { pt3dadd( 3.8339, -41.5013, 9.85111, 0.92 ) }
    dend_11 { pt3dadd( 3.59577, -43.5665, 10.3552, 0.92 ) }
    dend_11 { pt3dadd( 3.31814, -46.0543, 10.9672, 0.92 ) }
    dend_11 { pt3dadd( 2.96197, -49.5635, 11.8681, 0.92 ) }
    dend_11 { pt3dadd( 2.60857, -53.0692, 12.8008, 0.92 ) }
    dend_11 { pt3dadd( 2.38367, -56.7315, 13.695, 0.92 ) }
    // Section: dend_7, id: dend_7, parent: dend_0 (entry count 99/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -13.5964, -12.9048, 2.69917, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_7 { pt3dadd( -15.4254, -13.1354, 5.69431, 0.92 ) }
    dend_7 { pt3dadd( -17.0358, -13.5971, 8.84488, 0.92 ) }
    dend_7 { pt3dadd( -18.2501, -14.2488, 11.5307, 0.92 ) }
    dend_7 { pt3dadd( -19.3126, -15.2773, 14.2596, 0.46 ) }
    dend_7 { pt3dadd( -19.5017, -15.5053, 14.7826, 0.46 ) }
    dend_7 { pt3dadd( -19.5076, -15.5135, 14.7999, 0.46 ) }
    dend_7 { pt3dadd( -20.3798, -17.3534, 17.9074, 0.46 ) }
    dend_7 { pt3dadd( -20.8452, -18.7356, 19.8837, 0.46 ) }
    dend_7 { pt3dadd( -21.406, -21.4217, 23.4564, 0.46 ) }
    dend_7 { pt3dadd( -21.4089, -21.4398, 23.4804, 0.46 ) }
    dend_7 { pt3dadd( -21.5749, -22.3477, 24.6954, 0.46 ) }
    dend_7 { pt3dadd( -21.9131, -23.8795, 26.721, 0.46 ) }
    dend_7 { pt3dadd( -25.9863, -28.8493, 34.4306, 0.46 ) }
    dend_7 { pt3dadd( -28.6485, -33.7191, 42.7905, 0.46 ) }
    dend_7 { pt3dadd( -31.8884, -39.65, 50.2456, 0.46 ) }
    dend_7 { pt3dadd( -35.4677, -45.8112, 57.3596, 0.46 ) }
    dend_7 { pt3dadd( -37.6291, -52.4231, 64.6594, 0.46 ) }
    dend_7 { pt3dadd( -37.9539, -59.9576, 71.4005, 0.46 ) }
    dend_7 { pt3dadd( -39.3709, -66.3554, 79.056, 0.46 ) }
    dend_7 { pt3dadd( -38.9727, -71.9263, 87.4151, 0.46 ) }
    dend_7 { pt3dadd( -40.1376, -78.3483, 95.094, 0.46 ) }
    dend_7 { pt3dadd( -42.2485, -84.151, 103.035, 0.46 ) }
    dend_7 { pt3dadd( -43.2877, -91.8072, 109.57, 0.46 ) }
    dend_7 { pt3dadd( -45.9703, -99.2808, 115.831, 0.46 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 24/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -13.5964, -12.9048, 2.69917, 0.92 ) }
    dend_2 { pt3dadd( -14.8362, -16.3493, 3.80768, 0.92 ) }
    dend_2 { pt3dadd( -15.7743, -18.8782, 4.70598, 0.92 ) }
    dend_2 { pt3dadd( -17.2898, -23.0277, 6.33679, 0.92 ) }
    dend_2 { pt3dadd( -18.0101, -25.0747, 7.21995, 0.92 ) }
    dend_2 { pt3dadd( -19.0565, -27.7734, 8.49606, 0.92 ) }
    dend_2 { pt3dadd( -19.8169, -29.4661, 9.35554, 0.92 ) }
    dend_2 { pt3dadd( -20.8066, -31.3995, 10.4377, 0.92 ) }
    dend_2 { pt3dadd( -21.6567, -32.7877, 11.2749, 0.92 ) }
    dend_2 { pt3dadd( -22.5371, -34.1445, 12.1518, 0.92 ) }
    dend_2 { pt3dadd( -24.068, -36.461, 13.6162, 0.92 ) }
    dend_2 { pt3dadd( -25.7279, -38.8349, 15.1102, 0.92 ) }
    dend_2 { pt3dadd( -27.2378, -40.9188, 16.3762, 0.92 ) }
    dend_2 { pt3dadd( -29.6557, -44.0672, 18.197, 0.92 ) }
    dend_2 { pt3dadd( -32.0724, -47.1291, 19.8314, 0.92 ) }
    dend_2 { pt3dadd( -32.0926, -47.1555, 19.8442, 0.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -13.5964, -12.9048, 2.69917, 1.38 ) }
    dend_1 { pt3dadd( -15.9964, -9.08259, 4.9992, 1.38 ) }
    dend_1 { pt3dadd( -17.8252, -6.32412, 6.73174, 1.38 ) }
    dend_1 { pt3dadd( -19.444, -3.86286, 8.22886, 1.38 ) }
    dend_1 { pt3dadd( -21.018, -1.57077, 9.57638, 1.38 ) }
    dend_1 { pt3dadd( -22.8496, 0.872931, 10.9753, 1.38 ) }
    dend_1 { pt3dadd( -24.5649, 2.95364, 12.1682, 1.38 ) }
    dend_1 { pt3dadd( -26.0774, 4.61006, 13.1203, 1.38 ) }
    dend_1 { pt3dadd( -28.8845, 7.08776, 14.5688, 1.38 ) }
    dend_1 { pt3dadd( -31.8854, 9.18164, 15.8244, 1.38 ) }
    dend_1 { pt3dadd( -35.7508, 11.3777, 17.1325, 1.38 ) }
    dend_1 { pt3dadd( -37.8881, 12.3909, 17.7397, 1.38 ) }
    dend_1 { pt3dadd( -40.6873, 13.5221, 18.3859, 1.38 ) }
    dend_1 { pt3dadd( -44.7925, 14.935, 19.1023, 1.38 ) }
    dend_1 { pt3dadd( -47.5699, 15.7698, 19.4786, 1.38 ) }
    dend_1 { pt3dadd( -50.0594, 16.5312, 19.7155, 1.38 ) }
    dend_1 { pt3dadd( -50.0896, 16.5414, 19.7173, 1.38 ) }
    dend_1 { pt3dadd( -53.1527, 17.8399, 19.8801, 1.38 ) }
    dend_1 { pt3dadd( -55.9704, 19.2946, 20.0391, 1.38 ) }
    dend_1 { pt3dadd( -58.6719, 20.93, 20.2152, 0.92 ) }
    dend_1 { pt3dadd( -61.036, 22.5878, 20.4374, 0.92 ) }
    dend_1 { pt3dadd( -63.9875, 24.8202, 20.7721, 0.92 ) }
    dend_1 { pt3dadd( -66.7874, 27.1619, 21.139, 0.92 ) }
    dend_1 { pt3dadd( -69.3498, 29.5736, 21.5273, 0.92 ) }
    dend_1 { pt3dadd( -71.0789, 31.4816, 21.7988, 0.92 ) }
    dend_1 { pt3dadd( -73.5221, 34.4801, 22.1563, 0.92 ) }
    dend_1 { pt3dadd( -75.6855, 37.4934, 22.4701, 0.92 ) }
    dend_1 { pt3dadd( -78.2677, 41.628, 22.7656, 0.92 ) }
    dend_1 { pt3dadd( -79.6695, 44.0294, 22.8408, 0.92 ) }
    dend_1 { pt3dadd( -81.5467, 47.4974, 22.8798, 0.92 ) }
    dend_1 { pt3dadd( -83.926, 52.1407, 22.8741, 0.92 ) }
    dend_1 { pt3dadd( -85.4613, 55.1396, 22.8533, 0.92 ) }
    dend_1 { pt3dadd( -86.7383, 57.7996, 22.8775, 0.92 ) }
    dend_1 { pt3dadd( -88.108, 60.6721, 22.9779, 0.92 ) }
    dend_1 { pt3dadd( -90.5876, 65.7513, 23.3914, 0.92 ) }
    dend_1 { pt3dadd( -90.602, 65.78, 23.3959, 0.92 ) }
    dend_1 { pt3dadd( -92.2557, 69.0242, 24.167, 0.92 ) }
    dend_1 { pt3dadd( -94.0249, 72.2753, 25.073, 0.92 ) }
    dend_1 { pt3dadd( -96.4171, 76.2699, 26.3537, 0.92 ) }
    dend_1 { pt3dadd( -98.4437, 79.5706, 27.4945, 0.92 ) }
    dend_1 { pt3dadd( -101.202, 83.7582, 28.9686, 0.92 ) }
    dend_1 { pt3dadd( -103.444, 86.9839, 30.0816, 0.92 ) }
    dend_1 { pt3dadd( -105.339, 89.446, 30.8924, 0.92 ) }
    dend_1 { pt3dadd( -106.901, 91.292, 31.4083, 0.92 ) }
    dend_1 { pt3dadd( -109.514, 94.1035, 31.9945, 0.92 ) }
    dend_1 { pt3dadd( -111.19, 95.8022, 32.2045, 0.92 ) }
    dend_1 { pt3dadd( -113.838, 98.3562, 32.2621, 0.92 ) }
    dend_1 { pt3dadd( -115.869, 100.225, 32.2131, 0.92 ) }
    dend_1 { pt3dadd( -118.264, 102.372, 32.1581, 0.46 ) }
    dend_1 { pt3dadd( -119.806, 103.808, 32.0562, 0.46 ) }
    dend_1 { pt3dadd( -119.822, 103.822, 32.0547, 0.46 ) }
    dend_1 { pt3dadd( -122.114, 105.869, 31.8464, 0.46 ) }
    dend_1 { pt3dadd( -124.501, 108.063, 31.6902, 0.46 ) }
    dend_1 { pt3dadd( -124.516, 108.078, 31.6902, 0.46 ) }
    dend_1 { pt3dadd( -126.337, 110.05, 31.8017, 0.46 ) }
    dend_1 { pt3dadd( -129.101, 113.366, 32.1033, 0.46 ) }
    dend_1 { pt3dadd( -129.115, 113.383, 32.1052, 0.46 ) }
    dend_1 { pt3dadd( -131.496, 116.616, 32.529, 0.46 ) }
    dend_1 { pt3dadd( -133.368, 119.429, 32.9333, 0.46 ) }
    dend_1 { pt3dadd( -135.005, 122.04, 33.3208, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -136.305, 124.213, 33.6576, 0.46 ) }
    dend_1 { pt3dadd( -138.31, 127.707, 34.2011, 0.46 ) }
    dend_1 { pt3dadd( -139.993, 130.567, 34.6318, 0.46 ) }
    dend_1 { pt3dadd( -142.468, 134.679, 35.2503, 0.46 ) }
    dend_1 { pt3dadd( -145.068, 138.795, 35.8816, 0.46 ) }
    dend_1 { pt3dadd( -148.241, 143.703, 36.5732, 0.46 ) }
    dend_1 { pt3dadd( -151.689, 148.761, 37.205, 0.46 ) }
    dend_1 { pt3dadd( -155.461, 154.069, 37.7944, 0.46 ) }
    dend_1 { pt3dadd( -158.637, 158.326, 38.2126, 0.46 ) }
    dend_1 { pt3dadd( -162.33, 162.955, 38.5769, 0.46 ) }
    dend_1 { pt3dadd( -164.498, 165.43, 38.6831, 0.46 ) }
    dend_1 { pt3dadd( -166.932, 167.973, 38.6649, 0.46 ) }
    dend_1 { pt3dadd( -169.275, 170.273, 38.5446, 0.46 ) }
    dend_1 { pt3dadd( -169.291, 170.287, 38.5429, 0.46 ) }
    dend_1 { pt3dadd( -171.888, 172.337, 38.0581, 0.46 ) }
    dend_1 { pt3dadd( -174.508, 174.038, 37.3373, 0.46 ) }
    dend_1 { pt3dadd( -174.536, 174.052, 37.3296, 0.46 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 17/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 22.8219, 29.7086, 0.0, 0.46 ) }
    axon_1 { pt3dadd( 31.9175, 41.6363, 0.0, 0.46 ) }
    axon_1 { pt3dadd( 41.0131, 53.564, 0.0, 0.46 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 20/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 7.25087, 20.9438, -19.1533, 0.92 ) }
    dend_43 { pt3dadd( 7.41906, 21.2573, -21.0194, 0.92 ) }
    dend_43 { pt3dadd( 7.42167, 21.259, -21.0337, 0.92 ) }
    dend_43 { pt3dadd( 7.76763, 21.4357, -22.7324, 0.92 ) }
    dend_43 { pt3dadd( 7.77033, 21.4362, -22.7467, 0.92 ) }
    dend_43 { pt3dadd( 8.18509, 21.4341, -25.315, 0.92 ) }
    dend_43 { pt3dadd( 8.45829, 21.4274, -28.0781, 0.92 ) }
    dend_43 { pt3dadd( 8.41255, 21.4549, -31.0544, 0.92 ) }
    dend_43 { pt3dadd( 8.40685, 21.4554, -31.127, 0.92 ) }
    dend_43 { pt3dadd( 8.07507, 21.4475, -33.5828, 0.92 ) }
    dend_43 { pt3dadd( 7.7094, 21.3977, -35.6243, 0.92 ) }
    dend_43 { pt3dadd( 7.15349, 21.259, -38.2203, 0.92 ) }
    dend_43 { pt3dadd( 6.00778, 20.904, -43.2328, 0.92 ) }
    dend_43 { pt3dadd( 5.31156, 20.6585, -46.0177, 0.92 ) }
    dend_43 { pt3dadd( 4.59167, 20.346, -48.8818, 0.92 ) }
    dend_43 { pt3dadd( 3.87872, 19.9649, -51.8461, 0.92 ) }
    dend_43 { pt3dadd( 3.21213, 19.4627, -54.9276, 0.92 ) }
    dend_43 { pt3dadd( 2.72209, 18.9335, -57.5749, 0.92 ) }
    dend_43 { pt3dadd( 2.34249, 18.3617, -60.0675, 0.92 ) }
    dend_43 { pt3dadd( 2.02741, 17.7647, -62.5513, 0.92 ) }
    dend_43 { pt3dadd( 1.88623, 17.4904, -63.8666, 0.92 ) }
    dend_43 { pt3dadd( 1.59809, 16.953, -67.0277, 0.92 ) }
    dend_43 { pt3dadd( 1.59638, 16.9508, -67.042, 0.92 ) }
    dend_43 { pt3dadd( 1.08769, 16.5228, -70.0509, 0.92 ) }
    dend_43 { pt3dadd( 0.826382, 16.3492, -71.3335, 0.92 ) }
    dend_43 { pt3dadd( 0.19029, 15.8857, -74.3036, 0.92 ) }
    dend_43 { pt3dadd( 0.181333, 15.8801, -74.3384, 0.92 ) }
    dend_43 { pt3dadd( -0.39857, 15.5027, -76.3652, 0.92 ) }
    dend_43 { pt3dadd( -1.07254, 15.0315, -78.6411, 0.92 ) }
    dend_43 { pt3dadd( -1.07689, 15.028, -78.6545, 0.92 ) }
    dend_43 { pt3dadd( -1.94143, 14.0845, -81.5437, 0.92 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 7.25087, 20.9438, -19.1533, 0.92 ) }
    dend_40 { pt3dadd( 6.91822, 23.0716, -21.696, 0.92 ) }
    dend_40 { pt3dadd( 6.74879, 25.2439, -23.9573, 0.92 ) }
    dend_40 { pt3dadd( 6.65149, 27.1205, -25.826, 0.92 ) }
    dend_40 { pt3dadd( 6.62028, 29.9079, -28.4027, 0.92 ) }
    dend_40 { pt3dadd( 6.67682, 31.8996, -30.1958, 0.92 ) }
    dend_40 { pt3dadd( 6.76132, 34.4275, -32.4597, 0.92 ) }
    dend_40 { pt3dadd( 6.81988, 37.2907, -34.9631, 0.92 ) }
    dend_40 { pt3dadd( 6.95365, 39.1365, -36.5417, 0.92 ) }
    dend_40 { pt3dadd( 7.38284, 42.3606, -39.2742, 0.92 ) }
    dend_40 { pt3dadd( 7.77635, 44.2949, -40.9278, 0.92 ) }
    dend_40 { pt3dadd( 8.37714, 46.775, -43.1, 0.92 ) }
    dend_40 { pt3dadd( 8.96422, 49.2793, -45.4266, 0.92 ) }
    dend_40 { pt3dadd( 9.43889, 51.3817, -47.4775, 0.92 ) }
    dend_40 { pt3dadd( 9.44534, 51.4068, -47.5025, 0.92 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 66/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 10.3142, 12.2167, -4.93506, 0.92 ) }
    dend_36 { pt3dadd( 12.5797, 14.9453, -7.27327, 0.92 ) }
    dend_36 { pt3dadd( 14.0691, 16.5037, -8.68288, 0.92 ) }
    dend_36 { pt3dadd( 15.1018, 17.4651, -9.51108, 0.92 ) }
    dend_36 { pt3dadd( 16.2958, 18.5974, -10.3452, 0.46 ) }
    dend_36 { pt3dadd( 18.2093, 20.3375, -11.5081, 0.46 ) }
    dend_36 { pt3dadd( 18.2202, 20.3474, -11.5141, 0.46 ) }
    dend_36 { pt3dadd( 19.9294, 21.844, -12.284, 0.46 ) }
    dend_36 { pt3dadd( 21.7875, 23.5027, -12.981, 0.46 ) }
    dend_36 { pt3dadd( 24.0053, 25.6596, -13.6577, 0.46 ) }
    dend_36 { pt3dadd( 25.8994, 27.628, -14.1497, 0.46 ) }
    dend_36 { pt3dadd( 27.5048, 29.3738, -14.5341, 0.46 ) }
    dend_36 { pt3dadd( 28.8075, 30.8464, -14.8585, 0.46 ) }
    dend_36 { pt3dadd( 30.3677, 32.6924, -15.2726, 0.46 ) }
    dend_36 { pt3dadd( 31.9463, 34.489, -15.7412, 0.46 ) }
    dend_36 { pt3dadd( 34.1364, 36.8379, -16.4161, 0.46 ) }
    dend_36 { pt3dadd( 34.1476, 36.8489, -16.4191, 0.46 ) }
    dend_36 { pt3dadd( 35.5775, 38.0689, -16.7518, 0.46 ) }
    dend_36 { pt3dadd( 37.4534, 39.4877, -17.196, 0.46 ) }
    dend_36 { pt3dadd( 40.0977, 41.3383, -17.8153, 0.46 ) }
    dend_36 { pt3dadd( 40.1751, 41.3906, -17.8334, 0.46 ) }
    dend_36 { pt3dadd( 43.052, 43.3983, -18.4688, 0.46 ) }
    dend_36 { pt3dadd( 45.6967, 45.3334, -19.0407, 0.46 ) }
    dend_36 { pt3dadd( 47.1305, 46.5042, -19.3605, 0.46 ) }
    dend_36 { pt3dadd( 47.1479, 46.5199, -19.3651, 0.46 ) }
    dend_36 { pt3dadd( 49.8003, 49.3062, -20.2229, 0.46 ) }
    dend_36 { pt3dadd( 51.8033, 51.6846, -20.9814, 0.46 ) }
    dend_36 { pt3dadd( 51.8171, 51.7031, -20.9875, 0.46 ) }
    dend_36 { pt3dadd( 53.6378, 54.3141, -21.7652, 0.46 ) }
    dend_36 { pt3dadd( 54.2001, 55.1424, -22.0008, 0.46 ) }
    dend_36 { pt3dadd( 55.8333, 57.6207, -22.6848, 0.46 ) }
    dend_36 { pt3dadd( 57.3135, 59.8788, -23.2755, 0.46 ) }
    dend_36 { pt3dadd( 59.247, 62.7863, -23.9642, 0.46 ) }
    dend_36 { pt3dadd( 60.9094, 65.2382, -24.467, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( 61.964, 66.7608, -24.7354, 0.46 ) }
    dend_36 { pt3dadd( 63.2593, 68.7962, -25.0199, 0.46 ) }
    dend_36 { pt3dadd( 64.6384, 71.3218, -25.3058, 0.46 ) }
    dend_36 { pt3dadd( 66.3996, 75.017, -25.6627, 0.46 ) }
    dend_36 { pt3dadd( 67.5462, 77.959, -25.948, 0.46 ) }
    dend_36 { pt3dadd( 67.5513, 77.9742, -25.9496, 0.46 ) }
    dend_36 { pt3dadd( 68.5187, 81.7179, -26.4657, 0.46 ) }
    dend_36 { pt3dadd( 69.3942, 85.8733, -27.2449, 0.46 ) }
    dend_36 { pt3dadd( 69.4023, 85.9276, -27.2573, 0.46 ) }
    dend_36 { pt3dadd( 69.8299, 90.0046, -28.2776, 0.46 ) }
    dend_36 { pt3dadd( 69.8315, 90.0201, -28.2819, 0.46 ) }
    dend_36 { pt3dadd( 70.2435, 93.4255, -29.2951, 0.46 ) }
    dend_36 { pt3dadd( 70.7749, 96.6481, -30.4033, 0.46 ) }
    dend_36 { pt3dadd( 71.3711, 100.211, -31.7102, 0.46 ) }
    dend_36 { pt3dadd( 71.592, 101.558, -32.1886, 0.46 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 15/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 10.3142, 12.2167, -4.93506, 0.92 ) }
    dend_31 { pt3dadd( 13.4651, 13.1245, -5.44317, 0.92 ) }
    dend_31 { pt3dadd( 16.0778, 13.8954, -5.87566, 0.92 ) }
    dend_31 { pt3dadd( 16.9451, 14.1256, -6.0366, 0.92 ) }
    dend_31 { pt3dadd( 19.6038, 14.7921, -6.55788, 0.92 ) }
    dend_31 { pt3dadd( 22.4434, 15.4728, -7.18956, 0.92 ) }
    dend_31 { pt3dadd( 25.6893, 16.2, -8.05184, 0.92 ) }
    dend_31 { pt3dadd( 25.7073, 16.2037, -8.05835, 0.92 ) }
    dend_31 { pt3dadd( 28.0003, 16.6649, -9.1965, 0.92 ) }
    dend_31 { pt3dadd( 28.0254, 16.6701, -9.21041, 0.92 ) }
    dend_31 { pt3dadd( 30.6308, 17.2316, -10.9048, 0.92 ) }
    dend_31 { pt3dadd( 32.7042, 17.5989, -12.4813, 0.92 ) }
    dend_31 { pt3dadd( 35.053, 17.9772, -14.5354, 0.92 ) }
    dend_31 { pt3dadd( 36.6687, 18.2803, -16.0232, 0.92 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 14.9848, 9.47807, 21.2261, 0.46 ) }
    dend_25 { pt3dadd( 22.5448, 8.15104, 27.5227, 0.46 ) }
    dend_25 { pt3dadd( 30.4672, 6.96367, 33.3865, 0.46 ) }
    dend_25 { pt3dadd( 38.5551, 4.88092, 38.7769, 0.46 ) }
    dend_25 { pt3dadd( 46.2289, 3.44698, 44.9129, 0.46 ) }
    dend_25 { pt3dadd( 53.4191, 0.741528, 51.2289, 0.46 ) }
    dend_25 { pt3dadd( 60.7239, -2.09255, 57.3588, 0.46 ) }
    dend_25 { pt3dadd( 68.6176, -3.59869, 63.194, 0.46 ) }
    dend_25 { pt3dadd( 76.8508, -6.67745, 67.8767, 0.46 ) }
    dend_25 { pt3dadd( 85.4883, -11.0032, 70.4472, 0.46 ) }
    dend_25 { pt3dadd( 94.1836, -14.7997, 73.5472, 0.46 ) }
    dend_25 { pt3dadd( 103.133, -18.8248, 75.4293, 0.46 ) }
    dend_25 { pt3dadd( 111.825, -23.2692, 77.6014, 0.46 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 42/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 14.9848, 9.47807, 21.2261, 0.46 ) }
    dend_24 { pt3dadd( 21.9569, 7.80456, 27.8631, 0.46 ) }
    dend_24 { pt3dadd( 28.8152, 5.31654, 34.3776, 0.46 ) }
    dend_24 { pt3dadd( 36.3154, 2.36766, 39.9318, 0.46 ) }
    dend_24 { pt3dadd( 42.8076, -0.894002, 46.4994, 0.46 ) }
    dend_24 { pt3dadd( 48.6323, -4.28886, 53.6074, 0.46 ) }
    dend_24 { pt3dadd( 52.6903, -8.32529, 61.5753, 0.46 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 49/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -7.19908, 38.0769, 11.7373, 0.46 ) }
    dend_22 { pt3dadd( -10.4723, 38.9934, 11.531, 0.46 ) }
    dend_22 { pt3dadd( -12.671, 39.6653, 11.4983, 0.46 ) }
    dend_22 { pt3dadd( -17.4963, 41.0281, 11.6831, 0.46 ) }
    dend_22 { pt3dadd( -20.6278, 41.9957, 11.9553, 0.46 ) }
    dend_22 { pt3dadd( -22.8574, 42.7596, 12.2445, 0.46 ) }
    dend_22 { pt3dadd( -25.7782, 43.8565, 12.7348, 0.46 ) }
    dend_22 { pt3dadd( -27.6561, 44.6736, 13.2268, 0.46 ) }
    dend_22 { pt3dadd( -30.0758, 45.8024, 14.0137, 0.46 ) }
    dend_22 { pt3dadd( -32.6191, 47.1693, 15.0971, 0.46 ) }
    dend_22 { pt3dadd( -34.5978, 48.3568, 16.0816, 0.46 ) }
    dend_22 { pt3dadd( -37.0697, 49.8823, 17.3931, 0.46 ) }
    dend_22 { pt3dadd( -38.964, 51.1985, 18.481, 0.46 ) }
    dend_22 { pt3dadd( -46.8289, 53.6786, 21.9287, 0.46 ) }
    dend_22 { pt3dadd( -54.4051, 55.3484, 26.3534, 0.46 ) }
    dend_22 { pt3dadd( -62.5915, 56.0678, 29.8397, 0.46 ) }
    dend_22 { pt3dadd( -71.1289, 56.524, 32.4063, 0.46 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 66/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.19908, 38.0769, 11.7373, 1.38 ) }
    dend_19 { pt3dadd( -8.60634, 41.78, 11.6034, 1.38 ) }
    dend_19 { pt3dadd( -9.96021, 45.4271, 11.5196, 0.92 ) }
    dend_19 { pt3dadd( -11.3429, 49.1615, 11.5421, 0.92 ) }
    dend_19 { pt3dadd( -11.3499, 49.1792, 11.5427, 0.92 ) }
    dend_19 { pt3dadd( -12.6185, 52.2977, 11.6951, 0.92 ) }
    dend_19 { pt3dadd( -13.8025, 55.0949, 11.8755, 0.92 ) }
    dend_19 { pt3dadd( -13.8101, 55.1122, 11.8772, 0.92 ) }
    dend_19 { pt3dadd( -15.4655, 58.343, 12.2784, 0.92 ) }
    dend_19 { pt3dadd( -17.4646, 61.7888, 12.8315, 0.92 ) }
    dend_19 { pt3dadd( -17.4744, 61.8049, 12.8342, 0.92 ) }
    dend_19 { pt3dadd( -19.5221, 64.9478, 13.3984, 0.92 ) }
    dend_19 { pt3dadd( -21.8858, 68.4255, 13.9983, 0.92 ) }
    dend_19 { pt3dadd( -24.6405, 72.376, 14.6812, 0.92 ) }
    dend_19 { pt3dadd( -26.8464, 75.3618, 15.197, 0.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 81/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.38367, -56.7315, 13.695, 0.92 ) }
    dend_13 { pt3dadd( 2.27149, -59.4271, 14.5067, 0.92 ) }
    dend_13 { pt3dadd( 2.09769, -61.7351, 15.2094, 0.92 ) }
    dend_13 { pt3dadd( 1.96055, -64.3501, 16.0738, 0.92 ) }
    dend_13 { pt3dadd( 1.9184, -66.4212, 16.7789, 0.92 ) }
    dend_13 { pt3dadd( 1.89001, -68.5371, 17.4651, 0.92 ) }
    dend_13 { pt3dadd( 1.84887, -70.3856, 18.0492, 0.92 ) }
    dend_13 { pt3dadd( 1.75168, -72.5896, 18.7437, 0.92 ) }
    dend_13 { pt3dadd( 1.59913, -74.3794, 19.2781, 0.92 ) }
    dend_13 { pt3dadd( 1.31868, -76.8732, 20.0054, 0.92 ) }
    dend_13 { pt3dadd( 0.883963, -79.8658, 20.8739, 0.92 ) }
    dend_13 { pt3dadd( 0.554263, -82.0336, 21.4973, 0.92 ) }
    dend_13 { pt3dadd( 0.226206, -84.2099, 22.1118, 0.92 ) }
    dend_13 { pt3dadd( -0.122004, -86.2713, 22.6623, 0.92 ) }
    dend_13 { pt3dadd( -0.553773, -88.7084, 23.2882, 0.92 ) }
    dend_13 { pt3dadd( -1.05451, -91.4276, 23.9795, 0.92 ) }
    dend_13 { pt3dadd( -1.42384, -93.5515, 24.5204, 0.92 ) }
    dend_13 { pt3dadd( -1.63485, -95.0915, 24.898, 0.92 ) }
    dend_13 { pt3dadd( -1.78937, -96.6573, 25.2873, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_13 { pt3dadd( -1.94131, -98.6573, 25.8269, 0.92 ) }
    dend_13 { pt3dadd( -1.97935, -101.137, 26.5782, 0.92 ) }
    dend_13 { pt3dadd( -1.7744, -103.251, 27.3082, 0.92 ) }
    dend_13 { pt3dadd( -1.31815, -105.303, 28.1307, 0.92 ) }
    dend_13 { pt3dadd( -0.612944, -107.204, 29.0438, 0.92 ) }
    dend_13 { pt3dadd( 0.437131, -108.547, 29.8442, 0.46 ) }
    dend_13 { pt3dadd( 2.33062, -109.706, 30.7943, 0.46 ) }
    dend_13 { pt3dadd( 4.23836, -110.356, 31.4714, 0.46 ) }
    dend_13 { pt3dadd( 6.63504, -110.793, 32.0836, 0.46 ) }
    dend_13 { pt3dadd( 6.65189, -110.794, 32.0863, 0.46 ) }
    dend_13 { pt3dadd( 9.99623, -110.72, 32.3165, 0.46 ) }
    dend_13 { pt3dadd( 10.0218, -110.719, 32.3163, 0.46 ) }
    dend_13 { pt3dadd( 11.5554, -110.832, 32.1985, 0.46 ) }
    dend_13 { pt3dadd( 11.5803, -110.837, 32.1948, 0.46 ) }
    dend_13 { pt3dadd( 13.8376, -111.585, 31.7967, 0.46 ) }
    dend_13 { pt3dadd( 14.7246, -111.913, 31.6561, 0.46 ) }
    dend_13 { pt3dadd( 14.7477, -111.924, 31.6535, 0.46 ) }
    dend_13 { pt3dadd( 16.8783, -112.888, 31.3948, 0.46 ) }
    dend_13 { pt3dadd( 17.2909, -113.044, 31.3341, 0.46 ) }
    dend_13 { pt3dadd( 18.3685, -121.665, 32.3577, 0.46 ) }
    dend_13 { pt3dadd( 20.2116, -130.188, 32.9917, 0.46 ) }
    dend_13 { pt3dadd( 20.8912, -138.906, 32.6668, 0.46 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 22/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 2.38367, -56.7315, 13.695, 0.92 ) }
    dend_12 { pt3dadd( 3.34365, -58.9565, 11.9679, 0.92 ) }
    dend_12 { pt3dadd( 3.35017, -58.9724, 11.9565, 0.92 ) }
    dend_12 { pt3dadd( 4.27874, -60.8263, 10.6048, 0.92 ) }
    dend_12 { pt3dadd( 5.34597, -62.8405, 9.27326, 0.92 ) }
    dend_12 { pt3dadd( 5.35833, -62.865, 9.25905, 0.92 ) }
    dend_12 { pt3dadd( 6.71288, -65.6585, 7.80487, 0.92 ) }
    dend_12 { pt3dadd( 7.69136, -67.6886, 6.84922, 0.92 ) }
    dend_12 { pt3dadd( 8.93131, -70.3717, 5.72963, 0.92 ) }
    dend_12 { pt3dadd( 10.5388, -73.9179, 4.43043, 0.92 ) }
    dend_12 { pt3dadd( 12.0081, -77.2232, 3.34475, 0.92 ) }
    dend_12 { pt3dadd( 12.9735, -79.5211, 2.66031, 0.92 ) }
    dend_12 { pt3dadd( 13.0124, -79.6138, 2.63561, 0.92 ) }
    dend_12 { pt3dadd( 13.9354, -81.9693, 2.08346, 0.92 ) }
    dend_12 { pt3dadd( 14.5811, -83.6956, 1.71848, 0.92 ) }
    dend_12 { pt3dadd( 15.6928, -86.6973, 1.11347, 0.92 ) }
    dend_12 { pt3dadd( 16.7991, -89.504, 0.526124, 0.92 ) }
    dend_12 { pt3dadd( 17.5813, -91.5871, 0.115735, 0.92 ) }
    dend_12 { pt3dadd( 19.3519, -96.3905, -0.781779, 0.92 ) }
    dend_12 { pt3dadd( 20.3219, -98.9854, -1.1941, 0.92 ) }
    dend_12 { pt3dadd( 21.6019, -102.372, -1.70148, 0.92 ) }
    dend_12 { pt3dadd( 22.6856, -105.161, -2.18511, 0.92 ) }
    dend_12 { pt3dadd( 24.0109, -108.474, -2.86142, 0.92 ) }
    dend_12 { pt3dadd( 25.2465, -111.749, -3.60487, 0.92 ) }
    dend_12 { pt3dadd( 26.7116, -115.661, -4.60298, 0.92 ) }
    dend_12 { pt3dadd( 27.5489, -118.11, -5.28875, 0.92 ) }
    dend_12 { pt3dadd( 28.5397, -121.198, -6.23425, 0.92 ) }
    dend_12 { pt3dadd( 29.5838, -125.227, -7.50143, 0.92 ) }
    dend_12 { pt3dadd( 30.243, -128.091, -8.49685, 0.92 ) }
    dend_12 { pt3dadd( 30.2504, -128.14, -8.51378, 0.92 ) }
    dend_12 { pt3dadd( 30.4175, -130.872, -9.34182, 0.92 ) }
    dend_12 { pt3dadd( 30.4194, -130.913, -9.35107, 0.92 ) }
    dend_12 { pt3dadd( 30.674, -134.535, -10.0466, 0.46 ) }
    dend_12 { pt3dadd( 30.7254, -134.993, -10.1343, 0.46 ) }
    dend_12 { pt3dadd( 31.4433, -138.718, -10.894, 0.46 ) }
    dend_12 { pt3dadd( 32.645, -143.323, -11.8514, 0.46 ) }
    dend_12 { pt3dadd( 33.5949, -146.217, -12.4502, 0.46 ) }
    dend_12 { pt3dadd( 34.5425, -148.68, -13.04, 0.46 ) }
    dend_12 { pt3dadd( 36.1155, -152.089, -14.0281, 0.46 ) }
    dend_12 { pt3dadd( 36.9672, -153.747, -14.5761, 0.46 ) }
    dend_12 { pt3dadd( 38.5757, -156.435, -15.6834, 0.46 ) }
    dend_12 { pt3dadd( 39.8566, -158.407, -16.7045, 0.46 ) }
    dend_12 { pt3dadd( 41.055, -160.592, -17.8697, 0.46 ) }
    dend_12 { pt3dadd( 41.7741, -162.372, -18.7575, 0.46 ) }
    dend_12 { pt3dadd( 41.7798, -162.39, -18.7662, 0.46 ) }
    dend_12 { pt3dadd( 42.4217, -165.094, -19.9134, 0.46 ) }
    dend_12 { pt3dadd( 42.8907, -167.579, -20.861, 0.46 ) }
    dend_12 { pt3dadd( 43.3425, -170.016, -21.6853, 0.46 ) }
    dend_12 { pt3dadd( 43.8572, -172.871, -22.513, 0.46 ) }
    dend_12 { pt3dadd( 44.2354, -174.76, -23.0739, 0.46 ) }
    dend_12 { pt3dadd( 44.7635, -177.054, -23.792, 0.46 ) }
    dend_12 { pt3dadd( 45.4879, -179.578, -24.6946, 0.46 ) }
    dend_12 { pt3dadd( 46.3916, -182.371, -25.908, 0.46 ) }
    dend_12 { pt3dadd( 46.4004, -182.397, -25.9219, 0.46 ) }
    dend_12 { pt3dadd( 47.1644, -185.099, -27.5525, 0.46 ) }
    dend_12 { pt3dadd( 47.168, -185.116, -27.5634, 0.46 ) }
    dend_12 { pt3dadd( 47.594, -187.632, -29.2391, 0.46 ) }
    dend_12 { pt3dadd( 47.9302, -190.483, -31.1521, 0.46 ) }
    dend_12 { pt3dadd( 48.0399, -192.467, -32.4246, 0.46 ) }
    dend_12 { pt3dadd( 48.0834, -194.076, -33.4046, 0.46 ) }
    dend_12 { pt3dadd( 48.0834, -194.095, -33.4145, 0.46 ) }
    dend_12 { pt3dadd( 48.0548, -196.378, -34.5319, 0.46 ) }
    dend_12 { pt3dadd( 48.0534, -196.436, -34.555, 0.46 ) }
    dend_12 { pt3dadd( 48.065, -198.203, -35.1725, 0.46 ) }
    dend_12 { pt3dadd( 48.0657, -198.253, -35.1872, 0.46 ) }
    dend_12 { pt3dadd( 48.1474, -201.474, -36.0575, 0.46 ) }
    dend_12 { pt3dadd( 48.1247, -202.051, -36.1991, 0.46 ) }
    dend_12 { pt3dadd( 47.897, -204.549, -36.7685, 0.46 ) }
    dend_12 { pt3dadd( 47.8714, -204.742, -36.8029, 0.46 ) }
    dend_12 { pt3dadd( 47.4551, -207.218, -37.1619, 0.46 ) }
    dend_12 { pt3dadd( 47.4509, -207.249, -37.1651, 0.46 ) }
    dend_12 { pt3dadd( 47.0154, -210.667, -37.4085, 0.46 ) }
    dend_12 { pt3dadd( 47.0125, -210.719, -37.41, 0.46 ) }
    dend_12 { pt3dadd( 47.0287, -214.985, -37.2562, 0.46 ) }
    dend_12 { pt3dadd( 47.0323, -215.057, -37.2501, 0.46 ) }
    dend_12 { pt3dadd( 47.5127, -220.653, -36.5991, 0.46 ) }
    dend_12 { pt3dadd( 47.5252, -220.776, -36.5814, 0.46 ) }
    dend_12 { pt3dadd( 48.2157, -226.295, -35.6509, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( 48.633, -230.639, -34.7883, 0.46 ) }
    dend_12 { pt3dadd( 48.8034, -233.758, -34.0572, 0.46 ) }
    dend_12 { pt3dadd( 48.8036, -233.778, -34.0519, 0.46 ) }
    dend_12 { pt3dadd( 48.5046, -237.895, -32.8378, 0.46 ) }
    dend_12 { pt3dadd( 48.5009, -237.925, -32.8289, 0.46 ) }
    dend_12 { pt3dadd( 47.7607, -241.598, -31.7151, 0.46 ) }
    dend_12 { pt3dadd( 46.9086, -245.114, -30.6734, 0.46 ) }
    dend_12 { pt3dadd( 46.8878, -245.191, -30.6503, 0.46 ) }
    dend_12 { pt3dadd( 45.5986, -249.868, -29.22, 0.46 ) }
    dend_12 { pt3dadd( 45.5879, -249.907, -29.2083, 0.46 ) }
    dend_12 { pt3dadd( 44.808, -252.837, -28.4085, 0.46 ) }
    dend_12 { pt3dadd( 44.7958, -252.886, -28.3965, 0.46 ) }
    dend_12 { pt3dadd( 44.0777, -255.579, -27.8014, 0.46 ) }
    dend_12 { pt3dadd( 44.0351, -255.692, -27.7708, 0.46 ) }
    dend_12 { pt3dadd( 41.2824, -260.244, -25.966, 0.46 ) }
    dend_12 { pt3dadd( 39.9592, -261.493, -25.0956, 0.46 ) }
    dend_12 { pt3dadd( 39.9372, -261.51, -25.0816, 0.46 ) }
    dend_12 { pt3dadd( 37.0498, -263.27, -23.2451, 0.46 ) }
    dend_12 { pt3dadd( 32.5228, -265.012, -20.3475, 0.46 ) }
    dend_12 { pt3dadd( 29.1313, -265.692, -18.1333, 0.46 ) }
    dend_12 { pt3dadd( 25.2672, -265.461, -15.5164, 0.46 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 21/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -45.9703, -99.2808, 115.831, 0.46 ) }
    dend_9 { pt3dadd( -48.6004, -107.382, 125.468, 0.46 ) }
    dend_9 { pt3dadd( -49.1227, -113.58, 136.659, 0.46 ) }
    dend_9 { pt3dadd( -47.114, -118.347, 148.334, 0.46 ) }
    dend_9 { pt3dadd( -42.647, -122.443, 159.557, 0.46 ) }
    dend_9 { pt3dadd( -35.5045, -124.904, 169.813, 0.46 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 27/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -45.9703, -99.2808, 115.831, 0.46 ) }
    dend_8 { pt3dadd( -48.2019, -104.955, 123.616, 0.46 ) }
    dend_8 { pt3dadd( -52.227, -108.686, 131.789, 0.46 ) }
    dend_8 { pt3dadd( -56.5765, -112.044, 139.949, 0.46 ) }
    dend_8 { pt3dadd( -61.2414, -115.015, 148.078, 0.46 ) }
    dend_8 { pt3dadd( -65.1201, -119.413, 156.003, 0.46 ) }
    dend_8 { pt3dadd( -69.6949, -121.759, 164.373, 0.46 ) }
    dend_8 { pt3dadd( -72.8464, -123.336, 173.531, 0.46 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 35/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -32.0926, -47.1555, 19.8442, 0.92 ) }
    dend_4 { pt3dadd( -31.955, -51.2619, 19.7051, 0.92 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -32.0926, -47.1555, 19.8442, 0.92 ) }
    dend_3 { pt3dadd( -34.8769, -47.1991, 20.6101, 0.92 ) }
    dend_3 { pt3dadd( -34.8952, -47.2005, 20.6142, 0.92 ) }
    dend_3 { pt3dadd( -36.7587, -47.4491, 20.8637, 0.46 ) }
    dend_3 { pt3dadd( -39.1477, -47.822, 21.0788, 0.46 ) }
    dend_3 { pt3dadd( -41.5478, -48.2303, 21.184, 0.46 ) }
    dend_3 { pt3dadd( -45.0387, -48.9306, 21.1617, 0.46 ) }
    dend_3 { pt3dadd( -47.3838, -49.5178, 21.0086, 0.46 ) }
    dend_3 { pt3dadd( -50.8519, -50.4676, 20.5175, 0.46 ) }
    dend_3 { pt3dadd( -51.2033, -50.5741, 20.4344, 0.46 ) }
    dend_3 { pt3dadd( -53.1812, -51.2999, 19.76, 0.46 ) }
    dend_3 { pt3dadd( -55.3949, -52.2021, 18.7292, 0.46 ) }
    dend_3 { pt3dadd( -55.4101, -52.2088, 18.7203, 0.46 ) }
    dend_3 { pt3dadd( -56.8731, -52.8561, 17.7847, 0.46 ) }
    dend_3 { pt3dadd( -56.8951, -52.8663, 17.7703, 0.46 ) }
    dend_3 { pt3dadd( -59.4159, -54.0567, 16.0053, 0.46 ) }
    dend_3 { pt3dadd( -61.038, -54.7565, 14.8211, 0.46 ) }
    dend_3 { pt3dadd( -62.3191, -55.3527, 13.848, 0.46 ) }
    dend_3 { pt3dadd( -64.6047, -56.6028, 12.1029, 0.46 ) }
    dend_3 { pt3dadd( -64.6177, -56.6115, 12.0924, 0.46 ) }
    dend_3 { pt3dadd( -66.2779, -57.8946, 10.6589, 0.46 ) }
    dend_3 { pt3dadd( -67.521, -59.0112, 9.46905, 0.46 ) }
    dend_3 { pt3dadd( -69.5064, -60.9637, 7.498, 0.46 ) }
    dend_3 { pt3dadd( -71.3438, -62.8938, 5.54228, 0.46 ) }
    dend_3 { pt3dadd( -72.742, -64.4016, 3.96272, 0.46 ) }
    dend_3 { pt3dadd( -72.7521, -64.4128, 3.9513, 0.46 ) }
    dend_3 { pt3dadd( -74.8897, -66.8648, 1.5464, 0.46 ) }
    dend_3 { pt3dadd( -76.6188, -68.9209, -0.506446, 0.46 ) }
    dend_3 { pt3dadd( -78.9167, -71.3216, -3.24688, 0.46 ) }
    dend_3 { pt3dadd( -78.9921, -71.3965, -3.34037, 0.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 67/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 9.44534, 51.4068, -47.5025, 0.92 ) }
    dend_42 { pt3dadd( 10.9061, 54.0946, -49.5182, 0.92 ) }
    dend_42 { pt3dadd( 12.5502, 56.9268, -51.7423, 0.92 ) }
    dend_42 { pt3dadd( 14.1536, 59.6218, -53.8968, 0.92 ) }
    dend_42 { pt3dadd( 14.1679, 59.6454, -53.9162, 0.92 ) }
    dend_42 { pt3dadd( 15.7371, 62.2824, -56.1295, 0.92 ) }
    dend_42 { pt3dadd( 17.306, 64.8363, -58.4211, 0.92 ) }
    dend_42 { pt3dadd( 18.9422, 67.5322, -61.0951, 0.92 ) }
    dend_42 { pt3dadd( 18.951, 67.5469, -61.1097, 0.92 ) }
    dend_42 { pt3dadd( 20.3965, 69.9663, -63.6986, 0.92 ) }
    dend_42 { pt3dadd( 21.5015, 71.9159, -65.8029, 0.92 ) }
    dend_42 { pt3dadd( 22.5237, 73.7965, -67.7372, 0.92 ) }
    dend_42 { pt3dadd( 23.9746, 76.6188, -70.3146, 0.92 ) }
    dend_42 { pt3dadd( 23.986, 76.6437, -70.3346, 0.92 ) }
    dend_42 { pt3dadd( 25.755, 80.6139, -73.3327, 0.92 ) }
    dend_42 { pt3dadd( 27.1837, 84.0603, -75.7434, 0.92 ) }
    dend_42 { pt3dadd( 28.8882, 88.3541, -78.5835, 0.92 ) }
    dend_42 { pt3dadd( 30.4849, 92.6721, -81.3707, 0.92 ) }
    dend_42 { pt3dadd( 31.5611, 95.6712, -83.3069, 0.92 ) }
    dend_42 { pt3dadd( 33.1592, 100.279, -86.5654, 0.92 ) }
    dend_42 { pt3dadd( 34.6554, 104.793, -89.9978, 0.92 ) }
    dend_42 { pt3dadd( 34.6604, 104.81, -90.0118, 0.92 ) }
    dend_42 { pt3dadd( 35.7589, 109.282, -93.9328, 0.92 ) }
    dend_42 { pt3dadd( 35.7623, 109.298, -93.9477, 0.92 ) }
    dend_42 { pt3dadd( 36.8875, 115.78, -99.6626, 0.92 ) }
    dend_42 { pt3dadd( 36.8912, 115.806, -99.6847, 0.92 ) }
    dend_42 { pt3dadd( 37.4178, 120.045, -103.138, 0.92 ) }
    dend_42 { pt3dadd( 37.4294, 120.154, -103.22, 0.92 ) }
    dend_42 { pt3dadd( 37.7839, 123.933, -105.857, 0.92 ) }
    dend_42 { pt3dadd( 38.3049, 130.143, -109.922, 0.92 ) }
    dend_42 { pt3dadd( 38.308, 130.193, -109.95, 0.92 ) }
    dend_42 { pt3dadd( 38.6849, 135.17, -112.856, 0.92 ) }
    dend_42 { pt3dadd( 38.7454, 135.724, -113.209, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 0/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 9.44534, 51.4068, -47.5025, 0.92 ) }
    dend_41 { pt3dadd( 8.88428, 53.4051, -48.3147, 0.92 ) }
    dend_41 { pt3dadd( 8.34448, 55.4692, -49.1793, 0.92 ) }
    dend_41 { pt3dadd( 7.78234, 57.8189, -50.2224, 0.92 ) }
    dend_41 { pt3dadd( 7.06283, 60.4317, -51.5157, 0.92 ) }
    dend_41 { pt3dadd( 7.05584, 60.4549, -51.5284, 0.92 ) }
    dend_41 { pt3dadd( 6.65946, 61.7498, -52.2967, 0.92 ) }
    dend_41 { pt3dadd( 5.84238, 64.0078, -53.8289, 0.92 ) }
    dend_41 { pt3dadd( 5.05108, 65.9723, -55.3263, 0.92 ) }
    dend_41 { pt3dadd( 4.12545, 68.1388, -57.1299, 0.92 ) }
    dend_41 { pt3dadd( 3.49074, 69.4758, -58.2941, 0.92 ) }
    dend_41 { pt3dadd( 2.48193, 71.473, -60.0647, 0.92 ) }
    dend_41 { pt3dadd( 1.34715, 73.5429, -61.9106, 0.92 ) }
    dend_41 { pt3dadd( 0.339514, 75.32, -63.4152, 0.92 ) }
    dend_41 { pt3dadd( -0.617486, 77.0913, -64.7085, 0.92 ) }
    dend_41 { pt3dadd( -1.95274, 79.7685, -66.3949, 0.92 ) }
    dend_41 { pt3dadd( -1.96336, 79.7907, -66.407, 0.92 ) }
    dend_41 { pt3dadd( -3.20949, 82.5762, -67.7744, 0.92 ) }
    dend_41 { pt3dadd( -4.61946, 85.9843, -69.409, 0.92 ) }
    dend_41 { pt3dadd( -6.0055, 89.1961, -71.034, 0.92 ) }
    dend_41 { pt3dadd( -6.18926, 89.6345, -71.2517, 0.92 ) }
    dend_41 { pt3dadd( -7.23044, 92.1855, -72.534, 0.92 ) }
    dend_41 { pt3dadd( -8.16966, 94.5012, -73.748, 0.92 ) }
    dend_41 { pt3dadd( -9.37862, 97.5272, -75.5016, 0.92 ) }
    dend_41 { pt3dadd( -10.4943, 100.159, -77.402, 0.92 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 25/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 71.592, 101.558, -32.1886, 0.46 ) }
    dend_38 { pt3dadd( 74.8715, 103.214, -33.2225, 0.46 ) }
    dend_38 { pt3dadd( 77.6764, 104.631, -34.1067, 0.46 ) }
    dend_38 { pt3dadd( 80.8516, 106.235, -35.1077, 0.46 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 29/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 71.592, 101.558, -32.1886, 0.46 ) }
    dend_37 { pt3dadd( 71.6729, 107.398, -31.388, 0.46 ) }
    dend_37 { pt3dadd( 71.7151, 111.463, -30.8624, 0.46 ) }
    dend_37 { pt3dadd( 71.7794, 116.115, -30.3267, 0.46 ) }
    dend_37 { pt3dadd( 71.8768, 122.058, -29.7153, 0.46 ) }
    dend_37 { pt3dadd( 71.9711, 126.232, -29.3412, 0.46 ) }
    dend_37 { pt3dadd( 72.1077, 130.455, -29.0478, 0.46 ) }
    dend_37 { pt3dadd( 72.1082, 130.475, -29.0472, 0.46 ) }
    dend_37 { pt3dadd( 72.2072, 134.077, -29.0982, 0.46 ) }
    dend_37 { pt3dadd( 72.3235, 138.185, -29.3935, 0.46 ) }
    dend_37 { pt3dadd( 72.3702, 142.308, -29.9305, 0.46 ) }
    dend_37 { pt3dadd( 72.2845, 146.15, -30.4085, 0.46 ) }
    dend_37 { pt3dadd( 72.1874, 149.806, -30.9003, 0.46 ) }
    dend_37 { pt3dadd( 72.1866, 149.825, -30.9031, 0.46 ) }
    dend_37 { pt3dadd( 71.9787, 152.815, -31.3745, 0.46 ) }
    dend_37 { pt3dadd( 71.4979, 157.274, -32.1763, 0.46 ) }
    dend_37 { pt3dadd( 70.8351, 161.174, -32.8649, 0.46 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 46/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 36.6687, 18.2803, -16.0232, 0.92 ) }
    dend_35 { pt3dadd( 38.5669, 19.5577, -16.8772, 0.92 ) }
    dend_35 { pt3dadd( 40.3017, 20.7502, -17.6251, 0.92 ) }
    dend_35 { pt3dadd( 42.9987, 22.6242, -18.6707, 0.92 ) }
    dend_35 { pt3dadd( 45.7364, 24.5371, -19.6693, 0.46 ) }
    dend_35 { pt3dadd( 48.1264, 26.1953, -20.4757, 0.46 ) }
    dend_35 { pt3dadd( 50.6, 27.8762, -21.2305, 0.46 ) }
    dend_35 { pt3dadd( 50.6123, 27.8843, -21.2337, 0.46 ) }
    dend_35 { pt3dadd( 52.2475, 28.9389, -21.5489, 0.46 ) }
    dend_35 { pt3dadd( 52.2601, 28.9467, -21.5508, 0.46 ) }
    dend_35 { pt3dadd( 53.5034, 29.6453, -21.751, 0.46 ) }
    dend_35 { pt3dadd( 55.0923, 30.3651, -22.0182, 0.46 ) }
    dend_35 { pt3dadd( 57.7566, 31.4855, -22.5418, 0.46 ) }
    dend_35 { pt3dadd( 59.8049, 32.2917, -23.0554, 0.46 ) }
    dend_35 { pt3dadd( 59.8252, 32.2992, -23.0614, 0.46 ) }
    dend_35 { pt3dadd( 61.4479, 32.9375, -23.6819, 0.46 ) }
    dend_35 { pt3dadd( 62.968, 33.5263, -24.3692, 0.46 ) }
    dend_35 { pt3dadd( 65.9076, 34.5172, -25.8689, 0.46 ) }
    dend_35 { pt3dadd( 68.2974, 35.2411, -27.1392, 0.46 ) }
    dend_35 { pt3dadd( 68.3292, 35.2503, -27.1565, 0.46 ) }
    dend_35 { pt3dadd( 73.4806, 36.7347, -30.079, 0.46 ) }
    dend_35 { pt3dadd( 76.7136, 37.6534, -31.9846, 0.46 ) }
    dend_35 { pt3dadd( 80.8998, 38.9206, -34.6683, 0.46 ) }
    dend_35 { pt3dadd( 84.0263, 39.8703, -36.7825, 0.46 ) }
    dend_35 { pt3dadd( 84.0381, 39.8743, -36.7907, 0.46 ) }
    dend_35 { pt3dadd( 86.8783, 40.9144, -38.7954, 0.46 ) }
    dend_35 { pt3dadd( 86.9123, 40.929, -38.8206, 0.46 ) }
    dend_35 { pt3dadd( 89.7931, 42.5844, -41.1953, 0.46 ) }
    dend_35 { pt3dadd( 89.8286, 42.6097, -41.2245, 0.46 ) }
    dend_35 { pt3dadd( 92.2384, 44.4645, -43.0789, 0.46 ) }
    dend_35 { pt3dadd( 92.2487, 44.4726, -43.0863, 0.46 ) }
    dend_35 { pt3dadd( 94.71, 46.4322, -44.7585, 0.46 ) }
    dend_35 { pt3dadd( 96.664, 47.9876, -46.0435, 0.46 ) }
    dend_35 { pt3dadd( 99.7232, 50.3804, -47.9408, 0.46 ) }
    dend_35 { pt3dadd( 101.914, 52.0696, -49.3017, 0.46 ) }
    dend_35 { pt3dadd( 102.011, 52.1413, -49.3631, 0.46 ) }
    dend_35 { pt3dadd( 104.583, 54.0219, -51.0262, 0.46 ) }
    dend_35 { pt3dadd( 104.599, 54.0332, -51.0367, 0.46 ) }
    dend_35 { pt3dadd( 107.543, 55.9451, -52.9255, 0.46 ) }
    dend_35 { pt3dadd( 107.57, 55.9629, -52.9439, 0.46 ) }
    dend_35 { pt3dadd( 110.86, 58.0187, -55.1018, 0.46 ) }
    dend_35 { pt3dadd( 110.904, 58.0498, -55.1281, 0.46 ) }
    dend_35 { pt3dadd( 114.1, 60.5162, -56.8273, 0.46 ) }
    dend_35 { pt3dadd( 114.137, 60.5491, -56.8465, 0.46 ) }
    dend_35 { pt3dadd( 116.015, 62.557, -57.8028, 0.46 ) }
    dend_35 { pt3dadd( 116.024, 62.5681, -57.8079, 0.46 ) }
    dend_35 { pt3dadd( 118.025, 65.7135, -59.0896, 0.46 ) }
    dend_35 { pt3dadd( 118.033, 65.7254, -59.0952, 0.46 ) }
    dend_35 { pt3dadd( 119.592, 68.3847, -60.4554, 0.46 ) }
    dend_35 { pt3dadd( 119.6, 68.396, -60.4618, 0.46 ) }
    dend_35 { pt3dadd( 121.604, 70.633, -61.7478, 0.46 ) }
    dend_35 { pt3dadd( 121.667, 70.6891, -61.779, 0.46 ) }
    dend_35 { pt3dadd( 124.989, 73.2392, -63.1858, 0.46 ) }
    dend_35 { pt3dadd( 125.006, 73.2517, -63.1927, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_35 { pt3dadd( 128.501, 75.6387, -64.4395, 0.46 ) }
    dend_35 { pt3dadd( 133.21, 78.7836, -65.9956, 0.46 ) }
    dend_35 { pt3dadd( 137.441, 81.5052, -67.2158, 0.46 ) }
    dend_35 { pt3dadd( 140.978, 83.7837, -68.194, 0.46 ) }
    dend_35 { pt3dadd( 143.428, 85.3669, -68.8182, 0.46 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 5/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 36.6687, 18.2803, -16.0232, 0.46 ) }
    dend_32 { pt3dadd( 37.1411, 17.3882, -17.7492, 0.46 ) }
    dend_32 { pt3dadd( 37.7592, 16.3008, -20.0342, 0.46 ) }
    dend_32 { pt3dadd( 37.7642, 16.291, -20.0532, 0.46 ) }
    dend_32 { pt3dadd( 38.7121, 14.6957, -22.9216, 0.46 ) }
    dend_32 { pt3dadd( 39.6993, 13.0617, -25.7344, 0.46 ) }
    dend_32 { pt3dadd( 40.7848, 11.1899, -28.6216, 0.46 ) }
    dend_32 { pt3dadd( 40.7945, 11.1718, -28.6474, 0.46 ) }
    dend_32 { pt3dadd( 41.5411, 9.75939, -30.4669, 0.46 ) }
    dend_32 { pt3dadd( 42.4505, 8.1738, -32.3601, 0.46 ) }
    dend_32 { pt3dadd( 42.6658, 7.86193, -32.6997, 0.46 ) }
    dend_32 { pt3dadd( 44.1064, 5.92427, -34.6817, 0.46 ) }
    dend_32 { pt3dadd( 45.4116, 4.16421, -36.3261, 0.46 ) }
    dend_32 { pt3dadd( 45.4382, 4.12941, -36.3596, 0.46 ) }
    dend_32 { pt3dadd( 46.7701, 2.49744, -38.0094, 0.46 ) }
    dend_32 { pt3dadd( 48.3216, 0.628102, -40.0011, 0.46 ) }
    dend_32 { pt3dadd( 49.8023, -1.05869, -41.8542, 0.46 ) }
    dend_32 { pt3dadd( 49.8137, -1.07097, -41.8684, 0.46 ) }
    dend_32 { pt3dadd( 51.3128, -2.72497, -43.7851, 0.46 ) }
    dend_32 { pt3dadd( 52.5999, -4.19935, -45.5449, 0.46 ) }
    dend_32 { pt3dadd( 54.0637, -5.90314, -47.5898, 0.46 ) }
    dend_32 { pt3dadd( 54.0788, -5.92165, -47.6126, 0.46 ) }
    dend_32 { pt3dadd( 55.3676, -7.51681, -49.6865, 0.46 ) }
    dend_32 { pt3dadd( 56.7591, -9.22004, -51.94, 0.46 ) }
    dend_32 { pt3dadd( 58.116, -10.8342, -54.1769, 0.46 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 30/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 111.825, -23.2692, 77.6014, 0.46 ) }
    dend_27 { pt3dadd( 120.159, -26.9906, 76.0158, 0.46 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 111.825, -23.2692, 77.6014, 0.46 ) }
    dend_26 { pt3dadd( 119.32, -25.9602, 86.0206, 0.46 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 34/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -26.8464, 75.3618, 15.197, 0.46 ) }
    dend_21 { pt3dadd( -28.542, 77.9412, 15.9329, 0.46 ) }
    dend_21 { pt3dadd( -30.3479, 80.8486, 16.485, 0.46 ) }
    dend_21 { pt3dadd( -31.9441, 83.6383, 16.8513, 0.46 ) }
    dend_21 { pt3dadd( -33.5096, 86.6219, 17.1338, 0.46 ) }
    dend_21 { pt3dadd( -35.5366, 90.6962, 17.4408, 0.46 ) }
    dend_21 { pt3dadd( -37.6969, 95.4077, 17.7411, 0.46 ) }
    dend_21 { pt3dadd( -39.3967, 99.9471, 17.8309, 0.46 ) }
    dend_21 { pt3dadd( -40.5771, 103.89, 17.771, 0.46 ) }
    dend_21 { pt3dadd( -41.5017, 107.904, 17.612, 0.46 ) }
    dend_21 { pt3dadd( -41.8582, 110.565, 17.4539, 0.46 ) }
    dend_21 { pt3dadd( -41.9477, 112.893, 17.2905, 0.46 ) }
    dend_21 { pt3dadd( -41.6488, 115.767, 17.0902, 0.46 ) }
    dend_21 { pt3dadd( -41.1737, 117.41, 17.0232, 0.46 ) }
    dend_21 { pt3dadd( -41.1304, 117.486, 17.0202, 0.46 ) }
    dend_21 { pt3dadd( -40.438, 118.134, 16.9826, 0.46 ) }
    dend_21 { pt3dadd( -41.8131, 126.766, 18.0233, 0.46 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 51/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -26.8464, 75.3618, 15.197, 0.92 ) }
    dend_20 { pt3dadd( -26.8431, 78.3548, 14.9416, 0.92 ) }
    dend_20 { pt3dadd( -26.8222, 80.6015, 14.6878, 0.92 ) }
    dend_20 { pt3dadd( -26.7942, 82.8422, 14.4082, 0.92 ) }
    dend_20 { pt3dadd( -26.7796, 85.9368, 13.991, 0.92 ) }
    dend_20 { pt3dadd( -26.8185, 89.284, 13.5304, 0.92 ) }
    dend_20 { pt3dadd( -26.8808, 92.3167, 13.1176, 0.92 ) }
    dend_20 { pt3dadd( -26.9782, 95.0442, 12.7138, 0.92 ) }
    dend_20 { pt3dadd( -26.9797, 95.0759, 12.7088, 0.92 ) }
    dend_20 { pt3dadd( -27.1289, 97.6891, 12.2675, 0.92 ) }
    dend_20 { pt3dadd( -27.2614, 99.615, 11.917, 0.92 ) }
    dend_20 { pt3dadd( -27.4473, 102.557, 11.3508, 0.92 ) }
    dend_20 { pt3dadd( -27.6415, 105.543, 10.7974, 0.92 ) }
    dend_20 { pt3dadd( -27.643, 105.562, 10.7941, 0.92 ) }
    dend_20 { pt3dadd( -27.7758, 107.45, 10.4937, 0.92 ) }
    dend_20 { pt3dadd( -27.8837, 109.436, 10.2079, 0.92 ) }
    dend_20 { pt3dadd( -28.0542, 113.192, 9.72679, 0.92 ) }
    dend_20 { pt3dadd( -28.157, 115.341, 9.49242, 0.46 ) }
    dend_20 { pt3dadd( -28.3006, 118.083, 9.22812, 0.46 ) }
    dend_20 { pt3dadd( -28.4452, 120.792, 8.98784, 0.46 ) }
    dend_20 { pt3dadd( -28.6121, 123.411, 8.78731, 0.46 ) }
    dend_20 { pt3dadd( -28.8491, 126.384, 8.5688, 0.46 ) }
    dend_20 { pt3dadd( -29.074, 128.609, 8.40569, 0.46 ) }
    dend_20 { pt3dadd( -29.3524, 130.555, 8.21918, 0.46 ) }
    dend_20 { pt3dadd( -29.824, 133.123, 7.90204, 0.46 ) }
    dend_20 { pt3dadd( -30.3395, 135.352, 7.57794, 0.46 ) }
    dend_20 { pt3dadd( -30.9552, 137.538, 7.22398, 0.46 ) }
    dend_20 { pt3dadd( -31.3511, 138.695, 7.01152, 0.46 ) }
    dend_20 { pt3dadd( -32.1505, 140.618, 6.62138, 0.46 ) }
    dend_20 { pt3dadd( -32.2288, 140.768, 6.58934, 0.46 ) }
    dend_20 { pt3dadd( -33.5185, 147.059, 6.47828, 0.46 ) }
    dend_20 { pt3dadd( -34.8262, 153.331, 6.02074, 0.46 ) }
    dend_20 { pt3dadd( -34.9475, 159.756, 5.81331, 0.46 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 84/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 20.8912, -138.906, 32.6668, 0.46 ) }
    dend_15 { pt3dadd( 24.1139, -149.247, 34.5567, 0.46 ) }
    dend_15 { pt3dadd( 27.7354, -159.625, 34.171, 0.46 ) }
    dend_15 { pt3dadd( 28.6511, -170.593, 34.5361, 0.46 ) }
    dend_15 { pt3dadd( 30.6253, -181.351, 35.7723, 0.46 ) }
    dend_15 { pt3dadd( 33.0642, -191.796, 38.1926, 0.46 ) }
    dend_15 { pt3dadd( 32.8808, -202.434, 40.9483, 0.46 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 91/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 20.8912, -138.906, 32.6668, 0.46 ) }
    dend_14 { pt3dadd( 21.0543, -143.582, 34.9996, 0.46 ) }
    dend_14 { pt3dadd( 21.4703, -148.182, 37.4448, 0.46 ) }
    dend_14 { pt3dadd( 21.4307, -152.732, 40.0082, 0.46 ) }
    dend_14 { pt3dadd( 21.2783, -157.27, 42.5866, 0.46 ) }
    dend_14 { pt3dadd( 22.1136, -161.679, 45.2533, 0.46 ) }
    dend_14 { pt3dadd( 23.2747, -166.436, 47.1078, 0.46 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 98/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -31.955, -51.2619, 19.7051, 0.46 ) }
    dend_6 { pt3dadd( -30.3165, -52.6577, 17.8788, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_6 { pt3dadd( -29.2869, -53.6614, 16.6699, 0.46 ) }
    dend_6 { pt3dadd( -28.4038, -54.6233, 15.4797, 0.46 ) }
    dend_6 { pt3dadd( -27.252, -56.0331, 13.533, 0.46 ) }
    dend_6 { pt3dadd( -27.2454, -56.0425, 13.5192, 0.46 ) }
    dend_6 { pt3dadd( -26.3226, -57.4822, 11.3292, 0.46 ) }
    dend_6 { pt3dadd( -26.3188, -57.4905, 11.3138, 0.46 ) }
    dend_6 { pt3dadd( -26.1196, -58.2637, 9.72596, 0.46 ) }
    dend_6 { pt3dadd( -26.0951, -58.9584, 8.10082, 0.46 ) }
    dend_6 { pt3dadd( -26.2509, -59.8409, 5.95284, 0.46 ) }
    dend_6 { pt3dadd( -26.2544, -59.8639, 5.895, 0.46 ) }
    dend_6 { pt3dadd( -26.3866, -60.7309, 3.48686, 0.46 ) }
    dend_6 { pt3dadd( -26.3874, -60.7371, 3.47018, 0.46 ) }
    dend_6 { pt3dadd( -26.3693, -61.6808, 1.11433, 0.46 ) }
    dend_6 { pt3dadd( -26.3663, -61.7015, 1.06518, 0.46 ) }
    dend_6 { pt3dadd( -26.0729, -62.5482, -1.03763, 0.46 ) }
    dend_6 { pt3dadd( -26.0694, -62.5549, -1.05375, 0.46 ) }
    dend_6 { pt3dadd( -25.5571, -63.2091, -2.5631, 0.46 ) }
    dend_6 { pt3dadd( -24.7955, -63.9752, -4.45854, 0.46 ) }
    dend_6 { pt3dadd( -24.7792, -63.9892, -4.49743, 0.46 ) }
    dend_6 { pt3dadd( -24.1107, -64.6189, -6.48085, 0.46 ) }
    dend_6 { pt3dadd( -24.107, -64.6229, -6.49776, 0.46 ) }
    dend_6 { pt3dadd( -23.7249, -65.121, -8.87419, 0.46 ) }
    dend_6 { pt3dadd( -23.7236, -65.1244, -8.89156, 0.46 ) }
    dend_6 { pt3dadd( -23.6966, -65.5978, -11.5822, 0.46 ) }
    dend_6 { pt3dadd( -23.7557, -66.1615, -14.5564, 0.46 ) }
    dend_6 { pt3dadd( -23.9547, -66.8447, -18.0629, 0.46 ) }
    dend_6 { pt3dadd( -23.9554, -66.8483, -18.0803, 0.46 ) }
    dend_6 { pt3dadd( -23.9686, -67.5332, -20.968, 0.46 ) }
    dend_6 { pt3dadd( -23.9632, -67.5679, -21.0966, 0.46 ) }
    dend_6 { pt3dadd( -23.7063, -68.4444, -23.8349, 0.46 ) }
    dend_6 { pt3dadd( -23.704, -68.4507, -23.8514, 0.46 ) }
    dend_6 { pt3dadd( -23.2126, -69.6692, -26.5349, 0.46 ) }
    dend_6 { pt3dadd( -22.682, -70.9392, -29.2394, 0.46 ) }
    dend_6 { pt3dadd( -22.6785, -70.9468, -29.2551, 0.46 ) }
    dend_6 { pt3dadd( -22.3632, -71.9299, -31.2761, 0.46 ) }
    dend_6 { pt3dadd( -22.3619, -71.9417, -31.3001, 0.46 ) }
    dend_6 { pt3dadd( -22.4792, -73.0564, -33.6002, 0.46 ) }
    dend_6 { pt3dadd( -22.4817, -73.0638, -33.6162, 0.46 ) }
    dend_6 { pt3dadd( -23.1154, -74.4565, -36.7777, 0.46 ) }
    dend_6 { pt3dadd( -23.7104, -75.6738, -39.8949, 0.46 ) }
    dend_6 { pt3dadd( -24.2568, -76.7145, -42.8748, 0.46 ) }
    dend_6 { pt3dadd( -24.7432, -77.5817, -45.5673, 0.46 ) }
    dend_6 { pt3dadd( -25.3548, -78.527, -49.0729, 0.46 ) }
    dend_6 { pt3dadd( -25.3577, -78.531, -49.09, 0.46 ) }
    dend_6 { pt3dadd( -25.9845, -79.3057, -52.9985, 0.46 ) }
    dend_6 { pt3dadd( -26.459, -79.9493, -56.9001, 0.46 ) }
    dend_6 { pt3dadd( -26.4611, -79.9532, -56.9263, 0.46 ) }
    dend_6 { pt3dadd( -26.617, -80.3696, -59.7038, 0.46 ) }
    dend_6 { pt3dadd( -26.6179, -80.3723, -59.7213, 0.46 ) }
    dend_6 { pt3dadd( -26.7993, -80.8762, -62.6661, 0.46 ) }
    dend_6 { pt3dadd( -26.804, -80.8859, -62.7092, 0.46 ) }
    dend_6 { pt3dadd( -27.0661, -81.4543, -65.1539, 0.46 ) }
    dend_6 { pt3dadd( -27.0856, -81.5024, -65.3239, 0.46 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 53/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -31.955, -51.2619, 19.7051, 0.46 ) }
    dend_5 { pt3dadd( -33.6847, -53.9648, 20.4263, 0.46 ) }
    dend_5 { pt3dadd( -35.5045, -57.0108, 21.2397, 0.46 ) }
    dend_5 { pt3dadd( -37.2005, -60.1375, 22.0824, 0.46 ) }
    dend_5 { pt3dadd( -37.4398, -60.6379, 22.1969, 0.46 ) }
    dend_5 { pt3dadd( -38.639, -63.6991, 22.7058, 0.46 ) }
    dend_5 { pt3dadd( -38.8062, -64.2366, 22.7798, 0.46 ) }
    dend_5 { pt3dadd( -39.3249, -66.5266, 22.987, 0.46 ) }
    dend_5 { pt3dadd( -39.7449, -68.8782, 23.1759, 0.46 ) }
    dend_5 { pt3dadd( -40.2458, -73.3004, 23.4522, 0.46 ) }
    dend_5 { pt3dadd( -40.6104, -77.6235, 23.6462, 0.46 ) }
    dend_5 { pt3dadd( -40.7541, -80.0287, 23.7175, 0.46 ) }
    dend_5 { pt3dadd( -40.7567, -80.0656, 23.7186, 0.46 ) }
    dend_5 { pt3dadd( -41.1164, -83.764, 23.7963, 0.46 ) }
    dend_5 { pt3dadd( -41.4088, -86.734, 23.8245, 0.46 ) }
    dend_5 { pt3dadd( -41.4119, -86.7585, 23.825, 0.46 ) }
    dend_5 { pt3dadd( -42.0057, -90.4718, 23.9072, 0.46 ) }
    dend_5 { pt3dadd( -42.6977, -94.787, 23.9138, 0.46 ) }
    dend_5 { pt3dadd( -43.2983, -99.0856, 23.8693, 0.46 ) }
    dend_5 { pt3dadd( -43.48, -100.621, 23.8311, 0.46 ) }
    dend_5 { pt3dadd( -44.0552, -105.288, 23.7369, 0.46 ) }
    dend_5 { pt3dadd( -44.0609, -105.337, 23.735, 0.46 ) }
    dend_5 { pt3dadd( -44.5802, -109.047, 23.5143, 0.46 ) }
    dend_5 { pt3dadd( -45.2025, -112.698, 23.2924, 0.46 ) }
    dend_5 { pt3dadd( -45.2098, -112.734, 23.2905, 0.46 ) }
    dend_5 { pt3dadd( -46.1171, -116.433, 23.1827, 0.46 ) }
    dend_5 { pt3dadd( -47.2719, -120.732, 23.1004, 0.46 ) }
    dend_5 { pt3dadd( -48.5867, -125.416, 23.1243, 0.46 ) }
    dend_5 { pt3dadd( -49.4719, -128.41, 23.2306, 0.46 ) }
    dend_5 { pt3dadd( -51.1428, -134.043, 23.546, 0.46 ) }
    dend_5 { pt3dadd( -52.9144, -140.33, 24.108, 0.46 ) }
    dend_5 { pt3dadd( -52.9211, -140.353, 24.1106, 0.46 ) }
    dend_5 { pt3dadd( -54.4886, -146.075, 25.0289, 0.46 ) }
    dend_5 { pt3dadd( -54.7614, -147.23, 25.2481, 0.46 ) }
    dend_5 { pt3dadd( -55.0811, -148.751, 25.5806, 0.46 ) }
    dend_5 { pt3dadd( -55.4731, -151.161, 26.2804, 0.46 ) }
    dend_5 { pt3dadd( -56.9619, -163.318, 27.6898, 0.46 ) }
    dend_5 { pt3dadd( -59.6201, -175.36, 28.0073, 0.46 ) }
    dend_5 { pt3dadd( -60.6289, -187.643, 27.2864, 0.46 ) }
    dend_5 { pt3dadd( -59.7518, -199.937, 26.9206, 0.46 ) }
    dend_5 { pt3dadd( -57.9201, -212.046, 28.1378, 0.46 ) }
    dend_5 { pt3dadd( -54.2719, -223.601, 30.0656, 0.46 ) }
    dend_5 { pt3dadd( -49.2686, -234.791, 30.0581, 0.46 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 96/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 58.116, -10.8342, -54.1769, 0.46 ) }
    dend_34 { pt3dadd( 58.4404, -12.581, -57.5733, 0.46 ) }
    dend_34 { pt3dadd( 58.8159, -14.4589, -61.4068, 0.46 ) }
    dend_34 { pt3dadd( 58.8266, -14.4838, -61.4724, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_34 { pt3dadd( 59.5234, -15.7235, -65.1615, 0.46 ) }
    dend_34 { pt3dadd( 59.5387, -15.7416, -65.2157, 0.46 ) }
    dend_34 { pt3dadd( 61.1609, -17.37, -70.0915, 0.46 ) }
    dend_34 { pt3dadd( 61.1939, -17.3897, -70.1647, 0.46 ) }
    dend_34 { pt3dadd( 64.0896, -18.6692, -75.0668, 0.46 ) }
    dend_34 { pt3dadd( 64.1106, -18.6762, -75.0944, 0.46 ) }
    dend_34 { pt3dadd( 67.9152, -19.4063, -78.2466, 0.46 ) }
    dend_34 { pt3dadd( 68.0329, -19.4122, -78.2541, 0.46 ) }
    dend_34 { pt3dadd( 71.7751, -19.2456, -76.5438, 0.46 ) }
    dend_34 { pt3dadd( 71.9272, -19.234, -76.4324, 0.46 ) }
    dend_34 { pt3dadd( 75.1317, -18.8757, -73.1238, 0.46 ) }
    dend_34 { pt3dadd( 75.1683, -18.869, -73.078, 0.46 ) }
    dend_34 { pt3dadd( 77.6019, -18.0365, -68.8734, 0.46 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 58.116, -10.8342, -54.1769, 0.46 ) }
    dend_33 { pt3dadd( 60.5306, -12.3789, -55.2165, 0.46 ) }
    dend_33 { pt3dadd( 64.4638, -14.7183, -56.7205, 0.46 ) }
    dend_33 { pt3dadd( 67.4385, -16.4371, -57.8068, 0.46 ) }
    dend_33 { pt3dadd( 71.3483, -18.607, -59.2353, 0.46 ) }
    dend_33 { pt3dadd( 75.8718, -21.0553, -61.0009, 0.46 ) }
    dend_33 { pt3dadd( 79.7411, -23.1494, -62.5111, 0.46 ) }
    dend_33 { pt3dadd( 84.1413, -25.4775, -64.1962, 0.46 ) }
    dend_33 { pt3dadd( 84.1876, -25.502, -64.2136, 0.46 ) }
    dend_33 { pt3dadd( 88.0043, -27.3817, -65.6194, 0.46 ) }
    dend_33 { pt3dadd( 90.4942, -28.471, -66.5596, 0.46 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_28, dend_17, dend_10, dend_0, dend_39, dend_30, dend_23, dend_18, dend_16, dend_11, dend_7, dend_2, dend_1, dend_43, dend_40, dend_36, dend_31, dend_25, dend_24, dend_22, dend_19, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_27, dend_26, dend_21, dend_20, dend_15, dend_14, dend_6, dend_5, dend_34, dend_33]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_29, dend_28, dend_17, dend_10, dend_0, dend_39, dend_30, dend_23, dend_18, dend_16, dend_11, dend_7, dend_2, dend_1, dend_43, dend_40, dend_36, dend_31, dend_25, dend_24, dend_22, dend_19, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_27, dend_26, dend_21, dend_20, dend_15, dend_14, dend_6, dend_5, dend_34, dend_33]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_16 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_7 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_1 OneSecGrp_SectionRef_16.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_43 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_40 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_36 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_25 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_24 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_19 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_13 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_12 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_9 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_8 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_42 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_41 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_37 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_35 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_32 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_20 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_15 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_6 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_5 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_34 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_30 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_10 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_39 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_23 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_18 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_38 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_27 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_26 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_28 nseg = 5
    dend_16 nseg = 9
    dend_7 nseg = 7
    dend_2 nseg = 3
    dend_1 nseg = 13
    dend_43 nseg = 3
    dend_40 nseg = 3
    dend_36 nseg = 5
    dend_25 nseg = 5
    dend_24 nseg = 3
    dend_22 nseg = 3
    dend_19 nseg = 3
    dend_13 nseg = 5
    dend_12 nseg = 13
    dend_9 nseg = 3
    dend_8 nseg = 3
    dend_3 nseg = 3
    dend_42 nseg = 5
    dend_41 nseg = 3
    dend_37 nseg = 3
    dend_35 nseg = 7
    dend_32 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 5
    dend_15 nseg = 3
    dend_6 nseg = 5
    dend_5 nseg = 9
    dend_34 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_LBC_3530c2c05e_0_0


